/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

#include "gto_d2_kit/d2_ee_ddsd_AB_xz.hpp"
#include <cmath>
/*

*/
#pragma GCC optimize("O0")
namespace {
    const double Pi = M_PI;
}
#pragma GCC optimize("O0")

void second_derivative_ee_2202_12_13(const double ae,
                                     const double xA,
                                     const double yA,
                                     const double zA,
                                     const double be,
                                     const double xB,
                                     const double yB,
                                     const double zB,
                                     const double ce,
                                     const double xC,
                                     const double yC,
                                     const double zC,
                                     const double de,
                                     const double xD,
                                     const double yD,
                                     const double zD,
                                     const double* const bs,
                                     double* const d2ee)
{
    const double p = ae + be;
    const double q = ce + de;
    const double xP = (ae * xA + be * xB) / p;
    const double yP = (ae * yA + be * yB) / p;
    const double zP = (ae * zA + be * zB) / p;
    const double xQ = (ce * xC + de * xD) / q;
    const double yQ = (ce * yC + de * yD) / q;
    const double zQ = (ce * zC + de * zD) / q;
    const double C30834 = 0 * ae;
    const double C30833 = ae * be;
    const double C30832 = 0 * be;
    const double C30831 = 0 * be;
    const double C30830 = ae + be;
    const double C30829 = 0 * be;
    const double C30828 = xA - xB;
    const double C30889 = 0 * be;
    const double C30914 = 0 * be;
    const double C30913 = zA - zB;
    const double C30969 = 0 * ae;
    const double C30964 = 0 * be;
    const double C30963 = 0 * be;
    const double C31014 = 0 * be;
    const double C31074 = xP - xQ;
    const double C31073 = zP - zQ;
    const double C31072 = p + q;
    const double C31071 = p * q;
    const double C31079 = bs[3];
    const double C31089 = bs[4];
    const double C31098 = bs[5];
    const double C31112 = bs[6];
    const double C31134 = bs[7];
    const double C31243 = yP - yQ;
    const double C31452 = bs[2];
    const double C119 = bs[0];
    const double C31894 = ce + de;
    const double C31893 = ce * de;
    const double C31892 = xC - xD;
    const double C31906 = yC - yD;
    const double C31920 = zC - zD;
    const double C31950 = yA - yB;
    const double C30841 = C30834 / C30830;
    const double C30838 = C30832 / C30830;
    const double C30836 = 2 * C30830;
    const double C30835 = std::pow(C30830, 2);
    const double C30840 = C30833 * C30828;
    const double C30839 = C30828 * C30832;
    const double C30837 = C30828 * C30831;
    const double C31860 = C30828 * be;
    const double C31859 = C30828 * ae;
    const double C31858 = std::pow(C30828, 2);
    const double C30890 = C30889 / C30830;
    const double C30965 = C30914 / C30830;
    const double C30915 = C30833 * C30913;
    const double C30966 = C30913 * C30914;
    const double C31962 = std::pow(C30913, 2);
    const double C32045 = C30913 * be;
    const double C32043 = C30913 * ae;
    const double C30976 = C30969 / C30830;
    const double C30971 = C30913 * C30964;
    const double C31015 = C31014 / C30830;
    const double C31099 = std::pow(C31074, 2);
    const double C31169 = C31074 * ae;
    const double C31081 = C31073 * be;
    const double C31080 = C31074 * C31073;
    const double C31285 = std::pow(C31073, 2);
    const double C31075 = 2 * C31071;
    const double C31252 = std::pow(C31243, 2);
    const double C32200 = 2 * C31894;
    const double C32199 = std::pow(C31894, 2);
    const double C31895 = std::pow(C31892, 2);
    const double C32198 = C31892 * ce;
    const double C31907 = std::pow(C31906, 2);
    const double C32201 = C31906 * ce;
    const double C31921 = std::pow(C31920, 2);
    const double C32202 = C31920 * ce;
    const double C31951 = std::pow(C31950, 2);
    const double C32005 = C31950 * be;
    const double C32003 = C31950 * ae;
    const double C31872 = std::pow(C30836, -1);
    const double C32193 = std::pow(C30836, -2);
    const double C30842 = 2 * C30835;
    const double C140 = (std::pow((2 * p * q) / (p + q), 2) * bs[2] *
                         (xP - xQ) * (zP - zQ) * ae * be) /
                        C30835;
    const double C32197 = C30835 * C30836;
    const double C32196 = 4 * C30835;
    const double C30844 = C30839 / C30830;
    const double C30843 = C30837 / C30830;
    const double C32186 = std::pow(C31859, 2);
    const double C31861 = C31858 * C30833;
    const double C30974 = C30966 / C30830;
    const double C31963 = C31962 * C30833;
    const double C32205 = std::pow(C32043, 2);
    const double C30977 = C30971 / C30830;
    const double C31172 = C31089 * C31169;
    const double C31176 = C31098 * C31169;
    const double C31186 = C31079 * C31169;
    const double C31199 = C31112 * C31169;
    const double C31216 = C31134 * C31169;
    const double C31084 = C31079 * C31081;
    const double C31091 = C31089 * C31081;
    const double C31101 = C31098 * C31081;
    const double C31116 = C31112 * C31081;
    const double C31140 = C31134 * C31081;
    const double C31083 = C31080 * ae;
    const double C31076 = C31075 / C31072;
    const double C126 = (-(bs[1] * C31081 * C31075) / C31072) / C30830;
    const double C127 = (-(bs[1] * C31169 * C31075) / C31072) / C30830;
    const double C120 = -(C31074 * bs[1] * C31075) / C31072;
    const double C239 = -(C31243 * bs[1] * C31075) / C31072;
    const double C344 = -(C31073 * bs[1] * C31075) / C31072;
    const double C32233 = std::pow(C32200, -2);
    const double C32231 = std::pow(C32200, -1);
    const double C31896 = C31895 * C31893;
    const double C31908 = C31907 * C31893;
    const double C31922 = C31921 * C31893;
    const double C31952 = C31951 * C30833;
    const double C32203 = std::pow(C32003, 2);
    const double C30851 = C30832 / C30842;
    const double C30848 = C30831 / C30842;
    const double C30847 = C30829 / C30842;
    const double C30968 = C30914 / C30842;
    const double C30973 = C30964 / C30842;
    const double C30972 = C30963 / C30842;
    const double C32230 = 4 * C32197;
    const double C32229 = C30830 * C32196;
    const double C30849 = 0 - C30844;
    const double C30846 = 0 - C30843;
    const double C31862 = C31861 / C30830;
    const double C30978 = 0 - C30974;
    const double C31964 = C31963 / C30830;
    const double C30981 = 0 - C30977;
    const double C31085 = C31083 * be;
    const double C31078 = -C31076;
    const double C31088 = std::pow(C31076, 4);
    const double C31111 = std::pow(C31076, 6);
    const double C141 =
        (ae * std::pow(C31076, 2) * bs[2] * C31073 * be +
         C31074 * std::pow(-C31076, 3) * bs[3] * C31074 * C31073 * ae * be) /
        C30835;
    const double C31451 = std::pow(C31076, 2);
    const double C128 =
        (C31074 * std::pow(C31076, 2) * bs[2] * C31081) / C30830;
    const double C129 =
        (C31074 * std::pow(C31076, 2) * bs[2] * C31169) / C30830 -
        (ae * bs[1] * C31075) / (C31072 * C30830);
    const double C31897 = C31896 / C31894;
    const double C31909 = C31908 / C31894;
    const double C31923 = C31922 / C31894;
    const double C31953 = C31952 / C30830;
    const double C30854 = C30849 * ae;
    const double C30853 = C30846 * ae;
    const double C31863 = -C31862;
    const double C30982 = C30978 * ae;
    const double C31965 = -C31964;
    const double C30985 = C30981 * ae;
    const double C31090 = C31089 * C31085;
    const double C31100 = C31098 * C31085;
    const double C31114 = C31112 * C31085;
    const double C31138 = C31134 * C31085;
    const double C31082 = std::pow(C31078, 3);
    const double C31097 = std::pow(C31078, 5);
    const double C31133 = std::pow(C31078, 7);
    const double C31093 = C31088 * C31091;
    const double C31173 = C31089 * C31088;
    const double C31174 = C31088 * C31172;
    const double C31119 = C31111 * C31116;
    const double C31203 = C31111 * C31199;
    const double C31217 = C31112 * C31111;
    const double C31453 = C31452 * C31451;
    const double C249 = (C31243 * C31451 * C31452 * C31081) / C30830;
    const double C250 = (C31243 * C31451 * C31452 * C31169) / C30830;
    const double C354 = (C31073 * C31451 * C31452 * C31081) / C30830 -
                        (be * bs[1] * C31075) / (C31072 * C30830);
    const double C355 = (C31073 * C31451 * C31452 * C31169) / C30830;
    const double C31898 = -C31897;
    const double C31910 = -C31909;
    const double C31924 = -C31923;
    const double C31954 = -C31953;
    const double C30858 = C30854 / C30830;
    const double C30857 = C30853 / C30830;
    const double C31864 = std::exp(C31863);
    const double C30986 = C30982 / C30830;
    const double C31966 = std::exp(C31965);
    const double C30989 = C30985 / C30830;
    const double C31092 = C31088 * C31090;
    const double C31118 = C31111 * C31114;
    const double C31086 = C31082 * C31084;
    const double C31170 = C31079 * C31082;
    const double C31187 = C31082 * C31186;
    const double C269 = ((yP - yQ) * C31082 * C31079 * C31085) / C30835;
    const double C374 = (be * std::pow(C31076, 2) * bs[2] * C31074 * ae +
                         C31073 * C31082 * C31079 * C31085) /
                        C30835;
    const double C31103 = C31097 * C31101;
    const double C31102 = C31097 * C31100;
    const double C31179 = C31098 * C31097;
    const double C31180 = C31097 * C31176;
    const double C31143 = C31133 * C31140;
    const double C31142 = C31133 * C31138;
    const double C31219 = C31133 * C31216;
    const double C31096 = ae * C31093;
    const double C31095 = C31074 * C31093;
    const double C31581 = C31073 * C31093;
    const double C31610 = C31243 * C31093;
    const double C31178 = C31074 * C31173;
    const double C31177 = C31173 * ae;
    const double C31459 = C31173 * C31099;
    const double C31553 = C31173 * C31252;
    const double C31584 = C31173 * C31285;
    const double C31611 = C31243 * C31173;
    const double C31693 = C31073 * C31173;
    const double C31692 = C31173 * be;
    const double C31189 = C31074 * C31174;
    const double C31259 = C31243 * C31174;
    const double C31283 = be * C31174;
    const double C31282 = C31073 * C31174;
    const double C31121 = C31119 * C31099;
    const double C31132 = ae * C31119;
    const double C31131 = C31074 * C31119;
    const double C31627 = C31119 * C31252;
    const double C31707 = C31073 * C31119;
    const double C31754 = C31243 * C31119;
    const double C31205 = C31074 * C31203;
    const double C31328 = C31203 * C31252;
    const double C31334 = C31243 * C31203;
    const double C31374 = C31203 * C31285;
    const double C31388 = be * C31203;
    const double C31387 = C31073 * C31203;
    const double C31222 = C31217 * C31099;
    const double C31221 = C31074 * C31217;
    const double C31220 = C31217 * ae;
    const double C31645 = C31217 * C31252;
    const double C31711 = C31217 * C31285;
    const double C31757 = C31243 * C31217;
    const double C121 = C31453 * C31099 - (bs[1] * C31075) / C31072;
    const double C240 = C31243 * C31074 * C31453;
    const double C244 = C31453 * C31252 - (bs[1] * C31075) / C31072;
    const double C345 = C31073 * C31074 * C31453;
    const double C349 = C31453 * C31285 - (bs[1] * C31075) / C31072;
    const double C676 = C31073 * C31243 * C31453;
    const double C31899 = std::exp(C31898);
    const double C31911 = std::exp(C31910);
    const double C31925 = std::exp(C31924);
    const double C31955 = std::exp(C31954);
    const double C30862 = C30858 - C30848;
    const double C30861 = C30857 - C30847;
    const double C30845 = C30840 * C31864;
    const double C31866 = C31864 * C31859;
    const double C31865 = C31864 / C30836;
    const double C31874 = C31872 * C31864;
    const double C32189 = C31864 * C31860;
    const double C32227 = C32193 * C31864;
    const double C32221 = C31864 * C32186;
    const double C30990 = C30986 - C30973;
    const double C150 = C31966 * C141;
    const double C148 = C31966 * C128;
    const double C966 = C31966 * C249;
    const double C30916 = C30915 * C31966;
    const double C113 = -(2 * ae * be * (zA - zB) * C31966) / (ae + be);
    const double C32044 = C31966 / C30836;
    const double C32046 = C31966 * C32043;
    const double C32053 = C31872 * C31966;
    const double C32215 = C31966 * C32045;
    const double C32241 = C32193 * C31966;
    const double C32239 = C31966 * C32205;
    const double C30993 = C30989 - C30972;
    const double C274 =
        (C31082 * C31079 * C31085 + C31092 * std::pow(yP - yQ, 2)) / C30835;
    const double C31120 = C31074 * C31118;
    const double C31316 = C31118 * C31252;
    const double C31319 = C31243 * C31118;
    const double C31373 = C31073 * C31118;
    const double C142 = (C31082 * C31079 * C31085 + ae * C31074 * C31086 +
                         C31074 * (ae * C31086 + C31074 * std::pow(C31076, 4) *
                                                     bs[4] * C31085)) /
                        C30835;
    const double C143 =
        (2 * (ae * C31086 + C31074 * C31092) +
         ae * (C31086 + C31093 * std::pow(C31074, 2)) +
         C31074 * (C31092 + ae * C31074 * C31093 +
                   C31074 * (ae * C31093 +
                             C31074 * std::pow(C31078, 5) * bs[5] * C31085))) /
        C30835;
    const double C270 = ((yP - yQ) * (ae * C31086 + C31074 * C31092)) / C30835;
    const double C375 = (be * (C31074 * C31082 * C31079 * C31074 * ae +
                               bs[2] * std::pow(C31076, 2) * ae) +
                         C31073 * (ae * C31086 + C31074 * C31092)) /
                        C30835;
    const double C130 =
        (std::pow(C31076, 2) * bs[2] * C31081 + C31086 * C31099) / C30830;
    const double C132 =
        (2 * C31074 * C31086 + C31074 * (C31086 + C31093 * C31099)) / C30830;
    const double C251 = (C31243 * C31074 * C31086) / C30830;
    const double C253 = (C31243 * (C31086 + C31093 * C31099)) / C30830;
    const double C259 = (C31451 * C31452 * C31081 + C31086 * C31252) / C30830;
    const double C356 =
        (C31073 * C31074 * C31086 + C31074 * C31453 * be) / C30830;
    const double C364 =
        (C31451 * C31452 * C31081 + C31073 * (C31073 * C31086 + C31453 * be) +
         C31073 * C31453 * be) /
        C30830;
    const double C681 =
        (C31073 * C31243 * C31086 + C31243 * C31453 * be) / C30830;
    const double C947 =
        (2 * C31243 * C31086 + C31243 * (C31086 + C31093 * C31252)) / C30830;
    const double C31190 = C31170 * ae;
    const double C31458 = C31074 * C31170;
    const double C31544 = C31243 * C31170;
    const double C31583 = C31073 * C31170;
    const double C31582 = C31170 * be;
    const double C358 = (C31073 * (C31086 + C31093 * C31099) +
                         (C31453 + C31170 * C31099) * be) /
                        C30830;
    const double C1119 = (C31073 * (C31086 + C31093 * C31252) +
                          (C31453 + C31170 * C31252) * be) /
                         C30830;
    const double C2026 =
        (2 * (C31073 * C31086 + C31453 * be) +
         C31073 * (C31086 + C31073 * (C31073 * C31093 + C31170 * be) +
                   C31073 * C31170 * be) +
         (C31453 + C31170 * C31285) * be) /
        C30830;
    const double C122 =
        2 * C31074 * C31453 + C31074 * (C31453 + C31170 * C31099);
    const double C241 = C31243 * (C31453 + C31170 * C31099);
    const double C346 = C31073 * (C31453 + C31170 * C31099);
    const double C941 =
        2 * C31243 * C31453 + C31243 * (C31453 + C31170 * C31252);
    const double C1110 = C31073 * (C31453 + C31170 * C31252);
    const double C2020 =
        2 * C31073 * C31453 + C31073 * (C31453 + C31170 * C31285);
    const double C379 = (C31082 * C31079 * C31085 + be * C31073 * C31187 +
                         C31073 * (be * C31187 + C31073 * C31092)) /
                        C30835;
    const double C691 =
        (be * C31243 * C31187 + C31073 * C31243 * C31092) / C30835;
    const double C131 =
        (C31451 * C31452 * C31169 + C31074 * (C31074 * C31187 + C31453 * ae) +
         C31074 * C31453 * ae) /
        C30830;
    const double C252 = (C31243 * (C31074 * C31187 + C31453 * ae)) / C30830;
    const double C260 = (C31451 * C31452 * C31169 + C31187 * C31252) / C30830;
    const double C357 = (C31073 * (C31074 * C31187 + C31453 * ae)) / C30830;
    const double C365 = (C31451 * C31452 * C31169 + C31187 * C31285) / C30830;
    const double C682 = (C31073 * C31243 * C31187) / C30830;
    const double C948 =
        (2 * C31243 * C31187 + C31243 * (C31187 + C31174 * C31252)) / C30830;
    const double C1120 = (C31073 * (C31187 + C31174 * C31252)) / C30830;
    const double C2027 =
        (2 * C31073 * C31187 + C31073 * (C31187 + C31174 * C31285)) / C30830;
    const double C968 = C31966 * C269;
    const double C31105 = C31103 * C31099;
    const double C31110 = ae * C31103;
    const double C31109 = C31074 * C31103;
    const double C31622 = C31103 * C31252;
    const double C31626 = C31243 * C31103;
    const double C31691 = C31073 * C31103;
    const double C953 =
        (3 * (C31086 + C31093 * C31252) +
         C31243 * (2 * C31243 * C31093 + C31243 * (C31093 + C31103 * C31252))) /
        C30830;
    const double C31104 = C31074 * C31102;
    const double C31284 = C31073 * C31102;
    const double C31307 = C31243 * C31102;
    const double C959 = (2 * C31243 * C31092 +
                         C31243 * (C31092 + C31102 * std::pow(C31243, 2))) /
                        C30835;
    const double C962 =
        (3 * (C31092 + C31102 * C31252) +
         C31243 * (2 * C31243 * C31102 + C31243 * (C31102 + C31118 * C31252))) /
        C30835;
    const double C1137 = (be * (C31187 + C31174 * C31252) +
                          C31073 * (C31092 + C31102 * C31252)) /
                         C30835;
    const double C2038 = (2 * (be * C31187 + C31073 * C31092) +
                          be * (C31187 + C31174 * std::pow(C31073, 2)) +
                          C31073 * (C31092 + be * C31073 * C31174 +
                                    C31073 * (be * C31174 + C31073 * C31102))) /
                         C30835;
    const double C31181 = C31179 * C31099;
    const double C31201 = C31074 * C31179;
    const double C31200 = C31179 * ae;
    const double C31637 = C31179 * C31252;
    const double C31644 = C31243 * C31179;
    const double C31694 = C31179 * C31285;
    const double C31709 = C31073 * C31179;
    const double C31708 = C31179 * be;
    const double C31182 = C31074 * C31180;
    const double C31265 = C31180 * C31252;
    const double C31287 = C31180 * C31285;
    const double C31308 = C31243 * C31180;
    const double C31372 = be * C31180;
    const double C31371 = C31073 * C31180;
    const double C31145 = C31143 * C31099;
    const double C31144 = C31074 * C31142;
    const double C31320 = C31142 * C31252;
    const double C31389 = C31073 * C31142;
    const double C31432 = C31243 * C31142;
    const double C31223 = C31074 * C31219;
    const double C31335 = C31219 * C31252;
    const double C31391 = C31219 * C31285;
    const double C31433 = C31243 * C31219;
    const double C261 = (C31074 * C31086 + C31095 * C31252) / C30830;
    const double C31194 = C31178 * ae;
    const double C31463 = 2 * C31178;
    const double C31547 = C31243 * C31178;
    const double C31591 = C31073 * C31178;
    const double C31590 = C31178 * be;
    const double C31460 = C31170 + C31459;
    const double C31554 = C31170 + C31553;
    const double C31586 = C31170 + C31584;
    const double C31636 = 2 * C31611;
    const double C31666 = C31073 * C31611;
    const double C31665 = C31611 * be;
    const double C31698 = 2 * C31693;
    const double C31696 = C31693 * be;
    const double C1140 = (C31243 * C31092 + be * C31073 * C31259 +
                          C31073 * (be * C31259 + C31073 * C31243 * C31102)) /
                         C30835;
    const double C1126 = (C31243 * C31187 + C31259 * C31285) / C30830;
    const double C31123 = C31103 + C31121;
    const double C31139 = 2 * C31131;
    const double C31137 = ae * C31131;
    const double C31654 = C31131 * C31252;
    const double C31729 = C31243 * C31131;
    const double C31739 = C31073 * C31131;
    const double C31629 = C31103 + C31627;
    const double C31758 = C31073 * C31754;
    const double C31329 = C31180 + C31328;
    const double C31336 = 2 * C31334;
    const double C31352 = C31334 * C31285;
    const double C31431 = be * C31334;
    const double C31430 = C31073 * C31334;
    const double C31378 = C31180 + C31374;
    const double C31395 = 2 * C31387;
    const double C31393 = be * C31387;
    const double C31225 = C31179 + C31222;
    const double C31224 = C31221 * ae;
    const double C31681 = C31221 * C31252;
    const double C31732 = C31243 * C31221;
    const double C31742 = C31221 * C31285;
    const double C31647 = C31179 + C31645;
    const double C31715 = C31179 + C31711;
    const double C31760 = C31757 * C31285;
    const double C32232 = C31899 * C32198;
    const double C110 =
        (C31899 * std::pow(C32198, 2)) / C32199 + C31899 / C32200;
    const double C112 = C32233 * C31899;
    const double C469 = C32231 * C31899;
    const double C32234 = C31911 * C32201;
    const double C235 =
        (C31911 * std::pow(C32201, 2)) / C32199 + C31911 / C32200;
    const double C237 = C32233 * C31911;
    const double C467 = C32231 * C31911;
    const double C32235 = C31925 * C32202;
    const double C341 =
        (C31925 * std::pow(C32202, 2)) / C32199 + C31925 / C32200;
    const double C343 = C32233 * C31925;
    const double C573 = C32231 * C31925;
    const double C32004 = C31955 / C30836;
    const double C32006 = C31955 * C32003;
    const double C32013 = C31872 * C31955;
    const double C32209 = C31955 * C32005;
    const double C32238 = C32193 * C31955;
    const double C32236 = C31955 * C32203;
    const double C30867 = C30862 / C30836;
    const double C30866 = C30828 * C30862;
    const double C30865 = C30861 + C30838;
    const double C30852 = C30845 / C30835;
    const double C30850 = 2 * C30845;
    const double C31867 = C31866 * C31860;
    const double C31873 = C31866 / C30842;
    const double C32190 = C31872 * C31866;
    const double C32188 = C31866 / C30830;
    const double C806 = (C31864 * std::pow(C31860, 2)) / C30835 + C31865;
    const double C31875 = C31874 * C31860;
    const double C32194 = C31859 * C31874;
    const double C32192 = 2 * C31874;
    const double C32242 = C31874 / C32196;
    const double C106 = C31874 / C32230;
    const double C17091 = C31874 / C30836;
    const double C32223 = C32189 / C30830;
    const double C807 = (-2 * C31872 * C32189) / C30830;
    const double C32255 = C32221 / C30835;
    const double C30995 = C30990 / C30836;
    const double C30994 = C30913 * C30990;
    const double C30948 = 2 * C30916;
    const double C30970 = C30916 / C30835;
    const double C1753 =
        ((0 * ae) / C30830 - C30916 / C30835) / C30836 + (0 * ae) / C30830;
    const double C3352 =
        ((C31966 - (C30913 * 2 * C30916) / C30830) * ae) / C30830 -
        C30914 / C30842;
    const double C3353 = (0 * ae) / C30830 - C30916 / C30835;
    const double C153 = C113 * C121;
    const double C151 = C113 * C129;
    const double C149 = C113 * C120;
    const double C475 = C113 * C240;
    const double C579 = C113 * C345;
    const double C971 = C113 * C244;
    const double C969 = C113 * C250;
    const double C967 = C113 * C239;
    const double C1631 = C113 * C676;
    const double C9914 = (C31966 * std::pow(C32045, 2)) / C30835 + C32044;
    const double C32047 = C32046 * C32045;
    const double C32052 = C32046 / C30842;
    const double C32208 = C32046 / C30830;
    const double C32206 = C31872 * C32046;
    const double C1752 =
        (((C31966 - (C30913 * 2 * C30916) / C30830) * ae) / C30830 -
         C30914 / C30842) /
            C30836 +
        ((C30913 * ((0 * ae) / C30830 - C30916 / C30835) + C32053) * ae) /
            C30830;
    const double C32054 = C32053 * C32045;
    const double C32219 = C32043 * C32053;
    const double C32218 = 2 * C32053;
    const double C32254 = C32053 / C32196;
    const double C11591 = C32053 / C32230;
    const double C23639 = C32053 / C30836;
    const double C32250 = C32215 / C30830;
    const double C9915 = (-2 * C31872 * C32215) / C30830;
    const double C32262 = C32239 / C30835;
    const double C30999 = C30993 + C30965;
    const double C972 = C31966 * C274;
    const double C31317 = C31102 + C31316;
    const double C31321 = 2 * C31319;
    const double C31351 = C31073 * C31319;
    const double C154 = C31966 * C142;
    const double C158 = C31966 * C143;
    const double C478 = C31966 * C270;
    const double C582 = C31966 * C375;
    const double C3361 = C32053 * C375;
    const double C19923 = C32053 * C375;
    const double C152 = C31966 * C130;
    const double C156 = C31966 * C132;
    const double C476 = C31966 * C251;
    const double C480 = C31966 * C253;
    const double C970 = C31966 * C259;
    const double C580 = C31966 * C356;
    const double C3357 = C32053 * C356;
    const double C19919 = C32053 * C356;
    const double C1632 = C31966 * C681;
    const double C4333 = C32053 * C681;
    const double C20905 = C32053 * C681;
    const double C979 = C31966 * C947;
    const double C31191 = C31189 + C31190;
    const double C366 =
        (C31074 * C31086 + C31073 * (C31073 * C31095 + C31458 * be) +
         C31073 * C31458 * be) /
        C30830;
    const double C683 =
        (C31073 * C31243 * C31095 + C31243 * C31458 * be) / C30830;
    const double C245 = C31074 * C31453 + C31458 * C31252;
    const double C350 = C31074 * C31453 + C31458 * C31285;
    const double C677 = C31073 * C31243 * C31458;
    const double C942 =
        2 * C31243 * C31458 + C31243 * (C31458 + C31178 * C31252);
    const double C1111 = C31073 * (C31458 + C31178 * C31252);
    const double C2021 =
        2 * C31073 * C31458 + C31073 * (C31458 + C31178 * C31285);
    const double C1125 =
        (C31243 * C31086 + C31073 * (C31073 * C31243 * C31093 + C31544 * be) +
         C31073 * C31544 * be) /
        C30830;
    const double C2541 =
        (2 * (C31073 * C31610 + C31544 * be) +
         C31073 * (C31610 + C31073 * (C31073 * C31243 * C31103 + C31611 * be) +
                   C31073 * C31611 * be) +
         (C31544 + C31611 * C31285) * be) /
        C30830;
    const double C1113 = C31243 * C31453 + C31544 * C31285;
    const double C2538 =
        2 * C31073 * C31544 + C31073 * (C31544 + C31611 * C31285);
    const double C31585 = C31581 + C31582;
    const double C584 = C31966 * C358;
    const double C3365 = C32053 * C358;
    const double C19927 = C32053 * C358;
    const double C1636 = C31966 * C1119;
    const double C4342 = C32053 * C1119;
    const double C20913 = C32053 * C1119;
    const double C157 = C113 * C122;
    const double C479 = C113 * C241;
    const double C583 = C113 * C346;
    const double C978 = C113 * C941;
    const double C1635 = C113 * C1110;
    const double C1634 = C31966 * C691;
    const double C4337 = C32053 * C691;
    const double C20909 = C32053 * C691;
    const double C155 = C113 * C131;
    const double C477 = C113 * C252;
    const double C973 = C113 * C260;
    const double C581 = C113 * C357;
    const double C1633 = C113 * C682;
    const double C980 = C113 * C948;
    const double C1637 = C113 * C1120;
    const double C31107 = C31093 + C31105;
    const double C31122 = C31110 + C31120;
    const double C31115 = 2 * C31109;
    const double C31113 = ae * C31109;
    const double C31589 = C31073 * C31109;
    const double C31614 = C31243 * C31109;
    const double C949 =
        (2 * C31243 * C31095 + C31243 * (C31095 + C31109 * C31252)) / C30830;
    const double C955 =
        (3 * (C31095 + C31109 * C31252) +
         C31243 * (2 * C31243 * C31109 + C31243 * (C31109 + C31131 * C31252))) /
        C30830;
    const double C1121 = (C31073 * (C31095 + C31109 * C31252) +
                          (C31458 + C31178 * C31252) * be) /
                         C30830;
    const double C2028 =
        (2 * (C31073 * C31095 + C31458 * be) +
         C31073 * (C31095 + C31073 * (C31073 * C31109 + C31178 * be) +
                   C31073 * C31178 * be) +
         (C31458 + C31178 * C31285) * be) /
        C30830;
    const double C31623 = C31093 + C31622;
    const double C31628 = 2 * C31626;
    const double C31664 = C31073 * C31626;
    const double C31695 = C31691 + C31692;
    const double C6064 = C31966 * C953;
    const double C31106 = C31096 + C31104;
    const double C31286 = C31283 + C31284;
    const double C981 = C31966 * C959;
    const double C6066 = C31966 * C962;
    const double C1638 = C31966 * C1137;
    const double C4346 = C32053 * C1137;
    const double C20917 = C32053 * C1137;
    const double C31183 = C31173 + C31181;
    const double C31204 = C31201 * ae;
    const double C31218 = 2 * C31201;
    const double C31557 = C31201 * C31252;
    const double C31592 = C31201 * C31285;
    const double C31615 = C31243 * C31201;
    const double C31741 = C31073 * C31201;
    const double C31740 = C31201 * be;
    const double C31206 = C31205 + C31200;
    const double C31638 = C31173 + C31637;
    const double C31646 = 2 * C31644;
    const double C31667 = C31644 * C31285;
    const double C31756 = C31073 * C31644;
    const double C31755 = C31644 * be;
    const double C31697 = C31173 + C31694;
    const double C31716 = 2 * C31709;
    const double C31714 = C31709 * be;
    const double C31713 = C31707 + C31708;
    const double C31184 = C31182 + C31177;
    const double C31266 = C31174 + C31265;
    const double C31288 = C31174 + C31287;
    const double C31327 = 2 * C31308;
    const double C31350 = be * C31308;
    const double C31349 = C31073 * C31308;
    const double C2547 =
        (2 * (be * C31259 + C31073 * C31307) + be * (C31259 + C31308 * C31285) +
         C31073 * (C31307 + be * C31073 * C31308 +
                   C31073 * (be * C31308 + C31073 * C31243 * C31118))) /
        C30835;
    const double C2542 =
        (2 * C31073 * C31259 + C31073 * (C31259 + C31308 * C31285)) / C30830;
    const double C31376 = C31372 + C31373;
    const double C31377 = 2 * C31371;
    const double C31375 = be * C31371;
    const double C31147 = C31119 + C31145;
    const double C31146 = C31132 + C31144;
    const double C31322 = C31118 + C31320;
    const double C31394 = C31388 + C31389;
    const double C31435 = C31073 * C31432;
    const double C31226 = C31223 + C31220;
    const double C31337 = C31203 + C31335;
    const double C31396 = C31203 + C31391;
    const double C31437 = C31433 * C31285;
    const double C818 = C31966 * C261;
    const double C1127 =
        (C31243 * C31095 + C31073 * (C31073 * C31243 * C31109 + C31547 * be) +
         C31073 * C31547 * be) /
        C30830;
    const double C1114 = C31243 * C31458 + C31547 * C31285;
    const double C123 = 3 * (C31453 + C31170 * C31099) +
                        C31074 * (2 * C31458 + C31074 * C31460);
    const double C242 = C31243 * (2 * C31458 + C31074 * C31460);
    const double C246 = C31453 + C31170 * C31099 + C31460 * C31252;
    const double C347 = C31073 * (2 * C31458 + C31074 * C31460);
    const double C351 = C31453 + C31170 * C31099 + C31460 * C31285;
    const double C678 = C31073 * C31243 * C31460;
    const double C1131 =
        (C31086 + C31093 * C31252 +
         C31073 * (C31073 * (C31093 + C31103 * C31252) + C31554 * be) +
         C31073 * C31554 * be) /
        C30830;
    const double C1621 =
        (C31073 * (2 * C31243 * C31093 + C31243 * (C31093 + C31103 * C31252)) +
         (2 * C31544 + C31243 * C31554) * be) /
        C30830;
    const double C944 = 3 * (C31453 + C31170 * C31252) +
                        C31243 * (2 * C31544 + C31243 * C31554);
    const double C1116 = C31453 + C31170 * C31252 + C31554 * C31285;
    const double C1618 = C31073 * (2 * C31544 + C31243 * C31554);
    const double C2023 = 3 * (C31453 + C31170 * C31285) +
                         C31073 * (2 * C31583 + C31073 * C31586);
    const double C5132 = C32053 * C1140;
    const double C6655 = C32241 * C1140;
    const double C10903 = C32241 * C1140;
    const double C21723 = C32053 * C1140;
    const double C31125 = C31074 * C31123;
    const double C31135 = 3 * C31123;
    const double C31130 = ae * C31123;
    const double C31597 = C31073 * C31123;
    const double C31618 = C31243 * C31123;
    const double C31141 = C31118 + C31137;
    const double C31655 = C31109 + C31654;
    const double C31733 = C31073 * C31729;
    const double C31630 = C31243 * C31629;
    const double C31672 = C31073 * C31629;
    const double C31330 = C31243 * C31329;
    const double C31333 = 3 * C31329;
    const double C31357 = be * C31329;
    const double C31356 = C31073 * C31329;
    const double C31354 = C31308 + C31352;
    const double C31436 = 2 * C31430;
    const double C31434 = be * C31430;
    const double C31381 = C31073 * C31378;
    const double C31390 = 3 * C31378;
    const double C31386 = be * C31378;
    const double C31397 = C31118 + C31393;
    const double C31228 = C31074 * C31225;
    const double C31227 = C31225 * ae;
    const double C31561 = C31225 * C31252;
    const double C31600 = C31225 * C31285;
    const double C31619 = C31243 * C31225;
    const double C31682 = C31201 + C31681;
    const double C31734 = C31732 * C31285;
    const double C31745 = C31201 + C31742;
    const double C31648 = C31243 * C31647;
    const double C31675 = C31647 * C31285;
    const double C31718 = C31073 * C31715;
    const double C31763 = C31644 + C31760;
    const double C111 = (2 * C32231 * C32232) / C31894;
    const double C468 = C32232 / C31894;
    const double C236 = (2 * C32231 * C32234) / C31894;
    const double C466 = C32234 / C31894;
    const double C342 = (2 * C32231 * C32235) / C31894;
    const double C572 = C32235 / C31894;
    const double C5245 = (C31955 * std::pow(C32005, 2)) / C30835 + C32004;
    const double C32007 = C32006 * C32005;
    const double C32012 = C32006 / C30842;
    const double C32207 = C32006 / C30830;
    const double C32204 = C31872 * C32006;
    const double C32014 = C32013 * C32005;
    const double C32213 = C32003 * C32013;
    const double C32212 = 2 * C32013;
    const double C32248 = C32013 / C32196;
    const double C5987 = C32013 / C32230;
    const double C17094 = C32013 / C30836;
    const double C32244 = C32209 / C30830;
    const double C5246 = (-2 * C31872 * C32209) / C30830;
    const double C32260 = C32236 / C30835;
    const double C30871 = C30866 + 0;
    const double C30870 = C30865 / C30836;
    const double C30856 = C30841 - C30852;
    const double C30855 = C30828 * C30850;
    const double C814 =
        ((-C30850 / C30830) / C30836 - (0 * be) / C30830) / C30836 -
        (0 * be) / C30830;
    const double C5988 = -C30850 / C30830;
    const double C15326 = (-C30850 / C30830) / C30836 - (0 * be) / C30830;
    const double C31868 = C31867 / C30835;
    const double C32224 = 2 * C32190;
    const double C31876 = C31875 / C30830;
    const double C32228 = C32194 / C30842;
    const double C32256 = C32188 - C32223;
    const double C15319 = -C32223;
    const double C32270 = C32255 + C31865;
    const double C31000 = C30994 + 0;
    const double C30967 = C30913 * C30948;
    const double C9918 =
        ((-C30914 / C30830) / C30836 -
         ((C31966 - (C30913 * C30948) / C30830) * be) / C30830) /
            C30836 -
        ((C30913 * ((-C30948 / C30830) / C30836 - (0 * be) / C30830) + C32053) *
         be) /
            C30830;
    const double C9919 =
        ((-C30948 / C30830) / C30836 - (0 * be) / C30830) / C30836 -
        (0 * be) / C30830;
    const double C19915 = (-C30948 / C30830) / C30836 - (0 * be) / C30830;
    const double C30980 = C30976 - C30970;
    const double C6656 = C1753 * C1126;
    const double C3372 = C3352 * C122;
    const double C3368 = C3352 * C131;
    const double C3364 = C3352 * C121;
    const double C3360 = C3352 * C129;
    const double C3356 = C3352 * C120;
    const double C3733 = C3352 * C241;
    const double C3729 = C3352 * C252;
    const double C3725 = C3352 * C240;
    const double C3887 = C3352 * C346;
    const double C3883 = C3352 * C357;
    const double C3879 = C3352 * C345;
    const double C4343 = C3352 * C260;
    const double C4339 = C3352 * C244;
    const double C4336 = C3352 * C250;
    const double C4332 = C3352 * C239;
    const double C5129 = C3352 * C682;
    const double C5125 = C3352 * C676;
    const double C8320 = C3352 * C948;
    const double C8316 = C3352 * C941;
    const double C9089 = C3352 * C1120;
    const double C9085 = C3352 * C1110;
    const double C3366 = C3353 * C346;
    const double C3362 = C3353 * C357;
    const double C3358 = C3353 * C345;
    const double C4345 = C3353 * C1120;
    const double C4341 = C3353 * C1110;
    const double C4338 = C3353 * C682;
    const double C4334 = C3353 * C676;
    const double C5131 = C3353 * C1126;
    const double C9952 = C9914 * C143;
    const double C9946 = C9914 * C132;
    const double C9939 = C9914 * C142;
    const double C9933 = C9914 * C130;
    const double C9927 = C9914 * C141;
    const double C9921 = C9914 * C128;
    const double C10346 = C9914 * C253;
    const double C10340 = C9914 * C270;
    const double C10334 = C9914 * C251;
    const double C10516 = C9914 * C358;
    const double C10510 = C9914 * C375;
    const double C10504 = C9914 * C356;
    const double C10924 = C9914 * C959;
    const double C10918 = C9914 * C947;
    const double C10911 = C9914 * C274;
    const double C10905 = C9914 * C259;
    const double C10899 = C9914 * C269;
    const double C10893 = C9914 * C249;
    const double C11199 = C9914 * C261;
    const double C11521 = C9914 * C1137;
    const double C11515 = C9914 * C1119;
    const double C11509 = C9914 * C691;
    const double C11503 = C9914 * C681;
    const double C32048 = C32047 / C30835;
    const double C3375 = C32208 * C143;
    const double C3371 = C32208 * C132;
    const double C3367 = C32208 * C142;
    const double C3363 = C32208 * C130;
    const double C3359 = C32208 * C141;
    const double C3355 = C32208 * C128;
    const double C3734 = C32208 * C253;
    const double C3730 = C32208 * C270;
    const double C3726 = C32208 * C251;
    const double C3888 = C32208 * C358;
    const double C3884 = C32208 * C375;
    const double C3880 = C32208 * C356;
    const double C4348 = C32208 * C261;
    const double C4344 = C32208 * C274;
    const double C4340 = C32208 * C259;
    const double C4335 = C32208 * C269;
    const double C4331 = C32208 * C249;
    const double C5130 = C32208 * C691;
    const double C5126 = C32208 * C681;
    const double C8321 = C32208 * C959;
    const double C8317 = C32208 * C947;
    const double C9090 = C32208 * C1137;
    const double C9086 = C32208 * C1119;
    const double C9300 = C32208 * C962;
    const double C9296 = C32208 * C953;
    const double C1751 =
        (((0 - (C30913 * C30914) / C30830) * ae) / C30830 - (0 * be) / C30842) /
            C30836 +
        ((C30913 * (((C31966 - (C30913 * 2 * C30916) / C30830) * ae) / C30830 -
                    C30914 / C30842) +
          C32208) *
         ae) /
            C30830 +
        (0 * ae) / C30830 - C30916 / C30835;
    const double C32240 = 2 * C32206;
    const double C1770 = C1752 * C346;
    const double C1764 = C1752 * C357;
    const double C1758 = C1752 * C345;
    const double C6666 = C1752 * C1120;
    const double C6660 = C1752 * C1110;
    const double C6654 = C1752 * C682;
    const double C6648 = C1752 * C676;
    const double C7286 = C1752 * C1126;
    const double C32055 = C32054 / C30830;
    const double C32253 = C32219 / C30842;
    const double C24698 = C23639 * C1140;
    const double C32267 = C32208 - C32250;
    const double C19912 = -C32250;
    const double C9935 = C9915 * C358;
    const double C9929 = C9915 * C375;
    const double C9923 = C9915 * C356;
    const double C10913 = C9915 * C1137;
    const double C10907 = C9915 * C1119;
    const double C10901 = C9915 * C691;
    const double C10895 = C9915 * C681;
    const double C11511 = C9915 * C1140;
    const double C32274 = C32262 + C32044;
    const double C31003 = C30999 / C30836;
    const double C6057 =
        (4 * (2 * C31307 + C31243 * C31317) +
         C31243 *
             (3 * C31317 + C31243 * (2 * C31243 * C31118 +
                                     C31243 * (C31118 + C31142 * C31252)))) /
        C30835;
    const double C168 = C152 - C153;
    const double C1299 = C475 - C476;
    const double C1297 = C476 - C475;
    const double C990 = C970 - C971;
    const double C133 =
        (2 * (C31074 * C31187 + C31453 * ae) +
         C31074 * (C31187 + C31074 * C31191 + C31074 * C31170 * ae) +
         (C31453 + C31170 * C31099) * ae) /
        C30830;
    const double C254 =
        (C31243 * (C31187 + C31074 * C31191 + C31458 * ae)) / C30830;
    const double C262 =
        (C31074 * C31187 + C31453 * ae + C31191 * C31252) / C30830;
    const double C359 =
        (C31073 * (C31187 + C31074 * C31191 + C31458 * ae)) / C30830;
    const double C367 =
        (C31074 * C31187 + C31453 * ae + C31191 * C31285) / C30830;
    const double C684 = (C31073 * C31243 * C31191) / C30830;
    const double C1759 = C32241 * C366;
    const double C3882 = C32053 * C366;
    const double C9925 = C32241 * C366;
    const double C10506 = C9915 * C366;
    const double C20444 = C32053 * C366;
    const double C23648 = C23639 * C366;
    const double C1458 = C31966 * C683;
    const double C3728 = C32053 * C683;
    const double C4916 = C32208 * C683;
    const double C10336 = C9915 * C683;
    const double C12835 = C9914 * C683;
    const double C20290 = C32053 * C683;
    const double C819 = C113 * C245;
    const double C4347 = C3352 * C245;
    const double C1760 = C1753 * C350;
    const double C2371 = C1752 * C350;
    const double C3881 = C3353 * C350;
    const double C1457 = C113 * C677;
    const double C2197 = C1752 * C677;
    const double C3727 = C3353 * C677;
    const double C4915 = C3352 * C677;
    const double C982 = C113 * C942;
    const double C8324 = C3352 * C942;
    const double C1465 = C113 * C1111;
    const double C4349 = C3353 * C1111;
    const double C6968 = C1752 * C1111;
    const double C8883 = C3352 * C1111;
    const double C2373 = C1753 * C2021;
    const double C5128 = C32053 * C1125;
    const double C6649 = C32241 * C1125;
    const double C10897 = C32241 * C1125;
    const double C11505 = C9915 * C1125;
    const double C21719 = C32053 * C1125;
    const double C24692 = C23639 * C1125;
    const double C7283 = C32241 * C2541;
    const double C11507 = C32241 * C2541;
    const double C13998 = C32254 * C2541;
    const double C25489 = C23639 * C2541;
    const double C27430 = C32254 * C2541;
    const double C5127 = C3353 * C1113;
    const double C6650 = C1753 * C1113;
    const double C7280 = C1752 * C1113;
    const double C7282 = C1753 * C2538;
    const double C2032 =
        (3 * (C31086 + C31073 * C31585 + C31583 * be) +
         C31073 * (2 * C31585 +
                   C31073 * (C31093 + C31073 * (C31073 * C31103 + C31173 * be) +
                             C31073 * C31173 * be) +
                   C31586 * be) +
         (2 * C31583 + C31073 * C31586) * be) /
        C30830;
    const double C170 = C156 - C157;
    const double C816 = C480 - C479;
    const double C1301 = C479 - C480;
    const double C6062 = C979 - C978;
    const double C169 = C154 - C155;
    const double C1300 = C477 - C478;
    const double C1298 = C478 - C477;
    const double C991 = C972 - C973;
    const double C134 = (3 * (C31086 + C31093 * C31099) +
                         C31074 * (2 * C31095 + C31074 * C31107)) /
                        C30830;
    const double C255 = (C31243 * (2 * C31095 + C31074 * C31107)) / C30830;
    const double C263 = (C31086 + C31093 * C31099 + C31107 * C31252) / C30830;
    const double C360 = (C31073 * (2 * C31095 + C31074 * C31107) +
                         (2 * C31458 + C31074 * C31460) * be) /
                        C30830;
    const double C368 =
        (C31086 + C31093 * C31099 + C31073 * (C31073 * C31107 + C31460 * be) +
         C31073 * C31460 * be) /
        C30830;
    const double C685 =
        (C31073 * C31243 * C31107 + C31243 * C31460 * be) / C30830;
    const double C951 =
        (2 * C31243 * C31107 + C31243 * (C31107 + C31123 * C31252)) / C30830;
    const double C31124 = C31074 * C31122;
    const double C31129 = 2 * C31122;
    const double C31292 = C31073 * C31122;
    const double C31310 = C31243 * C31122;
    const double C31117 = C31102 + C31113;
    const double C31593 = C31589 + C31590;
    const double C983 = C31966 * C949;
    const double C8325 = C32208 * C949;
    const double C6242 = C31966 * C955;
    const double C1466 = C31966 * C1121;
    const double C4350 = C32053 * C1121;
    const double C8884 = C32208 * C1121;
    const double C11201 = C9915 * C1121;
    const double C20743 = C32053 * C1121;
    const double C2374 = C32241 * C2028;
    const double C10508 = C32241 * C2028;
    const double C13152 = C32254 * C2028;
    const double C21844 = C32254 * C2028;
    const double C24231 = C23639 * C2028;
    const double C6053 =
        (4 * (2 * C31610 + C31243 * C31623) +
         C31243 *
             (3 * C31623 + C31243 * (2 * C31243 * C31103 +
                                     C31243 * (C31103 + C31119 * C31252)))) /
        C30830;
    const double C31668 = C31664 + C31665;
    const double C31699 = C31073 * C31695;
    const double C31706 = 2 * C31695;
    const double C144 =
        (3 * (C31092 + ae * C31095 + C31074 * C31106) +
         ae * (2 * C31095 + C31074 * C31107) +
         C31074 *
             (2 * C31106 + ae * C31107 +
              C31074 * (C31102 + ae * C31074 * C31103 +
                        C31074 * (ae * C31103 + C31074 * std::pow(C31076, 6) *
                                                    bs[6] * C31085)))) /
        C30835;
    const double C271 =
        ((yP - yQ) * (C31092 + ae * C31095 + C31074 * C31106)) / C30835;
    const double C275 =
        (ae * C31086 + C31074 * C31092 + C31106 * std::pow(yP - yQ, 2)) /
        C30835;
    const double C376 =
        (be * (C31082 * C31079 * C31169 +
               C31074 * (C31074 * C31088 * C31089 * C31169 + C31170 * ae) +
               C31074 * C31170 * ae) +
         C31073 * (C31092 + ae * C31095 + C31074 * C31106)) /
        C30835;
    const double C380 = (ae * C31086 + C31074 * C31092 + be * C31073 * C31191 +
                         C31073 * (be * C31191 + C31073 * C31106)) /
                        C30835;
    const double C692 =
        (be * C31243 * C31191 + C31073 * C31243 * C31106) / C30835;
    const double C960 = (2 * C31243 * C31106 +
                         C31243 * (C31106 + C31122 * std::pow(C31243, 2))) /
                        C30835;
    const double C6063 = C981 - C980;
    const double C31202 = C31183 * ae;
    const double C31464 = C31074 * C31183;
    const double C31468 = 3 * C31183;
    const double C31550 = C31243 * C31183;
    const double C31599 = C31073 * C31183;
    const double C31598 = C31183 * be;
    const double C1123 = (C31073 * (C31107 + C31123 * C31252) +
                          (C31460 + C31183 * C31252) * be) /
                         C30830;
    const double C2030 =
        (2 * (C31073 * C31107 + C31460 * be) +
         C31073 * (C31107 + C31073 * (C31073 * C31123 + C31183 * be) +
                   C31073 * C31183 * be) +
         (C31460 + C31183 * C31285) * be) /
        C30830;
    const double C943 =
        2 * C31243 * C31460 + C31243 * (C31460 + C31183 * C31252);
    const double C1112 = C31073 * (C31460 + C31183 * C31252);
    const double C2022 =
        2 * C31073 * C31460 + C31073 * (C31460 + C31183 * C31285);
    const double C31558 = C31178 + C31557;
    const double C31594 = C31178 + C31592;
    const double C31680 = 2 * C31615;
    const double C31731 = C31073 * C31615;
    const double C31730 = C31615 * be;
    const double C2543 =
        (2 * (C31073 * C31614 + C31547 * be) +
         C31073 * (C31614 + C31073 * (C31073 * C31243 * C31131 + C31615 * be) +
                   C31073 * C31615 * be) +
         (C31547 + C31615 * C31285) * be) /
        C30830;
    const double C2539 =
        2 * C31073 * C31547 + C31073 * (C31547 + C31615 * C31285);
    const double C31746 = 2 * C31741;
    const double C31744 = C31741 * be;
    const double C31743 = C31739 + C31740;
    const double C31207 = C31074 * C31206;
    const double C31215 = 2 * C31206;
    const double C31268 = C31206 * C31252;
    const double C31293 = C31206 * C31285;
    const double C31311 = C31243 * C31206;
    const double C31417 = be * C31206;
    const double C31416 = C31073 * C31206;
    const double C31639 = C31243 * C31638;
    const double C31643 = 3 * C31638;
    const double C31674 = C31073 * C31638;
    const double C31673 = C31638 * be;
    const double C6806 =
        (2 * (C31073 * C31623 + C31554 * be) +
         C31073 * (C31623 + C31073 * (C31073 * C31629 + C31638 * be) +
                   C31073 * C31638 * be) +
         (C31554 + C31638 * C31285) * be) /
        C30830;
    const double C6803 =
        2 * C31073 * C31554 + C31073 * (C31554 + C31638 * C31285);
    const double C31669 = C31611 + C31667;
    const double C31761 = 2 * C31756;
    const double C31759 = C31756 * be;
    const double C31762 = C31758 + C31755;
    const double C31700 = C31073 * C31697;
    const double C31712 = 3 * C31697;
    const double C31710 = C31697 * be;
    const double C31717 = C31073 * C31713;
    const double C31193 = C31074 * C31184;
    const double C31198 = 2 * C31184;
    const double C31261 = C31243 * C31184;
    const double C31291 = be * C31184;
    const double C31290 = C31073 * C31184;
    const double C1138 = (be * (C31191 + C31184 * C31252) +
                          C31073 * (C31106 + C31122 * C31252)) /
                         C30835;
    const double C2039 = (2 * (be * C31191 + C31073 * C31106) +
                          be * (C31191 + C31184 * std::pow(C31073, 2)) +
                          C31073 * (C31106 + be * C31073 * C31184 +
                                    C31073 * (be * C31184 + C31073 * C31122))) /
                         C30835;
    const double C950 =
        (2 * C31243 * C31191 + C31243 * (C31191 + C31184 * C31252)) / C30830;
    const double C1122 = (C31073 * (C31191 + C31184 * C31252)) / C30830;
    const double C2029 =
        (2 * C31073 * C31191 + C31073 * (C31191 + C31184 * C31285)) / C30830;
    const double C1143 =
        (C31092 + C31102 * C31252 + be * C31073 * C31266 +
         C31073 * (be * C31266 + C31073 * (C31102 + C31118 * C31252))) /
        C30835;
    const double C1627 =
        (be * (2 * C31259 + C31243 * C31266) +
         C31073 * (2 * C31243 * C31102 + C31243 * (C31102 + C31118 * C31252))) /
        C30835;
    const double C954 = (3 * (C31187 + C31174 * C31252) +
                         C31243 * (2 * C31259 + C31243 * C31266)) /
                        C30830;
    const double C1132 = (C31187 + C31174 * C31252 + C31266 * C31285) / C30830;
    const double C1622 = (C31073 * (2 * C31259 + C31243 * C31266)) / C30830;
    const double C6807 =
        (2 * C31073 * C31266 + C31073 * (C31266 + C31329 * C31285)) / C30830;
    const double C2041 =
        (3 * (C31092 + be * C31282 + C31073 * C31286) +
         be * (2 * C31282 + C31073 * C31288) +
         C31073 * (2 * C31286 + be * C31288 +
                   C31073 * (C31102 + be * C31073 * C31180 +
                             C31073 * (be * C31180 + C31073 * C31118)))) /
        C30835;
    const double C2033 = (3 * (C31187 + C31174 * C31285) +
                          C31073 * (2 * C31282 + C31073 * C31288)) /
                         C30830;
    const double C31353 = C31350 + C31351;
    const double C7289 = C32241 * C2547;
    const double C11513 = C32241 * C2547;
    const double C14006 = C32254 * C2547;
    const double C25495 = C23639 * C2547;
    const double C27438 = C32254 * C2547;
    const double C7288 = C1753 * C2542;
    const double C31380 = C31073 * C31376;
    const double C31385 = 2 * C31376;
    const double C31379 = C31102 + C31375;
    const double C31149 = C31074 * C31147;
    const double C957 =
        (3 * (C31107 + C31123 * C31252) +
         C31243 * (2 * C31243 * C31123 + C31243 * (C31123 + C31147 * C31252))) /
        C30830;
    const double C31148 = C31074 * C31146;
    const double C31343 = C31146 * C31252;
    const double C31409 = C31243 * C31146;
    const double C31418 = C31073 * C31146;
    const double C963 =
        (3 * (C31106 + C31122 * C31252) +
         C31243 * (2 * C31243 * C31122 + C31243 * (C31122 + C31146 * C31252))) /
        C30835;
    const double C31323 = C31243 * C31322;
    const double C31358 = C31073 * C31322;
    const double C6812 =
        (2 * (be * C31266 + C31073 * C31317) + be * (C31266 + C31329 * C31285) +
         C31073 * (C31317 + be * C31073 * C31329 +
                   C31073 * (be * C31329 + C31073 * C31322))) /
        C30835;
    const double C31398 = C31073 * C31394;
    const double C31439 = C31431 + C31435;
    const double C31229 = C31074 * C31226;
    const double C31364 = C31226 * C31252;
    const double C31410 = C31243 * C31226;
    const double C31419 = C31226 * C31285;
    const double C31338 = C31243 * C31337;
    const double C31359 = C31337 * C31285;
    const double C31399 = C31073 * C31396;
    const double C31440 = C31334 + C31437;
    const double C2200 = C32241 * C1127;
    const double C4918 = C32053 * C1127;
    const double C10338 = C32241 * C1127;
    const double C12837 = C9915 * C1127;
    const double C21509 = C32053 * C1127;
    const double C24061 = C23639 * C1127;
    const double C2199 = C1753 * C1114;
    const double C4917 = C3353 * C1114;
    const double C16776 = C1752 * C1114;
    const double C161 = C113 * C123;
    const double C3379 = C3352 * C123;
    const double C483 = C113 * C242;
    const double C3741 = C3352 * C242;
    const double C823 = C113 * C246;
    const double C4355 = C3352 * C246;
    const double C587 = C113 * C347;
    const double C1781 = C1752 * C347;
    const double C3374 = C3353 * C347;
    const double C3895 = C3352 * C347;
    const double C1772 = C1753 * C351;
    const double C2383 = C1752 * C351;
    const double C3889 = C3353 * C351;
    const double C1461 = C113 * C678;
    const double C2209 = C1752 * C678;
    const double C3735 = C3353 * C678;
    const double C4923 = C3352 * C678;
    const double C6661 = C32241 * C1131;
    const double C9088 = C32053 * C1131;
    const double C10909 = C32241 * C1131;
    const double C11517 = C9915 * C1131;
    const double C21727 = C32053 * C1131;
    const double C24705 = C23639 * C1131;
    const double C6418 = C31966 * C1621;
    const double C8319 = C32053 * C1621;
    const double C9798 = C32208 * C1621;
    const double C10920 = C9915 * C1621;
    const double C20926 = C32053 * C1621;
    const double C6065 = C113 * C944;
    const double C9295 = C3352 * C944;
    const double C6662 = C1753 * C1116;
    const double C7292 = C1752 * C1116;
    const double C9087 = C3353 * C1116;
    const double C6417 = C113 * C1618;
    const double C6671 = C1752 * C1618;
    const double C8318 = C3353 * C1618;
    const double C9797 = C3352 * C1618;
    const double C31127 = C31115 + C31125;
    const double C6237 =
        (4 * (2 * C31614 + C31243 * C31655) +
         C31243 * (3 * C31655 +
                   C31243 * (2 * C31243 * C31131 +
                             C31243 * (C31131 + C31074 * C31143 * C31252)))) /
        C30830;
    const double C31631 = C31628 + C31630;
    const double C31331 = C31327 + C31330;
    const double C6809 = (3 * (C31259 + C31308 * C31285) +
                          C31073 * (2 * C31349 + C31073 * C31354)) /
                         C30830;
    const double C31438 = C31319 + C31434;
    const double C31383 = C31377 + C31381;
    const double C31230 = C31218 + C31228;
    const double C31562 = C31183 + C31561;
    const double C31602 = C31183 + C31600;
    const double C31683 = C31243 * C31682;
    const double C31736 = C31615 + C31734;
    const double C31748 = C31073 * C31745;
    const double C31649 = C31646 + C31648;
    const double C31677 = C31638 + C31675;
    const double C31720 = C31716 + C31718;
    const double C31765 = C31073 * C31763;
    const double C32008 = C32007 / C30835;
    const double C32237 = 2 * C32204;
    const double C32015 = C32014 / C30830;
    const double C32247 = C32213 / C30842;
    const double C32264 = C32207 - C32244;
    const double C14629 = -C32244;
    const double C32273 = C32260 + C32004;
    const double C30874 = C30871 * be;
    const double C30860 = C30828 * C30856;
    const double C30888 = C30856 / C30836;
    const double C30859 = C30855 / C30830;
    const double C31869 = C31865 - C31868;
    const double C32257 = C32224 / C30830;
    const double C31877 = C31873 - C31876;
    const double C32271 = C32256 / C30836;
    const double C31004 = C31000 * be;
    const double C30975 = C30967 / C30830;
    const double C9947 = C9918 * C347;
    const double C9936 = C9918 * C346;
    const double C9930 = C9918 * C357;
    const double C9924 = C9918 * C345;
    const double C10347 = C9918 * C678;
    const double C10335 = C9918 * C677;
    const double C10517 = C9918 * C351;
    const double C10505 = C9918 * C350;
    const double C10919 = C9918 * C1618;
    const double C10914 = C9918 * C1120;
    const double C10908 = C9918 * C1110;
    const double C10902 = C9918 * C682;
    const double C10896 = C9918 * C676;
    const double C11200 = C9918 * C1111;
    const double C11516 = C9918 * C1116;
    const double C11510 = C9918 * C1126;
    const double C11504 = C9918 * C1113;
    const double C12836 = C9918 * C1114;
    const double C9938 = C9919 * C351;
    const double C9926 = C9919 * C350;
    const double C10337 = C9919 * C1114;
    const double C10507 = C9919 * C2021;
    const double C10910 = C9919 * C1116;
    const double C10904 = C9919 * C1126;
    const double C10898 = C9919 * C1113;
    const double C11512 = C9919 * C2542;
    const double C11506 = C9919 * C2538;
    const double C19936 = C19915 * C347;
    const double C19928 = C19915 * C346;
    const double C19924 = C19915 * C357;
    const double C19920 = C19915 * C345;
    const double C20297 = C19915 * C678;
    const double C20289 = C19915 * C677;
    const double C20451 = C19915 * C351;
    const double C20443 = C19915 * C350;
    const double C20744 = C19915 * C1111;
    const double C20925 = C19915 * C1618;
    const double C20918 = C19915 * C1120;
    const double C20914 = C19915 * C1110;
    const double C20910 = C19915 * C682;
    const double C20906 = C19915 * C676;
    const double C21508 = C19915 * C1114;
    const double C21726 = C19915 * C1116;
    const double C21722 = C19915 * C1126;
    const double C21718 = C19915 * C1113;
    const double C30984 = C30913 * C30980;
    const double C31013 = C30980 / C30836;
    const double C3388 = C3365 - C3366;
    const double C8311 = C4346 - C4345;
    const double C8309 = C4342 - C4341;
    const double C32049 = C32044 - C32048;
    const double C3391 = C3371 - C3372;
    const double C3389 = C3367 - C3368;
    const double C3387 = C3363 - C3364;
    const double C4179 = C3734 - C3733;
    const double C4711 = C3733 - C3734;
    const double C4709 = C3729 - C3730;
    const double C4705 = C3730 - C3729;
    const double C4707 = C3725 - C3726;
    const double C4703 = C3726 - C3725;
    const double C8310 = C4344 - C4343;
    const double C8308 = C4340 - C4339;
    const double C9293 = C8321 - C8320;
    const double C9291 = C8317 - C8316;
    const double C1779 = C1751 * C122;
    const double C1774 = C1751 * C131;
    const double C1768 = C1751 * C121;
    const double C1762 = C1751 * C129;
    const double C1756 = C1751 * C120;
    const double C2207 = C1751 * C241;
    const double C2201 = C1751 * C252;
    const double C2195 = C1751 * C240;
    const double C2381 = C1751 * C346;
    const double C2375 = C1751 * C357;
    const double C2369 = C1751 * C345;
    const double C6675 = C1751 * C948;
    const double C6669 = C1751 * C941;
    const double C6664 = C1751 * C260;
    const double C6658 = C1751 * C244;
    const double C6652 = C1751 * C250;
    const double C6646 = C1751 * C239;
    const double C6966 = C1751 * C245;
    const double C7296 = C1751 * C1120;
    const double C7290 = C1751 * C1110;
    const double C7284 = C1751 * C682;
    const double C7278 = C1751 * C676;
    const double C16774 = C1751 * C677;
    const double C32263 = C32240 / C30830;
    const double C32056 = C32052 - C32055;
    const double C32277 = C32267 / C30836;
    const double C19937 = C19912 * C143;
    const double C19933 = C19912 * C132;
    const double C19929 = C19912 * C142;
    const double C19925 = C19912 * C130;
    const double C19921 = C19912 * C141;
    const double C19917 = C19912 * C128;
    const double C20296 = C19912 * C253;
    const double C20292 = C19912 * C270;
    const double C20288 = C19912 * C251;
    const double C20450 = C19912 * C358;
    const double C20446 = C19912 * C375;
    const double C20442 = C19912 * C356;
    const double C20741 = C19912 * C261;
    const double C20932 = C19912 * C949;
    const double C20928 = C19912 * C959;
    const double C20924 = C19912 * C947;
    const double C20915 = C19912 * C274;
    const double C20911 = C19912 * C259;
    const double C20907 = C19912 * C269;
    const double C20903 = C19912 * C249;
    const double C21515 = C19912 * C1121;
    const double C21507 = C19912 * C683;
    const double C21729 = C19912 * C1137;
    const double C21725 = C19912 * C1119;
    const double C21721 = C19912 * C691;
    const double C21717 = C19912 * C681;
    const double C26723 = C19912 * C962;
    const double C26719 = C19912 * C953;
    const double C27221 = C19912 * C1621;
    const double C9917 =
        ((-(0 * be) / C30830) / C30836 -
         ((0 - (C30913 * C30914) / C30830) * be) / C30830) /
            C30836 -
        ((C30913 * ((-C30914 / C30830) / C30836 -
                    ((C31966 - (C30913 * C30948) / C30830) * be) / C30830) +
          C19912) *
         be) /
            C30830 +
        (-C30948 / C30830) / C30836 - (0 * be) / C30830;
    const double C1786 = C32274 * C143;
    const double C1780 = C32274 * C132;
    const double C1773 = C32274 * C142;
    const double C1767 = C32274 * C130;
    const double C1761 = C32274 * C141;
    const double C1755 = C32274 * C128;
    const double C2208 = C32274 * C253;
    const double C2202 = C32274 * C270;
    const double C2196 = C32274 * C251;
    const double C2382 = C32274 * C358;
    const double C2376 = C32274 * C375;
    const double C2370 = C32274 * C356;
    const double C6676 = C32274 * C959;
    const double C6670 = C32274 * C947;
    const double C6663 = C32274 * C274;
    const double C6657 = C32274 * C259;
    const double C6651 = C32274 * C269;
    const double C6645 = C32274 * C249;
    const double C6967 = C32274 * C261;
    const double C7297 = C32274 * C1137;
    const double C7291 = C32274 * C1119;
    const double C7285 = C32274 * C691;
    const double C7279 = C32274 * C681;
    const double C16775 = C32274 * C683;
    const double C6071 = C31966 * C6057;
    const double C6060 = C990 * C5988;
    const double C159 = C113 * C133;
    const double C1785 = C1751 * C133;
    const double C3376 = C3352 * C133;
    const double C481 = C113 * C254;
    const double C2213 = C1751 * C254;
    const double C3737 = C3352 * C254;
    const double C821 = C113 * C262;
    const double C4351 = C3352 * C262;
    const double C6972 = C1751 * C262;
    const double C585 = C113 * C359;
    const double C1776 = C1752 * C359;
    const double C2387 = C1751 * C359;
    const double C3370 = C3353 * C359;
    const double C3891 = C3352 * C359;
    const double C9942 = C9918 * C359;
    const double C19932 = C19915 * C359;
    const double C1766 = C1753 * C367;
    const double C2377 = C1752 * C367;
    const double C3885 = C3353 * C367;
    const double C9932 = C9919 * C367;
    const double C10511 = C9918 * C367;
    const double C20447 = C19915 * C367;
    const double C1459 = C113 * C684;
    const double C2203 = C1752 * C684;
    const double C3731 = C3353 * C684;
    const double C4919 = C3352 * C684;
    const double C10341 = C9918 * C684;
    const double C16780 = C1751 * C684;
    const double C20293 = C19915 * C684;
    const double C974 = C818 - C819;
    const double C1303 = C819 - C818;
    const double C8312 = C4348 - C4347;
    const double C8683 = C4347 - C4348;
    const double C4708 = C3727 - C3728;
    const double C4704 = C3728 - C3727;
    const double C6073 = C6062 * C5988;
    const double C995 = C991 * C806;
    const double C5363 = C991 * C32270;
    const double C6061 = C991 * C31864;
    const double C7507 = C991 * C32188;
    const double C15427 = C991 * C15319;
    const double C160 = C31966 * C134;
    const double C3380 = C32208 * C134;
    const double C19942 = C19912 * C134;
    const double C484 = C31966 * C255;
    const double C3742 = C32208 * C255;
    const double C20304 = C19912 * C255;
    const double C822 = C31966 * C263;
    const double C4356 = C32208 * C263;
    const double C20750 = C19912 * C263;
    const double C588 = C31966 * C360;
    const double C3373 = C32053 * C360;
    const double C3896 = C32208 * C360;
    const double C9948 = C9915 * C360;
    const double C19935 = C32053 * C360;
    const double C20458 = C19912 * C360;
    const double C1771 = C32241 * C368;
    const double C3890 = C32053 * C368;
    const double C9937 = C32241 * C368;
    const double C10518 = C9915 * C368;
    const double C20452 = C32053 * C368;
    const double C23660 = C23639 * C368;
    const double C1462 = C31966 * C685;
    const double C3736 = C32053 * C685;
    const double C4924 = C32208 * C685;
    const double C10348 = C9915 * C685;
    const double C20298 = C32053 * C685;
    const double C23327 = C19912 * C685;
    const double C987 = C31966 * C951;
    const double C31136 = C31129 + C31130;
    const double C31126 = C31117 + C31124;
    const double C7512 = C983 - C982;
    const double C7750 = C982 - C983;
    const double C8313 = C4350 - C4349;
    const double C8684 = C4349 - C4350;
    const double C6069 = C31966 * C6053;
    const double C31701 = C31093 + C31699;
    const double C162 = C31966 * C144;
    const double C3384 = C32208 * C144;
    const double C19946 = C19912 * C144;
    const double C482 = C31966 * C271;
    const double C2214 = C32274 * C271;
    const double C3738 = C32208 * C271;
    const double C10352 = C9914 * C271;
    const double C20300 = C19912 * C271;
    const double C820 = C31966 * C275;
    const double C4352 = C32208 * C275;
    const double C6973 = C32274 * C275;
    const double C11205 = C9914 * C275;
    const double C20745 = C19912 * C275;
    const double C586 = C31966 * C376;
    const double C2388 = C32274 * C376;
    const double C3369 = C32053 * C376;
    const double C3892 = C32208 * C376;
    const double C9941 = C9915 * C376;
    const double C10522 = C9914 * C376;
    const double C19931 = C32053 * C376;
    const double C20454 = C19912 * C376;
    const double C1765 = C32241 * C380;
    const double C3886 = C32053 * C380;
    const double C9931 = C32241 * C380;
    const double C10512 = C9915 * C380;
    const double C20448 = C32053 * C380;
    const double C23654 = C23639 * C380;
    const double C1460 = C31966 * C692;
    const double C3732 = C32053 * C692;
    const double C4920 = C32208 * C692;
    const double C10342 = C9915 * C692;
    const double C12841 = C9914 * C692;
    const double C16781 = C32274 * C692;
    const double C20294 = C32053 * C692;
    const double C21511 = C19912 * C692;
    const double C985 = C31966 * C960;
    const double C8329 = C32208 * C960;
    const double C20936 = C19912 * C960;
    const double C6074 = C6063 * C31864;
    const double C7511 = C6063 * C32188;
    const double C15431 = C6063 * C15319;
    const double C31465 = C31463 + C31464;
    const double C1129 =
        (C31243 * C31107 + C31073 * (C31073 * C31243 * C31123 + C31550 * be) +
         C31073 * C31550 * be) /
        C30830;
    const double C2545 =
        (2 * (C31073 * C31618 + C31550 * be) +
         C31073 * (C31618 + C31073 * (C31073 * C31243 * C31147 + C31619 * be) +
                   C31073 * C31619 * be) +
         (C31550 + C31619 * C31285) * be) /
        C30830;
    const double C1115 = C31243 * C31460 + C31550 * C31285;
    const double C2540 =
        2 * C31073 * C31550 + C31073 * (C31550 + C31619 * C31285);
    const double C31601 = C31597 + C31598;
    const double C1470 = C31966 * C1123;
    const double C4358 = C32053 * C1123;
    const double C20752 = C32053 * C1123;
    const double C2386 = C32241 * C2030;
    const double C10520 = C32241 * C2030;
    const double C13169 = C32254 * C2030;
    const double C21861 = C32254 * C2030;
    const double C24243 = C23639 * C2030;
    const double C986 = C113 * C943;
    const double C1469 = C113 * C1112;
    const double C4357 = C3353 * C1112;
    const double C20751 = C19915 * C1112;
    const double C2385 = C1753 * C2022;
    const double C10519 = C9919 * C2022;
    const double C1133 =
        (C31095 + C31109 * C31252 +
         C31073 * (C31073 * (C31109 + C31131 * C31252) + C31558 * be) +
         C31073 * C31558 * be) /
        C30830;
    const double C1623 =
        (C31073 * (2 * C31243 * C31109 + C31243 * (C31109 + C31131 * C31252)) +
         (2 * C31547 + C31243 * C31558) * be) /
        C30830;
    const double C6327 =
        (C31073 * (3 * C31655 +
                   C31243 * (2 * C31243 * C31131 +
                             C31243 * (C31131 + C31074 * C31143 * C31252))) +
         (3 * C31558 +
          C31243 * (2 * C31615 + C31243 * (C31201 + C31221 * C31252))) *
             be) /
        C30830;
    const double C7124 =
        (2 * (C31073 * C31655 + C31558 * be) +
         C31073 * (C31655 +
                   C31073 * (C31073 * (C31131 + C31074 * C31143 * C31252) +
                             C31682 * be) +
                   C31073 * C31682 * be) +
         (C31558 + C31682 * C31285) * be) /
        C30830;
    const double C945 = 3 * (C31458 + C31178 * C31252) +
                        C31243 * (2 * C31547 + C31243 * C31558);
    const double C1117 = C31458 + C31178 * C31252 + C31558 * C31285;
    const double C1619 = C31073 * (2 * C31547 + C31243 * C31558);
    const double C7123 =
        2 * C31073 * C31558 + C31073 * (C31558 + C31682 * C31285);
    const double C2034 =
        (3 * (C31095 + C31073 * C31593 + C31591 * be) +
         C31073 * (2 * C31593 +
                   C31073 * (C31109 + C31073 * (C31073 * C31131 + C31201 * be) +
                             C31073 * C31201 * be) +
                   C31594 * be) +
         (2 * C31591 + C31073 * C31594) * be) /
        C30830;
    const double C2024 = 3 * (C31458 + C31178 * C31285) +
                         C31073 * (2 * C31591 + C31073 * C31594);
    const double C31735 = C31733 + C31730;
    const double C12839 = C32241 * C2543;
    const double C13511 = C32254 * C2543;
    const double C16779 = C32241 * C2543;
    const double C22203 = C32254 * C2543;
    const double C25283 = C23639 * C2543;
    const double C12838 = C9919 * C2539;
    const double C16778 = C1753 * C2539;
    const double C31747 = C31073 * C31743;
    const double C31208 = C31180 + C31207;
    const double C31269 = C31184 + C31268;
    const double C31295 = C31184 + C31293;
    const double C31363 = 2 * C31311;
    const double C31408 = be * C31311;
    const double C31407 = C31073 * C31311;
    const double C31422 = 2 * C31416;
    const double C31420 = be * C31416;
    const double C31640 = C31636 + C31639;
    const double C31676 = C31672 + C31673;
    const double C7295 = C32241 * C6806;
    const double C11519 = C32241 * C6806;
    const double C14015 = C32254 * C6806;
    const double C27447 = C32254 * C6806;
    const double C30805 = C23639 * C6806;
    const double C7294 = C1753 * C6803;
    const double C11518 = C9919 * C6803;
    const double C6808 =
        (3 * (C31610 + C31073 * C31668 + C31666 * be) +
         C31073 * (2 * C31668 +
                   C31073 * (C31626 +
                             C31073 * (C31073 * C31243 * C31119 + C31644 * be) +
                             C31073 * C31644 * be) +
                   C31669 * be) +
         (2 * C31666 + C31073 * C31669) * be) /
        C30830;
    const double C6804 = 3 * (C31544 + C31611 * C31285) +
                         C31073 * (2 * C31666 + C31073 * C31669);
    const double C31764 = C31073 * C31762;
    const double C31702 = C31698 + C31700;
    const double C31719 = C31103 + C31717;
    const double C31195 = C31174 + C31193;
    const double C1141 = (C31243 * C31106 + be * C31073 * C31261 +
                          C31073 * (be * C31261 + C31073 * C31243 * C31122)) /
                         C30835;
    const double C2548 =
        (2 * (be * C31261 + C31073 * C31310) + be * (C31261 + C31311 * C31285) +
         C31073 * (C31310 + be * C31073 * C31311 +
                   C31073 * (be * C31311 + C31073 * C31243 * C31146))) /
        C30835;
    const double C1128 = (C31243 * C31191 + C31261 * C31285) / C30830;
    const double C2544 =
        (2 * C31073 * C31261 + C31073 * (C31261 + C31311 * C31285)) / C30830;
    const double C31294 = C31291 + C31292;
    const double C1468 = C31966 * C1138;
    const double C4354 = C32053 * C1138;
    const double C8888 = C32208 * C1138;
    const double C11207 = C9915 * C1138;
    const double C20747 = C32053 * C1138;
    const double C21519 = C19912 * C1138;
    const double C2380 = C32241 * C2039;
    const double C10514 = C32241 * C2039;
    const double C13160 = C32254 * C2039;
    const double C21852 = C32254 * C2039;
    const double C24237 = C23639 * C2039;
    const double C984 = C113 * C950;
    const double C8328 = C3352 * C950;
    const double C1467 = C113 * C1122;
    const double C4353 = C3353 * C1122;
    const double C6974 = C1752 * C1122;
    const double C8887 = C3352 * C1122;
    const double C11206 = C9918 * C1122;
    const double C20748 = C19915 * C1122;
    const double C2379 = C1753 * C2029;
    const double C10513 = C9919 * C2029;
    const double C6667 = C32241 * C1143;
    const double C9092 = C32053 * C1143;
    const double C10915 = C32241 * C1143;
    const double C11523 = C9915 * C1143;
    const double C21731 = C32053 * C1143;
    const double C24711 = C23639 * C1143;
    const double C6420 = C31966 * C1627;
    const double C8323 = C32053 * C1627;
    const double C9802 = C32208 * C1627;
    const double C10926 = C9915 * C1627;
    const double C20930 = C32053 * C1627;
    const double C27225 = C19912 * C1627;
    const double C6067 = C113 * C954;
    const double C9299 = C3352 * C954;
    const double C6668 = C1753 * C1132;
    const double C7298 = C1752 * C1132;
    const double C9091 = C3353 * C1132;
    const double C10916 = C9919 * C1132;
    const double C11522 = C9918 * C1132;
    const double C21730 = C19915 * C1132;
    const double C6419 = C113 * C1622;
    const double C6677 = C1752 * C1622;
    const double C8322 = C3353 * C1622;
    const double C9801 = C3352 * C1622;
    const double C10925 = C9918 * C1622;
    const double C20929 = C19915 * C1622;
    const double C7300 = C1753 * C6807;
    const double C11524 = C9919 * C6807;
    const double C6813 =
        (3 * (C31307 + be * C31349 + C31073 * C31353) +
         be * (2 * C31349 + C31073 * C31354) +
         C31073 *
             (2 * C31353 + be * C31354 +
              C31073 * (C31319 + be * C31073 * C31334 +
                        C31073 * (be * C31334 + C31073 * C31243 * C31142)))) /
        C30835;
    const double C31392 = C31385 + C31386;
    const double C31382 = C31379 + C31380;
    const double C31151 = C31139 + C31149;
    const double C31150 = C31141 + C31148;
    const double C31344 = C31122 + C31343;
    const double C31411 = C31073 * C31409;
    const double C31421 = C31417 + C31418;
    const double C6244 = C31966 * C963;
    const double C31324 = C31321 + C31323;
    const double C31360 = C31357 + C31358;
    const double C7301 = C32241 * C6812;
    const double C11525 = C32241 * C6812;
    const double C14023 = C32254 * C6812;
    const double C27455 = C32254 * C6812;
    const double C30811 = C23639 * C6812;
    const double C31400 = C31397 + C31398;
    const double C31441 = C31073 * C31439;
    const double C31231 = C31203 + C31229;
    const double C31365 = C31206 + C31364;
    const double C31412 = C31410 * C31285;
    const double C31423 = C31206 + C31419;
    const double C31339 = C31336 + C31338;
    const double C31361 = C31329 + C31359;
    const double C31401 = C31395 + C31399;
    const double C31442 = C31073 * C31440;
    const double C16568 = C2199 - C2200;
    const double C16562 = C2200 - C2199;
    const double C6075 = C6064 - C6065;
    const double C6683 = C6661 - C6662;
    const double C9292 = C8319 - C8318;
    const double C136 = (4 * (2 * C31095 + C31074 * C31107) +
                         C31074 * (3 * C31107 + C31074 * C31127)) /
                        C30830;
    const double C257 = (C31243 * (3 * C31107 + C31074 * C31127)) / C30830;
    const double C265 =
        (2 * C31095 + C31074 * C31107 + C31127 * C31252) / C30830;
    const double C6055 =
        (5 * (3 * C31623 + C31243 * C31631) +
         C31243 * (4 * C31631 +
                   C31243 * (3 * C31629 +
                             C31243 * (2 * C31243 * C31119 +
                                       C31243 * (C31119 + C31143 * C31252))))) /
        C30830;
    const double C6145 =
        (C31073 * (3 * C31623 + C31243 * C31631) +
         (3 * C31554 +
          C31243 * (2 * C31611 + C31243 * (C31173 + C31179 * C31252))) *
             be) /
        C30830;
    const double C6054 = (4 * (2 * C31259 + C31243 * C31266) +
                          C31243 * (3 * C31266 + C31243 * C31331)) /
                         C30830;
    const double C6146 = (C31073 * (3 * C31266 + C31243 * C31331)) / C30830;
    const double C6148 =
        (2 * C31259 + C31243 * C31266 + C31331 * C31285) / C30830;
    const double C11724 = (4 * (2 * C31282 + C31073 * C31288) +
                           C31073 * (3 * C31288 + C31073 * C31383)) /
                          C30830;
    const double C31232 = C31230 * ae;
    const double C31469 = C31074 * C31230;
    const double C31605 = C31243 * C31230;
    const double C1135 =
        (C31107 + C31123 * C31252 +
         C31073 * (C31073 * (C31123 + C31147 * C31252) + C31562 * be) +
         C31073 * C31562 * be) /
        C30830;
    const double C1625 =
        (C31073 * (2 * C31243 * C31123 + C31243 * (C31123 + C31147 * C31252)) +
         (2 * C31550 + C31243 * C31562) * be) /
        C30830;
    const double C946 = 3 * (C31460 + C31183 * C31252) +
                        C31243 * (2 * C31550 + C31243 * C31562);
    const double C1118 = C31460 + C31183 * C31252 + C31562 * C31285;
    const double C1620 = C31073 * (2 * C31550 + C31243 * C31562);
    const double C2025 = 3 * (C31460 + C31183 * C31285) +
                         C31073 * (2 * C31599 + C31073 * C31602);
    const double C31684 = C31680 + C31683;
    const double C11811 = 3 * (C31547 + C31615 * C31285) +
                          C31073 * (2 * C31731 + C31073 * C31736);
    const double C31750 = C31746 + C31748;
    const double C31650 = C31243 * C31649;
    const double C6805 = 3 * (C31554 + C31638 * C31285) +
                         C31073 * (2 * C31674 + C31073 * C31677);
    const double C31722 = C31073 * C31720;
    const double C31767 = C31761 + C31765;
    const double C32009 = C32004 - C32008;
    const double C32261 = C32237 / C30830;
    const double C32016 = C32012 - C32015;
    const double C32275 = C32264 / C30836;
    const double C30876 = C30874 / C30830;
    const double C30864 = C30860 + C31874;
    const double C30891 = C30888 - C30890;
    const double C5250 = C30888 + (0 * ae) / C30830;
    const double C30863 = C31864 - C30859;
    const double C17210 = C991 * C31869;
    const double C32187 = C31869 * C31859;
    const double C32226 = C32192 + C31869;
    const double C32195 = C31877 / C30836;
    const double C32191 = C31877 * C31859;
    const double C2648 = C32271 - (C31869 * C31860) / C30830;
    const double C31006 = C31004 / C30830;
    const double C30979 = C31966 - C30975;
    const double C9958 = C9935 - C9936;
    const double C12627 = C10335 - C10336;
    const double C12621 = C10336 - C10335;
    const double C10933 = C10913 - C10914;
    const double C10930 = C10907 - C10908;
    const double C12628 = C10337 - C10338;
    const double C12622 = C10338 - C10337;
    const double C10931 = C10909 - C10910;
    const double C19950 = C19927 - C19928;
    const double C21299 = C20289 - C20290;
    const double C21295 = C20290 - C20289;
    const double C20920 = C20743 - C20744;
    const double C21303 = C20744 - C20743;
    const double C26715 = C20926 - C20925;
    const double C20942 = C20917 - C20918;
    const double C20940 = C20913 - C20914;
    const double C30988 = C30984 + C32053;
    const double C31016 = C31013 - C31015;
    const double C23675 = C32049 * C143;
    const double C23669 = C32049 * C132;
    const double C23662 = C32049 * C142;
    const double C23656 = C32049 * C130;
    const double C23650 = C32049 * C141;
    const double C23644 = C32049 * C128;
    const double C24075 = C32049 * C271;
    const double C24069 = C32049 * C253;
    const double C24063 = C32049 * C270;
    const double C24057 = C32049 * C251;
    const double C24245 = C32049 * C376;
    const double C24239 = C32049 * C358;
    const double C24233 = C32049 * C375;
    const double C24227 = C32049 * C356;
    const double C24719 = C32049 * C275;
    const double C24713 = C32049 * C261;
    const double C24707 = C32049 * C274;
    const double C24701 = C32049 * C259;
    const double C24694 = C32049 * C269;
    const double C24688 = C32049 * C249;
    const double C25285 = C32049 * C692;
    const double C25279 = C32049 * C683;
    const double C25491 = C32049 * C691;
    const double C25485 = C32049 * C681;
    const double C30240 = C32049 * C959;
    const double C30234 = C32049 * C947;
    const double C30807 = C32049 * C1137;
    const double C30801 = C32049 * C1119;
    const double C32216 = C32049 * C32043;
    const double C32252 = C32218 + C32049;
    const double C3395 = C3387 + C3388;
    const double C8333 = C8310 + C8311;
    const double C8332 = C8308 + C8309;
    const double C1782 = C32263 * C360;
    const double C1775 = C32263 * C376;
    const double C1769 = C32263 * C358;
    const double C1763 = C32263 * C375;
    const double C1757 = C32263 * C356;
    const double C2210 = C32263 * C685;
    const double C2204 = C32263 * C692;
    const double C2198 = C32263 * C683;
    const double C2384 = C32263 * C368;
    const double C2378 = C32263 * C380;
    const double C2372 = C32263 * C366;
    const double C6678 = C32263 * C1627;
    const double C6672 = C32263 * C1621;
    const double C6665 = C32263 * C1137;
    const double C6659 = C32263 * C1119;
    const double C6653 = C32263 * C691;
    const double C6647 = C32263 * C681;
    const double C6975 = C32263 * C1138;
    const double C6969 = C32263 * C1121;
    const double C7299 = C32263 * C1143;
    const double C7293 = C32263 * C1131;
    const double C7287 = C32263 * C1140;
    const double C7281 = C32263 * C1125;
    const double C16777 = C32263 * C1127;
    const double C23671 = C32056 * C360;
    const double C23664 = C32056 * C376;
    const double C23658 = C32056 * C358;
    const double C23652 = C32056 * C375;
    const double C23646 = C32056 * C356;
    const double C24071 = C32056 * C685;
    const double C24065 = C32056 * C692;
    const double C24059 = C32056 * C683;
    const double C24241 = C32056 * C368;
    const double C24235 = C32056 * C380;
    const double C24229 = C32056 * C366;
    const double C24721 = C32056 * C1138;
    const double C24715 = C32056 * C1121;
    const double C24709 = C32056 * C1137;
    const double C24703 = C32056 * C1119;
    const double C24696 = C32056 * C691;
    const double C24690 = C32056 * C681;
    const double C25281 = C32056 * C1127;
    const double C25493 = C32056 * C1140;
    const double C25487 = C32056 * C1125;
    const double C30242 = C32056 * C1627;
    const double C30236 = C32056 * C1621;
    const double C30809 = C32056 * C1143;
    const double C30803 = C32056 * C1131;
    const double C32220 = C32056 / C30836;
    const double C32217 = C32056 * C32043;
    const double C13137 = C32277 - (C32049 * C32045) / C30830;
    const double C9951 = C9917 * C133;
    const double C9945 = C9917 * C122;
    const double C9940 = C9917 * C131;
    const double C9934 = C9917 * C121;
    const double C9928 = C9917 * C129;
    const double C9922 = C9917 * C120;
    const double C10351 = C9917 * C254;
    const double C10345 = C9917 * C241;
    const double C10339 = C9917 * C252;
    const double C10333 = C9917 * C240;
    const double C10521 = C9917 * C359;
    const double C10515 = C9917 * C346;
    const double C10509 = C9917 * C357;
    const double C10503 = C9917 * C345;
    const double C10923 = C9917 * C948;
    const double C10917 = C9917 * C941;
    const double C10912 = C9917 * C260;
    const double C10906 = C9917 * C244;
    const double C10900 = C9917 * C250;
    const double C10894 = C9917 * C239;
    const double C11204 = C9917 * C262;
    const double C11198 = C9917 * C245;
    const double C11520 = C9917 * C1120;
    const double C11514 = C9917 * C1110;
    const double C11508 = C9917 * C682;
    const double C11502 = C9917 * C676;
    const double C12840 = C9917 * C684;
    const double C12834 = C9917 * C677;
    const double C1794 = C1773 - C1774;
    const double C1791 = C1767 - C1768;
    const double C16569 = C2201 - C2202;
    const double C16563 = C2202 - C2201;
    const double C16566 = C2195 - C2196;
    const double C16560 = C2196 - C2195;
    const double C6684 = C6663 - C6664;
    const double C6681 = C6657 - C6658;
    const double C171 = C158 - C159;
    const double C3393 = C3375 - C3376;
    const double C7508 = C974 * C30856;
    const double C15428 = C974 * C15326;
    const double C4717 = C4707 + C4708;
    const double C4715 = C4703 + C4704;
    const double C6072 = C6060 + C6061;
    const double C172 = C160 - C161;
    const double C2659 = C484 - C483;
    const double C2987 = C483 - C484;
    const double C830 = C822 - C823;
    const double C1305 = C823 - C822;
    const double C3392 = C3373 - C3374;
    const double C19954 = C19935 - C19936;
    const double C1793 = C1771 - C1772;
    const double C9959 = C9937 - C9938;
    const double C4180 = C3736 - C3735;
    const double C4712 = C3735 - C3736;
    const double C22635 = C20298 - C20297;
    const double C23127 = C20297 - C20298;
    const double C145 =
        (4 * (2 * C31106 + ae * C31107 + C31074 * C31126) +
         ae * (3 * C31107 + C31074 * C31127) +
         C31074 * (3 * C31126 + ae * C31127 +
                   C31074 * (2 * C31122 + ae * C31123 +
                             C31074 * (C31118 + ae * C31074 * C31119 +
                                       C31074 * (ae * C31119 +
                                                 C31074 * std::pow(C31078, 7) *
                                                     bs[7] * C31085))))) /
        C30835;
    const double C272 =
        ((yP - yQ) * (2 * C31106 + ae * C31107 + C31074 * C31126)) / C30835;
    const double C276 = (C31092 + ae * C31095 + C31074 * C31106 +
                         C31126 * std::pow(yP - yQ, 2)) /
                        C30835;
    const double C377 =
        (be * (2 * (C31074 * C31174 + C31170 * ae) +
               C31074 *
                   (C31174 +
                    C31074 * (C31074 * C31097 * C31098 * C31169 + C31173 * ae) +
                    C31074 * C31173 * ae) +
               (C31170 + C31173 * C31099) * ae) +
         C31073 * (2 * C31106 + ae * C31107 + C31074 * C31126)) /
        C30835;
    const double C7516 = C7512 * C30856;
    const double C15432 = C7512 * C15326;
    const double C8334 = C8312 + C8313;
    const double C8687 = C8683 + C8684;
    const double C31703 = C31701 + C31696;
    const double C817 = C482 - C481;
    const double C1302 = C481 - C482;
    const double C4181 = C3738 - C3737;
    const double C4713 = C3737 - C3738;
    const double C975 = C820 - C821;
    const double C1304 = C821 - C820;
    const double C8314 = C4352 - C4351;
    const double C8685 = C4351 - C4352;
    const double C3390 = C3369 - C3370;
    const double C9961 = C9941 - C9942;
    const double C19952 = C19931 - C19932;
    const double C4710 = C3731 - C3732;
    const double C4706 = C3732 - C3731;
    const double C12630 = C10341 - C10342;
    const double C12624 = C10342 - C10341;
    const double C21301 = C20293 - C20294;
    const double C21297 = C20294 - C20293;
    const double C6077 = C6073 + C6074;
    const double C362 = (C31073 * (3 * C31107 + C31074 * C31127) +
                         (3 * C31460 + C31074 * C31465) * be) /
                        C30830;
    const double C370 =
        (2 * C31095 + C31074 * C31107 +
         C31073 * (C31073 * C31127 + C31465 * be) + C31073 * C31465 * be) /
        C30830;
    const double C687 =
        (C31073 * C31243 * C31127 + C31243 * C31465 * be) / C30830;
    const double C124 = 4 * (2 * C31458 + C31074 * C31460) +
                        C31074 * (3 * C31460 + C31074 * C31465);
    const double C243 = C31243 * (3 * C31460 + C31074 * C31465);
    const double C247 = 2 * C31458 + C31074 * C31460 + C31465 * C31252;
    const double C348 = C31073 * (3 * C31460 + C31074 * C31465);
    const double C352 = 2 * C31458 + C31074 * C31460 + C31465 * C31285;
    const double C679 = C31073 * C31243 * C31465;
    const double C1292 =
        2 * C31243 * C31465 + C31243 * (C31465 + C31230 * C31252);
    const double C1452 = C31073 * (C31465 + C31230 * C31252);
    const double C2364 =
        2 * C31073 * C31465 + C31073 * (C31465 + C31230 * C31285);
    const double C2212 = C32241 * C1129;
    const double C4926 = C32053 * C1129;
    const double C10350 = C32241 * C1129;
    const double C23329 = C32053 * C1129;
    const double C24073 = C23639 * C1129;
    const double C2211 = C1753 * C1115;
    const double C4925 = C3353 * C1115;
    const double C10349 = C9919 * C1115;
    const double C23328 = C19915 * C1115;
    const double C2036 =
        (3 * (C31107 + C31073 * C31601 + C31599 * be) +
         C31073 * (2 * C31601 +
                   C31073 * (C31123 + C31073 * (C31073 * C31147 + C31225 * be) +
                             C31073 * C31225 * be) +
                   C31602 * be) +
         (2 * C31599 + C31073 * C31602) * be) /
        C30830;
    const double C6971 = C32241 * C1133;
    const double C8886 = C32053 * C1133;
    const double C11203 = C32241 * C1133;
    const double C21517 = C32053 * C1133;
    const double C24717 = C23639 * C1133;
    const double C7883 = C31966 * C1623;
    const double C8327 = C32053 * C1623;
    const double C20934 = C32053 * C1623;
    const double C6241 = C113 * C945;
    const double C6970 = C1753 * C1117;
    const double C8885 = C3353 * C1117;
    const double C11202 = C9919 * C1117;
    const double C21516 = C19915 * C1117;
    const double C7882 = C113 * C1619;
    const double C8326 = C3353 * C1619;
    const double C20933 = C19915 * C1619;
    const double C13657 = C32254 * C2034;
    const double C22349 = C32254 * C2034;
    const double C11812 =
        (3 * (C31614 + C31073 * C31735 + C31731 * be) +
         C31073 * (2 * C31735 +
                   C31073 * (C31729 +
                             C31073 * (C31073 * C31243 * C31074 * C31143 +
                                       C31732 * be) +
                             C31073 * C31732 * be) +
                   C31736 * be) +
         (2 * C31731 + C31073 * C31736) * be) /
        C30830;
    const double C31749 = C31109 + C31747;
    const double C31209 = C31208 + C31204;
    const double C1144 =
        (C31106 + C31122 * C31252 + be * C31073 * C31269 +
         C31073 * (be * C31269 + C31073 * (C31122 + C31146 * C31252))) /
        C30835;
    const double C1628 =
        (be * (2 * C31261 + C31243 * C31269) +
         C31073 * (2 * C31243 * C31122 + C31243 * (C31122 + C31146 * C31252))) /
        C30835;
    const double C956 = (3 * (C31191 + C31184 * C31252) +
                         C31243 * (2 * C31261 + C31243 * C31269)) /
                        C30830;
    const double C1134 = (C31191 + C31184 * C31252 + C31269 * C31285) / C30830;
    const double C1624 = (C31073 * (2 * C31261 + C31243 * C31269)) / C30830;
    const double C2035 = (3 * (C31191 + C31184 * C31285) +
                          C31073 * (2 * C31290 + C31073 * C31295)) /
                         C30830;
    const double C31424 = C31122 + C31420;
    const double C6147 =
        (2 * C31610 + C31243 * C31623 +
         C31073 * (C31073 * C31631 + C31640 * be) + C31073 * C31640 * be) /
        C30830;
    const double C7274 =
        (2 * (C31073 * C31631 + C31640 * be) +
         C31073 * (C31631 +
                   C31073 * (C31073 * (2 * C31243 * C31119 +
                                       C31243 * (C31119 + C31143 * C31252)) +
                             C31649 * be) +
                   C31073 * C31649 * be) +
         (C31640 + C31649 * C31285) * be) /
        C30830;
    const double C6051 = 4 * (2 * C31544 + C31243 * C31554) +
                         C31243 * (3 * C31554 + C31243 * C31640);
    const double C6142 = C31073 * (3 * C31554 + C31243 * C31640);
    const double C6143 = 2 * C31544 + C31243 * C31554 + C31640 * C31285;
    const double C7273 =
        2 * C31073 * C31640 + C31073 * (C31640 + C31649 * C31285);
    const double C6810 =
        (3 * (C31623 + C31073 * C31676 + C31674 * be) +
         C31073 * (2 * C31676 +
                   C31073 * (C31629 +
                             C31073 * (C31073 * (C31119 + C31143 * C31252) +
                                       C31647 * be) +
                             C31073 * C31647 * be) +
                   C31677 * be) +
         (2 * C31674 + C31073 * C31677) * be) /
        C30830;
    const double C14519 = C32254 * C6808;
    const double C27951 = C32254 * C6808;
    const double C31766 = C31626 + C31764;
    const double C11721 = 4 * (2 * C31583 + C31073 * C31586) +
                          C31073 * (3 * C31586 + C31073 * C31702);
    const double C31721 = C31719 + C31714;
    const double C31196 = C31195 + C31194;
    const double C2206 = C32241 * C1141;
    const double C4922 = C32053 * C1141;
    const double C10344 = C32241 * C1141;
    const double C12843 = C9915 * C1141;
    const double C16783 = C32263 * C1141;
    const double C21513 = C32053 * C1141;
    const double C24067 = C23639 * C1141;
    const double C25287 = C32056 * C1141;
    const double C12845 = C32241 * C2548;
    const double C13519 = C32254 * C2548;
    const double C16785 = C32241 * C2548;
    const double C22211 = C32254 * C2548;
    const double C25289 = C23639 * C2548;
    const double C2205 = C1753 * C1128;
    const double C4921 = C3353 * C1128;
    const double C10343 = C9919 * C1128;
    const double C12842 = C9918 * C1128;
    const double C16782 = C1752 * C1128;
    const double C21512 = C19915 * C1128;
    const double C12844 = C9919 * C2544;
    const double C16784 = C1753 * C2544;
    const double C2042 =
        (3 * (C31106 + be * C31290 + C31073 * C31294) +
         be * (2 * C31290 + C31073 * C31295) +
         C31073 * (2 * C31294 + be * C31295 +
                   C31073 * (C31122 + be * C31073 * C31206 +
                             C31073 * (be * C31206 + C31073 * C31146)))) /
        C30835;
    const double C7513 = C985 - C984;
    const double C7751 = C984 - C985;
    const double C8315 = C4354 - C4353;
    const double C8686 = C4353 - C4354;
    const double C20922 = C20747 - C20748;
    const double C21305 = C20748 - C20747;
    const double C6076 = C6066 - C6067;
    const double C6686 = C6667 - C6668;
    const double C10934 = C10915 - C10916;
    const double C9294 = C8323 - C8322;
    const double C26717 = C20930 - C20929;
    const double C14527 = C32254 * C6813;
    const double C27959 = C32254 * C6813;
    const double C11727 =
        (4 * (2 * C31286 + be * C31288 + C31073 * C31382) +
         be * (3 * C31288 + C31073 * C31383) +
         C31073 *
             (3 * C31382 + be * C31383 +
              C31073 * (2 * C31376 + be * C31378 +
                        C31073 * (C31118 + be * C31073 * C31203 +
                                  C31073 * (be * C31203 + C31073 * C31142))))) /
        C30835;
    const double C31153 = C31074 * C31151;
    const double C1293 =
        (2 * C31243 * C31127 + C31243 * (C31127 + C31151 * C31252)) / C30830;
    const double C1453 = (C31073 * (C31127 + C31151 * C31252) +
                          (C31465 + C31230 * C31252) * be) /
                         C30830;
    const double C2365 =
        (2 * (C31073 * C31127 + C31465 * be) +
         C31073 * (C31127 + C31073 * (C31073 * C31151 + C31230 * be) +
                   C31073 * C31230 * be) +
         (C31465 + C31230 * C31285) * be) /
        C30830;
    const double C31152 = C31074 * C31150;
    const double C31299 = C31073 * C31150;
    const double C31313 = C31243 * C31150;
    const double C961 = (2 * C31243 * C31126 +
                         C31243 * (C31126 + C31150 * std::pow(C31243, 2))) /
                        C30835;
    const double C964 =
        (3 * (C31126 + C31150 * C31252) +
         C31243 * (2 * C31243 * C31150 +
                   C31243 * (C31150 + (C31142 + ae * C31074 * C31143 +
                                       C31074 * (ae * C31143 +
                                                 C31074 * std::pow(C31076, 8) *
                                                     bs[8] * C31085)) *
                                          C31252))) /
        C30835;
    const double C6239 =
        (4 * (2 * C31310 + C31243 * C31344) +
         C31243 * (3 * C31344 +
                   C31243 * (2 * C31243 * C31146 +
                             C31243 * (C31146 + (ae * C31143 +
                                                 C31074 * std::pow(C31076, 8) *
                                                     bs[8] * C31085) *
                                                    C31252)))) /
        C30835;
    const double C6329 =
        (be * (3 * C31269 +
               C31243 * (2 * C31311 + C31243 * (C31206 + C31226 * C31252))) +
         C31073 * (3 * C31344 +
                   C31243 * (2 * C31243 * C31146 +
                             C31243 * (C31146 + (ae * C31143 +
                                                 C31074 * std::pow(C31076, 8) *
                                                     bs[8] * C31085) *
                                                    C31252)))) /
        C30835;
    const double C31413 = C31408 + C31411;
    const double C31425 = C31073 * C31421;
    const double C6058 =
        (5 * (3 * C31317 + C31243 * C31324) +
         C31243 * (4 * C31324 +
                   C31243 * (3 * C31322 +
                             C31243 * (2 * C31243 * C31142 +
                                       C31243 * (C31142 + std::pow(C31076, 8) *
                                                              bs[8] * C31085 *
                                                              C31252))))) /
        C30835;
    const double C6151 =
        (be * (3 * C31266 +
               C31243 * (2 * C31308 + C31243 * (C31180 + C31203 * C31252))) +
         C31073 * (3 * C31317 + C31243 * C31324)) /
        C30835;
    const double C6152 = (2 * C31307 + C31243 * C31317 + be * C31073 * C31331 +
                          C31073 * (be * C31331 + C31073 * C31324)) /
                         C30835;
    const double C31402 = C31073 * C31400;
    const double C31443 = C31438 + C31441;
    const double C31233 = C31231 + C31224;
    const double C31366 = C31243 * C31365;
    const double C7126 =
        (2 * (be * C31269 + C31073 * C31344) + be * (C31269 + C31365 * C31285) +
         C31073 * (C31344 + be * C31073 * C31365 +
                   C31073 * (be * C31365 +
                             C31073 * (C31146 + (ae * C31143 +
                                                 C31074 * std::pow(C31076, 8) *
                                                     bs[8] * C31085) *
                                                    C31252)))) /
        C30835;
    const double C7125 =
        (2 * C31073 * C31269 + C31073 * (C31269 + C31365 * C31285)) / C30830;
    const double C31414 = C31311 + C31412;
    const double C31426 = C31073 * C31423;
    const double C31340 = C31243 * C31339;
    const double C7276 =
        (2 * (be * C31331 + C31073 * C31324) + be * (C31331 + C31339 * C31285) +
         C31073 * (C31324 + be * C31073 * C31339 +
                   C31073 * (be * C31339 +
                             C31073 * (2 * C31243 * C31142 +
                                       C31243 * (C31142 + std::pow(C31076, 8) *
                                                              bs[8] * C31085 *
                                                              C31252))))) /
        C30835;
    const double C7275 =
        (2 * C31073 * C31331 + C31073 * (C31331 + C31339 * C31285)) / C30830;
    const double C6814 =
        (3 * (C31317 + be * C31356 + C31073 * C31360) +
         be * (2 * C31356 + C31073 * C31361) +
         C31073 * (2 * C31360 + be * C31361 +
                   C31073 * (C31322 + be * C31073 * C31337 +
                             C31073 * (be * C31337 +
                                       C31073 * (C31142 + std::pow(C31076, 8) *
                                                              bs[8] * C31085 *
                                                              C31252))))) /
        C30835;
    const double C6811 = (3 * (C31266 + C31329 * C31285) +
                          C31073 * (2 * C31356 + C31073 * C31361)) /
                         C30830;
    const double C31403 = C31073 * C31401;
    const double C31444 = C31436 + C31442;
    const double C6078 = C6075 * C5988;
    const double C9304 = C9291 + C9292;
    const double C165 = C31966 * C136;
    const double C488 = C31966 * C257;
    const double C827 = C31966 * C265;
    const double C6422 = C31966 * C6145;
    const double C9298 = C32053 * C6145;
    const double C26721 = C32053 * C6145;
    const double C6070 = C113 * C6054;
    const double C6423 = C113 * C6146;
    const double C9301 = C3353 * C6146;
    const double C26724 = C19915 * C6146;
    const double C6679 = C1753 * C6148;
    const double C9803 = C3353 * C6148;
    const double C10927 = C9919 * C6148;
    const double C27226 = C19915 * C6148;
    const double C31470 = C31468 + C31469;
    const double C2191 =
        (C31243 * C31127 + C31073 * (C31073 * C31243 * C31151 + C31605 * be) +
         C31073 * C31605 * be) /
        C30830;
    const double C2190 = C31243 * C31465 + C31605 * C31285;
    const double C6962 =
        (2 * C31614 + C31243 * C31655 +
         C31073 * (C31073 * (2 * C31243 * C31131 +
                             C31243 * (C31131 + C31074 * C31143 * C31252)) +
                   C31684 * be) +
         C31073 * C31684 * be) /
        C30830;
    const double C6236 = 4 * (2 * C31547 + C31243 * C31558) +
                         C31243 * (3 * C31558 + C31243 * C31684);
    const double C6326 = C31073 * (3 * C31558 + C31243 * C31684);
    const double C6961 = 2 * C31547 + C31243 * C31558 + C31684 * C31285;
    const double C11897 = 4 * (2 * C31591 + C31073 * C31594) +
                          C31073 * (3 * C31594 + C31073 * C31750);
    const double C31651 = C31643 + C31650;
    const double C31724 = C31712 + C31722;
    const double C11983 = 4 * (2 * C31666 + C31073 * C31669) +
                          C31073 * (3 * C31669 + C31073 * C31767);
    const double C32210 = C32009 * C32003;
    const double C32246 = C32212 + C32009;
    const double C32214 = C32016 / C30836;
    const double C32211 = C32016 * C32003;
    const double C7401 = C32275 - (C32009 * C32005) / C30830;
    const double C30879 = C30870 - C30876;
    const double C30869 = C30864 * be;
    const double C118 =
        (C30891 / C30836 + (0 * ae) / C30830) / C30836 - (0 * be) / C30830;
    const double C2657 = C30891 / C30836 - (0 * be) / C30830;
    const double C14634 = C30891 / C30836 + (0 * ae) / C30830;
    const double C30868 = C30863 * ae;
    const double C812 =
        ((-C30831 / C30830) / C30836 - (C30849 * be) / C30830) / C30836 -
        ((C30828 * ((-C30838) / C30836 - (C30863 * be) / C30830) + C15319) *
         be) /
            C30830 +
        (-C30850 / C30830) / C30836 - (0 * be) / C30830;
    const double C813 =
        ((-C30838) / C30836 - (C30863 * be) / C30830) / C30836 -
        ((C30828 * ((-C30850 / C30830) / C30836 - (0 * be) / C30830) + C31874) *
         be) /
            C30830;
    const double C15325 = (-C30838) / C30836 - (C30863 * be) / C30830;
    const double C32222 = C32187 / C30830;
    const double C32258 = C32226 / C30836;
    const double C32259 = C32228 + C32195;
    const double C2650 = C32195 - C31875 / C30842;
    const double C32225 = C32191 / C30830;
    const double C31008 = C31003 - C31006;
    const double C30983 = C30979 * ae;
    const double C19914 = (-C30965) / C30836 - (C30979 * be) / C30830;
    const double C30992 = C30988 * be;
    const double C23661 = C31016 * C351;
    const double C23655 = C31016 * C367;
    const double C23649 = C31016 * C350;
    const double C24072 = C31016 * C1115;
    const double C24066 = C31016 * C1128;
    const double C24060 = C31016 * C1114;
    const double C24242 = C31016 * C2022;
    const double C24236 = C31016 * C2029;
    const double C24230 = C31016 * C2021;
    const double C24716 = C31016 * C1117;
    const double C24710 = C31016 * C1132;
    const double C24704 = C31016 * C1116;
    const double C24699 = C31016 * C1126;
    const double C24693 = C31016 * C1113;
    const double C25288 = C31016 * C2544;
    const double C25282 = C31016 * C2539;
    const double C25494 = C31016 * C2542;
    const double C25488 = C31016 * C2538;
    const double C30243 = C31016 * C6148;
    const double C30810 = C31016 * C6807;
    const double C30804 = C31016 * C6803;
    const double C11596 =
        (C31016 / C30836 + (0 * ae) / C30830) / C30836 - (0 * be) / C30830;
    const double C13144 = C31016 / C30836 - (0 * be) / C30830;
    const double C21836 = C31016 / C30836 + (0 * ae) / C30830;
    const double C32249 = C32216 / C30830;
    const double C32268 = C32252 / C30836;
    const double C8337 = C8333 * C32188;
    const double C9290 = C8333 * C31864;
    const double C19081 = C8333 * C15319;
    const double C9289 = C8332 * C5988;
    const double C1795 = C1775 - C1776;
    const double C1792 = C1769 - C1770;
    const double C16570 = C2203 - C2204;
    const double C16564 = C2204 - C2203;
    const double C16567 = C2197 - C2198;
    const double C16561 = C2198 - C2197;
    const double C6685 = C6665 - C6666;
    const double C6682 = C6659 - C6660;
    const double C32269 = C32253 + C32220;
    const double C13139 = C32220 - C32054 / C30842;
    const double C32251 = C32217 / C30830;
    const double C13171 = C13137 * C142;
    const double C13163 = C13137 * C130;
    const double C13154 = C13137 * C141;
    const double C13146 = C13137 * C128;
    const double C13513 = C13137 * C270;
    const double C13505 = C13137 * C251;
    const double C13659 = C13137 * C375;
    const double C13651 = C13137 * C356;
    const double C14017 = C13137 * C274;
    const double C14009 = C13137 * C259;
    const double C14000 = C13137 * C269;
    const double C13992 = C13137 * C249;
    const double C14521 = C13137 * C691;
    const double C14513 = C13137 * C681;
    const double C9960 = C9939 - C9940;
    const double C9957 = C9933 - C9934;
    const double C12629 = C10339 - C10340;
    const double C12623 = C10340 - C10339;
    const double C12626 = C10333 - C10334;
    const double C12620 = C10334 - C10333;
    const double C10932 = C10911 - C10912;
    const double C10929 = C10905 - C10906;
    const double C976 = C830 * C814;
    const double C5366 = C830 * C5250;
    const double C17213 = C830 * C30891;
    const double C3397 = C3391 + C3392;
    const double C4183 = C4179 + C4180;
    const double C4719 = C4711 + C4712;
    const double C167 = C31966 * C145;
    const double C486 = C31966 * C272;
    const double C3746 = C32208 * C272;
    const double C20308 = C19912 * C272;
    const double C824 = C31966 * C276;
    const double C4360 = C32208 * C276;
    const double C20754 = C19912 * C276;
    const double C590 = C31966 * C377;
    const double C1788 = C32263 * C377;
    const double C3377 = C32053 * C377;
    const double C3900 = C32208 * C377;
    const double C9954 = C9915 * C377;
    const double C19939 = C32053 * C377;
    const double C20462 = C19912 * C377;
    const double C23677 = C32056 * C377;
    const double C8338 = C8334 * C30856;
    const double C19082 = C8334 * C15326;
    const double C11723 =
        (4 * (2 * C31585 + C31073 * C31703 + C31586 * be) +
         C31073 *
             (3 * C31703 +
              C31073 *
                  (2 * C31695 +
                   C31073 * (C31103 + C31073 * (C31073 * C31119 + C31179 * be) +
                             C31073 * C31179 * be) +
                   C31697 * be) +
              C31702 * be) +
         (3 * C31586 + C31073 * C31702) * be) /
        C30830;
    const double C993 = C975 * C807;
    const double C5365 = C975 * C32257;
    const double C7509 = C975 * C31874;
    const double C15429 = C975 * C31874;
    const double C17212 = C975 * C31877;
    const double C3396 = C3389 + C3390;
    const double C4718 = C4709 + C4710;
    const double C4716 = C4705 + C4706;
    const double C592 = C31966 * C362;
    const double C3382 = C32053 * C362;
    const double C19944 = C32053 * C362;
    const double C1784 = C32241 * C370;
    const double C3898 = C32053 * C370;
    const double C9950 = C32241 * C370;
    const double C20460 = C32053 * C370;
    const double C23673 = C23639 * C370;
    const double C3120 = C31966 * C687;
    const double C3744 = C32053 * C687;
    const double C20306 = C32053 * C687;
    const double C164 = C113 * C124;
    const double C487 = C113 * C243;
    const double C826 = C113 * C247;
    const double C591 = C113 * C348;
    const double C3381 = C3353 * C348;
    const double C19943 = C19915 * C348;
    const double C1783 = C1753 * C352;
    const double C3897 = C3353 * C352;
    const double C9949 = C9919 * C352;
    const double C20459 = C19915 * C352;
    const double C23672 = C31016 * C352;
    const double C3119 = C113 * C679;
    const double C3743 = C3353 * C679;
    const double C20305 = C19915 * C679;
    const double C31751 = C31749 + C31744;
    const double C31210 = C31074 * C31209;
    const double C31214 = 3 * C31209;
    const double C31263 = C31243 * C31209;
    const double C31298 = be * C31209;
    const double C31297 = C31073 * C31209;
    const double C6977 = C32241 * C1144;
    const double C8890 = C32053 * C1144;
    const double C11209 = C32241 * C1144;
    const double C21521 = C32053 * C1144;
    const double C24723 = C23639 * C1144;
    const double C7885 = C31966 * C1628;
    const double C8331 = C32053 * C1628;
    const double C20938 = C32053 * C1628;
    const double C6243 = C113 * C956;
    const double C6976 = C1753 * C1134;
    const double C8889 = C3353 * C1134;
    const double C11208 = C9919 * C1134;
    const double C21520 = C19915 * C1134;
    const double C24722 = C31016 * C1134;
    const double C7884 = C113 * C1624;
    const double C8330 = C3353 * C1624;
    const double C20937 = C19915 * C1624;
    const double C6674 = C32241 * C6147;
    const double C9800 = C32053 * C6147;
    const double C10922 = C32241 * C6147;
    const double C27223 = C32053 * C6147;
    const double C30238 = C23639 * C6147;
    const double C6068 = C113 * C6051;
    const double C6421 = C113 * C6142;
    const double C9297 = C3353 * C6142;
    const double C26720 = C19915 * C6142;
    const double C6673 = C1753 * C6143;
    const double C9799 = C3353 * C6143;
    const double C10921 = C9919 * C6143;
    const double C27222 = C19915 * C6143;
    const double C30237 = C31016 * C6143;
    const double C31768 = C31766 + C31759;
    const double C31723 = C31073 * C31721;
    const double C381 =
        (C31092 + ae * C31095 + C31074 * C31106 + be * C31073 * C31196 +
         C31073 * (be * C31196 + C31073 * C31126)) /
        C30835;
    const double C693 =
        (be * C31243 * C31196 + C31073 * C31243 * C31126) / C30835;
    const double C1139 = (be * (C31196 + C31209 * C31252) +
                          C31073 * (C31126 + C31150 * C31252)) /
                         C30835;
    const double C2040 = (2 * (be * C31196 + C31073 * C31126) +
                          be * (C31196 + C31209 * std::pow(C31073, 2)) +
                          C31073 * (C31126 + be * C31073 * C31209 +
                                    C31073 * (be * C31209 + C31073 * C31150))) /
                         C30835;
    const double C135 = (3 * (C31187 + C31074 * C31191 + C31458 * ae) +
                         C31074 * (2 * C31191 + C31074 * C31196 + C31460 * ae) +
                         (2 * C31458 + C31074 * C31460) * ae) /
                        C30830;
    const double C256 =
        (C31243 * (2 * C31191 + C31074 * C31196 + C31460 * ae)) / C30830;
    const double C264 =
        (C31187 + C31074 * C31191 + C31458 * ae + C31196 * C31252) / C30830;
    const double C361 =
        (C31073 * (2 * C31191 + C31074 * C31196 + C31460 * ae)) / C30830;
    const double C369 =
        (C31187 + C31074 * C31191 + C31458 * ae + C31196 * C31285) / C30830;
    const double C686 = (C31073 * C31243 * C31196) / C30830;
    const double C952 =
        (2 * C31243 * C31196 + C31243 * (C31196 + C31209 * C31252)) / C30830;
    const double C1124 = (C31073 * (C31196 + C31209 * C31252)) / C30830;
    const double C2031 =
        (2 * C31073 * C31196 + C31073 * (C31196 + C31209 * C31285)) / C30830;
    const double C16571 = C2205 - C2206;
    const double C16565 = C2206 - C2205;
    const double C12631 = C10343 - C10344;
    const double C12625 = C10344 - C10343;
    const double C13665 = C32254 * C2042;
    const double C22357 = C32254 * C2042;
    const double C7517 = C7513 * C31874;
    const double C15433 = C7513 * C31874;
    const double C8335 = C8314 + C8315;
    const double C8688 = C8685 + C8686;
    const double C6079 = C6076 * C31864;
    const double C9305 = C9293 + C9294;
    const double C31155 = C31135 + C31153;
    const double C31154 = C31136 + C31152;
    const double C989 = C31966 * C961;
    const double C31427 = C31424 + C31425;
    const double C6424 = C31966 * C6151;
    const double C9302 = C32053 * C6151;
    const double C26725 = C32053 * C6151;
    const double C6680 = C32241 * C6152;
    const double C9804 = C32053 * C6152;
    const double C10928 = C32241 * C6152;
    const double C27227 = C32053 * C6152;
    const double C30244 = C23639 * C6152;
    const double C31404 = C31392 + C31402;
    const double C31234 = C31074 * C31233;
    const double C31271 = C31233 * C31252;
    const double C31300 = C31233 * C31285;
    const double C31314 = C31243 * C31233;
    const double C31367 = C31363 + C31366;
    const double C11814 =
        (3 * (C31310 + be * C31407 + C31073 * C31413) +
         be * (2 * C31407 + C31073 * C31414) +
         C31073 * (2 * C31413 + be * C31414 +
                   C31073 * (C31409 + be * C31073 * C31410 +
                             C31073 * (be * C31410 +
                                       C31073 * C31243 *
                                           (ae * C31143 +
                                            C31074 * std::pow(C31076, 8) *
                                                bs[8] * C31085))))) /
        C30835;
    const double C11813 = (3 * (C31261 + C31311 * C31285) +
                           C31073 * (2 * C31407 + C31073 * C31414)) /
                          C30830;
    const double C31428 = C31422 + C31426;
    const double C31341 = C31333 + C31340;
    const double C31405 = C31390 + C31403;
    const double C11986 =
        (4 * (2 * C31353 + be * C31354 + C31073 * C31443) +
         be * (3 * C31354 + C31073 * C31444) +
         C31073 * (3 * C31443 + be * C31444 +
                   C31073 * (2 * C31439 + be * C31440 +
                             C31073 * (C31432 + be * C31073 * C31433 +
                                       C31073 * (be * C31433 +
                                                 C31073 * C31243 *
                                                     std::pow(C31076, 8) *
                                                     bs[8] * C31085))))) /
        C30835;
    const double C11985 = (4 * (2 * C31349 + C31073 * C31354) +
                           C31073 * (3 * C31354 + C31073 * C31444)) /
                          C30830;
    const double C9306 = C9304 * C5988;
    const double C125 = 5 * (3 * C31460 + C31074 * C31465) +
                        C31074 * (4 * C31465 + C31074 * C31470);
    const double C248 = 3 * C31460 + C31074 * C31465 + C31470 * C31252;
    const double C353 = 3 * C31460 + C31074 * C31465 + C31470 * C31285;
    const double C470 = C31243 * (4 * C31465 + C31074 * C31470);
    const double C574 = C31073 * (4 * C31465 + C31074 * C31470);
    const double C680 = C31073 * C31243 * C31470;
    const double C6149 =
        (3 * C31623 + C31243 * C31631 +
         C31073 * (C31073 * (3 * C31629 +
                             C31243 * (2 * C31243 * C31119 +
                                       C31243 * (C31119 + C31143 * C31252))) +
                   C31651 * be) +
         C31073 * C31651 * be) /
        C30830;
    const double C6413 =
        (C31073 * (4 * C31631 +
                   C31243 * (3 * C31629 +
                             C31243 * (2 * C31243 * C31119 +
                                       C31243 * (C31119 + C31143 * C31252)))) +
         (4 * C31640 + C31243 * C31651) * be) /
        C30830;
    const double C6052 = 5 * (3 * C31554 + C31243 * C31640) +
                         C31243 * (4 * C31640 + C31243 * C31651);
    const double C6144 = 3 * C31554 + C31243 * C31640 + C31651 * C31285;
    const double C6412 = C31073 * (4 * C31640 + C31243 * C31651);
    const double C11722 = 5 * (3 * C31586 + C31073 * C31702) +
                          C31073 * (4 * C31702 + C31073 * C31724);
    const double C32243 = C32210 / C30830;
    const double C32265 = C32246 / C30836;
    const double C32266 = C32247 + C32214;
    const double C7403 = C32214 - C32014 / C30842;
    const double C32245 = C32211 / C30830;
    const double C30873 = C30869 / C30830;
    const double C30872 = C30868 / C30830;
    const double C994 = C990 * C812;
    const double C992 = C974 * C813;
    const double C15430 = C6062 * C15325;
    const double C15426 = C990 * C15325;
    const double C19080 = C8332 * C15325;
    const double C32279 = C32222 + C32271;
    const double C2649 = C32258 - (C31877 * C31860) / C30830;
    const double C105 = C32259 / C30836 - C31875 / C32229;
    const double C32272 = C32225 + C32258;
    const double C30987 = C30983 / C30830;
    const double C19941 = C19914 * C123;
    const double C19938 = C19914 * C133;
    const double C19934 = C19914 * C122;
    const double C19930 = C19914 * C131;
    const double C19926 = C19914 * C121;
    const double C19922 = C19914 * C129;
    const double C19918 = C19914 * C120;
    const double C20303 = C19914 * C242;
    const double C20299 = C19914 * C254;
    const double C20295 = C19914 * C241;
    const double C20291 = C19914 * C252;
    const double C20287 = C19914 * C240;
    const double C20457 = C19914 * C347;
    const double C20453 = C19914 * C359;
    const double C20449 = C19914 * C346;
    const double C20445 = C19914 * C357;
    const double C20441 = C19914 * C345;
    const double C20749 = C19914 * C246;
    const double C20746 = C19914 * C262;
    const double C20742 = C19914 * C245;
    const double C20935 = C19914 * C950;
    const double C20931 = C19914 * C942;
    const double C20927 = C19914 * C948;
    const double C20923 = C19914 * C941;
    const double C20916 = C19914 * C260;
    const double C20912 = C19914 * C244;
    const double C20908 = C19914 * C250;
    const double C20904 = C19914 * C239;
    const double C21518 = C19914 * C1122;
    const double C21514 = C19914 * C1111;
    const double C21510 = C19914 * C684;
    const double C21506 = C19914 * C677;
    const double C21728 = C19914 * C1120;
    const double C21724 = C19914 * C1110;
    const double C21720 = C19914 * C682;
    const double C21716 = C19914 * C676;
    const double C23326 = C19914 * C678;
    const double C26722 = C19914 * C954;
    const double C26718 = C19914 * C944;
    const double C27224 = C19914 * C1622;
    const double C27220 = C19914 * C1618;
    const double C30998 = C30992 / C30830;
    const double C23682 = C23660 - C23661;
    const double C25075 = C24066 - C24067;
    const double C25069 = C24067 - C24066;
    const double C25072 = C24060 - C24061;
    const double C25066 = C24061 - C24060;
    const double C30232 = C24711 - C24710;
    const double C30229 = C24705 - C24704;
    const double C13168 = C13144 * C2022;
    const double C13161 = C13144 * C2029;
    const double C13153 = C13144 * C2021;
    const double C13518 = C13144 * C2544;
    const double C13510 = C13144 * C2539;
    const double C13664 = C13144 * C2035;
    const double C13656 = C13144 * C2024;
    const double C14022 = C13144 * C6807;
    const double C14014 = C13144 * C6803;
    const double C14007 = C13144 * C2542;
    const double C13999 = C13144 * C2538;
    const double C14526 = C13144 * C6809;
    const double C14518 = C13144 * C6804;
    const double C21860 = C21836 * C2022;
    const double C21853 = C21836 * C2029;
    const double C21845 = C21836 * C2021;
    const double C22210 = C21836 * C2544;
    const double C22202 = C21836 * C2539;
    const double C22356 = C21836 * C2035;
    const double C22348 = C21836 * C2024;
    const double C27454 = C21836 * C6807;
    const double C27446 = C21836 * C6803;
    const double C27439 = C21836 * C2542;
    const double C27431 = C21836 * C2538;
    const double C27958 = C21836 * C6809;
    const double C27950 = C21836 * C6804;
    const double C32281 = C32249 + C32277;
    const double C13138 = C32268 - (C32056 * C32045) / C30830;
    const double C9303 = C9289 + C9290;
    const double C1798 = C1794 + C1795;
    const double C1797 = C1791 + C1792;
    const double C16575 = C16569 + C16570;
    const double C16573 = C16563 + C16564;
    const double C16574 = C16566 + C16567;
    const double C16572 = C16560 + C16561;
    const double C6688 = C6684 + C6685;
    const double C6687 = C6681 + C6682;
    const double C21859 = C32269 * C368;
    const double C21850 = C32269 * C380;
    const double C21842 = C32269 * C366;
    const double C22209 = C32269 * C1141;
    const double C22201 = C32269 * C1127;
    const double C22355 = C32269 * C2039;
    const double C22347 = C32269 * C2028;
    const double C27453 = C32269 * C1143;
    const double C27445 = C32269 * C1131;
    const double C27436 = C32269 * C1140;
    const double C27428 = C32269 * C1125;
    const double C27957 = C32269 * C2547;
    const double C27949 = C32269 * C2541;
    const double C11590 = C32269 / C30836 - C32054 / C32229;
    const double C13167 = C13139 * C368;
    const double C13158 = C13139 * C380;
    const double C13150 = C13139 * C366;
    const double C13517 = C13139 * C1141;
    const double C13509 = C13139 * C1127;
    const double C13663 = C13139 * C2039;
    const double C13655 = C13139 * C2028;
    const double C14021 = C13139 * C1143;
    const double C14013 = C13139 * C1131;
    const double C14004 = C13139 * C1140;
    const double C13996 = C13139 * C1125;
    const double C14525 = C13139 * C2547;
    const double C14517 = C13139 * C2541;
    const double C32278 = C32251 + C32268;
    const double C9964 = C9960 + C9961;
    const double C9963 = C9957 + C9958;
    const double C12635 = C12629 + C12630;
    const double C12633 = C12623 + C12624;
    const double C12634 = C12626 + C12627;
    const double C12632 = C12620 + C12621;
    const double C10936 = C10932 + C10933;
    const double C10935 = C10929 + C10930;
    const double C11898 =
        (4 * (2 * C31593 + C31073 * C31751 + C31594 * be) +
         C31073 * (3 * C31751 +
                   C31073 * (2 * C31743 +
                             C31073 * (C31131 +
                                       C31073 * (C31073 * C31074 * C31143 +
                                                 C31221 * be) +
                                       C31073 * C31221 * be) +
                             C31745 * be) +
                   C31750 * be) +
         (3 * C31594 + C31073 * C31750) * be) /
        C30830;
    const double C31211 = C31198 + C31210;
    const double C1142 = (C31243 * C31126 + be * C31073 * C31263 +
                          C31073 * (be * C31263 + C31073 * C31243 * C31150)) /
                         C30835;
    const double C1130 = (C31243 * C31196 + C31263 * C31285) / C30830;
    const double C31301 = C31298 + C31299;
    const double C11984 =
        (4 * (2 * C31668 + C31073 * C31768 + C31669 * be) +
         C31073 * (3 * C31768 +
                   C31073 * (2 * C31762 +
                             C31073 * (C31754 +
                                       C31073 * (C31073 * C31243 * C31143 +
                                                 C31757 * be) +
                                       C31073 * C31757 * be) +
                             C31763 * be) +
                   C31767 * be) +
         (3 * C31669 + C31073 * C31767) * be) /
        C30830;
    const double C31725 = C31706 + C31723;
    const double C1777 = C32241 * C381;
    const double C2390 = C32263 * C381;
    const double C3894 = C32053 * C381;
    const double C9943 = C32241 * C381;
    const double C10524 = C9915 * C381;
    const double C13175 = C13139 * C381;
    const double C20456 = C32053 * C381;
    const double C21867 = C32269 * C381;
    const double C23666 = C23639 * C381;
    const double C24247 = C32056 * C381;
    const double C1464 = C31966 * C693;
    const double C2216 = C32263 * C693;
    const double C3740 = C32053 * C693;
    const double C4928 = C32208 * C693;
    const double C10354 = C9915 * C693;
    const double C20302 = C32053 * C693;
    const double C23331 = C19912 * C693;
    const double C24077 = C32056 * C693;
    const double C1472 = C31966 * C1139;
    const double C4362 = C32053 * C1139;
    const double C20756 = C32053 * C1139;
    const double C2392 = C32241 * C2040;
    const double C10526 = C32241 * C2040;
    const double C13177 = C32254 * C2040;
    const double C21869 = C32254 * C2040;
    const double C24249 = C23639 * C2040;
    const double C163 = C113 * C135;
    const double C3383 = C3352 * C135;
    const double C19945 = C19914 * C135;
    const double C485 = C113 * C256;
    const double C3745 = C3352 * C256;
    const double C20307 = C19914 * C256;
    const double C825 = C113 * C264;
    const double C4359 = C3352 * C264;
    const double C20753 = C19914 * C264;
    const double C589 = C113 * C361;
    const double C1787 = C1752 * C361;
    const double C3378 = C3353 * C361;
    const double C3899 = C3352 * C361;
    const double C9953 = C9918 * C361;
    const double C19940 = C19915 * C361;
    const double C20461 = C19914 * C361;
    const double C1778 = C1753 * C369;
    const double C2389 = C1752 * C369;
    const double C3893 = C3353 * C369;
    const double C9944 = C9919 * C369;
    const double C10523 = C9918 * C369;
    const double C20455 = C19915 * C369;
    const double C23667 = C31016 * C369;
    const double C1463 = C113 * C686;
    const double C2215 = C1752 * C686;
    const double C3739 = C3353 * C686;
    const double C4927 = C3352 * C686;
    const double C10353 = C9918 * C686;
    const double C20301 = C19915 * C686;
    const double C23330 = C19914 * C686;
    const double C988 = C113 * C952;
    const double C1471 = C113 * C1124;
    const double C4361 = C3353 * C1124;
    const double C20755 = C19915 * C1124;
    const double C2391 = C1753 * C2031;
    const double C10525 = C9919 * C2031;
    const double C13176 = C13144 * C2031;
    const double C21868 = C21836 * C2031;
    const double C24248 = C31016 * C2031;
    const double C8339 = C8335 * C31874;
    const double C19083 = C8335 * C31874;
    const double C6080 = C6078 + C6079;
    const double C9307 = C9305 * C31864;
    const double C138 = (5 * (3 * C31107 + C31074 * C31127) +
                         C31074 * (4 * C31127 + C31074 * C31155)) /
                        C30830;
    const double C267 =
        (3 * C31107 + C31074 * C31127 + C31155 * C31252) / C30830;
    const double C372 =
        (3 * C31107 + C31074 * C31127 +
         C31073 * (C31073 * C31155 + C31470 * be) + C31073 * C31470 * be) /
        C30830;
    const double C471 = (C31243 * (4 * C31127 + C31074 * C31155)) / C30830;
    const double C575 = (C31073 * (4 * C31127 + C31074 * C31155) +
                         (4 * C31465 + C31074 * C31470) * be) /
                        C30830;
    const double C689 =
        (C31073 * C31243 * C31155 + C31243 * C31470 * be) / C30830;
    const double C146 =
        (5 * (3 * C31126 + ae * C31127 + C31074 * C31154) +
         ae * (4 * C31127 + C31074 * C31155) +
         C31074 *
             (4 * C31154 + ae * C31155 +
              C31074 *
                  (3 * C31150 + ae * C31151 +
                   C31074 * (2 * C31146 + ae * C31147 +
                             C31074 * (C31142 + ae * C31074 * C31143 +
                                       C31074 * (ae * C31143 +
                                                 C31074 * std::pow(C31076, 8) *
                                                     bs[8] * C31085)))))) /
        C30835;
    const double C273 =
        ((yP - yQ) * (3 * C31126 + ae * C31127 + C31074 * C31154)) / C30835;
    const double C277 = (2 * C31106 + ae * C31107 + C31074 * C31126 +
                         C31154 * std::pow(yP - yQ, 2)) /
                        C30835;
    const double C278 =
        (3 * C31126 + ae * C31127 + C31074 * C31154 +
         (3 * C31150 + ae * C31151 +
          C31074 *
              (2 * C31146 + ae * C31147 +
               C31074 * (C31142 + ae * C31074 * C31143 +
                         C31074 * (ae * C31143 + C31074 * std::pow(C31076, 8) *
                                                     bs[8] * C31085)))) *
             std::pow(yP - yQ, 2)) /
        C30835;
    const double C378 =
        (be * (3 * (C31174 + C31074 * C31184 + C31178 * ae) +
               C31074 * (2 * C31184 +
                         C31074 * (C31180 +
                                   C31074 * (C31074 * C31111 * C31112 * C31169 +
                                             C31179 * ae) +
                                   C31074 * C31179 * ae) +
                         C31183 * ae) +
               (2 * C31178 + C31074 * C31183) * ae) +
         C31073 * (3 * C31126 + ae * C31127 + C31074 * C31154)) /
        C30835;
    const double C473 =
        ((yP - yQ) *
         (4 * C31154 + ae * C31155 +
          C31074 * (3 * C31150 + ae * C31151 +
                    C31074 * (2 * C31146 + ae * C31147 +
                              C31074 * (C31142 + ae * C31074 * C31143 +
                                        C31074 * (ae * C31143 +
                                                  C31074 * std::pow(C31076, 8) *
                                                      bs[8] * C31085)))))) /
        C30835;
    const double C1295 =
        (2 * C31243 * C31154 +
         C31243 * (C31154 + (2 * C31146 + ae * C31147 +
                             C31074 * (C31142 + ae * C31074 * C31143 +
                                       C31074 * (ae * C31143 +
                                                 C31074 * std::pow(C31076, 8) *
                                                     bs[8] * C31085))) *
                                C31252)) /
        C30835;
    const double C31235 = C31215 + C31234;
    const double C31272 = C31209 + C31271;
    const double C31302 = C31209 + C31300;
    const double C2549 =
        (2 * (be * C31263 + C31073 * C31313) + be * (C31263 + C31314 * C31285) +
         C31073 * (C31313 + be * C31073 * C31314 +
                   C31073 * (be * C31314 +
                             C31073 * C31243 *
                                 (C31142 + ae * C31074 * C31143 +
                                  C31074 * (ae * C31143 +
                                            C31074 * std::pow(C31076, 8) *
                                                bs[8] * C31085))))) /
        C30835;
    const double C2546 =
        (2 * C31073 * C31263 + C31073 * (C31263 + C31314 * C31285)) / C30830;
    const double C6964 =
        (2 * C31310 + C31243 * C31344 + be * C31073 * C31367 +
         C31073 * (be * C31367 +
                   C31073 * (2 * C31243 * C31146 +
                             C31243 * (C31146 + (ae * C31143 +
                                                 C31074 * std::pow(C31076, 8) *
                                                     bs[8] * C31085) *
                                                    C31252)))) /
        C30835;
    const double C6238 = (4 * (2 * C31261 + C31243 * C31269) +
                          C31243 * (3 * C31269 + C31243 * C31367)) /
                         C30830;
    const double C6328 = (C31073 * (3 * C31269 + C31243 * C31367)) / C30830;
    const double C6963 =
        (2 * C31261 + C31243 * C31269 + C31367 * C31285) / C30830;
    const double C11900 =
        (4 * (2 * C31294 + be * C31295 + C31073 * C31427) +
         be * (3 * C31295 + C31073 * C31428) +
         C31073 *
             (3 * C31427 + be * C31428 +
              C31073 *
                  (2 * C31421 + be * C31423 +
                   C31073 * (C31146 + be * C31073 * C31226 +
                             C31073 * (be * C31226 +
                                       C31073 * (ae * C31143 +
                                                 C31074 * std::pow(C31076, 8) *
                                                     bs[8] * C31085)))))) /
        C30835;
    const double C11899 = (4 * (2 * C31290 + C31073 * C31295) +
                           C31073 * (3 * C31295 + C31073 * C31428)) /
                          C30830;
    const double C6153 =
        (3 * C31317 + C31243 * C31324 + be * C31073 * C31341 +
         C31073 * (be * C31341 +
                   C31073 * (3 * C31322 +
                             C31243 * (2 * C31243 * C31142 +
                                       C31243 * (C31142 + std::pow(C31076, 8) *
                                                              bs[8] * C31085 *
                                                              C31252))))) /
        C30835;
    const double C6415 =
        (be * (4 * C31331 + C31243 * C31341) +
         C31073 * (4 * C31324 +
                   C31243 * (3 * C31322 +
                             C31243 * (2 * C31243 * C31142 +
                                       C31243 * (C31142 + std::pow(C31076, 8) *
                                                              bs[8] * C31085 *
                                                              C31252))))) /
        C30835;
    const double C6056 = (5 * (3 * C31266 + C31243 * C31331) +
                          C31243 * (4 * C31331 + C31243 * C31341)) /
                         C30830;
    const double C6150 =
        (3 * C31266 + C31243 * C31331 + C31341 * C31285) / C30830;
    const double C6414 = (C31073 * (4 * C31331 + C31243 * C31341)) / C30830;
    const double C11728 =
        (5 * (3 * C31382 + be * C31383 + C31073 * C31404) +
         be * (4 * C31383 + C31073 * C31405) +
         C31073 *
             (4 * C31404 + be * C31405 +
              C31073 *
                  (3 * C31400 + be * C31401 +
                   C31073 * (2 * C31394 + be * C31396 +
                             C31073 * (C31142 + be * C31073 * C31219 +
                                       C31073 * (be * C31219 +
                                                 C31073 * std::pow(C31076, 8) *
                                                     bs[8] * C31085)))))) /
        C30835;
    const double C11726 = (5 * (3 * C31288 + C31073 * C31383) +
                           C31073 * (4 * C31383 + C31073 * C31405)) /
                          C30830;
    const double C32280 = C32243 + C32275;
    const double C7402 = C32265 - (C32016 * C32005) / C30830;
    const double C5986 = C32266 / C30836 - C32014 / C32229;
    const double C32276 = C32245 + C32265;
    const double C30875 = C30872 - C30851;
    const double C996 = C994 + C995;
    const double C15435 = C15430 + C15431;
    const double C15434 = C15426 + C15427;
    const double C19084 = C19080 + C19081;
    const double C102 =
        (C32270 + 2 * C31869) / C30836 - (C32279 * C31860) / C30830;
    const double C103 =
        (C32257 + 2 * C31877 + C32279) / C30836 - (C32272 * C31860) / C30830;
    const double C104 = (C32227 + C31874 / C30830 + C32272) / C30836 -
                        (C32259 * C31860) / C30830;
    const double C30991 = C30987 - C30968;
    const double C19955 = C19937 - C19938;
    const double C19953 = C19933 - C19934;
    const double C19951 = C19929 - C19930;
    const double C19949 = C19925 - C19926;
    const double C22636 = C20300 - C20299;
    const double C23128 = C20299 - C20300;
    const double C22634 = C20296 - C20295;
    const double C23126 = C20295 - C20296;
    const double C21300 = C20291 - C20292;
    const double C21296 = C20292 - C20291;
    const double C21298 = C20287 - C20288;
    const double C21294 = C20288 - C20287;
    const double C20921 = C20745 - C20746;
    const double C21304 = C20746 - C20745;
    const double C20919 = C20741 - C20742;
    const double C21302 = C20742 - C20741;
    const double C26716 = C20928 - C20927;
    const double C26714 = C20924 - C20923;
    const double C20941 = C20915 - C20916;
    const double C20939 = C20911 - C20912;
    const double C21863 = C32281 * C142;
    const double C21855 = C32281 * C130;
    const double C21846 = C32281 * C141;
    const double C21838 = C32281 * C128;
    const double C22205 = C32281 * C270;
    const double C22197 = C32281 * C251;
    const double C22351 = C32281 * C375;
    const double C22343 = C32281 * C356;
    const double C27449 = C32281 * C274;
    const double C27441 = C32281 * C259;
    const double C27432 = C32281 * C269;
    const double C27424 = C32281 * C249;
    const double C27953 = C32281 * C691;
    const double C27945 = C32281 * C681;
    const double C11587 =
        (C32274 + 2 * C32049) / C30836 - (C32281 * C32045) / C30830;
    const double C13173 = C13138 * C376;
    const double C13165 = C13138 * C358;
    const double C13156 = C13138 * C375;
    const double C13148 = C13138 * C356;
    const double C13515 = C13138 * C692;
    const double C13507 = C13138 * C683;
    const double C13661 = C13138 * C380;
    const double C13653 = C13138 * C366;
    const double C14019 = C13138 * C1137;
    const double C14011 = C13138 * C1119;
    const double C14002 = C13138 * C691;
    const double C13994 = C13138 * C681;
    const double C14523 = C13138 * C1140;
    const double C14515 = C13138 * C1125;
    const double C1799 = C1797 + C1793;
    const double C16579 = C16575 + C16571;
    const double C16577 = C16573 + C16565;
    const double C16578 = C16574 + C16568;
    const double C16576 = C16572 + C16562;
    const double C6690 = C6688 + C6686;
    const double C6689 = C6687 + C6683;
    const double C21865 = C32278 * C376;
    const double C21857 = C32278 * C358;
    const double C21848 = C32278 * C375;
    const double C21840 = C32278 * C356;
    const double C22207 = C32278 * C692;
    const double C22199 = C32278 * C683;
    const double C22353 = C32278 * C380;
    const double C22345 = C32278 * C366;
    const double C27451 = C32278 * C1137;
    const double C27443 = C32278 * C1119;
    const double C27434 = C32278 * C691;
    const double C27426 = C32278 * C681;
    const double C27955 = C32278 * C1140;
    const double C27947 = C32278 * C1125;
    const double C11588 =
        (C32263 + 2 * C32056 + C32281) / C30836 - (C32278 * C32045) / C30830;
    const double C11589 = (C32241 + C32053 / C30830 + C32278) / C30836 -
                          (C32269 * C32045) / C30830;
    const double C9965 = C9963 + C9959;
    const double C12639 = C12635 + C12631;
    const double C12637 = C12633 + C12625;
    const double C12638 = C12634 + C12628;
    const double C12636 = C12632 + C12622;
    const double C10938 = C10936 + C10934;
    const double C10937 = C10935 + C10931;
    const double C31212 = C31211 + C31202;
    const double C2218 = C32241 * C1142;
    const double C4930 = C32053 * C1142;
    const double C10356 = C32241 * C1142;
    const double C23333 = C32053 * C1142;
    const double C24079 = C23639 * C1142;
    const double C2217 = C1753 * C1130;
    const double C4929 = C3353 * C1130;
    const double C10355 = C9919 * C1130;
    const double C23332 = C19915 * C1130;
    const double C24078 = C31016 * C1130;
    const double C31726 = C31725 + C31710;
    const double C173 = C162 - C163;
    const double C2660 = C486 - C485;
    const double C2988 = C485 - C486;
    const double C831 = C824 - C825;
    const double C1306 = C825 - C824;
    const double C3394 = C3377 - C3378;
    const double C19956 = C19939 - C19940;
    const double C1796 = C1777 - C1778;
    const double C9962 = C9943 - C9944;
    const double C23685 = C23666 - C23667;
    const double C4182 = C3740 - C3739;
    const double C4714 = C3739 - C3740;
    const double C22637 = C20302 - C20301;
    const double C23129 = C20301 - C20302;
    const double C9308 = C9306 + C9307;
    const double C490 = C31966 * C273;
    const double C829 = C31966 * C277;
    const double C594 = C31966 * C378;
    const double C3386 = C32053 * C378;
    const double C19948 = C32053 * C378;
    const double C31236 = C31235 + C31227;
    const double C1145 =
        (C31126 + C31150 * C31252 + be * C31073 * C31272 +
         C31073 * (be * C31272 +
                   C31073 * (C31150 + (C31142 + ae * C31074 * C31143 +
                                       C31074 * (ae * C31143 +
                                                 C31074 * std::pow(C31076, 8) *
                                                     bs[8] * C31085)) *
                                          C31252))) /
        C30835;
    const double C1629 =
        (be * (2 * C31263 + C31243 * C31272) +
         C31073 * (2 * C31243 * C31150 +
                   C31243 * (C31150 + (C31142 + ae * C31074 * C31143 +
                                       C31074 * (ae * C31143 +
                                                 C31074 * std::pow(C31076, 8) *
                                                     bs[8] * C31085)) *
                                          C31252))) /
        C30835;
    const double C958 = (3 * (C31196 + C31209 * C31252) +
                         C31243 * (2 * C31263 + C31243 * C31272)) /
                        C30830;
    const double C1136 = (C31196 + C31209 * C31252 + C31272 * C31285) / C30830;
    const double C1626 = (C31073 * (2 * C31263 + C31243 * C31272)) / C30830;
    const double C2043 =
        (3 * (C31126 + be * C31297 + C31073 * C31301) +
         be * (2 * C31297 + C31073 * C31302) +
         C31073 *
             (2 * C31301 + be * C31302 +
              C31073 *
                  (C31150 + be * C31073 * C31233 +
                   C31073 * (be * C31233 +
                             C31073 * (C31142 + ae * C31074 * C31143 +
                                       C31074 * (ae * C31143 +
                                                 C31074 * std::pow(C31076, 8) *
                                                     bs[8] * C31085)))))) /
        C30835;
    const double C2037 = (3 * (C31196 + C31209 * C31285) +
                          C31073 * (2 * C31297 + C31073 * C31302)) /
                         C30830;
    const double C5983 =
        (C32273 + 2 * C32009) / C30836 - (C32280 * C32005) / C30830;
    const double C5984 =
        (C32261 + 2 * C32016 + C32280) / C30836 - (C32276 * C32005) / C30830;
    const double C5985 = (C32238 + C32013 / C30830 + C32276) / C30836 -
                         (C32266 * C32005) / C30830;
    const double C7510 = C6062 * C30875;
    const double C7506 = C990 * C30875;
    const double C8336 = C8332 * C30875;
    const double C30878 = C30875 / C30836;
    const double C30877 = C30828 * C30875;
    const double C997 = C996 + C992;
    const double C15437 = C15435 + C15432;
    const double C15436 = C15434 + C15428;
    const double C19085 = C19084 + C19082;
    const double C30997 = C30991 / C30836;
    const double C30996 = C30913 * C30991;
    const double C19959 = C19953 + C19954;
    const double C19958 = C19951 + C19952;
    const double C19957 = C19949 + C19950;
    const double C22638 = C22634 + C22635;
    const double C23130 = C23126 + C23127;
    const double C21309 = C21300 + C21301;
    const double C21307 = C21296 + C21297;
    const double C21308 = C21298 + C21299;
    const double C21306 = C21294 + C21295;
    const double C20944 = C20921 + C20922;
    const double C21311 = C21304 + C21305;
    const double C20943 = C20919 + C20920;
    const double C21310 = C21302 + C21303;
    const double C26728 = C26716 + C26717;
    const double C26727 = C26714 + C26715;
    const double C20946 = C20941 + C20942;
    const double C20945 = C20939 + C20940;
    const double C6692 = C6690 * C31864;
    const double C6691 = C6689 * C5988;
    const double C10940 = C10938 * C31864;
    const double C10939 = C10937 * C5988;
    const double C382 =
        (2 * C31106 + ae * C31107 + C31074 * C31126 + be * C31073 * C31212 +
         C31073 * (be * C31212 + C31073 * C31154)) /
        C30835;
    const double C694 =
        (be * C31243 * C31212 + C31073 * C31243 * C31154) / C30835;
    const double C137 = (4 * (2 * C31191 + C31074 * C31196 + C31460 * ae) +
                         C31074 * (3 * C31196 + C31074 * C31212 + C31465 * ae) +
                         (3 * C31460 + C31074 * C31465) * ae) /
                        C30830;
    const double C258 =
        (C31243 * (3 * C31196 + C31074 * C31212 + C31465 * ae)) / C30830;
    const double C266 =
        (2 * C31191 + C31074 * C31196 + C31460 * ae + C31212 * C31252) / C30830;
    const double C363 =
        (C31073 * (3 * C31196 + C31074 * C31212 + C31465 * ae)) / C30830;
    const double C371 =
        (2 * C31191 + C31074 * C31196 + C31460 * ae + C31212 * C31285) / C30830;
    const double C688 = (C31073 * C31243 * C31212) / C30830;
    const double C11725 =
        (5 * (3 * C31703 + C31073 * C31726 + C31702 * be) +
         C31073 * (4 * C31726 +
                   C31073 * (3 * C31721 +
                             C31073 * (2 * C31713 +
                                       C31073 * (C31119 +
                                                 C31073 * (C31073 * C31143 +
                                                           C31217 * be) +
                                                 C31073 * C31217 * be) +
                                       C31715 * be) +
                             C31720 * be) +
                   C31724 * be) +
         (4 * C31702 + C31073 * C31724) * be) /
        C30830;
    const double C977 = C831 * C32227;
    const double C5367 = C831 * C32227;
    const double C17214 = C831 * C17091;
    const double C3398 = C3393 + C3394;
    const double C19960 = C19955 + C19956;
    const double C1800 = C1798 + C1796;
    const double C9966 = C9964 + C9962;
    const double C4184 = C4181 + C4182;
    const double C4720 = C4713 + C4714;
    const double C22639 = C22636 + C22637;
    const double C23131 = C23128 + C23129;
    const double C31237 = C31074 * C31236;
    const double C31304 = C31243 * C31236;
    const double C1455 =
        (be * (C31212 + C31236 * C31252) +
         C31073 * (C31154 + (2 * C31146 + ae * C31147 +
                             C31074 * (C31142 + ae * C31074 * C31143 +
                                       C31074 * (ae * C31143 +
                                                 C31074 * std::pow(C31076, 8) *
                                                     bs[8] * C31085))) *
                                C31252)) /
        C30835;
    const double C2367 =
        (2 * (be * C31212 + C31073 * C31154) + be * (C31212 + C31236 * C31285) +
         C31073 *
             (C31154 + be * C31073 * C31236 +
              C31073 *
                  (be * C31236 +
                   C31073 * (2 * C31146 + ae * C31147 +
                             C31074 * (C31142 + ae * C31074 * C31143 +
                                       C31074 * (ae * C31143 +
                                                 C31074 * std::pow(C31076, 8) *
                                                     bs[8] * C31085)))))) /
        C30835;
    const double C1294 =
        (2 * C31243 * C31212 + C31243 * (C31212 + C31236 * C31252)) / C30830;
    const double C1454 = (C31073 * (C31212 + C31236 * C31252)) / C30830;
    const double C2366 =
        (2 * C31073 * C31212 + C31073 * (C31212 + C31236 * C31285)) / C30830;
    const double C7515 = C7510 + C7511;
    const double C7514 = C7506 + C7507;
    const double C8340 = C8336 + C8337;
    const double C30881 = C30878 - C30873;
    const double C5249 = C30878 + (C30864 * ae) / C30830;
    const double C30880 = C30877 + C32188;
    const double C998 = C997 + C993;
    const double C15439 = C15437 + C15433;
    const double C15438 = C15436 + C15429;
    const double C19086 = C19085 + C19083;
    const double C31002 = C30997 - C30998;
    const double C31001 = C30996 + C32208;
    const double C20948 = C20944 * C31874;
    const double C28255 = C20944 * C31874;
    const double C20947 = C20943 * C15326;
    const double C28254 = C20943 * C30856;
    const double C26730 = C26728 * C31864;
    const double C26729 = C26727 * C5988;
    const double C20950 = C20946 * C15319;
    const double C26713 = C20946 * C31864;
    const double C28253 = C20946 * C32188;
    const double C20949 = C20945 * C15325;
    const double C26712 = C20945 * C5988;
    const double C28252 = C20945 * C30875;
    const double C6693 = C6691 + C6692;
    const double C10941 = C10939 + C10940;
    const double C1790 = C32241 * C382;
    const double C3902 = C32053 * C382;
    const double C9956 = C32241 * C382;
    const double C20464 = C32053 * C382;
    const double C23679 = C23639 * C382;
    const double C3122 = C31966 * C694;
    const double C3748 = C32053 * C694;
    const double C20310 = C32053 * C694;
    const double C166 = C113 * C137;
    const double C489 = C113 * C258;
    const double C828 = C113 * C266;
    const double C593 = C113 * C363;
    const double C3385 = C3353 * C363;
    const double C19947 = C19915 * C363;
    const double C1789 = C1753 * C371;
    const double C3901 = C3353 * C371;
    const double C9955 = C9919 * C371;
    const double C20463 = C19915 * C371;
    const double C23678 = C31016 * C371;
    const double C3121 = C113 * C688;
    const double C3747 = C3353 * C688;
    const double C20309 = C19915 * C688;
    const double C31238 = C31214 + C31237;
    const double C2193 =
        (C31243 * C31154 + be * C31073 * C31304 +
         C31073 * (be * C31304 +
                   C31073 * C31243 *
                       (2 * C31146 + ae * C31147 +
                        C31074 * (C31142 + ae * C31074 * C31143 +
                                  C31074 * (ae * C31143 +
                                            C31074 * std::pow(C31076, 8) *
                                                bs[8] * C31085))))) /
        C30835;
    const double C2192 = (C31243 * C31212 + C31304 * C31285) / C30830;
    const double C7519 = C7515 + C7516;
    const double C7518 = C7514 + C7508;
    const double C8341 = C8340 + C8338;
    const double C17211 = C974 * C30881;
    const double C117 =
        (C30881 / C30836 + ((C30828 * C30891 + C17091) * ae) / C30830) /
            C30836 -
        ((C30828 * (C30891 / C30836 + (0 * ae) / C30830) + C32242) * be) /
            C30830;
    const double C2656 =
        C30881 / C30836 - ((C30828 * C30891 + C17091) * be) / C30830;
    const double C14633 =
        C30881 / C30836 + ((C30828 * C30891 + C17091) * ae) / C30830;
    const double C5364 = C974 * C5249;
    const double C30882 = C30880 * be;
    const double C5248 = C30867 + (C30880 * ae) / C30830 + C30856;
    const double C999 = C998 + C976;
    const double C23676 = C31002 * C361;
    const double C23670 = C31002 * C347;
    const double C23665 = C31002 * C359;
    const double C23659 = C31002 * C346;
    const double C23653 = C31002 * C357;
    const double C23647 = C31002 * C345;
    const double C24076 = C31002 * C686;
    const double C24070 = C31002 * C678;
    const double C24064 = C31002 * C684;
    const double C24058 = C31002 * C677;
    const double C24246 = C31002 * C369;
    const double C24240 = C31002 * C351;
    const double C24234 = C31002 * C367;
    const double C24228 = C31002 * C350;
    const double C24720 = C31002 * C1122;
    const double C24714 = C31002 * C1111;
    const double C24708 = C31002 * C1120;
    const double C24702 = C31002 * C1110;
    const double C24697 = C31002 * C682;
    const double C24691 = C31002 * C676;
    const double C25286 = C31002 * C1128;
    const double C25280 = C31002 * C1114;
    const double C25492 = C31002 * C1126;
    const double C25486 = C31002 * C1113;
    const double C30241 = C31002 * C1622;
    const double C30235 = C31002 * C1618;
    const double C30808 = C31002 * C1132;
    const double C30802 = C31002 * C1116;
    const double C11595 =
        (C31002 / C30836 + ((C30913 * C31016 + C23639) * ae) / C30830) /
            C30836 -
        ((C30913 * (C31016 / C30836 + (0 * ae) / C30830) + C32254) * be) /
            C30830;
    const double C13143 =
        C31002 / C30836 - ((C30913 * C31016 + C23639) * be) / C30830;
    const double C21835 =
        C31002 / C30836 + ((C30913 * C31016 + C23639) * ae) / C30830;
    const double C31005 = C31001 * be;
    const double C26731 = C26729 + C26730;
    const double C20951 = C20949 + C20950;
    const double C26726 = C26712 + C26713;
    const double C28256 = C28252 + C28253;
    const double C31239 = C31238 + C31232;
    const double C7521 = C7519 + C7517;
    const double C7520 = C7518 + C7509;
    const double C8342 = C8341 + C8339;
    const double C30883 = C30882 / C30830;
    const double C5362 = C990 * C5248;
    const double C1000 = C999 + C977;
    const double C23684 = C23664 - C23665;
    const double C23681 = C23658 - C23659;
    const double C25074 = C24064 - C24065;
    const double C25068 = C24065 - C24064;
    const double C25071 = C24058 - C24059;
    const double C25065 = C24059 - C24058;
    const double C30231 = C24709 - C24708;
    const double C30228 = C24703 - C24702;
    const double C13174 = C13143 * C369;
    const double C13166 = C13143 * C351;
    const double C13159 = C13143 * C367;
    const double C13151 = C13143 * C350;
    const double C13516 = C13143 * C1128;
    const double C13508 = C13143 * C1114;
    const double C13662 = C13143 * C2029;
    const double C13654 = C13143 * C2021;
    const double C14020 = C13143 * C1132;
    const double C14012 = C13143 * C1116;
    const double C14005 = C13143 * C1126;
    const double C13997 = C13143 * C1113;
    const double C14524 = C13143 * C2542;
    const double C14516 = C13143 * C2538;
    const double C21866 = C21835 * C369;
    const double C21858 = C21835 * C351;
    const double C21851 = C21835 * C367;
    const double C21843 = C21835 * C350;
    const double C22208 = C21835 * C1128;
    const double C22200 = C21835 * C1114;
    const double C22354 = C21835 * C2029;
    const double C22346 = C21835 * C2021;
    const double C27452 = C21835 * C1132;
    const double C27444 = C21835 * C1116;
    const double C27437 = C21835 * C1126;
    const double C27429 = C21835 * C1113;
    const double C27956 = C21835 * C2542;
    const double C27948 = C21835 * C2538;
    const double C31007 = C31005 / C30830;
    const double C20952 = C20951 + C20947;
    const double C28257 = C28256 + C28254;
    const double C383 =
        (3 * C31126 + ae * C31127 + C31074 * C31154 + be * C31073 * C31239 +
         C31073 *
             (be * C31239 +
              C31073 *
                  (3 * C31150 + ae * C31151 +
                   C31074 * (2 * C31146 + ae * C31147 +
                             C31074 * (C31142 + ae * C31074 * C31143 +
                                       C31074 * (ae * C31143 +
                                                 C31074 * std::pow(C31076, 8) *
                                                     bs[8] * C31085)))))) /
        C30835;
    const double C577 =
        (be * (4 * C31212 + C31074 * C31239 +
               (3 * C31183 + C31074 * C31230) * ae) +
         C31073 *
             (4 * C31154 + ae * C31155 +
              C31074 *
                  (3 * C31150 + ae * C31151 +
                   C31074 * (2 * C31146 + ae * C31147 +
                             C31074 * (C31142 + ae * C31074 * C31143 +
                                       C31074 * (ae * C31143 +
                                                 C31074 * std::pow(C31076, 8) *
                                                     bs[8] * C31085)))))) /
        C30835;
    const double C695 =
        (be * C31243 * C31239 +
         C31073 * C31243 *
             (3 * C31150 + ae * C31151 +
              C31074 * (2 * C31146 + ae * C31147 +
                        C31074 * (C31142 + ae * C31074 * C31143 +
                                  C31074 * (ae * C31143 +
                                            C31074 * std::pow(C31076, 8) *
                                                bs[8] * C31085))))) /
        C30835;
    const double C139 = (5 * (3 * C31196 + C31074 * C31212 + C31465 * ae) +
                         C31074 * (4 * C31212 + C31074 * C31239 + C31470 * ae) +
                         (4 * C31465 + C31074 * C31470) * ae) /
                        C30830;
    const double C268 =
        (3 * C31196 + C31074 * C31212 + C31465 * ae + C31239 * C31252) / C30830;
    const double C373 =
        (3 * C31196 + C31074 * C31212 + C31465 * ae + C31239 * C31285) / C30830;
    const double C472 =
        (C31243 * (4 * C31212 + C31074 * C31239 + C31470 * ae)) / C30830;
    const double C576 =
        (C31073 * (4 * C31212 + C31074 * C31239 + C31470 * ae)) / C30830;
    const double C690 = (C31073 * C31243 * C31239) / C30830;
    const double C30884 = C30867 - C30883;
    const double C5368 = C5362 + C5363;
    const double C31009 = C30995 - C31007;
    const double C20953 = C20952 + C20948;
    const double C28258 = C28257 + C28255;
    const double C30885 = C30884 + C30856;
    const double C5369 = C5368 + C5364;
    const double C31010 = C31009 + C30980;
    const double C17209 = C990 * C30885;
    const double C114 =
        (((((0 - (C30828 * C30829) / C30830) * ae) / C30830 -
           (0 * be) / C30842 + (2 * C30831) / C30830) /
              C30836 -
          ((C30828 * C30865 + 0) * be) / C30830 + C30848 - C30858) /
             C30836 +
         ((C30828 * C30879 + 0) * ae) / C30830) /
            C30836 -
        ((C30828 * (C30879 / C30836 +
                    ((C30828 * C30885 + C31869) * ae) / C30830 + C30881) +
          C32279) *
         be) /
            C30830 +
        C30885 / C30836 + ((C30828 * C30881 + C31877) * ae) / C30830 +
        2 * (C30856 / C30836 - (0 * be) / C30830);
    const double C115 =
        (C30879 / C30836 + ((C30828 * C30885 + C31869) * ae) / C30830 +
         C30881) /
            C30836 -
        ((C30828 * (C30885 / C30836 +
                    ((C30828 * C30881 + C31877) * ae) / C30830 + 2 * C30891) +
          C32272) *
         be) /
            C30830 +
        2 * (C30881 / C30836 + ((C30828 * C30891 + C17091) * ae) / C30830);
    const double C116 =
        (C30885 / C30836 + ((C30828 * C30881 + C31877) * ae) / C30830 +
         2 * C30891) /
            C30836 -
        ((C30828 *
              (C30881 / C30836 + ((C30828 * C30891 + C17091) * ae) / C30830) +
          C32259) *
         be) /
            C30830 +
        3 * (C30891 / C30836 + (0 * ae) / C30830);
    const double C2654 =
        C30879 / C30836 - ((C30828 * C30885 + C31869) * be) / C30830 + C30881;
    const double C2655 = C30885 / C30836 -
                         ((C30828 * C30881 + C31877) * be) / C30830 +
                         2 * C30891;
    const double C14631 =
        C30879 / C30836 + ((C30828 * C30885 + C31869) * ae) / C30830 + C30881;
    const double C14632 = C30885 / C30836 +
                          ((C30828 * C30881 + C31877) * ae) / C30830 +
                          2 * C30891;
    const double C5370 = C5369 + C5365;
    const double C23674 = C31010 * C133;
    const double C23668 = C31010 * C122;
    const double C23663 = C31010 * C131;
    const double C23657 = C31010 * C121;
    const double C23651 = C31010 * C129;
    const double C23645 = C31010 * C120;
    const double C24074 = C31010 * C254;
    const double C24068 = C31010 * C241;
    const double C24062 = C31010 * C252;
    const double C24056 = C31010 * C240;
    const double C24244 = C31010 * C359;
    const double C24238 = C31010 * C346;
    const double C24232 = C31010 * C357;
    const double C24226 = C31010 * C345;
    const double C24718 = C31010 * C262;
    const double C24712 = C31010 * C245;
    const double C24706 = C31010 * C260;
    const double C24700 = C31010 * C244;
    const double C24695 = C31010 * C250;
    const double C24689 = C31010 * C239;
    const double C25284 = C31010 * C684;
    const double C25278 = C31010 * C677;
    const double C25490 = C31010 * C682;
    const double C25484 = C31010 * C676;
    const double C30239 = C31010 * C948;
    const double C30233 = C31010 * C941;
    const double C30806 = C31010 * C1120;
    const double C30800 = C31010 * C1110;
    const double C11592 =
        (((((0 - (C30913 * C30963) / C30830) * ae) / C30830 -
           (0 * be) / C30842 + (2 * C30964) / C30830) /
              C30836 -
          ((C30913 * C30999 + 0) * be) / C30830 + C30973 - C30986) /
             C30836 +
         ((C30913 * C31008 + 0) * ae) / C30830) /
            C30836 -
        ((C30913 * (C31008 / C30836 +
                    ((C30913 * C31010 + C32049) * ae) / C30830 + C31002) +
          C32281) *
         be) /
            C30830 +
        C31010 / C30836 + ((C30913 * C31002 + C32056) * ae) / C30830 +
        2 * (C30980 / C30836 - (0 * be) / C30830);
    const double C11593 =
        (C31008 / C30836 + ((C30913 * C31010 + C32049) * ae) / C30830 +
         C31002) /
            C30836 -
        ((C30913 * (C31010 / C30836 +
                    ((C30913 * C31002 + C32056) * ae) / C30830 + 2 * C31016) +
          C32278) *
         be) /
            C30830 +
        2 * (C31002 / C30836 + ((C30913 * C31016 + C23639) * ae) / C30830);
    const double C11594 =
        (C31010 / C30836 + ((C30913 * C31002 + C32056) * ae) / C30830 +
         2 * C31016) /
            C30836 -
        ((C30913 *
              (C31002 / C30836 + ((C30913 * C31016 + C23639) * ae) / C30830) +
          C32269) *
         be) /
            C30830 +
        3 * (C31016 / C30836 + (0 * ae) / C30830);
    const double C13141 =
        C31008 / C30836 - ((C30913 * C31010 + C32049) * be) / C30830 + C31002;
    const double C13142 = C31010 / C30836 -
                          ((C30913 * C31002 + C32056) * be) / C30830 +
                          2 * C31016;
    const double C21833 =
        C31008 / C30836 + ((C30913 * C31010 + C32049) * ae) / C30830 + C31002;
    const double C21834 = C31010 / C30836 +
                          ((C30913 * C31002 + C32056) * ae) / C30830 +
                          2 * C31016;
    const double C17215 = C17209 + C17210;
    const double C5371 = C5370 + C5366;
    const double C23683 = C23662 - C23663;
    const double C23680 = C23656 - C23657;
    const double C25073 = C24062 - C24063;
    const double C25067 = C24063 - C24062;
    const double C25070 = C24056 - C24057;
    const double C25064 = C24057 - C24056;
    const double C30230 = C24707 - C24706;
    const double C30227 = C24701 - C24700;
    const double C13170 = C13141 * C131;
    const double C13162 = C13141 * C121;
    const double C13155 = C13141 * C129;
    const double C13147 = C13141 * C120;
    const double C13512 = C13141 * C252;
    const double C13504 = C13141 * C240;
    const double C13658 = C13141 * C357;
    const double C13650 = C13141 * C345;
    const double C14016 = C13141 * C260;
    const double C14008 = C13141 * C244;
    const double C14001 = C13141 * C250;
    const double C13993 = C13141 * C239;
    const double C14520 = C13141 * C682;
    const double C14512 = C13141 * C676;
    const double C13172 = C13142 * C359;
    const double C13164 = C13142 * C346;
    const double C13157 = C13142 * C357;
    const double C13149 = C13142 * C345;
    const double C13514 = C13142 * C684;
    const double C13506 = C13142 * C677;
    const double C13660 = C13142 * C367;
    const double C13652 = C13142 * C350;
    const double C14018 = C13142 * C1120;
    const double C14010 = C13142 * C1110;
    const double C14003 = C13142 * C682;
    const double C13995 = C13142 * C676;
    const double C14522 = C13142 * C1126;
    const double C14514 = C13142 * C1113;
    const double C21862 = C21833 * C131;
    const double C21854 = C21833 * C121;
    const double C21847 = C21833 * C129;
    const double C21839 = C21833 * C120;
    const double C22204 = C21833 * C252;
    const double C22196 = C21833 * C240;
    const double C22350 = C21833 * C357;
    const double C22342 = C21833 * C345;
    const double C27448 = C21833 * C260;
    const double C27440 = C21833 * C244;
    const double C27433 = C21833 * C250;
    const double C27425 = C21833 * C239;
    const double C27952 = C21833 * C682;
    const double C27944 = C21833 * C676;
    const double C21864 = C21834 * C359;
    const double C21856 = C21834 * C346;
    const double C21849 = C21834 * C357;
    const double C21841 = C21834 * C345;
    const double C22206 = C21834 * C684;
    const double C22198 = C21834 * C677;
    const double C22352 = C21834 * C367;
    const double C22344 = C21834 * C350;
    const double C27450 = C21834 * C1120;
    const double C27442 = C21834 * C1110;
    const double C27435 = C21834 * C682;
    const double C27427 = C21834 * C676;
    const double C27954 = C21834 * C1126;
    const double C27946 = C21834 * C1113;
    const double C17216 = C17215 + C17211;
    const double C5372 = C5371 + C5367;
    const double C23687 = C23683 + C23684;
    const double C23686 = C23680 + C23681;
    const double C25079 = C25073 + C25074;
    const double C25077 = C25067 + C25068;
    const double C25078 = C25070 + C25071;
    const double C25076 = C25064 + C25065;
    const double C30246 = C30230 + C30231;
    const double C30245 = C30227 + C30228;
    const double C17217 = C17216 + C17212;
    const double C23689 = C23687 + C23685;
    const double C23688 = C23686 + C23682;
    const double C25083 = C25079 + C25075;
    const double C25081 = C25077 + C25069;
    const double C25082 = C25078 + C25072;
    const double C25080 = C25076 + C25066;
    const double C30248 = C30246 + C30232;
    const double C30247 = C30245 + C30229;
    const double C17218 = C17217 + C17213;
    const double C30250 = C30248 * C31864;
    const double C30249 = C30247 * C5988;
    const double C17219 = C17218 + C17214;
    const double C30251 = C30249 + C30250;
    d2ee[0] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C31966 * C126 - C113 * C119) * C30885 +
             (C31966 * C140 - C113 * C127) * C31869 + (C148 - C149) * C30881 +
             (C150 - C151) * C31877 + C168 * C30891 + C169 * C17091) *
                C32009 +
            ((C966 - C967) * C30885 + (C968 - C969) * C31869 + C1297 * C30881 +
             C1298 * C31877 + C816 * C30891 + C817 * C17091) *
                C32016 +
            C17219 * C17094) *
               C31925 * C466 +
           (((C967 - C966) * C30885 + (C969 - C968) * C31869 + C1299 * C30881 +
             C1300 * C31877 + C1301 * C30891 + C1302 * C17091) *
                C32009 +
            ((C971 - C970) * C30885 + (C973 - C972) * C31869 + C1303 * C30881 +
             C1304 * C31877 + C1305 * C30891 + C1306 * C17091) *
                C32016 +
            ((C978 - C979) * C30885 + (C980 - C981) * C31869 + C7750 * C30881 +
             C7751 * C31877 + (C986 - C987) * C30891 + (C988 - C989) * C17091) *
                C17094) *
               C31925 * C467) *
              C468 +
          ((((C149 - C148) * C30885 + (C151 - C150) * C31869 +
             (C153 - C152) * C30881 + (C155 - C154) * C31877 +
             (C157 - C156) * C30891 + (C159 - C158) * C17091) *
                C32009 +
            (C1299 * C30885 + C1300 * C31869 + C1301 * C30881 + C1302 * C31877 +
             C2987 * C30891 + C2988 * C17091) *
                C32016 +
            (C1303 * C30885 + C1304 * C31869 + C1305 * C30881 + C1306 * C31877 +
             (C826 - C827) * C30891 + (C828 - C829) * C17091) *
                C17094) *
               C31925 * C466 +
           ((C1297 * C30885 + C1298 * C31869 + C816 * C30881 + C817 * C31877 +
             C2659 * C30891 + C2660 * C17091) *
                C32009 +
            (C974 * C30885 + C975 * C31869 + C830 * C30881 + C831 * C31877 +
             (C827 - C826) * C30891 + (C829 - C828) * C17091) *
                C32016 +
            (C7512 * C30885 + C7513 * C31869 + (C987 - C986) * C30881 +
             (C989 - C988) * C31877 + (C31966 * C1293 - C113 * C1292) * C30891 +
             (C31966 * C1295 - C113 * C1294) * C17091) *
                C17094) *
               C31925 * C467) *
              C469)) /
        (p * q * std::sqrt(p + q));
    d2ee[1] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C31966 * C126 - C113 * C119) * C30885 +
             (C31966 * C140 - C113 * C127) * C31869 + (C148 - C149) * C30881 +
             (C150 - C151) * C31877 + C168 * C30891 + C169 * C17091) *
                C32009 +
            ((C966 - C967) * C30885 + (C968 - C969) * C31869 + C1297 * C30881 +
             C1298 * C31877 + C816 * C30891 + C817 * C17091) *
                C32016 +
            C17219 * C17094) *
               C572 +
           (((C113 * C344 - C31966 * C354) * C30885 +
             (C113 * C355 - C31966 * C374) * C31869 + (C579 - C580) * C30881 +
             (C581 - C582) * C31877 + (C583 - C584) * C30891 +
             (C585 - C586) * C17091) *
                C32009 +
            ((C1631 - C1632) * C30885 + (C1633 - C1634) * C31869 +
             (C1457 - C1458) * C30881 + (C1459 - C1460) * C31877 +
             (C1461 - C1462) * C30891 + (C1463 - C1464) * C17091) *
                C32016 +
            ((C1635 - C1636) * C30885 + (C1637 - C1638) * C31869 +
             (C1465 - C1466) * C30881 + (C1467 - C1468) * C31877 +
             (C1469 - C1470) * C30891 + (C1471 - C1472) * C17091) *
                C17094) *
               C573) *
              C466 +
          ((((C967 - C966) * C30885 + (C969 - C968) * C31869 + C1299 * C30881 +
             C1300 * C31877 + C1301 * C30891 + C1302 * C17091) *
                C32009 +
            ((C971 - C970) * C30885 + (C973 - C972) * C31869 + C1303 * C30881 +
             C1304 * C31877 + C1305 * C30891 + C1306 * C17091) *
                C32016 +
            ((C978 - C979) * C30885 + (C980 - C981) * C31869 + C7750 * C30881 +
             C7751 * C31877 + (C986 - C987) * C30891 + (C988 - C989) * C17091) *
                C17094) *
               C572 +
           (((C1632 - C1631) * C30885 + (C1634 - C1633) * C31869 +
             (C1458 - C1457) * C30881 + (C1460 - C1459) * C31877 +
             (C1462 - C1461) * C30891 + (C1464 - C1463) * C17091) *
                C32009 +
            ((C1636 - C1635) * C30885 + (C1638 - C1637) * C31869 +
             (C1466 - C1465) * C30881 + (C1468 - C1467) * C31877 +
             (C1470 - C1469) * C30891 + (C1472 - C1471) * C17091) *
                C32016 +
            ((C6418 - C6417) * C30885 + (C6420 - C6419) * C31869 +
             (C7883 - C7882) * C30881 + (C7885 - C7884) * C31877 +
             (C31966 * C1625 - C113 * C1620) * C30891 +
             (C31966 * C1629 - C113 * C1626) * C17091) *
                C17094) *
               C573) *
              C467) *
         C31899) /
        (p * q * std::sqrt(p + q));
    d2ee[2] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31966 * C126 - C113 * C119) * C30885 +
            (C31966 * C140 - C113 * C127) * C31869 + (C148 - C149) * C30881 +
            (C150 - C151) * C31877 + C168 * C30891 + C169 * C17091) *
               C32009 +
           ((C966 - C967) * C30885 + (C968 - C969) * C31869 + C1297 * C30881 +
            C1298 * C31877 + C816 * C30891 + C817 * C17091) *
               C32016 +
           C17219 * C17094) *
              C31925 * C235 +
          (((C967 - C966) * C30885 + (C969 - C968) * C31869 + C1299 * C30881 +
            C1300 * C31877 + C1301 * C30891 + C1302 * C17091) *
               C32009 +
           ((C971 - C970) * C30885 + (C973 - C972) * C31869 + C1303 * C30881 +
            C1304 * C31877 + C1305 * C30891 + C1306 * C17091) *
               C32016 +
           ((C978 - C979) * C30885 + (C980 - C981) * C31869 + C7750 * C30881 +
            C7751 * C31877 + (C986 - C987) * C30891 + (C988 - C989) * C17091) *
               C17094) *
              C31925 * C236 +
          (C17219 * C32009 +
           (C6062 * C30885 + C6063 * C31869 + C7512 * C30881 + C7513 * C31877 +
            (C987 - C986) * C30891 + (C989 - C988) * C17091) *
               C32016 +
           (C6075 * C30885 + C6076 * C31869 + (C6242 - C6241) * C30881 +
            (C6244 - C6243) * C31877 + (C31966 * C957 - C113 * C946) * C30891 +
            (C31966 * C964 - C113 * C958) * C17091) *
               C17094) *
              C31925 * C237) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31966 * C126 - C113 * C119) * C30885 +
            (C31966 * C140 - C113 * C127) * C31869 + (C148 - C149) * C30881 +
            (C150 - C151) * C31877 + C168 * C30891 + C169 * C17091) *
               C32009 +
           ((C966 - C967) * C30885 + (C968 - C969) * C31869 + C1297 * C30881 +
            C1298 * C31877 + C816 * C30891 + C817 * C17091) *
               C32016 +
           (C990 * C30885 + C991 * C31869 + C974 * C30881 + C975 * C31877 +
            C830 * C30891 + C831 * C17091) *
               C17094) *
              C31925 * C31911 * C110 +
          (((C149 - C148) * C30885 + (C151 - C150) * C31869 +
            (C153 - C152) * C30881 + (C155 - C154) * C31877 +
            (C157 - C156) * C30891 + (C159 - C158) * C17091) *
               C32009 +
           (C1299 * C30885 + C1300 * C31869 + C1301 * C30881 + C1302 * C31877 +
            C2987 * C30891 + C2988 * C17091) *
               C32016 +
           (C1303 * C30885 + C1304 * C31869 + C1305 * C30881 + C1306 * C31877 +
            (C826 - C827) * C30891 + (C828 - C829) * C17091) *
               C17094) *
              C31925 * C31911 * C111 +
          ((C168 * C30885 + C169 * C31869 + C170 * C30881 + C171 * C31877 +
            C172 * C30891 + C173 * C17091) *
               C32009 +
           (C816 * C30885 + C817 * C31869 + C2659 * C30881 + C2660 * C31877 +
            (C488 - C487) * C30891 + (C490 - C489) * C17091) *
               C32016 +
           (C830 * C30885 + C831 * C31869 + (C827 - C826) * C30881 +
            (C829 - C828) * C31877 + (C31966 * C267 - C113 * C248) * C30891 +
            (C31966 * C278 - C113 * C268) * C17091) *
               C17094) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C31966 * C126 - C113 * C119) * C30885 +
            (C31966 * C140 - C113 * C127) * C31869 + (C148 - C149) * C30881 +
            (C150 - C151) * C31877 + C168 * C30891 + C169 * C17091) *
               C32009 +
           ((C966 - C967) * C30885 + (C968 - C969) * C31869 + C1297 * C30881 +
            C1298 * C31877 + C816 * C30891 + C817 * C17091) *
               C32016 +
           C17219 * C17094) *
              C341 +
          (((C113 * C344 - C31966 * C354) * C30885 +
            (C113 * C355 - C31966 * C374) * C31869 + (C579 - C580) * C30881 +
            (C581 - C582) * C31877 + (C583 - C584) * C30891 +
            (C585 - C586) * C17091) *
               C32009 +
           ((C1631 - C1632) * C30885 + (C1633 - C1634) * C31869 +
            (C1457 - C1458) * C30881 + (C1459 - C1460) * C31877 +
            (C1461 - C1462) * C30891 + (C1463 - C1464) * C17091) *
               C32016 +
           ((C1635 - C1636) * C30885 + (C1637 - C1638) * C31869 +
            (C1465 - C1466) * C30881 + (C1467 - C1468) * C31877 +
            (C1469 - C1470) * C30891 + (C1471 - C1472) * C17091) *
               C17094) *
              C342 +
          (((C31966 * C364 - C113 * C349) * C30885 +
            (C31966 * C379 - C113 * C365) * C31869 +
            (C31966 * C366 - C113 * C350) * C30881 +
            (C31966 * C380 - C113 * C367) * C31877 +
            (C31966 * C368 - C113 * C351) * C30891 +
            (C31966 * C381 - C113 * C369) * C17091) *
               C32009 +
           ((C31966 * C1125 - C113 * C1113) * C30885 +
            (C31966 * C1140 - C113 * C1126) * C31869 +
            (C31966 * C1127 - C113 * C1114) * C30881 +
            (C31966 * C1141 - C113 * C1128) * C31877 +
            (C31966 * C1129 - C113 * C1115) * C30891 +
            (C31966 * C1142 - C113 * C1130) * C17091) *
               C32016 +
           ((C31966 * C1131 - C113 * C1116) * C30885 +
            (C31966 * C1143 - C113 * C1132) * C31869 +
            (C31966 * C1133 - C113 * C1117) * C30881 +
            (C31966 * C1144 - C113 * C1134) * C31877 +
            (C31966 * C1135 - C113 * C1118) * C30891 +
            (C31966 * C1145 - C113 * C1136) * C17091) *
               C17094) *
              C343) *
         C31911 * C31899) /
            (p * q * std::sqrt(p + q));
    d2ee[3] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C31966 * C126 - C113 * C119) * C30885 +
             (C31966 * C140 - C113 * C127) * C31869 + (C148 - C149) * C30881 +
             (C150 - C151) * C31877 + C168 * C30891 + C169 * C17091) *
                C32009 +
            ((C966 - C967) * C30885 + (C968 - C969) * C31869 + C1297 * C30881 +
             C1298 * C31877 + C816 * C30891 + C817 * C17091) *
                C32016 +
            C17219 * C17094) *
               C572 +
           (((C113 * C344 - C31966 * C354) * C30885 +
             (C113 * C355 - C31966 * C374) * C31869 + (C579 - C580) * C30881 +
             (C581 - C582) * C31877 + (C583 - C584) * C30891 +
             (C585 - C586) * C17091) *
                C32009 +
            ((C1631 - C1632) * C30885 + (C1633 - C1634) * C31869 +
             (C1457 - C1458) * C30881 + (C1459 - C1460) * C31877 +
             (C1461 - C1462) * C30891 + (C1463 - C1464) * C17091) *
                C32016 +
            ((C1635 - C1636) * C30885 + (C1637 - C1638) * C31869 +
             (C1465 - C1466) * C30881 + (C1467 - C1468) * C31877 +
             (C1469 - C1470) * C30891 + (C1471 - C1472) * C17091) *
                C17094) *
               C573) *
              C31911 * C468 +
          ((((C149 - C148) * C30885 + (C151 - C150) * C31869 +
             (C153 - C152) * C30881 + (C155 - C154) * C31877 +
             (C157 - C156) * C30891 + (C159 - C158) * C17091) *
                C32009 +
            (C1299 * C30885 + C1300 * C31869 + C1301 * C30881 + C1302 * C31877 +
             C2987 * C30891 + C2988 * C17091) *
                C32016 +
            (C1303 * C30885 + C1304 * C31869 + C1305 * C30881 + C1306 * C31877 +
             (C826 - C827) * C30891 + (C828 - C829) * C17091) *
                C17094) *
               C572 +
           (((C580 - C579) * C30885 + (C582 - C581) * C31869 +
             (C584 - C583) * C30881 + (C586 - C585) * C31877 +
             (C588 - C587) * C30891 + (C590 - C589) * C17091) *
                C32009 +
            ((C1458 - C1457) * C30885 + (C1460 - C1459) * C31869 +
             (C1462 - C1461) * C30881 + (C1464 - C1463) * C31877 +
             (C3120 - C3119) * C30891 + (C3122 - C3121) * C17091) *
                C32016 +
            ((C1466 - C1465) * C30885 + (C1468 - C1467) * C31869 +
             (C1470 - C1469) * C30881 + (C1472 - C1471) * C31877 +
             (C31966 * C1453 - C113 * C1452) * C30891 +
             (C31966 * C1455 - C113 * C1454) * C17091) *
                C17094) *
               C573) *
              C31911 * C469)) /
        (p * q * std::sqrt(p + q));
    d2ee[4] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31966 * C126 - C113 * C119) * C30885 +
            (C31966 * C140 - C113 * C127) * C31869 + (C148 - C149) * C30881 +
            (C150 - C151) * C31877 + C168 * C30891 + C169 * C17091) *
               C32009 +
           ((C966 - C967) * C30885 + (C968 - C969) * C31869 + C1297 * C30881 +
            C1298 * C31877 + C816 * C30891 + C817 * C17091) *
               C32016 +
           (C990 * C30885 + C991 * C31869 + C974 * C30881 + C975 * C31877 +
            C830 * C30891 + C831 * C17091) *
               C17094) *
              C31925 * C31911 * C110 +
          (((C149 - C148) * C30885 + (C151 - C150) * C31869 +
            (C153 - C152) * C30881 + (C155 - C154) * C31877 +
            (C157 - C156) * C30891 + (C159 - C158) * C17091) *
               C32009 +
           (C1299 * C30885 + C1300 * C31869 + C1301 * C30881 + C1302 * C31877 +
            C2987 * C30891 + C2988 * C17091) *
               C32016 +
           (C1303 * C30885 + C1304 * C31869 + C1305 * C30881 + C1306 * C31877 +
            (C826 - C827) * C30891 + (C828 - C829) * C17091) *
               C17094) *
              C31925 * C31911 * C111 +
          ((C168 * C30885 + C169 * C31869 + C170 * C30881 + C171 * C31877 +
            C172 * C30891 + C173 * C17091) *
               C32009 +
           (C816 * C30885 + C817 * C31869 + C2659 * C30881 + C2660 * C31877 +
            (C488 - C487) * C30891 + (C490 - C489) * C17091) *
               C32016 +
           (C830 * C30885 + C831 * C31869 + (C827 - C826) * C30881 +
            (C829 - C828) * C31877 + (C31966 * C267 - C113 * C248) * C30891 +
            (C31966 * C278 - C113 * C268) * C17091) *
               C17094) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31966 * C126 - C113 * C119) * C30885 +
            (C31966 * C140 - C113 * C127) * C31869 + (C148 - C149) * C30881 +
            (C150 - C151) * C31877 + C168 * C30891 + C169 * C17091) *
               C32009 +
           ((C966 - C967) * C30885 + (C968 - C969) * C31869 + C1297 * C30881 +
            C1298 * C31877 + C816 * C30891 + C817 * C17091) *
               C32016 +
           C17219 * C17094) *
              C31925 * C235 +
          (((C967 - C966) * C30885 + (C969 - C968) * C31869 + C1299 * C30881 +
            C1300 * C31877 + C1301 * C30891 + C1302 * C17091) *
               C32009 +
           ((C971 - C970) * C30885 + (C973 - C972) * C31869 + C1303 * C30881 +
            C1304 * C31877 + C1305 * C30891 + C1306 * C17091) *
               C32016 +
           ((C978 - C979) * C30885 + (C980 - C981) * C31869 + C7750 * C30881 +
            C7751 * C31877 + (C986 - C987) * C30891 + (C988 - C989) * C17091) *
               C17094) *
              C31925 * C236 +
          (C17219 * C32009 +
           (C6062 * C30885 + C6063 * C31869 + C7512 * C30881 + C7513 * C31877 +
            (C987 - C986) * C30891 + (C989 - C988) * C17091) *
               C32016 +
           (C6075 * C30885 + C6076 * C31869 + (C6242 - C6241) * C30881 +
            (C6244 - C6243) * C31877 + (C31966 * C957 - C113 * C946) * C30891 +
            (C31966 * C964 - C113 * C958) * C17091) *
               C17094) *
              C31925 * C237) *
         C31899) /
            (p * q * std::sqrt(p + q));
    d2ee[5] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C32208 * C126 - C3352 * C119 + C32053 * C354 - C3353 * C344) *
                 C15325 +
             (C32208 * C140 - C3352 * C127 + C32053 * C374 - C3353 * C355) *
                 C15319 +
             (C3355 - C3356 + C3357 - C3358) * C15326 +
             (C3359 - C3360 + C3361 - C3362) * C31874) *
                C32009 +
            ((C4331 - C4332 + C4333 - C4334) * C15325 +
             (C4335 - C4336 + C4337 - C4338) * C15319 + C4715 * C15326 +
             C4716 * C31874) *
                C32016 +
            C19086 * C17094) *
               C31925 * C466 +
           (((C4332 - C4331 + C4334 - C4333) * C15325 +
             (C4336 - C4335 + C4338 - C4337) * C15319 + C4717 * C15326 +
             C4718 * C31874) *
                C32009 +
            ((C4339 - C4340 + C4341 - C4342) * C15325 +
             (C4343 - C4344 + C4345 - C4346) * C15319 + C8687 * C15326 +
             C8688 * C31874) *
                C32016 +
            ((C8316 - C8317 + C8318 - C8319) * C15325 +
             (C8320 - C8321 + C8322 - C8323) * C15319 +
             (C8324 - C8325 + C8326 - C8327) * C15326 +
             (C8328 - C8329 + C8330 - C8331) * C31874) *
                C17094) *
               C31925 * C467) *
              C468 +
          ((((C3356 - C3355 + C3358 - C3357) * C15325 +
             (C3360 - C3359 + C3362 - C3361) * C15319 +
             (C3364 - C3363 + C3366 - C3365) * C15326 +
             (C3368 - C3367 + C3370 - C3369) * C31874) *
                C32009 +
            (C4717 * C15325 + C4718 * C15319 + C4719 * C15326 +
             C4720 * C31874) *
                C32016 +
            (C8687 * C15325 + C8688 * C15319 +
             (C4355 - C4356 + C4357 - C4358) * C15326 +
             (C4359 - C4360 + C4361 - C4362) * C31874) *
                C17094) *
               C31925 * C466 +
           ((C4715 * C15325 + C4716 * C15319 + C4183 * C15326 +
             C4184 * C31874) *
                C32009 +
            (C8334 * C15325 + C8335 * C15319 +
             (C4356 - C4355 + C4358 - C4357) * C15326 +
             (C4360 - C4359 + C4362 - C4361) * C31874) *
                C32016 +
            ((C8325 - C8324 + C8327 - C8326) * C15325 +
             (C8329 - C8328 + C8331 - C8330) * C15319 +
             (C32208 * C951 - C3352 * C943 + C32053 * C1625 - C3353 * C1620) *
                 C15326 +
             (C32208 * C961 - C3352 * C952 + C32053 * C1629 - C3353 * C1626) *
                 C31874) *
                C17094) *
               C31925 * C467) *
              C469)) /
        (p * q * std::sqrt(p + q));
    d2ee[6] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C32208 * C126 - C3352 * C119 + C32053 * C354 - C3353 * C344) *
                 C15325 +
             (C32208 * C140 - C3352 * C127 + C32053 * C374 - C3353 * C355) *
                 C15319 +
             (C3355 - C3356 + C3357 - C3358) * C15326 +
             (C3359 - C3360 + C3361 - C3362) * C31874) *
                C32009 +
            ((C4331 - C4332 + C4333 - C4334) * C15325 +
             (C4335 - C4336 + C4337 - C4338) * C15319 + C4715 * C15326 +
             C4716 * C31874) *
                C32016 +
            C19086 * C17094) *
               C572 +
           (((C3352 * C344 - C32208 * C354 + C3353 * C349 - C32053 * C364) *
                 C15325 +
             (C3352 * C355 - C32208 * C374 + C3353 * C365 - C32053 * C379) *
                 C15319 +
             (C3879 - C3880 + C3881 - C3882) * C15326 +
             (C3883 - C3884 + C3885 - C3886) * C31874) *
                C32009 +
            ((C5125 - C5126 + C5127 - C5128) * C15325 +
             (C5129 - C5130 + C5131 - C5132) * C15319 +
             (C4915 - C4916 + C4917 - C4918) * C15326 +
             (C4919 - C4920 + C4921 - C4922) * C31874) *
                C32016 +
            ((C9085 - C9086 + C9087 - C9088) * C15325 +
             (C9089 - C9090 + C9091 - C9092) * C15319 +
             (C8883 - C8884 + C8885 - C8886) * C15326 +
             (C8887 - C8888 + C8889 - C8890) * C31874) *
                C17094) *
               C573) *
              C466 +
          ((((C4332 - C4331 + C4334 - C4333) * C15325 +
             (C4336 - C4335 + C4338 - C4337) * C15319 + C4717 * C15326 +
             C4718 * C31874) *
                C32009 +
            ((C4339 - C4340 + C4341 - C4342) * C15325 +
             (C4343 - C4344 + C4345 - C4346) * C15319 + C8687 * C15326 +
             C8688 * C31874) *
                C32016 +
            ((C8316 - C8317 + C8318 - C8319) * C15325 +
             (C8320 - C8321 + C8322 - C8323) * C15319 +
             (C8324 - C8325 + C8326 - C8327) * C15326 +
             (C8328 - C8329 + C8330 - C8331) * C31874) *
                C17094) *
               C572 +
           (((C5126 - C5125 + C5128 - C5127) * C15325 +
             (C5130 - C5129 + C5132 - C5131) * C15319 +
             (C4916 - C4915 + C4918 - C4917) * C15326 +
             (C4920 - C4919 + C4922 - C4921) * C31874) *
                C32009 +
            ((C9086 - C9085 + C9088 - C9087) * C15325 +
             (C9090 - C9089 + C9092 - C9091) * C15319 +
             (C8884 - C8883 + C8886 - C8885) * C15326 +
             (C8888 - C8887 + C8890 - C8889) * C31874) *
                C32016 +
            ((C9798 - C9797 + C9800 - C9799) * C15325 +
             (C9802 - C9801 + C9804 - C9803) * C15319 +
             (C32208 * C1623 - C3352 * C1619 + C32053 * C6962 - C3353 * C6961) *
                 C15326 +
             (C32208 * C1628 - C3352 * C1624 + C32053 * C6964 - C3353 * C6963) *
                 C31874) *
                C17094) *
               C573) *
              C467) *
         C31899) /
        (p * q * std::sqrt(p + q));
    d2ee[7] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C32208 * C126 - C3352 * C119 + C32053 * C354 - C3353 * C344) *
                C15325 +
            (C32208 * C140 - C3352 * C127 + C32053 * C374 - C3353 * C355) *
                C15319 +
            (C3355 - C3356 + C3357 - C3358) * C15326 +
            (C3359 - C3360 + C3361 - C3362) * C31874) *
               C32009 +
           ((C4331 - C4332 + C4333 - C4334) * C15325 +
            (C4335 - C4336 + C4337 - C4338) * C15319 + C4715 * C15326 +
            C4716 * C31874) *
               C32016 +
           C19086 * C17094) *
              C31925 * C235 +
          (((C4332 - C4331 + C4334 - C4333) * C15325 +
            (C4336 - C4335 + C4338 - C4337) * C15319 + C4717 * C15326 +
            C4718 * C31874) *
               C32009 +
           ((C4339 - C4340 + C4341 - C4342) * C15325 +
            (C4343 - C4344 + C4345 - C4346) * C15319 + C8687 * C15326 +
            C8688 * C31874) *
               C32016 +
           ((C8316 - C8317 + C8318 - C8319) * C15325 +
            (C8320 - C8321 + C8322 - C8323) * C15319 +
            (C8324 - C8325 + C8326 - C8327) * C15326 +
            (C8328 - C8329 + C8330 - C8331) * C31874) *
               C17094) *
              C31925 * C236 +
          (C19086 * C32009 +
           (C9304 * C15325 + C9305 * C15319 +
            (C8325 - C8324 + C8327 - C8326) * C15326 +
            (C8329 - C8328 + C8331 - C8330) * C31874) *
               C32016 +
           ((C9296 - C9295 + C9298 - C9297) * C15325 +
            (C9300 - C9299 + C9302 - C9301) * C15319 +
            (C32208 * C955 - C3352 * C945 + C32053 * C6327 - C3353 * C6326) *
                C15326 +
            (C32208 * C963 - C3352 * C956 + C32053 * C6329 - C3353 * C6328) *
                C31874) *
               C17094) *
              C31925 * C237) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C32208 * C126 - C3352 * C119 + C32053 * C354 - C3353 * C344) *
                C15325 +
            (C32208 * C140 - C3352 * C127 + C32053 * C374 - C3353 * C355) *
                C15319 +
            (C3355 - C3356 + C3357 - C3358) * C15326 +
            (C3359 - C3360 + C3361 - C3362) * C31874) *
               C32009 +
           ((C4331 - C4332 + C4333 - C4334) * C15325 +
            (C4335 - C4336 + C4337 - C4338) * C15319 + C4715 * C15326 +
            C4716 * C31874) *
               C32016 +
           (C8332 * C15325 + C8333 * C15319 + C8334 * C15326 + C8335 * C31874) *
               C17094) *
              C31925 * C31911 * C110 +
          (((C3356 - C3355 + C3358 - C3357) * C15325 +
            (C3360 - C3359 + C3362 - C3361) * C15319 +
            (C3364 - C3363 + C3366 - C3365) * C15326 +
            (C3368 - C3367 + C3370 - C3369) * C31874) *
               C32009 +
           (C4717 * C15325 + C4718 * C15319 + C4719 * C15326 + C4720 * C31874) *
               C32016 +
           (C8687 * C15325 + C8688 * C15319 +
            (C4355 - C4356 + C4357 - C4358) * C15326 +
            (C4359 - C4360 + C4361 - C4362) * C31874) *
               C17094) *
              C31925 * C31911 * C111 +
          ((C3395 * C15325 + C3396 * C15319 + C3397 * C15326 + C3398 * C31874) *
               C32009 +
           (C4183 * C15325 + C4184 * C15319 +
            (C3742 - C3741 + C3744 - C3743) * C15326 +
            (C3746 - C3745 + C3748 - C3747) * C31874) *
               C32016 +
           ((C4356 - C4355 + C4358 - C4357) * C15325 +
            (C4360 - C4359 + C4362 - C4361) * C15319 +
            (C32208 * C265 - C3352 * C247 + C32053 * C1453 - C3353 * C1452) *
                C15326 +
            (C32208 * C277 - C3352 * C266 + C32053 * C1455 - C3353 * C1454) *
                C31874) *
               C17094) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C32208 * C126 - C3352 * C119 + C32053 * C354 - C3353 * C344) *
                C15325 +
            (C32208 * C140 - C3352 * C127 + C32053 * C374 - C3353 * C355) *
                C15319 +
            (C3355 - C3356 + C3357 - C3358) * C15326 +
            (C3359 - C3360 + C3361 - C3362) * C31874) *
               C32009 +
           ((C4331 - C4332 + C4333 - C4334) * C15325 +
            (C4335 - C4336 + C4337 - C4338) * C15319 + C4715 * C15326 +
            C4716 * C31874) *
               C32016 +
           C19086 * C17094) *
              C341 +
          (((C3352 * C344 - C32208 * C354 + C3353 * C349 - C32053 * C364) *
                C15325 +
            (C3352 * C355 - C32208 * C374 + C3353 * C365 - C32053 * C379) *
                C15319 +
            (C3879 - C3880 + C3881 - C3882) * C15326 +
            (C3883 - C3884 + C3885 - C3886) * C31874) *
               C32009 +
           ((C5125 - C5126 + C5127 - C5128) * C15325 +
            (C5129 - C5130 + C5131 - C5132) * C15319 +
            (C4915 - C4916 + C4917 - C4918) * C15326 +
            (C4919 - C4920 + C4921 - C4922) * C31874) *
               C32016 +
           ((C9085 - C9086 + C9087 - C9088) * C15325 +
            (C9089 - C9090 + C9091 - C9092) * C15319 +
            (C8883 - C8884 + C8885 - C8886) * C15326 +
            (C8887 - C8888 + C8889 - C8890) * C31874) *
               C17094) *
              C342 +
          (((C32208 * C364 - C3352 * C349 + C32053 * C2026 - C3353 * C2020) *
                C15325 +
            (C32208 * C379 - C3352 * C365 + C32053 * C2038 - C3353 * C2027) *
                C15319 +
            (C32208 * C366 - C3352 * C350 + C32053 * C2028 - C3353 * C2021) *
                C15326 +
            (C32208 * C380 - C3352 * C367 + C32053 * C2039 - C3353 * C2029) *
                C31874) *
               C32009 +
           ((C32208 * C1125 - C3352 * C1113 + C32053 * C2541 - C3353 * C2538) *
                C15325 +
            (C32208 * C1140 - C3352 * C1126 + C32053 * C2547 - C3353 * C2542) *
                C15319 +
            (C32208 * C1127 - C3352 * C1114 + C32053 * C2543 - C3353 * C2539) *
                C15326 +
            (C32208 * C1141 - C3352 * C1128 + C32053 * C2548 - C3353 * C2544) *
                C31874) *
               C32016 +
           ((C32208 * C1131 - C3352 * C1116 + C32053 * C6806 - C3353 * C6803) *
                C15325 +
            (C32208 * C1143 - C3352 * C1132 + C32053 * C6812 - C3353 * C6807) *
                C15319 +
            (C32208 * C1133 - C3352 * C1117 + C32053 * C7124 - C3353 * C7123) *
                C15326 +
            (C32208 * C1144 - C3352 * C1134 + C32053 * C7126 - C3353 * C7125) *
                C31874) *
               C17094) *
              C343) *
         C31911 * C31899) /
            (p * q * std::sqrt(p + q));
    d2ee[8] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C32208 * C126 - C3352 * C119 + C32053 * C354 - C3353 * C344) *
                 C15325 +
             (C32208 * C140 - C3352 * C127 + C32053 * C374 - C3353 * C355) *
                 C15319 +
             (C3355 - C3356 + C3357 - C3358) * C15326 +
             (C3359 - C3360 + C3361 - C3362) * C31874) *
                C32009 +
            ((C4331 - C4332 + C4333 - C4334) * C15325 +
             (C4335 - C4336 + C4337 - C4338) * C15319 + C4715 * C15326 +
             C4716 * C31874) *
                C32016 +
            C19086 * C17094) *
               C572 +
           (((C3352 * C344 - C32208 * C354 + C3353 * C349 - C32053 * C364) *
                 C15325 +
             (C3352 * C355 - C32208 * C374 + C3353 * C365 - C32053 * C379) *
                 C15319 +
             (C3879 - C3880 + C3881 - C3882) * C15326 +
             (C3883 - C3884 + C3885 - C3886) * C31874) *
                C32009 +
            ((C5125 - C5126 + C5127 - C5128) * C15325 +
             (C5129 - C5130 + C5131 - C5132) * C15319 +
             (C4915 - C4916 + C4917 - C4918) * C15326 +
             (C4919 - C4920 + C4921 - C4922) * C31874) *
                C32016 +
            ((C9085 - C9086 + C9087 - C9088) * C15325 +
             (C9089 - C9090 + C9091 - C9092) * C15319 +
             (C8883 - C8884 + C8885 - C8886) * C15326 +
             (C8887 - C8888 + C8889 - C8890) * C31874) *
                C17094) *
               C573) *
              C31911 * C468 +
          ((((C3356 - C3355 + C3358 - C3357) * C15325 +
             (C3360 - C3359 + C3362 - C3361) * C15319 +
             (C3364 - C3363 + C3366 - C3365) * C15326 +
             (C3368 - C3367 + C3370 - C3369) * C31874) *
                C32009 +
            (C4717 * C15325 + C4718 * C15319 + C4719 * C15326 +
             C4720 * C31874) *
                C32016 +
            (C8687 * C15325 + C8688 * C15319 +
             (C4355 - C4356 + C4357 - C4358) * C15326 +
             (C4359 - C4360 + C4361 - C4362) * C31874) *
                C17094) *
               C572 +
           (((C3880 - C3879 + C3882 - C3881) * C15325 +
             (C3884 - C3883 + C3886 - C3885) * C15319 +
             (C3888 - C3887 + C3890 - C3889) * C15326 +
             (C3892 - C3891 + C3894 - C3893) * C31874) *
                C32009 +
            ((C4916 - C4915 + C4918 - C4917) * C15325 +
             (C4920 - C4919 + C4922 - C4921) * C15319 +
             (C4924 - C4923 + C4926 - C4925) * C15326 +
             (C4928 - C4927 + C4930 - C4929) * C31874) *
                C32016 +
            ((C8884 - C8883 + C8886 - C8885) * C15325 +
             (C8888 - C8887 + C8890 - C8889) * C15319 +
             (C32208 * C1123 - C3352 * C1112 + C32053 * C1135 - C3353 * C1118) *
                 C15326 +
             (C32208 * C1139 - C3352 * C1124 + C32053 * C1145 - C3353 * C1136) *
                 C31874) *
                C17094) *
               C573) *
              C31911 * C469)) /
        (p * q * std::sqrt(p + q));
    d2ee[9] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C32208 * C126 - C3352 * C119 + C32053 * C354 - C3353 * C344) *
                C15325 +
            (C32208 * C140 - C3352 * C127 + C32053 * C374 - C3353 * C355) *
                C15319 +
            (C3355 - C3356 + C3357 - C3358) * C15326 +
            (C3359 - C3360 + C3361 - C3362) * C31874) *
               C32009 +
           ((C4331 - C4332 + C4333 - C4334) * C15325 +
            (C4335 - C4336 + C4337 - C4338) * C15319 + C4715 * C15326 +
            C4716 * C31874) *
               C32016 +
           (C8332 * C15325 + C8333 * C15319 + C8334 * C15326 + C8335 * C31874) *
               C17094) *
              C31925 * C31911 * C110 +
          (((C3356 - C3355 + C3358 - C3357) * C15325 +
            (C3360 - C3359 + C3362 - C3361) * C15319 +
            (C3364 - C3363 + C3366 - C3365) * C15326 +
            (C3368 - C3367 + C3370 - C3369) * C31874) *
               C32009 +
           (C4717 * C15325 + C4718 * C15319 + C4719 * C15326 + C4720 * C31874) *
               C32016 +
           (C8687 * C15325 + C8688 * C15319 +
            (C4355 - C4356 + C4357 - C4358) * C15326 +
            (C4359 - C4360 + C4361 - C4362) * C31874) *
               C17094) *
              C31925 * C31911 * C111 +
          ((C3395 * C15325 + C3396 * C15319 + C3397 * C15326 + C3398 * C31874) *
               C32009 +
           (C4183 * C15325 + C4184 * C15319 +
            (C3742 - C3741 + C3744 - C3743) * C15326 +
            (C3746 - C3745 + C3748 - C3747) * C31874) *
               C32016 +
           ((C4356 - C4355 + C4358 - C4357) * C15325 +
            (C4360 - C4359 + C4362 - C4361) * C15319 +
            (C32208 * C265 - C3352 * C247 + C32053 * C1453 - C3353 * C1452) *
                C15326 +
            (C32208 * C277 - C3352 * C266 + C32053 * C1455 - C3353 * C1454) *
                C31874) *
               C17094) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C32208 * C126 - C3352 * C119 + C32053 * C354 - C3353 * C344) *
                C15325 +
            (C32208 * C140 - C3352 * C127 + C32053 * C374 - C3353 * C355) *
                C15319 +
            (C3355 - C3356 + C3357 - C3358) * C15326 +
            (C3359 - C3360 + C3361 - C3362) * C31874) *
               C32009 +
           ((C4331 - C4332 + C4333 - C4334) * C15325 +
            (C4335 - C4336 + C4337 - C4338) * C15319 + C4715 * C15326 +
            C4716 * C31874) *
               C32016 +
           C19086 * C17094) *
              C31925 * C235 +
          (((C4332 - C4331 + C4334 - C4333) * C15325 +
            (C4336 - C4335 + C4338 - C4337) * C15319 + C4717 * C15326 +
            C4718 * C31874) *
               C32009 +
           ((C4339 - C4340 + C4341 - C4342) * C15325 +
            (C4343 - C4344 + C4345 - C4346) * C15319 + C8687 * C15326 +
            C8688 * C31874) *
               C32016 +
           ((C8316 - C8317 + C8318 - C8319) * C15325 +
            (C8320 - C8321 + C8322 - C8323) * C15319 +
            (C8324 - C8325 + C8326 - C8327) * C15326 +
            (C8328 - C8329 + C8330 - C8331) * C31874) *
               C17094) *
              C31925 * C236 +
          (C19086 * C32009 +
           (C9304 * C15325 + C9305 * C15319 +
            (C8325 - C8324 + C8327 - C8326) * C15326 +
            (C8329 - C8328 + C8331 - C8330) * C31874) *
               C32016 +
           ((C9296 - C9295 + C9298 - C9297) * C15325 +
            (C9300 - C9299 + C9302 - C9301) * C15319 +
            (C32208 * C955 - C3352 * C945 + C32053 * C6327 - C3353 * C6326) *
                C15326 +
            (C32208 * C963 - C3352 * C956 + C32053 * C6329 - C3353 * C6328) *
                C31874) *
               C17094) *
              C31925 * C237) *
         C31899) /
            (p * q * std::sqrt(p + q));
    d2ee[10] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31966 * C126 - C113 * C119) * C15325 +
             (C31966 * C140 - C113 * C127) * C15319 + (C148 - C149) * C15326 +
             (C150 - C151) * C31874) *
                C32280 +
            ((C966 - C967) * C15325 + (C968 - C969) * C15319 + C1297 * C15326 +
             C1298 * C31874) *
                C32276 +
            C15438 * C32266 + C15439 * C32248) *
               C31925 * C466 +
           (((C967 - C966) * C15325 + (C969 - C968) * C15319 + C1299 * C15326 +
             C1300 * C31874) *
                C32280 +
            ((C971 - C970) * C15325 + (C973 - C972) * C15319 + C1303 * C15326 +
             C1304 * C31874) *
                C32276 +
            ((C978 - C979) * C15325 + (C980 - C981) * C15319 + C7750 * C15326 +
             C7751 * C31874) *
                C32266 +
            ((C6065 - C6064) * C15325 + (C6067 - C6066) * C15319 +
             (C6241 - C6242) * C15326 + (C6243 - C6244) * C31874) *
                C32248) *
               C31925 * C467) *
              C468 +
          ((((C149 - C148) * C15325 + (C151 - C150) * C15319 +
             (C153 - C152) * C15326 + (C155 - C154) * C31874) *
                C32280 +
            (C1299 * C15325 + C1300 * C15319 + C1301 * C15326 +
             C1302 * C31874) *
                C32276 +
            (C1303 * C15325 + C1304 * C15319 + C1305 * C15326 +
             C1306 * C31874) *
                C32266 +
            (C7750 * C15325 + C7751 * C15319 + (C986 - C987) * C15326 +
             (C988 - C989) * C31874) *
                C32248) *
               C31925 * C466 +
           ((C1297 * C15325 + C1298 * C15319 + C816 * C15326 + C817 * C31874) *
                C32280 +
            (C974 * C15325 + C975 * C15319 + C830 * C15326 + C831 * C31874) *
                C32276 +
            (C7512 * C15325 + C7513 * C15319 + (C987 - C986) * C15326 +
             (C989 - C988) * C31874) *
                C32266 +
            ((C6242 - C6241) * C15325 + (C6244 - C6243) * C15319 +
             (C31966 * C957 - C113 * C946) * C15326 +
             (C31966 * C964 - C113 * C958) * C31874) *
                C32248) *
               C31925 * C467) *
              C469)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31966 * C126 - C113 * C119) * C14631 +
             (C31966 * C140 - C113 * C127) * C32279 + (C148 - C149) * C14632 +
             (C150 - C151) * C32272 + C168 * C14633 + C169 * C32259 +
             C170 * C14634 + C171 * C32242) *
                C14629 +
            ((C966 - C967) * C14631 + (C968 - C969) * C32279 + C1297 * C14632 +
             C1298 * C32272 + C816 * C14633 + C817 * C32259 + C2659 * C14634 +
             C2660 * C32242) *
                C32013) *
               C31925 * C466 +
           (((C967 - C966) * C14631 + (C969 - C968) * C32279 + C1299 * C14632 +
             C1300 * C32272 + C1301 * C14633 + C1302 * C32259 + C2987 * C14634 +
             C2988 * C32242) *
                C14629 +
            ((C971 - C970) * C14631 + (C973 - C972) * C32279 + C1303 * C14632 +
             C1304 * C32272 + C1305 * C14633 + C1306 * C32259 +
             (C826 - C827) * C14634 + (C828 - C829) * C32242) *
                C32013) *
               C31925 * C467) *
              C468 +
          ((((C149 - C148) * C14631 + (C151 - C150) * C32279 +
             (C153 - C152) * C14632 + (C155 - C154) * C32272 +
             (C157 - C156) * C14633 + (C159 - C158) * C32259 +
             (C161 - C160) * C14634 + (C163 - C162) * C32242) *
                C14629 +
            (C1299 * C14631 + C1300 * C32279 + C1301 * C14632 + C1302 * C32272 +
             C2987 * C14633 + C2988 * C32259 + (C487 - C488) * C14634 +
             (C489 - C490) * C32242) *
                C32013) *
               C31925 * C466 +
           ((C1297 * C14631 + C1298 * C32279 + C816 * C14632 + C817 * C32272 +
             C2659 * C14633 + C2660 * C32259 + (C488 - C487) * C14634 +
             (C490 - C489) * C32242) *
                C14629 +
            (C974 * C14631 + C975 * C32279 + C830 * C14632 + C831 * C32272 +
             (C827 - C826) * C14633 + (C829 - C828) * C32259 +
             (C31966 * C267 - C113 * C248) * C14634 +
             (C31966 * C278 - C113 * C268) * C32242) *
                C32013) *
               C31925 * C467) *
              C469)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C32274 * C126 - C1751 * C119 + C32263 * C354 - C1752 * C344 +
              C32241 * C364 - C1753 * C349) *
                 C15325 +
             (C32274 * C140 - C1751 * C127 + C32263 * C374 - C1752 * C355 +
              C32241 * C379 - C1753 * C365) *
                 C15319 +
             (C1755 - C1756 + C1757 - C1758 + C1759 - C1760) * C15326 +
             (C1761 - C1762 + C1763 - C1764 + C1765 - C1766) * C31874) *
                C14629 +
            ((C6645 - C6646 + C6647 - C6648 + C6649 - C6650) * C15325 +
             (C6651 - C6652 + C6653 - C6654 + C6655 - C6656) * C15319 +
             C16576 * C15326 + C16577 * C31874) *
                C32013) *
               C31925 * C466 +
           (((C6646 - C6645 + C6648 - C6647 + C6650 - C6649) * C15325 +
             (C6652 - C6651 + C6654 - C6653 + C6656 - C6655) * C15319 +
             C16578 * C15326 + C16579 * C31874) *
                C14629 +
            ((C6658 - C6657 + C6660 - C6659 + C6662 - C6661) * C15325 +
             (C6664 - C6663 + C6666 - C6665 + C6668 - C6667) * C15319 +
             (C6966 - C6967 + C6968 - C6969 + C6970 - C6971) * C15326 +
             (C6972 - C6973 + C6974 - C6975 + C6976 - C6977) * C31874) *
                C32013) *
               C31925 * C467) *
              C468 +
          ((((C1756 - C1755 + C1758 - C1757 + C1760 - C1759) * C15325 +
             (C1762 - C1761 + C1764 - C1763 + C1766 - C1765) * C15319 +
             (C1768 - C1767 + C1770 - C1769 + C1772 - C1771) * C15326 +
             (C1774 - C1773 + C1776 - C1775 + C1778 - C1777) * C31874) *
                C14629 +
            (C16578 * C15325 + C16579 * C15319 +
             (C2207 - C2208 + C2209 - C2210 + C2211 - C2212) * C15326 +
             (C2213 - C2214 + C2215 - C2216 + C2217 - C2218) * C31874) *
                C32013) *
               C31925 * C466 +
           ((C16576 * C15325 + C16577 * C15319 +
             (C2208 - C2207 + C2210 - C2209 + C2212 - C2211) * C15326 +
             (C2214 - C2213 + C2216 - C2215 + C2218 - C2217) * C31874) *
                C14629 +
            ((C6967 - C6966 + C6969 - C6968 + C6971 - C6970) * C15325 +
             (C6973 - C6972 + C6975 - C6974 + C6977 - C6976) * C15319 +
             (C32274 * C263 - C1751 * C246 + C32263 * C1123 - C1752 * C1112 +
              C32241 * C1135 - C1753 * C1118) *
                 C15326 +
             (C32274 * C276 - C1751 * C264 + C32263 * C1139 - C1752 * C1124 +
              C32241 * C1145 - C1753 * C1136) *
                 C31874) *
                C32013) *
               C31925 * C467) *
              C469)) /
            (p * q * std::sqrt(p + q));
    d2ee[11] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31966 * C126 - C113 * C119) * C15325 +
             (C31966 * C140 - C113 * C127) * C15319 + (C148 - C149) * C15326 +
             (C150 - C151) * C31874) *
                C32280 +
            ((C966 - C967) * C15325 + (C968 - C969) * C15319 + C1297 * C15326 +
             C1298 * C31874) *
                C32276 +
            C15438 * C32266 + C15439 * C32248) *
               C572 +
           (((C113 * C344 - C31966 * C354) * C15325 +
             (C113 * C355 - C31966 * C374) * C15319 + (C579 - C580) * C15326 +
             (C581 - C582) * C31874) *
                C32280 +
            ((C1631 - C1632) * C15325 + (C1633 - C1634) * C15319 +
             (C1457 - C1458) * C15326 + (C1459 - C1460) * C31874) *
                C32276 +
            ((C1635 - C1636) * C15325 + (C1637 - C1638) * C15319 +
             (C1465 - C1466) * C15326 + (C1467 - C1468) * C31874) *
                C32266 +
            ((C6417 - C6418) * C15325 + (C6419 - C6420) * C15319 +
             (C7882 - C7883) * C15326 + (C7884 - C7885) * C31874) *
                C32248) *
               C573) *
              C466 +
          ((((C967 - C966) * C15325 + (C969 - C968) * C15319 + C1299 * C15326 +
             C1300 * C31874) *
                C32280 +
            ((C971 - C970) * C15325 + (C973 - C972) * C15319 + C1303 * C15326 +
             C1304 * C31874) *
                C32276 +
            ((C978 - C979) * C15325 + (C980 - C981) * C15319 + C7750 * C15326 +
             C7751 * C31874) *
                C32266 +
            ((C6065 - C6064) * C15325 + (C6067 - C6066) * C15319 +
             (C6241 - C6242) * C15326 + (C6243 - C6244) * C31874) *
                C32248) *
               C572 +
           (((C1632 - C1631) * C15325 + (C1634 - C1633) * C15319 +
             (C1458 - C1457) * C15326 + (C1460 - C1459) * C31874) *
                C32280 +
            ((C1636 - C1635) * C15325 + (C1638 - C1637) * C15319 +
             (C1466 - C1465) * C15326 + (C1468 - C1467) * C31874) *
                C32276 +
            ((C6418 - C6417) * C15325 + (C6420 - C6419) * C15319 +
             (C7883 - C7882) * C15326 + (C7885 - C7884) * C31874) *
                C32266 +
            ((C6422 - C6421) * C15325 + (C6424 - C6423) * C15319 +
             (C31966 * C6327 - C113 * C6326) * C15326 +
             (C31966 * C6329 - C113 * C6328) * C31874) *
                C32248) *
               C573) *
              C467) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31966 * C126 - C113 * C119) * C14631 +
             (C31966 * C140 - C113 * C127) * C32279 + (C148 - C149) * C14632 +
             (C150 - C151) * C32272 + C168 * C14633 + C169 * C32259 +
             C170 * C14634 + C171 * C32242) *
                C14629 +
            ((C966 - C967) * C14631 + (C968 - C969) * C32279 + C1297 * C14632 +
             C1298 * C32272 + C816 * C14633 + C817 * C32259 + C2659 * C14634 +
             C2660 * C32242) *
                C32013) *
               C572 +
           (((C113 * C344 - C31966 * C354) * C14631 +
             (C113 * C355 - C31966 * C374) * C32279 + (C579 - C580) * C14632 +
             (C581 - C582) * C32272 + (C583 - C584) * C14633 +
             (C585 - C586) * C32259 + (C587 - C588) * C14634 +
             (C589 - C590) * C32242) *
                C14629 +
            ((C1631 - C1632) * C14631 + (C1633 - C1634) * C32279 +
             (C1457 - C1458) * C14632 + (C1459 - C1460) * C32272 +
             (C1461 - C1462) * C14633 + (C1463 - C1464) * C32259 +
             (C3119 - C3120) * C14634 + (C3121 - C3122) * C32242) *
                C32013) *
               C573) *
              C466 +
          ((((C967 - C966) * C14631 + (C969 - C968) * C32279 + C1299 * C14632 +
             C1300 * C32272 + C1301 * C14633 + C1302 * C32259 + C2987 * C14634 +
             C2988 * C32242) *
                C14629 +
            ((C971 - C970) * C14631 + (C973 - C972) * C32279 + C1303 * C14632 +
             C1304 * C32272 + C1305 * C14633 + C1306 * C32259 +
             (C826 - C827) * C14634 + (C828 - C829) * C32242) *
                C32013) *
               C572 +
           (((C1632 - C1631) * C14631 + (C1634 - C1633) * C32279 +
             (C1458 - C1457) * C14632 + (C1460 - C1459) * C32272 +
             (C1462 - C1461) * C14633 + (C1464 - C1463) * C32259 +
             (C3120 - C3119) * C14634 + (C3122 - C3121) * C32242) *
                C14629 +
            ((C1636 - C1635) * C14631 + (C1638 - C1637) * C32279 +
             (C1466 - C1465) * C14632 + (C1468 - C1467) * C32272 +
             (C1470 - C1469) * C14633 + (C1472 - C1471) * C32259 +
             (C31966 * C1453 - C113 * C1452) * C14634 +
             (C31966 * C1455 - C113 * C1454) * C32242) *
                C32013) *
               C573) *
              C467) *
         C31899) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C32274 * C126 - C1751 * C119 + C32263 * C354 - C1752 * C344 +
              C32241 * C364 - C1753 * C349) *
                 C15325 +
             (C32274 * C140 - C1751 * C127 + C32263 * C374 - C1752 * C355 +
              C32241 * C379 - C1753 * C365) *
                 C15319 +
             (C1755 - C1756 + C1757 - C1758 + C1759 - C1760) * C15326 +
             (C1761 - C1762 + C1763 - C1764 + C1765 - C1766) * C31874) *
                C14629 +
            ((C6645 - C6646 + C6647 - C6648 + C6649 - C6650) * C15325 +
             (C6651 - C6652 + C6653 - C6654 + C6655 - C6656) * C15319 +
             C16576 * C15326 + C16577 * C31874) *
                C32013) *
               C572 +
           (((C1751 * C344 - C32274 * C354 + C1752 * C349 - C32263 * C364 +
              C1753 * C2020 - C32241 * C2026) *
                 C15325 +
             (C1751 * C355 - C32274 * C374 + C1752 * C365 - C32263 * C379 +
              C1753 * C2027 - C32241 * C2038) *
                 C15319 +
             (C2369 - C2370 + C2371 - C2372 + C2373 - C2374) * C15326 +
             (C2375 - C2376 + C2377 - C2378 + C2379 - C2380) * C31874) *
                C14629 +
            ((C7278 - C7279 + C7280 - C7281 + C7282 - C7283) * C15325 +
             (C7284 - C7285 + C7286 - C7287 + C7288 - C7289) * C15319 +
             (C16774 - C16775 + C16776 - C16777 + C16778 - C16779) * C15326 +
             (C16780 - C16781 + C16782 - C16783 + C16784 - C16785) * C31874) *
                C32013) *
               C573) *
              C466 +
          ((((C6646 - C6645 + C6648 - C6647 + C6650 - C6649) * C15325 +
             (C6652 - C6651 + C6654 - C6653 + C6656 - C6655) * C15319 +
             C16578 * C15326 + C16579 * C31874) *
                C14629 +
            ((C6658 - C6657 + C6660 - C6659 + C6662 - C6661) * C15325 +
             (C6664 - C6663 + C6666 - C6665 + C6668 - C6667) * C15319 +
             (C6966 - C6967 + C6968 - C6969 + C6970 - C6971) * C15326 +
             (C6972 - C6973 + C6974 - C6975 + C6976 - C6977) * C31874) *
                C32013) *
               C572 +
           (((C7279 - C7278 + C7281 - C7280 + C7283 - C7282) * C15325 +
             (C7285 - C7284 + C7287 - C7286 + C7289 - C7288) * C15319 +
             (C16775 - C16774 + C16777 - C16776 + C16779 - C16778) * C15326 +
             (C16781 - C16780 + C16783 - C16782 + C16785 - C16784) * C31874) *
                C14629 +
            ((C7291 - C7290 + C7293 - C7292 + C7295 - C7294) * C15325 +
             (C7297 - C7296 + C7299 - C7298 + C7301 - C7300) * C15319 +
             (C32274 * C1121 - C1751 * C1111 + C32263 * C1133 - C1752 * C1117 +
              C32241 * C7124 - C1753 * C7123) *
                 C15326 +
             (C32274 * C1138 - C1751 * C1122 + C32263 * C1144 - C1752 * C1134 +
              C32241 * C7126 - C1753 * C7125) *
                 C31874) *
                C32013) *
               C573) *
              C467) *
         C31899) /
            (p * q * std::sqrt(p + q));
    d2ee[12] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C31966 * C126 - C113 * C119) * C14631 +
                (C31966 * C140 - C113 * C127) * C32279 +
                (C148 - C149) * C14632 + (C150 - C151) * C32272 +
                C168 * C14633 + C169 * C32259 + C170 * C14634 + C171 * C32242) *
                   C14629 +
               ((C966 - C967) * C14631 + (C968 - C969) * C32279 +
                C1297 * C14632 + C1298 * C32272 + C816 * C14633 +
                C817 * C32259 + C2659 * C14634 + C2660 * C32242) *
                   C32013) *
                  C31925 * C31911 * C110 +
              (((C149 - C148) * C14631 + (C151 - C150) * C32279 +
                (C153 - C152) * C14632 + (C155 - C154) * C32272 +
                (C157 - C156) * C14633 + (C159 - C158) * C32259 +
                (C161 - C160) * C14634 + (C163 - C162) * C32242) *
                   C14629 +
               (C1299 * C14631 + C1300 * C32279 + C1301 * C14632 +
                C1302 * C32272 + C2987 * C14633 + C2988 * C32259 +
                (C487 - C488) * C14634 + (C489 - C490) * C32242) *
                   C32013) *
                  C31925 * C31911 * C111 +
              ((C168 * C14631 + C169 * C32279 + C170 * C14632 + C171 * C32272 +
                C172 * C14633 + C173 * C32259 + (C165 - C164) * C14634 +
                (C167 - C166) * C32242) *
                   C14629 +
               (C816 * C14631 + C817 * C32279 + C2659 * C14632 +
                C2660 * C32272 + (C488 - C487) * C14633 +
                (C490 - C489) * C32259 +
                (C31966 * C471 - C113 * C470) * C14634 +
                (C31966 * C473 - C113 * C472) * C32242) *
                   C32013) *
                  C31925 * C31911 * C112) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C31966 * C126 - C113 * C119) * C14631 +
                (C31966 * C140 - C113 * C127) * C32279 +
                (C148 - C149) * C14632 + (C150 - C151) * C32272 +
                C168 * C14633 + C169 * C32259 + C170 * C14634 + C171 * C32242) *
                   C14629 +
               ((C966 - C967) * C14631 + (C968 - C969) * C32279 +
                C1297 * C14632 + C1298 * C32272 + C816 * C14633 +
                C817 * C32259 + C2659 * C14634 + C2660 * C32242) *
                   C32013) *
                  C31925 * C235 +
              (((C967 - C966) * C14631 + (C969 - C968) * C32279 +
                C1299 * C14632 + C1300 * C32272 + C1301 * C14633 +
                C1302 * C32259 + C2987 * C14634 + C2988 * C32242) *
                   C14629 +
               ((C971 - C970) * C14631 + (C973 - C972) * C32279 +
                C1303 * C14632 + C1304 * C32272 + C1305 * C14633 +
                C1306 * C32259 + (C826 - C827) * C14634 +
                (C828 - C829) * C32242) *
                   C32013) *
                  C31925 * C236 +
              ((C990 * C14631 + C991 * C32279 + C974 * C14632 + C975 * C32272 +
                C830 * C14633 + C831 * C32259 + (C827 - C826) * C14634 +
                (C829 - C828) * C32242) *
                   C14629 +
               (C6062 * C14631 + C6063 * C32279 + C7512 * C14632 +
                C7513 * C32272 + (C987 - C986) * C14633 +
                (C989 - C988) * C32259 +
                (C31966 * C1293 - C113 * C1292) * C14634 +
                (C31966 * C1295 - C113 * C1294) * C32242) *
                   C32013) *
                  C31925 * C237) *
             C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31966 * C126 - C113 * C119) * C14631 +
            (C31966 * C140 - C113 * C127) * C32279 + (C148 - C149) * C14632 +
            (C150 - C151) * C32272 + C168 * C14633 + C169 * C32259 +
            C170 * C14634 + C171 * C32242) *
               C14629 +
           ((C966 - C967) * C14631 + (C968 - C969) * C32279 + C1297 * C14632 +
            C1298 * C32272 + C816 * C14633 + C817 * C32259 + C2659 * C14634 +
            C2660 * C32242) *
               C32013) *
              C341 +
          (((C113 * C344 - C31966 * C354) * C14631 +
            (C113 * C355 - C31966 * C374) * C32279 + (C579 - C580) * C14632 +
            (C581 - C582) * C32272 + (C583 - C584) * C14633 +
            (C585 - C586) * C32259 + (C587 - C588) * C14634 +
            (C589 - C590) * C32242) *
               C14629 +
           ((C1631 - C1632) * C14631 + (C1633 - C1634) * C32279 +
            (C1457 - C1458) * C14632 + (C1459 - C1460) * C32272 +
            (C1461 - C1462) * C14633 + (C1463 - C1464) * C32259 +
            (C3119 - C3120) * C14634 + (C3121 - C3122) * C32242) *
               C32013) *
              C342 +
          (((C31966 * C364 - C113 * C349) * C14631 +
            (C31966 * C379 - C113 * C365) * C32279 +
            (C31966 * C366 - C113 * C350) * C14632 +
            (C31966 * C380 - C113 * C367) * C32272 +
            (C31966 * C368 - C113 * C351) * C14633 +
            (C31966 * C381 - C113 * C369) * C32259 +
            (C31966 * C370 - C113 * C352) * C14634 +
            (C31966 * C382 - C113 * C371) * C32242) *
               C14629 +
           ((C31966 * C1125 - C113 * C1113) * C14631 +
            (C31966 * C1140 - C113 * C1126) * C32279 +
            (C31966 * C1127 - C113 * C1114) * C14632 +
            (C31966 * C1141 - C113 * C1128) * C32272 +
            (C31966 * C1129 - C113 * C1115) * C14633 +
            (C31966 * C1142 - C113 * C1130) * C32259 +
            (C31966 * C2191 - C113 * C2190) * C14634 +
            (C31966 * C2193 - C113 * C2192) * C32242) *
               C32013) *
              C343) *
         C31911 * C31899) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C31966 * C126 - C113 * C119) * C15325 +
            (C31966 * C140 - C113 * C127) * C15319 + (C148 - C149) * C15326 +
            (C150 - C151) * C31874) *
               C32280 +
           ((C966 - C967) * C15325 + (C968 - C969) * C15319 + C1297 * C15326 +
            C1298 * C31874) *
               C32276 +
           (C990 * C15325 + C991 * C15319 + C974 * C15326 + C975 * C31874) *
               C32266 +
           (C6062 * C15325 + C6063 * C15319 + C7512 * C15326 + C7513 * C31874) *
               C32248) *
              C31925 * C31911 * C110 +
          (((C149 - C148) * C15325 + (C151 - C150) * C15319 +
            (C153 - C152) * C15326 + (C155 - C154) * C31874) *
               C32280 +
           (C1299 * C15325 + C1300 * C15319 + C1301 * C15326 + C1302 * C31874) *
               C32276 +
           (C1303 * C15325 + C1304 * C15319 + C1305 * C15326 + C1306 * C31874) *
               C32266 +
           (C7750 * C15325 + C7751 * C15319 + (C986 - C987) * C15326 +
            (C988 - C989) * C31874) *
               C32248) *
              C31925 * C31911 * C111 +
          ((C168 * C15325 + C169 * C15319 + C170 * C15326 + C171 * C31874) *
               C32280 +
           (C816 * C15325 + C817 * C15319 + C2659 * C15326 + C2660 * C31874) *
               C32276 +
           (C830 * C15325 + C831 * C15319 + (C827 - C826) * C15326 +
            (C829 - C828) * C31874) *
               C32266 +
           ((C987 - C986) * C15325 + (C989 - C988) * C15319 +
            (C31966 * C1293 - C113 * C1292) * C15326 +
            (C31966 * C1295 - C113 * C1294) * C31874) *
               C32248) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C31966 * C126 - C113 * C119) * C15325 +
            (C31966 * C140 - C113 * C127) * C15319 + (C148 - C149) * C15326 +
            (C150 - C151) * C31874) *
               C32280 +
           ((C966 - C967) * C15325 + (C968 - C969) * C15319 + C1297 * C15326 +
            C1298 * C31874) *
               C32276 +
           C15438 * C32266 + C15439 * C32248) *
              C31925 * C235 +
          (((C967 - C966) * C15325 + (C969 - C968) * C15319 + C1299 * C15326 +
            C1300 * C31874) *
               C32280 +
           ((C971 - C970) * C15325 + (C973 - C972) * C15319 + C1303 * C15326 +
            C1304 * C31874) *
               C32276 +
           ((C978 - C979) * C15325 + (C980 - C981) * C15319 + C7750 * C15326 +
            C7751 * C31874) *
               C32266 +
           ((C6065 - C6064) * C15325 + (C6067 - C6066) * C15319 +
            (C6241 - C6242) * C15326 + (C6243 - C6244) * C31874) *
               C32248) *
              C31925 * C236 +
          (C15438 * C32280 + C15439 * C32276 +
           (C6075 * C15325 + C6076 * C15319 + (C6242 - C6241) * C15326 +
            (C6244 - C6243) * C31874) *
               C32266 +
           ((C6069 - C6068) * C15325 + (C6071 - C6070) * C15319 +
            (C31966 * C6237 - C113 * C6236) * C15326 +
            (C31966 * C6239 - C113 * C6238) * C31874) *
               C32248) *
              C31925 * C237) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31966 * C126 - C113 * C119) * C15325 +
            (C31966 * C140 - C113 * C127) * C15319 + (C148 - C149) * C15326 +
            (C150 - C151) * C31874) *
               C32280 +
           ((C966 - C967) * C15325 + (C968 - C969) * C15319 + C1297 * C15326 +
            C1298 * C31874) *
               C32276 +
           C15438 * C32266 + C15439 * C32248) *
              C341 +
          (((C113 * C344 - C31966 * C354) * C15325 +
            (C113 * C355 - C31966 * C374) * C15319 + (C579 - C580) * C15326 +
            (C581 - C582) * C31874) *
               C32280 +
           ((C1631 - C1632) * C15325 + (C1633 - C1634) * C15319 +
            (C1457 - C1458) * C15326 + (C1459 - C1460) * C31874) *
               C32276 +
           ((C1635 - C1636) * C15325 + (C1637 - C1638) * C15319 +
            (C1465 - C1466) * C15326 + (C1467 - C1468) * C31874) *
               C32266 +
           ((C6417 - C6418) * C15325 + (C6419 - C6420) * C15319 +
            (C7882 - C7883) * C15326 + (C7884 - C7885) * C31874) *
               C32248) *
              C342 +
          (((C31966 * C364 - C113 * C349) * C15325 +
            (C31966 * C379 - C113 * C365) * C15319 +
            (C31966 * C366 - C113 * C350) * C15326 +
            (C31966 * C380 - C113 * C367) * C31874) *
               C32280 +
           ((C31966 * C1125 - C113 * C1113) * C15325 +
            (C31966 * C1140 - C113 * C1126) * C15319 +
            (C31966 * C1127 - C113 * C1114) * C15326 +
            (C31966 * C1141 - C113 * C1128) * C31874) *
               C32276 +
           ((C31966 * C1131 - C113 * C1116) * C15325 +
            (C31966 * C1143 - C113 * C1132) * C15319 +
            (C31966 * C1133 - C113 * C1117) * C15326 +
            (C31966 * C1144 - C113 * C1134) * C31874) *
               C32266 +
           ((C31966 * C6147 - C113 * C6143) * C15325 +
            (C31966 * C6152 - C113 * C6148) * C15319 +
            (C31966 * C6962 - C113 * C6961) * C15326 +
            (C31966 * C6964 - C113 * C6963) * C31874) *
               C32248) *
              C343) *
         C31911 * C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C32274 * C126 - C1751 * C119 + C32263 * C354 - C1752 * C344 +
             C32241 * C364 - C1753 * C349) *
                C15325 +
            (C32274 * C140 - C1751 * C127 + C32263 * C374 - C1752 * C355 +
             C32241 * C379 - C1753 * C365) *
                C15319 +
            (C1755 - C1756 + C1757 - C1758 + C1759 - C1760) * C15326 +
            (C1761 - C1762 + C1763 - C1764 + C1765 - C1766) * C31874) *
               C14629 +
           ((C6645 - C6646 + C6647 - C6648 + C6649 - C6650) * C15325 +
            (C6651 - C6652 + C6653 - C6654 + C6655 - C6656) * C15319 +
            (C2196 - C2195 + C2198 - C2197 + C2200 - C2199) * C15326 +
            (C2202 - C2201 + C2204 - C2203 + C2206 - C2205) * C31874) *
               C32013) *
              C31925 * C31911 * C110 +
          (((C1756 - C1755 + C1758 - C1757 + C1760 - C1759) * C15325 +
            (C1762 - C1761 + C1764 - C1763 + C1766 - C1765) * C15319 +
            (C1768 - C1767 + C1770 - C1769 + C1772 - C1771) * C15326 +
            (C1774 - C1773 + C1776 - C1775 + C1778 - C1777) * C31874) *
               C14629 +
           ((C2195 - C2196 + C2197 - C2198 + C2199 - C2200) * C15325 +
            (C2201 - C2202 + C2203 - C2204 + C2205 - C2206) * C15319 +
            (C2207 - C2208 + C2209 - C2210 + C2211 - C2212) * C15326 +
            (C2213 - C2214 + C2215 - C2216 + C2217 - C2218) * C31874) *
               C32013) *
              C31925 * C31911 * C111 +
          ((C1799 * C15325 + C1800 * C15319 +
            (C1780 - C1779 + C1782 - C1781 + C1784 - C1783) * C15326 +
            (C1786 - C1785 + C1788 - C1787 + C1790 - C1789) * C31874) *
               C14629 +
           ((C2208 - C2207 + C2210 - C2209 + C2212 - C2211) * C15325 +
            (C2214 - C2213 + C2216 - C2215 + C2218 - C2217) * C15319 +
            (C32274 * C255 - C1751 * C242 + C32263 * C687 - C1752 * C679 +
             C32241 * C2191 - C1753 * C2190) *
                C15326 +
            (C32274 * C272 - C1751 * C256 + C32263 * C694 - C1752 * C688 +
             C32241 * C2193 - C1753 * C2192) *
                C31874) *
               C32013) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C32274 * C126 - C1751 * C119 + C32263 * C354 - C1752 * C344 +
             C32241 * C364 - C1753 * C349) *
                C15325 +
            (C32274 * C140 - C1751 * C127 + C32263 * C374 - C1752 * C355 +
             C32241 * C379 - C1753 * C365) *
                C15319 +
            (C1755 - C1756 + C1757 - C1758 + C1759 - C1760) * C15326 +
            (C1761 - C1762 + C1763 - C1764 + C1765 - C1766) * C31874) *
               C14629 +
           ((C6645 - C6646 + C6647 - C6648 + C6649 - C6650) * C15325 +
            (C6651 - C6652 + C6653 - C6654 + C6655 - C6656) * C15319 +
            (C2196 - C2195 + C2198 - C2197 + C2200 - C2199) * C15326 +
            (C2202 - C2201 + C2204 - C2203 + C2206 - C2205) * C31874) *
               C32013) *
              C31925 * C235 +
          (((C6646 - C6645 + C6648 - C6647 + C6650 - C6649) * C15325 +
            (C6652 - C6651 + C6654 - C6653 + C6656 - C6655) * C15319 +
            (C2195 - C2196 + C2197 - C2198 + C2199 - C2200) * C15326 +
            (C2201 - C2202 + C2203 - C2204 + C2205 - C2206) * C31874) *
               C14629 +
           ((C6658 - C6657 + C6660 - C6659 + C6662 - C6661) * C15325 +
            (C6664 - C6663 + C6666 - C6665 + C6668 - C6667) * C15319 +
            (C6966 - C6967 + C6968 - C6969 + C6970 - C6971) * C15326 +
            (C6972 - C6973 + C6974 - C6975 + C6976 - C6977) * C31874) *
               C32013) *
              C31925 * C236 +
          ((C6689 * C15325 + C6690 * C15319 +
            (C6967 - C6966 + C6969 - C6968 + C6971 - C6970) * C15326 +
            (C6973 - C6972 + C6975 - C6974 + C6977 - C6976) * C31874) *
               C14629 +
           ((C6670 - C6669 + C6672 - C6671 + C6674 - C6673) * C15325 +
            (C6676 - C6675 + C6678 - C6677 + C6680 - C6679) * C15319 +
            (C32274 * C949 - C1751 * C942 + C32263 * C1623 - C1752 * C1619 +
             C32241 * C6962 - C1753 * C6961) *
                C15326 +
            (C32274 * C960 - C1751 * C950 + C32263 * C1628 - C1752 * C1624 +
             C32241 * C6964 - C1753 * C6963) *
                C31874) *
               C32013) *
              C31925 * C237) *
         C31899) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C32274 * C126 - C1751 * C119 + C32263 * C354 - C1752 * C344 +
             C32241 * C364 - C1753 * C349) *
                C15325 +
            (C32274 * C140 - C1751 * C127 + C32263 * C374 - C1752 * C355 +
             C32241 * C379 - C1753 * C365) *
                C15319 +
            (C1755 - C1756 + C1757 - C1758 + C1759 - C1760) * C15326 +
            (C1761 - C1762 + C1763 - C1764 + C1765 - C1766) * C31874) *
               C14629 +
           ((C6645 - C6646 + C6647 - C6648 + C6649 - C6650) * C15325 +
            (C6651 - C6652 + C6653 - C6654 + C6655 - C6656) * C15319 +
            (C2196 - C2195 + C2198 - C2197 + C2200 - C2199) * C15326 +
            (C2202 - C2201 + C2204 - C2203 + C2206 - C2205) * C31874) *
               C32013) *
              C341 +
          (((C1751 * C344 - C32274 * C354 + C1752 * C349 - C32263 * C364 +
             C1753 * C2020 - C32241 * C2026) *
                C15325 +
            (C1751 * C355 - C32274 * C374 + C1752 * C365 - C32263 * C379 +
             C1753 * C2027 - C32241 * C2038) *
                C15319 +
            (C2369 - C2370 + C2371 - C2372 + C2373 - C2374) * C15326 +
            (C2375 - C2376 + C2377 - C2378 + C2379 - C2380) * C31874) *
               C14629 +
           ((C7278 - C7279 + C7280 - C7281 + C7282 - C7283) * C15325 +
            (C7284 - C7285 + C7286 - C7287 + C7288 - C7289) * C15319 +
            (C1751 * C677 - C32274 * C683 + C1752 * C1114 - C32263 * C1127 +
             C1753 * C2539 - C32241 * C2543) *
                C15326 +
            (C1751 * C684 - C32274 * C692 + C1752 * C1128 - C32263 * C1141 +
             C1753 * C2544 - C32241 * C2548) *
                C31874) *
               C32013) *
              C342 +
          (((C32274 * C364 - C1751 * C349 + C32263 * C2026 - C1752 * C2020 +
             C32241 * C2032 - C1753 * C2023) *
                C15325 +
            (C32274 * C379 - C1751 * C365 + C32263 * C2038 - C1752 * C2027 +
             C32241 * C2041 - C1753 * C2033) *
                C15319 +
            (C32274 * C366 - C1751 * C350 + C32263 * C2028 - C1752 * C2021 +
             C32241 * C2034 - C1753 * C2024) *
                C15326 +
            (C32274 * C380 - C1751 * C367 + C32263 * C2039 - C1752 * C2029 +
             C32241 * C2042 - C1753 * C2035) *
                C31874) *
               C14629 +
           ((C32274 * C1125 - C1751 * C1113 + C32263 * C2541 - C1752 * C2538 +
             C32241 * C6808 - C1753 * C6804) *
                C15325 +
            (C32274 * C1140 - C1751 * C1126 + C32263 * C2547 - C1752 * C2542 +
             C32241 * C6813 - C1753 * C6809) *
                C15319 +
            (C32274 * C1127 - C1751 * C1114 + C32263 * C2543 - C1752 * C2539 +
             C32241 * C11812 - C1753 * C11811) *
                C15326 +
            (C32274 * C1141 - C1751 * C1128 + C32263 * C2548 - C1752 * C2544 +
             C32241 * C11814 - C1753 * C11813) *
                C31874) *
               C32013) *
              C343) *
         C31911 * C31899) /
            (p * q * std::sqrt(p + q));
    d2ee[13] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31966 * C126 - C113 * C119) * C15325 +
             (C31966 * C140 - C113 * C127) * C15319 + (C148 - C149) * C15326 +
             (C150 - C151) * C31874) *
                C32280 +
            ((C966 - C967) * C15325 + (C968 - C969) * C15319 + C1297 * C15326 +
             C1298 * C31874) *
                C32276 +
            C15438 * C32266 + C15439 * C32248) *
               C572 +
           (((C113 * C344 - C31966 * C354) * C15325 +
             (C113 * C355 - C31966 * C374) * C15319 + (C579 - C580) * C15326 +
             (C581 - C582) * C31874) *
                C32280 +
            ((C1631 - C1632) * C15325 + (C1633 - C1634) * C15319 +
             (C1457 - C1458) * C15326 + (C1459 - C1460) * C31874) *
                C32276 +
            ((C1635 - C1636) * C15325 + (C1637 - C1638) * C15319 +
             (C1465 - C1466) * C15326 + (C1467 - C1468) * C31874) *
                C32266 +
            ((C6417 - C6418) * C15325 + (C6419 - C6420) * C15319 +
             (C7882 - C7883) * C15326 + (C7884 - C7885) * C31874) *
                C32248) *
               C573) *
              C31911 * C468 +
          ((((C149 - C148) * C15325 + (C151 - C150) * C15319 +
             (C153 - C152) * C15326 + (C155 - C154) * C31874) *
                C32280 +
            (C1299 * C15325 + C1300 * C15319 + C1301 * C15326 +
             C1302 * C31874) *
                C32276 +
            (C1303 * C15325 + C1304 * C15319 + C1305 * C15326 +
             C1306 * C31874) *
                C32266 +
            (C7750 * C15325 + C7751 * C15319 + (C986 - C987) * C15326 +
             (C988 - C989) * C31874) *
                C32248) *
               C572 +
           (((C580 - C579) * C15325 + (C582 - C581) * C15319 +
             (C584 - C583) * C15326 + (C586 - C585) * C31874) *
                C32280 +
            ((C1458 - C1457) * C15325 + (C1460 - C1459) * C15319 +
             (C1462 - C1461) * C15326 + (C1464 - C1463) * C31874) *
                C32276 +
            ((C1466 - C1465) * C15325 + (C1468 - C1467) * C15319 +
             (C1470 - C1469) * C15326 + (C1472 - C1471) * C31874) *
                C32266 +
            ((C7883 - C7882) * C15325 + (C7885 - C7884) * C15319 +
             (C31966 * C1625 - C113 * C1620) * C15326 +
             (C31966 * C1629 - C113 * C1626) * C31874) *
                C32248) *
               C573) *
              C31911 * C469)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31966 * C126 - C113 * C119) * C14631 +
             (C31966 * C140 - C113 * C127) * C32279 + (C148 - C149) * C14632 +
             (C150 - C151) * C32272 + C168 * C14633 + C169 * C32259 +
             C170 * C14634 + C171 * C32242) *
                C14629 +
            ((C966 - C967) * C14631 + (C968 - C969) * C32279 + C1297 * C14632 +
             C1298 * C32272 + C816 * C14633 + C817 * C32259 + C2659 * C14634 +
             C2660 * C32242) *
                C32013) *
               C572 +
           (((C113 * C344 - C31966 * C354) * C14631 +
             (C113 * C355 - C31966 * C374) * C32279 + (C579 - C580) * C14632 +
             (C581 - C582) * C32272 + (C583 - C584) * C14633 +
             (C585 - C586) * C32259 + (C587 - C588) * C14634 +
             (C589 - C590) * C32242) *
                C14629 +
            ((C1631 - C1632) * C14631 + (C1633 - C1634) * C32279 +
             (C1457 - C1458) * C14632 + (C1459 - C1460) * C32272 +
             (C1461 - C1462) * C14633 + (C1463 - C1464) * C32259 +
             (C3119 - C3120) * C14634 + (C3121 - C3122) * C32242) *
                C32013) *
               C573) *
              C31911 * C468 +
          ((((C149 - C148) * C14631 + (C151 - C150) * C32279 +
             (C153 - C152) * C14632 + (C155 - C154) * C32272 +
             (C157 - C156) * C14633 + (C159 - C158) * C32259 +
             (C161 - C160) * C14634 + (C163 - C162) * C32242) *
                C14629 +
            (C1299 * C14631 + C1300 * C32279 + C1301 * C14632 + C1302 * C32272 +
             C2987 * C14633 + C2988 * C32259 + (C487 - C488) * C14634 +
             (C489 - C490) * C32242) *
                C32013) *
               C572 +
           (((C580 - C579) * C14631 + (C582 - C581) * C32279 +
             (C584 - C583) * C14632 + (C586 - C585) * C32272 +
             (C588 - C587) * C14633 + (C590 - C589) * C32259 +
             (C592 - C591) * C14634 + (C594 - C593) * C32242) *
                C14629 +
            ((C1458 - C1457) * C14631 + (C1460 - C1459) * C32279 +
             (C1462 - C1461) * C14632 + (C1464 - C1463) * C32272 +
             (C3120 - C3119) * C14633 + (C3122 - C3121) * C32259 +
             (C31966 * C689 - C113 * C680) * C14634 +
             (C31966 * C695 - C113 * C690) * C32242) *
                C32013) *
               C573) *
              C31911 * C469)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C32274 * C126 - C1751 * C119 + C32263 * C354 - C1752 * C344 +
              C32241 * C364 - C1753 * C349) *
                 C15325 +
             (C32274 * C140 - C1751 * C127 + C32263 * C374 - C1752 * C355 +
              C32241 * C379 - C1753 * C365) *
                 C15319 +
             (C1755 - C1756 + C1757 - C1758 + C1759 - C1760) * C15326 +
             (C1761 - C1762 + C1763 - C1764 + C1765 - C1766) * C31874) *
                C14629 +
            ((C6645 - C6646 + C6647 - C6648 + C6649 - C6650) * C15325 +
             (C6651 - C6652 + C6653 - C6654 + C6655 - C6656) * C15319 +
             C16576 * C15326 + C16577 * C31874) *
                C32013) *
               C572 +
           (((C1751 * C344 - C32274 * C354 + C1752 * C349 - C32263 * C364 +
              C1753 * C2020 - C32241 * C2026) *
                 C15325 +
             (C1751 * C355 - C32274 * C374 + C1752 * C365 - C32263 * C379 +
              C1753 * C2027 - C32241 * C2038) *
                 C15319 +
             (C2369 - C2370 + C2371 - C2372 + C2373 - C2374) * C15326 +
             (C2375 - C2376 + C2377 - C2378 + C2379 - C2380) * C31874) *
                C14629 +
            ((C7278 - C7279 + C7280 - C7281 + C7282 - C7283) * C15325 +
             (C7284 - C7285 + C7286 - C7287 + C7288 - C7289) * C15319 +
             (C16774 - C16775 + C16776 - C16777 + C16778 - C16779) * C15326 +
             (C16780 - C16781 + C16782 - C16783 + C16784 - C16785) * C31874) *
                C32013) *
               C573) *
              C31911 * C468 +
          ((((C1756 - C1755 + C1758 - C1757 + C1760 - C1759) * C15325 +
             (C1762 - C1761 + C1764 - C1763 + C1766 - C1765) * C15319 +
             (C1768 - C1767 + C1770 - C1769 + C1772 - C1771) * C15326 +
             (C1774 - C1773 + C1776 - C1775 + C1778 - C1777) * C31874) *
                C14629 +
            (C16578 * C15325 + C16579 * C15319 +
             (C2207 - C2208 + C2209 - C2210 + C2211 - C2212) * C15326 +
             (C2213 - C2214 + C2215 - C2216 + C2217 - C2218) * C31874) *
                C32013) *
               C572 +
           (((C2370 - C2369 + C2372 - C2371 + C2374 - C2373) * C15325 +
             (C2376 - C2375 + C2378 - C2377 + C2380 - C2379) * C15319 +
             (C2382 - C2381 + C2384 - C2383 + C2386 - C2385) * C15326 +
             (C2388 - C2387 + C2390 - C2389 + C2392 - C2391) * C31874) *
                C14629 +
            ((C16775 - C16774 + C16777 - C16776 + C16779 - C16778) * C15325 +
             (C16781 - C16780 + C16783 - C16782 + C16785 - C16784) * C15319 +
             (C32274 * C685 - C1751 * C678 + C32263 * C1129 - C1752 * C1115 +
              C32241 * C2545 - C1753 * C2540) *
                 C15326 +
             (C32274 * C693 - C1751 * C686 + C32263 * C1142 - C1752 * C1130 +
              C32241 * C2549 - C1753 * C2546) *
                 C31874) *
                C32013) *
               C573) *
              C31911 * C469)) /
            (p * q * std::sqrt(p + q));
    d2ee[14] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31966 * C126 - C113 * C119) * C14631 +
            (C31966 * C140 - C113 * C127) * C32279 + (C148 - C149) * C14632 +
            (C150 - C151) * C32272 + C168 * C14633 + C169 * C32259 +
            C170 * C14634 + C171 * C32242) *
               C14629 +
           ((C966 - C967) * C14631 + (C968 - C969) * C32279 + C1297 * C14632 +
            C1298 * C32272 + C816 * C14633 + C817 * C32259 + C2659 * C14634 +
            C2660 * C32242) *
               C32013) *
              C31925 * C235 +
          (((C967 - C966) * C14631 + (C969 - C968) * C32279 + C1299 * C14632 +
            C1300 * C32272 + C1301 * C14633 + C1302 * C32259 + C2987 * C14634 +
            C2988 * C32242) *
               C14629 +
           ((C971 - C970) * C14631 + (C973 - C972) * C32279 + C1303 * C14632 +
            C1304 * C32272 + C1305 * C14633 + C1306 * C32259 +
            (C826 - C827) * C14634 + (C828 - C829) * C32242) *
               C32013) *
              C31925 * C236 +
          ((C990 * C14631 + C991 * C32279 + C974 * C14632 + C975 * C32272 +
            C830 * C14633 + C831 * C32259 + (C827 - C826) * C14634 +
            (C829 - C828) * C32242) *
               C14629 +
           (C6062 * C14631 + C6063 * C32279 + C7512 * C14632 + C7513 * C32272 +
            (C987 - C986) * C14633 + (C989 - C988) * C32259 +
            (C31966 * C1293 - C113 * C1292) * C14634 +
            (C31966 * C1295 - C113 * C1294) * C32242) *
               C32013) *
              C31925 * C237) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31966 * C126 - C113 * C119) * C14631 +
            (C31966 * C140 - C113 * C127) * C32279 + (C148 - C149) * C14632 +
            (C150 - C151) * C32272 + C168 * C14633 + C169 * C32259 +
            C170 * C14634 + C171 * C32242) *
               C14629 +
           ((C966 - C967) * C14631 + (C968 - C969) * C32279 + C1297 * C14632 +
            C1298 * C32272 + C816 * C14633 + C817 * C32259 + C2659 * C14634 +
            C2660 * C32242) *
               C32013) *
              C31925 * C31911 * C110 +
          (((C149 - C148) * C14631 + (C151 - C150) * C32279 +
            (C153 - C152) * C14632 + (C155 - C154) * C32272 +
            (C157 - C156) * C14633 + (C159 - C158) * C32259 +
            (C161 - C160) * C14634 + (C163 - C162) * C32242) *
               C14629 +
           (C1299 * C14631 + C1300 * C32279 + C1301 * C14632 + C1302 * C32272 +
            C2987 * C14633 + C2988 * C32259 + (C487 - C488) * C14634 +
            (C489 - C490) * C32242) *
               C32013) *
              C31925 * C31911 * C111 +
          ((C168 * C14631 + C169 * C32279 + C170 * C14632 + C171 * C32272 +
            C172 * C14633 + C173 * C32259 + (C165 - C164) * C14634 +
            (C167 - C166) * C32242) *
               C14629 +
           (C816 * C14631 + C817 * C32279 + C2659 * C14632 + C2660 * C32272 +
            (C488 - C487) * C14633 + (C490 - C489) * C32259 +
            (C31966 * C471 - C113 * C470) * C14634 +
            (C31966 * C473 - C113 * C472) * C32242) *
               C32013) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31966 * C126 - C113 * C119) * C15325 +
            (C31966 * C140 - C113 * C127) * C15319 + (C148 - C149) * C15326 +
            (C150 - C151) * C31874) *
               C32280 +
           ((C966 - C967) * C15325 + (C968 - C969) * C15319 + C1297 * C15326 +
            C1298 * C31874) *
               C32276 +
           (C990 * C15325 + C991 * C15319 + C974 * C15326 + C975 * C31874) *
               C32266 +
           (C6062 * C15325 + C6063 * C15319 + C7512 * C15326 + C7513 * C31874) *
               C32248) *
              C31925 * C31911 * C110 +
          (((C149 - C148) * C15325 + (C151 - C150) * C15319 +
            (C153 - C152) * C15326 + (C155 - C154) * C31874) *
               C32280 +
           (C1299 * C15325 + C1300 * C15319 + C1301 * C15326 + C1302 * C31874) *
               C32276 +
           (C1303 * C15325 + C1304 * C15319 + C1305 * C15326 + C1306 * C31874) *
               C32266 +
           (C7750 * C15325 + C7751 * C15319 + (C986 - C987) * C15326 +
            (C988 - C989) * C31874) *
               C32248) *
              C31925 * C31911 * C111 +
          ((C168 * C15325 + C169 * C15319 + C170 * C15326 + C171 * C31874) *
               C32280 +
           (C816 * C15325 + C817 * C15319 + C2659 * C15326 + C2660 * C31874) *
               C32276 +
           (C830 * C15325 + C831 * C15319 + (C827 - C826) * C15326 +
            (C829 - C828) * C31874) *
               C32266 +
           ((C987 - C986) * C15325 + (C989 - C988) * C15319 +
            (C31966 * C1293 - C113 * C1292) * C15326 +
            (C31966 * C1295 - C113 * C1294) * C31874) *
               C32248) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31966 * C126 - C113 * C119) * C15325 +
            (C31966 * C140 - C113 * C127) * C15319 + (C148 - C149) * C15326 +
            (C150 - C151) * C31874) *
               C32280 +
           ((C966 - C967) * C15325 + (C968 - C969) * C15319 + C1297 * C15326 +
            C1298 * C31874) *
               C32276 +
           C15438 * C32266 + C15439 * C32248) *
              C31925 * C235 +
          (((C967 - C966) * C15325 + (C969 - C968) * C15319 + C1299 * C15326 +
            C1300 * C31874) *
               C32280 +
           ((C971 - C970) * C15325 + (C973 - C972) * C15319 + C1303 * C15326 +
            C1304 * C31874) *
               C32276 +
           ((C978 - C979) * C15325 + (C980 - C981) * C15319 + C7750 * C15326 +
            C7751 * C31874) *
               C32266 +
           ((C6065 - C6064) * C15325 + (C6067 - C6066) * C15319 +
            (C6241 - C6242) * C15326 + (C6243 - C6244) * C31874) *
               C32248) *
              C31925 * C236 +
          (C15438 * C32280 + C15439 * C32276 +
           (C6075 * C15325 + C6076 * C15319 + (C6242 - C6241) * C15326 +
            (C6244 - C6243) * C31874) *
               C32266 +
           ((C6069 - C6068) * C15325 + (C6071 - C6070) * C15319 +
            (C31966 * C6237 - C113 * C6236) * C15326 +
            (C31966 * C6239 - C113 * C6238) * C31874) *
               C32248) *
              C31925 * C237) *
         C31899) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C32274 * C126 - C1751 * C119 + C32263 * C354 - C1752 * C344 +
             C32241 * C364 - C1753 * C349) *
                C15325 +
            (C32274 * C140 - C1751 * C127 + C32263 * C374 - C1752 * C355 +
             C32241 * C379 - C1753 * C365) *
                C15319 +
            (C1755 - C1756 + C1757 - C1758 + C1759 - C1760) * C15326 +
            (C1761 - C1762 + C1763 - C1764 + C1765 - C1766) * C31874) *
               C14629 +
           ((C6645 - C6646 + C6647 - C6648 + C6649 - C6650) * C15325 +
            (C6651 - C6652 + C6653 - C6654 + C6655 - C6656) * C15319 +
            (C2196 - C2195 + C2198 - C2197 + C2200 - C2199) * C15326 +
            (C2202 - C2201 + C2204 - C2203 + C2206 - C2205) * C31874) *
               C32013) *
              C31925 * C31911 * C110 +
          (((C1756 - C1755 + C1758 - C1757 + C1760 - C1759) * C15325 +
            (C1762 - C1761 + C1764 - C1763 + C1766 - C1765) * C15319 +
            (C1768 - C1767 + C1770 - C1769 + C1772 - C1771) * C15326 +
            (C1774 - C1773 + C1776 - C1775 + C1778 - C1777) * C31874) *
               C14629 +
           ((C2195 - C2196 + C2197 - C2198 + C2199 - C2200) * C15325 +
            (C2201 - C2202 + C2203 - C2204 + C2205 - C2206) * C15319 +
            (C2207 - C2208 + C2209 - C2210 + C2211 - C2212) * C15326 +
            (C2213 - C2214 + C2215 - C2216 + C2217 - C2218) * C31874) *
               C32013) *
              C31925 * C31911 * C111 +
          ((C1799 * C15325 + C1800 * C15319 +
            (C1780 - C1779 + C1782 - C1781 + C1784 - C1783) * C15326 +
            (C1786 - C1785 + C1788 - C1787 + C1790 - C1789) * C31874) *
               C14629 +
           ((C2208 - C2207 + C2210 - C2209 + C2212 - C2211) * C15325 +
            (C2214 - C2213 + C2216 - C2215 + C2218 - C2217) * C15319 +
            (C32274 * C255 - C1751 * C242 + C32263 * C687 - C1752 * C679 +
             C32241 * C2191 - C1753 * C2190) *
                C15326 +
            (C32274 * C272 - C1751 * C256 + C32263 * C694 - C1752 * C688 +
             C32241 * C2193 - C1753 * C2192) *
                C31874) *
               C32013) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C32274 * C126 - C1751 * C119 + C32263 * C354 - C1752 * C344 +
             C32241 * C364 - C1753 * C349) *
                C15325 +
            (C32274 * C140 - C1751 * C127 + C32263 * C374 - C1752 * C355 +
             C32241 * C379 - C1753 * C365) *
                C15319 +
            (C1755 - C1756 + C1757 - C1758 + C1759 - C1760) * C15326 +
            (C1761 - C1762 + C1763 - C1764 + C1765 - C1766) * C31874) *
               C14629 +
           ((C6645 - C6646 + C6647 - C6648 + C6649 - C6650) * C15325 +
            (C6651 - C6652 + C6653 - C6654 + C6655 - C6656) * C15319 +
            (C2196 - C2195 + C2198 - C2197 + C2200 - C2199) * C15326 +
            (C2202 - C2201 + C2204 - C2203 + C2206 - C2205) * C31874) *
               C32013) *
              C31925 * C235 +
          (((C6646 - C6645 + C6648 - C6647 + C6650 - C6649) * C15325 +
            (C6652 - C6651 + C6654 - C6653 + C6656 - C6655) * C15319 +
            (C2195 - C2196 + C2197 - C2198 + C2199 - C2200) * C15326 +
            (C2201 - C2202 + C2203 - C2204 + C2205 - C2206) * C31874) *
               C14629 +
           ((C6658 - C6657 + C6660 - C6659 + C6662 - C6661) * C15325 +
            (C6664 - C6663 + C6666 - C6665 + C6668 - C6667) * C15319 +
            (C6966 - C6967 + C6968 - C6969 + C6970 - C6971) * C15326 +
            (C6972 - C6973 + C6974 - C6975 + C6976 - C6977) * C31874) *
               C32013) *
              C31925 * C236 +
          ((C6689 * C15325 + C6690 * C15319 +
            (C6967 - C6966 + C6969 - C6968 + C6971 - C6970) * C15326 +
            (C6973 - C6972 + C6975 - C6974 + C6977 - C6976) * C31874) *
               C14629 +
           ((C6670 - C6669 + C6672 - C6671 + C6674 - C6673) * C15325 +
            (C6676 - C6675 + C6678 - C6677 + C6680 - C6679) * C15319 +
            (C32274 * C949 - C1751 * C942 + C32263 * C1623 - C1752 * C1619 +
             C32241 * C6962 - C1753 * C6961) *
                C15326 +
            (C32274 * C960 - C1751 * C950 + C32263 * C1628 - C1752 * C1624 +
             C32241 * C6964 - C1753 * C6963) *
                C31874) *
               C32013) *
              C31925 * C237) *
         C31899) /
            (p * q * std::sqrt(p + q));
    d2ee[15] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C32208 * C126 - C3352 * C119 + C32053 * C354 - C3353 * C344) *
                 C30885 +
             (C32208 * C140 - C3352 * C127 + C32053 * C374 - C3353 * C355) *
                 C31869 +
             (C3355 - C3356 + C3357 - C3358) * C30881 +
             (C3359 - C3360 + C3361 - C3362) * C31877 + C3395 * C30891 +
             C3396 * C17091) *
                C14629 +
            ((C4331 - C4332 + C4333 - C4334) * C30885 +
             (C4335 - C4336 + C4337 - C4338) * C31869 + C4715 * C30881 +
             C4716 * C31877 + C4183 * C30891 + C4184 * C17091) *
                C32013) *
               C31925 * C466 +
           (((C4332 - C4331 + C4334 - C4333) * C30885 +
             (C4336 - C4335 + C4338 - C4337) * C31869 + C4717 * C30881 +
             C4718 * C31877 + C4719 * C30891 + C4720 * C17091) *
                C14629 +
            ((C4339 - C4340 + C4341 - C4342) * C30885 +
             (C4343 - C4344 + C4345 - C4346) * C31869 + C8687 * C30881 +
             C8688 * C31877 + (C4355 - C4356 + C4357 - C4358) * C30891 +
             (C4359 - C4360 + C4361 - C4362) * C17091) *
                C32013) *
               C31925 * C467) *
              C468 +
          ((((C3356 - C3355 + C3358 - C3357) * C30885 +
             (C3360 - C3359 + C3362 - C3361) * C31869 +
             (C3364 - C3363 + C3366 - C3365) * C30881 +
             (C3368 - C3367 + C3370 - C3369) * C31877 +
             (C3372 - C3371 + C3374 - C3373) * C30891 +
             (C3376 - C3375 + C3378 - C3377) * C17091) *
                C14629 +
            (C4717 * C30885 + C4718 * C31869 + C4719 * C30881 + C4720 * C31877 +
             (C3741 - C3742 + C3743 - C3744) * C30891 +
             (C3745 - C3746 + C3747 - C3748) * C17091) *
                C32013) *
               C31925 * C466 +
           ((C4715 * C30885 + C4716 * C31869 + C4183 * C30881 + C4184 * C31877 +
             (C3742 - C3741 + C3744 - C3743) * C30891 +
             (C3746 - C3745 + C3748 - C3747) * C17091) *
                C14629 +
            (C8334 * C30885 + C8335 * C31869 +
             (C4356 - C4355 + C4358 - C4357) * C30881 +
             (C4360 - C4359 + C4362 - C4361) * C31877 +
             (C32208 * C265 - C3352 * C247 + C32053 * C1453 - C3353 * C1452) *
                 C30891 +
             (C32208 * C277 - C3352 * C266 + C32053 * C1455 - C3353 * C1454) *
                 C17091) *
                C32013) *
               C31925 * C467) *
              C469)) /
        (p * q * std::sqrt(p + q));
    d2ee[16] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C32208 * C126 - C3352 * C119 + C32053 * C354 - C3353 * C344) *
                 C30885 +
             (C32208 * C140 - C3352 * C127 + C32053 * C374 - C3353 * C355) *
                 C31869 +
             (C3355 - C3356 + C3357 - C3358) * C30881 +
             (C3359 - C3360 + C3361 - C3362) * C31877 + C3395 * C30891 +
             C3396 * C17091) *
                C14629 +
            ((C4331 - C4332 + C4333 - C4334) * C30885 +
             (C4335 - C4336 + C4337 - C4338) * C31869 + C4715 * C30881 +
             C4716 * C31877 + C4183 * C30891 + C4184 * C17091) *
                C32013) *
               C572 +
           (((C3352 * C344 - C32208 * C354 + C3353 * C349 - C32053 * C364) *
                 C30885 +
             (C3352 * C355 - C32208 * C374 + C3353 * C365 - C32053 * C379) *
                 C31869 +
             (C3879 - C3880 + C3881 - C3882) * C30881 +
             (C3883 - C3884 + C3885 - C3886) * C31877 +
             (C3887 - C3888 + C3889 - C3890) * C30891 +
             (C3891 - C3892 + C3893 - C3894) * C17091) *
                C14629 +
            ((C5125 - C5126 + C5127 - C5128) * C30885 +
             (C5129 - C5130 + C5131 - C5132) * C31869 +
             (C4915 - C4916 + C4917 - C4918) * C30881 +
             (C4919 - C4920 + C4921 - C4922) * C31877 +
             (C4923 - C4924 + C4925 - C4926) * C30891 +
             (C4927 - C4928 + C4929 - C4930) * C17091) *
                C32013) *
               C573) *
              C466 +
          ((((C4332 - C4331 + C4334 - C4333) * C30885 +
             (C4336 - C4335 + C4338 - C4337) * C31869 + C4717 * C30881 +
             C4718 * C31877 + C4719 * C30891 + C4720 * C17091) *
                C14629 +
            ((C4339 - C4340 + C4341 - C4342) * C30885 +
             (C4343 - C4344 + C4345 - C4346) * C31869 + C8687 * C30881 +
             C8688 * C31877 + (C4355 - C4356 + C4357 - C4358) * C30891 +
             (C4359 - C4360 + C4361 - C4362) * C17091) *
                C32013) *
               C572 +
           (((C5126 - C5125 + C5128 - C5127) * C30885 +
             (C5130 - C5129 + C5132 - C5131) * C31869 +
             (C4916 - C4915 + C4918 - C4917) * C30881 +
             (C4920 - C4919 + C4922 - C4921) * C31877 +
             (C4924 - C4923 + C4926 - C4925) * C30891 +
             (C4928 - C4927 + C4930 - C4929) * C17091) *
                C14629 +
            ((C9086 - C9085 + C9088 - C9087) * C30885 +
             (C9090 - C9089 + C9092 - C9091) * C31869 +
             (C8884 - C8883 + C8886 - C8885) * C30881 +
             (C8888 - C8887 + C8890 - C8889) * C31877 +
             (C32208 * C1123 - C3352 * C1112 + C32053 * C1135 - C3353 * C1118) *
                 C30891 +
             (C32208 * C1139 - C3352 * C1124 + C32053 * C1145 - C3353 * C1136) *
                 C17091) *
                C32013) *
               C573) *
              C467) *
         C31899) /
        (p * q * std::sqrt(p + q));
    d2ee[17] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C32208 * C126 - C3352 * C119 + C32053 * C354 - C3353 * C344) *
                C30885 +
            (C32208 * C140 - C3352 * C127 + C32053 * C374 - C3353 * C355) *
                C31869 +
            (C3355 - C3356 + C3357 - C3358) * C30881 +
            (C3359 - C3360 + C3361 - C3362) * C31877 + C3395 * C30891 +
            C3396 * C17091) *
               C14629 +
           ((C4331 - C4332 + C4333 - C4334) * C30885 +
            (C4335 - C4336 + C4337 - C4338) * C31869 + C4715 * C30881 +
            C4716 * C31877 + C4183 * C30891 + C4184 * C17091) *
               C32013) *
              C31925 * C235 +
          (((C4332 - C4331 + C4334 - C4333) * C30885 +
            (C4336 - C4335 + C4338 - C4337) * C31869 + C4717 * C30881 +
            C4718 * C31877 + C4719 * C30891 + C4720 * C17091) *
               C14629 +
           ((C4339 - C4340 + C4341 - C4342) * C30885 +
            (C4343 - C4344 + C4345 - C4346) * C31869 + C8687 * C30881 +
            C8688 * C31877 + (C4355 - C4356 + C4357 - C4358) * C30891 +
            (C4359 - C4360 + C4361 - C4362) * C17091) *
               C32013) *
              C31925 * C236 +
          ((C8332 * C30885 + C8333 * C31869 + C8334 * C30881 + C8335 * C31877 +
            (C4356 - C4355 + C4358 - C4357) * C30891 +
            (C4360 - C4359 + C4362 - C4361) * C17091) *
               C14629 +
           (C9304 * C30885 + C9305 * C31869 +
            (C8325 - C8324 + C8327 - C8326) * C30881 +
            (C8329 - C8328 + C8331 - C8330) * C31877 +
            (C32208 * C951 - C3352 * C943 + C32053 * C1625 - C3353 * C1620) *
                C30891 +
            (C32208 * C961 - C3352 * C952 + C32053 * C1629 - C3353 * C1626) *
                C17091) *
               C32013) *
              C31925 * C237) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C32208 * C126 - C3352 * C119 + C32053 * C354 - C3353 * C344) *
                C30885 +
            (C32208 * C140 - C3352 * C127 + C32053 * C374 - C3353 * C355) *
                C31869 +
            (C3355 - C3356 + C3357 - C3358) * C30881 +
            (C3359 - C3360 + C3361 - C3362) * C31877 + C3395 * C30891 +
            C3396 * C17091) *
               C14629 +
           ((C4331 - C4332 + C4333 - C4334) * C30885 +
            (C4335 - C4336 + C4337 - C4338) * C31869 + C4715 * C30881 +
            C4716 * C31877 + C4183 * C30891 + C4184 * C17091) *
               C32013) *
              C31925 * C31911 * C110 +
          (((C3356 - C3355 + C3358 - C3357) * C30885 +
            (C3360 - C3359 + C3362 - C3361) * C31869 +
            (C3364 - C3363 + C3366 - C3365) * C30881 +
            (C3368 - C3367 + C3370 - C3369) * C31877 +
            (C3372 - C3371 + C3374 - C3373) * C30891 +
            (C3376 - C3375 + C3378 - C3377) * C17091) *
               C14629 +
           (C4717 * C30885 + C4718 * C31869 + C4719 * C30881 + C4720 * C31877 +
            (C3741 - C3742 + C3743 - C3744) * C30891 +
            (C3745 - C3746 + C3747 - C3748) * C17091) *
               C32013) *
              C31925 * C31911 * C111 +
          ((C3395 * C30885 + C3396 * C31869 + C3397 * C30881 + C3398 * C31877 +
            (C3380 - C3379 + C3382 - C3381) * C30891 +
            (C3384 - C3383 + C3386 - C3385) * C17091) *
               C14629 +
           (C4183 * C30885 + C4184 * C31869 +
            (C3742 - C3741 + C3744 - C3743) * C30881 +
            (C3746 - C3745 + C3748 - C3747) * C31877 +
            (C32208 * C257 - C3352 * C243 + C32053 * C689 - C3353 * C680) *
                C30891 +
            (C32208 * C273 - C3352 * C258 + C32053 * C695 - C3353 * C690) *
                C17091) *
               C32013) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C32208 * C126 - C3352 * C119 + C32053 * C354 - C3353 * C344) *
                C30885 +
            (C32208 * C140 - C3352 * C127 + C32053 * C374 - C3353 * C355) *
                C31869 +
            (C3355 - C3356 + C3357 - C3358) * C30881 +
            (C3359 - C3360 + C3361 - C3362) * C31877 + C3395 * C30891 +
            C3396 * C17091) *
               C14629 +
           ((C4331 - C4332 + C4333 - C4334) * C30885 +
            (C4335 - C4336 + C4337 - C4338) * C31869 + C4715 * C30881 +
            C4716 * C31877 + C4183 * C30891 + C4184 * C17091) *
               C32013) *
              C341 +
          (((C3352 * C344 - C32208 * C354 + C3353 * C349 - C32053 * C364) *
                C30885 +
            (C3352 * C355 - C32208 * C374 + C3353 * C365 - C32053 * C379) *
                C31869 +
            (C3879 - C3880 + C3881 - C3882) * C30881 +
            (C3883 - C3884 + C3885 - C3886) * C31877 +
            (C3887 - C3888 + C3889 - C3890) * C30891 +
            (C3891 - C3892 + C3893 - C3894) * C17091) *
               C14629 +
           ((C5125 - C5126 + C5127 - C5128) * C30885 +
            (C5129 - C5130 + C5131 - C5132) * C31869 +
            (C4915 - C4916 + C4917 - C4918) * C30881 +
            (C4919 - C4920 + C4921 - C4922) * C31877 +
            (C4923 - C4924 + C4925 - C4926) * C30891 +
            (C4927 - C4928 + C4929 - C4930) * C17091) *
               C32013) *
              C342 +
          (((C32208 * C364 - C3352 * C349 + C32053 * C2026 - C3353 * C2020) *
                C30885 +
            (C32208 * C379 - C3352 * C365 + C32053 * C2038 - C3353 * C2027) *
                C31869 +
            (C32208 * C366 - C3352 * C350 + C32053 * C2028 - C3353 * C2021) *
                C30881 +
            (C32208 * C380 - C3352 * C367 + C32053 * C2039 - C3353 * C2029) *
                C31877 +
            (C32208 * C368 - C3352 * C351 + C32053 * C2030 - C3353 * C2022) *
                C30891 +
            (C32208 * C381 - C3352 * C369 + C32053 * C2040 - C3353 * C2031) *
                C17091) *
               C14629 +
           ((C32208 * C1125 - C3352 * C1113 + C32053 * C2541 - C3353 * C2538) *
                C30885 +
            (C32208 * C1140 - C3352 * C1126 + C32053 * C2547 - C3353 * C2542) *
                C31869 +
            (C32208 * C1127 - C3352 * C1114 + C32053 * C2543 - C3353 * C2539) *
                C30881 +
            (C32208 * C1141 - C3352 * C1128 + C32053 * C2548 - C3353 * C2544) *
                C31877 +
            (C32208 * C1129 - C3352 * C1115 + C32053 * C2545 - C3353 * C2540) *
                C30891 +
            (C32208 * C1142 - C3352 * C1130 + C32053 * C2549 - C3353 * C2546) *
                C17091) *
               C32013) *
              C343) *
         C31911 * C31899) /
            (p * q * std::sqrt(p + q));
    d2ee[18] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C32208 * C126 - C3352 * C119 + C32053 * C354 - C3353 * C344) *
                 C30885 +
             (C32208 * C140 - C3352 * C127 + C32053 * C374 - C3353 * C355) *
                 C31869 +
             (C3355 - C3356 + C3357 - C3358) * C30881 +
             (C3359 - C3360 + C3361 - C3362) * C31877 + C3395 * C30891 +
             C3396 * C17091) *
                C14629 +
            ((C4331 - C4332 + C4333 - C4334) * C30885 +
             (C4335 - C4336 + C4337 - C4338) * C31869 + C4715 * C30881 +
             C4716 * C31877 + C4183 * C30891 + C4184 * C17091) *
                C32013) *
               C572 +
           (((C3352 * C344 - C32208 * C354 + C3353 * C349 - C32053 * C364) *
                 C30885 +
             (C3352 * C355 - C32208 * C374 + C3353 * C365 - C32053 * C379) *
                 C31869 +
             (C3879 - C3880 + C3881 - C3882) * C30881 +
             (C3883 - C3884 + C3885 - C3886) * C31877 +
             (C3887 - C3888 + C3889 - C3890) * C30891 +
             (C3891 - C3892 + C3893 - C3894) * C17091) *
                C14629 +
            ((C5125 - C5126 + C5127 - C5128) * C30885 +
             (C5129 - C5130 + C5131 - C5132) * C31869 +
             (C4915 - C4916 + C4917 - C4918) * C30881 +
             (C4919 - C4920 + C4921 - C4922) * C31877 +
             (C4923 - C4924 + C4925 - C4926) * C30891 +
             (C4927 - C4928 + C4929 - C4930) * C17091) *
                C32013) *
               C573) *
              C31911 * C468 +
          ((((C3356 - C3355 + C3358 - C3357) * C30885 +
             (C3360 - C3359 + C3362 - C3361) * C31869 +
             (C3364 - C3363 + C3366 - C3365) * C30881 +
             (C3368 - C3367 + C3370 - C3369) * C31877 +
             (C3372 - C3371 + C3374 - C3373) * C30891 +
             (C3376 - C3375 + C3378 - C3377) * C17091) *
                C14629 +
            (C4717 * C30885 + C4718 * C31869 + C4719 * C30881 + C4720 * C31877 +
             (C3741 - C3742 + C3743 - C3744) * C30891 +
             (C3745 - C3746 + C3747 - C3748) * C17091) *
                C32013) *
               C572 +
           (((C3880 - C3879 + C3882 - C3881) * C30885 +
             (C3884 - C3883 + C3886 - C3885) * C31869 +
             (C3888 - C3887 + C3890 - C3889) * C30881 +
             (C3892 - C3891 + C3894 - C3893) * C31877 +
             (C3896 - C3895 + C3898 - C3897) * C30891 +
             (C3900 - C3899 + C3902 - C3901) * C17091) *
                C14629 +
            ((C4916 - C4915 + C4918 - C4917) * C30885 +
             (C4920 - C4919 + C4922 - C4921) * C31869 +
             (C4924 - C4923 + C4926 - C4925) * C30881 +
             (C4928 - C4927 + C4930 - C4929) * C31877 +
             (C32208 * C687 - C3352 * C679 + C32053 * C2191 - C3353 * C2190) *
                 C30891 +
             (C32208 * C694 - C3352 * C688 + C32053 * C2193 - C3353 * C2192) *
                 C17091) *
                C32013) *
               C573) *
              C31911 * C469)) /
        (p * q * std::sqrt(p + q));
    d2ee[19] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C32208 * C126 - C3352 * C119 + C32053 * C354 - C3353 * C344) *
                C30885 +
            (C32208 * C140 - C3352 * C127 + C32053 * C374 - C3353 * C355) *
                C31869 +
            (C3355 - C3356 + C3357 - C3358) * C30881 +
            (C3359 - C3360 + C3361 - C3362) * C31877 + C3395 * C30891 +
            C3396 * C17091) *
               C14629 +
           ((C4331 - C4332 + C4333 - C4334) * C30885 +
            (C4335 - C4336 + C4337 - C4338) * C31869 + C4715 * C30881 +
            C4716 * C31877 + C4183 * C30891 + C4184 * C17091) *
               C32013) *
              C31925 * C31911 * C110 +
          (((C3356 - C3355 + C3358 - C3357) * C30885 +
            (C3360 - C3359 + C3362 - C3361) * C31869 +
            (C3364 - C3363 + C3366 - C3365) * C30881 +
            (C3368 - C3367 + C3370 - C3369) * C31877 +
            (C3372 - C3371 + C3374 - C3373) * C30891 +
            (C3376 - C3375 + C3378 - C3377) * C17091) *
               C14629 +
           (C4717 * C30885 + C4718 * C31869 + C4719 * C30881 + C4720 * C31877 +
            (C3741 - C3742 + C3743 - C3744) * C30891 +
            (C3745 - C3746 + C3747 - C3748) * C17091) *
               C32013) *
              C31925 * C31911 * C111 +
          ((C3395 * C30885 + C3396 * C31869 + C3397 * C30881 + C3398 * C31877 +
            (C3380 - C3379 + C3382 - C3381) * C30891 +
            (C3384 - C3383 + C3386 - C3385) * C17091) *
               C14629 +
           (C4183 * C30885 + C4184 * C31869 +
            (C3742 - C3741 + C3744 - C3743) * C30881 +
            (C3746 - C3745 + C3748 - C3747) * C31877 +
            (C32208 * C257 - C3352 * C243 + C32053 * C689 - C3353 * C680) *
                C30891 +
            (C32208 * C273 - C3352 * C258 + C32053 * C695 - C3353 * C690) *
                C17091) *
               C32013) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C32208 * C126 - C3352 * C119 + C32053 * C354 - C3353 * C344) *
                C30885 +
            (C32208 * C140 - C3352 * C127 + C32053 * C374 - C3353 * C355) *
                C31869 +
            (C3355 - C3356 + C3357 - C3358) * C30881 +
            (C3359 - C3360 + C3361 - C3362) * C31877 + C3395 * C30891 +
            C3396 * C17091) *
               C14629 +
           ((C4331 - C4332 + C4333 - C4334) * C30885 +
            (C4335 - C4336 + C4337 - C4338) * C31869 + C4715 * C30881 +
            C4716 * C31877 + C4183 * C30891 + C4184 * C17091) *
               C32013) *
              C31925 * C235 +
          (((C4332 - C4331 + C4334 - C4333) * C30885 +
            (C4336 - C4335 + C4338 - C4337) * C31869 + C4717 * C30881 +
            C4718 * C31877 + C4719 * C30891 + C4720 * C17091) *
               C14629 +
           ((C4339 - C4340 + C4341 - C4342) * C30885 +
            (C4343 - C4344 + C4345 - C4346) * C31869 + C8687 * C30881 +
            C8688 * C31877 + (C4355 - C4356 + C4357 - C4358) * C30891 +
            (C4359 - C4360 + C4361 - C4362) * C17091) *
               C32013) *
              C31925 * C236 +
          ((C8332 * C30885 + C8333 * C31869 + C8334 * C30881 + C8335 * C31877 +
            (C4356 - C4355 + C4358 - C4357) * C30891 +
            (C4360 - C4359 + C4362 - C4361) * C17091) *
               C14629 +
           (C9304 * C30885 + C9305 * C31869 +
            (C8325 - C8324 + C8327 - C8326) * C30881 +
            (C8329 - C8328 + C8331 - C8330) * C31877 +
            (C32208 * C951 - C3352 * C943 + C32053 * C1625 - C3353 * C1620) *
                C30891 +
            (C32208 * C961 - C3352 * C952 + C32053 * C1629 - C3353 * C1626) *
                C17091) *
               C32013) *
              C31925 * C237) *
         C31899) /
            (p * q * std::sqrt(p + q));
    d2ee[20] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31966 * C126 - C113 * C119) * C14631 +
             (C31966 * C140 - C113 * C127) * C32279 + (C148 - C149) * C14632 +
             (C150 - C151) * C32272 + C168 * C14633 + C169 * C32259 +
             C170 * C14634 + C171 * C32242) *
                C14629 +
            ((C966 - C967) * C14631 + (C968 - C969) * C32279 + C1297 * C14632 +
             C1298 * C32272 + C816 * C14633 + C817 * C32259 + C2659 * C14634 +
             C2660 * C32242) *
                C32013) *
               C31925 * C466 +
           (((C967 - C966) * C14631 + (C969 - C968) * C32279 + C1299 * C14632 +
             C1300 * C32272 + C1301 * C14633 + C1302 * C32259 + C2987 * C14634 +
             C2988 * C32242) *
                C14629 +
            ((C971 - C970) * C14631 + (C973 - C972) * C32279 + C1303 * C14632 +
             C1304 * C32272 + C1305 * C14633 + C1306 * C32259 +
             (C826 - C827) * C14634 + (C828 - C829) * C32242) *
                C32013) *
               C31925 * C467) *
              C468 +
          ((((C149 - C148) * C14631 + (C151 - C150) * C32279 +
             (C153 - C152) * C14632 + (C155 - C154) * C32272 +
             (C157 - C156) * C14633 + (C159 - C158) * C32259 +
             (C161 - C160) * C14634 + (C163 - C162) * C32242) *
                C14629 +
            (C1299 * C14631 + C1300 * C32279 + C1301 * C14632 + C1302 * C32272 +
             C2987 * C14633 + C2988 * C32259 + (C487 - C488) * C14634 +
             (C489 - C490) * C32242) *
                C32013) *
               C31925 * C466 +
           ((C1297 * C14631 + C1298 * C32279 + C816 * C14632 + C817 * C32272 +
             C2659 * C14633 + C2660 * C32259 + (C488 - C487) * C14634 +
             (C490 - C489) * C32242) *
                C14629 +
            (C974 * C14631 + C975 * C32279 + C830 * C14632 + C831 * C32272 +
             (C827 - C826) * C14633 + (C829 - C828) * C32259 +
             (C31966 * C267 - C113 * C248) * C14634 +
             (C31966 * C278 - C113 * C268) * C32242) *
                C32013) *
               C31925 * C467) *
              C469)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31966 * C126 - C113 * C119) * C15325 +
             (C31966 * C140 - C113 * C127) * C15319 + (C148 - C149) * C15326 +
             (C150 - C151) * C31874) *
                C32280 +
            ((C966 - C967) * C15325 + (C968 - C969) * C15319 + C1297 * C15326 +
             C1298 * C31874) *
                C32276 +
            C15438 * C32266 + C15439 * C32248) *
               C31925 * C466 +
           (((C967 - C966) * C15325 + (C969 - C968) * C15319 + C1299 * C15326 +
             C1300 * C31874) *
                C32280 +
            ((C971 - C970) * C15325 + (C973 - C972) * C15319 + C1303 * C15326 +
             C1304 * C31874) *
                C32276 +
            ((C978 - C979) * C15325 + (C980 - C981) * C15319 + C7750 * C15326 +
             C7751 * C31874) *
                C32266 +
            ((C6065 - C6064) * C15325 + (C6067 - C6066) * C15319 +
             (C6241 - C6242) * C15326 + (C6243 - C6244) * C31874) *
                C32248) *
               C31925 * C467) *
              C468 +
          ((((C149 - C148) * C15325 + (C151 - C150) * C15319 +
             (C153 - C152) * C15326 + (C155 - C154) * C31874) *
                C32280 +
            (C1299 * C15325 + C1300 * C15319 + C1301 * C15326 +
             C1302 * C31874) *
                C32276 +
            (C1303 * C15325 + C1304 * C15319 + C1305 * C15326 +
             C1306 * C31874) *
                C32266 +
            (C7750 * C15325 + C7751 * C15319 + (C986 - C987) * C15326 +
             (C988 - C989) * C31874) *
                C32248) *
               C31925 * C466 +
           ((C1297 * C15325 + C1298 * C15319 + C816 * C15326 + C817 * C31874) *
                C32280 +
            (C974 * C15325 + C975 * C15319 + C830 * C15326 + C831 * C31874) *
                C32276 +
            (C7512 * C15325 + C7513 * C15319 + (C987 - C986) * C15326 +
             (C989 - C988) * C31874) *
                C32266 +
            ((C6242 - C6241) * C15325 + (C6244 - C6243) * C15319 +
             (C31966 * C957 - C113 * C946) * C15326 +
             (C31966 * C964 - C113 * C958) * C31874) *
                C32248) *
               C31925 * C467) *
              C469)) /
            (p * q * std::sqrt(p + q));
    d2ee[21] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31966 * C126 - C113 * C119) * C14631 +
             (C31966 * C140 - C113 * C127) * C32279 + (C148 - C149) * C14632 +
             (C150 - C151) * C32272 + C168 * C14633 + C169 * C32259 +
             C170 * C14634 + C171 * C32242) *
                C14629 +
            ((C966 - C967) * C14631 + (C968 - C969) * C32279 + C1297 * C14632 +
             C1298 * C32272 + C816 * C14633 + C817 * C32259 + C2659 * C14634 +
             C2660 * C32242) *
                C32013) *
               C572 +
           (((C113 * C344 - C31966 * C354) * C14631 +
             (C113 * C355 - C31966 * C374) * C32279 + (C579 - C580) * C14632 +
             (C581 - C582) * C32272 + (C583 - C584) * C14633 +
             (C585 - C586) * C32259 + (C587 - C588) * C14634 +
             (C589 - C590) * C32242) *
                C14629 +
            ((C1631 - C1632) * C14631 + (C1633 - C1634) * C32279 +
             (C1457 - C1458) * C14632 + (C1459 - C1460) * C32272 +
             (C1461 - C1462) * C14633 + (C1463 - C1464) * C32259 +
             (C3119 - C3120) * C14634 + (C3121 - C3122) * C32242) *
                C32013) *
               C573) *
              C466 +
          ((((C967 - C966) * C14631 + (C969 - C968) * C32279 + C1299 * C14632 +
             C1300 * C32272 + C1301 * C14633 + C1302 * C32259 + C2987 * C14634 +
             C2988 * C32242) *
                C14629 +
            ((C971 - C970) * C14631 + (C973 - C972) * C32279 + C1303 * C14632 +
             C1304 * C32272 + C1305 * C14633 + C1306 * C32259 +
             (C826 - C827) * C14634 + (C828 - C829) * C32242) *
                C32013) *
               C572 +
           (((C1632 - C1631) * C14631 + (C1634 - C1633) * C32279 +
             (C1458 - C1457) * C14632 + (C1460 - C1459) * C32272 +
             (C1462 - C1461) * C14633 + (C1464 - C1463) * C32259 +
             (C3120 - C3119) * C14634 + (C3122 - C3121) * C32242) *
                C14629 +
            ((C1636 - C1635) * C14631 + (C1638 - C1637) * C32279 +
             (C1466 - C1465) * C14632 + (C1468 - C1467) * C32272 +
             (C1470 - C1469) * C14633 + (C1472 - C1471) * C32259 +
             (C31966 * C1453 - C113 * C1452) * C14634 +
             (C31966 * C1455 - C113 * C1454) * C32242) *
                C32013) *
               C573) *
              C467) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31966 * C126 - C113 * C119) * C15325 +
             (C31966 * C140 - C113 * C127) * C15319 + (C148 - C149) * C15326 +
             (C150 - C151) * C31874) *
                C32280 +
            ((C966 - C967) * C15325 + (C968 - C969) * C15319 + C1297 * C15326 +
             C1298 * C31874) *
                C32276 +
            C15438 * C32266 + C15439 * C32248) *
               C572 +
           (((C113 * C344 - C31966 * C354) * C15325 +
             (C113 * C355 - C31966 * C374) * C15319 + (C579 - C580) * C15326 +
             (C581 - C582) * C31874) *
                C32280 +
            ((C1631 - C1632) * C15325 + (C1633 - C1634) * C15319 +
             (C1457 - C1458) * C15326 + (C1459 - C1460) * C31874) *
                C32276 +
            ((C1635 - C1636) * C15325 + (C1637 - C1638) * C15319 +
             (C1465 - C1466) * C15326 + (C1467 - C1468) * C31874) *
                C32266 +
            ((C6417 - C6418) * C15325 + (C6419 - C6420) * C15319 +
             (C7882 - C7883) * C15326 + (C7884 - C7885) * C31874) *
                C32248) *
               C573) *
              C466 +
          ((((C967 - C966) * C15325 + (C969 - C968) * C15319 + C1299 * C15326 +
             C1300 * C31874) *
                C32280 +
            ((C971 - C970) * C15325 + (C973 - C972) * C15319 + C1303 * C15326 +
             C1304 * C31874) *
                C32276 +
            ((C978 - C979) * C15325 + (C980 - C981) * C15319 + C7750 * C15326 +
             C7751 * C31874) *
                C32266 +
            ((C6065 - C6064) * C15325 + (C6067 - C6066) * C15319 +
             (C6241 - C6242) * C15326 + (C6243 - C6244) * C31874) *
                C32248) *
               C572 +
           (((C1632 - C1631) * C15325 + (C1634 - C1633) * C15319 +
             (C1458 - C1457) * C15326 + (C1460 - C1459) * C31874) *
                C32280 +
            ((C1636 - C1635) * C15325 + (C1638 - C1637) * C15319 +
             (C1466 - C1465) * C15326 + (C1468 - C1467) * C31874) *
                C32276 +
            ((C6418 - C6417) * C15325 + (C6420 - C6419) * C15319 +
             (C7883 - C7882) * C15326 + (C7885 - C7884) * C31874) *
                C32266 +
            ((C6422 - C6421) * C15325 + (C6424 - C6423) * C15319 +
             (C31966 * C6327 - C113 * C6326) * C15326 +
             (C31966 * C6329 - C113 * C6328) * C31874) *
                C32248) *
               C573) *
              C467) *
         C31899) /
            (p * q * std::sqrt(p + q));
    d2ee[22] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31966 * C126 - C113 * C119) * C14631 +
            (C31966 * C140 - C113 * C127) * C32279 + (C148 - C149) * C14632 +
            (C150 - C151) * C32272 + C168 * C14633 + C169 * C32259 +
            C170 * C14634 + C171 * C32242) *
               C14629 +
           ((C966 - C967) * C14631 + (C968 - C969) * C32279 + C1297 * C14632 +
            C1298 * C32272 + C816 * C14633 + C817 * C32259 + C2659 * C14634 +
            C2660 * C32242) *
               C32013) *
              C31925 * C235 +
          (((C967 - C966) * C14631 + (C969 - C968) * C32279 + C1299 * C14632 +
            C1300 * C32272 + C1301 * C14633 + C1302 * C32259 + C2987 * C14634 +
            C2988 * C32242) *
               C14629 +
           ((C971 - C970) * C14631 + (C973 - C972) * C32279 + C1303 * C14632 +
            C1304 * C32272 + C1305 * C14633 + C1306 * C32259 +
            (C826 - C827) * C14634 + (C828 - C829) * C32242) *
               C32013) *
              C31925 * C236 +
          ((C990 * C14631 + C991 * C32279 + C974 * C14632 + C975 * C32272 +
            C830 * C14633 + C831 * C32259 + (C827 - C826) * C14634 +
            (C829 - C828) * C32242) *
               C14629 +
           (C6062 * C14631 + C6063 * C32279 + C7512 * C14632 + C7513 * C32272 +
            (C987 - C986) * C14633 + (C989 - C988) * C32259 +
            (C31966 * C1293 - C113 * C1292) * C14634 +
            (C31966 * C1295 - C113 * C1294) * C32242) *
               C32013) *
              C31925 * C237) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31966 * C126 - C113 * C119) * C14631 +
            (C31966 * C140 - C113 * C127) * C32279 + (C148 - C149) * C14632 +
            (C150 - C151) * C32272 + C168 * C14633 + C169 * C32259 +
            C170 * C14634 + C171 * C32242) *
               C14629 +
           ((C966 - C967) * C14631 + (C968 - C969) * C32279 + C1297 * C14632 +
            C1298 * C32272 + C816 * C14633 + C817 * C32259 + C2659 * C14634 +
            C2660 * C32242) *
               C32013) *
              C31925 * C31911 * C110 +
          (((C149 - C148) * C14631 + (C151 - C150) * C32279 +
            (C153 - C152) * C14632 + (C155 - C154) * C32272 +
            (C157 - C156) * C14633 + (C159 - C158) * C32259 +
            (C161 - C160) * C14634 + (C163 - C162) * C32242) *
               C14629 +
           (C1299 * C14631 + C1300 * C32279 + C1301 * C14632 + C1302 * C32272 +
            C2987 * C14633 + C2988 * C32259 + (C487 - C488) * C14634 +
            (C489 - C490) * C32242) *
               C32013) *
              C31925 * C31911 * C111 +
          ((C168 * C14631 + C169 * C32279 + C170 * C14632 + C171 * C32272 +
            C172 * C14633 + C173 * C32259 + (C165 - C164) * C14634 +
            (C167 - C166) * C32242) *
               C14629 +
           (C816 * C14631 + C817 * C32279 + C2659 * C14632 + C2660 * C32272 +
            (C488 - C487) * C14633 + (C490 - C489) * C32259 +
            (C31966 * C471 - C113 * C470) * C14634 +
            (C31966 * C473 - C113 * C472) * C32242) *
               C32013) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31966 * C126 - C113 * C119) * C14631 +
            (C31966 * C140 - C113 * C127) * C32279 + (C148 - C149) * C14632 +
            (C150 - C151) * C32272 + C168 * C14633 + C169 * C32259 +
            C170 * C14634 + C171 * C32242) *
               C14629 +
           ((C966 - C967) * C14631 + (C968 - C969) * C32279 + C1297 * C14632 +
            C1298 * C32272 + C816 * C14633 + C817 * C32259 + C2659 * C14634 +
            C2660 * C32242) *
               C32013) *
              C341 +
          (((C113 * C344 - C31966 * C354) * C14631 +
            (C113 * C355 - C31966 * C374) * C32279 + (C579 - C580) * C14632 +
            (C581 - C582) * C32272 + (C583 - C584) * C14633 +
            (C585 - C586) * C32259 + (C587 - C588) * C14634 +
            (C589 - C590) * C32242) *
               C14629 +
           ((C1631 - C1632) * C14631 + (C1633 - C1634) * C32279 +
            (C1457 - C1458) * C14632 + (C1459 - C1460) * C32272 +
            (C1461 - C1462) * C14633 + (C1463 - C1464) * C32259 +
            (C3119 - C3120) * C14634 + (C3121 - C3122) * C32242) *
               C32013) *
              C342 +
          (((C31966 * C364 - C113 * C349) * C14631 +
            (C31966 * C379 - C113 * C365) * C32279 +
            (C31966 * C366 - C113 * C350) * C14632 +
            (C31966 * C380 - C113 * C367) * C32272 +
            (C31966 * C368 - C113 * C351) * C14633 +
            (C31966 * C381 - C113 * C369) * C32259 +
            (C31966 * C370 - C113 * C352) * C14634 +
            (C31966 * C382 - C113 * C371) * C32242) *
               C14629 +
           ((C31966 * C1125 - C113 * C1113) * C14631 +
            (C31966 * C1140 - C113 * C1126) * C32279 +
            (C31966 * C1127 - C113 * C1114) * C14632 +
            (C31966 * C1141 - C113 * C1128) * C32272 +
            (C31966 * C1129 - C113 * C1115) * C14633 +
            (C31966 * C1142 - C113 * C1130) * C32259 +
            (C31966 * C2191 - C113 * C2190) * C14634 +
            (C31966 * C2193 - C113 * C2192) * C32242) *
               C32013) *
              C343) *
         C31911 * C31899) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31966 * C126 - C113 * C119) * C15325 +
            (C31966 * C140 - C113 * C127) * C15319 + (C148 - C149) * C15326 +
            (C150 - C151) * C31874) *
               C32280 +
           ((C966 - C967) * C15325 + (C968 - C969) * C15319 + C1297 * C15326 +
            C1298 * C31874) *
               C32276 +
           (C990 * C15325 + C991 * C15319 + C974 * C15326 + C975 * C31874) *
               C32266 +
           (C6062 * C15325 + C6063 * C15319 + C7512 * C15326 + C7513 * C31874) *
               C32248) *
              C31925 * C31911 * C110 +
          (((C149 - C148) * C15325 + (C151 - C150) * C15319 +
            (C153 - C152) * C15326 + (C155 - C154) * C31874) *
               C32280 +
           (C1299 * C15325 + C1300 * C15319 + C1301 * C15326 + C1302 * C31874) *
               C32276 +
           (C1303 * C15325 + C1304 * C15319 + C1305 * C15326 + C1306 * C31874) *
               C32266 +
           (C7750 * C15325 + C7751 * C15319 + (C986 - C987) * C15326 +
            (C988 - C989) * C31874) *
               C32248) *
              C31925 * C31911 * C111 +
          ((C168 * C15325 + C169 * C15319 + C170 * C15326 + C171 * C31874) *
               C32280 +
           (C816 * C15325 + C817 * C15319 + C2659 * C15326 + C2660 * C31874) *
               C32276 +
           (C830 * C15325 + C831 * C15319 + (C827 - C826) * C15326 +
            (C829 - C828) * C31874) *
               C32266 +
           ((C987 - C986) * C15325 + (C989 - C988) * C15319 +
            (C31966 * C1293 - C113 * C1292) * C15326 +
            (C31966 * C1295 - C113 * C1294) * C31874) *
               C32248) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31966 * C126 - C113 * C119) * C15325 +
            (C31966 * C140 - C113 * C127) * C15319 + (C148 - C149) * C15326 +
            (C150 - C151) * C31874) *
               C32280 +
           ((C966 - C967) * C15325 + (C968 - C969) * C15319 + C1297 * C15326 +
            C1298 * C31874) *
               C32276 +
           C15438 * C32266 + C15439 * C32248) *
              C31925 * C235 +
          (((C967 - C966) * C15325 + (C969 - C968) * C15319 + C1299 * C15326 +
            C1300 * C31874) *
               C32280 +
           ((C971 - C970) * C15325 + (C973 - C972) * C15319 + C1303 * C15326 +
            C1304 * C31874) *
               C32276 +
           ((C978 - C979) * C15325 + (C980 - C981) * C15319 + C7750 * C15326 +
            C7751 * C31874) *
               C32266 +
           ((C6065 - C6064) * C15325 + (C6067 - C6066) * C15319 +
            (C6241 - C6242) * C15326 + (C6243 - C6244) * C31874) *
               C32248) *
              C31925 * C236 +
          (C15438 * C32280 + C15439 * C32276 +
           (C6075 * C15325 + C6076 * C15319 + (C6242 - C6241) * C15326 +
            (C6244 - C6243) * C31874) *
               C32266 +
           ((C6069 - C6068) * C15325 + (C6071 - C6070) * C15319 +
            (C31966 * C6237 - C113 * C6236) * C15326 +
            (C31966 * C6239 - C113 * C6238) * C31874) *
               C32248) *
              C31925 * C237) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31966 * C126 - C113 * C119) * C15325 +
            (C31966 * C140 - C113 * C127) * C15319 + (C148 - C149) * C15326 +
            (C150 - C151) * C31874) *
               C32280 +
           ((C966 - C967) * C15325 + (C968 - C969) * C15319 + C1297 * C15326 +
            C1298 * C31874) *
               C32276 +
           C15438 * C32266 + C15439 * C32248) *
              C341 +
          (((C113 * C344 - C31966 * C354) * C15325 +
            (C113 * C355 - C31966 * C374) * C15319 + (C579 - C580) * C15326 +
            (C581 - C582) * C31874) *
               C32280 +
           ((C1631 - C1632) * C15325 + (C1633 - C1634) * C15319 +
            (C1457 - C1458) * C15326 + (C1459 - C1460) * C31874) *
               C32276 +
           ((C1635 - C1636) * C15325 + (C1637 - C1638) * C15319 +
            (C1465 - C1466) * C15326 + (C1467 - C1468) * C31874) *
               C32266 +
           ((C6417 - C6418) * C15325 + (C6419 - C6420) * C15319 +
            (C7882 - C7883) * C15326 + (C7884 - C7885) * C31874) *
               C32248) *
              C342 +
          (((C31966 * C364 - C113 * C349) * C15325 +
            (C31966 * C379 - C113 * C365) * C15319 +
            (C31966 * C366 - C113 * C350) * C15326 +
            (C31966 * C380 - C113 * C367) * C31874) *
               C32280 +
           ((C31966 * C1125 - C113 * C1113) * C15325 +
            (C31966 * C1140 - C113 * C1126) * C15319 +
            (C31966 * C1127 - C113 * C1114) * C15326 +
            (C31966 * C1141 - C113 * C1128) * C31874) *
               C32276 +
           ((C31966 * C1131 - C113 * C1116) * C15325 +
            (C31966 * C1143 - C113 * C1132) * C15319 +
            (C31966 * C1133 - C113 * C1117) * C15326 +
            (C31966 * C1144 - C113 * C1134) * C31874) *
               C32266 +
           ((C31966 * C6147 - C113 * C6143) * C15325 +
            (C31966 * C6152 - C113 * C6148) * C15319 +
            (C31966 * C6962 - C113 * C6961) * C15326 +
            (C31966 * C6964 - C113 * C6963) * C31874) *
               C32248) *
              C343) *
         C31911 * C31899) /
            (p * q * std::sqrt(p + q));
    d2ee[23] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31966 * C126 - C113 * C119) * C14631 +
             (C31966 * C140 - C113 * C127) * C32279 + (C148 - C149) * C14632 +
             (C150 - C151) * C32272 + C168 * C14633 + C169 * C32259 +
             C170 * C14634 + C171 * C32242) *
                C14629 +
            ((C966 - C967) * C14631 + (C968 - C969) * C32279 + C1297 * C14632 +
             C1298 * C32272 + C816 * C14633 + C817 * C32259 + C2659 * C14634 +
             C2660 * C32242) *
                C32013) *
               C572 +
           (((C113 * C344 - C31966 * C354) * C14631 +
             (C113 * C355 - C31966 * C374) * C32279 + (C579 - C580) * C14632 +
             (C581 - C582) * C32272 + (C583 - C584) * C14633 +
             (C585 - C586) * C32259 + (C587 - C588) * C14634 +
             (C589 - C590) * C32242) *
                C14629 +
            ((C1631 - C1632) * C14631 + (C1633 - C1634) * C32279 +
             (C1457 - C1458) * C14632 + (C1459 - C1460) * C32272 +
             (C1461 - C1462) * C14633 + (C1463 - C1464) * C32259 +
             (C3119 - C3120) * C14634 + (C3121 - C3122) * C32242) *
                C32013) *
               C573) *
              C31911 * C468 +
          ((((C149 - C148) * C14631 + (C151 - C150) * C32279 +
             (C153 - C152) * C14632 + (C155 - C154) * C32272 +
             (C157 - C156) * C14633 + (C159 - C158) * C32259 +
             (C161 - C160) * C14634 + (C163 - C162) * C32242) *
                C14629 +
            (C1299 * C14631 + C1300 * C32279 + C1301 * C14632 + C1302 * C32272 +
             C2987 * C14633 + C2988 * C32259 + (C487 - C488) * C14634 +
             (C489 - C490) * C32242) *
                C32013) *
               C572 +
           (((C580 - C579) * C14631 + (C582 - C581) * C32279 +
             (C584 - C583) * C14632 + (C586 - C585) * C32272 +
             (C588 - C587) * C14633 + (C590 - C589) * C32259 +
             (C592 - C591) * C14634 + (C594 - C593) * C32242) *
                C14629 +
            ((C1458 - C1457) * C14631 + (C1460 - C1459) * C32279 +
             (C1462 - C1461) * C14632 + (C1464 - C1463) * C32272 +
             (C3120 - C3119) * C14633 + (C3122 - C3121) * C32259 +
             (C31966 * C689 - C113 * C680) * C14634 +
             (C31966 * C695 - C113 * C690) * C32242) *
                C32013) *
               C573) *
              C31911 * C469)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31966 * C126 - C113 * C119) * C15325 +
             (C31966 * C140 - C113 * C127) * C15319 + (C148 - C149) * C15326 +
             (C150 - C151) * C31874) *
                C32280 +
            ((C966 - C967) * C15325 + (C968 - C969) * C15319 + C1297 * C15326 +
             C1298 * C31874) *
                C32276 +
            C15438 * C32266 + C15439 * C32248) *
               C572 +
           (((C113 * C344 - C31966 * C354) * C15325 +
             (C113 * C355 - C31966 * C374) * C15319 + (C579 - C580) * C15326 +
             (C581 - C582) * C31874) *
                C32280 +
            ((C1631 - C1632) * C15325 + (C1633 - C1634) * C15319 +
             (C1457 - C1458) * C15326 + (C1459 - C1460) * C31874) *
                C32276 +
            ((C1635 - C1636) * C15325 + (C1637 - C1638) * C15319 +
             (C1465 - C1466) * C15326 + (C1467 - C1468) * C31874) *
                C32266 +
            ((C6417 - C6418) * C15325 + (C6419 - C6420) * C15319 +
             (C7882 - C7883) * C15326 + (C7884 - C7885) * C31874) *
                C32248) *
               C573) *
              C31911 * C468 +
          ((((C149 - C148) * C15325 + (C151 - C150) * C15319 +
             (C153 - C152) * C15326 + (C155 - C154) * C31874) *
                C32280 +
            (C1299 * C15325 + C1300 * C15319 + C1301 * C15326 +
             C1302 * C31874) *
                C32276 +
            (C1303 * C15325 + C1304 * C15319 + C1305 * C15326 +
             C1306 * C31874) *
                C32266 +
            (C7750 * C15325 + C7751 * C15319 + (C986 - C987) * C15326 +
             (C988 - C989) * C31874) *
                C32248) *
               C572 +
           (((C580 - C579) * C15325 + (C582 - C581) * C15319 +
             (C584 - C583) * C15326 + (C586 - C585) * C31874) *
                C32280 +
            ((C1458 - C1457) * C15325 + (C1460 - C1459) * C15319 +
             (C1462 - C1461) * C15326 + (C1464 - C1463) * C31874) *
                C32276 +
            ((C1466 - C1465) * C15325 + (C1468 - C1467) * C15319 +
             (C1470 - C1469) * C15326 + (C1472 - C1471) * C31874) *
                C32266 +
            ((C7883 - C7882) * C15325 + (C7885 - C7884) * C15319 +
             (C31966 * C1625 - C113 * C1620) * C15326 +
             (C31966 * C1629 - C113 * C1626) * C31874) *
                C32248) *
               C573) *
              C31911 * C469)) /
            (p * q * std::sqrt(p + q));
    d2ee[24] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C31966 * C126 - C113 * C119) * C14631 +
            (C31966 * C140 - C113 * C127) * C32279 + (C148 - C149) * C14632 +
            (C150 - C151) * C32272 + C168 * C14633 + C169 * C32259 +
            C170 * C14634 + C171 * C32242) *
               C14629 +
           ((C966 - C967) * C14631 + (C968 - C969) * C32279 + C1297 * C14632 +
            C1298 * C32272 + C816 * C14633 + C817 * C32259 + C2659 * C14634 +
            C2660 * C32242) *
               C32013) *
              C31925 * C31911 * C110 +
          (((C149 - C148) * C14631 + (C151 - C150) * C32279 +
            (C153 - C152) * C14632 + (C155 - C154) * C32272 +
            (C157 - C156) * C14633 + (C159 - C158) * C32259 +
            (C161 - C160) * C14634 + (C163 - C162) * C32242) *
               C14629 +
           (C1299 * C14631 + C1300 * C32279 + C1301 * C14632 + C1302 * C32272 +
            C2987 * C14633 + C2988 * C32259 + (C487 - C488) * C14634 +
            (C489 - C490) * C32242) *
               C32013) *
              C31925 * C31911 * C111 +
          ((C168 * C14631 + C169 * C32279 + C170 * C14632 + C171 * C32272 +
            C172 * C14633 + C173 * C32259 + (C165 - C164) * C14634 +
            (C167 - C166) * C32242) *
               C14629 +
           (C816 * C14631 + C817 * C32279 + C2659 * C14632 + C2660 * C32272 +
            (C488 - C487) * C14633 + (C490 - C489) * C32259 +
            (C31966 * C471 - C113 * C470) * C14634 +
            (C31966 * C473 - C113 * C472) * C32242) *
               C32013) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C31966 * C126 - C113 * C119) * C14631 +
            (C31966 * C140 - C113 * C127) * C32279 + (C148 - C149) * C14632 +
            (C150 - C151) * C32272 + C168 * C14633 + C169 * C32259 +
            C170 * C14634 + C171 * C32242) *
               C14629 +
           ((C966 - C967) * C14631 + (C968 - C969) * C32279 + C1297 * C14632 +
            C1298 * C32272 + C816 * C14633 + C817 * C32259 + C2659 * C14634 +
            C2660 * C32242) *
               C32013) *
              C31925 * C235 +
          (((C967 - C966) * C14631 + (C969 - C968) * C32279 + C1299 * C14632 +
            C1300 * C32272 + C1301 * C14633 + C1302 * C32259 + C2987 * C14634 +
            C2988 * C32242) *
               C14629 +
           ((C971 - C970) * C14631 + (C973 - C972) * C32279 + C1303 * C14632 +
            C1304 * C32272 + C1305 * C14633 + C1306 * C32259 +
            (C826 - C827) * C14634 + (C828 - C829) * C32242) *
               C32013) *
              C31925 * C236 +
          ((C990 * C14631 + C991 * C32279 + C974 * C14632 + C975 * C32272 +
            C830 * C14633 + C831 * C32259 + (C827 - C826) * C14634 +
            (C829 - C828) * C32242) *
               C14629 +
           (C6062 * C14631 + C6063 * C32279 + C7512 * C14632 + C7513 * C32272 +
            (C987 - C986) * C14633 + (C989 - C988) * C32259 +
            (C31966 * C1293 - C113 * C1292) * C14634 +
            (C31966 * C1295 - C113 * C1294) * C32242) *
               C32013) *
              C31925 * C237) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C31966 * C126 - C113 * C119) * C15325 +
            (C31966 * C140 - C113 * C127) * C15319 + (C148 - C149) * C15326 +
            (C150 - C151) * C31874) *
               C32280 +
           ((C966 - C967) * C15325 + (C968 - C969) * C15319 + C1297 * C15326 +
            C1298 * C31874) *
               C32276 +
           (C990 * C15325 + C991 * C15319 + C974 * C15326 + C975 * C31874) *
               C32266 +
           (C6062 * C15325 + C6063 * C15319 + C7512 * C15326 + C7513 * C31874) *
               C32248) *
              C31925 * C31911 * C110 +
          (((C149 - C148) * C15325 + (C151 - C150) * C15319 +
            (C153 - C152) * C15326 + (C155 - C154) * C31874) *
               C32280 +
           (C1299 * C15325 + C1300 * C15319 + C1301 * C15326 + C1302 * C31874) *
               C32276 +
           (C1303 * C15325 + C1304 * C15319 + C1305 * C15326 + C1306 * C31874) *
               C32266 +
           (C7750 * C15325 + C7751 * C15319 + (C986 - C987) * C15326 +
            (C988 - C989) * C31874) *
               C32248) *
              C31925 * C31911 * C111 +
          ((C168 * C15325 + C169 * C15319 + C170 * C15326 + C171 * C31874) *
               C32280 +
           (C816 * C15325 + C817 * C15319 + C2659 * C15326 + C2660 * C31874) *
               C32276 +
           (C830 * C15325 + C831 * C15319 + (C827 - C826) * C15326 +
            (C829 - C828) * C31874) *
               C32266 +
           ((C987 - C986) * C15325 + (C989 - C988) * C15319 +
            (C31966 * C1293 - C113 * C1292) * C15326 +
            (C31966 * C1295 - C113 * C1294) * C31874) *
               C32248) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C31966 * C126 - C113 * C119) * C15325 +
            (C31966 * C140 - C113 * C127) * C15319 + (C148 - C149) * C15326 +
            (C150 - C151) * C31874) *
               C32280 +
           ((C966 - C967) * C15325 + (C968 - C969) * C15319 + C1297 * C15326 +
            C1298 * C31874) *
               C32276 +
           C15438 * C32266 + C15439 * C32248) *
              C31925 * C235 +
          (((C967 - C966) * C15325 + (C969 - C968) * C15319 + C1299 * C15326 +
            C1300 * C31874) *
               C32280 +
           ((C971 - C970) * C15325 + (C973 - C972) * C15319 + C1303 * C15326 +
            C1304 * C31874) *
               C32276 +
           ((C978 - C979) * C15325 + (C980 - C981) * C15319 + C7750 * C15326 +
            C7751 * C31874) *
               C32266 +
           ((C6065 - C6064) * C15325 + (C6067 - C6066) * C15319 +
            (C6241 - C6242) * C15326 + (C6243 - C6244) * C31874) *
               C32248) *
              C31925 * C236 +
          (C15438 * C32280 + C15439 * C32276 +
           (C6075 * C15325 + C6076 * C15319 + (C6242 - C6241) * C15326 +
            (C6244 - C6243) * C31874) *
               C32266 +
           ((C6069 - C6068) * C15325 + (C6071 - C6070) * C15319 +
            (C31966 * C6237 - C113 * C6236) * C15326 +
            (C31966 * C6239 - C113 * C6238) * C31874) *
               C32248) *
              C31925 * C237) *
         C31899) /
            (p * q * std::sqrt(p + q));
    d2ee[25] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C19912 * C126 - C19914 * C119 + C32053 * C354 - C19915 * C344) *
                 C30875 +
             (C19912 * C140 - C19914 * C127 + C32053 * C374 - C19915 * C355) *
                 C32188 +
             (C19917 - C19918 + C19919 - C19920) * C30856 +
             (C19921 - C19922 + C19923 - C19924) * C31874) *
                C32009 +
            ((C20903 - C20904 + C20905 - C20906) * C30875 +
             (C20907 - C20908 + C20909 - C20910) * C32188 + C21306 * C30856 +
             C21307 * C31874) *
                C32016 +
            C28258 * C17094) *
               C31925 * C466 +
           (((C20904 - C20903 + C20906 - C20905) * C30875 +
             (C20908 - C20907 + C20910 - C20909) * C32188 + C21308 * C30856 +
             C21309 * C31874) *
                C32009 +
            ((C20912 - C20911 + C20914 - C20913) * C30875 +
             (C20916 - C20915 + C20918 - C20917) * C32188 + C21310 * C30856 +
             C21311 * C31874) *
                C32016 +
            ((C20923 - C20924 + C20925 - C20926) * C30875 +
             (C20927 - C20928 + C20929 - C20930) * C32188 +
             (C20931 - C20932 + C20933 - C20934) * C30856 +
             (C20935 - C20936 + C20937 - C20938) * C31874) *
                C17094) *
               C31925 * C467) *
              C468 +
          ((((C19918 - C19917 + C19920 - C19919) * C30875 +
             (C19922 - C19921 + C19924 - C19923) * C32188 +
             (C19926 - C19925 + C19928 - C19927) * C30856 +
             (C19930 - C19929 + C19932 - C19931) * C31874) *
                C32009 +
            (C21308 * C30875 + C21309 * C32188 + C23130 * C30856 +
             C23131 * C31874) *
                C32016 +
            (C21310 * C30875 + C21311 * C32188 +
             (C20749 - C20750 + C20751 - C20752) * C30856 +
             (C20753 - C20754 + C20755 - C20756) * C31874) *
                C17094) *
               C31925 * C466 +
           ((C21306 * C30875 + C21307 * C32188 + C22638 * C30856 +
             C22639 * C31874) *
                C32009 +
            (C20943 * C30875 + C20944 * C32188 +
             (C20750 - C20749 + C20752 - C20751) * C30856 +
             (C20754 - C20753 + C20756 - C20755) * C31874) *
                C32016 +
            ((C20932 - C20931 + C20934 - C20933) * C30875 +
             (C20936 - C20935 + C20938 - C20937) * C32188 +
             (C19912 * C951 - C19914 * C943 + C32053 * C1625 - C19915 * C1620) *
                 C30856 +
             (C19912 * C961 - C19914 * C952 + C32053 * C1629 - C19915 * C1626) *
                 C31874) *
                C17094) *
               C31925 * C467) *
              C469)) /
        (p * q * std::sqrt(p + q));
    d2ee[26] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C19912 * C126 - C19914 * C119 + C32053 * C354 - C19915 * C344) *
                 C30875 +
             (C19912 * C140 - C19914 * C127 + C32053 * C374 - C19915 * C355) *
                 C32188 +
             (C19917 - C19918 + C19919 - C19920) * C30856 +
             (C19921 - C19922 + C19923 - C19924) * C31874) *
                C32009 +
            ((C20903 - C20904 + C20905 - C20906) * C30875 +
             (C20907 - C20908 + C20909 - C20910) * C32188 + C21306 * C30856 +
             C21307 * C31874) *
                C32016 +
            C28258 * C17094) *
               C572 +
           (((C19914 * C344 - C19912 * C354 + C19915 * C349 - C32053 * C364) *
                 C30875 +
             (C19914 * C355 - C19912 * C374 + C19915 * C365 - C32053 * C379) *
                 C32188 +
             (C20441 - C20442 + C20443 - C20444) * C30856 +
             (C20445 - C20446 + C20447 - C20448) * C31874) *
                C32009 +
            ((C21716 - C21717 + C21718 - C21719) * C30875 +
             (C21720 - C21721 + C21722 - C21723) * C32188 +
             (C21506 - C21507 + C21508 - C21509) * C30856 +
             (C21510 - C21511 + C21512 - C21513) * C31874) *
                C32016 +
            ((C21724 - C21725 + C21726 - C21727) * C30875 +
             (C21728 - C21729 + C21730 - C21731) * C32188 +
             (C21514 - C21515 + C21516 - C21517) * C30856 +
             (C21518 - C21519 + C21520 - C21521) * C31874) *
                C17094) *
               C573) *
              C466 +
          ((((C20904 - C20903 + C20906 - C20905) * C30875 +
             (C20908 - C20907 + C20910 - C20909) * C32188 + C21308 * C30856 +
             C21309 * C31874) *
                C32009 +
            ((C20912 - C20911 + C20914 - C20913) * C30875 +
             (C20916 - C20915 + C20918 - C20917) * C32188 + C21310 * C30856 +
             C21311 * C31874) *
                C32016 +
            ((C20923 - C20924 + C20925 - C20926) * C30875 +
             (C20927 - C20928 + C20929 - C20930) * C32188 +
             (C20931 - C20932 + C20933 - C20934) * C30856 +
             (C20935 - C20936 + C20937 - C20938) * C31874) *
                C17094) *
               C572 +
           (((C21717 - C21716 + C21719 - C21718) * C30875 +
             (C21721 - C21720 + C21723 - C21722) * C32188 +
             (C21507 - C21506 + C21509 - C21508) * C30856 +
             (C21511 - C21510 + C21513 - C21512) * C31874) *
                C32009 +
            ((C21725 - C21724 + C21727 - C21726) * C30875 +
             (C21729 - C21728 + C21731 - C21730) * C32188 +
             (C21515 - C21514 + C21517 - C21516) * C30856 +
             (C21519 - C21518 + C21521 - C21520) * C31874) *
                C32016 +
            ((C27221 - C27220 + C27223 - C27222) * C30875 +
             (C27225 - C27224 + C27227 - C27226) * C32188 +
             (C19912 * C1623 - C19914 * C1619 + C32053 * C6962 -
              C19915 * C6961) *
                 C30856 +
             (C19912 * C1628 - C19914 * C1624 + C32053 * C6964 -
              C19915 * C6963) *
                 C31874) *
                C17094) *
               C573) *
              C467) *
         C31899) /
        (p * q * std::sqrt(p + q));
    d2ee[27] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C19912 * C126 - C19914 * C119 + C32053 * C354 - C19915 * C344) *
                C30875 +
            (C19912 * C140 - C19914 * C127 + C32053 * C374 - C19915 * C355) *
                C32188 +
            (C19917 - C19918 + C19919 - C19920) * C30856 +
            (C19921 - C19922 + C19923 - C19924) * C31874) *
               C32009 +
           ((C20903 - C20904 + C20905 - C20906) * C30875 +
            (C20907 - C20908 + C20909 - C20910) * C32188 + C21306 * C30856 +
            C21307 * C31874) *
               C32016 +
           C28258 * C17094) *
              C31925 * C235 +
          (((C20904 - C20903 + C20906 - C20905) * C30875 +
            (C20908 - C20907 + C20910 - C20909) * C32188 + C21308 * C30856 +
            C21309 * C31874) *
               C32009 +
           ((C20912 - C20911 + C20914 - C20913) * C30875 +
            (C20916 - C20915 + C20918 - C20917) * C32188 + C21310 * C30856 +
            C21311 * C31874) *
               C32016 +
           ((C20923 - C20924 + C20925 - C20926) * C30875 +
            (C20927 - C20928 + C20929 - C20930) * C32188 +
            (C20931 - C20932 + C20933 - C20934) * C30856 +
            (C20935 - C20936 + C20937 - C20938) * C31874) *
               C17094) *
              C31925 * C236 +
          (C28258 * C32009 +
           (C26727 * C30875 + C26728 * C32188 +
            (C20932 - C20931 + C20934 - C20933) * C30856 +
            (C20936 - C20935 + C20938 - C20937) * C31874) *
               C32016 +
           ((C26719 - C26718 + C26721 - C26720) * C30875 +
            (C26723 - C26722 + C26725 - C26724) * C32188 +
            (C19912 * C955 - C19914 * C945 + C32053 * C6327 - C19915 * C6326) *
                C30856 +
            (C19912 * C963 - C19914 * C956 + C32053 * C6329 - C19915 * C6328) *
                C31874) *
               C17094) *
              C31925 * C237) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C19912 * C126 - C19914 * C119 + C32053 * C354 - C19915 * C344) *
                C30875 +
            (C19912 * C140 - C19914 * C127 + C32053 * C374 - C19915 * C355) *
                C32188 +
            (C19917 - C19918 + C19919 - C19920) * C30856 +
            (C19921 - C19922 + C19923 - C19924) * C31874) *
               C32009 +
           ((C20903 - C20904 + C20905 - C20906) * C30875 +
            (C20907 - C20908 + C20909 - C20910) * C32188 + C21306 * C30856 +
            C21307 * C31874) *
               C32016 +
           (C20945 * C30875 + C20946 * C32188 + C20943 * C30856 +
            C20944 * C31874) *
               C17094) *
              C31925 * C31911 * C110 +
          (((C19918 - C19917 + C19920 - C19919) * C30875 +
            (C19922 - C19921 + C19924 - C19923) * C32188 +
            (C19926 - C19925 + C19928 - C19927) * C30856 +
            (C19930 - C19929 + C19932 - C19931) * C31874) *
               C32009 +
           (C21308 * C30875 + C21309 * C32188 + C23130 * C30856 +
            C23131 * C31874) *
               C32016 +
           (C21310 * C30875 + C21311 * C32188 +
            (C20749 - C20750 + C20751 - C20752) * C30856 +
            (C20753 - C20754 + C20755 - C20756) * C31874) *
               C17094) *
              C31925 * C31911 * C111 +
          ((C19957 * C30875 + C19958 * C32188 + C19959 * C30856 +
            C19960 * C31874) *
               C32009 +
           (C22638 * C30875 + C22639 * C32188 +
            (C20304 - C20303 + C20306 - C20305) * C30856 +
            (C20308 - C20307 + C20310 - C20309) * C31874) *
               C32016 +
           ((C20750 - C20749 + C20752 - C20751) * C30875 +
            (C20754 - C20753 + C20756 - C20755) * C32188 +
            (C19912 * C265 - C19914 * C247 + C32053 * C1453 - C19915 * C1452) *
                C30856 +
            (C19912 * C277 - C19914 * C266 + C32053 * C1455 - C19915 * C1454) *
                C31874) *
               C17094) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C19912 * C126 - C19914 * C119 + C32053 * C354 - C19915 * C344) *
                C30875 +
            (C19912 * C140 - C19914 * C127 + C32053 * C374 - C19915 * C355) *
                C32188 +
            (C19917 - C19918 + C19919 - C19920) * C30856 +
            (C19921 - C19922 + C19923 - C19924) * C31874) *
               C32009 +
           ((C20903 - C20904 + C20905 - C20906) * C30875 +
            (C20907 - C20908 + C20909 - C20910) * C32188 + C21306 * C30856 +
            C21307 * C31874) *
               C32016 +
           C28258 * C17094) *
              C341 +
          (((C19914 * C344 - C19912 * C354 + C19915 * C349 - C32053 * C364) *
                C30875 +
            (C19914 * C355 - C19912 * C374 + C19915 * C365 - C32053 * C379) *
                C32188 +
            (C20441 - C20442 + C20443 - C20444) * C30856 +
            (C20445 - C20446 + C20447 - C20448) * C31874) *
               C32009 +
           ((C21716 - C21717 + C21718 - C21719) * C30875 +
            (C21720 - C21721 + C21722 - C21723) * C32188 +
            (C21506 - C21507 + C21508 - C21509) * C30856 +
            (C21510 - C21511 + C21512 - C21513) * C31874) *
               C32016 +
           ((C21724 - C21725 + C21726 - C21727) * C30875 +
            (C21728 - C21729 + C21730 - C21731) * C32188 +
            (C21514 - C21515 + C21516 - C21517) * C30856 +
            (C21518 - C21519 + C21520 - C21521) * C31874) *
               C17094) *
              C342 +
          (((C19912 * C364 - C19914 * C349 + C32053 * C2026 - C19915 * C2020) *
                C30875 +
            (C19912 * C379 - C19914 * C365 + C32053 * C2038 - C19915 * C2027) *
                C32188 +
            (C19912 * C366 - C19914 * C350 + C32053 * C2028 - C19915 * C2021) *
                C30856 +
            (C19912 * C380 - C19914 * C367 + C32053 * C2039 - C19915 * C2029) *
                C31874) *
               C32009 +
           ((C19912 * C1125 - C19914 * C1113 + C32053 * C2541 -
             C19915 * C2538) *
                C30875 +
            (C19912 * C1140 - C19914 * C1126 + C32053 * C2547 -
             C19915 * C2542) *
                C32188 +
            (C19912 * C1127 - C19914 * C1114 + C32053 * C2543 -
             C19915 * C2539) *
                C30856 +
            (C19912 * C1141 - C19914 * C1128 + C32053 * C2548 -
             C19915 * C2544) *
                C31874) *
               C32016 +
           ((C19912 * C1131 - C19914 * C1116 + C32053 * C6806 -
             C19915 * C6803) *
                C30875 +
            (C19912 * C1143 - C19914 * C1132 + C32053 * C6812 -
             C19915 * C6807) *
                C32188 +
            (C19912 * C1133 - C19914 * C1117 + C32053 * C7124 -
             C19915 * C7123) *
                C30856 +
            (C19912 * C1144 - C19914 * C1134 + C32053 * C7126 -
             C19915 * C7125) *
                C31874) *
               C17094) *
              C343) *
         C31911 * C31899) /
            (p * q * std::sqrt(p + q));
    d2ee[28] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C19912 * C126 - C19914 * C119 + C32053 * C354 - C19915 * C344) *
                 C30875 +
             (C19912 * C140 - C19914 * C127 + C32053 * C374 - C19915 * C355) *
                 C32188 +
             (C19917 - C19918 + C19919 - C19920) * C30856 +
             (C19921 - C19922 + C19923 - C19924) * C31874) *
                C32009 +
            ((C20903 - C20904 + C20905 - C20906) * C30875 +
             (C20907 - C20908 + C20909 - C20910) * C32188 + C21306 * C30856 +
             C21307 * C31874) *
                C32016 +
            C28258 * C17094) *
               C572 +
           (((C19914 * C344 - C19912 * C354 + C19915 * C349 - C32053 * C364) *
                 C30875 +
             (C19914 * C355 - C19912 * C374 + C19915 * C365 - C32053 * C379) *
                 C32188 +
             (C20441 - C20442 + C20443 - C20444) * C30856 +
             (C20445 - C20446 + C20447 - C20448) * C31874) *
                C32009 +
            ((C21716 - C21717 + C21718 - C21719) * C30875 +
             (C21720 - C21721 + C21722 - C21723) * C32188 +
             (C21506 - C21507 + C21508 - C21509) * C30856 +
             (C21510 - C21511 + C21512 - C21513) * C31874) *
                C32016 +
            ((C21724 - C21725 + C21726 - C21727) * C30875 +
             (C21728 - C21729 + C21730 - C21731) * C32188 +
             (C21514 - C21515 + C21516 - C21517) * C30856 +
             (C21518 - C21519 + C21520 - C21521) * C31874) *
                C17094) *
               C573) *
              C31911 * C468 +
          ((((C19918 - C19917 + C19920 - C19919) * C30875 +
             (C19922 - C19921 + C19924 - C19923) * C32188 +
             (C19926 - C19925 + C19928 - C19927) * C30856 +
             (C19930 - C19929 + C19932 - C19931) * C31874) *
                C32009 +
            (C21308 * C30875 + C21309 * C32188 + C23130 * C30856 +
             C23131 * C31874) *
                C32016 +
            (C21310 * C30875 + C21311 * C32188 +
             (C20749 - C20750 + C20751 - C20752) * C30856 +
             (C20753 - C20754 + C20755 - C20756) * C31874) *
                C17094) *
               C572 +
           (((C20442 - C20441 + C20444 - C20443) * C30875 +
             (C20446 - C20445 + C20448 - C20447) * C32188 +
             (C20450 - C20449 + C20452 - C20451) * C30856 +
             (C20454 - C20453 + C20456 - C20455) * C31874) *
                C32009 +
            ((C21507 - C21506 + C21509 - C21508) * C30875 +
             (C21511 - C21510 + C21513 - C21512) * C32188 +
             (C23327 - C23326 + C23329 - C23328) * C30856 +
             (C23331 - C23330 + C23333 - C23332) * C31874) *
                C32016 +
            ((C21515 - C21514 + C21517 - C21516) * C30875 +
             (C21519 - C21518 + C21521 - C21520) * C32188 +
             (C19912 * C1123 - C19914 * C1112 + C32053 * C1135 -
              C19915 * C1118) *
                 C30856 +
             (C19912 * C1139 - C19914 * C1124 + C32053 * C1145 -
              C19915 * C1136) *
                 C31874) *
                C17094) *
               C573) *
              C31911 * C469)) /
        (p * q * std::sqrt(p + q));
    d2ee[29] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19912 * C126 - C19914 * C119 + C32053 * C354 - C19915 * C344) *
                C30875 +
            (C19912 * C140 - C19914 * C127 + C32053 * C374 - C19915 * C355) *
                C32188 +
            (C19917 - C19918 + C19919 - C19920) * C30856 +
            (C19921 - C19922 + C19923 - C19924) * C31874) *
               C32009 +
           ((C20903 - C20904 + C20905 - C20906) * C30875 +
            (C20907 - C20908 + C20909 - C20910) * C32188 + C21306 * C30856 +
            C21307 * C31874) *
               C32016 +
           (C20945 * C30875 + C20946 * C32188 + C20943 * C30856 +
            C20944 * C31874) *
               C17094) *
              C31925 * C31911 * C110 +
          (((C19918 - C19917 + C19920 - C19919) * C30875 +
            (C19922 - C19921 + C19924 - C19923) * C32188 +
            (C19926 - C19925 + C19928 - C19927) * C30856 +
            (C19930 - C19929 + C19932 - C19931) * C31874) *
               C32009 +
           (C21308 * C30875 + C21309 * C32188 + C23130 * C30856 +
            C23131 * C31874) *
               C32016 +
           (C21310 * C30875 + C21311 * C32188 +
            (C20749 - C20750 + C20751 - C20752) * C30856 +
            (C20753 - C20754 + C20755 - C20756) * C31874) *
               C17094) *
              C31925 * C31911 * C111 +
          ((C19957 * C30875 + C19958 * C32188 + C19959 * C30856 +
            C19960 * C31874) *
               C32009 +
           (C22638 * C30875 + C22639 * C32188 +
            (C20304 - C20303 + C20306 - C20305) * C30856 +
            (C20308 - C20307 + C20310 - C20309) * C31874) *
               C32016 +
           ((C20750 - C20749 + C20752 - C20751) * C30875 +
            (C20754 - C20753 + C20756 - C20755) * C32188 +
            (C19912 * C265 - C19914 * C247 + C32053 * C1453 - C19915 * C1452) *
                C30856 +
            (C19912 * C277 - C19914 * C266 + C32053 * C1455 - C19915 * C1454) *
                C31874) *
               C17094) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19912 * C126 - C19914 * C119 + C32053 * C354 - C19915 * C344) *
                C30875 +
            (C19912 * C140 - C19914 * C127 + C32053 * C374 - C19915 * C355) *
                C32188 +
            (C19917 - C19918 + C19919 - C19920) * C30856 +
            (C19921 - C19922 + C19923 - C19924) * C31874) *
               C32009 +
           ((C20903 - C20904 + C20905 - C20906) * C30875 +
            (C20907 - C20908 + C20909 - C20910) * C32188 + C21306 * C30856 +
            C21307 * C31874) *
               C32016 +
           C28258 * C17094) *
              C31925 * C235 +
          (((C20904 - C20903 + C20906 - C20905) * C30875 +
            (C20908 - C20907 + C20910 - C20909) * C32188 + C21308 * C30856 +
            C21309 * C31874) *
               C32009 +
           ((C20912 - C20911 + C20914 - C20913) * C30875 +
            (C20916 - C20915 + C20918 - C20917) * C32188 + C21310 * C30856 +
            C21311 * C31874) *
               C32016 +
           ((C20923 - C20924 + C20925 - C20926) * C30875 +
            (C20927 - C20928 + C20929 - C20930) * C32188 +
            (C20931 - C20932 + C20933 - C20934) * C30856 +
            (C20935 - C20936 + C20937 - C20938) * C31874) *
               C17094) *
              C31925 * C236 +
          (C28258 * C32009 +
           (C26727 * C30875 + C26728 * C32188 +
            (C20932 - C20931 + C20934 - C20933) * C30856 +
            (C20936 - C20935 + C20938 - C20937) * C31874) *
               C32016 +
           ((C26719 - C26718 + C26721 - C26720) * C30875 +
            (C26723 - C26722 + C26725 - C26724) * C32188 +
            (C19912 * C955 - C19914 * C945 + C32053 * C6327 - C19915 * C6326) *
                C30856 +
            (C19912 * C963 - C19914 * C956 + C32053 * C6329 - C19915 * C6328) *
                C31874) *
               C17094) *
              C31925 * C237) *
         C31899) /
            (p * q * std::sqrt(p + q));
    d2ee[30] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C32049 * C126 - C31010 * C119 + C32056 * C354 - C31002 * C344 +
              C23639 * C364 - C31016 * C349) *
                 C5988 +
             (C32049 * C140 - C31010 * C127 + C32056 * C374 - C31002 * C355 +
              C23639 * C379 - C31016 * C365) *
                 C31864) *
                C32009 +
            ((C24688 - C24689 + C24690 - C24691 + C24692 - C24693) * C5988 +
             (C24694 - C24695 + C24696 - C24697 + C24698 - C24699) * C31864) *
                C32016 +
            C30251 * C17094) *
               C31925 * C466 +
           (((C24689 - C24688 + C24691 - C24690 + C24693 - C24692) * C5988 +
             (C24695 - C24694 + C24697 - C24696 + C24699 - C24698) * C31864) *
                C32009 +
            ((C24700 - C24701 + C24702 - C24703 + C24704 - C24705) * C5988 +
             (C24706 - C24707 + C24708 - C24709 + C24710 - C24711) * C31864) *
                C32016 +
            ((C30233 - C30234 + C30235 - C30236 + C30237 - C30238) * C5988 +
             (C30239 - C30240 + C30241 - C30242 + C30243 - C30244) * C31864) *
                C17094) *
               C31925 * C467) *
              C468 +
          ((((C23645 - C23644 + C23647 - C23646 + C23649 - C23648) * C5988 +
             (C23651 - C23650 + C23653 - C23652 + C23655 - C23654) * C31864) *
                C32009 +
            (C25082 * C5988 + C25083 * C31864) * C32016 +
            ((C24712 - C24713 + C24714 - C24715 + C24716 - C24717) * C5988 +
             (C24718 - C24719 + C24720 - C24721 + C24722 - C24723) * C31864) *
                C17094) *
               C31925 * C466 +
           ((C25080 * C5988 + C25081 * C31864) * C32009 +
            ((C24713 - C24712 + C24715 - C24714 + C24717 - C24716) * C5988 +
             (C24719 - C24718 + C24721 - C24720 + C24723 - C24722) * C31864) *
                C32016 +
            ((C32049 * C949 - C31010 * C942 + C32056 * C1623 - C31002 * C1619 +
              C23639 * C6962 - C31016 * C6961) *
                 C5988 +
             (C32049 * C960 - C31010 * C950 + C32056 * C1628 - C31002 * C1624 +
              C23639 * C6964 - C31016 * C6963) *
                 C31864) *
                C17094) *
               C31925 * C467) *
              C469)) /
        (p * q * std::sqrt(p + q));
    d2ee[31] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C32049 * C126 - C31010 * C119 + C32056 * C354 - C31002 * C344 +
              C23639 * C364 - C31016 * C349) *
                 C5988 +
             (C32049 * C140 - C31010 * C127 + C32056 * C374 - C31002 * C355 +
              C23639 * C379 - C31016 * C365) *
                 C31864) *
                C32009 +
            ((C24688 - C24689 + C24690 - C24691 + C24692 - C24693) * C5988 +
             (C24694 - C24695 + C24696 - C24697 + C24698 - C24699) * C31864) *
                C32016 +
            C30251 * C17094) *
               C572 +
           (((C31010 * C344 - C32049 * C354 + C31002 * C349 - C32056 * C364 +
              C31016 * C2020 - C23639 * C2026) *
                 C5988 +
             (C31010 * C355 - C32049 * C374 + C31002 * C365 - C32056 * C379 +
              C31016 * C2027 - C23639 * C2038) *
                 C31864) *
                C32009 +
            ((C25484 - C25485 + C25486 - C25487 + C25488 - C25489) * C5988 +
             (C25490 - C25491 + C25492 - C25493 + C25494 - C25495) * C31864) *
                C32016 +
            ((C30800 - C30801 + C30802 - C30803 + C30804 - C30805) * C5988 +
             (C30806 - C30807 + C30808 - C30809 + C30810 - C30811) * C31864) *
                C17094) *
               C573) *
              C466 +
          ((((C24689 - C24688 + C24691 - C24690 + C24693 - C24692) * C5988 +
             (C24695 - C24694 + C24697 - C24696 + C24699 - C24698) * C31864) *
                C32009 +
            ((C24700 - C24701 + C24702 - C24703 + C24704 - C24705) * C5988 +
             (C24706 - C24707 + C24708 - C24709 + C24710 - C24711) * C31864) *
                C32016 +
            ((C30233 - C30234 + C30235 - C30236 + C30237 - C30238) * C5988 +
             (C30239 - C30240 + C30241 - C30242 + C30243 - C30244) * C31864) *
                C17094) *
               C572 +
           (((C25485 - C25484 + C25487 - C25486 + C25489 - C25488) * C5988 +
             (C25491 - C25490 + C25493 - C25492 + C25495 - C25494) * C31864) *
                C32009 +
            ((C30801 - C30800 + C30803 - C30802 + C30805 - C30804) * C5988 +
             (C30807 - C30806 + C30809 - C30808 + C30811 - C30810) * C31864) *
                C32016 +
            ((C32049 * C1621 - C31010 * C1618 + C32056 * C6147 -
              C31002 * C6143 + C23639 * C7274 - C31016 * C7273) *
                 C5988 +
             (C32049 * C1627 - C31010 * C1622 + C32056 * C6152 -
              C31002 * C6148 + C23639 * C7276 - C31016 * C7275) *
                 C31864) *
                C17094) *
               C573) *
              C467) *
         C31899) /
        (p * q * std::sqrt(p + q));
    d2ee[32] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C32049 * C126 - C31010 * C119 + C32056 * C354 - C31002 * C344 +
             C23639 * C364 - C31016 * C349) *
                C5988 +
            (C32049 * C140 - C31010 * C127 + C32056 * C374 - C31002 * C355 +
             C23639 * C379 - C31016 * C365) *
                C31864) *
               C32009 +
           ((C24688 - C24689 + C24690 - C24691 + C24692 - C24693) * C5988 +
            (C24694 - C24695 + C24696 - C24697 + C24698 - C24699) * C31864) *
               C32016 +
           C30251 * C17094) *
              C31925 * C235 +
          (((C24689 - C24688 + C24691 - C24690 + C24693 - C24692) * C5988 +
            (C24695 - C24694 + C24697 - C24696 + C24699 - C24698) * C31864) *
               C32009 +
           ((C24700 - C24701 + C24702 - C24703 + C24704 - C24705) * C5988 +
            (C24706 - C24707 + C24708 - C24709 + C24710 - C24711) * C31864) *
               C32016 +
           ((C30233 - C30234 + C30235 - C30236 + C30237 - C30238) * C5988 +
            (C30239 - C30240 + C30241 - C30242 + C30243 - C30244) * C31864) *
               C17094) *
              C31925 * C236 +
          (C30251 * C32009 +
           ((C30234 - C30233 + C30236 - C30235 + C30238 - C30237) * C5988 +
            (C30240 - C30239 + C30242 - C30241 + C30244 - C30243) * C31864) *
               C32016 +
           ((C32049 * C953 - C31010 * C944 + C32056 * C6145 - C31002 * C6142 +
             C23639 * C6149 - C31016 * C6144) *
                C5988 +
            (C32049 * C962 - C31010 * C954 + C32056 * C6151 - C31002 * C6146 +
             C23639 * C6153 - C31016 * C6150) *
                C31864) *
               C17094) *
              C31925 * C237) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C32049 * C126 - C31010 * C119 + C32056 * C354 - C31002 * C344 +
             C23639 * C364 - C31016 * C349) *
                C5988 +
            (C32049 * C140 - C31010 * C127 + C32056 * C374 - C31002 * C355 +
             C23639 * C379 - C31016 * C365) *
                C31864) *
               C32009 +
           ((C24688 - C24689 + C24690 - C24691 + C24692 - C24693) * C5988 +
            (C24694 - C24695 + C24696 - C24697 + C24698 - C24699) * C31864) *
               C32016 +
           ((C24701 - C24700 + C24703 - C24702 + C24705 - C24704) * C5988 +
            (C24707 - C24706 + C24709 - C24708 + C24711 - C24710) * C31864) *
               C17094) *
              C31925 * C31911 * C110 +
          (((C23645 - C23644 + C23647 - C23646 + C23649 - C23648) * C5988 +
            (C23651 - C23650 + C23653 - C23652 + C23655 - C23654) * C31864) *
               C32009 +
           (C25082 * C5988 + C25083 * C31864) * C32016 +
           ((C24712 - C24713 + C24714 - C24715 + C24716 - C24717) * C5988 +
            (C24718 - C24719 + C24720 - C24721 + C24722 - C24723) * C31864) *
               C17094) *
              C31925 * C31911 * C111 +
          ((C23688 * C5988 + C23689 * C31864) * C32009 +
           ((C24069 - C24068 + C24071 - C24070 + C24073 - C24072) * C5988 +
            (C24075 - C24074 + C24077 - C24076 + C24079 - C24078) * C31864) *
               C32016 +
           ((C32049 * C263 - C31010 * C246 + C32056 * C1123 - C31002 * C1112 +
             C23639 * C1135 - C31016 * C1118) *
                C5988 +
            (C32049 * C276 - C31010 * C264 + C32056 * C1139 - C31002 * C1124 +
             C23639 * C1145 - C31016 * C1136) *
                C31864) *
               C17094) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C32049 * C126 - C31010 * C119 + C32056 * C354 - C31002 * C344 +
             C23639 * C364 - C31016 * C349) *
                C5988 +
            (C32049 * C140 - C31010 * C127 + C32056 * C374 - C31002 * C355 +
             C23639 * C379 - C31016 * C365) *
                C31864) *
               C32009 +
           ((C24688 - C24689 + C24690 - C24691 + C24692 - C24693) * C5988 +
            (C24694 - C24695 + C24696 - C24697 + C24698 - C24699) * C31864) *
               C32016 +
           C30251 * C17094) *
              C341 +
          (((C31010 * C344 - C32049 * C354 + C31002 * C349 - C32056 * C364 +
             C31016 * C2020 - C23639 * C2026) *
                C5988 +
            (C31010 * C355 - C32049 * C374 + C31002 * C365 - C32056 * C379 +
             C31016 * C2027 - C23639 * C2038) *
                C31864) *
               C32009 +
           ((C25484 - C25485 + C25486 - C25487 + C25488 - C25489) * C5988 +
            (C25490 - C25491 + C25492 - C25493 + C25494 - C25495) * C31864) *
               C32016 +
           ((C31010 * C1110 - C32049 * C1119 + C31002 * C1116 - C32056 * C1131 +
             C31016 * C6803 - C23639 * C6806) *
                C5988 +
            (C31010 * C1120 - C32049 * C1137 + C31002 * C1132 - C32056 * C1143 +
             C31016 * C6807 - C23639 * C6812) *
                C31864) *
               C17094) *
              C342 +
          (((C32049 * C364 - C31010 * C349 + C32056 * C2026 - C31002 * C2020 +
             C23639 * C2032 - C31016 * C2023) *
                C5988 +
            (C32049 * C379 - C31010 * C365 + C32056 * C2038 - C31002 * C2027 +
             C23639 * C2041 - C31016 * C2033) *
                C31864) *
               C32009 +
           ((C32049 * C1125 - C31010 * C1113 + C32056 * C2541 - C31002 * C2538 +
             C23639 * C6808 - C31016 * C6804) *
                C5988 +
            (C32049 * C1140 - C31010 * C1126 + C32056 * C2547 - C31002 * C2542 +
             C23639 * C6813 - C31016 * C6809) *
                C31864) *
               C32016 +
           ((C32049 * C1131 - C31010 * C1116 + C32056 * C6806 - C31002 * C6803 +
             C23639 * C6810 - C31016 * C6805) *
                C5988 +
            (C32049 * C1143 - C31010 * C1132 + C32056 * C6812 - C31002 * C6807 +
             C23639 * C6814 - C31016 * C6811) *
                C31864) *
               C17094) *
              C343) *
         C31911 * C31899) /
            (p * q * std::sqrt(p + q));
    d2ee[33] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C32049 * C126 - C31010 * C119 + C32056 * C354 - C31002 * C344 +
              C23639 * C364 - C31016 * C349) *
                 C5988 +
             (C32049 * C140 - C31010 * C127 + C32056 * C374 - C31002 * C355 +
              C23639 * C379 - C31016 * C365) *
                 C31864) *
                C32009 +
            ((C24688 - C24689 + C24690 - C24691 + C24692 - C24693) * C5988 +
             (C24694 - C24695 + C24696 - C24697 + C24698 - C24699) * C31864) *
                C32016 +
            C30251 * C17094) *
               C572 +
           (((C31010 * C344 - C32049 * C354 + C31002 * C349 - C32056 * C364 +
              C31016 * C2020 - C23639 * C2026) *
                 C5988 +
             (C31010 * C355 - C32049 * C374 + C31002 * C365 - C32056 * C379 +
              C31016 * C2027 - C23639 * C2038) *
                 C31864) *
                C32009 +
            ((C25484 - C25485 + C25486 - C25487 + C25488 - C25489) * C5988 +
             (C25490 - C25491 + C25492 - C25493 + C25494 - C25495) * C31864) *
                C32016 +
            ((C31010 * C1110 - C32049 * C1119 + C31002 * C1116 -
              C32056 * C1131 + C31016 * C6803 - C23639 * C6806) *
                 C5988 +
             (C31010 * C1120 - C32049 * C1137 + C31002 * C1132 -
              C32056 * C1143 + C31016 * C6807 - C23639 * C6812) *
                 C31864) *
                C17094) *
               C573) *
              C31911 * C468 +
          ((((C23645 - C23644 + C23647 - C23646 + C23649 - C23648) * C5988 +
             (C23651 - C23650 + C23653 - C23652 + C23655 - C23654) * C31864) *
                C32009 +
            (C25082 * C5988 + C25083 * C31864) * C32016 +
            ((C24712 - C24713 + C24714 - C24715 + C24716 - C24717) * C5988 +
             (C24718 - C24719 + C24720 - C24721 + C24722 - C24723) * C31864) *
                C17094) *
               C572 +
           (((C24227 - C24226 + C24229 - C24228 + C24231 - C24230) * C5988 +
             (C24233 - C24232 + C24235 - C24234 + C24237 - C24236) * C31864) *
                C32009 +
            ((C25279 - C25278 + C25281 - C25280 + C25283 - C25282) * C5988 +
             (C25285 - C25284 + C25287 - C25286 + C25289 - C25288) * C31864) *
                C32016 +
            ((C32049 * C1121 - C31010 * C1111 + C32056 * C1133 -
              C31002 * C1117 + C23639 * C7124 - C31016 * C7123) *
                 C5988 +
             (C32049 * C1138 - C31010 * C1122 + C32056 * C1144 -
              C31002 * C1134 + C23639 * C7126 - C31016 * C7125) *
                 C31864) *
                C17094) *
               C573) *
              C31911 * C469)) /
        (p * q * std::sqrt(p + q));
    d2ee[34] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C32049 * C126 - C31010 * C119 + C32056 * C354 - C31002 * C344 +
             C23639 * C364 - C31016 * C349) *
                C5988 +
            (C32049 * C140 - C31010 * C127 + C32056 * C374 - C31002 * C355 +
             C23639 * C379 - C31016 * C365) *
                C31864) *
               C32009 +
           ((C24688 - C24689 + C24690 - C24691 + C24692 - C24693) * C5988 +
            (C24694 - C24695 + C24696 - C24697 + C24698 - C24699) * C31864) *
               C32016 +
           ((C24701 - C24700 + C24703 - C24702 + C24705 - C24704) * C5988 +
            (C24707 - C24706 + C24709 - C24708 + C24711 - C24710) * C31864) *
               C17094) *
              C31925 * C31911 * C110 +
          (((C23645 - C23644 + C23647 - C23646 + C23649 - C23648) * C5988 +
            (C23651 - C23650 + C23653 - C23652 + C23655 - C23654) * C31864) *
               C32009 +
           (C25082 * C5988 + C25083 * C31864) * C32016 +
           ((C24712 - C24713 + C24714 - C24715 + C24716 - C24717) * C5988 +
            (C24718 - C24719 + C24720 - C24721 + C24722 - C24723) * C31864) *
               C17094) *
              C31925 * C31911 * C111 +
          ((C23688 * C5988 + C23689 * C31864) * C32009 +
           ((C24069 - C24068 + C24071 - C24070 + C24073 - C24072) * C5988 +
            (C24075 - C24074 + C24077 - C24076 + C24079 - C24078) * C31864) *
               C32016 +
           ((C32049 * C263 - C31010 * C246 + C32056 * C1123 - C31002 * C1112 +
             C23639 * C1135 - C31016 * C1118) *
                C5988 +
            (C32049 * C276 - C31010 * C264 + C32056 * C1139 - C31002 * C1124 +
             C23639 * C1145 - C31016 * C1136) *
                C31864) *
               C17094) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C32049 * C126 - C31010 * C119 + C32056 * C354 - C31002 * C344 +
             C23639 * C364 - C31016 * C349) *
                C5988 +
            (C32049 * C140 - C31010 * C127 + C32056 * C374 - C31002 * C355 +
             C23639 * C379 - C31016 * C365) *
                C31864) *
               C32009 +
           ((C24688 - C24689 + C24690 - C24691 + C24692 - C24693) * C5988 +
            (C24694 - C24695 + C24696 - C24697 + C24698 - C24699) * C31864) *
               C32016 +
           C30251 * C17094) *
              C31925 * C235 +
          (((C24689 - C24688 + C24691 - C24690 + C24693 - C24692) * C5988 +
            (C24695 - C24694 + C24697 - C24696 + C24699 - C24698) * C31864) *
               C32009 +
           ((C24700 - C24701 + C24702 - C24703 + C24704 - C24705) * C5988 +
            (C24706 - C24707 + C24708 - C24709 + C24710 - C24711) * C31864) *
               C32016 +
           ((C30233 - C30234 + C30235 - C30236 + C30237 - C30238) * C5988 +
            (C30239 - C30240 + C30241 - C30242 + C30243 - C30244) * C31864) *
               C17094) *
              C31925 * C236 +
          (C30251 * C32009 +
           ((C30234 - C30233 + C30236 - C30235 + C30238 - C30237) * C5988 +
            (C30240 - C30239 + C30242 - C30241 + C30244 - C30243) * C31864) *
               C32016 +
           ((C32049 * C953 - C31010 * C944 + C32056 * C6145 - C31002 * C6142 +
             C23639 * C6149 - C31016 * C6144) *
                C5988 +
            (C32049 * C962 - C31010 * C954 + C32056 * C6151 - C31002 * C6146 +
             C23639 * C6153 - C31016 * C6150) *
                C31864) *
               C17094) *
              C31925 * C237) *
         C31899) /
            (p * q * std::sqrt(p + q));
    d2ee[35] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19912 * C126 - C19914 * C119 + C32053 * C354 - C19915 * C344) *
                 C5988 +
             (C19912 * C140 - C19914 * C127 + C32053 * C374 - C19915 * C355) *
                 C31864) *
                C32280 +
            ((C20903 - C20904 + C20905 - C20906) * C5988 +
             (C20907 - C20908 + C20909 - C20910) * C31864) *
                C32276 +
            C26726 * C32266 + C26731 * C32248) *
               C31925 * C466 +
           (((C20904 - C20903 + C20906 - C20905) * C5988 +
             (C20908 - C20907 + C20910 - C20909) * C31864) *
                C32280 +
            ((C20912 - C20911 + C20914 - C20913) * C5988 +
             (C20916 - C20915 + C20918 - C20917) * C31864) *
                C32276 +
            ((C20923 - C20924 + C20925 - C20926) * C5988 +
             (C20927 - C20928 + C20929 - C20930) * C31864) *
                C32266 +
            ((C26718 - C26719 + C26720 - C26721) * C5988 +
             (C26722 - C26723 + C26724 - C26725) * C31864) *
                C32248) *
               C31925 * C467) *
              C468 +
          ((((C19918 - C19917 + C19920 - C19919) * C5988 +
             (C19922 - C19921 + C19924 - C19923) * C31864) *
                C32280 +
            (C21308 * C5988 + C21309 * C31864) * C32276 +
            (C21310 * C5988 + C21311 * C31864) * C32266 +
            ((C20931 - C20932 + C20933 - C20934) * C5988 +
             (C20935 - C20936 + C20937 - C20938) * C31864) *
                C32248) *
               C31925 * C466 +
           ((C21306 * C5988 + C21307 * C31864) * C32280 +
            (C20943 * C5988 + C20944 * C31864) * C32276 +
            ((C20932 - C20931 + C20934 - C20933) * C5988 +
             (C20936 - C20935 + C20938 - C20937) * C31864) *
                C32266 +
            ((C19912 * C955 - C19914 * C945 + C32053 * C6327 - C19915 * C6326) *
                 C5988 +
             (C19912 * C963 - C19914 * C956 + C32053 * C6329 - C19915 * C6328) *
                 C31864) *
                C32248) *
               C31925 * C467) *
              C469)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19912 * C126 - C19914 * C119 + C32053 * C354 - C19915 * C344) *
                 C5248 +
             (C19912 * C140 - C19914 * C127 + C32053 * C374 - C19915 * C355) *
                 C32270 +
             (C19917 - C19918 + C19919 - C19920) * C5249 +
             (C19921 - C19922 + C19923 - C19924) * C32257 + C19957 * C5250 +
             C19958 * C32227) *
                C14629 +
            ((C20903 - C20904 + C20905 - C20906) * C5248 +
             (C20907 - C20908 + C20909 - C20910) * C32270 + C21306 * C5249 +
             C21307 * C32257 + C22638 * C5250 + C22639 * C32227) *
                C32013) *
               C31925 * C466 +
           (((C20904 - C20903 + C20906 - C20905) * C5248 +
             (C20908 - C20907 + C20910 - C20909) * C32270 + C21308 * C5249 +
             C21309 * C32257 + C23130 * C5250 + C23131 * C32227) *
                C14629 +
            ((C20912 - C20911 + C20914 - C20913) * C5248 +
             (C20916 - C20915 + C20918 - C20917) * C32270 + C21310 * C5249 +
             C21311 * C32257 + (C20749 - C20750 + C20751 - C20752) * C5250 +
             (C20753 - C20754 + C20755 - C20756) * C32227) *
                C32013) *
               C31925 * C467) *
              C468 +
          ((((C19918 - C19917 + C19920 - C19919) * C5248 +
             (C19922 - C19921 + C19924 - C19923) * C32270 +
             (C19926 - C19925 + C19928 - C19927) * C5249 +
             (C19930 - C19929 + C19932 - C19931) * C32257 +
             (C19934 - C19933 + C19936 - C19935) * C5250 +
             (C19938 - C19937 + C19940 - C19939) * C32227) *
                C14629 +
            (C21308 * C5248 + C21309 * C32270 + C23130 * C5249 +
             C23131 * C32257 + (C20303 - C20304 + C20305 - C20306) * C5250 +
             (C20307 - C20308 + C20309 - C20310) * C32227) *
                C32013) *
               C31925 * C466 +
           ((C21306 * C5248 + C21307 * C32270 + C22638 * C5249 +
             C22639 * C32257 + (C20304 - C20303 + C20306 - C20305) * C5250 +
             (C20308 - C20307 + C20310 - C20309) * C32227) *
                C14629 +
            (C20943 * C5248 + C20944 * C32270 +
             (C20750 - C20749 + C20752 - C20751) * C5249 +
             (C20754 - C20753 + C20756 - C20755) * C32257 +
             (C19912 * C265 - C19914 * C247 + C32053 * C1453 - C19915 * C1452) *
                 C5250 +
             (C19912 * C277 - C19914 * C266 + C32053 * C1455 - C19915 * C1454) *
                 C32227) *
                C32013) *
               C31925 * C467) *
              C469)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C32281 * C126 - C21833 * C119 + C32278 * C354 - C21834 * C344 +
              C32269 * C364 - C21835 * C349 + C32254 * C2026 - C21836 * C2020) *
                 C5988 +
             (C32281 * C140 - C21833 * C127 + C32278 * C374 - C21834 * C355 +
              C32269 * C379 - C21835 * C365 + C32254 * C2038 - C21836 * C2027) *
                 C31864) *
                C14629 +
            ((C27424 - C27425 + C27426 - C27427 + C27428 - C27429 + C27430 -
              C27431) *
                 C5988 +
             (C27432 - C27433 + C27434 - C27435 + C27436 - C27437 + C27438 -
              C27439) *
                 C31864) *
                C32013) *
               C31925 * C466 +
           (((C27425 - C27424 + C27427 - C27426 + C27429 - C27428 + C27431 -
              C27430) *
                 C5988 +
             (C27433 - C27432 + C27435 - C27434 + C27437 - C27436 + C27439 -
              C27438) *
                 C31864) *
                C14629 +
            ((C27440 - C27441 + C27442 - C27443 + C27444 - C27445 + C27446 -
              C27447) *
                 C5988 +
             (C27448 - C27449 + C27450 - C27451 + C27452 - C27453 + C27454 -
              C27455) *
                 C31864) *
                C32013) *
               C31925 * C467) *
              C468 +
          ((((C21839 - C21838 + C21841 - C21840 + C21843 - C21842 + C21845 -
              C21844) *
                 C5988 +
             (C21847 - C21846 + C21849 - C21848 + C21851 - C21850 + C21853 -
              C21852) *
                 C31864) *
                C14629 +
            ((C22196 - C22197 + C22198 - C22199 + C22200 - C22201 + C22202 -
              C22203) *
                 C5988 +
             (C22204 - C22205 + C22206 - C22207 + C22208 - C22209 + C22210 -
              C22211) *
                 C31864) *
                C32013) *
               C31925 * C466 +
           (((C22197 - C22196 + C22199 - C22198 + C22201 - C22200 + C22203 -
              C22202) *
                 C5988 +
             (C22205 - C22204 + C22207 - C22206 + C22209 - C22208 + C22211 -
              C22210) *
                 C31864) *
                C14629 +
            ((C32281 * C261 - C21833 * C245 + C32278 * C1121 - C21834 * C1111 +
              C32269 * C1133 - C21835 * C1117 + C32254 * C7124 -
              C21836 * C7123) *
                 C5988 +
             (C32281 * C275 - C21833 * C262 + C32278 * C1138 - C21834 * C1122 +
              C32269 * C1144 - C21835 * C1134 + C32254 * C7126 -
              C21836 * C7125) *
                 C31864) *
                C32013) *
               C31925 * C467) *
              C469)) /
            (p * q * std::sqrt(p + q));
    d2ee[36] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19912 * C126 - C19914 * C119 + C32053 * C354 - C19915 * C344) *
                 C5988 +
             (C19912 * C140 - C19914 * C127 + C32053 * C374 - C19915 * C355) *
                 C31864) *
                C32280 +
            ((C20903 - C20904 + C20905 - C20906) * C5988 +
             (C20907 - C20908 + C20909 - C20910) * C31864) *
                C32276 +
            C26726 * C32266 + C26731 * C32248) *
               C572 +
           (((C19914 * C344 - C19912 * C354 + C19915 * C349 - C32053 * C364) *
                 C5988 +
             (C19914 * C355 - C19912 * C374 + C19915 * C365 - C32053 * C379) *
                 C31864) *
                C32280 +
            ((C21716 - C21717 + C21718 - C21719) * C5988 +
             (C21720 - C21721 + C21722 - C21723) * C31864) *
                C32276 +
            ((C21724 - C21725 + C21726 - C21727) * C5988 +
             (C21728 - C21729 + C21730 - C21731) * C31864) *
                C32266 +
            ((C27220 - C27221 + C27222 - C27223) * C5988 +
             (C27224 - C27225 + C27226 - C27227) * C31864) *
                C32248) *
               C573) *
              C466 +
          ((((C20904 - C20903 + C20906 - C20905) * C5988 +
             (C20908 - C20907 + C20910 - C20909) * C31864) *
                C32280 +
            ((C20912 - C20911 + C20914 - C20913) * C5988 +
             (C20916 - C20915 + C20918 - C20917) * C31864) *
                C32276 +
            ((C20923 - C20924 + C20925 - C20926) * C5988 +
             (C20927 - C20928 + C20929 - C20930) * C31864) *
                C32266 +
            ((C26718 - C26719 + C26720 - C26721) * C5988 +
             (C26722 - C26723 + C26724 - C26725) * C31864) *
                C32248) *
               C572 +
           (((C21717 - C21716 + C21719 - C21718) * C5988 +
             (C21721 - C21720 + C21723 - C21722) * C31864) *
                C32280 +
            ((C21725 - C21724 + C21727 - C21726) * C5988 +
             (C21729 - C21728 + C21731 - C21730) * C31864) *
                C32276 +
            ((C27221 - C27220 + C27223 - C27222) * C5988 +
             (C27225 - C27224 + C27227 - C27226) * C31864) *
                C32266 +
            ((C19912 * C6145 - C19914 * C6142 + C32053 * C6149 -
              C19915 * C6144) *
                 C5988 +
             (C19912 * C6151 - C19914 * C6146 + C32053 * C6153 -
              C19915 * C6150) *
                 C31864) *
                C32248) *
               C573) *
              C467) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19912 * C126 - C19914 * C119 + C32053 * C354 - C19915 * C344) *
                 C5248 +
             (C19912 * C140 - C19914 * C127 + C32053 * C374 - C19915 * C355) *
                 C32270 +
             (C19917 - C19918 + C19919 - C19920) * C5249 +
             (C19921 - C19922 + C19923 - C19924) * C32257 + C19957 * C5250 +
             C19958 * C32227) *
                C14629 +
            ((C20903 - C20904 + C20905 - C20906) * C5248 +
             (C20907 - C20908 + C20909 - C20910) * C32270 + C21306 * C5249 +
             C21307 * C32257 + C22638 * C5250 + C22639 * C32227) *
                C32013) *
               C572 +
           (((C19914 * C344 - C19912 * C354 + C19915 * C349 - C32053 * C364) *
                 C5248 +
             (C19914 * C355 - C19912 * C374 + C19915 * C365 - C32053 * C379) *
                 C32270 +
             (C20441 - C20442 + C20443 - C20444) * C5249 +
             (C20445 - C20446 + C20447 - C20448) * C32257 +
             (C20449 - C20450 + C20451 - C20452) * C5250 +
             (C20453 - C20454 + C20455 - C20456) * C32227) *
                C14629 +
            ((C21716 - C21717 + C21718 - C21719) * C5248 +
             (C21720 - C21721 + C21722 - C21723) * C32270 +
             (C21506 - C21507 + C21508 - C21509) * C5249 +
             (C21510 - C21511 + C21512 - C21513) * C32257 +
             (C23326 - C23327 + C23328 - C23329) * C5250 +
             (C23330 - C23331 + C23332 - C23333) * C32227) *
                C32013) *
               C573) *
              C466 +
          ((((C20904 - C20903 + C20906 - C20905) * C5248 +
             (C20908 - C20907 + C20910 - C20909) * C32270 + C21308 * C5249 +
             C21309 * C32257 + C23130 * C5250 + C23131 * C32227) *
                C14629 +
            ((C20912 - C20911 + C20914 - C20913) * C5248 +
             (C20916 - C20915 + C20918 - C20917) * C32270 + C21310 * C5249 +
             C21311 * C32257 + (C20749 - C20750 + C20751 - C20752) * C5250 +
             (C20753 - C20754 + C20755 - C20756) * C32227) *
                C32013) *
               C572 +
           (((C21717 - C21716 + C21719 - C21718) * C5248 +
             (C21721 - C21720 + C21723 - C21722) * C32270 +
             (C21507 - C21506 + C21509 - C21508) * C5249 +
             (C21511 - C21510 + C21513 - C21512) * C32257 +
             (C23327 - C23326 + C23329 - C23328) * C5250 +
             (C23331 - C23330 + C23333 - C23332) * C32227) *
                C14629 +
            ((C21725 - C21724 + C21727 - C21726) * C5248 +
             (C21729 - C21728 + C21731 - C21730) * C32270 +
             (C21515 - C21514 + C21517 - C21516) * C5249 +
             (C21519 - C21518 + C21521 - C21520) * C32257 +
             (C19912 * C1123 - C19914 * C1112 + C32053 * C1135 -
              C19915 * C1118) *
                 C5250 +
             (C19912 * C1139 - C19914 * C1124 + C32053 * C1145 -
              C19915 * C1136) *
                 C32227) *
                C32013) *
               C573) *
              C467) *
         C31899) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C32281 * C126 - C21833 * C119 + C32278 * C354 - C21834 * C344 +
              C32269 * C364 - C21835 * C349 + C32254 * C2026 - C21836 * C2020) *
                 C5988 +
             (C32281 * C140 - C21833 * C127 + C32278 * C374 - C21834 * C355 +
              C32269 * C379 - C21835 * C365 + C32254 * C2038 - C21836 * C2027) *
                 C31864) *
                C14629 +
            ((C27424 - C27425 + C27426 - C27427 + C27428 - C27429 + C27430 -
              C27431) *
                 C5988 +
             (C27432 - C27433 + C27434 - C27435 + C27436 - C27437 + C27438 -
              C27439) *
                 C31864) *
                C32013) *
               C572 +
           (((C21833 * C344 - C32281 * C354 + C21834 * C349 - C32278 * C364 +
              C21835 * C2020 - C32269 * C2026 + C21836 * C2023 -
              C32254 * C2032) *
                 C5988 +
             (C21833 * C355 - C32281 * C374 + C21834 * C365 - C32278 * C379 +
              C21835 * C2027 - C32269 * C2038 + C21836 * C2033 -
              C32254 * C2041) *
                 C31864) *
                C14629 +
            ((C27944 - C27945 + C27946 - C27947 + C27948 - C27949 + C27950 -
              C27951) *
                 C5988 +
             (C27952 - C27953 + C27954 - C27955 + C27956 - C27957 + C27958 -
              C27959) *
                 C31864) *
                C32013) *
               C573) *
              C466 +
          ((((C27425 - C27424 + C27427 - C27426 + C27429 - C27428 + C27431 -
              C27430) *
                 C5988 +
             (C27433 - C27432 + C27435 - C27434 + C27437 - C27436 + C27439 -
              C27438) *
                 C31864) *
                C14629 +
            ((C27440 - C27441 + C27442 - C27443 + C27444 - C27445 + C27446 -
              C27447) *
                 C5988 +
             (C27448 - C27449 + C27450 - C27451 + C27452 - C27453 + C27454 -
              C27455) *
                 C31864) *
                C32013) *
               C572 +
           (((C27945 - C27944 + C27947 - C27946 + C27949 - C27948 + C27951 -
              C27950) *
                 C5988 +
             (C27953 - C27952 + C27955 - C27954 + C27957 - C27956 + C27959 -
              C27958) *
                 C31864) *
                C14629 +
            ((C32281 * C1119 - C21833 * C1110 + C32278 * C1131 -
              C21834 * C1116 + C32269 * C6806 - C21835 * C6803 +
              C32254 * C6810 - C21836 * C6805) *
                 C5988 +
             (C32281 * C1137 - C21833 * C1120 + C32278 * C1143 -
              C21834 * C1132 + C32269 * C6812 - C21835 * C6807 +
              C32254 * C6814 - C21836 * C6811) *
                 C31864) *
                C32013) *
               C573) *
              C467) *
         C31899) /
            (p * q * std::sqrt(p + q));
    d2ee[37] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C19912 * C126 - C19914 * C119 + C32053 * C354 -
                 C19915 * C344) *
                    C5248 +
                (C19912 * C140 - C19914 * C127 + C32053 * C374 -
                 C19915 * C355) *
                    C32270 +
                (C19917 - C19918 + C19919 - C19920) * C5249 +
                (C19921 - C19922 + C19923 - C19924) * C32257 + C19957 * C5250 +
                C19958 * C32227) *
                   C14629 +
               ((C20903 - C20904 + C20905 - C20906) * C5248 +
                (C20907 - C20908 + C20909 - C20910) * C32270 + C21306 * C5249 +
                C21307 * C32257 + C22638 * C5250 + C22639 * C32227) *
                   C32013) *
                  C31925 * C31911 * C110 +
              (((C19918 - C19917 + C19920 - C19919) * C5248 +
                (C19922 - C19921 + C19924 - C19923) * C32270 +
                (C19926 - C19925 + C19928 - C19927) * C5249 +
                (C19930 - C19929 + C19932 - C19931) * C32257 +
                (C19934 - C19933 + C19936 - C19935) * C5250 +
                (C19938 - C19937 + C19940 - C19939) * C32227) *
                   C14629 +
               (C21308 * C5248 + C21309 * C32270 + C23130 * C5249 +
                C23131 * C32257 + (C20303 - C20304 + C20305 - C20306) * C5250 +
                (C20307 - C20308 + C20309 - C20310) * C32227) *
                   C32013) *
                  C31925 * C31911 * C111 +
              ((C19957 * C5248 + C19958 * C32270 + C19959 * C5249 +
                C19960 * C32257 + (C19942 - C19941 + C19944 - C19943) * C5250 +
                (C19946 - C19945 + C19948 - C19947) * C32227) *
                   C14629 +
               (C22638 * C5248 + C22639 * C32270 +
                (C20304 - C20303 + C20306 - C20305) * C5249 +
                (C20308 - C20307 + C20310 - C20309) * C32257 +
                (C19912 * C257 - C19914 * C243 + C32053 * C689 -
                 C19915 * C680) *
                    C5250 +
                (C19912 * C273 - C19914 * C258 + C32053 * C695 -
                 C19915 * C690) *
                    C32227) *
                   C32013) *
                  C31925 * C31911 * C112) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C19912 * C126 - C19914 * C119 + C32053 * C354 -
                 C19915 * C344) *
                    C5248 +
                (C19912 * C140 - C19914 * C127 + C32053 * C374 -
                 C19915 * C355) *
                    C32270 +
                (C19917 - C19918 + C19919 - C19920) * C5249 +
                (C19921 - C19922 + C19923 - C19924) * C32257 + C19957 * C5250 +
                C19958 * C32227) *
                   C14629 +
               ((C20903 - C20904 + C20905 - C20906) * C5248 +
                (C20907 - C20908 + C20909 - C20910) * C32270 + C21306 * C5249 +
                C21307 * C32257 + C22638 * C5250 + C22639 * C32227) *
                   C32013) *
                  C31925 * C235 +
              (((C20904 - C20903 + C20906 - C20905) * C5248 +
                (C20908 - C20907 + C20910 - C20909) * C32270 + C21308 * C5249 +
                C21309 * C32257 + C23130 * C5250 + C23131 * C32227) *
                   C14629 +
               ((C20912 - C20911 + C20914 - C20913) * C5248 +
                (C20916 - C20915 + C20918 - C20917) * C32270 + C21310 * C5249 +
                C21311 * C32257 + (C20749 - C20750 + C20751 - C20752) * C5250 +
                (C20753 - C20754 + C20755 - C20756) * C32227) *
                   C32013) *
                  C31925 * C236 +
              ((C20945 * C5248 + C20946 * C32270 + C20943 * C5249 +
                C20944 * C32257 + (C20750 - C20749 + C20752 - C20751) * C5250 +
                (C20754 - C20753 + C20756 - C20755) * C32227) *
                   C14629 +
               ((C20924 - C20923 + C20926 - C20925) * C5248 +
                (C20928 - C20927 + C20930 - C20929) * C32270 +
                (C20932 - C20931 + C20934 - C20933) * C5249 +
                (C20936 - C20935 + C20938 - C20937) * C32257 +
                (C19912 * C951 - C19914 * C943 + C32053 * C1625 -
                 C19915 * C1620) *
                    C5250 +
                (C19912 * C961 - C19914 * C952 + C32053 * C1629 -
                 C19915 * C1626) *
                    C32227) *
                   C32013) *
                  C31925 * C237) *
             C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19912 * C126 - C19914 * C119 + C32053 * C354 - C19915 * C344) *
                C5248 +
            (C19912 * C140 - C19914 * C127 + C32053 * C374 - C19915 * C355) *
                C32270 +
            (C19917 - C19918 + C19919 - C19920) * C5249 +
            (C19921 - C19922 + C19923 - C19924) * C32257 + C19957 * C5250 +
            C19958 * C32227) *
               C14629 +
           ((C20903 - C20904 + C20905 - C20906) * C5248 +
            (C20907 - C20908 + C20909 - C20910) * C32270 + C21306 * C5249 +
            C21307 * C32257 + C22638 * C5250 + C22639 * C32227) *
               C32013) *
              C341 +
          (((C19914 * C344 - C19912 * C354 + C19915 * C349 - C32053 * C364) *
                C5248 +
            (C19914 * C355 - C19912 * C374 + C19915 * C365 - C32053 * C379) *
                C32270 +
            (C20441 - C20442 + C20443 - C20444) * C5249 +
            (C20445 - C20446 + C20447 - C20448) * C32257 +
            (C20449 - C20450 + C20451 - C20452) * C5250 +
            (C20453 - C20454 + C20455 - C20456) * C32227) *
               C14629 +
           ((C21716 - C21717 + C21718 - C21719) * C5248 +
            (C21720 - C21721 + C21722 - C21723) * C32270 +
            (C21506 - C21507 + C21508 - C21509) * C5249 +
            (C21510 - C21511 + C21512 - C21513) * C32257 +
            (C23326 - C23327 + C23328 - C23329) * C5250 +
            (C23330 - C23331 + C23332 - C23333) * C32227) *
               C32013) *
              C342 +
          (((C19912 * C364 - C19914 * C349 + C32053 * C2026 - C19915 * C2020) *
                C5248 +
            (C19912 * C379 - C19914 * C365 + C32053 * C2038 - C19915 * C2027) *
                C32270 +
            (C19912 * C366 - C19914 * C350 + C32053 * C2028 - C19915 * C2021) *
                C5249 +
            (C19912 * C380 - C19914 * C367 + C32053 * C2039 - C19915 * C2029) *
                C32257 +
            (C19912 * C368 - C19914 * C351 + C32053 * C2030 - C19915 * C2022) *
                C5250 +
            (C19912 * C381 - C19914 * C369 + C32053 * C2040 - C19915 * C2031) *
                C32227) *
               C14629 +
           ((C19912 * C1125 - C19914 * C1113 + C32053 * C2541 -
             C19915 * C2538) *
                C5248 +
            (C19912 * C1140 - C19914 * C1126 + C32053 * C2547 -
             C19915 * C2542) *
                C32270 +
            (C19912 * C1127 - C19914 * C1114 + C32053 * C2543 -
             C19915 * C2539) *
                C5249 +
            (C19912 * C1141 - C19914 * C1128 + C32053 * C2548 -
             C19915 * C2544) *
                C32257 +
            (C19912 * C1129 - C19914 * C1115 + C32053 * C2545 -
             C19915 * C2540) *
                C5250 +
            (C19912 * C1142 - C19914 * C1130 + C32053 * C2549 -
             C19915 * C2546) *
                C32227) *
               C32013) *
              C343) *
         C31911 * C31899) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C19912 * C126 - C19914 * C119 + C32053 * C354 - C19915 * C344) *
                C5988 +
            (C19912 * C140 - C19914 * C127 + C32053 * C374 - C19915 * C355) *
                C31864) *
               C32280 +
           ((C20903 - C20904 + C20905 - C20906) * C5988 +
            (C20907 - C20908 + C20909 - C20910) * C31864) *
               C32276 +
           (C20945 * C5988 + C20946 * C31864) * C32266 +
           ((C20924 - C20923 + C20926 - C20925) * C5988 +
            (C20928 - C20927 + C20930 - C20929) * C31864) *
               C32248) *
              C31925 * C31911 * C110 +
          (((C19918 - C19917 + C19920 - C19919) * C5988 +
            (C19922 - C19921 + C19924 - C19923) * C31864) *
               C32280 +
           (C21308 * C5988 + C21309 * C31864) * C32276 +
           (C21310 * C5988 + C21311 * C31864) * C32266 +
           ((C20931 - C20932 + C20933 - C20934) * C5988 +
            (C20935 - C20936 + C20937 - C20938) * C31864) *
               C32248) *
              C31925 * C31911 * C111 +
          ((C19957 * C5988 + C19958 * C31864) * C32280 +
           (C22638 * C5988 + C22639 * C31864) * C32276 +
           ((C20750 - C20749 + C20752 - C20751) * C5988 +
            (C20754 - C20753 + C20756 - C20755) * C31864) *
               C32266 +
           ((C19912 * C951 - C19914 * C943 + C32053 * C1625 - C19915 * C1620) *
                C5988 +
            (C19912 * C961 - C19914 * C952 + C32053 * C1629 - C19915 * C1626) *
                C31864) *
               C32248) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C19912 * C126 - C19914 * C119 + C32053 * C354 - C19915 * C344) *
                C5988 +
            (C19912 * C140 - C19914 * C127 + C32053 * C374 - C19915 * C355) *
                C31864) *
               C32280 +
           ((C20903 - C20904 + C20905 - C20906) * C5988 +
            (C20907 - C20908 + C20909 - C20910) * C31864) *
               C32276 +
           C26726 * C32266 + C26731 * C32248) *
              C31925 * C235 +
          (((C20904 - C20903 + C20906 - C20905) * C5988 +
            (C20908 - C20907 + C20910 - C20909) * C31864) *
               C32280 +
           ((C20912 - C20911 + C20914 - C20913) * C5988 +
            (C20916 - C20915 + C20918 - C20917) * C31864) *
               C32276 +
           ((C20923 - C20924 + C20925 - C20926) * C5988 +
            (C20927 - C20928 + C20929 - C20930) * C31864) *
               C32266 +
           ((C26718 - C26719 + C26720 - C26721) * C5988 +
            (C26722 - C26723 + C26724 - C26725) * C31864) *
               C32248) *
              C31925 * C236 +
          (C26726 * C32280 + C26731 * C32276 +
           ((C26719 - C26718 + C26721 - C26720) * C5988 +
            (C26723 - C26722 + C26725 - C26724) * C31864) *
               C32266 +
           ((C19912 * C6053 - C19914 * C6051 + C32053 * C6413 -
             C19915 * C6412) *
                C5988 +
            (C19912 * C6057 - C19914 * C6054 + C32053 * C6415 -
             C19915 * C6414) *
                C31864) *
               C32248) *
              C31925 * C237) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19912 * C126 - C19914 * C119 + C32053 * C354 - C19915 * C344) *
                C5988 +
            (C19912 * C140 - C19914 * C127 + C32053 * C374 - C19915 * C355) *
                C31864) *
               C32280 +
           ((C20903 - C20904 + C20905 - C20906) * C5988 +
            (C20907 - C20908 + C20909 - C20910) * C31864) *
               C32276 +
           C26726 * C32266 + C26731 * C32248) *
              C341 +
          (((C19914 * C344 - C19912 * C354 + C19915 * C349 - C32053 * C364) *
                C5988 +
            (C19914 * C355 - C19912 * C374 + C19915 * C365 - C32053 * C379) *
                C31864) *
               C32280 +
           ((C21716 - C21717 + C21718 - C21719) * C5988 +
            (C21720 - C21721 + C21722 - C21723) * C31864) *
               C32276 +
           ((C21724 - C21725 + C21726 - C21727) * C5988 +
            (C21728 - C21729 + C21730 - C21731) * C31864) *
               C32266 +
           ((C19914 * C1618 - C19912 * C1621 + C19915 * C6143 -
             C32053 * C6147) *
                C5988 +
            (C19914 * C1622 - C19912 * C1627 + C19915 * C6148 -
             C32053 * C6152) *
                C31864) *
               C32248) *
              C342 +
          (((C19912 * C364 - C19914 * C349 + C32053 * C2026 - C19915 * C2020) *
                C5988 +
            (C19912 * C379 - C19914 * C365 + C32053 * C2038 - C19915 * C2027) *
                C31864) *
               C32280 +
           ((C19912 * C1125 - C19914 * C1113 + C32053 * C2541 -
             C19915 * C2538) *
                C5988 +
            (C19912 * C1140 - C19914 * C1126 + C32053 * C2547 -
             C19915 * C2542) *
                C31864) *
               C32276 +
           ((C19912 * C1131 - C19914 * C1116 + C32053 * C6806 -
             C19915 * C6803) *
                C5988 +
            (C19912 * C1143 - C19914 * C1132 + C32053 * C6812 -
             C19915 * C6807) *
                C31864) *
               C32266 +
           ((C19912 * C6147 - C19914 * C6143 + C32053 * C7274 -
             C19915 * C7273) *
                C5988 +
            (C19912 * C6152 - C19914 * C6148 + C32053 * C7276 -
             C19915 * C7275) *
                C31864) *
               C32248) *
              C343) *
         C31911 * C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C32281 * C126 - C21833 * C119 + C32278 * C354 - C21834 * C344 +
             C32269 * C364 - C21835 * C349 + C32254 * C2026 - C21836 * C2020) *
                C5988 +
            (C32281 * C140 - C21833 * C127 + C32278 * C374 - C21834 * C355 +
             C32269 * C379 - C21835 * C365 + C32254 * C2038 - C21836 * C2027) *
                C31864) *
               C14629 +
           ((C32281 * C249 - C21833 * C239 + C32278 * C681 - C21834 * C676 +
             C32269 * C1125 - C21835 * C1113 + C32254 * C2541 -
             C21836 * C2538) *
                C5988 +
            (C32281 * C269 - C21833 * C250 + C32278 * C691 - C21834 * C682 +
             C32269 * C1140 - C21835 * C1126 + C32254 * C2547 -
             C21836 * C2542) *
                C31864) *
               C32013) *
              C31925 * C31911 * C110 +
          (((C21839 - C21838 + C21841 - C21840 + C21843 - C21842 + C21845 -
             C21844) *
                C5988 +
            (C21847 - C21846 + C21849 - C21848 + C21851 - C21850 + C21853 -
             C21852) *
                C31864) *
               C14629 +
           ((C22196 - C22197 + C22198 - C22199 + C22200 - C22201 + C22202 -
             C22203) *
                C5988 +
            (C22204 - C22205 + C22206 - C22207 + C22208 - C22209 + C22210 -
             C22211) *
                C31864) *
               C32013) *
              C31925 * C31911 * C111 +
          (((C21855 - C21854 + C21857 - C21856 + C21859 - C21858 + C21861 -
             C21860) *
                C5988 +
            (C21863 - C21862 + C21865 - C21864 + C21867 - C21866 + C21869 -
             C21868) *
                C31864) *
               C14629 +
           ((C32281 * C253 - C21833 * C241 + C32278 * C685 - C21834 * C678 +
             C32269 * C1129 - C21835 * C1115 + C32254 * C2545 -
             C21836 * C2540) *
                C5988 +
            (C32281 * C271 - C21833 * C254 + C32278 * C693 - C21834 * C686 +
             C32269 * C1142 - C21835 * C1130 + C32254 * C2549 -
             C21836 * C2546) *
                C31864) *
               C32013) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C32281 * C126 - C21833 * C119 + C32278 * C354 - C21834 * C344 +
             C32269 * C364 - C21835 * C349 + C32254 * C2026 - C21836 * C2020) *
                C5988 +
            (C32281 * C140 - C21833 * C127 + C32278 * C374 - C21834 * C355 +
             C32269 * C379 - C21835 * C365 + C32254 * C2038 - C21836 * C2027) *
                C31864) *
               C14629 +
           ((C27424 - C27425 + C27426 - C27427 + C27428 - C27429 + C27430 -
             C27431) *
                C5988 +
            (C27432 - C27433 + C27434 - C27435 + C27436 - C27437 + C27438 -
             C27439) *
                C31864) *
               C32013) *
              C31925 * C235 +
          (((C27425 - C27424 + C27427 - C27426 + C27429 - C27428 + C27431 -
             C27430) *
                C5988 +
            (C27433 - C27432 + C27435 - C27434 + C27437 - C27436 + C27439 -
             C27438) *
                C31864) *
               C14629 +
           ((C27440 - C27441 + C27442 - C27443 + C27444 - C27445 + C27446 -
             C27447) *
                C5988 +
            (C27448 - C27449 + C27450 - C27451 + C27452 - C27453 + C27454 -
             C27455) *
                C31864) *
               C32013) *
              C31925 * C236 +
          (((C27441 - C27440 + C27443 - C27442 + C27445 - C27444 + C27447 -
             C27446) *
                C5988 +
            (C27449 - C27448 + C27451 - C27450 + C27453 - C27452 + C27455 -
             C27454) *
                C31864) *
               C14629 +
           ((C32281 * C947 - C21833 * C941 + C32278 * C1621 - C21834 * C1618 +
             C32269 * C6147 - C21835 * C6143 + C32254 * C7274 -
             C21836 * C7273) *
                C5988 +
            (C32281 * C959 - C21833 * C948 + C32278 * C1627 - C21834 * C1622 +
             C32269 * C6152 - C21835 * C6148 + C32254 * C7276 -
             C21836 * C7275) *
                C31864) *
               C32013) *
              C31925 * C237) *
         C31899) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C32281 * C126 - C21833 * C119 + C32278 * C354 - C21834 * C344 +
             C32269 * C364 - C21835 * C349 + C32254 * C2026 - C21836 * C2020) *
                C5988 +
            (C32281 * C140 - C21833 * C127 + C32278 * C374 - C21834 * C355 +
             C32269 * C379 - C21835 * C365 + C32254 * C2038 - C21836 * C2027) *
                C31864) *
               C14629 +
           ((C27424 - C27425 + C27426 - C27427 + C27428 - C27429 + C27430 -
             C27431) *
                C5988 +
            (C27432 - C27433 + C27434 - C27435 + C27436 - C27437 + C27438 -
             C27439) *
                C31864) *
               C32013) *
              C341 +
          (((C21833 * C344 - C32281 * C354 + C21834 * C349 - C32278 * C364 +
             C21835 * C2020 - C32269 * C2026 + C21836 * C2023 -
             C32254 * C2032) *
                C5988 +
            (C21833 * C355 - C32281 * C374 + C21834 * C365 - C32278 * C379 +
             C21835 * C2027 - C32269 * C2038 + C21836 * C2033 -
             C32254 * C2041) *
                C31864) *
               C14629 +
           ((C21833 * C676 - C32281 * C681 + C21834 * C1113 - C32278 * C1125 +
             C21835 * C2538 - C32269 * C2541 + C21836 * C6804 -
             C32254 * C6808) *
                C5988 +
            (C21833 * C682 - C32281 * C691 + C21834 * C1126 - C32278 * C1140 +
             C21835 * C2542 - C32269 * C2547 + C21836 * C6809 -
             C32254 * C6813) *
                C31864) *
               C32013) *
              C342 +
          (((C32281 * C364 - C21833 * C349 + C32278 * C2026 - C21834 * C2020 +
             C32269 * C2032 - C21835 * C2023 + C32254 * C11723 -
             C21836 * C11721) *
                C5988 +
            (C32281 * C379 - C21833 * C365 + C32278 * C2038 - C21834 * C2027 +
             C32269 * C2041 - C21835 * C2033 + C32254 * C11727 -
             C21836 * C11724) *
                C31864) *
               C14629 +
           ((C32281 * C1125 - C21833 * C1113 + C32278 * C2541 - C21834 * C2538 +
             C32269 * C6808 - C21835 * C6804 + C32254 * C11984 -
             C21836 * C11983) *
                C5988 +
            (C32281 * C1140 - C21833 * C1126 + C32278 * C2547 - C21834 * C2542 +
             C32269 * C6813 - C21835 * C6809 + C32254 * C11986 -
             C21836 * C11985) *
                C31864) *
               C32013) *
              C343) *
         C31911 * C31899) /
            (p * q * std::sqrt(p + q));
    d2ee[38] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19912 * C126 - C19914 * C119 + C32053 * C354 - C19915 * C344) *
                 C5988 +
             (C19912 * C140 - C19914 * C127 + C32053 * C374 - C19915 * C355) *
                 C31864) *
                C32280 +
            ((C20903 - C20904 + C20905 - C20906) * C5988 +
             (C20907 - C20908 + C20909 - C20910) * C31864) *
                C32276 +
            C26726 * C32266 + C26731 * C32248) *
               C572 +
           (((C19914 * C344 - C19912 * C354 + C19915 * C349 - C32053 * C364) *
                 C5988 +
             (C19914 * C355 - C19912 * C374 + C19915 * C365 - C32053 * C379) *
                 C31864) *
                C32280 +
            ((C21716 - C21717 + C21718 - C21719) * C5988 +
             (C21720 - C21721 + C21722 - C21723) * C31864) *
                C32276 +
            ((C21724 - C21725 + C21726 - C21727) * C5988 +
             (C21728 - C21729 + C21730 - C21731) * C31864) *
                C32266 +
            ((C19914 * C1618 - C19912 * C1621 + C19915 * C6143 -
              C32053 * C6147) *
                 C5988 +
             (C19914 * C1622 - C19912 * C1627 + C19915 * C6148 -
              C32053 * C6152) *
                 C31864) *
                C32248) *
               C573) *
              C31911 * C468 +
          ((((C19918 - C19917 + C19920 - C19919) * C5988 +
             (C19922 - C19921 + C19924 - C19923) * C31864) *
                C32280 +
            (C21308 * C5988 + C21309 * C31864) * C32276 +
            (C21310 * C5988 + C21311 * C31864) * C32266 +
            ((C20931 - C20932 + C20933 - C20934) * C5988 +
             (C20935 - C20936 + C20937 - C20938) * C31864) *
                C32248) *
               C572 +
           (((C20442 - C20441 + C20444 - C20443) * C5988 +
             (C20446 - C20445 + C20448 - C20447) * C31864) *
                C32280 +
            ((C21507 - C21506 + C21509 - C21508) * C5988 +
             (C21511 - C21510 + C21513 - C21512) * C31864) *
                C32276 +
            ((C21515 - C21514 + C21517 - C21516) * C5988 +
             (C21519 - C21518 + C21521 - C21520) * C31864) *
                C32266 +
            ((C19912 * C1623 - C19914 * C1619 + C32053 * C6962 -
              C19915 * C6961) *
                 C5988 +
             (C19912 * C1628 - C19914 * C1624 + C32053 * C6964 -
              C19915 * C6963) *
                 C31864) *
                C32248) *
               C573) *
              C31911 * C469)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19912 * C126 - C19914 * C119 + C32053 * C354 - C19915 * C344) *
                 C5248 +
             (C19912 * C140 - C19914 * C127 + C32053 * C374 - C19915 * C355) *
                 C32270 +
             (C19917 - C19918 + C19919 - C19920) * C5249 +
             (C19921 - C19922 + C19923 - C19924) * C32257 + C19957 * C5250 +
             C19958 * C32227) *
                C14629 +
            ((C20903 - C20904 + C20905 - C20906) * C5248 +
             (C20907 - C20908 + C20909 - C20910) * C32270 + C21306 * C5249 +
             C21307 * C32257 + C22638 * C5250 + C22639 * C32227) *
                C32013) *
               C572 +
           (((C19914 * C344 - C19912 * C354 + C19915 * C349 - C32053 * C364) *
                 C5248 +
             (C19914 * C355 - C19912 * C374 + C19915 * C365 - C32053 * C379) *
                 C32270 +
             (C20441 - C20442 + C20443 - C20444) * C5249 +
             (C20445 - C20446 + C20447 - C20448) * C32257 +
             (C20449 - C20450 + C20451 - C20452) * C5250 +
             (C20453 - C20454 + C20455 - C20456) * C32227) *
                C14629 +
            ((C21716 - C21717 + C21718 - C21719) * C5248 +
             (C21720 - C21721 + C21722 - C21723) * C32270 +
             (C21506 - C21507 + C21508 - C21509) * C5249 +
             (C21510 - C21511 + C21512 - C21513) * C32257 +
             (C23326 - C23327 + C23328 - C23329) * C5250 +
             (C23330 - C23331 + C23332 - C23333) * C32227) *
                C32013) *
               C573) *
              C31911 * C468 +
          ((((C19918 - C19917 + C19920 - C19919) * C5248 +
             (C19922 - C19921 + C19924 - C19923) * C32270 +
             (C19926 - C19925 + C19928 - C19927) * C5249 +
             (C19930 - C19929 + C19932 - C19931) * C32257 +
             (C19934 - C19933 + C19936 - C19935) * C5250 +
             (C19938 - C19937 + C19940 - C19939) * C32227) *
                C14629 +
            (C21308 * C5248 + C21309 * C32270 + C23130 * C5249 +
             C23131 * C32257 + (C20303 - C20304 + C20305 - C20306) * C5250 +
             (C20307 - C20308 + C20309 - C20310) * C32227) *
                C32013) *
               C572 +
           (((C20442 - C20441 + C20444 - C20443) * C5248 +
             (C20446 - C20445 + C20448 - C20447) * C32270 +
             (C20450 - C20449 + C20452 - C20451) * C5249 +
             (C20454 - C20453 + C20456 - C20455) * C32257 +
             (C20458 - C20457 + C20460 - C20459) * C5250 +
             (C20462 - C20461 + C20464 - C20463) * C32227) *
                C14629 +
            ((C21507 - C21506 + C21509 - C21508) * C5248 +
             (C21511 - C21510 + C21513 - C21512) * C32270 +
             (C23327 - C23326 + C23329 - C23328) * C5249 +
             (C23331 - C23330 + C23333 - C23332) * C32257 +
             (C19912 * C687 - C19914 * C679 + C32053 * C2191 - C19915 * C2190) *
                 C5250 +
             (C19912 * C694 - C19914 * C688 + C32053 * C2193 - C19915 * C2192) *
                 C32227) *
                C32013) *
               C573) *
              C31911 * C469)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C32281 * C126 - C21833 * C119 + C32278 * C354 - C21834 * C344 +
              C32269 * C364 - C21835 * C349 + C32254 * C2026 - C21836 * C2020) *
                 C5988 +
             (C32281 * C140 - C21833 * C127 + C32278 * C374 - C21834 * C355 +
              C32269 * C379 - C21835 * C365 + C32254 * C2038 - C21836 * C2027) *
                 C31864) *
                C14629 +
            ((C27424 - C27425 + C27426 - C27427 + C27428 - C27429 + C27430 -
              C27431) *
                 C5988 +
             (C27432 - C27433 + C27434 - C27435 + C27436 - C27437 + C27438 -
              C27439) *
                 C31864) *
                C32013) *
               C572 +
           (((C21833 * C344 - C32281 * C354 + C21834 * C349 - C32278 * C364 +
              C21835 * C2020 - C32269 * C2026 + C21836 * C2023 -
              C32254 * C2032) *
                 C5988 +
             (C21833 * C355 - C32281 * C374 + C21834 * C365 - C32278 * C379 +
              C21835 * C2027 - C32269 * C2038 + C21836 * C2033 -
              C32254 * C2041) *
                 C31864) *
                C14629 +
            ((C21833 * C676 - C32281 * C681 + C21834 * C1113 - C32278 * C1125 +
              C21835 * C2538 - C32269 * C2541 + C21836 * C6804 -
              C32254 * C6808) *
                 C5988 +
             (C21833 * C682 - C32281 * C691 + C21834 * C1126 - C32278 * C1140 +
              C21835 * C2542 - C32269 * C2547 + C21836 * C6809 -
              C32254 * C6813) *
                 C31864) *
                C32013) *
               C573) *
              C31911 * C468 +
          ((((C21839 - C21838 + C21841 - C21840 + C21843 - C21842 + C21845 -
              C21844) *
                 C5988 +
             (C21847 - C21846 + C21849 - C21848 + C21851 - C21850 + C21853 -
              C21852) *
                 C31864) *
                C14629 +
            ((C22196 - C22197 + C22198 - C22199 + C22200 - C22201 + C22202 -
              C22203) *
                 C5988 +
             (C22204 - C22205 + C22206 - C22207 + C22208 - C22209 + C22210 -
              C22211) *
                 C31864) *
                C32013) *
               C572 +
           (((C22343 - C22342 + C22345 - C22344 + C22347 - C22346 + C22349 -
              C22348) *
                 C5988 +
             (C22351 - C22350 + C22353 - C22352 + C22355 - C22354 + C22357 -
              C22356) *
                 C31864) *
                C14629 +
            ((C32281 * C683 - C21833 * C677 + C32278 * C1127 - C21834 * C1114 +
              C32269 * C2543 - C21835 * C2539 + C32254 * C11812 -
              C21836 * C11811) *
                 C5988 +
             (C32281 * C692 - C21833 * C684 + C32278 * C1141 - C21834 * C1128 +
              C32269 * C2548 - C21835 * C2544 + C32254 * C11814 -
              C21836 * C11813) *
                 C31864) *
                C32013) *
               C573) *
              C31911 * C469)) /
            (p * q * std::sqrt(p + q));
    d2ee[39] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C19912 * C126 - C19914 * C119 + C32053 * C354 - C19915 * C344) *
                C5248 +
            (C19912 * C140 - C19914 * C127 + C32053 * C374 - C19915 * C355) *
                C32270 +
            (C19917 - C19918 + C19919 - C19920) * C5249 +
            (C19921 - C19922 + C19923 - C19924) * C32257 + C19957 * C5250 +
            C19958 * C32227) *
               C14629 +
           ((C20903 - C20904 + C20905 - C20906) * C5248 +
            (C20907 - C20908 + C20909 - C20910) * C32270 + C21306 * C5249 +
            C21307 * C32257 + C22638 * C5250 + C22639 * C32227) *
               C32013) *
              C31925 * C235 +
          (((C20904 - C20903 + C20906 - C20905) * C5248 +
            (C20908 - C20907 + C20910 - C20909) * C32270 + C21308 * C5249 +
            C21309 * C32257 + C23130 * C5250 + C23131 * C32227) *
               C14629 +
           ((C20912 - C20911 + C20914 - C20913) * C5248 +
            (C20916 - C20915 + C20918 - C20917) * C32270 + C21310 * C5249 +
            C21311 * C32257 + (C20749 - C20750 + C20751 - C20752) * C5250 +
            (C20753 - C20754 + C20755 - C20756) * C32227) *
               C32013) *
              C31925 * C236 +
          ((C20945 * C5248 + C20946 * C32270 + C20943 * C5249 +
            C20944 * C32257 + (C20750 - C20749 + C20752 - C20751) * C5250 +
            (C20754 - C20753 + C20756 - C20755) * C32227) *
               C14629 +
           ((C20924 - C20923 + C20926 - C20925) * C5248 +
            (C20928 - C20927 + C20930 - C20929) * C32270 +
            (C20932 - C20931 + C20934 - C20933) * C5249 +
            (C20936 - C20935 + C20938 - C20937) * C32257 +
            (C19912 * C951 - C19914 * C943 + C32053 * C1625 - C19915 * C1620) *
                C5250 +
            (C19912 * C961 - C19914 * C952 + C32053 * C1629 - C19915 * C1626) *
                C32227) *
               C32013) *
              C31925 * C237) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C19912 * C126 - C19914 * C119 + C32053 * C354 - C19915 * C344) *
                C5248 +
            (C19912 * C140 - C19914 * C127 + C32053 * C374 - C19915 * C355) *
                C32270 +
            (C19917 - C19918 + C19919 - C19920) * C5249 +
            (C19921 - C19922 + C19923 - C19924) * C32257 + C19957 * C5250 +
            C19958 * C32227) *
               C14629 +
           ((C20903 - C20904 + C20905 - C20906) * C5248 +
            (C20907 - C20908 + C20909 - C20910) * C32270 + C21306 * C5249 +
            C21307 * C32257 + C22638 * C5250 + C22639 * C32227) *
               C32013) *
              C31925 * C31911 * C110 +
          (((C19918 - C19917 + C19920 - C19919) * C5248 +
            (C19922 - C19921 + C19924 - C19923) * C32270 +
            (C19926 - C19925 + C19928 - C19927) * C5249 +
            (C19930 - C19929 + C19932 - C19931) * C32257 +
            (C19934 - C19933 + C19936 - C19935) * C5250 +
            (C19938 - C19937 + C19940 - C19939) * C32227) *
               C14629 +
           (C21308 * C5248 + C21309 * C32270 + C23130 * C5249 +
            C23131 * C32257 + (C20303 - C20304 + C20305 - C20306) * C5250 +
            (C20307 - C20308 + C20309 - C20310) * C32227) *
               C32013) *
              C31925 * C31911 * C111 +
          ((C19957 * C5248 + C19958 * C32270 + C19959 * C5249 +
            C19960 * C32257 + (C19942 - C19941 + C19944 - C19943) * C5250 +
            (C19946 - C19945 + C19948 - C19947) * C32227) *
               C14629 +
           (C22638 * C5248 + C22639 * C32270 +
            (C20304 - C20303 + C20306 - C20305) * C5249 +
            (C20308 - C20307 + C20310 - C20309) * C32257 +
            (C19912 * C257 - C19914 * C243 + C32053 * C689 - C19915 * C680) *
                C5250 +
            (C19912 * C273 - C19914 * C258 + C32053 * C695 - C19915 * C690) *
                C32227) *
               C32013) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C19912 * C126 - C19914 * C119 + C32053 * C354 - C19915 * C344) *
                C5988 +
            (C19912 * C140 - C19914 * C127 + C32053 * C374 - C19915 * C355) *
                C31864) *
               C32280 +
           ((C20903 - C20904 + C20905 - C20906) * C5988 +
            (C20907 - C20908 + C20909 - C20910) * C31864) *
               C32276 +
           (C20945 * C5988 + C20946 * C31864) * C32266 +
           ((C20924 - C20923 + C20926 - C20925) * C5988 +
            (C20928 - C20927 + C20930 - C20929) * C31864) *
               C32248) *
              C31925 * C31911 * C110 +
          (((C19918 - C19917 + C19920 - C19919) * C5988 +
            (C19922 - C19921 + C19924 - C19923) * C31864) *
               C32280 +
           (C21308 * C5988 + C21309 * C31864) * C32276 +
           (C21310 * C5988 + C21311 * C31864) * C32266 +
           ((C20931 - C20932 + C20933 - C20934) * C5988 +
            (C20935 - C20936 + C20937 - C20938) * C31864) *
               C32248) *
              C31925 * C31911 * C111 +
          ((C19957 * C5988 + C19958 * C31864) * C32280 +
           (C22638 * C5988 + C22639 * C31864) * C32276 +
           ((C20750 - C20749 + C20752 - C20751) * C5988 +
            (C20754 - C20753 + C20756 - C20755) * C31864) *
               C32266 +
           ((C19912 * C951 - C19914 * C943 + C32053 * C1625 - C19915 * C1620) *
                C5988 +
            (C19912 * C961 - C19914 * C952 + C32053 * C1629 - C19915 * C1626) *
                C31864) *
               C32248) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C19912 * C126 - C19914 * C119 + C32053 * C354 - C19915 * C344) *
                C5988 +
            (C19912 * C140 - C19914 * C127 + C32053 * C374 - C19915 * C355) *
                C31864) *
               C32280 +
           ((C20903 - C20904 + C20905 - C20906) * C5988 +
            (C20907 - C20908 + C20909 - C20910) * C31864) *
               C32276 +
           C26726 * C32266 + C26731 * C32248) *
              C31925 * C235 +
          (((C20904 - C20903 + C20906 - C20905) * C5988 +
            (C20908 - C20907 + C20910 - C20909) * C31864) *
               C32280 +
           ((C20912 - C20911 + C20914 - C20913) * C5988 +
            (C20916 - C20915 + C20918 - C20917) * C31864) *
               C32276 +
           ((C20923 - C20924 + C20925 - C20926) * C5988 +
            (C20927 - C20928 + C20929 - C20930) * C31864) *
               C32266 +
           ((C26718 - C26719 + C26720 - C26721) * C5988 +
            (C26722 - C26723 + C26724 - C26725) * C31864) *
               C32248) *
              C31925 * C236 +
          (C26726 * C32280 + C26731 * C32276 +
           ((C26719 - C26718 + C26721 - C26720) * C5988 +
            (C26723 - C26722 + C26725 - C26724) * C31864) *
               C32266 +
           ((C19912 * C6053 - C19914 * C6051 + C32053 * C6413 -
             C19915 * C6412) *
                C5988 +
            (C19912 * C6057 - C19914 * C6054 + C32053 * C6415 -
             C19915 * C6414) *
                C31864) *
               C32248) *
              C31925 * C237) *
         C31899) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C32281 * C126 - C21833 * C119 + C32278 * C354 - C21834 * C344 +
             C32269 * C364 - C21835 * C349 + C32254 * C2026 - C21836 * C2020) *
                C5988 +
            (C32281 * C140 - C21833 * C127 + C32278 * C374 - C21834 * C355 +
             C32269 * C379 - C21835 * C365 + C32254 * C2038 - C21836 * C2027) *
                C31864) *
               C14629 +
           ((C32281 * C249 - C21833 * C239 + C32278 * C681 - C21834 * C676 +
             C32269 * C1125 - C21835 * C1113 + C32254 * C2541 -
             C21836 * C2538) *
                C5988 +
            (C32281 * C269 - C21833 * C250 + C32278 * C691 - C21834 * C682 +
             C32269 * C1140 - C21835 * C1126 + C32254 * C2547 -
             C21836 * C2542) *
                C31864) *
               C32013) *
              C31925 * C31911 * C110 +
          (((C21839 - C21838 + C21841 - C21840 + C21843 - C21842 + C21845 -
             C21844) *
                C5988 +
            (C21847 - C21846 + C21849 - C21848 + C21851 - C21850 + C21853 -
             C21852) *
                C31864) *
               C14629 +
           ((C22196 - C22197 + C22198 - C22199 + C22200 - C22201 + C22202 -
             C22203) *
                C5988 +
            (C22204 - C22205 + C22206 - C22207 + C22208 - C22209 + C22210 -
             C22211) *
                C31864) *
               C32013) *
              C31925 * C31911 * C111 +
          (((C21855 - C21854 + C21857 - C21856 + C21859 - C21858 + C21861 -
             C21860) *
                C5988 +
            (C21863 - C21862 + C21865 - C21864 + C21867 - C21866 + C21869 -
             C21868) *
                C31864) *
               C14629 +
           ((C32281 * C253 - C21833 * C241 + C32278 * C685 - C21834 * C678 +
             C32269 * C1129 - C21835 * C1115 + C32254 * C2545 -
             C21836 * C2540) *
                C5988 +
            (C32281 * C271 - C21833 * C254 + C32278 * C693 - C21834 * C686 +
             C32269 * C1142 - C21835 * C1130 + C32254 * C2549 -
             C21836 * C2546) *
                C31864) *
               C32013) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C32281 * C126 - C21833 * C119 + C32278 * C354 - C21834 * C344 +
             C32269 * C364 - C21835 * C349 + C32254 * C2026 - C21836 * C2020) *
                C5988 +
            (C32281 * C140 - C21833 * C127 + C32278 * C374 - C21834 * C355 +
             C32269 * C379 - C21835 * C365 + C32254 * C2038 - C21836 * C2027) *
                C31864) *
               C14629 +
           ((C27424 - C27425 + C27426 - C27427 + C27428 - C27429 + C27430 -
             C27431) *
                C5988 +
            (C27432 - C27433 + C27434 - C27435 + C27436 - C27437 + C27438 -
             C27439) *
                C31864) *
               C32013) *
              C31925 * C235 +
          (((C27425 - C27424 + C27427 - C27426 + C27429 - C27428 + C27431 -
             C27430) *
                C5988 +
            (C27433 - C27432 + C27435 - C27434 + C27437 - C27436 + C27439 -
             C27438) *
                C31864) *
               C14629 +
           ((C27440 - C27441 + C27442 - C27443 + C27444 - C27445 + C27446 -
             C27447) *
                C5988 +
            (C27448 - C27449 + C27450 - C27451 + C27452 - C27453 + C27454 -
             C27455) *
                C31864) *
               C32013) *
              C31925 * C236 +
          (((C27441 - C27440 + C27443 - C27442 + C27445 - C27444 + C27447 -
             C27446) *
                C5988 +
            (C27449 - C27448 + C27451 - C27450 + C27453 - C27452 + C27455 -
             C27454) *
                C31864) *
               C14629 +
           ((C32281 * C947 - C21833 * C941 + C32278 * C1621 - C21834 * C1618 +
             C32269 * C6147 - C21835 * C6143 + C32254 * C7274 -
             C21836 * C7273) *
                C5988 +
            (C32281 * C959 - C21833 * C948 + C32278 * C1627 - C21834 * C1622 +
             C32269 * C6152 - C21835 * C6148 + C32254 * C7276 -
             C21836 * C7275) *
                C31864) *
               C32013) *
              C31925 * C237) *
         C31899) /
            (p * q * std::sqrt(p + q));
    d2ee[40] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C32049 * C126 - C31010 * C119 + C32056 * C354 - C31002 * C344 +
              C23639 * C364 - C31016 * C349) *
                 C30875 +
             (C32049 * C140 - C31010 * C127 + C32056 * C374 - C31002 * C355 +
              C23639 * C379 - C31016 * C365) *
                 C32188 +
             (C23644 - C23645 + C23646 - C23647 + C23648 - C23649) * C30856 +
             (C23650 - C23651 + C23652 - C23653 + C23654 - C23655) * C31874) *
                C14629 +
            ((C24688 - C24689 + C24690 - C24691 + C24692 - C24693) * C30875 +
             (C24694 - C24695 + C24696 - C24697 + C24698 - C24699) * C32188 +
             C25080 * C30856 + C25081 * C31874) *
                C32013) *
               C31925 * C466 +
           (((C24689 - C24688 + C24691 - C24690 + C24693 - C24692) * C30875 +
             (C24695 - C24694 + C24697 - C24696 + C24699 - C24698) * C32188 +
             C25082 * C30856 + C25083 * C31874) *
                C14629 +
            ((C24700 - C24701 + C24702 - C24703 + C24704 - C24705) * C30875 +
             (C24706 - C24707 + C24708 - C24709 + C24710 - C24711) * C32188 +
             (C24712 - C24713 + C24714 - C24715 + C24716 - C24717) * C30856 +
             (C24718 - C24719 + C24720 - C24721 + C24722 - C24723) * C31874) *
                C32013) *
               C31925 * C467) *
              C468 +
          ((((C23645 - C23644 + C23647 - C23646 + C23649 - C23648) * C30875 +
             (C23651 - C23650 + C23653 - C23652 + C23655 - C23654) * C32188 +
             (C23657 - C23656 + C23659 - C23658 + C23661 - C23660) * C30856 +
             (C23663 - C23662 + C23665 - C23664 + C23667 - C23666) * C31874) *
                C14629 +
            (C25082 * C30875 + C25083 * C32188 +
             (C24068 - C24069 + C24070 - C24071 + C24072 - C24073) * C30856 +
             (C24074 - C24075 + C24076 - C24077 + C24078 - C24079) * C31874) *
                C32013) *
               C31925 * C466 +
           ((C25080 * C30875 + C25081 * C32188 +
             (C24069 - C24068 + C24071 - C24070 + C24073 - C24072) * C30856 +
             (C24075 - C24074 + C24077 - C24076 + C24079 - C24078) * C31874) *
                C14629 +
            ((C24713 - C24712 + C24715 - C24714 + C24717 - C24716) * C30875 +
             (C24719 - C24718 + C24721 - C24720 + C24723 - C24722) * C32188 +
             (C32049 * C263 - C31010 * C246 + C32056 * C1123 - C31002 * C1112 +
              C23639 * C1135 - C31016 * C1118) *
                 C30856 +
             (C32049 * C276 - C31010 * C264 + C32056 * C1139 - C31002 * C1124 +
              C23639 * C1145 - C31016 * C1136) *
                 C31874) *
                C32013) *
               C31925 * C467) *
              C469)) /
        (p * q * std::sqrt(p + q));
    d2ee[41] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C32049 * C126 - C31010 * C119 + C32056 * C354 - C31002 * C344 +
              C23639 * C364 - C31016 * C349) *
                 C30875 +
             (C32049 * C140 - C31010 * C127 + C32056 * C374 - C31002 * C355 +
              C23639 * C379 - C31016 * C365) *
                 C32188 +
             (C23644 - C23645 + C23646 - C23647 + C23648 - C23649) * C30856 +
             (C23650 - C23651 + C23652 - C23653 + C23654 - C23655) * C31874) *
                C14629 +
            ((C24688 - C24689 + C24690 - C24691 + C24692 - C24693) * C30875 +
             (C24694 - C24695 + C24696 - C24697 + C24698 - C24699) * C32188 +
             C25080 * C30856 + C25081 * C31874) *
                C32013) *
               C572 +
           (((C31010 * C344 - C32049 * C354 + C31002 * C349 - C32056 * C364 +
              C31016 * C2020 - C23639 * C2026) *
                 C30875 +
             (C31010 * C355 - C32049 * C374 + C31002 * C365 - C32056 * C379 +
              C31016 * C2027 - C23639 * C2038) *
                 C32188 +
             (C24226 - C24227 + C24228 - C24229 + C24230 - C24231) * C30856 +
             (C24232 - C24233 + C24234 - C24235 + C24236 - C24237) * C31874) *
                C14629 +
            ((C25484 - C25485 + C25486 - C25487 + C25488 - C25489) * C30875 +
             (C25490 - C25491 + C25492 - C25493 + C25494 - C25495) * C32188 +
             (C25278 - C25279 + C25280 - C25281 + C25282 - C25283) * C30856 +
             (C25284 - C25285 + C25286 - C25287 + C25288 - C25289) * C31874) *
                C32013) *
               C573) *
              C466 +
          ((((C24689 - C24688 + C24691 - C24690 + C24693 - C24692) * C30875 +
             (C24695 - C24694 + C24697 - C24696 + C24699 - C24698) * C32188 +
             C25082 * C30856 + C25083 * C31874) *
                C14629 +
            ((C24700 - C24701 + C24702 - C24703 + C24704 - C24705) * C30875 +
             (C24706 - C24707 + C24708 - C24709 + C24710 - C24711) * C32188 +
             (C24712 - C24713 + C24714 - C24715 + C24716 - C24717) * C30856 +
             (C24718 - C24719 + C24720 - C24721 + C24722 - C24723) * C31874) *
                C32013) *
               C572 +
           (((C25485 - C25484 + C25487 - C25486 + C25489 - C25488) * C30875 +
             (C25491 - C25490 + C25493 - C25492 + C25495 - C25494) * C32188 +
             (C25279 - C25278 + C25281 - C25280 + C25283 - C25282) * C30856 +
             (C25285 - C25284 + C25287 - C25286 + C25289 - C25288) * C31874) *
                C14629 +
            ((C32049 * C1119 - C31010 * C1110 + C32056 * C1131 -
              C31002 * C1116 + C23639 * C6806 - C31016 * C6803) *
                 C30875 +
             (C32049 * C1137 - C31010 * C1120 + C32056 * C1143 -
              C31002 * C1132 + C23639 * C6812 - C31016 * C6807) *
                 C32188 +
             (C32049 * C1121 - C31010 * C1111 + C32056 * C1133 -
              C31002 * C1117 + C23639 * C7124 - C31016 * C7123) *
                 C30856 +
             (C32049 * C1138 - C31010 * C1122 + C32056 * C1144 -
              C31002 * C1134 + C23639 * C7126 - C31016 * C7125) *
                 C31874) *
                C32013) *
               C573) *
              C467) *
         C31899) /
        (p * q * std::sqrt(p + q));
    d2ee[42] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C32049 * C126 - C31010 * C119 + C32056 * C354 - C31002 * C344 +
             C23639 * C364 - C31016 * C349) *
                C30875 +
            (C32049 * C140 - C31010 * C127 + C32056 * C374 - C31002 * C355 +
             C23639 * C379 - C31016 * C365) *
                C32188 +
            (C23644 - C23645 + C23646 - C23647 + C23648 - C23649) * C30856 +
            (C23650 - C23651 + C23652 - C23653 + C23654 - C23655) * C31874) *
               C14629 +
           ((C24688 - C24689 + C24690 - C24691 + C24692 - C24693) * C30875 +
            (C24694 - C24695 + C24696 - C24697 + C24698 - C24699) * C32188 +
            C25080 * C30856 + C25081 * C31874) *
               C32013) *
              C31925 * C235 +
          (((C24689 - C24688 + C24691 - C24690 + C24693 - C24692) * C30875 +
            (C24695 - C24694 + C24697 - C24696 + C24699 - C24698) * C32188 +
            C25082 * C30856 + C25083 * C31874) *
               C14629 +
           ((C24700 - C24701 + C24702 - C24703 + C24704 - C24705) * C30875 +
            (C24706 - C24707 + C24708 - C24709 + C24710 - C24711) * C32188 +
            (C24712 - C24713 + C24714 - C24715 + C24716 - C24717) * C30856 +
            (C24718 - C24719 + C24720 - C24721 + C24722 - C24723) * C31874) *
               C32013) *
              C31925 * C236 +
          (((C24701 - C24700 + C24703 - C24702 + C24705 - C24704) * C30875 +
            (C24707 - C24706 + C24709 - C24708 + C24711 - C24710) * C32188 +
            (C24713 - C24712 + C24715 - C24714 + C24717 - C24716) * C30856 +
            (C24719 - C24718 + C24721 - C24720 + C24723 - C24722) * C31874) *
               C14629 +
           ((C32049 * C947 - C31010 * C941 + C32056 * C1621 - C31002 * C1618 +
             C23639 * C6147 - C31016 * C6143) *
                C30875 +
            (C32049 * C959 - C31010 * C948 + C32056 * C1627 - C31002 * C1622 +
             C23639 * C6152 - C31016 * C6148) *
                C32188 +
            (C32049 * C949 - C31010 * C942 + C32056 * C1623 - C31002 * C1619 +
             C23639 * C6962 - C31016 * C6961) *
                C30856 +
            (C32049 * C960 - C31010 * C950 + C32056 * C1628 - C31002 * C1624 +
             C23639 * C6964 - C31016 * C6963) *
                C31874) *
               C32013) *
              C31925 * C237) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C32049 * C126 - C31010 * C119 + C32056 * C354 - C31002 * C344 +
             C23639 * C364 - C31016 * C349) *
                C30875 +
            (C32049 * C140 - C31010 * C127 + C32056 * C374 - C31002 * C355 +
             C23639 * C379 - C31016 * C365) *
                C32188 +
            (C23644 - C23645 + C23646 - C23647 + C23648 - C23649) * C30856 +
            (C23650 - C23651 + C23652 - C23653 + C23654 - C23655) * C31874) *
               C14629 +
           ((C24688 - C24689 + C24690 - C24691 + C24692 - C24693) * C30875 +
            (C24694 - C24695 + C24696 - C24697 + C24698 - C24699) * C32188 +
            C25080 * C30856 + C25081 * C31874) *
               C32013) *
              C31925 * C31911 * C110 +
          (((C23645 - C23644 + C23647 - C23646 + C23649 - C23648) * C30875 +
            (C23651 - C23650 + C23653 - C23652 + C23655 - C23654) * C32188 +
            (C23657 - C23656 + C23659 - C23658 + C23661 - C23660) * C30856 +
            (C23663 - C23662 + C23665 - C23664 + C23667 - C23666) * C31874) *
               C14629 +
           (C25082 * C30875 + C25083 * C32188 +
            (C24068 - C24069 + C24070 - C24071 + C24072 - C24073) * C30856 +
            (C24074 - C24075 + C24076 - C24077 + C24078 - C24079) * C31874) *
               C32013) *
              C31925 * C31911 * C111 +
          ((C23688 * C30875 + C23689 * C32188 +
            (C23669 - C23668 + C23671 - C23670 + C23673 - C23672) * C30856 +
            (C23675 - C23674 + C23677 - C23676 + C23679 - C23678) * C31874) *
               C14629 +
           ((C24069 - C24068 + C24071 - C24070 + C24073 - C24072) * C30875 +
            (C24075 - C24074 + C24077 - C24076 + C24079 - C24078) * C32188 +
            (C32049 * C255 - C31010 * C242 + C32056 * C687 - C31002 * C679 +
             C23639 * C2191 - C31016 * C2190) *
                C30856 +
            (C32049 * C272 - C31010 * C256 + C32056 * C694 - C31002 * C688 +
             C23639 * C2193 - C31016 * C2192) *
                C31874) *
               C32013) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C32049 * C126 - C31010 * C119 + C32056 * C354 - C31002 * C344 +
             C23639 * C364 - C31016 * C349) *
                C30875 +
            (C32049 * C140 - C31010 * C127 + C32056 * C374 - C31002 * C355 +
             C23639 * C379 - C31016 * C365) *
                C32188 +
            (C23644 - C23645 + C23646 - C23647 + C23648 - C23649) * C30856 +
            (C23650 - C23651 + C23652 - C23653 + C23654 - C23655) * C31874) *
               C14629 +
           ((C24688 - C24689 + C24690 - C24691 + C24692 - C24693) * C30875 +
            (C24694 - C24695 + C24696 - C24697 + C24698 - C24699) * C32188 +
            C25080 * C30856 + C25081 * C31874) *
               C32013) *
              C341 +
          (((C31010 * C344 - C32049 * C354 + C31002 * C349 - C32056 * C364 +
             C31016 * C2020 - C23639 * C2026) *
                C30875 +
            (C31010 * C355 - C32049 * C374 + C31002 * C365 - C32056 * C379 +
             C31016 * C2027 - C23639 * C2038) *
                C32188 +
            (C24226 - C24227 + C24228 - C24229 + C24230 - C24231) * C30856 +
            (C24232 - C24233 + C24234 - C24235 + C24236 - C24237) * C31874) *
               C14629 +
           ((C25484 - C25485 + C25486 - C25487 + C25488 - C25489) * C30875 +
            (C25490 - C25491 + C25492 - C25493 + C25494 - C25495) * C32188 +
            (C25278 - C25279 + C25280 - C25281 + C25282 - C25283) * C30856 +
            (C25284 - C25285 + C25286 - C25287 + C25288 - C25289) * C31874) *
               C32013) *
              C342 +
          (((C32049 * C364 - C31010 * C349 + C32056 * C2026 - C31002 * C2020 +
             C23639 * C2032 - C31016 * C2023) *
                C30875 +
            (C32049 * C379 - C31010 * C365 + C32056 * C2038 - C31002 * C2027 +
             C23639 * C2041 - C31016 * C2033) *
                C32188 +
            (C32049 * C366 - C31010 * C350 + C32056 * C2028 - C31002 * C2021 +
             C23639 * C2034 - C31016 * C2024) *
                C30856 +
            (C32049 * C380 - C31010 * C367 + C32056 * C2039 - C31002 * C2029 +
             C23639 * C2042 - C31016 * C2035) *
                C31874) *
               C14629 +
           ((C32049 * C1125 - C31010 * C1113 + C32056 * C2541 - C31002 * C2538 +
             C23639 * C6808 - C31016 * C6804) *
                C30875 +
            (C32049 * C1140 - C31010 * C1126 + C32056 * C2547 - C31002 * C2542 +
             C23639 * C6813 - C31016 * C6809) *
                C32188 +
            (C32049 * C1127 - C31010 * C1114 + C32056 * C2543 - C31002 * C2539 +
             C23639 * C11812 - C31016 * C11811) *
                C30856 +
            (C32049 * C1141 - C31010 * C1128 + C32056 * C2548 - C31002 * C2544 +
             C23639 * C11814 - C31016 * C11813) *
                C31874) *
               C32013) *
              C343) *
         C31911 * C31899) /
            (p * q * std::sqrt(p + q));
    d2ee[43] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C32049 * C126 - C31010 * C119 + C32056 * C354 - C31002 * C344 +
              C23639 * C364 - C31016 * C349) *
                 C30875 +
             (C32049 * C140 - C31010 * C127 + C32056 * C374 - C31002 * C355 +
              C23639 * C379 - C31016 * C365) *
                 C32188 +
             (C23644 - C23645 + C23646 - C23647 + C23648 - C23649) * C30856 +
             (C23650 - C23651 + C23652 - C23653 + C23654 - C23655) * C31874) *
                C14629 +
            ((C24688 - C24689 + C24690 - C24691 + C24692 - C24693) * C30875 +
             (C24694 - C24695 + C24696 - C24697 + C24698 - C24699) * C32188 +
             C25080 * C30856 + C25081 * C31874) *
                C32013) *
               C572 +
           (((C31010 * C344 - C32049 * C354 + C31002 * C349 - C32056 * C364 +
              C31016 * C2020 - C23639 * C2026) *
                 C30875 +
             (C31010 * C355 - C32049 * C374 + C31002 * C365 - C32056 * C379 +
              C31016 * C2027 - C23639 * C2038) *
                 C32188 +
             (C24226 - C24227 + C24228 - C24229 + C24230 - C24231) * C30856 +
             (C24232 - C24233 + C24234 - C24235 + C24236 - C24237) * C31874) *
                C14629 +
            ((C25484 - C25485 + C25486 - C25487 + C25488 - C25489) * C30875 +
             (C25490 - C25491 + C25492 - C25493 + C25494 - C25495) * C32188 +
             (C25278 - C25279 + C25280 - C25281 + C25282 - C25283) * C30856 +
             (C25284 - C25285 + C25286 - C25287 + C25288 - C25289) * C31874) *
                C32013) *
               C573) *
              C31911 * C468 +
          ((((C23645 - C23644 + C23647 - C23646 + C23649 - C23648) * C30875 +
             (C23651 - C23650 + C23653 - C23652 + C23655 - C23654) * C32188 +
             (C23657 - C23656 + C23659 - C23658 + C23661 - C23660) * C30856 +
             (C23663 - C23662 + C23665 - C23664 + C23667 - C23666) * C31874) *
                C14629 +
            (C25082 * C30875 + C25083 * C32188 +
             (C24068 - C24069 + C24070 - C24071 + C24072 - C24073) * C30856 +
             (C24074 - C24075 + C24076 - C24077 + C24078 - C24079) * C31874) *
                C32013) *
               C572 +
           (((C24227 - C24226 + C24229 - C24228 + C24231 - C24230) * C30875 +
             (C24233 - C24232 + C24235 - C24234 + C24237 - C24236) * C32188 +
             (C24239 - C24238 + C24241 - C24240 + C24243 - C24242) * C30856 +
             (C24245 - C24244 + C24247 - C24246 + C24249 - C24248) * C31874) *
                C14629 +
            ((C25279 - C25278 + C25281 - C25280 + C25283 - C25282) * C30875 +
             (C25285 - C25284 + C25287 - C25286 + C25289 - C25288) * C32188 +
             (C32049 * C685 - C31010 * C678 + C32056 * C1129 - C31002 * C1115 +
              C23639 * C2545 - C31016 * C2540) *
                 C30856 +
             (C32049 * C693 - C31010 * C686 + C32056 * C1142 - C31002 * C1130 +
              C23639 * C2549 - C31016 * C2546) *
                 C31874) *
                C32013) *
               C573) *
              C31911 * C469)) /
        (p * q * std::sqrt(p + q));
    d2ee[44] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C32049 * C126 - C31010 * C119 + C32056 * C354 - C31002 * C344 +
             C23639 * C364 - C31016 * C349) *
                C30875 +
            (C32049 * C140 - C31010 * C127 + C32056 * C374 - C31002 * C355 +
             C23639 * C379 - C31016 * C365) *
                C32188 +
            (C23644 - C23645 + C23646 - C23647 + C23648 - C23649) * C30856 +
            (C23650 - C23651 + C23652 - C23653 + C23654 - C23655) * C31874) *
               C14629 +
           ((C24688 - C24689 + C24690 - C24691 + C24692 - C24693) * C30875 +
            (C24694 - C24695 + C24696 - C24697 + C24698 - C24699) * C32188 +
            C25080 * C30856 + C25081 * C31874) *
               C32013) *
              C31925 * C31911 * C110 +
          (((C23645 - C23644 + C23647 - C23646 + C23649 - C23648) * C30875 +
            (C23651 - C23650 + C23653 - C23652 + C23655 - C23654) * C32188 +
            (C23657 - C23656 + C23659 - C23658 + C23661 - C23660) * C30856 +
            (C23663 - C23662 + C23665 - C23664 + C23667 - C23666) * C31874) *
               C14629 +
           (C25082 * C30875 + C25083 * C32188 +
            (C24068 - C24069 + C24070 - C24071 + C24072 - C24073) * C30856 +
            (C24074 - C24075 + C24076 - C24077 + C24078 - C24079) * C31874) *
               C32013) *
              C31925 * C31911 * C111 +
          ((C23688 * C30875 + C23689 * C32188 +
            (C23669 - C23668 + C23671 - C23670 + C23673 - C23672) * C30856 +
            (C23675 - C23674 + C23677 - C23676 + C23679 - C23678) * C31874) *
               C14629 +
           ((C24069 - C24068 + C24071 - C24070 + C24073 - C24072) * C30875 +
            (C24075 - C24074 + C24077 - C24076 + C24079 - C24078) * C32188 +
            (C32049 * C255 - C31010 * C242 + C32056 * C687 - C31002 * C679 +
             C23639 * C2191 - C31016 * C2190) *
                C30856 +
            (C32049 * C272 - C31010 * C256 + C32056 * C694 - C31002 * C688 +
             C23639 * C2193 - C31016 * C2192) *
                C31874) *
               C32013) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C32049 * C126 - C31010 * C119 + C32056 * C354 - C31002 * C344 +
             C23639 * C364 - C31016 * C349) *
                C30875 +
            (C32049 * C140 - C31010 * C127 + C32056 * C374 - C31002 * C355 +
             C23639 * C379 - C31016 * C365) *
                C32188 +
            (C23644 - C23645 + C23646 - C23647 + C23648 - C23649) * C30856 +
            (C23650 - C23651 + C23652 - C23653 + C23654 - C23655) * C31874) *
               C14629 +
           ((C24688 - C24689 + C24690 - C24691 + C24692 - C24693) * C30875 +
            (C24694 - C24695 + C24696 - C24697 + C24698 - C24699) * C32188 +
            C25080 * C30856 + C25081 * C31874) *
               C32013) *
              C31925 * C235 +
          (((C24689 - C24688 + C24691 - C24690 + C24693 - C24692) * C30875 +
            (C24695 - C24694 + C24697 - C24696 + C24699 - C24698) * C32188 +
            C25082 * C30856 + C25083 * C31874) *
               C14629 +
           ((C24700 - C24701 + C24702 - C24703 + C24704 - C24705) * C30875 +
            (C24706 - C24707 + C24708 - C24709 + C24710 - C24711) * C32188 +
            (C24712 - C24713 + C24714 - C24715 + C24716 - C24717) * C30856 +
            (C24718 - C24719 + C24720 - C24721 + C24722 - C24723) * C31874) *
               C32013) *
              C31925 * C236 +
          (((C24701 - C24700 + C24703 - C24702 + C24705 - C24704) * C30875 +
            (C24707 - C24706 + C24709 - C24708 + C24711 - C24710) * C32188 +
            (C24713 - C24712 + C24715 - C24714 + C24717 - C24716) * C30856 +
            (C24719 - C24718 + C24721 - C24720 + C24723 - C24722) * C31874) *
               C14629 +
           ((C32049 * C947 - C31010 * C941 + C32056 * C1621 - C31002 * C1618 +
             C23639 * C6147 - C31016 * C6143) *
                C30875 +
            (C32049 * C959 - C31010 * C948 + C32056 * C1627 - C31002 * C1622 +
             C23639 * C6152 - C31016 * C6148) *
                C32188 +
            (C32049 * C949 - C31010 * C942 + C32056 * C1623 - C31002 * C1619 +
             C23639 * C6962 - C31016 * C6961) *
                C30856 +
            (C32049 * C960 - C31010 * C950 + C32056 * C1628 - C31002 * C1624 +
             C23639 * C6964 - C31016 * C6963) *
                C31874) *
               C32013) *
              C31925 * C237) *
         C31899) /
            (p * q * std::sqrt(p + q));
    d2ee[45] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19912 * C126 - C19914 * C119 + C32053 * C354 - C19915 * C344) *
                 C5248 +
             (C19912 * C140 - C19914 * C127 + C32053 * C374 - C19915 * C355) *
                 C32270 +
             (C19917 - C19918 + C19919 - C19920) * C5249 +
             (C19921 - C19922 + C19923 - C19924) * C32257 + C19957 * C5250 +
             C19958 * C32227) *
                C14629 +
            ((C20903 - C20904 + C20905 - C20906) * C5248 +
             (C20907 - C20908 + C20909 - C20910) * C32270 + C21306 * C5249 +
             C21307 * C32257 + C22638 * C5250 + C22639 * C32227) *
                C32013) *
               C31925 * C466 +
           (((C20904 - C20903 + C20906 - C20905) * C5248 +
             (C20908 - C20907 + C20910 - C20909) * C32270 + C21308 * C5249 +
             C21309 * C32257 + C23130 * C5250 + C23131 * C32227) *
                C14629 +
            ((C20912 - C20911 + C20914 - C20913) * C5248 +
             (C20916 - C20915 + C20918 - C20917) * C32270 + C21310 * C5249 +
             C21311 * C32257 + (C20749 - C20750 + C20751 - C20752) * C5250 +
             (C20753 - C20754 + C20755 - C20756) * C32227) *
                C32013) *
               C31925 * C467) *
              C468 +
          ((((C19918 - C19917 + C19920 - C19919) * C5248 +
             (C19922 - C19921 + C19924 - C19923) * C32270 +
             (C19926 - C19925 + C19928 - C19927) * C5249 +
             (C19930 - C19929 + C19932 - C19931) * C32257 +
             (C19934 - C19933 + C19936 - C19935) * C5250 +
             (C19938 - C19937 + C19940 - C19939) * C32227) *
                C14629 +
            (C21308 * C5248 + C21309 * C32270 + C23130 * C5249 +
             C23131 * C32257 + (C20303 - C20304 + C20305 - C20306) * C5250 +
             (C20307 - C20308 + C20309 - C20310) * C32227) *
                C32013) *
               C31925 * C466 +
           ((C21306 * C5248 + C21307 * C32270 + C22638 * C5249 +
             C22639 * C32257 + (C20304 - C20303 + C20306 - C20305) * C5250 +
             (C20308 - C20307 + C20310 - C20309) * C32227) *
                C14629 +
            (C20943 * C5248 + C20944 * C32270 +
             (C20750 - C20749 + C20752 - C20751) * C5249 +
             (C20754 - C20753 + C20756 - C20755) * C32257 +
             (C19912 * C265 - C19914 * C247 + C32053 * C1453 - C19915 * C1452) *
                 C5250 +
             (C19912 * C277 - C19914 * C266 + C32053 * C1455 - C19915 * C1454) *
                 C32227) *
                C32013) *
               C31925 * C467) *
              C469)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19912 * C126 - C19914 * C119 + C32053 * C354 - C19915 * C344) *
                 C5988 +
             (C19912 * C140 - C19914 * C127 + C32053 * C374 - C19915 * C355) *
                 C31864) *
                C32280 +
            ((C20903 - C20904 + C20905 - C20906) * C5988 +
             (C20907 - C20908 + C20909 - C20910) * C31864) *
                C32276 +
            C26726 * C32266 + C26731 * C32248) *
               C31925 * C466 +
           (((C20904 - C20903 + C20906 - C20905) * C5988 +
             (C20908 - C20907 + C20910 - C20909) * C31864) *
                C32280 +
            ((C20912 - C20911 + C20914 - C20913) * C5988 +
             (C20916 - C20915 + C20918 - C20917) * C31864) *
                C32276 +
            ((C20923 - C20924 + C20925 - C20926) * C5988 +
             (C20927 - C20928 + C20929 - C20930) * C31864) *
                C32266 +
            ((C26718 - C26719 + C26720 - C26721) * C5988 +
             (C26722 - C26723 + C26724 - C26725) * C31864) *
                C32248) *
               C31925 * C467) *
              C468 +
          ((((C19918 - C19917 + C19920 - C19919) * C5988 +
             (C19922 - C19921 + C19924 - C19923) * C31864) *
                C32280 +
            (C21308 * C5988 + C21309 * C31864) * C32276 +
            (C21310 * C5988 + C21311 * C31864) * C32266 +
            ((C20931 - C20932 + C20933 - C20934) * C5988 +
             (C20935 - C20936 + C20937 - C20938) * C31864) *
                C32248) *
               C31925 * C466 +
           ((C21306 * C5988 + C21307 * C31864) * C32280 +
            (C20943 * C5988 + C20944 * C31864) * C32276 +
            ((C20932 - C20931 + C20934 - C20933) * C5988 +
             (C20936 - C20935 + C20938 - C20937) * C31864) *
                C32266 +
            ((C19912 * C955 - C19914 * C945 + C32053 * C6327 - C19915 * C6326) *
                 C5988 +
             (C19912 * C963 - C19914 * C956 + C32053 * C6329 - C19915 * C6328) *
                 C31864) *
                C32248) *
               C31925 * C467) *
              C469)) /
            (p * q * std::sqrt(p + q));
    d2ee[46] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19912 * C126 - C19914 * C119 + C32053 * C354 - C19915 * C344) *
                 C5248 +
             (C19912 * C140 - C19914 * C127 + C32053 * C374 - C19915 * C355) *
                 C32270 +
             (C19917 - C19918 + C19919 - C19920) * C5249 +
             (C19921 - C19922 + C19923 - C19924) * C32257 + C19957 * C5250 +
             C19958 * C32227) *
                C14629 +
            ((C20903 - C20904 + C20905 - C20906) * C5248 +
             (C20907 - C20908 + C20909 - C20910) * C32270 + C21306 * C5249 +
             C21307 * C32257 + C22638 * C5250 + C22639 * C32227) *
                C32013) *
               C572 +
           (((C19914 * C344 - C19912 * C354 + C19915 * C349 - C32053 * C364) *
                 C5248 +
             (C19914 * C355 - C19912 * C374 + C19915 * C365 - C32053 * C379) *
                 C32270 +
             (C20441 - C20442 + C20443 - C20444) * C5249 +
             (C20445 - C20446 + C20447 - C20448) * C32257 +
             (C20449 - C20450 + C20451 - C20452) * C5250 +
             (C20453 - C20454 + C20455 - C20456) * C32227) *
                C14629 +
            ((C21716 - C21717 + C21718 - C21719) * C5248 +
             (C21720 - C21721 + C21722 - C21723) * C32270 +
             (C21506 - C21507 + C21508 - C21509) * C5249 +
             (C21510 - C21511 + C21512 - C21513) * C32257 +
             (C23326 - C23327 + C23328 - C23329) * C5250 +
             (C23330 - C23331 + C23332 - C23333) * C32227) *
                C32013) *
               C573) *
              C466 +
          ((((C20904 - C20903 + C20906 - C20905) * C5248 +
             (C20908 - C20907 + C20910 - C20909) * C32270 + C21308 * C5249 +
             C21309 * C32257 + C23130 * C5250 + C23131 * C32227) *
                C14629 +
            ((C20912 - C20911 + C20914 - C20913) * C5248 +
             (C20916 - C20915 + C20918 - C20917) * C32270 + C21310 * C5249 +
             C21311 * C32257 + (C20749 - C20750 + C20751 - C20752) * C5250 +
             (C20753 - C20754 + C20755 - C20756) * C32227) *
                C32013) *
               C572 +
           (((C21717 - C21716 + C21719 - C21718) * C5248 +
             (C21721 - C21720 + C21723 - C21722) * C32270 +
             (C21507 - C21506 + C21509 - C21508) * C5249 +
             (C21511 - C21510 + C21513 - C21512) * C32257 +
             (C23327 - C23326 + C23329 - C23328) * C5250 +
             (C23331 - C23330 + C23333 - C23332) * C32227) *
                C14629 +
            ((C21725 - C21724 + C21727 - C21726) * C5248 +
             (C21729 - C21728 + C21731 - C21730) * C32270 +
             (C21515 - C21514 + C21517 - C21516) * C5249 +
             (C21519 - C21518 + C21521 - C21520) * C32257 +
             (C19912 * C1123 - C19914 * C1112 + C32053 * C1135 -
              C19915 * C1118) *
                 C5250 +
             (C19912 * C1139 - C19914 * C1124 + C32053 * C1145 -
              C19915 * C1136) *
                 C32227) *
                C32013) *
               C573) *
              C467) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19912 * C126 - C19914 * C119 + C32053 * C354 - C19915 * C344) *
                 C5988 +
             (C19912 * C140 - C19914 * C127 + C32053 * C374 - C19915 * C355) *
                 C31864) *
                C32280 +
            ((C20903 - C20904 + C20905 - C20906) * C5988 +
             (C20907 - C20908 + C20909 - C20910) * C31864) *
                C32276 +
            C26726 * C32266 + C26731 * C32248) *
               C572 +
           (((C19914 * C344 - C19912 * C354 + C19915 * C349 - C32053 * C364) *
                 C5988 +
             (C19914 * C355 - C19912 * C374 + C19915 * C365 - C32053 * C379) *
                 C31864) *
                C32280 +
            ((C21716 - C21717 + C21718 - C21719) * C5988 +
             (C21720 - C21721 + C21722 - C21723) * C31864) *
                C32276 +
            ((C21724 - C21725 + C21726 - C21727) * C5988 +
             (C21728 - C21729 + C21730 - C21731) * C31864) *
                C32266 +
            ((C27220 - C27221 + C27222 - C27223) * C5988 +
             (C27224 - C27225 + C27226 - C27227) * C31864) *
                C32248) *
               C573) *
              C466 +
          ((((C20904 - C20903 + C20906 - C20905) * C5988 +
             (C20908 - C20907 + C20910 - C20909) * C31864) *
                C32280 +
            ((C20912 - C20911 + C20914 - C20913) * C5988 +
             (C20916 - C20915 + C20918 - C20917) * C31864) *
                C32276 +
            ((C20923 - C20924 + C20925 - C20926) * C5988 +
             (C20927 - C20928 + C20929 - C20930) * C31864) *
                C32266 +
            ((C26718 - C26719 + C26720 - C26721) * C5988 +
             (C26722 - C26723 + C26724 - C26725) * C31864) *
                C32248) *
               C572 +
           (((C21717 - C21716 + C21719 - C21718) * C5988 +
             (C21721 - C21720 + C21723 - C21722) * C31864) *
                C32280 +
            ((C21725 - C21724 + C21727 - C21726) * C5988 +
             (C21729 - C21728 + C21731 - C21730) * C31864) *
                C32276 +
            ((C27221 - C27220 + C27223 - C27222) * C5988 +
             (C27225 - C27224 + C27227 - C27226) * C31864) *
                C32266 +
            ((C19912 * C6145 - C19914 * C6142 + C32053 * C6149 -
              C19915 * C6144) *
                 C5988 +
             (C19912 * C6151 - C19914 * C6146 + C32053 * C6153 -
              C19915 * C6150) *
                 C31864) *
                C32248) *
               C573) *
              C467) *
         C31899) /
            (p * q * std::sqrt(p + q));
    d2ee[47] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C19912 * C126 - C19914 * C119 + C32053 * C354 - C19915 * C344) *
                C5248 +
            (C19912 * C140 - C19914 * C127 + C32053 * C374 - C19915 * C355) *
                C32270 +
            (C19917 - C19918 + C19919 - C19920) * C5249 +
            (C19921 - C19922 + C19923 - C19924) * C32257 + C19957 * C5250 +
            C19958 * C32227) *
               C14629 +
           ((C20903 - C20904 + C20905 - C20906) * C5248 +
            (C20907 - C20908 + C20909 - C20910) * C32270 + C21306 * C5249 +
            C21307 * C32257 + C22638 * C5250 + C22639 * C32227) *
               C32013) *
              C31925 * C235 +
          (((C20904 - C20903 + C20906 - C20905) * C5248 +
            (C20908 - C20907 + C20910 - C20909) * C32270 + C21308 * C5249 +
            C21309 * C32257 + C23130 * C5250 + C23131 * C32227) *
               C14629 +
           ((C20912 - C20911 + C20914 - C20913) * C5248 +
            (C20916 - C20915 + C20918 - C20917) * C32270 + C21310 * C5249 +
            C21311 * C32257 + (C20749 - C20750 + C20751 - C20752) * C5250 +
            (C20753 - C20754 + C20755 - C20756) * C32227) *
               C32013) *
              C31925 * C236 +
          ((C20945 * C5248 + C20946 * C32270 + C20943 * C5249 +
            C20944 * C32257 + (C20750 - C20749 + C20752 - C20751) * C5250 +
            (C20754 - C20753 + C20756 - C20755) * C32227) *
               C14629 +
           ((C20924 - C20923 + C20926 - C20925) * C5248 +
            (C20928 - C20927 + C20930 - C20929) * C32270 +
            (C20932 - C20931 + C20934 - C20933) * C5249 +
            (C20936 - C20935 + C20938 - C20937) * C32257 +
            (C19912 * C951 - C19914 * C943 + C32053 * C1625 - C19915 * C1620) *
                C5250 +
            (C19912 * C961 - C19914 * C952 + C32053 * C1629 - C19915 * C1626) *
                C32227) *
               C32013) *
              C31925 * C237) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C19912 * C126 - C19914 * C119 + C32053 * C354 - C19915 * C344) *
                C5248 +
            (C19912 * C140 - C19914 * C127 + C32053 * C374 - C19915 * C355) *
                C32270 +
            (C19917 - C19918 + C19919 - C19920) * C5249 +
            (C19921 - C19922 + C19923 - C19924) * C32257 + C19957 * C5250 +
            C19958 * C32227) *
               C14629 +
           ((C20903 - C20904 + C20905 - C20906) * C5248 +
            (C20907 - C20908 + C20909 - C20910) * C32270 + C21306 * C5249 +
            C21307 * C32257 + C22638 * C5250 + C22639 * C32227) *
               C32013) *
              C31925 * C31911 * C110 +
          (((C19918 - C19917 + C19920 - C19919) * C5248 +
            (C19922 - C19921 + C19924 - C19923) * C32270 +
            (C19926 - C19925 + C19928 - C19927) * C5249 +
            (C19930 - C19929 + C19932 - C19931) * C32257 +
            (C19934 - C19933 + C19936 - C19935) * C5250 +
            (C19938 - C19937 + C19940 - C19939) * C32227) *
               C14629 +
           (C21308 * C5248 + C21309 * C32270 + C23130 * C5249 +
            C23131 * C32257 + (C20303 - C20304 + C20305 - C20306) * C5250 +
            (C20307 - C20308 + C20309 - C20310) * C32227) *
               C32013) *
              C31925 * C31911 * C111 +
          ((C19957 * C5248 + C19958 * C32270 + C19959 * C5249 +
            C19960 * C32257 + (C19942 - C19941 + C19944 - C19943) * C5250 +
            (C19946 - C19945 + C19948 - C19947) * C32227) *
               C14629 +
           (C22638 * C5248 + C22639 * C32270 +
            (C20304 - C20303 + C20306 - C20305) * C5249 +
            (C20308 - C20307 + C20310 - C20309) * C32257 +
            (C19912 * C257 - C19914 * C243 + C32053 * C689 - C19915 * C680) *
                C5250 +
            (C19912 * C273 - C19914 * C258 + C32053 * C695 - C19915 * C690) *
                C32227) *
               C32013) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C19912 * C126 - C19914 * C119 + C32053 * C354 - C19915 * C344) *
                C5248 +
            (C19912 * C140 - C19914 * C127 + C32053 * C374 - C19915 * C355) *
                C32270 +
            (C19917 - C19918 + C19919 - C19920) * C5249 +
            (C19921 - C19922 + C19923 - C19924) * C32257 + C19957 * C5250 +
            C19958 * C32227) *
               C14629 +
           ((C20903 - C20904 + C20905 - C20906) * C5248 +
            (C20907 - C20908 + C20909 - C20910) * C32270 + C21306 * C5249 +
            C21307 * C32257 + C22638 * C5250 + C22639 * C32227) *
               C32013) *
              C341 +
          (((C19914 * C344 - C19912 * C354 + C19915 * C349 - C32053 * C364) *
                C5248 +
            (C19914 * C355 - C19912 * C374 + C19915 * C365 - C32053 * C379) *
                C32270 +
            (C20441 - C20442 + C20443 - C20444) * C5249 +
            (C20445 - C20446 + C20447 - C20448) * C32257 +
            (C20449 - C20450 + C20451 - C20452) * C5250 +
            (C20453 - C20454 + C20455 - C20456) * C32227) *
               C14629 +
           ((C21716 - C21717 + C21718 - C21719) * C5248 +
            (C21720 - C21721 + C21722 - C21723) * C32270 +
            (C21506 - C21507 + C21508 - C21509) * C5249 +
            (C21510 - C21511 + C21512 - C21513) * C32257 +
            (C23326 - C23327 + C23328 - C23329) * C5250 +
            (C23330 - C23331 + C23332 - C23333) * C32227) *
               C32013) *
              C342 +
          (((C19912 * C364 - C19914 * C349 + C32053 * C2026 - C19915 * C2020) *
                C5248 +
            (C19912 * C379 - C19914 * C365 + C32053 * C2038 - C19915 * C2027) *
                C32270 +
            (C19912 * C366 - C19914 * C350 + C32053 * C2028 - C19915 * C2021) *
                C5249 +
            (C19912 * C380 - C19914 * C367 + C32053 * C2039 - C19915 * C2029) *
                C32257 +
            (C19912 * C368 - C19914 * C351 + C32053 * C2030 - C19915 * C2022) *
                C5250 +
            (C19912 * C381 - C19914 * C369 + C32053 * C2040 - C19915 * C2031) *
                C32227) *
               C14629 +
           ((C19912 * C1125 - C19914 * C1113 + C32053 * C2541 -
             C19915 * C2538) *
                C5248 +
            (C19912 * C1140 - C19914 * C1126 + C32053 * C2547 -
             C19915 * C2542) *
                C32270 +
            (C19912 * C1127 - C19914 * C1114 + C32053 * C2543 -
             C19915 * C2539) *
                C5249 +
            (C19912 * C1141 - C19914 * C1128 + C32053 * C2548 -
             C19915 * C2544) *
                C32257 +
            (C19912 * C1129 - C19914 * C1115 + C32053 * C2545 -
             C19915 * C2540) *
                C5250 +
            (C19912 * C1142 - C19914 * C1130 + C32053 * C2549 -
             C19915 * C2546) *
                C32227) *
               C32013) *
              C343) *
         C31911 * C31899) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C19912 * C126 - C19914 * C119 + C32053 * C354 - C19915 * C344) *
                C5988 +
            (C19912 * C140 - C19914 * C127 + C32053 * C374 - C19915 * C355) *
                C31864) *
               C32280 +
           ((C20903 - C20904 + C20905 - C20906) * C5988 +
            (C20907 - C20908 + C20909 - C20910) * C31864) *
               C32276 +
           (C20945 * C5988 + C20946 * C31864) * C32266 +
           ((C20924 - C20923 + C20926 - C20925) * C5988 +
            (C20928 - C20927 + C20930 - C20929) * C31864) *
               C32248) *
              C31925 * C31911 * C110 +
          (((C19918 - C19917 + C19920 - C19919) * C5988 +
            (C19922 - C19921 + C19924 - C19923) * C31864) *
               C32280 +
           (C21308 * C5988 + C21309 * C31864) * C32276 +
           (C21310 * C5988 + C21311 * C31864) * C32266 +
           ((C20931 - C20932 + C20933 - C20934) * C5988 +
            (C20935 - C20936 + C20937 - C20938) * C31864) *
               C32248) *
              C31925 * C31911 * C111 +
          ((C19957 * C5988 + C19958 * C31864) * C32280 +
           (C22638 * C5988 + C22639 * C31864) * C32276 +
           ((C20750 - C20749 + C20752 - C20751) * C5988 +
            (C20754 - C20753 + C20756 - C20755) * C31864) *
               C32266 +
           ((C19912 * C951 - C19914 * C943 + C32053 * C1625 - C19915 * C1620) *
                C5988 +
            (C19912 * C961 - C19914 * C952 + C32053 * C1629 - C19915 * C1626) *
                C31864) *
               C32248) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C19912 * C126 - C19914 * C119 + C32053 * C354 - C19915 * C344) *
                C5988 +
            (C19912 * C140 - C19914 * C127 + C32053 * C374 - C19915 * C355) *
                C31864) *
               C32280 +
           ((C20903 - C20904 + C20905 - C20906) * C5988 +
            (C20907 - C20908 + C20909 - C20910) * C31864) *
               C32276 +
           C26726 * C32266 + C26731 * C32248) *
              C31925 * C235 +
          (((C20904 - C20903 + C20906 - C20905) * C5988 +
            (C20908 - C20907 + C20910 - C20909) * C31864) *
               C32280 +
           ((C20912 - C20911 + C20914 - C20913) * C5988 +
            (C20916 - C20915 + C20918 - C20917) * C31864) *
               C32276 +
           ((C20923 - C20924 + C20925 - C20926) * C5988 +
            (C20927 - C20928 + C20929 - C20930) * C31864) *
               C32266 +
           ((C26718 - C26719 + C26720 - C26721) * C5988 +
            (C26722 - C26723 + C26724 - C26725) * C31864) *
               C32248) *
              C31925 * C236 +
          (C26726 * C32280 + C26731 * C32276 +
           ((C26719 - C26718 + C26721 - C26720) * C5988 +
            (C26723 - C26722 + C26725 - C26724) * C31864) *
               C32266 +
           ((C19912 * C6053 - C19914 * C6051 + C32053 * C6413 -
             C19915 * C6412) *
                C5988 +
            (C19912 * C6057 - C19914 * C6054 + C32053 * C6415 -
             C19915 * C6414) *
                C31864) *
               C32248) *
              C31925 * C237) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C19912 * C126 - C19914 * C119 + C32053 * C354 - C19915 * C344) *
                C5988 +
            (C19912 * C140 - C19914 * C127 + C32053 * C374 - C19915 * C355) *
                C31864) *
               C32280 +
           ((C20903 - C20904 + C20905 - C20906) * C5988 +
            (C20907 - C20908 + C20909 - C20910) * C31864) *
               C32276 +
           C26726 * C32266 + C26731 * C32248) *
              C341 +
          (((C19914 * C344 - C19912 * C354 + C19915 * C349 - C32053 * C364) *
                C5988 +
            (C19914 * C355 - C19912 * C374 + C19915 * C365 - C32053 * C379) *
                C31864) *
               C32280 +
           ((C21716 - C21717 + C21718 - C21719) * C5988 +
            (C21720 - C21721 + C21722 - C21723) * C31864) *
               C32276 +
           ((C21724 - C21725 + C21726 - C21727) * C5988 +
            (C21728 - C21729 + C21730 - C21731) * C31864) *
               C32266 +
           ((C19914 * C1618 - C19912 * C1621 + C19915 * C6143 -
             C32053 * C6147) *
                C5988 +
            (C19914 * C1622 - C19912 * C1627 + C19915 * C6148 -
             C32053 * C6152) *
                C31864) *
               C32248) *
              C342 +
          (((C19912 * C364 - C19914 * C349 + C32053 * C2026 - C19915 * C2020) *
                C5988 +
            (C19912 * C379 - C19914 * C365 + C32053 * C2038 - C19915 * C2027) *
                C31864) *
               C32280 +
           ((C19912 * C1125 - C19914 * C1113 + C32053 * C2541 -
             C19915 * C2538) *
                C5988 +
            (C19912 * C1140 - C19914 * C1126 + C32053 * C2547 -
             C19915 * C2542) *
                C31864) *
               C32276 +
           ((C19912 * C1131 - C19914 * C1116 + C32053 * C6806 -
             C19915 * C6803) *
                C5988 +
            (C19912 * C1143 - C19914 * C1132 + C32053 * C6812 -
             C19915 * C6807) *
                C31864) *
               C32266 +
           ((C19912 * C6147 - C19914 * C6143 + C32053 * C7274 -
             C19915 * C7273) *
                C5988 +
            (C19912 * C6152 - C19914 * C6148 + C32053 * C7276 -
             C19915 * C7275) *
                C31864) *
               C32248) *
              C343) *
         C31911 * C31899) /
            (p * q * std::sqrt(p + q));
    d2ee[48] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19912 * C126 - C19914 * C119 + C32053 * C354 - C19915 * C344) *
                 C5248 +
             (C19912 * C140 - C19914 * C127 + C32053 * C374 - C19915 * C355) *
                 C32270 +
             (C19917 - C19918 + C19919 - C19920) * C5249 +
             (C19921 - C19922 + C19923 - C19924) * C32257 + C19957 * C5250 +
             C19958 * C32227) *
                C14629 +
            ((C20903 - C20904 + C20905 - C20906) * C5248 +
             (C20907 - C20908 + C20909 - C20910) * C32270 + C21306 * C5249 +
             C21307 * C32257 + C22638 * C5250 + C22639 * C32227) *
                C32013) *
               C572 +
           (((C19914 * C344 - C19912 * C354 + C19915 * C349 - C32053 * C364) *
                 C5248 +
             (C19914 * C355 - C19912 * C374 + C19915 * C365 - C32053 * C379) *
                 C32270 +
             (C20441 - C20442 + C20443 - C20444) * C5249 +
             (C20445 - C20446 + C20447 - C20448) * C32257 +
             (C20449 - C20450 + C20451 - C20452) * C5250 +
             (C20453 - C20454 + C20455 - C20456) * C32227) *
                C14629 +
            ((C21716 - C21717 + C21718 - C21719) * C5248 +
             (C21720 - C21721 + C21722 - C21723) * C32270 +
             (C21506 - C21507 + C21508 - C21509) * C5249 +
             (C21510 - C21511 + C21512 - C21513) * C32257 +
             (C23326 - C23327 + C23328 - C23329) * C5250 +
             (C23330 - C23331 + C23332 - C23333) * C32227) *
                C32013) *
               C573) *
              C31911 * C468 +
          ((((C19918 - C19917 + C19920 - C19919) * C5248 +
             (C19922 - C19921 + C19924 - C19923) * C32270 +
             (C19926 - C19925 + C19928 - C19927) * C5249 +
             (C19930 - C19929 + C19932 - C19931) * C32257 +
             (C19934 - C19933 + C19936 - C19935) * C5250 +
             (C19938 - C19937 + C19940 - C19939) * C32227) *
                C14629 +
            (C21308 * C5248 + C21309 * C32270 + C23130 * C5249 +
             C23131 * C32257 + (C20303 - C20304 + C20305 - C20306) * C5250 +
             (C20307 - C20308 + C20309 - C20310) * C32227) *
                C32013) *
               C572 +
           (((C20442 - C20441 + C20444 - C20443) * C5248 +
             (C20446 - C20445 + C20448 - C20447) * C32270 +
             (C20450 - C20449 + C20452 - C20451) * C5249 +
             (C20454 - C20453 + C20456 - C20455) * C32257 +
             (C20458 - C20457 + C20460 - C20459) * C5250 +
             (C20462 - C20461 + C20464 - C20463) * C32227) *
                C14629 +
            ((C21507 - C21506 + C21509 - C21508) * C5248 +
             (C21511 - C21510 + C21513 - C21512) * C32270 +
             (C23327 - C23326 + C23329 - C23328) * C5249 +
             (C23331 - C23330 + C23333 - C23332) * C32257 +
             (C19912 * C687 - C19914 * C679 + C32053 * C2191 - C19915 * C2190) *
                 C5250 +
             (C19912 * C694 - C19914 * C688 + C32053 * C2193 - C19915 * C2192) *
                 C32227) *
                C32013) *
               C573) *
              C31911 * C469)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19912 * C126 - C19914 * C119 + C32053 * C354 - C19915 * C344) *
                 C5988 +
             (C19912 * C140 - C19914 * C127 + C32053 * C374 - C19915 * C355) *
                 C31864) *
                C32280 +
            ((C20903 - C20904 + C20905 - C20906) * C5988 +
             (C20907 - C20908 + C20909 - C20910) * C31864) *
                C32276 +
            C26726 * C32266 + C26731 * C32248) *
               C572 +
           (((C19914 * C344 - C19912 * C354 + C19915 * C349 - C32053 * C364) *
                 C5988 +
             (C19914 * C355 - C19912 * C374 + C19915 * C365 - C32053 * C379) *
                 C31864) *
                C32280 +
            ((C21716 - C21717 + C21718 - C21719) * C5988 +
             (C21720 - C21721 + C21722 - C21723) * C31864) *
                C32276 +
            ((C21724 - C21725 + C21726 - C21727) * C5988 +
             (C21728 - C21729 + C21730 - C21731) * C31864) *
                C32266 +
            ((C19914 * C1618 - C19912 * C1621 + C19915 * C6143 -
              C32053 * C6147) *
                 C5988 +
             (C19914 * C1622 - C19912 * C1627 + C19915 * C6148 -
              C32053 * C6152) *
                 C31864) *
                C32248) *
               C573) *
              C31911 * C468 +
          ((((C19918 - C19917 + C19920 - C19919) * C5988 +
             (C19922 - C19921 + C19924 - C19923) * C31864) *
                C32280 +
            (C21308 * C5988 + C21309 * C31864) * C32276 +
            (C21310 * C5988 + C21311 * C31864) * C32266 +
            ((C20931 - C20932 + C20933 - C20934) * C5988 +
             (C20935 - C20936 + C20937 - C20938) * C31864) *
                C32248) *
               C572 +
           (((C20442 - C20441 + C20444 - C20443) * C5988 +
             (C20446 - C20445 + C20448 - C20447) * C31864) *
                C32280 +
            ((C21507 - C21506 + C21509 - C21508) * C5988 +
             (C21511 - C21510 + C21513 - C21512) * C31864) *
                C32276 +
            ((C21515 - C21514 + C21517 - C21516) * C5988 +
             (C21519 - C21518 + C21521 - C21520) * C31864) *
                C32266 +
            ((C19912 * C1623 - C19914 * C1619 + C32053 * C6962 -
              C19915 * C6961) *
                 C5988 +
             (C19912 * C1628 - C19914 * C1624 + C32053 * C6964 -
              C19915 * C6963) *
                 C31864) *
                C32248) *
               C573) *
              C31911 * C469)) /
            (p * q * std::sqrt(p + q));
    d2ee[49] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C19912 * C126 - C19914 * C119 + C32053 * C354 - C19915 * C344) *
                C5248 +
            (C19912 * C140 - C19914 * C127 + C32053 * C374 - C19915 * C355) *
                C32270 +
            (C19917 - C19918 + C19919 - C19920) * C5249 +
            (C19921 - C19922 + C19923 - C19924) * C32257 + C19957 * C5250 +
            C19958 * C32227) *
               C14629 +
           ((C20903 - C20904 + C20905 - C20906) * C5248 +
            (C20907 - C20908 + C20909 - C20910) * C32270 + C21306 * C5249 +
            C21307 * C32257 + C22638 * C5250 + C22639 * C32227) *
               C32013) *
              C31925 * C31911 * C110 +
          (((C19918 - C19917 + C19920 - C19919) * C5248 +
            (C19922 - C19921 + C19924 - C19923) * C32270 +
            (C19926 - C19925 + C19928 - C19927) * C5249 +
            (C19930 - C19929 + C19932 - C19931) * C32257 +
            (C19934 - C19933 + C19936 - C19935) * C5250 +
            (C19938 - C19937 + C19940 - C19939) * C32227) *
               C14629 +
           (C21308 * C5248 + C21309 * C32270 + C23130 * C5249 +
            C23131 * C32257 + (C20303 - C20304 + C20305 - C20306) * C5250 +
            (C20307 - C20308 + C20309 - C20310) * C32227) *
               C32013) *
              C31925 * C31911 * C111 +
          ((C19957 * C5248 + C19958 * C32270 + C19959 * C5249 +
            C19960 * C32257 + (C19942 - C19941 + C19944 - C19943) * C5250 +
            (C19946 - C19945 + C19948 - C19947) * C32227) *
               C14629 +
           (C22638 * C5248 + C22639 * C32270 +
            (C20304 - C20303 + C20306 - C20305) * C5249 +
            (C20308 - C20307 + C20310 - C20309) * C32257 +
            (C19912 * C257 - C19914 * C243 + C32053 * C689 - C19915 * C680) *
                C5250 +
            (C19912 * C273 - C19914 * C258 + C32053 * C695 - C19915 * C690) *
                C32227) *
               C32013) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C19912 * C126 - C19914 * C119 + C32053 * C354 - C19915 * C344) *
                C5248 +
            (C19912 * C140 - C19914 * C127 + C32053 * C374 - C19915 * C355) *
                C32270 +
            (C19917 - C19918 + C19919 - C19920) * C5249 +
            (C19921 - C19922 + C19923 - C19924) * C32257 + C19957 * C5250 +
            C19958 * C32227) *
               C14629 +
           ((C20903 - C20904 + C20905 - C20906) * C5248 +
            (C20907 - C20908 + C20909 - C20910) * C32270 + C21306 * C5249 +
            C21307 * C32257 + C22638 * C5250 + C22639 * C32227) *
               C32013) *
              C31925 * C235 +
          (((C20904 - C20903 + C20906 - C20905) * C5248 +
            (C20908 - C20907 + C20910 - C20909) * C32270 + C21308 * C5249 +
            C21309 * C32257 + C23130 * C5250 + C23131 * C32227) *
               C14629 +
           ((C20912 - C20911 + C20914 - C20913) * C5248 +
            (C20916 - C20915 + C20918 - C20917) * C32270 + C21310 * C5249 +
            C21311 * C32257 + (C20749 - C20750 + C20751 - C20752) * C5250 +
            (C20753 - C20754 + C20755 - C20756) * C32227) *
               C32013) *
              C31925 * C236 +
          ((C20945 * C5248 + C20946 * C32270 + C20943 * C5249 +
            C20944 * C32257 + (C20750 - C20749 + C20752 - C20751) * C5250 +
            (C20754 - C20753 + C20756 - C20755) * C32227) *
               C14629 +
           ((C20924 - C20923 + C20926 - C20925) * C5248 +
            (C20928 - C20927 + C20930 - C20929) * C32270 +
            (C20932 - C20931 + C20934 - C20933) * C5249 +
            (C20936 - C20935 + C20938 - C20937) * C32257 +
            (C19912 * C951 - C19914 * C943 + C32053 * C1625 - C19915 * C1620) *
                C5250 +
            (C19912 * C961 - C19914 * C952 + C32053 * C1629 - C19915 * C1626) *
                C32227) *
               C32013) *
              C31925 * C237) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C19912 * C126 - C19914 * C119 + C32053 * C354 - C19915 * C344) *
                C5988 +
            (C19912 * C140 - C19914 * C127 + C32053 * C374 - C19915 * C355) *
                C31864) *
               C32280 +
           ((C20903 - C20904 + C20905 - C20906) * C5988 +
            (C20907 - C20908 + C20909 - C20910) * C31864) *
               C32276 +
           (C20945 * C5988 + C20946 * C31864) * C32266 +
           ((C20924 - C20923 + C20926 - C20925) * C5988 +
            (C20928 - C20927 + C20930 - C20929) * C31864) *
               C32248) *
              C31925 * C31911 * C110 +
          (((C19918 - C19917 + C19920 - C19919) * C5988 +
            (C19922 - C19921 + C19924 - C19923) * C31864) *
               C32280 +
           (C21308 * C5988 + C21309 * C31864) * C32276 +
           (C21310 * C5988 + C21311 * C31864) * C32266 +
           ((C20931 - C20932 + C20933 - C20934) * C5988 +
            (C20935 - C20936 + C20937 - C20938) * C31864) *
               C32248) *
              C31925 * C31911 * C111 +
          ((C19957 * C5988 + C19958 * C31864) * C32280 +
           (C22638 * C5988 + C22639 * C31864) * C32276 +
           ((C20750 - C20749 + C20752 - C20751) * C5988 +
            (C20754 - C20753 + C20756 - C20755) * C31864) *
               C32266 +
           ((C19912 * C951 - C19914 * C943 + C32053 * C1625 - C19915 * C1620) *
                C5988 +
            (C19912 * C961 - C19914 * C952 + C32053 * C1629 - C19915 * C1626) *
                C31864) *
               C32248) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C19912 * C126 - C19914 * C119 + C32053 * C354 - C19915 * C344) *
                C5988 +
            (C19912 * C140 - C19914 * C127 + C32053 * C374 - C19915 * C355) *
                C31864) *
               C32280 +
           ((C20903 - C20904 + C20905 - C20906) * C5988 +
            (C20907 - C20908 + C20909 - C20910) * C31864) *
               C32276 +
           C26726 * C32266 + C26731 * C32248) *
              C31925 * C235 +
          (((C20904 - C20903 + C20906 - C20905) * C5988 +
            (C20908 - C20907 + C20910 - C20909) * C31864) *
               C32280 +
           ((C20912 - C20911 + C20914 - C20913) * C5988 +
            (C20916 - C20915 + C20918 - C20917) * C31864) *
               C32276 +
           ((C20923 - C20924 + C20925 - C20926) * C5988 +
            (C20927 - C20928 + C20929 - C20930) * C31864) *
               C32266 +
           ((C26718 - C26719 + C26720 - C26721) * C5988 +
            (C26722 - C26723 + C26724 - C26725) * C31864) *
               C32248) *
              C31925 * C236 +
          (C26726 * C32280 + C26731 * C32276 +
           ((C26719 - C26718 + C26721 - C26720) * C5988 +
            (C26723 - C26722 + C26725 - C26724) * C31864) *
               C32266 +
           ((C19912 * C6053 - C19914 * C6051 + C32053 * C6413 -
             C19915 * C6412) *
                C5988 +
            (C19912 * C6057 - C19914 * C6054 + C32053 * C6415 -
             C19915 * C6414) *
                C31864) *
               C32248) *
              C31925 * C237) *
         C31899) /
            (p * q * std::sqrt(p + q));
    d2ee[50] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31966 * C126 - C113 * C119) * C30875 +
             (C31966 * C140 - C113 * C127) * C32188 + (C148 - C149) * C30856 +
             (C150 - C151) * C31874) *
                C7401 +
            ((C966 - C967) * C30875 + (C968 - C969) * C32188 + C1297 * C30856 +
             C1298 * C31874) *
                C7402 +
            C7520 * C7403 + C7521 * C32248) *
               C31925 * C466 +
           (((C967 - C966) * C30875 + (C969 - C968) * C32188 + C1299 * C30856 +
             C1300 * C31874) *
                C7401 +
            ((C971 - C970) * C30875 + (C973 - C972) * C32188 + C1303 * C30856 +
             C1304 * C31874) *
                C7402 +
            ((C978 - C979) * C30875 + (C980 - C981) * C32188 + C7750 * C30856 +
             C7751 * C31874) *
                C7403 +
            ((C6065 - C6064) * C30875 + (C6067 - C6066) * C32188 +
             (C6241 - C6242) * C30856 + (C6243 - C6244) * C31874) *
                C32248) *
               C31925 * C467) *
              C468 +
          ((((C149 - C148) * C30875 + (C151 - C150) * C32188 +
             (C153 - C152) * C30856 + (C155 - C154) * C31874) *
                C7401 +
            (C1299 * C30875 + C1300 * C32188 + C1301 * C30856 +
             C1302 * C31874) *
                C7402 +
            (C1303 * C30875 + C1304 * C32188 + C1305 * C30856 +
             C1306 * C31874) *
                C7403 +
            (C7750 * C30875 + C7751 * C32188 + (C986 - C987) * C30856 +
             (C988 - C989) * C31874) *
                C32248) *
               C31925 * C466 +
           ((C1297 * C30875 + C1298 * C32188 + C816 * C30856 + C817 * C31874) *
                C7401 +
            (C974 * C30875 + C975 * C32188 + C830 * C30856 + C831 * C31874) *
                C7402 +
            (C7512 * C30875 + C7513 * C32188 + (C987 - C986) * C30856 +
             (C989 - C988) * C31874) *
                C7403 +
            ((C6242 - C6241) * C30875 + (C6244 - C6243) * C32188 +
             (C31966 * C957 - C113 * C946) * C30856 +
             (C31966 * C964 - C113 * C958) * C31874) *
                C32248) *
               C31925 * C467) *
              C469)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31966 * C126 - C113 * C119) * C2654 +
             (C31966 * C140 - C113 * C127) * C2648 + (C148 - C149) * C2655 +
             (C150 - C151) * C2649 + C168 * C2656 + C169 * C2650 +
             C170 * C2657 + C171 * C32242) *
                C32207 +
            ((C966 - C967) * C2654 + (C968 - C969) * C2648 + C1297 * C2655 +
             C1298 * C2649 + C816 * C2656 + C817 * C2650 + C2659 * C2657 +
             C2660 * C32242) *
                C32013) *
               C31925 * C466 +
           (((C967 - C966) * C2654 + (C969 - C968) * C2648 + C1299 * C2655 +
             C1300 * C2649 + C1301 * C2656 + C1302 * C2650 + C2987 * C2657 +
             C2988 * C32242) *
                C32207 +
            ((C971 - C970) * C2654 + (C973 - C972) * C2648 + C1303 * C2655 +
             C1304 * C2649 + C1305 * C2656 + C1306 * C2650 +
             (C826 - C827) * C2657 + (C828 - C829) * C32242) *
                C32013) *
               C31925 * C467) *
              C468 +
          ((((C149 - C148) * C2654 + (C151 - C150) * C2648 +
             (C153 - C152) * C2655 + (C155 - C154) * C2649 +
             (C157 - C156) * C2656 + (C159 - C158) * C2650 +
             (C161 - C160) * C2657 + (C163 - C162) * C32242) *
                C32207 +
            (C1299 * C2654 + C1300 * C2648 + C1301 * C2655 + C1302 * C2649 +
             C2987 * C2656 + C2988 * C2650 + (C487 - C488) * C2657 +
             (C489 - C490) * C32242) *
                C32013) *
               C31925 * C466 +
           ((C1297 * C2654 + C1298 * C2648 + C816 * C2655 + C817 * C2649 +
             C2659 * C2656 + C2660 * C2650 + (C488 - C487) * C2657 +
             (C490 - C489) * C32242) *
                C32207 +
            (C974 * C2654 + C975 * C2648 + C830 * C2655 + C831 * C2649 +
             (C827 - C826) * C2656 + (C829 - C828) * C2650 +
             (C31966 * C267 - C113 * C248) * C2657 +
             (C31966 * C278 - C113 * C268) * C32242) *
                C32013) *
               C31925 * C467) *
              C469)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C9914 * C126 - C9917 * C119 + C9915 * C354 - C9918 * C344 +
              C32241 * C364 - C9919 * C349) *
                 C30875 +
             (C9914 * C140 - C9917 * C127 + C9915 * C374 - C9918 * C355 +
              C32241 * C379 - C9919 * C365) *
                 C32188 +
             (C9921 - C9922 + C9923 - C9924 + C9925 - C9926) * C30856 +
             (C9927 - C9928 + C9929 - C9930 + C9931 - C9932) * C31874) *
                C32207 +
            ((C10893 - C10894 + C10895 - C10896 + C10897 - C10898) * C30875 +
             (C10899 - C10900 + C10901 - C10902 + C10903 - C10904) * C32188 +
             C12636 * C30856 + C12637 * C31874) *
                C32013) *
               C31925 * C466 +
           (((C10894 - C10893 + C10896 - C10895 + C10898 - C10897) * C30875 +
             (C10900 - C10899 + C10902 - C10901 + C10904 - C10903) * C32188 +
             C12638 * C30856 + C12639 * C31874) *
                C32207 +
            ((C10906 - C10905 + C10908 - C10907 + C10910 - C10909) * C30875 +
             (C10912 - C10911 + C10914 - C10913 + C10916 - C10915) * C32188 +
             (C11198 - C11199 + C11200 - C11201 + C11202 - C11203) * C30856 +
             (C11204 - C11205 + C11206 - C11207 + C11208 - C11209) * C31874) *
                C32013) *
               C31925 * C467) *
              C468 +
          ((((C9922 - C9921 + C9924 - C9923 + C9926 - C9925) * C30875 +
             (C9928 - C9927 + C9930 - C9929 + C9932 - C9931) * C32188 +
             (C9934 - C9933 + C9936 - C9935 + C9938 - C9937) * C30856 +
             (C9940 - C9939 + C9942 - C9941 + C9944 - C9943) * C31874) *
                C32207 +
            (C12638 * C30875 + C12639 * C32188 +
             (C10345 - C10346 + C10347 - C10348 + C10349 - C10350) * C30856 +
             (C10351 - C10352 + C10353 - C10354 + C10355 - C10356) * C31874) *
                C32013) *
               C31925 * C466 +
           ((C12636 * C30875 + C12637 * C32188 +
             (C10346 - C10345 + C10348 - C10347 + C10350 - C10349) * C30856 +
             (C10352 - C10351 + C10354 - C10353 + C10356 - C10355) * C31874) *
                C32207 +
            ((C11199 - C11198 + C11201 - C11200 + C11203 - C11202) * C30875 +
             (C11205 - C11204 + C11207 - C11206 + C11209 - C11208) * C32188 +
             (C9914 * C263 - C9917 * C246 + C9915 * C1123 - C9918 * C1112 +
              C32241 * C1135 - C9919 * C1118) *
                 C30856 +
             (C9914 * C276 - C9917 * C264 + C9915 * C1139 - C9918 * C1124 +
              C32241 * C1145 - C9919 * C1136) *
                 C31874) *
                C32013) *
               C31925 * C467) *
              C469)) /
            (p * q * std::sqrt(p + q));
    d2ee[51] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31966 * C126 - C113 * C119) * C30875 +
             (C31966 * C140 - C113 * C127) * C32188 + (C148 - C149) * C30856 +
             (C150 - C151) * C31874) *
                C7401 +
            ((C966 - C967) * C30875 + (C968 - C969) * C32188 + C1297 * C30856 +
             C1298 * C31874) *
                C7402 +
            C7520 * C7403 + C7521 * C32248) *
               C572 +
           (((C113 * C344 - C31966 * C354) * C30875 +
             (C113 * C355 - C31966 * C374) * C32188 + (C579 - C580) * C30856 +
             (C581 - C582) * C31874) *
                C7401 +
            ((C1631 - C1632) * C30875 + (C1633 - C1634) * C32188 +
             (C1457 - C1458) * C30856 + (C1459 - C1460) * C31874) *
                C7402 +
            ((C1635 - C1636) * C30875 + (C1637 - C1638) * C32188 +
             (C1465 - C1466) * C30856 + (C1467 - C1468) * C31874) *
                C7403 +
            ((C6417 - C6418) * C30875 + (C6419 - C6420) * C32188 +
             (C7882 - C7883) * C30856 + (C7884 - C7885) * C31874) *
                C32248) *
               C573) *
              C466 +
          ((((C967 - C966) * C30875 + (C969 - C968) * C32188 + C1299 * C30856 +
             C1300 * C31874) *
                C7401 +
            ((C971 - C970) * C30875 + (C973 - C972) * C32188 + C1303 * C30856 +
             C1304 * C31874) *
                C7402 +
            ((C978 - C979) * C30875 + (C980 - C981) * C32188 + C7750 * C30856 +
             C7751 * C31874) *
                C7403 +
            ((C6065 - C6064) * C30875 + (C6067 - C6066) * C32188 +
             (C6241 - C6242) * C30856 + (C6243 - C6244) * C31874) *
                C32248) *
               C572 +
           (((C1632 - C1631) * C30875 + (C1634 - C1633) * C32188 +
             (C1458 - C1457) * C30856 + (C1460 - C1459) * C31874) *
                C7401 +
            ((C1636 - C1635) * C30875 + (C1638 - C1637) * C32188 +
             (C1466 - C1465) * C30856 + (C1468 - C1467) * C31874) *
                C7402 +
            ((C6418 - C6417) * C30875 + (C6420 - C6419) * C32188 +
             (C7883 - C7882) * C30856 + (C7885 - C7884) * C31874) *
                C7403 +
            ((C6422 - C6421) * C30875 + (C6424 - C6423) * C32188 +
             (C31966 * C6327 - C113 * C6326) * C30856 +
             (C31966 * C6329 - C113 * C6328) * C31874) *
                C32248) *
               C573) *
              C467) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31966 * C126 - C113 * C119) * C2654 +
             (C31966 * C140 - C113 * C127) * C2648 + (C148 - C149) * C2655 +
             (C150 - C151) * C2649 + C168 * C2656 + C169 * C2650 +
             C170 * C2657 + C171 * C32242) *
                C32207 +
            ((C966 - C967) * C2654 + (C968 - C969) * C2648 + C1297 * C2655 +
             C1298 * C2649 + C816 * C2656 + C817 * C2650 + C2659 * C2657 +
             C2660 * C32242) *
                C32013) *
               C572 +
           (((C113 * C344 - C31966 * C354) * C2654 +
             (C113 * C355 - C31966 * C374) * C2648 + (C579 - C580) * C2655 +
             (C581 - C582) * C2649 + (C583 - C584) * C2656 +
             (C585 - C586) * C2650 + (C587 - C588) * C2657 +
             (C589 - C590) * C32242) *
                C32207 +
            ((C1631 - C1632) * C2654 + (C1633 - C1634) * C2648 +
             (C1457 - C1458) * C2655 + (C1459 - C1460) * C2649 +
             (C1461 - C1462) * C2656 + (C1463 - C1464) * C2650 +
             (C3119 - C3120) * C2657 + (C3121 - C3122) * C32242) *
                C32013) *
               C573) *
              C466 +
          ((((C967 - C966) * C2654 + (C969 - C968) * C2648 + C1299 * C2655 +
             C1300 * C2649 + C1301 * C2656 + C1302 * C2650 + C2987 * C2657 +
             C2988 * C32242) *
                C32207 +
            ((C971 - C970) * C2654 + (C973 - C972) * C2648 + C1303 * C2655 +
             C1304 * C2649 + C1305 * C2656 + C1306 * C2650 +
             (C826 - C827) * C2657 + (C828 - C829) * C32242) *
                C32013) *
               C572 +
           (((C1632 - C1631) * C2654 + (C1634 - C1633) * C2648 +
             (C1458 - C1457) * C2655 + (C1460 - C1459) * C2649 +
             (C1462 - C1461) * C2656 + (C1464 - C1463) * C2650 +
             (C3120 - C3119) * C2657 + (C3122 - C3121) * C32242) *
                C32207 +
            ((C1636 - C1635) * C2654 + (C1638 - C1637) * C2648 +
             (C1466 - C1465) * C2655 + (C1468 - C1467) * C2649 +
             (C1470 - C1469) * C2656 + (C1472 - C1471) * C2650 +
             (C31966 * C1453 - C113 * C1452) * C2657 +
             (C31966 * C1455 - C113 * C1454) * C32242) *
                C32013) *
               C573) *
              C467) *
         C31899) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C9914 * C126 - C9917 * C119 + C9915 * C354 - C9918 * C344 +
              C32241 * C364 - C9919 * C349) *
                 C30875 +
             (C9914 * C140 - C9917 * C127 + C9915 * C374 - C9918 * C355 +
              C32241 * C379 - C9919 * C365) *
                 C32188 +
             (C9921 - C9922 + C9923 - C9924 + C9925 - C9926) * C30856 +
             (C9927 - C9928 + C9929 - C9930 + C9931 - C9932) * C31874) *
                C32207 +
            ((C10893 - C10894 + C10895 - C10896 + C10897 - C10898) * C30875 +
             (C10899 - C10900 + C10901 - C10902 + C10903 - C10904) * C32188 +
             C12636 * C30856 + C12637 * C31874) *
                C32013) *
               C572 +
           (((C9917 * C344 - C9914 * C354 + C9918 * C349 - C9915 * C364 +
              C9919 * C2020 - C32241 * C2026) *
                 C30875 +
             (C9917 * C355 - C9914 * C374 + C9918 * C365 - C9915 * C379 +
              C9919 * C2027 - C32241 * C2038) *
                 C32188 +
             (C10503 - C10504 + C10505 - C10506 + C10507 - C10508) * C30856 +
             (C10509 - C10510 + C10511 - C10512 + C10513 - C10514) * C31874) *
                C32207 +
            ((C11502 - C11503 + C11504 - C11505 + C11506 - C11507) * C30875 +
             (C11508 - C11509 + C11510 - C11511 + C11512 - C11513) * C32188 +
             (C12834 - C12835 + C12836 - C12837 + C12838 - C12839) * C30856 +
             (C12840 - C12841 + C12842 - C12843 + C12844 - C12845) * C31874) *
                C32013) *
               C573) *
              C466 +
          ((((C10894 - C10893 + C10896 - C10895 + C10898 - C10897) * C30875 +
             (C10900 - C10899 + C10902 - C10901 + C10904 - C10903) * C32188 +
             C12638 * C30856 + C12639 * C31874) *
                C32207 +
            ((C10906 - C10905 + C10908 - C10907 + C10910 - C10909) * C30875 +
             (C10912 - C10911 + C10914 - C10913 + C10916 - C10915) * C32188 +
             (C11198 - C11199 + C11200 - C11201 + C11202 - C11203) * C30856 +
             (C11204 - C11205 + C11206 - C11207 + C11208 - C11209) * C31874) *
                C32013) *
               C572 +
           (((C11503 - C11502 + C11505 - C11504 + C11507 - C11506) * C30875 +
             (C11509 - C11508 + C11511 - C11510 + C11513 - C11512) * C32188 +
             (C12835 - C12834 + C12837 - C12836 + C12839 - C12838) * C30856 +
             (C12841 - C12840 + C12843 - C12842 + C12845 - C12844) * C31874) *
                C32207 +
            ((C11515 - C11514 + C11517 - C11516 + C11519 - C11518) * C30875 +
             (C11521 - C11520 + C11523 - C11522 + C11525 - C11524) * C32188 +
             (C9914 * C1121 - C9917 * C1111 + C9915 * C1133 - C9918 * C1117 +
              C32241 * C7124 - C9919 * C7123) *
                 C30856 +
             (C9914 * C1138 - C9917 * C1122 + C9915 * C1144 - C9918 * C1134 +
              C32241 * C7126 - C9919 * C7125) *
                 C31874) *
                C32013) *
               C573) *
              C467) *
         C31899) /
            (p * q * std::sqrt(p + q));
    d2ee[52] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C31966 * C126 - C113 * C119) * C2654 +
                (C31966 * C140 - C113 * C127) * C2648 + (C148 - C149) * C2655 +
                (C150 - C151) * C2649 + C168 * C2656 + C169 * C2650 +
                C170 * C2657 + C171 * C32242) *
                   C32207 +
               ((C966 - C967) * C2654 + (C968 - C969) * C2648 + C1297 * C2655 +
                C1298 * C2649 + C816 * C2656 + C817 * C2650 + C2659 * C2657 +
                C2660 * C32242) *
                   C32013) *
                  C31925 * C31911 * C110 +
              (((C149 - C148) * C2654 + (C151 - C150) * C2648 +
                (C153 - C152) * C2655 + (C155 - C154) * C2649 +
                (C157 - C156) * C2656 + (C159 - C158) * C2650 +
                (C161 - C160) * C2657 + (C163 - C162) * C32242) *
                   C32207 +
               (C1299 * C2654 + C1300 * C2648 + C1301 * C2655 + C1302 * C2649 +
                (C483 - C484) * C2656 + (C485 - C486) * C2650 +
                (C487 - C488) * C2657 + (C489 - C490) * C32242) *
                   C32013) *
                  C31925 * C31911 * C111 +
              ((C168 * C2654 + C169 * C2648 + C170 * C2655 + C171 * C2649 +
                C172 * C2656 + C173 * C2650 + (C165 - C164) * C2657 +
                (C167 - C166) * C32242) *
                   C32207 +
               (C816 * C2654 + C817 * C2648 + C2659 * C2655 + C2660 * C2649 +
                (C488 - C487) * C2656 + (C490 - C489) * C2650 +
                (C31966 * C471 - C113 * C470) * C2657 +
                (C31966 * C473 - C113 * C472) * C32242) *
                   C32013) *
                  C31925 * C31911 * C112) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C31966 * C126 - C113 * C119) * C2654 +
                (C31966 * C140 - C113 * C127) * C2648 + (C148 - C149) * C2655 +
                (C150 - C151) * C2649 + C168 * C2656 + C169 * C2650 +
                C170 * C2657 + C171 * C32242) *
                   C32207 +
               ((C966 - C967) * C2654 + (C968 - C969) * C2648 + C1297 * C2655 +
                C1298 * C2649 + C816 * C2656 + C817 * C2650 + C2659 * C2657 +
                C2660 * C32242) *
                   C32013) *
                  C31925 * C235 +
              (((C967 - C966) * C2654 + (C969 - C968) * C2648 + C1299 * C2655 +
                C1300 * C2649 + C1301 * C2656 + C1302 * C2650 +
                (C483 - C484) * C2657 + (C485 - C486) * C32242) *
                   C32207 +
               ((C971 - C970) * C2654 + (C973 - C972) * C2648 + C1303 * C2655 +
                C1304 * C2649 + C1305 * C2656 + C1306 * C2650 +
                (C826 - C827) * C2657 + (C828 - C829) * C32242) *
                   C32013) *
                  C31925 * C236 +
              ((C990 * C2654 + C991 * C2648 + C974 * C2655 + C975 * C2649 +
                C830 * C2656 + C831 * C2650 + (C827 - C826) * C2657 +
                (C829 - C828) * C32242) *
                   C32207 +
               ((C979 - C978) * C2654 + (C981 - C980) * C2648 +
                (C983 - C982) * C2655 + (C985 - C984) * C2649 +
                (C987 - C986) * C2656 + (C989 - C988) * C2650 +
                (C31966 * C1293 - C113 * C1292) * C2657 +
                (C31966 * C1295 - C113 * C1294) * C32242) *
                   C32013) *
                  C31925 * C237) *
             C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31966 * C126 - C113 * C119) * C2654 +
            (C31966 * C140 - C113 * C127) * C2648 + (C148 - C149) * C2655 +
            (C150 - C151) * C2649 + C168 * C2656 + C169 * C2650 + C170 * C2657 +
            C171 * C32242) *
               C32207 +
           ((C966 - C967) * C2654 + (C968 - C969) * C2648 + C1297 * C2655 +
            C1298 * C2649 + C816 * C2656 + C817 * C2650 + C2659 * C2657 +
            C2660 * C32242) *
               C32013) *
              C341 +
          (((C113 * C344 - C31966 * C354) * C2654 +
            (C113 * C355 - C31966 * C374) * C2648 + (C579 - C580) * C2655 +
            (C581 - C582) * C2649 + (C583 - C584) * C2656 +
            (C585 - C586) * C2650 + (C587 - C588) * C2657 +
            (C589 - C590) * C32242) *
               C32207 +
           ((C1631 - C1632) * C2654 + (C1633 - C1634) * C2648 +
            (C1457 - C1458) * C2655 + (C1459 - C1460) * C2649 +
            (C1461 - C1462) * C2656 + (C1463 - C1464) * C2650 +
            (C113 * C679 - C31966 * C687) * C2657 +
            (C113 * C688 - C31966 * C694) * C32242) *
               C32013) *
              C342 +
          (((C31966 * C364 - C113 * C349) * C2654 +
            (C31966 * C379 - C113 * C365) * C2648 +
            (C31966 * C366 - C113 * C350) * C2655 +
            (C31966 * C380 - C113 * C367) * C2649 +
            (C31966 * C368 - C113 * C351) * C2656 +
            (C31966 * C381 - C113 * C369) * C2650 +
            (C31966 * C370 - C113 * C352) * C2657 +
            (C31966 * C382 - C113 * C371) * C32242) *
               C32207 +
           ((C31966 * C1125 - C113 * C1113) * C2654 +
            (C31966 * C1140 - C113 * C1126) * C2648 +
            (C31966 * C1127 - C113 * C1114) * C2655 +
            (C31966 * C1141 - C113 * C1128) * C2649 +
            (C31966 * C1129 - C113 * C1115) * C2656 +
            (C31966 * C1142 - C113 * C1130) * C2650 +
            (C31966 * C2191 - C113 * C2190) * C2657 +
            (C31966 * C2193 - C113 * C2192) * C32242) *
               C32013) *
              C343) *
         C31911 * C31899) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C31966 * C126 - C113 * C119) * C30875 +
            (C31966 * C140 - C113 * C127) * C32188 + (C148 - C149) * C30856 +
            (C150 - C151) * C31874) *
               C7401 +
           ((C966 - C967) * C30875 + (C968 - C969) * C32188 + C1297 * C30856 +
            C1298 * C31874) *
               C7402 +
           (C990 * C30875 + C991 * C32188 + C974 * C30856 + C975 * C31874) *
               C7403 +
           (C6062 * C30875 + C6063 * C32188 + (C983 - C982) * C30856 +
            (C985 - C984) * C31874) *
               C32248) *
              C31925 * C31911 * C110 +
          (((C149 - C148) * C30875 + (C151 - C150) * C32188 +
            (C153 - C152) * C30856 + (C155 - C154) * C31874) *
               C7401 +
           (C1299 * C30875 + C1300 * C32188 + C1301 * C30856 + C1302 * C31874) *
               C7402 +
           (C1303 * C30875 + C1304 * C32188 + C1305 * C30856 + C1306 * C31874) *
               C7403 +
           ((C982 - C983) * C30875 + (C984 - C985) * C32188 +
            (C986 - C987) * C30856 + (C988 - C989) * C31874) *
               C32248) *
              C31925 * C31911 * C111 +
          ((C168 * C30875 + C169 * C32188 + C170 * C30856 + C171 * C31874) *
               C7401 +
           (C816 * C30875 + C817 * C32188 + C2659 * C30856 + C2660 * C31874) *
               C7402 +
           (C830 * C30875 + C831 * C32188 + (C827 - C826) * C30856 +
            (C829 - C828) * C31874) *
               C7403 +
           ((C987 - C986) * C30875 + (C989 - C988) * C32188 +
            (C31966 * C1293 - C113 * C1292) * C30856 +
            (C31966 * C1295 - C113 * C1294) * C31874) *
               C32248) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C31966 * C126 - C113 * C119) * C30875 +
            (C31966 * C140 - C113 * C127) * C32188 + (C148 - C149) * C30856 +
            (C150 - C151) * C31874) *
               C7401 +
           ((C966 - C967) * C30875 + (C968 - C969) * C32188 + C1297 * C30856 +
            C1298 * C31874) *
               C7402 +
           C7520 * C7403 + C7521 * C32248) *
              C31925 * C235 +
          (((C967 - C966) * C30875 + (C969 - C968) * C32188 + C1299 * C30856 +
            C1300 * C31874) *
               C7401 +
           ((C971 - C970) * C30875 + (C973 - C972) * C32188 + C1303 * C30856 +
            C1304 * C31874) *
               C7402 +
           ((C978 - C979) * C30875 + (C980 - C981) * C32188 +
            (C982 - C983) * C30856 + (C984 - C985) * C31874) *
               C7403 +
           ((C6065 - C6064) * C30875 + (C6067 - C6066) * C32188 +
            (C6241 - C6242) * C30856 + (C6243 - C6244) * C31874) *
               C32248) *
              C31925 * C236 +
          (C7520 * C7401 + C7521 * C7402 +
           (C6075 * C30875 + C6076 * C32188 + (C6242 - C6241) * C30856 +
            (C6244 - C6243) * C31874) *
               C7403 +
           ((C6069 - C6068) * C30875 + (C6071 - C6070) * C32188 +
            (C31966 * C6237 - C113 * C6236) * C30856 +
            (C31966 * C6239 - C113 * C6238) * C31874) *
               C32248) *
              C31925 * C237) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31966 * C126 - C113 * C119) * C30875 +
            (C31966 * C140 - C113 * C127) * C32188 + (C148 - C149) * C30856 +
            (C150 - C151) * C31874) *
               C7401 +
           ((C966 - C967) * C30875 + (C968 - C969) * C32188 + C1297 * C30856 +
            C1298 * C31874) *
               C7402 +
           C7520 * C7403 + C7521 * C32248) *
              C341 +
          (((C113 * C344 - C31966 * C354) * C30875 +
            (C113 * C355 - C31966 * C374) * C32188 + (C579 - C580) * C30856 +
            (C581 - C582) * C31874) *
               C7401 +
           ((C1631 - C1632) * C30875 + (C1633 - C1634) * C32188 +
            (C1457 - C1458) * C30856 + (C1459 - C1460) * C31874) *
               C7402 +
           ((C1635 - C1636) * C30875 + (C1637 - C1638) * C32188 +
            (C1465 - C1466) * C30856 + (C1467 - C1468) * C31874) *
               C7403 +
           ((C6417 - C6418) * C30875 + (C6419 - C6420) * C32188 +
            (C113 * C1619 - C31966 * C1623) * C30856 +
            (C113 * C1624 - C31966 * C1628) * C31874) *
               C32248) *
              C342 +
          (((C31966 * C364 - C113 * C349) * C30875 +
            (C31966 * C379 - C113 * C365) * C32188 +
            (C31966 * C366 - C113 * C350) * C30856 +
            (C31966 * C380 - C113 * C367) * C31874) *
               C7401 +
           ((C31966 * C1125 - C113 * C1113) * C30875 +
            (C31966 * C1140 - C113 * C1126) * C32188 +
            (C31966 * C1127 - C113 * C1114) * C30856 +
            (C31966 * C1141 - C113 * C1128) * C31874) *
               C7402 +
           ((C31966 * C1131 - C113 * C1116) * C30875 +
            (C31966 * C1143 - C113 * C1132) * C32188 +
            (C31966 * C1133 - C113 * C1117) * C30856 +
            (C31966 * C1144 - C113 * C1134) * C31874) *
               C7403 +
           ((C31966 * C6147 - C113 * C6143) * C30875 +
            (C31966 * C6152 - C113 * C6148) * C32188 +
            (C31966 * C6962 - C113 * C6961) * C30856 +
            (C31966 * C6964 - C113 * C6963) * C31874) *
               C32248) *
              C343) *
         C31911 * C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C9914 * C126 - C9917 * C119 + C9915 * C354 - C9918 * C344 +
             C32241 * C364 - C9919 * C349) *
                C30875 +
            (C9914 * C140 - C9917 * C127 + C9915 * C374 - C9918 * C355 +
             C32241 * C379 - C9919 * C365) *
                C32188 +
            (C9921 - C9922 + C9923 - C9924 + C9925 - C9926) * C30856 +
            (C9927 - C9928 + C9929 - C9930 + C9931 - C9932) * C31874) *
               C32207 +
           ((C10893 - C10894 + C10895 - C10896 + C10897 - C10898) * C30875 +
            (C10899 - C10900 + C10901 - C10902 + C10903 - C10904) * C32188 +
            (C10334 - C10333 + C10336 - C10335 + C10338 - C10337) * C30856 +
            (C10340 - C10339 + C10342 - C10341 + C10344 - C10343) * C31874) *
               C32013) *
              C31925 * C31911 * C110 +
          (((C9922 - C9921 + C9924 - C9923 + C9926 - C9925) * C30875 +
            (C9928 - C9927 + C9930 - C9929 + C9932 - C9931) * C32188 +
            (C9934 - C9933 + C9936 - C9935 + C9938 - C9937) * C30856 +
            (C9940 - C9939 + C9942 - C9941 + C9944 - C9943) * C31874) *
               C32207 +
           ((C10333 - C10334 + C10335 - C10336 + C10337 - C10338) * C30875 +
            (C10339 - C10340 + C10341 - C10342 + C10343 - C10344) * C32188 +
            (C10345 - C10346 + C10347 - C10348 + C10349 - C10350) * C30856 +
            (C10351 - C10352 + C10353 - C10354 + C10355 - C10356) * C31874) *
               C32013) *
              C31925 * C31911 * C111 +
          ((C9965 * C30875 + C9966 * C32188 +
            (C9946 - C9945 + C9948 - C9947 + C9950 - C9949) * C30856 +
            (C9952 - C9951 + C9954 - C9953 + C9956 - C9955) * C31874) *
               C32207 +
           ((C10346 - C10345 + C10348 - C10347 + C10350 - C10349) * C30875 +
            (C10352 - C10351 + C10354 - C10353 + C10356 - C10355) * C32188 +
            (C9914 * C255 - C9917 * C242 + C9915 * C687 - C9918 * C679 +
             C32241 * C2191 - C9919 * C2190) *
                C30856 +
            (C9914 * C272 - C9917 * C256 + C9915 * C694 - C9918 * C688 +
             C32241 * C2193 - C9919 * C2192) *
                C31874) *
               C32013) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C9914 * C126 - C9917 * C119 + C9915 * C354 - C9918 * C344 +
             C32241 * C364 - C9919 * C349) *
                C30875 +
            (C9914 * C140 - C9917 * C127 + C9915 * C374 - C9918 * C355 +
             C32241 * C379 - C9919 * C365) *
                C32188 +
            (C9921 - C9922 + C9923 - C9924 + C9925 - C9926) * C30856 +
            (C9927 - C9928 + C9929 - C9930 + C9931 - C9932) * C31874) *
               C32207 +
           ((C10893 - C10894 + C10895 - C10896 + C10897 - C10898) * C30875 +
            (C10899 - C10900 + C10901 - C10902 + C10903 - C10904) * C32188 +
            (C10334 - C10333 + C10336 - C10335 + C10338 - C10337) * C30856 +
            (C10340 - C10339 + C10342 - C10341 + C10344 - C10343) * C31874) *
               C32013) *
              C31925 * C235 +
          (((C10894 - C10893 + C10896 - C10895 + C10898 - C10897) * C30875 +
            (C10900 - C10899 + C10902 - C10901 + C10904 - C10903) * C32188 +
            (C10333 - C10334 + C10335 - C10336 + C10337 - C10338) * C30856 +
            (C10339 - C10340 + C10341 - C10342 + C10343 - C10344) * C31874) *
               C32207 +
           ((C10906 - C10905 + C10908 - C10907 + C10910 - C10909) * C30875 +
            (C10912 - C10911 + C10914 - C10913 + C10916 - C10915) * C32188 +
            (C11198 - C11199 + C11200 - C11201 + C11202 - C11203) * C30856 +
            (C11204 - C11205 + C11206 - C11207 + C11208 - C11209) * C31874) *
               C32013) *
              C31925 * C236 +
          ((C10937 * C30875 + C10938 * C32188 +
            (C11199 - C11198 + C11201 - C11200 + C11203 - C11202) * C30856 +
            (C11205 - C11204 + C11207 - C11206 + C11209 - C11208) * C31874) *
               C32207 +
           ((C10918 - C10917 + C10920 - C10919 + C10922 - C10921) * C30875 +
            (C10924 - C10923 + C10926 - C10925 + C10928 - C10927) * C32188 +
            (C9914 * C949 - C9917 * C942 + C9915 * C1623 - C9918 * C1619 +
             C32241 * C6962 - C9919 * C6961) *
                C30856 +
            (C9914 * C960 - C9917 * C950 + C9915 * C1628 - C9918 * C1624 +
             C32241 * C6964 - C9919 * C6963) *
                C31874) *
               C32013) *
              C31925 * C237) *
         C31899) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C9914 * C126 - C9917 * C119 + C9915 * C354 - C9918 * C344 +
             C32241 * C364 - C9919 * C349) *
                C30875 +
            (C9914 * C140 - C9917 * C127 + C9915 * C374 - C9918 * C355 +
             C32241 * C379 - C9919 * C365) *
                C32188 +
            (C9921 - C9922 + C9923 - C9924 + C9925 - C9926) * C30856 +
            (C9927 - C9928 + C9929 - C9930 + C9931 - C9932) * C31874) *
               C32207 +
           ((C10893 - C10894 + C10895 - C10896 + C10897 - C10898) * C30875 +
            (C10899 - C10900 + C10901 - C10902 + C10903 - C10904) * C32188 +
            (C10334 - C10333 + C10336 - C10335 + C10338 - C10337) * C30856 +
            (C10340 - C10339 + C10342 - C10341 + C10344 - C10343) * C31874) *
               C32013) *
              C341 +
          (((C9917 * C344 - C9914 * C354 + C9918 * C349 - C9915 * C364 +
             C9919 * C2020 - C32241 * C2026) *
                C30875 +
            (C9917 * C355 - C9914 * C374 + C9918 * C365 - C9915 * C379 +
             C9919 * C2027 - C32241 * C2038) *
                C32188 +
            (C10503 - C10504 + C10505 - C10506 + C10507 - C10508) * C30856 +
            (C10509 - C10510 + C10511 - C10512 + C10513 - C10514) * C31874) *
               C32207 +
           ((C11502 - C11503 + C11504 - C11505 + C11506 - C11507) * C30875 +
            (C11508 - C11509 + C11510 - C11511 + C11512 - C11513) * C32188 +
            (C9917 * C677 - C9914 * C683 + C9918 * C1114 - C9915 * C1127 +
             C9919 * C2539 - C32241 * C2543) *
                C30856 +
            (C9917 * C684 - C9914 * C692 + C9918 * C1128 - C9915 * C1141 +
             C9919 * C2544 - C32241 * C2548) *
                C31874) *
               C32013) *
              C342 +
          (((C9914 * C364 - C9917 * C349 + C9915 * C2026 - C9918 * C2020 +
             C32241 * C2032 - C9919 * C2023) *
                C30875 +
            (C9914 * C379 - C9917 * C365 + C9915 * C2038 - C9918 * C2027 +
             C32241 * C2041 - C9919 * C2033) *
                C32188 +
            (C9914 * C366 - C9917 * C350 + C9915 * C2028 - C9918 * C2021 +
             C32241 * C2034 - C9919 * C2024) *
                C30856 +
            (C9914 * C380 - C9917 * C367 + C9915 * C2039 - C9918 * C2029 +
             C32241 * C2042 - C9919 * C2035) *
                C31874) *
               C32207 +
           ((C9914 * C1125 - C9917 * C1113 + C9915 * C2541 - C9918 * C2538 +
             C32241 * C6808 - C9919 * C6804) *
                C30875 +
            (C9914 * C1140 - C9917 * C1126 + C9915 * C2547 - C9918 * C2542 +
             C32241 * C6813 - C9919 * C6809) *
                C32188 +
            (C9914 * C1127 - C9917 * C1114 + C9915 * C2543 - C9918 * C2539 +
             C32241 * C11812 - C9919 * C11811) *
                C30856 +
            (C9914 * C1141 - C9917 * C1128 + C9915 * C2548 - C9918 * C2544 +
             C32241 * C11814 - C9919 * C11813) *
                C31874) *
               C32013) *
              C343) *
         C31911 * C31899) /
            (p * q * std::sqrt(p + q));
    d2ee[53] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31966 * C126 - C113 * C119) * C30875 +
             (C31966 * C140 - C113 * C127) * C32188 + (C148 - C149) * C30856 +
             (C150 - C151) * C31874) *
                C7401 +
            ((C966 - C967) * C30875 + (C968 - C969) * C32188 + C1297 * C30856 +
             C1298 * C31874) *
                C7402 +
            C7520 * C7403 + C7521 * C32248) *
               C572 +
           (((C113 * C344 - C31966 * C354) * C30875 +
             (C113 * C355 - C31966 * C374) * C32188 + (C579 - C580) * C30856 +
             (C581 - C582) * C31874) *
                C7401 +
            ((C1631 - C1632) * C30875 + (C1633 - C1634) * C32188 +
             (C1457 - C1458) * C30856 + (C1459 - C1460) * C31874) *
                C7402 +
            ((C1635 - C1636) * C30875 + (C1637 - C1638) * C32188 +
             (C1465 - C1466) * C30856 + (C1467 - C1468) * C31874) *
                C7403 +
            ((C6417 - C6418) * C30875 + (C6419 - C6420) * C32188 +
             (C7882 - C7883) * C30856 + (C7884 - C7885) * C31874) *
                C32248) *
               C573) *
              C31911 * C468 +
          ((((C149 - C148) * C30875 + (C151 - C150) * C32188 +
             (C153 - C152) * C30856 + (C155 - C154) * C31874) *
                C7401 +
            (C1299 * C30875 + C1300 * C32188 + C1301 * C30856 +
             C1302 * C31874) *
                C7402 +
            (C1303 * C30875 + C1304 * C32188 + C1305 * C30856 +
             C1306 * C31874) *
                C7403 +
            (C7750 * C30875 + C7751 * C32188 + (C986 - C987) * C30856 +
             (C988 - C989) * C31874) *
                C32248) *
               C572 +
           (((C580 - C579) * C30875 + (C582 - C581) * C32188 +
             (C584 - C583) * C30856 + (C586 - C585) * C31874) *
                C7401 +
            ((C1458 - C1457) * C30875 + (C1460 - C1459) * C32188 +
             (C1462 - C1461) * C30856 + (C1464 - C1463) * C31874) *
                C7402 +
            ((C1466 - C1465) * C30875 + (C1468 - C1467) * C32188 +
             (C1470 - C1469) * C30856 + (C1472 - C1471) * C31874) *
                C7403 +
            ((C7883 - C7882) * C30875 + (C7885 - C7884) * C32188 +
             (C31966 * C1625 - C113 * C1620) * C30856 +
             (C31966 * C1629 - C113 * C1626) * C31874) *
                C32248) *
               C573) *
              C31911 * C469)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31966 * C126 - C113 * C119) * C2654 +
             (C31966 * C140 - C113 * C127) * C2648 + (C148 - C149) * C2655 +
             (C150 - C151) * C2649 + C168 * C2656 + C169 * C2650 +
             C170 * C2657 + C171 * C32242) *
                C32207 +
            ((C966 - C967) * C2654 + (C968 - C969) * C2648 + C1297 * C2655 +
             C1298 * C2649 + C816 * C2656 + C817 * C2650 + C2659 * C2657 +
             C2660 * C32242) *
                C32013) *
               C572 +
           (((C113 * C344 - C31966 * C354) * C2654 +
             (C113 * C355 - C31966 * C374) * C2648 + (C579 - C580) * C2655 +
             (C581 - C582) * C2649 + (C583 - C584) * C2656 +
             (C585 - C586) * C2650 + (C587 - C588) * C2657 +
             (C589 - C590) * C32242) *
                C32207 +
            ((C1631 - C1632) * C2654 + (C1633 - C1634) * C2648 +
             (C1457 - C1458) * C2655 + (C1459 - C1460) * C2649 +
             (C1461 - C1462) * C2656 + (C1463 - C1464) * C2650 +
             (C3119 - C3120) * C2657 + (C3121 - C3122) * C32242) *
                C32013) *
               C573) *
              C31911 * C468 +
          ((((C149 - C148) * C2654 + (C151 - C150) * C2648 +
             (C153 - C152) * C2655 + (C155 - C154) * C2649 +
             (C157 - C156) * C2656 + (C159 - C158) * C2650 +
             (C161 - C160) * C2657 + (C163 - C162) * C32242) *
                C32207 +
            (C1299 * C2654 + C1300 * C2648 + C1301 * C2655 + C1302 * C2649 +
             C2987 * C2656 + C2988 * C2650 + (C487 - C488) * C2657 +
             (C489 - C490) * C32242) *
                C32013) *
               C572 +
           (((C580 - C579) * C2654 + (C582 - C581) * C2648 +
             (C584 - C583) * C2655 + (C586 - C585) * C2649 +
             (C588 - C587) * C2656 + (C590 - C589) * C2650 +
             (C592 - C591) * C2657 + (C594 - C593) * C32242) *
                C32207 +
            ((C1458 - C1457) * C2654 + (C1460 - C1459) * C2648 +
             (C1462 - C1461) * C2655 + (C1464 - C1463) * C2649 +
             (C3120 - C3119) * C2656 + (C3122 - C3121) * C2650 +
             (C31966 * C689 - C113 * C680) * C2657 +
             (C31966 * C695 - C113 * C690) * C32242) *
                C32013) *
               C573) *
              C31911 * C469)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C9914 * C126 - C9917 * C119 + C9915 * C354 - C9918 * C344 +
              C32241 * C364 - C9919 * C349) *
                 C30875 +
             (C9914 * C140 - C9917 * C127 + C9915 * C374 - C9918 * C355 +
              C32241 * C379 - C9919 * C365) *
                 C32188 +
             (C9921 - C9922 + C9923 - C9924 + C9925 - C9926) * C30856 +
             (C9927 - C9928 + C9929 - C9930 + C9931 - C9932) * C31874) *
                C32207 +
            ((C10893 - C10894 + C10895 - C10896 + C10897 - C10898) * C30875 +
             (C10899 - C10900 + C10901 - C10902 + C10903 - C10904) * C32188 +
             C12636 * C30856 + C12637 * C31874) *
                C32013) *
               C572 +
           (((C9917 * C344 - C9914 * C354 + C9918 * C349 - C9915 * C364 +
              C9919 * C2020 - C32241 * C2026) *
                 C30875 +
             (C9917 * C355 - C9914 * C374 + C9918 * C365 - C9915 * C379 +
              C9919 * C2027 - C32241 * C2038) *
                 C32188 +
             (C10503 - C10504 + C10505 - C10506 + C10507 - C10508) * C30856 +
             (C10509 - C10510 + C10511 - C10512 + C10513 - C10514) * C31874) *
                C32207 +
            ((C11502 - C11503 + C11504 - C11505 + C11506 - C11507) * C30875 +
             (C11508 - C11509 + C11510 - C11511 + C11512 - C11513) * C32188 +
             (C12834 - C12835 + C12836 - C12837 + C12838 - C12839) * C30856 +
             (C12840 - C12841 + C12842 - C12843 + C12844 - C12845) * C31874) *
                C32013) *
               C573) *
              C31911 * C468 +
          ((((C9922 - C9921 + C9924 - C9923 + C9926 - C9925) * C30875 +
             (C9928 - C9927 + C9930 - C9929 + C9932 - C9931) * C32188 +
             (C9934 - C9933 + C9936 - C9935 + C9938 - C9937) * C30856 +
             (C9940 - C9939 + C9942 - C9941 + C9944 - C9943) * C31874) *
                C32207 +
            (C12638 * C30875 + C12639 * C32188 +
             (C10345 - C10346 + C10347 - C10348 + C10349 - C10350) * C30856 +
             (C10351 - C10352 + C10353 - C10354 + C10355 - C10356) * C31874) *
                C32013) *
               C572 +
           (((C10504 - C10503 + C10506 - C10505 + C10508 - C10507) * C30875 +
             (C10510 - C10509 + C10512 - C10511 + C10514 - C10513) * C32188 +
             (C10516 - C10515 + C10518 - C10517 + C10520 - C10519) * C30856 +
             (C10522 - C10521 + C10524 - C10523 + C10526 - C10525) * C31874) *
                C32207 +
            ((C12835 - C12834 + C12837 - C12836 + C12839 - C12838) * C30875 +
             (C12841 - C12840 + C12843 - C12842 + C12845 - C12844) * C32188 +
             (C9914 * C685 - C9917 * C678 + C9915 * C1129 - C9918 * C1115 +
              C32241 * C2545 - C9919 * C2540) *
                 C30856 +
             (C9914 * C693 - C9917 * C686 + C9915 * C1142 - C9918 * C1130 +
              C32241 * C2549 - C9919 * C2546) *
                 C31874) *
                C32013) *
               C573) *
              C31911 * C469)) /
            (p * q * std::sqrt(p + q));
    d2ee[54] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31966 * C126 - C113 * C119) * C2654 +
            (C31966 * C140 - C113 * C127) * C2648 + (C148 - C149) * C2655 +
            (C150 - C151) * C2649 + C168 * C2656 + C169 * C2650 + C170 * C2657 +
            C171 * C32242) *
               C32207 +
           ((C966 - C967) * C2654 + (C968 - C969) * C2648 + C1297 * C2655 +
            C1298 * C2649 + C816 * C2656 + C817 * C2650 + C2659 * C2657 +
            C2660 * C32242) *
               C32013) *
              C31925 * C235 +
          (((C967 - C966) * C2654 + (C969 - C968) * C2648 + C1299 * C2655 +
            C1300 * C2649 + C1301 * C2656 + C1302 * C2650 +
            (C483 - C484) * C2657 + (C485 - C486) * C32242) *
               C32207 +
           ((C971 - C970) * C2654 + (C973 - C972) * C2648 + C1303 * C2655 +
            C1304 * C2649 + C1305 * C2656 + C1306 * C2650 +
            (C826 - C827) * C2657 + (C828 - C829) * C32242) *
               C32013) *
              C31925 * C236 +
          ((C990 * C2654 + C991 * C2648 + C974 * C2655 + C975 * C2649 +
            C830 * C2656 + C831 * C2650 + (C827 - C826) * C2657 +
            (C829 - C828) * C32242) *
               C32207 +
           ((C979 - C978) * C2654 + (C981 - C980) * C2648 +
            (C983 - C982) * C2655 + (C985 - C984) * C2649 +
            (C987 - C986) * C2656 + (C989 - C988) * C2650 +
            (C31966 * C1293 - C113 * C1292) * C2657 +
            (C31966 * C1295 - C113 * C1294) * C32242) *
               C32013) *
              C31925 * C237) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31966 * C126 - C113 * C119) * C2654 +
            (C31966 * C140 - C113 * C127) * C2648 + (C148 - C149) * C2655 +
            (C150 - C151) * C2649 + C168 * C2656 + C169 * C2650 + C170 * C2657 +
            C171 * C32242) *
               C32207 +
           ((C966 - C967) * C2654 + (C968 - C969) * C2648 + C1297 * C2655 +
            C1298 * C2649 + C816 * C2656 + C817 * C2650 + C2659 * C2657 +
            C2660 * C32242) *
               C32013) *
              C31925 * C31911 * C110 +
          (((C149 - C148) * C2654 + (C151 - C150) * C2648 +
            (C153 - C152) * C2655 + (C155 - C154) * C2649 +
            (C157 - C156) * C2656 + (C159 - C158) * C2650 +
            (C161 - C160) * C2657 + (C163 - C162) * C32242) *
               C32207 +
           (C1299 * C2654 + C1300 * C2648 + C1301 * C2655 + C1302 * C2649 +
            (C483 - C484) * C2656 + (C485 - C486) * C2650 +
            (C487 - C488) * C2657 + (C489 - C490) * C32242) *
               C32013) *
              C31925 * C31911 * C111 +
          ((C168 * C2654 + C169 * C2648 + C170 * C2655 + C171 * C2649 +
            C172 * C2656 + C173 * C2650 + (C165 - C164) * C2657 +
            (C167 - C166) * C32242) *
               C32207 +
           (C816 * C2654 + C817 * C2648 + C2659 * C2655 + C2660 * C2649 +
            (C488 - C487) * C2656 + (C490 - C489) * C2650 +
            (C31966 * C471 - C113 * C470) * C2657 +
            (C31966 * C473 - C113 * C472) * C32242) *
               C32013) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31966 * C126 - C113 * C119) * C30875 +
            (C31966 * C140 - C113 * C127) * C32188 + (C148 - C149) * C30856 +
            (C150 - C151) * C31874) *
               C7401 +
           ((C966 - C967) * C30875 + (C968 - C969) * C32188 + C1297 * C30856 +
            C1298 * C31874) *
               C7402 +
           (C990 * C30875 + C991 * C32188 + C974 * C30856 + C975 * C31874) *
               C7403 +
           (C6062 * C30875 + C6063 * C32188 + (C983 - C982) * C30856 +
            (C985 - C984) * C31874) *
               C32248) *
              C31925 * C31911 * C110 +
          (((C149 - C148) * C30875 + (C151 - C150) * C32188 +
            (C153 - C152) * C30856 + (C155 - C154) * C31874) *
               C7401 +
           (C1299 * C30875 + C1300 * C32188 + C1301 * C30856 + C1302 * C31874) *
               C7402 +
           (C1303 * C30875 + C1304 * C32188 + C1305 * C30856 + C1306 * C31874) *
               C7403 +
           ((C982 - C983) * C30875 + (C984 - C985) * C32188 +
            (C986 - C987) * C30856 + (C988 - C989) * C31874) *
               C32248) *
              C31925 * C31911 * C111 +
          ((C168 * C30875 + C169 * C32188 + C170 * C30856 + C171 * C31874) *
               C7401 +
           (C816 * C30875 + C817 * C32188 + C2659 * C30856 + C2660 * C31874) *
               C7402 +
           (C830 * C30875 + C831 * C32188 + (C827 - C826) * C30856 +
            (C829 - C828) * C31874) *
               C7403 +
           ((C987 - C986) * C30875 + (C989 - C988) * C32188 +
            (C31966 * C1293 - C113 * C1292) * C30856 +
            (C31966 * C1295 - C113 * C1294) * C31874) *
               C32248) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31966 * C126 - C113 * C119) * C30875 +
            (C31966 * C140 - C113 * C127) * C32188 + (C148 - C149) * C30856 +
            (C150 - C151) * C31874) *
               C7401 +
           ((C966 - C967) * C30875 + (C968 - C969) * C32188 + C1297 * C30856 +
            C1298 * C31874) *
               C7402 +
           C7520 * C7403 + C7521 * C32248) *
              C31925 * C235 +
          (((C967 - C966) * C30875 + (C969 - C968) * C32188 + C1299 * C30856 +
            C1300 * C31874) *
               C7401 +
           ((C971 - C970) * C30875 + (C973 - C972) * C32188 + C1303 * C30856 +
            C1304 * C31874) *
               C7402 +
           ((C978 - C979) * C30875 + (C980 - C981) * C32188 +
            (C982 - C983) * C30856 + (C984 - C985) * C31874) *
               C7403 +
           ((C6065 - C6064) * C30875 + (C6067 - C6066) * C32188 +
            (C6241 - C6242) * C30856 + (C6243 - C6244) * C31874) *
               C32248) *
              C31925 * C236 +
          (C7520 * C7401 + C7521 * C7402 +
           (C6075 * C30875 + C6076 * C32188 + (C6242 - C6241) * C30856 +
            (C6244 - C6243) * C31874) *
               C7403 +
           ((C6069 - C6068) * C30875 + (C6071 - C6070) * C32188 +
            (C31966 * C6237 - C113 * C6236) * C30856 +
            (C31966 * C6239 - C113 * C6238) * C31874) *
               C32248) *
              C31925 * C237) *
         C31899) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C9914 * C126 - C9917 * C119 + C9915 * C354 - C9918 * C344 +
             C32241 * C364 - C9919 * C349) *
                C30875 +
            (C9914 * C140 - C9917 * C127 + C9915 * C374 - C9918 * C355 +
             C32241 * C379 - C9919 * C365) *
                C32188 +
            (C9921 - C9922 + C9923 - C9924 + C9925 - C9926) * C30856 +
            (C9927 - C9928 + C9929 - C9930 + C9931 - C9932) * C31874) *
               C32207 +
           ((C10893 - C10894 + C10895 - C10896 + C10897 - C10898) * C30875 +
            (C10899 - C10900 + C10901 - C10902 + C10903 - C10904) * C32188 +
            (C10334 - C10333 + C10336 - C10335 + C10338 - C10337) * C30856 +
            (C10340 - C10339 + C10342 - C10341 + C10344 - C10343) * C31874) *
               C32013) *
              C31925 * C31911 * C110 +
          (((C9922 - C9921 + C9924 - C9923 + C9926 - C9925) * C30875 +
            (C9928 - C9927 + C9930 - C9929 + C9932 - C9931) * C32188 +
            (C9934 - C9933 + C9936 - C9935 + C9938 - C9937) * C30856 +
            (C9940 - C9939 + C9942 - C9941 + C9944 - C9943) * C31874) *
               C32207 +
           ((C10333 - C10334 + C10335 - C10336 + C10337 - C10338) * C30875 +
            (C10339 - C10340 + C10341 - C10342 + C10343 - C10344) * C32188 +
            (C10345 - C10346 + C10347 - C10348 + C10349 - C10350) * C30856 +
            (C10351 - C10352 + C10353 - C10354 + C10355 - C10356) * C31874) *
               C32013) *
              C31925 * C31911 * C111 +
          ((C9965 * C30875 + C9966 * C32188 +
            (C9946 - C9945 + C9948 - C9947 + C9950 - C9949) * C30856 +
            (C9952 - C9951 + C9954 - C9953 + C9956 - C9955) * C31874) *
               C32207 +
           ((C10346 - C10345 + C10348 - C10347 + C10350 - C10349) * C30875 +
            (C10352 - C10351 + C10354 - C10353 + C10356 - C10355) * C32188 +
            (C9914 * C255 - C9917 * C242 + C9915 * C687 - C9918 * C679 +
             C32241 * C2191 - C9919 * C2190) *
                C30856 +
            (C9914 * C272 - C9917 * C256 + C9915 * C694 - C9918 * C688 +
             C32241 * C2193 - C9919 * C2192) *
                C31874) *
               C32013) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C9914 * C126 - C9917 * C119 + C9915 * C354 - C9918 * C344 +
             C32241 * C364 - C9919 * C349) *
                C30875 +
            (C9914 * C140 - C9917 * C127 + C9915 * C374 - C9918 * C355 +
             C32241 * C379 - C9919 * C365) *
                C32188 +
            (C9921 - C9922 + C9923 - C9924 + C9925 - C9926) * C30856 +
            (C9927 - C9928 + C9929 - C9930 + C9931 - C9932) * C31874) *
               C32207 +
           ((C10893 - C10894 + C10895 - C10896 + C10897 - C10898) * C30875 +
            (C10899 - C10900 + C10901 - C10902 + C10903 - C10904) * C32188 +
            (C10334 - C10333 + C10336 - C10335 + C10338 - C10337) * C30856 +
            (C10340 - C10339 + C10342 - C10341 + C10344 - C10343) * C31874) *
               C32013) *
              C31925 * C235 +
          (((C10894 - C10893 + C10896 - C10895 + C10898 - C10897) * C30875 +
            (C10900 - C10899 + C10902 - C10901 + C10904 - C10903) * C32188 +
            (C10333 - C10334 + C10335 - C10336 + C10337 - C10338) * C30856 +
            (C10339 - C10340 + C10341 - C10342 + C10343 - C10344) * C31874) *
               C32207 +
           ((C10906 - C10905 + C10908 - C10907 + C10910 - C10909) * C30875 +
            (C10912 - C10911 + C10914 - C10913 + C10916 - C10915) * C32188 +
            (C11198 - C11199 + C11200 - C11201 + C11202 - C11203) * C30856 +
            (C11204 - C11205 + C11206 - C11207 + C11208 - C11209) * C31874) *
               C32013) *
              C31925 * C236 +
          ((C10937 * C30875 + C10938 * C32188 +
            (C11199 - C11198 + C11201 - C11200 + C11203 - C11202) * C30856 +
            (C11205 - C11204 + C11207 - C11206 + C11209 - C11208) * C31874) *
               C32207 +
           ((C10918 - C10917 + C10920 - C10919 + C10922 - C10921) * C30875 +
            (C10924 - C10923 + C10926 - C10925 + C10928 - C10927) * C32188 +
            (C9914 * C949 - C9917 * C942 + C9915 * C1623 - C9918 * C1619 +
             C32241 * C6962 - C9919 * C6961) *
                C30856 +
            (C9914 * C960 - C9917 * C950 + C9915 * C1628 - C9918 * C1624 +
             C32241 * C6964 - C9919 * C6963) *
                C31874) *
               C32013) *
              C31925 * C237) *
         C31899) /
            (p * q * std::sqrt(p + q));
    d2ee[55] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C32208 * C126 - C3352 * C119 + C32053 * C354 - C3353 * C344) *
                 C5988 +
             (C32208 * C140 - C3352 * C127 + C32053 * C374 - C3353 * C355) *
                 C31864) *
                C7401 +
            ((C4331 - C4332 + C4333 - C4334) * C5988 +
             (C4335 - C4336 + C4337 - C4338) * C31864) *
                C7402 +
            C9303 * C7403 + C9308 * C32248) *
               C31925 * C466 +
           (((C4332 - C4331 + C4334 - C4333) * C5988 +
             (C4336 - C4335 + C4338 - C4337) * C31864) *
                C7401 +
            ((C4339 - C4340 + C4341 - C4342) * C5988 +
             (C4343 - C4344 + C4345 - C4346) * C31864) *
                C7402 +
            ((C8316 - C8317 + C8318 - C8319) * C5988 +
             (C8320 - C8321 + C8322 - C8323) * C31864) *
                C7403 +
            ((C9295 - C9296 + C9297 - C9298) * C5988 +
             (C9299 - C9300 + C9301 - C9302) * C31864) *
                C32248) *
               C31925 * C467) *
              C468 +
          ((((C3356 - C3355 + C3358 - C3357) * C5988 +
             (C3360 - C3359 + C3362 - C3361) * C31864) *
                C7401 +
            (C4717 * C5988 + C4718 * C31864) * C7402 +
            (C8687 * C5988 + C8688 * C31864) * C7403 +
            ((C8324 - C8325 + C8326 - C8327) * C5988 +
             (C8328 - C8329 + C8330 - C8331) * C31864) *
                C32248) *
               C31925 * C466 +
           ((C4715 * C5988 + C4716 * C31864) * C7401 +
            (C8334 * C5988 + C8335 * C31864) * C7402 +
            ((C8325 - C8324 + C8327 - C8326) * C5988 +
             (C8329 - C8328 + C8331 - C8330) * C31864) *
                C7403 +
            ((C32208 * C955 - C3352 * C945 + C32053 * C6327 - C3353 * C6326) *
                 C5988 +
             (C32208 * C963 - C3352 * C956 + C32053 * C6329 - C3353 * C6328) *
                 C31864) *
                C32248) *
               C31925 * C467) *
              C469)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C32208 * C126 - C3352 * C119 + C32053 * C354 - C3353 * C344) *
                 C812 +
             (C32208 * C140 - C3352 * C127 + C32053 * C374 - C3353 * C355) *
                 C806 +
             (C3355 - C3356 + C3357 - C3358) * C813 +
             (C3359 - C3360 + C3361 - C3362) * C807 + C3395 * C814 +
             C3396 * C32227) *
                C32207 +
            ((C4331 - C4332 + C4333 - C4334) * C812 +
             (C4335 - C4336 + C4337 - C4338) * C806 + C4715 * C813 +
             C4716 * C807 + C4183 * C814 + C4184 * C32227) *
                C32013) *
               C31925 * C466 +
           (((C4332 - C4331 + C4334 - C4333) * C812 +
             (C4336 - C4335 + C4338 - C4337) * C806 + C4717 * C813 +
             C4718 * C807 + C4719 * C814 + C4720 * C32227) *
                C32207 +
            ((C4339 - C4340 + C4341 - C4342) * C812 +
             (C4343 - C4344 + C4345 - C4346) * C806 +
             (C4347 - C4348 + C4349 - C4350) * C813 +
             (C4351 - C4352 + C4353 - C4354) * C807 +
             (C4355 - C4356 + C4357 - C4358) * C814 +
             (C4359 - C4360 + C4361 - C4362) * C32227) *
                C32013) *
               C31925 * C467) *
              C468 +
          ((((C3356 - C3355 + C3358 - C3357) * C812 +
             (C3360 - C3359 + C3362 - C3361) * C806 +
             (C3364 - C3363 + C3366 - C3365) * C813 +
             (C3368 - C3367 + C3370 - C3369) * C807 +
             (C3372 - C3371 + C3374 - C3373) * C814 +
             (C3376 - C3375 + C3378 - C3377) * C32227) *
                C32207 +
            (C4717 * C812 + C4718 * C806 + C4719 * C813 + C4720 * C807 +
             (C3741 - C3742 + C3743 - C3744) * C814 +
             (C3745 - C3746 + C3747 - C3748) * C32227) *
                C32013) *
               C31925 * C466 +
           ((C4715 * C812 + C4716 * C806 + C4183 * C813 + C4184 * C807 +
             (C3742 - C3741 + C3744 - C3743) * C814 +
             (C3746 - C3745 + C3748 - C3747) * C32227) *
                C32207 +
            ((C4348 - C4347 + C4350 - C4349) * C812 +
             (C4352 - C4351 + C4354 - C4353) * C806 +
             (C4356 - C4355 + C4358 - C4357) * C813 +
             (C4360 - C4359 + C4362 - C4361) * C807 +
             (C32208 * C265 - C3352 * C247 + C32053 * C1453 - C3353 * C1452) *
                 C814 +
             (C32208 * C277 - C3352 * C266 + C32053 * C1455 - C3353 * C1454) *
                 C32227) *
                C32013) *
               C31925 * C467) *
              C469)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C13137 * C126 - C13141 * C119 + C13138 * C354 - C13142 * C344 +
              C13139 * C364 - C13143 * C349 + C32254 * C2026 - C13144 * C2020) *
                 C5988 +
             (C13137 * C140 - C13141 * C127 + C13138 * C374 - C13142 * C355 +
              C13139 * C379 - C13143 * C365 + C32254 * C2038 - C13144 * C2027) *
                 C31864) *
                C32207 +
            ((C13992 - C13993 + C13994 - C13995 + C13996 - C13997 + C13998 -
              C13999) *
                 C5988 +
             (C14000 - C14001 + C14002 - C14003 + C14004 - C14005 + C14006 -
              C14007) *
                 C31864) *
                C32013) *
               C31925 * C466 +
           (((C13993 - C13992 + C13995 - C13994 + C13997 - C13996 + C13999 -
              C13998) *
                 C5988 +
             (C14001 - C14000 + C14003 - C14002 + C14005 - C14004 + C14007 -
              C14006) *
                 C31864) *
                C32207 +
            ((C14008 - C14009 + C14010 - C14011 + C14012 - C14013 + C14014 -
              C14015) *
                 C5988 +
             (C14016 - C14017 + C14018 - C14019 + C14020 - C14021 + C14022 -
              C14023) *
                 C31864) *
                C32013) *
               C31925 * C467) *
              C468 +
          ((((C13147 - C13146 + C13149 - C13148 + C13151 - C13150 + C13153 -
              C13152) *
                 C5988 +
             (C13155 - C13154 + C13157 - C13156 + C13159 - C13158 + C13161 -
              C13160) *
                 C31864) *
                C32207 +
            ((C13504 - C13505 + C13506 - C13507 + C13508 - C13509 + C13510 -
              C13511) *
                 C5988 +
             (C13512 - C13513 + C13514 - C13515 + C13516 - C13517 + C13518 -
              C13519) *
                 C31864) *
                C32013) *
               C31925 * C466 +
           (((C13505 - C13504 + C13507 - C13506 + C13509 - C13508 + C13511 -
              C13510) *
                 C5988 +
             (C13513 - C13512 + C13515 - C13514 + C13517 - C13516 + C13519 -
              C13518) *
                 C31864) *
                C32207 +
            ((C13137 * C261 - C13141 * C245 + C13138 * C1121 - C13142 * C1111 +
              C13139 * C1133 - C13143 * C1117 + C32254 * C7124 -
              C13144 * C7123) *
                 C5988 +
             (C13137 * C275 - C13141 * C262 + C13138 * C1138 - C13142 * C1122 +
              C13139 * C1144 - C13143 * C1134 + C32254 * C7126 -
              C13144 * C7125) *
                 C31864) *
                C32013) *
               C31925 * C467) *
              C469)) /
            (p * q * std::sqrt(p + q));
    d2ee[56] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C32208 * C126 - C3352 * C119 + C32053 * C354 - C3353 * C344) *
                 C5988 +
             (C32208 * C140 - C3352 * C127 + C32053 * C374 - C3353 * C355) *
                 C31864) *
                C7401 +
            ((C4331 - C4332 + C4333 - C4334) * C5988 +
             (C4335 - C4336 + C4337 - C4338) * C31864) *
                C7402 +
            C9303 * C7403 + C9308 * C32248) *
               C572 +
           (((C3352 * C344 - C32208 * C354 + C3353 * C349 - C32053 * C364) *
                 C5988 +
             (C3352 * C355 - C32208 * C374 + C3353 * C365 - C32053 * C379) *
                 C31864) *
                C7401 +
            ((C5125 - C5126 + C5127 - C5128) * C5988 +
             (C5129 - C5130 + C5131 - C5132) * C31864) *
                C7402 +
            ((C9085 - C9086 + C9087 - C9088) * C5988 +
             (C9089 - C9090 + C9091 - C9092) * C31864) *
                C7403 +
            ((C9797 - C9798 + C9799 - C9800) * C5988 +
             (C9801 - C9802 + C9803 - C9804) * C31864) *
                C32248) *
               C573) *
              C466 +
          ((((C4332 - C4331 + C4334 - C4333) * C5988 +
             (C4336 - C4335 + C4338 - C4337) * C31864) *
                C7401 +
            ((C4339 - C4340 + C4341 - C4342) * C5988 +
             (C4343 - C4344 + C4345 - C4346) * C31864) *
                C7402 +
            ((C8316 - C8317 + C8318 - C8319) * C5988 +
             (C8320 - C8321 + C8322 - C8323) * C31864) *
                C7403 +
            ((C9295 - C9296 + C9297 - C9298) * C5988 +
             (C9299 - C9300 + C9301 - C9302) * C31864) *
                C32248) *
               C572 +
           (((C5126 - C5125 + C5128 - C5127) * C5988 +
             (C5130 - C5129 + C5132 - C5131) * C31864) *
                C7401 +
            ((C9086 - C9085 + C9088 - C9087) * C5988 +
             (C9090 - C9089 + C9092 - C9091) * C31864) *
                C7402 +
            ((C9798 - C9797 + C9800 - C9799) * C5988 +
             (C9802 - C9801 + C9804 - C9803) * C31864) *
                C7403 +
            ((C32208 * C6145 - C3352 * C6142 + C32053 * C6149 - C3353 * C6144) *
                 C5988 +
             (C32208 * C6151 - C3352 * C6146 + C32053 * C6153 - C3353 * C6150) *
                 C31864) *
                C32248) *
               C573) *
              C467) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C32208 * C126 - C3352 * C119 + C32053 * C354 - C3353 * C344) *
                 C812 +
             (C32208 * C140 - C3352 * C127 + C32053 * C374 - C3353 * C355) *
                 C806 +
             (C3355 - C3356 + C3357 - C3358) * C813 +
             (C3359 - C3360 + C3361 - C3362) * C807 + C3395 * C814 +
             C3396 * C32227) *
                C32207 +
            ((C4331 - C4332 + C4333 - C4334) * C812 +
             (C4335 - C4336 + C4337 - C4338) * C806 + C4715 * C813 +
             C4716 * C807 + C4183 * C814 + C4184 * C32227) *
                C32013) *
               C572 +
           (((C3352 * C344 - C32208 * C354 + C3353 * C349 - C32053 * C364) *
                 C812 +
             (C3352 * C355 - C32208 * C374 + C3353 * C365 - C32053 * C379) *
                 C806 +
             (C3879 - C3880 + C3881 - C3882) * C813 +
             (C3883 - C3884 + C3885 - C3886) * C807 +
             (C3887 - C3888 + C3889 - C3890) * C814 +
             (C3891 - C3892 + C3893 - C3894) * C32227) *
                C32207 +
            ((C5125 - C5126 + C5127 - C5128) * C812 +
             (C5129 - C5130 + C5131 - C5132) * C806 +
             (C4915 - C4916 + C4917 - C4918) * C813 +
             (C4919 - C4920 + C4921 - C4922) * C807 +
             (C4923 - C4924 + C4925 - C4926) * C814 +
             (C4927 - C4928 + C4929 - C4930) * C32227) *
                C32013) *
               C573) *
              C466 +
          ((((C4332 - C4331 + C4334 - C4333) * C812 +
             (C4336 - C4335 + C4338 - C4337) * C806 + C4717 * C813 +
             C4718 * C807 + C4719 * C814 + C4720 * C32227) *
                C32207 +
            ((C4339 - C4340 + C4341 - C4342) * C812 +
             (C4343 - C4344 + C4345 - C4346) * C806 +
             (C4347 - C4348 + C4349 - C4350) * C813 +
             (C4351 - C4352 + C4353 - C4354) * C807 +
             (C4355 - C4356 + C4357 - C4358) * C814 +
             (C4359 - C4360 + C4361 - C4362) * C32227) *
                C32013) *
               C572 +
           (((C5126 - C5125 + C5128 - C5127) * C812 +
             (C5130 - C5129 + C5132 - C5131) * C806 +
             (C4916 - C4915 + C4918 - C4917) * C813 +
             (C4920 - C4919 + C4922 - C4921) * C807 +
             (C4924 - C4923 + C4926 - C4925) * C814 +
             (C4928 - C4927 + C4930 - C4929) * C32227) *
                C32207 +
            ((C32208 * C1119 - C3352 * C1110 + C32053 * C1131 - C3353 * C1116) *
                 C812 +
             (C32208 * C1137 - C3352 * C1120 + C32053 * C1143 - C3353 * C1132) *
                 C806 +
             (C32208 * C1121 - C3352 * C1111 + C32053 * C1133 - C3353 * C1117) *
                 C813 +
             (C32208 * C1138 - C3352 * C1122 + C32053 * C1144 - C3353 * C1134) *
                 C807 +
             (C32208 * C1123 - C3352 * C1112 + C32053 * C1135 - C3353 * C1118) *
                 C814 +
             (C32208 * C1139 - C3352 * C1124 + C32053 * C1145 - C3353 * C1136) *
                 C32227) *
                C32013) *
               C573) *
              C467) *
         C31899) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C13137 * C126 - C13141 * C119 + C13138 * C354 - C13142 * C344 +
              C13139 * C364 - C13143 * C349 + C32254 * C2026 - C13144 * C2020) *
                 C5988 +
             (C13137 * C140 - C13141 * C127 + C13138 * C374 - C13142 * C355 +
              C13139 * C379 - C13143 * C365 + C32254 * C2038 - C13144 * C2027) *
                 C31864) *
                C32207 +
            ((C13992 - C13993 + C13994 - C13995 + C13996 - C13997 + C13998 -
              C13999) *
                 C5988 +
             (C14000 - C14001 + C14002 - C14003 + C14004 - C14005 + C14006 -
              C14007) *
                 C31864) *
                C32013) *
               C572 +
           (((C13141 * C344 - C13137 * C354 + C13142 * C349 - C13138 * C364 +
              C13143 * C2020 - C13139 * C2026 + C13144 * C2023 -
              C32254 * C2032) *
                 C5988 +
             (C13141 * C355 - C13137 * C374 + C13142 * C365 - C13138 * C379 +
              C13143 * C2027 - C13139 * C2038 + C13144 * C2033 -
              C32254 * C2041) *
                 C31864) *
                C32207 +
            ((C14512 - C14513 + C14514 - C14515 + C14516 - C14517 + C14518 -
              C14519) *
                 C5988 +
             (C14520 - C14521 + C14522 - C14523 + C14524 - C14525 + C14526 -
              C14527) *
                 C31864) *
                C32013) *
               C573) *
              C466 +
          ((((C13993 - C13992 + C13995 - C13994 + C13997 - C13996 + C13999 -
              C13998) *
                 C5988 +
             (C14001 - C14000 + C14003 - C14002 + C14005 - C14004 + C14007 -
              C14006) *
                 C31864) *
                C32207 +
            ((C14008 - C14009 + C14010 - C14011 + C14012 - C14013 + C14014 -
              C14015) *
                 C5988 +
             (C14016 - C14017 + C14018 - C14019 + C14020 - C14021 + C14022 -
              C14023) *
                 C31864) *
                C32013) *
               C572 +
           (((C14513 - C14512 + C14515 - C14514 + C14517 - C14516 + C14519 -
              C14518) *
                 C5988 +
             (C14521 - C14520 + C14523 - C14522 + C14525 - C14524 + C14527 -
              C14526) *
                 C31864) *
                C32207 +
            ((C13137 * C1119 - C13141 * C1110 + C13138 * C1131 -
              C13142 * C1116 + C13139 * C6806 - C13143 * C6803 +
              C32254 * C6810 - C13144 * C6805) *
                 C5988 +
             (C13137 * C1137 - C13141 * C1120 + C13138 * C1143 -
              C13142 * C1132 + C13139 * C6812 - C13143 * C6807 +
              C32254 * C6814 - C13144 * C6811) *
                 C31864) *
                C32013) *
               C573) *
              C467) *
         C31899) /
            (p * q * std::sqrt(p + q));
    d2ee[57] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C32208 * C126 - C3352 * C119 + C32053 * C354 - C3353 * C344) *
                    C812 +
                (C32208 * C140 - C3352 * C127 + C32053 * C374 - C3353 * C355) *
                    C806 +
                (C3355 - C3356 + C3357 - C3358) * C813 +
                (C3359 - C3360 + C3361 - C3362) * C807 + C3395 * C814 +
                C3396 * C32227) *
                   C32207 +
               ((C32208 * C249 - C3352 * C239 + C32053 * C681 - C3353 * C676) *
                    C812 +
                (C32208 * C269 - C3352 * C250 + C32053 * C691 - C3353 * C682) *
                    C806 +
                (C3726 - C3725 + C3728 - C3727) * C813 +
                (C3730 - C3729 + C3732 - C3731) * C807 + C4183 * C814 +
                C4184 * C32227) *
                   C32013) *
                  C31925 * C31911 * C110 +
              (((C3356 - C3355 + C3358 - C3357) * C812 +
                (C3360 - C3359 + C3362 - C3361) * C806 +
                (C3364 - C3363 + C3366 - C3365) * C813 +
                (C3368 - C3367 + C3370 - C3369) * C807 +
                (C3372 - C3371 + C3374 - C3373) * C814 +
                (C3376 - C3375 + C3378 - C3377) * C32227) *
                   C32207 +
               ((C3725 - C3726 + C3727 - C3728) * C812 +
                (C3729 - C3730 + C3731 - C3732) * C806 +
                (C3733 - C3734 + C3735 - C3736) * C813 +
                (C3737 - C3738 + C3739 - C3740) * C807 +
                (C3741 - C3742 + C3743 - C3744) * C814 +
                (C3745 - C3746 + C3747 - C3748) * C32227) *
                   C32013) *
                  C31925 * C31911 * C111 +
              ((C3395 * C812 + C3396 * C806 + C3397 * C813 + C3398 * C807 +
                (C3380 - C3379 + C3382 - C3381) * C814 +
                (C3384 - C3383 + C3386 - C3385) * C32227) *
                   C32207 +
               (C4183 * C812 + C4184 * C806 +
                (C3742 - C3741 + C3744 - C3743) * C813 +
                (C3746 - C3745 + C3748 - C3747) * C807 +
                (C32208 * C257 - C3352 * C243 + C32053 * C689 - C3353 * C680) *
                    C814 +
                (C32208 * C273 - C3352 * C258 + C32053 * C695 - C3353 * C690) *
                    C32227) *
                   C32013) *
                  C31925 * C31911 * C112) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C32208 * C126 - C3352 * C119 + C32053 * C354 - C3353 * C344) *
                    C812 +
                (C32208 * C140 - C3352 * C127 + C32053 * C374 - C3353 * C355) *
                    C806 +
                (C3355 - C3356 + C3357 - C3358) * C813 +
                (C3359 - C3360 + C3361 - C3362) * C807 + C3395 * C814 +
                C3396 * C32227) *
                   C32207 +
               ((C4331 - C4332 + C4333 - C4334) * C812 +
                (C4335 - C4336 + C4337 - C4338) * C806 +
                (C3726 - C3725 + C3728 - C3727) * C813 +
                (C3730 - C3729 + C3732 - C3731) * C807 + C4183 * C814 +
                C4184 * C32227) *
                   C32013) *
                  C31925 * C235 +
              (((C4332 - C4331 + C4334 - C4333) * C812 +
                (C4336 - C4335 + C4338 - C4337) * C806 +
                (C3725 - C3726 + C3727 - C3728) * C813 +
                (C3729 - C3730 + C3731 - C3732) * C807 +
                (C3733 - C3734 + C3735 - C3736) * C814 +
                (C3737 - C3738 + C3739 - C3740) * C32227) *
                   C32207 +
               ((C4339 - C4340 + C4341 - C4342) * C812 +
                (C4343 - C4344 + C4345 - C4346) * C806 +
                (C4347 - C4348 + C4349 - C4350) * C813 +
                (C4351 - C4352 + C4353 - C4354) * C807 +
                (C4355 - C4356 + C4357 - C4358) * C814 +
                (C4359 - C4360 + C4361 - C4362) * C32227) *
                   C32013) *
                  C31925 * C236 +
              (((C4340 - C4339 + C4342 - C4341) * C812 +
                (C4344 - C4343 + C4346 - C4345) * C806 +
                (C4348 - C4347 + C4350 - C4349) * C813 +
                (C4352 - C4351 + C4354 - C4353) * C807 +
                (C4356 - C4355 + C4358 - C4357) * C814 +
                (C4360 - C4359 + C4362 - C4361) * C32227) *
                   C32207 +
               ((C32208 * C947 - C3352 * C941 + C32053 * C1621 -
                 C3353 * C1618) *
                    C812 +
                (C32208 * C959 - C3352 * C948 + C32053 * C1627 -
                 C3353 * C1622) *
                    C806 +
                (C32208 * C949 - C3352 * C942 + C32053 * C1623 -
                 C3353 * C1619) *
                    C813 +
                (C32208 * C960 - C3352 * C950 + C32053 * C1628 -
                 C3353 * C1624) *
                    C807 +
                (C32208 * C951 - C3352 * C943 + C32053 * C1625 -
                 C3353 * C1620) *
                    C814 +
                (C32208 * C961 - C3352 * C952 + C32053 * C1629 -
                 C3353 * C1626) *
                    C32227) *
                   C32013) *
                  C31925 * C237) *
             C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C32208 * C126 - C3352 * C119 + C32053 * C354 - C3353 * C344) *
                C812 +
            (C32208 * C140 - C3352 * C127 + C32053 * C374 - C3353 * C355) *
                C806 +
            (C3355 - C3356 + C3357 - C3358) * C813 +
            (C3359 - C3360 + C3361 - C3362) * C807 + C3395 * C814 +
            C3396 * C32227) *
               C32207 +
           ((C4331 - C4332 + C4333 - C4334) * C812 +
            (C4335 - C4336 + C4337 - C4338) * C806 +
            (C3726 - C3725 + C3728 - C3727) * C813 +
            (C3730 - C3729 + C3732 - C3731) * C807 + C4183 * C814 +
            C4184 * C32227) *
               C32013) *
              C341 +
          (((C3352 * C344 - C32208 * C354 + C3353 * C349 - C32053 * C364) *
                C812 +
            (C3352 * C355 - C32208 * C374 + C3353 * C365 - C32053 * C379) *
                C806 +
            (C3879 - C3880 + C3881 - C3882) * C813 +
            (C3883 - C3884 + C3885 - C3886) * C807 +
            (C3887 - C3888 + C3889 - C3890) * C814 +
            (C3891 - C3892 + C3893 - C3894) * C32227) *
               C32207 +
           ((C3352 * C676 - C32208 * C681 + C3353 * C1113 - C32053 * C1125) *
                C812 +
            (C3352 * C682 - C32208 * C691 + C3353 * C1126 - C32053 * C1140) *
                C806 +
            (C3352 * C677 - C32208 * C683 + C3353 * C1114 - C32053 * C1127) *
                C813 +
            (C3352 * C684 - C32208 * C692 + C3353 * C1128 - C32053 * C1141) *
                C807 +
            (C3352 * C678 - C32208 * C685 + C3353 * C1115 - C32053 * C1129) *
                C814 +
            (C3352 * C686 - C32208 * C693 + C3353 * C1130 - C32053 * C1142) *
                C32227) *
               C32013) *
              C342 +
          (((C32208 * C364 - C3352 * C349 + C32053 * C2026 - C3353 * C2020) *
                C812 +
            (C32208 * C379 - C3352 * C365 + C32053 * C2038 - C3353 * C2027) *
                C806 +
            (C32208 * C366 - C3352 * C350 + C32053 * C2028 - C3353 * C2021) *
                C813 +
            (C32208 * C380 - C3352 * C367 + C32053 * C2039 - C3353 * C2029) *
                C807 +
            (C32208 * C368 - C3352 * C351 + C32053 * C2030 - C3353 * C2022) *
                C814 +
            (C32208 * C381 - C3352 * C369 + C32053 * C2040 - C3353 * C2031) *
                C32227) *
               C32207 +
           ((C32208 * C1125 - C3352 * C1113 + C32053 * C2541 - C3353 * C2538) *
                C812 +
            (C32208 * C1140 - C3352 * C1126 + C32053 * C2547 - C3353 * C2542) *
                C806 +
            (C32208 * C1127 - C3352 * C1114 + C32053 * C2543 - C3353 * C2539) *
                C813 +
            (C32208 * C1141 - C3352 * C1128 + C32053 * C2548 - C3353 * C2544) *
                C807 +
            (C32208 * C1129 - C3352 * C1115 + C32053 * C2545 - C3353 * C2540) *
                C814 +
            (C32208 * C1142 - C3352 * C1130 + C32053 * C2549 - C3353 * C2546) *
                C32227) *
               C32013) *
              C343) *
         C31911 * C31899) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C32208 * C126 - C3352 * C119 + C32053 * C354 - C3353 * C344) *
                C5988 +
            (C32208 * C140 - C3352 * C127 + C32053 * C374 - C3353 * C355) *
                C31864) *
               C7401 +
           ((C4331 - C4332 + C4333 - C4334) * C5988 +
            (C4335 - C4336 + C4337 - C4338) * C31864) *
               C7402 +
           (C8332 * C5988 + C8333 * C31864) * C7403 +
           ((C8317 - C8316 + C8319 - C8318) * C5988 +
            (C8321 - C8320 + C8323 - C8322) * C31864) *
               C32248) *
              C31925 * C31911 * C110 +
          (((C3356 - C3355 + C3358 - C3357) * C5988 +
            (C3360 - C3359 + C3362 - C3361) * C31864) *
               C7401 +
           (C4717 * C5988 + C4718 * C31864) * C7402 +
           (C8687 * C5988 + C8688 * C31864) * C7403 +
           ((C8324 - C8325 + C8326 - C8327) * C5988 +
            (C8328 - C8329 + C8330 - C8331) * C31864) *
               C32248) *
              C31925 * C31911 * C111 +
          ((C3395 * C5988 + C3396 * C31864) * C7401 +
           (C4183 * C5988 + C4184 * C31864) * C7402 +
           ((C4356 - C4355 + C4358 - C4357) * C5988 +
            (C4360 - C4359 + C4362 - C4361) * C31864) *
               C7403 +
           ((C32208 * C951 - C3352 * C943 + C32053 * C1625 - C3353 * C1620) *
                C5988 +
            (C32208 * C961 - C3352 * C952 + C32053 * C1629 - C3353 * C1626) *
                C31864) *
               C32248) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C32208 * C126 - C3352 * C119 + C32053 * C354 - C3353 * C344) *
                C5988 +
            (C32208 * C140 - C3352 * C127 + C32053 * C374 - C3353 * C355) *
                C31864) *
               C7401 +
           ((C4331 - C4332 + C4333 - C4334) * C5988 +
            (C4335 - C4336 + C4337 - C4338) * C31864) *
               C7402 +
           C9303 * C7403 + C9308 * C32248) *
              C31925 * C235 +
          (((C4332 - C4331 + C4334 - C4333) * C5988 +
            (C4336 - C4335 + C4338 - C4337) * C31864) *
               C7401 +
           ((C4339 - C4340 + C4341 - C4342) * C5988 +
            (C4343 - C4344 + C4345 - C4346) * C31864) *
               C7402 +
           ((C8316 - C8317 + C8318 - C8319) * C5988 +
            (C8320 - C8321 + C8322 - C8323) * C31864) *
               C7403 +
           ((C9295 - C9296 + C9297 - C9298) * C5988 +
            (C9299 - C9300 + C9301 - C9302) * C31864) *
               C32248) *
              C31925 * C236 +
          (C9303 * C7401 + C9308 * C7402 +
           ((C9296 - C9295 + C9298 - C9297) * C5988 +
            (C9300 - C9299 + C9302 - C9301) * C31864) *
               C7403 +
           ((C32208 * C6053 - C3352 * C6051 + C32053 * C6413 - C3353 * C6412) *
                C5988 +
            (C32208 * C6057 - C3352 * C6054 + C32053 * C6415 - C3353 * C6414) *
                C31864) *
               C32248) *
              C31925 * C237) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C32208 * C126 - C3352 * C119 + C32053 * C354 - C3353 * C344) *
                C5988 +
            (C32208 * C140 - C3352 * C127 + C32053 * C374 - C3353 * C355) *
                C31864) *
               C7401 +
           ((C4331 - C4332 + C4333 - C4334) * C5988 +
            (C4335 - C4336 + C4337 - C4338) * C31864) *
               C7402 +
           C9303 * C7403 + C9308 * C32248) *
              C341 +
          (((C3352 * C344 - C32208 * C354 + C3353 * C349 - C32053 * C364) *
                C5988 +
            (C3352 * C355 - C32208 * C374 + C3353 * C365 - C32053 * C379) *
                C31864) *
               C7401 +
           ((C5125 - C5126 + C5127 - C5128) * C5988 +
            (C5129 - C5130 + C5131 - C5132) * C31864) *
               C7402 +
           ((C9085 - C9086 + C9087 - C9088) * C5988 +
            (C9089 - C9090 + C9091 - C9092) * C31864) *
               C7403 +
           ((C3352 * C1618 - C32208 * C1621 + C3353 * C6143 - C32053 * C6147) *
                C5988 +
            (C3352 * C1622 - C32208 * C1627 + C3353 * C6148 - C32053 * C6152) *
                C31864) *
               C32248) *
              C342 +
          (((C32208 * C364 - C3352 * C349 + C32053 * C2026 - C3353 * C2020) *
                C5988 +
            (C32208 * C379 - C3352 * C365 + C32053 * C2038 - C3353 * C2027) *
                C31864) *
               C7401 +
           ((C32208 * C1125 - C3352 * C1113 + C32053 * C2541 - C3353 * C2538) *
                C5988 +
            (C32208 * C1140 - C3352 * C1126 + C32053 * C2547 - C3353 * C2542) *
                C31864) *
               C7402 +
           ((C32208 * C1131 - C3352 * C1116 + C32053 * C6806 - C3353 * C6803) *
                C5988 +
            (C32208 * C1143 - C3352 * C1132 + C32053 * C6812 - C3353 * C6807) *
                C31864) *
               C7403 +
           ((C32208 * C6147 - C3352 * C6143 + C32053 * C7274 - C3353 * C7273) *
                C5988 +
            (C32208 * C6152 - C3352 * C6148 + C32053 * C7276 - C3353 * C7275) *
                C31864) *
               C32248) *
              C343) *
         C31911 * C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13137 * C126 - C13141 * C119 + C13138 * C354 - C13142 * C344 +
             C13139 * C364 - C13143 * C349 + C32254 * C2026 - C13144 * C2020) *
                C5988 +
            (C13137 * C140 - C13141 * C127 + C13138 * C374 - C13142 * C355 +
             C13139 * C379 - C13143 * C365 + C32254 * C2038 - C13144 * C2027) *
                C31864) *
               C32207 +
           ((C13137 * C249 - C13141 * C239 + C13138 * C681 - C13142 * C676 +
             C13139 * C1125 - C13143 * C1113 + C32254 * C2541 -
             C13144 * C2538) *
                C5988 +
            (C13137 * C269 - C13141 * C250 + C13138 * C691 - C13142 * C682 +
             C13139 * C1140 - C13143 * C1126 + C32254 * C2547 -
             C13144 * C2542) *
                C31864) *
               C32013) *
              C31925 * C31911 * C110 +
          (((C13147 - C13146 + C13149 - C13148 + C13151 - C13150 + C13153 -
             C13152) *
                C5988 +
            (C13155 - C13154 + C13157 - C13156 + C13159 - C13158 + C13161 -
             C13160) *
                C31864) *
               C32207 +
           ((C13504 - C13505 + C13506 - C13507 + C13508 - C13509 + C13510 -
             C13511) *
                C5988 +
            (C13512 - C13513 + C13514 - C13515 + C13516 - C13517 + C13518 -
             C13519) *
                C31864) *
               C32013) *
              C31925 * C31911 * C111 +
          (((C13163 - C13162 + C13165 - C13164 + C13167 - C13166 + C13169 -
             C13168) *
                C5988 +
            (C13171 - C13170 + C13173 - C13172 + C13175 - C13174 + C13177 -
             C13176) *
                C31864) *
               C32207 +
           ((C13137 * C253 - C13141 * C241 + C13138 * C685 - C13142 * C678 +
             C13139 * C1129 - C13143 * C1115 + C32254 * C2545 -
             C13144 * C2540) *
                C5988 +
            (C13137 * C271 - C13141 * C254 + C13138 * C693 - C13142 * C686 +
             C13139 * C1142 - C13143 * C1130 + C32254 * C2549 -
             C13144 * C2546) *
                C31864) *
               C32013) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13137 * C126 - C13141 * C119 + C13138 * C354 - C13142 * C344 +
             C13139 * C364 - C13143 * C349 + C32254 * C2026 - C13144 * C2020) *
                C5988 +
            (C13137 * C140 - C13141 * C127 + C13138 * C374 - C13142 * C355 +
             C13139 * C379 - C13143 * C365 + C32254 * C2038 - C13144 * C2027) *
                C31864) *
               C32207 +
           ((C13992 - C13993 + C13994 - C13995 + C13996 - C13997 + C13998 -
             C13999) *
                C5988 +
            (C14000 - C14001 + C14002 - C14003 + C14004 - C14005 + C14006 -
             C14007) *
                C31864) *
               C32013) *
              C31925 * C235 +
          (((C13993 - C13992 + C13995 - C13994 + C13997 - C13996 + C13999 -
             C13998) *
                C5988 +
            (C14001 - C14000 + C14003 - C14002 + C14005 - C14004 + C14007 -
             C14006) *
                C31864) *
               C32207 +
           ((C14008 - C14009 + C14010 - C14011 + C14012 - C14013 + C14014 -
             C14015) *
                C5988 +
            (C14016 - C14017 + C14018 - C14019 + C14020 - C14021 + C14022 -
             C14023) *
                C31864) *
               C32013) *
              C31925 * C236 +
          (((C14009 - C14008 + C14011 - C14010 + C14013 - C14012 + C14015 -
             C14014) *
                C5988 +
            (C14017 - C14016 + C14019 - C14018 + C14021 - C14020 + C14023 -
             C14022) *
                C31864) *
               C32207 +
           ((C13137 * C947 - C13141 * C941 + C13138 * C1621 - C13142 * C1618 +
             C13139 * C6147 - C13143 * C6143 + C32254 * C7274 -
             C13144 * C7273) *
                C5988 +
            (C13137 * C959 - C13141 * C948 + C13138 * C1627 - C13142 * C1622 +
             C13139 * C6152 - C13143 * C6148 + C32254 * C7276 -
             C13144 * C7275) *
                C31864) *
               C32013) *
              C31925 * C237) *
         C31899) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C13137 * C126 - C13141 * C119 + C13138 * C354 - C13142 * C344 +
             C13139 * C364 - C13143 * C349 + C32254 * C2026 - C13144 * C2020) *
                C5988 +
            (C13137 * C140 - C13141 * C127 + C13138 * C374 - C13142 * C355 +
             C13139 * C379 - C13143 * C365 + C32254 * C2038 - C13144 * C2027) *
                C31864) *
               C32207 +
           ((C13992 - C13993 + C13994 - C13995 + C13996 - C13997 + C13998 -
             C13999) *
                C5988 +
            (C14000 - C14001 + C14002 - C14003 + C14004 - C14005 + C14006 -
             C14007) *
                C31864) *
               C32013) *
              C341 +
          (((C13141 * C344 - C13137 * C354 + C13142 * C349 - C13138 * C364 +
             C13143 * C2020 - C13139 * C2026 + C13144 * C2023 -
             C32254 * C2032) *
                C5988 +
            (C13141 * C355 - C13137 * C374 + C13142 * C365 - C13138 * C379 +
             C13143 * C2027 - C13139 * C2038 + C13144 * C2033 -
             C32254 * C2041) *
                C31864) *
               C32207 +
           ((C13141 * C676 - C13137 * C681 + C13142 * C1113 - C13138 * C1125 +
             C13143 * C2538 - C13139 * C2541 + C13144 * C6804 -
             C32254 * C6808) *
                C5988 +
            (C13141 * C682 - C13137 * C691 + C13142 * C1126 - C13138 * C1140 +
             C13143 * C2542 - C13139 * C2547 + C13144 * C6809 -
             C32254 * C6813) *
                C31864) *
               C32013) *
              C342 +
          (((C13137 * C364 - C13141 * C349 + C13138 * C2026 - C13142 * C2020 +
             C13139 * C2032 - C13143 * C2023 + C32254 * C11723 -
             C13144 * C11721) *
                C5988 +
            (C13137 * C379 - C13141 * C365 + C13138 * C2038 - C13142 * C2027 +
             C13139 * C2041 - C13143 * C2033 + C32254 * C11727 -
             C13144 * C11724) *
                C31864) *
               C32207 +
           ((C13137 * C1125 - C13141 * C1113 + C13138 * C2541 - C13142 * C2538 +
             C13139 * C6808 - C13143 * C6804 + C32254 * C11984 -
             C13144 * C11983) *
                C5988 +
            (C13137 * C1140 - C13141 * C1126 + C13138 * C2547 - C13142 * C2542 +
             C13139 * C6813 - C13143 * C6809 + C32254 * C11986 -
             C13144 * C11985) *
                C31864) *
               C32013) *
              C343) *
         C31911 * C31899) /
            (p * q * std::sqrt(p + q));
    d2ee[58] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C32208 * C126 - C3352 * C119 + C32053 * C354 - C3353 * C344) *
                 C5988 +
             (C32208 * C140 - C3352 * C127 + C32053 * C374 - C3353 * C355) *
                 C31864) *
                C7401 +
            ((C4331 - C4332 + C4333 - C4334) * C5988 +
             (C4335 - C4336 + C4337 - C4338) * C31864) *
                C7402 +
            C9303 * C7403 + C9308 * C32248) *
               C572 +
           (((C3352 * C344 - C32208 * C354 + C3353 * C349 - C32053 * C364) *
                 C5988 +
             (C3352 * C355 - C32208 * C374 + C3353 * C365 - C32053 * C379) *
                 C31864) *
                C7401 +
            ((C5125 - C5126 + C5127 - C5128) * C5988 +
             (C5129 - C5130 + C5131 - C5132) * C31864) *
                C7402 +
            ((C9085 - C9086 + C9087 - C9088) * C5988 +
             (C9089 - C9090 + C9091 - C9092) * C31864) *
                C7403 +
            ((C3352 * C1618 - C32208 * C1621 + C3353 * C6143 - C32053 * C6147) *
                 C5988 +
             (C3352 * C1622 - C32208 * C1627 + C3353 * C6148 - C32053 * C6152) *
                 C31864) *
                C32248) *
               C573) *
              C31911 * C468 +
          ((((C3356 - C3355 + C3358 - C3357) * C5988 +
             (C3360 - C3359 + C3362 - C3361) * C31864) *
                C7401 +
            (C4717 * C5988 + C4718 * C31864) * C7402 +
            (C8687 * C5988 + C8688 * C31864) * C7403 +
            ((C8324 - C8325 + C8326 - C8327) * C5988 +
             (C8328 - C8329 + C8330 - C8331) * C31864) *
                C32248) *
               C572 +
           (((C3880 - C3879 + C3882 - C3881) * C5988 +
             (C3884 - C3883 + C3886 - C3885) * C31864) *
                C7401 +
            ((C4916 - C4915 + C4918 - C4917) * C5988 +
             (C4920 - C4919 + C4922 - C4921) * C31864) *
                C7402 +
            ((C8884 - C8883 + C8886 - C8885) * C5988 +
             (C8888 - C8887 + C8890 - C8889) * C31864) *
                C7403 +
            ((C32208 * C1623 - C3352 * C1619 + C32053 * C6962 - C3353 * C6961) *
                 C5988 +
             (C32208 * C1628 - C3352 * C1624 + C32053 * C6964 - C3353 * C6963) *
                 C31864) *
                C32248) *
               C573) *
              C31911 * C469)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C32208 * C126 - C3352 * C119 + C32053 * C354 - C3353 * C344) *
                 C812 +
             (C32208 * C140 - C3352 * C127 + C32053 * C374 - C3353 * C355) *
                 C806 +
             (C3355 - C3356 + C3357 - C3358) * C813 +
             (C3359 - C3360 + C3361 - C3362) * C807 + C3395 * C814 +
             C3396 * C32227) *
                C32207 +
            ((C4331 - C4332 + C4333 - C4334) * C812 +
             (C4335 - C4336 + C4337 - C4338) * C806 + C4715 * C813 +
             C4716 * C807 + C4183 * C814 + C4184 * C32227) *
                C32013) *
               C572 +
           (((C3352 * C344 - C32208 * C354 + C3353 * C349 - C32053 * C364) *
                 C812 +
             (C3352 * C355 - C32208 * C374 + C3353 * C365 - C32053 * C379) *
                 C806 +
             (C3879 - C3880 + C3881 - C3882) * C813 +
             (C3883 - C3884 + C3885 - C3886) * C807 +
             (C3887 - C3888 + C3889 - C3890) * C814 +
             (C3891 - C3892 + C3893 - C3894) * C32227) *
                C32207 +
            ((C3352 * C676 - C32208 * C681 + C3353 * C1113 - C32053 * C1125) *
                 C812 +
             (C3352 * C682 - C32208 * C691 + C3353 * C1126 - C32053 * C1140) *
                 C806 +
             (C4915 - C4916 + C4917 - C4918) * C813 +
             (C4919 - C4920 + C4921 - C4922) * C807 +
             (C4923 - C4924 + C4925 - C4926) * C814 +
             (C4927 - C4928 + C4929 - C4930) * C32227) *
                C32013) *
               C573) *
              C31911 * C468 +
          ((((C3356 - C3355 + C3358 - C3357) * C812 +
             (C3360 - C3359 + C3362 - C3361) * C806 +
             (C3364 - C3363 + C3366 - C3365) * C813 +
             (C3368 - C3367 + C3370 - C3369) * C807 +
             (C3372 - C3371 + C3374 - C3373) * C814 +
             (C3376 - C3375 + C3378 - C3377) * C32227) *
                C32207 +
            (C4717 * C812 + C4718 * C806 + C4719 * C813 + C4720 * C807 +
             (C3741 - C3742 + C3743 - C3744) * C814 +
             (C3745 - C3746 + C3747 - C3748) * C32227) *
                C32013) *
               C572 +
           (((C3880 - C3879 + C3882 - C3881) * C812 +
             (C3884 - C3883 + C3886 - C3885) * C806 +
             (C3888 - C3887 + C3890 - C3889) * C813 +
             (C3892 - C3891 + C3894 - C3893) * C807 +
             (C3896 - C3895 + C3898 - C3897) * C814 +
             (C3900 - C3899 + C3902 - C3901) * C32227) *
                C32207 +
            ((C4916 - C4915 + C4918 - C4917) * C812 +
             (C4920 - C4919 + C4922 - C4921) * C806 +
             (C4924 - C4923 + C4926 - C4925) * C813 +
             (C4928 - C4927 + C4930 - C4929) * C807 +
             (C32208 * C687 - C3352 * C679 + C32053 * C2191 - C3353 * C2190) *
                 C814 +
             (C32208 * C694 - C3352 * C688 + C32053 * C2193 - C3353 * C2192) *
                 C32227) *
                C32013) *
               C573) *
              C31911 * C469)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C13137 * C126 - C13141 * C119 + C13138 * C354 - C13142 * C344 +
              C13139 * C364 - C13143 * C349 + C32254 * C2026 - C13144 * C2020) *
                 C5988 +
             (C13137 * C140 - C13141 * C127 + C13138 * C374 - C13142 * C355 +
              C13139 * C379 - C13143 * C365 + C32254 * C2038 - C13144 * C2027) *
                 C31864) *
                C32207 +
            ((C13992 - C13993 + C13994 - C13995 + C13996 - C13997 + C13998 -
              C13999) *
                 C5988 +
             (C14000 - C14001 + C14002 - C14003 + C14004 - C14005 + C14006 -
              C14007) *
                 C31864) *
                C32013) *
               C572 +
           (((C13141 * C344 - C13137 * C354 + C13142 * C349 - C13138 * C364 +
              C13143 * C2020 - C13139 * C2026 + C13144 * C2023 -
              C32254 * C2032) *
                 C5988 +
             (C13141 * C355 - C13137 * C374 + C13142 * C365 - C13138 * C379 +
              C13143 * C2027 - C13139 * C2038 + C13144 * C2033 -
              C32254 * C2041) *
                 C31864) *
                C32207 +
            ((C13141 * C676 - C13137 * C681 + C13142 * C1113 - C13138 * C1125 +
              C13143 * C2538 - C13139 * C2541 + C13144 * C6804 -
              C32254 * C6808) *
                 C5988 +
             (C13141 * C682 - C13137 * C691 + C13142 * C1126 - C13138 * C1140 +
              C13143 * C2542 - C13139 * C2547 + C13144 * C6809 -
              C32254 * C6813) *
                 C31864) *
                C32013) *
               C573) *
              C31911 * C468 +
          ((((C13147 - C13146 + C13149 - C13148 + C13151 - C13150 + C13153 -
              C13152) *
                 C5988 +
             (C13155 - C13154 + C13157 - C13156 + C13159 - C13158 + C13161 -
              C13160) *
                 C31864) *
                C32207 +
            ((C13504 - C13505 + C13506 - C13507 + C13508 - C13509 + C13510 -
              C13511) *
                 C5988 +
             (C13512 - C13513 + C13514 - C13515 + C13516 - C13517 + C13518 -
              C13519) *
                 C31864) *
                C32013) *
               C572 +
           (((C13651 - C13650 + C13653 - C13652 + C13655 - C13654 + C13657 -
              C13656) *
                 C5988 +
             (C13659 - C13658 + C13661 - C13660 + C13663 - C13662 + C13665 -
              C13664) *
                 C31864) *
                C32207 +
            ((C13137 * C683 - C13141 * C677 + C13138 * C1127 - C13142 * C1114 +
              C13139 * C2543 - C13143 * C2539 + C32254 * C11812 -
              C13144 * C11811) *
                 C5988 +
             (C13137 * C692 - C13141 * C684 + C13138 * C1141 - C13142 * C1128 +
              C13139 * C2548 - C13143 * C2544 + C32254 * C11814 -
              C13144 * C11813) *
                 C31864) *
                C32013) *
               C573) *
              C31911 * C469)) /
            (p * q * std::sqrt(p + q));
    d2ee[59] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C32208 * C126 - C3352 * C119 + C32053 * C354 - C3353 * C344) *
                C812 +
            (C32208 * C140 - C3352 * C127 + C32053 * C374 - C3353 * C355) *
                C806 +
            (C3355 - C3356 + C3357 - C3358) * C813 +
            (C3359 - C3360 + C3361 - C3362) * C807 + C3395 * C814 +
            C3396 * C32227) *
               C32207 +
           ((C4331 - C4332 + C4333 - C4334) * C812 +
            (C4335 - C4336 + C4337 - C4338) * C806 +
            (C3726 - C3725 + C3728 - C3727) * C813 +
            (C3730 - C3729 + C3732 - C3731) * C807 + C4183 * C814 +
            C4184 * C32227) *
               C32013) *
              C31925 * C235 +
          (((C4332 - C4331 + C4334 - C4333) * C812 +
            (C4336 - C4335 + C4338 - C4337) * C806 +
            (C3725 - C3726 + C3727 - C3728) * C813 +
            (C3729 - C3730 + C3731 - C3732) * C807 +
            (C3733 - C3734 + C3735 - C3736) * C814 +
            (C3737 - C3738 + C3739 - C3740) * C32227) *
               C32207 +
           ((C4339 - C4340 + C4341 - C4342) * C812 +
            (C4343 - C4344 + C4345 - C4346) * C806 +
            (C4347 - C4348 + C4349 - C4350) * C813 +
            (C4351 - C4352 + C4353 - C4354) * C807 +
            (C4355 - C4356 + C4357 - C4358) * C814 +
            (C4359 - C4360 + C4361 - C4362) * C32227) *
               C32013) *
              C31925 * C236 +
          (((C4340 - C4339 + C4342 - C4341) * C812 +
            (C4344 - C4343 + C4346 - C4345) * C806 +
            (C4348 - C4347 + C4350 - C4349) * C813 +
            (C4352 - C4351 + C4354 - C4353) * C807 +
            (C4356 - C4355 + C4358 - C4357) * C814 +
            (C4360 - C4359 + C4362 - C4361) * C32227) *
               C32207 +
           ((C32208 * C947 - C3352 * C941 + C32053 * C1621 - C3353 * C1618) *
                C812 +
            (C32208 * C959 - C3352 * C948 + C32053 * C1627 - C3353 * C1622) *
                C806 +
            (C32208 * C949 - C3352 * C942 + C32053 * C1623 - C3353 * C1619) *
                C813 +
            (C32208 * C960 - C3352 * C950 + C32053 * C1628 - C3353 * C1624) *
                C807 +
            (C32208 * C951 - C3352 * C943 + C32053 * C1625 - C3353 * C1620) *
                C814 +
            (C32208 * C961 - C3352 * C952 + C32053 * C1629 - C3353 * C1626) *
                C32227) *
               C32013) *
              C31925 * C237) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C32208 * C126 - C3352 * C119 + C32053 * C354 - C3353 * C344) *
                C812 +
            (C32208 * C140 - C3352 * C127 + C32053 * C374 - C3353 * C355) *
                C806 +
            (C3355 - C3356 + C3357 - C3358) * C813 +
            (C3359 - C3360 + C3361 - C3362) * C807 + C3395 * C814 +
            C3396 * C32227) *
               C32207 +
           ((C32208 * C249 - C3352 * C239 + C32053 * C681 - C3353 * C676) *
                C812 +
            (C32208 * C269 - C3352 * C250 + C32053 * C691 - C3353 * C682) *
                C806 +
            (C3726 - C3725 + C3728 - C3727) * C813 +
            (C3730 - C3729 + C3732 - C3731) * C807 + C4183 * C814 +
            C4184 * C32227) *
               C32013) *
              C31925 * C31911 * C110 +
          (((C3356 - C3355 + C3358 - C3357) * C812 +
            (C3360 - C3359 + C3362 - C3361) * C806 +
            (C3364 - C3363 + C3366 - C3365) * C813 +
            (C3368 - C3367 + C3370 - C3369) * C807 +
            (C3372 - C3371 + C3374 - C3373) * C814 +
            (C3376 - C3375 + C3378 - C3377) * C32227) *
               C32207 +
           ((C3725 - C3726 + C3727 - C3728) * C812 +
            (C3729 - C3730 + C3731 - C3732) * C806 +
            (C3733 - C3734 + C3735 - C3736) * C813 +
            (C3737 - C3738 + C3739 - C3740) * C807 +
            (C3741 - C3742 + C3743 - C3744) * C814 +
            (C3745 - C3746 + C3747 - C3748) * C32227) *
               C32013) *
              C31925 * C31911 * C111 +
          ((C3395 * C812 + C3396 * C806 + C3397 * C813 + C3398 * C807 +
            (C3380 - C3379 + C3382 - C3381) * C814 +
            (C3384 - C3383 + C3386 - C3385) * C32227) *
               C32207 +
           (C4183 * C812 + C4184 * C806 +
            (C3742 - C3741 + C3744 - C3743) * C813 +
            (C3746 - C3745 + C3748 - C3747) * C807 +
            (C32208 * C257 - C3352 * C243 + C32053 * C689 - C3353 * C680) *
                C814 +
            (C32208 * C273 - C3352 * C258 + C32053 * C695 - C3353 * C690) *
                C32227) *
               C32013) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C32208 * C126 - C3352 * C119 + C32053 * C354 - C3353 * C344) *
                C5988 +
            (C32208 * C140 - C3352 * C127 + C32053 * C374 - C3353 * C355) *
                C31864) *
               C7401 +
           ((C4331 - C4332 + C4333 - C4334) * C5988 +
            (C4335 - C4336 + C4337 - C4338) * C31864) *
               C7402 +
           (C8332 * C5988 + C8333 * C31864) * C7403 +
           ((C8317 - C8316 + C8319 - C8318) * C5988 +
            (C8321 - C8320 + C8323 - C8322) * C31864) *
               C32248) *
              C31925 * C31911 * C110 +
          (((C3356 - C3355 + C3358 - C3357) * C5988 +
            (C3360 - C3359 + C3362 - C3361) * C31864) *
               C7401 +
           (C4717 * C5988 + C4718 * C31864) * C7402 +
           (C8687 * C5988 + C8688 * C31864) * C7403 +
           ((C8324 - C8325 + C8326 - C8327) * C5988 +
            (C8328 - C8329 + C8330 - C8331) * C31864) *
               C32248) *
              C31925 * C31911 * C111 +
          ((C3395 * C5988 + C3396 * C31864) * C7401 +
           (C4183 * C5988 + C4184 * C31864) * C7402 +
           ((C4356 - C4355 + C4358 - C4357) * C5988 +
            (C4360 - C4359 + C4362 - C4361) * C31864) *
               C7403 +
           ((C32208 * C951 - C3352 * C943 + C32053 * C1625 - C3353 * C1620) *
                C5988 +
            (C32208 * C961 - C3352 * C952 + C32053 * C1629 - C3353 * C1626) *
                C31864) *
               C32248) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C32208 * C126 - C3352 * C119 + C32053 * C354 - C3353 * C344) *
                C5988 +
            (C32208 * C140 - C3352 * C127 + C32053 * C374 - C3353 * C355) *
                C31864) *
               C7401 +
           ((C4331 - C4332 + C4333 - C4334) * C5988 +
            (C4335 - C4336 + C4337 - C4338) * C31864) *
               C7402 +
           C9303 * C7403 + C9308 * C32248) *
              C31925 * C235 +
          (((C4332 - C4331 + C4334 - C4333) * C5988 +
            (C4336 - C4335 + C4338 - C4337) * C31864) *
               C7401 +
           ((C4339 - C4340 + C4341 - C4342) * C5988 +
            (C4343 - C4344 + C4345 - C4346) * C31864) *
               C7402 +
           ((C8316 - C8317 + C8318 - C8319) * C5988 +
            (C8320 - C8321 + C8322 - C8323) * C31864) *
               C7403 +
           ((C9295 - C9296 + C9297 - C9298) * C5988 +
            (C9299 - C9300 + C9301 - C9302) * C31864) *
               C32248) *
              C31925 * C236 +
          (C9303 * C7401 + C9308 * C7402 +
           ((C9296 - C9295 + C9298 - C9297) * C5988 +
            (C9300 - C9299 + C9302 - C9301) * C31864) *
               C7403 +
           ((C32208 * C6053 - C3352 * C6051 + C32053 * C6413 - C3353 * C6412) *
                C5988 +
            (C32208 * C6057 - C3352 * C6054 + C32053 * C6415 - C3353 * C6414) *
                C31864) *
               C32248) *
              C31925 * C237) *
         C31899) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C13137 * C126 - C13141 * C119 + C13138 * C354 - C13142 * C344 +
             C13139 * C364 - C13143 * C349 + C32254 * C2026 - C13144 * C2020) *
                C5988 +
            (C13137 * C140 - C13141 * C127 + C13138 * C374 - C13142 * C355 +
             C13139 * C379 - C13143 * C365 + C32254 * C2038 - C13144 * C2027) *
                C31864) *
               C32207 +
           ((C13137 * C249 - C13141 * C239 + C13138 * C681 - C13142 * C676 +
             C13139 * C1125 - C13143 * C1113 + C32254 * C2541 -
             C13144 * C2538) *
                C5988 +
            (C13137 * C269 - C13141 * C250 + C13138 * C691 - C13142 * C682 +
             C13139 * C1140 - C13143 * C1126 + C32254 * C2547 -
             C13144 * C2542) *
                C31864) *
               C32013) *
              C31925 * C31911 * C110 +
          (((C13147 - C13146 + C13149 - C13148 + C13151 - C13150 + C13153 -
             C13152) *
                C5988 +
            (C13155 - C13154 + C13157 - C13156 + C13159 - C13158 + C13161 -
             C13160) *
                C31864) *
               C32207 +
           ((C13504 - C13505 + C13506 - C13507 + C13508 - C13509 + C13510 -
             C13511) *
                C5988 +
            (C13512 - C13513 + C13514 - C13515 + C13516 - C13517 + C13518 -
             C13519) *
                C31864) *
               C32013) *
              C31925 * C31911 * C111 +
          (((C13163 - C13162 + C13165 - C13164 + C13167 - C13166 + C13169 -
             C13168) *
                C5988 +
            (C13171 - C13170 + C13173 - C13172 + C13175 - C13174 + C13177 -
             C13176) *
                C31864) *
               C32207 +
           ((C13137 * C253 - C13141 * C241 + C13138 * C685 - C13142 * C678 +
             C13139 * C1129 - C13143 * C1115 + C32254 * C2545 -
             C13144 * C2540) *
                C5988 +
            (C13137 * C271 - C13141 * C254 + C13138 * C693 - C13142 * C686 +
             C13139 * C1142 - C13143 * C1130 + C32254 * C2549 -
             C13144 * C2546) *
                C31864) *
               C32013) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C13137 * C126 - C13141 * C119 + C13138 * C354 - C13142 * C344 +
             C13139 * C364 - C13143 * C349 + C32254 * C2026 - C13144 * C2020) *
                C5988 +
            (C13137 * C140 - C13141 * C127 + C13138 * C374 - C13142 * C355 +
             C13139 * C379 - C13143 * C365 + C32254 * C2038 - C13144 * C2027) *
                C31864) *
               C32207 +
           ((C13992 - C13993 + C13994 - C13995 + C13996 - C13997 + C13998 -
             C13999) *
                C5988 +
            (C14000 - C14001 + C14002 - C14003 + C14004 - C14005 + C14006 -
             C14007) *
                C31864) *
               C32013) *
              C31925 * C235 +
          (((C13993 - C13992 + C13995 - C13994 + C13997 - C13996 + C13999 -
             C13998) *
                C5988 +
            (C14001 - C14000 + C14003 - C14002 + C14005 - C14004 + C14007 -
             C14006) *
                C31864) *
               C32207 +
           ((C14008 - C14009 + C14010 - C14011 + C14012 - C14013 + C14014 -
             C14015) *
                C5988 +
            (C14016 - C14017 + C14018 - C14019 + C14020 - C14021 + C14022 -
             C14023) *
                C31864) *
               C32013) *
              C31925 * C236 +
          (((C14009 - C14008 + C14011 - C14010 + C14013 - C14012 + C14015 -
             C14014) *
                C5988 +
            (C14017 - C14016 + C14019 - C14018 + C14021 - C14020 + C14023 -
             C14022) *
                C31864) *
               C32207 +
           ((C13137 * C947 - C13141 * C941 + C13138 * C1621 - C13142 * C1618 +
             C13139 * C6147 - C13143 * C6143 + C32254 * C7274 -
             C13144 * C7273) *
                C5988 +
            (C13137 * C959 - C13141 * C948 + C13138 * C1627 - C13142 * C1622 +
             C13139 * C6152 - C13143 * C6148 + C32254 * C7276 -
             C13144 * C7275) *
                C31864) *
               C32013) *
              C31925 * C237) *
         C31899) /
            (p * q * std::sqrt(p + q));
    d2ee[60] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C31966 * C126 - C113 * C119) * C114 +
                (C31966 * C140 - C113 * C127) * C102 + (C148 - C149) * C115 +
                (C150 - C151) * C103 + C168 * C116 + C169 * C104 + C170 * C117 +
                C171 * C105 + C172 * C118 + C173 * C106) *
                   C31955 * C31925 * C466 +
               ((C113 * C239 - C31966 * C249) * C114 +
                (C113 * C250 - C31966 * C269) * C102 + (C475 - C476) * C115 +
                (C477 - C478) * C103 + (C479 - C480) * C116 +
                (C481 - C482) * C104 + (C483 - C484) * C117 +
                (C485 - C486) * C105 + (C487 - C488) * C118 +
                (C489 - C490) * C106) *
                   C31955 * C31925 * C467) *
                  C468 +
              (((C149 - C148) * C114 + (C151 - C150) * C102 +
                (C153 - C152) * C115 + (C155 - C154) * C103 +
                (C157 - C156) * C116 + (C159 - C158) * C104 +
                (C161 - C160) * C117 + (C163 - C162) * C105 +
                (C164 - C165) * C118 + (C166 - C167) * C106) *
                   C31955 * C31925 * C466 +
               ((C476 - C475) * C114 + (C478 - C477) * C102 +
                (C480 - C479) * C115 + (C482 - C481) * C103 +
                (C484 - C483) * C116 + (C486 - C485) * C104 +
                (C488 - C487) * C117 + (C490 - C489) * C105 +
                (C31966 * C471 - C113 * C470) * C118 +
                (C31966 * C473 - C113 * C472) * C106) *
                   C31955 * C31925 * C467) *
                  C469) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C31966 * C126 - C113 * C119) * C812 +
                 (C31966 * C140 - C113 * C127) * C806 + (C148 - C149) * C813 +
                 (C150 - C151) * C807 + C168 * C814 + C169 * C32227) *
                    C32273 +
                ((C966 - C967) * C812 + (C968 - C969) * C806 + C1297 * C813 +
                 C1298 * C807 + C816 * C814 + C817 * C32227) *
                    C32261 +
                C1000 * C32238) *
                   C31925 * C466 +
               (((C967 - C966) * C812 + (C969 - C968) * C806 + C1299 * C813 +
                 C1300 * C807 + C1301 * C814 + C1302 * C32227) *
                    C32273 +
                ((C971 - C970) * C812 + (C973 - C972) * C806 + C1303 * C813 +
                 C1304 * C807 + C1305 * C814 + C1306 * C32227) *
                    C32261 +
                ((C978 - C979) * C812 + (C980 - C981) * C806 +
                 (C982 - C983) * C813 + (C984 - C985) * C807 +
                 (C986 - C987) * C814 + (C988 - C989) * C32227) *
                    C32238) *
                   C31925 * C467) *
                  C468 +
              ((((C149 - C148) * C812 + (C151 - C150) * C806 +
                 (C153 - C152) * C813 + (C155 - C154) * C807 +
                 (C157 - C156) * C814 + (C159 - C158) * C32227) *
                    C32273 +
                (C1299 * C812 + C1300 * C806 + C1301 * C813 + C1302 * C807 +
                 (C483 - C484) * C814 + (C485 - C486) * C32227) *
                    C32261 +
                (C1303 * C812 + C1304 * C806 + C1305 * C813 + C1306 * C807 +
                 (C826 - C827) * C814 + (C828 - C829) * C32227) *
                    C32238) *
                   C31925 * C466 +
               ((C1297 * C812 + C1298 * C806 + C816 * C813 + C817 * C807 +
                 (C484 - C483) * C814 + (C486 - C485) * C32227) *
                    C32273 +
                (C974 * C812 + C975 * C806 + C830 * C813 + C831 * C807 +
                 (C827 - C826) * C814 + (C829 - C828) * C32227) *
                    C32261 +
                ((C983 - C982) * C812 + (C985 - C984) * C806 +
                 (C987 - C986) * C813 + (C989 - C988) * C807 +
                 (C31966 * C1293 - C113 * C1292) * C814 +
                 (C31966 * C1295 - C113 * C1294) * C32227) *
                    C32238) *
                   C31925 * C467) *
                  C469)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C32274 * C126 - C1751 * C119 + C32263 * C354 - C1752 * C344 +
             C32241 * C364 - C1753 * C349) *
                C812 +
            (C32274 * C140 - C1751 * C127 + C32263 * C374 - C1752 * C355 +
             C32241 * C379 - C1753 * C365) *
                C806 +
            (C1755 - C1756 + C1757 - C1758 + C1759 - C1760) * C813 +
            (C1761 - C1762 + C1763 - C1764 + C1765 - C1766) * C807 +
            C1799 * C814 + C1800 * C32227) *
               C31955 * C31925 * C466 +
           ((C1751 * C239 - C32274 * C249 + C1752 * C676 - C32263 * C681 +
             C1753 * C1113 - C32241 * C1125) *
                C812 +
            (C1751 * C250 - C32274 * C269 + C1752 * C682 - C32263 * C691 +
             C1753 * C1126 - C32241 * C1140) *
                C806 +
            (C2195 - C2196 + C2197 - C2198 + C2199 - C2200) * C813 +
            (C2201 - C2202 + C2203 - C2204 + C2205 - C2206) * C807 +
            (C2207 - C2208 + C2209 - C2210 + C2211 - C2212) * C814 +
            (C2213 - C2214 + C2215 - C2216 + C2217 - C2218) * C32227) *
               C31955 * C31925 * C467) *
              C468 +
          (((C1756 - C1755 + C1758 - C1757 + C1760 - C1759) * C812 +
            (C1762 - C1761 + C1764 - C1763 + C1766 - C1765) * C806 +
            (C1768 - C1767 + C1770 - C1769 + C1772 - C1771) * C813 +
            (C1774 - C1773 + C1776 - C1775 + C1778 - C1777) * C807 +
            (C1779 - C1780 + C1781 - C1782 + C1783 - C1784) * C814 +
            (C1785 - C1786 + C1787 - C1788 + C1789 - C1790) * C32227) *
               C31955 * C31925 * C466 +
           ((C2196 - C2195 + C2198 - C2197 + C2200 - C2199) * C812 +
            (C2202 - C2201 + C2204 - C2203 + C2206 - C2205) * C806 +
            (C2208 - C2207 + C2210 - C2209 + C2212 - C2211) * C813 +
            (C2214 - C2213 + C2216 - C2215 + C2218 - C2217) * C807 +
            (C32274 * C255 - C1751 * C242 + C32263 * C687 - C1752 * C679 +
             C32241 * C2191 - C1753 * C2190) *
                C814 +
            (C32274 * C272 - C1751 * C256 + C32263 * C694 - C1752 * C688 +
             C32241 * C2193 - C1753 * C2192) *
                C32227) *
               C31955 * C31925 * C467) *
              C469)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C31966 * C126 - C113 * C119) * C5248 +
             (C31966 * C140 - C113 * C127) * C32270 + (C148 - C149) * C5249 +
             (C150 - C151) * C32257 + C168 * C5250 + C169 * C32227) *
                C5245 +
            ((C966 - C967) * C5248 + (C968 - C969) * C32270 + C1297 * C5249 +
             C1298 * C32257 + C816 * C5250 + C817 * C32227) *
                C5246 +
            C5372 * C32238) *
               C31925 * C466 +
           (((C967 - C966) * C5248 + (C969 - C968) * C32270 + C1299 * C5249 +
             C1300 * C32257 + C1301 * C5250 + C1302 * C32227) *
                C5245 +
            ((C971 - C970) * C5248 + (C973 - C972) * C32270 + C1303 * C5249 +
             C1304 * C32257 + C1305 * C5250 + C1306 * C32227) *
                C5246 +
            ((C978 - C979) * C5248 + (C980 - C981) * C32270 +
             (C982 - C983) * C5249 + (C984 - C985) * C32257 +
             (C986 - C987) * C5250 + (C988 - C989) * C32227) *
                C32238) *
               C31925 * C467) *
              C468 +
          ((((C149 - C148) * C5248 + (C151 - C150) * C32270 +
             (C153 - C152) * C5249 + (C155 - C154) * C32257 +
             (C157 - C156) * C5250 + (C159 - C158) * C32227) *
                C5245 +
            (C1299 * C5248 + C1300 * C32270 + C1301 * C5249 + C1302 * C32257 +
             C2987 * C5250 + C2988 * C32227) *
                C5246 +
            (C1303 * C5248 + C1304 * C32270 + C1305 * C5249 + C1306 * C32257 +
             (C826 - C827) * C5250 + (C828 - C829) * C32227) *
                C32238) *
               C31925 * C466 +
           ((C1297 * C5248 + C1298 * C32270 + C816 * C5249 + C817 * C32257 +
             C2659 * C5250 + C2660 * C32227) *
                C5245 +
            (C974 * C5248 + C975 * C32270 + C830 * C5249 + C831 * C32257 +
             (C827 - C826) * C5250 + (C829 - C828) * C32227) *
                C5246 +
            ((C983 - C982) * C5248 + (C985 - C984) * C32270 +
             (C987 - C986) * C5249 + (C989 - C988) * C32257 +
             (C31966 * C1293 - C113 * C1292) * C5250 +
             (C31966 * C1295 - C113 * C1294) * C32227) *
                C32238) *
               C31925 * C467) *
              C469)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C31966 * C126 - C113 * C119) * C5988 +
             (C31966 * C140 - C113 * C127) * C31864) *
                C5983 +
            ((C966 - C967) * C5988 + (C968 - C969) * C31864) * C5984 +
            C6072 * C5985 + C6077 * C5986 + C6080 * C5987) *
               C31925 * C466 +
           (((C967 - C966) * C5988 + (C969 - C968) * C31864) * C5983 +
            ((C971 - C970) * C5988 + (C973 - C972) * C31864) * C5984 +
            ((C978 - C979) * C5988 + (C980 - C981) * C31864) * C5985 +
            ((C6065 - C6064) * C5988 + (C6067 - C6066) * C31864) * C5986 +
            ((C6068 - C6069) * C5988 + (C6070 - C6071) * C31864) * C5987) *
               C31925 * C467) *
              C468 +
          ((((C149 - C148) * C5988 + (C151 - C150) * C31864) * C5983 +
            (C1299 * C5988 + C1300 * C31864) * C5984 +
            (C1303 * C5988 + C1304 * C31864) * C5985 +
            ((C982 - C983) * C5988 + (C984 - C985) * C31864) * C5986 +
            ((C6241 - C6242) * C5988 + (C6243 - C6244) * C31864) * C5987) *
               C31925 * C466 +
           ((C1297 * C5988 + C1298 * C31864) * C5983 +
            (C974 * C5988 + C975 * C31864) * C5984 +
            ((C983 - C982) * C5988 + (C985 - C984) * C31864) * C5985 +
            ((C6242 - C6241) * C5988 + (C6244 - C6243) * C31864) * C5986 +
            ((C31966 * C6237 - C113 * C6236) * C5988 +
             (C31966 * C6239 - C113 * C6238) * C31864) *
                C5987) *
               C31925 * C467) *
              C469)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C32274 * C126 - C1751 * C119 + C32263 * C354 - C1752 * C344 +
              C32241 * C364 - C1753 * C349) *
                 C5988 +
             (C32274 * C140 - C1751 * C127 + C32263 * C374 - C1752 * C355 +
              C32241 * C379 - C1753 * C365) *
                 C31864) *
                C5245 +
            ((C6645 - C6646 + C6647 - C6648 + C6649 - C6650) * C5988 +
             (C6651 - C6652 + C6653 - C6654 + C6655 - C6656) * C31864) *
                C5246 +
            C6693 * C32238) *
               C31925 * C466 +
           (((C6646 - C6645 + C6648 - C6647 + C6650 - C6649) * C5988 +
             (C6652 - C6651 + C6654 - C6653 + C6656 - C6655) * C31864) *
                C5245 +
            ((C6658 - C6657 + C6660 - C6659 + C6662 - C6661) * C5988 +
             (C6664 - C6663 + C6666 - C6665 + C6668 - C6667) * C31864) *
                C5246 +
            ((C6669 - C6670 + C6671 - C6672 + C6673 - C6674) * C5988 +
             (C6675 - C6676 + C6677 - C6678 + C6679 - C6680) * C31864) *
                C32238) *
               C31925 * C467) *
              C468 +
          ((((C1756 - C1755 + C1758 - C1757 + C1760 - C1759) * C5988 +
             (C1762 - C1761 + C1764 - C1763 + C1766 - C1765) * C31864) *
                C5245 +
            ((C2195 - C2196 + C2197 - C2198 + C2199 - C2200) * C5988 +
             (C2201 - C2202 + C2203 - C2204 + C2205 - C2206) * C31864) *
                C5246 +
            ((C6966 - C6967 + C6968 - C6969 + C6970 - C6971) * C5988 +
             (C6972 - C6973 + C6974 - C6975 + C6976 - C6977) * C31864) *
                C32238) *
               C31925 * C466 +
           (((C2196 - C2195 + C2198 - C2197 + C2200 - C2199) * C5988 +
             (C2202 - C2201 + C2204 - C2203 + C2206 - C2205) * C31864) *
                C5245 +
            ((C6967 - C6966 + C6969 - C6968 + C6971 - C6970) * C5988 +
             (C6973 - C6972 + C6975 - C6974 + C6977 - C6976) * C31864) *
                C5246 +
            ((C32274 * C949 - C1751 * C942 + C32263 * C1623 - C1752 * C1619 +
              C32241 * C6962 - C1753 * C6961) *
                 C5988 +
             (C32274 * C960 - C1751 * C950 + C32263 * C1628 - C1752 * C1624 +
              C32241 * C6964 - C1753 * C6963) *
                 C31864) *
                C32238) *
               C31925 * C467) *
              C469)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C9914 * C126 - C9917 * C119 + C9915 * C354 - C9918 * C344 +
             C32241 * C364 - C9919 * C349) *
                C5248 +
            (C9914 * C140 - C9917 * C127 + C9915 * C374 - C9918 * C355 +
             C32241 * C379 - C9919 * C365) *
                C32270 +
            (C9921 - C9922 + C9923 - C9924 + C9925 - C9926) * C5249 +
            (C9927 - C9928 + C9929 - C9930 + C9931 - C9932) * C32257 +
            C9965 * C5250 + C9966 * C32227) *
               C31955 * C31925 * C466 +
           ((C9917 * C239 - C9914 * C249 + C9918 * C676 - C9915 * C681 +
             C9919 * C1113 - C32241 * C1125) *
                C5248 +
            (C9917 * C250 - C9914 * C269 + C9918 * C682 - C9915 * C691 +
             C9919 * C1126 - C32241 * C1140) *
                C32270 +
            (C10333 - C10334 + C10335 - C10336 + C10337 - C10338) * C5249 +
            (C10339 - C10340 + C10341 - C10342 + C10343 - C10344) * C32257 +
            (C10345 - C10346 + C10347 - C10348 + C10349 - C10350) * C5250 +
            (C10351 - C10352 + C10353 - C10354 + C10355 - C10356) * C32227) *
               C31955 * C31925 * C467) *
              C468 +
          (((C9922 - C9921 + C9924 - C9923 + C9926 - C9925) * C5248 +
            (C9928 - C9927 + C9930 - C9929 + C9932 - C9931) * C32270 +
            (C9934 - C9933 + C9936 - C9935 + C9938 - C9937) * C5249 +
            (C9940 - C9939 + C9942 - C9941 + C9944 - C9943) * C32257 +
            (C9945 - C9946 + C9947 - C9948 + C9949 - C9950) * C5250 +
            (C9951 - C9952 + C9953 - C9954 + C9955 - C9956) * C32227) *
               C31955 * C31925 * C466 +
           ((C10334 - C10333 + C10336 - C10335 + C10338 - C10337) * C5248 +
            (C10340 - C10339 + C10342 - C10341 + C10344 - C10343) * C32270 +
            (C10346 - C10345 + C10348 - C10347 + C10350 - C10349) * C5249 +
            (C10352 - C10351 + C10354 - C10353 + C10356 - C10355) * C32257 +
            (C9914 * C255 - C9917 * C242 + C9915 * C687 - C9918 * C679 +
             C32241 * C2191 - C9919 * C2190) *
                C5250 +
            (C9914 * C272 - C9917 * C256 + C9915 * C694 - C9918 * C688 +
             C32241 * C2193 - C9919 * C2192) *
                C32227) *
               C31955 * C31925 * C467) *
              C469)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C9914 * C126 - C9917 * C119 + C9915 * C354 - C9918 * C344 +
              C32241 * C364 - C9919 * C349) *
                 C5988 +
             (C9914 * C140 - C9917 * C127 + C9915 * C374 - C9918 * C355 +
              C32241 * C379 - C9919 * C365) *
                 C31864) *
                C32273 +
            ((C10893 - C10894 + C10895 - C10896 + C10897 - C10898) * C5988 +
             (C10899 - C10900 + C10901 - C10902 + C10903 - C10904) * C31864) *
                C32261 +
            C10941 * C32238) *
               C31925 * C466 +
           (((C10894 - C10893 + C10896 - C10895 + C10898 - C10897) * C5988 +
             (C10900 - C10899 + C10902 - C10901 + C10904 - C10903) * C31864) *
                C32273 +
            ((C10906 - C10905 + C10908 - C10907 + C10910 - C10909) * C5988 +
             (C10912 - C10911 + C10914 - C10913 + C10916 - C10915) * C31864) *
                C32261 +
            ((C10917 - C10918 + C10919 - C10920 + C10921 - C10922) * C5988 +
             (C10923 - C10924 + C10925 - C10926 + C10927 - C10928) * C31864) *
                C32238) *
               C31925 * C467) *
              C468 +
          ((((C9922 - C9921 + C9924 - C9923 + C9926 - C9925) * C5988 +
             (C9928 - C9927 + C9930 - C9929 + C9932 - C9931) * C31864) *
                C32273 +
            ((C10333 - C10334 + C10335 - C10336 + C10337 - C10338) * C5988 +
             (C10339 - C10340 + C10341 - C10342 + C10343 - C10344) * C31864) *
                C32261 +
            ((C11198 - C11199 + C11200 - C11201 + C11202 - C11203) * C5988 +
             (C11204 - C11205 + C11206 - C11207 + C11208 - C11209) * C31864) *
                C32238) *
               C31925 * C466 +
           (((C10334 - C10333 + C10336 - C10335 + C10338 - C10337) * C5988 +
             (C10340 - C10339 + C10342 - C10341 + C10344 - C10343) * C31864) *
                C32273 +
            ((C11199 - C11198 + C11201 - C11200 + C11203 - C11202) * C5988 +
             (C11205 - C11204 + C11207 - C11206 + C11209 - C11208) * C31864) *
                C32261 +
            ((C9914 * C949 - C9917 * C942 + C9915 * C1623 - C9918 * C1619 +
              C32241 * C6962 - C9919 * C6961) *
                 C5988 +
             (C9914 * C960 - C9917 * C950 + C9915 * C1628 - C9918 * C1624 +
              C32241 * C6964 - C9919 * C6963) *
                 C31864) *
                C32238) *
               C31925 * C467) *
              C469)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C11587 * C126 - C11592 * C119 + C11588 * C354 - C11593 * C344 +
             C11589 * C364 - C11594 * C349 + C11590 * C2026 - C11595 * C2020 +
             C11591 * C2032 - C11596 * C2023) *
                C5988 +
            (C11587 * C140 - C11592 * C127 + C11588 * C374 - C11593 * C355 +
             C11589 * C379 - C11594 * C365 + C11590 * C2038 - C11595 * C2027 +
             C11591 * C2041 - C11596 * C2033) *
                C31864) *
               C31955 * C31925 * C466 +
           ((C11592 * C239 - C11587 * C249 + C11593 * C676 - C11588 * C681 +
             C11594 * C1113 - C11589 * C1125 + C11595 * C2538 - C11590 * C2541 +
             C11596 * C6804 - C11591 * C6808) *
                C5988 +
            (C11592 * C250 - C11587 * C269 + C11593 * C682 - C11588 * C691 +
             C11594 * C1126 - C11589 * C1140 + C11595 * C2542 - C11590 * C2547 +
             C11596 * C6809 - C11591 * C6813) *
                C31864) *
               C31955 * C31925 * C467) *
              C468 +
          (((C11592 * C120 - C11587 * C128 + C11593 * C345 - C11588 * C356 +
             C11594 * C350 - C11589 * C366 + C11595 * C2021 - C11590 * C2028 +
             C11596 * C2024 - C11591 * C2034) *
                C5988 +
            (C11592 * C129 - C11587 * C141 + C11593 * C357 - C11588 * C375 +
             C11594 * C367 - C11589 * C380 + C11595 * C2029 - C11590 * C2039 +
             C11596 * C2035 - C11591 * C2042) *
                C31864) *
               C31955 * C31925 * C466 +
           ((C11587 * C251 - C11592 * C240 + C11588 * C683 - C11593 * C677 +
             C11589 * C1127 - C11594 * C1114 + C11590 * C2543 - C11595 * C2539 +
             C11591 * C11812 - C11596 * C11811) *
                C5988 +
            (C11587 * C270 - C11592 * C252 + C11588 * C692 - C11593 * C684 +
             C11589 * C1141 - C11594 * C1128 + C11590 * C2548 - C11595 * C2544 +
             C11591 * C11814 - C11596 * C11813) *
                C31864) *
               C31955 * C31925 * C467) *
              C469)) /
            (p * q * std::sqrt(p + q));
    d2ee[61] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C31966 * C126 - C113 * C119) * C114 +
                (C31966 * C140 - C113 * C127) * C102 + (C148 - C149) * C115 +
                (C150 - C151) * C103 + C168 * C116 + C169 * C104 + C170 * C117 +
                C171 * C105 + C172 * C118 + C173 * C106) *
                   C31955 * C572 +
               ((C113 * C344 - C31966 * C354) * C114 +
                (C113 * C355 - C31966 * C374) * C102 + (C579 - C580) * C115 +
                (C581 - C582) * C103 + (C583 - C584) * C116 +
                (C585 - C586) * C104 + (C587 - C588) * C117 +
                (C589 - C590) * C105 + (C591 - C592) * C118 +
                (C593 - C594) * C106) *
                   C31955 * C573) *
                  C466 +
              (((C113 * C239 - C31966 * C249) * C114 +
                (C113 * C250 - C31966 * C269) * C102 + (C475 - C476) * C115 +
                (C477 - C478) * C103 + (C479 - C480) * C116 +
                (C481 - C482) * C104 + (C483 - C484) * C117 +
                (C485 - C486) * C105 + (C487 - C488) * C118 +
                (C489 - C490) * C106) *
                   C31955 * C572 +
               ((C31966 * C681 - C113 * C676) * C114 +
                (C31966 * C691 - C113 * C682) * C102 +
                (C31966 * C683 - C113 * C677) * C115 +
                (C31966 * C692 - C113 * C684) * C103 +
                (C31966 * C685 - C113 * C678) * C116 +
                (C31966 * C693 - C113 * C686) * C104 +
                (C31966 * C687 - C113 * C679) * C117 +
                (C31966 * C694 - C113 * C688) * C105 +
                (C31966 * C689 - C113 * C680) * C118 +
                (C31966 * C695 - C113 * C690) * C106) *
                   C31955 * C573) *
                  C467) *
             C31899 +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C31966 * C126 - C113 * C119) * C812 +
                 (C31966 * C140 - C113 * C127) * C806 + (C148 - C149) * C813 +
                 (C150 - C151) * C807 + C168 * C814 + C169 * C32227) *
                    C32273 +
                ((C966 - C967) * C812 + (C968 - C969) * C806 + C1297 * C813 +
                 C1298 * C807 + C816 * C814 + C817 * C32227) *
                    C32261 +
                C1000 * C32238) *
                   C572 +
               (((C113 * C344 - C31966 * C354) * C812 +
                 (C113 * C355 - C31966 * C374) * C806 + (C579 - C580) * C813 +
                 (C581 - C582) * C807 + (C583 - C584) * C814 +
                 (C585 - C586) * C32227) *
                    C32273 +
                ((C1631 - C1632) * C812 + (C1633 - C1634) * C806 +
                 (C1457 - C1458) * C813 + (C1459 - C1460) * C807 +
                 (C1461 - C1462) * C814 + (C1463 - C1464) * C32227) *
                    C32261 +
                ((C1635 - C1636) * C812 + (C1637 - C1638) * C806 +
                 (C1465 - C1466) * C813 + (C1467 - C1468) * C807 +
                 (C1469 - C1470) * C814 + (C1471 - C1472) * C32227) *
                    C32238) *
                   C573) *
                  C466 +
              ((((C967 - C966) * C812 + (C969 - C968) * C806 + C1299 * C813 +
                 C1300 * C807 + C1301 * C814 + C1302 * C32227) *
                    C32273 +
                ((C971 - C970) * C812 + (C973 - C972) * C806 + C1303 * C813 +
                 C1304 * C807 + C1305 * C814 + C1306 * C32227) *
                    C32261 +
                ((C978 - C979) * C812 + (C980 - C981) * C806 +
                 (C982 - C983) * C813 + (C984 - C985) * C807 +
                 (C986 - C987) * C814 + (C988 - C989) * C32227) *
                    C32238) *
                   C572 +
               (((C1632 - C1631) * C812 + (C1634 - C1633) * C806 +
                 (C1458 - C1457) * C813 + (C1460 - C1459) * C807 +
                 (C1462 - C1461) * C814 + (C1464 - C1463) * C32227) *
                    C32273 +
                ((C1636 - C1635) * C812 + (C1638 - C1637) * C806 +
                 (C1466 - C1465) * C813 + (C1468 - C1467) * C807 +
                 (C1470 - C1469) * C814 + (C1472 - C1471) * C32227) *
                    C32261 +
                ((C31966 * C1621 - C113 * C1618) * C812 +
                 (C31966 * C1627 - C113 * C1622) * C806 +
                 (C31966 * C1623 - C113 * C1619) * C813 +
                 (C31966 * C1628 - C113 * C1624) * C807 +
                 (C31966 * C1625 - C113 * C1620) * C814 +
                 (C31966 * C1629 - C113 * C1626) * C32227) *
                    C32238) *
                   C573) *
                  C467) *
             C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C32274 * C126 - C1751 * C119 + C32263 * C354 - C1752 * C344 +
             C32241 * C364 - C1753 * C349) *
                C812 +
            (C32274 * C140 - C1751 * C127 + C32263 * C374 - C1752 * C355 +
             C32241 * C379 - C1753 * C365) *
                C806 +
            (C1755 - C1756 + C1757 - C1758 + C1759 - C1760) * C813 +
            (C1761 - C1762 + C1763 - C1764 + C1765 - C1766) * C807 +
            C1799 * C814 + C1800 * C32227) *
               C31955 * C572 +
           ((C1751 * C344 - C32274 * C354 + C1752 * C349 - C32263 * C364 +
             C1753 * C2020 - C32241 * C2026) *
                C812 +
            (C1751 * C355 - C32274 * C374 + C1752 * C365 - C32263 * C379 +
             C1753 * C2027 - C32241 * C2038) *
                C806 +
            (C2369 - C2370 + C2371 - C2372 + C2373 - C2374) * C813 +
            (C2375 - C2376 + C2377 - C2378 + C2379 - C2380) * C807 +
            (C2381 - C2382 + C2383 - C2384 + C2385 - C2386) * C814 +
            (C2387 - C2388 + C2389 - C2390 + C2391 - C2392) * C32227) *
               C31955 * C573) *
              C466 +
          (((C1751 * C239 - C32274 * C249 + C1752 * C676 - C32263 * C681 +
             C1753 * C1113 - C32241 * C1125) *
                C812 +
            (C1751 * C250 - C32274 * C269 + C1752 * C682 - C32263 * C691 +
             C1753 * C1126 - C32241 * C1140) *
                C806 +
            (C2195 - C2196 + C2197 - C2198 + C2199 - C2200) * C813 +
            (C2201 - C2202 + C2203 - C2204 + C2205 - C2206) * C807 +
            (C2207 - C2208 + C2209 - C2210 + C2211 - C2212) * C814 +
            (C2213 - C2214 + C2215 - C2216 + C2217 - C2218) * C32227) *
               C31955 * C572 +
           ((C32274 * C681 - C1751 * C676 + C32263 * C1125 - C1752 * C1113 +
             C32241 * C2541 - C1753 * C2538) *
                C812 +
            (C32274 * C691 - C1751 * C682 + C32263 * C1140 - C1752 * C1126 +
             C32241 * C2547 - C1753 * C2542) *
                C806 +
            (C32274 * C683 - C1751 * C677 + C32263 * C1127 - C1752 * C1114 +
             C32241 * C2543 - C1753 * C2539) *
                C813 +
            (C32274 * C692 - C1751 * C684 + C32263 * C1141 - C1752 * C1128 +
             C32241 * C2548 - C1753 * C2544) *
                C807 +
            (C32274 * C685 - C1751 * C678 + C32263 * C1129 - C1752 * C1115 +
             C32241 * C2545 - C1753 * C2540) *
                C814 +
            (C32274 * C693 - C1751 * C686 + C32263 * C1142 - C1752 * C1130 +
             C32241 * C2549 - C1753 * C2546) *
                C32227) *
               C31955 * C573) *
              C467) *
         C31899) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C31966 * C126 - C113 * C119) * C5248 +
             (C31966 * C140 - C113 * C127) * C32270 + (C148 - C149) * C5249 +
             (C150 - C151) * C32257 + C168 * C5250 + C169 * C32227) *
                C5245 +
            ((C966 - C967) * C5248 + (C968 - C969) * C32270 + C1297 * C5249 +
             C1298 * C32257 + C816 * C5250 + C817 * C32227) *
                C5246 +
            C5372 * C32238) *
               C572 +
           (((C113 * C344 - C31966 * C354) * C5248 +
             (C113 * C355 - C31966 * C374) * C32270 + (C579 - C580) * C5249 +
             (C581 - C582) * C32257 + (C583 - C584) * C5250 +
             (C585 - C586) * C32227) *
                C5245 +
            ((C1631 - C1632) * C5248 + (C1633 - C1634) * C32270 +
             (C1457 - C1458) * C5249 + (C1459 - C1460) * C32257 +
             (C1461 - C1462) * C5250 + (C1463 - C1464) * C32227) *
                C5246 +
            ((C1635 - C1636) * C5248 + (C1637 - C1638) * C32270 +
             (C1465 - C1466) * C5249 + (C1467 - C1468) * C32257 +
             (C1469 - C1470) * C5250 + (C1471 - C1472) * C32227) *
                C32238) *
               C573) *
              C466 +
          ((((C967 - C966) * C5248 + (C969 - C968) * C32270 + C1299 * C5249 +
             C1300 * C32257 + C1301 * C5250 + C1302 * C32227) *
                C5245 +
            ((C971 - C970) * C5248 + (C973 - C972) * C32270 + C1303 * C5249 +
             C1304 * C32257 + C1305 * C5250 + C1306 * C32227) *
                C5246 +
            ((C978 - C979) * C5248 + (C980 - C981) * C32270 +
             (C982 - C983) * C5249 + (C984 - C985) * C32257 +
             (C986 - C987) * C5250 + (C988 - C989) * C32227) *
                C32238) *
               C572 +
           (((C1632 - C1631) * C5248 + (C1634 - C1633) * C32270 +
             (C1458 - C1457) * C5249 + (C1460 - C1459) * C32257 +
             (C1462 - C1461) * C5250 + (C1464 - C1463) * C32227) *
                C5245 +
            ((C1636 - C1635) * C5248 + (C1638 - C1637) * C32270 +
             (C1466 - C1465) * C5249 + (C1468 - C1467) * C32257 +
             (C1470 - C1469) * C5250 + (C1472 - C1471) * C32227) *
                C5246 +
            ((C31966 * C1621 - C113 * C1618) * C5248 +
             (C31966 * C1627 - C113 * C1622) * C32270 +
             (C31966 * C1623 - C113 * C1619) * C5249 +
             (C31966 * C1628 - C113 * C1624) * C32257 +
             (C31966 * C1625 - C113 * C1620) * C5250 +
             (C31966 * C1629 - C113 * C1626) * C32227) *
                C32238) *
               C573) *
              C467) *
         C31899) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C31966 * C126 - C113 * C119) * C5988 +
             (C31966 * C140 - C113 * C127) * C31864) *
                C5983 +
            ((C966 - C967) * C5988 + (C968 - C969) * C31864) * C5984 +
            C6072 * C5985 + C6077 * C5986 + C6080 * C5987) *
               C572 +
           (((C113 * C344 - C31966 * C354) * C5988 +
             (C113 * C355 - C31966 * C374) * C31864) *
                C5983 +
            ((C1631 - C1632) * C5988 + (C1633 - C1634) * C31864) * C5984 +
            ((C1635 - C1636) * C5988 + (C1637 - C1638) * C31864) * C5985 +
            ((C6417 - C6418) * C5988 + (C6419 - C6420) * C31864) * C5986 +
            ((C6421 - C6422) * C5988 + (C6423 - C6424) * C31864) * C5987) *
               C573) *
              C466 +
          ((((C967 - C966) * C5988 + (C969 - C968) * C31864) * C5983 +
            ((C971 - C970) * C5988 + (C973 - C972) * C31864) * C5984 +
            ((C978 - C979) * C5988 + (C980 - C981) * C31864) * C5985 +
            ((C6065 - C6064) * C5988 + (C6067 - C6066) * C31864) * C5986 +
            ((C6068 - C6069) * C5988 + (C6070 - C6071) * C31864) * C5987) *
               C572 +
           (((C1632 - C1631) * C5988 + (C1634 - C1633) * C31864) * C5983 +
            ((C1636 - C1635) * C5988 + (C1638 - C1637) * C31864) * C5984 +
            ((C6418 - C6417) * C5988 + (C6420 - C6419) * C31864) * C5985 +
            ((C6422 - C6421) * C5988 + (C6424 - C6423) * C31864) * C5986 +
            ((C31966 * C6413 - C113 * C6412) * C5988 +
             (C31966 * C6415 - C113 * C6414) * C31864) *
                C5987) *
               C573) *
              C467) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C32274 * C126 - C1751 * C119 + C32263 * C354 - C1752 * C344 +
              C32241 * C364 - C1753 * C349) *
                 C5988 +
             (C32274 * C140 - C1751 * C127 + C32263 * C374 - C1752 * C355 +
              C32241 * C379 - C1753 * C365) *
                 C31864) *
                C5245 +
            ((C6645 - C6646 + C6647 - C6648 + C6649 - C6650) * C5988 +
             (C6651 - C6652 + C6653 - C6654 + C6655 - C6656) * C31864) *
                C5246 +
            C6693 * C32238) *
               C572 +
           (((C1751 * C344 - C32274 * C354 + C1752 * C349 - C32263 * C364 +
              C1753 * C2020 - C32241 * C2026) *
                 C5988 +
             (C1751 * C355 - C32274 * C374 + C1752 * C365 - C32263 * C379 +
              C1753 * C2027 - C32241 * C2038) *
                 C31864) *
                C5245 +
            ((C7278 - C7279 + C7280 - C7281 + C7282 - C7283) * C5988 +
             (C7284 - C7285 + C7286 - C7287 + C7288 - C7289) * C31864) *
                C5246 +
            ((C7290 - C7291 + C7292 - C7293 + C7294 - C7295) * C5988 +
             (C7296 - C7297 + C7298 - C7299 + C7300 - C7301) * C31864) *
                C32238) *
               C573) *
              C466 +
          ((((C6646 - C6645 + C6648 - C6647 + C6650 - C6649) * C5988 +
             (C6652 - C6651 + C6654 - C6653 + C6656 - C6655) * C31864) *
                C5245 +
            ((C6658 - C6657 + C6660 - C6659 + C6662 - C6661) * C5988 +
             (C6664 - C6663 + C6666 - C6665 + C6668 - C6667) * C31864) *
                C5246 +
            ((C6669 - C6670 + C6671 - C6672 + C6673 - C6674) * C5988 +
             (C6675 - C6676 + C6677 - C6678 + C6679 - C6680) * C31864) *
                C32238) *
               C572 +
           (((C7279 - C7278 + C7281 - C7280 + C7283 - C7282) * C5988 +
             (C7285 - C7284 + C7287 - C7286 + C7289 - C7288) * C31864) *
                C5245 +
            ((C7291 - C7290 + C7293 - C7292 + C7295 - C7294) * C5988 +
             (C7297 - C7296 + C7299 - C7298 + C7301 - C7300) * C31864) *
                C5246 +
            ((C32274 * C1621 - C1751 * C1618 + C32263 * C6147 - C1752 * C6143 +
              C32241 * C7274 - C1753 * C7273) *
                 C5988 +
             (C32274 * C1627 - C1751 * C1622 + C32263 * C6152 - C1752 * C6148 +
              C32241 * C7276 - C1753 * C7275) *
                 C31864) *
                C32238) *
               C573) *
              C467) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C9914 * C126 - C9917 * C119 + C9915 * C354 - C9918 * C344 +
             C32241 * C364 - C9919 * C349) *
                C5248 +
            (C9914 * C140 - C9917 * C127 + C9915 * C374 - C9918 * C355 +
             C32241 * C379 - C9919 * C365) *
                C32270 +
            (C9921 - C9922 + C9923 - C9924 + C9925 - C9926) * C5249 +
            (C9927 - C9928 + C9929 - C9930 + C9931 - C9932) * C32257 +
            C9965 * C5250 + C9966 * C32227) *
               C31955 * C572 +
           ((C9917 * C344 - C9914 * C354 + C9918 * C349 - C9915 * C364 +
             C9919 * C2020 - C32241 * C2026) *
                C5248 +
            (C9917 * C355 - C9914 * C374 + C9918 * C365 - C9915 * C379 +
             C9919 * C2027 - C32241 * C2038) *
                C32270 +
            (C10503 - C10504 + C10505 - C10506 + C10507 - C10508) * C5249 +
            (C10509 - C10510 + C10511 - C10512 + C10513 - C10514) * C32257 +
            (C10515 - C10516 + C10517 - C10518 + C10519 - C10520) * C5250 +
            (C10521 - C10522 + C10523 - C10524 + C10525 - C10526) * C32227) *
               C31955 * C573) *
              C466 +
          (((C9917 * C239 - C9914 * C249 + C9918 * C676 - C9915 * C681 +
             C9919 * C1113 - C32241 * C1125) *
                C5248 +
            (C9917 * C250 - C9914 * C269 + C9918 * C682 - C9915 * C691 +
             C9919 * C1126 - C32241 * C1140) *
                C32270 +
            (C10333 - C10334 + C10335 - C10336 + C10337 - C10338) * C5249 +
            (C10339 - C10340 + C10341 - C10342 + C10343 - C10344) * C32257 +
            (C10345 - C10346 + C10347 - C10348 + C10349 - C10350) * C5250 +
            (C10351 - C10352 + C10353 - C10354 + C10355 - C10356) * C32227) *
               C31955 * C572 +
           ((C9914 * C681 - C9917 * C676 + C9915 * C1125 - C9918 * C1113 +
             C32241 * C2541 - C9919 * C2538) *
                C5248 +
            (C9914 * C691 - C9917 * C682 + C9915 * C1140 - C9918 * C1126 +
             C32241 * C2547 - C9919 * C2542) *
                C32270 +
            (C9914 * C683 - C9917 * C677 + C9915 * C1127 - C9918 * C1114 +
             C32241 * C2543 - C9919 * C2539) *
                C5249 +
            (C9914 * C692 - C9917 * C684 + C9915 * C1141 - C9918 * C1128 +
             C32241 * C2548 - C9919 * C2544) *
                C32257 +
            (C9914 * C685 - C9917 * C678 + C9915 * C1129 - C9918 * C1115 +
             C32241 * C2545 - C9919 * C2540) *
                C5250 +
            (C9914 * C693 - C9917 * C686 + C9915 * C1142 - C9918 * C1130 +
             C32241 * C2549 - C9919 * C2546) *
                C32227) *
               C31955 * C573) *
              C467) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C9914 * C126 - C9917 * C119 + C9915 * C354 - C9918 * C344 +
              C32241 * C364 - C9919 * C349) *
                 C5988 +
             (C9914 * C140 - C9917 * C127 + C9915 * C374 - C9918 * C355 +
              C32241 * C379 - C9919 * C365) *
                 C31864) *
                C32273 +
            ((C10893 - C10894 + C10895 - C10896 + C10897 - C10898) * C5988 +
             (C10899 - C10900 + C10901 - C10902 + C10903 - C10904) * C31864) *
                C32261 +
            C10941 * C32238) *
               C572 +
           (((C9917 * C344 - C9914 * C354 + C9918 * C349 - C9915 * C364 +
              C9919 * C2020 - C32241 * C2026) *
                 C5988 +
             (C9917 * C355 - C9914 * C374 + C9918 * C365 - C9915 * C379 +
              C9919 * C2027 - C32241 * C2038) *
                 C31864) *
                C32273 +
            ((C11502 - C11503 + C11504 - C11505 + C11506 - C11507) * C5988 +
             (C11508 - C11509 + C11510 - C11511 + C11512 - C11513) * C31864) *
                C32261 +
            ((C11514 - C11515 + C11516 - C11517 + C11518 - C11519) * C5988 +
             (C11520 - C11521 + C11522 - C11523 + C11524 - C11525) * C31864) *
                C32238) *
               C573) *
              C466 +
          ((((C10894 - C10893 + C10896 - C10895 + C10898 - C10897) * C5988 +
             (C10900 - C10899 + C10902 - C10901 + C10904 - C10903) * C31864) *
                C32273 +
            ((C10906 - C10905 + C10908 - C10907 + C10910 - C10909) * C5988 +
             (C10912 - C10911 + C10914 - C10913 + C10916 - C10915) * C31864) *
                C32261 +
            ((C10917 - C10918 + C10919 - C10920 + C10921 - C10922) * C5988 +
             (C10923 - C10924 + C10925 - C10926 + C10927 - C10928) * C31864) *
                C32238) *
               C572 +
           (((C11503 - C11502 + C11505 - C11504 + C11507 - C11506) * C5988 +
             (C11509 - C11508 + C11511 - C11510 + C11513 - C11512) * C31864) *
                C32273 +
            ((C11515 - C11514 + C11517 - C11516 + C11519 - C11518) * C5988 +
             (C11521 - C11520 + C11523 - C11522 + C11525 - C11524) * C31864) *
                C32261 +
            ((C9914 * C1621 - C9917 * C1618 + C9915 * C6147 - C9918 * C6143 +
              C32241 * C7274 - C9919 * C7273) *
                 C5988 +
             (C9914 * C1627 - C9917 * C1622 + C9915 * C6152 - C9918 * C6148 +
              C32241 * C7276 - C9919 * C7275) *
                 C31864) *
                C32238) *
               C573) *
              C467) *
         C31899) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C11587 * C126 - C11592 * C119 + C11588 * C354 - C11593 * C344 +
             C11589 * C364 - C11594 * C349 + C11590 * C2026 - C11595 * C2020 +
             C11591 * C2032 - C11596 * C2023) *
                C5988 +
            (C11587 * C140 - C11592 * C127 + C11588 * C374 - C11593 * C355 +
             C11589 * C379 - C11594 * C365 + C11590 * C2038 - C11595 * C2027 +
             C11591 * C2041 - C11596 * C2033) *
                C31864) *
               C31955 * C572 +
           ((C11592 * C344 - C11587 * C354 + C11593 * C349 - C11588 * C364 +
             C11594 * C2020 - C11589 * C2026 + C11595 * C2023 - C11590 * C2032 +
             C11596 * C11721 - C11591 * C11723) *
                C5988 +
            (C11592 * C355 - C11587 * C374 + C11593 * C365 - C11588 * C379 +
             C11594 * C2027 - C11589 * C2038 + C11595 * C2033 - C11590 * C2041 +
             C11596 * C11724 - C11591 * C11727) *
                C31864) *
               C31955 * C573) *
              C466 +
          (((C11592 * C239 - C11587 * C249 + C11593 * C676 - C11588 * C681 +
             C11594 * C1113 - C11589 * C1125 + C11595 * C2538 - C11590 * C2541 +
             C11596 * C6804 - C11591 * C6808) *
                C5988 +
            (C11592 * C250 - C11587 * C269 + C11593 * C682 - C11588 * C691 +
             C11594 * C1126 - C11589 * C1140 + C11595 * C2542 - C11590 * C2547 +
             C11596 * C6809 - C11591 * C6813) *
                C31864) *
               C31955 * C572 +
           ((C11587 * C681 - C11592 * C676 + C11588 * C1125 - C11593 * C1113 +
             C11589 * C2541 - C11594 * C2538 + C11590 * C6808 - C11595 * C6804 +
             C11591 * C11984 - C11596 * C11983) *
                C5988 +
            (C11587 * C691 - C11592 * C682 + C11588 * C1140 - C11593 * C1126 +
             C11589 * C2547 - C11594 * C2542 + C11590 * C6813 - C11595 * C6809 +
             C11591 * C11986 - C11596 * C11985) *
                C31864) *
               C31955 * C573) *
              C467) *
         C31899) /
            (p * q * std::sqrt(p + q));
    d2ee[62] +=
        (-0.25 * std::pow(Pi, 2.5) *
             (((C31966 * C126 - C113 * C119) * C114 +
               (C31966 * C140 - C113 * C127) * C102 + (C148 - C149) * C115 +
               (C150 - C151) * C103 + C168 * C116 + C169 * C104 + C170 * C117 +
               C171 * C105 + C172 * C118 + C173 * C106) *
                  C31955 * C31925 * C31911 * C110 +
              ((C149 - C148) * C114 + (C151 - C150) * C102 +
               (C153 - C152) * C115 + (C155 - C154) * C103 +
               (C157 - C156) * C116 + (C159 - C158) * C104 +
               (C161 - C160) * C117 + (C163 - C162) * C105 +
               (C164 - C165) * C118 + (C166 - C167) * C106) *
                  C31955 * C31925 * C31911 * C111 +
              (C168 * C114 + C169 * C102 + C170 * C115 + C171 * C103 +
               C172 * C116 + C173 * C104 + (C165 - C164) * C117 +
               (C167 - C166) * C105 + (C31966 * C138 - C113 * C125) * C118 +
               (C31966 * C146 - C113 * C139) * C106) *
                  C31955 * C31925 * C31911 * C112) -
         0.25 * std::pow(Pi, 2.5) *
             (((C31966 * C126 - C113 * C119) * C114 +
               (C31966 * C140 - C113 * C127) * C102 + (C148 - C149) * C115 +
               (C150 - C151) * C103 + C168 * C116 + C169 * C104 + C170 * C117 +
               C171 * C105 + C172 * C118 + C173 * C106) *
                  C31955 * C31925 * C235 +
              ((C113 * C239 - C31966 * C249) * C114 +
               (C113 * C250 - C31966 * C269) * C102 +
               (C113 * C240 - C31966 * C251) * C115 +
               (C113 * C252 - C31966 * C270) * C103 +
               (C113 * C241 - C31966 * C253) * C116 +
               (C113 * C254 - C31966 * C271) * C104 +
               (C113 * C242 - C31966 * C255) * C117 +
               (C113 * C256 - C31966 * C272) * C105 +
               (C113 * C243 - C31966 * C257) * C118 +
               (C113 * C258 - C31966 * C273) * C106) *
                  C31955 * C31925 * C236 +
              ((C31966 * C259 - C113 * C244) * C114 +
               (C31966 * C274 - C113 * C260) * C102 +
               (C31966 * C261 - C113 * C245) * C115 +
               (C31966 * C275 - C113 * C262) * C103 +
               (C31966 * C263 - C113 * C246) * C116 +
               (C31966 * C276 - C113 * C264) * C104 +
               (C31966 * C265 - C113 * C247) * C117 +
               (C31966 * C277 - C113 * C266) * C105 +
               (C31966 * C267 - C113 * C248) * C118 +
               (C31966 * C278 - C113 * C268) * C106) *
                  C31955 * C31925 * C237) *
             C31899 +
         0.5 * std::pow(Pi, 2.5) *
             (((C31966 * C126 - C113 * C119) * C114 +
               (C31966 * C140 - C113 * C127) * C102 + (C148 - C149) * C115 +
               (C150 - C151) * C103 + C168 * C116 + C169 * C104 + C170 * C117 +
               C171 * C105 + C172 * C118 + C173 * C106) *
                  C31955 * C341 +
              ((C113 * C344 - C31966 * C354) * C114 +
               (C113 * C355 - C31966 * C374) * C102 +
               (C113 * C345 - C31966 * C356) * C115 +
               (C113 * C357 - C31966 * C375) * C103 +
               (C113 * C346 - C31966 * C358) * C116 +
               (C113 * C359 - C31966 * C376) * C104 +
               (C113 * C347 - C31966 * C360) * C117 +
               (C113 * C361 - C31966 * C377) * C105 +
               (C113 * C348 - C31966 * C362) * C118 +
               (C113 * C363 - C31966 * C378) * C106) *
                  C31955 * C342 +
              ((C31966 * C364 - C113 * C349) * C114 +
               (C31966 * C379 - C113 * C365) * C102 +
               (C31966 * C366 - C113 * C350) * C115 +
               (C31966 * C380 - C113 * C367) * C103 +
               (C31966 * C368 - C113 * C351) * C116 +
               (C31966 * C381 - C113 * C369) * C104 +
               (C31966 * C370 - C113 * C352) * C117 +
               (C31966 * C382 - C113 * C371) * C105 +
               (C31966 * C372 - C113 * C353) * C118 +
               (C31966 * C383 - C113 * C373) * C106) *
                  C31955 * C343) *
             C31911 * C31899 -
         0.25 * std::pow(Pi, 2.5) *
             ((((C31966 * C126 - C113 * C119) * C812 +
                (C31966 * C140 - C113 * C127) * C806 + (C148 - C149) * C813 +
                (C150 - C151) * C807 + C168 * C814 + C169 * C32227) *
                   C32273 +
               ((C31966 * C249 - C113 * C239) * C812 +
                (C31966 * C269 - C113 * C250) * C806 + (C476 - C475) * C813 +
                (C478 - C477) * C807 + C816 * C814 + C817 * C32227) *
                   C32261 +
               ((C31966 * C259 - C113 * C244) * C812 +
                (C31966 * C274 - C113 * C260) * C806 + (C818 - C819) * C813 +
                (C820 - C821) * C807 + C830 * C814 + C831 * C32227) *
                   C32238) *
                  C31925 * C31911 * C110 +
              (((C149 - C148) * C812 + (C151 - C150) * C806 +
                (C153 - C152) * C813 + (C155 - C154) * C807 +
                (C157 - C156) * C814 + (C159 - C158) * C32227) *
                   C32273 +
               ((C475 - C476) * C812 + (C477 - C478) * C806 +
                (C479 - C480) * C813 + (C481 - C482) * C807 +
                (C483 - C484) * C814 + (C485 - C486) * C32227) *
                   C32261 +
               ((C819 - C818) * C812 + (C821 - C820) * C806 +
                (C823 - C822) * C813 + (C825 - C824) * C807 +
                (C826 - C827) * C814 + (C828 - C829) * C32227) *
                   C32238) *
                  C31925 * C31911 * C111 +
              ((C168 * C812 + C169 * C806 + C170 * C813 + C171 * C807 +
                C172 * C814 + C173 * C32227) *
                   C32273 +
               (C816 * C812 + C817 * C806 + (C484 - C483) * C813 +
                (C486 - C485) * C807 + (C488 - C487) * C814 +
                (C490 - C489) * C32227) *
                   C32261 +
               (C830 * C812 + C831 * C806 + (C827 - C826) * C813 +
                (C829 - C828) * C807 + (C31966 * C267 - C113 * C248) * C814 +
                (C31966 * C278 - C113 * C268) * C32227) *
                   C32238) *
                  C31925 * C31911 * C112) -
         0.25 * std::pow(Pi, 2.5) *
             ((((C31966 * C126 - C113 * C119) * C812 +
                (C31966 * C140 - C113 * C127) * C806 + (C148 - C149) * C813 +
                (C150 - C151) * C807 + C168 * C814 + C169 * C32227) *
                   C32273 +
               ((C966 - C967) * C812 + (C968 - C969) * C806 +
                (C476 - C475) * C813 + (C478 - C477) * C807 + C816 * C814 +
                C817 * C32227) *
                   C32261 +
               C1000 * C32238) *
                  C31925 * C235 +
              (((C967 - C966) * C812 + (C969 - C968) * C806 +
                (C475 - C476) * C813 + (C477 - C478) * C807 +
                (C479 - C480) * C814 + (C481 - C482) * C32227) *
                   C32273 +
               ((C971 - C970) * C812 + (C973 - C972) * C806 +
                (C819 - C818) * C813 + (C821 - C820) * C807 +
                (C823 - C822) * C814 + (C825 - C824) * C32227) *
                   C32261 +
               ((C978 - C979) * C812 + (C980 - C981) * C806 +
                (C982 - C983) * C813 + (C984 - C985) * C807 +
                (C986 - C987) * C814 + (C988 - C989) * C32227) *
                   C32238) *
                  C31925 * C236 +
              (C1000 * C32273 +
               ((C979 - C978) * C812 + (C981 - C980) * C806 +
                (C983 - C982) * C813 + (C985 - C984) * C807 +
                (C987 - C986) * C814 + (C989 - C988) * C32227) *
                   C32261 +
               ((C31966 * C953 - C113 * C944) * C812 +
                (C31966 * C962 - C113 * C954) * C806 +
                (C31966 * C955 - C113 * C945) * C813 +
                (C31966 * C963 - C113 * C956) * C807 +
                (C31966 * C957 - C113 * C946) * C814 +
                (C31966 * C964 - C113 * C958) * C32227) *
                   C32238) *
                  C31925 * C237) *
             C31899 +
         0.5 * std::pow(Pi, 2.5) *
             ((((C31966 * C126 - C113 * C119) * C812 +
                (C31966 * C140 - C113 * C127) * C806 + (C148 - C149) * C813 +
                (C150 - C151) * C807 + C168 * C814 + C169 * C32227) *
                   C32273 +
               ((C966 - C967) * C812 + (C968 - C969) * C806 +
                (C476 - C475) * C813 + (C478 - C477) * C807 + C816 * C814 +
                C817 * C32227) *
                   C32261 +
               C1000 * C32238) *
                  C341 +
              (((C113 * C344 - C31966 * C354) * C812 +
                (C113 * C355 - C31966 * C374) * C806 + (C579 - C580) * C813 +
                (C581 - C582) * C807 + (C583 - C584) * C814 +
                (C585 - C586) * C32227) *
                   C32273 +
               ((C113 * C676 - C31966 * C681) * C812 +
                (C113 * C682 - C31966 * C691) * C806 +
                (C113 * C677 - C31966 * C683) * C813 +
                (C113 * C684 - C31966 * C692) * C807 +
                (C113 * C678 - C31966 * C685) * C814 +
                (C113 * C686 - C31966 * C693) * C32227) *
                   C32261 +
               ((C113 * C1110 - C31966 * C1119) * C812 +
                (C113 * C1120 - C31966 * C1137) * C806 +
                (C113 * C1111 - C31966 * C1121) * C813 +
                (C113 * C1122 - C31966 * C1138) * C807 +
                (C113 * C1112 - C31966 * C1123) * C814 +
                (C113 * C1124 - C31966 * C1139) * C32227) *
                   C32238) *
                  C342 +
              (((C31966 * C364 - C113 * C349) * C812 +
                (C31966 * C379 - C113 * C365) * C806 +
                (C31966 * C366 - C113 * C350) * C813 +
                (C31966 * C380 - C113 * C367) * C807 +
                (C31966 * C368 - C113 * C351) * C814 +
                (C31966 * C381 - C113 * C369) * C32227) *
                   C32273 +
               ((C31966 * C1125 - C113 * C1113) * C812 +
                (C31966 * C1140 - C113 * C1126) * C806 +
                (C31966 * C1127 - C113 * C1114) * C813 +
                (C31966 * C1141 - C113 * C1128) * C807 +
                (C31966 * C1129 - C113 * C1115) * C814 +
                (C31966 * C1142 - C113 * C1130) * C32227) *
                   C32261 +
               ((C31966 * C1131 - C113 * C1116) * C812 +
                (C31966 * C1143 - C113 * C1132) * C806 +
                (C31966 * C1133 - C113 * C1117) * C813 +
                (C31966 * C1144 - C113 * C1134) * C807 +
                (C31966 * C1135 - C113 * C1118) * C814 +
                (C31966 * C1145 - C113 * C1136) * C32227) *
                   C32238) *
                  C343) *
             C31911 * C31899 +
         0.5 * std::pow(Pi, 2.5) *
             (((C32274 * C126 - C1751 * C119 + C32263 * C354 - C1752 * C344 +
                C32241 * C364 - C1753 * C349) *
                   C812 +
               (C32274 * C140 - C1751 * C127 + C32263 * C374 - C1752 * C355 +
                C32241 * C379 - C1753 * C365) *
                   C806 +
               (C1755 - C1756 + C1757 - C1758 + C1759 - C1760) * C813 +
               (C1761 - C1762 + C1763 - C1764 + C1765 - C1766) * C807 +
               C1799 * C814 + C1800 * C32227) *
                  C31955 * C31925 * C31911 * C110 +
              ((C1756 - C1755 + C1758 - C1757 + C1760 - C1759) * C812 +
               (C1762 - C1761 + C1764 - C1763 + C1766 - C1765) * C806 +
               (C1768 - C1767 + C1770 - C1769 + C1772 - C1771) * C813 +
               (C1774 - C1773 + C1776 - C1775 + C1778 - C1777) * C807 +
               (C1779 - C1780 + C1781 - C1782 + C1783 - C1784) * C814 +
               (C1785 - C1786 + C1787 - C1788 + C1789 - C1790) * C32227) *
                  C31955 * C31925 * C31911 * C111 +
              (C1799 * C812 + C1800 * C806 +
               (C1780 - C1779 + C1782 - C1781 + C1784 - C1783) * C813 +
               (C1786 - C1785 + C1788 - C1787 + C1790 - C1789) * C807 +
               (C32274 * C134 - C1751 * C123 + C32263 * C362 - C1752 * C348 +
                C32241 * C372 - C1753 * C353) *
                   C814 +
               (C32274 * C144 - C1751 * C135 + C32263 * C378 - C1752 * C363 +
                C32241 * C383 - C1753 * C373) *
                   C32227) *
                  C31955 * C31925 * C31911 * C112) +
         0.5 * std::pow(Pi, 2.5) *
             (((C32274 * C126 - C1751 * C119 + C32263 * C354 - C1752 * C344 +
                C32241 * C364 - C1753 * C349) *
                   C812 +
               (C32274 * C140 - C1751 * C127 + C32263 * C374 - C1752 * C355 +
                C32241 * C379 - C1753 * C365) *
                   C806 +
               (C1755 - C1756 + C1757 - C1758 + C1759 - C1760) * C813 +
               (C1761 - C1762 + C1763 - C1764 + C1765 - C1766) * C807 +
               C1799 * C814 + C1800 * C32227) *
                  C31955 * C31925 * C235 +
              ((C1751 * C239 - C32274 * C249 + C1752 * C676 - C32263 * C681 +
                C1753 * C1113 - C32241 * C1125) *
                   C812 +
               (C1751 * C250 - C32274 * C269 + C1752 * C682 - C32263 * C691 +
                C1753 * C1126 - C32241 * C1140) *
                   C806 +
               (C1751 * C240 - C32274 * C251 + C1752 * C677 - C32263 * C683 +
                C1753 * C1114 - C32241 * C1127) *
                   C813 +
               (C1751 * C252 - C32274 * C270 + C1752 * C684 - C32263 * C692 +
                C1753 * C1128 - C32241 * C1141) *
                   C807 +
               (C1751 * C241 - C32274 * C253 + C1752 * C678 - C32263 * C685 +
                C1753 * C1115 - C32241 * C1129) *
                   C814 +
               (C1751 * C254 - C32274 * C271 + C1752 * C686 - C32263 * C693 +
                C1753 * C1130 - C32241 * C1142) *
                   C32227) *
                  C31955 * C31925 * C236 +
              ((C32274 * C259 - C1751 * C244 + C32263 * C1119 - C1752 * C1110 +
                C32241 * C1131 - C1753 * C1116) *
                   C812 +
               (C32274 * C274 - C1751 * C260 + C32263 * C1137 - C1752 * C1120 +
                C32241 * C1143 - C1753 * C1132) *
                   C806 +
               (C32274 * C261 - C1751 * C245 + C32263 * C1121 - C1752 * C1111 +
                C32241 * C1133 - C1753 * C1117) *
                   C813 +
               (C32274 * C275 - C1751 * C262 + C32263 * C1138 - C1752 * C1122 +
                C32241 * C1144 - C1753 * C1134) *
                   C807 +
               (C32274 * C263 - C1751 * C246 + C32263 * C1123 - C1752 * C1112 +
                C32241 * C1135 - C1753 * C1118) *
                   C814 +
               (C32274 * C276 - C1751 * C264 + C32263 * C1139 - C1752 * C1124 +
                C32241 * C1145 - C1753 * C1136) *
                   C32227) *
                  C31955 * C31925 * C237) *
             C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C32274 * C126 - C1751 * C119 + C32263 * C354 - C1752 * C344 +
            C32241 * C364 - C1753 * C349) *
               C812 +
           (C32274 * C140 - C1751 * C127 + C32263 * C374 - C1752 * C355 +
            C32241 * C379 - C1753 * C365) *
               C806 +
           (C1755 - C1756 + C1757 - C1758 + C1759 - C1760) * C813 +
           (C1761 - C1762 + C1763 - C1764 + C1765 - C1766) * C807 +
           C1799 * C814 + C1800 * C32227) *
              C31955 * C341 +
          ((C1751 * C344 - C32274 * C354 + C1752 * C349 - C32263 * C364 +
            C1753 * C2020 - C32241 * C2026) *
               C812 +
           (C1751 * C355 - C32274 * C374 + C1752 * C365 - C32263 * C379 +
            C1753 * C2027 - C32241 * C2038) *
               C806 +
           (C1751 * C345 - C32274 * C356 + C1752 * C350 - C32263 * C366 +
            C1753 * C2021 - C32241 * C2028) *
               C813 +
           (C1751 * C357 - C32274 * C375 + C1752 * C367 - C32263 * C380 +
            C1753 * C2029 - C32241 * C2039) *
               C807 +
           (C1751 * C346 - C32274 * C358 + C1752 * C351 - C32263 * C368 +
            C1753 * C2022 - C32241 * C2030) *
               C814 +
           (C1751 * C359 - C32274 * C376 + C1752 * C369 - C32263 * C381 +
            C1753 * C2031 - C32241 * C2040) *
               C32227) *
              C31955 * C342 +
          ((C32274 * C364 - C1751 * C349 + C32263 * C2026 - C1752 * C2020 +
            C32241 * C2032 - C1753 * C2023) *
               C812 +
           (C32274 * C379 - C1751 * C365 + C32263 * C2038 - C1752 * C2027 +
            C32241 * C2041 - C1753 * C2033) *
               C806 +
           (C32274 * C366 - C1751 * C350 + C32263 * C2028 - C1752 * C2021 +
            C32241 * C2034 - C1753 * C2024) *
               C813 +
           (C32274 * C380 - C1751 * C367 + C32263 * C2039 - C1752 * C2029 +
            C32241 * C2042 - C1753 * C2035) *
               C807 +
           (C32274 * C368 - C1751 * C351 + C32263 * C2030 - C1752 * C2022 +
            C32241 * C2036 - C1753 * C2025) *
               C814 +
           (C32274 * C381 - C1751 * C369 + C32263 * C2040 - C1752 * C2031 +
            C32241 * C2043 - C1753 * C2037) *
               C32227) *
              C31955 * C343) *
         C31911 * C31899) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C31966 * C126 - C113 * C119) * C5248 +
            (C31966 * C140 - C113 * C127) * C32270 + (C148 - C149) * C5249 +
            (C150 - C151) * C32257 + C168 * C5250 + C169 * C32227) *
               C5245 +
           ((C966 - C967) * C5248 + (C968 - C969) * C32270 + C1297 * C5249 +
            C1298 * C32257 + C816 * C5250 + C817 * C32227) *
               C5246 +
           (C990 * C5248 + C991 * C32270 + C974 * C5249 + C975 * C32257 +
            C830 * C5250 + C831 * C32227) *
               C32238) *
              C31925 * C31911 * C110 +
          (((C149 - C148) * C5248 + (C151 - C150) * C32270 +
            (C153 - C152) * C5249 + (C155 - C154) * C32257 +
            (C157 - C156) * C5250 + (C159 - C158) * C32227) *
               C5245 +
           (C1299 * C5248 + C1300 * C32270 + C1301 * C5249 + C1302 * C32257 +
            C2987 * C5250 + C2988 * C32227) *
               C5246 +
           (C1303 * C5248 + C1304 * C32270 + C1305 * C5249 + C1306 * C32257 +
            (C826 - C827) * C5250 + (C828 - C829) * C32227) *
               C32238) *
              C31925 * C31911 * C111 +
          ((C168 * C5248 + C169 * C32270 + C170 * C5249 + C171 * C32257 +
            C172 * C5250 + C173 * C32227) *
               C5245 +
           (C816 * C5248 + C817 * C32270 + C2659 * C5249 + C2660 * C32257 +
            (C488 - C487) * C5250 + (C490 - C489) * C32227) *
               C5246 +
           (C830 * C5248 + C831 * C32270 + (C827 - C826) * C5249 +
            (C829 - C828) * C32257 + (C31966 * C267 - C113 * C248) * C5250 +
            (C31966 * C278 - C113 * C268) * C32227) *
               C32238) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C31966 * C126 - C113 * C119) * C5248 +
            (C31966 * C140 - C113 * C127) * C32270 + (C148 - C149) * C5249 +
            (C150 - C151) * C32257 + C168 * C5250 + C169 * C32227) *
               C5245 +
           ((C966 - C967) * C5248 + (C968 - C969) * C32270 + C1297 * C5249 +
            C1298 * C32257 + C816 * C5250 + C817 * C32227) *
               C5246 +
           C5372 * C32238) *
              C31925 * C235 +
          (((C967 - C966) * C5248 + (C969 - C968) * C32270 + C1299 * C5249 +
            C1300 * C32257 + C1301 * C5250 + C1302 * C32227) *
               C5245 +
           ((C971 - C970) * C5248 + (C973 - C972) * C32270 + C1303 * C5249 +
            C1304 * C32257 + C1305 * C5250 + C1306 * C32227) *
               C5246 +
           ((C978 - C979) * C5248 + (C980 - C981) * C32270 +
            (C982 - C983) * C5249 + (C984 - C985) * C32257 +
            (C986 - C987) * C5250 + (C988 - C989) * C32227) *
               C32238) *
              C31925 * C236 +
          (C5372 * C5245 +
           ((C979 - C978) * C5248 + (C981 - C980) * C32270 +
            (C983 - C982) * C5249 + (C985 - C984) * C32257 +
            (C987 - C986) * C5250 + (C989 - C988) * C32227) *
               C5246 +
           ((C31966 * C953 - C113 * C944) * C5248 +
            (C31966 * C962 - C113 * C954) * C32270 +
            (C31966 * C955 - C113 * C945) * C5249 +
            (C31966 * C963 - C113 * C956) * C32257 +
            (C31966 * C957 - C113 * C946) * C5250 +
            (C31966 * C964 - C113 * C958) * C32227) *
               C32238) *
              C31925 * C237) *
         C31899) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C31966 * C126 - C113 * C119) * C5248 +
            (C31966 * C140 - C113 * C127) * C32270 + (C148 - C149) * C5249 +
            (C150 - C151) * C32257 + C168 * C5250 + C169 * C32227) *
               C5245 +
           ((C966 - C967) * C5248 + (C968 - C969) * C32270 + C1297 * C5249 +
            C1298 * C32257 + C816 * C5250 + C817 * C32227) *
               C5246 +
           C5372 * C32238) *
              C341 +
          (((C113 * C344 - C31966 * C354) * C5248 +
            (C113 * C355 - C31966 * C374) * C32270 + (C579 - C580) * C5249 +
            (C581 - C582) * C32257 + (C583 - C584) * C5250 +
            (C585 - C586) * C32227) *
               C5245 +
           ((C1631 - C1632) * C5248 + (C1633 - C1634) * C32270 +
            (C1457 - C1458) * C5249 + (C1459 - C1460) * C32257 +
            (C1461 - C1462) * C5250 + (C1463 - C1464) * C32227) *
               C5246 +
           ((C1635 - C1636) * C5248 + (C1637 - C1638) * C32270 +
            (C1465 - C1466) * C5249 + (C1467 - C1468) * C32257 +
            (C1469 - C1470) * C5250 + (C1471 - C1472) * C32227) *
               C32238) *
              C342 +
          (((C31966 * C364 - C113 * C349) * C5248 +
            (C31966 * C379 - C113 * C365) * C32270 +
            (C31966 * C366 - C113 * C350) * C5249 +
            (C31966 * C380 - C113 * C367) * C32257 +
            (C31966 * C368 - C113 * C351) * C5250 +
            (C31966 * C381 - C113 * C369) * C32227) *
               C5245 +
           ((C31966 * C1125 - C113 * C1113) * C5248 +
            (C31966 * C1140 - C113 * C1126) * C32270 +
            (C31966 * C1127 - C113 * C1114) * C5249 +
            (C31966 * C1141 - C113 * C1128) * C32257 +
            (C31966 * C1129 - C113 * C1115) * C5250 +
            (C31966 * C1142 - C113 * C1130) * C32227) *
               C5246 +
           ((C31966 * C1131 - C113 * C1116) * C5248 +
            (C31966 * C1143 - C113 * C1132) * C32270 +
            (C31966 * C1133 - C113 * C1117) * C5249 +
            (C31966 * C1144 - C113 * C1134) * C32257 +
            (C31966 * C1135 - C113 * C1118) * C5250 +
            (C31966 * C1145 - C113 * C1136) * C32227) *
               C32238) *
              C343) *
         C31911 * C31899) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C31966 * C126 - C113 * C119) * C5988 +
            (C31966 * C140 - C113 * C127) * C31864) *
               C5983 +
           ((C966 - C967) * C5988 + (C968 - C969) * C31864) * C5984 +
           (C990 * C5988 + C991 * C31864) * C5985 +
           ((C979 - C978) * C5988 + (C981 - C980) * C31864) * C5986 +
           ((C31966 * C953 - C113 * C944) * C5988 +
            (C31966 * C962 - C113 * C954) * C31864) *
               C5987) *
              C31925 * C31911 * C110 +
          (((C149 - C148) * C5988 + (C151 - C150) * C31864) * C5983 +
           (C1299 * C5988 + C1300 * C31864) * C5984 +
           (C1303 * C5988 + C1304 * C31864) * C5985 +
           ((C982 - C983) * C5988 + (C984 - C985) * C31864) * C5986 +
           ((C113 * C945 - C31966 * C955) * C5988 +
            (C113 * C956 - C31966 * C963) * C31864) *
               C5987) *
              C31925 * C31911 * C111 +
          ((C168 * C5988 + C169 * C31864) * C5983 +
           (C816 * C5988 + C817 * C31864) * C5984 +
           (C830 * C5988 + C831 * C31864) * C5985 +
           ((C987 - C986) * C5988 + (C989 - C988) * C31864) * C5986 +
           ((C31966 * C957 - C113 * C946) * C5988 +
            (C31966 * C964 - C113 * C958) * C31864) *
               C5987) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C31966 * C126 - C113 * C119) * C5988 +
            (C31966 * C140 - C113 * C127) * C31864) *
               C5983 +
           ((C966 - C967) * C5988 + (C968 - C969) * C31864) * C5984 +
           C6072 * C5985 + C6077 * C5986 + C6080 * C5987) *
              C31925 * C235 +
          (((C967 - C966) * C5988 + (C969 - C968) * C31864) * C5983 +
           ((C971 - C970) * C5988 + (C973 - C972) * C31864) * C5984 +
           ((C978 - C979) * C5988 + (C980 - C981) * C31864) * C5985 +
           ((C6065 - C6064) * C5988 + (C6067 - C6066) * C31864) * C5986 +
           ((C6068 - C6069) * C5988 + (C6070 - C6071) * C31864) * C5987) *
              C31925 * C236 +
          (C6072 * C5983 + C6077 * C5984 + C6080 * C5985 +
           ((C6069 - C6068) * C5988 + (C6071 - C6070) * C31864) * C5986 +
           ((C31966 * C6055 - C113 * C6052) * C5988 +
            (C31966 * C6058 - C113 * C6056) * C31864) *
               C5987) *
              C31925 * C237) *
         C31899) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C31966 * C126 - C113 * C119) * C5988 +
            (C31966 * C140 - C113 * C127) * C31864) *
               C5983 +
           ((C966 - C967) * C5988 + (C968 - C969) * C31864) * C5984 +
           C6072 * C5985 + C6077 * C5986 + C6080 * C5987) *
              C341 +
          (((C113 * C344 - C31966 * C354) * C5988 +
            (C113 * C355 - C31966 * C374) * C31864) *
               C5983 +
           ((C1631 - C1632) * C5988 + (C1633 - C1634) * C31864) * C5984 +
           ((C1635 - C1636) * C5988 + (C1637 - C1638) * C31864) * C5985 +
           ((C113 * C1618 - C31966 * C1621) * C5988 +
            (C113 * C1622 - C31966 * C1627) * C31864) *
               C5986 +
           ((C113 * C6142 - C31966 * C6145) * C5988 +
            (C113 * C6146 - C31966 * C6151) * C31864) *
               C5987) *
              C342 +
          (((C31966 * C364 - C113 * C349) * C5988 +
            (C31966 * C379 - C113 * C365) * C31864) *
               C5983 +
           ((C31966 * C1125 - C113 * C1113) * C5988 +
            (C31966 * C1140 - C113 * C1126) * C31864) *
               C5984 +
           ((C31966 * C1131 - C113 * C1116) * C5988 +
            (C31966 * C1143 - C113 * C1132) * C31864) *
               C5985 +
           ((C31966 * C6147 - C113 * C6143) * C5988 +
            (C31966 * C6152 - C113 * C6148) * C31864) *
               C5986 +
           ((C31966 * C6149 - C113 * C6144) * C5988 +
            (C31966 * C6153 - C113 * C6150) * C31864) *
               C5987) *
              C343) *
         C31911 * C31899) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C32274 * C126 - C1751 * C119 + C32263 * C354 - C1752 * C344 +
             C32241 * C364 - C1753 * C349) *
                C5988 +
            (C32274 * C140 - C1751 * C127 + C32263 * C374 - C1752 * C355 +
             C32241 * C379 - C1753 * C365) *
                C31864) *
               C5245 +
           ((C32274 * C249 - C1751 * C239 + C32263 * C681 - C1752 * C676 +
             C32241 * C1125 - C1753 * C1113) *
                C5988 +
            (C32274 * C269 - C1751 * C250 + C32263 * C691 - C1752 * C682 +
             C32241 * C1140 - C1753 * C1126) *
                C31864) *
               C5246 +
           ((C32274 * C259 - C1751 * C244 + C32263 * C1119 - C1752 * C1110 +
             C32241 * C1131 - C1753 * C1116) *
                C5988 +
            (C32274 * C274 - C1751 * C260 + C32263 * C1137 - C1752 * C1120 +
             C32241 * C1143 - C1753 * C1132) *
                C31864) *
               C32238) *
              C31925 * C31911 * C110 +
          (((C1756 - C1755 + C1758 - C1757 + C1760 - C1759) * C5988 +
            (C1762 - C1761 + C1764 - C1763 + C1766 - C1765) * C31864) *
               C5245 +
           ((C2195 - C2196 + C2197 - C2198 + C2199 - C2200) * C5988 +
            (C2201 - C2202 + C2203 - C2204 + C2205 - C2206) * C31864) *
               C5246 +
           ((C1751 * C245 - C32274 * C261 + C1752 * C1111 - C32263 * C1121 +
             C1753 * C1117 - C32241 * C1133) *
                C5988 +
            (C1751 * C262 - C32274 * C275 + C1752 * C1122 - C32263 * C1138 +
             C1753 * C1134 - C32241 * C1144) *
                C31864) *
               C32238) *
              C31925 * C31911 * C111 +
          ((C1799 * C5988 + C1800 * C31864) * C5245 +
           ((C2208 - C2207 + C2210 - C2209 + C2212 - C2211) * C5988 +
            (C2214 - C2213 + C2216 - C2215 + C2218 - C2217) * C31864) *
               C5246 +
           ((C32274 * C263 - C1751 * C246 + C32263 * C1123 - C1752 * C1112 +
             C32241 * C1135 - C1753 * C1118) *
                C5988 +
            (C32274 * C276 - C1751 * C264 + C32263 * C1139 - C1752 * C1124 +
             C32241 * C1145 - C1753 * C1136) *
                C31864) *
               C32238) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C32274 * C126 - C1751 * C119 + C32263 * C354 - C1752 * C344 +
             C32241 * C364 - C1753 * C349) *
                C5988 +
            (C32274 * C140 - C1751 * C127 + C32263 * C374 - C1752 * C355 +
             C32241 * C379 - C1753 * C365) *
                C31864) *
               C5245 +
           ((C6645 - C6646 + C6647 - C6648 + C6649 - C6650) * C5988 +
            (C6651 - C6652 + C6653 - C6654 + C6655 - C6656) * C31864) *
               C5246 +
           C6693 * C32238) *
              C31925 * C235 +
          (((C6646 - C6645 + C6648 - C6647 + C6650 - C6649) * C5988 +
            (C6652 - C6651 + C6654 - C6653 + C6656 - C6655) * C31864) *
               C5245 +
           ((C6658 - C6657 + C6660 - C6659 + C6662 - C6661) * C5988 +
            (C6664 - C6663 + C6666 - C6665 + C6668 - C6667) * C31864) *
               C5246 +
           ((C6669 - C6670 + C6671 - C6672 + C6673 - C6674) * C5988 +
            (C6675 - C6676 + C6677 - C6678 + C6679 - C6680) * C31864) *
               C32238) *
              C31925 * C236 +
          (C6693 * C5245 +
           ((C6670 - C6669 + C6672 - C6671 + C6674 - C6673) * C5988 +
            (C6676 - C6675 + C6678 - C6677 + C6680 - C6679) * C31864) *
               C5246 +
           ((C32274 * C953 - C1751 * C944 + C32263 * C6145 - C1752 * C6142 +
             C32241 * C6149 - C1753 * C6144) *
                C5988 +
            (C32274 * C962 - C1751 * C954 + C32263 * C6151 - C1752 * C6146 +
             C32241 * C6153 - C1753 * C6150) *
                C31864) *
               C32238) *
              C31925 * C237) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C32274 * C126 - C1751 * C119 + C32263 * C354 - C1752 * C344 +
             C32241 * C364 - C1753 * C349) *
                C5988 +
            (C32274 * C140 - C1751 * C127 + C32263 * C374 - C1752 * C355 +
             C32241 * C379 - C1753 * C365) *
                C31864) *
               C5245 +
           ((C6645 - C6646 + C6647 - C6648 + C6649 - C6650) * C5988 +
            (C6651 - C6652 + C6653 - C6654 + C6655 - C6656) * C31864) *
               C5246 +
           C6693 * C32238) *
              C341 +
          (((C1751 * C344 - C32274 * C354 + C1752 * C349 - C32263 * C364 +
             C1753 * C2020 - C32241 * C2026) *
                C5988 +
            (C1751 * C355 - C32274 * C374 + C1752 * C365 - C32263 * C379 +
             C1753 * C2027 - C32241 * C2038) *
                C31864) *
               C5245 +
           ((C1751 * C676 - C32274 * C681 + C1752 * C1113 - C32263 * C1125 +
             C1753 * C2538 - C32241 * C2541) *
                C5988 +
            (C1751 * C682 - C32274 * C691 + C1752 * C1126 - C32263 * C1140 +
             C1753 * C2542 - C32241 * C2547) *
                C31864) *
               C5246 +
           ((C1751 * C1110 - C32274 * C1119 + C1752 * C1116 - C32263 * C1131 +
             C1753 * C6803 - C32241 * C6806) *
                C5988 +
            (C1751 * C1120 - C32274 * C1137 + C1752 * C1132 - C32263 * C1143 +
             C1753 * C6807 - C32241 * C6812) *
                C31864) *
               C32238) *
              C342 +
          (((C32274 * C364 - C1751 * C349 + C32263 * C2026 - C1752 * C2020 +
             C32241 * C2032 - C1753 * C2023) *
                C5988 +
            (C32274 * C379 - C1751 * C365 + C32263 * C2038 - C1752 * C2027 +
             C32241 * C2041 - C1753 * C2033) *
                C31864) *
               C5245 +
           ((C32274 * C1125 - C1751 * C1113 + C32263 * C2541 - C1752 * C2538 +
             C32241 * C6808 - C1753 * C6804) *
                C5988 +
            (C32274 * C1140 - C1751 * C1126 + C32263 * C2547 - C1752 * C2542 +
             C32241 * C6813 - C1753 * C6809) *
                C31864) *
               C5246 +
           ((C32274 * C1131 - C1751 * C1116 + C32263 * C6806 - C1752 * C6803 +
             C32241 * C6810 - C1753 * C6805) *
                C5988 +
            (C32274 * C1143 - C1751 * C1132 + C32263 * C6812 - C1752 * C6807 +
             C32241 * C6814 - C1753 * C6811) *
                C31864) *
               C32238) *
              C343) *
         C31911 * C31899) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C9914 * C126 - C9917 * C119 + C9915 * C354 - C9918 * C344 +
            C32241 * C364 - C9919 * C349) *
               C5248 +
           (C9914 * C140 - C9917 * C127 + C9915 * C374 - C9918 * C355 +
            C32241 * C379 - C9919 * C365) *
               C32270 +
           (C9921 - C9922 + C9923 - C9924 + C9925 - C9926) * C5249 +
           (C9927 - C9928 + C9929 - C9930 + C9931 - C9932) * C32257 +
           C9965 * C5250 + C9966 * C32227) *
              C31955 * C31925 * C31911 * C110 +
          ((C9922 - C9921 + C9924 - C9923 + C9926 - C9925) * C5248 +
           (C9928 - C9927 + C9930 - C9929 + C9932 - C9931) * C32270 +
           (C9934 - C9933 + C9936 - C9935 + C9938 - C9937) * C5249 +
           (C9940 - C9939 + C9942 - C9941 + C9944 - C9943) * C32257 +
           (C9945 - C9946 + C9947 - C9948 + C9949 - C9950) * C5250 +
           (C9951 - C9952 + C9953 - C9954 + C9955 - C9956) * C32227) *
              C31955 * C31925 * C31911 * C111 +
          (C9965 * C5248 + C9966 * C32270 +
           (C9946 - C9945 + C9948 - C9947 + C9950 - C9949) * C5249 +
           (C9952 - C9951 + C9954 - C9953 + C9956 - C9955) * C32257 +
           (C9914 * C134 - C9917 * C123 + C9915 * C362 - C9918 * C348 +
            C32241 * C372 - C9919 * C353) *
               C5250 +
           (C9914 * C144 - C9917 * C135 + C9915 * C378 - C9918 * C363 +
            C32241 * C383 - C9919 * C373) *
               C32227) *
              C31955 * C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C9914 * C126 - C9917 * C119 + C9915 * C354 - C9918 * C344 +
            C32241 * C364 - C9919 * C349) *
               C5248 +
           (C9914 * C140 - C9917 * C127 + C9915 * C374 - C9918 * C355 +
            C32241 * C379 - C9919 * C365) *
               C32270 +
           (C9921 - C9922 + C9923 - C9924 + C9925 - C9926) * C5249 +
           (C9927 - C9928 + C9929 - C9930 + C9931 - C9932) * C32257 +
           C9965 * C5250 + C9966 * C32227) *
              C31955 * C31925 * C235 +
          ((C9917 * C239 - C9914 * C249 + C9918 * C676 - C9915 * C681 +
            C9919 * C1113 - C32241 * C1125) *
               C5248 +
           (C9917 * C250 - C9914 * C269 + C9918 * C682 - C9915 * C691 +
            C9919 * C1126 - C32241 * C1140) *
               C32270 +
           (C9917 * C240 - C9914 * C251 + C9918 * C677 - C9915 * C683 +
            C9919 * C1114 - C32241 * C1127) *
               C5249 +
           (C9917 * C252 - C9914 * C270 + C9918 * C684 - C9915 * C692 +
            C9919 * C1128 - C32241 * C1141) *
               C32257 +
           (C9917 * C241 - C9914 * C253 + C9918 * C678 - C9915 * C685 +
            C9919 * C1115 - C32241 * C1129) *
               C5250 +
           (C9917 * C254 - C9914 * C271 + C9918 * C686 - C9915 * C693 +
            C9919 * C1130 - C32241 * C1142) *
               C32227) *
              C31955 * C31925 * C236 +
          ((C9914 * C259 - C9917 * C244 + C9915 * C1119 - C9918 * C1110 +
            C32241 * C1131 - C9919 * C1116) *
               C5248 +
           (C9914 * C274 - C9917 * C260 + C9915 * C1137 - C9918 * C1120 +
            C32241 * C1143 - C9919 * C1132) *
               C32270 +
           (C9914 * C261 - C9917 * C245 + C9915 * C1121 - C9918 * C1111 +
            C32241 * C1133 - C9919 * C1117) *
               C5249 +
           (C9914 * C275 - C9917 * C262 + C9915 * C1138 - C9918 * C1122 +
            C32241 * C1144 - C9919 * C1134) *
               C32257 +
           (C9914 * C263 - C9917 * C246 + C9915 * C1123 - C9918 * C1112 +
            C32241 * C1135 - C9919 * C1118) *
               C5250 +
           (C9914 * C276 - C9917 * C264 + C9915 * C1139 - C9918 * C1124 +
            C32241 * C1145 - C9919 * C1136) *
               C32227) *
              C31955 * C31925 * C237) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C9914 * C126 - C9917 * C119 + C9915 * C354 - C9918 * C344 +
            C32241 * C364 - C9919 * C349) *
               C5248 +
           (C9914 * C140 - C9917 * C127 + C9915 * C374 - C9918 * C355 +
            C32241 * C379 - C9919 * C365) *
               C32270 +
           (C9921 - C9922 + C9923 - C9924 + C9925 - C9926) * C5249 +
           (C9927 - C9928 + C9929 - C9930 + C9931 - C9932) * C32257 +
           C9965 * C5250 + C9966 * C32227) *
              C31955 * C341 +
          ((C9917 * C344 - C9914 * C354 + C9918 * C349 - C9915 * C364 +
            C9919 * C2020 - C32241 * C2026) *
               C5248 +
           (C9917 * C355 - C9914 * C374 + C9918 * C365 - C9915 * C379 +
            C9919 * C2027 - C32241 * C2038) *
               C32270 +
           (C9917 * C345 - C9914 * C356 + C9918 * C350 - C9915 * C366 +
            C9919 * C2021 - C32241 * C2028) *
               C5249 +
           (C9917 * C357 - C9914 * C375 + C9918 * C367 - C9915 * C380 +
            C9919 * C2029 - C32241 * C2039) *
               C32257 +
           (C9917 * C346 - C9914 * C358 + C9918 * C351 - C9915 * C368 +
            C9919 * C2022 - C32241 * C2030) *
               C5250 +
           (C9917 * C359 - C9914 * C376 + C9918 * C369 - C9915 * C381 +
            C9919 * C2031 - C32241 * C2040) *
               C32227) *
              C31955 * C342 +
          ((C9914 * C364 - C9917 * C349 + C9915 * C2026 - C9918 * C2020 +
            C32241 * C2032 - C9919 * C2023) *
               C5248 +
           (C9914 * C379 - C9917 * C365 + C9915 * C2038 - C9918 * C2027 +
            C32241 * C2041 - C9919 * C2033) *
               C32270 +
           (C9914 * C366 - C9917 * C350 + C9915 * C2028 - C9918 * C2021 +
            C32241 * C2034 - C9919 * C2024) *
               C5249 +
           (C9914 * C380 - C9917 * C367 + C9915 * C2039 - C9918 * C2029 +
            C32241 * C2042 - C9919 * C2035) *
               C32257 +
           (C9914 * C368 - C9917 * C351 + C9915 * C2030 - C9918 * C2022 +
            C32241 * C2036 - C9919 * C2025) *
               C5250 +
           (C9914 * C381 - C9917 * C369 + C9915 * C2040 - C9918 * C2031 +
            C32241 * C2043 - C9919 * C2037) *
               C32227) *
              C31955 * C343) *
         C31911 * C31899) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C9914 * C126 - C9917 * C119 + C9915 * C354 - C9918 * C344 +
             C32241 * C364 - C9919 * C349) *
                C5988 +
            (C9914 * C140 - C9917 * C127 + C9915 * C374 - C9918 * C355 +
             C32241 * C379 - C9919 * C365) *
                C31864) *
               C32273 +
           ((C9914 * C249 - C9917 * C239 + C9915 * C681 - C9918 * C676 +
             C32241 * C1125 - C9919 * C1113) *
                C5988 +
            (C9914 * C269 - C9917 * C250 + C9915 * C691 - C9918 * C682 +
             C32241 * C1140 - C9919 * C1126) *
                C31864) *
               C32261 +
           ((C9914 * C259 - C9917 * C244 + C9915 * C1119 - C9918 * C1110 +
             C32241 * C1131 - C9919 * C1116) *
                C5988 +
            (C9914 * C274 - C9917 * C260 + C9915 * C1137 - C9918 * C1120 +
             C32241 * C1143 - C9919 * C1132) *
                C31864) *
               C32238) *
              C31925 * C31911 * C110 +
          (((C9922 - C9921 + C9924 - C9923 + C9926 - C9925) * C5988 +
            (C9928 - C9927 + C9930 - C9929 + C9932 - C9931) * C31864) *
               C32273 +
           ((C10333 - C10334 + C10335 - C10336 + C10337 - C10338) * C5988 +
            (C10339 - C10340 + C10341 - C10342 + C10343 - C10344) * C31864) *
               C32261 +
           ((C9917 * C245 - C9914 * C261 + C9918 * C1111 - C9915 * C1121 +
             C9919 * C1117 - C32241 * C1133) *
                C5988 +
            (C9917 * C262 - C9914 * C275 + C9918 * C1122 - C9915 * C1138 +
             C9919 * C1134 - C32241 * C1144) *
                C31864) *
               C32238) *
              C31925 * C31911 * C111 +
          ((C9965 * C5988 + C9966 * C31864) * C32273 +
           ((C10346 - C10345 + C10348 - C10347 + C10350 - C10349) * C5988 +
            (C10352 - C10351 + C10354 - C10353 + C10356 - C10355) * C31864) *
               C32261 +
           ((C9914 * C263 - C9917 * C246 + C9915 * C1123 - C9918 * C1112 +
             C32241 * C1135 - C9919 * C1118) *
                C5988 +
            (C9914 * C276 - C9917 * C264 + C9915 * C1139 - C9918 * C1124 +
             C32241 * C1145 - C9919 * C1136) *
                C31864) *
               C32238) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C9914 * C126 - C9917 * C119 + C9915 * C354 - C9918 * C344 +
             C32241 * C364 - C9919 * C349) *
                C5988 +
            (C9914 * C140 - C9917 * C127 + C9915 * C374 - C9918 * C355 +
             C32241 * C379 - C9919 * C365) *
                C31864) *
               C32273 +
           ((C10893 - C10894 + C10895 - C10896 + C10897 - C10898) * C5988 +
            (C10899 - C10900 + C10901 - C10902 + C10903 - C10904) * C31864) *
               C32261 +
           C10941 * C32238) *
              C31925 * C235 +
          (((C10894 - C10893 + C10896 - C10895 + C10898 - C10897) * C5988 +
            (C10900 - C10899 + C10902 - C10901 + C10904 - C10903) * C31864) *
               C32273 +
           ((C10906 - C10905 + C10908 - C10907 + C10910 - C10909) * C5988 +
            (C10912 - C10911 + C10914 - C10913 + C10916 - C10915) * C31864) *
               C32261 +
           ((C10917 - C10918 + C10919 - C10920 + C10921 - C10922) * C5988 +
            (C10923 - C10924 + C10925 - C10926 + C10927 - C10928) * C31864) *
               C32238) *
              C31925 * C236 +
          (C10941 * C32273 +
           ((C10918 - C10917 + C10920 - C10919 + C10922 - C10921) * C5988 +
            (C10924 - C10923 + C10926 - C10925 + C10928 - C10927) * C31864) *
               C32261 +
           ((C9914 * C953 - C9917 * C944 + C9915 * C6145 - C9918 * C6142 +
             C32241 * C6149 - C9919 * C6144) *
                C5988 +
            (C9914 * C962 - C9917 * C954 + C9915 * C6151 - C9918 * C6146 +
             C32241 * C6153 - C9919 * C6150) *
                C31864) *
               C32238) *
              C31925 * C237) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C9914 * C126 - C9917 * C119 + C9915 * C354 - C9918 * C344 +
             C32241 * C364 - C9919 * C349) *
                C5988 +
            (C9914 * C140 - C9917 * C127 + C9915 * C374 - C9918 * C355 +
             C32241 * C379 - C9919 * C365) *
                C31864) *
               C32273 +
           ((C10893 - C10894 + C10895 - C10896 + C10897 - C10898) * C5988 +
            (C10899 - C10900 + C10901 - C10902 + C10903 - C10904) * C31864) *
               C32261 +
           C10941 * C32238) *
              C341 +
          (((C9917 * C344 - C9914 * C354 + C9918 * C349 - C9915 * C364 +
             C9919 * C2020 - C32241 * C2026) *
                C5988 +
            (C9917 * C355 - C9914 * C374 + C9918 * C365 - C9915 * C379 +
             C9919 * C2027 - C32241 * C2038) *
                C31864) *
               C32273 +
           ((C9917 * C676 - C9914 * C681 + C9918 * C1113 - C9915 * C1125 +
             C9919 * C2538 - C32241 * C2541) *
                C5988 +
            (C9917 * C682 - C9914 * C691 + C9918 * C1126 - C9915 * C1140 +
             C9919 * C2542 - C32241 * C2547) *
                C31864) *
               C32261 +
           ((C9917 * C1110 - C9914 * C1119 + C9918 * C1116 - C9915 * C1131 +
             C9919 * C6803 - C32241 * C6806) *
                C5988 +
            (C9917 * C1120 - C9914 * C1137 + C9918 * C1132 - C9915 * C1143 +
             C9919 * C6807 - C32241 * C6812) *
                C31864) *
               C32238) *
              C342 +
          (((C9914 * C364 - C9917 * C349 + C9915 * C2026 - C9918 * C2020 +
             C32241 * C2032 - C9919 * C2023) *
                C5988 +
            (C9914 * C379 - C9917 * C365 + C9915 * C2038 - C9918 * C2027 +
             C32241 * C2041 - C9919 * C2033) *
                C31864) *
               C32273 +
           ((C9914 * C1125 - C9917 * C1113 + C9915 * C2541 - C9918 * C2538 +
             C32241 * C6808 - C9919 * C6804) *
                C5988 +
            (C9914 * C1140 - C9917 * C1126 + C9915 * C2547 - C9918 * C2542 +
             C32241 * C6813 - C9919 * C6809) *
                C31864) *
               C32261 +
           ((C9914 * C1131 - C9917 * C1116 + C9915 * C6806 - C9918 * C6803 +
             C32241 * C6810 - C9919 * C6805) *
                C5988 +
            (C9914 * C1143 - C9917 * C1132 + C9915 * C6812 - C9918 * C6807 +
             C32241 * C6814 - C9919 * C6811) *
                C31864) *
               C32238) *
              C343) *
         C31911 * C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C11587 * C126 - C11592 * C119 + C11588 * C354 - C11593 * C344 +
            C11589 * C364 - C11594 * C349 + C11590 * C2026 - C11595 * C2020 +
            C11591 * C2032 - C11596 * C2023) *
               C5988 +
           (C11587 * C140 - C11592 * C127 + C11588 * C374 - C11593 * C355 +
            C11589 * C379 - C11594 * C365 + C11590 * C2038 - C11595 * C2027 +
            C11591 * C2041 - C11596 * C2033) *
               C31864) *
              C31955 * C31925 * C31911 * C110 +
          ((C11592 * C120 - C11587 * C128 + C11593 * C345 - C11588 * C356 +
            C11594 * C350 - C11589 * C366 + C11595 * C2021 - C11590 * C2028 +
            C11596 * C2024 - C11591 * C2034) *
               C5988 +
           (C11592 * C129 - C11587 * C141 + C11593 * C357 - C11588 * C375 +
            C11594 * C367 - C11589 * C380 + C11595 * C2029 - C11590 * C2039 +
            C11596 * C2035 - C11591 * C2042) *
               C31864) *
              C31955 * C31925 * C31911 * C111 +
          ((C11587 * C130 - C11592 * C121 + C11588 * C358 - C11593 * C346 +
            C11589 * C368 - C11594 * C351 + C11590 * C2030 - C11595 * C2022 +
            C11591 * C2036 - C11596 * C2025) *
               C5988 +
           (C11587 * C142 - C11592 * C131 + C11588 * C376 - C11593 * C359 +
            C11589 * C381 - C11594 * C369 + C11590 * C2040 - C11595 * C2031 +
            C11591 * C2043 - C11596 * C2037) *
               C31864) *
              C31955 * C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C11587 * C126 - C11592 * C119 + C11588 * C354 - C11593 * C344 +
            C11589 * C364 - C11594 * C349 + C11590 * C2026 - C11595 * C2020 +
            C11591 * C2032 - C11596 * C2023) *
               C5988 +
           (C11587 * C140 - C11592 * C127 + C11588 * C374 - C11593 * C355 +
            C11589 * C379 - C11594 * C365 + C11590 * C2038 - C11595 * C2027 +
            C11591 * C2041 - C11596 * C2033) *
               C31864) *
              C31955 * C31925 * C235 +
          ((C11592 * C239 - C11587 * C249 + C11593 * C676 - C11588 * C681 +
            C11594 * C1113 - C11589 * C1125 + C11595 * C2538 - C11590 * C2541 +
            C11596 * C6804 - C11591 * C6808) *
               C5988 +
           (C11592 * C250 - C11587 * C269 + C11593 * C682 - C11588 * C691 +
            C11594 * C1126 - C11589 * C1140 + C11595 * C2542 - C11590 * C2547 +
            C11596 * C6809 - C11591 * C6813) *
               C31864) *
              C31955 * C31925 * C236 +
          ((C11587 * C259 - C11592 * C244 + C11588 * C1119 - C11593 * C1110 +
            C11589 * C1131 - C11594 * C1116 + C11590 * C6806 - C11595 * C6803 +
            C11591 * C6810 - C11596 * C6805) *
               C5988 +
           (C11587 * C274 - C11592 * C260 + C11588 * C1137 - C11593 * C1120 +
            C11589 * C1143 - C11594 * C1132 + C11590 * C6812 - C11595 * C6807 +
            C11591 * C6814 - C11596 * C6811) *
               C31864) *
              C31955 * C31925 * C237) *
         C31899) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C11587 * C126 - C11592 * C119 + C11588 * C354 - C11593 * C344 +
            C11589 * C364 - C11594 * C349 + C11590 * C2026 - C11595 * C2020 +
            C11591 * C2032 - C11596 * C2023) *
               C5988 +
           (C11587 * C140 - C11592 * C127 + C11588 * C374 - C11593 * C355 +
            C11589 * C379 - C11594 * C365 + C11590 * C2038 - C11595 * C2027 +
            C11591 * C2041 - C11596 * C2033) *
               C31864) *
              C31955 * C341 +
          ((C11592 * C344 - C11587 * C354 + C11593 * C349 - C11588 * C364 +
            C11594 * C2020 - C11589 * C2026 + C11595 * C2023 - C11590 * C2032 +
            C11596 * C11721 - C11591 * C11723) *
               C5988 +
           (C11592 * C355 - C11587 * C374 + C11593 * C365 - C11588 * C379 +
            C11594 * C2027 - C11589 * C2038 + C11595 * C2033 - C11590 * C2041 +
            C11596 * C11724 - C11591 * C11727) *
               C31864) *
              C31955 * C342 +
          ((C11587 * C364 - C11592 * C349 + C11588 * C2026 - C11593 * C2020 +
            C11589 * C2032 - C11594 * C2023 + C11590 * C11723 -
            C11595 * C11721 + C11591 * C11725 - C11596 * C11722) *
               C5988 +
           (C11587 * C379 - C11592 * C365 + C11588 * C2038 - C11593 * C2027 +
            C11589 * C2041 - C11594 * C2033 + C11590 * C11727 -
            C11595 * C11724 + C11591 * C11728 - C11596 * C11726) *
               C31864) *
              C31955 * C343) *
         C31911 * C31899) /
            (p * q * std::sqrt(p + q));
    d2ee[63] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C31966 * C126 - C113 * C119) * C114 +
                (C31966 * C140 - C113 * C127) * C102 + (C148 - C149) * C115 +
                (C150 - C151) * C103 + C168 * C116 + C169 * C104 + C170 * C117 +
                C171 * C105 + C172 * C118 + C173 * C106) *
                   C31955 * C572 +
               ((C113 * C344 - C31966 * C354) * C114 +
                (C113 * C355 - C31966 * C374) * C102 + (C579 - C580) * C115 +
                (C581 - C582) * C103 + (C583 - C584) * C116 +
                (C585 - C586) * C104 + (C587 - C588) * C117 +
                (C589 - C590) * C105 + (C591 - C592) * C118 +
                (C593 - C594) * C106) *
                   C31955 * C573) *
                  C31911 * C468 +
              (((C149 - C148) * C114 + (C151 - C150) * C102 +
                (C153 - C152) * C115 + (C155 - C154) * C103 +
                (C157 - C156) * C116 + (C159 - C158) * C104 +
                (C161 - C160) * C117 + (C163 - C162) * C105 +
                (C164 - C165) * C118 + (C166 - C167) * C106) *
                   C31955 * C572 +
               ((C580 - C579) * C114 + (C582 - C581) * C102 +
                (C584 - C583) * C115 + (C586 - C585) * C103 +
                (C588 - C587) * C116 + (C590 - C589) * C104 +
                (C592 - C591) * C117 + (C594 - C593) * C105 +
                (C31966 * C575 - C113 * C574) * C118 +
                (C31966 * C577 - C113 * C576) * C106) *
                   C31955 * C573) *
                  C31911 * C469) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C31966 * C126 - C113 * C119) * C812 +
                 (C31966 * C140 - C113 * C127) * C806 + (C148 - C149) * C813 +
                 (C150 - C151) * C807 + C168 * C814 + C169 * C32227) *
                    C32273 +
                ((C966 - C967) * C812 + (C968 - C969) * C806 + C1297 * C813 +
                 C1298 * C807 + C816 * C814 + C817 * C32227) *
                    C32261 +
                C1000 * C32238) *
                   C572 +
               (((C113 * C344 - C31966 * C354) * C812 +
                 (C113 * C355 - C31966 * C374) * C806 + (C579 - C580) * C813 +
                 (C581 - C582) * C807 + (C583 - C584) * C814 +
                 (C585 - C586) * C32227) *
                    C32273 +
                ((C113 * C676 - C31966 * C681) * C812 +
                 (C113 * C682 - C31966 * C691) * C806 + (C1457 - C1458) * C813 +
                 (C1459 - C1460) * C807 + (C1461 - C1462) * C814 +
                 (C1463 - C1464) * C32227) *
                    C32261 +
                ((C113 * C1110 - C31966 * C1119) * C812 +
                 (C113 * C1120 - C31966 * C1137) * C806 +
                 (C1465 - C1466) * C813 + (C1467 - C1468) * C807 +
                 (C1469 - C1470) * C814 + (C1471 - C1472) * C32227) *
                    C32238) *
                   C573) *
                  C31911 * C468 +
              ((((C149 - C148) * C812 + (C151 - C150) * C806 +
                 (C153 - C152) * C813 + (C155 - C154) * C807 +
                 (C157 - C156) * C814 + (C159 - C158) * C32227) *
                    C32273 +
                (C1299 * C812 + C1300 * C806 + C1301 * C813 + C1302 * C807 +
                 (C483 - C484) * C814 + (C485 - C486) * C32227) *
                    C32261 +
                (C1303 * C812 + C1304 * C806 + C1305 * C813 + C1306 * C807 +
                 (C826 - C827) * C814 + (C828 - C829) * C32227) *
                    C32238) *
                   C572 +
               (((C580 - C579) * C812 + (C582 - C581) * C806 +
                 (C584 - C583) * C813 + (C586 - C585) * C807 +
                 (C588 - C587) * C814 + (C590 - C589) * C32227) *
                    C32273 +
                ((C1458 - C1457) * C812 + (C1460 - C1459) * C806 +
                 (C1462 - C1461) * C813 + (C1464 - C1463) * C807 +
                 (C31966 * C687 - C113 * C679) * C814 +
                 (C31966 * C694 - C113 * C688) * C32227) *
                    C32261 +
                ((C1466 - C1465) * C812 + (C1468 - C1467) * C806 +
                 (C1470 - C1469) * C813 + (C1472 - C1471) * C807 +
                 (C31966 * C1453 - C113 * C1452) * C814 +
                 (C31966 * C1455 - C113 * C1454) * C32227) *
                    C32238) *
                   C573) *
                  C31911 * C469)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C32274 * C126 - C1751 * C119 + C32263 * C354 - C1752 * C344 +
             C32241 * C364 - C1753 * C349) *
                C812 +
            (C32274 * C140 - C1751 * C127 + C32263 * C374 - C1752 * C355 +
             C32241 * C379 - C1753 * C365) *
                C806 +
            (C1755 - C1756 + C1757 - C1758 + C1759 - C1760) * C813 +
            (C1761 - C1762 + C1763 - C1764 + C1765 - C1766) * C807 +
            C1799 * C814 + C1800 * C32227) *
               C31955 * C572 +
           ((C1751 * C344 - C32274 * C354 + C1752 * C349 - C32263 * C364 +
             C1753 * C2020 - C32241 * C2026) *
                C812 +
            (C1751 * C355 - C32274 * C374 + C1752 * C365 - C32263 * C379 +
             C1753 * C2027 - C32241 * C2038) *
                C806 +
            (C2369 - C2370 + C2371 - C2372 + C2373 - C2374) * C813 +
            (C2375 - C2376 + C2377 - C2378 + C2379 - C2380) * C807 +
            (C2381 - C2382 + C2383 - C2384 + C2385 - C2386) * C814 +
            (C2387 - C2388 + C2389 - C2390 + C2391 - C2392) * C32227) *
               C31955 * C573) *
              C31911 * C468 +
          (((C1756 - C1755 + C1758 - C1757 + C1760 - C1759) * C812 +
            (C1762 - C1761 + C1764 - C1763 + C1766 - C1765) * C806 +
            (C1768 - C1767 + C1770 - C1769 + C1772 - C1771) * C813 +
            (C1774 - C1773 + C1776 - C1775 + C1778 - C1777) * C807 +
            (C1779 - C1780 + C1781 - C1782 + C1783 - C1784) * C814 +
            (C1785 - C1786 + C1787 - C1788 + C1789 - C1790) * C32227) *
               C31955 * C572 +
           ((C2370 - C2369 + C2372 - C2371 + C2374 - C2373) * C812 +
            (C2376 - C2375 + C2378 - C2377 + C2380 - C2379) * C806 +
            (C2382 - C2381 + C2384 - C2383 + C2386 - C2385) * C813 +
            (C2388 - C2387 + C2390 - C2389 + C2392 - C2391) * C807 +
            (C32274 * C360 - C1751 * C347 + C32263 * C370 - C1752 * C352 +
             C32241 * C2365 - C1753 * C2364) *
                C814 +
            (C32274 * C377 - C1751 * C361 + C32263 * C382 - C1752 * C371 +
             C32241 * C2367 - C1753 * C2366) *
                C32227) *
               C31955 * C573) *
              C31911 * C469)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C31966 * C126 - C113 * C119) * C5248 +
             (C31966 * C140 - C113 * C127) * C32270 + (C148 - C149) * C5249 +
             (C150 - C151) * C32257 + C168 * C5250 + C169 * C32227) *
                C5245 +
            ((C966 - C967) * C5248 + (C968 - C969) * C32270 + C1297 * C5249 +
             C1298 * C32257 + C816 * C5250 + C817 * C32227) *
                C5246 +
            C5372 * C32238) *
               C572 +
           (((C113 * C344 - C31966 * C354) * C5248 +
             (C113 * C355 - C31966 * C374) * C32270 + (C579 - C580) * C5249 +
             (C581 - C582) * C32257 + (C583 - C584) * C5250 +
             (C585 - C586) * C32227) *
                C5245 +
            ((C1631 - C1632) * C5248 + (C1633 - C1634) * C32270 +
             (C1457 - C1458) * C5249 + (C1459 - C1460) * C32257 +
             (C1461 - C1462) * C5250 + (C1463 - C1464) * C32227) *
                C5246 +
            ((C1635 - C1636) * C5248 + (C1637 - C1638) * C32270 +
             (C1465 - C1466) * C5249 + (C1467 - C1468) * C32257 +
             (C1469 - C1470) * C5250 + (C1471 - C1472) * C32227) *
                C32238) *
               C573) *
              C31911 * C468 +
          ((((C149 - C148) * C5248 + (C151 - C150) * C32270 +
             (C153 - C152) * C5249 + (C155 - C154) * C32257 +
             (C157 - C156) * C5250 + (C159 - C158) * C32227) *
                C5245 +
            (C1299 * C5248 + C1300 * C32270 + C1301 * C5249 + C1302 * C32257 +
             C2987 * C5250 + C2988 * C32227) *
                C5246 +
            (C1303 * C5248 + C1304 * C32270 + C1305 * C5249 + C1306 * C32257 +
             (C826 - C827) * C5250 + (C828 - C829) * C32227) *
                C32238) *
               C572 +
           (((C580 - C579) * C5248 + (C582 - C581) * C32270 +
             (C584 - C583) * C5249 + (C586 - C585) * C32257 +
             (C588 - C587) * C5250 + (C590 - C589) * C32227) *
                C5245 +
            ((C1458 - C1457) * C5248 + (C1460 - C1459) * C32270 +
             (C1462 - C1461) * C5249 + (C1464 - C1463) * C32257 +
             (C3120 - C3119) * C5250 + (C3122 - C3121) * C32227) *
                C5246 +
            ((C1466 - C1465) * C5248 + (C1468 - C1467) * C32270 +
             (C1470 - C1469) * C5249 + (C1472 - C1471) * C32257 +
             (C31966 * C1453 - C113 * C1452) * C5250 +
             (C31966 * C1455 - C113 * C1454) * C32227) *
                C32238) *
               C573) *
              C31911 * C469)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C31966 * C126 - C113 * C119) * C5988 +
             (C31966 * C140 - C113 * C127) * C31864) *
                C5983 +
            ((C966 - C967) * C5988 + (C968 - C969) * C31864) * C5984 +
            C6072 * C5985 + C6077 * C5986 + C6080 * C5987) *
               C572 +
           (((C113 * C344 - C31966 * C354) * C5988 +
             (C113 * C355 - C31966 * C374) * C31864) *
                C5983 +
            ((C1631 - C1632) * C5988 + (C1633 - C1634) * C31864) * C5984 +
            ((C1635 - C1636) * C5988 + (C1637 - C1638) * C31864) * C5985 +
            ((C113 * C1618 - C31966 * C1621) * C5988 +
             (C113 * C1622 - C31966 * C1627) * C31864) *
                C5986 +
            ((C113 * C6142 - C31966 * C6145) * C5988 +
             (C113 * C6146 - C31966 * C6151) * C31864) *
                C5987) *
               C573) *
              C31911 * C468 +
          ((((C149 - C148) * C5988 + (C151 - C150) * C31864) * C5983 +
            (C1299 * C5988 + C1300 * C31864) * C5984 +
            (C1303 * C5988 + C1304 * C31864) * C5985 +
            ((C982 - C983) * C5988 + (C984 - C985) * C31864) * C5986 +
            ((C6241 - C6242) * C5988 + (C6243 - C6244) * C31864) * C5987) *
               C572 +
           (((C580 - C579) * C5988 + (C582 - C581) * C31864) * C5983 +
            ((C1458 - C1457) * C5988 + (C1460 - C1459) * C31864) * C5984 +
            ((C1466 - C1465) * C5988 + (C1468 - C1467) * C31864) * C5985 +
            ((C31966 * C1623 - C113 * C1619) * C5988 +
             (C31966 * C1628 - C113 * C1624) * C31864) *
                C5986 +
            ((C31966 * C6327 - C113 * C6326) * C5988 +
             (C31966 * C6329 - C113 * C6328) * C31864) *
                C5987) *
               C573) *
              C31911 * C469)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C32274 * C126 - C1751 * C119 + C32263 * C354 - C1752 * C344 +
              C32241 * C364 - C1753 * C349) *
                 C5988 +
             (C32274 * C140 - C1751 * C127 + C32263 * C374 - C1752 * C355 +
              C32241 * C379 - C1753 * C365) *
                 C31864) *
                C5245 +
            ((C6645 - C6646 + C6647 - C6648 + C6649 - C6650) * C5988 +
             (C6651 - C6652 + C6653 - C6654 + C6655 - C6656) * C31864) *
                C5246 +
            C6693 * C32238) *
               C572 +
           (((C1751 * C344 - C32274 * C354 + C1752 * C349 - C32263 * C364 +
              C1753 * C2020 - C32241 * C2026) *
                 C5988 +
             (C1751 * C355 - C32274 * C374 + C1752 * C365 - C32263 * C379 +
              C1753 * C2027 - C32241 * C2038) *
                 C31864) *
                C5245 +
            ((C1751 * C676 - C32274 * C681 + C1752 * C1113 - C32263 * C1125 +
              C1753 * C2538 - C32241 * C2541) *
                 C5988 +
             (C1751 * C682 - C32274 * C691 + C1752 * C1126 - C32263 * C1140 +
              C1753 * C2542 - C32241 * C2547) *
                 C31864) *
                C5246 +
            ((C1751 * C1110 - C32274 * C1119 + C1752 * C1116 - C32263 * C1131 +
              C1753 * C6803 - C32241 * C6806) *
                 C5988 +
             (C1751 * C1120 - C32274 * C1137 + C1752 * C1132 - C32263 * C1143 +
              C1753 * C6807 - C32241 * C6812) *
                 C31864) *
                C32238) *
               C573) *
              C31911 * C468 +
          ((((C1756 - C1755 + C1758 - C1757 + C1760 - C1759) * C5988 +
             (C1762 - C1761 + C1764 - C1763 + C1766 - C1765) * C31864) *
                C5245 +
            ((C2195 - C2196 + C2197 - C2198 + C2199 - C2200) * C5988 +
             (C2201 - C2202 + C2203 - C2204 + C2205 - C2206) * C31864) *
                C5246 +
            ((C6966 - C6967 + C6968 - C6969 + C6970 - C6971) * C5988 +
             (C6972 - C6973 + C6974 - C6975 + C6976 - C6977) * C31864) *
                C32238) *
               C572 +
           (((C2370 - C2369 + C2372 - C2371 + C2374 - C2373) * C5988 +
             (C2376 - C2375 + C2378 - C2377 + C2380 - C2379) * C31864) *
                C5245 +
            ((C32274 * C683 - C1751 * C677 + C32263 * C1127 - C1752 * C1114 +
              C32241 * C2543 - C1753 * C2539) *
                 C5988 +
             (C32274 * C692 - C1751 * C684 + C32263 * C1141 - C1752 * C1128 +
              C32241 * C2548 - C1753 * C2544) *
                 C31864) *
                C5246 +
            ((C32274 * C1121 - C1751 * C1111 + C32263 * C1133 - C1752 * C1117 +
              C32241 * C7124 - C1753 * C7123) *
                 C5988 +
             (C32274 * C1138 - C1751 * C1122 + C32263 * C1144 - C1752 * C1134 +
              C32241 * C7126 - C1753 * C7125) *
                 C31864) *
                C32238) *
               C573) *
              C31911 * C469)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C9914 * C126 - C9917 * C119 + C9915 * C354 - C9918 * C344 +
             C32241 * C364 - C9919 * C349) *
                C5248 +
            (C9914 * C140 - C9917 * C127 + C9915 * C374 - C9918 * C355 +
             C32241 * C379 - C9919 * C365) *
                C32270 +
            (C9921 - C9922 + C9923 - C9924 + C9925 - C9926) * C5249 +
            (C9927 - C9928 + C9929 - C9930 + C9931 - C9932) * C32257 +
            C9965 * C5250 + C9966 * C32227) *
               C31955 * C572 +
           ((C9917 * C344 - C9914 * C354 + C9918 * C349 - C9915 * C364 +
             C9919 * C2020 - C32241 * C2026) *
                C5248 +
            (C9917 * C355 - C9914 * C374 + C9918 * C365 - C9915 * C379 +
             C9919 * C2027 - C32241 * C2038) *
                C32270 +
            (C10503 - C10504 + C10505 - C10506 + C10507 - C10508) * C5249 +
            (C10509 - C10510 + C10511 - C10512 + C10513 - C10514) * C32257 +
            (C10515 - C10516 + C10517 - C10518 + C10519 - C10520) * C5250 +
            (C10521 - C10522 + C10523 - C10524 + C10525 - C10526) * C32227) *
               C31955 * C573) *
              C31911 * C468 +
          (((C9922 - C9921 + C9924 - C9923 + C9926 - C9925) * C5248 +
            (C9928 - C9927 + C9930 - C9929 + C9932 - C9931) * C32270 +
            (C9934 - C9933 + C9936 - C9935 + C9938 - C9937) * C5249 +
            (C9940 - C9939 + C9942 - C9941 + C9944 - C9943) * C32257 +
            (C9945 - C9946 + C9947 - C9948 + C9949 - C9950) * C5250 +
            (C9951 - C9952 + C9953 - C9954 + C9955 - C9956) * C32227) *
               C31955 * C572 +
           ((C10504 - C10503 + C10506 - C10505 + C10508 - C10507) * C5248 +
            (C10510 - C10509 + C10512 - C10511 + C10514 - C10513) * C32270 +
            (C10516 - C10515 + C10518 - C10517 + C10520 - C10519) * C5249 +
            (C10522 - C10521 + C10524 - C10523 + C10526 - C10525) * C32257 +
            (C9914 * C360 - C9917 * C347 + C9915 * C370 - C9918 * C352 +
             C32241 * C2365 - C9919 * C2364) *
                C5250 +
            (C9914 * C377 - C9917 * C361 + C9915 * C382 - C9918 * C371 +
             C32241 * C2367 - C9919 * C2366) *
                C32227) *
               C31955 * C573) *
              C31911 * C469)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C9914 * C126 - C9917 * C119 + C9915 * C354 - C9918 * C344 +
              C32241 * C364 - C9919 * C349) *
                 C5988 +
             (C9914 * C140 - C9917 * C127 + C9915 * C374 - C9918 * C355 +
              C32241 * C379 - C9919 * C365) *
                 C31864) *
                C32273 +
            ((C10893 - C10894 + C10895 - C10896 + C10897 - C10898) * C5988 +
             (C10899 - C10900 + C10901 - C10902 + C10903 - C10904) * C31864) *
                C32261 +
            C10941 * C32238) *
               C572 +
           (((C9917 * C344 - C9914 * C354 + C9918 * C349 - C9915 * C364 +
              C9919 * C2020 - C32241 * C2026) *
                 C5988 +
             (C9917 * C355 - C9914 * C374 + C9918 * C365 - C9915 * C379 +
              C9919 * C2027 - C32241 * C2038) *
                 C31864) *
                C32273 +
            ((C9917 * C676 - C9914 * C681 + C9918 * C1113 - C9915 * C1125 +
              C9919 * C2538 - C32241 * C2541) *
                 C5988 +
             (C9917 * C682 - C9914 * C691 + C9918 * C1126 - C9915 * C1140 +
              C9919 * C2542 - C32241 * C2547) *
                 C31864) *
                C32261 +
            ((C9917 * C1110 - C9914 * C1119 + C9918 * C1116 - C9915 * C1131 +
              C9919 * C6803 - C32241 * C6806) *
                 C5988 +
             (C9917 * C1120 - C9914 * C1137 + C9918 * C1132 - C9915 * C1143 +
              C9919 * C6807 - C32241 * C6812) *
                 C31864) *
                C32238) *
               C573) *
              C31911 * C468 +
          ((((C9922 - C9921 + C9924 - C9923 + C9926 - C9925) * C5988 +
             (C9928 - C9927 + C9930 - C9929 + C9932 - C9931) * C31864) *
                C32273 +
            ((C10333 - C10334 + C10335 - C10336 + C10337 - C10338) * C5988 +
             (C10339 - C10340 + C10341 - C10342 + C10343 - C10344) * C31864) *
                C32261 +
            ((C11198 - C11199 + C11200 - C11201 + C11202 - C11203) * C5988 +
             (C11204 - C11205 + C11206 - C11207 + C11208 - C11209) * C31864) *
                C32238) *
               C572 +
           (((C10504 - C10503 + C10506 - C10505 + C10508 - C10507) * C5988 +
             (C10510 - C10509 + C10512 - C10511 + C10514 - C10513) * C31864) *
                C32273 +
            ((C9914 * C683 - C9917 * C677 + C9915 * C1127 - C9918 * C1114 +
              C32241 * C2543 - C9919 * C2539) *
                 C5988 +
             (C9914 * C692 - C9917 * C684 + C9915 * C1141 - C9918 * C1128 +
              C32241 * C2548 - C9919 * C2544) *
                 C31864) *
                C32261 +
            ((C9914 * C1121 - C9917 * C1111 + C9915 * C1133 - C9918 * C1117 +
              C32241 * C7124 - C9919 * C7123) *
                 C5988 +
             (C9914 * C1138 - C9917 * C1122 + C9915 * C1144 - C9918 * C1134 +
              C32241 * C7126 - C9919 * C7125) *
                 C31864) *
                C32238) *
               C573) *
              C31911 * C469)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C11587 * C126 - C11592 * C119 + C11588 * C354 - C11593 * C344 +
             C11589 * C364 - C11594 * C349 + C11590 * C2026 - C11595 * C2020 +
             C11591 * C2032 - C11596 * C2023) *
                C5988 +
            (C11587 * C140 - C11592 * C127 + C11588 * C374 - C11593 * C355 +
             C11589 * C379 - C11594 * C365 + C11590 * C2038 - C11595 * C2027 +
             C11591 * C2041 - C11596 * C2033) *
                C31864) *
               C31955 * C572 +
           ((C11592 * C344 - C11587 * C354 + C11593 * C349 - C11588 * C364 +
             C11594 * C2020 - C11589 * C2026 + C11595 * C2023 - C11590 * C2032 +
             C11596 * C11721 - C11591 * C11723) *
                C5988 +
            (C11592 * C355 - C11587 * C374 + C11593 * C365 - C11588 * C379 +
             C11594 * C2027 - C11589 * C2038 + C11595 * C2033 - C11590 * C2041 +
             C11596 * C11724 - C11591 * C11727) *
                C31864) *
               C31955 * C573) *
              C31911 * C468 +
          (((C11592 * C120 - C11587 * C128 + C11593 * C345 - C11588 * C356 +
             C11594 * C350 - C11589 * C366 + C11595 * C2021 - C11590 * C2028 +
             C11596 * C2024 - C11591 * C2034) *
                C5988 +
            (C11592 * C129 - C11587 * C141 + C11593 * C357 - C11588 * C375 +
             C11594 * C367 - C11589 * C380 + C11595 * C2029 - C11590 * C2039 +
             C11596 * C2035 - C11591 * C2042) *
                C31864) *
               C31955 * C572 +
           ((C11587 * C356 - C11592 * C345 + C11588 * C366 - C11593 * C350 +
             C11589 * C2028 - C11594 * C2021 + C11590 * C2034 - C11595 * C2024 +
             C11591 * C11898 - C11596 * C11897) *
                C5988 +
            (C11587 * C375 - C11592 * C357 + C11588 * C380 - C11593 * C367 +
             C11589 * C2039 - C11594 * C2029 + C11590 * C2042 - C11595 * C2035 +
             C11591 * C11900 - C11596 * C11899) *
                C31864) *
               C31955 * C573) *
              C31911 * C469)) /
            (p * q * std::sqrt(p + q));
    d2ee[64] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C31966 * C126 - C113 * C119) * C114 +
           (C31966 * C140 - C113 * C127) * C102 + (C148 - C149) * C115 +
           (C150 - C151) * C103 + C168 * C116 + C169 * C104 + C170 * C117 +
           C171 * C105 + C172 * C118 + C173 * C106) *
              C31955 * C31925 * C31911 * C110 +
          ((C149 - C148) * C114 + (C151 - C150) * C102 + (C153 - C152) * C115 +
           (C155 - C154) * C103 + (C157 - C156) * C116 + (C159 - C158) * C104 +
           (C161 - C160) * C117 + (C163 - C162) * C105 + (C164 - C165) * C118 +
           (C166 - C167) * C106) *
              C31955 * C31925 * C31911 * C111 +
          (C168 * C114 + C169 * C102 + C170 * C115 + C171 * C103 + C172 * C116 +
           C173 * C104 + (C165 - C164) * C117 + (C167 - C166) * C105 +
           (C31966 * C138 - C113 * C125) * C118 +
           (C31966 * C146 - C113 * C139) * C106) *
              C31955 * C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C31966 * C126 - C113 * C119) * C114 +
           (C31966 * C140 - C113 * C127) * C102 + (C148 - C149) * C115 +
           (C150 - C151) * C103 + C168 * C116 + C169 * C104 + C170 * C117 +
           C171 * C105 + C172 * C118 + C173 * C106) *
              C31955 * C31925 * C235 +
          ((C113 * C239 - C31966 * C249) * C114 +
           (C113 * C250 - C31966 * C269) * C102 +
           (C113 * C240 - C31966 * C251) * C115 +
           (C113 * C252 - C31966 * C270) * C103 +
           (C113 * C241 - C31966 * C253) * C116 +
           (C113 * C254 - C31966 * C271) * C104 +
           (C113 * C242 - C31966 * C255) * C117 +
           (C113 * C256 - C31966 * C272) * C105 +
           (C113 * C243 - C31966 * C257) * C118 +
           (C113 * C258 - C31966 * C273) * C106) *
              C31955 * C31925 * C236 +
          ((C31966 * C259 - C113 * C244) * C114 +
           (C31966 * C274 - C113 * C260) * C102 +
           (C31966 * C261 - C113 * C245) * C115 +
           (C31966 * C275 - C113 * C262) * C103 +
           (C31966 * C263 - C113 * C246) * C116 +
           (C31966 * C276 - C113 * C264) * C104 +
           (C31966 * C265 - C113 * C247) * C117 +
           (C31966 * C277 - C113 * C266) * C105 +
           (C31966 * C267 - C113 * C248) * C118 +
           (C31966 * C278 - C113 * C268) * C106) *
              C31955 * C31925 * C237) *
         C31899) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C31966 * C126 - C113 * C119) * C812 +
            (C31966 * C140 - C113 * C127) * C806 + (C148 - C149) * C813 +
            (C150 - C151) * C807 + C168 * C814 + C169 * C32227) *
               C32273 +
           ((C31966 * C249 - C113 * C239) * C812 +
            (C31966 * C269 - C113 * C250) * C806 + (C476 - C475) * C813 +
            (C478 - C477) * C807 + C816 * C814 + C817 * C32227) *
               C32261 +
           ((C31966 * C259 - C113 * C244) * C812 +
            (C31966 * C274 - C113 * C260) * C806 + (C818 - C819) * C813 +
            (C820 - C821) * C807 + C830 * C814 + C831 * C32227) *
               C32238) *
              C31925 * C31911 * C110 +
          (((C149 - C148) * C812 + (C151 - C150) * C806 + (C153 - C152) * C813 +
            (C155 - C154) * C807 + (C157 - C156) * C814 +
            (C159 - C158) * C32227) *
               C32273 +
           ((C475 - C476) * C812 + (C477 - C478) * C806 + (C479 - C480) * C813 +
            (C481 - C482) * C807 + (C483 - C484) * C814 +
            (C485 - C486) * C32227) *
               C32261 +
           ((C819 - C818) * C812 + (C821 - C820) * C806 + (C823 - C822) * C813 +
            (C825 - C824) * C807 + (C826 - C827) * C814 +
            (C828 - C829) * C32227) *
               C32238) *
              C31925 * C31911 * C111 +
          ((C168 * C812 + C169 * C806 + C170 * C813 + C171 * C807 +
            C172 * C814 + C173 * C32227) *
               C32273 +
           (C816 * C812 + C817 * C806 + (C484 - C483) * C813 +
            (C486 - C485) * C807 + (C488 - C487) * C814 +
            (C490 - C489) * C32227) *
               C32261 +
           (C830 * C812 + C831 * C806 + (C827 - C826) * C813 +
            (C829 - C828) * C807 + (C31966 * C267 - C113 * C248) * C814 +
            (C31966 * C278 - C113 * C268) * C32227) *
               C32238) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C31966 * C126 - C113 * C119) * C812 +
            (C31966 * C140 - C113 * C127) * C806 + (C148 - C149) * C813 +
            (C150 - C151) * C807 + C168 * C814 + C169 * C32227) *
               C32273 +
           ((C966 - C967) * C812 + (C968 - C969) * C806 + (C476 - C475) * C813 +
            (C478 - C477) * C807 + C816 * C814 + C817 * C32227) *
               C32261 +
           C1000 * C32238) *
              C31925 * C235 +
          (((C967 - C966) * C812 + (C969 - C968) * C806 + (C475 - C476) * C813 +
            (C477 - C478) * C807 + (C479 - C480) * C814 +
            (C481 - C482) * C32227) *
               C32273 +
           ((C971 - C970) * C812 + (C973 - C972) * C806 + (C819 - C818) * C813 +
            (C821 - C820) * C807 + (C823 - C822) * C814 +
            (C825 - C824) * C32227) *
               C32261 +
           ((C978 - C979) * C812 + (C980 - C981) * C806 + (C982 - C983) * C813 +
            (C984 - C985) * C807 + (C986 - C987) * C814 +
            (C988 - C989) * C32227) *
               C32238) *
              C31925 * C236 +
          (C1000 * C32273 +
           ((C979 - C978) * C812 + (C981 - C980) * C806 + (C983 - C982) * C813 +
            (C985 - C984) * C807 + (C987 - C986) * C814 +
            (C989 - C988) * C32227) *
               C32261 +
           ((C31966 * C953 - C113 * C944) * C812 +
            (C31966 * C962 - C113 * C954) * C806 +
            (C31966 * C955 - C113 * C945) * C813 +
            (C31966 * C963 - C113 * C956) * C807 +
            (C31966 * C957 - C113 * C946) * C814 +
            (C31966 * C964 - C113 * C958) * C32227) *
               C32238) *
              C31925 * C237) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C32274 * C126 - C1751 * C119 + C32263 * C354 - C1752 * C344 +
            C32241 * C364 - C1753 * C349) *
               C812 +
           (C32274 * C140 - C1751 * C127 + C32263 * C374 - C1752 * C355 +
            C32241 * C379 - C1753 * C365) *
               C806 +
           (C1755 - C1756 + C1757 - C1758 + C1759 - C1760) * C813 +
           (C1761 - C1762 + C1763 - C1764 + C1765 - C1766) * C807 +
           C1799 * C814 + C1800 * C32227) *
              C31955 * C31925 * C31911 * C110 +
          ((C1756 - C1755 + C1758 - C1757 + C1760 - C1759) * C812 +
           (C1762 - C1761 + C1764 - C1763 + C1766 - C1765) * C806 +
           (C1768 - C1767 + C1770 - C1769 + C1772 - C1771) * C813 +
           (C1774 - C1773 + C1776 - C1775 + C1778 - C1777) * C807 +
           (C1779 - C1780 + C1781 - C1782 + C1783 - C1784) * C814 +
           (C1785 - C1786 + C1787 - C1788 + C1789 - C1790) * C32227) *
              C31955 * C31925 * C31911 * C111 +
          (C1799 * C812 + C1800 * C806 +
           (C1780 - C1779 + C1782 - C1781 + C1784 - C1783) * C813 +
           (C1786 - C1785 + C1788 - C1787 + C1790 - C1789) * C807 +
           (C32274 * C134 - C1751 * C123 + C32263 * C362 - C1752 * C348 +
            C32241 * C372 - C1753 * C353) *
               C814 +
           (C32274 * C144 - C1751 * C135 + C32263 * C378 - C1752 * C363 +
            C32241 * C383 - C1753 * C373) *
               C32227) *
              C31955 * C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C32274 * C126 - C1751 * C119 + C32263 * C354 - C1752 * C344 +
            C32241 * C364 - C1753 * C349) *
               C812 +
           (C32274 * C140 - C1751 * C127 + C32263 * C374 - C1752 * C355 +
            C32241 * C379 - C1753 * C365) *
               C806 +
           (C1755 - C1756 + C1757 - C1758 + C1759 - C1760) * C813 +
           (C1761 - C1762 + C1763 - C1764 + C1765 - C1766) * C807 +
           C1799 * C814 + C1800 * C32227) *
              C31955 * C31925 * C235 +
          ((C1751 * C239 - C32274 * C249 + C1752 * C676 - C32263 * C681 +
            C1753 * C1113 - C32241 * C1125) *
               C812 +
           (C1751 * C250 - C32274 * C269 + C1752 * C682 - C32263 * C691 +
            C1753 * C1126 - C32241 * C1140) *
               C806 +
           (C1751 * C240 - C32274 * C251 + C1752 * C677 - C32263 * C683 +
            C1753 * C1114 - C32241 * C1127) *
               C813 +
           (C1751 * C252 - C32274 * C270 + C1752 * C684 - C32263 * C692 +
            C1753 * C1128 - C32241 * C1141) *
               C807 +
           (C1751 * C241 - C32274 * C253 + C1752 * C678 - C32263 * C685 +
            C1753 * C1115 - C32241 * C1129) *
               C814 +
           (C1751 * C254 - C32274 * C271 + C1752 * C686 - C32263 * C693 +
            C1753 * C1130 - C32241 * C1142) *
               C32227) *
              C31955 * C31925 * C236 +
          ((C32274 * C259 - C1751 * C244 + C32263 * C1119 - C1752 * C1110 +
            C32241 * C1131 - C1753 * C1116) *
               C812 +
           (C32274 * C274 - C1751 * C260 + C32263 * C1137 - C1752 * C1120 +
            C32241 * C1143 - C1753 * C1132) *
               C806 +
           (C32274 * C261 - C1751 * C245 + C32263 * C1121 - C1752 * C1111 +
            C32241 * C1133 - C1753 * C1117) *
               C813 +
           (C32274 * C275 - C1751 * C262 + C32263 * C1138 - C1752 * C1122 +
            C32241 * C1144 - C1753 * C1134) *
               C807 +
           (C32274 * C263 - C1751 * C246 + C32263 * C1123 - C1752 * C1112 +
            C32241 * C1135 - C1753 * C1118) *
               C814 +
           (C32274 * C276 - C1751 * C264 + C32263 * C1139 - C1752 * C1124 +
            C32241 * C1145 - C1753 * C1136) *
               C32227) *
              C31955 * C31925 * C237) *
         C31899) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C31966 * C126 - C113 * C119) * C5248 +
            (C31966 * C140 - C113 * C127) * C32270 + (C148 - C149) * C5249 +
            (C150 - C151) * C32257 + C168 * C5250 + C169 * C32227) *
               C5245 +
           ((C966 - C967) * C5248 + (C968 - C969) * C32270 + C1297 * C5249 +
            C1298 * C32257 + C816 * C5250 + C817 * C32227) *
               C5246 +
           (C990 * C5248 + C991 * C32270 + C974 * C5249 + C975 * C32257 +
            C830 * C5250 + C831 * C32227) *
               C32238) *
              C31925 * C31911 * C110 +
          (((C149 - C148) * C5248 + (C151 - C150) * C32270 +
            (C153 - C152) * C5249 + (C155 - C154) * C32257 +
            (C157 - C156) * C5250 + (C159 - C158) * C32227) *
               C5245 +
           (C1299 * C5248 + C1300 * C32270 + C1301 * C5249 + C1302 * C32257 +
            C2987 * C5250 + C2988 * C32227) *
               C5246 +
           (C1303 * C5248 + C1304 * C32270 + C1305 * C5249 + C1306 * C32257 +
            (C826 - C827) * C5250 + (C828 - C829) * C32227) *
               C32238) *
              C31925 * C31911 * C111 +
          ((C168 * C5248 + C169 * C32270 + C170 * C5249 + C171 * C32257 +
            C172 * C5250 + C173 * C32227) *
               C5245 +
           (C816 * C5248 + C817 * C32270 + C2659 * C5249 + C2660 * C32257 +
            (C488 - C487) * C5250 + (C490 - C489) * C32227) *
               C5246 +
           (C830 * C5248 + C831 * C32270 + (C827 - C826) * C5249 +
            (C829 - C828) * C32257 + (C31966 * C267 - C113 * C248) * C5250 +
            (C31966 * C278 - C113 * C268) * C32227) *
               C32238) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C31966 * C126 - C113 * C119) * C5248 +
            (C31966 * C140 - C113 * C127) * C32270 + (C148 - C149) * C5249 +
            (C150 - C151) * C32257 + C168 * C5250 + C169 * C32227) *
               C5245 +
           ((C966 - C967) * C5248 + (C968 - C969) * C32270 + C1297 * C5249 +
            C1298 * C32257 + C816 * C5250 + C817 * C32227) *
               C5246 +
           C5372 * C32238) *
              C31925 * C235 +
          (((C967 - C966) * C5248 + (C969 - C968) * C32270 + C1299 * C5249 +
            C1300 * C32257 + C1301 * C5250 + C1302 * C32227) *
               C5245 +
           ((C971 - C970) * C5248 + (C973 - C972) * C32270 + C1303 * C5249 +
            C1304 * C32257 + C1305 * C5250 + C1306 * C32227) *
               C5246 +
           ((C978 - C979) * C5248 + (C980 - C981) * C32270 +
            (C982 - C983) * C5249 + (C984 - C985) * C32257 +
            (C986 - C987) * C5250 + (C988 - C989) * C32227) *
               C32238) *
              C31925 * C236 +
          (C5372 * C5245 +
           ((C979 - C978) * C5248 + (C981 - C980) * C32270 +
            (C983 - C982) * C5249 + (C985 - C984) * C32257 +
            (C987 - C986) * C5250 + (C989 - C988) * C32227) *
               C5246 +
           ((C31966 * C953 - C113 * C944) * C5248 +
            (C31966 * C962 - C113 * C954) * C32270 +
            (C31966 * C955 - C113 * C945) * C5249 +
            (C31966 * C963 - C113 * C956) * C32257 +
            (C31966 * C957 - C113 * C946) * C5250 +
            (C31966 * C964 - C113 * C958) * C32227) *
               C32238) *
              C31925 * C237) *
         C31899) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C31966 * C126 - C113 * C119) * C5988 +
            (C31966 * C140 - C113 * C127) * C31864) *
               C5983 +
           ((C966 - C967) * C5988 + (C968 - C969) * C31864) * C5984 +
           (C990 * C5988 + C991 * C31864) * C5985 +
           ((C979 - C978) * C5988 + (C981 - C980) * C31864) * C5986 +
           ((C31966 * C953 - C113 * C944) * C5988 +
            (C31966 * C962 - C113 * C954) * C31864) *
               C5987) *
              C31925 * C31911 * C110 +
          (((C149 - C148) * C5988 + (C151 - C150) * C31864) * C5983 +
           (C1299 * C5988 + C1300 * C31864) * C5984 +
           (C1303 * C5988 + C1304 * C31864) * C5985 +
           ((C982 - C983) * C5988 + (C984 - C985) * C31864) * C5986 +
           ((C113 * C945 - C31966 * C955) * C5988 +
            (C113 * C956 - C31966 * C963) * C31864) *
               C5987) *
              C31925 * C31911 * C111 +
          ((C168 * C5988 + C169 * C31864) * C5983 +
           (C816 * C5988 + C817 * C31864) * C5984 +
           (C830 * C5988 + C831 * C31864) * C5985 +
           ((C987 - C986) * C5988 + (C989 - C988) * C31864) * C5986 +
           ((C31966 * C957 - C113 * C946) * C5988 +
            (C31966 * C964 - C113 * C958) * C31864) *
               C5987) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C31966 * C126 - C113 * C119) * C5988 +
            (C31966 * C140 - C113 * C127) * C31864) *
               C5983 +
           ((C966 - C967) * C5988 + (C968 - C969) * C31864) * C5984 +
           C6072 * C5985 + C6077 * C5986 + C6080 * C5987) *
              C31925 * C235 +
          (((C967 - C966) * C5988 + (C969 - C968) * C31864) * C5983 +
           ((C971 - C970) * C5988 + (C973 - C972) * C31864) * C5984 +
           ((C978 - C979) * C5988 + (C980 - C981) * C31864) * C5985 +
           ((C6065 - C6064) * C5988 + (C6067 - C6066) * C31864) * C5986 +
           ((C6068 - C6069) * C5988 + (C6070 - C6071) * C31864) * C5987) *
              C31925 * C236 +
          (C6072 * C5983 + C6077 * C5984 + C6080 * C5985 +
           ((C6069 - C6068) * C5988 + (C6071 - C6070) * C31864) * C5986 +
           ((C31966 * C6055 - C113 * C6052) * C5988 +
            (C31966 * C6058 - C113 * C6056) * C31864) *
               C5987) *
              C31925 * C237) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C32274 * C126 - C1751 * C119 + C32263 * C354 - C1752 * C344 +
             C32241 * C364 - C1753 * C349) *
                C5988 +
            (C32274 * C140 - C1751 * C127 + C32263 * C374 - C1752 * C355 +
             C32241 * C379 - C1753 * C365) *
                C31864) *
               C5245 +
           ((C32274 * C249 - C1751 * C239 + C32263 * C681 - C1752 * C676 +
             C32241 * C1125 - C1753 * C1113) *
                C5988 +
            (C32274 * C269 - C1751 * C250 + C32263 * C691 - C1752 * C682 +
             C32241 * C1140 - C1753 * C1126) *
                C31864) *
               C5246 +
           ((C32274 * C259 - C1751 * C244 + C32263 * C1119 - C1752 * C1110 +
             C32241 * C1131 - C1753 * C1116) *
                C5988 +
            (C32274 * C274 - C1751 * C260 + C32263 * C1137 - C1752 * C1120 +
             C32241 * C1143 - C1753 * C1132) *
                C31864) *
               C32238) *
              C31925 * C31911 * C110 +
          (((C1756 - C1755 + C1758 - C1757 + C1760 - C1759) * C5988 +
            (C1762 - C1761 + C1764 - C1763 + C1766 - C1765) * C31864) *
               C5245 +
           ((C2195 - C2196 + C2197 - C2198 + C2199 - C2200) * C5988 +
            (C2201 - C2202 + C2203 - C2204 + C2205 - C2206) * C31864) *
               C5246 +
           ((C1751 * C245 - C32274 * C261 + C1752 * C1111 - C32263 * C1121 +
             C1753 * C1117 - C32241 * C1133) *
                C5988 +
            (C1751 * C262 - C32274 * C275 + C1752 * C1122 - C32263 * C1138 +
             C1753 * C1134 - C32241 * C1144) *
                C31864) *
               C32238) *
              C31925 * C31911 * C111 +
          ((C1799 * C5988 + C1800 * C31864) * C5245 +
           ((C2208 - C2207 + C2210 - C2209 + C2212 - C2211) * C5988 +
            (C2214 - C2213 + C2216 - C2215 + C2218 - C2217) * C31864) *
               C5246 +
           ((C32274 * C263 - C1751 * C246 + C32263 * C1123 - C1752 * C1112 +
             C32241 * C1135 - C1753 * C1118) *
                C5988 +
            (C32274 * C276 - C1751 * C264 + C32263 * C1139 - C1752 * C1124 +
             C32241 * C1145 - C1753 * C1136) *
                C31864) *
               C32238) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C32274 * C126 - C1751 * C119 + C32263 * C354 - C1752 * C344 +
             C32241 * C364 - C1753 * C349) *
                C5988 +
            (C32274 * C140 - C1751 * C127 + C32263 * C374 - C1752 * C355 +
             C32241 * C379 - C1753 * C365) *
                C31864) *
               C5245 +
           ((C6645 - C6646 + C6647 - C6648 + C6649 - C6650) * C5988 +
            (C6651 - C6652 + C6653 - C6654 + C6655 - C6656) * C31864) *
               C5246 +
           C6693 * C32238) *
              C31925 * C235 +
          (((C6646 - C6645 + C6648 - C6647 + C6650 - C6649) * C5988 +
            (C6652 - C6651 + C6654 - C6653 + C6656 - C6655) * C31864) *
               C5245 +
           ((C6658 - C6657 + C6660 - C6659 + C6662 - C6661) * C5988 +
            (C6664 - C6663 + C6666 - C6665 + C6668 - C6667) * C31864) *
               C5246 +
           ((C6669 - C6670 + C6671 - C6672 + C6673 - C6674) * C5988 +
            (C6675 - C6676 + C6677 - C6678 + C6679 - C6680) * C31864) *
               C32238) *
              C31925 * C236 +
          (C6693 * C5245 +
           ((C6670 - C6669 + C6672 - C6671 + C6674 - C6673) * C5988 +
            (C6676 - C6675 + C6678 - C6677 + C6680 - C6679) * C31864) *
               C5246 +
           ((C32274 * C953 - C1751 * C944 + C32263 * C6145 - C1752 * C6142 +
             C32241 * C6149 - C1753 * C6144) *
                C5988 +
            (C32274 * C962 - C1751 * C954 + C32263 * C6151 - C1752 * C6146 +
             C32241 * C6153 - C1753 * C6150) *
                C31864) *
               C32238) *
              C31925 * C237) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C9914 * C126 - C9917 * C119 + C9915 * C354 - C9918 * C344 +
            C32241 * C364 - C9919 * C349) *
               C5248 +
           (C9914 * C140 - C9917 * C127 + C9915 * C374 - C9918 * C355 +
            C32241 * C379 - C9919 * C365) *
               C32270 +
           (C9921 - C9922 + C9923 - C9924 + C9925 - C9926) * C5249 +
           (C9927 - C9928 + C9929 - C9930 + C9931 - C9932) * C32257 +
           C9965 * C5250 + C9966 * C32227) *
              C31955 * C31925 * C31911 * C110 +
          ((C9922 - C9921 + C9924 - C9923 + C9926 - C9925) * C5248 +
           (C9928 - C9927 + C9930 - C9929 + C9932 - C9931) * C32270 +
           (C9934 - C9933 + C9936 - C9935 + C9938 - C9937) * C5249 +
           (C9940 - C9939 + C9942 - C9941 + C9944 - C9943) * C32257 +
           (C9945 - C9946 + C9947 - C9948 + C9949 - C9950) * C5250 +
           (C9951 - C9952 + C9953 - C9954 + C9955 - C9956) * C32227) *
              C31955 * C31925 * C31911 * C111 +
          (C9965 * C5248 + C9966 * C32270 +
           (C9946 - C9945 + C9948 - C9947 + C9950 - C9949) * C5249 +
           (C9952 - C9951 + C9954 - C9953 + C9956 - C9955) * C32257 +
           (C9914 * C134 - C9917 * C123 + C9915 * C362 - C9918 * C348 +
            C32241 * C372 - C9919 * C353) *
               C5250 +
           (C9914 * C144 - C9917 * C135 + C9915 * C378 - C9918 * C363 +
            C32241 * C383 - C9919 * C373) *
               C32227) *
              C31955 * C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C9914 * C126 - C9917 * C119 + C9915 * C354 - C9918 * C344 +
            C32241 * C364 - C9919 * C349) *
               C5248 +
           (C9914 * C140 - C9917 * C127 + C9915 * C374 - C9918 * C355 +
            C32241 * C379 - C9919 * C365) *
               C32270 +
           (C9921 - C9922 + C9923 - C9924 + C9925 - C9926) * C5249 +
           (C9927 - C9928 + C9929 - C9930 + C9931 - C9932) * C32257 +
           C9965 * C5250 + C9966 * C32227) *
              C31955 * C31925 * C235 +
          ((C9917 * C239 - C9914 * C249 + C9918 * C676 - C9915 * C681 +
            C9919 * C1113 - C32241 * C1125) *
               C5248 +
           (C9917 * C250 - C9914 * C269 + C9918 * C682 - C9915 * C691 +
            C9919 * C1126 - C32241 * C1140) *
               C32270 +
           (C9917 * C240 - C9914 * C251 + C9918 * C677 - C9915 * C683 +
            C9919 * C1114 - C32241 * C1127) *
               C5249 +
           (C9917 * C252 - C9914 * C270 + C9918 * C684 - C9915 * C692 +
            C9919 * C1128 - C32241 * C1141) *
               C32257 +
           (C9917 * C241 - C9914 * C253 + C9918 * C678 - C9915 * C685 +
            C9919 * C1115 - C32241 * C1129) *
               C5250 +
           (C9917 * C254 - C9914 * C271 + C9918 * C686 - C9915 * C693 +
            C9919 * C1130 - C32241 * C1142) *
               C32227) *
              C31955 * C31925 * C236 +
          ((C9914 * C259 - C9917 * C244 + C9915 * C1119 - C9918 * C1110 +
            C32241 * C1131 - C9919 * C1116) *
               C5248 +
           (C9914 * C274 - C9917 * C260 + C9915 * C1137 - C9918 * C1120 +
            C32241 * C1143 - C9919 * C1132) *
               C32270 +
           (C9914 * C261 - C9917 * C245 + C9915 * C1121 - C9918 * C1111 +
            C32241 * C1133 - C9919 * C1117) *
               C5249 +
           (C9914 * C275 - C9917 * C262 + C9915 * C1138 - C9918 * C1122 +
            C32241 * C1144 - C9919 * C1134) *
               C32257 +
           (C9914 * C263 - C9917 * C246 + C9915 * C1123 - C9918 * C1112 +
            C32241 * C1135 - C9919 * C1118) *
               C5250 +
           (C9914 * C276 - C9917 * C264 + C9915 * C1139 - C9918 * C1124 +
            C32241 * C1145 - C9919 * C1136) *
               C32227) *
              C31955 * C31925 * C237) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C9914 * C126 - C9917 * C119 + C9915 * C354 - C9918 * C344 +
             C32241 * C364 - C9919 * C349) *
                C5988 +
            (C9914 * C140 - C9917 * C127 + C9915 * C374 - C9918 * C355 +
             C32241 * C379 - C9919 * C365) *
                C31864) *
               C32273 +
           ((C9914 * C249 - C9917 * C239 + C9915 * C681 - C9918 * C676 +
             C32241 * C1125 - C9919 * C1113) *
                C5988 +
            (C9914 * C269 - C9917 * C250 + C9915 * C691 - C9918 * C682 +
             C32241 * C1140 - C9919 * C1126) *
                C31864) *
               C32261 +
           ((C9914 * C259 - C9917 * C244 + C9915 * C1119 - C9918 * C1110 +
             C32241 * C1131 - C9919 * C1116) *
                C5988 +
            (C9914 * C274 - C9917 * C260 + C9915 * C1137 - C9918 * C1120 +
             C32241 * C1143 - C9919 * C1132) *
                C31864) *
               C32238) *
              C31925 * C31911 * C110 +
          (((C9922 - C9921 + C9924 - C9923 + C9926 - C9925) * C5988 +
            (C9928 - C9927 + C9930 - C9929 + C9932 - C9931) * C31864) *
               C32273 +
           ((C10333 - C10334 + C10335 - C10336 + C10337 - C10338) * C5988 +
            (C10339 - C10340 + C10341 - C10342 + C10343 - C10344) * C31864) *
               C32261 +
           ((C9917 * C245 - C9914 * C261 + C9918 * C1111 - C9915 * C1121 +
             C9919 * C1117 - C32241 * C1133) *
                C5988 +
            (C9917 * C262 - C9914 * C275 + C9918 * C1122 - C9915 * C1138 +
             C9919 * C1134 - C32241 * C1144) *
                C31864) *
               C32238) *
              C31925 * C31911 * C111 +
          ((C9965 * C5988 + C9966 * C31864) * C32273 +
           ((C10346 - C10345 + C10348 - C10347 + C10350 - C10349) * C5988 +
            (C10352 - C10351 + C10354 - C10353 + C10356 - C10355) * C31864) *
               C32261 +
           ((C9914 * C263 - C9917 * C246 + C9915 * C1123 - C9918 * C1112 +
             C32241 * C1135 - C9919 * C1118) *
                C5988 +
            (C9914 * C276 - C9917 * C264 + C9915 * C1139 - C9918 * C1124 +
             C32241 * C1145 - C9919 * C1136) *
                C31864) *
               C32238) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C9914 * C126 - C9917 * C119 + C9915 * C354 - C9918 * C344 +
             C32241 * C364 - C9919 * C349) *
                C5988 +
            (C9914 * C140 - C9917 * C127 + C9915 * C374 - C9918 * C355 +
             C32241 * C379 - C9919 * C365) *
                C31864) *
               C32273 +
           ((C10893 - C10894 + C10895 - C10896 + C10897 - C10898) * C5988 +
            (C10899 - C10900 + C10901 - C10902 + C10903 - C10904) * C31864) *
               C32261 +
           C10941 * C32238) *
              C31925 * C235 +
          (((C10894 - C10893 + C10896 - C10895 + C10898 - C10897) * C5988 +
            (C10900 - C10899 + C10902 - C10901 + C10904 - C10903) * C31864) *
               C32273 +
           ((C10906 - C10905 + C10908 - C10907 + C10910 - C10909) * C5988 +
            (C10912 - C10911 + C10914 - C10913 + C10916 - C10915) * C31864) *
               C32261 +
           ((C10917 - C10918 + C10919 - C10920 + C10921 - C10922) * C5988 +
            (C10923 - C10924 + C10925 - C10926 + C10927 - C10928) * C31864) *
               C32238) *
              C31925 * C236 +
          (C10941 * C32273 +
           ((C10918 - C10917 + C10920 - C10919 + C10922 - C10921) * C5988 +
            (C10924 - C10923 + C10926 - C10925 + C10928 - C10927) * C31864) *
               C32261 +
           ((C9914 * C953 - C9917 * C944 + C9915 * C6145 - C9918 * C6142 +
             C32241 * C6149 - C9919 * C6144) *
                C5988 +
            (C9914 * C962 - C9917 * C954 + C9915 * C6151 - C9918 * C6146 +
             C32241 * C6153 - C9919 * C6150) *
                C31864) *
               C32238) *
              C31925 * C237) *
         C31899) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C11587 * C126 - C11592 * C119 + C11588 * C354 - C11593 * C344 +
            C11589 * C364 - C11594 * C349 + C11590 * C2026 - C11595 * C2020 +
            C11591 * C2032 - C11596 * C2023) *
               C5988 +
           (C11587 * C140 - C11592 * C127 + C11588 * C374 - C11593 * C355 +
            C11589 * C379 - C11594 * C365 + C11590 * C2038 - C11595 * C2027 +
            C11591 * C2041 - C11596 * C2033) *
               C31864) *
              C31955 * C31925 * C31911 * C110 +
          ((C11592 * C120 - C11587 * C128 + C11593 * C345 - C11588 * C356 +
            C11594 * C350 - C11589 * C366 + C11595 * C2021 - C11590 * C2028 +
            C11596 * C2024 - C11591 * C2034) *
               C5988 +
           (C11592 * C129 - C11587 * C141 + C11593 * C357 - C11588 * C375 +
            C11594 * C367 - C11589 * C380 + C11595 * C2029 - C11590 * C2039 +
            C11596 * C2035 - C11591 * C2042) *
               C31864) *
              C31955 * C31925 * C31911 * C111 +
          ((C11587 * C130 - C11592 * C121 + C11588 * C358 - C11593 * C346 +
            C11589 * C368 - C11594 * C351 + C11590 * C2030 - C11595 * C2022 +
            C11591 * C2036 - C11596 * C2025) *
               C5988 +
           (C11587 * C142 - C11592 * C131 + C11588 * C376 - C11593 * C359 +
            C11589 * C381 - C11594 * C369 + C11590 * C2040 - C11595 * C2031 +
            C11591 * C2043 - C11596 * C2037) *
               C31864) *
              C31955 * C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C11587 * C126 - C11592 * C119 + C11588 * C354 - C11593 * C344 +
            C11589 * C364 - C11594 * C349 + C11590 * C2026 - C11595 * C2020 +
            C11591 * C2032 - C11596 * C2023) *
               C5988 +
           (C11587 * C140 - C11592 * C127 + C11588 * C374 - C11593 * C355 +
            C11589 * C379 - C11594 * C365 + C11590 * C2038 - C11595 * C2027 +
            C11591 * C2041 - C11596 * C2033) *
               C31864) *
              C31955 * C31925 * C235 +
          ((C11592 * C239 - C11587 * C249 + C11593 * C676 - C11588 * C681 +
            C11594 * C1113 - C11589 * C1125 + C11595 * C2538 - C11590 * C2541 +
            C11596 * C6804 - C11591 * C6808) *
               C5988 +
           (C11592 * C250 - C11587 * C269 + C11593 * C682 - C11588 * C691 +
            C11594 * C1126 - C11589 * C1140 + C11595 * C2542 - C11590 * C2547 +
            C11596 * C6809 - C11591 * C6813) *
               C31864) *
              C31955 * C31925 * C236 +
          ((C11587 * C259 - C11592 * C244 + C11588 * C1119 - C11593 * C1110 +
            C11589 * C1131 - C11594 * C1116 + C11590 * C6806 - C11595 * C6803 +
            C11591 * C6810 - C11596 * C6805) *
               C5988 +
           (C11587 * C274 - C11592 * C260 + C11588 * C1137 - C11593 * C1120 +
            C11589 * C1143 - C11594 * C1132 + C11590 * C6812 - C11595 * C6807 +
            C11591 * C6814 - C11596 * C6811) *
               C31864) *
              C31955 * C31925 * C237) *
         C31899) /
            (p * q * std::sqrt(p + q));
    d2ee[65] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C32208 * C126 - C3352 * C119 + C32053 * C354 - C3353 * C344) *
                 C30875 +
             (C32208 * C140 - C3352 * C127 + C32053 * C374 - C3353 * C355) *
                 C32188 +
             (C3355 - C3356 + C3357 - C3358) * C30856 +
             (C3359 - C3360 + C3361 - C3362) * C31874) *
                C5245 +
            ((C4331 - C4332 + C4333 - C4334) * C30875 +
             (C4335 - C4336 + C4337 - C4338) * C32188 + C4715 * C30856 +
             C4716 * C31874) *
                C5246 +
            C8342 * C32238) *
               C31925 * C466 +
           (((C4332 - C4331 + C4334 - C4333) * C30875 +
             (C4336 - C4335 + C4338 - C4337) * C32188 + C4717 * C30856 +
             C4718 * C31874) *
                C5245 +
            ((C4339 - C4340 + C4341 - C4342) * C30875 +
             (C4343 - C4344 + C4345 - C4346) * C32188 + C8687 * C30856 +
             C8688 * C31874) *
                C5246 +
            ((C8316 - C8317 + C8318 - C8319) * C30875 +
             (C8320 - C8321 + C8322 - C8323) * C32188 +
             (C8324 - C8325 + C8326 - C8327) * C30856 +
             (C8328 - C8329 + C8330 - C8331) * C31874) *
                C32238) *
               C31925 * C467) *
              C468 +
          ((((C3356 - C3355 + C3358 - C3357) * C30875 +
             (C3360 - C3359 + C3362 - C3361) * C32188 +
             (C3364 - C3363 + C3366 - C3365) * C30856 +
             (C3368 - C3367 + C3370 - C3369) * C31874) *
                C5245 +
            (C4717 * C30875 + C4718 * C32188 + C4719 * C30856 +
             C4720 * C31874) *
                C5246 +
            (C8687 * C30875 + C8688 * C32188 +
             (C4355 - C4356 + C4357 - C4358) * C30856 +
             (C4359 - C4360 + C4361 - C4362) * C31874) *
                C32238) *
               C31925 * C466 +
           ((C4715 * C30875 + C4716 * C32188 + C4183 * C30856 +
             C4184 * C31874) *
                C5245 +
            (C8334 * C30875 + C8335 * C32188 +
             (C4356 - C4355 + C4358 - C4357) * C30856 +
             (C4360 - C4359 + C4362 - C4361) * C31874) *
                C5246 +
            ((C8325 - C8324 + C8327 - C8326) * C30875 +
             (C8329 - C8328 + C8331 - C8330) * C32188 +
             (C32208 * C951 - C3352 * C943 + C32053 * C1625 - C3353 * C1620) *
                 C30856 +
             (C32208 * C961 - C3352 * C952 + C32053 * C1629 - C3353 * C1626) *
                 C31874) *
                C32238) *
               C31925 * C467) *
              C469)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C32208 * C126 - C3352 * C119 + C32053 * C354 - C3353 * C344) *
                C2654 +
            (C32208 * C140 - C3352 * C127 + C32053 * C374 - C3353 * C355) *
                C2648 +
            (C3355 - C3356 + C3357 - C3358) * C2655 +
            (C3359 - C3360 + C3361 - C3362) * C2649 + C3395 * C2656 +
            C3396 * C2650 + C3397 * C2657 + C3398 * C32242) *
               C31955 * C31925 * C466 +
           ((C3352 * C239 - C32208 * C249 + C3353 * C676 - C32053 * C681) *
                C2654 +
            (C3352 * C250 - C32208 * C269 + C3353 * C682 - C32053 * C691) *
                C2648 +
            (C3725 - C3726 + C3727 - C3728) * C2655 +
            (C3729 - C3730 + C3731 - C3732) * C2649 +
            (C3733 - C3734 + C3735 - C3736) * C2656 +
            (C3737 - C3738 + C3739 - C3740) * C2650 +
            (C3741 - C3742 + C3743 - C3744) * C2657 +
            (C3745 - C3746 + C3747 - C3748) * C32242) *
               C31955 * C31925 * C467) *
              C468 +
          (((C3356 - C3355 + C3358 - C3357) * C2654 +
            (C3360 - C3359 + C3362 - C3361) * C2648 +
            (C3364 - C3363 + C3366 - C3365) * C2655 +
            (C3368 - C3367 + C3370 - C3369) * C2649 +
            (C3372 - C3371 + C3374 - C3373) * C2656 +
            (C3376 - C3375 + C3378 - C3377) * C2650 +
            (C3379 - C3380 + C3381 - C3382) * C2657 +
            (C3383 - C3384 + C3385 - C3386) * C32242) *
               C31955 * C31925 * C466 +
           ((C3726 - C3725 + C3728 - C3727) * C2654 +
            (C3730 - C3729 + C3732 - C3731) * C2648 +
            (C3734 - C3733 + C3736 - C3735) * C2655 +
            (C3738 - C3737 + C3740 - C3739) * C2649 +
            (C3742 - C3741 + C3744 - C3743) * C2656 +
            (C3746 - C3745 + C3748 - C3747) * C2650 +
            (C32208 * C257 - C3352 * C243 + C32053 * C689 - C3353 * C680) *
                C2657 +
            (C32208 * C273 - C3352 * C258 + C32053 * C695 - C3353 * C690) *
                C32242) *
               C31955 * C31925 * C467) *
              C469)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C13137 * C126 - C13141 * C119 + C13138 * C354 - C13142 * C344 +
             C13139 * C364 - C13143 * C349 + C32254 * C2026 - C13144 * C2020) *
                C30875 +
            (C13137 * C140 - C13141 * C127 + C13138 * C374 - C13142 * C355 +
             C13139 * C379 - C13143 * C365 + C32254 * C2038 - C13144 * C2027) *
                C32188 +
            (C13146 - C13147 + C13148 - C13149 + C13150 - C13151 + C13152 -
             C13153) *
                C30856 +
            (C13154 - C13155 + C13156 - C13157 + C13158 - C13159 + C13160 -
             C13161) *
                C31874) *
               C31955 * C31925 * C466 +
           ((C13141 * C239 - C13137 * C249 + C13142 * C676 - C13138 * C681 +
             C13143 * C1113 - C13139 * C1125 + C13144 * C2538 -
             C32254 * C2541) *
                C30875 +
            (C13141 * C250 - C13137 * C269 + C13142 * C682 - C13138 * C691 +
             C13143 * C1126 - C13139 * C1140 + C13144 * C2542 -
             C32254 * C2547) *
                C32188 +
            (C13504 - C13505 + C13506 - C13507 + C13508 - C13509 + C13510 -
             C13511) *
                C30856 +
            (C13512 - C13513 + C13514 - C13515 + C13516 - C13517 + C13518 -
             C13519) *
                C31874) *
               C31955 * C31925 * C467) *
              C468 +
          (((C13147 - C13146 + C13149 - C13148 + C13151 - C13150 + C13153 -
             C13152) *
                C30875 +
            (C13155 - C13154 + C13157 - C13156 + C13159 - C13158 + C13161 -
             C13160) *
                C32188 +
            (C13162 - C13163 + C13164 - C13165 + C13166 - C13167 + C13168 -
             C13169) *
                C30856 +
            (C13170 - C13171 + C13172 - C13173 + C13174 - C13175 + C13176 -
             C13177) *
                C31874) *
               C31955 * C31925 * C466 +
           ((C13505 - C13504 + C13507 - C13506 + C13509 - C13508 + C13511 -
             C13510) *
                C30875 +
            (C13513 - C13512 + C13515 - C13514 + C13517 - C13516 + C13519 -
             C13518) *
                C32188 +
            (C13137 * C253 - C13141 * C241 + C13138 * C685 - C13142 * C678 +
             C13139 * C1129 - C13143 * C1115 + C32254 * C2545 -
             C13144 * C2540) *
                C30856 +
            (C13137 * C271 - C13141 * C254 + C13138 * C693 - C13142 * C686 +
             C13139 * C1142 - C13143 * C1130 + C32254 * C2549 -
             C13144 * C2546) *
                C31874) *
               C31955 * C31925 * C467) *
              C469)) /
            (p * q * std::sqrt(p + q));
    d2ee[66] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C32208 * C126 - C3352 * C119 + C32053 * C354 - C3353 * C344) *
                 C30875 +
             (C32208 * C140 - C3352 * C127 + C32053 * C374 - C3353 * C355) *
                 C32188 +
             (C3355 - C3356 + C3357 - C3358) * C30856 +
             (C3359 - C3360 + C3361 - C3362) * C31874) *
                C5245 +
            ((C4331 - C4332 + C4333 - C4334) * C30875 +
             (C4335 - C4336 + C4337 - C4338) * C32188 + C4715 * C30856 +
             C4716 * C31874) *
                C5246 +
            C8342 * C32238) *
               C572 +
           (((C3352 * C344 - C32208 * C354 + C3353 * C349 - C32053 * C364) *
                 C30875 +
             (C3352 * C355 - C32208 * C374 + C3353 * C365 - C32053 * C379) *
                 C32188 +
             (C3879 - C3880 + C3881 - C3882) * C30856 +
             (C3883 - C3884 + C3885 - C3886) * C31874) *
                C5245 +
            ((C5125 - C5126 + C5127 - C5128) * C30875 +
             (C5129 - C5130 + C5131 - C5132) * C32188 +
             (C4915 - C4916 + C4917 - C4918) * C30856 +
             (C4919 - C4920 + C4921 - C4922) * C31874) *
                C5246 +
            ((C9085 - C9086 + C9087 - C9088) * C30875 +
             (C9089 - C9090 + C9091 - C9092) * C32188 +
             (C8883 - C8884 + C8885 - C8886) * C30856 +
             (C8887 - C8888 + C8889 - C8890) * C31874) *
                C32238) *
               C573) *
              C466 +
          ((((C4332 - C4331 + C4334 - C4333) * C30875 +
             (C4336 - C4335 + C4338 - C4337) * C32188 + C4717 * C30856 +
             C4718 * C31874) *
                C5245 +
            ((C4339 - C4340 + C4341 - C4342) * C30875 +
             (C4343 - C4344 + C4345 - C4346) * C32188 + C8687 * C30856 +
             C8688 * C31874) *
                C5246 +
            ((C8316 - C8317 + C8318 - C8319) * C30875 +
             (C8320 - C8321 + C8322 - C8323) * C32188 +
             (C8324 - C8325 + C8326 - C8327) * C30856 +
             (C8328 - C8329 + C8330 - C8331) * C31874) *
                C32238) *
               C572 +
           (((C5126 - C5125 + C5128 - C5127) * C30875 +
             (C5130 - C5129 + C5132 - C5131) * C32188 +
             (C4916 - C4915 + C4918 - C4917) * C30856 +
             (C4920 - C4919 + C4922 - C4921) * C31874) *
                C5245 +
            ((C9086 - C9085 + C9088 - C9087) * C30875 +
             (C9090 - C9089 + C9092 - C9091) * C32188 +
             (C8884 - C8883 + C8886 - C8885) * C30856 +
             (C8888 - C8887 + C8890 - C8889) * C31874) *
                C5246 +
            ((C32208 * C1621 - C3352 * C1618 + C32053 * C6147 - C3353 * C6143) *
                 C30875 +
             (C32208 * C1627 - C3352 * C1622 + C32053 * C6152 - C3353 * C6148) *
                 C32188 +
             (C32208 * C1623 - C3352 * C1619 + C32053 * C6962 - C3353 * C6961) *
                 C30856 +
             (C32208 * C1628 - C3352 * C1624 + C32053 * C6964 - C3353 * C6963) *
                 C31874) *
                C32238) *
               C573) *
              C467) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C32208 * C126 - C3352 * C119 + C32053 * C354 - C3353 * C344) *
                C2654 +
            (C32208 * C140 - C3352 * C127 + C32053 * C374 - C3353 * C355) *
                C2648 +
            (C3355 - C3356 + C3357 - C3358) * C2655 +
            (C3359 - C3360 + C3361 - C3362) * C2649 + C3395 * C2656 +
            C3396 * C2650 + C3397 * C2657 + C3398 * C32242) *
               C31955 * C572 +
           ((C3352 * C344 - C32208 * C354 + C3353 * C349 - C32053 * C364) *
                C2654 +
            (C3352 * C355 - C32208 * C374 + C3353 * C365 - C32053 * C379) *
                C2648 +
            (C3879 - C3880 + C3881 - C3882) * C2655 +
            (C3883 - C3884 + C3885 - C3886) * C2649 +
            (C3887 - C3888 + C3889 - C3890) * C2656 +
            (C3891 - C3892 + C3893 - C3894) * C2650 +
            (C3895 - C3896 + C3897 - C3898) * C2657 +
            (C3899 - C3900 + C3901 - C3902) * C32242) *
               C31955 * C573) *
              C466 +
          (((C3352 * C239 - C32208 * C249 + C3353 * C676 - C32053 * C681) *
                C2654 +
            (C3352 * C250 - C32208 * C269 + C3353 * C682 - C32053 * C691) *
                C2648 +
            (C3725 - C3726 + C3727 - C3728) * C2655 +
            (C3729 - C3730 + C3731 - C3732) * C2649 +
            (C3733 - C3734 + C3735 - C3736) * C2656 +
            (C3737 - C3738 + C3739 - C3740) * C2650 +
            (C3741 - C3742 + C3743 - C3744) * C2657 +
            (C3745 - C3746 + C3747 - C3748) * C32242) *
               C31955 * C572 +
           ((C32208 * C681 - C3352 * C676 + C32053 * C1125 - C3353 * C1113) *
                C2654 +
            (C32208 * C691 - C3352 * C682 + C32053 * C1140 - C3353 * C1126) *
                C2648 +
            (C32208 * C683 - C3352 * C677 + C32053 * C1127 - C3353 * C1114) *
                C2655 +
            (C32208 * C692 - C3352 * C684 + C32053 * C1141 - C3353 * C1128) *
                C2649 +
            (C32208 * C685 - C3352 * C678 + C32053 * C1129 - C3353 * C1115) *
                C2656 +
            (C32208 * C693 - C3352 * C686 + C32053 * C1142 - C3353 * C1130) *
                C2650 +
            (C32208 * C687 - C3352 * C679 + C32053 * C2191 - C3353 * C2190) *
                C2657 +
            (C32208 * C694 - C3352 * C688 + C32053 * C2193 - C3353 * C2192) *
                C32242) *
               C31955 * C573) *
              C467) *
         C31899) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C13137 * C126 - C13141 * C119 + C13138 * C354 - C13142 * C344 +
             C13139 * C364 - C13143 * C349 + C32254 * C2026 - C13144 * C2020) *
                C30875 +
            (C13137 * C140 - C13141 * C127 + C13138 * C374 - C13142 * C355 +
             C13139 * C379 - C13143 * C365 + C32254 * C2038 - C13144 * C2027) *
                C32188 +
            (C13146 - C13147 + C13148 - C13149 + C13150 - C13151 + C13152 -
             C13153) *
                C30856 +
            (C13154 - C13155 + C13156 - C13157 + C13158 - C13159 + C13160 -
             C13161) *
                C31874) *
               C31955 * C572 +
           ((C13141 * C344 - C13137 * C354 + C13142 * C349 - C13138 * C364 +
             C13143 * C2020 - C13139 * C2026 + C13144 * C2023 -
             C32254 * C2032) *
                C30875 +
            (C13141 * C355 - C13137 * C374 + C13142 * C365 - C13138 * C379 +
             C13143 * C2027 - C13139 * C2038 + C13144 * C2033 -
             C32254 * C2041) *
                C32188 +
            (C13650 - C13651 + C13652 - C13653 + C13654 - C13655 + C13656 -
             C13657) *
                C30856 +
            (C13658 - C13659 + C13660 - C13661 + C13662 - C13663 + C13664 -
             C13665) *
                C31874) *
               C31955 * C573) *
              C466 +
          (((C13141 * C239 - C13137 * C249 + C13142 * C676 - C13138 * C681 +
             C13143 * C1113 - C13139 * C1125 + C13144 * C2538 -
             C32254 * C2541) *
                C30875 +
            (C13141 * C250 - C13137 * C269 + C13142 * C682 - C13138 * C691 +
             C13143 * C1126 - C13139 * C1140 + C13144 * C2542 -
             C32254 * C2547) *
                C32188 +
            (C13504 - C13505 + C13506 - C13507 + C13508 - C13509 + C13510 -
             C13511) *
                C30856 +
            (C13512 - C13513 + C13514 - C13515 + C13516 - C13517 + C13518 -
             C13519) *
                C31874) *
               C31955 * C572 +
           ((C13137 * C681 - C13141 * C676 + C13138 * C1125 - C13142 * C1113 +
             C13139 * C2541 - C13143 * C2538 + C32254 * C6808 -
             C13144 * C6804) *
                C30875 +
            (C13137 * C691 - C13141 * C682 + C13138 * C1140 - C13142 * C1126 +
             C13139 * C2547 - C13143 * C2542 + C32254 * C6813 -
             C13144 * C6809) *
                C32188 +
            (C13137 * C683 - C13141 * C677 + C13138 * C1127 - C13142 * C1114 +
             C13139 * C2543 - C13143 * C2539 + C32254 * C11812 -
             C13144 * C11811) *
                C30856 +
            (C13137 * C692 - C13141 * C684 + C13138 * C1141 - C13142 * C1128 +
             C13139 * C2548 - C13143 * C2544 + C32254 * C11814 -
             C13144 * C11813) *
                C31874) *
               C31955 * C573) *
              C467) *
         C31899) /
            (p * q * std::sqrt(p + q));
    d2ee[67] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C32208 * C126 - C3352 * C119 + C32053 * C354 - C3353 * C344) *
                   C2654 +
               (C32208 * C140 - C3352 * C127 + C32053 * C374 - C3353 * C355) *
                   C2648 +
               (C3355 - C3356 + C3357 - C3358) * C2655 +
               (C3359 - C3360 + C3361 - C3362) * C2649 + C3395 * C2656 +
               C3396 * C2650 + C3397 * C2657 + C3398 * C32242) *
                  C31955 * C31925 * C31911 * C110 +
              ((C3356 - C3355 + C3358 - C3357) * C2654 +
               (C3360 - C3359 + C3362 - C3361) * C2648 +
               (C3364 - C3363 + C3366 - C3365) * C2655 +
               (C3368 - C3367 + C3370 - C3369) * C2649 +
               (C3372 - C3371 + C3374 - C3373) * C2656 +
               (C3376 - C3375 + C3378 - C3377) * C2650 +
               (C3379 - C3380 + C3381 - C3382) * C2657 +
               (C3383 - C3384 + C3385 - C3386) * C32242) *
                  C31955 * C31925 * C31911 * C111 +
              (C3395 * C2654 + C3396 * C2648 + C3397 * C2655 + C3398 * C2649 +
               (C3380 - C3379 + C3382 - C3381) * C2656 +
               (C3384 - C3383 + C3386 - C3385) * C2650 +
               (C32208 * C136 - C3352 * C124 + C32053 * C575 - C3353 * C574) *
                   C2657 +
               (C32208 * C145 - C3352 * C137 + C32053 * C577 - C3353 * C576) *
                   C32242) *
                  C31955 * C31925 * C31911 * C112) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C32208 * C126 - C3352 * C119 + C32053 * C354 - C3353 * C344) *
                   C2654 +
               (C32208 * C140 - C3352 * C127 + C32053 * C374 - C3353 * C355) *
                   C2648 +
               (C3355 - C3356 + C3357 - C3358) * C2655 +
               (C3359 - C3360 + C3361 - C3362) * C2649 + C3395 * C2656 +
               C3396 * C2650 + C3397 * C2657 + C3398 * C32242) *
                  C31955 * C31925 * C235 +
              ((C3352 * C239 - C32208 * C249 + C3353 * C676 - C32053 * C681) *
                   C2654 +
               (C3352 * C250 - C32208 * C269 + C3353 * C682 - C32053 * C691) *
                   C2648 +
               (C3352 * C240 - C32208 * C251 + C3353 * C677 - C32053 * C683) *
                   C2655 +
               (C3352 * C252 - C32208 * C270 + C3353 * C684 - C32053 * C692) *
                   C2649 +
               (C3352 * C241 - C32208 * C253 + C3353 * C678 - C32053 * C685) *
                   C2656 +
               (C3352 * C254 - C32208 * C271 + C3353 * C686 - C32053 * C693) *
                   C2650 +
               (C3352 * C242 - C32208 * C255 + C3353 * C679 - C32053 * C687) *
                   C2657 +
               (C3352 * C256 - C32208 * C272 + C3353 * C688 - C32053 * C694) *
                   C32242) *
                  C31955 * C31925 * C236 +
              ((C32208 * C259 - C3352 * C244 + C32053 * C1119 - C3353 * C1110) *
                   C2654 +
               (C32208 * C274 - C3352 * C260 + C32053 * C1137 - C3353 * C1120) *
                   C2648 +
               (C32208 * C261 - C3352 * C245 + C32053 * C1121 - C3353 * C1111) *
                   C2655 +
               (C32208 * C275 - C3352 * C262 + C32053 * C1138 - C3353 * C1122) *
                   C2649 +
               (C32208 * C263 - C3352 * C246 + C32053 * C1123 - C3353 * C1112) *
                   C2656 +
               (C32208 * C276 - C3352 * C264 + C32053 * C1139 - C3353 * C1124) *
                   C2650 +
               (C32208 * C265 - C3352 * C247 + C32053 * C1453 - C3353 * C1452) *
                   C2657 +
               (C32208 * C277 - C3352 * C266 + C32053 * C1455 - C3353 * C1454) *
                   C32242) *
                  C31955 * C31925 * C237) *
             C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C32208 * C126 - C3352 * C119 + C32053 * C354 - C3353 * C344) *
               C2654 +
           (C32208 * C140 - C3352 * C127 + C32053 * C374 - C3353 * C355) *
               C2648 +
           (C3355 - C3356 + C3357 - C3358) * C2655 +
           (C3359 - C3360 + C3361 - C3362) * C2649 + C3395 * C2656 +
           C3396 * C2650 + C3397 * C2657 + C3398 * C32242) *
              C31955 * C341 +
          ((C3352 * C344 - C32208 * C354 + C3353 * C349 - C32053 * C364) *
               C2654 +
           (C3352 * C355 - C32208 * C374 + C3353 * C365 - C32053 * C379) *
               C2648 +
           (C3352 * C345 - C32208 * C356 + C3353 * C350 - C32053 * C366) *
               C2655 +
           (C3352 * C357 - C32208 * C375 + C3353 * C367 - C32053 * C380) *
               C2649 +
           (C3352 * C346 - C32208 * C358 + C3353 * C351 - C32053 * C368) *
               C2656 +
           (C3352 * C359 - C32208 * C376 + C3353 * C369 - C32053 * C381) *
               C2650 +
           (C3352 * C347 - C32208 * C360 + C3353 * C352 - C32053 * C370) *
               C2657 +
           (C3352 * C361 - C32208 * C377 + C3353 * C371 - C32053 * C382) *
               C32242) *
              C31955 * C342 +
          ((C32208 * C364 - C3352 * C349 + C32053 * C2026 - C3353 * C2020) *
               C2654 +
           (C32208 * C379 - C3352 * C365 + C32053 * C2038 - C3353 * C2027) *
               C2648 +
           (C32208 * C366 - C3352 * C350 + C32053 * C2028 - C3353 * C2021) *
               C2655 +
           (C32208 * C380 - C3352 * C367 + C32053 * C2039 - C3353 * C2029) *
               C2649 +
           (C32208 * C368 - C3352 * C351 + C32053 * C2030 - C3353 * C2022) *
               C2656 +
           (C32208 * C381 - C3352 * C369 + C32053 * C2040 - C3353 * C2031) *
               C2650 +
           (C32208 * C370 - C3352 * C352 + C32053 * C2365 - C3353 * C2364) *
               C2657 +
           (C32208 * C382 - C3352 * C371 + C32053 * C2367 - C3353 * C2366) *
               C32242) *
              C31955 * C343) *
         C31911 * C31899) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C32208 * C126 - C3352 * C119 + C32053 * C354 - C3353 * C344) *
                C30875 +
            (C32208 * C140 - C3352 * C127 + C32053 * C374 - C3353 * C355) *
                C32188 +
            (C3355 - C3356 + C3357 - C3358) * C30856 +
            (C3359 - C3360 + C3361 - C3362) * C31874) *
               C5245 +
           ((C4331 - C4332 + C4333 - C4334) * C30875 +
            (C4335 - C4336 + C4337 - C4338) * C32188 + C4715 * C30856 +
            C4716 * C31874) *
               C5246 +
           ((C4340 - C4339 + C4342 - C4341) * C30875 +
            (C4344 - C4343 + C4346 - C4345) * C32188 +
            (C4348 - C4347 + C4350 - C4349) * C30856 +
            (C4352 - C4351 + C4354 - C4353) * C31874) *
               C32238) *
              C31925 * C31911 * C110 +
          (((C3356 - C3355 + C3358 - C3357) * C30875 +
            (C3360 - C3359 + C3362 - C3361) * C32188 +
            (C3364 - C3363 + C3366 - C3365) * C30856 +
            (C3368 - C3367 + C3370 - C3369) * C31874) *
               C5245 +
           (C4717 * C30875 + C4718 * C32188 + C4719 * C30856 + C4720 * C31874) *
               C5246 +
           ((C4347 - C4348 + C4349 - C4350) * C30875 +
            (C4351 - C4352 + C4353 - C4354) * C32188 +
            (C4355 - C4356 + C4357 - C4358) * C30856 +
            (C4359 - C4360 + C4361 - C4362) * C31874) *
               C32238) *
              C31925 * C31911 * C111 +
          ((C3395 * C30875 + C3396 * C32188 + C3397 * C30856 + C3398 * C31874) *
               C5245 +
           (C4183 * C30875 + C4184 * C32188 +
            (C3742 - C3741 + C3744 - C3743) * C30856 +
            (C3746 - C3745 + C3748 - C3747) * C31874) *
               C5246 +
           ((C4356 - C4355 + C4358 - C4357) * C30875 +
            (C4360 - C4359 + C4362 - C4361) * C32188 +
            (C32208 * C265 - C3352 * C247 + C32053 * C1453 - C3353 * C1452) *
                C30856 +
            (C32208 * C277 - C3352 * C266 + C32053 * C1455 - C3353 * C1454) *
                C31874) *
               C32238) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C32208 * C126 - C3352 * C119 + C32053 * C354 - C3353 * C344) *
                C30875 +
            (C32208 * C140 - C3352 * C127 + C32053 * C374 - C3353 * C355) *
                C32188 +
            (C3355 - C3356 + C3357 - C3358) * C30856 +
            (C3359 - C3360 + C3361 - C3362) * C31874) *
               C5245 +
           ((C4331 - C4332 + C4333 - C4334) * C30875 +
            (C4335 - C4336 + C4337 - C4338) * C32188 + C4715 * C30856 +
            C4716 * C31874) *
               C5246 +
           C8342 * C32238) *
              C31925 * C235 +
          (((C4332 - C4331 + C4334 - C4333) * C30875 +
            (C4336 - C4335 + C4338 - C4337) * C32188 + C4717 * C30856 +
            C4718 * C31874) *
               C5245 +
           ((C4339 - C4340 + C4341 - C4342) * C30875 +
            (C4343 - C4344 + C4345 - C4346) * C32188 +
            (C4347 - C4348 + C4349 - C4350) * C30856 +
            (C4351 - C4352 + C4353 - C4354) * C31874) *
               C5246 +
           ((C8316 - C8317 + C8318 - C8319) * C30875 +
            (C8320 - C8321 + C8322 - C8323) * C32188 +
            (C8324 - C8325 + C8326 - C8327) * C30856 +
            (C8328 - C8329 + C8330 - C8331) * C31874) *
               C32238) *
              C31925 * C236 +
          (C8342 * C5245 +
           ((C8317 - C8316 + C8319 - C8318) * C30875 +
            (C8321 - C8320 + C8323 - C8322) * C32188 +
            (C8325 - C8324 + C8327 - C8326) * C30856 +
            (C8329 - C8328 + C8331 - C8330) * C31874) *
               C5246 +
           ((C32208 * C953 - C3352 * C944 + C32053 * C6145 - C3353 * C6142) *
                C30875 +
            (C32208 * C962 - C3352 * C954 + C32053 * C6151 - C3353 * C6146) *
                C32188 +
            (C32208 * C955 - C3352 * C945 + C32053 * C6327 - C3353 * C6326) *
                C30856 +
            (C32208 * C963 - C3352 * C956 + C32053 * C6329 - C3353 * C6328) *
                C31874) *
               C32238) *
              C31925 * C237) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C32208 * C126 - C3352 * C119 + C32053 * C354 - C3353 * C344) *
                C30875 +
            (C32208 * C140 - C3352 * C127 + C32053 * C374 - C3353 * C355) *
                C32188 +
            (C3355 - C3356 + C3357 - C3358) * C30856 +
            (C3359 - C3360 + C3361 - C3362) * C31874) *
               C5245 +
           ((C4331 - C4332 + C4333 - C4334) * C30875 +
            (C4335 - C4336 + C4337 - C4338) * C32188 + C4715 * C30856 +
            C4716 * C31874) *
               C5246 +
           C8342 * C32238) *
              C341 +
          (((C3352 * C344 - C32208 * C354 + C3353 * C349 - C32053 * C364) *
                C30875 +
            (C3352 * C355 - C32208 * C374 + C3353 * C365 - C32053 * C379) *
                C32188 +
            (C3879 - C3880 + C3881 - C3882) * C30856 +
            (C3883 - C3884 + C3885 - C3886) * C31874) *
               C5245 +
           ((C5125 - C5126 + C5127 - C5128) * C30875 +
            (C5129 - C5130 + C5131 - C5132) * C32188 +
            (C4915 - C4916 + C4917 - C4918) * C30856 +
            (C4919 - C4920 + C4921 - C4922) * C31874) *
               C5246 +
           ((C3352 * C1110 - C32208 * C1119 + C3353 * C1116 - C32053 * C1131) *
                C30875 +
            (C3352 * C1120 - C32208 * C1137 + C3353 * C1132 - C32053 * C1143) *
                C32188 +
            (C3352 * C1111 - C32208 * C1121 + C3353 * C1117 - C32053 * C1133) *
                C30856 +
            (C3352 * C1122 - C32208 * C1138 + C3353 * C1134 - C32053 * C1144) *
                C31874) *
               C32238) *
              C342 +
          (((C32208 * C364 - C3352 * C349 + C32053 * C2026 - C3353 * C2020) *
                C30875 +
            (C32208 * C379 - C3352 * C365 + C32053 * C2038 - C3353 * C2027) *
                C32188 +
            (C32208 * C366 - C3352 * C350 + C32053 * C2028 - C3353 * C2021) *
                C30856 +
            (C32208 * C380 - C3352 * C367 + C32053 * C2039 - C3353 * C2029) *
                C31874) *
               C5245 +
           ((C32208 * C1125 - C3352 * C1113 + C32053 * C2541 - C3353 * C2538) *
                C30875 +
            (C32208 * C1140 - C3352 * C1126 + C32053 * C2547 - C3353 * C2542) *
                C32188 +
            (C32208 * C1127 - C3352 * C1114 + C32053 * C2543 - C3353 * C2539) *
                C30856 +
            (C32208 * C1141 - C3352 * C1128 + C32053 * C2548 - C3353 * C2544) *
                C31874) *
               C5246 +
           ((C32208 * C1131 - C3352 * C1116 + C32053 * C6806 - C3353 * C6803) *
                C30875 +
            (C32208 * C1143 - C3352 * C1132 + C32053 * C6812 - C3353 * C6807) *
                C32188 +
            (C32208 * C1133 - C3352 * C1117 + C32053 * C7124 - C3353 * C7123) *
                C30856 +
            (C32208 * C1144 - C3352 * C1134 + C32053 * C7126 - C3353 * C7125) *
                C31874) *
               C32238) *
              C343) *
         C31911 * C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C13137 * C126 - C13141 * C119 + C13138 * C354 - C13142 * C344 +
            C13139 * C364 - C13143 * C349 + C32254 * C2026 - C13144 * C2020) *
               C30875 +
           (C13137 * C140 - C13141 * C127 + C13138 * C374 - C13142 * C355 +
            C13139 * C379 - C13143 * C365 + C32254 * C2038 - C13144 * C2027) *
               C32188 +
           (C13146 - C13147 + C13148 - C13149 + C13150 - C13151 + C13152 -
            C13153) *
               C30856 +
           (C13154 - C13155 + C13156 - C13157 + C13158 - C13159 + C13160 -
            C13161) *
               C31874) *
              C31955 * C31925 * C31911 * C110 +
          ((C13147 - C13146 + C13149 - C13148 + C13151 - C13150 + C13153 -
            C13152) *
               C30875 +
           (C13155 - C13154 + C13157 - C13156 + C13159 - C13158 + C13161 -
            C13160) *
               C32188 +
           (C13162 - C13163 + C13164 - C13165 + C13166 - C13167 + C13168 -
            C13169) *
               C30856 +
           (C13170 - C13171 + C13172 - C13173 + C13174 - C13175 + C13176 -
            C13177) *
               C31874) *
              C31955 * C31925 * C31911 * C111 +
          ((C13163 - C13162 + C13165 - C13164 + C13167 - C13166 + C13169 -
            C13168) *
               C30875 +
           (C13171 - C13170 + C13173 - C13172 + C13175 - C13174 + C13177 -
            C13176) *
               C32188 +
           (C13137 * C132 - C13141 * C122 + C13138 * C360 - C13142 * C347 +
            C13139 * C370 - C13143 * C352 + C32254 * C2365 - C13144 * C2364) *
               C30856 +
           (C13137 * C143 - C13141 * C133 + C13138 * C377 - C13142 * C361 +
            C13139 * C382 - C13143 * C371 + C32254 * C2367 - C13144 * C2366) *
               C31874) *
              C31955 * C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C13137 * C126 - C13141 * C119 + C13138 * C354 - C13142 * C344 +
            C13139 * C364 - C13143 * C349 + C32254 * C2026 - C13144 * C2020) *
               C30875 +
           (C13137 * C140 - C13141 * C127 + C13138 * C374 - C13142 * C355 +
            C13139 * C379 - C13143 * C365 + C32254 * C2038 - C13144 * C2027) *
               C32188 +
           (C13146 - C13147 + C13148 - C13149 + C13150 - C13151 + C13152 -
            C13153) *
               C30856 +
           (C13154 - C13155 + C13156 - C13157 + C13158 - C13159 + C13160 -
            C13161) *
               C31874) *
              C31955 * C31925 * C235 +
          ((C13141 * C239 - C13137 * C249 + C13142 * C676 - C13138 * C681 +
            C13143 * C1113 - C13139 * C1125 + C13144 * C2538 - C32254 * C2541) *
               C30875 +
           (C13141 * C250 - C13137 * C269 + C13142 * C682 - C13138 * C691 +
            C13143 * C1126 - C13139 * C1140 + C13144 * C2542 - C32254 * C2547) *
               C32188 +
           (C13141 * C240 - C13137 * C251 + C13142 * C677 - C13138 * C683 +
            C13143 * C1114 - C13139 * C1127 + C13144 * C2539 - C32254 * C2543) *
               C30856 +
           (C13141 * C252 - C13137 * C270 + C13142 * C684 - C13138 * C692 +
            C13143 * C1128 - C13139 * C1141 + C13144 * C2544 - C32254 * C2548) *
               C31874) *
              C31955 * C31925 * C236 +
          ((C13137 * C259 - C13141 * C244 + C13138 * C1119 - C13142 * C1110 +
            C13139 * C1131 - C13143 * C1116 + C32254 * C6806 - C13144 * C6803) *
               C30875 +
           (C13137 * C274 - C13141 * C260 + C13138 * C1137 - C13142 * C1120 +
            C13139 * C1143 - C13143 * C1132 + C32254 * C6812 - C13144 * C6807) *
               C32188 +
           (C13137 * C261 - C13141 * C245 + C13138 * C1121 - C13142 * C1111 +
            C13139 * C1133 - C13143 * C1117 + C32254 * C7124 - C13144 * C7123) *
               C30856 +
           (C13137 * C275 - C13141 * C262 + C13138 * C1138 - C13142 * C1122 +
            C13139 * C1144 - C13143 * C1134 + C32254 * C7126 - C13144 * C7125) *
               C31874) *
              C31955 * C31925 * C237) *
         C31899) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C13137 * C126 - C13141 * C119 + C13138 * C354 - C13142 * C344 +
            C13139 * C364 - C13143 * C349 + C32254 * C2026 - C13144 * C2020) *
               C30875 +
           (C13137 * C140 - C13141 * C127 + C13138 * C374 - C13142 * C355 +
            C13139 * C379 - C13143 * C365 + C32254 * C2038 - C13144 * C2027) *
               C32188 +
           (C13146 - C13147 + C13148 - C13149 + C13150 - C13151 + C13152 -
            C13153) *
               C30856 +
           (C13154 - C13155 + C13156 - C13157 + C13158 - C13159 + C13160 -
            C13161) *
               C31874) *
              C31955 * C341 +
          ((C13141 * C344 - C13137 * C354 + C13142 * C349 - C13138 * C364 +
            C13143 * C2020 - C13139 * C2026 + C13144 * C2023 - C32254 * C2032) *
               C30875 +
           (C13141 * C355 - C13137 * C374 + C13142 * C365 - C13138 * C379 +
            C13143 * C2027 - C13139 * C2038 + C13144 * C2033 - C32254 * C2041) *
               C32188 +
           (C13141 * C345 - C13137 * C356 + C13142 * C350 - C13138 * C366 +
            C13143 * C2021 - C13139 * C2028 + C13144 * C2024 - C32254 * C2034) *
               C30856 +
           (C13141 * C357 - C13137 * C375 + C13142 * C367 - C13138 * C380 +
            C13143 * C2029 - C13139 * C2039 + C13144 * C2035 - C32254 * C2042) *
               C31874) *
              C31955 * C342 +
          ((C13137 * C364 - C13141 * C349 + C13138 * C2026 - C13142 * C2020 +
            C13139 * C2032 - C13143 * C2023 + C32254 * C11723 -
            C13144 * C11721) *
               C30875 +
           (C13137 * C379 - C13141 * C365 + C13138 * C2038 - C13142 * C2027 +
            C13139 * C2041 - C13143 * C2033 + C32254 * C11727 -
            C13144 * C11724) *
               C32188 +
           (C13137 * C366 - C13141 * C350 + C13138 * C2028 - C13142 * C2021 +
            C13139 * C2034 - C13143 * C2024 + C32254 * C11898 -
            C13144 * C11897) *
               C30856 +
           (C13137 * C380 - C13141 * C367 + C13138 * C2039 - C13142 * C2029 +
            C13139 * C2042 - C13143 * C2035 + C32254 * C11900 -
            C13144 * C11899) *
               C31874) *
              C31955 * C343) *
         C31911 * C31899) /
            (p * q * std::sqrt(p + q));
    d2ee[68] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C32208 * C126 - C3352 * C119 + C32053 * C354 - C3353 * C344) *
                 C30875 +
             (C32208 * C140 - C3352 * C127 + C32053 * C374 - C3353 * C355) *
                 C32188 +
             (C3355 - C3356 + C3357 - C3358) * C30856 +
             (C3359 - C3360 + C3361 - C3362) * C31874) *
                C5245 +
            ((C4331 - C4332 + C4333 - C4334) * C30875 +
             (C4335 - C4336 + C4337 - C4338) * C32188 + C4715 * C30856 +
             C4716 * C31874) *
                C5246 +
            C8342 * C32238) *
               C572 +
           (((C3352 * C344 - C32208 * C354 + C3353 * C349 - C32053 * C364) *
                 C30875 +
             (C3352 * C355 - C32208 * C374 + C3353 * C365 - C32053 * C379) *
                 C32188 +
             (C3879 - C3880 + C3881 - C3882) * C30856 +
             (C3883 - C3884 + C3885 - C3886) * C31874) *
                C5245 +
            ((C5125 - C5126 + C5127 - C5128) * C30875 +
             (C5129 - C5130 + C5131 - C5132) * C32188 +
             (C4915 - C4916 + C4917 - C4918) * C30856 +
             (C4919 - C4920 + C4921 - C4922) * C31874) *
                C5246 +
            ((C3352 * C1110 - C32208 * C1119 + C3353 * C1116 - C32053 * C1131) *
                 C30875 +
             (C3352 * C1120 - C32208 * C1137 + C3353 * C1132 - C32053 * C1143) *
                 C32188 +
             (C8883 - C8884 + C8885 - C8886) * C30856 +
             (C8887 - C8888 + C8889 - C8890) * C31874) *
                C32238) *
               C573) *
              C31911 * C468 +
          ((((C3356 - C3355 + C3358 - C3357) * C30875 +
             (C3360 - C3359 + C3362 - C3361) * C32188 +
             (C3364 - C3363 + C3366 - C3365) * C30856 +
             (C3368 - C3367 + C3370 - C3369) * C31874) *
                C5245 +
            (C4717 * C30875 + C4718 * C32188 + C4719 * C30856 +
             C4720 * C31874) *
                C5246 +
            (C8687 * C30875 + C8688 * C32188 +
             (C4355 - C4356 + C4357 - C4358) * C30856 +
             (C4359 - C4360 + C4361 - C4362) * C31874) *
                C32238) *
               C572 +
           (((C3880 - C3879 + C3882 - C3881) * C30875 +
             (C3884 - C3883 + C3886 - C3885) * C32188 +
             (C3888 - C3887 + C3890 - C3889) * C30856 +
             (C3892 - C3891 + C3894 - C3893) * C31874) *
                C5245 +
            ((C4916 - C4915 + C4918 - C4917) * C30875 +
             (C4920 - C4919 + C4922 - C4921) * C32188 +
             (C4924 - C4923 + C4926 - C4925) * C30856 +
             (C4928 - C4927 + C4930 - C4929) * C31874) *
                C5246 +
            ((C8884 - C8883 + C8886 - C8885) * C30875 +
             (C8888 - C8887 + C8890 - C8889) * C32188 +
             (C32208 * C1123 - C3352 * C1112 + C32053 * C1135 - C3353 * C1118) *
                 C30856 +
             (C32208 * C1139 - C3352 * C1124 + C32053 * C1145 - C3353 * C1136) *
                 C31874) *
                C32238) *
               C573) *
              C31911 * C469)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C32208 * C126 - C3352 * C119 + C32053 * C354 - C3353 * C344) *
                C2654 +
            (C32208 * C140 - C3352 * C127 + C32053 * C374 - C3353 * C355) *
                C2648 +
            (C3355 - C3356 + C3357 - C3358) * C2655 +
            (C3359 - C3360 + C3361 - C3362) * C2649 + C3395 * C2656 +
            C3396 * C2650 + C3397 * C2657 + C3398 * C32242) *
               C31955 * C572 +
           ((C3352 * C344 - C32208 * C354 + C3353 * C349 - C32053 * C364) *
                C2654 +
            (C3352 * C355 - C32208 * C374 + C3353 * C365 - C32053 * C379) *
                C2648 +
            (C3879 - C3880 + C3881 - C3882) * C2655 +
            (C3883 - C3884 + C3885 - C3886) * C2649 +
            (C3887 - C3888 + C3889 - C3890) * C2656 +
            (C3891 - C3892 + C3893 - C3894) * C2650 +
            (C3895 - C3896 + C3897 - C3898) * C2657 +
            (C3899 - C3900 + C3901 - C3902) * C32242) *
               C31955 * C573) *
              C31911 * C468 +
          (((C3356 - C3355 + C3358 - C3357) * C2654 +
            (C3360 - C3359 + C3362 - C3361) * C2648 +
            (C3364 - C3363 + C3366 - C3365) * C2655 +
            (C3368 - C3367 + C3370 - C3369) * C2649 +
            (C3372 - C3371 + C3374 - C3373) * C2656 +
            (C3376 - C3375 + C3378 - C3377) * C2650 +
            (C3379 - C3380 + C3381 - C3382) * C2657 +
            (C3383 - C3384 + C3385 - C3386) * C32242) *
               C31955 * C572 +
           ((C3880 - C3879 + C3882 - C3881) * C2654 +
            (C3884 - C3883 + C3886 - C3885) * C2648 +
            (C3888 - C3887 + C3890 - C3889) * C2655 +
            (C3892 - C3891 + C3894 - C3893) * C2649 +
            (C3896 - C3895 + C3898 - C3897) * C2656 +
            (C3900 - C3899 + C3902 - C3901) * C2650 +
            (C32208 * C362 - C3352 * C348 + C32053 * C372 - C3353 * C353) *
                C2657 +
            (C32208 * C378 - C3352 * C363 + C32053 * C383 - C3353 * C373) *
                C32242) *
               C31955 * C573) *
              C31911 * C469)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C13137 * C126 - C13141 * C119 + C13138 * C354 - C13142 * C344 +
             C13139 * C364 - C13143 * C349 + C32254 * C2026 - C13144 * C2020) *
                C30875 +
            (C13137 * C140 - C13141 * C127 + C13138 * C374 - C13142 * C355 +
             C13139 * C379 - C13143 * C365 + C32254 * C2038 - C13144 * C2027) *
                C32188 +
            (C13146 - C13147 + C13148 - C13149 + C13150 - C13151 + C13152 -
             C13153) *
                C30856 +
            (C13154 - C13155 + C13156 - C13157 + C13158 - C13159 + C13160 -
             C13161) *
                C31874) *
               C31955 * C572 +
           ((C13141 * C344 - C13137 * C354 + C13142 * C349 - C13138 * C364 +
             C13143 * C2020 - C13139 * C2026 + C13144 * C2023 -
             C32254 * C2032) *
                C30875 +
            (C13141 * C355 - C13137 * C374 + C13142 * C365 - C13138 * C379 +
             C13143 * C2027 - C13139 * C2038 + C13144 * C2033 -
             C32254 * C2041) *
                C32188 +
            (C13650 - C13651 + C13652 - C13653 + C13654 - C13655 + C13656 -
             C13657) *
                C30856 +
            (C13658 - C13659 + C13660 - C13661 + C13662 - C13663 + C13664 -
             C13665) *
                C31874) *
               C31955 * C573) *
              C31911 * C468 +
          (((C13147 - C13146 + C13149 - C13148 + C13151 - C13150 + C13153 -
             C13152) *
                C30875 +
            (C13155 - C13154 + C13157 - C13156 + C13159 - C13158 + C13161 -
             C13160) *
                C32188 +
            (C13162 - C13163 + C13164 - C13165 + C13166 - C13167 + C13168 -
             C13169) *
                C30856 +
            (C13170 - C13171 + C13172 - C13173 + C13174 - C13175 + C13176 -
             C13177) *
                C31874) *
               C31955 * C572 +
           ((C13651 - C13650 + C13653 - C13652 + C13655 - C13654 + C13657 -
             C13656) *
                C30875 +
            (C13659 - C13658 + C13661 - C13660 + C13663 - C13662 + C13665 -
             C13664) *
                C32188 +
            (C13137 * C358 - C13141 * C346 + C13138 * C368 - C13142 * C351 +
             C13139 * C2030 - C13143 * C2022 + C32254 * C2036 -
             C13144 * C2025) *
                C30856 +
            (C13137 * C376 - C13141 * C359 + C13138 * C381 - C13142 * C369 +
             C13139 * C2040 - C13143 * C2031 + C32254 * C2043 -
             C13144 * C2037) *
                C31874) *
               C31955 * C573) *
              C31911 * C469)) /
            (p * q * std::sqrt(p + q));
    d2ee[69] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C32208 * C126 - C3352 * C119 + C32053 * C354 - C3353 * C344) *
               C2654 +
           (C32208 * C140 - C3352 * C127 + C32053 * C374 - C3353 * C355) *
               C2648 +
           (C3355 - C3356 + C3357 - C3358) * C2655 +
           (C3359 - C3360 + C3361 - C3362) * C2649 + C3395 * C2656 +
           C3396 * C2650 + C3397 * C2657 + C3398 * C32242) *
              C31955 * C31925 * C235 +
          ((C3352 * C239 - C32208 * C249 + C3353 * C676 - C32053 * C681) *
               C2654 +
           (C3352 * C250 - C32208 * C269 + C3353 * C682 - C32053 * C691) *
               C2648 +
           (C3352 * C240 - C32208 * C251 + C3353 * C677 - C32053 * C683) *
               C2655 +
           (C3352 * C252 - C32208 * C270 + C3353 * C684 - C32053 * C692) *
               C2649 +
           (C3352 * C241 - C32208 * C253 + C3353 * C678 - C32053 * C685) *
               C2656 +
           (C3352 * C254 - C32208 * C271 + C3353 * C686 - C32053 * C693) *
               C2650 +
           (C3352 * C242 - C32208 * C255 + C3353 * C679 - C32053 * C687) *
               C2657 +
           (C3352 * C256 - C32208 * C272 + C3353 * C688 - C32053 * C694) *
               C32242) *
              C31955 * C31925 * C236 +
          ((C32208 * C259 - C3352 * C244 + C32053 * C1119 - C3353 * C1110) *
               C2654 +
           (C32208 * C274 - C3352 * C260 + C32053 * C1137 - C3353 * C1120) *
               C2648 +
           (C32208 * C261 - C3352 * C245 + C32053 * C1121 - C3353 * C1111) *
               C2655 +
           (C32208 * C275 - C3352 * C262 + C32053 * C1138 - C3353 * C1122) *
               C2649 +
           (C32208 * C263 - C3352 * C246 + C32053 * C1123 - C3353 * C1112) *
               C2656 +
           (C32208 * C276 - C3352 * C264 + C32053 * C1139 - C3353 * C1124) *
               C2650 +
           (C32208 * C265 - C3352 * C247 + C32053 * C1453 - C3353 * C1452) *
               C2657 +
           (C32208 * C277 - C3352 * C266 + C32053 * C1455 - C3353 * C1454) *
               C32242) *
              C31955 * C31925 * C237) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C32208 * C126 - C3352 * C119 + C32053 * C354 - C3353 * C344) *
               C2654 +
           (C32208 * C140 - C3352 * C127 + C32053 * C374 - C3353 * C355) *
               C2648 +
           (C3355 - C3356 + C3357 - C3358) * C2655 +
           (C3359 - C3360 + C3361 - C3362) * C2649 + C3395 * C2656 +
           C3396 * C2650 + C3397 * C2657 + C3398 * C32242) *
              C31955 * C31925 * C31911 * C110 +
          ((C3356 - C3355 + C3358 - C3357) * C2654 +
           (C3360 - C3359 + C3362 - C3361) * C2648 +
           (C3364 - C3363 + C3366 - C3365) * C2655 +
           (C3368 - C3367 + C3370 - C3369) * C2649 +
           (C3372 - C3371 + C3374 - C3373) * C2656 +
           (C3376 - C3375 + C3378 - C3377) * C2650 +
           (C3379 - C3380 + C3381 - C3382) * C2657 +
           (C3383 - C3384 + C3385 - C3386) * C32242) *
              C31955 * C31925 * C31911 * C111 +
          (C3395 * C2654 + C3396 * C2648 + C3397 * C2655 + C3398 * C2649 +
           (C3380 - C3379 + C3382 - C3381) * C2656 +
           (C3384 - C3383 + C3386 - C3385) * C2650 +
           (C32208 * C136 - C3352 * C124 + C32053 * C575 - C3353 * C574) *
               C2657 +
           (C32208 * C145 - C3352 * C137 + C32053 * C577 - C3353 * C576) *
               C32242) *
              C31955 * C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C32208 * C126 - C3352 * C119 + C32053 * C354 - C3353 * C344) *
                C30875 +
            (C32208 * C140 - C3352 * C127 + C32053 * C374 - C3353 * C355) *
                C32188 +
            (C3355 - C3356 + C3357 - C3358) * C30856 +
            (C3359 - C3360 + C3361 - C3362) * C31874) *
               C5245 +
           ((C4331 - C4332 + C4333 - C4334) * C30875 +
            (C4335 - C4336 + C4337 - C4338) * C32188 + C4715 * C30856 +
            C4716 * C31874) *
               C5246 +
           ((C4340 - C4339 + C4342 - C4341) * C30875 +
            (C4344 - C4343 + C4346 - C4345) * C32188 +
            (C4348 - C4347 + C4350 - C4349) * C30856 +
            (C4352 - C4351 + C4354 - C4353) * C31874) *
               C32238) *
              C31925 * C31911 * C110 +
          (((C3356 - C3355 + C3358 - C3357) * C30875 +
            (C3360 - C3359 + C3362 - C3361) * C32188 +
            (C3364 - C3363 + C3366 - C3365) * C30856 +
            (C3368 - C3367 + C3370 - C3369) * C31874) *
               C5245 +
           (C4717 * C30875 + C4718 * C32188 + C4719 * C30856 + C4720 * C31874) *
               C5246 +
           ((C4347 - C4348 + C4349 - C4350) * C30875 +
            (C4351 - C4352 + C4353 - C4354) * C32188 +
            (C4355 - C4356 + C4357 - C4358) * C30856 +
            (C4359 - C4360 + C4361 - C4362) * C31874) *
               C32238) *
              C31925 * C31911 * C111 +
          ((C3395 * C30875 + C3396 * C32188 + C3397 * C30856 + C3398 * C31874) *
               C5245 +
           (C4183 * C30875 + C4184 * C32188 +
            (C3742 - C3741 + C3744 - C3743) * C30856 +
            (C3746 - C3745 + C3748 - C3747) * C31874) *
               C5246 +
           ((C4356 - C4355 + C4358 - C4357) * C30875 +
            (C4360 - C4359 + C4362 - C4361) * C32188 +
            (C32208 * C265 - C3352 * C247 + C32053 * C1453 - C3353 * C1452) *
                C30856 +
            (C32208 * C277 - C3352 * C266 + C32053 * C1455 - C3353 * C1454) *
                C31874) *
               C32238) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C32208 * C126 - C3352 * C119 + C32053 * C354 - C3353 * C344) *
                C30875 +
            (C32208 * C140 - C3352 * C127 + C32053 * C374 - C3353 * C355) *
                C32188 +
            (C3355 - C3356 + C3357 - C3358) * C30856 +
            (C3359 - C3360 + C3361 - C3362) * C31874) *
               C5245 +
           ((C4331 - C4332 + C4333 - C4334) * C30875 +
            (C4335 - C4336 + C4337 - C4338) * C32188 + C4715 * C30856 +
            C4716 * C31874) *
               C5246 +
           C8342 * C32238) *
              C31925 * C235 +
          (((C4332 - C4331 + C4334 - C4333) * C30875 +
            (C4336 - C4335 + C4338 - C4337) * C32188 + C4717 * C30856 +
            C4718 * C31874) *
               C5245 +
           ((C4339 - C4340 + C4341 - C4342) * C30875 +
            (C4343 - C4344 + C4345 - C4346) * C32188 +
            (C4347 - C4348 + C4349 - C4350) * C30856 +
            (C4351 - C4352 + C4353 - C4354) * C31874) *
               C5246 +
           ((C8316 - C8317 + C8318 - C8319) * C30875 +
            (C8320 - C8321 + C8322 - C8323) * C32188 +
            (C8324 - C8325 + C8326 - C8327) * C30856 +
            (C8328 - C8329 + C8330 - C8331) * C31874) *
               C32238) *
              C31925 * C236 +
          (C8342 * C5245 +
           ((C8317 - C8316 + C8319 - C8318) * C30875 +
            (C8321 - C8320 + C8323 - C8322) * C32188 +
            (C8325 - C8324 + C8327 - C8326) * C30856 +
            (C8329 - C8328 + C8331 - C8330) * C31874) *
               C5246 +
           ((C32208 * C953 - C3352 * C944 + C32053 * C6145 - C3353 * C6142) *
                C30875 +
            (C32208 * C962 - C3352 * C954 + C32053 * C6151 - C3353 * C6146) *
                C32188 +
            (C32208 * C955 - C3352 * C945 + C32053 * C6327 - C3353 * C6326) *
                C30856 +
            (C32208 * C963 - C3352 * C956 + C32053 * C6329 - C3353 * C6328) *
                C31874) *
               C32238) *
              C31925 * C237) *
         C31899) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C13137 * C126 - C13141 * C119 + C13138 * C354 - C13142 * C344 +
            C13139 * C364 - C13143 * C349 + C32254 * C2026 - C13144 * C2020) *
               C30875 +
           (C13137 * C140 - C13141 * C127 + C13138 * C374 - C13142 * C355 +
            C13139 * C379 - C13143 * C365 + C32254 * C2038 - C13144 * C2027) *
               C32188 +
           (C13146 - C13147 + C13148 - C13149 + C13150 - C13151 + C13152 -
            C13153) *
               C30856 +
           (C13154 - C13155 + C13156 - C13157 + C13158 - C13159 + C13160 -
            C13161) *
               C31874) *
              C31955 * C31925 * C31911 * C110 +
          ((C13147 - C13146 + C13149 - C13148 + C13151 - C13150 + C13153 -
            C13152) *
               C30875 +
           (C13155 - C13154 + C13157 - C13156 + C13159 - C13158 + C13161 -
            C13160) *
               C32188 +
           (C13162 - C13163 + C13164 - C13165 + C13166 - C13167 + C13168 -
            C13169) *
               C30856 +
           (C13170 - C13171 + C13172 - C13173 + C13174 - C13175 + C13176 -
            C13177) *
               C31874) *
              C31955 * C31925 * C31911 * C111 +
          ((C13163 - C13162 + C13165 - C13164 + C13167 - C13166 + C13169 -
            C13168) *
               C30875 +
           (C13171 - C13170 + C13173 - C13172 + C13175 - C13174 + C13177 -
            C13176) *
               C32188 +
           (C13137 * C132 - C13141 * C122 + C13138 * C360 - C13142 * C347 +
            C13139 * C370 - C13143 * C352 + C32254 * C2365 - C13144 * C2364) *
               C30856 +
           (C13137 * C143 - C13141 * C133 + C13138 * C377 - C13142 * C361 +
            C13139 * C382 - C13143 * C371 + C32254 * C2367 - C13144 * C2366) *
               C31874) *
              C31955 * C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C13137 * C126 - C13141 * C119 + C13138 * C354 - C13142 * C344 +
            C13139 * C364 - C13143 * C349 + C32254 * C2026 - C13144 * C2020) *
               C30875 +
           (C13137 * C140 - C13141 * C127 + C13138 * C374 - C13142 * C355 +
            C13139 * C379 - C13143 * C365 + C32254 * C2038 - C13144 * C2027) *
               C32188 +
           (C13146 - C13147 + C13148 - C13149 + C13150 - C13151 + C13152 -
            C13153) *
               C30856 +
           (C13154 - C13155 + C13156 - C13157 + C13158 - C13159 + C13160 -
            C13161) *
               C31874) *
              C31955 * C31925 * C235 +
          ((C13141 * C239 - C13137 * C249 + C13142 * C676 - C13138 * C681 +
            C13143 * C1113 - C13139 * C1125 + C13144 * C2538 - C32254 * C2541) *
               C30875 +
           (C13141 * C250 - C13137 * C269 + C13142 * C682 - C13138 * C691 +
            C13143 * C1126 - C13139 * C1140 + C13144 * C2542 - C32254 * C2547) *
               C32188 +
           (C13141 * C240 - C13137 * C251 + C13142 * C677 - C13138 * C683 +
            C13143 * C1114 - C13139 * C1127 + C13144 * C2539 - C32254 * C2543) *
               C30856 +
           (C13141 * C252 - C13137 * C270 + C13142 * C684 - C13138 * C692 +
            C13143 * C1128 - C13139 * C1141 + C13144 * C2544 - C32254 * C2548) *
               C31874) *
              C31955 * C31925 * C236 +
          ((C13137 * C259 - C13141 * C244 + C13138 * C1119 - C13142 * C1110 +
            C13139 * C1131 - C13143 * C1116 + C32254 * C6806 - C13144 * C6803) *
               C30875 +
           (C13137 * C274 - C13141 * C260 + C13138 * C1137 - C13142 * C1120 +
            C13139 * C1143 - C13143 * C1132 + C32254 * C6812 - C13144 * C6807) *
               C32188 +
           (C13137 * C261 - C13141 * C245 + C13138 * C1121 - C13142 * C1111 +
            C13139 * C1133 - C13143 * C1117 + C32254 * C7124 - C13144 * C7123) *
               C30856 +
           (C13137 * C275 - C13141 * C262 + C13138 * C1138 - C13142 * C1122 +
            C13139 * C1144 - C13143 * C1134 + C32254 * C7126 - C13144 * C7125) *
               C31874) *
              C31955 * C31925 * C237) *
         C31899) /
            (p * q * std::sqrt(p + q));
    d2ee[70] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C31966 * C126 - C113 * C119) * C812 +
             (C31966 * C140 - C113 * C127) * C806 + (C148 - C149) * C813 +
             (C150 - C151) * C807 + C168 * C814 + C169 * C32227) *
                C32273 +
            ((C966 - C967) * C812 + (C968 - C969) * C806 + C1297 * C813 +
             C1298 * C807 + C816 * C814 + C817 * C32227) *
                C32261 +
            C1000 * C32238) *
               C31925 * C466 +
           (((C967 - C966) * C812 + (C969 - C968) * C806 + C1299 * C813 +
             C1300 * C807 + C1301 * C814 + C1302 * C32227) *
                C32273 +
            ((C971 - C970) * C812 + (C973 - C972) * C806 + C1303 * C813 +
             C1304 * C807 + C1305 * C814 + C1306 * C32227) *
                C32261 +
            ((C978 - C979) * C812 + (C980 - C981) * C806 +
             (C982 - C983) * C813 + (C984 - C985) * C807 +
             (C986 - C987) * C814 + (C988 - C989) * C32227) *
                C32238) *
               C31925 * C467) *
              C468 +
          ((((C149 - C148) * C812 + (C151 - C150) * C806 +
             (C153 - C152) * C813 + (C155 - C154) * C807 +
             (C157 - C156) * C814 + (C159 - C158) * C32227) *
                C32273 +
            (C1299 * C812 + C1300 * C806 + C1301 * C813 + C1302 * C807 +
             (C483 - C484) * C814 + (C485 - C486) * C32227) *
                C32261 +
            (C1303 * C812 + C1304 * C806 + C1305 * C813 + C1306 * C807 +
             (C826 - C827) * C814 + (C828 - C829) * C32227) *
                C32238) *
               C31925 * C466 +
           ((C1297 * C812 + C1298 * C806 + C816 * C813 + C817 * C807 +
             (C484 - C483) * C814 + (C486 - C485) * C32227) *
                C32273 +
            (C974 * C812 + C975 * C806 + C830 * C813 + C831 * C807 +
             (C827 - C826) * C814 + (C829 - C828) * C32227) *
                C32261 +
            ((C983 - C982) * C812 + (C985 - C984) * C806 +
             (C987 - C986) * C813 + (C989 - C988) * C807 +
             (C31966 * C1293 - C113 * C1292) * C814 +
             (C31966 * C1295 - C113 * C1294) * C32227) *
                C32238) *
               C31925 * C467) *
              C469)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31966 * C126 - C113 * C119) * C114 +
            (C31966 * C140 - C113 * C127) * C102 + (C148 - C149) * C115 +
            (C150 - C151) * C103 + C168 * C116 + C169 * C104 + C170 * C117 +
            C171 * C105 + C172 * C118 + C173 * C106) *
               C31955 * C31925 * C466 +
           ((C113 * C239 - C31966 * C249) * C114 +
            (C113 * C250 - C31966 * C269) * C102 + (C475 - C476) * C115 +
            (C477 - C478) * C103 + (C479 - C480) * C116 + (C481 - C482) * C104 +
            (C483 - C484) * C117 + (C485 - C486) * C105 + (C487 - C488) * C118 +
            (C489 - C490) * C106) *
               C31955 * C31925 * C467) *
              C468 +
          (((C149 - C148) * C114 + (C151 - C150) * C102 + (C153 - C152) * C115 +
            (C155 - C154) * C103 + (C157 - C156) * C116 + (C159 - C158) * C104 +
            (C161 - C160) * C117 + (C163 - C162) * C105 + (C164 - C165) * C118 +
            (C166 - C167) * C106) *
               C31955 * C31925 * C466 +
           ((C476 - C475) * C114 + (C478 - C477) * C102 + (C480 - C479) * C115 +
            (C482 - C481) * C103 + (C484 - C483) * C116 + (C486 - C485) * C104 +
            (C488 - C487) * C117 + (C490 - C489) * C105 +
            (C31966 * C471 - C113 * C470) * C118 +
            (C31966 * C473 - C113 * C472) * C106) *
               C31955 * C31925 * C467) *
              C469)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C31966 * C126 - C113 * C119) * C5248 +
             (C31966 * C140 - C113 * C127) * C32270 + (C148 - C149) * C5249 +
             (C150 - C151) * C32257 + C168 * C5250 + C169 * C32227) *
                C5245 +
            ((C966 - C967) * C5248 + (C968 - C969) * C32270 + C1297 * C5249 +
             C1298 * C32257 + C816 * C5250 + C817 * C32227) *
                C5246 +
            C5372 * C32238) *
               C31925 * C466 +
           (((C967 - C966) * C5248 + (C969 - C968) * C32270 + C1299 * C5249 +
             C1300 * C32257 + C1301 * C5250 + C1302 * C32227) *
                C5245 +
            ((C971 - C970) * C5248 + (C973 - C972) * C32270 + C1303 * C5249 +
             C1304 * C32257 + C1305 * C5250 + C1306 * C32227) *
                C5246 +
            ((C978 - C979) * C5248 + (C980 - C981) * C32270 +
             (C982 - C983) * C5249 + (C984 - C985) * C32257 +
             (C986 - C987) * C5250 + (C988 - C989) * C32227) *
                C32238) *
               C31925 * C467) *
              C468 +
          ((((C149 - C148) * C5248 + (C151 - C150) * C32270 +
             (C153 - C152) * C5249 + (C155 - C154) * C32257 +
             (C157 - C156) * C5250 + (C159 - C158) * C32227) *
                C5245 +
            (C1299 * C5248 + C1300 * C32270 + C1301 * C5249 + C1302 * C32257 +
             C2987 * C5250 + C2988 * C32227) *
                C5246 +
            (C1303 * C5248 + C1304 * C32270 + C1305 * C5249 + C1306 * C32257 +
             (C826 - C827) * C5250 + (C828 - C829) * C32227) *
                C32238) *
               C31925 * C466 +
           ((C1297 * C5248 + C1298 * C32270 + C816 * C5249 + C817 * C32257 +
             C2659 * C5250 + C2660 * C32227) *
                C5245 +
            (C974 * C5248 + C975 * C32270 + C830 * C5249 + C831 * C32257 +
             (C827 - C826) * C5250 + (C829 - C828) * C32227) *
                C5246 +
            ((C983 - C982) * C5248 + (C985 - C984) * C32270 +
             (C987 - C986) * C5249 + (C989 - C988) * C32257 +
             (C31966 * C1293 - C113 * C1292) * C5250 +
             (C31966 * C1295 - C113 * C1294) * C32227) *
                C32238) *
               C31925 * C467) *
              C469)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C31966 * C126 - C113 * C119) * C5988 +
             (C31966 * C140 - C113 * C127) * C31864) *
                C5983 +
            ((C966 - C967) * C5988 + (C968 - C969) * C31864) * C5984 +
            C6072 * C5985 + C6077 * C5986 + C6080 * C5987) *
               C31925 * C466 +
           (((C967 - C966) * C5988 + (C969 - C968) * C31864) * C5983 +
            ((C971 - C970) * C5988 + (C973 - C972) * C31864) * C5984 +
            ((C978 - C979) * C5988 + (C980 - C981) * C31864) * C5985 +
            ((C6065 - C6064) * C5988 + (C6067 - C6066) * C31864) * C5986 +
            ((C6068 - C6069) * C5988 + (C6070 - C6071) * C31864) * C5987) *
               C31925 * C467) *
              C468 +
          ((((C149 - C148) * C5988 + (C151 - C150) * C31864) * C5983 +
            (C1299 * C5988 + C1300 * C31864) * C5984 +
            (C1303 * C5988 + C1304 * C31864) * C5985 +
            ((C982 - C983) * C5988 + (C984 - C985) * C31864) * C5986 +
            ((C6241 - C6242) * C5988 + (C6243 - C6244) * C31864) * C5987) *
               C31925 * C466 +
           ((C1297 * C5988 + C1298 * C31864) * C5983 +
            (C974 * C5988 + C975 * C31864) * C5984 +
            ((C983 - C982) * C5988 + (C985 - C984) * C31864) * C5985 +
            ((C6242 - C6241) * C5988 + (C6244 - C6243) * C31864) * C5986 +
            ((C31966 * C6237 - C113 * C6236) * C5988 +
             (C31966 * C6239 - C113 * C6238) * C31864) *
                C5987) *
               C31925 * C467) *
              C469)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C9914 * C126 - C9917 * C119 + C9915 * C354 - C9918 * C344 +
             C32241 * C364 - C9919 * C349) *
                C5248 +
            (C9914 * C140 - C9917 * C127 + C9915 * C374 - C9918 * C355 +
             C32241 * C379 - C9919 * C365) *
                C32270 +
            (C9921 - C9922 + C9923 - C9924 + C9925 - C9926) * C5249 +
            (C9927 - C9928 + C9929 - C9930 + C9931 - C9932) * C32257 +
            C9965 * C5250 + C9966 * C32227) *
               C31955 * C31925 * C466 +
           ((C9917 * C239 - C9914 * C249 + C9918 * C676 - C9915 * C681 +
             C9919 * C1113 - C32241 * C1125) *
                C5248 +
            (C9917 * C250 - C9914 * C269 + C9918 * C682 - C9915 * C691 +
             C9919 * C1126 - C32241 * C1140) *
                C32270 +
            (C10333 - C10334 + C10335 - C10336 + C10337 - C10338) * C5249 +
            (C10339 - C10340 + C10341 - C10342 + C10343 - C10344) * C32257 +
            (C10345 - C10346 + C10347 - C10348 + C10349 - C10350) * C5250 +
            (C10351 - C10352 + C10353 - C10354 + C10355 - C10356) * C32227) *
               C31955 * C31925 * C467) *
              C468 +
          (((C9922 - C9921 + C9924 - C9923 + C9926 - C9925) * C5248 +
            (C9928 - C9927 + C9930 - C9929 + C9932 - C9931) * C32270 +
            (C9934 - C9933 + C9936 - C9935 + C9938 - C9937) * C5249 +
            (C9940 - C9939 + C9942 - C9941 + C9944 - C9943) * C32257 +
            (C9945 - C9946 + C9947 - C9948 + C9949 - C9950) * C5250 +
            (C9951 - C9952 + C9953 - C9954 + C9955 - C9956) * C32227) *
               C31955 * C31925 * C466 +
           ((C10334 - C10333 + C10336 - C10335 + C10338 - C10337) * C5248 +
            (C10340 - C10339 + C10342 - C10341 + C10344 - C10343) * C32270 +
            (C10346 - C10345 + C10348 - C10347 + C10350 - C10349) * C5249 +
            (C10352 - C10351 + C10354 - C10353 + C10356 - C10355) * C32257 +
            (C9914 * C255 - C9917 * C242 + C9915 * C687 - C9918 * C679 +
             C32241 * C2191 - C9919 * C2190) *
                C5250 +
            (C9914 * C272 - C9917 * C256 + C9915 * C694 - C9918 * C688 +
             C32241 * C2193 - C9919 * C2192) *
                C32227) *
               C31955 * C31925 * C467) *
              C469)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C9914 * C126 - C9917 * C119 + C9915 * C354 - C9918 * C344 +
              C32241 * C364 - C9919 * C349) *
                 C5988 +
             (C9914 * C140 - C9917 * C127 + C9915 * C374 - C9918 * C355 +
              C32241 * C379 - C9919 * C365) *
                 C31864) *
                C32273 +
            ((C10893 - C10894 + C10895 - C10896 + C10897 - C10898) * C5988 +
             (C10899 - C10900 + C10901 - C10902 + C10903 - C10904) * C31864) *
                C32261 +
            C10941 * C32238) *
               C31925 * C466 +
           (((C10894 - C10893 + C10896 - C10895 + C10898 - C10897) * C5988 +
             (C10900 - C10899 + C10902 - C10901 + C10904 - C10903) * C31864) *
                C32273 +
            ((C10906 - C10905 + C10908 - C10907 + C10910 - C10909) * C5988 +
             (C10912 - C10911 + C10914 - C10913 + C10916 - C10915) * C31864) *
                C32261 +
            ((C10917 - C10918 + C10919 - C10920 + C10921 - C10922) * C5988 +
             (C10923 - C10924 + C10925 - C10926 + C10927 - C10928) * C31864) *
                C32238) *
               C31925 * C467) *
              C468 +
          ((((C9922 - C9921 + C9924 - C9923 + C9926 - C9925) * C5988 +
             (C9928 - C9927 + C9930 - C9929 + C9932 - C9931) * C31864) *
                C32273 +
            ((C10333 - C10334 + C10335 - C10336 + C10337 - C10338) * C5988 +
             (C10339 - C10340 + C10341 - C10342 + C10343 - C10344) * C31864) *
                C32261 +
            ((C11198 - C11199 + C11200 - C11201 + C11202 - C11203) * C5988 +
             (C11204 - C11205 + C11206 - C11207 + C11208 - C11209) * C31864) *
                C32238) *
               C31925 * C466 +
           (((C10334 - C10333 + C10336 - C10335 + C10338 - C10337) * C5988 +
             (C10340 - C10339 + C10342 - C10341 + C10344 - C10343) * C31864) *
                C32273 +
            ((C11199 - C11198 + C11201 - C11200 + C11203 - C11202) * C5988 +
             (C11205 - C11204 + C11207 - C11206 + C11209 - C11208) * C31864) *
                C32261 +
            ((C9914 * C949 - C9917 * C942 + C9915 * C1623 - C9918 * C1619 +
              C32241 * C6962 - C9919 * C6961) *
                 C5988 +
             (C9914 * C960 - C9917 * C950 + C9915 * C1628 - C9918 * C1624 +
              C32241 * C6964 - C9919 * C6963) *
                 C31864) *
                C32238) *
               C31925 * C467) *
              C469)) /
            (p * q * std::sqrt(p + q));
    d2ee[71] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C31966 * C126 - C113 * C119) * C812 +
             (C31966 * C140 - C113 * C127) * C806 + (C148 - C149) * C813 +
             (C150 - C151) * C807 + C168 * C814 + C169 * C32227) *
                C32273 +
            ((C966 - C967) * C812 + (C968 - C969) * C806 + C1297 * C813 +
             C1298 * C807 + C816 * C814 + C817 * C32227) *
                C32261 +
            C1000 * C32238) *
               C572 +
           (((C113 * C344 - C31966 * C354) * C812 +
             (C113 * C355 - C31966 * C374) * C806 + (C579 - C580) * C813 +
             (C581 - C582) * C807 + (C583 - C584) * C814 +
             (C585 - C586) * C32227) *
                C32273 +
            ((C1631 - C1632) * C812 + (C1633 - C1634) * C806 +
             (C1457 - C1458) * C813 + (C1459 - C1460) * C807 +
             (C1461 - C1462) * C814 + (C1463 - C1464) * C32227) *
                C32261 +
            ((C1635 - C1636) * C812 + (C1637 - C1638) * C806 +
             (C1465 - C1466) * C813 + (C1467 - C1468) * C807 +
             (C1469 - C1470) * C814 + (C1471 - C1472) * C32227) *
                C32238) *
               C573) *
              C466 +
          ((((C967 - C966) * C812 + (C969 - C968) * C806 + C1299 * C813 +
             C1300 * C807 + C1301 * C814 + C1302 * C32227) *
                C32273 +
            ((C971 - C970) * C812 + (C973 - C972) * C806 + C1303 * C813 +
             C1304 * C807 + C1305 * C814 + C1306 * C32227) *
                C32261 +
            ((C978 - C979) * C812 + (C980 - C981) * C806 +
             (C982 - C983) * C813 + (C984 - C985) * C807 +
             (C986 - C987) * C814 + (C988 - C989) * C32227) *
                C32238) *
               C572 +
           (((C1632 - C1631) * C812 + (C1634 - C1633) * C806 +
             (C1458 - C1457) * C813 + (C1460 - C1459) * C807 +
             (C1462 - C1461) * C814 + (C1464 - C1463) * C32227) *
                C32273 +
            ((C1636 - C1635) * C812 + (C1638 - C1637) * C806 +
             (C1466 - C1465) * C813 + (C1468 - C1467) * C807 +
             (C1470 - C1469) * C814 + (C1472 - C1471) * C32227) *
                C32261 +
            ((C31966 * C1621 - C113 * C1618) * C812 +
             (C31966 * C1627 - C113 * C1622) * C806 +
             (C31966 * C1623 - C113 * C1619) * C813 +
             (C31966 * C1628 - C113 * C1624) * C807 +
             (C31966 * C1625 - C113 * C1620) * C814 +
             (C31966 * C1629 - C113 * C1626) * C32227) *
                C32238) *
               C573) *
              C467) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31966 * C126 - C113 * C119) * C114 +
            (C31966 * C140 - C113 * C127) * C102 + (C148 - C149) * C115 +
            (C150 - C151) * C103 + C168 * C116 + C169 * C104 + C170 * C117 +
            C171 * C105 + C172 * C118 + C173 * C106) *
               C31955 * C572 +
           ((C113 * C344 - C31966 * C354) * C114 +
            (C113 * C355 - C31966 * C374) * C102 + (C579 - C580) * C115 +
            (C581 - C582) * C103 + (C583 - C584) * C116 + (C585 - C586) * C104 +
            (C587 - C588) * C117 + (C589 - C590) * C105 + (C591 - C592) * C118 +
            (C593 - C594) * C106) *
               C31955 * C573) *
              C466 +
          (((C113 * C239 - C31966 * C249) * C114 +
            (C113 * C250 - C31966 * C269) * C102 + (C475 - C476) * C115 +
            (C477 - C478) * C103 + (C479 - C480) * C116 + (C481 - C482) * C104 +
            (C483 - C484) * C117 + (C485 - C486) * C105 + (C487 - C488) * C118 +
            (C489 - C490) * C106) *
               C31955 * C572 +
           ((C31966 * C681 - C113 * C676) * C114 +
            (C31966 * C691 - C113 * C682) * C102 +
            (C31966 * C683 - C113 * C677) * C115 +
            (C31966 * C692 - C113 * C684) * C103 +
            (C31966 * C685 - C113 * C678) * C116 +
            (C31966 * C693 - C113 * C686) * C104 +
            (C31966 * C687 - C113 * C679) * C117 +
            (C31966 * C694 - C113 * C688) * C105 +
            (C31966 * C689 - C113 * C680) * C118 +
            (C31966 * C695 - C113 * C690) * C106) *
               C31955 * C573) *
              C467) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C31966 * C126 - C113 * C119) * C5248 +
             (C31966 * C140 - C113 * C127) * C32270 + (C148 - C149) * C5249 +
             (C150 - C151) * C32257 + C168 * C5250 + C169 * C32227) *
                C5245 +
            ((C966 - C967) * C5248 + (C968 - C969) * C32270 + C1297 * C5249 +
             C1298 * C32257 + C816 * C5250 + C817 * C32227) *
                C5246 +
            C5372 * C32238) *
               C572 +
           (((C113 * C344 - C31966 * C354) * C5248 +
             (C113 * C355 - C31966 * C374) * C32270 + (C579 - C580) * C5249 +
             (C581 - C582) * C32257 + (C583 - C584) * C5250 +
             (C585 - C586) * C32227) *
                C5245 +
            ((C1631 - C1632) * C5248 + (C1633 - C1634) * C32270 +
             (C1457 - C1458) * C5249 + (C1459 - C1460) * C32257 +
             (C1461 - C1462) * C5250 + (C1463 - C1464) * C32227) *
                C5246 +
            ((C1635 - C1636) * C5248 + (C1637 - C1638) * C32270 +
             (C1465 - C1466) * C5249 + (C1467 - C1468) * C32257 +
             (C1469 - C1470) * C5250 + (C1471 - C1472) * C32227) *
                C32238) *
               C573) *
              C466 +
          ((((C967 - C966) * C5248 + (C969 - C968) * C32270 + C1299 * C5249 +
             C1300 * C32257 + C1301 * C5250 + C1302 * C32227) *
                C5245 +
            ((C971 - C970) * C5248 + (C973 - C972) * C32270 + C1303 * C5249 +
             C1304 * C32257 + C1305 * C5250 + C1306 * C32227) *
                C5246 +
            ((C978 - C979) * C5248 + (C980 - C981) * C32270 +
             (C982 - C983) * C5249 + (C984 - C985) * C32257 +
             (C986 - C987) * C5250 + (C988 - C989) * C32227) *
                C32238) *
               C572 +
           (((C1632 - C1631) * C5248 + (C1634 - C1633) * C32270 +
             (C1458 - C1457) * C5249 + (C1460 - C1459) * C32257 +
             (C1462 - C1461) * C5250 + (C1464 - C1463) * C32227) *
                C5245 +
            ((C1636 - C1635) * C5248 + (C1638 - C1637) * C32270 +
             (C1466 - C1465) * C5249 + (C1468 - C1467) * C32257 +
             (C1470 - C1469) * C5250 + (C1472 - C1471) * C32227) *
                C5246 +
            ((C31966 * C1621 - C113 * C1618) * C5248 +
             (C31966 * C1627 - C113 * C1622) * C32270 +
             (C31966 * C1623 - C113 * C1619) * C5249 +
             (C31966 * C1628 - C113 * C1624) * C32257 +
             (C31966 * C1625 - C113 * C1620) * C5250 +
             (C31966 * C1629 - C113 * C1626) * C32227) *
                C32238) *
               C573) *
              C467) *
         C31899) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C31966 * C126 - C113 * C119) * C5988 +
             (C31966 * C140 - C113 * C127) * C31864) *
                C5983 +
            ((C966 - C967) * C5988 + (C968 - C969) * C31864) * C5984 +
            C6072 * C5985 + C6077 * C5986 + C6080 * C5987) *
               C572 +
           (((C113 * C344 - C31966 * C354) * C5988 +
             (C113 * C355 - C31966 * C374) * C31864) *
                C5983 +
            ((C1631 - C1632) * C5988 + (C1633 - C1634) * C31864) * C5984 +
            ((C1635 - C1636) * C5988 + (C1637 - C1638) * C31864) * C5985 +
            ((C6417 - C6418) * C5988 + (C6419 - C6420) * C31864) * C5986 +
            ((C6421 - C6422) * C5988 + (C6423 - C6424) * C31864) * C5987) *
               C573) *
              C466 +
          ((((C967 - C966) * C5988 + (C969 - C968) * C31864) * C5983 +
            ((C971 - C970) * C5988 + (C973 - C972) * C31864) * C5984 +
            ((C978 - C979) * C5988 + (C980 - C981) * C31864) * C5985 +
            ((C6065 - C6064) * C5988 + (C6067 - C6066) * C31864) * C5986 +
            ((C6068 - C6069) * C5988 + (C6070 - C6071) * C31864) * C5987) *
               C572 +
           (((C1632 - C1631) * C5988 + (C1634 - C1633) * C31864) * C5983 +
            ((C1636 - C1635) * C5988 + (C1638 - C1637) * C31864) * C5984 +
            ((C6418 - C6417) * C5988 + (C6420 - C6419) * C31864) * C5985 +
            ((C6422 - C6421) * C5988 + (C6424 - C6423) * C31864) * C5986 +
            ((C31966 * C6413 - C113 * C6412) * C5988 +
             (C31966 * C6415 - C113 * C6414) * C31864) *
                C5987) *
               C573) *
              C467) *
         C31899) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C9914 * C126 - C9917 * C119 + C9915 * C354 - C9918 * C344 +
             C32241 * C364 - C9919 * C349) *
                C5248 +
            (C9914 * C140 - C9917 * C127 + C9915 * C374 - C9918 * C355 +
             C32241 * C379 - C9919 * C365) *
                C32270 +
            (C9921 - C9922 + C9923 - C9924 + C9925 - C9926) * C5249 +
            (C9927 - C9928 + C9929 - C9930 + C9931 - C9932) * C32257 +
            C9965 * C5250 + C9966 * C32227) *
               C31955 * C572 +
           ((C9917 * C344 - C9914 * C354 + C9918 * C349 - C9915 * C364 +
             C9919 * C2020 - C32241 * C2026) *
                C5248 +
            (C9917 * C355 - C9914 * C374 + C9918 * C365 - C9915 * C379 +
             C9919 * C2027 - C32241 * C2038) *
                C32270 +
            (C10503 - C10504 + C10505 - C10506 + C10507 - C10508) * C5249 +
            (C10509 - C10510 + C10511 - C10512 + C10513 - C10514) * C32257 +
            (C10515 - C10516 + C10517 - C10518 + C10519 - C10520) * C5250 +
            (C10521 - C10522 + C10523 - C10524 + C10525 - C10526) * C32227) *
               C31955 * C573) *
              C466 +
          (((C9917 * C239 - C9914 * C249 + C9918 * C676 - C9915 * C681 +
             C9919 * C1113 - C32241 * C1125) *
                C5248 +
            (C9917 * C250 - C9914 * C269 + C9918 * C682 - C9915 * C691 +
             C9919 * C1126 - C32241 * C1140) *
                C32270 +
            (C10333 - C10334 + C10335 - C10336 + C10337 - C10338) * C5249 +
            (C10339 - C10340 + C10341 - C10342 + C10343 - C10344) * C32257 +
            (C10345 - C10346 + C10347 - C10348 + C10349 - C10350) * C5250 +
            (C10351 - C10352 + C10353 - C10354 + C10355 - C10356) * C32227) *
               C31955 * C572 +
           ((C9914 * C681 - C9917 * C676 + C9915 * C1125 - C9918 * C1113 +
             C32241 * C2541 - C9919 * C2538) *
                C5248 +
            (C9914 * C691 - C9917 * C682 + C9915 * C1140 - C9918 * C1126 +
             C32241 * C2547 - C9919 * C2542) *
                C32270 +
            (C9914 * C683 - C9917 * C677 + C9915 * C1127 - C9918 * C1114 +
             C32241 * C2543 - C9919 * C2539) *
                C5249 +
            (C9914 * C692 - C9917 * C684 + C9915 * C1141 - C9918 * C1128 +
             C32241 * C2548 - C9919 * C2544) *
                C32257 +
            (C9914 * C685 - C9917 * C678 + C9915 * C1129 - C9918 * C1115 +
             C32241 * C2545 - C9919 * C2540) *
                C5250 +
            (C9914 * C693 - C9917 * C686 + C9915 * C1142 - C9918 * C1130 +
             C32241 * C2549 - C9919 * C2546) *
                C32227) *
               C31955 * C573) *
              C467) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C9914 * C126 - C9917 * C119 + C9915 * C354 - C9918 * C344 +
              C32241 * C364 - C9919 * C349) *
                 C5988 +
             (C9914 * C140 - C9917 * C127 + C9915 * C374 - C9918 * C355 +
              C32241 * C379 - C9919 * C365) *
                 C31864) *
                C32273 +
            ((C10893 - C10894 + C10895 - C10896 + C10897 - C10898) * C5988 +
             (C10899 - C10900 + C10901 - C10902 + C10903 - C10904) * C31864) *
                C32261 +
            C10941 * C32238) *
               C572 +
           (((C9917 * C344 - C9914 * C354 + C9918 * C349 - C9915 * C364 +
              C9919 * C2020 - C32241 * C2026) *
                 C5988 +
             (C9917 * C355 - C9914 * C374 + C9918 * C365 - C9915 * C379 +
              C9919 * C2027 - C32241 * C2038) *
                 C31864) *
                C32273 +
            ((C11502 - C11503 + C11504 - C11505 + C11506 - C11507) * C5988 +
             (C11508 - C11509 + C11510 - C11511 + C11512 - C11513) * C31864) *
                C32261 +
            ((C11514 - C11515 + C11516 - C11517 + C11518 - C11519) * C5988 +
             (C11520 - C11521 + C11522 - C11523 + C11524 - C11525) * C31864) *
                C32238) *
               C573) *
              C466 +
          ((((C10894 - C10893 + C10896 - C10895 + C10898 - C10897) * C5988 +
             (C10900 - C10899 + C10902 - C10901 + C10904 - C10903) * C31864) *
                C32273 +
            ((C10906 - C10905 + C10908 - C10907 + C10910 - C10909) * C5988 +
             (C10912 - C10911 + C10914 - C10913 + C10916 - C10915) * C31864) *
                C32261 +
            ((C10917 - C10918 + C10919 - C10920 + C10921 - C10922) * C5988 +
             (C10923 - C10924 + C10925 - C10926 + C10927 - C10928) * C31864) *
                C32238) *
               C572 +
           (((C11503 - C11502 + C11505 - C11504 + C11507 - C11506) * C5988 +
             (C11509 - C11508 + C11511 - C11510 + C11513 - C11512) * C31864) *
                C32273 +
            ((C11515 - C11514 + C11517 - C11516 + C11519 - C11518) * C5988 +
             (C11521 - C11520 + C11523 - C11522 + C11525 - C11524) * C31864) *
                C32261 +
            ((C9914 * C1621 - C9917 * C1618 + C9915 * C6147 - C9918 * C6143 +
              C32241 * C7274 - C9919 * C7273) *
                 C5988 +
             (C9914 * C1627 - C9917 * C1622 + C9915 * C6152 - C9918 * C6148 +
              C32241 * C7276 - C9919 * C7275) *
                 C31864) *
                C32238) *
               C573) *
              C467) *
         C31899) /
            (p * q * std::sqrt(p + q));
    d2ee[72] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             (((C31966 * C126 - C113 * C119) * C114 +
               (C31966 * C140 - C113 * C127) * C102 + (C148 - C149) * C115 +
               (C150 - C151) * C103 + C168 * C116 + C169 * C104 + C170 * C117 +
               C171 * C105 + C172 * C118 + C173 * C106) *
                  C31955 * C31925 * C31911 * C110 +
              ((C149 - C148) * C114 + (C151 - C150) * C102 +
               (C153 - C152) * C115 + (C155 - C154) * C103 +
               (C157 - C156) * C116 + (C159 - C158) * C104 +
               (C161 - C160) * C117 + (C163 - C162) * C105 +
               (C164 - C165) * C118 + (C166 - C167) * C106) *
                  C31955 * C31925 * C31911 * C111 +
              (C168 * C114 + C169 * C102 + C170 * C115 + C171 * C103 +
               C172 * C116 + C173 * C104 + (C165 - C164) * C117 +
               (C167 - C166) * C105 + (C31966 * C138 - C113 * C125) * C118 +
               (C31966 * C146 - C113 * C139) * C106) *
                  C31955 * C31925 * C31911 * C112) +
         std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             (((C31966 * C126 - C113 * C119) * C114 +
               (C31966 * C140 - C113 * C127) * C102 + (C148 - C149) * C115 +
               (C150 - C151) * C103 + C168 * C116 + C169 * C104 + C170 * C117 +
               C171 * C105 + C172 * C118 + C173 * C106) *
                  C31955 * C31925 * C235 +
              ((C113 * C239 - C31966 * C249) * C114 +
               (C113 * C250 - C31966 * C269) * C102 +
               (C113 * C240 - C31966 * C251) * C115 +
               (C113 * C252 - C31966 * C270) * C103 +
               (C113 * C241 - C31966 * C253) * C116 +
               (C113 * C254 - C31966 * C271) * C104 +
               (C113 * C242 - C31966 * C255) * C117 +
               (C113 * C256 - C31966 * C272) * C105 +
               (C113 * C243 - C31966 * C257) * C118 +
               (C113 * C258 - C31966 * C273) * C106) *
                  C31955 * C31925 * C236 +
              ((C31966 * C259 - C113 * C244) * C114 +
               (C31966 * C274 - C113 * C260) * C102 +
               (C31966 * C261 - C113 * C245) * C115 +
               (C31966 * C275 - C113 * C262) * C103 +
               (C31966 * C263 - C113 * C246) * C116 +
               (C31966 * C276 - C113 * C264) * C104 +
               (C31966 * C265 - C113 * C247) * C117 +
               (C31966 * C277 - C113 * C266) * C105 +
               (C31966 * C267 - C113 * C248) * C118 +
               (C31966 * C278 - C113 * C268) * C106) *
                  C31955 * C31925 * C237) *
             C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C31966 * C126 - C113 * C119) * C114 +
           (C31966 * C140 - C113 * C127) * C102 + (C148 - C149) * C115 +
           (C150 - C151) * C103 + C168 * C116 + C169 * C104 + C170 * C117 +
           C171 * C105 + C172 * C118 + C173 * C106) *
              C31955 * C341 +
          ((C113 * C344 - C31966 * C354) * C114 +
           (C113 * C355 - C31966 * C374) * C102 +
           (C113 * C345 - C31966 * C356) * C115 +
           (C113 * C357 - C31966 * C375) * C103 +
           (C113 * C346 - C31966 * C358) * C116 +
           (C113 * C359 - C31966 * C376) * C104 +
           (C113 * C347 - C31966 * C360) * C117 +
           (C113 * C361 - C31966 * C377) * C105 +
           (C113 * C348 - C31966 * C362) * C118 +
           (C113 * C363 - C31966 * C378) * C106) *
              C31955 * C342 +
          ((C31966 * C364 - C113 * C349) * C114 +
           (C31966 * C379 - C113 * C365) * C102 +
           (C31966 * C366 - C113 * C350) * C115 +
           (C31966 * C380 - C113 * C367) * C103 +
           (C31966 * C368 - C113 * C351) * C116 +
           (C31966 * C381 - C113 * C369) * C104 +
           (C31966 * C370 - C113 * C352) * C117 +
           (C31966 * C382 - C113 * C371) * C105 +
           (C31966 * C372 - C113 * C353) * C118 +
           (C31966 * C383 - C113 * C373) * C106) *
              C31955 * C343) *
         C31911 * C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C31966 * C126 - C113 * C119) * C812 +
            (C31966 * C140 - C113 * C127) * C806 + (C148 - C149) * C813 +
            (C150 - C151) * C807 + C168 * C814 + C169 * C32227) *
               C32273 +
           ((C31966 * C249 - C113 * C239) * C812 +
            (C31966 * C269 - C113 * C250) * C806 + (C476 - C475) * C813 +
            (C478 - C477) * C807 + C816 * C814 + C817 * C32227) *
               C32261 +
           ((C31966 * C259 - C113 * C244) * C812 +
            (C31966 * C274 - C113 * C260) * C806 + (C818 - C819) * C813 +
            (C820 - C821) * C807 + C830 * C814 + C831 * C32227) *
               C32238) *
              C31925 * C31911 * C110 +
          (((C149 - C148) * C812 + (C151 - C150) * C806 + (C153 - C152) * C813 +
            (C155 - C154) * C807 + (C157 - C156) * C814 +
            (C159 - C158) * C32227) *
               C32273 +
           ((C475 - C476) * C812 + (C477 - C478) * C806 + (C479 - C480) * C813 +
            (C481 - C482) * C807 + (C483 - C484) * C814 +
            (C485 - C486) * C32227) *
               C32261 +
           ((C819 - C818) * C812 + (C821 - C820) * C806 + (C823 - C822) * C813 +
            (C825 - C824) * C807 + (C826 - C827) * C814 +
            (C828 - C829) * C32227) *
               C32238) *
              C31925 * C31911 * C111 +
          ((C168 * C812 + C169 * C806 + C170 * C813 + C171 * C807 +
            C172 * C814 + C173 * C32227) *
               C32273 +
           (C816 * C812 + C817 * C806 + (C484 - C483) * C813 +
            (C486 - C485) * C807 + (C488 - C487) * C814 +
            (C490 - C489) * C32227) *
               C32261 +
           (C830 * C812 + C831 * C806 + (C827 - C826) * C813 +
            (C829 - C828) * C807 + (C31966 * C267 - C113 * C248) * C814 +
            (C31966 * C278 - C113 * C268) * C32227) *
               C32238) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C31966 * C126 - C113 * C119) * C812 +
            (C31966 * C140 - C113 * C127) * C806 + (C148 - C149) * C813 +
            (C150 - C151) * C807 + C168 * C814 + C169 * C32227) *
               C32273 +
           ((C966 - C967) * C812 + (C968 - C969) * C806 + (C476 - C475) * C813 +
            (C478 - C477) * C807 + C816 * C814 + C817 * C32227) *
               C32261 +
           C1000 * C32238) *
              C31925 * C235 +
          (((C967 - C966) * C812 + (C969 - C968) * C806 + (C475 - C476) * C813 +
            (C477 - C478) * C807 + (C479 - C480) * C814 +
            (C481 - C482) * C32227) *
               C32273 +
           ((C971 - C970) * C812 + (C973 - C972) * C806 + (C819 - C818) * C813 +
            (C821 - C820) * C807 + (C823 - C822) * C814 +
            (C825 - C824) * C32227) *
               C32261 +
           ((C978 - C979) * C812 + (C980 - C981) * C806 + (C982 - C983) * C813 +
            (C984 - C985) * C807 + (C986 - C987) * C814 +
            (C988 - C989) * C32227) *
               C32238) *
              C31925 * C236 +
          (C1000 * C32273 +
           ((C979 - C978) * C812 + (C981 - C980) * C806 + (C983 - C982) * C813 +
            (C985 - C984) * C807 + (C987 - C986) * C814 +
            (C989 - C988) * C32227) *
               C32261 +
           ((C31966 * C953 - C113 * C944) * C812 +
            (C31966 * C962 - C113 * C954) * C806 +
            (C31966 * C955 - C113 * C945) * C813 +
            (C31966 * C963 - C113 * C956) * C807 +
            (C31966 * C957 - C113 * C946) * C814 +
            (C31966 * C964 - C113 * C958) * C32227) *
               C32238) *
              C31925 * C237) *
         C31899) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C31966 * C126 - C113 * C119) * C812 +
            (C31966 * C140 - C113 * C127) * C806 + (C148 - C149) * C813 +
            (C150 - C151) * C807 + C168 * C814 + C169 * C32227) *
               C32273 +
           ((C966 - C967) * C812 + (C968 - C969) * C806 + (C476 - C475) * C813 +
            (C478 - C477) * C807 + C816 * C814 + C817 * C32227) *
               C32261 +
           C1000 * C32238) *
              C341 +
          (((C113 * C344 - C31966 * C354) * C812 +
            (C113 * C355 - C31966 * C374) * C806 + (C579 - C580) * C813 +
            (C581 - C582) * C807 + (C583 - C584) * C814 +
            (C585 - C586) * C32227) *
               C32273 +
           ((C113 * C676 - C31966 * C681) * C812 +
            (C113 * C682 - C31966 * C691) * C806 +
            (C113 * C677 - C31966 * C683) * C813 +
            (C113 * C684 - C31966 * C692) * C807 +
            (C113 * C678 - C31966 * C685) * C814 +
            (C113 * C686 - C31966 * C693) * C32227) *
               C32261 +
           ((C113 * C1110 - C31966 * C1119) * C812 +
            (C113 * C1120 - C31966 * C1137) * C806 +
            (C113 * C1111 - C31966 * C1121) * C813 +
            (C113 * C1122 - C31966 * C1138) * C807 +
            (C113 * C1112 - C31966 * C1123) * C814 +
            (C113 * C1124 - C31966 * C1139) * C32227) *
               C32238) *
              C342 +
          (((C31966 * C364 - C113 * C349) * C812 +
            (C31966 * C379 - C113 * C365) * C806 +
            (C31966 * C366 - C113 * C350) * C813 +
            (C31966 * C380 - C113 * C367) * C807 +
            (C31966 * C368 - C113 * C351) * C814 +
            (C31966 * C381 - C113 * C369) * C32227) *
               C32273 +
           ((C31966 * C1125 - C113 * C1113) * C812 +
            (C31966 * C1140 - C113 * C1126) * C806 +
            (C31966 * C1127 - C113 * C1114) * C813 +
            (C31966 * C1141 - C113 * C1128) * C807 +
            (C31966 * C1129 - C113 * C1115) * C814 +
            (C31966 * C1142 - C113 * C1130) * C32227) *
               C32261 +
           ((C31966 * C1131 - C113 * C1116) * C812 +
            (C31966 * C1143 - C113 * C1132) * C806 +
            (C31966 * C1133 - C113 * C1117) * C813 +
            (C31966 * C1144 - C113 * C1134) * C807 +
            (C31966 * C1135 - C113 * C1118) * C814 +
            (C31966 * C1145 - C113 * C1136) * C32227) *
               C32238) *
              C343) *
         C31911 * C31899) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C31966 * C126 - C113 * C119) * C5248 +
            (C31966 * C140 - C113 * C127) * C32270 + (C148 - C149) * C5249 +
            (C150 - C151) * C32257 + C168 * C5250 + C169 * C32227) *
               C5245 +
           ((C966 - C967) * C5248 + (C968 - C969) * C32270 + C1297 * C5249 +
            C1298 * C32257 + C816 * C5250 + C817 * C32227) *
               C5246 +
           (C990 * C5248 + C991 * C32270 + C974 * C5249 + C975 * C32257 +
            C830 * C5250 + C831 * C32227) *
               C32238) *
              C31925 * C31911 * C110 +
          (((C149 - C148) * C5248 + (C151 - C150) * C32270 +
            (C153 - C152) * C5249 + (C155 - C154) * C32257 +
            (C157 - C156) * C5250 + (C159 - C158) * C32227) *
               C5245 +
           (C1299 * C5248 + C1300 * C32270 + C1301 * C5249 + C1302 * C32257 +
            C2987 * C5250 + C2988 * C32227) *
               C5246 +
           (C1303 * C5248 + C1304 * C32270 + C1305 * C5249 + C1306 * C32257 +
            (C826 - C827) * C5250 + (C828 - C829) * C32227) *
               C32238) *
              C31925 * C31911 * C111 +
          ((C168 * C5248 + C169 * C32270 + C170 * C5249 + C171 * C32257 +
            C172 * C5250 + C173 * C32227) *
               C5245 +
           (C816 * C5248 + C817 * C32270 + C2659 * C5249 + C2660 * C32257 +
            (C488 - C487) * C5250 + (C490 - C489) * C32227) *
               C5246 +
           (C830 * C5248 + C831 * C32270 + (C827 - C826) * C5249 +
            (C829 - C828) * C32257 + (C31966 * C267 - C113 * C248) * C5250 +
            (C31966 * C278 - C113 * C268) * C32227) *
               C32238) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C31966 * C126 - C113 * C119) * C5248 +
            (C31966 * C140 - C113 * C127) * C32270 + (C148 - C149) * C5249 +
            (C150 - C151) * C32257 + C168 * C5250 + C169 * C32227) *
               C5245 +
           ((C966 - C967) * C5248 + (C968 - C969) * C32270 + C1297 * C5249 +
            C1298 * C32257 + C816 * C5250 + C817 * C32227) *
               C5246 +
           C5372 * C32238) *
              C31925 * C235 +
          (((C967 - C966) * C5248 + (C969 - C968) * C32270 + C1299 * C5249 +
            C1300 * C32257 + C1301 * C5250 + C1302 * C32227) *
               C5245 +
           ((C971 - C970) * C5248 + (C973 - C972) * C32270 + C1303 * C5249 +
            C1304 * C32257 + C1305 * C5250 + C1306 * C32227) *
               C5246 +
           ((C978 - C979) * C5248 + (C980 - C981) * C32270 +
            (C982 - C983) * C5249 + (C984 - C985) * C32257 +
            (C986 - C987) * C5250 + (C988 - C989) * C32227) *
               C32238) *
              C31925 * C236 +
          (C5372 * C5245 +
           ((C979 - C978) * C5248 + (C981 - C980) * C32270 +
            (C983 - C982) * C5249 + (C985 - C984) * C32257 +
            (C987 - C986) * C5250 + (C989 - C988) * C32227) *
               C5246 +
           ((C31966 * C953 - C113 * C944) * C5248 +
            (C31966 * C962 - C113 * C954) * C32270 +
            (C31966 * C955 - C113 * C945) * C5249 +
            (C31966 * C963 - C113 * C956) * C32257 +
            (C31966 * C957 - C113 * C946) * C5250 +
            (C31966 * C964 - C113 * C958) * C32227) *
               C32238) *
              C31925 * C237) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C31966 * C126 - C113 * C119) * C5248 +
            (C31966 * C140 - C113 * C127) * C32270 + (C148 - C149) * C5249 +
            (C150 - C151) * C32257 + C168 * C5250 + C169 * C32227) *
               C5245 +
           ((C966 - C967) * C5248 + (C968 - C969) * C32270 + C1297 * C5249 +
            C1298 * C32257 + C816 * C5250 + C817 * C32227) *
               C5246 +
           C5372 * C32238) *
              C341 +
          (((C113 * C344 - C31966 * C354) * C5248 +
            (C113 * C355 - C31966 * C374) * C32270 + (C579 - C580) * C5249 +
            (C581 - C582) * C32257 + (C583 - C584) * C5250 +
            (C585 - C586) * C32227) *
               C5245 +
           ((C1631 - C1632) * C5248 + (C1633 - C1634) * C32270 +
            (C1457 - C1458) * C5249 + (C1459 - C1460) * C32257 +
            (C1461 - C1462) * C5250 + (C1463 - C1464) * C32227) *
               C5246 +
           ((C1635 - C1636) * C5248 + (C1637 - C1638) * C32270 +
            (C1465 - C1466) * C5249 + (C1467 - C1468) * C32257 +
            (C1469 - C1470) * C5250 + (C1471 - C1472) * C32227) *
               C32238) *
              C342 +
          (((C31966 * C364 - C113 * C349) * C5248 +
            (C31966 * C379 - C113 * C365) * C32270 +
            (C31966 * C366 - C113 * C350) * C5249 +
            (C31966 * C380 - C113 * C367) * C32257 +
            (C31966 * C368 - C113 * C351) * C5250 +
            (C31966 * C381 - C113 * C369) * C32227) *
               C5245 +
           ((C31966 * C1125 - C113 * C1113) * C5248 +
            (C31966 * C1140 - C113 * C1126) * C32270 +
            (C31966 * C1127 - C113 * C1114) * C5249 +
            (C31966 * C1141 - C113 * C1128) * C32257 +
            (C31966 * C1129 - C113 * C1115) * C5250 +
            (C31966 * C1142 - C113 * C1130) * C32227) *
               C5246 +
           ((C31966 * C1131 - C113 * C1116) * C5248 +
            (C31966 * C1143 - C113 * C1132) * C32270 +
            (C31966 * C1133 - C113 * C1117) * C5249 +
            (C31966 * C1144 - C113 * C1134) * C32257 +
            (C31966 * C1135 - C113 * C1118) * C5250 +
            (C31966 * C1145 - C113 * C1136) * C32227) *
               C32238) *
              C343) *
         C31911 * C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C31966 * C126 - C113 * C119) * C5988 +
            (C31966 * C140 - C113 * C127) * C31864) *
               C5983 +
           ((C966 - C967) * C5988 + (C968 - C969) * C31864) * C5984 +
           (C990 * C5988 + C991 * C31864) * C5985 +
           ((C979 - C978) * C5988 + (C981 - C980) * C31864) * C5986 +
           ((C31966 * C953 - C113 * C944) * C5988 +
            (C31966 * C962 - C113 * C954) * C31864) *
               C5987) *
              C31925 * C31911 * C110 +
          (((C149 - C148) * C5988 + (C151 - C150) * C31864) * C5983 +
           (C1299 * C5988 + C1300 * C31864) * C5984 +
           (C1303 * C5988 + C1304 * C31864) * C5985 +
           ((C982 - C983) * C5988 + (C984 - C985) * C31864) * C5986 +
           ((C113 * C945 - C31966 * C955) * C5988 +
            (C113 * C956 - C31966 * C963) * C31864) *
               C5987) *
              C31925 * C31911 * C111 +
          ((C168 * C5988 + C169 * C31864) * C5983 +
           (C816 * C5988 + C817 * C31864) * C5984 +
           (C830 * C5988 + C831 * C31864) * C5985 +
           ((C987 - C986) * C5988 + (C989 - C988) * C31864) * C5986 +
           ((C31966 * C957 - C113 * C946) * C5988 +
            (C31966 * C964 - C113 * C958) * C31864) *
               C5987) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C31966 * C126 - C113 * C119) * C5988 +
            (C31966 * C140 - C113 * C127) * C31864) *
               C5983 +
           ((C966 - C967) * C5988 + (C968 - C969) * C31864) * C5984 +
           C6072 * C5985 + C6077 * C5986 + C6080 * C5987) *
              C31925 * C235 +
          (((C967 - C966) * C5988 + (C969 - C968) * C31864) * C5983 +
           ((C971 - C970) * C5988 + (C973 - C972) * C31864) * C5984 +
           ((C978 - C979) * C5988 + (C980 - C981) * C31864) * C5985 +
           ((C6065 - C6064) * C5988 + (C6067 - C6066) * C31864) * C5986 +
           ((C6068 - C6069) * C5988 + (C6070 - C6071) * C31864) * C5987) *
              C31925 * C236 +
          (C6072 * C5983 + C6077 * C5984 + C6080 * C5985 +
           ((C6069 - C6068) * C5988 + (C6071 - C6070) * C31864) * C5986 +
           ((C31966 * C6055 - C113 * C6052) * C5988 +
            (C31966 * C6058 - C113 * C6056) * C31864) *
               C5987) *
              C31925 * C237) *
         C31899) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C31966 * C126 - C113 * C119) * C5988 +
            (C31966 * C140 - C113 * C127) * C31864) *
               C5983 +
           ((C966 - C967) * C5988 + (C968 - C969) * C31864) * C5984 +
           C6072 * C5985 + C6077 * C5986 + C6080 * C5987) *
              C341 +
          (((C113 * C344 - C31966 * C354) * C5988 +
            (C113 * C355 - C31966 * C374) * C31864) *
               C5983 +
           ((C1631 - C1632) * C5988 + (C1633 - C1634) * C31864) * C5984 +
           ((C1635 - C1636) * C5988 + (C1637 - C1638) * C31864) * C5985 +
           ((C113 * C1618 - C31966 * C1621) * C5988 +
            (C113 * C1622 - C31966 * C1627) * C31864) *
               C5986 +
           ((C113 * C6142 - C31966 * C6145) * C5988 +
            (C113 * C6146 - C31966 * C6151) * C31864) *
               C5987) *
              C342 +
          (((C31966 * C364 - C113 * C349) * C5988 +
            (C31966 * C379 - C113 * C365) * C31864) *
               C5983 +
           ((C31966 * C1125 - C113 * C1113) * C5988 +
            (C31966 * C1140 - C113 * C1126) * C31864) *
               C5984 +
           ((C31966 * C1131 - C113 * C1116) * C5988 +
            (C31966 * C1143 - C113 * C1132) * C31864) *
               C5985 +
           ((C31966 * C6147 - C113 * C6143) * C5988 +
            (C31966 * C6152 - C113 * C6148) * C31864) *
               C5986 +
           ((C31966 * C6149 - C113 * C6144) * C5988 +
            (C31966 * C6153 - C113 * C6150) * C31864) *
               C5987) *
              C343) *
         C31911 * C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C9914 * C126 - C9917 * C119 + C9915 * C354 - C9918 * C344 +
            C32241 * C364 - C9919 * C349) *
               C5248 +
           (C9914 * C140 - C9917 * C127 + C9915 * C374 - C9918 * C355 +
            C32241 * C379 - C9919 * C365) *
               C32270 +
           (C9921 - C9922 + C9923 - C9924 + C9925 - C9926) * C5249 +
           (C9927 - C9928 + C9929 - C9930 + C9931 - C9932) * C32257 +
           C9965 * C5250 + C9966 * C32227) *
              C31955 * C31925 * C31911 * C110 +
          ((C9922 - C9921 + C9924 - C9923 + C9926 - C9925) * C5248 +
           (C9928 - C9927 + C9930 - C9929 + C9932 - C9931) * C32270 +
           (C9934 - C9933 + C9936 - C9935 + C9938 - C9937) * C5249 +
           (C9940 - C9939 + C9942 - C9941 + C9944 - C9943) * C32257 +
           (C9945 - C9946 + C9947 - C9948 + C9949 - C9950) * C5250 +
           (C9951 - C9952 + C9953 - C9954 + C9955 - C9956) * C32227) *
              C31955 * C31925 * C31911 * C111 +
          (C9965 * C5248 + C9966 * C32270 +
           (C9946 - C9945 + C9948 - C9947 + C9950 - C9949) * C5249 +
           (C9952 - C9951 + C9954 - C9953 + C9956 - C9955) * C32257 +
           (C9914 * C134 - C9917 * C123 + C9915 * C362 - C9918 * C348 +
            C32241 * C372 - C9919 * C353) *
               C5250 +
           (C9914 * C144 - C9917 * C135 + C9915 * C378 - C9918 * C363 +
            C32241 * C383 - C9919 * C373) *
               C32227) *
              C31955 * C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C9914 * C126 - C9917 * C119 + C9915 * C354 - C9918 * C344 +
            C32241 * C364 - C9919 * C349) *
               C5248 +
           (C9914 * C140 - C9917 * C127 + C9915 * C374 - C9918 * C355 +
            C32241 * C379 - C9919 * C365) *
               C32270 +
           (C9921 - C9922 + C9923 - C9924 + C9925 - C9926) * C5249 +
           (C9927 - C9928 + C9929 - C9930 + C9931 - C9932) * C32257 +
           C9965 * C5250 + C9966 * C32227) *
              C31955 * C31925 * C235 +
          ((C9917 * C239 - C9914 * C249 + C9918 * C676 - C9915 * C681 +
            C9919 * C1113 - C32241 * C1125) *
               C5248 +
           (C9917 * C250 - C9914 * C269 + C9918 * C682 - C9915 * C691 +
            C9919 * C1126 - C32241 * C1140) *
               C32270 +
           (C9917 * C240 - C9914 * C251 + C9918 * C677 - C9915 * C683 +
            C9919 * C1114 - C32241 * C1127) *
               C5249 +
           (C9917 * C252 - C9914 * C270 + C9918 * C684 - C9915 * C692 +
            C9919 * C1128 - C32241 * C1141) *
               C32257 +
           (C9917 * C241 - C9914 * C253 + C9918 * C678 - C9915 * C685 +
            C9919 * C1115 - C32241 * C1129) *
               C5250 +
           (C9917 * C254 - C9914 * C271 + C9918 * C686 - C9915 * C693 +
            C9919 * C1130 - C32241 * C1142) *
               C32227) *
              C31955 * C31925 * C236 +
          ((C9914 * C259 - C9917 * C244 + C9915 * C1119 - C9918 * C1110 +
            C32241 * C1131 - C9919 * C1116) *
               C5248 +
           (C9914 * C274 - C9917 * C260 + C9915 * C1137 - C9918 * C1120 +
            C32241 * C1143 - C9919 * C1132) *
               C32270 +
           (C9914 * C261 - C9917 * C245 + C9915 * C1121 - C9918 * C1111 +
            C32241 * C1133 - C9919 * C1117) *
               C5249 +
           (C9914 * C275 - C9917 * C262 + C9915 * C1138 - C9918 * C1122 +
            C32241 * C1144 - C9919 * C1134) *
               C32257 +
           (C9914 * C263 - C9917 * C246 + C9915 * C1123 - C9918 * C1112 +
            C32241 * C1135 - C9919 * C1118) *
               C5250 +
           (C9914 * C276 - C9917 * C264 + C9915 * C1139 - C9918 * C1124 +
            C32241 * C1145 - C9919 * C1136) *
               C32227) *
              C31955 * C31925 * C237) *
         C31899) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C9914 * C126 - C9917 * C119 + C9915 * C354 - C9918 * C344 +
            C32241 * C364 - C9919 * C349) *
               C5248 +
           (C9914 * C140 - C9917 * C127 + C9915 * C374 - C9918 * C355 +
            C32241 * C379 - C9919 * C365) *
               C32270 +
           (C9921 - C9922 + C9923 - C9924 + C9925 - C9926) * C5249 +
           (C9927 - C9928 + C9929 - C9930 + C9931 - C9932) * C32257 +
           C9965 * C5250 + C9966 * C32227) *
              C31955 * C341 +
          ((C9917 * C344 - C9914 * C354 + C9918 * C349 - C9915 * C364 +
            C9919 * C2020 - C32241 * C2026) *
               C5248 +
           (C9917 * C355 - C9914 * C374 + C9918 * C365 - C9915 * C379 +
            C9919 * C2027 - C32241 * C2038) *
               C32270 +
           (C9917 * C345 - C9914 * C356 + C9918 * C350 - C9915 * C366 +
            C9919 * C2021 - C32241 * C2028) *
               C5249 +
           (C9917 * C357 - C9914 * C375 + C9918 * C367 - C9915 * C380 +
            C9919 * C2029 - C32241 * C2039) *
               C32257 +
           (C9917 * C346 - C9914 * C358 + C9918 * C351 - C9915 * C368 +
            C9919 * C2022 - C32241 * C2030) *
               C5250 +
           (C9917 * C359 - C9914 * C376 + C9918 * C369 - C9915 * C381 +
            C9919 * C2031 - C32241 * C2040) *
               C32227) *
              C31955 * C342 +
          ((C9914 * C364 - C9917 * C349 + C9915 * C2026 - C9918 * C2020 +
            C32241 * C2032 - C9919 * C2023) *
               C5248 +
           (C9914 * C379 - C9917 * C365 + C9915 * C2038 - C9918 * C2027 +
            C32241 * C2041 - C9919 * C2033) *
               C32270 +
           (C9914 * C366 - C9917 * C350 + C9915 * C2028 - C9918 * C2021 +
            C32241 * C2034 - C9919 * C2024) *
               C5249 +
           (C9914 * C380 - C9917 * C367 + C9915 * C2039 - C9918 * C2029 +
            C32241 * C2042 - C9919 * C2035) *
               C32257 +
           (C9914 * C368 - C9917 * C351 + C9915 * C2030 - C9918 * C2022 +
            C32241 * C2036 - C9919 * C2025) *
               C5250 +
           (C9914 * C381 - C9917 * C369 + C9915 * C2040 - C9918 * C2031 +
            C32241 * C2043 - C9919 * C2037) *
               C32227) *
              C31955 * C343) *
         C31911 * C31899) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C9914 * C126 - C9917 * C119 + C9915 * C354 - C9918 * C344 +
             C32241 * C364 - C9919 * C349) *
                C5988 +
            (C9914 * C140 - C9917 * C127 + C9915 * C374 - C9918 * C355 +
             C32241 * C379 - C9919 * C365) *
                C31864) *
               C32273 +
           ((C9914 * C249 - C9917 * C239 + C9915 * C681 - C9918 * C676 +
             C32241 * C1125 - C9919 * C1113) *
                C5988 +
            (C9914 * C269 - C9917 * C250 + C9915 * C691 - C9918 * C682 +
             C32241 * C1140 - C9919 * C1126) *
                C31864) *
               C32261 +
           ((C9914 * C259 - C9917 * C244 + C9915 * C1119 - C9918 * C1110 +
             C32241 * C1131 - C9919 * C1116) *
                C5988 +
            (C9914 * C274 - C9917 * C260 + C9915 * C1137 - C9918 * C1120 +
             C32241 * C1143 - C9919 * C1132) *
                C31864) *
               C32238) *
              C31925 * C31911 * C110 +
          (((C9922 - C9921 + C9924 - C9923 + C9926 - C9925) * C5988 +
            (C9928 - C9927 + C9930 - C9929 + C9932 - C9931) * C31864) *
               C32273 +
           ((C10333 - C10334 + C10335 - C10336 + C10337 - C10338) * C5988 +
            (C10339 - C10340 + C10341 - C10342 + C10343 - C10344) * C31864) *
               C32261 +
           ((C9917 * C245 - C9914 * C261 + C9918 * C1111 - C9915 * C1121 +
             C9919 * C1117 - C32241 * C1133) *
                C5988 +
            (C9917 * C262 - C9914 * C275 + C9918 * C1122 - C9915 * C1138 +
             C9919 * C1134 - C32241 * C1144) *
                C31864) *
               C32238) *
              C31925 * C31911 * C111 +
          ((C9965 * C5988 + C9966 * C31864) * C32273 +
           ((C10346 - C10345 + C10348 - C10347 + C10350 - C10349) * C5988 +
            (C10352 - C10351 + C10354 - C10353 + C10356 - C10355) * C31864) *
               C32261 +
           ((C9914 * C263 - C9917 * C246 + C9915 * C1123 - C9918 * C1112 +
             C32241 * C1135 - C9919 * C1118) *
                C5988 +
            (C9914 * C276 - C9917 * C264 + C9915 * C1139 - C9918 * C1124 +
             C32241 * C1145 - C9919 * C1136) *
                C31864) *
               C32238) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C9914 * C126 - C9917 * C119 + C9915 * C354 - C9918 * C344 +
             C32241 * C364 - C9919 * C349) *
                C5988 +
            (C9914 * C140 - C9917 * C127 + C9915 * C374 - C9918 * C355 +
             C32241 * C379 - C9919 * C365) *
                C31864) *
               C32273 +
           ((C10893 - C10894 + C10895 - C10896 + C10897 - C10898) * C5988 +
            (C10899 - C10900 + C10901 - C10902 + C10903 - C10904) * C31864) *
               C32261 +
           C10941 * C32238) *
              C31925 * C235 +
          (((C10894 - C10893 + C10896 - C10895 + C10898 - C10897) * C5988 +
            (C10900 - C10899 + C10902 - C10901 + C10904 - C10903) * C31864) *
               C32273 +
           ((C10906 - C10905 + C10908 - C10907 + C10910 - C10909) * C5988 +
            (C10912 - C10911 + C10914 - C10913 + C10916 - C10915) * C31864) *
               C32261 +
           ((C10917 - C10918 + C10919 - C10920 + C10921 - C10922) * C5988 +
            (C10923 - C10924 + C10925 - C10926 + C10927 - C10928) * C31864) *
               C32238) *
              C31925 * C236 +
          (C10941 * C32273 +
           ((C10918 - C10917 + C10920 - C10919 + C10922 - C10921) * C5988 +
            (C10924 - C10923 + C10926 - C10925 + C10928 - C10927) * C31864) *
               C32261 +
           ((C9914 * C953 - C9917 * C944 + C9915 * C6145 - C9918 * C6142 +
             C32241 * C6149 - C9919 * C6144) *
                C5988 +
            (C9914 * C962 - C9917 * C954 + C9915 * C6151 - C9918 * C6146 +
             C32241 * C6153 - C9919 * C6150) *
                C31864) *
               C32238) *
              C31925 * C237) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C9914 * C126 - C9917 * C119 + C9915 * C354 - C9918 * C344 +
             C32241 * C364 - C9919 * C349) *
                C5988 +
            (C9914 * C140 - C9917 * C127 + C9915 * C374 - C9918 * C355 +
             C32241 * C379 - C9919 * C365) *
                C31864) *
               C32273 +
           ((C10893 - C10894 + C10895 - C10896 + C10897 - C10898) * C5988 +
            (C10899 - C10900 + C10901 - C10902 + C10903 - C10904) * C31864) *
               C32261 +
           C10941 * C32238) *
              C341 +
          (((C9917 * C344 - C9914 * C354 + C9918 * C349 - C9915 * C364 +
             C9919 * C2020 - C32241 * C2026) *
                C5988 +
            (C9917 * C355 - C9914 * C374 + C9918 * C365 - C9915 * C379 +
             C9919 * C2027 - C32241 * C2038) *
                C31864) *
               C32273 +
           ((C9917 * C676 - C9914 * C681 + C9918 * C1113 - C9915 * C1125 +
             C9919 * C2538 - C32241 * C2541) *
                C5988 +
            (C9917 * C682 - C9914 * C691 + C9918 * C1126 - C9915 * C1140 +
             C9919 * C2542 - C32241 * C2547) *
                C31864) *
               C32261 +
           ((C9917 * C1110 - C9914 * C1119 + C9918 * C1116 - C9915 * C1131 +
             C9919 * C6803 - C32241 * C6806) *
                C5988 +
            (C9917 * C1120 - C9914 * C1137 + C9918 * C1132 - C9915 * C1143 +
             C9919 * C6807 - C32241 * C6812) *
                C31864) *
               C32238) *
              C342 +
          (((C9914 * C364 - C9917 * C349 + C9915 * C2026 - C9918 * C2020 +
             C32241 * C2032 - C9919 * C2023) *
                C5988 +
            (C9914 * C379 - C9917 * C365 + C9915 * C2038 - C9918 * C2027 +
             C32241 * C2041 - C9919 * C2033) *
                C31864) *
               C32273 +
           ((C9914 * C1125 - C9917 * C1113 + C9915 * C2541 - C9918 * C2538 +
             C32241 * C6808 - C9919 * C6804) *
                C5988 +
            (C9914 * C1140 - C9917 * C1126 + C9915 * C2547 - C9918 * C2542 +
             C32241 * C6813 - C9919 * C6809) *
                C31864) *
               C32261 +
           ((C9914 * C1131 - C9917 * C1116 + C9915 * C6806 - C9918 * C6803 +
             C32241 * C6810 - C9919 * C6805) *
                C5988 +
            (C9914 * C1143 - C9917 * C1132 + C9915 * C6812 - C9918 * C6807 +
             C32241 * C6814 - C9919 * C6811) *
                C31864) *
               C32238) *
              C343) *
         C31911 * C31899) /
            (p * q * std::sqrt(p + q));
    d2ee[73] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C31966 * C126 - C113 * C119) * C812 +
             (C31966 * C140 - C113 * C127) * C806 + (C148 - C149) * C813 +
             (C150 - C151) * C807 + C168 * C814 + C169 * C32227) *
                C32273 +
            ((C966 - C967) * C812 + (C968 - C969) * C806 + C1297 * C813 +
             C1298 * C807 + C816 * C814 + C817 * C32227) *
                C32261 +
            C1000 * C32238) *
               C572 +
           (((C113 * C344 - C31966 * C354) * C812 +
             (C113 * C355 - C31966 * C374) * C806 + (C579 - C580) * C813 +
             (C581 - C582) * C807 + (C583 - C584) * C814 +
             (C585 - C586) * C32227) *
                C32273 +
            ((C113 * C676 - C31966 * C681) * C812 +
             (C113 * C682 - C31966 * C691) * C806 + (C1457 - C1458) * C813 +
             (C1459 - C1460) * C807 + (C1461 - C1462) * C814 +
             (C1463 - C1464) * C32227) *
                C32261 +
            ((C113 * C1110 - C31966 * C1119) * C812 +
             (C113 * C1120 - C31966 * C1137) * C806 + (C1465 - C1466) * C813 +
             (C1467 - C1468) * C807 + (C1469 - C1470) * C814 +
             (C1471 - C1472) * C32227) *
                C32238) *
               C573) *
              C31911 * C468 +
          ((((C149 - C148) * C812 + (C151 - C150) * C806 +
             (C153 - C152) * C813 + (C155 - C154) * C807 +
             (C157 - C156) * C814 + (C159 - C158) * C32227) *
                C32273 +
            (C1299 * C812 + C1300 * C806 + C1301 * C813 + C1302 * C807 +
             (C483 - C484) * C814 + (C485 - C486) * C32227) *
                C32261 +
            (C1303 * C812 + C1304 * C806 + C1305 * C813 + C1306 * C807 +
             (C826 - C827) * C814 + (C828 - C829) * C32227) *
                C32238) *
               C572 +
           (((C580 - C579) * C812 + (C582 - C581) * C806 +
             (C584 - C583) * C813 + (C586 - C585) * C807 +
             (C588 - C587) * C814 + (C590 - C589) * C32227) *
                C32273 +
            ((C1458 - C1457) * C812 + (C1460 - C1459) * C806 +
             (C1462 - C1461) * C813 + (C1464 - C1463) * C807 +
             (C31966 * C687 - C113 * C679) * C814 +
             (C31966 * C694 - C113 * C688) * C32227) *
                C32261 +
            ((C1466 - C1465) * C812 + (C1468 - C1467) * C806 +
             (C1470 - C1469) * C813 + (C1472 - C1471) * C807 +
             (C31966 * C1453 - C113 * C1452) * C814 +
             (C31966 * C1455 - C113 * C1454) * C32227) *
                C32238) *
               C573) *
              C31911 * C469)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31966 * C126 - C113 * C119) * C114 +
            (C31966 * C140 - C113 * C127) * C102 + (C148 - C149) * C115 +
            (C150 - C151) * C103 + C168 * C116 + C169 * C104 + C170 * C117 +
            C171 * C105 + C172 * C118 + C173 * C106) *
               C31955 * C572 +
           ((C113 * C344 - C31966 * C354) * C114 +
            (C113 * C355 - C31966 * C374) * C102 + (C579 - C580) * C115 +
            (C581 - C582) * C103 + (C583 - C584) * C116 + (C585 - C586) * C104 +
            (C587 - C588) * C117 + (C589 - C590) * C105 + (C591 - C592) * C118 +
            (C593 - C594) * C106) *
               C31955 * C573) *
              C31911 * C468 +
          (((C149 - C148) * C114 + (C151 - C150) * C102 + (C153 - C152) * C115 +
            (C155 - C154) * C103 + (C157 - C156) * C116 + (C159 - C158) * C104 +
            (C161 - C160) * C117 + (C163 - C162) * C105 + (C164 - C165) * C118 +
            (C166 - C167) * C106) *
               C31955 * C572 +
           ((C580 - C579) * C114 + (C582 - C581) * C102 + (C584 - C583) * C115 +
            (C586 - C585) * C103 + (C588 - C587) * C116 + (C590 - C589) * C104 +
            (C592 - C591) * C117 + (C594 - C593) * C105 +
            (C31966 * C575 - C113 * C574) * C118 +
            (C31966 * C577 - C113 * C576) * C106) *
               C31955 * C573) *
              C31911 * C469)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C31966 * C126 - C113 * C119) * C5248 +
             (C31966 * C140 - C113 * C127) * C32270 + (C148 - C149) * C5249 +
             (C150 - C151) * C32257 + C168 * C5250 + C169 * C32227) *
                C5245 +
            ((C966 - C967) * C5248 + (C968 - C969) * C32270 + C1297 * C5249 +
             C1298 * C32257 + C816 * C5250 + C817 * C32227) *
                C5246 +
            C5372 * C32238) *
               C572 +
           (((C113 * C344 - C31966 * C354) * C5248 +
             (C113 * C355 - C31966 * C374) * C32270 + (C579 - C580) * C5249 +
             (C581 - C582) * C32257 + (C583 - C584) * C5250 +
             (C585 - C586) * C32227) *
                C5245 +
            ((C1631 - C1632) * C5248 + (C1633 - C1634) * C32270 +
             (C1457 - C1458) * C5249 + (C1459 - C1460) * C32257 +
             (C1461 - C1462) * C5250 + (C1463 - C1464) * C32227) *
                C5246 +
            ((C1635 - C1636) * C5248 + (C1637 - C1638) * C32270 +
             (C1465 - C1466) * C5249 + (C1467 - C1468) * C32257 +
             (C1469 - C1470) * C5250 + (C1471 - C1472) * C32227) *
                C32238) *
               C573) *
              C31911 * C468 +
          ((((C149 - C148) * C5248 + (C151 - C150) * C32270 +
             (C153 - C152) * C5249 + (C155 - C154) * C32257 +
             (C157 - C156) * C5250 + (C159 - C158) * C32227) *
                C5245 +
            (C1299 * C5248 + C1300 * C32270 + C1301 * C5249 + C1302 * C32257 +
             C2987 * C5250 + C2988 * C32227) *
                C5246 +
            (C1303 * C5248 + C1304 * C32270 + C1305 * C5249 + C1306 * C32257 +
             (C826 - C827) * C5250 + (C828 - C829) * C32227) *
                C32238) *
               C572 +
           (((C580 - C579) * C5248 + (C582 - C581) * C32270 +
             (C584 - C583) * C5249 + (C586 - C585) * C32257 +
             (C588 - C587) * C5250 + (C590 - C589) * C32227) *
                C5245 +
            ((C1458 - C1457) * C5248 + (C1460 - C1459) * C32270 +
             (C1462 - C1461) * C5249 + (C1464 - C1463) * C32257 +
             (C3120 - C3119) * C5250 + (C3122 - C3121) * C32227) *
                C5246 +
            ((C1466 - C1465) * C5248 + (C1468 - C1467) * C32270 +
             (C1470 - C1469) * C5249 + (C1472 - C1471) * C32257 +
             (C31966 * C1453 - C113 * C1452) * C5250 +
             (C31966 * C1455 - C113 * C1454) * C32227) *
                C32238) *
               C573) *
              C31911 * C469)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C31966 * C126 - C113 * C119) * C5988 +
             (C31966 * C140 - C113 * C127) * C31864) *
                C5983 +
            ((C966 - C967) * C5988 + (C968 - C969) * C31864) * C5984 +
            C6072 * C5985 + C6077 * C5986 + C6080 * C5987) *
               C572 +
           (((C113 * C344 - C31966 * C354) * C5988 +
             (C113 * C355 - C31966 * C374) * C31864) *
                C5983 +
            ((C1631 - C1632) * C5988 + (C1633 - C1634) * C31864) * C5984 +
            ((C1635 - C1636) * C5988 + (C1637 - C1638) * C31864) * C5985 +
            ((C113 * C1618 - C31966 * C1621) * C5988 +
             (C113 * C1622 - C31966 * C1627) * C31864) *
                C5986 +
            ((C113 * C6142 - C31966 * C6145) * C5988 +
             (C113 * C6146 - C31966 * C6151) * C31864) *
                C5987) *
               C573) *
              C31911 * C468 +
          ((((C149 - C148) * C5988 + (C151 - C150) * C31864) * C5983 +
            (C1299 * C5988 + C1300 * C31864) * C5984 +
            (C1303 * C5988 + C1304 * C31864) * C5985 +
            ((C982 - C983) * C5988 + (C984 - C985) * C31864) * C5986 +
            ((C6241 - C6242) * C5988 + (C6243 - C6244) * C31864) * C5987) *
               C572 +
           (((C580 - C579) * C5988 + (C582 - C581) * C31864) * C5983 +
            ((C1458 - C1457) * C5988 + (C1460 - C1459) * C31864) * C5984 +
            ((C1466 - C1465) * C5988 + (C1468 - C1467) * C31864) * C5985 +
            ((C31966 * C1623 - C113 * C1619) * C5988 +
             (C31966 * C1628 - C113 * C1624) * C31864) *
                C5986 +
            ((C31966 * C6327 - C113 * C6326) * C5988 +
             (C31966 * C6329 - C113 * C6328) * C31864) *
                C5987) *
               C573) *
              C31911 * C469)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C9914 * C126 - C9917 * C119 + C9915 * C354 - C9918 * C344 +
             C32241 * C364 - C9919 * C349) *
                C5248 +
            (C9914 * C140 - C9917 * C127 + C9915 * C374 - C9918 * C355 +
             C32241 * C379 - C9919 * C365) *
                C32270 +
            (C9921 - C9922 + C9923 - C9924 + C9925 - C9926) * C5249 +
            (C9927 - C9928 + C9929 - C9930 + C9931 - C9932) * C32257 +
            C9965 * C5250 + C9966 * C32227) *
               C31955 * C572 +
           ((C9917 * C344 - C9914 * C354 + C9918 * C349 - C9915 * C364 +
             C9919 * C2020 - C32241 * C2026) *
                C5248 +
            (C9917 * C355 - C9914 * C374 + C9918 * C365 - C9915 * C379 +
             C9919 * C2027 - C32241 * C2038) *
                C32270 +
            (C10503 - C10504 + C10505 - C10506 + C10507 - C10508) * C5249 +
            (C10509 - C10510 + C10511 - C10512 + C10513 - C10514) * C32257 +
            (C10515 - C10516 + C10517 - C10518 + C10519 - C10520) * C5250 +
            (C10521 - C10522 + C10523 - C10524 + C10525 - C10526) * C32227) *
               C31955 * C573) *
              C31911 * C468 +
          (((C9922 - C9921 + C9924 - C9923 + C9926 - C9925) * C5248 +
            (C9928 - C9927 + C9930 - C9929 + C9932 - C9931) * C32270 +
            (C9934 - C9933 + C9936 - C9935 + C9938 - C9937) * C5249 +
            (C9940 - C9939 + C9942 - C9941 + C9944 - C9943) * C32257 +
            (C9945 - C9946 + C9947 - C9948 + C9949 - C9950) * C5250 +
            (C9951 - C9952 + C9953 - C9954 + C9955 - C9956) * C32227) *
               C31955 * C572 +
           ((C10504 - C10503 + C10506 - C10505 + C10508 - C10507) * C5248 +
            (C10510 - C10509 + C10512 - C10511 + C10514 - C10513) * C32270 +
            (C10516 - C10515 + C10518 - C10517 + C10520 - C10519) * C5249 +
            (C10522 - C10521 + C10524 - C10523 + C10526 - C10525) * C32257 +
            (C9914 * C360 - C9917 * C347 + C9915 * C370 - C9918 * C352 +
             C32241 * C2365 - C9919 * C2364) *
                C5250 +
            (C9914 * C377 - C9917 * C361 + C9915 * C382 - C9918 * C371 +
             C32241 * C2367 - C9919 * C2366) *
                C32227) *
               C31955 * C573) *
              C31911 * C469)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C9914 * C126 - C9917 * C119 + C9915 * C354 - C9918 * C344 +
              C32241 * C364 - C9919 * C349) *
                 C5988 +
             (C9914 * C140 - C9917 * C127 + C9915 * C374 - C9918 * C355 +
              C32241 * C379 - C9919 * C365) *
                 C31864) *
                C32273 +
            ((C10893 - C10894 + C10895 - C10896 + C10897 - C10898) * C5988 +
             (C10899 - C10900 + C10901 - C10902 + C10903 - C10904) * C31864) *
                C32261 +
            C10941 * C32238) *
               C572 +
           (((C9917 * C344 - C9914 * C354 + C9918 * C349 - C9915 * C364 +
              C9919 * C2020 - C32241 * C2026) *
                 C5988 +
             (C9917 * C355 - C9914 * C374 + C9918 * C365 - C9915 * C379 +
              C9919 * C2027 - C32241 * C2038) *
                 C31864) *
                C32273 +
            ((C9917 * C676 - C9914 * C681 + C9918 * C1113 - C9915 * C1125 +
              C9919 * C2538 - C32241 * C2541) *
                 C5988 +
             (C9917 * C682 - C9914 * C691 + C9918 * C1126 - C9915 * C1140 +
              C9919 * C2542 - C32241 * C2547) *
                 C31864) *
                C32261 +
            ((C9917 * C1110 - C9914 * C1119 + C9918 * C1116 - C9915 * C1131 +
              C9919 * C6803 - C32241 * C6806) *
                 C5988 +
             (C9917 * C1120 - C9914 * C1137 + C9918 * C1132 - C9915 * C1143 +
              C9919 * C6807 - C32241 * C6812) *
                 C31864) *
                C32238) *
               C573) *
              C31911 * C468 +
          ((((C9922 - C9921 + C9924 - C9923 + C9926 - C9925) * C5988 +
             (C9928 - C9927 + C9930 - C9929 + C9932 - C9931) * C31864) *
                C32273 +
            ((C10333 - C10334 + C10335 - C10336 + C10337 - C10338) * C5988 +
             (C10339 - C10340 + C10341 - C10342 + C10343 - C10344) * C31864) *
                C32261 +
            ((C11198 - C11199 + C11200 - C11201 + C11202 - C11203) * C5988 +
             (C11204 - C11205 + C11206 - C11207 + C11208 - C11209) * C31864) *
                C32238) *
               C572 +
           (((C10504 - C10503 + C10506 - C10505 + C10508 - C10507) * C5988 +
             (C10510 - C10509 + C10512 - C10511 + C10514 - C10513) * C31864) *
                C32273 +
            ((C9914 * C683 - C9917 * C677 + C9915 * C1127 - C9918 * C1114 +
              C32241 * C2543 - C9919 * C2539) *
                 C5988 +
             (C9914 * C692 - C9917 * C684 + C9915 * C1141 - C9918 * C1128 +
              C32241 * C2548 - C9919 * C2544) *
                 C31864) *
                C32261 +
            ((C9914 * C1121 - C9917 * C1111 + C9915 * C1133 - C9918 * C1117 +
              C32241 * C7124 - C9919 * C7123) *
                 C5988 +
             (C9914 * C1138 - C9917 * C1122 + C9915 * C1144 - C9918 * C1134 +
              C32241 * C7126 - C9919 * C7125) *
                 C31864) *
                C32238) *
               C573) *
              C31911 * C469)) /
            (p * q * std::sqrt(p + q));
    d2ee[74] +=
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C31966 * C126 - C113 * C119) * C114 +
           (C31966 * C140 - C113 * C127) * C102 + (C148 - C149) * C115 +
           (C150 - C151) * C103 + C168 * C116 + C169 * C104 + C170 * C117 +
           C171 * C105 + C172 * C118 + C173 * C106) *
              C31955 * C31925 * C235 +
          ((C113 * C239 - C31966 * C249) * C114 +
           (C113 * C250 - C31966 * C269) * C102 +
           (C113 * C240 - C31966 * C251) * C115 +
           (C113 * C252 - C31966 * C270) * C103 +
           (C113 * C241 - C31966 * C253) * C116 +
           (C113 * C254 - C31966 * C271) * C104 +
           (C113 * C242 - C31966 * C255) * C117 +
           (C113 * C256 - C31966 * C272) * C105 +
           (C113 * C243 - C31966 * C257) * C118 +
           (C113 * C258 - C31966 * C273) * C106) *
              C31955 * C31925 * C236 +
          ((C31966 * C259 - C113 * C244) * C114 +
           (C31966 * C274 - C113 * C260) * C102 +
           (C31966 * C261 - C113 * C245) * C115 +
           (C31966 * C275 - C113 * C262) * C103 +
           (C31966 * C263 - C113 * C246) * C116 +
           (C31966 * C276 - C113 * C264) * C104 +
           (C31966 * C265 - C113 * C247) * C117 +
           (C31966 * C277 - C113 * C266) * C105 +
           (C31966 * C267 - C113 * C248) * C118 +
           (C31966 * C278 - C113 * C268) * C106) *
              C31955 * C31925 * C237) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C31966 * C126 - C113 * C119) * C114 +
           (C31966 * C140 - C113 * C127) * C102 + (C148 - C149) * C115 +
           (C150 - C151) * C103 + C168 * C116 + C169 * C104 + C170 * C117 +
           C171 * C105 + C172 * C118 + C173 * C106) *
              C31955 * C31925 * C31911 * C110 +
          ((C149 - C148) * C114 + (C151 - C150) * C102 + (C153 - C152) * C115 +
           (C155 - C154) * C103 + (C157 - C156) * C116 + (C159 - C158) * C104 +
           (C161 - C160) * C117 + (C163 - C162) * C105 + (C164 - C165) * C118 +
           (C166 - C167) * C106) *
              C31955 * C31925 * C31911 * C111 +
          (C168 * C114 + C169 * C102 + C170 * C115 + C171 * C103 + C172 * C116 +
           C173 * C104 + (C165 - C164) * C117 + (C167 - C166) * C105 +
           (C31966 * C138 - C113 * C125) * C118 +
           (C31966 * C146 - C113 * C139) * C106) *
              C31955 * C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C31966 * C126 - C113 * C119) * C812 +
            (C31966 * C140 - C113 * C127) * C806 + (C148 - C149) * C813 +
            (C150 - C151) * C807 + C168 * C814 + C169 * C32227) *
               C32273 +
           ((C31966 * C249 - C113 * C239) * C812 +
            (C31966 * C269 - C113 * C250) * C806 + (C476 - C475) * C813 +
            (C478 - C477) * C807 + C816 * C814 + C817 * C32227) *
               C32261 +
           ((C31966 * C259 - C113 * C244) * C812 +
            (C31966 * C274 - C113 * C260) * C806 + (C818 - C819) * C813 +
            (C820 - C821) * C807 + C830 * C814 + C831 * C32227) *
               C32238) *
              C31925 * C31911 * C110 +
          (((C149 - C148) * C812 + (C151 - C150) * C806 + (C153 - C152) * C813 +
            (C155 - C154) * C807 + (C157 - C156) * C814 +
            (C159 - C158) * C32227) *
               C32273 +
           ((C475 - C476) * C812 + (C477 - C478) * C806 + (C479 - C480) * C813 +
            (C481 - C482) * C807 + (C483 - C484) * C814 +
            (C485 - C486) * C32227) *
               C32261 +
           ((C819 - C818) * C812 + (C821 - C820) * C806 + (C823 - C822) * C813 +
            (C825 - C824) * C807 + (C826 - C827) * C814 +
            (C828 - C829) * C32227) *
               C32238) *
              C31925 * C31911 * C111 +
          ((C168 * C812 + C169 * C806 + C170 * C813 + C171 * C807 +
            C172 * C814 + C173 * C32227) *
               C32273 +
           (C816 * C812 + C817 * C806 + (C484 - C483) * C813 +
            (C486 - C485) * C807 + (C488 - C487) * C814 +
            (C490 - C489) * C32227) *
               C32261 +
           (C830 * C812 + C831 * C806 + (C827 - C826) * C813 +
            (C829 - C828) * C807 + (C31966 * C267 - C113 * C248) * C814 +
            (C31966 * C278 - C113 * C268) * C32227) *
               C32238) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C31966 * C126 - C113 * C119) * C812 +
            (C31966 * C140 - C113 * C127) * C806 + (C148 - C149) * C813 +
            (C150 - C151) * C807 + C168 * C814 + C169 * C32227) *
               C32273 +
           ((C966 - C967) * C812 + (C968 - C969) * C806 + (C476 - C475) * C813 +
            (C478 - C477) * C807 + C816 * C814 + C817 * C32227) *
               C32261 +
           C1000 * C32238) *
              C31925 * C235 +
          (((C967 - C966) * C812 + (C969 - C968) * C806 + (C475 - C476) * C813 +
            (C477 - C478) * C807 + (C479 - C480) * C814 +
            (C481 - C482) * C32227) *
               C32273 +
           ((C971 - C970) * C812 + (C973 - C972) * C806 + (C819 - C818) * C813 +
            (C821 - C820) * C807 + (C823 - C822) * C814 +
            (C825 - C824) * C32227) *
               C32261 +
           ((C978 - C979) * C812 + (C980 - C981) * C806 + (C982 - C983) * C813 +
            (C984 - C985) * C807 + (C986 - C987) * C814 +
            (C988 - C989) * C32227) *
               C32238) *
              C31925 * C236 +
          (C1000 * C32273 +
           ((C979 - C978) * C812 + (C981 - C980) * C806 + (C983 - C982) * C813 +
            (C985 - C984) * C807 + (C987 - C986) * C814 +
            (C989 - C988) * C32227) *
               C32261 +
           ((C31966 * C953 - C113 * C944) * C812 +
            (C31966 * C962 - C113 * C954) * C806 +
            (C31966 * C955 - C113 * C945) * C813 +
            (C31966 * C963 - C113 * C956) * C807 +
            (C31966 * C957 - C113 * C946) * C814 +
            (C31966 * C964 - C113 * C958) * C32227) *
               C32238) *
              C31925 * C237) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C31966 * C126 - C113 * C119) * C5248 +
            (C31966 * C140 - C113 * C127) * C32270 + (C148 - C149) * C5249 +
            (C150 - C151) * C32257 + C168 * C5250 + C169 * C32227) *
               C5245 +
           ((C966 - C967) * C5248 + (C968 - C969) * C32270 + C1297 * C5249 +
            C1298 * C32257 + C816 * C5250 + C817 * C32227) *
               C5246 +
           (C990 * C5248 + C991 * C32270 + C974 * C5249 + C975 * C32257 +
            C830 * C5250 + C831 * C32227) *
               C32238) *
              C31925 * C31911 * C110 +
          (((C149 - C148) * C5248 + (C151 - C150) * C32270 +
            (C153 - C152) * C5249 + (C155 - C154) * C32257 +
            (C157 - C156) * C5250 + (C159 - C158) * C32227) *
               C5245 +
           (C1299 * C5248 + C1300 * C32270 + C1301 * C5249 + C1302 * C32257 +
            C2987 * C5250 + C2988 * C32227) *
               C5246 +
           (C1303 * C5248 + C1304 * C32270 + C1305 * C5249 + C1306 * C32257 +
            (C826 - C827) * C5250 + (C828 - C829) * C32227) *
               C32238) *
              C31925 * C31911 * C111 +
          ((C168 * C5248 + C169 * C32270 + C170 * C5249 + C171 * C32257 +
            C172 * C5250 + C173 * C32227) *
               C5245 +
           (C816 * C5248 + C817 * C32270 + C2659 * C5249 + C2660 * C32257 +
            (C488 - C487) * C5250 + (C490 - C489) * C32227) *
               C5246 +
           (C830 * C5248 + C831 * C32270 + (C827 - C826) * C5249 +
            (C829 - C828) * C32257 + (C31966 * C267 - C113 * C248) * C5250 +
            (C31966 * C278 - C113 * C268) * C32227) *
               C32238) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C31966 * C126 - C113 * C119) * C5248 +
            (C31966 * C140 - C113 * C127) * C32270 + (C148 - C149) * C5249 +
            (C150 - C151) * C32257 + C168 * C5250 + C169 * C32227) *
               C5245 +
           ((C966 - C967) * C5248 + (C968 - C969) * C32270 + C1297 * C5249 +
            C1298 * C32257 + C816 * C5250 + C817 * C32227) *
               C5246 +
           C5372 * C32238) *
              C31925 * C235 +
          (((C967 - C966) * C5248 + (C969 - C968) * C32270 + C1299 * C5249 +
            C1300 * C32257 + C1301 * C5250 + C1302 * C32227) *
               C5245 +
           ((C971 - C970) * C5248 + (C973 - C972) * C32270 + C1303 * C5249 +
            C1304 * C32257 + C1305 * C5250 + C1306 * C32227) *
               C5246 +
           ((C978 - C979) * C5248 + (C980 - C981) * C32270 +
            (C982 - C983) * C5249 + (C984 - C985) * C32257 +
            (C986 - C987) * C5250 + (C988 - C989) * C32227) *
               C32238) *
              C31925 * C236 +
          (C5372 * C5245 +
           ((C979 - C978) * C5248 + (C981 - C980) * C32270 +
            (C983 - C982) * C5249 + (C985 - C984) * C32257 +
            (C987 - C986) * C5250 + (C989 - C988) * C32227) *
               C5246 +
           ((C31966 * C953 - C113 * C944) * C5248 +
            (C31966 * C962 - C113 * C954) * C32270 +
            (C31966 * C955 - C113 * C945) * C5249 +
            (C31966 * C963 - C113 * C956) * C32257 +
            (C31966 * C957 - C113 * C946) * C5250 +
            (C31966 * C964 - C113 * C958) * C32227) *
               C32238) *
              C31925 * C237) *
         C31899) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C31966 * C126 - C113 * C119) * C5988 +
            (C31966 * C140 - C113 * C127) * C31864) *
               C5983 +
           ((C966 - C967) * C5988 + (C968 - C969) * C31864) * C5984 +
           (C990 * C5988 + C991 * C31864) * C5985 +
           ((C979 - C978) * C5988 + (C981 - C980) * C31864) * C5986 +
           ((C31966 * C953 - C113 * C944) * C5988 +
            (C31966 * C962 - C113 * C954) * C31864) *
               C5987) *
              C31925 * C31911 * C110 +
          (((C149 - C148) * C5988 + (C151 - C150) * C31864) * C5983 +
           (C1299 * C5988 + C1300 * C31864) * C5984 +
           (C1303 * C5988 + C1304 * C31864) * C5985 +
           ((C982 - C983) * C5988 + (C984 - C985) * C31864) * C5986 +
           ((C113 * C945 - C31966 * C955) * C5988 +
            (C113 * C956 - C31966 * C963) * C31864) *
               C5987) *
              C31925 * C31911 * C111 +
          ((C168 * C5988 + C169 * C31864) * C5983 +
           (C816 * C5988 + C817 * C31864) * C5984 +
           (C830 * C5988 + C831 * C31864) * C5985 +
           ((C987 - C986) * C5988 + (C989 - C988) * C31864) * C5986 +
           ((C31966 * C957 - C113 * C946) * C5988 +
            (C31966 * C964 - C113 * C958) * C31864) *
               C5987) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C31966 * C126 - C113 * C119) * C5988 +
            (C31966 * C140 - C113 * C127) * C31864) *
               C5983 +
           ((C966 - C967) * C5988 + (C968 - C969) * C31864) * C5984 +
           C6072 * C5985 + C6077 * C5986 + C6080 * C5987) *
              C31925 * C235 +
          (((C967 - C966) * C5988 + (C969 - C968) * C31864) * C5983 +
           ((C971 - C970) * C5988 + (C973 - C972) * C31864) * C5984 +
           ((C978 - C979) * C5988 + (C980 - C981) * C31864) * C5985 +
           ((C6065 - C6064) * C5988 + (C6067 - C6066) * C31864) * C5986 +
           ((C6068 - C6069) * C5988 + (C6070 - C6071) * C31864) * C5987) *
              C31925 * C236 +
          (C6072 * C5983 + C6077 * C5984 + C6080 * C5985 +
           ((C6069 - C6068) * C5988 + (C6071 - C6070) * C31864) * C5986 +
           ((C31966 * C6055 - C113 * C6052) * C5988 +
            (C31966 * C6058 - C113 * C6056) * C31864) *
               C5987) *
              C31925 * C237) *
         C31899) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C9914 * C126 - C9917 * C119 + C9915 * C354 - C9918 * C344 +
            C32241 * C364 - C9919 * C349) *
               C5248 +
           (C9914 * C140 - C9917 * C127 + C9915 * C374 - C9918 * C355 +
            C32241 * C379 - C9919 * C365) *
               C32270 +
           (C9921 - C9922 + C9923 - C9924 + C9925 - C9926) * C5249 +
           (C9927 - C9928 + C9929 - C9930 + C9931 - C9932) * C32257 +
           C9965 * C5250 + C9966 * C32227) *
              C31955 * C31925 * C31911 * C110 +
          ((C9922 - C9921 + C9924 - C9923 + C9926 - C9925) * C5248 +
           (C9928 - C9927 + C9930 - C9929 + C9932 - C9931) * C32270 +
           (C9934 - C9933 + C9936 - C9935 + C9938 - C9937) * C5249 +
           (C9940 - C9939 + C9942 - C9941 + C9944 - C9943) * C32257 +
           (C9945 - C9946 + C9947 - C9948 + C9949 - C9950) * C5250 +
           (C9951 - C9952 + C9953 - C9954 + C9955 - C9956) * C32227) *
              C31955 * C31925 * C31911 * C111 +
          (C9965 * C5248 + C9966 * C32270 +
           (C9946 - C9945 + C9948 - C9947 + C9950 - C9949) * C5249 +
           (C9952 - C9951 + C9954 - C9953 + C9956 - C9955) * C32257 +
           (C9914 * C134 - C9917 * C123 + C9915 * C362 - C9918 * C348 +
            C32241 * C372 - C9919 * C353) *
               C5250 +
           (C9914 * C144 - C9917 * C135 + C9915 * C378 - C9918 * C363 +
            C32241 * C383 - C9919 * C373) *
               C32227) *
              C31955 * C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C9914 * C126 - C9917 * C119 + C9915 * C354 - C9918 * C344 +
            C32241 * C364 - C9919 * C349) *
               C5248 +
           (C9914 * C140 - C9917 * C127 + C9915 * C374 - C9918 * C355 +
            C32241 * C379 - C9919 * C365) *
               C32270 +
           (C9921 - C9922 + C9923 - C9924 + C9925 - C9926) * C5249 +
           (C9927 - C9928 + C9929 - C9930 + C9931 - C9932) * C32257 +
           C9965 * C5250 + C9966 * C32227) *
              C31955 * C31925 * C235 +
          ((C9917 * C239 - C9914 * C249 + C9918 * C676 - C9915 * C681 +
            C9919 * C1113 - C32241 * C1125) *
               C5248 +
           (C9917 * C250 - C9914 * C269 + C9918 * C682 - C9915 * C691 +
            C9919 * C1126 - C32241 * C1140) *
               C32270 +
           (C9917 * C240 - C9914 * C251 + C9918 * C677 - C9915 * C683 +
            C9919 * C1114 - C32241 * C1127) *
               C5249 +
           (C9917 * C252 - C9914 * C270 + C9918 * C684 - C9915 * C692 +
            C9919 * C1128 - C32241 * C1141) *
               C32257 +
           (C9917 * C241 - C9914 * C253 + C9918 * C678 - C9915 * C685 +
            C9919 * C1115 - C32241 * C1129) *
               C5250 +
           (C9917 * C254 - C9914 * C271 + C9918 * C686 - C9915 * C693 +
            C9919 * C1130 - C32241 * C1142) *
               C32227) *
              C31955 * C31925 * C236 +
          ((C9914 * C259 - C9917 * C244 + C9915 * C1119 - C9918 * C1110 +
            C32241 * C1131 - C9919 * C1116) *
               C5248 +
           (C9914 * C274 - C9917 * C260 + C9915 * C1137 - C9918 * C1120 +
            C32241 * C1143 - C9919 * C1132) *
               C32270 +
           (C9914 * C261 - C9917 * C245 + C9915 * C1121 - C9918 * C1111 +
            C32241 * C1133 - C9919 * C1117) *
               C5249 +
           (C9914 * C275 - C9917 * C262 + C9915 * C1138 - C9918 * C1122 +
            C32241 * C1144 - C9919 * C1134) *
               C32257 +
           (C9914 * C263 - C9917 * C246 + C9915 * C1123 - C9918 * C1112 +
            C32241 * C1135 - C9919 * C1118) *
               C5250 +
           (C9914 * C276 - C9917 * C264 + C9915 * C1139 - C9918 * C1124 +
            C32241 * C1145 - C9919 * C1136) *
               C32227) *
              C31955 * C31925 * C237) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C9914 * C126 - C9917 * C119 + C9915 * C354 - C9918 * C344 +
             C32241 * C364 - C9919 * C349) *
                C5988 +
            (C9914 * C140 - C9917 * C127 + C9915 * C374 - C9918 * C355 +
             C32241 * C379 - C9919 * C365) *
                C31864) *
               C32273 +
           ((C9914 * C249 - C9917 * C239 + C9915 * C681 - C9918 * C676 +
             C32241 * C1125 - C9919 * C1113) *
                C5988 +
            (C9914 * C269 - C9917 * C250 + C9915 * C691 - C9918 * C682 +
             C32241 * C1140 - C9919 * C1126) *
                C31864) *
               C32261 +
           ((C9914 * C259 - C9917 * C244 + C9915 * C1119 - C9918 * C1110 +
             C32241 * C1131 - C9919 * C1116) *
                C5988 +
            (C9914 * C274 - C9917 * C260 + C9915 * C1137 - C9918 * C1120 +
             C32241 * C1143 - C9919 * C1132) *
                C31864) *
               C32238) *
              C31925 * C31911 * C110 +
          (((C9922 - C9921 + C9924 - C9923 + C9926 - C9925) * C5988 +
            (C9928 - C9927 + C9930 - C9929 + C9932 - C9931) * C31864) *
               C32273 +
           ((C10333 - C10334 + C10335 - C10336 + C10337 - C10338) * C5988 +
            (C10339 - C10340 + C10341 - C10342 + C10343 - C10344) * C31864) *
               C32261 +
           ((C9917 * C245 - C9914 * C261 + C9918 * C1111 - C9915 * C1121 +
             C9919 * C1117 - C32241 * C1133) *
                C5988 +
            (C9917 * C262 - C9914 * C275 + C9918 * C1122 - C9915 * C1138 +
             C9919 * C1134 - C32241 * C1144) *
                C31864) *
               C32238) *
              C31925 * C31911 * C111 +
          ((C9965 * C5988 + C9966 * C31864) * C32273 +
           ((C10346 - C10345 + C10348 - C10347 + C10350 - C10349) * C5988 +
            (C10352 - C10351 + C10354 - C10353 + C10356 - C10355) * C31864) *
               C32261 +
           ((C9914 * C263 - C9917 * C246 + C9915 * C1123 - C9918 * C1112 +
             C32241 * C1135 - C9919 * C1118) *
                C5988 +
            (C9914 * C276 - C9917 * C264 + C9915 * C1139 - C9918 * C1124 +
             C32241 * C1145 - C9919 * C1136) *
                C31864) *
               C32238) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C9914 * C126 - C9917 * C119 + C9915 * C354 - C9918 * C344 +
             C32241 * C364 - C9919 * C349) *
                C5988 +
            (C9914 * C140 - C9917 * C127 + C9915 * C374 - C9918 * C355 +
             C32241 * C379 - C9919 * C365) *
                C31864) *
               C32273 +
           ((C10893 - C10894 + C10895 - C10896 + C10897 - C10898) * C5988 +
            (C10899 - C10900 + C10901 - C10902 + C10903 - C10904) * C31864) *
               C32261 +
           C10941 * C32238) *
              C31925 * C235 +
          (((C10894 - C10893 + C10896 - C10895 + C10898 - C10897) * C5988 +
            (C10900 - C10899 + C10902 - C10901 + C10904 - C10903) * C31864) *
               C32273 +
           ((C10906 - C10905 + C10908 - C10907 + C10910 - C10909) * C5988 +
            (C10912 - C10911 + C10914 - C10913 + C10916 - C10915) * C31864) *
               C32261 +
           ((C10917 - C10918 + C10919 - C10920 + C10921 - C10922) * C5988 +
            (C10923 - C10924 + C10925 - C10926 + C10927 - C10928) * C31864) *
               C32238) *
              C31925 * C236 +
          (C10941 * C32273 +
           ((C10918 - C10917 + C10920 - C10919 + C10922 - C10921) * C5988 +
            (C10924 - C10923 + C10926 - C10925 + C10928 - C10927) * C31864) *
               C32261 +
           ((C9914 * C953 - C9917 * C944 + C9915 * C6145 - C9918 * C6142 +
             C32241 * C6149 - C9919 * C6144) *
                C5988 +
            (C9914 * C962 - C9917 * C954 + C9915 * C6151 - C9918 * C6146 +
             C32241 * C6153 - C9919 * C6150) *
                C31864) *
               C32238) *
              C31925 * C237) *
         C31899) /
            (p * q * std::sqrt(p + q));
    d2ee[75] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C19912 * C126 - C19914 * C119 + C32053 * C354 - C19915 * C344) *
                 C30885 +
             (C19912 * C140 - C19914 * C127 + C32053 * C374 - C19915 * C355) *
                 C31869 +
             (C19917 - C19918 + C19919 - C19920) * C30881 +
             (C19921 - C19922 + C19923 - C19924) * C31877 + C19957 * C30891 +
             C19958 * C17091) *
                C32207 +
            ((C20903 - C20904 + C20905 - C20906) * C30885 +
             (C20907 - C20908 + C20909 - C20910) * C31869 + C21306 * C30881 +
             C21307 * C31877 + C22638 * C30891 + C22639 * C17091) *
                C32013) *
               C31925 * C466 +
           (((C20904 - C20903 + C20906 - C20905) * C30885 +
             (C20908 - C20907 + C20910 - C20909) * C31869 + C21308 * C30881 +
             C21309 * C31877 + C23130 * C30891 + C23131 * C17091) *
                C32207 +
            ((C20912 - C20911 + C20914 - C20913) * C30885 +
             (C20916 - C20915 + C20918 - C20917) * C31869 + C21310 * C30881 +
             C21311 * C31877 + (C20749 - C20750 + C20751 - C20752) * C30891 +
             (C20753 - C20754 + C20755 - C20756) * C17091) *
                C32013) *
               C31925 * C467) *
              C468 +
          ((((C19918 - C19917 + C19920 - C19919) * C30885 +
             (C19922 - C19921 + C19924 - C19923) * C31869 +
             (C19926 - C19925 + C19928 - C19927) * C30881 +
             (C19930 - C19929 + C19932 - C19931) * C31877 +
             (C19934 - C19933 + C19936 - C19935) * C30891 +
             (C19938 - C19937 + C19940 - C19939) * C17091) *
                C32207 +
            (C21308 * C30885 + C21309 * C31869 + C23130 * C30881 +
             C23131 * C31877 + (C20303 - C20304 + C20305 - C20306) * C30891 +
             (C20307 - C20308 + C20309 - C20310) * C17091) *
                C32013) *
               C31925 * C466 +
           ((C21306 * C30885 + C21307 * C31869 + C22638 * C30881 +
             C22639 * C31877 + (C20304 - C20303 + C20306 - C20305) * C30891 +
             (C20308 - C20307 + C20310 - C20309) * C17091) *
                C32207 +
            (C20943 * C30885 + C20944 * C31869 +
             (C20750 - C20749 + C20752 - C20751) * C30881 +
             (C20754 - C20753 + C20756 - C20755) * C31877 +
             (C19912 * C265 - C19914 * C247 + C32053 * C1453 - C19915 * C1452) *
                 C30891 +
             (C19912 * C277 - C19914 * C266 + C32053 * C1455 - C19915 * C1454) *
                 C17091) *
                C32013) *
               C31925 * C467) *
              C469)) /
        (p * q * std::sqrt(p + q));
    d2ee[76] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C19912 * C126 - C19914 * C119 + C32053 * C354 - C19915 * C344) *
                 C30885 +
             (C19912 * C140 - C19914 * C127 + C32053 * C374 - C19915 * C355) *
                 C31869 +
             (C19917 - C19918 + C19919 - C19920) * C30881 +
             (C19921 - C19922 + C19923 - C19924) * C31877 + C19957 * C30891 +
             C19958 * C17091) *
                C32207 +
            ((C20903 - C20904 + C20905 - C20906) * C30885 +
             (C20907 - C20908 + C20909 - C20910) * C31869 + C21306 * C30881 +
             C21307 * C31877 + C22638 * C30891 + C22639 * C17091) *
                C32013) *
               C572 +
           (((C19914 * C344 - C19912 * C354 + C19915 * C349 - C32053 * C364) *
                 C30885 +
             (C19914 * C355 - C19912 * C374 + C19915 * C365 - C32053 * C379) *
                 C31869 +
             (C20441 - C20442 + C20443 - C20444) * C30881 +
             (C20445 - C20446 + C20447 - C20448) * C31877 +
             (C20449 - C20450 + C20451 - C20452) * C30891 +
             (C20453 - C20454 + C20455 - C20456) * C17091) *
                C32207 +
            ((C21716 - C21717 + C21718 - C21719) * C30885 +
             (C21720 - C21721 + C21722 - C21723) * C31869 +
             (C21506 - C21507 + C21508 - C21509) * C30881 +
             (C21510 - C21511 + C21512 - C21513) * C31877 +
             (C23326 - C23327 + C23328 - C23329) * C30891 +
             (C23330 - C23331 + C23332 - C23333) * C17091) *
                C32013) *
               C573) *
              C466 +
          ((((C20904 - C20903 + C20906 - C20905) * C30885 +
             (C20908 - C20907 + C20910 - C20909) * C31869 + C21308 * C30881 +
             C21309 * C31877 + C23130 * C30891 + C23131 * C17091) *
                C32207 +
            ((C20912 - C20911 + C20914 - C20913) * C30885 +
             (C20916 - C20915 + C20918 - C20917) * C31869 + C21310 * C30881 +
             C21311 * C31877 + (C20749 - C20750 + C20751 - C20752) * C30891 +
             (C20753 - C20754 + C20755 - C20756) * C17091) *
                C32013) *
               C572 +
           (((C21717 - C21716 + C21719 - C21718) * C30885 +
             (C21721 - C21720 + C21723 - C21722) * C31869 +
             (C21507 - C21506 + C21509 - C21508) * C30881 +
             (C21511 - C21510 + C21513 - C21512) * C31877 +
             (C23327 - C23326 + C23329 - C23328) * C30891 +
             (C23331 - C23330 + C23333 - C23332) * C17091) *
                C32207 +
            ((C21725 - C21724 + C21727 - C21726) * C30885 +
             (C21729 - C21728 + C21731 - C21730) * C31869 +
             (C21515 - C21514 + C21517 - C21516) * C30881 +
             (C21519 - C21518 + C21521 - C21520) * C31877 +
             (C19912 * C1123 - C19914 * C1112 + C32053 * C1135 -
              C19915 * C1118) *
                 C30891 +
             (C19912 * C1139 - C19914 * C1124 + C32053 * C1145 -
              C19915 * C1136) *
                 C17091) *
                C32013) *
               C573) *
              C467) *
         C31899) /
        (p * q * std::sqrt(p + q));
    d2ee[77] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C19912 * C126 - C19914 * C119 + C32053 * C354 - C19915 * C344) *
                C30885 +
            (C19912 * C140 - C19914 * C127 + C32053 * C374 - C19915 * C355) *
                C31869 +
            (C19917 - C19918 + C19919 - C19920) * C30881 +
            (C19921 - C19922 + C19923 - C19924) * C31877 + C19957 * C30891 +
            C19958 * C17091) *
               C32207 +
           ((C20903 - C20904 + C20905 - C20906) * C30885 +
            (C20907 - C20908 + C20909 - C20910) * C31869 + C21306 * C30881 +
            C21307 * C31877 + C22638 * C30891 + C22639 * C17091) *
               C32013) *
              C31925 * C235 +
          (((C20904 - C20903 + C20906 - C20905) * C30885 +
            (C20908 - C20907 + C20910 - C20909) * C31869 + C21308 * C30881 +
            C21309 * C31877 + (C20295 - C20296 + C20297 - C20298) * C30891 +
            (C20299 - C20300 + C20301 - C20302) * C17091) *
               C32207 +
           ((C20912 - C20911 + C20914 - C20913) * C30885 +
            (C20916 - C20915 + C20918 - C20917) * C31869 + C21310 * C30881 +
            C21311 * C31877 + (C20749 - C20750 + C20751 - C20752) * C30891 +
            (C20753 - C20754 + C20755 - C20756) * C17091) *
               C32013) *
              C31925 * C236 +
          ((C20945 * C30885 + C20946 * C31869 + C20943 * C30881 +
            C20944 * C31877 + (C20750 - C20749 + C20752 - C20751) * C30891 +
            (C20754 - C20753 + C20756 - C20755) * C17091) *
               C32207 +
           ((C20924 - C20923 + C20926 - C20925) * C30885 +
            (C20928 - C20927 + C20930 - C20929) * C31869 +
            (C20932 - C20931 + C20934 - C20933) * C30881 +
            (C20936 - C20935 + C20938 - C20937) * C31877 +
            (C19912 * C951 - C19914 * C943 + C32053 * C1625 - C19915 * C1620) *
                C30891 +
            (C19912 * C961 - C19914 * C952 + C32053 * C1629 - C19915 * C1626) *
                C17091) *
               C32013) *
              C31925 * C237) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C19912 * C126 - C19914 * C119 + C32053 * C354 - C19915 * C344) *
                C30885 +
            (C19912 * C140 - C19914 * C127 + C32053 * C374 - C19915 * C355) *
                C31869 +
            (C19917 - C19918 + C19919 - C19920) * C30881 +
            (C19921 - C19922 + C19923 - C19924) * C31877 + C19957 * C30891 +
            C19958 * C17091) *
               C32207 +
           ((C20903 - C20904 + C20905 - C20906) * C30885 +
            (C20907 - C20908 + C20909 - C20910) * C31869 + C21306 * C30881 +
            C21307 * C31877 + C22638 * C30891 + C22639 * C17091) *
               C32013) *
              C31925 * C31911 * C110 +
          (((C19918 - C19917 + C19920 - C19919) * C30885 +
            (C19922 - C19921 + C19924 - C19923) * C31869 +
            (C19926 - C19925 + C19928 - C19927) * C30881 +
            (C19930 - C19929 + C19932 - C19931) * C31877 +
            (C19934 - C19933 + C19936 - C19935) * C30891 +
            (C19938 - C19937 + C19940 - C19939) * C17091) *
               C32207 +
           (C21308 * C30885 + C21309 * C31869 +
            (C20295 - C20296 + C20297 - C20298) * C30881 +
            (C20299 - C20300 + C20301 - C20302) * C31877 +
            (C20303 - C20304 + C20305 - C20306) * C30891 +
            (C20307 - C20308 + C20309 - C20310) * C17091) *
               C32013) *
              C31925 * C31911 * C111 +
          ((C19957 * C30885 + C19958 * C31869 + C19959 * C30881 +
            C19960 * C31877 + (C19942 - C19941 + C19944 - C19943) * C30891 +
            (C19946 - C19945 + C19948 - C19947) * C17091) *
               C32207 +
           (C22638 * C30885 + C22639 * C31869 +
            (C20304 - C20303 + C20306 - C20305) * C30881 +
            (C20308 - C20307 + C20310 - C20309) * C31877 +
            (C19912 * C257 - C19914 * C243 + C32053 * C689 - C19915 * C680) *
                C30891 +
            (C19912 * C273 - C19914 * C258 + C32053 * C695 - C19915 * C690) *
                C17091) *
               C32013) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C19912 * C126 - C19914 * C119 + C32053 * C354 - C19915 * C344) *
                C30885 +
            (C19912 * C140 - C19914 * C127 + C32053 * C374 - C19915 * C355) *
                C31869 +
            (C19917 - C19918 + C19919 - C19920) * C30881 +
            (C19921 - C19922 + C19923 - C19924) * C31877 + C19957 * C30891 +
            C19958 * C17091) *
               C32207 +
           ((C20903 - C20904 + C20905 - C20906) * C30885 +
            (C20907 - C20908 + C20909 - C20910) * C31869 + C21306 * C30881 +
            C21307 * C31877 + C22638 * C30891 + C22639 * C17091) *
               C32013) *
              C341 +
          (((C19914 * C344 - C19912 * C354 + C19915 * C349 - C32053 * C364) *
                C30885 +
            (C19914 * C355 - C19912 * C374 + C19915 * C365 - C32053 * C379) *
                C31869 +
            (C20441 - C20442 + C20443 - C20444) * C30881 +
            (C20445 - C20446 + C20447 - C20448) * C31877 +
            (C20449 - C20450 + C20451 - C20452) * C30891 +
            (C20453 - C20454 + C20455 - C20456) * C17091) *
               C32207 +
           ((C21716 - C21717 + C21718 - C21719) * C30885 +
            (C21720 - C21721 + C21722 - C21723) * C31869 +
            (C21506 - C21507 + C21508 - C21509) * C30881 +
            (C21510 - C21511 + C21512 - C21513) * C31877 +
            (C19914 * C678 - C19912 * C685 + C19915 * C1115 - C32053 * C1129) *
                C30891 +
            (C19914 * C686 - C19912 * C693 + C19915 * C1130 - C32053 * C1142) *
                C17091) *
               C32013) *
              C342 +
          (((C19912 * C364 - C19914 * C349 + C32053 * C2026 - C19915 * C2020) *
                C30885 +
            (C19912 * C379 - C19914 * C365 + C32053 * C2038 - C19915 * C2027) *
                C31869 +
            (C19912 * C366 - C19914 * C350 + C32053 * C2028 - C19915 * C2021) *
                C30881 +
            (C19912 * C380 - C19914 * C367 + C32053 * C2039 - C19915 * C2029) *
                C31877 +
            (C19912 * C368 - C19914 * C351 + C32053 * C2030 - C19915 * C2022) *
                C30891 +
            (C19912 * C381 - C19914 * C369 + C32053 * C2040 - C19915 * C2031) *
                C17091) *
               C32207 +
           ((C19912 * C1125 - C19914 * C1113 + C32053 * C2541 -
             C19915 * C2538) *
                C30885 +
            (C19912 * C1140 - C19914 * C1126 + C32053 * C2547 -
             C19915 * C2542) *
                C31869 +
            (C19912 * C1127 - C19914 * C1114 + C32053 * C2543 -
             C19915 * C2539) *
                C30881 +
            (C19912 * C1141 - C19914 * C1128 + C32053 * C2548 -
             C19915 * C2544) *
                C31877 +
            (C19912 * C1129 - C19914 * C1115 + C32053 * C2545 -
             C19915 * C2540) *
                C30891 +
            (C19912 * C1142 - C19914 * C1130 + C32053 * C2549 -
             C19915 * C2546) *
                C17091) *
               C32013) *
              C343) *
         C31911 * C31899) /
            (p * q * std::sqrt(p + q));
    d2ee[78] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C19912 * C126 - C19914 * C119 + C32053 * C354 - C19915 * C344) *
                 C30885 +
             (C19912 * C140 - C19914 * C127 + C32053 * C374 - C19915 * C355) *
                 C31869 +
             (C19917 - C19918 + C19919 - C19920) * C30881 +
             (C19921 - C19922 + C19923 - C19924) * C31877 + C19957 * C30891 +
             C19958 * C17091) *
                C32207 +
            ((C20903 - C20904 + C20905 - C20906) * C30885 +
             (C20907 - C20908 + C20909 - C20910) * C31869 + C21306 * C30881 +
             C21307 * C31877 + C22638 * C30891 + C22639 * C17091) *
                C32013) *
               C572 +
           (((C19914 * C344 - C19912 * C354 + C19915 * C349 - C32053 * C364) *
                 C30885 +
             (C19914 * C355 - C19912 * C374 + C19915 * C365 - C32053 * C379) *
                 C31869 +
             (C20441 - C20442 + C20443 - C20444) * C30881 +
             (C20445 - C20446 + C20447 - C20448) * C31877 +
             (C20449 - C20450 + C20451 - C20452) * C30891 +
             (C20453 - C20454 + C20455 - C20456) * C17091) *
                C32207 +
            ((C21716 - C21717 + C21718 - C21719) * C30885 +
             (C21720 - C21721 + C21722 - C21723) * C31869 +
             (C21506 - C21507 + C21508 - C21509) * C30881 +
             (C21510 - C21511 + C21512 - C21513) * C31877 +
             (C23326 - C23327 + C23328 - C23329) * C30891 +
             (C23330 - C23331 + C23332 - C23333) * C17091) *
                C32013) *
               C573) *
              C31911 * C468 +
          ((((C19918 - C19917 + C19920 - C19919) * C30885 +
             (C19922 - C19921 + C19924 - C19923) * C31869 +
             (C19926 - C19925 + C19928 - C19927) * C30881 +
             (C19930 - C19929 + C19932 - C19931) * C31877 +
             (C19934 - C19933 + C19936 - C19935) * C30891 +
             (C19938 - C19937 + C19940 - C19939) * C17091) *
                C32207 +
            (C21308 * C30885 + C21309 * C31869 + C23130 * C30881 +
             C23131 * C31877 + (C20303 - C20304 + C20305 - C20306) * C30891 +
             (C20307 - C20308 + C20309 - C20310) * C17091) *
                C32013) *
               C572 +
           (((C20442 - C20441 + C20444 - C20443) * C30885 +
             (C20446 - C20445 + C20448 - C20447) * C31869 +
             (C20450 - C20449 + C20452 - C20451) * C30881 +
             (C20454 - C20453 + C20456 - C20455) * C31877 +
             (C20458 - C20457 + C20460 - C20459) * C30891 +
             (C20462 - C20461 + C20464 - C20463) * C17091) *
                C32207 +
            ((C21507 - C21506 + C21509 - C21508) * C30885 +
             (C21511 - C21510 + C21513 - C21512) * C31869 +
             (C23327 - C23326 + C23329 - C23328) * C30881 +
             (C23331 - C23330 + C23333 - C23332) * C31877 +
             (C19912 * C687 - C19914 * C679 + C32053 * C2191 - C19915 * C2190) *
                 C30891 +
             (C19912 * C694 - C19914 * C688 + C32053 * C2193 - C19915 * C2192) *
                 C17091) *
                C32013) *
               C573) *
              C31911 * C469)) /
        (p * q * std::sqrt(p + q));
    d2ee[79] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19912 * C126 - C19914 * C119 + C32053 * C354 - C19915 * C344) *
                C30885 +
            (C19912 * C140 - C19914 * C127 + C32053 * C374 - C19915 * C355) *
                C31869 +
            (C19917 - C19918 + C19919 - C19920) * C30881 +
            (C19921 - C19922 + C19923 - C19924) * C31877 + C19957 * C30891 +
            C19958 * C17091) *
               C32207 +
           ((C20903 - C20904 + C20905 - C20906) * C30885 +
            (C20907 - C20908 + C20909 - C20910) * C31869 + C21306 * C30881 +
            C21307 * C31877 + C22638 * C30891 + C22639 * C17091) *
               C32013) *
              C31925 * C31911 * C110 +
          (((C19918 - C19917 + C19920 - C19919) * C30885 +
            (C19922 - C19921 + C19924 - C19923) * C31869 +
            (C19926 - C19925 + C19928 - C19927) * C30881 +
            (C19930 - C19929 + C19932 - C19931) * C31877 +
            (C19934 - C19933 + C19936 - C19935) * C30891 +
            (C19938 - C19937 + C19940 - C19939) * C17091) *
               C32207 +
           (C21308 * C30885 + C21309 * C31869 +
            (C20295 - C20296 + C20297 - C20298) * C30881 +
            (C20299 - C20300 + C20301 - C20302) * C31877 +
            (C20303 - C20304 + C20305 - C20306) * C30891 +
            (C20307 - C20308 + C20309 - C20310) * C17091) *
               C32013) *
              C31925 * C31911 * C111 +
          ((C19957 * C30885 + C19958 * C31869 + C19959 * C30881 +
            C19960 * C31877 + (C19942 - C19941 + C19944 - C19943) * C30891 +
            (C19946 - C19945 + C19948 - C19947) * C17091) *
               C32207 +
           (C22638 * C30885 + C22639 * C31869 +
            (C20304 - C20303 + C20306 - C20305) * C30881 +
            (C20308 - C20307 + C20310 - C20309) * C31877 +
            (C19912 * C257 - C19914 * C243 + C32053 * C689 - C19915 * C680) *
                C30891 +
            (C19912 * C273 - C19914 * C258 + C32053 * C695 - C19915 * C690) *
                C17091) *
               C32013) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19912 * C126 - C19914 * C119 + C32053 * C354 - C19915 * C344) *
                C30885 +
            (C19912 * C140 - C19914 * C127 + C32053 * C374 - C19915 * C355) *
                C31869 +
            (C19917 - C19918 + C19919 - C19920) * C30881 +
            (C19921 - C19922 + C19923 - C19924) * C31877 + C19957 * C30891 +
            C19958 * C17091) *
               C32207 +
           ((C20903 - C20904 + C20905 - C20906) * C30885 +
            (C20907 - C20908 + C20909 - C20910) * C31869 + C21306 * C30881 +
            C21307 * C31877 + C22638 * C30891 + C22639 * C17091) *
               C32013) *
              C31925 * C235 +
          (((C20904 - C20903 + C20906 - C20905) * C30885 +
            (C20908 - C20907 + C20910 - C20909) * C31869 + C21308 * C30881 +
            C21309 * C31877 + (C20295 - C20296 + C20297 - C20298) * C30891 +
            (C20299 - C20300 + C20301 - C20302) * C17091) *
               C32207 +
           ((C20912 - C20911 + C20914 - C20913) * C30885 +
            (C20916 - C20915 + C20918 - C20917) * C31869 + C21310 * C30881 +
            C21311 * C31877 + (C20749 - C20750 + C20751 - C20752) * C30891 +
            (C20753 - C20754 + C20755 - C20756) * C17091) *
               C32013) *
              C31925 * C236 +
          ((C20945 * C30885 + C20946 * C31869 + C20943 * C30881 +
            C20944 * C31877 + (C20750 - C20749 + C20752 - C20751) * C30891 +
            (C20754 - C20753 + C20756 - C20755) * C17091) *
               C32207 +
           ((C20924 - C20923 + C20926 - C20925) * C30885 +
            (C20928 - C20927 + C20930 - C20929) * C31869 +
            (C20932 - C20931 + C20934 - C20933) * C30881 +
            (C20936 - C20935 + C20938 - C20937) * C31877 +
            (C19912 * C951 - C19914 * C943 + C32053 * C1625 - C19915 * C1620) *
                C30891 +
            (C19912 * C961 - C19914 * C952 + C32053 * C1629 - C19915 * C1626) *
                C17091) *
               C32013) *
              C31925 * C237) *
         C31899) /
            (p * q * std::sqrt(p + q));
    d2ee[80] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C32049 * C126 - C31010 * C119 + C32056 * C354 - C31002 * C344 +
              C23639 * C364 - C31016 * C349) *
                 C15325 +
             (C32049 * C140 - C31010 * C127 + C32056 * C374 - C31002 * C355 +
              C23639 * C379 - C31016 * C365) *
                 C15319 +
             (C23644 - C23645 + C23646 - C23647 + C23648 - C23649) * C15326 +
             (C23650 - C23651 + C23652 - C23653 + C23654 - C23655) * C31874) *
                C32207 +
            ((C24688 - C24689 + C24690 - C24691 + C24692 - C24693) * C15325 +
             (C24694 - C24695 + C24696 - C24697 + C24698 - C24699) * C15319 +
             C25080 * C15326 + C25081 * C31874) *
                C32013) *
               C31925 * C466 +
           (((C24689 - C24688 + C24691 - C24690 + C24693 - C24692) * C15325 +
             (C24695 - C24694 + C24697 - C24696 + C24699 - C24698) * C15319 +
             C25082 * C15326 + C25083 * C31874) *
                C32207 +
            ((C24700 - C24701 + C24702 - C24703 + C24704 - C24705) * C15325 +
             (C24706 - C24707 + C24708 - C24709 + C24710 - C24711) * C15319 +
             (C24712 - C24713 + C24714 - C24715 + C24716 - C24717) * C15326 +
             (C24718 - C24719 + C24720 - C24721 + C24722 - C24723) * C31874) *
                C32013) *
               C31925 * C467) *
              C468 +
          ((((C23645 - C23644 + C23647 - C23646 + C23649 - C23648) * C15325 +
             (C23651 - C23650 + C23653 - C23652 + C23655 - C23654) * C15319 +
             (C23657 - C23656 + C23659 - C23658 + C23661 - C23660) * C15326 +
             (C23663 - C23662 + C23665 - C23664 + C23667 - C23666) * C31874) *
                C32207 +
            (C25082 * C15325 + C25083 * C15319 +
             (C24068 - C24069 + C24070 - C24071 + C24072 - C24073) * C15326 +
             (C24074 - C24075 + C24076 - C24077 + C24078 - C24079) * C31874) *
                C32013) *
               C31925 * C466 +
           ((C25080 * C15325 + C25081 * C15319 +
             (C24069 - C24068 + C24071 - C24070 + C24073 - C24072) * C15326 +
             (C24075 - C24074 + C24077 - C24076 + C24079 - C24078) * C31874) *
                C32207 +
            ((C24713 - C24712 + C24715 - C24714 + C24717 - C24716) * C15325 +
             (C24719 - C24718 + C24721 - C24720 + C24723 - C24722) * C15319 +
             (C32049 * C263 - C31010 * C246 + C32056 * C1123 - C31002 * C1112 +
              C23639 * C1135 - C31016 * C1118) *
                 C15326 +
             (C32049 * C276 - C31010 * C264 + C32056 * C1139 - C31002 * C1124 +
              C23639 * C1145 - C31016 * C1136) *
                 C31874) *
                C32013) *
               C31925 * C467) *
              C469)) /
        (p * q * std::sqrt(p + q));
    d2ee[81] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C32049 * C126 - C31010 * C119 + C32056 * C354 - C31002 * C344 +
              C23639 * C364 - C31016 * C349) *
                 C15325 +
             (C32049 * C140 - C31010 * C127 + C32056 * C374 - C31002 * C355 +
              C23639 * C379 - C31016 * C365) *
                 C15319 +
             (C23644 - C23645 + C23646 - C23647 + C23648 - C23649) * C15326 +
             (C23650 - C23651 + C23652 - C23653 + C23654 - C23655) * C31874) *
                C32207 +
            ((C24688 - C24689 + C24690 - C24691 + C24692 - C24693) * C15325 +
             (C24694 - C24695 + C24696 - C24697 + C24698 - C24699) * C15319 +
             C25080 * C15326 + C25081 * C31874) *
                C32013) *
               C572 +
           (((C31010 * C344 - C32049 * C354 + C31002 * C349 - C32056 * C364 +
              C31016 * C2020 - C23639 * C2026) *
                 C15325 +
             (C31010 * C355 - C32049 * C374 + C31002 * C365 - C32056 * C379 +
              C31016 * C2027 - C23639 * C2038) *
                 C15319 +
             (C24226 - C24227 + C24228 - C24229 + C24230 - C24231) * C15326 +
             (C24232 - C24233 + C24234 - C24235 + C24236 - C24237) * C31874) *
                C32207 +
            ((C25484 - C25485 + C25486 - C25487 + C25488 - C25489) * C15325 +
             (C25490 - C25491 + C25492 - C25493 + C25494 - C25495) * C15319 +
             (C25278 - C25279 + C25280 - C25281 + C25282 - C25283) * C15326 +
             (C25284 - C25285 + C25286 - C25287 + C25288 - C25289) * C31874) *
                C32013) *
               C573) *
              C466 +
          ((((C24689 - C24688 + C24691 - C24690 + C24693 - C24692) * C15325 +
             (C24695 - C24694 + C24697 - C24696 + C24699 - C24698) * C15319 +
             C25082 * C15326 + C25083 * C31874) *
                C32207 +
            ((C24700 - C24701 + C24702 - C24703 + C24704 - C24705) * C15325 +
             (C24706 - C24707 + C24708 - C24709 + C24710 - C24711) * C15319 +
             (C24712 - C24713 + C24714 - C24715 + C24716 - C24717) * C15326 +
             (C24718 - C24719 + C24720 - C24721 + C24722 - C24723) * C31874) *
                C32013) *
               C572 +
           (((C25485 - C25484 + C25487 - C25486 + C25489 - C25488) * C15325 +
             (C25491 - C25490 + C25493 - C25492 + C25495 - C25494) * C15319 +
             (C25279 - C25278 + C25281 - C25280 + C25283 - C25282) * C15326 +
             (C25285 - C25284 + C25287 - C25286 + C25289 - C25288) * C31874) *
                C32207 +
            ((C32049 * C1119 - C31010 * C1110 + C32056 * C1131 -
              C31002 * C1116 + C23639 * C6806 - C31016 * C6803) *
                 C15325 +
             (C32049 * C1137 - C31010 * C1120 + C32056 * C1143 -
              C31002 * C1132 + C23639 * C6812 - C31016 * C6807) *
                 C15319 +
             (C32049 * C1121 - C31010 * C1111 + C32056 * C1133 -
              C31002 * C1117 + C23639 * C7124 - C31016 * C7123) *
                 C15326 +
             (C32049 * C1138 - C31010 * C1122 + C32056 * C1144 -
              C31002 * C1134 + C23639 * C7126 - C31016 * C7125) *
                 C31874) *
                C32013) *
               C573) *
              C467) *
         C31899) /
        (p * q * std::sqrt(p + q));
    d2ee[82] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C32049 * C126 - C31010 * C119 + C32056 * C354 - C31002 * C344 +
             C23639 * C364 - C31016 * C349) *
                C15325 +
            (C32049 * C140 - C31010 * C127 + C32056 * C374 - C31002 * C355 +
             C23639 * C379 - C31016 * C365) *
                C15319 +
            (C23644 - C23645 + C23646 - C23647 + C23648 - C23649) * C15326 +
            (C23650 - C23651 + C23652 - C23653 + C23654 - C23655) * C31874) *
               C32207 +
           ((C24688 - C24689 + C24690 - C24691 + C24692 - C24693) * C15325 +
            (C24694 - C24695 + C24696 - C24697 + C24698 - C24699) * C15319 +
            (C24057 - C24056 + C24059 - C24058 + C24061 - C24060) * C15326 +
            (C24063 - C24062 + C24065 - C24064 + C24067 - C24066) * C31874) *
               C32013) *
              C31925 * C235 +
          (((C24689 - C24688 + C24691 - C24690 + C24693 - C24692) * C15325 +
            (C24695 - C24694 + C24697 - C24696 + C24699 - C24698) * C15319 +
            (C24056 - C24057 + C24058 - C24059 + C24060 - C24061) * C15326 +
            (C24062 - C24063 + C24064 - C24065 + C24066 - C24067) * C31874) *
               C32207 +
           ((C24700 - C24701 + C24702 - C24703 + C24704 - C24705) * C15325 +
            (C24706 - C24707 + C24708 - C24709 + C24710 - C24711) * C15319 +
            (C24712 - C24713 + C24714 - C24715 + C24716 - C24717) * C15326 +
            (C24718 - C24719 + C24720 - C24721 + C24722 - C24723) * C31874) *
               C32013) *
              C31925 * C236 +
          (((C24701 - C24700 + C24703 - C24702 + C24705 - C24704) * C15325 +
            (C24707 - C24706 + C24709 - C24708 + C24711 - C24710) * C15319 +
            (C24713 - C24712 + C24715 - C24714 + C24717 - C24716) * C15326 +
            (C24719 - C24718 + C24721 - C24720 + C24723 - C24722) * C31874) *
               C32207 +
           ((C32049 * C947 - C31010 * C941 + C32056 * C1621 - C31002 * C1618 +
             C23639 * C6147 - C31016 * C6143) *
                C15325 +
            (C32049 * C959 - C31010 * C948 + C32056 * C1627 - C31002 * C1622 +
             C23639 * C6152 - C31016 * C6148) *
                C15319 +
            (C32049 * C949 - C31010 * C942 + C32056 * C1623 - C31002 * C1619 +
             C23639 * C6962 - C31016 * C6961) *
                C15326 +
            (C32049 * C960 - C31010 * C950 + C32056 * C1628 - C31002 * C1624 +
             C23639 * C6964 - C31016 * C6963) *
                C31874) *
               C32013) *
              C31925 * C237) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C32049 * C126 - C31010 * C119 + C32056 * C354 - C31002 * C344 +
             C23639 * C364 - C31016 * C349) *
                C15325 +
            (C32049 * C140 - C31010 * C127 + C32056 * C374 - C31002 * C355 +
             C23639 * C379 - C31016 * C365) *
                C15319 +
            (C23644 - C23645 + C23646 - C23647 + C23648 - C23649) * C15326 +
            (C23650 - C23651 + C23652 - C23653 + C23654 - C23655) * C31874) *
               C32207 +
           ((C32049 * C249 - C31010 * C239 + C32056 * C681 - C31002 * C676 +
             C23639 * C1125 - C31016 * C1113) *
                C15325 +
            (C32049 * C269 - C31010 * C250 + C32056 * C691 - C31002 * C682 +
             C23639 * C1140 - C31016 * C1126) *
                C15319 +
            (C24057 - C24056 + C24059 - C24058 + C24061 - C24060) * C15326 +
            (C24063 - C24062 + C24065 - C24064 + C24067 - C24066) * C31874) *
               C32013) *
              C31925 * C31911 * C110 +
          (((C23645 - C23644 + C23647 - C23646 + C23649 - C23648) * C15325 +
            (C23651 - C23650 + C23653 - C23652 + C23655 - C23654) * C15319 +
            (C23657 - C23656 + C23659 - C23658 + C23661 - C23660) * C15326 +
            (C23663 - C23662 + C23665 - C23664 + C23667 - C23666) * C31874) *
               C32207 +
           ((C24056 - C24057 + C24058 - C24059 + C24060 - C24061) * C15325 +
            (C24062 - C24063 + C24064 - C24065 + C24066 - C24067) * C15319 +
            (C24068 - C24069 + C24070 - C24071 + C24072 - C24073) * C15326 +
            (C24074 - C24075 + C24076 - C24077 + C24078 - C24079) * C31874) *
               C32013) *
              C31925 * C31911 * C111 +
          ((C23688 * C15325 + C23689 * C15319 +
            (C23669 - C23668 + C23671 - C23670 + C23673 - C23672) * C15326 +
            (C23675 - C23674 + C23677 - C23676 + C23679 - C23678) * C31874) *
               C32207 +
           ((C24069 - C24068 + C24071 - C24070 + C24073 - C24072) * C15325 +
            (C24075 - C24074 + C24077 - C24076 + C24079 - C24078) * C15319 +
            (C32049 * C255 - C31010 * C242 + C32056 * C687 - C31002 * C679 +
             C23639 * C2191 - C31016 * C2190) *
                C15326 +
            (C32049 * C272 - C31010 * C256 + C32056 * C694 - C31002 * C688 +
             C23639 * C2193 - C31016 * C2192) *
                C31874) *
               C32013) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C32049 * C126 - C31010 * C119 + C32056 * C354 - C31002 * C344 +
             C23639 * C364 - C31016 * C349) *
                C15325 +
            (C32049 * C140 - C31010 * C127 + C32056 * C374 - C31002 * C355 +
             C23639 * C379 - C31016 * C365) *
                C15319 +
            (C23644 - C23645 + C23646 - C23647 + C23648 - C23649) * C15326 +
            (C23650 - C23651 + C23652 - C23653 + C23654 - C23655) * C31874) *
               C32207 +
           ((C24688 - C24689 + C24690 - C24691 + C24692 - C24693) * C15325 +
            (C24694 - C24695 + C24696 - C24697 + C24698 - C24699) * C15319 +
            (C24057 - C24056 + C24059 - C24058 + C24061 - C24060) * C15326 +
            (C24063 - C24062 + C24065 - C24064 + C24067 - C24066) * C31874) *
               C32013) *
              C341 +
          (((C31010 * C344 - C32049 * C354 + C31002 * C349 - C32056 * C364 +
             C31016 * C2020 - C23639 * C2026) *
                C15325 +
            (C31010 * C355 - C32049 * C374 + C31002 * C365 - C32056 * C379 +
             C31016 * C2027 - C23639 * C2038) *
                C15319 +
            (C24226 - C24227 + C24228 - C24229 + C24230 - C24231) * C15326 +
            (C24232 - C24233 + C24234 - C24235 + C24236 - C24237) * C31874) *
               C32207 +
           ((C31010 * C676 - C32049 * C681 + C31002 * C1113 - C32056 * C1125 +
             C31016 * C2538 - C23639 * C2541) *
                C15325 +
            (C31010 * C682 - C32049 * C691 + C31002 * C1126 - C32056 * C1140 +
             C31016 * C2542 - C23639 * C2547) *
                C15319 +
            (C31010 * C677 - C32049 * C683 + C31002 * C1114 - C32056 * C1127 +
             C31016 * C2539 - C23639 * C2543) *
                C15326 +
            (C31010 * C684 - C32049 * C692 + C31002 * C1128 - C32056 * C1141 +
             C31016 * C2544 - C23639 * C2548) *
                C31874) *
               C32013) *
              C342 +
          (((C32049 * C364 - C31010 * C349 + C32056 * C2026 - C31002 * C2020 +
             C23639 * C2032 - C31016 * C2023) *
                C15325 +
            (C32049 * C379 - C31010 * C365 + C32056 * C2038 - C31002 * C2027 +
             C23639 * C2041 - C31016 * C2033) *
                C15319 +
            (C32049 * C366 - C31010 * C350 + C32056 * C2028 - C31002 * C2021 +
             C23639 * C2034 - C31016 * C2024) *
                C15326 +
            (C32049 * C380 - C31010 * C367 + C32056 * C2039 - C31002 * C2029 +
             C23639 * C2042 - C31016 * C2035) *
                C31874) *
               C32207 +
           ((C32049 * C1125 - C31010 * C1113 + C32056 * C2541 - C31002 * C2538 +
             C23639 * C6808 - C31016 * C6804) *
                C15325 +
            (C32049 * C1140 - C31010 * C1126 + C32056 * C2547 - C31002 * C2542 +
             C23639 * C6813 - C31016 * C6809) *
                C15319 +
            (C32049 * C1127 - C31010 * C1114 + C32056 * C2543 - C31002 * C2539 +
             C23639 * C11812 - C31016 * C11811) *
                C15326 +
            (C32049 * C1141 - C31010 * C1128 + C32056 * C2548 - C31002 * C2544 +
             C23639 * C11814 - C31016 * C11813) *
                C31874) *
               C32013) *
              C343) *
         C31911 * C31899) /
            (p * q * std::sqrt(p + q));
    d2ee[83] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C32049 * C126 - C31010 * C119 + C32056 * C354 - C31002 * C344 +
              C23639 * C364 - C31016 * C349) *
                 C15325 +
             (C32049 * C140 - C31010 * C127 + C32056 * C374 - C31002 * C355 +
              C23639 * C379 - C31016 * C365) *
                 C15319 +
             (C23644 - C23645 + C23646 - C23647 + C23648 - C23649) * C15326 +
             (C23650 - C23651 + C23652 - C23653 + C23654 - C23655) * C31874) *
                C32207 +
            ((C24688 - C24689 + C24690 - C24691 + C24692 - C24693) * C15325 +
             (C24694 - C24695 + C24696 - C24697 + C24698 - C24699) * C15319 +
             C25080 * C15326 + C25081 * C31874) *
                C32013) *
               C572 +
           (((C31010 * C344 - C32049 * C354 + C31002 * C349 - C32056 * C364 +
              C31016 * C2020 - C23639 * C2026) *
                 C15325 +
             (C31010 * C355 - C32049 * C374 + C31002 * C365 - C32056 * C379 +
              C31016 * C2027 - C23639 * C2038) *
                 C15319 +
             (C24226 - C24227 + C24228 - C24229 + C24230 - C24231) * C15326 +
             (C24232 - C24233 + C24234 - C24235 + C24236 - C24237) * C31874) *
                C32207 +
            ((C31010 * C676 - C32049 * C681 + C31002 * C1113 - C32056 * C1125 +
              C31016 * C2538 - C23639 * C2541) *
                 C15325 +
             (C31010 * C682 - C32049 * C691 + C31002 * C1126 - C32056 * C1140 +
              C31016 * C2542 - C23639 * C2547) *
                 C15319 +
             (C25278 - C25279 + C25280 - C25281 + C25282 - C25283) * C15326 +
             (C25284 - C25285 + C25286 - C25287 + C25288 - C25289) * C31874) *
                C32013) *
               C573) *
              C31911 * C468 +
          ((((C23645 - C23644 + C23647 - C23646 + C23649 - C23648) * C15325 +
             (C23651 - C23650 + C23653 - C23652 + C23655 - C23654) * C15319 +
             (C23657 - C23656 + C23659 - C23658 + C23661 - C23660) * C15326 +
             (C23663 - C23662 + C23665 - C23664 + C23667 - C23666) * C31874) *
                C32207 +
            (C25082 * C15325 + C25083 * C15319 +
             (C24068 - C24069 + C24070 - C24071 + C24072 - C24073) * C15326 +
             (C24074 - C24075 + C24076 - C24077 + C24078 - C24079) * C31874) *
                C32013) *
               C572 +
           (((C24227 - C24226 + C24229 - C24228 + C24231 - C24230) * C15325 +
             (C24233 - C24232 + C24235 - C24234 + C24237 - C24236) * C15319 +
             (C24239 - C24238 + C24241 - C24240 + C24243 - C24242) * C15326 +
             (C24245 - C24244 + C24247 - C24246 + C24249 - C24248) * C31874) *
                C32207 +
            ((C25279 - C25278 + C25281 - C25280 + C25283 - C25282) * C15325 +
             (C25285 - C25284 + C25287 - C25286 + C25289 - C25288) * C15319 +
             (C32049 * C685 - C31010 * C678 + C32056 * C1129 - C31002 * C1115 +
              C23639 * C2545 - C31016 * C2540) *
                 C15326 +
             (C32049 * C693 - C31010 * C686 + C32056 * C1142 - C31002 * C1130 +
              C23639 * C2549 - C31016 * C2546) *
                 C31874) *
                C32013) *
               C573) *
              C31911 * C469)) /
        (p * q * std::sqrt(p + q));
    d2ee[84] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C32049 * C126 - C31010 * C119 + C32056 * C354 - C31002 * C344 +
             C23639 * C364 - C31016 * C349) *
                C15325 +
            (C32049 * C140 - C31010 * C127 + C32056 * C374 - C31002 * C355 +
             C23639 * C379 - C31016 * C365) *
                C15319 +
            (C23644 - C23645 + C23646 - C23647 + C23648 - C23649) * C15326 +
            (C23650 - C23651 + C23652 - C23653 + C23654 - C23655) * C31874) *
               C32207 +
           ((C32049 * C249 - C31010 * C239 + C32056 * C681 - C31002 * C676 +
             C23639 * C1125 - C31016 * C1113) *
                C15325 +
            (C32049 * C269 - C31010 * C250 + C32056 * C691 - C31002 * C682 +
             C23639 * C1140 - C31016 * C1126) *
                C15319 +
            (C24057 - C24056 + C24059 - C24058 + C24061 - C24060) * C15326 +
            (C24063 - C24062 + C24065 - C24064 + C24067 - C24066) * C31874) *
               C32013) *
              C31925 * C31911 * C110 +
          (((C23645 - C23644 + C23647 - C23646 + C23649 - C23648) * C15325 +
            (C23651 - C23650 + C23653 - C23652 + C23655 - C23654) * C15319 +
            (C23657 - C23656 + C23659 - C23658 + C23661 - C23660) * C15326 +
            (C23663 - C23662 + C23665 - C23664 + C23667 - C23666) * C31874) *
               C32207 +
           ((C24056 - C24057 + C24058 - C24059 + C24060 - C24061) * C15325 +
            (C24062 - C24063 + C24064 - C24065 + C24066 - C24067) * C15319 +
            (C24068 - C24069 + C24070 - C24071 + C24072 - C24073) * C15326 +
            (C24074 - C24075 + C24076 - C24077 + C24078 - C24079) * C31874) *
               C32013) *
              C31925 * C31911 * C111 +
          ((C23688 * C15325 + C23689 * C15319 +
            (C23669 - C23668 + C23671 - C23670 + C23673 - C23672) * C15326 +
            (C23675 - C23674 + C23677 - C23676 + C23679 - C23678) * C31874) *
               C32207 +
           ((C24069 - C24068 + C24071 - C24070 + C24073 - C24072) * C15325 +
            (C24075 - C24074 + C24077 - C24076 + C24079 - C24078) * C15319 +
            (C32049 * C255 - C31010 * C242 + C32056 * C687 - C31002 * C679 +
             C23639 * C2191 - C31016 * C2190) *
                C15326 +
            (C32049 * C272 - C31010 * C256 + C32056 * C694 - C31002 * C688 +
             C23639 * C2193 - C31016 * C2192) *
                C31874) *
               C32013) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C32049 * C126 - C31010 * C119 + C32056 * C354 - C31002 * C344 +
             C23639 * C364 - C31016 * C349) *
                C15325 +
            (C32049 * C140 - C31010 * C127 + C32056 * C374 - C31002 * C355 +
             C23639 * C379 - C31016 * C365) *
                C15319 +
            (C23644 - C23645 + C23646 - C23647 + C23648 - C23649) * C15326 +
            (C23650 - C23651 + C23652 - C23653 + C23654 - C23655) * C31874) *
               C32207 +
           ((C24688 - C24689 + C24690 - C24691 + C24692 - C24693) * C15325 +
            (C24694 - C24695 + C24696 - C24697 + C24698 - C24699) * C15319 +
            (C24057 - C24056 + C24059 - C24058 + C24061 - C24060) * C15326 +
            (C24063 - C24062 + C24065 - C24064 + C24067 - C24066) * C31874) *
               C32013) *
              C31925 * C235 +
          (((C24689 - C24688 + C24691 - C24690 + C24693 - C24692) * C15325 +
            (C24695 - C24694 + C24697 - C24696 + C24699 - C24698) * C15319 +
            (C24056 - C24057 + C24058 - C24059 + C24060 - C24061) * C15326 +
            (C24062 - C24063 + C24064 - C24065 + C24066 - C24067) * C31874) *
               C32207 +
           ((C24700 - C24701 + C24702 - C24703 + C24704 - C24705) * C15325 +
            (C24706 - C24707 + C24708 - C24709 + C24710 - C24711) * C15319 +
            (C24712 - C24713 + C24714 - C24715 + C24716 - C24717) * C15326 +
            (C24718 - C24719 + C24720 - C24721 + C24722 - C24723) * C31874) *
               C32013) *
              C31925 * C236 +
          (((C24701 - C24700 + C24703 - C24702 + C24705 - C24704) * C15325 +
            (C24707 - C24706 + C24709 - C24708 + C24711 - C24710) * C15319 +
            (C24713 - C24712 + C24715 - C24714 + C24717 - C24716) * C15326 +
            (C24719 - C24718 + C24721 - C24720 + C24723 - C24722) * C31874) *
               C32207 +
           ((C32049 * C947 - C31010 * C941 + C32056 * C1621 - C31002 * C1618 +
             C23639 * C6147 - C31016 * C6143) *
                C15325 +
            (C32049 * C959 - C31010 * C948 + C32056 * C1627 - C31002 * C1622 +
             C23639 * C6152 - C31016 * C6148) *
                C15319 +
            (C32049 * C949 - C31010 * C942 + C32056 * C1623 - C31002 * C1619 +
             C23639 * C6962 - C31016 * C6961) *
                C15326 +
            (C32049 * C960 - C31010 * C950 + C32056 * C1628 - C31002 * C1624 +
             C23639 * C6964 - C31016 * C6963) *
                C31874) *
               C32013) *
              C31925 * C237) *
         C31899) /
            (p * q * std::sqrt(p + q));
    d2ee[85] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19912 * C126 - C19914 * C119 + C32053 * C354 - C19915 * C344) *
                 C15325 +
             (C19912 * C140 - C19914 * C127 + C32053 * C374 - C19915 * C355) *
                 C15319 +
             (C19917 - C19918 + C19919 - C19920) * C15326 +
             (C19921 - C19922 + C19923 - C19924) * C31874) *
                C32273 +
            ((C20903 - C20904 + C20905 - C20906) * C15325 +
             (C20907 - C20908 + C20909 - C20910) * C15319 + C21306 * C15326 +
             C21307 * C31874) *
                C32261 +
            C20953 * C32238) *
               C31925 * C466 +
           (((C20904 - C20903 + C20906 - C20905) * C15325 +
             (C20908 - C20907 + C20910 - C20909) * C15319 + C21308 * C15326 +
             C21309 * C31874) *
                C32273 +
            ((C20912 - C20911 + C20914 - C20913) * C15325 +
             (C20916 - C20915 + C20918 - C20917) * C15319 + C21310 * C15326 +
             C21311 * C31874) *
                C32261 +
            ((C20923 - C20924 + C20925 - C20926) * C15325 +
             (C20927 - C20928 + C20929 - C20930) * C15319 +
             (C20931 - C20932 + C20933 - C20934) * C15326 +
             (C20935 - C20936 + C20937 - C20938) * C31874) *
                C32238) *
               C31925 * C467) *
              C468 +
          ((((C19918 - C19917 + C19920 - C19919) * C15325 +
             (C19922 - C19921 + C19924 - C19923) * C15319 +
             (C19926 - C19925 + C19928 - C19927) * C15326 +
             (C19930 - C19929 + C19932 - C19931) * C31874) *
                C32273 +
            (C21308 * C15325 + C21309 * C15319 +
             (C20295 - C20296 + C20297 - C20298) * C15326 +
             (C20299 - C20300 + C20301 - C20302) * C31874) *
                C32261 +
            (C21310 * C15325 + C21311 * C15319 +
             (C20749 - C20750 + C20751 - C20752) * C15326 +
             (C20753 - C20754 + C20755 - C20756) * C31874) *
                C32238) *
               C31925 * C466 +
           ((C21306 * C15325 + C21307 * C15319 +
             (C20296 - C20295 + C20298 - C20297) * C15326 +
             (C20300 - C20299 + C20302 - C20301) * C31874) *
                C32273 +
            (C20943 * C15325 + C20944 * C15319 +
             (C20750 - C20749 + C20752 - C20751) * C15326 +
             (C20754 - C20753 + C20756 - C20755) * C31874) *
                C32261 +
            ((C20932 - C20931 + C20934 - C20933) * C15325 +
             (C20936 - C20935 + C20938 - C20937) * C15319 +
             (C19912 * C951 - C19914 * C943 + C32053 * C1625 - C19915 * C1620) *
                 C15326 +
             (C19912 * C961 - C19914 * C952 + C32053 * C1629 - C19915 * C1626) *
                 C31874) *
                C32238) *
               C31925 * C467) *
              C469)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C19912 * C126 - C19914 * C119 + C32053 * C354 - C19915 * C344) *
                C14631 +
            (C19912 * C140 - C19914 * C127 + C32053 * C374 - C19915 * C355) *
                C32279 +
            (C19917 - C19918 + C19919 - C19920) * C14632 +
            (C19921 - C19922 + C19923 - C19924) * C32272 + C19957 * C14633 +
            C19958 * C32259 + C19959 * C14634 + C19960 * C32242) *
               C31955 * C31925 * C466 +
           ((C19914 * C239 - C19912 * C249 + C19915 * C676 - C32053 * C681) *
                C14631 +
            (C19914 * C250 - C19912 * C269 + C19915 * C682 - C32053 * C691) *
                C32279 +
            (C20287 - C20288 + C20289 - C20290) * C14632 +
            (C20291 - C20292 + C20293 - C20294) * C32272 +
            (C20295 - C20296 + C20297 - C20298) * C14633 +
            (C20299 - C20300 + C20301 - C20302) * C32259 +
            (C20303 - C20304 + C20305 - C20306) * C14634 +
            (C20307 - C20308 + C20309 - C20310) * C32242) *
               C31955 * C31925 * C467) *
              C468 +
          (((C19918 - C19917 + C19920 - C19919) * C14631 +
            (C19922 - C19921 + C19924 - C19923) * C32279 +
            (C19926 - C19925 + C19928 - C19927) * C14632 +
            (C19930 - C19929 + C19932 - C19931) * C32272 +
            (C19934 - C19933 + C19936 - C19935) * C14633 +
            (C19938 - C19937 + C19940 - C19939) * C32259 +
            (C19941 - C19942 + C19943 - C19944) * C14634 +
            (C19945 - C19946 + C19947 - C19948) * C32242) *
               C31955 * C31925 * C466 +
           ((C20288 - C20287 + C20290 - C20289) * C14631 +
            (C20292 - C20291 + C20294 - C20293) * C32279 +
            (C20296 - C20295 + C20298 - C20297) * C14632 +
            (C20300 - C20299 + C20302 - C20301) * C32272 +
            (C20304 - C20303 + C20306 - C20305) * C14633 +
            (C20308 - C20307 + C20310 - C20309) * C32259 +
            (C19912 * C257 - C19914 * C243 + C32053 * C689 - C19915 * C680) *
                C14634 +
            (C19912 * C273 - C19914 * C258 + C32053 * C695 - C19915 * C690) *
                C32242) *
               C31955 * C31925 * C467) *
              C469)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C32281 * C126 - C21833 * C119 + C32278 * C354 - C21834 * C344 +
             C32269 * C364 - C21835 * C349 + C32254 * C2026 - C21836 * C2020) *
                C15325 +
            (C32281 * C140 - C21833 * C127 + C32278 * C374 - C21834 * C355 +
             C32269 * C379 - C21835 * C365 + C32254 * C2038 - C21836 * C2027) *
                C15319 +
            (C21838 - C21839 + C21840 - C21841 + C21842 - C21843 + C21844 -
             C21845) *
                C15326 +
            (C21846 - C21847 + C21848 - C21849 + C21850 - C21851 + C21852 -
             C21853) *
                C31874) *
               C31955 * C31925 * C466 +
           ((C21833 * C239 - C32281 * C249 + C21834 * C676 - C32278 * C681 +
             C21835 * C1113 - C32269 * C1125 + C21836 * C2538 -
             C32254 * C2541) *
                C15325 +
            (C21833 * C250 - C32281 * C269 + C21834 * C682 - C32278 * C691 +
             C21835 * C1126 - C32269 * C1140 + C21836 * C2542 -
             C32254 * C2547) *
                C15319 +
            (C22196 - C22197 + C22198 - C22199 + C22200 - C22201 + C22202 -
             C22203) *
                C15326 +
            (C22204 - C22205 + C22206 - C22207 + C22208 - C22209 + C22210 -
             C22211) *
                C31874) *
               C31955 * C31925 * C467) *
              C468 +
          (((C21839 - C21838 + C21841 - C21840 + C21843 - C21842 + C21845 -
             C21844) *
                C15325 +
            (C21847 - C21846 + C21849 - C21848 + C21851 - C21850 + C21853 -
             C21852) *
                C15319 +
            (C21854 - C21855 + C21856 - C21857 + C21858 - C21859 + C21860 -
             C21861) *
                C15326 +
            (C21862 - C21863 + C21864 - C21865 + C21866 - C21867 + C21868 -
             C21869) *
                C31874) *
               C31955 * C31925 * C466 +
           ((C22197 - C22196 + C22199 - C22198 + C22201 - C22200 + C22203 -
             C22202) *
                C15325 +
            (C22205 - C22204 + C22207 - C22206 + C22209 - C22208 + C22211 -
             C22210) *
                C15319 +
            (C32281 * C253 - C21833 * C241 + C32278 * C685 - C21834 * C678 +
             C32269 * C1129 - C21835 * C1115 + C32254 * C2545 -
             C21836 * C2540) *
                C15326 +
            (C32281 * C271 - C21833 * C254 + C32278 * C693 - C21834 * C686 +
             C32269 * C1142 - C21835 * C1130 + C32254 * C2549 -
             C21836 * C2546) *
                C31874) *
               C31955 * C31925 * C467) *
              C469)) /
            (p * q * std::sqrt(p + q));
    d2ee[86] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19912 * C126 - C19914 * C119 + C32053 * C354 - C19915 * C344) *
                 C15325 +
             (C19912 * C140 - C19914 * C127 + C32053 * C374 - C19915 * C355) *
                 C15319 +
             (C19917 - C19918 + C19919 - C19920) * C15326 +
             (C19921 - C19922 + C19923 - C19924) * C31874) *
                C32273 +
            ((C20903 - C20904 + C20905 - C20906) * C15325 +
             (C20907 - C20908 + C20909 - C20910) * C15319 + C21306 * C15326 +
             C21307 * C31874) *
                C32261 +
            C20953 * C32238) *
               C572 +
           (((C19914 * C344 - C19912 * C354 + C19915 * C349 - C32053 * C364) *
                 C15325 +
             (C19914 * C355 - C19912 * C374 + C19915 * C365 - C32053 * C379) *
                 C15319 +
             (C20441 - C20442 + C20443 - C20444) * C15326 +
             (C20445 - C20446 + C20447 - C20448) * C31874) *
                C32273 +
            ((C21716 - C21717 + C21718 - C21719) * C15325 +
             (C21720 - C21721 + C21722 - C21723) * C15319 +
             (C21506 - C21507 + C21508 - C21509) * C15326 +
             (C21510 - C21511 + C21512 - C21513) * C31874) *
                C32261 +
            ((C21724 - C21725 + C21726 - C21727) * C15325 +
             (C21728 - C21729 + C21730 - C21731) * C15319 +
             (C21514 - C21515 + C21516 - C21517) * C15326 +
             (C21518 - C21519 + C21520 - C21521) * C31874) *
                C32238) *
               C573) *
              C466 +
          ((((C20904 - C20903 + C20906 - C20905) * C15325 +
             (C20908 - C20907 + C20910 - C20909) * C15319 + C21308 * C15326 +
             C21309 * C31874) *
                C32273 +
            ((C20912 - C20911 + C20914 - C20913) * C15325 +
             (C20916 - C20915 + C20918 - C20917) * C15319 + C21310 * C15326 +
             C21311 * C31874) *
                C32261 +
            ((C20923 - C20924 + C20925 - C20926) * C15325 +
             (C20927 - C20928 + C20929 - C20930) * C15319 +
             (C20931 - C20932 + C20933 - C20934) * C15326 +
             (C20935 - C20936 + C20937 - C20938) * C31874) *
                C32238) *
               C572 +
           (((C21717 - C21716 + C21719 - C21718) * C15325 +
             (C21721 - C21720 + C21723 - C21722) * C15319 +
             (C21507 - C21506 + C21509 - C21508) * C15326 +
             (C21511 - C21510 + C21513 - C21512) * C31874) *
                C32273 +
            ((C21725 - C21724 + C21727 - C21726) * C15325 +
             (C21729 - C21728 + C21731 - C21730) * C15319 +
             (C21515 - C21514 + C21517 - C21516) * C15326 +
             (C21519 - C21518 + C21521 - C21520) * C31874) *
                C32261 +
            ((C19912 * C1621 - C19914 * C1618 + C32053 * C6147 -
              C19915 * C6143) *
                 C15325 +
             (C19912 * C1627 - C19914 * C1622 + C32053 * C6152 -
              C19915 * C6148) *
                 C15319 +
             (C19912 * C1623 - C19914 * C1619 + C32053 * C6962 -
              C19915 * C6961) *
                 C15326 +
             (C19912 * C1628 - C19914 * C1624 + C32053 * C6964 -
              C19915 * C6963) *
                 C31874) *
                C32238) *
               C573) *
              C467) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C19912 * C126 - C19914 * C119 + C32053 * C354 - C19915 * C344) *
                C14631 +
            (C19912 * C140 - C19914 * C127 + C32053 * C374 - C19915 * C355) *
                C32279 +
            (C19917 - C19918 + C19919 - C19920) * C14632 +
            (C19921 - C19922 + C19923 - C19924) * C32272 + C19957 * C14633 +
            C19958 * C32259 + C19959 * C14634 + C19960 * C32242) *
               C31955 * C572 +
           ((C19914 * C344 - C19912 * C354 + C19915 * C349 - C32053 * C364) *
                C14631 +
            (C19914 * C355 - C19912 * C374 + C19915 * C365 - C32053 * C379) *
                C32279 +
            (C20441 - C20442 + C20443 - C20444) * C14632 +
            (C20445 - C20446 + C20447 - C20448) * C32272 +
            (C20449 - C20450 + C20451 - C20452) * C14633 +
            (C20453 - C20454 + C20455 - C20456) * C32259 +
            (C20457 - C20458 + C20459 - C20460) * C14634 +
            (C20461 - C20462 + C20463 - C20464) * C32242) *
               C31955 * C573) *
              C466 +
          (((C19914 * C239 - C19912 * C249 + C19915 * C676 - C32053 * C681) *
                C14631 +
            (C19914 * C250 - C19912 * C269 + C19915 * C682 - C32053 * C691) *
                C32279 +
            (C20287 - C20288 + C20289 - C20290) * C14632 +
            (C20291 - C20292 + C20293 - C20294) * C32272 +
            (C20295 - C20296 + C20297 - C20298) * C14633 +
            (C20299 - C20300 + C20301 - C20302) * C32259 +
            (C20303 - C20304 + C20305 - C20306) * C14634 +
            (C20307 - C20308 + C20309 - C20310) * C32242) *
               C31955 * C572 +
           ((C19912 * C681 - C19914 * C676 + C32053 * C1125 - C19915 * C1113) *
                C14631 +
            (C19912 * C691 - C19914 * C682 + C32053 * C1140 - C19915 * C1126) *
                C32279 +
            (C19912 * C683 - C19914 * C677 + C32053 * C1127 - C19915 * C1114) *
                C14632 +
            (C19912 * C692 - C19914 * C684 + C32053 * C1141 - C19915 * C1128) *
                C32272 +
            (C19912 * C685 - C19914 * C678 + C32053 * C1129 - C19915 * C1115) *
                C14633 +
            (C19912 * C693 - C19914 * C686 + C32053 * C1142 - C19915 * C1130) *
                C32259 +
            (C19912 * C687 - C19914 * C679 + C32053 * C2191 - C19915 * C2190) *
                C14634 +
            (C19912 * C694 - C19914 * C688 + C32053 * C2193 - C19915 * C2192) *
                C32242) *
               C31955 * C573) *
              C467) *
         C31899) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C32281 * C126 - C21833 * C119 + C32278 * C354 - C21834 * C344 +
             C32269 * C364 - C21835 * C349 + C32254 * C2026 - C21836 * C2020) *
                C15325 +
            (C32281 * C140 - C21833 * C127 + C32278 * C374 - C21834 * C355 +
             C32269 * C379 - C21835 * C365 + C32254 * C2038 - C21836 * C2027) *
                C15319 +
            (C21838 - C21839 + C21840 - C21841 + C21842 - C21843 + C21844 -
             C21845) *
                C15326 +
            (C21846 - C21847 + C21848 - C21849 + C21850 - C21851 + C21852 -
             C21853) *
                C31874) *
               C31955 * C572 +
           ((C21833 * C344 - C32281 * C354 + C21834 * C349 - C32278 * C364 +
             C21835 * C2020 - C32269 * C2026 + C21836 * C2023 -
             C32254 * C2032) *
                C15325 +
            (C21833 * C355 - C32281 * C374 + C21834 * C365 - C32278 * C379 +
             C21835 * C2027 - C32269 * C2038 + C21836 * C2033 -
             C32254 * C2041) *
                C15319 +
            (C22342 - C22343 + C22344 - C22345 + C22346 - C22347 + C22348 -
             C22349) *
                C15326 +
            (C22350 - C22351 + C22352 - C22353 + C22354 - C22355 + C22356 -
             C22357) *
                C31874) *
               C31955 * C573) *
              C466 +
          (((C21833 * C239 - C32281 * C249 + C21834 * C676 - C32278 * C681 +
             C21835 * C1113 - C32269 * C1125 + C21836 * C2538 -
             C32254 * C2541) *
                C15325 +
            (C21833 * C250 - C32281 * C269 + C21834 * C682 - C32278 * C691 +
             C21835 * C1126 - C32269 * C1140 + C21836 * C2542 -
             C32254 * C2547) *
                C15319 +
            (C22196 - C22197 + C22198 - C22199 + C22200 - C22201 + C22202 -
             C22203) *
                C15326 +
            (C22204 - C22205 + C22206 - C22207 + C22208 - C22209 + C22210 -
             C22211) *
                C31874) *
               C31955 * C572 +
           ((C32281 * C681 - C21833 * C676 + C32278 * C1125 - C21834 * C1113 +
             C32269 * C2541 - C21835 * C2538 + C32254 * C6808 -
             C21836 * C6804) *
                C15325 +
            (C32281 * C691 - C21833 * C682 + C32278 * C1140 - C21834 * C1126 +
             C32269 * C2547 - C21835 * C2542 + C32254 * C6813 -
             C21836 * C6809) *
                C15319 +
            (C32281 * C683 - C21833 * C677 + C32278 * C1127 - C21834 * C1114 +
             C32269 * C2543 - C21835 * C2539 + C32254 * C11812 -
             C21836 * C11811) *
                C15326 +
            (C32281 * C692 - C21833 * C684 + C32278 * C1141 - C21834 * C1128 +
             C32269 * C2548 - C21835 * C2544 + C32254 * C11814 -
             C21836 * C11813) *
                C31874) *
               C31955 * C573) *
              C467) *
         C31899) /
            (p * q * std::sqrt(p + q));
    d2ee[87] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C19912 * C126 - C19914 * C119 + C32053 * C354 - C19915 * C344) *
                   C14631 +
               (C19912 * C140 - C19914 * C127 + C32053 * C374 - C19915 * C355) *
                   C32279 +
               (C19917 - C19918 + C19919 - C19920) * C14632 +
               (C19921 - C19922 + C19923 - C19924) * C32272 + C19957 * C14633 +
               C19958 * C32259 + C19959 * C14634 + C19960 * C32242) *
                  C31955 * C31925 * C31911 * C110 +
              ((C19918 - C19917 + C19920 - C19919) * C14631 +
               (C19922 - C19921 + C19924 - C19923) * C32279 +
               (C19926 - C19925 + C19928 - C19927) * C14632 +
               (C19930 - C19929 + C19932 - C19931) * C32272 +
               (C19934 - C19933 + C19936 - C19935) * C14633 +
               (C19938 - C19937 + C19940 - C19939) * C32259 +
               (C19941 - C19942 + C19943 - C19944) * C14634 +
               (C19945 - C19946 + C19947 - C19948) * C32242) *
                  C31955 * C31925 * C31911 * C111 +
              (C19957 * C14631 + C19958 * C32279 + C19959 * C14632 +
               C19960 * C32272 + (C19942 - C19941 + C19944 - C19943) * C14633 +
               (C19946 - C19945 + C19948 - C19947) * C32259 +
               (C19912 * C136 - C19914 * C124 + C32053 * C575 - C19915 * C574) *
                   C14634 +
               (C19912 * C145 - C19914 * C137 + C32053 * C577 - C19915 * C576) *
                   C32242) *
                  C31955 * C31925 * C31911 * C112) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C19912 * C126 - C19914 * C119 + C32053 * C354 - C19915 * C344) *
                   C14631 +
               (C19912 * C140 - C19914 * C127 + C32053 * C374 - C19915 * C355) *
                   C32279 +
               (C19917 - C19918 + C19919 - C19920) * C14632 +
               (C19921 - C19922 + C19923 - C19924) * C32272 + C19957 * C14633 +
               C19958 * C32259 + C19959 * C14634 + C19960 * C32242) *
                  C31955 * C31925 * C235 +
              ((C19914 * C239 - C19912 * C249 + C19915 * C676 - C32053 * C681) *
                   C14631 +
               (C19914 * C250 - C19912 * C269 + C19915 * C682 - C32053 * C691) *
                   C32279 +
               (C19914 * C240 - C19912 * C251 + C19915 * C677 - C32053 * C683) *
                   C14632 +
               (C19914 * C252 - C19912 * C270 + C19915 * C684 - C32053 * C692) *
                   C32272 +
               (C19914 * C241 - C19912 * C253 + C19915 * C678 - C32053 * C685) *
                   C14633 +
               (C19914 * C254 - C19912 * C271 + C19915 * C686 - C32053 * C693) *
                   C32259 +
               (C19914 * C242 - C19912 * C255 + C19915 * C679 - C32053 * C687) *
                   C14634 +
               (C19914 * C256 - C19912 * C272 + C19915 * C688 - C32053 * C694) *
                   C32242) *
                  C31955 * C31925 * C236 +
              ((C19912 * C259 - C19914 * C244 + C32053 * C1119 -
                C19915 * C1110) *
                   C14631 +
               (C19912 * C274 - C19914 * C260 + C32053 * C1137 -
                C19915 * C1120) *
                   C32279 +
               (C19912 * C261 - C19914 * C245 + C32053 * C1121 -
                C19915 * C1111) *
                   C14632 +
               (C19912 * C275 - C19914 * C262 + C32053 * C1138 -
                C19915 * C1122) *
                   C32272 +
               (C19912 * C263 - C19914 * C246 + C32053 * C1123 -
                C19915 * C1112) *
                   C14633 +
               (C19912 * C276 - C19914 * C264 + C32053 * C1139 -
                C19915 * C1124) *
                   C32259 +
               (C19912 * C265 - C19914 * C247 + C32053 * C1453 -
                C19915 * C1452) *
                   C14634 +
               (C19912 * C277 - C19914 * C266 + C32053 * C1455 -
                C19915 * C1454) *
                   C32242) *
                  C31955 * C31925 * C237) *
             C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C19912 * C126 - C19914 * C119 + C32053 * C354 - C19915 * C344) *
               C14631 +
           (C19912 * C140 - C19914 * C127 + C32053 * C374 - C19915 * C355) *
               C32279 +
           (C19917 - C19918 + C19919 - C19920) * C14632 +
           (C19921 - C19922 + C19923 - C19924) * C32272 + C19957 * C14633 +
           C19958 * C32259 + C19959 * C14634 + C19960 * C32242) *
              C31955 * C341 +
          ((C19914 * C344 - C19912 * C354 + C19915 * C349 - C32053 * C364) *
               C14631 +
           (C19914 * C355 - C19912 * C374 + C19915 * C365 - C32053 * C379) *
               C32279 +
           (C19914 * C345 - C19912 * C356 + C19915 * C350 - C32053 * C366) *
               C14632 +
           (C19914 * C357 - C19912 * C375 + C19915 * C367 - C32053 * C380) *
               C32272 +
           (C19914 * C346 - C19912 * C358 + C19915 * C351 - C32053 * C368) *
               C14633 +
           (C19914 * C359 - C19912 * C376 + C19915 * C369 - C32053 * C381) *
               C32259 +
           (C19914 * C347 - C19912 * C360 + C19915 * C352 - C32053 * C370) *
               C14634 +
           (C19914 * C361 - C19912 * C377 + C19915 * C371 - C32053 * C382) *
               C32242) *
              C31955 * C342 +
          ((C19912 * C364 - C19914 * C349 + C32053 * C2026 - C19915 * C2020) *
               C14631 +
           (C19912 * C379 - C19914 * C365 + C32053 * C2038 - C19915 * C2027) *
               C32279 +
           (C19912 * C366 - C19914 * C350 + C32053 * C2028 - C19915 * C2021) *
               C14632 +
           (C19912 * C380 - C19914 * C367 + C32053 * C2039 - C19915 * C2029) *
               C32272 +
           (C19912 * C368 - C19914 * C351 + C32053 * C2030 - C19915 * C2022) *
               C14633 +
           (C19912 * C381 - C19914 * C369 + C32053 * C2040 - C19915 * C2031) *
               C32259 +
           (C19912 * C370 - C19914 * C352 + C32053 * C2365 - C19915 * C2364) *
               C14634 +
           (C19912 * C382 - C19914 * C371 + C32053 * C2367 - C19915 * C2366) *
               C32242) *
              C31955 * C343) *
         C31911 * C31899) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C19912 * C126 - C19914 * C119 + C32053 * C354 - C19915 * C344) *
                C15325 +
            (C19912 * C140 - C19914 * C127 + C32053 * C374 - C19915 * C355) *
                C15319 +
            (C19917 - C19918 + C19919 - C19920) * C15326 +
            (C19921 - C19922 + C19923 - C19924) * C31874) *
               C32273 +
           ((C19912 * C249 - C19914 * C239 + C32053 * C681 - C19915 * C676) *
                C15325 +
            (C19912 * C269 - C19914 * C250 + C32053 * C691 - C19915 * C682) *
                C15319 +
            (C20288 - C20287 + C20290 - C20289) * C15326 +
            (C20292 - C20291 + C20294 - C20293) * C31874) *
               C32261 +
           ((C19912 * C259 - C19914 * C244 + C32053 * C1119 - C19915 * C1110) *
                C15325 +
            (C19912 * C274 - C19914 * C260 + C32053 * C1137 - C19915 * C1120) *
                C15319 +
            (C20741 - C20742 + C20743 - C20744) * C15326 +
            (C20745 - C20746 + C20747 - C20748) * C31874) *
               C32238) *
              C31925 * C31911 * C110 +
          (((C19918 - C19917 + C19920 - C19919) * C15325 +
            (C19922 - C19921 + C19924 - C19923) * C15319 +
            (C19926 - C19925 + C19928 - C19927) * C15326 +
            (C19930 - C19929 + C19932 - C19931) * C31874) *
               C32273 +
           ((C20287 - C20288 + C20289 - C20290) * C15325 +
            (C20291 - C20292 + C20293 - C20294) * C15319 +
            (C20295 - C20296 + C20297 - C20298) * C15326 +
            (C20299 - C20300 + C20301 - C20302) * C31874) *
               C32261 +
           ((C20742 - C20741 + C20744 - C20743) * C15325 +
            (C20746 - C20745 + C20748 - C20747) * C15319 +
            (C20749 - C20750 + C20751 - C20752) * C15326 +
            (C20753 - C20754 + C20755 - C20756) * C31874) *
               C32238) *
              C31925 * C31911 * C111 +
          ((C19957 * C15325 + C19958 * C15319 + C19959 * C15326 +
            C19960 * C31874) *
               C32273 +
           ((C20296 - C20295 + C20298 - C20297) * C15325 +
            (C20300 - C20299 + C20302 - C20301) * C15319 +
            (C20304 - C20303 + C20306 - C20305) * C15326 +
            (C20308 - C20307 + C20310 - C20309) * C31874) *
               C32261 +
           ((C20750 - C20749 + C20752 - C20751) * C15325 +
            (C20754 - C20753 + C20756 - C20755) * C15319 +
            (C19912 * C265 - C19914 * C247 + C32053 * C1453 - C19915 * C1452) *
                C15326 +
            (C19912 * C277 - C19914 * C266 + C32053 * C1455 - C19915 * C1454) *
                C31874) *
               C32238) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C19912 * C126 - C19914 * C119 + C32053 * C354 - C19915 * C344) *
                C15325 +
            (C19912 * C140 - C19914 * C127 + C32053 * C374 - C19915 * C355) *
                C15319 +
            (C19917 - C19918 + C19919 - C19920) * C15326 +
            (C19921 - C19922 + C19923 - C19924) * C31874) *
               C32273 +
           ((C20903 - C20904 + C20905 - C20906) * C15325 +
            (C20907 - C20908 + C20909 - C20910) * C15319 +
            (C20288 - C20287 + C20290 - C20289) * C15326 +
            (C20292 - C20291 + C20294 - C20293) * C31874) *
               C32261 +
           C20953 * C32238) *
              C31925 * C235 +
          (((C20904 - C20903 + C20906 - C20905) * C15325 +
            (C20908 - C20907 + C20910 - C20909) * C15319 +
            (C20287 - C20288 + C20289 - C20290) * C15326 +
            (C20291 - C20292 + C20293 - C20294) * C31874) *
               C32273 +
           ((C20912 - C20911 + C20914 - C20913) * C15325 +
            (C20916 - C20915 + C20918 - C20917) * C15319 +
            (C20742 - C20741 + C20744 - C20743) * C15326 +
            (C20746 - C20745 + C20748 - C20747) * C31874) *
               C32261 +
           ((C20923 - C20924 + C20925 - C20926) * C15325 +
            (C20927 - C20928 + C20929 - C20930) * C15319 +
            (C20931 - C20932 + C20933 - C20934) * C15326 +
            (C20935 - C20936 + C20937 - C20938) * C31874) *
               C32238) *
              C31925 * C236 +
          (C20953 * C32273 +
           ((C20924 - C20923 + C20926 - C20925) * C15325 +
            (C20928 - C20927 + C20930 - C20929) * C15319 +
            (C20932 - C20931 + C20934 - C20933) * C15326 +
            (C20936 - C20935 + C20938 - C20937) * C31874) *
               C32261 +
           ((C19912 * C953 - C19914 * C944 + C32053 * C6145 - C19915 * C6142) *
                C15325 +
            (C19912 * C962 - C19914 * C954 + C32053 * C6151 - C19915 * C6146) *
                C15319 +
            (C19912 * C955 - C19914 * C945 + C32053 * C6327 - C19915 * C6326) *
                C15326 +
            (C19912 * C963 - C19914 * C956 + C32053 * C6329 - C19915 * C6328) *
                C31874) *
               C32238) *
              C31925 * C237) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19912 * C126 - C19914 * C119 + C32053 * C354 - C19915 * C344) *
                C15325 +
            (C19912 * C140 - C19914 * C127 + C32053 * C374 - C19915 * C355) *
                C15319 +
            (C19917 - C19918 + C19919 - C19920) * C15326 +
            (C19921 - C19922 + C19923 - C19924) * C31874) *
               C32273 +
           ((C20903 - C20904 + C20905 - C20906) * C15325 +
            (C20907 - C20908 + C20909 - C20910) * C15319 +
            (C20288 - C20287 + C20290 - C20289) * C15326 +
            (C20292 - C20291 + C20294 - C20293) * C31874) *
               C32261 +
           C20953 * C32238) *
              C341 +
          (((C19914 * C344 - C19912 * C354 + C19915 * C349 - C32053 * C364) *
                C15325 +
            (C19914 * C355 - C19912 * C374 + C19915 * C365 - C32053 * C379) *
                C15319 +
            (C20441 - C20442 + C20443 - C20444) * C15326 +
            (C20445 - C20446 + C20447 - C20448) * C31874) *
               C32273 +
           ((C19914 * C676 - C19912 * C681 + C19915 * C1113 - C32053 * C1125) *
                C15325 +
            (C19914 * C682 - C19912 * C691 + C19915 * C1126 - C32053 * C1140) *
                C15319 +
            (C19914 * C677 - C19912 * C683 + C19915 * C1114 - C32053 * C1127) *
                C15326 +
            (C19914 * C684 - C19912 * C692 + C19915 * C1128 - C32053 * C1141) *
                C31874) *
               C32261 +
           ((C19914 * C1110 - C19912 * C1119 + C19915 * C1116 -
             C32053 * C1131) *
                C15325 +
            (C19914 * C1120 - C19912 * C1137 + C19915 * C1132 -
             C32053 * C1143) *
                C15319 +
            (C19914 * C1111 - C19912 * C1121 + C19915 * C1117 -
             C32053 * C1133) *
                C15326 +
            (C19914 * C1122 - C19912 * C1138 + C19915 * C1134 -
             C32053 * C1144) *
                C31874) *
               C32238) *
              C342 +
          (((C19912 * C364 - C19914 * C349 + C32053 * C2026 - C19915 * C2020) *
                C15325 +
            (C19912 * C379 - C19914 * C365 + C32053 * C2038 - C19915 * C2027) *
                C15319 +
            (C19912 * C366 - C19914 * C350 + C32053 * C2028 - C19915 * C2021) *
                C15326 +
            (C19912 * C380 - C19914 * C367 + C32053 * C2039 - C19915 * C2029) *
                C31874) *
               C32273 +
           ((C19912 * C1125 - C19914 * C1113 + C32053 * C2541 -
             C19915 * C2538) *
                C15325 +
            (C19912 * C1140 - C19914 * C1126 + C32053 * C2547 -
             C19915 * C2542) *
                C15319 +
            (C19912 * C1127 - C19914 * C1114 + C32053 * C2543 -
             C19915 * C2539) *
                C15326 +
            (C19912 * C1141 - C19914 * C1128 + C32053 * C2548 -
             C19915 * C2544) *
                C31874) *
               C32261 +
           ((C19912 * C1131 - C19914 * C1116 + C32053 * C6806 -
             C19915 * C6803) *
                C15325 +
            (C19912 * C1143 - C19914 * C1132 + C32053 * C6812 -
             C19915 * C6807) *
                C15319 +
            (C19912 * C1133 - C19914 * C1117 + C32053 * C7124 -
             C19915 * C7123) *
                C15326 +
            (C19912 * C1144 - C19914 * C1134 + C32053 * C7126 -
             C19915 * C7125) *
                C31874) *
               C32238) *
              C343) *
         C31911 * C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C32281 * C126 - C21833 * C119 + C32278 * C354 - C21834 * C344 +
            C32269 * C364 - C21835 * C349 + C32254 * C2026 - C21836 * C2020) *
               C15325 +
           (C32281 * C140 - C21833 * C127 + C32278 * C374 - C21834 * C355 +
            C32269 * C379 - C21835 * C365 + C32254 * C2038 - C21836 * C2027) *
               C15319 +
           (C21838 - C21839 + C21840 - C21841 + C21842 - C21843 + C21844 -
            C21845) *
               C15326 +
           (C21846 - C21847 + C21848 - C21849 + C21850 - C21851 + C21852 -
            C21853) *
               C31874) *
              C31955 * C31925 * C31911 * C110 +
          ((C21839 - C21838 + C21841 - C21840 + C21843 - C21842 + C21845 -
            C21844) *
               C15325 +
           (C21847 - C21846 + C21849 - C21848 + C21851 - C21850 + C21853 -
            C21852) *
               C15319 +
           (C21854 - C21855 + C21856 - C21857 + C21858 - C21859 + C21860 -
            C21861) *
               C15326 +
           (C21862 - C21863 + C21864 - C21865 + C21866 - C21867 + C21868 -
            C21869) *
               C31874) *
              C31955 * C31925 * C31911 * C111 +
          ((C21855 - C21854 + C21857 - C21856 + C21859 - C21858 + C21861 -
            C21860) *
               C15325 +
           (C21863 - C21862 + C21865 - C21864 + C21867 - C21866 + C21869 -
            C21868) *
               C15319 +
           (C32281 * C132 - C21833 * C122 + C32278 * C360 - C21834 * C347 +
            C32269 * C370 - C21835 * C352 + C32254 * C2365 - C21836 * C2364) *
               C15326 +
           (C32281 * C143 - C21833 * C133 + C32278 * C377 - C21834 * C361 +
            C32269 * C382 - C21835 * C371 + C32254 * C2367 - C21836 * C2366) *
               C31874) *
              C31955 * C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C32281 * C126 - C21833 * C119 + C32278 * C354 - C21834 * C344 +
            C32269 * C364 - C21835 * C349 + C32254 * C2026 - C21836 * C2020) *
               C15325 +
           (C32281 * C140 - C21833 * C127 + C32278 * C374 - C21834 * C355 +
            C32269 * C379 - C21835 * C365 + C32254 * C2038 - C21836 * C2027) *
               C15319 +
           (C21838 - C21839 + C21840 - C21841 + C21842 - C21843 + C21844 -
            C21845) *
               C15326 +
           (C21846 - C21847 + C21848 - C21849 + C21850 - C21851 + C21852 -
            C21853) *
               C31874) *
              C31955 * C31925 * C235 +
          ((C21833 * C239 - C32281 * C249 + C21834 * C676 - C32278 * C681 +
            C21835 * C1113 - C32269 * C1125 + C21836 * C2538 - C32254 * C2541) *
               C15325 +
           (C21833 * C250 - C32281 * C269 + C21834 * C682 - C32278 * C691 +
            C21835 * C1126 - C32269 * C1140 + C21836 * C2542 - C32254 * C2547) *
               C15319 +
           (C21833 * C240 - C32281 * C251 + C21834 * C677 - C32278 * C683 +
            C21835 * C1114 - C32269 * C1127 + C21836 * C2539 - C32254 * C2543) *
               C15326 +
           (C21833 * C252 - C32281 * C270 + C21834 * C684 - C32278 * C692 +
            C21835 * C1128 - C32269 * C1141 + C21836 * C2544 - C32254 * C2548) *
               C31874) *
              C31955 * C31925 * C236 +
          ((C32281 * C259 - C21833 * C244 + C32278 * C1119 - C21834 * C1110 +
            C32269 * C1131 - C21835 * C1116 + C32254 * C6806 - C21836 * C6803) *
               C15325 +
           (C32281 * C274 - C21833 * C260 + C32278 * C1137 - C21834 * C1120 +
            C32269 * C1143 - C21835 * C1132 + C32254 * C6812 - C21836 * C6807) *
               C15319 +
           (C32281 * C261 - C21833 * C245 + C32278 * C1121 - C21834 * C1111 +
            C32269 * C1133 - C21835 * C1117 + C32254 * C7124 - C21836 * C7123) *
               C15326 +
           (C32281 * C275 - C21833 * C262 + C32278 * C1138 - C21834 * C1122 +
            C32269 * C1144 - C21835 * C1134 + C32254 * C7126 - C21836 * C7125) *
               C31874) *
              C31955 * C31925 * C237) *
         C31899) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C32281 * C126 - C21833 * C119 + C32278 * C354 - C21834 * C344 +
            C32269 * C364 - C21835 * C349 + C32254 * C2026 - C21836 * C2020) *
               C15325 +
           (C32281 * C140 - C21833 * C127 + C32278 * C374 - C21834 * C355 +
            C32269 * C379 - C21835 * C365 + C32254 * C2038 - C21836 * C2027) *
               C15319 +
           (C21838 - C21839 + C21840 - C21841 + C21842 - C21843 + C21844 -
            C21845) *
               C15326 +
           (C21846 - C21847 + C21848 - C21849 + C21850 - C21851 + C21852 -
            C21853) *
               C31874) *
              C31955 * C341 +
          ((C21833 * C344 - C32281 * C354 + C21834 * C349 - C32278 * C364 +
            C21835 * C2020 - C32269 * C2026 + C21836 * C2023 - C32254 * C2032) *
               C15325 +
           (C21833 * C355 - C32281 * C374 + C21834 * C365 - C32278 * C379 +
            C21835 * C2027 - C32269 * C2038 + C21836 * C2033 - C32254 * C2041) *
               C15319 +
           (C21833 * C345 - C32281 * C356 + C21834 * C350 - C32278 * C366 +
            C21835 * C2021 - C32269 * C2028 + C21836 * C2024 - C32254 * C2034) *
               C15326 +
           (C21833 * C357 - C32281 * C375 + C21834 * C367 - C32278 * C380 +
            C21835 * C2029 - C32269 * C2039 + C21836 * C2035 - C32254 * C2042) *
               C31874) *
              C31955 * C342 +
          ((C32281 * C364 - C21833 * C349 + C32278 * C2026 - C21834 * C2020 +
            C32269 * C2032 - C21835 * C2023 + C32254 * C11723 -
            C21836 * C11721) *
               C15325 +
           (C32281 * C379 - C21833 * C365 + C32278 * C2038 - C21834 * C2027 +
            C32269 * C2041 - C21835 * C2033 + C32254 * C11727 -
            C21836 * C11724) *
               C15319 +
           (C32281 * C366 - C21833 * C350 + C32278 * C2028 - C21834 * C2021 +
            C32269 * C2034 - C21835 * C2024 + C32254 * C11898 -
            C21836 * C11897) *
               C15326 +
           (C32281 * C380 - C21833 * C367 + C32278 * C2039 - C21834 * C2029 +
            C32269 * C2042 - C21835 * C2035 + C32254 * C11900 -
            C21836 * C11899) *
               C31874) *
              C31955 * C343) *
         C31911 * C31899) /
            (p * q * std::sqrt(p + q));
    d2ee[88] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19912 * C126 - C19914 * C119 + C32053 * C354 - C19915 * C344) *
                 C15325 +
             (C19912 * C140 - C19914 * C127 + C32053 * C374 - C19915 * C355) *
                 C15319 +
             (C19917 - C19918 + C19919 - C19920) * C15326 +
             (C19921 - C19922 + C19923 - C19924) * C31874) *
                C32273 +
            ((C20903 - C20904 + C20905 - C20906) * C15325 +
             (C20907 - C20908 + C20909 - C20910) * C15319 + C21306 * C15326 +
             C21307 * C31874) *
                C32261 +
            C20953 * C32238) *
               C572 +
           (((C19914 * C344 - C19912 * C354 + C19915 * C349 - C32053 * C364) *
                 C15325 +
             (C19914 * C355 - C19912 * C374 + C19915 * C365 - C32053 * C379) *
                 C15319 +
             (C20441 - C20442 + C20443 - C20444) * C15326 +
             (C20445 - C20446 + C20447 - C20448) * C31874) *
                C32273 +
            ((C19914 * C676 - C19912 * C681 + C19915 * C1113 - C32053 * C1125) *
                 C15325 +
             (C19914 * C682 - C19912 * C691 + C19915 * C1126 - C32053 * C1140) *
                 C15319 +
             (C21506 - C21507 + C21508 - C21509) * C15326 +
             (C21510 - C21511 + C21512 - C21513) * C31874) *
                C32261 +
            ((C19914 * C1110 - C19912 * C1119 + C19915 * C1116 -
              C32053 * C1131) *
                 C15325 +
             (C19914 * C1120 - C19912 * C1137 + C19915 * C1132 -
              C32053 * C1143) *
                 C15319 +
             (C21514 - C21515 + C21516 - C21517) * C15326 +
             (C21518 - C21519 + C21520 - C21521) * C31874) *
                C32238) *
               C573) *
              C31911 * C468 +
          ((((C19918 - C19917 + C19920 - C19919) * C15325 +
             (C19922 - C19921 + C19924 - C19923) * C15319 +
             (C19926 - C19925 + C19928 - C19927) * C15326 +
             (C19930 - C19929 + C19932 - C19931) * C31874) *
                C32273 +
            (C21308 * C15325 + C21309 * C15319 +
             (C20295 - C20296 + C20297 - C20298) * C15326 +
             (C20299 - C20300 + C20301 - C20302) * C31874) *
                C32261 +
            (C21310 * C15325 + C21311 * C15319 +
             (C20749 - C20750 + C20751 - C20752) * C15326 +
             (C20753 - C20754 + C20755 - C20756) * C31874) *
                C32238) *
               C572 +
           (((C20442 - C20441 + C20444 - C20443) * C15325 +
             (C20446 - C20445 + C20448 - C20447) * C15319 +
             (C20450 - C20449 + C20452 - C20451) * C15326 +
             (C20454 - C20453 + C20456 - C20455) * C31874) *
                C32273 +
            ((C21507 - C21506 + C21509 - C21508) * C15325 +
             (C21511 - C21510 + C21513 - C21512) * C15319 +
             (C19912 * C685 - C19914 * C678 + C32053 * C1129 - C19915 * C1115) *
                 C15326 +
             (C19912 * C693 - C19914 * C686 + C32053 * C1142 - C19915 * C1130) *
                 C31874) *
                C32261 +
            ((C21515 - C21514 + C21517 - C21516) * C15325 +
             (C21519 - C21518 + C21521 - C21520) * C15319 +
             (C19912 * C1123 - C19914 * C1112 + C32053 * C1135 -
              C19915 * C1118) *
                 C15326 +
             (C19912 * C1139 - C19914 * C1124 + C32053 * C1145 -
              C19915 * C1136) *
                 C31874) *
                C32238) *
               C573) *
              C31911 * C469)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C19912 * C126 - C19914 * C119 + C32053 * C354 - C19915 * C344) *
                C14631 +
            (C19912 * C140 - C19914 * C127 + C32053 * C374 - C19915 * C355) *
                C32279 +
            (C19917 - C19918 + C19919 - C19920) * C14632 +
            (C19921 - C19922 + C19923 - C19924) * C32272 + C19957 * C14633 +
            C19958 * C32259 + C19959 * C14634 + C19960 * C32242) *
               C31955 * C572 +
           ((C19914 * C344 - C19912 * C354 + C19915 * C349 - C32053 * C364) *
                C14631 +
            (C19914 * C355 - C19912 * C374 + C19915 * C365 - C32053 * C379) *
                C32279 +
            (C20441 - C20442 + C20443 - C20444) * C14632 +
            (C20445 - C20446 + C20447 - C20448) * C32272 +
            (C20449 - C20450 + C20451 - C20452) * C14633 +
            (C20453 - C20454 + C20455 - C20456) * C32259 +
            (C20457 - C20458 + C20459 - C20460) * C14634 +
            (C20461 - C20462 + C20463 - C20464) * C32242) *
               C31955 * C573) *
              C31911 * C468 +
          (((C19918 - C19917 + C19920 - C19919) * C14631 +
            (C19922 - C19921 + C19924 - C19923) * C32279 +
            (C19926 - C19925 + C19928 - C19927) * C14632 +
            (C19930 - C19929 + C19932 - C19931) * C32272 +
            (C19934 - C19933 + C19936 - C19935) * C14633 +
            (C19938 - C19937 + C19940 - C19939) * C32259 +
            (C19941 - C19942 + C19943 - C19944) * C14634 +
            (C19945 - C19946 + C19947 - C19948) * C32242) *
               C31955 * C572 +
           ((C20442 - C20441 + C20444 - C20443) * C14631 +
            (C20446 - C20445 + C20448 - C20447) * C32279 +
            (C20450 - C20449 + C20452 - C20451) * C14632 +
            (C20454 - C20453 + C20456 - C20455) * C32272 +
            (C20458 - C20457 + C20460 - C20459) * C14633 +
            (C20462 - C20461 + C20464 - C20463) * C32259 +
            (C19912 * C362 - C19914 * C348 + C32053 * C372 - C19915 * C353) *
                C14634 +
            (C19912 * C378 - C19914 * C363 + C32053 * C383 - C19915 * C373) *
                C32242) *
               C31955 * C573) *
              C31911 * C469)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C32281 * C126 - C21833 * C119 + C32278 * C354 - C21834 * C344 +
             C32269 * C364 - C21835 * C349 + C32254 * C2026 - C21836 * C2020) *
                C15325 +
            (C32281 * C140 - C21833 * C127 + C32278 * C374 - C21834 * C355 +
             C32269 * C379 - C21835 * C365 + C32254 * C2038 - C21836 * C2027) *
                C15319 +
            (C21838 - C21839 + C21840 - C21841 + C21842 - C21843 + C21844 -
             C21845) *
                C15326 +
            (C21846 - C21847 + C21848 - C21849 + C21850 - C21851 + C21852 -
             C21853) *
                C31874) *
               C31955 * C572 +
           ((C21833 * C344 - C32281 * C354 + C21834 * C349 - C32278 * C364 +
             C21835 * C2020 - C32269 * C2026 + C21836 * C2023 -
             C32254 * C2032) *
                C15325 +
            (C21833 * C355 - C32281 * C374 + C21834 * C365 - C32278 * C379 +
             C21835 * C2027 - C32269 * C2038 + C21836 * C2033 -
             C32254 * C2041) *
                C15319 +
            (C22342 - C22343 + C22344 - C22345 + C22346 - C22347 + C22348 -
             C22349) *
                C15326 +
            (C22350 - C22351 + C22352 - C22353 + C22354 - C22355 + C22356 -
             C22357) *
                C31874) *
               C31955 * C573) *
              C31911 * C468 +
          (((C21839 - C21838 + C21841 - C21840 + C21843 - C21842 + C21845 -
             C21844) *
                C15325 +
            (C21847 - C21846 + C21849 - C21848 + C21851 - C21850 + C21853 -
             C21852) *
                C15319 +
            (C21854 - C21855 + C21856 - C21857 + C21858 - C21859 + C21860 -
             C21861) *
                C15326 +
            (C21862 - C21863 + C21864 - C21865 + C21866 - C21867 + C21868 -
             C21869) *
                C31874) *
               C31955 * C572 +
           ((C22343 - C22342 + C22345 - C22344 + C22347 - C22346 + C22349 -
             C22348) *
                C15325 +
            (C22351 - C22350 + C22353 - C22352 + C22355 - C22354 + C22357 -
             C22356) *
                C15319 +
            (C32281 * C358 - C21833 * C346 + C32278 * C368 - C21834 * C351 +
             C32269 * C2030 - C21835 * C2022 + C32254 * C2036 -
             C21836 * C2025) *
                C15326 +
            (C32281 * C376 - C21833 * C359 + C32278 * C381 - C21834 * C369 +
             C32269 * C2040 - C21835 * C2031 + C32254 * C2043 -
             C21836 * C2037) *
                C31874) *
               C31955 * C573) *
              C31911 * C469)) /
            (p * q * std::sqrt(p + q));
    d2ee[89] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C19912 * C126 - C19914 * C119 + C32053 * C354 - C19915 * C344) *
               C14631 +
           (C19912 * C140 - C19914 * C127 + C32053 * C374 - C19915 * C355) *
               C32279 +
           (C19917 - C19918 + C19919 - C19920) * C14632 +
           (C19921 - C19922 + C19923 - C19924) * C32272 + C19957 * C14633 +
           C19958 * C32259 + C19959 * C14634 + C19960 * C32242) *
              C31955 * C31925 * C235 +
          ((C19914 * C239 - C19912 * C249 + C19915 * C676 - C32053 * C681) *
               C14631 +
           (C19914 * C250 - C19912 * C269 + C19915 * C682 - C32053 * C691) *
               C32279 +
           (C19914 * C240 - C19912 * C251 + C19915 * C677 - C32053 * C683) *
               C14632 +
           (C19914 * C252 - C19912 * C270 + C19915 * C684 - C32053 * C692) *
               C32272 +
           (C19914 * C241 - C19912 * C253 + C19915 * C678 - C32053 * C685) *
               C14633 +
           (C19914 * C254 - C19912 * C271 + C19915 * C686 - C32053 * C693) *
               C32259 +
           (C19914 * C242 - C19912 * C255 + C19915 * C679 - C32053 * C687) *
               C14634 +
           (C19914 * C256 - C19912 * C272 + C19915 * C688 - C32053 * C694) *
               C32242) *
              C31955 * C31925 * C236 +
          ((C19912 * C259 - C19914 * C244 + C32053 * C1119 - C19915 * C1110) *
               C14631 +
           (C19912 * C274 - C19914 * C260 + C32053 * C1137 - C19915 * C1120) *
               C32279 +
           (C19912 * C261 - C19914 * C245 + C32053 * C1121 - C19915 * C1111) *
               C14632 +
           (C19912 * C275 - C19914 * C262 + C32053 * C1138 - C19915 * C1122) *
               C32272 +
           (C19912 * C263 - C19914 * C246 + C32053 * C1123 - C19915 * C1112) *
               C14633 +
           (C19912 * C276 - C19914 * C264 + C32053 * C1139 - C19915 * C1124) *
               C32259 +
           (C19912 * C265 - C19914 * C247 + C32053 * C1453 - C19915 * C1452) *
               C14634 +
           (C19912 * C277 - C19914 * C266 + C32053 * C1455 - C19915 * C1454) *
               C32242) *
              C31955 * C31925 * C237) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C19912 * C126 - C19914 * C119 + C32053 * C354 - C19915 * C344) *
               C14631 +
           (C19912 * C140 - C19914 * C127 + C32053 * C374 - C19915 * C355) *
               C32279 +
           (C19917 - C19918 + C19919 - C19920) * C14632 +
           (C19921 - C19922 + C19923 - C19924) * C32272 + C19957 * C14633 +
           C19958 * C32259 + C19959 * C14634 + C19960 * C32242) *
              C31955 * C31925 * C31911 * C110 +
          ((C19918 - C19917 + C19920 - C19919) * C14631 +
           (C19922 - C19921 + C19924 - C19923) * C32279 +
           (C19926 - C19925 + C19928 - C19927) * C14632 +
           (C19930 - C19929 + C19932 - C19931) * C32272 +
           (C19934 - C19933 + C19936 - C19935) * C14633 +
           (C19938 - C19937 + C19940 - C19939) * C32259 +
           (C19941 - C19942 + C19943 - C19944) * C14634 +
           (C19945 - C19946 + C19947 - C19948) * C32242) *
              C31955 * C31925 * C31911 * C111 +
          (C19957 * C14631 + C19958 * C32279 + C19959 * C14632 +
           C19960 * C32272 + (C19942 - C19941 + C19944 - C19943) * C14633 +
           (C19946 - C19945 + C19948 - C19947) * C32259 +
           (C19912 * C136 - C19914 * C124 + C32053 * C575 - C19915 * C574) *
               C14634 +
           (C19912 * C145 - C19914 * C137 + C32053 * C577 - C19915 * C576) *
               C32242) *
              C31955 * C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C19912 * C126 - C19914 * C119 + C32053 * C354 - C19915 * C344) *
                C15325 +
            (C19912 * C140 - C19914 * C127 + C32053 * C374 - C19915 * C355) *
                C15319 +
            (C19917 - C19918 + C19919 - C19920) * C15326 +
            (C19921 - C19922 + C19923 - C19924) * C31874) *
               C32273 +
           ((C19912 * C249 - C19914 * C239 + C32053 * C681 - C19915 * C676) *
                C15325 +
            (C19912 * C269 - C19914 * C250 + C32053 * C691 - C19915 * C682) *
                C15319 +
            (C20288 - C20287 + C20290 - C20289) * C15326 +
            (C20292 - C20291 + C20294 - C20293) * C31874) *
               C32261 +
           ((C19912 * C259 - C19914 * C244 + C32053 * C1119 - C19915 * C1110) *
                C15325 +
            (C19912 * C274 - C19914 * C260 + C32053 * C1137 - C19915 * C1120) *
                C15319 +
            (C20741 - C20742 + C20743 - C20744) * C15326 +
            (C20745 - C20746 + C20747 - C20748) * C31874) *
               C32238) *
              C31925 * C31911 * C110 +
          (((C19918 - C19917 + C19920 - C19919) * C15325 +
            (C19922 - C19921 + C19924 - C19923) * C15319 +
            (C19926 - C19925 + C19928 - C19927) * C15326 +
            (C19930 - C19929 + C19932 - C19931) * C31874) *
               C32273 +
           ((C20287 - C20288 + C20289 - C20290) * C15325 +
            (C20291 - C20292 + C20293 - C20294) * C15319 +
            (C20295 - C20296 + C20297 - C20298) * C15326 +
            (C20299 - C20300 + C20301 - C20302) * C31874) *
               C32261 +
           ((C20742 - C20741 + C20744 - C20743) * C15325 +
            (C20746 - C20745 + C20748 - C20747) * C15319 +
            (C20749 - C20750 + C20751 - C20752) * C15326 +
            (C20753 - C20754 + C20755 - C20756) * C31874) *
               C32238) *
              C31925 * C31911 * C111 +
          ((C19957 * C15325 + C19958 * C15319 + C19959 * C15326 +
            C19960 * C31874) *
               C32273 +
           ((C20296 - C20295 + C20298 - C20297) * C15325 +
            (C20300 - C20299 + C20302 - C20301) * C15319 +
            (C20304 - C20303 + C20306 - C20305) * C15326 +
            (C20308 - C20307 + C20310 - C20309) * C31874) *
               C32261 +
           ((C20750 - C20749 + C20752 - C20751) * C15325 +
            (C20754 - C20753 + C20756 - C20755) * C15319 +
            (C19912 * C265 - C19914 * C247 + C32053 * C1453 - C19915 * C1452) *
                C15326 +
            (C19912 * C277 - C19914 * C266 + C32053 * C1455 - C19915 * C1454) *
                C31874) *
               C32238) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C19912 * C126 - C19914 * C119 + C32053 * C354 - C19915 * C344) *
                C15325 +
            (C19912 * C140 - C19914 * C127 + C32053 * C374 - C19915 * C355) *
                C15319 +
            (C19917 - C19918 + C19919 - C19920) * C15326 +
            (C19921 - C19922 + C19923 - C19924) * C31874) *
               C32273 +
           ((C20903 - C20904 + C20905 - C20906) * C15325 +
            (C20907 - C20908 + C20909 - C20910) * C15319 +
            (C20288 - C20287 + C20290 - C20289) * C15326 +
            (C20292 - C20291 + C20294 - C20293) * C31874) *
               C32261 +
           C20953 * C32238) *
              C31925 * C235 +
          (((C20904 - C20903 + C20906 - C20905) * C15325 +
            (C20908 - C20907 + C20910 - C20909) * C15319 +
            (C20287 - C20288 + C20289 - C20290) * C15326 +
            (C20291 - C20292 + C20293 - C20294) * C31874) *
               C32273 +
           ((C20912 - C20911 + C20914 - C20913) * C15325 +
            (C20916 - C20915 + C20918 - C20917) * C15319 +
            (C20742 - C20741 + C20744 - C20743) * C15326 +
            (C20746 - C20745 + C20748 - C20747) * C31874) *
               C32261 +
           ((C20923 - C20924 + C20925 - C20926) * C15325 +
            (C20927 - C20928 + C20929 - C20930) * C15319 +
            (C20931 - C20932 + C20933 - C20934) * C15326 +
            (C20935 - C20936 + C20937 - C20938) * C31874) *
               C32238) *
              C31925 * C236 +
          (C20953 * C32273 +
           ((C20924 - C20923 + C20926 - C20925) * C15325 +
            (C20928 - C20927 + C20930 - C20929) * C15319 +
            (C20932 - C20931 + C20934 - C20933) * C15326 +
            (C20936 - C20935 + C20938 - C20937) * C31874) *
               C32261 +
           ((C19912 * C953 - C19914 * C944 + C32053 * C6145 - C19915 * C6142) *
                C15325 +
            (C19912 * C962 - C19914 * C954 + C32053 * C6151 - C19915 * C6146) *
                C15319 +
            (C19912 * C955 - C19914 * C945 + C32053 * C6327 - C19915 * C6326) *
                C15326 +
            (C19912 * C963 - C19914 * C956 + C32053 * C6329 - C19915 * C6328) *
                C31874) *
               C32238) *
              C31925 * C237) *
         C31899) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C32281 * C126 - C21833 * C119 + C32278 * C354 - C21834 * C344 +
            C32269 * C364 - C21835 * C349 + C32254 * C2026 - C21836 * C2020) *
               C15325 +
           (C32281 * C140 - C21833 * C127 + C32278 * C374 - C21834 * C355 +
            C32269 * C379 - C21835 * C365 + C32254 * C2038 - C21836 * C2027) *
               C15319 +
           (C21838 - C21839 + C21840 - C21841 + C21842 - C21843 + C21844 -
            C21845) *
               C15326 +
           (C21846 - C21847 + C21848 - C21849 + C21850 - C21851 + C21852 -
            C21853) *
               C31874) *
              C31955 * C31925 * C31911 * C110 +
          ((C21839 - C21838 + C21841 - C21840 + C21843 - C21842 + C21845 -
            C21844) *
               C15325 +
           (C21847 - C21846 + C21849 - C21848 + C21851 - C21850 + C21853 -
            C21852) *
               C15319 +
           (C21854 - C21855 + C21856 - C21857 + C21858 - C21859 + C21860 -
            C21861) *
               C15326 +
           (C21862 - C21863 + C21864 - C21865 + C21866 - C21867 + C21868 -
            C21869) *
               C31874) *
              C31955 * C31925 * C31911 * C111 +
          ((C21855 - C21854 + C21857 - C21856 + C21859 - C21858 + C21861 -
            C21860) *
               C15325 +
           (C21863 - C21862 + C21865 - C21864 + C21867 - C21866 + C21869 -
            C21868) *
               C15319 +
           (C32281 * C132 - C21833 * C122 + C32278 * C360 - C21834 * C347 +
            C32269 * C370 - C21835 * C352 + C32254 * C2365 - C21836 * C2364) *
               C15326 +
           (C32281 * C143 - C21833 * C133 + C32278 * C377 - C21834 * C361 +
            C32269 * C382 - C21835 * C371 + C32254 * C2367 - C21836 * C2366) *
               C31874) *
              C31955 * C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C32281 * C126 - C21833 * C119 + C32278 * C354 - C21834 * C344 +
            C32269 * C364 - C21835 * C349 + C32254 * C2026 - C21836 * C2020) *
               C15325 +
           (C32281 * C140 - C21833 * C127 + C32278 * C374 - C21834 * C355 +
            C32269 * C379 - C21835 * C365 + C32254 * C2038 - C21836 * C2027) *
               C15319 +
           (C21838 - C21839 + C21840 - C21841 + C21842 - C21843 + C21844 -
            C21845) *
               C15326 +
           (C21846 - C21847 + C21848 - C21849 + C21850 - C21851 + C21852 -
            C21853) *
               C31874) *
              C31955 * C31925 * C235 +
          ((C21833 * C239 - C32281 * C249 + C21834 * C676 - C32278 * C681 +
            C21835 * C1113 - C32269 * C1125 + C21836 * C2538 - C32254 * C2541) *
               C15325 +
           (C21833 * C250 - C32281 * C269 + C21834 * C682 - C32278 * C691 +
            C21835 * C1126 - C32269 * C1140 + C21836 * C2542 - C32254 * C2547) *
               C15319 +
           (C21833 * C240 - C32281 * C251 + C21834 * C677 - C32278 * C683 +
            C21835 * C1114 - C32269 * C1127 + C21836 * C2539 - C32254 * C2543) *
               C15326 +
           (C21833 * C252 - C32281 * C270 + C21834 * C684 - C32278 * C692 +
            C21835 * C1128 - C32269 * C1141 + C21836 * C2544 - C32254 * C2548) *
               C31874) *
              C31955 * C31925 * C236 +
          ((C32281 * C259 - C21833 * C244 + C32278 * C1119 - C21834 * C1110 +
            C32269 * C1131 - C21835 * C1116 + C32254 * C6806 - C21836 * C6803) *
               C15325 +
           (C32281 * C274 - C21833 * C260 + C32278 * C1137 - C21834 * C1120 +
            C32269 * C1143 - C21835 * C1132 + C32254 * C6812 - C21836 * C6807) *
               C15319 +
           (C32281 * C261 - C21833 * C245 + C32278 * C1121 - C21834 * C1111 +
            C32269 * C1133 - C21835 * C1117 + C32254 * C7124 - C21836 * C7123) *
               C15326 +
           (C32281 * C275 - C21833 * C262 + C32278 * C1138 - C21834 * C1122 +
            C32269 * C1144 - C21835 * C1134 + C32254 * C7126 - C21836 * C7125) *
               C31874) *
              C31955 * C31925 * C237) *
         C31899) /
            (p * q * std::sqrt(p + q));
    d2ee[90] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C32049 * C126 - C31010 * C119 + C32056 * C354 - C31002 * C344 +
             C23639 * C364 - C31016 * C349) *
                C30885 +
            (C32049 * C140 - C31010 * C127 + C32056 * C374 - C31002 * C355 +
             C23639 * C379 - C31016 * C365) *
                C31869 +
            (C23644 - C23645 + C23646 - C23647 + C23648 - C23649) * C30881 +
            (C23650 - C23651 + C23652 - C23653 + C23654 - C23655) * C31877 +
            C23688 * C30891 + C23689 * C17091) *
               C31955 * C31925 * C466 +
           ((C31010 * C239 - C32049 * C249 + C31002 * C676 - C32056 * C681 +
             C31016 * C1113 - C23639 * C1125) *
                C30885 +
            (C31010 * C250 - C32049 * C269 + C31002 * C682 - C32056 * C691 +
             C31016 * C1126 - C23639 * C1140) *
                C31869 +
            (C24056 - C24057 + C24058 - C24059 + C24060 - C24061) * C30881 +
            (C24062 - C24063 + C24064 - C24065 + C24066 - C24067) * C31877 +
            (C24068 - C24069 + C24070 - C24071 + C24072 - C24073) * C30891 +
            (C24074 - C24075 + C24076 - C24077 + C24078 - C24079) * C17091) *
               C31955 * C31925 * C467) *
              C468 +
          (((C23645 - C23644 + C23647 - C23646 + C23649 - C23648) * C30885 +
            (C23651 - C23650 + C23653 - C23652 + C23655 - C23654) * C31869 +
            (C23657 - C23656 + C23659 - C23658 + C23661 - C23660) * C30881 +
            (C23663 - C23662 + C23665 - C23664 + C23667 - C23666) * C31877 +
            (C23668 - C23669 + C23670 - C23671 + C23672 - C23673) * C30891 +
            (C23674 - C23675 + C23676 - C23677 + C23678 - C23679) * C17091) *
               C31955 * C31925 * C466 +
           ((C24057 - C24056 + C24059 - C24058 + C24061 - C24060) * C30885 +
            (C24063 - C24062 + C24065 - C24064 + C24067 - C24066) * C31869 +
            (C24069 - C24068 + C24071 - C24070 + C24073 - C24072) * C30881 +
            (C24075 - C24074 + C24077 - C24076 + C24079 - C24078) * C31877 +
            (C32049 * C255 - C31010 * C242 + C32056 * C687 - C31002 * C679 +
             C23639 * C2191 - C31016 * C2190) *
                C30891 +
            (C32049 * C272 - C31010 * C256 + C32056 * C694 - C31002 * C688 +
             C23639 * C2193 - C31016 * C2192) *
                C17091) *
               C31955 * C31925 * C467) *
              C469)) /
        (p * q * std::sqrt(p + q));
    d2ee[91] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C32049 * C126 - C31010 * C119 + C32056 * C354 - C31002 * C344 +
             C23639 * C364 - C31016 * C349) *
                C30885 +
            (C32049 * C140 - C31010 * C127 + C32056 * C374 - C31002 * C355 +
             C23639 * C379 - C31016 * C365) *
                C31869 +
            (C23644 - C23645 + C23646 - C23647 + C23648 - C23649) * C30881 +
            (C23650 - C23651 + C23652 - C23653 + C23654 - C23655) * C31877 +
            C23688 * C30891 + C23689 * C17091) *
               C31955 * C572 +
           ((C31010 * C344 - C32049 * C354 + C31002 * C349 - C32056 * C364 +
             C31016 * C2020 - C23639 * C2026) *
                C30885 +
            (C31010 * C355 - C32049 * C374 + C31002 * C365 - C32056 * C379 +
             C31016 * C2027 - C23639 * C2038) *
                C31869 +
            (C24226 - C24227 + C24228 - C24229 + C24230 - C24231) * C30881 +
            (C24232 - C24233 + C24234 - C24235 + C24236 - C24237) * C31877 +
            (C24238 - C24239 + C24240 - C24241 + C24242 - C24243) * C30891 +
            (C24244 - C24245 + C24246 - C24247 + C24248 - C24249) * C17091) *
               C31955 * C573) *
              C466 +
          (((C31010 * C239 - C32049 * C249 + C31002 * C676 - C32056 * C681 +
             C31016 * C1113 - C23639 * C1125) *
                C30885 +
            (C31010 * C250 - C32049 * C269 + C31002 * C682 - C32056 * C691 +
             C31016 * C1126 - C23639 * C1140) *
                C31869 +
            (C24056 - C24057 + C24058 - C24059 + C24060 - C24061) * C30881 +
            (C24062 - C24063 + C24064 - C24065 + C24066 - C24067) * C31877 +
            (C24068 - C24069 + C24070 - C24071 + C24072 - C24073) * C30891 +
            (C24074 - C24075 + C24076 - C24077 + C24078 - C24079) * C17091) *
               C31955 * C572 +
           ((C32049 * C681 - C31010 * C676 + C32056 * C1125 - C31002 * C1113 +
             C23639 * C2541 - C31016 * C2538) *
                C30885 +
            (C32049 * C691 - C31010 * C682 + C32056 * C1140 - C31002 * C1126 +
             C23639 * C2547 - C31016 * C2542) *
                C31869 +
            (C32049 * C683 - C31010 * C677 + C32056 * C1127 - C31002 * C1114 +
             C23639 * C2543 - C31016 * C2539) *
                C30881 +
            (C32049 * C692 - C31010 * C684 + C32056 * C1141 - C31002 * C1128 +
             C23639 * C2548 - C31016 * C2544) *
                C31877 +
            (C32049 * C685 - C31010 * C678 + C32056 * C1129 - C31002 * C1115 +
             C23639 * C2545 - C31016 * C2540) *
                C30891 +
            (C32049 * C693 - C31010 * C686 + C32056 * C1142 - C31002 * C1130 +
             C23639 * C2549 - C31016 * C2546) *
                C17091) *
               C31955 * C573) *
              C467) *
         C31899) /
        (p * q * std::sqrt(p + q));
    d2ee[92] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C32049 * C126 - C31010 * C119 + C32056 * C354 - C31002 * C344 +
            C23639 * C364 - C31016 * C349) *
               C30885 +
           (C32049 * C140 - C31010 * C127 + C32056 * C374 - C31002 * C355 +
            C23639 * C379 - C31016 * C365) *
               C31869 +
           (C23644 - C23645 + C23646 - C23647 + C23648 - C23649) * C30881 +
           (C23650 - C23651 + C23652 - C23653 + C23654 - C23655) * C31877 +
           C23688 * C30891 + C23689 * C17091) *
              C31955 * C31925 * C235 +
          ((C31010 * C239 - C32049 * C249 + C31002 * C676 - C32056 * C681 +
            C31016 * C1113 - C23639 * C1125) *
               C30885 +
           (C31010 * C250 - C32049 * C269 + C31002 * C682 - C32056 * C691 +
            C31016 * C1126 - C23639 * C1140) *
               C31869 +
           (C31010 * C240 - C32049 * C251 + C31002 * C677 - C32056 * C683 +
            C31016 * C1114 - C23639 * C1127) *
               C30881 +
           (C31010 * C252 - C32049 * C270 + C31002 * C684 - C32056 * C692 +
            C31016 * C1128 - C23639 * C1141) *
               C31877 +
           (C31010 * C241 - C32049 * C253 + C31002 * C678 - C32056 * C685 +
            C31016 * C1115 - C23639 * C1129) *
               C30891 +
           (C31010 * C254 - C32049 * C271 + C31002 * C686 - C32056 * C693 +
            C31016 * C1130 - C23639 * C1142) *
               C17091) *
              C31955 * C31925 * C236 +
          ((C32049 * C259 - C31010 * C244 + C32056 * C1119 - C31002 * C1110 +
            C23639 * C1131 - C31016 * C1116) *
               C30885 +
           (C32049 * C274 - C31010 * C260 + C32056 * C1137 - C31002 * C1120 +
            C23639 * C1143 - C31016 * C1132) *
               C31869 +
           (C32049 * C261 - C31010 * C245 + C32056 * C1121 - C31002 * C1111 +
            C23639 * C1133 - C31016 * C1117) *
               C30881 +
           (C32049 * C275 - C31010 * C262 + C32056 * C1138 - C31002 * C1122 +
            C23639 * C1144 - C31016 * C1134) *
               C31877 +
           (C32049 * C263 - C31010 * C246 + C32056 * C1123 - C31002 * C1112 +
            C23639 * C1135 - C31016 * C1118) *
               C30891 +
           (C32049 * C276 - C31010 * C264 + C32056 * C1139 - C31002 * C1124 +
            C23639 * C1145 - C31016 * C1136) *
               C17091) *
              C31955 * C31925 * C237) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C32049 * C126 - C31010 * C119 + C32056 * C354 - C31002 * C344 +
            C23639 * C364 - C31016 * C349) *
               C30885 +
           (C32049 * C140 - C31010 * C127 + C32056 * C374 - C31002 * C355 +
            C23639 * C379 - C31016 * C365) *
               C31869 +
           (C23644 - C23645 + C23646 - C23647 + C23648 - C23649) * C30881 +
           (C23650 - C23651 + C23652 - C23653 + C23654 - C23655) * C31877 +
           C23688 * C30891 + C23689 * C17091) *
              C31955 * C31925 * C31911 * C110 +
          ((C23645 - C23644 + C23647 - C23646 + C23649 - C23648) * C30885 +
           (C23651 - C23650 + C23653 - C23652 + C23655 - C23654) * C31869 +
           (C23657 - C23656 + C23659 - C23658 + C23661 - C23660) * C30881 +
           (C23663 - C23662 + C23665 - C23664 + C23667 - C23666) * C31877 +
           (C23668 - C23669 + C23670 - C23671 + C23672 - C23673) * C30891 +
           (C23674 - C23675 + C23676 - C23677 + C23678 - C23679) * C17091) *
              C31955 * C31925 * C31911 * C111 +
          (C23688 * C30885 + C23689 * C31869 +
           (C23669 - C23668 + C23671 - C23670 + C23673 - C23672) * C30881 +
           (C23675 - C23674 + C23677 - C23676 + C23679 - C23678) * C31877 +
           (C32049 * C134 - C31010 * C123 + C32056 * C362 - C31002 * C348 +
            C23639 * C372 - C31016 * C353) *
               C30891 +
           (C32049 * C144 - C31010 * C135 + C32056 * C378 - C31002 * C363 +
            C23639 * C383 - C31016 * C373) *
               C17091) *
              C31955 * C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((C32049 * C126 - C31010 * C119 + C32056 * C354 - C31002 * C344 +
            C23639 * C364 - C31016 * C349) *
               C30885 +
           (C32049 * C140 - C31010 * C127 + C32056 * C374 - C31002 * C355 +
            C23639 * C379 - C31016 * C365) *
               C31869 +
           (C23644 - C23645 + C23646 - C23647 + C23648 - C23649) * C30881 +
           (C23650 - C23651 + C23652 - C23653 + C23654 - C23655) * C31877 +
           C23688 * C30891 + C23689 * C17091) *
              C31955 * C341 +
          ((C31010 * C344 - C32049 * C354 + C31002 * C349 - C32056 * C364 +
            C31016 * C2020 - C23639 * C2026) *
               C30885 +
           (C31010 * C355 - C32049 * C374 + C31002 * C365 - C32056 * C379 +
            C31016 * C2027 - C23639 * C2038) *
               C31869 +
           (C31010 * C345 - C32049 * C356 + C31002 * C350 - C32056 * C366 +
            C31016 * C2021 - C23639 * C2028) *
               C30881 +
           (C31010 * C357 - C32049 * C375 + C31002 * C367 - C32056 * C380 +
            C31016 * C2029 - C23639 * C2039) *
               C31877 +
           (C31010 * C346 - C32049 * C358 + C31002 * C351 - C32056 * C368 +
            C31016 * C2022 - C23639 * C2030) *
               C30891 +
           (C31010 * C359 - C32049 * C376 + C31002 * C369 - C32056 * C381 +
            C31016 * C2031 - C23639 * C2040) *
               C17091) *
              C31955 * C342 +
          ((C32049 * C364 - C31010 * C349 + C32056 * C2026 - C31002 * C2020 +
            C23639 * C2032 - C31016 * C2023) *
               C30885 +
           (C32049 * C379 - C31010 * C365 + C32056 * C2038 - C31002 * C2027 +
            C23639 * C2041 - C31016 * C2033) *
               C31869 +
           (C32049 * C366 - C31010 * C350 + C32056 * C2028 - C31002 * C2021 +
            C23639 * C2034 - C31016 * C2024) *
               C30881 +
           (C32049 * C380 - C31010 * C367 + C32056 * C2039 - C31002 * C2029 +
            C23639 * C2042 - C31016 * C2035) *
               C31877 +
           (C32049 * C368 - C31010 * C351 + C32056 * C2030 - C31002 * C2022 +
            C23639 * C2036 - C31016 * C2025) *
               C30891 +
           (C32049 * C381 - C31010 * C369 + C32056 * C2040 - C31002 * C2031 +
            C23639 * C2043 - C31016 * C2037) *
               C17091) *
              C31955 * C343) *
         C31911 * C31899) /
            (p * q * std::sqrt(p + q));
    d2ee[93] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C32049 * C126 - C31010 * C119 + C32056 * C354 - C31002 * C344 +
             C23639 * C364 - C31016 * C349) *
                C30885 +
            (C32049 * C140 - C31010 * C127 + C32056 * C374 - C31002 * C355 +
             C23639 * C379 - C31016 * C365) *
                C31869 +
            (C23644 - C23645 + C23646 - C23647 + C23648 - C23649) * C30881 +
            (C23650 - C23651 + C23652 - C23653 + C23654 - C23655) * C31877 +
            C23688 * C30891 + C23689 * C17091) *
               C31955 * C572 +
           ((C31010 * C344 - C32049 * C354 + C31002 * C349 - C32056 * C364 +
             C31016 * C2020 - C23639 * C2026) *
                C30885 +
            (C31010 * C355 - C32049 * C374 + C31002 * C365 - C32056 * C379 +
             C31016 * C2027 - C23639 * C2038) *
                C31869 +
            (C24226 - C24227 + C24228 - C24229 + C24230 - C24231) * C30881 +
            (C24232 - C24233 + C24234 - C24235 + C24236 - C24237) * C31877 +
            (C24238 - C24239 + C24240 - C24241 + C24242 - C24243) * C30891 +
            (C24244 - C24245 + C24246 - C24247 + C24248 - C24249) * C17091) *
               C31955 * C573) *
              C31911 * C468 +
          (((C23645 - C23644 + C23647 - C23646 + C23649 - C23648) * C30885 +
            (C23651 - C23650 + C23653 - C23652 + C23655 - C23654) * C31869 +
            (C23657 - C23656 + C23659 - C23658 + C23661 - C23660) * C30881 +
            (C23663 - C23662 + C23665 - C23664 + C23667 - C23666) * C31877 +
            (C23668 - C23669 + C23670 - C23671 + C23672 - C23673) * C30891 +
            (C23674 - C23675 + C23676 - C23677 + C23678 - C23679) * C17091) *
               C31955 * C572 +
           ((C24227 - C24226 + C24229 - C24228 + C24231 - C24230) * C30885 +
            (C24233 - C24232 + C24235 - C24234 + C24237 - C24236) * C31869 +
            (C24239 - C24238 + C24241 - C24240 + C24243 - C24242) * C30881 +
            (C24245 - C24244 + C24247 - C24246 + C24249 - C24248) * C31877 +
            (C32049 * C360 - C31010 * C347 + C32056 * C370 - C31002 * C352 +
             C23639 * C2365 - C31016 * C2364) *
                C30891 +
            (C32049 * C377 - C31010 * C361 + C32056 * C382 - C31002 * C371 +
             C23639 * C2367 - C31016 * C2366) *
                C17091) *
               C31955 * C573) *
              C31911 * C469)) /
        (p * q * std::sqrt(p + q));
    d2ee[94] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((C32049 * C126 - C31010 * C119 + C32056 * C354 - C31002 * C344 +
            C23639 * C364 - C31016 * C349) *
               C30885 +
           (C32049 * C140 - C31010 * C127 + C32056 * C374 - C31002 * C355 +
            C23639 * C379 - C31016 * C365) *
               C31869 +
           (C23644 - C23645 + C23646 - C23647 + C23648 - C23649) * C30881 +
           (C23650 - C23651 + C23652 - C23653 + C23654 - C23655) * C31877 +
           C23688 * C30891 + C23689 * C17091) *
              C31955 * C31925 * C31911 * C110 +
          ((C23645 - C23644 + C23647 - C23646 + C23649 - C23648) * C30885 +
           (C23651 - C23650 + C23653 - C23652 + C23655 - C23654) * C31869 +
           (C23657 - C23656 + C23659 - C23658 + C23661 - C23660) * C30881 +
           (C23663 - C23662 + C23665 - C23664 + C23667 - C23666) * C31877 +
           (C23668 - C23669 + C23670 - C23671 + C23672 - C23673) * C30891 +
           (C23674 - C23675 + C23676 - C23677 + C23678 - C23679) * C17091) *
              C31955 * C31925 * C31911 * C111 +
          (C23688 * C30885 + C23689 * C31869 +
           (C23669 - C23668 + C23671 - C23670 + C23673 - C23672) * C30881 +
           (C23675 - C23674 + C23677 - C23676 + C23679 - C23678) * C31877 +
           (C32049 * C134 - C31010 * C123 + C32056 * C362 - C31002 * C348 +
            C23639 * C372 - C31016 * C353) *
               C30891 +
           (C32049 * C144 - C31010 * C135 + C32056 * C378 - C31002 * C363 +
            C23639 * C383 - C31016 * C373) *
               C17091) *
              C31955 * C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((C32049 * C126 - C31010 * C119 + C32056 * C354 - C31002 * C344 +
            C23639 * C364 - C31016 * C349) *
               C30885 +
           (C32049 * C140 - C31010 * C127 + C32056 * C374 - C31002 * C355 +
            C23639 * C379 - C31016 * C365) *
               C31869 +
           (C23644 - C23645 + C23646 - C23647 + C23648 - C23649) * C30881 +
           (C23650 - C23651 + C23652 - C23653 + C23654 - C23655) * C31877 +
           C23688 * C30891 + C23689 * C17091) *
              C31955 * C31925 * C235 +
          ((C31010 * C239 - C32049 * C249 + C31002 * C676 - C32056 * C681 +
            C31016 * C1113 - C23639 * C1125) *
               C30885 +
           (C31010 * C250 - C32049 * C269 + C31002 * C682 - C32056 * C691 +
            C31016 * C1126 - C23639 * C1140) *
               C31869 +
           (C31010 * C240 - C32049 * C251 + C31002 * C677 - C32056 * C683 +
            C31016 * C1114 - C23639 * C1127) *
               C30881 +
           (C31010 * C252 - C32049 * C270 + C31002 * C684 - C32056 * C692 +
            C31016 * C1128 - C23639 * C1141) *
               C31877 +
           (C31010 * C241 - C32049 * C253 + C31002 * C678 - C32056 * C685 +
            C31016 * C1115 - C23639 * C1129) *
               C30891 +
           (C31010 * C254 - C32049 * C271 + C31002 * C686 - C32056 * C693 +
            C31016 * C1130 - C23639 * C1142) *
               C17091) *
              C31955 * C31925 * C236 +
          ((C32049 * C259 - C31010 * C244 + C32056 * C1119 - C31002 * C1110 +
            C23639 * C1131 - C31016 * C1116) *
               C30885 +
           (C32049 * C274 - C31010 * C260 + C32056 * C1137 - C31002 * C1120 +
            C23639 * C1143 - C31016 * C1132) *
               C31869 +
           (C32049 * C261 - C31010 * C245 + C32056 * C1121 - C31002 * C1111 +
            C23639 * C1133 - C31016 * C1117) *
               C30881 +
           (C32049 * C275 - C31010 * C262 + C32056 * C1138 - C31002 * C1122 +
            C23639 * C1144 - C31016 * C1134) *
               C31877 +
           (C32049 * C263 - C31010 * C246 + C32056 * C1123 - C31002 * C1112 +
            C23639 * C1135 - C31016 * C1118) *
               C30891 +
           (C32049 * C276 - C31010 * C264 + C32056 * C1139 - C31002 * C1124 +
            C23639 * C1145 - C31016 * C1136) *
               C17091) *
              C31955 * C31925 * C237) *
         C31899) /
            (p * q * std::sqrt(p + q));
    d2ee[95] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19912 * C126 - C19914 * C119 + C32053 * C354 - C19915 * C344) *
                C14631 +
            (C19912 * C140 - C19914 * C127 + C32053 * C374 - C19915 * C355) *
                C32279 +
            (C19917 - C19918 + C19919 - C19920) * C14632 +
            (C19921 - C19922 + C19923 - C19924) * C32272 + C19957 * C14633 +
            C19958 * C32259 + C19959 * C14634 + C19960 * C32242) *
               C31955 * C31925 * C466 +
           ((C19914 * C239 - C19912 * C249 + C19915 * C676 - C32053 * C681) *
                C14631 +
            (C19914 * C250 - C19912 * C269 + C19915 * C682 - C32053 * C691) *
                C32279 +
            (C20287 - C20288 + C20289 - C20290) * C14632 +
            (C20291 - C20292 + C20293 - C20294) * C32272 +
            (C20295 - C20296 + C20297 - C20298) * C14633 +
            (C20299 - C20300 + C20301 - C20302) * C32259 +
            (C20303 - C20304 + C20305 - C20306) * C14634 +
            (C20307 - C20308 + C20309 - C20310) * C32242) *
               C31955 * C31925 * C467) *
              C468 +
          (((C19918 - C19917 + C19920 - C19919) * C14631 +
            (C19922 - C19921 + C19924 - C19923) * C32279 +
            (C19926 - C19925 + C19928 - C19927) * C14632 +
            (C19930 - C19929 + C19932 - C19931) * C32272 +
            (C19934 - C19933 + C19936 - C19935) * C14633 +
            (C19938 - C19937 + C19940 - C19939) * C32259 +
            (C19941 - C19942 + C19943 - C19944) * C14634 +
            (C19945 - C19946 + C19947 - C19948) * C32242) *
               C31955 * C31925 * C466 +
           ((C20288 - C20287 + C20290 - C20289) * C14631 +
            (C20292 - C20291 + C20294 - C20293) * C32279 +
            (C20296 - C20295 + C20298 - C20297) * C14632 +
            (C20300 - C20299 + C20302 - C20301) * C32272 +
            (C20304 - C20303 + C20306 - C20305) * C14633 +
            (C20308 - C20307 + C20310 - C20309) * C32259 +
            (C19912 * C257 - C19914 * C243 + C32053 * C689 - C19915 * C680) *
                C14634 +
            (C19912 * C273 - C19914 * C258 + C32053 * C695 - C19915 * C690) *
                C32242) *
               C31955 * C31925 * C467) *
              C469)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19912 * C126 - C19914 * C119 + C32053 * C354 - C19915 * C344) *
                 C15325 +
             (C19912 * C140 - C19914 * C127 + C32053 * C374 - C19915 * C355) *
                 C15319 +
             (C19917 - C19918 + C19919 - C19920) * C15326 +
             (C19921 - C19922 + C19923 - C19924) * C31874) *
                C32273 +
            ((C20903 - C20904 + C20905 - C20906) * C15325 +
             (C20907 - C20908 + C20909 - C20910) * C15319 + C21306 * C15326 +
             C21307 * C31874) *
                C32261 +
            C20953 * C32238) *
               C31925 * C466 +
           (((C20904 - C20903 + C20906 - C20905) * C15325 +
             (C20908 - C20907 + C20910 - C20909) * C15319 + C21308 * C15326 +
             C21309 * C31874) *
                C32273 +
            ((C20912 - C20911 + C20914 - C20913) * C15325 +
             (C20916 - C20915 + C20918 - C20917) * C15319 + C21310 * C15326 +
             C21311 * C31874) *
                C32261 +
            ((C20923 - C20924 + C20925 - C20926) * C15325 +
             (C20927 - C20928 + C20929 - C20930) * C15319 +
             (C20931 - C20932 + C20933 - C20934) * C15326 +
             (C20935 - C20936 + C20937 - C20938) * C31874) *
                C32238) *
               C31925 * C467) *
              C468 +
          ((((C19918 - C19917 + C19920 - C19919) * C15325 +
             (C19922 - C19921 + C19924 - C19923) * C15319 +
             (C19926 - C19925 + C19928 - C19927) * C15326 +
             (C19930 - C19929 + C19932 - C19931) * C31874) *
                C32273 +
            (C21308 * C15325 + C21309 * C15319 +
             (C20295 - C20296 + C20297 - C20298) * C15326 +
             (C20299 - C20300 + C20301 - C20302) * C31874) *
                C32261 +
            (C21310 * C15325 + C21311 * C15319 +
             (C20749 - C20750 + C20751 - C20752) * C15326 +
             (C20753 - C20754 + C20755 - C20756) * C31874) *
                C32238) *
               C31925 * C466 +
           ((C21306 * C15325 + C21307 * C15319 +
             (C20296 - C20295 + C20298 - C20297) * C15326 +
             (C20300 - C20299 + C20302 - C20301) * C31874) *
                C32273 +
            (C20943 * C15325 + C20944 * C15319 +
             (C20750 - C20749 + C20752 - C20751) * C15326 +
             (C20754 - C20753 + C20756 - C20755) * C31874) *
                C32261 +
            ((C20932 - C20931 + C20934 - C20933) * C15325 +
             (C20936 - C20935 + C20938 - C20937) * C15319 +
             (C19912 * C951 - C19914 * C943 + C32053 * C1625 - C19915 * C1620) *
                 C15326 +
             (C19912 * C961 - C19914 * C952 + C32053 * C1629 - C19915 * C1626) *
                 C31874) *
                C32238) *
               C31925 * C467) *
              C469)) /
            (p * q * std::sqrt(p + q));
    d2ee[96] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19912 * C126 - C19914 * C119 + C32053 * C354 - C19915 * C344) *
                C14631 +
            (C19912 * C140 - C19914 * C127 + C32053 * C374 - C19915 * C355) *
                C32279 +
            (C19917 - C19918 + C19919 - C19920) * C14632 +
            (C19921 - C19922 + C19923 - C19924) * C32272 + C19957 * C14633 +
            C19958 * C32259 + C19959 * C14634 + C19960 * C32242) *
               C31955 * C572 +
           ((C19914 * C344 - C19912 * C354 + C19915 * C349 - C32053 * C364) *
                C14631 +
            (C19914 * C355 - C19912 * C374 + C19915 * C365 - C32053 * C379) *
                C32279 +
            (C20441 - C20442 + C20443 - C20444) * C14632 +
            (C20445 - C20446 + C20447 - C20448) * C32272 +
            (C20449 - C20450 + C20451 - C20452) * C14633 +
            (C20453 - C20454 + C20455 - C20456) * C32259 +
            (C20457 - C20458 + C20459 - C20460) * C14634 +
            (C20461 - C20462 + C20463 - C20464) * C32242) *
               C31955 * C573) *
              C466 +
          (((C19914 * C239 - C19912 * C249 + C19915 * C676 - C32053 * C681) *
                C14631 +
            (C19914 * C250 - C19912 * C269 + C19915 * C682 - C32053 * C691) *
                C32279 +
            (C20287 - C20288 + C20289 - C20290) * C14632 +
            (C20291 - C20292 + C20293 - C20294) * C32272 +
            (C20295 - C20296 + C20297 - C20298) * C14633 +
            (C20299 - C20300 + C20301 - C20302) * C32259 +
            (C20303 - C20304 + C20305 - C20306) * C14634 +
            (C20307 - C20308 + C20309 - C20310) * C32242) *
               C31955 * C572 +
           ((C19912 * C681 - C19914 * C676 + C32053 * C1125 - C19915 * C1113) *
                C14631 +
            (C19912 * C691 - C19914 * C682 + C32053 * C1140 - C19915 * C1126) *
                C32279 +
            (C19912 * C683 - C19914 * C677 + C32053 * C1127 - C19915 * C1114) *
                C14632 +
            (C19912 * C692 - C19914 * C684 + C32053 * C1141 - C19915 * C1128) *
                C32272 +
            (C19912 * C685 - C19914 * C678 + C32053 * C1129 - C19915 * C1115) *
                C14633 +
            (C19912 * C693 - C19914 * C686 + C32053 * C1142 - C19915 * C1130) *
                C32259 +
            (C19912 * C687 - C19914 * C679 + C32053 * C2191 - C19915 * C2190) *
                C14634 +
            (C19912 * C694 - C19914 * C688 + C32053 * C2193 - C19915 * C2192) *
                C32242) *
               C31955 * C573) *
              C467) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19912 * C126 - C19914 * C119 + C32053 * C354 - C19915 * C344) *
                 C15325 +
             (C19912 * C140 - C19914 * C127 + C32053 * C374 - C19915 * C355) *
                 C15319 +
             (C19917 - C19918 + C19919 - C19920) * C15326 +
             (C19921 - C19922 + C19923 - C19924) * C31874) *
                C32273 +
            ((C20903 - C20904 + C20905 - C20906) * C15325 +
             (C20907 - C20908 + C20909 - C20910) * C15319 + C21306 * C15326 +
             C21307 * C31874) *
                C32261 +
            C20953 * C32238) *
               C572 +
           (((C19914 * C344 - C19912 * C354 + C19915 * C349 - C32053 * C364) *
                 C15325 +
             (C19914 * C355 - C19912 * C374 + C19915 * C365 - C32053 * C379) *
                 C15319 +
             (C20441 - C20442 + C20443 - C20444) * C15326 +
             (C20445 - C20446 + C20447 - C20448) * C31874) *
                C32273 +
            ((C21716 - C21717 + C21718 - C21719) * C15325 +
             (C21720 - C21721 + C21722 - C21723) * C15319 +
             (C21506 - C21507 + C21508 - C21509) * C15326 +
             (C21510 - C21511 + C21512 - C21513) * C31874) *
                C32261 +
            ((C21724 - C21725 + C21726 - C21727) * C15325 +
             (C21728 - C21729 + C21730 - C21731) * C15319 +
             (C21514 - C21515 + C21516 - C21517) * C15326 +
             (C21518 - C21519 + C21520 - C21521) * C31874) *
                C32238) *
               C573) *
              C466 +
          ((((C20904 - C20903 + C20906 - C20905) * C15325 +
             (C20908 - C20907 + C20910 - C20909) * C15319 + C21308 * C15326 +
             C21309 * C31874) *
                C32273 +
            ((C20912 - C20911 + C20914 - C20913) * C15325 +
             (C20916 - C20915 + C20918 - C20917) * C15319 + C21310 * C15326 +
             C21311 * C31874) *
                C32261 +
            ((C20923 - C20924 + C20925 - C20926) * C15325 +
             (C20927 - C20928 + C20929 - C20930) * C15319 +
             (C20931 - C20932 + C20933 - C20934) * C15326 +
             (C20935 - C20936 + C20937 - C20938) * C31874) *
                C32238) *
               C572 +
           (((C21717 - C21716 + C21719 - C21718) * C15325 +
             (C21721 - C21720 + C21723 - C21722) * C15319 +
             (C21507 - C21506 + C21509 - C21508) * C15326 +
             (C21511 - C21510 + C21513 - C21512) * C31874) *
                C32273 +
            ((C21725 - C21724 + C21727 - C21726) * C15325 +
             (C21729 - C21728 + C21731 - C21730) * C15319 +
             (C21515 - C21514 + C21517 - C21516) * C15326 +
             (C21519 - C21518 + C21521 - C21520) * C31874) *
                C32261 +
            ((C19912 * C1621 - C19914 * C1618 + C32053 * C6147 -
              C19915 * C6143) *
                 C15325 +
             (C19912 * C1627 - C19914 * C1622 + C32053 * C6152 -
              C19915 * C6148) *
                 C15319 +
             (C19912 * C1623 - C19914 * C1619 + C32053 * C6962 -
              C19915 * C6961) *
                 C15326 +
             (C19912 * C1628 - C19914 * C1624 + C32053 * C6964 -
              C19915 * C6963) *
                 C31874) *
                C32238) *
               C573) *
              C467) *
         C31899) /
            (p * q * std::sqrt(p + q));
    d2ee[97] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C19912 * C126 - C19914 * C119 + C32053 * C354 - C19915 * C344) *
               C14631 +
           (C19912 * C140 - C19914 * C127 + C32053 * C374 - C19915 * C355) *
               C32279 +
           (C19917 - C19918 + C19919 - C19920) * C14632 +
           (C19921 - C19922 + C19923 - C19924) * C32272 + C19957 * C14633 +
           C19958 * C32259 + C19959 * C14634 + C19960 * C32242) *
              C31955 * C31925 * C235 +
          ((C19914 * C239 - C19912 * C249 + C19915 * C676 - C32053 * C681) *
               C14631 +
           (C19914 * C250 - C19912 * C269 + C19915 * C682 - C32053 * C691) *
               C32279 +
           (C19914 * C240 - C19912 * C251 + C19915 * C677 - C32053 * C683) *
               C14632 +
           (C19914 * C252 - C19912 * C270 + C19915 * C684 - C32053 * C692) *
               C32272 +
           (C19914 * C241 - C19912 * C253 + C19915 * C678 - C32053 * C685) *
               C14633 +
           (C19914 * C254 - C19912 * C271 + C19915 * C686 - C32053 * C693) *
               C32259 +
           (C19914 * C242 - C19912 * C255 + C19915 * C679 - C32053 * C687) *
               C14634 +
           (C19914 * C256 - C19912 * C272 + C19915 * C688 - C32053 * C694) *
               C32242) *
              C31955 * C31925 * C236 +
          ((C19912 * C259 - C19914 * C244 + C32053 * C1119 - C19915 * C1110) *
               C14631 +
           (C19912 * C274 - C19914 * C260 + C32053 * C1137 - C19915 * C1120) *
               C32279 +
           (C19912 * C261 - C19914 * C245 + C32053 * C1121 - C19915 * C1111) *
               C14632 +
           (C19912 * C275 - C19914 * C262 + C32053 * C1138 - C19915 * C1122) *
               C32272 +
           (C19912 * C263 - C19914 * C246 + C32053 * C1123 - C19915 * C1112) *
               C14633 +
           (C19912 * C276 - C19914 * C264 + C32053 * C1139 - C19915 * C1124) *
               C32259 +
           (C19912 * C265 - C19914 * C247 + C32053 * C1453 - C19915 * C1452) *
               C14634 +
           (C19912 * C277 - C19914 * C266 + C32053 * C1455 - C19915 * C1454) *
               C32242) *
              C31955 * C31925 * C237) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C19912 * C126 - C19914 * C119 + C32053 * C354 - C19915 * C344) *
               C14631 +
           (C19912 * C140 - C19914 * C127 + C32053 * C374 - C19915 * C355) *
               C32279 +
           (C19917 - C19918 + C19919 - C19920) * C14632 +
           (C19921 - C19922 + C19923 - C19924) * C32272 + C19957 * C14633 +
           C19958 * C32259 + C19959 * C14634 + C19960 * C32242) *
              C31955 * C31925 * C31911 * C110 +
          ((C19918 - C19917 + C19920 - C19919) * C14631 +
           (C19922 - C19921 + C19924 - C19923) * C32279 +
           (C19926 - C19925 + C19928 - C19927) * C14632 +
           (C19930 - C19929 + C19932 - C19931) * C32272 +
           (C19934 - C19933 + C19936 - C19935) * C14633 +
           (C19938 - C19937 + C19940 - C19939) * C32259 +
           (C19941 - C19942 + C19943 - C19944) * C14634 +
           (C19945 - C19946 + C19947 - C19948) * C32242) *
              C31955 * C31925 * C31911 * C111 +
          (C19957 * C14631 + C19958 * C32279 + C19959 * C14632 +
           C19960 * C32272 + (C19942 - C19941 + C19944 - C19943) * C14633 +
           (C19946 - C19945 + C19948 - C19947) * C32259 +
           (C19912 * C136 - C19914 * C124 + C32053 * C575 - C19915 * C574) *
               C14634 +
           (C19912 * C145 - C19914 * C137 + C32053 * C577 - C19915 * C576) *
               C32242) *
              C31955 * C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C19912 * C126 - C19914 * C119 + C32053 * C354 - C19915 * C344) *
               C14631 +
           (C19912 * C140 - C19914 * C127 + C32053 * C374 - C19915 * C355) *
               C32279 +
           (C19917 - C19918 + C19919 - C19920) * C14632 +
           (C19921 - C19922 + C19923 - C19924) * C32272 + C19957 * C14633 +
           C19958 * C32259 + C19959 * C14634 + C19960 * C32242) *
              C31955 * C341 +
          ((C19914 * C344 - C19912 * C354 + C19915 * C349 - C32053 * C364) *
               C14631 +
           (C19914 * C355 - C19912 * C374 + C19915 * C365 - C32053 * C379) *
               C32279 +
           (C19914 * C345 - C19912 * C356 + C19915 * C350 - C32053 * C366) *
               C14632 +
           (C19914 * C357 - C19912 * C375 + C19915 * C367 - C32053 * C380) *
               C32272 +
           (C19914 * C346 - C19912 * C358 + C19915 * C351 - C32053 * C368) *
               C14633 +
           (C19914 * C359 - C19912 * C376 + C19915 * C369 - C32053 * C381) *
               C32259 +
           (C19914 * C347 - C19912 * C360 + C19915 * C352 - C32053 * C370) *
               C14634 +
           (C19914 * C361 - C19912 * C377 + C19915 * C371 - C32053 * C382) *
               C32242) *
              C31955 * C342 +
          ((C19912 * C364 - C19914 * C349 + C32053 * C2026 - C19915 * C2020) *
               C14631 +
           (C19912 * C379 - C19914 * C365 + C32053 * C2038 - C19915 * C2027) *
               C32279 +
           (C19912 * C366 - C19914 * C350 + C32053 * C2028 - C19915 * C2021) *
               C14632 +
           (C19912 * C380 - C19914 * C367 + C32053 * C2039 - C19915 * C2029) *
               C32272 +
           (C19912 * C368 - C19914 * C351 + C32053 * C2030 - C19915 * C2022) *
               C14633 +
           (C19912 * C381 - C19914 * C369 + C32053 * C2040 - C19915 * C2031) *
               C32259 +
           (C19912 * C370 - C19914 * C352 + C32053 * C2365 - C19915 * C2364) *
               C14634 +
           (C19912 * C382 - C19914 * C371 + C32053 * C2367 - C19915 * C2366) *
               C32242) *
              C31955 * C343) *
         C31911 * C31899) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C19912 * C126 - C19914 * C119 + C32053 * C354 - C19915 * C344) *
                C15325 +
            (C19912 * C140 - C19914 * C127 + C32053 * C374 - C19915 * C355) *
                C15319 +
            (C19917 - C19918 + C19919 - C19920) * C15326 +
            (C19921 - C19922 + C19923 - C19924) * C31874) *
               C32273 +
           ((C19912 * C249 - C19914 * C239 + C32053 * C681 - C19915 * C676) *
                C15325 +
            (C19912 * C269 - C19914 * C250 + C32053 * C691 - C19915 * C682) *
                C15319 +
            (C20288 - C20287 + C20290 - C20289) * C15326 +
            (C20292 - C20291 + C20294 - C20293) * C31874) *
               C32261 +
           ((C19912 * C259 - C19914 * C244 + C32053 * C1119 - C19915 * C1110) *
                C15325 +
            (C19912 * C274 - C19914 * C260 + C32053 * C1137 - C19915 * C1120) *
                C15319 +
            (C20741 - C20742 + C20743 - C20744) * C15326 +
            (C20745 - C20746 + C20747 - C20748) * C31874) *
               C32238) *
              C31925 * C31911 * C110 +
          (((C19918 - C19917 + C19920 - C19919) * C15325 +
            (C19922 - C19921 + C19924 - C19923) * C15319 +
            (C19926 - C19925 + C19928 - C19927) * C15326 +
            (C19930 - C19929 + C19932 - C19931) * C31874) *
               C32273 +
           ((C20287 - C20288 + C20289 - C20290) * C15325 +
            (C20291 - C20292 + C20293 - C20294) * C15319 +
            (C20295 - C20296 + C20297 - C20298) * C15326 +
            (C20299 - C20300 + C20301 - C20302) * C31874) *
               C32261 +
           ((C20742 - C20741 + C20744 - C20743) * C15325 +
            (C20746 - C20745 + C20748 - C20747) * C15319 +
            (C20749 - C20750 + C20751 - C20752) * C15326 +
            (C20753 - C20754 + C20755 - C20756) * C31874) *
               C32238) *
              C31925 * C31911 * C111 +
          ((C19957 * C15325 + C19958 * C15319 + C19959 * C15326 +
            C19960 * C31874) *
               C32273 +
           ((C20296 - C20295 + C20298 - C20297) * C15325 +
            (C20300 - C20299 + C20302 - C20301) * C15319 +
            (C20304 - C20303 + C20306 - C20305) * C15326 +
            (C20308 - C20307 + C20310 - C20309) * C31874) *
               C32261 +
           ((C20750 - C20749 + C20752 - C20751) * C15325 +
            (C20754 - C20753 + C20756 - C20755) * C15319 +
            (C19912 * C265 - C19914 * C247 + C32053 * C1453 - C19915 * C1452) *
                C15326 +
            (C19912 * C277 - C19914 * C266 + C32053 * C1455 - C19915 * C1454) *
                C31874) *
               C32238) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C19912 * C126 - C19914 * C119 + C32053 * C354 - C19915 * C344) *
                C15325 +
            (C19912 * C140 - C19914 * C127 + C32053 * C374 - C19915 * C355) *
                C15319 +
            (C19917 - C19918 + C19919 - C19920) * C15326 +
            (C19921 - C19922 + C19923 - C19924) * C31874) *
               C32273 +
           ((C20903 - C20904 + C20905 - C20906) * C15325 +
            (C20907 - C20908 + C20909 - C20910) * C15319 +
            (C20288 - C20287 + C20290 - C20289) * C15326 +
            (C20292 - C20291 + C20294 - C20293) * C31874) *
               C32261 +
           C20953 * C32238) *
              C31925 * C235 +
          (((C20904 - C20903 + C20906 - C20905) * C15325 +
            (C20908 - C20907 + C20910 - C20909) * C15319 +
            (C20287 - C20288 + C20289 - C20290) * C15326 +
            (C20291 - C20292 + C20293 - C20294) * C31874) *
               C32273 +
           ((C20912 - C20911 + C20914 - C20913) * C15325 +
            (C20916 - C20915 + C20918 - C20917) * C15319 +
            (C20742 - C20741 + C20744 - C20743) * C15326 +
            (C20746 - C20745 + C20748 - C20747) * C31874) *
               C32261 +
           ((C20923 - C20924 + C20925 - C20926) * C15325 +
            (C20927 - C20928 + C20929 - C20930) * C15319 +
            (C20931 - C20932 + C20933 - C20934) * C15326 +
            (C20935 - C20936 + C20937 - C20938) * C31874) *
               C32238) *
              C31925 * C236 +
          (C20953 * C32273 +
           ((C20924 - C20923 + C20926 - C20925) * C15325 +
            (C20928 - C20927 + C20930 - C20929) * C15319 +
            (C20932 - C20931 + C20934 - C20933) * C15326 +
            (C20936 - C20935 + C20938 - C20937) * C31874) *
               C32261 +
           ((C19912 * C953 - C19914 * C944 + C32053 * C6145 - C19915 * C6142) *
                C15325 +
            (C19912 * C962 - C19914 * C954 + C32053 * C6151 - C19915 * C6146) *
                C15319 +
            (C19912 * C955 - C19914 * C945 + C32053 * C6327 - C19915 * C6326) *
                C15326 +
            (C19912 * C963 - C19914 * C956 + C32053 * C6329 - C19915 * C6328) *
                C31874) *
               C32238) *
              C31925 * C237) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C19912 * C126 - C19914 * C119 + C32053 * C354 - C19915 * C344) *
                C15325 +
            (C19912 * C140 - C19914 * C127 + C32053 * C374 - C19915 * C355) *
                C15319 +
            (C19917 - C19918 + C19919 - C19920) * C15326 +
            (C19921 - C19922 + C19923 - C19924) * C31874) *
               C32273 +
           ((C20903 - C20904 + C20905 - C20906) * C15325 +
            (C20907 - C20908 + C20909 - C20910) * C15319 +
            (C20288 - C20287 + C20290 - C20289) * C15326 +
            (C20292 - C20291 + C20294 - C20293) * C31874) *
               C32261 +
           C20953 * C32238) *
              C341 +
          (((C19914 * C344 - C19912 * C354 + C19915 * C349 - C32053 * C364) *
                C15325 +
            (C19914 * C355 - C19912 * C374 + C19915 * C365 - C32053 * C379) *
                C15319 +
            (C20441 - C20442 + C20443 - C20444) * C15326 +
            (C20445 - C20446 + C20447 - C20448) * C31874) *
               C32273 +
           ((C19914 * C676 - C19912 * C681 + C19915 * C1113 - C32053 * C1125) *
                C15325 +
            (C19914 * C682 - C19912 * C691 + C19915 * C1126 - C32053 * C1140) *
                C15319 +
            (C19914 * C677 - C19912 * C683 + C19915 * C1114 - C32053 * C1127) *
                C15326 +
            (C19914 * C684 - C19912 * C692 + C19915 * C1128 - C32053 * C1141) *
                C31874) *
               C32261 +
           ((C19914 * C1110 - C19912 * C1119 + C19915 * C1116 -
             C32053 * C1131) *
                C15325 +
            (C19914 * C1120 - C19912 * C1137 + C19915 * C1132 -
             C32053 * C1143) *
                C15319 +
            (C19914 * C1111 - C19912 * C1121 + C19915 * C1117 -
             C32053 * C1133) *
                C15326 +
            (C19914 * C1122 - C19912 * C1138 + C19915 * C1134 -
             C32053 * C1144) *
                C31874) *
               C32238) *
              C342 +
          (((C19912 * C364 - C19914 * C349 + C32053 * C2026 - C19915 * C2020) *
                C15325 +
            (C19912 * C379 - C19914 * C365 + C32053 * C2038 - C19915 * C2027) *
                C15319 +
            (C19912 * C366 - C19914 * C350 + C32053 * C2028 - C19915 * C2021) *
                C15326 +
            (C19912 * C380 - C19914 * C367 + C32053 * C2039 - C19915 * C2029) *
                C31874) *
               C32273 +
           ((C19912 * C1125 - C19914 * C1113 + C32053 * C2541 -
             C19915 * C2538) *
                C15325 +
            (C19912 * C1140 - C19914 * C1126 + C32053 * C2547 -
             C19915 * C2542) *
                C15319 +
            (C19912 * C1127 - C19914 * C1114 + C32053 * C2543 -
             C19915 * C2539) *
                C15326 +
            (C19912 * C1141 - C19914 * C1128 + C32053 * C2548 -
             C19915 * C2544) *
                C31874) *
               C32261 +
           ((C19912 * C1131 - C19914 * C1116 + C32053 * C6806 -
             C19915 * C6803) *
                C15325 +
            (C19912 * C1143 - C19914 * C1132 + C32053 * C6812 -
             C19915 * C6807) *
                C15319 +
            (C19912 * C1133 - C19914 * C1117 + C32053 * C7124 -
             C19915 * C7123) *
                C15326 +
            (C19912 * C1144 - C19914 * C1134 + C32053 * C7126 -
             C19915 * C7125) *
                C31874) *
               C32238) *
              C343) *
         C31911 * C31899) /
            (p * q * std::sqrt(p + q));
    d2ee[98] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19912 * C126 - C19914 * C119 + C32053 * C354 - C19915 * C344) *
                C14631 +
            (C19912 * C140 - C19914 * C127 + C32053 * C374 - C19915 * C355) *
                C32279 +
            (C19917 - C19918 + C19919 - C19920) * C14632 +
            (C19921 - C19922 + C19923 - C19924) * C32272 + C19957 * C14633 +
            C19958 * C32259 + C19959 * C14634 + C19960 * C32242) *
               C31955 * C572 +
           ((C19914 * C344 - C19912 * C354 + C19915 * C349 - C32053 * C364) *
                C14631 +
            (C19914 * C355 - C19912 * C374 + C19915 * C365 - C32053 * C379) *
                C32279 +
            (C20441 - C20442 + C20443 - C20444) * C14632 +
            (C20445 - C20446 + C20447 - C20448) * C32272 +
            (C20449 - C20450 + C20451 - C20452) * C14633 +
            (C20453 - C20454 + C20455 - C20456) * C32259 +
            (C20457 - C20458 + C20459 - C20460) * C14634 +
            (C20461 - C20462 + C20463 - C20464) * C32242) *
               C31955 * C573) *
              C31911 * C468 +
          (((C19918 - C19917 + C19920 - C19919) * C14631 +
            (C19922 - C19921 + C19924 - C19923) * C32279 +
            (C19926 - C19925 + C19928 - C19927) * C14632 +
            (C19930 - C19929 + C19932 - C19931) * C32272 +
            (C19934 - C19933 + C19936 - C19935) * C14633 +
            (C19938 - C19937 + C19940 - C19939) * C32259 +
            (C19941 - C19942 + C19943 - C19944) * C14634 +
            (C19945 - C19946 + C19947 - C19948) * C32242) *
               C31955 * C572 +
           ((C20442 - C20441 + C20444 - C20443) * C14631 +
            (C20446 - C20445 + C20448 - C20447) * C32279 +
            (C20450 - C20449 + C20452 - C20451) * C14632 +
            (C20454 - C20453 + C20456 - C20455) * C32272 +
            (C20458 - C20457 + C20460 - C20459) * C14633 +
            (C20462 - C20461 + C20464 - C20463) * C32259 +
            (C19912 * C362 - C19914 * C348 + C32053 * C372 - C19915 * C353) *
                C14634 +
            (C19912 * C378 - C19914 * C363 + C32053 * C383 - C19915 * C373) *
                C32242) *
               C31955 * C573) *
              C31911 * C469)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19912 * C126 - C19914 * C119 + C32053 * C354 - C19915 * C344) *
                 C15325 +
             (C19912 * C140 - C19914 * C127 + C32053 * C374 - C19915 * C355) *
                 C15319 +
             (C19917 - C19918 + C19919 - C19920) * C15326 +
             (C19921 - C19922 + C19923 - C19924) * C31874) *
                C32273 +
            ((C20903 - C20904 + C20905 - C20906) * C15325 +
             (C20907 - C20908 + C20909 - C20910) * C15319 + C21306 * C15326 +
             C21307 * C31874) *
                C32261 +
            C20953 * C32238) *
               C572 +
           (((C19914 * C344 - C19912 * C354 + C19915 * C349 - C32053 * C364) *
                 C15325 +
             (C19914 * C355 - C19912 * C374 + C19915 * C365 - C32053 * C379) *
                 C15319 +
             (C20441 - C20442 + C20443 - C20444) * C15326 +
             (C20445 - C20446 + C20447 - C20448) * C31874) *
                C32273 +
            ((C19914 * C676 - C19912 * C681 + C19915 * C1113 - C32053 * C1125) *
                 C15325 +
             (C19914 * C682 - C19912 * C691 + C19915 * C1126 - C32053 * C1140) *
                 C15319 +
             (C21506 - C21507 + C21508 - C21509) * C15326 +
             (C21510 - C21511 + C21512 - C21513) * C31874) *
                C32261 +
            ((C19914 * C1110 - C19912 * C1119 + C19915 * C1116 -
              C32053 * C1131) *
                 C15325 +
             (C19914 * C1120 - C19912 * C1137 + C19915 * C1132 -
              C32053 * C1143) *
                 C15319 +
             (C21514 - C21515 + C21516 - C21517) * C15326 +
             (C21518 - C21519 + C21520 - C21521) * C31874) *
                C32238) *
               C573) *
              C31911 * C468 +
          ((((C19918 - C19917 + C19920 - C19919) * C15325 +
             (C19922 - C19921 + C19924 - C19923) * C15319 +
             (C19926 - C19925 + C19928 - C19927) * C15326 +
             (C19930 - C19929 + C19932 - C19931) * C31874) *
                C32273 +
            (C21308 * C15325 + C21309 * C15319 +
             (C20295 - C20296 + C20297 - C20298) * C15326 +
             (C20299 - C20300 + C20301 - C20302) * C31874) *
                C32261 +
            (C21310 * C15325 + C21311 * C15319 +
             (C20749 - C20750 + C20751 - C20752) * C15326 +
             (C20753 - C20754 + C20755 - C20756) * C31874) *
                C32238) *
               C572 +
           (((C20442 - C20441 + C20444 - C20443) * C15325 +
             (C20446 - C20445 + C20448 - C20447) * C15319 +
             (C20450 - C20449 + C20452 - C20451) * C15326 +
             (C20454 - C20453 + C20456 - C20455) * C31874) *
                C32273 +
            ((C21507 - C21506 + C21509 - C21508) * C15325 +
             (C21511 - C21510 + C21513 - C21512) * C15319 +
             (C19912 * C685 - C19914 * C678 + C32053 * C1129 - C19915 * C1115) *
                 C15326 +
             (C19912 * C693 - C19914 * C686 + C32053 * C1142 - C19915 * C1130) *
                 C31874) *
                C32261 +
            ((C21515 - C21514 + C21517 - C21516) * C15325 +
             (C21519 - C21518 + C21521 - C21520) * C15319 +
             (C19912 * C1123 - C19914 * C1112 + C32053 * C1135 -
              C19915 * C1118) *
                 C15326 +
             (C19912 * C1139 - C19914 * C1124 + C32053 * C1145 -
              C19915 * C1136) *
                 C31874) *
                C32238) *
               C573) *
              C31911 * C469)) /
            (p * q * std::sqrt(p + q));
    d2ee[99] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C19912 * C126 - C19914 * C119 + C32053 * C354 - C19915 * C344) *
               C14631 +
           (C19912 * C140 - C19914 * C127 + C32053 * C374 - C19915 * C355) *
               C32279 +
           (C19917 - C19918 + C19919 - C19920) * C14632 +
           (C19921 - C19922 + C19923 - C19924) * C32272 + C19957 * C14633 +
           C19958 * C32259 + C19959 * C14634 + C19960 * C32242) *
              C31955 * C31925 * C31911 * C110 +
          ((C19918 - C19917 + C19920 - C19919) * C14631 +
           (C19922 - C19921 + C19924 - C19923) * C32279 +
           (C19926 - C19925 + C19928 - C19927) * C14632 +
           (C19930 - C19929 + C19932 - C19931) * C32272 +
           (C19934 - C19933 + C19936 - C19935) * C14633 +
           (C19938 - C19937 + C19940 - C19939) * C32259 +
           (C19941 - C19942 + C19943 - C19944) * C14634 +
           (C19945 - C19946 + C19947 - C19948) * C32242) *
              C31955 * C31925 * C31911 * C111 +
          (C19957 * C14631 + C19958 * C32279 + C19959 * C14632 +
           C19960 * C32272 + (C19942 - C19941 + C19944 - C19943) * C14633 +
           (C19946 - C19945 + C19948 - C19947) * C32259 +
           (C19912 * C136 - C19914 * C124 + C32053 * C575 - C19915 * C574) *
               C14634 +
           (C19912 * C145 - C19914 * C137 + C32053 * C577 - C19915 * C576) *
               C32242) *
              C31955 * C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C19912 * C126 - C19914 * C119 + C32053 * C354 - C19915 * C344) *
               C14631 +
           (C19912 * C140 - C19914 * C127 + C32053 * C374 - C19915 * C355) *
               C32279 +
           (C19917 - C19918 + C19919 - C19920) * C14632 +
           (C19921 - C19922 + C19923 - C19924) * C32272 + C19957 * C14633 +
           C19958 * C32259 + C19959 * C14634 + C19960 * C32242) *
              C31955 * C31925 * C235 +
          ((C19914 * C239 - C19912 * C249 + C19915 * C676 - C32053 * C681) *
               C14631 +
           (C19914 * C250 - C19912 * C269 + C19915 * C682 - C32053 * C691) *
               C32279 +
           (C19914 * C240 - C19912 * C251 + C19915 * C677 - C32053 * C683) *
               C14632 +
           (C19914 * C252 - C19912 * C270 + C19915 * C684 - C32053 * C692) *
               C32272 +
           (C19914 * C241 - C19912 * C253 + C19915 * C678 - C32053 * C685) *
               C14633 +
           (C19914 * C254 - C19912 * C271 + C19915 * C686 - C32053 * C693) *
               C32259 +
           (C19914 * C242 - C19912 * C255 + C19915 * C679 - C32053 * C687) *
               C14634 +
           (C19914 * C256 - C19912 * C272 + C19915 * C688 - C32053 * C694) *
               C32242) *
              C31955 * C31925 * C236 +
          ((C19912 * C259 - C19914 * C244 + C32053 * C1119 - C19915 * C1110) *
               C14631 +
           (C19912 * C274 - C19914 * C260 + C32053 * C1137 - C19915 * C1120) *
               C32279 +
           (C19912 * C261 - C19914 * C245 + C32053 * C1121 - C19915 * C1111) *
               C14632 +
           (C19912 * C275 - C19914 * C262 + C32053 * C1138 - C19915 * C1122) *
               C32272 +
           (C19912 * C263 - C19914 * C246 + C32053 * C1123 - C19915 * C1112) *
               C14633 +
           (C19912 * C276 - C19914 * C264 + C32053 * C1139 - C19915 * C1124) *
               C32259 +
           (C19912 * C265 - C19914 * C247 + C32053 * C1453 - C19915 * C1452) *
               C14634 +
           (C19912 * C277 - C19914 * C266 + C32053 * C1455 - C19915 * C1454) *
               C32242) *
              C31955 * C31925 * C237) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C19912 * C126 - C19914 * C119 + C32053 * C354 - C19915 * C344) *
                C15325 +
            (C19912 * C140 - C19914 * C127 + C32053 * C374 - C19915 * C355) *
                C15319 +
            (C19917 - C19918 + C19919 - C19920) * C15326 +
            (C19921 - C19922 + C19923 - C19924) * C31874) *
               C32273 +
           ((C19912 * C249 - C19914 * C239 + C32053 * C681 - C19915 * C676) *
                C15325 +
            (C19912 * C269 - C19914 * C250 + C32053 * C691 - C19915 * C682) *
                C15319 +
            (C20288 - C20287 + C20290 - C20289) * C15326 +
            (C20292 - C20291 + C20294 - C20293) * C31874) *
               C32261 +
           ((C19912 * C259 - C19914 * C244 + C32053 * C1119 - C19915 * C1110) *
                C15325 +
            (C19912 * C274 - C19914 * C260 + C32053 * C1137 - C19915 * C1120) *
                C15319 +
            (C20741 - C20742 + C20743 - C20744) * C15326 +
            (C20745 - C20746 + C20747 - C20748) * C31874) *
               C32238) *
              C31925 * C31911 * C110 +
          (((C19918 - C19917 + C19920 - C19919) * C15325 +
            (C19922 - C19921 + C19924 - C19923) * C15319 +
            (C19926 - C19925 + C19928 - C19927) * C15326 +
            (C19930 - C19929 + C19932 - C19931) * C31874) *
               C32273 +
           ((C20287 - C20288 + C20289 - C20290) * C15325 +
            (C20291 - C20292 + C20293 - C20294) * C15319 +
            (C20295 - C20296 + C20297 - C20298) * C15326 +
            (C20299 - C20300 + C20301 - C20302) * C31874) *
               C32261 +
           ((C20742 - C20741 + C20744 - C20743) * C15325 +
            (C20746 - C20745 + C20748 - C20747) * C15319 +
            (C20749 - C20750 + C20751 - C20752) * C15326 +
            (C20753 - C20754 + C20755 - C20756) * C31874) *
               C32238) *
              C31925 * C31911 * C111 +
          ((C19957 * C15325 + C19958 * C15319 + C19959 * C15326 +
            C19960 * C31874) *
               C32273 +
           ((C20296 - C20295 + C20298 - C20297) * C15325 +
            (C20300 - C20299 + C20302 - C20301) * C15319 +
            (C20304 - C20303 + C20306 - C20305) * C15326 +
            (C20308 - C20307 + C20310 - C20309) * C31874) *
               C32261 +
           ((C20750 - C20749 + C20752 - C20751) * C15325 +
            (C20754 - C20753 + C20756 - C20755) * C15319 +
            (C19912 * C265 - C19914 * C247 + C32053 * C1453 - C19915 * C1452) *
                C15326 +
            (C19912 * C277 - C19914 * C266 + C32053 * C1455 - C19915 * C1454) *
                C31874) *
               C32238) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C19912 * C126 - C19914 * C119 + C32053 * C354 - C19915 * C344) *
                C15325 +
            (C19912 * C140 - C19914 * C127 + C32053 * C374 - C19915 * C355) *
                C15319 +
            (C19917 - C19918 + C19919 - C19920) * C15326 +
            (C19921 - C19922 + C19923 - C19924) * C31874) *
               C32273 +
           ((C20903 - C20904 + C20905 - C20906) * C15325 +
            (C20907 - C20908 + C20909 - C20910) * C15319 +
            (C20288 - C20287 + C20290 - C20289) * C15326 +
            (C20292 - C20291 + C20294 - C20293) * C31874) *
               C32261 +
           C20953 * C32238) *
              C31925 * C235 +
          (((C20904 - C20903 + C20906 - C20905) * C15325 +
            (C20908 - C20907 + C20910 - C20909) * C15319 +
            (C20287 - C20288 + C20289 - C20290) * C15326 +
            (C20291 - C20292 + C20293 - C20294) * C31874) *
               C32273 +
           ((C20912 - C20911 + C20914 - C20913) * C15325 +
            (C20916 - C20915 + C20918 - C20917) * C15319 +
            (C20742 - C20741 + C20744 - C20743) * C15326 +
            (C20746 - C20745 + C20748 - C20747) * C31874) *
               C32261 +
           ((C20923 - C20924 + C20925 - C20926) * C15325 +
            (C20927 - C20928 + C20929 - C20930) * C15319 +
            (C20931 - C20932 + C20933 - C20934) * C15326 +
            (C20935 - C20936 + C20937 - C20938) * C31874) *
               C32238) *
              C31925 * C236 +
          (C20953 * C32273 +
           ((C20924 - C20923 + C20926 - C20925) * C15325 +
            (C20928 - C20927 + C20930 - C20929) * C15319 +
            (C20932 - C20931 + C20934 - C20933) * C15326 +
            (C20936 - C20935 + C20938 - C20937) * C31874) *
               C32261 +
           ((C19912 * C953 - C19914 * C944 + C32053 * C6145 - C19915 * C6142) *
                C15325 +
            (C19912 * C962 - C19914 * C954 + C32053 * C6151 - C19915 * C6146) *
                C15319 +
            (C19912 * C955 - C19914 * C945 + C32053 * C6327 - C19915 * C6326) *
                C15326 +
            (C19912 * C963 - C19914 * C956 + C32053 * C6329 - C19915 * C6328) *
                C31874) *
               C32238) *
              C31925 * C237) *
         C31899) /
            (p * q * std::sqrt(p + q));
    d2ee[100] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31966 * C126 - C113 * C119) * C2654 +
             (C31966 * C140 - C113 * C127) * C2648 + (C148 - C149) * C2655 +
             (C150 - C151) * C2649 + C168 * C2656 + C169 * C2650 +
             C170 * C2657 + C171 * C32242) *
                C32207 +
            ((C966 - C967) * C2654 + (C968 - C969) * C2648 + C1297 * C2655 +
             C1298 * C2649 + C816 * C2656 + C817 * C2650 + C2659 * C2657 +
             C2660 * C32242) *
                C32013) *
               C31925 * C466 +
           (((C967 - C966) * C2654 + (C969 - C968) * C2648 + C1299 * C2655 +
             C1300 * C2649 + C1301 * C2656 + C1302 * C2650 + C2987 * C2657 +
             C2988 * C32242) *
                C32207 +
            ((C971 - C970) * C2654 + (C973 - C972) * C2648 + C1303 * C2655 +
             C1304 * C2649 + C1305 * C2656 + C1306 * C2650 +
             (C826 - C827) * C2657 + (C828 - C829) * C32242) *
                C32013) *
               C31925 * C467) *
              C468 +
          ((((C149 - C148) * C2654 + (C151 - C150) * C2648 +
             (C153 - C152) * C2655 + (C155 - C154) * C2649 +
             (C157 - C156) * C2656 + (C159 - C158) * C2650 +
             (C161 - C160) * C2657 + (C163 - C162) * C32242) *
                C32207 +
            (C1299 * C2654 + C1300 * C2648 + C1301 * C2655 + C1302 * C2649 +
             C2987 * C2656 + C2988 * C2650 + (C487 - C488) * C2657 +
             (C489 - C490) * C32242) *
                C32013) *
               C31925 * C466 +
           ((C1297 * C2654 + C1298 * C2648 + C816 * C2655 + C817 * C2649 +
             C2659 * C2656 + C2660 * C2650 + (C488 - C487) * C2657 +
             (C490 - C489) * C32242) *
                C32207 +
            (C974 * C2654 + C975 * C2648 + C830 * C2655 + C831 * C2649 +
             (C827 - C826) * C2656 + (C829 - C828) * C2650 +
             (C31966 * C267 - C113 * C248) * C2657 +
             (C31966 * C278 - C113 * C268) * C32242) *
                C32013) *
               C31925 * C467) *
              C469)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31966 * C126 - C113 * C119) * C30875 +
             (C31966 * C140 - C113 * C127) * C32188 + (C148 - C149) * C30856 +
             (C150 - C151) * C31874) *
                C7401 +
            ((C966 - C967) * C30875 + (C968 - C969) * C32188 + C1297 * C30856 +
             C1298 * C31874) *
                C7402 +
            C7520 * C7403 + C7521 * C32248) *
               C31925 * C466 +
           (((C967 - C966) * C30875 + (C969 - C968) * C32188 + C1299 * C30856 +
             C1300 * C31874) *
                C7401 +
            ((C971 - C970) * C30875 + (C973 - C972) * C32188 + C1303 * C30856 +
             C1304 * C31874) *
                C7402 +
            ((C978 - C979) * C30875 + (C980 - C981) * C32188 + C7750 * C30856 +
             C7751 * C31874) *
                C7403 +
            ((C6065 - C6064) * C30875 + (C6067 - C6066) * C32188 +
             (C6241 - C6242) * C30856 + (C6243 - C6244) * C31874) *
                C32248) *
               C31925 * C467) *
              C468 +
          ((((C149 - C148) * C30875 + (C151 - C150) * C32188 +
             (C153 - C152) * C30856 + (C155 - C154) * C31874) *
                C7401 +
            (C1299 * C30875 + C1300 * C32188 + C1301 * C30856 +
             C1302 * C31874) *
                C7402 +
            (C1303 * C30875 + C1304 * C32188 + C1305 * C30856 +
             C1306 * C31874) *
                C7403 +
            (C7750 * C30875 + C7751 * C32188 + (C986 - C987) * C30856 +
             (C988 - C989) * C31874) *
                C32248) *
               C31925 * C466 +
           ((C1297 * C30875 + C1298 * C32188 + C816 * C30856 + C817 * C31874) *
                C7401 +
            (C974 * C30875 + C975 * C32188 + C830 * C30856 + C831 * C31874) *
                C7402 +
            (C7512 * C30875 + C7513 * C32188 + (C987 - C986) * C30856 +
             (C989 - C988) * C31874) *
                C7403 +
            ((C6242 - C6241) * C30875 + (C6244 - C6243) * C32188 +
             (C31966 * C957 - C113 * C946) * C30856 +
             (C31966 * C964 - C113 * C958) * C31874) *
                C32248) *
               C31925 * C467) *
              C469)) /
            (p * q * std::sqrt(p + q));
    d2ee[101] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31966 * C126 - C113 * C119) * C2654 +
             (C31966 * C140 - C113 * C127) * C2648 + (C148 - C149) * C2655 +
             (C150 - C151) * C2649 + C168 * C2656 + C169 * C2650 +
             C170 * C2657 + C171 * C32242) *
                C32207 +
            ((C966 - C967) * C2654 + (C968 - C969) * C2648 + C1297 * C2655 +
             C1298 * C2649 + C816 * C2656 + C817 * C2650 + C2659 * C2657 +
             C2660 * C32242) *
                C32013) *
               C572 +
           (((C113 * C344 - C31966 * C354) * C2654 +
             (C113 * C355 - C31966 * C374) * C2648 + (C579 - C580) * C2655 +
             (C581 - C582) * C2649 + (C583 - C584) * C2656 +
             (C585 - C586) * C2650 + (C587 - C588) * C2657 +
             (C589 - C590) * C32242) *
                C32207 +
            ((C1631 - C1632) * C2654 + (C1633 - C1634) * C2648 +
             (C1457 - C1458) * C2655 + (C1459 - C1460) * C2649 +
             (C1461 - C1462) * C2656 + (C1463 - C1464) * C2650 +
             (C3119 - C3120) * C2657 + (C3121 - C3122) * C32242) *
                C32013) *
               C573) *
              C466 +
          ((((C967 - C966) * C2654 + (C969 - C968) * C2648 + C1299 * C2655 +
             C1300 * C2649 + C1301 * C2656 + C1302 * C2650 + C2987 * C2657 +
             C2988 * C32242) *
                C32207 +
            ((C971 - C970) * C2654 + (C973 - C972) * C2648 + C1303 * C2655 +
             C1304 * C2649 + C1305 * C2656 + C1306 * C2650 +
             (C826 - C827) * C2657 + (C828 - C829) * C32242) *
                C32013) *
               C572 +
           (((C1632 - C1631) * C2654 + (C1634 - C1633) * C2648 +
             (C1458 - C1457) * C2655 + (C1460 - C1459) * C2649 +
             (C1462 - C1461) * C2656 + (C1464 - C1463) * C2650 +
             (C3120 - C3119) * C2657 + (C3122 - C3121) * C32242) *
                C32207 +
            ((C1636 - C1635) * C2654 + (C1638 - C1637) * C2648 +
             (C1466 - C1465) * C2655 + (C1468 - C1467) * C2649 +
             (C1470 - C1469) * C2656 + (C1472 - C1471) * C2650 +
             (C31966 * C1453 - C113 * C1452) * C2657 +
             (C31966 * C1455 - C113 * C1454) * C32242) *
                C32013) *
               C573) *
              C467) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31966 * C126 - C113 * C119) * C30875 +
             (C31966 * C140 - C113 * C127) * C32188 + (C148 - C149) * C30856 +
             (C150 - C151) * C31874) *
                C7401 +
            ((C966 - C967) * C30875 + (C968 - C969) * C32188 + C1297 * C30856 +
             C1298 * C31874) *
                C7402 +
            C7520 * C7403 + C7521 * C32248) *
               C572 +
           (((C113 * C344 - C31966 * C354) * C30875 +
             (C113 * C355 - C31966 * C374) * C32188 + (C579 - C580) * C30856 +
             (C581 - C582) * C31874) *
                C7401 +
            ((C1631 - C1632) * C30875 + (C1633 - C1634) * C32188 +
             (C1457 - C1458) * C30856 + (C1459 - C1460) * C31874) *
                C7402 +
            ((C1635 - C1636) * C30875 + (C1637 - C1638) * C32188 +
             (C1465 - C1466) * C30856 + (C1467 - C1468) * C31874) *
                C7403 +
            ((C6417 - C6418) * C30875 + (C6419 - C6420) * C32188 +
             (C7882 - C7883) * C30856 + (C7884 - C7885) * C31874) *
                C32248) *
               C573) *
              C466 +
          ((((C967 - C966) * C30875 + (C969 - C968) * C32188 + C1299 * C30856 +
             C1300 * C31874) *
                C7401 +
            ((C971 - C970) * C30875 + (C973 - C972) * C32188 + C1303 * C30856 +
             C1304 * C31874) *
                C7402 +
            ((C978 - C979) * C30875 + (C980 - C981) * C32188 + C7750 * C30856 +
             C7751 * C31874) *
                C7403 +
            ((C6065 - C6064) * C30875 + (C6067 - C6066) * C32188 +
             (C6241 - C6242) * C30856 + (C6243 - C6244) * C31874) *
                C32248) *
               C572 +
           (((C1632 - C1631) * C30875 + (C1634 - C1633) * C32188 +
             (C1458 - C1457) * C30856 + (C1460 - C1459) * C31874) *
                C7401 +
            ((C1636 - C1635) * C30875 + (C1638 - C1637) * C32188 +
             (C1466 - C1465) * C30856 + (C1468 - C1467) * C31874) *
                C7402 +
            ((C6418 - C6417) * C30875 + (C6420 - C6419) * C32188 +
             (C7883 - C7882) * C30856 + (C7885 - C7884) * C31874) *
                C7403 +
            ((C6422 - C6421) * C30875 + (C6424 - C6423) * C32188 +
             (C31966 * C6327 - C113 * C6326) * C30856 +
             (C31966 * C6329 - C113 * C6328) * C31874) *
                C32248) *
               C573) *
              C467) *
         C31899) /
            (p * q * std::sqrt(p + q));
    d2ee[102] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31966 * C126 - C113 * C119) * C2654 +
            (C31966 * C140 - C113 * C127) * C2648 + (C148 - C149) * C2655 +
            (C150 - C151) * C2649 + C168 * C2656 + C169 * C2650 + C170 * C2657 +
            C171 * C32242) *
               C32207 +
           ((C966 - C967) * C2654 + (C968 - C969) * C2648 + C1297 * C2655 +
            C1298 * C2649 + C816 * C2656 + C817 * C2650 + C2659 * C2657 +
            C2660 * C32242) *
               C32013) *
              C31925 * C235 +
          (((C967 - C966) * C2654 + (C969 - C968) * C2648 + C1299 * C2655 +
            C1300 * C2649 + C1301 * C2656 + C1302 * C2650 +
            (C483 - C484) * C2657 + (C485 - C486) * C32242) *
               C32207 +
           ((C971 - C970) * C2654 + (C973 - C972) * C2648 + C1303 * C2655 +
            C1304 * C2649 + C1305 * C2656 + C1306 * C2650 +
            (C826 - C827) * C2657 + (C828 - C829) * C32242) *
               C32013) *
              C31925 * C236 +
          ((C990 * C2654 + C991 * C2648 + C974 * C2655 + C975 * C2649 +
            C830 * C2656 + C831 * C2650 + (C827 - C826) * C2657 +
            (C829 - C828) * C32242) *
               C32207 +
           ((C979 - C978) * C2654 + (C981 - C980) * C2648 +
            (C983 - C982) * C2655 + (C985 - C984) * C2649 +
            (C987 - C986) * C2656 + (C989 - C988) * C2650 +
            (C31966 * C1293 - C113 * C1292) * C2657 +
            (C31966 * C1295 - C113 * C1294) * C32242) *
               C32013) *
              C31925 * C237) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31966 * C126 - C113 * C119) * C2654 +
            (C31966 * C140 - C113 * C127) * C2648 + (C148 - C149) * C2655 +
            (C150 - C151) * C2649 + C168 * C2656 + C169 * C2650 + C170 * C2657 +
            C171 * C32242) *
               C32207 +
           ((C966 - C967) * C2654 + (C968 - C969) * C2648 + C1297 * C2655 +
            C1298 * C2649 + C816 * C2656 + C817 * C2650 + C2659 * C2657 +
            C2660 * C32242) *
               C32013) *
              C31925 * C31911 * C110 +
          (((C149 - C148) * C2654 + (C151 - C150) * C2648 +
            (C153 - C152) * C2655 + (C155 - C154) * C2649 +
            (C157 - C156) * C2656 + (C159 - C158) * C2650 +
            (C161 - C160) * C2657 + (C163 - C162) * C32242) *
               C32207 +
           (C1299 * C2654 + C1300 * C2648 + C1301 * C2655 + C1302 * C2649 +
            (C483 - C484) * C2656 + (C485 - C486) * C2650 +
            (C487 - C488) * C2657 + (C489 - C490) * C32242) *
               C32013) *
              C31925 * C31911 * C111 +
          ((C168 * C2654 + C169 * C2648 + C170 * C2655 + C171 * C2649 +
            C172 * C2656 + C173 * C2650 + (C165 - C164) * C2657 +
            (C167 - C166) * C32242) *
               C32207 +
           (C816 * C2654 + C817 * C2648 + C2659 * C2655 + C2660 * C2649 +
            (C488 - C487) * C2656 + (C490 - C489) * C2650 +
            (C31966 * C471 - C113 * C470) * C2657 +
            (C31966 * C473 - C113 * C472) * C32242) *
               C32013) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31966 * C126 - C113 * C119) * C2654 +
            (C31966 * C140 - C113 * C127) * C2648 + (C148 - C149) * C2655 +
            (C150 - C151) * C2649 + C168 * C2656 + C169 * C2650 + C170 * C2657 +
            C171 * C32242) *
               C32207 +
           ((C966 - C967) * C2654 + (C968 - C969) * C2648 + C1297 * C2655 +
            C1298 * C2649 + C816 * C2656 + C817 * C2650 + C2659 * C2657 +
            C2660 * C32242) *
               C32013) *
              C341 +
          (((C113 * C344 - C31966 * C354) * C2654 +
            (C113 * C355 - C31966 * C374) * C2648 + (C579 - C580) * C2655 +
            (C581 - C582) * C2649 + (C583 - C584) * C2656 +
            (C585 - C586) * C2650 + (C587 - C588) * C2657 +
            (C589 - C590) * C32242) *
               C32207 +
           ((C1631 - C1632) * C2654 + (C1633 - C1634) * C2648 +
            (C1457 - C1458) * C2655 + (C1459 - C1460) * C2649 +
            (C1461 - C1462) * C2656 + (C1463 - C1464) * C2650 +
            (C113 * C679 - C31966 * C687) * C2657 +
            (C113 * C688 - C31966 * C694) * C32242) *
               C32013) *
              C342 +
          (((C31966 * C364 - C113 * C349) * C2654 +
            (C31966 * C379 - C113 * C365) * C2648 +
            (C31966 * C366 - C113 * C350) * C2655 +
            (C31966 * C380 - C113 * C367) * C2649 +
            (C31966 * C368 - C113 * C351) * C2656 +
            (C31966 * C381 - C113 * C369) * C2650 +
            (C31966 * C370 - C113 * C352) * C2657 +
            (C31966 * C382 - C113 * C371) * C32242) *
               C32207 +
           ((C31966 * C1125 - C113 * C1113) * C2654 +
            (C31966 * C1140 - C113 * C1126) * C2648 +
            (C31966 * C1127 - C113 * C1114) * C2655 +
            (C31966 * C1141 - C113 * C1128) * C2649 +
            (C31966 * C1129 - C113 * C1115) * C2656 +
            (C31966 * C1142 - C113 * C1130) * C2650 +
            (C31966 * C2191 - C113 * C2190) * C2657 +
            (C31966 * C2193 - C113 * C2192) * C32242) *
               C32013) *
              C343) *
         C31911 * C31899) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31966 * C126 - C113 * C119) * C30875 +
            (C31966 * C140 - C113 * C127) * C32188 + (C148 - C149) * C30856 +
            (C150 - C151) * C31874) *
               C7401 +
           ((C966 - C967) * C30875 + (C968 - C969) * C32188 + C1297 * C30856 +
            C1298 * C31874) *
               C7402 +
           (C990 * C30875 + C991 * C32188 + C974 * C30856 + C975 * C31874) *
               C7403 +
           (C6062 * C30875 + C6063 * C32188 + (C983 - C982) * C30856 +
            (C985 - C984) * C31874) *
               C32248) *
              C31925 * C31911 * C110 +
          (((C149 - C148) * C30875 + (C151 - C150) * C32188 +
            (C153 - C152) * C30856 + (C155 - C154) * C31874) *
               C7401 +
           (C1299 * C30875 + C1300 * C32188 + C1301 * C30856 + C1302 * C31874) *
               C7402 +
           (C1303 * C30875 + C1304 * C32188 + C1305 * C30856 + C1306 * C31874) *
               C7403 +
           ((C982 - C983) * C30875 + (C984 - C985) * C32188 +
            (C986 - C987) * C30856 + (C988 - C989) * C31874) *
               C32248) *
              C31925 * C31911 * C111 +
          ((C168 * C30875 + C169 * C32188 + C170 * C30856 + C171 * C31874) *
               C7401 +
           (C816 * C30875 + C817 * C32188 + C2659 * C30856 + C2660 * C31874) *
               C7402 +
           (C830 * C30875 + C831 * C32188 + (C827 - C826) * C30856 +
            (C829 - C828) * C31874) *
               C7403 +
           ((C987 - C986) * C30875 + (C989 - C988) * C32188 +
            (C31966 * C1293 - C113 * C1292) * C30856 +
            (C31966 * C1295 - C113 * C1294) * C31874) *
               C32248) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31966 * C126 - C113 * C119) * C30875 +
            (C31966 * C140 - C113 * C127) * C32188 + (C148 - C149) * C30856 +
            (C150 - C151) * C31874) *
               C7401 +
           ((C966 - C967) * C30875 + (C968 - C969) * C32188 + C1297 * C30856 +
            C1298 * C31874) *
               C7402 +
           C7520 * C7403 + C7521 * C32248) *
              C31925 * C235 +
          (((C967 - C966) * C30875 + (C969 - C968) * C32188 + C1299 * C30856 +
            C1300 * C31874) *
               C7401 +
           ((C971 - C970) * C30875 + (C973 - C972) * C32188 + C1303 * C30856 +
            C1304 * C31874) *
               C7402 +
           ((C978 - C979) * C30875 + (C980 - C981) * C32188 +
            (C982 - C983) * C30856 + (C984 - C985) * C31874) *
               C7403 +
           ((C6065 - C6064) * C30875 + (C6067 - C6066) * C32188 +
            (C6241 - C6242) * C30856 + (C6243 - C6244) * C31874) *
               C32248) *
              C31925 * C236 +
          (C7520 * C7401 + C7521 * C7402 +
           (C6075 * C30875 + C6076 * C32188 + (C6242 - C6241) * C30856 +
            (C6244 - C6243) * C31874) *
               C7403 +
           ((C6069 - C6068) * C30875 + (C6071 - C6070) * C32188 +
            (C31966 * C6237 - C113 * C6236) * C30856 +
            (C31966 * C6239 - C113 * C6238) * C31874) *
               C32248) *
              C31925 * C237) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31966 * C126 - C113 * C119) * C30875 +
            (C31966 * C140 - C113 * C127) * C32188 + (C148 - C149) * C30856 +
            (C150 - C151) * C31874) *
               C7401 +
           ((C966 - C967) * C30875 + (C968 - C969) * C32188 + C1297 * C30856 +
            C1298 * C31874) *
               C7402 +
           C7520 * C7403 + C7521 * C32248) *
              C341 +
          (((C113 * C344 - C31966 * C354) * C30875 +
            (C113 * C355 - C31966 * C374) * C32188 + (C579 - C580) * C30856 +
            (C581 - C582) * C31874) *
               C7401 +
           ((C1631 - C1632) * C30875 + (C1633 - C1634) * C32188 +
            (C1457 - C1458) * C30856 + (C1459 - C1460) * C31874) *
               C7402 +
           ((C1635 - C1636) * C30875 + (C1637 - C1638) * C32188 +
            (C1465 - C1466) * C30856 + (C1467 - C1468) * C31874) *
               C7403 +
           ((C6417 - C6418) * C30875 + (C6419 - C6420) * C32188 +
            (C113 * C1619 - C31966 * C1623) * C30856 +
            (C113 * C1624 - C31966 * C1628) * C31874) *
               C32248) *
              C342 +
          (((C31966 * C364 - C113 * C349) * C30875 +
            (C31966 * C379 - C113 * C365) * C32188 +
            (C31966 * C366 - C113 * C350) * C30856 +
            (C31966 * C380 - C113 * C367) * C31874) *
               C7401 +
           ((C31966 * C1125 - C113 * C1113) * C30875 +
            (C31966 * C1140 - C113 * C1126) * C32188 +
            (C31966 * C1127 - C113 * C1114) * C30856 +
            (C31966 * C1141 - C113 * C1128) * C31874) *
               C7402 +
           ((C31966 * C1131 - C113 * C1116) * C30875 +
            (C31966 * C1143 - C113 * C1132) * C32188 +
            (C31966 * C1133 - C113 * C1117) * C30856 +
            (C31966 * C1144 - C113 * C1134) * C31874) *
               C7403 +
           ((C31966 * C6147 - C113 * C6143) * C30875 +
            (C31966 * C6152 - C113 * C6148) * C32188 +
            (C31966 * C6962 - C113 * C6961) * C30856 +
            (C31966 * C6964 - C113 * C6963) * C31874) *
               C32248) *
              C343) *
         C31911 * C31899) /
            (p * q * std::sqrt(p + q));
    d2ee[103] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31966 * C126 - C113 * C119) * C2654 +
             (C31966 * C140 - C113 * C127) * C2648 + (C148 - C149) * C2655 +
             (C150 - C151) * C2649 + C168 * C2656 + C169 * C2650 +
             C170 * C2657 + C171 * C32242) *
                C32207 +
            ((C966 - C967) * C2654 + (C968 - C969) * C2648 + C1297 * C2655 +
             C1298 * C2649 + C816 * C2656 + C817 * C2650 + C2659 * C2657 +
             C2660 * C32242) *
                C32013) *
               C572 +
           (((C113 * C344 - C31966 * C354) * C2654 +
             (C113 * C355 - C31966 * C374) * C2648 + (C579 - C580) * C2655 +
             (C581 - C582) * C2649 + (C583 - C584) * C2656 +
             (C585 - C586) * C2650 + (C587 - C588) * C2657 +
             (C589 - C590) * C32242) *
                C32207 +
            ((C1631 - C1632) * C2654 + (C1633 - C1634) * C2648 +
             (C1457 - C1458) * C2655 + (C1459 - C1460) * C2649 +
             (C1461 - C1462) * C2656 + (C1463 - C1464) * C2650 +
             (C3119 - C3120) * C2657 + (C3121 - C3122) * C32242) *
                C32013) *
               C573) *
              C31911 * C468 +
          ((((C149 - C148) * C2654 + (C151 - C150) * C2648 +
             (C153 - C152) * C2655 + (C155 - C154) * C2649 +
             (C157 - C156) * C2656 + (C159 - C158) * C2650 +
             (C161 - C160) * C2657 + (C163 - C162) * C32242) *
                C32207 +
            (C1299 * C2654 + C1300 * C2648 + C1301 * C2655 + C1302 * C2649 +
             C2987 * C2656 + C2988 * C2650 + (C487 - C488) * C2657 +
             (C489 - C490) * C32242) *
                C32013) *
               C572 +
           (((C580 - C579) * C2654 + (C582 - C581) * C2648 +
             (C584 - C583) * C2655 + (C586 - C585) * C2649 +
             (C588 - C587) * C2656 + (C590 - C589) * C2650 +
             (C592 - C591) * C2657 + (C594 - C593) * C32242) *
                C32207 +
            ((C1458 - C1457) * C2654 + (C1460 - C1459) * C2648 +
             (C1462 - C1461) * C2655 + (C1464 - C1463) * C2649 +
             (C3120 - C3119) * C2656 + (C3122 - C3121) * C2650 +
             (C31966 * C689 - C113 * C680) * C2657 +
             (C31966 * C695 - C113 * C690) * C32242) *
                C32013) *
               C573) *
              C31911 * C469)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31966 * C126 - C113 * C119) * C30875 +
             (C31966 * C140 - C113 * C127) * C32188 + (C148 - C149) * C30856 +
             (C150 - C151) * C31874) *
                C7401 +
            ((C966 - C967) * C30875 + (C968 - C969) * C32188 + C1297 * C30856 +
             C1298 * C31874) *
                C7402 +
            C7520 * C7403 + C7521 * C32248) *
               C572 +
           (((C113 * C344 - C31966 * C354) * C30875 +
             (C113 * C355 - C31966 * C374) * C32188 + (C579 - C580) * C30856 +
             (C581 - C582) * C31874) *
                C7401 +
            ((C1631 - C1632) * C30875 + (C1633 - C1634) * C32188 +
             (C1457 - C1458) * C30856 + (C1459 - C1460) * C31874) *
                C7402 +
            ((C1635 - C1636) * C30875 + (C1637 - C1638) * C32188 +
             (C1465 - C1466) * C30856 + (C1467 - C1468) * C31874) *
                C7403 +
            ((C6417 - C6418) * C30875 + (C6419 - C6420) * C32188 +
             (C7882 - C7883) * C30856 + (C7884 - C7885) * C31874) *
                C32248) *
               C573) *
              C31911 * C468 +
          ((((C149 - C148) * C30875 + (C151 - C150) * C32188 +
             (C153 - C152) * C30856 + (C155 - C154) * C31874) *
                C7401 +
            (C1299 * C30875 + C1300 * C32188 + C1301 * C30856 +
             C1302 * C31874) *
                C7402 +
            (C1303 * C30875 + C1304 * C32188 + C1305 * C30856 +
             C1306 * C31874) *
                C7403 +
            (C7750 * C30875 + C7751 * C32188 + (C986 - C987) * C30856 +
             (C988 - C989) * C31874) *
                C32248) *
               C572 +
           (((C580 - C579) * C30875 + (C582 - C581) * C32188 +
             (C584 - C583) * C30856 + (C586 - C585) * C31874) *
                C7401 +
            ((C1458 - C1457) * C30875 + (C1460 - C1459) * C32188 +
             (C1462 - C1461) * C30856 + (C1464 - C1463) * C31874) *
                C7402 +
            ((C1466 - C1465) * C30875 + (C1468 - C1467) * C32188 +
             (C1470 - C1469) * C30856 + (C1472 - C1471) * C31874) *
                C7403 +
            ((C7883 - C7882) * C30875 + (C7885 - C7884) * C32188 +
             (C31966 * C1625 - C113 * C1620) * C30856 +
             (C31966 * C1629 - C113 * C1626) * C31874) *
                C32248) *
               C573) *
              C31911 * C469)) /
            (p * q * std::sqrt(p + q));
    d2ee[104] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C31966 * C126 - C113 * C119) * C2654 +
            (C31966 * C140 - C113 * C127) * C2648 + (C148 - C149) * C2655 +
            (C150 - C151) * C2649 + C168 * C2656 + C169 * C2650 + C170 * C2657 +
            C171 * C32242) *
               C32207 +
           ((C966 - C967) * C2654 + (C968 - C969) * C2648 + C1297 * C2655 +
            C1298 * C2649 + C816 * C2656 + C817 * C2650 + C2659 * C2657 +
            C2660 * C32242) *
               C32013) *
              C31925 * C31911 * C110 +
          (((C149 - C148) * C2654 + (C151 - C150) * C2648 +
            (C153 - C152) * C2655 + (C155 - C154) * C2649 +
            (C157 - C156) * C2656 + (C159 - C158) * C2650 +
            (C161 - C160) * C2657 + (C163 - C162) * C32242) *
               C32207 +
           (C1299 * C2654 + C1300 * C2648 + C1301 * C2655 + C1302 * C2649 +
            (C483 - C484) * C2656 + (C485 - C486) * C2650 +
            (C487 - C488) * C2657 + (C489 - C490) * C32242) *
               C32013) *
              C31925 * C31911 * C111 +
          ((C168 * C2654 + C169 * C2648 + C170 * C2655 + C171 * C2649 +
            C172 * C2656 + C173 * C2650 + (C165 - C164) * C2657 +
            (C167 - C166) * C32242) *
               C32207 +
           (C816 * C2654 + C817 * C2648 + C2659 * C2655 + C2660 * C2649 +
            (C488 - C487) * C2656 + (C490 - C489) * C2650 +
            (C31966 * C471 - C113 * C470) * C2657 +
            (C31966 * C473 - C113 * C472) * C32242) *
               C32013) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C31966 * C126 - C113 * C119) * C2654 +
            (C31966 * C140 - C113 * C127) * C2648 + (C148 - C149) * C2655 +
            (C150 - C151) * C2649 + C168 * C2656 + C169 * C2650 + C170 * C2657 +
            C171 * C32242) *
               C32207 +
           ((C966 - C967) * C2654 + (C968 - C969) * C2648 + C1297 * C2655 +
            C1298 * C2649 + C816 * C2656 + C817 * C2650 + C2659 * C2657 +
            C2660 * C32242) *
               C32013) *
              C31925 * C235 +
          (((C967 - C966) * C2654 + (C969 - C968) * C2648 + C1299 * C2655 +
            C1300 * C2649 + C1301 * C2656 + C1302 * C2650 +
            (C483 - C484) * C2657 + (C485 - C486) * C32242) *
               C32207 +
           ((C971 - C970) * C2654 + (C973 - C972) * C2648 + C1303 * C2655 +
            C1304 * C2649 + C1305 * C2656 + C1306 * C2650 +
            (C826 - C827) * C2657 + (C828 - C829) * C32242) *
               C32013) *
              C31925 * C236 +
          ((C990 * C2654 + C991 * C2648 + C974 * C2655 + C975 * C2649 +
            C830 * C2656 + C831 * C2650 + (C827 - C826) * C2657 +
            (C829 - C828) * C32242) *
               C32207 +
           ((C979 - C978) * C2654 + (C981 - C980) * C2648 +
            (C983 - C982) * C2655 + (C985 - C984) * C2649 +
            (C987 - C986) * C2656 + (C989 - C988) * C2650 +
            (C31966 * C1293 - C113 * C1292) * C2657 +
            (C31966 * C1295 - C113 * C1294) * C32242) *
               C32013) *
              C31925 * C237) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C31966 * C126 - C113 * C119) * C30875 +
            (C31966 * C140 - C113 * C127) * C32188 + (C148 - C149) * C30856 +
            (C150 - C151) * C31874) *
               C7401 +
           ((C966 - C967) * C30875 + (C968 - C969) * C32188 + C1297 * C30856 +
            C1298 * C31874) *
               C7402 +
           (C990 * C30875 + C991 * C32188 + C974 * C30856 + C975 * C31874) *
               C7403 +
           (C6062 * C30875 + C6063 * C32188 + (C983 - C982) * C30856 +
            (C985 - C984) * C31874) *
               C32248) *
              C31925 * C31911 * C110 +
          (((C149 - C148) * C30875 + (C151 - C150) * C32188 +
            (C153 - C152) * C30856 + (C155 - C154) * C31874) *
               C7401 +
           (C1299 * C30875 + C1300 * C32188 + C1301 * C30856 + C1302 * C31874) *
               C7402 +
           (C1303 * C30875 + C1304 * C32188 + C1305 * C30856 + C1306 * C31874) *
               C7403 +
           ((C982 - C983) * C30875 + (C984 - C985) * C32188 +
            (C986 - C987) * C30856 + (C988 - C989) * C31874) *
               C32248) *
              C31925 * C31911 * C111 +
          ((C168 * C30875 + C169 * C32188 + C170 * C30856 + C171 * C31874) *
               C7401 +
           (C816 * C30875 + C817 * C32188 + C2659 * C30856 + C2660 * C31874) *
               C7402 +
           (C830 * C30875 + C831 * C32188 + (C827 - C826) * C30856 +
            (C829 - C828) * C31874) *
               C7403 +
           ((C987 - C986) * C30875 + (C989 - C988) * C32188 +
            (C31966 * C1293 - C113 * C1292) * C30856 +
            (C31966 * C1295 - C113 * C1294) * C31874) *
               C32248) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C31966 * C126 - C113 * C119) * C30875 +
            (C31966 * C140 - C113 * C127) * C32188 + (C148 - C149) * C30856 +
            (C150 - C151) * C31874) *
               C7401 +
           ((C966 - C967) * C30875 + (C968 - C969) * C32188 + C1297 * C30856 +
            C1298 * C31874) *
               C7402 +
           C7520 * C7403 + C7521 * C32248) *
              C31925 * C235 +
          (((C967 - C966) * C30875 + (C969 - C968) * C32188 + C1299 * C30856 +
            C1300 * C31874) *
               C7401 +
           ((C971 - C970) * C30875 + (C973 - C972) * C32188 + C1303 * C30856 +
            C1304 * C31874) *
               C7402 +
           ((C978 - C979) * C30875 + (C980 - C981) * C32188 +
            (C982 - C983) * C30856 + (C984 - C985) * C31874) *
               C7403 +
           ((C6065 - C6064) * C30875 + (C6067 - C6066) * C32188 +
            (C6241 - C6242) * C30856 + (C6243 - C6244) * C31874) *
               C32248) *
              C31925 * C236 +
          (C7520 * C7401 + C7521 * C7402 +
           (C6075 * C30875 + C6076 * C32188 + (C6242 - C6241) * C30856 +
            (C6244 - C6243) * C31874) *
               C7403 +
           ((C6069 - C6068) * C30875 + (C6071 - C6070) * C32188 +
            (C31966 * C6237 - C113 * C6236) * C30856 +
            (C31966 * C6239 - C113 * C6238) * C31874) *
               C32248) *
              C31925 * C237) *
         C31899) /
            (p * q * std::sqrt(p + q));
    d2ee[105] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C32208 * C126 - C3352 * C119 + C32053 * C354 - C3353 * C344) *
                 C812 +
             (C32208 * C140 - C3352 * C127 + C32053 * C374 - C3353 * C355) *
                 C806 +
             (C3355 - C3356 + C3357 - C3358) * C813 +
             (C3359 - C3360 + C3361 - C3362) * C807 + C3395 * C814 +
             C3396 * C32227) *
                C32207 +
            ((C4331 - C4332 + C4333 - C4334) * C812 +
             (C4335 - C4336 + C4337 - C4338) * C806 + C4715 * C813 +
             C4716 * C807 + C4183 * C814 + C4184 * C32227) *
                C32013) *
               C31925 * C466 +
           (((C4332 - C4331 + C4334 - C4333) * C812 +
             (C4336 - C4335 + C4338 - C4337) * C806 + C4717 * C813 +
             C4718 * C807 + C4719 * C814 + C4720 * C32227) *
                C32207 +
            ((C4339 - C4340 + C4341 - C4342) * C812 +
             (C4343 - C4344 + C4345 - C4346) * C806 +
             (C4347 - C4348 + C4349 - C4350) * C813 +
             (C4351 - C4352 + C4353 - C4354) * C807 +
             (C4355 - C4356 + C4357 - C4358) * C814 +
             (C4359 - C4360 + C4361 - C4362) * C32227) *
                C32013) *
               C31925 * C467) *
              C468 +
          ((((C3356 - C3355 + C3358 - C3357) * C812 +
             (C3360 - C3359 + C3362 - C3361) * C806 +
             (C3364 - C3363 + C3366 - C3365) * C813 +
             (C3368 - C3367 + C3370 - C3369) * C807 +
             (C3372 - C3371 + C3374 - C3373) * C814 +
             (C3376 - C3375 + C3378 - C3377) * C32227) *
                C32207 +
            (C4717 * C812 + C4718 * C806 + C4719 * C813 + C4720 * C807 +
             (C3741 - C3742 + C3743 - C3744) * C814 +
             (C3745 - C3746 + C3747 - C3748) * C32227) *
                C32013) *
               C31925 * C466 +
           ((C4715 * C812 + C4716 * C806 + C4183 * C813 + C4184 * C807 +
             (C3742 - C3741 + C3744 - C3743) * C814 +
             (C3746 - C3745 + C3748 - C3747) * C32227) *
                C32207 +
            ((C4348 - C4347 + C4350 - C4349) * C812 +
             (C4352 - C4351 + C4354 - C4353) * C806 +
             (C4356 - C4355 + C4358 - C4357) * C813 +
             (C4360 - C4359 + C4362 - C4361) * C807 +
             (C32208 * C265 - C3352 * C247 + C32053 * C1453 - C3353 * C1452) *
                 C814 +
             (C32208 * C277 - C3352 * C266 + C32053 * C1455 - C3353 * C1454) *
                 C32227) *
                C32013) *
               C31925 * C467) *
              C469)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C32208 * C126 - C3352 * C119 + C32053 * C354 - C3353 * C344) *
                 C5988 +
             (C32208 * C140 - C3352 * C127 + C32053 * C374 - C3353 * C355) *
                 C31864) *
                C7401 +
            ((C4331 - C4332 + C4333 - C4334) * C5988 +
             (C4335 - C4336 + C4337 - C4338) * C31864) *
                C7402 +
            C9303 * C7403 + C9308 * C32248) *
               C31925 * C466 +
           (((C4332 - C4331 + C4334 - C4333) * C5988 +
             (C4336 - C4335 + C4338 - C4337) * C31864) *
                C7401 +
            ((C4339 - C4340 + C4341 - C4342) * C5988 +
             (C4343 - C4344 + C4345 - C4346) * C31864) *
                C7402 +
            ((C8316 - C8317 + C8318 - C8319) * C5988 +
             (C8320 - C8321 + C8322 - C8323) * C31864) *
                C7403 +
            ((C9295 - C9296 + C9297 - C9298) * C5988 +
             (C9299 - C9300 + C9301 - C9302) * C31864) *
                C32248) *
               C31925 * C467) *
              C468 +
          ((((C3356 - C3355 + C3358 - C3357) * C5988 +
             (C3360 - C3359 + C3362 - C3361) * C31864) *
                C7401 +
            (C4717 * C5988 + C4718 * C31864) * C7402 +
            (C8687 * C5988 + C8688 * C31864) * C7403 +
            ((C8324 - C8325 + C8326 - C8327) * C5988 +
             (C8328 - C8329 + C8330 - C8331) * C31864) *
                C32248) *
               C31925 * C466 +
           ((C4715 * C5988 + C4716 * C31864) * C7401 +
            (C8334 * C5988 + C8335 * C31864) * C7402 +
            ((C8325 - C8324 + C8327 - C8326) * C5988 +
             (C8329 - C8328 + C8331 - C8330) * C31864) *
                C7403 +
            ((C32208 * C955 - C3352 * C945 + C32053 * C6327 - C3353 * C6326) *
                 C5988 +
             (C32208 * C963 - C3352 * C956 + C32053 * C6329 - C3353 * C6328) *
                 C31864) *
                C32248) *
               C31925 * C467) *
              C469)) /
            (p * q * std::sqrt(p + q));
    d2ee[106] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C32208 * C126 - C3352 * C119 + C32053 * C354 - C3353 * C344) *
                 C812 +
             (C32208 * C140 - C3352 * C127 + C32053 * C374 - C3353 * C355) *
                 C806 +
             (C3355 - C3356 + C3357 - C3358) * C813 +
             (C3359 - C3360 + C3361 - C3362) * C807 + C3395 * C814 +
             C3396 * C32227) *
                C32207 +
            ((C4331 - C4332 + C4333 - C4334) * C812 +
             (C4335 - C4336 + C4337 - C4338) * C806 + C4715 * C813 +
             C4716 * C807 + C4183 * C814 + C4184 * C32227) *
                C32013) *
               C572 +
           (((C3352 * C344 - C32208 * C354 + C3353 * C349 - C32053 * C364) *
                 C812 +
             (C3352 * C355 - C32208 * C374 + C3353 * C365 - C32053 * C379) *
                 C806 +
             (C3879 - C3880 + C3881 - C3882) * C813 +
             (C3883 - C3884 + C3885 - C3886) * C807 +
             (C3887 - C3888 + C3889 - C3890) * C814 +
             (C3891 - C3892 + C3893 - C3894) * C32227) *
                C32207 +
            ((C5125 - C5126 + C5127 - C5128) * C812 +
             (C5129 - C5130 + C5131 - C5132) * C806 +
             (C4915 - C4916 + C4917 - C4918) * C813 +
             (C4919 - C4920 + C4921 - C4922) * C807 +
             (C4923 - C4924 + C4925 - C4926) * C814 +
             (C4927 - C4928 + C4929 - C4930) * C32227) *
                C32013) *
               C573) *
              C466 +
          ((((C4332 - C4331 + C4334 - C4333) * C812 +
             (C4336 - C4335 + C4338 - C4337) * C806 + C4717 * C813 +
             C4718 * C807 + C4719 * C814 + C4720 * C32227) *
                C32207 +
            ((C4339 - C4340 + C4341 - C4342) * C812 +
             (C4343 - C4344 + C4345 - C4346) * C806 +
             (C4347 - C4348 + C4349 - C4350) * C813 +
             (C4351 - C4352 + C4353 - C4354) * C807 +
             (C4355 - C4356 + C4357 - C4358) * C814 +
             (C4359 - C4360 + C4361 - C4362) * C32227) *
                C32013) *
               C572 +
           (((C5126 - C5125 + C5128 - C5127) * C812 +
             (C5130 - C5129 + C5132 - C5131) * C806 +
             (C4916 - C4915 + C4918 - C4917) * C813 +
             (C4920 - C4919 + C4922 - C4921) * C807 +
             (C4924 - C4923 + C4926 - C4925) * C814 +
             (C4928 - C4927 + C4930 - C4929) * C32227) *
                C32207 +
            ((C32208 * C1119 - C3352 * C1110 + C32053 * C1131 - C3353 * C1116) *
                 C812 +
             (C32208 * C1137 - C3352 * C1120 + C32053 * C1143 - C3353 * C1132) *
                 C806 +
             (C32208 * C1121 - C3352 * C1111 + C32053 * C1133 - C3353 * C1117) *
                 C813 +
             (C32208 * C1138 - C3352 * C1122 + C32053 * C1144 - C3353 * C1134) *
                 C807 +
             (C32208 * C1123 - C3352 * C1112 + C32053 * C1135 - C3353 * C1118) *
                 C814 +
             (C32208 * C1139 - C3352 * C1124 + C32053 * C1145 - C3353 * C1136) *
                 C32227) *
                C32013) *
               C573) *
              C467) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C32208 * C126 - C3352 * C119 + C32053 * C354 - C3353 * C344) *
                 C5988 +
             (C32208 * C140 - C3352 * C127 + C32053 * C374 - C3353 * C355) *
                 C31864) *
                C7401 +
            ((C4331 - C4332 + C4333 - C4334) * C5988 +
             (C4335 - C4336 + C4337 - C4338) * C31864) *
                C7402 +
            C9303 * C7403 + C9308 * C32248) *
               C572 +
           (((C3352 * C344 - C32208 * C354 + C3353 * C349 - C32053 * C364) *
                 C5988 +
             (C3352 * C355 - C32208 * C374 + C3353 * C365 - C32053 * C379) *
                 C31864) *
                C7401 +
            ((C5125 - C5126 + C5127 - C5128) * C5988 +
             (C5129 - C5130 + C5131 - C5132) * C31864) *
                C7402 +
            ((C9085 - C9086 + C9087 - C9088) * C5988 +
             (C9089 - C9090 + C9091 - C9092) * C31864) *
                C7403 +
            ((C9797 - C9798 + C9799 - C9800) * C5988 +
             (C9801 - C9802 + C9803 - C9804) * C31864) *
                C32248) *
               C573) *
              C466 +
          ((((C4332 - C4331 + C4334 - C4333) * C5988 +
             (C4336 - C4335 + C4338 - C4337) * C31864) *
                C7401 +
            ((C4339 - C4340 + C4341 - C4342) * C5988 +
             (C4343 - C4344 + C4345 - C4346) * C31864) *
                C7402 +
            ((C8316 - C8317 + C8318 - C8319) * C5988 +
             (C8320 - C8321 + C8322 - C8323) * C31864) *
                C7403 +
            ((C9295 - C9296 + C9297 - C9298) * C5988 +
             (C9299 - C9300 + C9301 - C9302) * C31864) *
                C32248) *
               C572 +
           (((C5126 - C5125 + C5128 - C5127) * C5988 +
             (C5130 - C5129 + C5132 - C5131) * C31864) *
                C7401 +
            ((C9086 - C9085 + C9088 - C9087) * C5988 +
             (C9090 - C9089 + C9092 - C9091) * C31864) *
                C7402 +
            ((C9798 - C9797 + C9800 - C9799) * C5988 +
             (C9802 - C9801 + C9804 - C9803) * C31864) *
                C7403 +
            ((C32208 * C6145 - C3352 * C6142 + C32053 * C6149 - C3353 * C6144) *
                 C5988 +
             (C32208 * C6151 - C3352 * C6146 + C32053 * C6153 - C3353 * C6150) *
                 C31864) *
                C32248) *
               C573) *
              C467) *
         C31899) /
            (p * q * std::sqrt(p + q));
    d2ee[107] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C32208 * C126 - C3352 * C119 + C32053 * C354 - C3353 * C344) *
                C812 +
            (C32208 * C140 - C3352 * C127 + C32053 * C374 - C3353 * C355) *
                C806 +
            (C3355 - C3356 + C3357 - C3358) * C813 +
            (C3359 - C3360 + C3361 - C3362) * C807 + C3395 * C814 +
            C3396 * C32227) *
               C32207 +
           ((C4331 - C4332 + C4333 - C4334) * C812 +
            (C4335 - C4336 + C4337 - C4338) * C806 +
            (C3726 - C3725 + C3728 - C3727) * C813 +
            (C3730 - C3729 + C3732 - C3731) * C807 + C4183 * C814 +
            C4184 * C32227) *
               C32013) *
              C31925 * C235 +
          (((C4332 - C4331 + C4334 - C4333) * C812 +
            (C4336 - C4335 + C4338 - C4337) * C806 +
            (C3725 - C3726 + C3727 - C3728) * C813 +
            (C3729 - C3730 + C3731 - C3732) * C807 +
            (C3733 - C3734 + C3735 - C3736) * C814 +
            (C3737 - C3738 + C3739 - C3740) * C32227) *
               C32207 +
           ((C4339 - C4340 + C4341 - C4342) * C812 +
            (C4343 - C4344 + C4345 - C4346) * C806 +
            (C4347 - C4348 + C4349 - C4350) * C813 +
            (C4351 - C4352 + C4353 - C4354) * C807 +
            (C4355 - C4356 + C4357 - C4358) * C814 +
            (C4359 - C4360 + C4361 - C4362) * C32227) *
               C32013) *
              C31925 * C236 +
          (((C4340 - C4339 + C4342 - C4341) * C812 +
            (C4344 - C4343 + C4346 - C4345) * C806 +
            (C4348 - C4347 + C4350 - C4349) * C813 +
            (C4352 - C4351 + C4354 - C4353) * C807 +
            (C4356 - C4355 + C4358 - C4357) * C814 +
            (C4360 - C4359 + C4362 - C4361) * C32227) *
               C32207 +
           ((C32208 * C947 - C3352 * C941 + C32053 * C1621 - C3353 * C1618) *
                C812 +
            (C32208 * C959 - C3352 * C948 + C32053 * C1627 - C3353 * C1622) *
                C806 +
            (C32208 * C949 - C3352 * C942 + C32053 * C1623 - C3353 * C1619) *
                C813 +
            (C32208 * C960 - C3352 * C950 + C32053 * C1628 - C3353 * C1624) *
                C807 +
            (C32208 * C951 - C3352 * C943 + C32053 * C1625 - C3353 * C1620) *
                C814 +
            (C32208 * C961 - C3352 * C952 + C32053 * C1629 - C3353 * C1626) *
                C32227) *
               C32013) *
              C31925 * C237) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C32208 * C126 - C3352 * C119 + C32053 * C354 - C3353 * C344) *
                C812 +
            (C32208 * C140 - C3352 * C127 + C32053 * C374 - C3353 * C355) *
                C806 +
            (C3355 - C3356 + C3357 - C3358) * C813 +
            (C3359 - C3360 + C3361 - C3362) * C807 + C3395 * C814 +
            C3396 * C32227) *
               C32207 +
           ((C32208 * C249 - C3352 * C239 + C32053 * C681 - C3353 * C676) *
                C812 +
            (C32208 * C269 - C3352 * C250 + C32053 * C691 - C3353 * C682) *
                C806 +
            (C3726 - C3725 + C3728 - C3727) * C813 +
            (C3730 - C3729 + C3732 - C3731) * C807 + C4183 * C814 +
            C4184 * C32227) *
               C32013) *
              C31925 * C31911 * C110 +
          (((C3356 - C3355 + C3358 - C3357) * C812 +
            (C3360 - C3359 + C3362 - C3361) * C806 +
            (C3364 - C3363 + C3366 - C3365) * C813 +
            (C3368 - C3367 + C3370 - C3369) * C807 +
            (C3372 - C3371 + C3374 - C3373) * C814 +
            (C3376 - C3375 + C3378 - C3377) * C32227) *
               C32207 +
           ((C3725 - C3726 + C3727 - C3728) * C812 +
            (C3729 - C3730 + C3731 - C3732) * C806 +
            (C3733 - C3734 + C3735 - C3736) * C813 +
            (C3737 - C3738 + C3739 - C3740) * C807 +
            (C3741 - C3742 + C3743 - C3744) * C814 +
            (C3745 - C3746 + C3747 - C3748) * C32227) *
               C32013) *
              C31925 * C31911 * C111 +
          ((C3395 * C812 + C3396 * C806 + C3397 * C813 + C3398 * C807 +
            (C3380 - C3379 + C3382 - C3381) * C814 +
            (C3384 - C3383 + C3386 - C3385) * C32227) *
               C32207 +
           (C4183 * C812 + C4184 * C806 +
            (C3742 - C3741 + C3744 - C3743) * C813 +
            (C3746 - C3745 + C3748 - C3747) * C807 +
            (C32208 * C257 - C3352 * C243 + C32053 * C689 - C3353 * C680) *
                C814 +
            (C32208 * C273 - C3352 * C258 + C32053 * C695 - C3353 * C690) *
                C32227) *
               C32013) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C32208 * C126 - C3352 * C119 + C32053 * C354 - C3353 * C344) *
                C812 +
            (C32208 * C140 - C3352 * C127 + C32053 * C374 - C3353 * C355) *
                C806 +
            (C3355 - C3356 + C3357 - C3358) * C813 +
            (C3359 - C3360 + C3361 - C3362) * C807 + C3395 * C814 +
            C3396 * C32227) *
               C32207 +
           ((C4331 - C4332 + C4333 - C4334) * C812 +
            (C4335 - C4336 + C4337 - C4338) * C806 +
            (C3726 - C3725 + C3728 - C3727) * C813 +
            (C3730 - C3729 + C3732 - C3731) * C807 + C4183 * C814 +
            C4184 * C32227) *
               C32013) *
              C341 +
          (((C3352 * C344 - C32208 * C354 + C3353 * C349 - C32053 * C364) *
                C812 +
            (C3352 * C355 - C32208 * C374 + C3353 * C365 - C32053 * C379) *
                C806 +
            (C3879 - C3880 + C3881 - C3882) * C813 +
            (C3883 - C3884 + C3885 - C3886) * C807 +
            (C3887 - C3888 + C3889 - C3890) * C814 +
            (C3891 - C3892 + C3893 - C3894) * C32227) *
               C32207 +
           ((C3352 * C676 - C32208 * C681 + C3353 * C1113 - C32053 * C1125) *
                C812 +
            (C3352 * C682 - C32208 * C691 + C3353 * C1126 - C32053 * C1140) *
                C806 +
            (C3352 * C677 - C32208 * C683 + C3353 * C1114 - C32053 * C1127) *
                C813 +
            (C3352 * C684 - C32208 * C692 + C3353 * C1128 - C32053 * C1141) *
                C807 +
            (C3352 * C678 - C32208 * C685 + C3353 * C1115 - C32053 * C1129) *
                C814 +
            (C3352 * C686 - C32208 * C693 + C3353 * C1130 - C32053 * C1142) *
                C32227) *
               C32013) *
              C342 +
          (((C32208 * C364 - C3352 * C349 + C32053 * C2026 - C3353 * C2020) *
                C812 +
            (C32208 * C379 - C3352 * C365 + C32053 * C2038 - C3353 * C2027) *
                C806 +
            (C32208 * C366 - C3352 * C350 + C32053 * C2028 - C3353 * C2021) *
                C813 +
            (C32208 * C380 - C3352 * C367 + C32053 * C2039 - C3353 * C2029) *
                C807 +
            (C32208 * C368 - C3352 * C351 + C32053 * C2030 - C3353 * C2022) *
                C814 +
            (C32208 * C381 - C3352 * C369 + C32053 * C2040 - C3353 * C2031) *
                C32227) *
               C32207 +
           ((C32208 * C1125 - C3352 * C1113 + C32053 * C2541 - C3353 * C2538) *
                C812 +
            (C32208 * C1140 - C3352 * C1126 + C32053 * C2547 - C3353 * C2542) *
                C806 +
            (C32208 * C1127 - C3352 * C1114 + C32053 * C2543 - C3353 * C2539) *
                C813 +
            (C32208 * C1141 - C3352 * C1128 + C32053 * C2548 - C3353 * C2544) *
                C807 +
            (C32208 * C1129 - C3352 * C1115 + C32053 * C2545 - C3353 * C2540) *
                C814 +
            (C32208 * C1142 - C3352 * C1130 + C32053 * C2549 - C3353 * C2546) *
                C32227) *
               C32013) *
              C343) *
         C31911 * C31899) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C32208 * C126 - C3352 * C119 + C32053 * C354 - C3353 * C344) *
                C5988 +
            (C32208 * C140 - C3352 * C127 + C32053 * C374 - C3353 * C355) *
                C31864) *
               C7401 +
           ((C4331 - C4332 + C4333 - C4334) * C5988 +
            (C4335 - C4336 + C4337 - C4338) * C31864) *
               C7402 +
           (C8332 * C5988 + C8333 * C31864) * C7403 +
           ((C8317 - C8316 + C8319 - C8318) * C5988 +
            (C8321 - C8320 + C8323 - C8322) * C31864) *
               C32248) *
              C31925 * C31911 * C110 +
          (((C3356 - C3355 + C3358 - C3357) * C5988 +
            (C3360 - C3359 + C3362 - C3361) * C31864) *
               C7401 +
           (C4717 * C5988 + C4718 * C31864) * C7402 +
           (C8687 * C5988 + C8688 * C31864) * C7403 +
           ((C8324 - C8325 + C8326 - C8327) * C5988 +
            (C8328 - C8329 + C8330 - C8331) * C31864) *
               C32248) *
              C31925 * C31911 * C111 +
          ((C3395 * C5988 + C3396 * C31864) * C7401 +
           (C4183 * C5988 + C4184 * C31864) * C7402 +
           ((C4356 - C4355 + C4358 - C4357) * C5988 +
            (C4360 - C4359 + C4362 - C4361) * C31864) *
               C7403 +
           ((C32208 * C951 - C3352 * C943 + C32053 * C1625 - C3353 * C1620) *
                C5988 +
            (C32208 * C961 - C3352 * C952 + C32053 * C1629 - C3353 * C1626) *
                C31864) *
               C32248) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C32208 * C126 - C3352 * C119 + C32053 * C354 - C3353 * C344) *
                C5988 +
            (C32208 * C140 - C3352 * C127 + C32053 * C374 - C3353 * C355) *
                C31864) *
               C7401 +
           ((C4331 - C4332 + C4333 - C4334) * C5988 +
            (C4335 - C4336 + C4337 - C4338) * C31864) *
               C7402 +
           C9303 * C7403 + C9308 * C32248) *
              C31925 * C235 +
          (((C4332 - C4331 + C4334 - C4333) * C5988 +
            (C4336 - C4335 + C4338 - C4337) * C31864) *
               C7401 +
           ((C4339 - C4340 + C4341 - C4342) * C5988 +
            (C4343 - C4344 + C4345 - C4346) * C31864) *
               C7402 +
           ((C8316 - C8317 + C8318 - C8319) * C5988 +
            (C8320 - C8321 + C8322 - C8323) * C31864) *
               C7403 +
           ((C9295 - C9296 + C9297 - C9298) * C5988 +
            (C9299 - C9300 + C9301 - C9302) * C31864) *
               C32248) *
              C31925 * C236 +
          (C9303 * C7401 + C9308 * C7402 +
           ((C9296 - C9295 + C9298 - C9297) * C5988 +
            (C9300 - C9299 + C9302 - C9301) * C31864) *
               C7403 +
           ((C32208 * C6053 - C3352 * C6051 + C32053 * C6413 - C3353 * C6412) *
                C5988 +
            (C32208 * C6057 - C3352 * C6054 + C32053 * C6415 - C3353 * C6414) *
                C31864) *
               C32248) *
              C31925 * C237) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C32208 * C126 - C3352 * C119 + C32053 * C354 - C3353 * C344) *
                C5988 +
            (C32208 * C140 - C3352 * C127 + C32053 * C374 - C3353 * C355) *
                C31864) *
               C7401 +
           ((C4331 - C4332 + C4333 - C4334) * C5988 +
            (C4335 - C4336 + C4337 - C4338) * C31864) *
               C7402 +
           C9303 * C7403 + C9308 * C32248) *
              C341 +
          (((C3352 * C344 - C32208 * C354 + C3353 * C349 - C32053 * C364) *
                C5988 +
            (C3352 * C355 - C32208 * C374 + C3353 * C365 - C32053 * C379) *
                C31864) *
               C7401 +
           ((C5125 - C5126 + C5127 - C5128) * C5988 +
            (C5129 - C5130 + C5131 - C5132) * C31864) *
               C7402 +
           ((C9085 - C9086 + C9087 - C9088) * C5988 +
            (C9089 - C9090 + C9091 - C9092) * C31864) *
               C7403 +
           ((C3352 * C1618 - C32208 * C1621 + C3353 * C6143 - C32053 * C6147) *
                C5988 +
            (C3352 * C1622 - C32208 * C1627 + C3353 * C6148 - C32053 * C6152) *
                C31864) *
               C32248) *
              C342 +
          (((C32208 * C364 - C3352 * C349 + C32053 * C2026 - C3353 * C2020) *
                C5988 +
            (C32208 * C379 - C3352 * C365 + C32053 * C2038 - C3353 * C2027) *
                C31864) *
               C7401 +
           ((C32208 * C1125 - C3352 * C1113 + C32053 * C2541 - C3353 * C2538) *
                C5988 +
            (C32208 * C1140 - C3352 * C1126 + C32053 * C2547 - C3353 * C2542) *
                C31864) *
               C7402 +
           ((C32208 * C1131 - C3352 * C1116 + C32053 * C6806 - C3353 * C6803) *
                C5988 +
            (C32208 * C1143 - C3352 * C1132 + C32053 * C6812 - C3353 * C6807) *
                C31864) *
               C7403 +
           ((C32208 * C6147 - C3352 * C6143 + C32053 * C7274 - C3353 * C7273) *
                C5988 +
            (C32208 * C6152 - C3352 * C6148 + C32053 * C7276 - C3353 * C7275) *
                C31864) *
               C32248) *
              C343) *
         C31911 * C31899) /
            (p * q * std::sqrt(p + q));
    d2ee[108] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C32208 * C126 - C3352 * C119 + C32053 * C354 - C3353 * C344) *
                 C812 +
             (C32208 * C140 - C3352 * C127 + C32053 * C374 - C3353 * C355) *
                 C806 +
             (C3355 - C3356 + C3357 - C3358) * C813 +
             (C3359 - C3360 + C3361 - C3362) * C807 + C3395 * C814 +
             C3396 * C32227) *
                C32207 +
            ((C4331 - C4332 + C4333 - C4334) * C812 +
             (C4335 - C4336 + C4337 - C4338) * C806 + C4715 * C813 +
             C4716 * C807 + C4183 * C814 + C4184 * C32227) *
                C32013) *
               C572 +
           (((C3352 * C344 - C32208 * C354 + C3353 * C349 - C32053 * C364) *
                 C812 +
             (C3352 * C355 - C32208 * C374 + C3353 * C365 - C32053 * C379) *
                 C806 +
             (C3879 - C3880 + C3881 - C3882) * C813 +
             (C3883 - C3884 + C3885 - C3886) * C807 +
             (C3887 - C3888 + C3889 - C3890) * C814 +
             (C3891 - C3892 + C3893 - C3894) * C32227) *
                C32207 +
            ((C3352 * C676 - C32208 * C681 + C3353 * C1113 - C32053 * C1125) *
                 C812 +
             (C3352 * C682 - C32208 * C691 + C3353 * C1126 - C32053 * C1140) *
                 C806 +
             (C4915 - C4916 + C4917 - C4918) * C813 +
             (C4919 - C4920 + C4921 - C4922) * C807 +
             (C4923 - C4924 + C4925 - C4926) * C814 +
             (C4927 - C4928 + C4929 - C4930) * C32227) *
                C32013) *
               C573) *
              C31911 * C468 +
          ((((C3356 - C3355 + C3358 - C3357) * C812 +
             (C3360 - C3359 + C3362 - C3361) * C806 +
             (C3364 - C3363 + C3366 - C3365) * C813 +
             (C3368 - C3367 + C3370 - C3369) * C807 +
             (C3372 - C3371 + C3374 - C3373) * C814 +
             (C3376 - C3375 + C3378 - C3377) * C32227) *
                C32207 +
            (C4717 * C812 + C4718 * C806 + C4719 * C813 + C4720 * C807 +
             (C3741 - C3742 + C3743 - C3744) * C814 +
             (C3745 - C3746 + C3747 - C3748) * C32227) *
                C32013) *
               C572 +
           (((C3880 - C3879 + C3882 - C3881) * C812 +
             (C3884 - C3883 + C3886 - C3885) * C806 +
             (C3888 - C3887 + C3890 - C3889) * C813 +
             (C3892 - C3891 + C3894 - C3893) * C807 +
             (C3896 - C3895 + C3898 - C3897) * C814 +
             (C3900 - C3899 + C3902 - C3901) * C32227) *
                C32207 +
            ((C4916 - C4915 + C4918 - C4917) * C812 +
             (C4920 - C4919 + C4922 - C4921) * C806 +
             (C4924 - C4923 + C4926 - C4925) * C813 +
             (C4928 - C4927 + C4930 - C4929) * C807 +
             (C32208 * C687 - C3352 * C679 + C32053 * C2191 - C3353 * C2190) *
                 C814 +
             (C32208 * C694 - C3352 * C688 + C32053 * C2193 - C3353 * C2192) *
                 C32227) *
                C32013) *
               C573) *
              C31911 * C469)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C32208 * C126 - C3352 * C119 + C32053 * C354 - C3353 * C344) *
                 C5988 +
             (C32208 * C140 - C3352 * C127 + C32053 * C374 - C3353 * C355) *
                 C31864) *
                C7401 +
            ((C4331 - C4332 + C4333 - C4334) * C5988 +
             (C4335 - C4336 + C4337 - C4338) * C31864) *
                C7402 +
            C9303 * C7403 + C9308 * C32248) *
               C572 +
           (((C3352 * C344 - C32208 * C354 + C3353 * C349 - C32053 * C364) *
                 C5988 +
             (C3352 * C355 - C32208 * C374 + C3353 * C365 - C32053 * C379) *
                 C31864) *
                C7401 +
            ((C5125 - C5126 + C5127 - C5128) * C5988 +
             (C5129 - C5130 + C5131 - C5132) * C31864) *
                C7402 +
            ((C9085 - C9086 + C9087 - C9088) * C5988 +
             (C9089 - C9090 + C9091 - C9092) * C31864) *
                C7403 +
            ((C3352 * C1618 - C32208 * C1621 + C3353 * C6143 - C32053 * C6147) *
                 C5988 +
             (C3352 * C1622 - C32208 * C1627 + C3353 * C6148 - C32053 * C6152) *
                 C31864) *
                C32248) *
               C573) *
              C31911 * C468 +
          ((((C3356 - C3355 + C3358 - C3357) * C5988 +
             (C3360 - C3359 + C3362 - C3361) * C31864) *
                C7401 +
            (C4717 * C5988 + C4718 * C31864) * C7402 +
            (C8687 * C5988 + C8688 * C31864) * C7403 +
            ((C8324 - C8325 + C8326 - C8327) * C5988 +
             (C8328 - C8329 + C8330 - C8331) * C31864) *
                C32248) *
               C572 +
           (((C3880 - C3879 + C3882 - C3881) * C5988 +
             (C3884 - C3883 + C3886 - C3885) * C31864) *
                C7401 +
            ((C4916 - C4915 + C4918 - C4917) * C5988 +
             (C4920 - C4919 + C4922 - C4921) * C31864) *
                C7402 +
            ((C8884 - C8883 + C8886 - C8885) * C5988 +
             (C8888 - C8887 + C8890 - C8889) * C31864) *
                C7403 +
            ((C32208 * C1623 - C3352 * C1619 + C32053 * C6962 - C3353 * C6961) *
                 C5988 +
             (C32208 * C1628 - C3352 * C1624 + C32053 * C6964 - C3353 * C6963) *
                 C31864) *
                C32248) *
               C573) *
              C31911 * C469)) /
            (p * q * std::sqrt(p + q));
    d2ee[109] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C32208 * C126 - C3352 * C119 + C32053 * C354 - C3353 * C344) *
                C812 +
            (C32208 * C140 - C3352 * C127 + C32053 * C374 - C3353 * C355) *
                C806 +
            (C3355 - C3356 + C3357 - C3358) * C813 +
            (C3359 - C3360 + C3361 - C3362) * C807 + C3395 * C814 +
            C3396 * C32227) *
               C32207 +
           ((C32208 * C249 - C3352 * C239 + C32053 * C681 - C3353 * C676) *
                C812 +
            (C32208 * C269 - C3352 * C250 + C32053 * C691 - C3353 * C682) *
                C806 +
            (C3726 - C3725 + C3728 - C3727) * C813 +
            (C3730 - C3729 + C3732 - C3731) * C807 + C4183 * C814 +
            C4184 * C32227) *
               C32013) *
              C31925 * C31911 * C110 +
          (((C3356 - C3355 + C3358 - C3357) * C812 +
            (C3360 - C3359 + C3362 - C3361) * C806 +
            (C3364 - C3363 + C3366 - C3365) * C813 +
            (C3368 - C3367 + C3370 - C3369) * C807 +
            (C3372 - C3371 + C3374 - C3373) * C814 +
            (C3376 - C3375 + C3378 - C3377) * C32227) *
               C32207 +
           ((C3725 - C3726 + C3727 - C3728) * C812 +
            (C3729 - C3730 + C3731 - C3732) * C806 +
            (C3733 - C3734 + C3735 - C3736) * C813 +
            (C3737 - C3738 + C3739 - C3740) * C807 +
            (C3741 - C3742 + C3743 - C3744) * C814 +
            (C3745 - C3746 + C3747 - C3748) * C32227) *
               C32013) *
              C31925 * C31911 * C111 +
          ((C3395 * C812 + C3396 * C806 + C3397 * C813 + C3398 * C807 +
            (C3380 - C3379 + C3382 - C3381) * C814 +
            (C3384 - C3383 + C3386 - C3385) * C32227) *
               C32207 +
           (C4183 * C812 + C4184 * C806 +
            (C3742 - C3741 + C3744 - C3743) * C813 +
            (C3746 - C3745 + C3748 - C3747) * C807 +
            (C32208 * C257 - C3352 * C243 + C32053 * C689 - C3353 * C680) *
                C814 +
            (C32208 * C273 - C3352 * C258 + C32053 * C695 - C3353 * C690) *
                C32227) *
               C32013) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C32208 * C126 - C3352 * C119 + C32053 * C354 - C3353 * C344) *
                C812 +
            (C32208 * C140 - C3352 * C127 + C32053 * C374 - C3353 * C355) *
                C806 +
            (C3355 - C3356 + C3357 - C3358) * C813 +
            (C3359 - C3360 + C3361 - C3362) * C807 + C3395 * C814 +
            C3396 * C32227) *
               C32207 +
           ((C4331 - C4332 + C4333 - C4334) * C812 +
            (C4335 - C4336 + C4337 - C4338) * C806 +
            (C3726 - C3725 + C3728 - C3727) * C813 +
            (C3730 - C3729 + C3732 - C3731) * C807 + C4183 * C814 +
            C4184 * C32227) *
               C32013) *
              C31925 * C235 +
          (((C4332 - C4331 + C4334 - C4333) * C812 +
            (C4336 - C4335 + C4338 - C4337) * C806 +
            (C3725 - C3726 + C3727 - C3728) * C813 +
            (C3729 - C3730 + C3731 - C3732) * C807 +
            (C3733 - C3734 + C3735 - C3736) * C814 +
            (C3737 - C3738 + C3739 - C3740) * C32227) *
               C32207 +
           ((C4339 - C4340 + C4341 - C4342) * C812 +
            (C4343 - C4344 + C4345 - C4346) * C806 +
            (C4347 - C4348 + C4349 - C4350) * C813 +
            (C4351 - C4352 + C4353 - C4354) * C807 +
            (C4355 - C4356 + C4357 - C4358) * C814 +
            (C4359 - C4360 + C4361 - C4362) * C32227) *
               C32013) *
              C31925 * C236 +
          (((C4340 - C4339 + C4342 - C4341) * C812 +
            (C4344 - C4343 + C4346 - C4345) * C806 +
            (C4348 - C4347 + C4350 - C4349) * C813 +
            (C4352 - C4351 + C4354 - C4353) * C807 +
            (C4356 - C4355 + C4358 - C4357) * C814 +
            (C4360 - C4359 + C4362 - C4361) * C32227) *
               C32207 +
           ((C32208 * C947 - C3352 * C941 + C32053 * C1621 - C3353 * C1618) *
                C812 +
            (C32208 * C959 - C3352 * C948 + C32053 * C1627 - C3353 * C1622) *
                C806 +
            (C32208 * C949 - C3352 * C942 + C32053 * C1623 - C3353 * C1619) *
                C813 +
            (C32208 * C960 - C3352 * C950 + C32053 * C1628 - C3353 * C1624) *
                C807 +
            (C32208 * C951 - C3352 * C943 + C32053 * C1625 - C3353 * C1620) *
                C814 +
            (C32208 * C961 - C3352 * C952 + C32053 * C1629 - C3353 * C1626) *
                C32227) *
               C32013) *
              C31925 * C237) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C32208 * C126 - C3352 * C119 + C32053 * C354 - C3353 * C344) *
                C5988 +
            (C32208 * C140 - C3352 * C127 + C32053 * C374 - C3353 * C355) *
                C31864) *
               C7401 +
           ((C4331 - C4332 + C4333 - C4334) * C5988 +
            (C4335 - C4336 + C4337 - C4338) * C31864) *
               C7402 +
           (C8332 * C5988 + C8333 * C31864) * C7403 +
           ((C8317 - C8316 + C8319 - C8318) * C5988 +
            (C8321 - C8320 + C8323 - C8322) * C31864) *
               C32248) *
              C31925 * C31911 * C110 +
          (((C3356 - C3355 + C3358 - C3357) * C5988 +
            (C3360 - C3359 + C3362 - C3361) * C31864) *
               C7401 +
           (C4717 * C5988 + C4718 * C31864) * C7402 +
           (C8687 * C5988 + C8688 * C31864) * C7403 +
           ((C8324 - C8325 + C8326 - C8327) * C5988 +
            (C8328 - C8329 + C8330 - C8331) * C31864) *
               C32248) *
              C31925 * C31911 * C111 +
          ((C3395 * C5988 + C3396 * C31864) * C7401 +
           (C4183 * C5988 + C4184 * C31864) * C7402 +
           ((C4356 - C4355 + C4358 - C4357) * C5988 +
            (C4360 - C4359 + C4362 - C4361) * C31864) *
               C7403 +
           ((C32208 * C951 - C3352 * C943 + C32053 * C1625 - C3353 * C1620) *
                C5988 +
            (C32208 * C961 - C3352 * C952 + C32053 * C1629 - C3353 * C1626) *
                C31864) *
               C32248) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C32208 * C126 - C3352 * C119 + C32053 * C354 - C3353 * C344) *
                C5988 +
            (C32208 * C140 - C3352 * C127 + C32053 * C374 - C3353 * C355) *
                C31864) *
               C7401 +
           ((C4331 - C4332 + C4333 - C4334) * C5988 +
            (C4335 - C4336 + C4337 - C4338) * C31864) *
               C7402 +
           C9303 * C7403 + C9308 * C32248) *
              C31925 * C235 +
          (((C4332 - C4331 + C4334 - C4333) * C5988 +
            (C4336 - C4335 + C4338 - C4337) * C31864) *
               C7401 +
           ((C4339 - C4340 + C4341 - C4342) * C5988 +
            (C4343 - C4344 + C4345 - C4346) * C31864) *
               C7402 +
           ((C8316 - C8317 + C8318 - C8319) * C5988 +
            (C8320 - C8321 + C8322 - C8323) * C31864) *
               C7403 +
           ((C9295 - C9296 + C9297 - C9298) * C5988 +
            (C9299 - C9300 + C9301 - C9302) * C31864) *
               C32248) *
              C31925 * C236 +
          (C9303 * C7401 + C9308 * C7402 +
           ((C9296 - C9295 + C9298 - C9297) * C5988 +
            (C9300 - C9299 + C9302 - C9301) * C31864) *
               C7403 +
           ((C32208 * C6053 - C3352 * C6051 + C32053 * C6413 - C3353 * C6412) *
                C5988 +
            (C32208 * C6057 - C3352 * C6054 + C32053 * C6415 - C3353 * C6414) *
                C31864) *
               C32248) *
              C31925 * C237) *
         C31899) /
            (p * q * std::sqrt(p + q));
    d2ee[110] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C31966 * C126 - C113 * C119) * C812 +
             (C31966 * C140 - C113 * C127) * C806 + (C148 - C149) * C813 +
             (C150 - C151) * C807 + C168 * C814 + C169 * C32227) *
                C32273 +
            ((C966 - C967) * C812 + (C968 - C969) * C806 + C1297 * C813 +
             C1298 * C807 + C816 * C814 + C817 * C32227) *
                C32261 +
            C1000 * C32238) *
               C31925 * C466 +
           (((C967 - C966) * C812 + (C969 - C968) * C806 + C1299 * C813 +
             C1300 * C807 + C1301 * C814 + C1302 * C32227) *
                C32273 +
            ((C971 - C970) * C812 + (C973 - C972) * C806 + C1303 * C813 +
             C1304 * C807 + C1305 * C814 + C1306 * C32227) *
                C32261 +
            ((C978 - C979) * C812 + (C980 - C981) * C806 +
             (C982 - C983) * C813 + (C984 - C985) * C807 +
             (C986 - C987) * C814 + (C988 - C989) * C32227) *
                C32238) *
               C31925 * C467) *
              C468 +
          ((((C149 - C148) * C812 + (C151 - C150) * C806 +
             (C153 - C152) * C813 + (C155 - C154) * C807 +
             (C157 - C156) * C814 + (C159 - C158) * C32227) *
                C32273 +
            (C1299 * C812 + C1300 * C806 + C1301 * C813 + C1302 * C807 +
             (C483 - C484) * C814 + (C485 - C486) * C32227) *
                C32261 +
            (C1303 * C812 + C1304 * C806 + C1305 * C813 + C1306 * C807 +
             (C826 - C827) * C814 + (C828 - C829) * C32227) *
                C32238) *
               C31925 * C466 +
           ((C1297 * C812 + C1298 * C806 + C816 * C813 + C817 * C807 +
             (C484 - C483) * C814 + (C486 - C485) * C32227) *
                C32273 +
            (C974 * C812 + C975 * C806 + C830 * C813 + C831 * C807 +
             (C827 - C826) * C814 + (C829 - C828) * C32227) *
                C32261 +
            ((C983 - C982) * C812 + (C985 - C984) * C806 +
             (C987 - C986) * C813 + (C989 - C988) * C807 +
             (C31966 * C1293 - C113 * C1292) * C814 +
             (C31966 * C1295 - C113 * C1294) * C32227) *
                C32238) *
               C31925 * C467) *
              C469)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31966 * C126 - C113 * C119) * C114 +
            (C31966 * C140 - C113 * C127) * C102 + (C148 - C149) * C115 +
            (C150 - C151) * C103 + C168 * C116 + C169 * C104 + C170 * C117 +
            C171 * C105 + C172 * C118 + C173 * C106) *
               C31955 * C31925 * C466 +
           ((C113 * C239 - C31966 * C249) * C114 +
            (C113 * C250 - C31966 * C269) * C102 + (C475 - C476) * C115 +
            (C477 - C478) * C103 + (C479 - C480) * C116 + (C481 - C482) * C104 +
            (C483 - C484) * C117 + (C485 - C486) * C105 + (C487 - C488) * C118 +
            (C489 - C490) * C106) *
               C31955 * C31925 * C467) *
              C468 +
          (((C149 - C148) * C114 + (C151 - C150) * C102 + (C153 - C152) * C115 +
            (C155 - C154) * C103 + (C157 - C156) * C116 + (C159 - C158) * C104 +
            (C161 - C160) * C117 + (C163 - C162) * C105 + (C164 - C165) * C118 +
            (C166 - C167) * C106) *
               C31955 * C31925 * C466 +
           ((C476 - C475) * C114 + (C478 - C477) * C102 + (C480 - C479) * C115 +
            (C482 - C481) * C103 + (C484 - C483) * C116 + (C486 - C485) * C104 +
            (C488 - C487) * C117 + (C490 - C489) * C105 +
            (C31966 * C471 - C113 * C470) * C118 +
            (C31966 * C473 - C113 * C472) * C106) *
               C31955 * C31925 * C467) *
              C469)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C32274 * C126 - C1751 * C119 + C32263 * C354 - C1752 * C344 +
             C32241 * C364 - C1753 * C349) *
                C812 +
            (C32274 * C140 - C1751 * C127 + C32263 * C374 - C1752 * C355 +
             C32241 * C379 - C1753 * C365) *
                C806 +
            (C1755 - C1756 + C1757 - C1758 + C1759 - C1760) * C813 +
            (C1761 - C1762 + C1763 - C1764 + C1765 - C1766) * C807 +
            C1799 * C814 + C1800 * C32227) *
               C31955 * C31925 * C466 +
           ((C1751 * C239 - C32274 * C249 + C1752 * C676 - C32263 * C681 +
             C1753 * C1113 - C32241 * C1125) *
                C812 +
            (C1751 * C250 - C32274 * C269 + C1752 * C682 - C32263 * C691 +
             C1753 * C1126 - C32241 * C1140) *
                C806 +
            (C2195 - C2196 + C2197 - C2198 + C2199 - C2200) * C813 +
            (C2201 - C2202 + C2203 - C2204 + C2205 - C2206) * C807 +
            (C2207 - C2208 + C2209 - C2210 + C2211 - C2212) * C814 +
            (C2213 - C2214 + C2215 - C2216 + C2217 - C2218) * C32227) *
               C31955 * C31925 * C467) *
              C468 +
          (((C1756 - C1755 + C1758 - C1757 + C1760 - C1759) * C812 +
            (C1762 - C1761 + C1764 - C1763 + C1766 - C1765) * C806 +
            (C1768 - C1767 + C1770 - C1769 + C1772 - C1771) * C813 +
            (C1774 - C1773 + C1776 - C1775 + C1778 - C1777) * C807 +
            (C1779 - C1780 + C1781 - C1782 + C1783 - C1784) * C814 +
            (C1785 - C1786 + C1787 - C1788 + C1789 - C1790) * C32227) *
               C31955 * C31925 * C466 +
           ((C2196 - C2195 + C2198 - C2197 + C2200 - C2199) * C812 +
            (C2202 - C2201 + C2204 - C2203 + C2206 - C2205) * C806 +
            (C2208 - C2207 + C2210 - C2209 + C2212 - C2211) * C813 +
            (C2214 - C2213 + C2216 - C2215 + C2218 - C2217) * C807 +
            (C32274 * C255 - C1751 * C242 + C32263 * C687 - C1752 * C679 +
             C32241 * C2191 - C1753 * C2190) *
                C814 +
            (C32274 * C272 - C1751 * C256 + C32263 * C694 - C1752 * C688 +
             C32241 * C2193 - C1753 * C2192) *
                C32227) *
               C31955 * C31925 * C467) *
              C469)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C31966 * C126 - C113 * C119) * C5248 +
             (C31966 * C140 - C113 * C127) * C32270 + (C148 - C149) * C5249 +
             (C150 - C151) * C32257 + C168 * C5250 + C169 * C32227) *
                C5245 +
            ((C966 - C967) * C5248 + (C968 - C969) * C32270 + C1297 * C5249 +
             C1298 * C32257 + C816 * C5250 + C817 * C32227) *
                C5246 +
            C5372 * C32238) *
               C31925 * C466 +
           (((C967 - C966) * C5248 + (C969 - C968) * C32270 + C1299 * C5249 +
             C1300 * C32257 + C1301 * C5250 + C1302 * C32227) *
                C5245 +
            ((C971 - C970) * C5248 + (C973 - C972) * C32270 + C1303 * C5249 +
             C1304 * C32257 + C1305 * C5250 + C1306 * C32227) *
                C5246 +
            ((C978 - C979) * C5248 + (C980 - C981) * C32270 +
             (C982 - C983) * C5249 + (C984 - C985) * C32257 +
             (C986 - C987) * C5250 + (C988 - C989) * C32227) *
                C32238) *
               C31925 * C467) *
              C468 +
          ((((C149 - C148) * C5248 + (C151 - C150) * C32270 +
             (C153 - C152) * C5249 + (C155 - C154) * C32257 +
             (C157 - C156) * C5250 + (C159 - C158) * C32227) *
                C5245 +
            (C1299 * C5248 + C1300 * C32270 + C1301 * C5249 + C1302 * C32257 +
             C2987 * C5250 + C2988 * C32227) *
                C5246 +
            (C1303 * C5248 + C1304 * C32270 + C1305 * C5249 + C1306 * C32257 +
             (C826 - C827) * C5250 + (C828 - C829) * C32227) *
                C32238) *
               C31925 * C466 +
           ((C1297 * C5248 + C1298 * C32270 + C816 * C5249 + C817 * C32257 +
             C2659 * C5250 + C2660 * C32227) *
                C5245 +
            (C974 * C5248 + C975 * C32270 + C830 * C5249 + C831 * C32257 +
             (C827 - C826) * C5250 + (C829 - C828) * C32227) *
                C5246 +
            ((C983 - C982) * C5248 + (C985 - C984) * C32270 +
             (C987 - C986) * C5249 + (C989 - C988) * C32257 +
             (C31966 * C1293 - C113 * C1292) * C5250 +
             (C31966 * C1295 - C113 * C1294) * C32227) *
                C32238) *
               C31925 * C467) *
              C469)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C31966 * C126 - C113 * C119) * C5988 +
             (C31966 * C140 - C113 * C127) * C31864) *
                C5983 +
            ((C966 - C967) * C5988 + (C968 - C969) * C31864) * C5984 +
            C6072 * C5985 + C6077 * C5986 + C6080 * C5987) *
               C31925 * C466 +
           (((C967 - C966) * C5988 + (C969 - C968) * C31864) * C5983 +
            ((C971 - C970) * C5988 + (C973 - C972) * C31864) * C5984 +
            ((C978 - C979) * C5988 + (C980 - C981) * C31864) * C5985 +
            ((C6065 - C6064) * C5988 + (C6067 - C6066) * C31864) * C5986 +
            ((C6068 - C6069) * C5988 + (C6070 - C6071) * C31864) * C5987) *
               C31925 * C467) *
              C468 +
          ((((C149 - C148) * C5988 + (C151 - C150) * C31864) * C5983 +
            (C1299 * C5988 + C1300 * C31864) * C5984 +
            (C1303 * C5988 + C1304 * C31864) * C5985 +
            ((C982 - C983) * C5988 + (C984 - C985) * C31864) * C5986 +
            ((C6241 - C6242) * C5988 + (C6243 - C6244) * C31864) * C5987) *
               C31925 * C466 +
           ((C1297 * C5988 + C1298 * C31864) * C5983 +
            (C974 * C5988 + C975 * C31864) * C5984 +
            ((C983 - C982) * C5988 + (C985 - C984) * C31864) * C5985 +
            ((C6242 - C6241) * C5988 + (C6244 - C6243) * C31864) * C5986 +
            ((C31966 * C6237 - C113 * C6236) * C5988 +
             (C31966 * C6239 - C113 * C6238) * C31864) *
                C5987) *
               C31925 * C467) *
              C469)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C32274 * C126 - C1751 * C119 + C32263 * C354 - C1752 * C344 +
              C32241 * C364 - C1753 * C349) *
                 C5988 +
             (C32274 * C140 - C1751 * C127 + C32263 * C374 - C1752 * C355 +
              C32241 * C379 - C1753 * C365) *
                 C31864) *
                C5245 +
            ((C6645 - C6646 + C6647 - C6648 + C6649 - C6650) * C5988 +
             (C6651 - C6652 + C6653 - C6654 + C6655 - C6656) * C31864) *
                C5246 +
            C6693 * C32238) *
               C31925 * C466 +
           (((C6646 - C6645 + C6648 - C6647 + C6650 - C6649) * C5988 +
             (C6652 - C6651 + C6654 - C6653 + C6656 - C6655) * C31864) *
                C5245 +
            ((C6658 - C6657 + C6660 - C6659 + C6662 - C6661) * C5988 +
             (C6664 - C6663 + C6666 - C6665 + C6668 - C6667) * C31864) *
                C5246 +
            ((C6669 - C6670 + C6671 - C6672 + C6673 - C6674) * C5988 +
             (C6675 - C6676 + C6677 - C6678 + C6679 - C6680) * C31864) *
                C32238) *
               C31925 * C467) *
              C468 +
          ((((C1756 - C1755 + C1758 - C1757 + C1760 - C1759) * C5988 +
             (C1762 - C1761 + C1764 - C1763 + C1766 - C1765) * C31864) *
                C5245 +
            ((C2195 - C2196 + C2197 - C2198 + C2199 - C2200) * C5988 +
             (C2201 - C2202 + C2203 - C2204 + C2205 - C2206) * C31864) *
                C5246 +
            ((C6966 - C6967 + C6968 - C6969 + C6970 - C6971) * C5988 +
             (C6972 - C6973 + C6974 - C6975 + C6976 - C6977) * C31864) *
                C32238) *
               C31925 * C466 +
           (((C2196 - C2195 + C2198 - C2197 + C2200 - C2199) * C5988 +
             (C2202 - C2201 + C2204 - C2203 + C2206 - C2205) * C31864) *
                C5245 +
            ((C6967 - C6966 + C6969 - C6968 + C6971 - C6970) * C5988 +
             (C6973 - C6972 + C6975 - C6974 + C6977 - C6976) * C31864) *
                C5246 +
            ((C32274 * C949 - C1751 * C942 + C32263 * C1623 - C1752 * C1619 +
              C32241 * C6962 - C1753 * C6961) *
                 C5988 +
             (C32274 * C960 - C1751 * C950 + C32263 * C1628 - C1752 * C1624 +
              C32241 * C6964 - C1753 * C6963) *
                 C31864) *
                C32238) *
               C31925 * C467) *
              C469)) /
            (p * q * std::sqrt(p + q));
    d2ee[111] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C31966 * C126 - C113 * C119) * C812 +
             (C31966 * C140 - C113 * C127) * C806 + (C148 - C149) * C813 +
             (C150 - C151) * C807 + C168 * C814 + C169 * C32227) *
                C32273 +
            ((C966 - C967) * C812 + (C968 - C969) * C806 + C1297 * C813 +
             C1298 * C807 + C816 * C814 + C817 * C32227) *
                C32261 +
            C1000 * C32238) *
               C572 +
           (((C113 * C344 - C31966 * C354) * C812 +
             (C113 * C355 - C31966 * C374) * C806 + (C579 - C580) * C813 +
             (C581 - C582) * C807 + (C583 - C584) * C814 +
             (C585 - C586) * C32227) *
                C32273 +
            ((C1631 - C1632) * C812 + (C1633 - C1634) * C806 +
             (C1457 - C1458) * C813 + (C1459 - C1460) * C807 +
             (C1461 - C1462) * C814 + (C1463 - C1464) * C32227) *
                C32261 +
            ((C1635 - C1636) * C812 + (C1637 - C1638) * C806 +
             (C1465 - C1466) * C813 + (C1467 - C1468) * C807 +
             (C1469 - C1470) * C814 + (C1471 - C1472) * C32227) *
                C32238) *
               C573) *
              C466 +
          ((((C967 - C966) * C812 + (C969 - C968) * C806 + C1299 * C813 +
             C1300 * C807 + C1301 * C814 + C1302 * C32227) *
                C32273 +
            ((C971 - C970) * C812 + (C973 - C972) * C806 + C1303 * C813 +
             C1304 * C807 + C1305 * C814 + C1306 * C32227) *
                C32261 +
            ((C978 - C979) * C812 + (C980 - C981) * C806 +
             (C982 - C983) * C813 + (C984 - C985) * C807 +
             (C986 - C987) * C814 + (C988 - C989) * C32227) *
                C32238) *
               C572 +
           (((C1632 - C1631) * C812 + (C1634 - C1633) * C806 +
             (C1458 - C1457) * C813 + (C1460 - C1459) * C807 +
             (C1462 - C1461) * C814 + (C1464 - C1463) * C32227) *
                C32273 +
            ((C1636 - C1635) * C812 + (C1638 - C1637) * C806 +
             (C1466 - C1465) * C813 + (C1468 - C1467) * C807 +
             (C1470 - C1469) * C814 + (C1472 - C1471) * C32227) *
                C32261 +
            ((C31966 * C1621 - C113 * C1618) * C812 +
             (C31966 * C1627 - C113 * C1622) * C806 +
             (C31966 * C1623 - C113 * C1619) * C813 +
             (C31966 * C1628 - C113 * C1624) * C807 +
             (C31966 * C1625 - C113 * C1620) * C814 +
             (C31966 * C1629 - C113 * C1626) * C32227) *
                C32238) *
               C573) *
              C467) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31966 * C126 - C113 * C119) * C114 +
            (C31966 * C140 - C113 * C127) * C102 + (C148 - C149) * C115 +
            (C150 - C151) * C103 + C168 * C116 + C169 * C104 + C170 * C117 +
            C171 * C105 + C172 * C118 + C173 * C106) *
               C31955 * C572 +
           ((C113 * C344 - C31966 * C354) * C114 +
            (C113 * C355 - C31966 * C374) * C102 + (C579 - C580) * C115 +
            (C581 - C582) * C103 + (C583 - C584) * C116 + (C585 - C586) * C104 +
            (C587 - C588) * C117 + (C589 - C590) * C105 + (C591 - C592) * C118 +
            (C593 - C594) * C106) *
               C31955 * C573) *
              C466 +
          (((C113 * C239 - C31966 * C249) * C114 +
            (C113 * C250 - C31966 * C269) * C102 + (C475 - C476) * C115 +
            (C477 - C478) * C103 + (C479 - C480) * C116 + (C481 - C482) * C104 +
            (C483 - C484) * C117 + (C485 - C486) * C105 + (C487 - C488) * C118 +
            (C489 - C490) * C106) *
               C31955 * C572 +
           ((C31966 * C681 - C113 * C676) * C114 +
            (C31966 * C691 - C113 * C682) * C102 +
            (C31966 * C683 - C113 * C677) * C115 +
            (C31966 * C692 - C113 * C684) * C103 +
            (C31966 * C685 - C113 * C678) * C116 +
            (C31966 * C693 - C113 * C686) * C104 +
            (C31966 * C687 - C113 * C679) * C117 +
            (C31966 * C694 - C113 * C688) * C105 +
            (C31966 * C689 - C113 * C680) * C118 +
            (C31966 * C695 - C113 * C690) * C106) *
               C31955 * C573) *
              C467) *
         C31899) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C32274 * C126 - C1751 * C119 + C32263 * C354 - C1752 * C344 +
             C32241 * C364 - C1753 * C349) *
                C812 +
            (C32274 * C140 - C1751 * C127 + C32263 * C374 - C1752 * C355 +
             C32241 * C379 - C1753 * C365) *
                C806 +
            (C1755 - C1756 + C1757 - C1758 + C1759 - C1760) * C813 +
            (C1761 - C1762 + C1763 - C1764 + C1765 - C1766) * C807 +
            C1799 * C814 + C1800 * C32227) *
               C31955 * C572 +
           ((C1751 * C344 - C32274 * C354 + C1752 * C349 - C32263 * C364 +
             C1753 * C2020 - C32241 * C2026) *
                C812 +
            (C1751 * C355 - C32274 * C374 + C1752 * C365 - C32263 * C379 +
             C1753 * C2027 - C32241 * C2038) *
                C806 +
            (C2369 - C2370 + C2371 - C2372 + C2373 - C2374) * C813 +
            (C2375 - C2376 + C2377 - C2378 + C2379 - C2380) * C807 +
            (C2381 - C2382 + C2383 - C2384 + C2385 - C2386) * C814 +
            (C2387 - C2388 + C2389 - C2390 + C2391 - C2392) * C32227) *
               C31955 * C573) *
              C466 +
          (((C1751 * C239 - C32274 * C249 + C1752 * C676 - C32263 * C681 +
             C1753 * C1113 - C32241 * C1125) *
                C812 +
            (C1751 * C250 - C32274 * C269 + C1752 * C682 - C32263 * C691 +
             C1753 * C1126 - C32241 * C1140) *
                C806 +
            (C2195 - C2196 + C2197 - C2198 + C2199 - C2200) * C813 +
            (C2201 - C2202 + C2203 - C2204 + C2205 - C2206) * C807 +
            (C2207 - C2208 + C2209 - C2210 + C2211 - C2212) * C814 +
            (C2213 - C2214 + C2215 - C2216 + C2217 - C2218) * C32227) *
               C31955 * C572 +
           ((C32274 * C681 - C1751 * C676 + C32263 * C1125 - C1752 * C1113 +
             C32241 * C2541 - C1753 * C2538) *
                C812 +
            (C32274 * C691 - C1751 * C682 + C32263 * C1140 - C1752 * C1126 +
             C32241 * C2547 - C1753 * C2542) *
                C806 +
            (C32274 * C683 - C1751 * C677 + C32263 * C1127 - C1752 * C1114 +
             C32241 * C2543 - C1753 * C2539) *
                C813 +
            (C32274 * C692 - C1751 * C684 + C32263 * C1141 - C1752 * C1128 +
             C32241 * C2548 - C1753 * C2544) *
                C807 +
            (C32274 * C685 - C1751 * C678 + C32263 * C1129 - C1752 * C1115 +
             C32241 * C2545 - C1753 * C2540) *
                C814 +
            (C32274 * C693 - C1751 * C686 + C32263 * C1142 - C1752 * C1130 +
             C32241 * C2549 - C1753 * C2546) *
                C32227) *
               C31955 * C573) *
              C467) *
         C31899) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C31966 * C126 - C113 * C119) * C5248 +
             (C31966 * C140 - C113 * C127) * C32270 + (C148 - C149) * C5249 +
             (C150 - C151) * C32257 + C168 * C5250 + C169 * C32227) *
                C5245 +
            ((C966 - C967) * C5248 + (C968 - C969) * C32270 + C1297 * C5249 +
             C1298 * C32257 + C816 * C5250 + C817 * C32227) *
                C5246 +
            C5372 * C32238) *
               C572 +
           (((C113 * C344 - C31966 * C354) * C5248 +
             (C113 * C355 - C31966 * C374) * C32270 + (C579 - C580) * C5249 +
             (C581 - C582) * C32257 + (C583 - C584) * C5250 +
             (C585 - C586) * C32227) *
                C5245 +
            ((C1631 - C1632) * C5248 + (C1633 - C1634) * C32270 +
             (C1457 - C1458) * C5249 + (C1459 - C1460) * C32257 +
             (C1461 - C1462) * C5250 + (C1463 - C1464) * C32227) *
                C5246 +
            ((C1635 - C1636) * C5248 + (C1637 - C1638) * C32270 +
             (C1465 - C1466) * C5249 + (C1467 - C1468) * C32257 +
             (C1469 - C1470) * C5250 + (C1471 - C1472) * C32227) *
                C32238) *
               C573) *
              C466 +
          ((((C967 - C966) * C5248 + (C969 - C968) * C32270 + C1299 * C5249 +
             C1300 * C32257 + C1301 * C5250 + C1302 * C32227) *
                C5245 +
            ((C971 - C970) * C5248 + (C973 - C972) * C32270 + C1303 * C5249 +
             C1304 * C32257 + C1305 * C5250 + C1306 * C32227) *
                C5246 +
            ((C978 - C979) * C5248 + (C980 - C981) * C32270 +
             (C982 - C983) * C5249 + (C984 - C985) * C32257 +
             (C986 - C987) * C5250 + (C988 - C989) * C32227) *
                C32238) *
               C572 +
           (((C1632 - C1631) * C5248 + (C1634 - C1633) * C32270 +
             (C1458 - C1457) * C5249 + (C1460 - C1459) * C32257 +
             (C1462 - C1461) * C5250 + (C1464 - C1463) * C32227) *
                C5245 +
            ((C1636 - C1635) * C5248 + (C1638 - C1637) * C32270 +
             (C1466 - C1465) * C5249 + (C1468 - C1467) * C32257 +
             (C1470 - C1469) * C5250 + (C1472 - C1471) * C32227) *
                C5246 +
            ((C31966 * C1621 - C113 * C1618) * C5248 +
             (C31966 * C1627 - C113 * C1622) * C32270 +
             (C31966 * C1623 - C113 * C1619) * C5249 +
             (C31966 * C1628 - C113 * C1624) * C32257 +
             (C31966 * C1625 - C113 * C1620) * C5250 +
             (C31966 * C1629 - C113 * C1626) * C32227) *
                C32238) *
               C573) *
              C467) *
         C31899) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C31966 * C126 - C113 * C119) * C5988 +
             (C31966 * C140 - C113 * C127) * C31864) *
                C5983 +
            ((C966 - C967) * C5988 + (C968 - C969) * C31864) * C5984 +
            C6072 * C5985 + C6077 * C5986 + C6080 * C5987) *
               C572 +
           (((C113 * C344 - C31966 * C354) * C5988 +
             (C113 * C355 - C31966 * C374) * C31864) *
                C5983 +
            ((C1631 - C1632) * C5988 + (C1633 - C1634) * C31864) * C5984 +
            ((C1635 - C1636) * C5988 + (C1637 - C1638) * C31864) * C5985 +
            ((C6417 - C6418) * C5988 + (C6419 - C6420) * C31864) * C5986 +
            ((C6421 - C6422) * C5988 + (C6423 - C6424) * C31864) * C5987) *
               C573) *
              C466 +
          ((((C967 - C966) * C5988 + (C969 - C968) * C31864) * C5983 +
            ((C971 - C970) * C5988 + (C973 - C972) * C31864) * C5984 +
            ((C978 - C979) * C5988 + (C980 - C981) * C31864) * C5985 +
            ((C6065 - C6064) * C5988 + (C6067 - C6066) * C31864) * C5986 +
            ((C6068 - C6069) * C5988 + (C6070 - C6071) * C31864) * C5987) *
               C572 +
           (((C1632 - C1631) * C5988 + (C1634 - C1633) * C31864) * C5983 +
            ((C1636 - C1635) * C5988 + (C1638 - C1637) * C31864) * C5984 +
            ((C6418 - C6417) * C5988 + (C6420 - C6419) * C31864) * C5985 +
            ((C6422 - C6421) * C5988 + (C6424 - C6423) * C31864) * C5986 +
            ((C31966 * C6413 - C113 * C6412) * C5988 +
             (C31966 * C6415 - C113 * C6414) * C31864) *
                C5987) *
               C573) *
              C467) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C32274 * C126 - C1751 * C119 + C32263 * C354 - C1752 * C344 +
              C32241 * C364 - C1753 * C349) *
                 C5988 +
             (C32274 * C140 - C1751 * C127 + C32263 * C374 - C1752 * C355 +
              C32241 * C379 - C1753 * C365) *
                 C31864) *
                C5245 +
            ((C6645 - C6646 + C6647 - C6648 + C6649 - C6650) * C5988 +
             (C6651 - C6652 + C6653 - C6654 + C6655 - C6656) * C31864) *
                C5246 +
            C6693 * C32238) *
               C572 +
           (((C1751 * C344 - C32274 * C354 + C1752 * C349 - C32263 * C364 +
              C1753 * C2020 - C32241 * C2026) *
                 C5988 +
             (C1751 * C355 - C32274 * C374 + C1752 * C365 - C32263 * C379 +
              C1753 * C2027 - C32241 * C2038) *
                 C31864) *
                C5245 +
            ((C7278 - C7279 + C7280 - C7281 + C7282 - C7283) * C5988 +
             (C7284 - C7285 + C7286 - C7287 + C7288 - C7289) * C31864) *
                C5246 +
            ((C7290 - C7291 + C7292 - C7293 + C7294 - C7295) * C5988 +
             (C7296 - C7297 + C7298 - C7299 + C7300 - C7301) * C31864) *
                C32238) *
               C573) *
              C466 +
          ((((C6646 - C6645 + C6648 - C6647 + C6650 - C6649) * C5988 +
             (C6652 - C6651 + C6654 - C6653 + C6656 - C6655) * C31864) *
                C5245 +
            ((C6658 - C6657 + C6660 - C6659 + C6662 - C6661) * C5988 +
             (C6664 - C6663 + C6666 - C6665 + C6668 - C6667) * C31864) *
                C5246 +
            ((C6669 - C6670 + C6671 - C6672 + C6673 - C6674) * C5988 +
             (C6675 - C6676 + C6677 - C6678 + C6679 - C6680) * C31864) *
                C32238) *
               C572 +
           (((C7279 - C7278 + C7281 - C7280 + C7283 - C7282) * C5988 +
             (C7285 - C7284 + C7287 - C7286 + C7289 - C7288) * C31864) *
                C5245 +
            ((C7291 - C7290 + C7293 - C7292 + C7295 - C7294) * C5988 +
             (C7297 - C7296 + C7299 - C7298 + C7301 - C7300) * C31864) *
                C5246 +
            ((C32274 * C1621 - C1751 * C1618 + C32263 * C6147 - C1752 * C6143 +
              C32241 * C7274 - C1753 * C7273) *
                 C5988 +
             (C32274 * C1627 - C1751 * C1622 + C32263 * C6152 - C1752 * C6148 +
              C32241 * C7276 - C1753 * C7275) *
                 C31864) *
                C32238) *
               C573) *
              C467) *
         C31899) /
            (p * q * std::sqrt(p + q));
    d2ee[112] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             (((C31966 * C126 - C113 * C119) * C114 +
               (C31966 * C140 - C113 * C127) * C102 + (C148 - C149) * C115 +
               (C150 - C151) * C103 + C168 * C116 + C169 * C104 + C170 * C117 +
               C171 * C105 + C172 * C118 + C173 * C106) *
                  C31955 * C31925 * C31911 * C110 +
              ((C149 - C148) * C114 + (C151 - C150) * C102 +
               (C153 - C152) * C115 + (C155 - C154) * C103 +
               (C157 - C156) * C116 + (C159 - C158) * C104 +
               (C161 - C160) * C117 + (C163 - C162) * C105 +
               (C164 - C165) * C118 + (C166 - C167) * C106) *
                  C31955 * C31925 * C31911 * C111 +
              (C168 * C114 + C169 * C102 + C170 * C115 + C171 * C103 +
               C172 * C116 + C173 * C104 + (C165 - C164) * C117 +
               (C167 - C166) * C105 + (C31966 * C138 - C113 * C125) * C118 +
               (C31966 * C146 - C113 * C139) * C106) *
                  C31955 * C31925 * C31911 * C112) +
         std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             (((C31966 * C126 - C113 * C119) * C114 +
               (C31966 * C140 - C113 * C127) * C102 + (C148 - C149) * C115 +
               (C150 - C151) * C103 + C168 * C116 + C169 * C104 + C170 * C117 +
               C171 * C105 + C172 * C118 + C173 * C106) *
                  C31955 * C31925 * C235 +
              ((C113 * C239 - C31966 * C249) * C114 +
               (C113 * C250 - C31966 * C269) * C102 +
               (C113 * C240 - C31966 * C251) * C115 +
               (C113 * C252 - C31966 * C270) * C103 +
               (C113 * C241 - C31966 * C253) * C116 +
               (C113 * C254 - C31966 * C271) * C104 +
               (C113 * C242 - C31966 * C255) * C117 +
               (C113 * C256 - C31966 * C272) * C105 +
               (C113 * C243 - C31966 * C257) * C118 +
               (C113 * C258 - C31966 * C273) * C106) *
                  C31955 * C31925 * C236 +
              ((C31966 * C259 - C113 * C244) * C114 +
               (C31966 * C274 - C113 * C260) * C102 +
               (C31966 * C261 - C113 * C245) * C115 +
               (C31966 * C275 - C113 * C262) * C103 +
               (C31966 * C263 - C113 * C246) * C116 +
               (C31966 * C276 - C113 * C264) * C104 +
               (C31966 * C265 - C113 * C247) * C117 +
               (C31966 * C277 - C113 * C266) * C105 +
               (C31966 * C267 - C113 * C248) * C118 +
               (C31966 * C278 - C113 * C268) * C106) *
                  C31955 * C31925 * C237) *
             C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C31966 * C126 - C113 * C119) * C114 +
           (C31966 * C140 - C113 * C127) * C102 + (C148 - C149) * C115 +
           (C150 - C151) * C103 + C168 * C116 + C169 * C104 + C170 * C117 +
           C171 * C105 + C172 * C118 + C173 * C106) *
              C31955 * C341 +
          ((C113 * C344 - C31966 * C354) * C114 +
           (C113 * C355 - C31966 * C374) * C102 +
           (C113 * C345 - C31966 * C356) * C115 +
           (C113 * C357 - C31966 * C375) * C103 +
           (C113 * C346 - C31966 * C358) * C116 +
           (C113 * C359 - C31966 * C376) * C104 +
           (C113 * C347 - C31966 * C360) * C117 +
           (C113 * C361 - C31966 * C377) * C105 +
           (C113 * C348 - C31966 * C362) * C118 +
           (C113 * C363 - C31966 * C378) * C106) *
              C31955 * C342 +
          ((C31966 * C364 - C113 * C349) * C114 +
           (C31966 * C379 - C113 * C365) * C102 +
           (C31966 * C366 - C113 * C350) * C115 +
           (C31966 * C380 - C113 * C367) * C103 +
           (C31966 * C368 - C113 * C351) * C116 +
           (C31966 * C381 - C113 * C369) * C104 +
           (C31966 * C370 - C113 * C352) * C117 +
           (C31966 * C382 - C113 * C371) * C105 +
           (C31966 * C372 - C113 * C353) * C118 +
           (C31966 * C383 - C113 * C373) * C106) *
              C31955 * C343) *
         C31911 * C31899) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C31966 * C126 - C113 * C119) * C812 +
            (C31966 * C140 - C113 * C127) * C806 + (C148 - C149) * C813 +
            (C150 - C151) * C807 + C168 * C814 + C169 * C32227) *
               C32273 +
           ((C31966 * C249 - C113 * C239) * C812 +
            (C31966 * C269 - C113 * C250) * C806 + (C476 - C475) * C813 +
            (C478 - C477) * C807 + C816 * C814 + C817 * C32227) *
               C32261 +
           ((C31966 * C259 - C113 * C244) * C812 +
            (C31966 * C274 - C113 * C260) * C806 + (C818 - C819) * C813 +
            (C820 - C821) * C807 + C830 * C814 + C831 * C32227) *
               C32238) *
              C31925 * C31911 * C110 +
          (((C149 - C148) * C812 + (C151 - C150) * C806 + (C153 - C152) * C813 +
            (C155 - C154) * C807 + (C157 - C156) * C814 +
            (C159 - C158) * C32227) *
               C32273 +
           ((C475 - C476) * C812 + (C477 - C478) * C806 + (C479 - C480) * C813 +
            (C481 - C482) * C807 + (C483 - C484) * C814 +
            (C485 - C486) * C32227) *
               C32261 +
           ((C819 - C818) * C812 + (C821 - C820) * C806 + (C823 - C822) * C813 +
            (C825 - C824) * C807 + (C826 - C827) * C814 +
            (C828 - C829) * C32227) *
               C32238) *
              C31925 * C31911 * C111 +
          ((C168 * C812 + C169 * C806 + C170 * C813 + C171 * C807 +
            C172 * C814 + C173 * C32227) *
               C32273 +
           (C816 * C812 + C817 * C806 + (C484 - C483) * C813 +
            (C486 - C485) * C807 + (C488 - C487) * C814 +
            (C490 - C489) * C32227) *
               C32261 +
           (C830 * C812 + C831 * C806 + (C827 - C826) * C813 +
            (C829 - C828) * C807 + (C31966 * C267 - C113 * C248) * C814 +
            (C31966 * C278 - C113 * C268) * C32227) *
               C32238) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C31966 * C126 - C113 * C119) * C812 +
            (C31966 * C140 - C113 * C127) * C806 + (C148 - C149) * C813 +
            (C150 - C151) * C807 + C168 * C814 + C169 * C32227) *
               C32273 +
           ((C966 - C967) * C812 + (C968 - C969) * C806 + (C476 - C475) * C813 +
            (C478 - C477) * C807 + C816 * C814 + C817 * C32227) *
               C32261 +
           C1000 * C32238) *
              C31925 * C235 +
          (((C967 - C966) * C812 + (C969 - C968) * C806 + (C475 - C476) * C813 +
            (C477 - C478) * C807 + (C479 - C480) * C814 +
            (C481 - C482) * C32227) *
               C32273 +
           ((C971 - C970) * C812 + (C973 - C972) * C806 + (C819 - C818) * C813 +
            (C821 - C820) * C807 + (C823 - C822) * C814 +
            (C825 - C824) * C32227) *
               C32261 +
           ((C978 - C979) * C812 + (C980 - C981) * C806 + (C982 - C983) * C813 +
            (C984 - C985) * C807 + (C986 - C987) * C814 +
            (C988 - C989) * C32227) *
               C32238) *
              C31925 * C236 +
          (C1000 * C32273 +
           ((C979 - C978) * C812 + (C981 - C980) * C806 + (C983 - C982) * C813 +
            (C985 - C984) * C807 + (C987 - C986) * C814 +
            (C989 - C988) * C32227) *
               C32261 +
           ((C31966 * C953 - C113 * C944) * C812 +
            (C31966 * C962 - C113 * C954) * C806 +
            (C31966 * C955 - C113 * C945) * C813 +
            (C31966 * C963 - C113 * C956) * C807 +
            (C31966 * C957 - C113 * C946) * C814 +
            (C31966 * C964 - C113 * C958) * C32227) *
               C32238) *
              C31925 * C237) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C31966 * C126 - C113 * C119) * C812 +
            (C31966 * C140 - C113 * C127) * C806 + (C148 - C149) * C813 +
            (C150 - C151) * C807 + C168 * C814 + C169 * C32227) *
               C32273 +
           ((C966 - C967) * C812 + (C968 - C969) * C806 + (C476 - C475) * C813 +
            (C478 - C477) * C807 + C816 * C814 + C817 * C32227) *
               C32261 +
           C1000 * C32238) *
              C341 +
          (((C113 * C344 - C31966 * C354) * C812 +
            (C113 * C355 - C31966 * C374) * C806 + (C579 - C580) * C813 +
            (C581 - C582) * C807 + (C583 - C584) * C814 +
            (C585 - C586) * C32227) *
               C32273 +
           ((C113 * C676 - C31966 * C681) * C812 +
            (C113 * C682 - C31966 * C691) * C806 +
            (C113 * C677 - C31966 * C683) * C813 +
            (C113 * C684 - C31966 * C692) * C807 +
            (C113 * C678 - C31966 * C685) * C814 +
            (C113 * C686 - C31966 * C693) * C32227) *
               C32261 +
           ((C113 * C1110 - C31966 * C1119) * C812 +
            (C113 * C1120 - C31966 * C1137) * C806 +
            (C113 * C1111 - C31966 * C1121) * C813 +
            (C113 * C1122 - C31966 * C1138) * C807 +
            (C113 * C1112 - C31966 * C1123) * C814 +
            (C113 * C1124 - C31966 * C1139) * C32227) *
               C32238) *
              C342 +
          (((C31966 * C364 - C113 * C349) * C812 +
            (C31966 * C379 - C113 * C365) * C806 +
            (C31966 * C366 - C113 * C350) * C813 +
            (C31966 * C380 - C113 * C367) * C807 +
            (C31966 * C368 - C113 * C351) * C814 +
            (C31966 * C381 - C113 * C369) * C32227) *
               C32273 +
           ((C31966 * C1125 - C113 * C1113) * C812 +
            (C31966 * C1140 - C113 * C1126) * C806 +
            (C31966 * C1127 - C113 * C1114) * C813 +
            (C31966 * C1141 - C113 * C1128) * C807 +
            (C31966 * C1129 - C113 * C1115) * C814 +
            (C31966 * C1142 - C113 * C1130) * C32227) *
               C32261 +
           ((C31966 * C1131 - C113 * C1116) * C812 +
            (C31966 * C1143 - C113 * C1132) * C806 +
            (C31966 * C1133 - C113 * C1117) * C813 +
            (C31966 * C1144 - C113 * C1134) * C807 +
            (C31966 * C1135 - C113 * C1118) * C814 +
            (C31966 * C1145 - C113 * C1136) * C32227) *
               C32238) *
              C343) *
         C31911 * C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C32274 * C126 - C1751 * C119 + C32263 * C354 - C1752 * C344 +
            C32241 * C364 - C1753 * C349) *
               C812 +
           (C32274 * C140 - C1751 * C127 + C32263 * C374 - C1752 * C355 +
            C32241 * C379 - C1753 * C365) *
               C806 +
           (C1755 - C1756 + C1757 - C1758 + C1759 - C1760) * C813 +
           (C1761 - C1762 + C1763 - C1764 + C1765 - C1766) * C807 +
           C1799 * C814 + C1800 * C32227) *
              C31955 * C31925 * C31911 * C110 +
          ((C1756 - C1755 + C1758 - C1757 + C1760 - C1759) * C812 +
           (C1762 - C1761 + C1764 - C1763 + C1766 - C1765) * C806 +
           (C1768 - C1767 + C1770 - C1769 + C1772 - C1771) * C813 +
           (C1774 - C1773 + C1776 - C1775 + C1778 - C1777) * C807 +
           (C1779 - C1780 + C1781 - C1782 + C1783 - C1784) * C814 +
           (C1785 - C1786 + C1787 - C1788 + C1789 - C1790) * C32227) *
              C31955 * C31925 * C31911 * C111 +
          (C1799 * C812 + C1800 * C806 +
           (C1780 - C1779 + C1782 - C1781 + C1784 - C1783) * C813 +
           (C1786 - C1785 + C1788 - C1787 + C1790 - C1789) * C807 +
           (C32274 * C134 - C1751 * C123 + C32263 * C362 - C1752 * C348 +
            C32241 * C372 - C1753 * C353) *
               C814 +
           (C32274 * C144 - C1751 * C135 + C32263 * C378 - C1752 * C363 +
            C32241 * C383 - C1753 * C373) *
               C32227) *
              C31955 * C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C32274 * C126 - C1751 * C119 + C32263 * C354 - C1752 * C344 +
            C32241 * C364 - C1753 * C349) *
               C812 +
           (C32274 * C140 - C1751 * C127 + C32263 * C374 - C1752 * C355 +
            C32241 * C379 - C1753 * C365) *
               C806 +
           (C1755 - C1756 + C1757 - C1758 + C1759 - C1760) * C813 +
           (C1761 - C1762 + C1763 - C1764 + C1765 - C1766) * C807 +
           C1799 * C814 + C1800 * C32227) *
              C31955 * C31925 * C235 +
          ((C1751 * C239 - C32274 * C249 + C1752 * C676 - C32263 * C681 +
            C1753 * C1113 - C32241 * C1125) *
               C812 +
           (C1751 * C250 - C32274 * C269 + C1752 * C682 - C32263 * C691 +
            C1753 * C1126 - C32241 * C1140) *
               C806 +
           (C1751 * C240 - C32274 * C251 + C1752 * C677 - C32263 * C683 +
            C1753 * C1114 - C32241 * C1127) *
               C813 +
           (C1751 * C252 - C32274 * C270 + C1752 * C684 - C32263 * C692 +
            C1753 * C1128 - C32241 * C1141) *
               C807 +
           (C1751 * C241 - C32274 * C253 + C1752 * C678 - C32263 * C685 +
            C1753 * C1115 - C32241 * C1129) *
               C814 +
           (C1751 * C254 - C32274 * C271 + C1752 * C686 - C32263 * C693 +
            C1753 * C1130 - C32241 * C1142) *
               C32227) *
              C31955 * C31925 * C236 +
          ((C32274 * C259 - C1751 * C244 + C32263 * C1119 - C1752 * C1110 +
            C32241 * C1131 - C1753 * C1116) *
               C812 +
           (C32274 * C274 - C1751 * C260 + C32263 * C1137 - C1752 * C1120 +
            C32241 * C1143 - C1753 * C1132) *
               C806 +
           (C32274 * C261 - C1751 * C245 + C32263 * C1121 - C1752 * C1111 +
            C32241 * C1133 - C1753 * C1117) *
               C813 +
           (C32274 * C275 - C1751 * C262 + C32263 * C1138 - C1752 * C1122 +
            C32241 * C1144 - C1753 * C1134) *
               C807 +
           (C32274 * C263 - C1751 * C246 + C32263 * C1123 - C1752 * C1112 +
            C32241 * C1135 - C1753 * C1118) *
               C814 +
           (C32274 * C276 - C1751 * C264 + C32263 * C1139 - C1752 * C1124 +
            C32241 * C1145 - C1753 * C1136) *
               C32227) *
              C31955 * C31925 * C237) *
         C31899) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C32274 * C126 - C1751 * C119 + C32263 * C354 - C1752 * C344 +
            C32241 * C364 - C1753 * C349) *
               C812 +
           (C32274 * C140 - C1751 * C127 + C32263 * C374 - C1752 * C355 +
            C32241 * C379 - C1753 * C365) *
               C806 +
           (C1755 - C1756 + C1757 - C1758 + C1759 - C1760) * C813 +
           (C1761 - C1762 + C1763 - C1764 + C1765 - C1766) * C807 +
           C1799 * C814 + C1800 * C32227) *
              C31955 * C341 +
          ((C1751 * C344 - C32274 * C354 + C1752 * C349 - C32263 * C364 +
            C1753 * C2020 - C32241 * C2026) *
               C812 +
           (C1751 * C355 - C32274 * C374 + C1752 * C365 - C32263 * C379 +
            C1753 * C2027 - C32241 * C2038) *
               C806 +
           (C1751 * C345 - C32274 * C356 + C1752 * C350 - C32263 * C366 +
            C1753 * C2021 - C32241 * C2028) *
               C813 +
           (C1751 * C357 - C32274 * C375 + C1752 * C367 - C32263 * C380 +
            C1753 * C2029 - C32241 * C2039) *
               C807 +
           (C1751 * C346 - C32274 * C358 + C1752 * C351 - C32263 * C368 +
            C1753 * C2022 - C32241 * C2030) *
               C814 +
           (C1751 * C359 - C32274 * C376 + C1752 * C369 - C32263 * C381 +
            C1753 * C2031 - C32241 * C2040) *
               C32227) *
              C31955 * C342 +
          ((C32274 * C364 - C1751 * C349 + C32263 * C2026 - C1752 * C2020 +
            C32241 * C2032 - C1753 * C2023) *
               C812 +
           (C32274 * C379 - C1751 * C365 + C32263 * C2038 - C1752 * C2027 +
            C32241 * C2041 - C1753 * C2033) *
               C806 +
           (C32274 * C366 - C1751 * C350 + C32263 * C2028 - C1752 * C2021 +
            C32241 * C2034 - C1753 * C2024) *
               C813 +
           (C32274 * C380 - C1751 * C367 + C32263 * C2039 - C1752 * C2029 +
            C32241 * C2042 - C1753 * C2035) *
               C807 +
           (C32274 * C368 - C1751 * C351 + C32263 * C2030 - C1752 * C2022 +
            C32241 * C2036 - C1753 * C2025) *
               C814 +
           (C32274 * C381 - C1751 * C369 + C32263 * C2040 - C1752 * C2031 +
            C32241 * C2043 - C1753 * C2037) *
               C32227) *
              C31955 * C343) *
         C31911 * C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C31966 * C126 - C113 * C119) * C5248 +
            (C31966 * C140 - C113 * C127) * C32270 + (C148 - C149) * C5249 +
            (C150 - C151) * C32257 + C168 * C5250 + C169 * C32227) *
               C5245 +
           ((C966 - C967) * C5248 + (C968 - C969) * C32270 + C1297 * C5249 +
            C1298 * C32257 + C816 * C5250 + C817 * C32227) *
               C5246 +
           (C990 * C5248 + C991 * C32270 + C974 * C5249 + C975 * C32257 +
            C830 * C5250 + C831 * C32227) *
               C32238) *
              C31925 * C31911 * C110 +
          (((C149 - C148) * C5248 + (C151 - C150) * C32270 +
            (C153 - C152) * C5249 + (C155 - C154) * C32257 +
            (C157 - C156) * C5250 + (C159 - C158) * C32227) *
               C5245 +
           (C1299 * C5248 + C1300 * C32270 + C1301 * C5249 + C1302 * C32257 +
            C2987 * C5250 + C2988 * C32227) *
               C5246 +
           (C1303 * C5248 + C1304 * C32270 + C1305 * C5249 + C1306 * C32257 +
            (C826 - C827) * C5250 + (C828 - C829) * C32227) *
               C32238) *
              C31925 * C31911 * C111 +
          ((C168 * C5248 + C169 * C32270 + C170 * C5249 + C171 * C32257 +
            C172 * C5250 + C173 * C32227) *
               C5245 +
           (C816 * C5248 + C817 * C32270 + C2659 * C5249 + C2660 * C32257 +
            (C488 - C487) * C5250 + (C490 - C489) * C32227) *
               C5246 +
           (C830 * C5248 + C831 * C32270 + (C827 - C826) * C5249 +
            (C829 - C828) * C32257 + (C31966 * C267 - C113 * C248) * C5250 +
            (C31966 * C278 - C113 * C268) * C32227) *
               C32238) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C31966 * C126 - C113 * C119) * C5248 +
            (C31966 * C140 - C113 * C127) * C32270 + (C148 - C149) * C5249 +
            (C150 - C151) * C32257 + C168 * C5250 + C169 * C32227) *
               C5245 +
           ((C966 - C967) * C5248 + (C968 - C969) * C32270 + C1297 * C5249 +
            C1298 * C32257 + C816 * C5250 + C817 * C32227) *
               C5246 +
           C5372 * C32238) *
              C31925 * C235 +
          (((C967 - C966) * C5248 + (C969 - C968) * C32270 + C1299 * C5249 +
            C1300 * C32257 + C1301 * C5250 + C1302 * C32227) *
               C5245 +
           ((C971 - C970) * C5248 + (C973 - C972) * C32270 + C1303 * C5249 +
            C1304 * C32257 + C1305 * C5250 + C1306 * C32227) *
               C5246 +
           ((C978 - C979) * C5248 + (C980 - C981) * C32270 +
            (C982 - C983) * C5249 + (C984 - C985) * C32257 +
            (C986 - C987) * C5250 + (C988 - C989) * C32227) *
               C32238) *
              C31925 * C236 +
          (C5372 * C5245 +
           ((C979 - C978) * C5248 + (C981 - C980) * C32270 +
            (C983 - C982) * C5249 + (C985 - C984) * C32257 +
            (C987 - C986) * C5250 + (C989 - C988) * C32227) *
               C5246 +
           ((C31966 * C953 - C113 * C944) * C5248 +
            (C31966 * C962 - C113 * C954) * C32270 +
            (C31966 * C955 - C113 * C945) * C5249 +
            (C31966 * C963 - C113 * C956) * C32257 +
            (C31966 * C957 - C113 * C946) * C5250 +
            (C31966 * C964 - C113 * C958) * C32227) *
               C32238) *
              C31925 * C237) *
         C31899) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C31966 * C126 - C113 * C119) * C5248 +
            (C31966 * C140 - C113 * C127) * C32270 + (C148 - C149) * C5249 +
            (C150 - C151) * C32257 + C168 * C5250 + C169 * C32227) *
               C5245 +
           ((C966 - C967) * C5248 + (C968 - C969) * C32270 + C1297 * C5249 +
            C1298 * C32257 + C816 * C5250 + C817 * C32227) *
               C5246 +
           C5372 * C32238) *
              C341 +
          (((C113 * C344 - C31966 * C354) * C5248 +
            (C113 * C355 - C31966 * C374) * C32270 + (C579 - C580) * C5249 +
            (C581 - C582) * C32257 + (C583 - C584) * C5250 +
            (C585 - C586) * C32227) *
               C5245 +
           ((C1631 - C1632) * C5248 + (C1633 - C1634) * C32270 +
            (C1457 - C1458) * C5249 + (C1459 - C1460) * C32257 +
            (C1461 - C1462) * C5250 + (C1463 - C1464) * C32227) *
               C5246 +
           ((C1635 - C1636) * C5248 + (C1637 - C1638) * C32270 +
            (C1465 - C1466) * C5249 + (C1467 - C1468) * C32257 +
            (C1469 - C1470) * C5250 + (C1471 - C1472) * C32227) *
               C32238) *
              C342 +
          (((C31966 * C364 - C113 * C349) * C5248 +
            (C31966 * C379 - C113 * C365) * C32270 +
            (C31966 * C366 - C113 * C350) * C5249 +
            (C31966 * C380 - C113 * C367) * C32257 +
            (C31966 * C368 - C113 * C351) * C5250 +
            (C31966 * C381 - C113 * C369) * C32227) *
               C5245 +
           ((C31966 * C1125 - C113 * C1113) * C5248 +
            (C31966 * C1140 - C113 * C1126) * C32270 +
            (C31966 * C1127 - C113 * C1114) * C5249 +
            (C31966 * C1141 - C113 * C1128) * C32257 +
            (C31966 * C1129 - C113 * C1115) * C5250 +
            (C31966 * C1142 - C113 * C1130) * C32227) *
               C5246 +
           ((C31966 * C1131 - C113 * C1116) * C5248 +
            (C31966 * C1143 - C113 * C1132) * C32270 +
            (C31966 * C1133 - C113 * C1117) * C5249 +
            (C31966 * C1144 - C113 * C1134) * C32257 +
            (C31966 * C1135 - C113 * C1118) * C5250 +
            (C31966 * C1145 - C113 * C1136) * C32227) *
               C32238) *
              C343) *
         C31911 * C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C31966 * C126 - C113 * C119) * C5988 +
            (C31966 * C140 - C113 * C127) * C31864) *
               C5983 +
           ((C966 - C967) * C5988 + (C968 - C969) * C31864) * C5984 +
           (C990 * C5988 + C991 * C31864) * C5985 +
           ((C979 - C978) * C5988 + (C981 - C980) * C31864) * C5986 +
           ((C31966 * C953 - C113 * C944) * C5988 +
            (C31966 * C962 - C113 * C954) * C31864) *
               C5987) *
              C31925 * C31911 * C110 +
          (((C149 - C148) * C5988 + (C151 - C150) * C31864) * C5983 +
           (C1299 * C5988 + C1300 * C31864) * C5984 +
           (C1303 * C5988 + C1304 * C31864) * C5985 +
           ((C982 - C983) * C5988 + (C984 - C985) * C31864) * C5986 +
           ((C113 * C945 - C31966 * C955) * C5988 +
            (C113 * C956 - C31966 * C963) * C31864) *
               C5987) *
              C31925 * C31911 * C111 +
          ((C168 * C5988 + C169 * C31864) * C5983 +
           (C816 * C5988 + C817 * C31864) * C5984 +
           (C830 * C5988 + C831 * C31864) * C5985 +
           ((C987 - C986) * C5988 + (C989 - C988) * C31864) * C5986 +
           ((C31966 * C957 - C113 * C946) * C5988 +
            (C31966 * C964 - C113 * C958) * C31864) *
               C5987) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C31966 * C126 - C113 * C119) * C5988 +
            (C31966 * C140 - C113 * C127) * C31864) *
               C5983 +
           ((C966 - C967) * C5988 + (C968 - C969) * C31864) * C5984 +
           C6072 * C5985 + C6077 * C5986 + C6080 * C5987) *
              C31925 * C235 +
          (((C967 - C966) * C5988 + (C969 - C968) * C31864) * C5983 +
           ((C971 - C970) * C5988 + (C973 - C972) * C31864) * C5984 +
           ((C978 - C979) * C5988 + (C980 - C981) * C31864) * C5985 +
           ((C6065 - C6064) * C5988 + (C6067 - C6066) * C31864) * C5986 +
           ((C6068 - C6069) * C5988 + (C6070 - C6071) * C31864) * C5987) *
              C31925 * C236 +
          (C6072 * C5983 + C6077 * C5984 + C6080 * C5985 +
           ((C6069 - C6068) * C5988 + (C6071 - C6070) * C31864) * C5986 +
           ((C31966 * C6055 - C113 * C6052) * C5988 +
            (C31966 * C6058 - C113 * C6056) * C31864) *
               C5987) *
              C31925 * C237) *
         C31899) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C31966 * C126 - C113 * C119) * C5988 +
            (C31966 * C140 - C113 * C127) * C31864) *
               C5983 +
           ((C966 - C967) * C5988 + (C968 - C969) * C31864) * C5984 +
           C6072 * C5985 + C6077 * C5986 + C6080 * C5987) *
              C341 +
          (((C113 * C344 - C31966 * C354) * C5988 +
            (C113 * C355 - C31966 * C374) * C31864) *
               C5983 +
           ((C1631 - C1632) * C5988 + (C1633 - C1634) * C31864) * C5984 +
           ((C1635 - C1636) * C5988 + (C1637 - C1638) * C31864) * C5985 +
           ((C113 * C1618 - C31966 * C1621) * C5988 +
            (C113 * C1622 - C31966 * C1627) * C31864) *
               C5986 +
           ((C113 * C6142 - C31966 * C6145) * C5988 +
            (C113 * C6146 - C31966 * C6151) * C31864) *
               C5987) *
              C342 +
          (((C31966 * C364 - C113 * C349) * C5988 +
            (C31966 * C379 - C113 * C365) * C31864) *
               C5983 +
           ((C31966 * C1125 - C113 * C1113) * C5988 +
            (C31966 * C1140 - C113 * C1126) * C31864) *
               C5984 +
           ((C31966 * C1131 - C113 * C1116) * C5988 +
            (C31966 * C1143 - C113 * C1132) * C31864) *
               C5985 +
           ((C31966 * C6147 - C113 * C6143) * C5988 +
            (C31966 * C6152 - C113 * C6148) * C31864) *
               C5986 +
           ((C31966 * C6149 - C113 * C6144) * C5988 +
            (C31966 * C6153 - C113 * C6150) * C31864) *
               C5987) *
              C343) *
         C31911 * C31899) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C32274 * C126 - C1751 * C119 + C32263 * C354 - C1752 * C344 +
             C32241 * C364 - C1753 * C349) *
                C5988 +
            (C32274 * C140 - C1751 * C127 + C32263 * C374 - C1752 * C355 +
             C32241 * C379 - C1753 * C365) *
                C31864) *
               C5245 +
           ((C32274 * C249 - C1751 * C239 + C32263 * C681 - C1752 * C676 +
             C32241 * C1125 - C1753 * C1113) *
                C5988 +
            (C32274 * C269 - C1751 * C250 + C32263 * C691 - C1752 * C682 +
             C32241 * C1140 - C1753 * C1126) *
                C31864) *
               C5246 +
           ((C32274 * C259 - C1751 * C244 + C32263 * C1119 - C1752 * C1110 +
             C32241 * C1131 - C1753 * C1116) *
                C5988 +
            (C32274 * C274 - C1751 * C260 + C32263 * C1137 - C1752 * C1120 +
             C32241 * C1143 - C1753 * C1132) *
                C31864) *
               C32238) *
              C31925 * C31911 * C110 +
          (((C1756 - C1755 + C1758 - C1757 + C1760 - C1759) * C5988 +
            (C1762 - C1761 + C1764 - C1763 + C1766 - C1765) * C31864) *
               C5245 +
           ((C2195 - C2196 + C2197 - C2198 + C2199 - C2200) * C5988 +
            (C2201 - C2202 + C2203 - C2204 + C2205 - C2206) * C31864) *
               C5246 +
           ((C1751 * C245 - C32274 * C261 + C1752 * C1111 - C32263 * C1121 +
             C1753 * C1117 - C32241 * C1133) *
                C5988 +
            (C1751 * C262 - C32274 * C275 + C1752 * C1122 - C32263 * C1138 +
             C1753 * C1134 - C32241 * C1144) *
                C31864) *
               C32238) *
              C31925 * C31911 * C111 +
          ((C1799 * C5988 + C1800 * C31864) * C5245 +
           ((C2208 - C2207 + C2210 - C2209 + C2212 - C2211) * C5988 +
            (C2214 - C2213 + C2216 - C2215 + C2218 - C2217) * C31864) *
               C5246 +
           ((C32274 * C263 - C1751 * C246 + C32263 * C1123 - C1752 * C1112 +
             C32241 * C1135 - C1753 * C1118) *
                C5988 +
            (C32274 * C276 - C1751 * C264 + C32263 * C1139 - C1752 * C1124 +
             C32241 * C1145 - C1753 * C1136) *
                C31864) *
               C32238) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C32274 * C126 - C1751 * C119 + C32263 * C354 - C1752 * C344 +
             C32241 * C364 - C1753 * C349) *
                C5988 +
            (C32274 * C140 - C1751 * C127 + C32263 * C374 - C1752 * C355 +
             C32241 * C379 - C1753 * C365) *
                C31864) *
               C5245 +
           ((C6645 - C6646 + C6647 - C6648 + C6649 - C6650) * C5988 +
            (C6651 - C6652 + C6653 - C6654 + C6655 - C6656) * C31864) *
               C5246 +
           C6693 * C32238) *
              C31925 * C235 +
          (((C6646 - C6645 + C6648 - C6647 + C6650 - C6649) * C5988 +
            (C6652 - C6651 + C6654 - C6653 + C6656 - C6655) * C31864) *
               C5245 +
           ((C6658 - C6657 + C6660 - C6659 + C6662 - C6661) * C5988 +
            (C6664 - C6663 + C6666 - C6665 + C6668 - C6667) * C31864) *
               C5246 +
           ((C6669 - C6670 + C6671 - C6672 + C6673 - C6674) * C5988 +
            (C6675 - C6676 + C6677 - C6678 + C6679 - C6680) * C31864) *
               C32238) *
              C31925 * C236 +
          (C6693 * C5245 +
           ((C6670 - C6669 + C6672 - C6671 + C6674 - C6673) * C5988 +
            (C6676 - C6675 + C6678 - C6677 + C6680 - C6679) * C31864) *
               C5246 +
           ((C32274 * C953 - C1751 * C944 + C32263 * C6145 - C1752 * C6142 +
             C32241 * C6149 - C1753 * C6144) *
                C5988 +
            (C32274 * C962 - C1751 * C954 + C32263 * C6151 - C1752 * C6146 +
             C32241 * C6153 - C1753 * C6150) *
                C31864) *
               C32238) *
              C31925 * C237) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C32274 * C126 - C1751 * C119 + C32263 * C354 - C1752 * C344 +
             C32241 * C364 - C1753 * C349) *
                C5988 +
            (C32274 * C140 - C1751 * C127 + C32263 * C374 - C1752 * C355 +
             C32241 * C379 - C1753 * C365) *
                C31864) *
               C5245 +
           ((C6645 - C6646 + C6647 - C6648 + C6649 - C6650) * C5988 +
            (C6651 - C6652 + C6653 - C6654 + C6655 - C6656) * C31864) *
               C5246 +
           C6693 * C32238) *
              C341 +
          (((C1751 * C344 - C32274 * C354 + C1752 * C349 - C32263 * C364 +
             C1753 * C2020 - C32241 * C2026) *
                C5988 +
            (C1751 * C355 - C32274 * C374 + C1752 * C365 - C32263 * C379 +
             C1753 * C2027 - C32241 * C2038) *
                C31864) *
               C5245 +
           ((C1751 * C676 - C32274 * C681 + C1752 * C1113 - C32263 * C1125 +
             C1753 * C2538 - C32241 * C2541) *
                C5988 +
            (C1751 * C682 - C32274 * C691 + C1752 * C1126 - C32263 * C1140 +
             C1753 * C2542 - C32241 * C2547) *
                C31864) *
               C5246 +
           ((C1751 * C1110 - C32274 * C1119 + C1752 * C1116 - C32263 * C1131 +
             C1753 * C6803 - C32241 * C6806) *
                C5988 +
            (C1751 * C1120 - C32274 * C1137 + C1752 * C1132 - C32263 * C1143 +
             C1753 * C6807 - C32241 * C6812) *
                C31864) *
               C32238) *
              C342 +
          (((C32274 * C364 - C1751 * C349 + C32263 * C2026 - C1752 * C2020 +
             C32241 * C2032 - C1753 * C2023) *
                C5988 +
            (C32274 * C379 - C1751 * C365 + C32263 * C2038 - C1752 * C2027 +
             C32241 * C2041 - C1753 * C2033) *
                C31864) *
               C5245 +
           ((C32274 * C1125 - C1751 * C1113 + C32263 * C2541 - C1752 * C2538 +
             C32241 * C6808 - C1753 * C6804) *
                C5988 +
            (C32274 * C1140 - C1751 * C1126 + C32263 * C2547 - C1752 * C2542 +
             C32241 * C6813 - C1753 * C6809) *
                C31864) *
               C5246 +
           ((C32274 * C1131 - C1751 * C1116 + C32263 * C6806 - C1752 * C6803 +
             C32241 * C6810 - C1753 * C6805) *
                C5988 +
            (C32274 * C1143 - C1751 * C1132 + C32263 * C6812 - C1752 * C6807 +
             C32241 * C6814 - C1753 * C6811) *
                C31864) *
               C32238) *
              C343) *
         C31911 * C31899) /
            (p * q * std::sqrt(p + q));
    d2ee[113] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C31966 * C126 - C113 * C119) * C812 +
             (C31966 * C140 - C113 * C127) * C806 + (C148 - C149) * C813 +
             (C150 - C151) * C807 + C168 * C814 + C169 * C32227) *
                C32273 +
            ((C966 - C967) * C812 + (C968 - C969) * C806 + C1297 * C813 +
             C1298 * C807 + C816 * C814 + C817 * C32227) *
                C32261 +
            C1000 * C32238) *
               C572 +
           (((C113 * C344 - C31966 * C354) * C812 +
             (C113 * C355 - C31966 * C374) * C806 + (C579 - C580) * C813 +
             (C581 - C582) * C807 + (C583 - C584) * C814 +
             (C585 - C586) * C32227) *
                C32273 +
            ((C113 * C676 - C31966 * C681) * C812 +
             (C113 * C682 - C31966 * C691) * C806 + (C1457 - C1458) * C813 +
             (C1459 - C1460) * C807 + (C1461 - C1462) * C814 +
             (C1463 - C1464) * C32227) *
                C32261 +
            ((C113 * C1110 - C31966 * C1119) * C812 +
             (C113 * C1120 - C31966 * C1137) * C806 + (C1465 - C1466) * C813 +
             (C1467 - C1468) * C807 + (C1469 - C1470) * C814 +
             (C1471 - C1472) * C32227) *
                C32238) *
               C573) *
              C31911 * C468 +
          ((((C149 - C148) * C812 + (C151 - C150) * C806 +
             (C153 - C152) * C813 + (C155 - C154) * C807 +
             (C157 - C156) * C814 + (C159 - C158) * C32227) *
                C32273 +
            (C1299 * C812 + C1300 * C806 + C1301 * C813 + C1302 * C807 +
             (C483 - C484) * C814 + (C485 - C486) * C32227) *
                C32261 +
            (C1303 * C812 + C1304 * C806 + C1305 * C813 + C1306 * C807 +
             (C826 - C827) * C814 + (C828 - C829) * C32227) *
                C32238) *
               C572 +
           (((C580 - C579) * C812 + (C582 - C581) * C806 +
             (C584 - C583) * C813 + (C586 - C585) * C807 +
             (C588 - C587) * C814 + (C590 - C589) * C32227) *
                C32273 +
            ((C1458 - C1457) * C812 + (C1460 - C1459) * C806 +
             (C1462 - C1461) * C813 + (C1464 - C1463) * C807 +
             (C31966 * C687 - C113 * C679) * C814 +
             (C31966 * C694 - C113 * C688) * C32227) *
                C32261 +
            ((C1466 - C1465) * C812 + (C1468 - C1467) * C806 +
             (C1470 - C1469) * C813 + (C1472 - C1471) * C807 +
             (C31966 * C1453 - C113 * C1452) * C814 +
             (C31966 * C1455 - C113 * C1454) * C32227) *
                C32238) *
               C573) *
              C31911 * C469)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31966 * C126 - C113 * C119) * C114 +
            (C31966 * C140 - C113 * C127) * C102 + (C148 - C149) * C115 +
            (C150 - C151) * C103 + C168 * C116 + C169 * C104 + C170 * C117 +
            C171 * C105 + C172 * C118 + C173 * C106) *
               C31955 * C572 +
           ((C113 * C344 - C31966 * C354) * C114 +
            (C113 * C355 - C31966 * C374) * C102 + (C579 - C580) * C115 +
            (C581 - C582) * C103 + (C583 - C584) * C116 + (C585 - C586) * C104 +
            (C587 - C588) * C117 + (C589 - C590) * C105 + (C591 - C592) * C118 +
            (C593 - C594) * C106) *
               C31955 * C573) *
              C31911 * C468 +
          (((C149 - C148) * C114 + (C151 - C150) * C102 + (C153 - C152) * C115 +
            (C155 - C154) * C103 + (C157 - C156) * C116 + (C159 - C158) * C104 +
            (C161 - C160) * C117 + (C163 - C162) * C105 + (C164 - C165) * C118 +
            (C166 - C167) * C106) *
               C31955 * C572 +
           ((C580 - C579) * C114 + (C582 - C581) * C102 + (C584 - C583) * C115 +
            (C586 - C585) * C103 + (C588 - C587) * C116 + (C590 - C589) * C104 +
            (C592 - C591) * C117 + (C594 - C593) * C105 +
            (C31966 * C575 - C113 * C574) * C118 +
            (C31966 * C577 - C113 * C576) * C106) *
               C31955 * C573) *
              C31911 * C469)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C32274 * C126 - C1751 * C119 + C32263 * C354 - C1752 * C344 +
             C32241 * C364 - C1753 * C349) *
                C812 +
            (C32274 * C140 - C1751 * C127 + C32263 * C374 - C1752 * C355 +
             C32241 * C379 - C1753 * C365) *
                C806 +
            (C1755 - C1756 + C1757 - C1758 + C1759 - C1760) * C813 +
            (C1761 - C1762 + C1763 - C1764 + C1765 - C1766) * C807 +
            C1799 * C814 + C1800 * C32227) *
               C31955 * C572 +
           ((C1751 * C344 - C32274 * C354 + C1752 * C349 - C32263 * C364 +
             C1753 * C2020 - C32241 * C2026) *
                C812 +
            (C1751 * C355 - C32274 * C374 + C1752 * C365 - C32263 * C379 +
             C1753 * C2027 - C32241 * C2038) *
                C806 +
            (C2369 - C2370 + C2371 - C2372 + C2373 - C2374) * C813 +
            (C2375 - C2376 + C2377 - C2378 + C2379 - C2380) * C807 +
            (C2381 - C2382 + C2383 - C2384 + C2385 - C2386) * C814 +
            (C2387 - C2388 + C2389 - C2390 + C2391 - C2392) * C32227) *
               C31955 * C573) *
              C31911 * C468 +
          (((C1756 - C1755 + C1758 - C1757 + C1760 - C1759) * C812 +
            (C1762 - C1761 + C1764 - C1763 + C1766 - C1765) * C806 +
            (C1768 - C1767 + C1770 - C1769 + C1772 - C1771) * C813 +
            (C1774 - C1773 + C1776 - C1775 + C1778 - C1777) * C807 +
            (C1779 - C1780 + C1781 - C1782 + C1783 - C1784) * C814 +
            (C1785 - C1786 + C1787 - C1788 + C1789 - C1790) * C32227) *
               C31955 * C572 +
           ((C2370 - C2369 + C2372 - C2371 + C2374 - C2373) * C812 +
            (C2376 - C2375 + C2378 - C2377 + C2380 - C2379) * C806 +
            (C2382 - C2381 + C2384 - C2383 + C2386 - C2385) * C813 +
            (C2388 - C2387 + C2390 - C2389 + C2392 - C2391) * C807 +
            (C32274 * C360 - C1751 * C347 + C32263 * C370 - C1752 * C352 +
             C32241 * C2365 - C1753 * C2364) *
                C814 +
            (C32274 * C377 - C1751 * C361 + C32263 * C382 - C1752 * C371 +
             C32241 * C2367 - C1753 * C2366) *
                C32227) *
               C31955 * C573) *
              C31911 * C469)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C31966 * C126 - C113 * C119) * C5248 +
             (C31966 * C140 - C113 * C127) * C32270 + (C148 - C149) * C5249 +
             (C150 - C151) * C32257 + C168 * C5250 + C169 * C32227) *
                C5245 +
            ((C966 - C967) * C5248 + (C968 - C969) * C32270 + C1297 * C5249 +
             C1298 * C32257 + C816 * C5250 + C817 * C32227) *
                C5246 +
            C5372 * C32238) *
               C572 +
           (((C113 * C344 - C31966 * C354) * C5248 +
             (C113 * C355 - C31966 * C374) * C32270 + (C579 - C580) * C5249 +
             (C581 - C582) * C32257 + (C583 - C584) * C5250 +
             (C585 - C586) * C32227) *
                C5245 +
            ((C1631 - C1632) * C5248 + (C1633 - C1634) * C32270 +
             (C1457 - C1458) * C5249 + (C1459 - C1460) * C32257 +
             (C1461 - C1462) * C5250 + (C1463 - C1464) * C32227) *
                C5246 +
            ((C1635 - C1636) * C5248 + (C1637 - C1638) * C32270 +
             (C1465 - C1466) * C5249 + (C1467 - C1468) * C32257 +
             (C1469 - C1470) * C5250 + (C1471 - C1472) * C32227) *
                C32238) *
               C573) *
              C31911 * C468 +
          ((((C149 - C148) * C5248 + (C151 - C150) * C32270 +
             (C153 - C152) * C5249 + (C155 - C154) * C32257 +
             (C157 - C156) * C5250 + (C159 - C158) * C32227) *
                C5245 +
            (C1299 * C5248 + C1300 * C32270 + C1301 * C5249 + C1302 * C32257 +
             C2987 * C5250 + C2988 * C32227) *
                C5246 +
            (C1303 * C5248 + C1304 * C32270 + C1305 * C5249 + C1306 * C32257 +
             (C826 - C827) * C5250 + (C828 - C829) * C32227) *
                C32238) *
               C572 +
           (((C580 - C579) * C5248 + (C582 - C581) * C32270 +
             (C584 - C583) * C5249 + (C586 - C585) * C32257 +
             (C588 - C587) * C5250 + (C590 - C589) * C32227) *
                C5245 +
            ((C1458 - C1457) * C5248 + (C1460 - C1459) * C32270 +
             (C1462 - C1461) * C5249 + (C1464 - C1463) * C32257 +
             (C3120 - C3119) * C5250 + (C3122 - C3121) * C32227) *
                C5246 +
            ((C1466 - C1465) * C5248 + (C1468 - C1467) * C32270 +
             (C1470 - C1469) * C5249 + (C1472 - C1471) * C32257 +
             (C31966 * C1453 - C113 * C1452) * C5250 +
             (C31966 * C1455 - C113 * C1454) * C32227) *
                C32238) *
               C573) *
              C31911 * C469)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C31966 * C126 - C113 * C119) * C5988 +
             (C31966 * C140 - C113 * C127) * C31864) *
                C5983 +
            ((C966 - C967) * C5988 + (C968 - C969) * C31864) * C5984 +
            C6072 * C5985 + C6077 * C5986 + C6080 * C5987) *
               C572 +
           (((C113 * C344 - C31966 * C354) * C5988 +
             (C113 * C355 - C31966 * C374) * C31864) *
                C5983 +
            ((C1631 - C1632) * C5988 + (C1633 - C1634) * C31864) * C5984 +
            ((C1635 - C1636) * C5988 + (C1637 - C1638) * C31864) * C5985 +
            ((C113 * C1618 - C31966 * C1621) * C5988 +
             (C113 * C1622 - C31966 * C1627) * C31864) *
                C5986 +
            ((C113 * C6142 - C31966 * C6145) * C5988 +
             (C113 * C6146 - C31966 * C6151) * C31864) *
                C5987) *
               C573) *
              C31911 * C468 +
          ((((C149 - C148) * C5988 + (C151 - C150) * C31864) * C5983 +
            (C1299 * C5988 + C1300 * C31864) * C5984 +
            (C1303 * C5988 + C1304 * C31864) * C5985 +
            ((C982 - C983) * C5988 + (C984 - C985) * C31864) * C5986 +
            ((C6241 - C6242) * C5988 + (C6243 - C6244) * C31864) * C5987) *
               C572 +
           (((C580 - C579) * C5988 + (C582 - C581) * C31864) * C5983 +
            ((C1458 - C1457) * C5988 + (C1460 - C1459) * C31864) * C5984 +
            ((C1466 - C1465) * C5988 + (C1468 - C1467) * C31864) * C5985 +
            ((C31966 * C1623 - C113 * C1619) * C5988 +
             (C31966 * C1628 - C113 * C1624) * C31864) *
                C5986 +
            ((C31966 * C6327 - C113 * C6326) * C5988 +
             (C31966 * C6329 - C113 * C6328) * C31864) *
                C5987) *
               C573) *
              C31911 * C469)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C32274 * C126 - C1751 * C119 + C32263 * C354 - C1752 * C344 +
              C32241 * C364 - C1753 * C349) *
                 C5988 +
             (C32274 * C140 - C1751 * C127 + C32263 * C374 - C1752 * C355 +
              C32241 * C379 - C1753 * C365) *
                 C31864) *
                C5245 +
            ((C6645 - C6646 + C6647 - C6648 + C6649 - C6650) * C5988 +
             (C6651 - C6652 + C6653 - C6654 + C6655 - C6656) * C31864) *
                C5246 +
            C6693 * C32238) *
               C572 +
           (((C1751 * C344 - C32274 * C354 + C1752 * C349 - C32263 * C364 +
              C1753 * C2020 - C32241 * C2026) *
                 C5988 +
             (C1751 * C355 - C32274 * C374 + C1752 * C365 - C32263 * C379 +
              C1753 * C2027 - C32241 * C2038) *
                 C31864) *
                C5245 +
            ((C1751 * C676 - C32274 * C681 + C1752 * C1113 - C32263 * C1125 +
              C1753 * C2538 - C32241 * C2541) *
                 C5988 +
             (C1751 * C682 - C32274 * C691 + C1752 * C1126 - C32263 * C1140 +
              C1753 * C2542 - C32241 * C2547) *
                 C31864) *
                C5246 +
            ((C1751 * C1110 - C32274 * C1119 + C1752 * C1116 - C32263 * C1131 +
              C1753 * C6803 - C32241 * C6806) *
                 C5988 +
             (C1751 * C1120 - C32274 * C1137 + C1752 * C1132 - C32263 * C1143 +
              C1753 * C6807 - C32241 * C6812) *
                 C31864) *
                C32238) *
               C573) *
              C31911 * C468 +
          ((((C1756 - C1755 + C1758 - C1757 + C1760 - C1759) * C5988 +
             (C1762 - C1761 + C1764 - C1763 + C1766 - C1765) * C31864) *
                C5245 +
            ((C2195 - C2196 + C2197 - C2198 + C2199 - C2200) * C5988 +
             (C2201 - C2202 + C2203 - C2204 + C2205 - C2206) * C31864) *
                C5246 +
            ((C6966 - C6967 + C6968 - C6969 + C6970 - C6971) * C5988 +
             (C6972 - C6973 + C6974 - C6975 + C6976 - C6977) * C31864) *
                C32238) *
               C572 +
           (((C2370 - C2369 + C2372 - C2371 + C2374 - C2373) * C5988 +
             (C2376 - C2375 + C2378 - C2377 + C2380 - C2379) * C31864) *
                C5245 +
            ((C32274 * C683 - C1751 * C677 + C32263 * C1127 - C1752 * C1114 +
              C32241 * C2543 - C1753 * C2539) *
                 C5988 +
             (C32274 * C692 - C1751 * C684 + C32263 * C1141 - C1752 * C1128 +
              C32241 * C2548 - C1753 * C2544) *
                 C31864) *
                C5246 +
            ((C32274 * C1121 - C1751 * C1111 + C32263 * C1133 - C1752 * C1117 +
              C32241 * C7124 - C1753 * C7123) *
                 C5988 +
             (C32274 * C1138 - C1751 * C1122 + C32263 * C1144 - C1752 * C1134 +
              C32241 * C7126 - C1753 * C7125) *
                 C31864) *
                C32238) *
               C573) *
              C31911 * C469)) /
            (p * q * std::sqrt(p + q));
    d2ee[114] +=
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C31966 * C126 - C113 * C119) * C114 +
           (C31966 * C140 - C113 * C127) * C102 + (C148 - C149) * C115 +
           (C150 - C151) * C103 + C168 * C116 + C169 * C104 + C170 * C117 +
           C171 * C105 + C172 * C118 + C173 * C106) *
              C31955 * C31925 * C235 +
          ((C113 * C239 - C31966 * C249) * C114 +
           (C113 * C250 - C31966 * C269) * C102 +
           (C113 * C240 - C31966 * C251) * C115 +
           (C113 * C252 - C31966 * C270) * C103 +
           (C113 * C241 - C31966 * C253) * C116 +
           (C113 * C254 - C31966 * C271) * C104 +
           (C113 * C242 - C31966 * C255) * C117 +
           (C113 * C256 - C31966 * C272) * C105 +
           (C113 * C243 - C31966 * C257) * C118 +
           (C113 * C258 - C31966 * C273) * C106) *
              C31955 * C31925 * C236 +
          ((C31966 * C259 - C113 * C244) * C114 +
           (C31966 * C274 - C113 * C260) * C102 +
           (C31966 * C261 - C113 * C245) * C115 +
           (C31966 * C275 - C113 * C262) * C103 +
           (C31966 * C263 - C113 * C246) * C116 +
           (C31966 * C276 - C113 * C264) * C104 +
           (C31966 * C265 - C113 * C247) * C117 +
           (C31966 * C277 - C113 * C266) * C105 +
           (C31966 * C267 - C113 * C248) * C118 +
           (C31966 * C278 - C113 * C268) * C106) *
              C31955 * C31925 * C237) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C31966 * C126 - C113 * C119) * C114 +
           (C31966 * C140 - C113 * C127) * C102 + (C148 - C149) * C115 +
           (C150 - C151) * C103 + C168 * C116 + C169 * C104 + C170 * C117 +
           C171 * C105 + C172 * C118 + C173 * C106) *
              C31955 * C31925 * C31911 * C110 +
          ((C149 - C148) * C114 + (C151 - C150) * C102 + (C153 - C152) * C115 +
           (C155 - C154) * C103 + (C157 - C156) * C116 + (C159 - C158) * C104 +
           (C161 - C160) * C117 + (C163 - C162) * C105 + (C164 - C165) * C118 +
           (C166 - C167) * C106) *
              C31955 * C31925 * C31911 * C111 +
          (C168 * C114 + C169 * C102 + C170 * C115 + C171 * C103 + C172 * C116 +
           C173 * C104 + (C165 - C164) * C117 + (C167 - C166) * C105 +
           (C31966 * C138 - C113 * C125) * C118 +
           (C31966 * C146 - C113 * C139) * C106) *
              C31955 * C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C31966 * C126 - C113 * C119) * C812 +
            (C31966 * C140 - C113 * C127) * C806 + (C148 - C149) * C813 +
            (C150 - C151) * C807 + C168 * C814 + C169 * C32227) *
               C32273 +
           ((C31966 * C249 - C113 * C239) * C812 +
            (C31966 * C269 - C113 * C250) * C806 + (C476 - C475) * C813 +
            (C478 - C477) * C807 + C816 * C814 + C817 * C32227) *
               C32261 +
           ((C31966 * C259 - C113 * C244) * C812 +
            (C31966 * C274 - C113 * C260) * C806 + (C818 - C819) * C813 +
            (C820 - C821) * C807 + C830 * C814 + C831 * C32227) *
               C32238) *
              C31925 * C31911 * C110 +
          (((C149 - C148) * C812 + (C151 - C150) * C806 + (C153 - C152) * C813 +
            (C155 - C154) * C807 + (C157 - C156) * C814 +
            (C159 - C158) * C32227) *
               C32273 +
           ((C475 - C476) * C812 + (C477 - C478) * C806 + (C479 - C480) * C813 +
            (C481 - C482) * C807 + (C483 - C484) * C814 +
            (C485 - C486) * C32227) *
               C32261 +
           ((C819 - C818) * C812 + (C821 - C820) * C806 + (C823 - C822) * C813 +
            (C825 - C824) * C807 + (C826 - C827) * C814 +
            (C828 - C829) * C32227) *
               C32238) *
              C31925 * C31911 * C111 +
          ((C168 * C812 + C169 * C806 + C170 * C813 + C171 * C807 +
            C172 * C814 + C173 * C32227) *
               C32273 +
           (C816 * C812 + C817 * C806 + (C484 - C483) * C813 +
            (C486 - C485) * C807 + (C488 - C487) * C814 +
            (C490 - C489) * C32227) *
               C32261 +
           (C830 * C812 + C831 * C806 + (C827 - C826) * C813 +
            (C829 - C828) * C807 + (C31966 * C267 - C113 * C248) * C814 +
            (C31966 * C278 - C113 * C268) * C32227) *
               C32238) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C31966 * C126 - C113 * C119) * C812 +
            (C31966 * C140 - C113 * C127) * C806 + (C148 - C149) * C813 +
            (C150 - C151) * C807 + C168 * C814 + C169 * C32227) *
               C32273 +
           ((C966 - C967) * C812 + (C968 - C969) * C806 + (C476 - C475) * C813 +
            (C478 - C477) * C807 + C816 * C814 + C817 * C32227) *
               C32261 +
           C1000 * C32238) *
              C31925 * C235 +
          (((C967 - C966) * C812 + (C969 - C968) * C806 + (C475 - C476) * C813 +
            (C477 - C478) * C807 + (C479 - C480) * C814 +
            (C481 - C482) * C32227) *
               C32273 +
           ((C971 - C970) * C812 + (C973 - C972) * C806 + (C819 - C818) * C813 +
            (C821 - C820) * C807 + (C823 - C822) * C814 +
            (C825 - C824) * C32227) *
               C32261 +
           ((C978 - C979) * C812 + (C980 - C981) * C806 + (C982 - C983) * C813 +
            (C984 - C985) * C807 + (C986 - C987) * C814 +
            (C988 - C989) * C32227) *
               C32238) *
              C31925 * C236 +
          (C1000 * C32273 +
           ((C979 - C978) * C812 + (C981 - C980) * C806 + (C983 - C982) * C813 +
            (C985 - C984) * C807 + (C987 - C986) * C814 +
            (C989 - C988) * C32227) *
               C32261 +
           ((C31966 * C953 - C113 * C944) * C812 +
            (C31966 * C962 - C113 * C954) * C806 +
            (C31966 * C955 - C113 * C945) * C813 +
            (C31966 * C963 - C113 * C956) * C807 +
            (C31966 * C957 - C113 * C946) * C814 +
            (C31966 * C964 - C113 * C958) * C32227) *
               C32238) *
              C31925 * C237) *
         C31899) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C32274 * C126 - C1751 * C119 + C32263 * C354 - C1752 * C344 +
            C32241 * C364 - C1753 * C349) *
               C812 +
           (C32274 * C140 - C1751 * C127 + C32263 * C374 - C1752 * C355 +
            C32241 * C379 - C1753 * C365) *
               C806 +
           (C1755 - C1756 + C1757 - C1758 + C1759 - C1760) * C813 +
           (C1761 - C1762 + C1763 - C1764 + C1765 - C1766) * C807 +
           C1799 * C814 + C1800 * C32227) *
              C31955 * C31925 * C31911 * C110 +
          ((C1756 - C1755 + C1758 - C1757 + C1760 - C1759) * C812 +
           (C1762 - C1761 + C1764 - C1763 + C1766 - C1765) * C806 +
           (C1768 - C1767 + C1770 - C1769 + C1772 - C1771) * C813 +
           (C1774 - C1773 + C1776 - C1775 + C1778 - C1777) * C807 +
           (C1779 - C1780 + C1781 - C1782 + C1783 - C1784) * C814 +
           (C1785 - C1786 + C1787 - C1788 + C1789 - C1790) * C32227) *
              C31955 * C31925 * C31911 * C111 +
          (C1799 * C812 + C1800 * C806 +
           (C1780 - C1779 + C1782 - C1781 + C1784 - C1783) * C813 +
           (C1786 - C1785 + C1788 - C1787 + C1790 - C1789) * C807 +
           (C32274 * C134 - C1751 * C123 + C32263 * C362 - C1752 * C348 +
            C32241 * C372 - C1753 * C353) *
               C814 +
           (C32274 * C144 - C1751 * C135 + C32263 * C378 - C1752 * C363 +
            C32241 * C383 - C1753 * C373) *
               C32227) *
              C31955 * C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C32274 * C126 - C1751 * C119 + C32263 * C354 - C1752 * C344 +
            C32241 * C364 - C1753 * C349) *
               C812 +
           (C32274 * C140 - C1751 * C127 + C32263 * C374 - C1752 * C355 +
            C32241 * C379 - C1753 * C365) *
               C806 +
           (C1755 - C1756 + C1757 - C1758 + C1759 - C1760) * C813 +
           (C1761 - C1762 + C1763 - C1764 + C1765 - C1766) * C807 +
           C1799 * C814 + C1800 * C32227) *
              C31955 * C31925 * C235 +
          ((C1751 * C239 - C32274 * C249 + C1752 * C676 - C32263 * C681 +
            C1753 * C1113 - C32241 * C1125) *
               C812 +
           (C1751 * C250 - C32274 * C269 + C1752 * C682 - C32263 * C691 +
            C1753 * C1126 - C32241 * C1140) *
               C806 +
           (C1751 * C240 - C32274 * C251 + C1752 * C677 - C32263 * C683 +
            C1753 * C1114 - C32241 * C1127) *
               C813 +
           (C1751 * C252 - C32274 * C270 + C1752 * C684 - C32263 * C692 +
            C1753 * C1128 - C32241 * C1141) *
               C807 +
           (C1751 * C241 - C32274 * C253 + C1752 * C678 - C32263 * C685 +
            C1753 * C1115 - C32241 * C1129) *
               C814 +
           (C1751 * C254 - C32274 * C271 + C1752 * C686 - C32263 * C693 +
            C1753 * C1130 - C32241 * C1142) *
               C32227) *
              C31955 * C31925 * C236 +
          ((C32274 * C259 - C1751 * C244 + C32263 * C1119 - C1752 * C1110 +
            C32241 * C1131 - C1753 * C1116) *
               C812 +
           (C32274 * C274 - C1751 * C260 + C32263 * C1137 - C1752 * C1120 +
            C32241 * C1143 - C1753 * C1132) *
               C806 +
           (C32274 * C261 - C1751 * C245 + C32263 * C1121 - C1752 * C1111 +
            C32241 * C1133 - C1753 * C1117) *
               C813 +
           (C32274 * C275 - C1751 * C262 + C32263 * C1138 - C1752 * C1122 +
            C32241 * C1144 - C1753 * C1134) *
               C807 +
           (C32274 * C263 - C1751 * C246 + C32263 * C1123 - C1752 * C1112 +
            C32241 * C1135 - C1753 * C1118) *
               C814 +
           (C32274 * C276 - C1751 * C264 + C32263 * C1139 - C1752 * C1124 +
            C32241 * C1145 - C1753 * C1136) *
               C32227) *
              C31955 * C31925 * C237) *
         C31899) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C31966 * C126 - C113 * C119) * C5248 +
            (C31966 * C140 - C113 * C127) * C32270 + (C148 - C149) * C5249 +
            (C150 - C151) * C32257 + C168 * C5250 + C169 * C32227) *
               C5245 +
           ((C966 - C967) * C5248 + (C968 - C969) * C32270 + C1297 * C5249 +
            C1298 * C32257 + C816 * C5250 + C817 * C32227) *
               C5246 +
           (C990 * C5248 + C991 * C32270 + C974 * C5249 + C975 * C32257 +
            C830 * C5250 + C831 * C32227) *
               C32238) *
              C31925 * C31911 * C110 +
          (((C149 - C148) * C5248 + (C151 - C150) * C32270 +
            (C153 - C152) * C5249 + (C155 - C154) * C32257 +
            (C157 - C156) * C5250 + (C159 - C158) * C32227) *
               C5245 +
           (C1299 * C5248 + C1300 * C32270 + C1301 * C5249 + C1302 * C32257 +
            C2987 * C5250 + C2988 * C32227) *
               C5246 +
           (C1303 * C5248 + C1304 * C32270 + C1305 * C5249 + C1306 * C32257 +
            (C826 - C827) * C5250 + (C828 - C829) * C32227) *
               C32238) *
              C31925 * C31911 * C111 +
          ((C168 * C5248 + C169 * C32270 + C170 * C5249 + C171 * C32257 +
            C172 * C5250 + C173 * C32227) *
               C5245 +
           (C816 * C5248 + C817 * C32270 + C2659 * C5249 + C2660 * C32257 +
            (C488 - C487) * C5250 + (C490 - C489) * C32227) *
               C5246 +
           (C830 * C5248 + C831 * C32270 + (C827 - C826) * C5249 +
            (C829 - C828) * C32257 + (C31966 * C267 - C113 * C248) * C5250 +
            (C31966 * C278 - C113 * C268) * C32227) *
               C32238) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C31966 * C126 - C113 * C119) * C5248 +
            (C31966 * C140 - C113 * C127) * C32270 + (C148 - C149) * C5249 +
            (C150 - C151) * C32257 + C168 * C5250 + C169 * C32227) *
               C5245 +
           ((C966 - C967) * C5248 + (C968 - C969) * C32270 + C1297 * C5249 +
            C1298 * C32257 + C816 * C5250 + C817 * C32227) *
               C5246 +
           C5372 * C32238) *
              C31925 * C235 +
          (((C967 - C966) * C5248 + (C969 - C968) * C32270 + C1299 * C5249 +
            C1300 * C32257 + C1301 * C5250 + C1302 * C32227) *
               C5245 +
           ((C971 - C970) * C5248 + (C973 - C972) * C32270 + C1303 * C5249 +
            C1304 * C32257 + C1305 * C5250 + C1306 * C32227) *
               C5246 +
           ((C978 - C979) * C5248 + (C980 - C981) * C32270 +
            (C982 - C983) * C5249 + (C984 - C985) * C32257 +
            (C986 - C987) * C5250 + (C988 - C989) * C32227) *
               C32238) *
              C31925 * C236 +
          (C5372 * C5245 +
           ((C979 - C978) * C5248 + (C981 - C980) * C32270 +
            (C983 - C982) * C5249 + (C985 - C984) * C32257 +
            (C987 - C986) * C5250 + (C989 - C988) * C32227) *
               C5246 +
           ((C31966 * C953 - C113 * C944) * C5248 +
            (C31966 * C962 - C113 * C954) * C32270 +
            (C31966 * C955 - C113 * C945) * C5249 +
            (C31966 * C963 - C113 * C956) * C32257 +
            (C31966 * C957 - C113 * C946) * C5250 +
            (C31966 * C964 - C113 * C958) * C32227) *
               C32238) *
              C31925 * C237) *
         C31899) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C31966 * C126 - C113 * C119) * C5988 +
            (C31966 * C140 - C113 * C127) * C31864) *
               C5983 +
           ((C966 - C967) * C5988 + (C968 - C969) * C31864) * C5984 +
           (C990 * C5988 + C991 * C31864) * C5985 +
           ((C979 - C978) * C5988 + (C981 - C980) * C31864) * C5986 +
           ((C31966 * C953 - C113 * C944) * C5988 +
            (C31966 * C962 - C113 * C954) * C31864) *
               C5987) *
              C31925 * C31911 * C110 +
          (((C149 - C148) * C5988 + (C151 - C150) * C31864) * C5983 +
           (C1299 * C5988 + C1300 * C31864) * C5984 +
           (C1303 * C5988 + C1304 * C31864) * C5985 +
           ((C982 - C983) * C5988 + (C984 - C985) * C31864) * C5986 +
           ((C113 * C945 - C31966 * C955) * C5988 +
            (C113 * C956 - C31966 * C963) * C31864) *
               C5987) *
              C31925 * C31911 * C111 +
          ((C168 * C5988 + C169 * C31864) * C5983 +
           (C816 * C5988 + C817 * C31864) * C5984 +
           (C830 * C5988 + C831 * C31864) * C5985 +
           ((C987 - C986) * C5988 + (C989 - C988) * C31864) * C5986 +
           ((C31966 * C957 - C113 * C946) * C5988 +
            (C31966 * C964 - C113 * C958) * C31864) *
               C5987) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C31966 * C126 - C113 * C119) * C5988 +
            (C31966 * C140 - C113 * C127) * C31864) *
               C5983 +
           ((C966 - C967) * C5988 + (C968 - C969) * C31864) * C5984 +
           C6072 * C5985 + C6077 * C5986 + C6080 * C5987) *
              C31925 * C235 +
          (((C967 - C966) * C5988 + (C969 - C968) * C31864) * C5983 +
           ((C971 - C970) * C5988 + (C973 - C972) * C31864) * C5984 +
           ((C978 - C979) * C5988 + (C980 - C981) * C31864) * C5985 +
           ((C6065 - C6064) * C5988 + (C6067 - C6066) * C31864) * C5986 +
           ((C6068 - C6069) * C5988 + (C6070 - C6071) * C31864) * C5987) *
              C31925 * C236 +
          (C6072 * C5983 + C6077 * C5984 + C6080 * C5985 +
           ((C6069 - C6068) * C5988 + (C6071 - C6070) * C31864) * C5986 +
           ((C31966 * C6055 - C113 * C6052) * C5988 +
            (C31966 * C6058 - C113 * C6056) * C31864) *
               C5987) *
              C31925 * C237) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C32274 * C126 - C1751 * C119 + C32263 * C354 - C1752 * C344 +
             C32241 * C364 - C1753 * C349) *
                C5988 +
            (C32274 * C140 - C1751 * C127 + C32263 * C374 - C1752 * C355 +
             C32241 * C379 - C1753 * C365) *
                C31864) *
               C5245 +
           ((C32274 * C249 - C1751 * C239 + C32263 * C681 - C1752 * C676 +
             C32241 * C1125 - C1753 * C1113) *
                C5988 +
            (C32274 * C269 - C1751 * C250 + C32263 * C691 - C1752 * C682 +
             C32241 * C1140 - C1753 * C1126) *
                C31864) *
               C5246 +
           ((C32274 * C259 - C1751 * C244 + C32263 * C1119 - C1752 * C1110 +
             C32241 * C1131 - C1753 * C1116) *
                C5988 +
            (C32274 * C274 - C1751 * C260 + C32263 * C1137 - C1752 * C1120 +
             C32241 * C1143 - C1753 * C1132) *
                C31864) *
               C32238) *
              C31925 * C31911 * C110 +
          (((C1756 - C1755 + C1758 - C1757 + C1760 - C1759) * C5988 +
            (C1762 - C1761 + C1764 - C1763 + C1766 - C1765) * C31864) *
               C5245 +
           ((C2195 - C2196 + C2197 - C2198 + C2199 - C2200) * C5988 +
            (C2201 - C2202 + C2203 - C2204 + C2205 - C2206) * C31864) *
               C5246 +
           ((C1751 * C245 - C32274 * C261 + C1752 * C1111 - C32263 * C1121 +
             C1753 * C1117 - C32241 * C1133) *
                C5988 +
            (C1751 * C262 - C32274 * C275 + C1752 * C1122 - C32263 * C1138 +
             C1753 * C1134 - C32241 * C1144) *
                C31864) *
               C32238) *
              C31925 * C31911 * C111 +
          ((C1799 * C5988 + C1800 * C31864) * C5245 +
           ((C2208 - C2207 + C2210 - C2209 + C2212 - C2211) * C5988 +
            (C2214 - C2213 + C2216 - C2215 + C2218 - C2217) * C31864) *
               C5246 +
           ((C32274 * C263 - C1751 * C246 + C32263 * C1123 - C1752 * C1112 +
             C32241 * C1135 - C1753 * C1118) *
                C5988 +
            (C32274 * C276 - C1751 * C264 + C32263 * C1139 - C1752 * C1124 +
             C32241 * C1145 - C1753 * C1136) *
                C31864) *
               C32238) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C32274 * C126 - C1751 * C119 + C32263 * C354 - C1752 * C344 +
             C32241 * C364 - C1753 * C349) *
                C5988 +
            (C32274 * C140 - C1751 * C127 + C32263 * C374 - C1752 * C355 +
             C32241 * C379 - C1753 * C365) *
                C31864) *
               C5245 +
           ((C6645 - C6646 + C6647 - C6648 + C6649 - C6650) * C5988 +
            (C6651 - C6652 + C6653 - C6654 + C6655 - C6656) * C31864) *
               C5246 +
           C6693 * C32238) *
              C31925 * C235 +
          (((C6646 - C6645 + C6648 - C6647 + C6650 - C6649) * C5988 +
            (C6652 - C6651 + C6654 - C6653 + C6656 - C6655) * C31864) *
               C5245 +
           ((C6658 - C6657 + C6660 - C6659 + C6662 - C6661) * C5988 +
            (C6664 - C6663 + C6666 - C6665 + C6668 - C6667) * C31864) *
               C5246 +
           ((C6669 - C6670 + C6671 - C6672 + C6673 - C6674) * C5988 +
            (C6675 - C6676 + C6677 - C6678 + C6679 - C6680) * C31864) *
               C32238) *
              C31925 * C236 +
          (C6693 * C5245 +
           ((C6670 - C6669 + C6672 - C6671 + C6674 - C6673) * C5988 +
            (C6676 - C6675 + C6678 - C6677 + C6680 - C6679) * C31864) *
               C5246 +
           ((C32274 * C953 - C1751 * C944 + C32263 * C6145 - C1752 * C6142 +
             C32241 * C6149 - C1753 * C6144) *
                C5988 +
            (C32274 * C962 - C1751 * C954 + C32263 * C6151 - C1752 * C6146 +
             C32241 * C6153 - C1753 * C6150) *
                C31864) *
               C32238) *
              C31925 * C237) *
         C31899) /
            (p * q * std::sqrt(p + q));
    d2ee[115] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C32208 * C126 - C3352 * C119 + C32053 * C354 - C3353 * C344) *
                C2654 +
            (C32208 * C140 - C3352 * C127 + C32053 * C374 - C3353 * C355) *
                C2648 +
            (C3355 - C3356 + C3357 - C3358) * C2655 +
            (C3359 - C3360 + C3361 - C3362) * C2649 + C3395 * C2656 +
            C3396 * C2650 + C3397 * C2657 + C3398 * C32242) *
               C31955 * C31925 * C466 +
           ((C3352 * C239 - C32208 * C249 + C3353 * C676 - C32053 * C681) *
                C2654 +
            (C3352 * C250 - C32208 * C269 + C3353 * C682 - C32053 * C691) *
                C2648 +
            (C3725 - C3726 + C3727 - C3728) * C2655 +
            (C3729 - C3730 + C3731 - C3732) * C2649 +
            (C3733 - C3734 + C3735 - C3736) * C2656 +
            (C3737 - C3738 + C3739 - C3740) * C2650 +
            (C3741 - C3742 + C3743 - C3744) * C2657 +
            (C3745 - C3746 + C3747 - C3748) * C32242) *
               C31955 * C31925 * C467) *
              C468 +
          (((C3356 - C3355 + C3358 - C3357) * C2654 +
            (C3360 - C3359 + C3362 - C3361) * C2648 +
            (C3364 - C3363 + C3366 - C3365) * C2655 +
            (C3368 - C3367 + C3370 - C3369) * C2649 +
            (C3372 - C3371 + C3374 - C3373) * C2656 +
            (C3376 - C3375 + C3378 - C3377) * C2650 +
            (C3379 - C3380 + C3381 - C3382) * C2657 +
            (C3383 - C3384 + C3385 - C3386) * C32242) *
               C31955 * C31925 * C466 +
           ((C3726 - C3725 + C3728 - C3727) * C2654 +
            (C3730 - C3729 + C3732 - C3731) * C2648 +
            (C3734 - C3733 + C3736 - C3735) * C2655 +
            (C3738 - C3737 + C3740 - C3739) * C2649 +
            (C3742 - C3741 + C3744 - C3743) * C2656 +
            (C3746 - C3745 + C3748 - C3747) * C2650 +
            (C32208 * C257 - C3352 * C243 + C32053 * C689 - C3353 * C680) *
                C2657 +
            (C32208 * C273 - C3352 * C258 + C32053 * C695 - C3353 * C690) *
                C32242) *
               C31955 * C31925 * C467) *
              C469)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C32208 * C126 - C3352 * C119 + C32053 * C354 - C3353 * C344) *
                 C30875 +
             (C32208 * C140 - C3352 * C127 + C32053 * C374 - C3353 * C355) *
                 C32188 +
             (C3355 - C3356 + C3357 - C3358) * C30856 +
             (C3359 - C3360 + C3361 - C3362) * C31874) *
                C5245 +
            ((C4331 - C4332 + C4333 - C4334) * C30875 +
             (C4335 - C4336 + C4337 - C4338) * C32188 + C4715 * C30856 +
             C4716 * C31874) *
                C5246 +
            C8342 * C32238) *
               C31925 * C466 +
           (((C4332 - C4331 + C4334 - C4333) * C30875 +
             (C4336 - C4335 + C4338 - C4337) * C32188 + C4717 * C30856 +
             C4718 * C31874) *
                C5245 +
            ((C4339 - C4340 + C4341 - C4342) * C30875 +
             (C4343 - C4344 + C4345 - C4346) * C32188 + C8687 * C30856 +
             C8688 * C31874) *
                C5246 +
            ((C8316 - C8317 + C8318 - C8319) * C30875 +
             (C8320 - C8321 + C8322 - C8323) * C32188 +
             (C8324 - C8325 + C8326 - C8327) * C30856 +
             (C8328 - C8329 + C8330 - C8331) * C31874) *
                C32238) *
               C31925 * C467) *
              C468 +
          ((((C3356 - C3355 + C3358 - C3357) * C30875 +
             (C3360 - C3359 + C3362 - C3361) * C32188 +
             (C3364 - C3363 + C3366 - C3365) * C30856 +
             (C3368 - C3367 + C3370 - C3369) * C31874) *
                C5245 +
            (C4717 * C30875 + C4718 * C32188 + C4719 * C30856 +
             C4720 * C31874) *
                C5246 +
            (C8687 * C30875 + C8688 * C32188 +
             (C4355 - C4356 + C4357 - C4358) * C30856 +
             (C4359 - C4360 + C4361 - C4362) * C31874) *
                C32238) *
               C31925 * C466 +
           ((C4715 * C30875 + C4716 * C32188 + C4183 * C30856 +
             C4184 * C31874) *
                C5245 +
            (C8334 * C30875 + C8335 * C32188 +
             (C4356 - C4355 + C4358 - C4357) * C30856 +
             (C4360 - C4359 + C4362 - C4361) * C31874) *
                C5246 +
            ((C8325 - C8324 + C8327 - C8326) * C30875 +
             (C8329 - C8328 + C8331 - C8330) * C32188 +
             (C32208 * C951 - C3352 * C943 + C32053 * C1625 - C3353 * C1620) *
                 C30856 +
             (C32208 * C961 - C3352 * C952 + C32053 * C1629 - C3353 * C1626) *
                 C31874) *
                C32238) *
               C31925 * C467) *
              C469)) /
            (p * q * std::sqrt(p + q));
    d2ee[116] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C32208 * C126 - C3352 * C119 + C32053 * C354 - C3353 * C344) *
                C2654 +
            (C32208 * C140 - C3352 * C127 + C32053 * C374 - C3353 * C355) *
                C2648 +
            (C3355 - C3356 + C3357 - C3358) * C2655 +
            (C3359 - C3360 + C3361 - C3362) * C2649 + C3395 * C2656 +
            C3396 * C2650 + C3397 * C2657 + C3398 * C32242) *
               C31955 * C572 +
           ((C3352 * C344 - C32208 * C354 + C3353 * C349 - C32053 * C364) *
                C2654 +
            (C3352 * C355 - C32208 * C374 + C3353 * C365 - C32053 * C379) *
                C2648 +
            (C3879 - C3880 + C3881 - C3882) * C2655 +
            (C3883 - C3884 + C3885 - C3886) * C2649 +
            (C3887 - C3888 + C3889 - C3890) * C2656 +
            (C3891 - C3892 + C3893 - C3894) * C2650 +
            (C3895 - C3896 + C3897 - C3898) * C2657 +
            (C3899 - C3900 + C3901 - C3902) * C32242) *
               C31955 * C573) *
              C466 +
          (((C3352 * C239 - C32208 * C249 + C3353 * C676 - C32053 * C681) *
                C2654 +
            (C3352 * C250 - C32208 * C269 + C3353 * C682 - C32053 * C691) *
                C2648 +
            (C3725 - C3726 + C3727 - C3728) * C2655 +
            (C3729 - C3730 + C3731 - C3732) * C2649 +
            (C3733 - C3734 + C3735 - C3736) * C2656 +
            (C3737 - C3738 + C3739 - C3740) * C2650 +
            (C3741 - C3742 + C3743 - C3744) * C2657 +
            (C3745 - C3746 + C3747 - C3748) * C32242) *
               C31955 * C572 +
           ((C32208 * C681 - C3352 * C676 + C32053 * C1125 - C3353 * C1113) *
                C2654 +
            (C32208 * C691 - C3352 * C682 + C32053 * C1140 - C3353 * C1126) *
                C2648 +
            (C32208 * C683 - C3352 * C677 + C32053 * C1127 - C3353 * C1114) *
                C2655 +
            (C32208 * C692 - C3352 * C684 + C32053 * C1141 - C3353 * C1128) *
                C2649 +
            (C32208 * C685 - C3352 * C678 + C32053 * C1129 - C3353 * C1115) *
                C2656 +
            (C32208 * C693 - C3352 * C686 + C32053 * C1142 - C3353 * C1130) *
                C2650 +
            (C32208 * C687 - C3352 * C679 + C32053 * C2191 - C3353 * C2190) *
                C2657 +
            (C32208 * C694 - C3352 * C688 + C32053 * C2193 - C3353 * C2192) *
                C32242) *
               C31955 * C573) *
              C467) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C32208 * C126 - C3352 * C119 + C32053 * C354 - C3353 * C344) *
                 C30875 +
             (C32208 * C140 - C3352 * C127 + C32053 * C374 - C3353 * C355) *
                 C32188 +
             (C3355 - C3356 + C3357 - C3358) * C30856 +
             (C3359 - C3360 + C3361 - C3362) * C31874) *
                C5245 +
            ((C4331 - C4332 + C4333 - C4334) * C30875 +
             (C4335 - C4336 + C4337 - C4338) * C32188 + C4715 * C30856 +
             C4716 * C31874) *
                C5246 +
            C8342 * C32238) *
               C572 +
           (((C3352 * C344 - C32208 * C354 + C3353 * C349 - C32053 * C364) *
                 C30875 +
             (C3352 * C355 - C32208 * C374 + C3353 * C365 - C32053 * C379) *
                 C32188 +
             (C3879 - C3880 + C3881 - C3882) * C30856 +
             (C3883 - C3884 + C3885 - C3886) * C31874) *
                C5245 +
            ((C5125 - C5126 + C5127 - C5128) * C30875 +
             (C5129 - C5130 + C5131 - C5132) * C32188 +
             (C4915 - C4916 + C4917 - C4918) * C30856 +
             (C4919 - C4920 + C4921 - C4922) * C31874) *
                C5246 +
            ((C9085 - C9086 + C9087 - C9088) * C30875 +
             (C9089 - C9090 + C9091 - C9092) * C32188 +
             (C8883 - C8884 + C8885 - C8886) * C30856 +
             (C8887 - C8888 + C8889 - C8890) * C31874) *
                C32238) *
               C573) *
              C466 +
          ((((C4332 - C4331 + C4334 - C4333) * C30875 +
             (C4336 - C4335 + C4338 - C4337) * C32188 + C4717 * C30856 +
             C4718 * C31874) *
                C5245 +
            ((C4339 - C4340 + C4341 - C4342) * C30875 +
             (C4343 - C4344 + C4345 - C4346) * C32188 + C8687 * C30856 +
             C8688 * C31874) *
                C5246 +
            ((C8316 - C8317 + C8318 - C8319) * C30875 +
             (C8320 - C8321 + C8322 - C8323) * C32188 +
             (C8324 - C8325 + C8326 - C8327) * C30856 +
             (C8328 - C8329 + C8330 - C8331) * C31874) *
                C32238) *
               C572 +
           (((C5126 - C5125 + C5128 - C5127) * C30875 +
             (C5130 - C5129 + C5132 - C5131) * C32188 +
             (C4916 - C4915 + C4918 - C4917) * C30856 +
             (C4920 - C4919 + C4922 - C4921) * C31874) *
                C5245 +
            ((C9086 - C9085 + C9088 - C9087) * C30875 +
             (C9090 - C9089 + C9092 - C9091) * C32188 +
             (C8884 - C8883 + C8886 - C8885) * C30856 +
             (C8888 - C8887 + C8890 - C8889) * C31874) *
                C5246 +
            ((C32208 * C1621 - C3352 * C1618 + C32053 * C6147 - C3353 * C6143) *
                 C30875 +
             (C32208 * C1627 - C3352 * C1622 + C32053 * C6152 - C3353 * C6148) *
                 C32188 +
             (C32208 * C1623 - C3352 * C1619 + C32053 * C6962 - C3353 * C6961) *
                 C30856 +
             (C32208 * C1628 - C3352 * C1624 + C32053 * C6964 - C3353 * C6963) *
                 C31874) *
                C32238) *
               C573) *
              C467) *
         C31899) /
            (p * q * std::sqrt(p + q));
    d2ee[117] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C32208 * C126 - C3352 * C119 + C32053 * C354 - C3353 * C344) *
               C2654 +
           (C32208 * C140 - C3352 * C127 + C32053 * C374 - C3353 * C355) *
               C2648 +
           (C3355 - C3356 + C3357 - C3358) * C2655 +
           (C3359 - C3360 + C3361 - C3362) * C2649 + C3395 * C2656 +
           C3396 * C2650 + C3397 * C2657 + C3398 * C32242) *
              C31955 * C31925 * C235 +
          ((C3352 * C239 - C32208 * C249 + C3353 * C676 - C32053 * C681) *
               C2654 +
           (C3352 * C250 - C32208 * C269 + C3353 * C682 - C32053 * C691) *
               C2648 +
           (C3352 * C240 - C32208 * C251 + C3353 * C677 - C32053 * C683) *
               C2655 +
           (C3352 * C252 - C32208 * C270 + C3353 * C684 - C32053 * C692) *
               C2649 +
           (C3352 * C241 - C32208 * C253 + C3353 * C678 - C32053 * C685) *
               C2656 +
           (C3352 * C254 - C32208 * C271 + C3353 * C686 - C32053 * C693) *
               C2650 +
           (C3352 * C242 - C32208 * C255 + C3353 * C679 - C32053 * C687) *
               C2657 +
           (C3352 * C256 - C32208 * C272 + C3353 * C688 - C32053 * C694) *
               C32242) *
              C31955 * C31925 * C236 +
          ((C32208 * C259 - C3352 * C244 + C32053 * C1119 - C3353 * C1110) *
               C2654 +
           (C32208 * C274 - C3352 * C260 + C32053 * C1137 - C3353 * C1120) *
               C2648 +
           (C32208 * C261 - C3352 * C245 + C32053 * C1121 - C3353 * C1111) *
               C2655 +
           (C32208 * C275 - C3352 * C262 + C32053 * C1138 - C3353 * C1122) *
               C2649 +
           (C32208 * C263 - C3352 * C246 + C32053 * C1123 - C3353 * C1112) *
               C2656 +
           (C32208 * C276 - C3352 * C264 + C32053 * C1139 - C3353 * C1124) *
               C2650 +
           (C32208 * C265 - C3352 * C247 + C32053 * C1453 - C3353 * C1452) *
               C2657 +
           (C32208 * C277 - C3352 * C266 + C32053 * C1455 - C3353 * C1454) *
               C32242) *
              C31955 * C31925 * C237) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C32208 * C126 - C3352 * C119 + C32053 * C354 - C3353 * C344) *
               C2654 +
           (C32208 * C140 - C3352 * C127 + C32053 * C374 - C3353 * C355) *
               C2648 +
           (C3355 - C3356 + C3357 - C3358) * C2655 +
           (C3359 - C3360 + C3361 - C3362) * C2649 + C3395 * C2656 +
           C3396 * C2650 + C3397 * C2657 + C3398 * C32242) *
              C31955 * C31925 * C31911 * C110 +
          ((C3356 - C3355 + C3358 - C3357) * C2654 +
           (C3360 - C3359 + C3362 - C3361) * C2648 +
           (C3364 - C3363 + C3366 - C3365) * C2655 +
           (C3368 - C3367 + C3370 - C3369) * C2649 +
           (C3372 - C3371 + C3374 - C3373) * C2656 +
           (C3376 - C3375 + C3378 - C3377) * C2650 +
           (C3379 - C3380 + C3381 - C3382) * C2657 +
           (C3383 - C3384 + C3385 - C3386) * C32242) *
              C31955 * C31925 * C31911 * C111 +
          (C3395 * C2654 + C3396 * C2648 + C3397 * C2655 + C3398 * C2649 +
           (C3380 - C3379 + C3382 - C3381) * C2656 +
           (C3384 - C3383 + C3386 - C3385) * C2650 +
           (C32208 * C136 - C3352 * C124 + C32053 * C575 - C3353 * C574) *
               C2657 +
           (C32208 * C145 - C3352 * C137 + C32053 * C577 - C3353 * C576) *
               C32242) *
              C31955 * C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C32208 * C126 - C3352 * C119 + C32053 * C354 - C3353 * C344) *
               C2654 +
           (C32208 * C140 - C3352 * C127 + C32053 * C374 - C3353 * C355) *
               C2648 +
           (C3355 - C3356 + C3357 - C3358) * C2655 +
           (C3359 - C3360 + C3361 - C3362) * C2649 + C3395 * C2656 +
           C3396 * C2650 + C3397 * C2657 + C3398 * C32242) *
              C31955 * C341 +
          ((C3352 * C344 - C32208 * C354 + C3353 * C349 - C32053 * C364) *
               C2654 +
           (C3352 * C355 - C32208 * C374 + C3353 * C365 - C32053 * C379) *
               C2648 +
           (C3352 * C345 - C32208 * C356 + C3353 * C350 - C32053 * C366) *
               C2655 +
           (C3352 * C357 - C32208 * C375 + C3353 * C367 - C32053 * C380) *
               C2649 +
           (C3352 * C346 - C32208 * C358 + C3353 * C351 - C32053 * C368) *
               C2656 +
           (C3352 * C359 - C32208 * C376 + C3353 * C369 - C32053 * C381) *
               C2650 +
           (C3352 * C347 - C32208 * C360 + C3353 * C352 - C32053 * C370) *
               C2657 +
           (C3352 * C361 - C32208 * C377 + C3353 * C371 - C32053 * C382) *
               C32242) *
              C31955 * C342 +
          ((C32208 * C364 - C3352 * C349 + C32053 * C2026 - C3353 * C2020) *
               C2654 +
           (C32208 * C379 - C3352 * C365 + C32053 * C2038 - C3353 * C2027) *
               C2648 +
           (C32208 * C366 - C3352 * C350 + C32053 * C2028 - C3353 * C2021) *
               C2655 +
           (C32208 * C380 - C3352 * C367 + C32053 * C2039 - C3353 * C2029) *
               C2649 +
           (C32208 * C368 - C3352 * C351 + C32053 * C2030 - C3353 * C2022) *
               C2656 +
           (C32208 * C381 - C3352 * C369 + C32053 * C2040 - C3353 * C2031) *
               C2650 +
           (C32208 * C370 - C3352 * C352 + C32053 * C2365 - C3353 * C2364) *
               C2657 +
           (C32208 * C382 - C3352 * C371 + C32053 * C2367 - C3353 * C2366) *
               C32242) *
              C31955 * C343) *
         C31911 * C31899) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C32208 * C126 - C3352 * C119 + C32053 * C354 - C3353 * C344) *
                C30875 +
            (C32208 * C140 - C3352 * C127 + C32053 * C374 - C3353 * C355) *
                C32188 +
            (C3355 - C3356 + C3357 - C3358) * C30856 +
            (C3359 - C3360 + C3361 - C3362) * C31874) *
               C5245 +
           ((C4331 - C4332 + C4333 - C4334) * C30875 +
            (C4335 - C4336 + C4337 - C4338) * C32188 + C4715 * C30856 +
            C4716 * C31874) *
               C5246 +
           ((C4340 - C4339 + C4342 - C4341) * C30875 +
            (C4344 - C4343 + C4346 - C4345) * C32188 +
            (C4348 - C4347 + C4350 - C4349) * C30856 +
            (C4352 - C4351 + C4354 - C4353) * C31874) *
               C32238) *
              C31925 * C31911 * C110 +
          (((C3356 - C3355 + C3358 - C3357) * C30875 +
            (C3360 - C3359 + C3362 - C3361) * C32188 +
            (C3364 - C3363 + C3366 - C3365) * C30856 +
            (C3368 - C3367 + C3370 - C3369) * C31874) *
               C5245 +
           (C4717 * C30875 + C4718 * C32188 + C4719 * C30856 + C4720 * C31874) *
               C5246 +
           ((C4347 - C4348 + C4349 - C4350) * C30875 +
            (C4351 - C4352 + C4353 - C4354) * C32188 +
            (C4355 - C4356 + C4357 - C4358) * C30856 +
            (C4359 - C4360 + C4361 - C4362) * C31874) *
               C32238) *
              C31925 * C31911 * C111 +
          ((C3395 * C30875 + C3396 * C32188 + C3397 * C30856 + C3398 * C31874) *
               C5245 +
           (C4183 * C30875 + C4184 * C32188 +
            (C3742 - C3741 + C3744 - C3743) * C30856 +
            (C3746 - C3745 + C3748 - C3747) * C31874) *
               C5246 +
           ((C4356 - C4355 + C4358 - C4357) * C30875 +
            (C4360 - C4359 + C4362 - C4361) * C32188 +
            (C32208 * C265 - C3352 * C247 + C32053 * C1453 - C3353 * C1452) *
                C30856 +
            (C32208 * C277 - C3352 * C266 + C32053 * C1455 - C3353 * C1454) *
                C31874) *
               C32238) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C32208 * C126 - C3352 * C119 + C32053 * C354 - C3353 * C344) *
                C30875 +
            (C32208 * C140 - C3352 * C127 + C32053 * C374 - C3353 * C355) *
                C32188 +
            (C3355 - C3356 + C3357 - C3358) * C30856 +
            (C3359 - C3360 + C3361 - C3362) * C31874) *
               C5245 +
           ((C4331 - C4332 + C4333 - C4334) * C30875 +
            (C4335 - C4336 + C4337 - C4338) * C32188 + C4715 * C30856 +
            C4716 * C31874) *
               C5246 +
           C8342 * C32238) *
              C31925 * C235 +
          (((C4332 - C4331 + C4334 - C4333) * C30875 +
            (C4336 - C4335 + C4338 - C4337) * C32188 + C4717 * C30856 +
            C4718 * C31874) *
               C5245 +
           ((C4339 - C4340 + C4341 - C4342) * C30875 +
            (C4343 - C4344 + C4345 - C4346) * C32188 +
            (C4347 - C4348 + C4349 - C4350) * C30856 +
            (C4351 - C4352 + C4353 - C4354) * C31874) *
               C5246 +
           ((C8316 - C8317 + C8318 - C8319) * C30875 +
            (C8320 - C8321 + C8322 - C8323) * C32188 +
            (C8324 - C8325 + C8326 - C8327) * C30856 +
            (C8328 - C8329 + C8330 - C8331) * C31874) *
               C32238) *
              C31925 * C236 +
          (C8342 * C5245 +
           ((C8317 - C8316 + C8319 - C8318) * C30875 +
            (C8321 - C8320 + C8323 - C8322) * C32188 +
            (C8325 - C8324 + C8327 - C8326) * C30856 +
            (C8329 - C8328 + C8331 - C8330) * C31874) *
               C5246 +
           ((C32208 * C953 - C3352 * C944 + C32053 * C6145 - C3353 * C6142) *
                C30875 +
            (C32208 * C962 - C3352 * C954 + C32053 * C6151 - C3353 * C6146) *
                C32188 +
            (C32208 * C955 - C3352 * C945 + C32053 * C6327 - C3353 * C6326) *
                C30856 +
            (C32208 * C963 - C3352 * C956 + C32053 * C6329 - C3353 * C6328) *
                C31874) *
               C32238) *
              C31925 * C237) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C32208 * C126 - C3352 * C119 + C32053 * C354 - C3353 * C344) *
                C30875 +
            (C32208 * C140 - C3352 * C127 + C32053 * C374 - C3353 * C355) *
                C32188 +
            (C3355 - C3356 + C3357 - C3358) * C30856 +
            (C3359 - C3360 + C3361 - C3362) * C31874) *
               C5245 +
           ((C4331 - C4332 + C4333 - C4334) * C30875 +
            (C4335 - C4336 + C4337 - C4338) * C32188 + C4715 * C30856 +
            C4716 * C31874) *
               C5246 +
           C8342 * C32238) *
              C341 +
          (((C3352 * C344 - C32208 * C354 + C3353 * C349 - C32053 * C364) *
                C30875 +
            (C3352 * C355 - C32208 * C374 + C3353 * C365 - C32053 * C379) *
                C32188 +
            (C3879 - C3880 + C3881 - C3882) * C30856 +
            (C3883 - C3884 + C3885 - C3886) * C31874) *
               C5245 +
           ((C5125 - C5126 + C5127 - C5128) * C30875 +
            (C5129 - C5130 + C5131 - C5132) * C32188 +
            (C4915 - C4916 + C4917 - C4918) * C30856 +
            (C4919 - C4920 + C4921 - C4922) * C31874) *
               C5246 +
           ((C3352 * C1110 - C32208 * C1119 + C3353 * C1116 - C32053 * C1131) *
                C30875 +
            (C3352 * C1120 - C32208 * C1137 + C3353 * C1132 - C32053 * C1143) *
                C32188 +
            (C3352 * C1111 - C32208 * C1121 + C3353 * C1117 - C32053 * C1133) *
                C30856 +
            (C3352 * C1122 - C32208 * C1138 + C3353 * C1134 - C32053 * C1144) *
                C31874) *
               C32238) *
              C342 +
          (((C32208 * C364 - C3352 * C349 + C32053 * C2026 - C3353 * C2020) *
                C30875 +
            (C32208 * C379 - C3352 * C365 + C32053 * C2038 - C3353 * C2027) *
                C32188 +
            (C32208 * C366 - C3352 * C350 + C32053 * C2028 - C3353 * C2021) *
                C30856 +
            (C32208 * C380 - C3352 * C367 + C32053 * C2039 - C3353 * C2029) *
                C31874) *
               C5245 +
           ((C32208 * C1125 - C3352 * C1113 + C32053 * C2541 - C3353 * C2538) *
                C30875 +
            (C32208 * C1140 - C3352 * C1126 + C32053 * C2547 - C3353 * C2542) *
                C32188 +
            (C32208 * C1127 - C3352 * C1114 + C32053 * C2543 - C3353 * C2539) *
                C30856 +
            (C32208 * C1141 - C3352 * C1128 + C32053 * C2548 - C3353 * C2544) *
                C31874) *
               C5246 +
           ((C32208 * C1131 - C3352 * C1116 + C32053 * C6806 - C3353 * C6803) *
                C30875 +
            (C32208 * C1143 - C3352 * C1132 + C32053 * C6812 - C3353 * C6807) *
                C32188 +
            (C32208 * C1133 - C3352 * C1117 + C32053 * C7124 - C3353 * C7123) *
                C30856 +
            (C32208 * C1144 - C3352 * C1134 + C32053 * C7126 - C3353 * C7125) *
                C31874) *
               C32238) *
              C343) *
         C31911 * C31899) /
            (p * q * std::sqrt(p + q));
    d2ee[118] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C32208 * C126 - C3352 * C119 + C32053 * C354 - C3353 * C344) *
                C2654 +
            (C32208 * C140 - C3352 * C127 + C32053 * C374 - C3353 * C355) *
                C2648 +
            (C3355 - C3356 + C3357 - C3358) * C2655 +
            (C3359 - C3360 + C3361 - C3362) * C2649 + C3395 * C2656 +
            C3396 * C2650 + C3397 * C2657 + C3398 * C32242) *
               C31955 * C572 +
           ((C3352 * C344 - C32208 * C354 + C3353 * C349 - C32053 * C364) *
                C2654 +
            (C3352 * C355 - C32208 * C374 + C3353 * C365 - C32053 * C379) *
                C2648 +
            (C3879 - C3880 + C3881 - C3882) * C2655 +
            (C3883 - C3884 + C3885 - C3886) * C2649 +
            (C3887 - C3888 + C3889 - C3890) * C2656 +
            (C3891 - C3892 + C3893 - C3894) * C2650 +
            (C3895 - C3896 + C3897 - C3898) * C2657 +
            (C3899 - C3900 + C3901 - C3902) * C32242) *
               C31955 * C573) *
              C31911 * C468 +
          (((C3356 - C3355 + C3358 - C3357) * C2654 +
            (C3360 - C3359 + C3362 - C3361) * C2648 +
            (C3364 - C3363 + C3366 - C3365) * C2655 +
            (C3368 - C3367 + C3370 - C3369) * C2649 +
            (C3372 - C3371 + C3374 - C3373) * C2656 +
            (C3376 - C3375 + C3378 - C3377) * C2650 +
            (C3379 - C3380 + C3381 - C3382) * C2657 +
            (C3383 - C3384 + C3385 - C3386) * C32242) *
               C31955 * C572 +
           ((C3880 - C3879 + C3882 - C3881) * C2654 +
            (C3884 - C3883 + C3886 - C3885) * C2648 +
            (C3888 - C3887 + C3890 - C3889) * C2655 +
            (C3892 - C3891 + C3894 - C3893) * C2649 +
            (C3896 - C3895 + C3898 - C3897) * C2656 +
            (C3900 - C3899 + C3902 - C3901) * C2650 +
            (C32208 * C362 - C3352 * C348 + C32053 * C372 - C3353 * C353) *
                C2657 +
            (C32208 * C378 - C3352 * C363 + C32053 * C383 - C3353 * C373) *
                C32242) *
               C31955 * C573) *
              C31911 * C469)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C32208 * C126 - C3352 * C119 + C32053 * C354 - C3353 * C344) *
                 C30875 +
             (C32208 * C140 - C3352 * C127 + C32053 * C374 - C3353 * C355) *
                 C32188 +
             (C3355 - C3356 + C3357 - C3358) * C30856 +
             (C3359 - C3360 + C3361 - C3362) * C31874) *
                C5245 +
            ((C4331 - C4332 + C4333 - C4334) * C30875 +
             (C4335 - C4336 + C4337 - C4338) * C32188 + C4715 * C30856 +
             C4716 * C31874) *
                C5246 +
            C8342 * C32238) *
               C572 +
           (((C3352 * C344 - C32208 * C354 + C3353 * C349 - C32053 * C364) *
                 C30875 +
             (C3352 * C355 - C32208 * C374 + C3353 * C365 - C32053 * C379) *
                 C32188 +
             (C3879 - C3880 + C3881 - C3882) * C30856 +
             (C3883 - C3884 + C3885 - C3886) * C31874) *
                C5245 +
            ((C5125 - C5126 + C5127 - C5128) * C30875 +
             (C5129 - C5130 + C5131 - C5132) * C32188 +
             (C4915 - C4916 + C4917 - C4918) * C30856 +
             (C4919 - C4920 + C4921 - C4922) * C31874) *
                C5246 +
            ((C3352 * C1110 - C32208 * C1119 + C3353 * C1116 - C32053 * C1131) *
                 C30875 +
             (C3352 * C1120 - C32208 * C1137 + C3353 * C1132 - C32053 * C1143) *
                 C32188 +
             (C8883 - C8884 + C8885 - C8886) * C30856 +
             (C8887 - C8888 + C8889 - C8890) * C31874) *
                C32238) *
               C573) *
              C31911 * C468 +
          ((((C3356 - C3355 + C3358 - C3357) * C30875 +
             (C3360 - C3359 + C3362 - C3361) * C32188 +
             (C3364 - C3363 + C3366 - C3365) * C30856 +
             (C3368 - C3367 + C3370 - C3369) * C31874) *
                C5245 +
            (C4717 * C30875 + C4718 * C32188 + C4719 * C30856 +
             C4720 * C31874) *
                C5246 +
            (C8687 * C30875 + C8688 * C32188 +
             (C4355 - C4356 + C4357 - C4358) * C30856 +
             (C4359 - C4360 + C4361 - C4362) * C31874) *
                C32238) *
               C572 +
           (((C3880 - C3879 + C3882 - C3881) * C30875 +
             (C3884 - C3883 + C3886 - C3885) * C32188 +
             (C3888 - C3887 + C3890 - C3889) * C30856 +
             (C3892 - C3891 + C3894 - C3893) * C31874) *
                C5245 +
            ((C4916 - C4915 + C4918 - C4917) * C30875 +
             (C4920 - C4919 + C4922 - C4921) * C32188 +
             (C4924 - C4923 + C4926 - C4925) * C30856 +
             (C4928 - C4927 + C4930 - C4929) * C31874) *
                C5246 +
            ((C8884 - C8883 + C8886 - C8885) * C30875 +
             (C8888 - C8887 + C8890 - C8889) * C32188 +
             (C32208 * C1123 - C3352 * C1112 + C32053 * C1135 - C3353 * C1118) *
                 C30856 +
             (C32208 * C1139 - C3352 * C1124 + C32053 * C1145 - C3353 * C1136) *
                 C31874) *
                C32238) *
               C573) *
              C31911 * C469)) /
            (p * q * std::sqrt(p + q));
    d2ee[119] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C32208 * C126 - C3352 * C119 + C32053 * C354 - C3353 * C344) *
               C2654 +
           (C32208 * C140 - C3352 * C127 + C32053 * C374 - C3353 * C355) *
               C2648 +
           (C3355 - C3356 + C3357 - C3358) * C2655 +
           (C3359 - C3360 + C3361 - C3362) * C2649 + C3395 * C2656 +
           C3396 * C2650 + C3397 * C2657 + C3398 * C32242) *
              C31955 * C31925 * C31911 * C110 +
          ((C3356 - C3355 + C3358 - C3357) * C2654 +
           (C3360 - C3359 + C3362 - C3361) * C2648 +
           (C3364 - C3363 + C3366 - C3365) * C2655 +
           (C3368 - C3367 + C3370 - C3369) * C2649 +
           (C3372 - C3371 + C3374 - C3373) * C2656 +
           (C3376 - C3375 + C3378 - C3377) * C2650 +
           (C3379 - C3380 + C3381 - C3382) * C2657 +
           (C3383 - C3384 + C3385 - C3386) * C32242) *
              C31955 * C31925 * C31911 * C111 +
          (C3395 * C2654 + C3396 * C2648 + C3397 * C2655 + C3398 * C2649 +
           (C3380 - C3379 + C3382 - C3381) * C2656 +
           (C3384 - C3383 + C3386 - C3385) * C2650 +
           (C32208 * C136 - C3352 * C124 + C32053 * C575 - C3353 * C574) *
               C2657 +
           (C32208 * C145 - C3352 * C137 + C32053 * C577 - C3353 * C576) *
               C32242) *
              C31955 * C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C32208 * C126 - C3352 * C119 + C32053 * C354 - C3353 * C344) *
               C2654 +
           (C32208 * C140 - C3352 * C127 + C32053 * C374 - C3353 * C355) *
               C2648 +
           (C3355 - C3356 + C3357 - C3358) * C2655 +
           (C3359 - C3360 + C3361 - C3362) * C2649 + C3395 * C2656 +
           C3396 * C2650 + C3397 * C2657 + C3398 * C32242) *
              C31955 * C31925 * C235 +
          ((C3352 * C239 - C32208 * C249 + C3353 * C676 - C32053 * C681) *
               C2654 +
           (C3352 * C250 - C32208 * C269 + C3353 * C682 - C32053 * C691) *
               C2648 +
           (C3352 * C240 - C32208 * C251 + C3353 * C677 - C32053 * C683) *
               C2655 +
           (C3352 * C252 - C32208 * C270 + C3353 * C684 - C32053 * C692) *
               C2649 +
           (C3352 * C241 - C32208 * C253 + C3353 * C678 - C32053 * C685) *
               C2656 +
           (C3352 * C254 - C32208 * C271 + C3353 * C686 - C32053 * C693) *
               C2650 +
           (C3352 * C242 - C32208 * C255 + C3353 * C679 - C32053 * C687) *
               C2657 +
           (C3352 * C256 - C32208 * C272 + C3353 * C688 - C32053 * C694) *
               C32242) *
              C31955 * C31925 * C236 +
          ((C32208 * C259 - C3352 * C244 + C32053 * C1119 - C3353 * C1110) *
               C2654 +
           (C32208 * C274 - C3352 * C260 + C32053 * C1137 - C3353 * C1120) *
               C2648 +
           (C32208 * C261 - C3352 * C245 + C32053 * C1121 - C3353 * C1111) *
               C2655 +
           (C32208 * C275 - C3352 * C262 + C32053 * C1138 - C3353 * C1122) *
               C2649 +
           (C32208 * C263 - C3352 * C246 + C32053 * C1123 - C3353 * C1112) *
               C2656 +
           (C32208 * C276 - C3352 * C264 + C32053 * C1139 - C3353 * C1124) *
               C2650 +
           (C32208 * C265 - C3352 * C247 + C32053 * C1453 - C3353 * C1452) *
               C2657 +
           (C32208 * C277 - C3352 * C266 + C32053 * C1455 - C3353 * C1454) *
               C32242) *
              C31955 * C31925 * C237) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C32208 * C126 - C3352 * C119 + C32053 * C354 - C3353 * C344) *
                C30875 +
            (C32208 * C140 - C3352 * C127 + C32053 * C374 - C3353 * C355) *
                C32188 +
            (C3355 - C3356 + C3357 - C3358) * C30856 +
            (C3359 - C3360 + C3361 - C3362) * C31874) *
               C5245 +
           ((C4331 - C4332 + C4333 - C4334) * C30875 +
            (C4335 - C4336 + C4337 - C4338) * C32188 + C4715 * C30856 +
            C4716 * C31874) *
               C5246 +
           ((C4340 - C4339 + C4342 - C4341) * C30875 +
            (C4344 - C4343 + C4346 - C4345) * C32188 +
            (C4348 - C4347 + C4350 - C4349) * C30856 +
            (C4352 - C4351 + C4354 - C4353) * C31874) *
               C32238) *
              C31925 * C31911 * C110 +
          (((C3356 - C3355 + C3358 - C3357) * C30875 +
            (C3360 - C3359 + C3362 - C3361) * C32188 +
            (C3364 - C3363 + C3366 - C3365) * C30856 +
            (C3368 - C3367 + C3370 - C3369) * C31874) *
               C5245 +
           (C4717 * C30875 + C4718 * C32188 + C4719 * C30856 + C4720 * C31874) *
               C5246 +
           ((C4347 - C4348 + C4349 - C4350) * C30875 +
            (C4351 - C4352 + C4353 - C4354) * C32188 +
            (C4355 - C4356 + C4357 - C4358) * C30856 +
            (C4359 - C4360 + C4361 - C4362) * C31874) *
               C32238) *
              C31925 * C31911 * C111 +
          ((C3395 * C30875 + C3396 * C32188 + C3397 * C30856 + C3398 * C31874) *
               C5245 +
           (C4183 * C30875 + C4184 * C32188 +
            (C3742 - C3741 + C3744 - C3743) * C30856 +
            (C3746 - C3745 + C3748 - C3747) * C31874) *
               C5246 +
           ((C4356 - C4355 + C4358 - C4357) * C30875 +
            (C4360 - C4359 + C4362 - C4361) * C32188 +
            (C32208 * C265 - C3352 * C247 + C32053 * C1453 - C3353 * C1452) *
                C30856 +
            (C32208 * C277 - C3352 * C266 + C32053 * C1455 - C3353 * C1454) *
                C31874) *
               C32238) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C32208 * C126 - C3352 * C119 + C32053 * C354 - C3353 * C344) *
                C30875 +
            (C32208 * C140 - C3352 * C127 + C32053 * C374 - C3353 * C355) *
                C32188 +
            (C3355 - C3356 + C3357 - C3358) * C30856 +
            (C3359 - C3360 + C3361 - C3362) * C31874) *
               C5245 +
           ((C4331 - C4332 + C4333 - C4334) * C30875 +
            (C4335 - C4336 + C4337 - C4338) * C32188 + C4715 * C30856 +
            C4716 * C31874) *
               C5246 +
           C8342 * C32238) *
              C31925 * C235 +
          (((C4332 - C4331 + C4334 - C4333) * C30875 +
            (C4336 - C4335 + C4338 - C4337) * C32188 + C4717 * C30856 +
            C4718 * C31874) *
               C5245 +
           ((C4339 - C4340 + C4341 - C4342) * C30875 +
            (C4343 - C4344 + C4345 - C4346) * C32188 +
            (C4347 - C4348 + C4349 - C4350) * C30856 +
            (C4351 - C4352 + C4353 - C4354) * C31874) *
               C5246 +
           ((C8316 - C8317 + C8318 - C8319) * C30875 +
            (C8320 - C8321 + C8322 - C8323) * C32188 +
            (C8324 - C8325 + C8326 - C8327) * C30856 +
            (C8328 - C8329 + C8330 - C8331) * C31874) *
               C32238) *
              C31925 * C236 +
          (C8342 * C5245 +
           ((C8317 - C8316 + C8319 - C8318) * C30875 +
            (C8321 - C8320 + C8323 - C8322) * C32188 +
            (C8325 - C8324 + C8327 - C8326) * C30856 +
            (C8329 - C8328 + C8331 - C8330) * C31874) *
               C5246 +
           ((C32208 * C953 - C3352 * C944 + C32053 * C6145 - C3353 * C6142) *
                C30875 +
            (C32208 * C962 - C3352 * C954 + C32053 * C6151 - C3353 * C6146) *
                C32188 +
            (C32208 * C955 - C3352 * C945 + C32053 * C6327 - C3353 * C6326) *
                C30856 +
            (C32208 * C963 - C3352 * C956 + C32053 * C6329 - C3353 * C6328) *
                C31874) *
               C32238) *
              C31925 * C237) *
         C31899) /
            (p * q * std::sqrt(p + q));
    d2ee[120] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C31966 * C126 - C113 * C119) * C114 +
            (C31966 * C140 - C113 * C127) * C102 + (C148 - C149) * C115 +
            (C150 - C151) * C103 + C168 * C116 + C169 * C104 + C170 * C117 +
            C171 * C105 + C172 * C118 + C173 * C106) *
               C31955 * C31925 * C466 +
           ((C113 * C239 - C31966 * C249) * C114 +
            (C113 * C250 - C31966 * C269) * C102 + (C475 - C476) * C115 +
            (C477 - C478) * C103 + (C479 - C480) * C116 + (C481 - C482) * C104 +
            (C483 - C484) * C117 + (C485 - C486) * C105 + (C487 - C488) * C118 +
            (C489 - C490) * C106) *
               C31955 * C31925 * C467) *
              C468 +
          (((C149 - C148) * C114 + (C151 - C150) * C102 + (C153 - C152) * C115 +
            (C155 - C154) * C103 + (C157 - C156) * C116 + (C159 - C158) * C104 +
            (C161 - C160) * C117 + (C163 - C162) * C105 + (C164 - C165) * C118 +
            (C166 - C167) * C106) *
               C31955 * C31925 * C466 +
           ((C476 - C475) * C114 + (C478 - C477) * C102 + (C480 - C479) * C115 +
            (C482 - C481) * C103 + (C484 - C483) * C116 + (C486 - C485) * C104 +
            (C488 - C487) * C117 + (C490 - C489) * C105 +
            (C31966 * C471 - C113 * C470) * C118 +
            (C31966 * C473 - C113 * C472) * C106) *
               C31955 * C31925 * C467) *
              C469)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C31966 * C126 - C113 * C119) * C812 +
             (C31966 * C140 - C113 * C127) * C806 + (C148 - C149) * C813 +
             (C150 - C151) * C807 + C168 * C814 + C169 * C32227) *
                C32273 +
            ((C966 - C967) * C812 + (C968 - C969) * C806 + C1297 * C813 +
             C1298 * C807 + C816 * C814 + C817 * C32227) *
                C32261 +
            C1000 * C32238) *
               C31925 * C466 +
           (((C967 - C966) * C812 + (C969 - C968) * C806 + C1299 * C813 +
             C1300 * C807 + C1301 * C814 + C1302 * C32227) *
                C32273 +
            ((C971 - C970) * C812 + (C973 - C972) * C806 + C1303 * C813 +
             C1304 * C807 + C1305 * C814 + C1306 * C32227) *
                C32261 +
            ((C978 - C979) * C812 + (C980 - C981) * C806 +
             (C982 - C983) * C813 + (C984 - C985) * C807 +
             (C986 - C987) * C814 + (C988 - C989) * C32227) *
                C32238) *
               C31925 * C467) *
              C468 +
          ((((C149 - C148) * C812 + (C151 - C150) * C806 +
             (C153 - C152) * C813 + (C155 - C154) * C807 +
             (C157 - C156) * C814 + (C159 - C158) * C32227) *
                C32273 +
            (C1299 * C812 + C1300 * C806 + C1301 * C813 + C1302 * C807 +
             (C483 - C484) * C814 + (C485 - C486) * C32227) *
                C32261 +
            (C1303 * C812 + C1304 * C806 + C1305 * C813 + C1306 * C807 +
             (C826 - C827) * C814 + (C828 - C829) * C32227) *
                C32238) *
               C31925 * C466 +
           ((C1297 * C812 + C1298 * C806 + C816 * C813 + C817 * C807 +
             (C484 - C483) * C814 + (C486 - C485) * C32227) *
                C32273 +
            (C974 * C812 + C975 * C806 + C830 * C813 + C831 * C807 +
             (C827 - C826) * C814 + (C829 - C828) * C32227) *
                C32261 +
            ((C983 - C982) * C812 + (C985 - C984) * C806 +
             (C987 - C986) * C813 + (C989 - C988) * C807 +
             (C31966 * C1293 - C113 * C1292) * C814 +
             (C31966 * C1295 - C113 * C1294) * C32227) *
                C32238) *
               C31925 * C467) *
              C469)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C31966 * C126 - C113 * C119) * C5248 +
             (C31966 * C140 - C113 * C127) * C32270 + (C148 - C149) * C5249 +
             (C150 - C151) * C32257 + C168 * C5250 + C169 * C32227) *
                C5245 +
            ((C966 - C967) * C5248 + (C968 - C969) * C32270 + C1297 * C5249 +
             C1298 * C32257 + C816 * C5250 + C817 * C32227) *
                C5246 +
            C5372 * C32238) *
               C31925 * C466 +
           (((C967 - C966) * C5248 + (C969 - C968) * C32270 + C1299 * C5249 +
             C1300 * C32257 + C1301 * C5250 + C1302 * C32227) *
                C5245 +
            ((C971 - C970) * C5248 + (C973 - C972) * C32270 + C1303 * C5249 +
             C1304 * C32257 + C1305 * C5250 + C1306 * C32227) *
                C5246 +
            ((C978 - C979) * C5248 + (C980 - C981) * C32270 +
             (C982 - C983) * C5249 + (C984 - C985) * C32257 +
             (C986 - C987) * C5250 + (C988 - C989) * C32227) *
                C32238) *
               C31925 * C467) *
              C468 +
          ((((C149 - C148) * C5248 + (C151 - C150) * C32270 +
             (C153 - C152) * C5249 + (C155 - C154) * C32257 +
             (C157 - C156) * C5250 + (C159 - C158) * C32227) *
                C5245 +
            (C1299 * C5248 + C1300 * C32270 + C1301 * C5249 + C1302 * C32257 +
             C2987 * C5250 + C2988 * C32227) *
                C5246 +
            (C1303 * C5248 + C1304 * C32270 + C1305 * C5249 + C1306 * C32257 +
             (C826 - C827) * C5250 + (C828 - C829) * C32227) *
                C32238) *
               C31925 * C466 +
           ((C1297 * C5248 + C1298 * C32270 + C816 * C5249 + C817 * C32257 +
             C2659 * C5250 + C2660 * C32227) *
                C5245 +
            (C974 * C5248 + C975 * C32270 + C830 * C5249 + C831 * C32257 +
             (C827 - C826) * C5250 + (C829 - C828) * C32227) *
                C5246 +
            ((C983 - C982) * C5248 + (C985 - C984) * C32270 +
             (C987 - C986) * C5249 + (C989 - C988) * C32257 +
             (C31966 * C1293 - C113 * C1292) * C5250 +
             (C31966 * C1295 - C113 * C1294) * C32227) *
                C32238) *
               C31925 * C467) *
              C469)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C31966 * C126 - C113 * C119) * C5988 +
             (C31966 * C140 - C113 * C127) * C31864) *
                C5983 +
            ((C966 - C967) * C5988 + (C968 - C969) * C31864) * C5984 +
            C6072 * C5985 + C6077 * C5986 + C6080 * C5987) *
               C31925 * C466 +
           (((C967 - C966) * C5988 + (C969 - C968) * C31864) * C5983 +
            ((C971 - C970) * C5988 + (C973 - C972) * C31864) * C5984 +
            ((C978 - C979) * C5988 + (C980 - C981) * C31864) * C5985 +
            ((C6065 - C6064) * C5988 + (C6067 - C6066) * C31864) * C5986 +
            ((C6068 - C6069) * C5988 + (C6070 - C6071) * C31864) * C5987) *
               C31925 * C467) *
              C468 +
          ((((C149 - C148) * C5988 + (C151 - C150) * C31864) * C5983 +
            (C1299 * C5988 + C1300 * C31864) * C5984 +
            (C1303 * C5988 + C1304 * C31864) * C5985 +
            ((C982 - C983) * C5988 + (C984 - C985) * C31864) * C5986 +
            ((C6241 - C6242) * C5988 + (C6243 - C6244) * C31864) * C5987) *
               C31925 * C466 +
           ((C1297 * C5988 + C1298 * C31864) * C5983 +
            (C974 * C5988 + C975 * C31864) * C5984 +
            ((C983 - C982) * C5988 + (C985 - C984) * C31864) * C5985 +
            ((C6242 - C6241) * C5988 + (C6244 - C6243) * C31864) * C5986 +
            ((C31966 * C6237 - C113 * C6236) * C5988 +
             (C31966 * C6239 - C113 * C6238) * C31864) *
                C5987) *
               C31925 * C467) *
              C469)) /
            (p * q * std::sqrt(p + q));
    d2ee[121] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C31966 * C126 - C113 * C119) * C114 +
            (C31966 * C140 - C113 * C127) * C102 + (C148 - C149) * C115 +
            (C150 - C151) * C103 + C168 * C116 + C169 * C104 + C170 * C117 +
            C171 * C105 + C172 * C118 + C173 * C106) *
               C31955 * C572 +
           ((C113 * C344 - C31966 * C354) * C114 +
            (C113 * C355 - C31966 * C374) * C102 + (C579 - C580) * C115 +
            (C581 - C582) * C103 + (C583 - C584) * C116 + (C585 - C586) * C104 +
            (C587 - C588) * C117 + (C589 - C590) * C105 + (C591 - C592) * C118 +
            (C593 - C594) * C106) *
               C31955 * C573) *
              C466 +
          (((C113 * C239 - C31966 * C249) * C114 +
            (C113 * C250 - C31966 * C269) * C102 + (C475 - C476) * C115 +
            (C477 - C478) * C103 + (C479 - C480) * C116 + (C481 - C482) * C104 +
            (C483 - C484) * C117 + (C485 - C486) * C105 + (C487 - C488) * C118 +
            (C489 - C490) * C106) *
               C31955 * C572 +
           ((C31966 * C681 - C113 * C676) * C114 +
            (C31966 * C691 - C113 * C682) * C102 +
            (C31966 * C683 - C113 * C677) * C115 +
            (C31966 * C692 - C113 * C684) * C103 +
            (C31966 * C685 - C113 * C678) * C116 +
            (C31966 * C693 - C113 * C686) * C104 +
            (C31966 * C687 - C113 * C679) * C117 +
            (C31966 * C694 - C113 * C688) * C105 +
            (C31966 * C689 - C113 * C680) * C118 +
            (C31966 * C695 - C113 * C690) * C106) *
               C31955 * C573) *
              C467) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C31966 * C126 - C113 * C119) * C812 +
             (C31966 * C140 - C113 * C127) * C806 + (C148 - C149) * C813 +
             (C150 - C151) * C807 + C168 * C814 + C169 * C32227) *
                C32273 +
            ((C966 - C967) * C812 + (C968 - C969) * C806 + C1297 * C813 +
             C1298 * C807 + C816 * C814 + C817 * C32227) *
                C32261 +
            C1000 * C32238) *
               C572 +
           (((C113 * C344 - C31966 * C354) * C812 +
             (C113 * C355 - C31966 * C374) * C806 + (C579 - C580) * C813 +
             (C581 - C582) * C807 + (C583 - C584) * C814 +
             (C585 - C586) * C32227) *
                C32273 +
            ((C1631 - C1632) * C812 + (C1633 - C1634) * C806 +
             (C1457 - C1458) * C813 + (C1459 - C1460) * C807 +
             (C1461 - C1462) * C814 + (C1463 - C1464) * C32227) *
                C32261 +
            ((C1635 - C1636) * C812 + (C1637 - C1638) * C806 +
             (C1465 - C1466) * C813 + (C1467 - C1468) * C807 +
             (C1469 - C1470) * C814 + (C1471 - C1472) * C32227) *
                C32238) *
               C573) *
              C466 +
          ((((C967 - C966) * C812 + (C969 - C968) * C806 + C1299 * C813 +
             C1300 * C807 + C1301 * C814 + C1302 * C32227) *
                C32273 +
            ((C971 - C970) * C812 + (C973 - C972) * C806 + C1303 * C813 +
             C1304 * C807 + C1305 * C814 + C1306 * C32227) *
                C32261 +
            ((C978 - C979) * C812 + (C980 - C981) * C806 +
             (C982 - C983) * C813 + (C984 - C985) * C807 +
             (C986 - C987) * C814 + (C988 - C989) * C32227) *
                C32238) *
               C572 +
           (((C1632 - C1631) * C812 + (C1634 - C1633) * C806 +
             (C1458 - C1457) * C813 + (C1460 - C1459) * C807 +
             (C1462 - C1461) * C814 + (C1464 - C1463) * C32227) *
                C32273 +
            ((C1636 - C1635) * C812 + (C1638 - C1637) * C806 +
             (C1466 - C1465) * C813 + (C1468 - C1467) * C807 +
             (C1470 - C1469) * C814 + (C1472 - C1471) * C32227) *
                C32261 +
            ((C31966 * C1621 - C113 * C1618) * C812 +
             (C31966 * C1627 - C113 * C1622) * C806 +
             (C31966 * C1623 - C113 * C1619) * C813 +
             (C31966 * C1628 - C113 * C1624) * C807 +
             (C31966 * C1625 - C113 * C1620) * C814 +
             (C31966 * C1629 - C113 * C1626) * C32227) *
                C32238) *
               C573) *
              C467) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C31966 * C126 - C113 * C119) * C5248 +
             (C31966 * C140 - C113 * C127) * C32270 + (C148 - C149) * C5249 +
             (C150 - C151) * C32257 + C168 * C5250 + C169 * C32227) *
                C5245 +
            ((C966 - C967) * C5248 + (C968 - C969) * C32270 + C1297 * C5249 +
             C1298 * C32257 + C816 * C5250 + C817 * C32227) *
                C5246 +
            C5372 * C32238) *
               C572 +
           (((C113 * C344 - C31966 * C354) * C5248 +
             (C113 * C355 - C31966 * C374) * C32270 + (C579 - C580) * C5249 +
             (C581 - C582) * C32257 + (C583 - C584) * C5250 +
             (C585 - C586) * C32227) *
                C5245 +
            ((C1631 - C1632) * C5248 + (C1633 - C1634) * C32270 +
             (C1457 - C1458) * C5249 + (C1459 - C1460) * C32257 +
             (C1461 - C1462) * C5250 + (C1463 - C1464) * C32227) *
                C5246 +
            ((C1635 - C1636) * C5248 + (C1637 - C1638) * C32270 +
             (C1465 - C1466) * C5249 + (C1467 - C1468) * C32257 +
             (C1469 - C1470) * C5250 + (C1471 - C1472) * C32227) *
                C32238) *
               C573) *
              C466 +
          ((((C967 - C966) * C5248 + (C969 - C968) * C32270 + C1299 * C5249 +
             C1300 * C32257 + C1301 * C5250 + C1302 * C32227) *
                C5245 +
            ((C971 - C970) * C5248 + (C973 - C972) * C32270 + C1303 * C5249 +
             C1304 * C32257 + C1305 * C5250 + C1306 * C32227) *
                C5246 +
            ((C978 - C979) * C5248 + (C980 - C981) * C32270 +
             (C982 - C983) * C5249 + (C984 - C985) * C32257 +
             (C986 - C987) * C5250 + (C988 - C989) * C32227) *
                C32238) *
               C572 +
           (((C1632 - C1631) * C5248 + (C1634 - C1633) * C32270 +
             (C1458 - C1457) * C5249 + (C1460 - C1459) * C32257 +
             (C1462 - C1461) * C5250 + (C1464 - C1463) * C32227) *
                C5245 +
            ((C1636 - C1635) * C5248 + (C1638 - C1637) * C32270 +
             (C1466 - C1465) * C5249 + (C1468 - C1467) * C32257 +
             (C1470 - C1469) * C5250 + (C1472 - C1471) * C32227) *
                C5246 +
            ((C31966 * C1621 - C113 * C1618) * C5248 +
             (C31966 * C1627 - C113 * C1622) * C32270 +
             (C31966 * C1623 - C113 * C1619) * C5249 +
             (C31966 * C1628 - C113 * C1624) * C32257 +
             (C31966 * C1625 - C113 * C1620) * C5250 +
             (C31966 * C1629 - C113 * C1626) * C32227) *
                C32238) *
               C573) *
              C467) *
         C31899) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C31966 * C126 - C113 * C119) * C5988 +
             (C31966 * C140 - C113 * C127) * C31864) *
                C5983 +
            ((C966 - C967) * C5988 + (C968 - C969) * C31864) * C5984 +
            C6072 * C5985 + C6077 * C5986 + C6080 * C5987) *
               C572 +
           (((C113 * C344 - C31966 * C354) * C5988 +
             (C113 * C355 - C31966 * C374) * C31864) *
                C5983 +
            ((C1631 - C1632) * C5988 + (C1633 - C1634) * C31864) * C5984 +
            ((C1635 - C1636) * C5988 + (C1637 - C1638) * C31864) * C5985 +
            ((C6417 - C6418) * C5988 + (C6419 - C6420) * C31864) * C5986 +
            ((C6421 - C6422) * C5988 + (C6423 - C6424) * C31864) * C5987) *
               C573) *
              C466 +
          ((((C967 - C966) * C5988 + (C969 - C968) * C31864) * C5983 +
            ((C971 - C970) * C5988 + (C973 - C972) * C31864) * C5984 +
            ((C978 - C979) * C5988 + (C980 - C981) * C31864) * C5985 +
            ((C6065 - C6064) * C5988 + (C6067 - C6066) * C31864) * C5986 +
            ((C6068 - C6069) * C5988 + (C6070 - C6071) * C31864) * C5987) *
               C572 +
           (((C1632 - C1631) * C5988 + (C1634 - C1633) * C31864) * C5983 +
            ((C1636 - C1635) * C5988 + (C1638 - C1637) * C31864) * C5984 +
            ((C6418 - C6417) * C5988 + (C6420 - C6419) * C31864) * C5985 +
            ((C6422 - C6421) * C5988 + (C6424 - C6423) * C31864) * C5986 +
            ((C31966 * C6413 - C113 * C6412) * C5988 +
             (C31966 * C6415 - C113 * C6414) * C31864) *
                C5987) *
               C573) *
              C467) *
         C31899) /
            (p * q * std::sqrt(p + q));
    d2ee[122] +=
        (-std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C31966 * C126 - C113 * C119) * C114 +
           (C31966 * C140 - C113 * C127) * C102 + (C148 - C149) * C115 +
           (C150 - C151) * C103 + C168 * C116 + C169 * C104 + C170 * C117 +
           C171 * C105 + C172 * C118 + C173 * C106) *
              C31955 * C31925 * C235 +
          ((C113 * C239 - C31966 * C249) * C114 +
           (C113 * C250 - C31966 * C269) * C102 +
           (C113 * C240 - C31966 * C251) * C115 +
           (C113 * C252 - C31966 * C270) * C103 +
           (C113 * C241 - C31966 * C253) * C116 +
           (C113 * C254 - C31966 * C271) * C104 +
           (C113 * C242 - C31966 * C255) * C117 +
           (C113 * C256 - C31966 * C272) * C105 +
           (C113 * C243 - C31966 * C257) * C118 +
           (C113 * C258 - C31966 * C273) * C106) *
              C31955 * C31925 * C236 +
          ((C31966 * C259 - C113 * C244) * C114 +
           (C31966 * C274 - C113 * C260) * C102 +
           (C31966 * C261 - C113 * C245) * C115 +
           (C31966 * C275 - C113 * C262) * C103 +
           (C31966 * C263 - C113 * C246) * C116 +
           (C31966 * C276 - C113 * C264) * C104 +
           (C31966 * C265 - C113 * C247) * C117 +
           (C31966 * C277 - C113 * C266) * C105 +
           (C31966 * C267 - C113 * C248) * C118 +
           (C31966 * C278 - C113 * C268) * C106) *
              C31955 * C31925 * C237) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C31966 * C126 - C113 * C119) * C114 +
           (C31966 * C140 - C113 * C127) * C102 + (C148 - C149) * C115 +
           (C150 - C151) * C103 + C168 * C116 + C169 * C104 + C170 * C117 +
           C171 * C105 + C172 * C118 + C173 * C106) *
              C31955 * C31925 * C31911 * C110 +
          ((C149 - C148) * C114 + (C151 - C150) * C102 + (C153 - C152) * C115 +
           (C155 - C154) * C103 + (C157 - C156) * C116 + (C159 - C158) * C104 +
           (C161 - C160) * C117 + (C163 - C162) * C105 + (C164 - C165) * C118 +
           (C166 - C167) * C106) *
              C31955 * C31925 * C31911 * C111 +
          (C168 * C114 + C169 * C102 + C170 * C115 + C171 * C103 + C172 * C116 +
           C173 * C104 + (C165 - C164) * C117 + (C167 - C166) * C105 +
           (C31966 * C138 - C113 * C125) * C118 +
           (C31966 * C146 - C113 * C139) * C106) *
              C31955 * C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C31966 * C126 - C113 * C119) * C114 +
           (C31966 * C140 - C113 * C127) * C102 + (C148 - C149) * C115 +
           (C150 - C151) * C103 + C168 * C116 + C169 * C104 + C170 * C117 +
           C171 * C105 + C172 * C118 + C173 * C106) *
              C31955 * C341 +
          ((C113 * C344 - C31966 * C354) * C114 +
           (C113 * C355 - C31966 * C374) * C102 +
           (C113 * C345 - C31966 * C356) * C115 +
           (C113 * C357 - C31966 * C375) * C103 +
           (C113 * C346 - C31966 * C358) * C116 +
           (C113 * C359 - C31966 * C376) * C104 +
           (C113 * C347 - C31966 * C360) * C117 +
           (C113 * C361 - C31966 * C377) * C105 +
           (C113 * C348 - C31966 * C362) * C118 +
           (C113 * C363 - C31966 * C378) * C106) *
              C31955 * C342 +
          ((C31966 * C364 - C113 * C349) * C114 +
           (C31966 * C379 - C113 * C365) * C102 +
           (C31966 * C366 - C113 * C350) * C115 +
           (C31966 * C380 - C113 * C367) * C103 +
           (C31966 * C368 - C113 * C351) * C116 +
           (C31966 * C381 - C113 * C369) * C104 +
           (C31966 * C370 - C113 * C352) * C117 +
           (C31966 * C382 - C113 * C371) * C105 +
           (C31966 * C372 - C113 * C353) * C118 +
           (C31966 * C383 - C113 * C373) * C106) *
              C31955 * C343) *
         C31911 * C31899) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C31966 * C126 - C113 * C119) * C812 +
            (C31966 * C140 - C113 * C127) * C806 + (C148 - C149) * C813 +
            (C150 - C151) * C807 + C168 * C814 + C169 * C32227) *
               C32273 +
           ((C31966 * C249 - C113 * C239) * C812 +
            (C31966 * C269 - C113 * C250) * C806 + (C476 - C475) * C813 +
            (C478 - C477) * C807 + C816 * C814 + C817 * C32227) *
               C32261 +
           ((C31966 * C259 - C113 * C244) * C812 +
            (C31966 * C274 - C113 * C260) * C806 + (C818 - C819) * C813 +
            (C820 - C821) * C807 + C830 * C814 + C831 * C32227) *
               C32238) *
              C31925 * C31911 * C110 +
          (((C149 - C148) * C812 + (C151 - C150) * C806 + (C153 - C152) * C813 +
            (C155 - C154) * C807 + (C157 - C156) * C814 +
            (C159 - C158) * C32227) *
               C32273 +
           ((C475 - C476) * C812 + (C477 - C478) * C806 + (C479 - C480) * C813 +
            (C481 - C482) * C807 + (C483 - C484) * C814 +
            (C485 - C486) * C32227) *
               C32261 +
           ((C819 - C818) * C812 + (C821 - C820) * C806 + (C823 - C822) * C813 +
            (C825 - C824) * C807 + (C826 - C827) * C814 +
            (C828 - C829) * C32227) *
               C32238) *
              C31925 * C31911 * C111 +
          ((C168 * C812 + C169 * C806 + C170 * C813 + C171 * C807 +
            C172 * C814 + C173 * C32227) *
               C32273 +
           (C816 * C812 + C817 * C806 + (C484 - C483) * C813 +
            (C486 - C485) * C807 + (C488 - C487) * C814 +
            (C490 - C489) * C32227) *
               C32261 +
           (C830 * C812 + C831 * C806 + (C827 - C826) * C813 +
            (C829 - C828) * C807 + (C31966 * C267 - C113 * C248) * C814 +
            (C31966 * C278 - C113 * C268) * C32227) *
               C32238) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C31966 * C126 - C113 * C119) * C812 +
            (C31966 * C140 - C113 * C127) * C806 + (C148 - C149) * C813 +
            (C150 - C151) * C807 + C168 * C814 + C169 * C32227) *
               C32273 +
           ((C966 - C967) * C812 + (C968 - C969) * C806 + (C476 - C475) * C813 +
            (C478 - C477) * C807 + C816 * C814 + C817 * C32227) *
               C32261 +
           C1000 * C32238) *
              C31925 * C235 +
          (((C967 - C966) * C812 + (C969 - C968) * C806 + (C475 - C476) * C813 +
            (C477 - C478) * C807 + (C479 - C480) * C814 +
            (C481 - C482) * C32227) *
               C32273 +
           ((C971 - C970) * C812 + (C973 - C972) * C806 + (C819 - C818) * C813 +
            (C821 - C820) * C807 + (C823 - C822) * C814 +
            (C825 - C824) * C32227) *
               C32261 +
           ((C978 - C979) * C812 + (C980 - C981) * C806 + (C982 - C983) * C813 +
            (C984 - C985) * C807 + (C986 - C987) * C814 +
            (C988 - C989) * C32227) *
               C32238) *
              C31925 * C236 +
          (C1000 * C32273 +
           ((C979 - C978) * C812 + (C981 - C980) * C806 + (C983 - C982) * C813 +
            (C985 - C984) * C807 + (C987 - C986) * C814 +
            (C989 - C988) * C32227) *
               C32261 +
           ((C31966 * C953 - C113 * C944) * C812 +
            (C31966 * C962 - C113 * C954) * C806 +
            (C31966 * C955 - C113 * C945) * C813 +
            (C31966 * C963 - C113 * C956) * C807 +
            (C31966 * C957 - C113 * C946) * C814 +
            (C31966 * C964 - C113 * C958) * C32227) *
               C32238) *
              C31925 * C237) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31966 * C126 - C113 * C119) * C812 +
            (C31966 * C140 - C113 * C127) * C806 + (C148 - C149) * C813 +
            (C150 - C151) * C807 + C168 * C814 + C169 * C32227) *
               C32273 +
           ((C966 - C967) * C812 + (C968 - C969) * C806 + (C476 - C475) * C813 +
            (C478 - C477) * C807 + C816 * C814 + C817 * C32227) *
               C32261 +
           C1000 * C32238) *
              C341 +
          (((C113 * C344 - C31966 * C354) * C812 +
            (C113 * C355 - C31966 * C374) * C806 + (C579 - C580) * C813 +
            (C581 - C582) * C807 + (C583 - C584) * C814 +
            (C585 - C586) * C32227) *
               C32273 +
           ((C113 * C676 - C31966 * C681) * C812 +
            (C113 * C682 - C31966 * C691) * C806 +
            (C113 * C677 - C31966 * C683) * C813 +
            (C113 * C684 - C31966 * C692) * C807 +
            (C113 * C678 - C31966 * C685) * C814 +
            (C113 * C686 - C31966 * C693) * C32227) *
               C32261 +
           ((C113 * C1110 - C31966 * C1119) * C812 +
            (C113 * C1120 - C31966 * C1137) * C806 +
            (C113 * C1111 - C31966 * C1121) * C813 +
            (C113 * C1122 - C31966 * C1138) * C807 +
            (C113 * C1112 - C31966 * C1123) * C814 +
            (C113 * C1124 - C31966 * C1139) * C32227) *
               C32238) *
              C342 +
          (((C31966 * C364 - C113 * C349) * C812 +
            (C31966 * C379 - C113 * C365) * C806 +
            (C31966 * C366 - C113 * C350) * C813 +
            (C31966 * C380 - C113 * C367) * C807 +
            (C31966 * C368 - C113 * C351) * C814 +
            (C31966 * C381 - C113 * C369) * C32227) *
               C32273 +
           ((C31966 * C1125 - C113 * C1113) * C812 +
            (C31966 * C1140 - C113 * C1126) * C806 +
            (C31966 * C1127 - C113 * C1114) * C813 +
            (C31966 * C1141 - C113 * C1128) * C807 +
            (C31966 * C1129 - C113 * C1115) * C814 +
            (C31966 * C1142 - C113 * C1130) * C32227) *
               C32261 +
           ((C31966 * C1131 - C113 * C1116) * C812 +
            (C31966 * C1143 - C113 * C1132) * C806 +
            (C31966 * C1133 - C113 * C1117) * C813 +
            (C31966 * C1144 - C113 * C1134) * C807 +
            (C31966 * C1135 - C113 * C1118) * C814 +
            (C31966 * C1145 - C113 * C1136) * C32227) *
               C32238) *
              C343) *
         C31911 * C31899) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C31966 * C126 - C113 * C119) * C5248 +
            (C31966 * C140 - C113 * C127) * C32270 + (C148 - C149) * C5249 +
            (C150 - C151) * C32257 + C168 * C5250 + C169 * C32227) *
               C5245 +
           ((C966 - C967) * C5248 + (C968 - C969) * C32270 + C1297 * C5249 +
            C1298 * C32257 + C816 * C5250 + C817 * C32227) *
               C5246 +
           (C990 * C5248 + C991 * C32270 + C974 * C5249 + C975 * C32257 +
            C830 * C5250 + C831 * C32227) *
               C32238) *
              C31925 * C31911 * C110 +
          (((C149 - C148) * C5248 + (C151 - C150) * C32270 +
            (C153 - C152) * C5249 + (C155 - C154) * C32257 +
            (C157 - C156) * C5250 + (C159 - C158) * C32227) *
               C5245 +
           (C1299 * C5248 + C1300 * C32270 + C1301 * C5249 + C1302 * C32257 +
            C2987 * C5250 + C2988 * C32227) *
               C5246 +
           (C1303 * C5248 + C1304 * C32270 + C1305 * C5249 + C1306 * C32257 +
            (C826 - C827) * C5250 + (C828 - C829) * C32227) *
               C32238) *
              C31925 * C31911 * C111 +
          ((C168 * C5248 + C169 * C32270 + C170 * C5249 + C171 * C32257 +
            C172 * C5250 + C173 * C32227) *
               C5245 +
           (C816 * C5248 + C817 * C32270 + C2659 * C5249 + C2660 * C32257 +
            (C488 - C487) * C5250 + (C490 - C489) * C32227) *
               C5246 +
           (C830 * C5248 + C831 * C32270 + (C827 - C826) * C5249 +
            (C829 - C828) * C32257 + (C31966 * C267 - C113 * C248) * C5250 +
            (C31966 * C278 - C113 * C268) * C32227) *
               C32238) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C31966 * C126 - C113 * C119) * C5248 +
            (C31966 * C140 - C113 * C127) * C32270 + (C148 - C149) * C5249 +
            (C150 - C151) * C32257 + C168 * C5250 + C169 * C32227) *
               C5245 +
           ((C966 - C967) * C5248 + (C968 - C969) * C32270 + C1297 * C5249 +
            C1298 * C32257 + C816 * C5250 + C817 * C32227) *
               C5246 +
           C5372 * C32238) *
              C31925 * C235 +
          (((C967 - C966) * C5248 + (C969 - C968) * C32270 + C1299 * C5249 +
            C1300 * C32257 + C1301 * C5250 + C1302 * C32227) *
               C5245 +
           ((C971 - C970) * C5248 + (C973 - C972) * C32270 + C1303 * C5249 +
            C1304 * C32257 + C1305 * C5250 + C1306 * C32227) *
               C5246 +
           ((C978 - C979) * C5248 + (C980 - C981) * C32270 +
            (C982 - C983) * C5249 + (C984 - C985) * C32257 +
            (C986 - C987) * C5250 + (C988 - C989) * C32227) *
               C32238) *
              C31925 * C236 +
          (C5372 * C5245 +
           ((C979 - C978) * C5248 + (C981 - C980) * C32270 +
            (C983 - C982) * C5249 + (C985 - C984) * C32257 +
            (C987 - C986) * C5250 + (C989 - C988) * C32227) *
               C5246 +
           ((C31966 * C953 - C113 * C944) * C5248 +
            (C31966 * C962 - C113 * C954) * C32270 +
            (C31966 * C955 - C113 * C945) * C5249 +
            (C31966 * C963 - C113 * C956) * C32257 +
            (C31966 * C957 - C113 * C946) * C5250 +
            (C31966 * C964 - C113 * C958) * C32227) *
               C32238) *
              C31925 * C237) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31966 * C126 - C113 * C119) * C5248 +
            (C31966 * C140 - C113 * C127) * C32270 + (C148 - C149) * C5249 +
            (C150 - C151) * C32257 + C168 * C5250 + C169 * C32227) *
               C5245 +
           ((C966 - C967) * C5248 + (C968 - C969) * C32270 + C1297 * C5249 +
            C1298 * C32257 + C816 * C5250 + C817 * C32227) *
               C5246 +
           C5372 * C32238) *
              C341 +
          (((C113 * C344 - C31966 * C354) * C5248 +
            (C113 * C355 - C31966 * C374) * C32270 + (C579 - C580) * C5249 +
            (C581 - C582) * C32257 + (C583 - C584) * C5250 +
            (C585 - C586) * C32227) *
               C5245 +
           ((C1631 - C1632) * C5248 + (C1633 - C1634) * C32270 +
            (C1457 - C1458) * C5249 + (C1459 - C1460) * C32257 +
            (C1461 - C1462) * C5250 + (C1463 - C1464) * C32227) *
               C5246 +
           ((C1635 - C1636) * C5248 + (C1637 - C1638) * C32270 +
            (C1465 - C1466) * C5249 + (C1467 - C1468) * C32257 +
            (C1469 - C1470) * C5250 + (C1471 - C1472) * C32227) *
               C32238) *
              C342 +
          (((C31966 * C364 - C113 * C349) * C5248 +
            (C31966 * C379 - C113 * C365) * C32270 +
            (C31966 * C366 - C113 * C350) * C5249 +
            (C31966 * C380 - C113 * C367) * C32257 +
            (C31966 * C368 - C113 * C351) * C5250 +
            (C31966 * C381 - C113 * C369) * C32227) *
               C5245 +
           ((C31966 * C1125 - C113 * C1113) * C5248 +
            (C31966 * C1140 - C113 * C1126) * C32270 +
            (C31966 * C1127 - C113 * C1114) * C5249 +
            (C31966 * C1141 - C113 * C1128) * C32257 +
            (C31966 * C1129 - C113 * C1115) * C5250 +
            (C31966 * C1142 - C113 * C1130) * C32227) *
               C5246 +
           ((C31966 * C1131 - C113 * C1116) * C5248 +
            (C31966 * C1143 - C113 * C1132) * C32270 +
            (C31966 * C1133 - C113 * C1117) * C5249 +
            (C31966 * C1144 - C113 * C1134) * C32257 +
            (C31966 * C1135 - C113 * C1118) * C5250 +
            (C31966 * C1145 - C113 * C1136) * C32227) *
               C32238) *
              C343) *
         C31911 * C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C31966 * C126 - C113 * C119) * C5988 +
            (C31966 * C140 - C113 * C127) * C31864) *
               C5983 +
           ((C966 - C967) * C5988 + (C968 - C969) * C31864) * C5984 +
           (C990 * C5988 + C991 * C31864) * C5985 +
           ((C979 - C978) * C5988 + (C981 - C980) * C31864) * C5986 +
           ((C31966 * C953 - C113 * C944) * C5988 +
            (C31966 * C962 - C113 * C954) * C31864) *
               C5987) *
              C31925 * C31911 * C110 +
          (((C149 - C148) * C5988 + (C151 - C150) * C31864) * C5983 +
           (C1299 * C5988 + C1300 * C31864) * C5984 +
           (C1303 * C5988 + C1304 * C31864) * C5985 +
           ((C982 - C983) * C5988 + (C984 - C985) * C31864) * C5986 +
           ((C113 * C945 - C31966 * C955) * C5988 +
            (C113 * C956 - C31966 * C963) * C31864) *
               C5987) *
              C31925 * C31911 * C111 +
          ((C168 * C5988 + C169 * C31864) * C5983 +
           (C816 * C5988 + C817 * C31864) * C5984 +
           (C830 * C5988 + C831 * C31864) * C5985 +
           ((C987 - C986) * C5988 + (C989 - C988) * C31864) * C5986 +
           ((C31966 * C957 - C113 * C946) * C5988 +
            (C31966 * C964 - C113 * C958) * C31864) *
               C5987) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C31966 * C126 - C113 * C119) * C5988 +
            (C31966 * C140 - C113 * C127) * C31864) *
               C5983 +
           ((C966 - C967) * C5988 + (C968 - C969) * C31864) * C5984 +
           C6072 * C5985 + C6077 * C5986 + C6080 * C5987) *
              C31925 * C235 +
          (((C967 - C966) * C5988 + (C969 - C968) * C31864) * C5983 +
           ((C971 - C970) * C5988 + (C973 - C972) * C31864) * C5984 +
           ((C978 - C979) * C5988 + (C980 - C981) * C31864) * C5985 +
           ((C6065 - C6064) * C5988 + (C6067 - C6066) * C31864) * C5986 +
           ((C6068 - C6069) * C5988 + (C6070 - C6071) * C31864) * C5987) *
              C31925 * C236 +
          (C6072 * C5983 + C6077 * C5984 + C6080 * C5985 +
           ((C6069 - C6068) * C5988 + (C6071 - C6070) * C31864) * C5986 +
           ((C31966 * C6055 - C113 * C6052) * C5988 +
            (C31966 * C6058 - C113 * C6056) * C31864) *
               C5987) *
              C31925 * C237) *
         C31899) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31966 * C126 - C113 * C119) * C5988 +
            (C31966 * C140 - C113 * C127) * C31864) *
               C5983 +
           ((C966 - C967) * C5988 + (C968 - C969) * C31864) * C5984 +
           C6072 * C5985 + C6077 * C5986 + C6080 * C5987) *
              C341 +
          (((C113 * C344 - C31966 * C354) * C5988 +
            (C113 * C355 - C31966 * C374) * C31864) *
               C5983 +
           ((C1631 - C1632) * C5988 + (C1633 - C1634) * C31864) * C5984 +
           ((C1635 - C1636) * C5988 + (C1637 - C1638) * C31864) * C5985 +
           ((C113 * C1618 - C31966 * C1621) * C5988 +
            (C113 * C1622 - C31966 * C1627) * C31864) *
               C5986 +
           ((C113 * C6142 - C31966 * C6145) * C5988 +
            (C113 * C6146 - C31966 * C6151) * C31864) *
               C5987) *
              C342 +
          (((C31966 * C364 - C113 * C349) * C5988 +
            (C31966 * C379 - C113 * C365) * C31864) *
               C5983 +
           ((C31966 * C1125 - C113 * C1113) * C5988 +
            (C31966 * C1140 - C113 * C1126) * C31864) *
               C5984 +
           ((C31966 * C1131 - C113 * C1116) * C5988 +
            (C31966 * C1143 - C113 * C1132) * C31864) *
               C5985 +
           ((C31966 * C6147 - C113 * C6143) * C5988 +
            (C31966 * C6152 - C113 * C6148) * C31864) *
               C5986 +
           ((C31966 * C6149 - C113 * C6144) * C5988 +
            (C31966 * C6153 - C113 * C6150) * C31864) *
               C5987) *
              C343) *
         C31911 * C31899) /
            (p * q * std::sqrt(p + q));
    d2ee[123] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C31966 * C126 - C113 * C119) * C114 +
            (C31966 * C140 - C113 * C127) * C102 + (C148 - C149) * C115 +
            (C150 - C151) * C103 + C168 * C116 + C169 * C104 + C170 * C117 +
            C171 * C105 + C172 * C118 + C173 * C106) *
               C31955 * C572 +
           ((C113 * C344 - C31966 * C354) * C114 +
            (C113 * C355 - C31966 * C374) * C102 + (C579 - C580) * C115 +
            (C581 - C582) * C103 + (C583 - C584) * C116 + (C585 - C586) * C104 +
            (C587 - C588) * C117 + (C589 - C590) * C105 + (C591 - C592) * C118 +
            (C593 - C594) * C106) *
               C31955 * C573) *
              C31911 * C468 +
          (((C149 - C148) * C114 + (C151 - C150) * C102 + (C153 - C152) * C115 +
            (C155 - C154) * C103 + (C157 - C156) * C116 + (C159 - C158) * C104 +
            (C161 - C160) * C117 + (C163 - C162) * C105 + (C164 - C165) * C118 +
            (C166 - C167) * C106) *
               C31955 * C572 +
           ((C580 - C579) * C114 + (C582 - C581) * C102 + (C584 - C583) * C115 +
            (C586 - C585) * C103 + (C588 - C587) * C116 + (C590 - C589) * C104 +
            (C592 - C591) * C117 + (C594 - C593) * C105 +
            (C31966 * C575 - C113 * C574) * C118 +
            (C31966 * C577 - C113 * C576) * C106) *
               C31955 * C573) *
              C31911 * C469)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C31966 * C126 - C113 * C119) * C812 +
             (C31966 * C140 - C113 * C127) * C806 + (C148 - C149) * C813 +
             (C150 - C151) * C807 + C168 * C814 + C169 * C32227) *
                C32273 +
            ((C966 - C967) * C812 + (C968 - C969) * C806 + C1297 * C813 +
             C1298 * C807 + C816 * C814 + C817 * C32227) *
                C32261 +
            C1000 * C32238) *
               C572 +
           (((C113 * C344 - C31966 * C354) * C812 +
             (C113 * C355 - C31966 * C374) * C806 + (C579 - C580) * C813 +
             (C581 - C582) * C807 + (C583 - C584) * C814 +
             (C585 - C586) * C32227) *
                C32273 +
            ((C113 * C676 - C31966 * C681) * C812 +
             (C113 * C682 - C31966 * C691) * C806 + (C1457 - C1458) * C813 +
             (C1459 - C1460) * C807 + (C1461 - C1462) * C814 +
             (C1463 - C1464) * C32227) *
                C32261 +
            ((C113 * C1110 - C31966 * C1119) * C812 +
             (C113 * C1120 - C31966 * C1137) * C806 + (C1465 - C1466) * C813 +
             (C1467 - C1468) * C807 + (C1469 - C1470) * C814 +
             (C1471 - C1472) * C32227) *
                C32238) *
               C573) *
              C31911 * C468 +
          ((((C149 - C148) * C812 + (C151 - C150) * C806 +
             (C153 - C152) * C813 + (C155 - C154) * C807 +
             (C157 - C156) * C814 + (C159 - C158) * C32227) *
                C32273 +
            (C1299 * C812 + C1300 * C806 + C1301 * C813 + C1302 * C807 +
             (C483 - C484) * C814 + (C485 - C486) * C32227) *
                C32261 +
            (C1303 * C812 + C1304 * C806 + C1305 * C813 + C1306 * C807 +
             (C826 - C827) * C814 + (C828 - C829) * C32227) *
                C32238) *
               C572 +
           (((C580 - C579) * C812 + (C582 - C581) * C806 +
             (C584 - C583) * C813 + (C586 - C585) * C807 +
             (C588 - C587) * C814 + (C590 - C589) * C32227) *
                C32273 +
            ((C1458 - C1457) * C812 + (C1460 - C1459) * C806 +
             (C1462 - C1461) * C813 + (C1464 - C1463) * C807 +
             (C31966 * C687 - C113 * C679) * C814 +
             (C31966 * C694 - C113 * C688) * C32227) *
                C32261 +
            ((C1466 - C1465) * C812 + (C1468 - C1467) * C806 +
             (C1470 - C1469) * C813 + (C1472 - C1471) * C807 +
             (C31966 * C1453 - C113 * C1452) * C814 +
             (C31966 * C1455 - C113 * C1454) * C32227) *
                C32238) *
               C573) *
              C31911 * C469)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C31966 * C126 - C113 * C119) * C5248 +
             (C31966 * C140 - C113 * C127) * C32270 + (C148 - C149) * C5249 +
             (C150 - C151) * C32257 + C168 * C5250 + C169 * C32227) *
                C5245 +
            ((C966 - C967) * C5248 + (C968 - C969) * C32270 + C1297 * C5249 +
             C1298 * C32257 + C816 * C5250 + C817 * C32227) *
                C5246 +
            C5372 * C32238) *
               C572 +
           (((C113 * C344 - C31966 * C354) * C5248 +
             (C113 * C355 - C31966 * C374) * C32270 + (C579 - C580) * C5249 +
             (C581 - C582) * C32257 + (C583 - C584) * C5250 +
             (C585 - C586) * C32227) *
                C5245 +
            ((C1631 - C1632) * C5248 + (C1633 - C1634) * C32270 +
             (C1457 - C1458) * C5249 + (C1459 - C1460) * C32257 +
             (C1461 - C1462) * C5250 + (C1463 - C1464) * C32227) *
                C5246 +
            ((C1635 - C1636) * C5248 + (C1637 - C1638) * C32270 +
             (C1465 - C1466) * C5249 + (C1467 - C1468) * C32257 +
             (C1469 - C1470) * C5250 + (C1471 - C1472) * C32227) *
                C32238) *
               C573) *
              C31911 * C468 +
          ((((C149 - C148) * C5248 + (C151 - C150) * C32270 +
             (C153 - C152) * C5249 + (C155 - C154) * C32257 +
             (C157 - C156) * C5250 + (C159 - C158) * C32227) *
                C5245 +
            (C1299 * C5248 + C1300 * C32270 + C1301 * C5249 + C1302 * C32257 +
             C2987 * C5250 + C2988 * C32227) *
                C5246 +
            (C1303 * C5248 + C1304 * C32270 + C1305 * C5249 + C1306 * C32257 +
             (C826 - C827) * C5250 + (C828 - C829) * C32227) *
                C32238) *
               C572 +
           (((C580 - C579) * C5248 + (C582 - C581) * C32270 +
             (C584 - C583) * C5249 + (C586 - C585) * C32257 +
             (C588 - C587) * C5250 + (C590 - C589) * C32227) *
                C5245 +
            ((C1458 - C1457) * C5248 + (C1460 - C1459) * C32270 +
             (C1462 - C1461) * C5249 + (C1464 - C1463) * C32257 +
             (C3120 - C3119) * C5250 + (C3122 - C3121) * C32227) *
                C5246 +
            ((C1466 - C1465) * C5248 + (C1468 - C1467) * C32270 +
             (C1470 - C1469) * C5249 + (C1472 - C1471) * C32257 +
             (C31966 * C1453 - C113 * C1452) * C5250 +
             (C31966 * C1455 - C113 * C1454) * C32227) *
                C32238) *
               C573) *
              C31911 * C469)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C31966 * C126 - C113 * C119) * C5988 +
             (C31966 * C140 - C113 * C127) * C31864) *
                C5983 +
            ((C966 - C967) * C5988 + (C968 - C969) * C31864) * C5984 +
            C6072 * C5985 + C6077 * C5986 + C6080 * C5987) *
               C572 +
           (((C113 * C344 - C31966 * C354) * C5988 +
             (C113 * C355 - C31966 * C374) * C31864) *
                C5983 +
            ((C1631 - C1632) * C5988 + (C1633 - C1634) * C31864) * C5984 +
            ((C1635 - C1636) * C5988 + (C1637 - C1638) * C31864) * C5985 +
            ((C113 * C1618 - C31966 * C1621) * C5988 +
             (C113 * C1622 - C31966 * C1627) * C31864) *
                C5986 +
            ((C113 * C6142 - C31966 * C6145) * C5988 +
             (C113 * C6146 - C31966 * C6151) * C31864) *
                C5987) *
               C573) *
              C31911 * C468 +
          ((((C149 - C148) * C5988 + (C151 - C150) * C31864) * C5983 +
            (C1299 * C5988 + C1300 * C31864) * C5984 +
            (C1303 * C5988 + C1304 * C31864) * C5985 +
            ((C982 - C983) * C5988 + (C984 - C985) * C31864) * C5986 +
            ((C6241 - C6242) * C5988 + (C6243 - C6244) * C31864) * C5987) *
               C572 +
           (((C580 - C579) * C5988 + (C582 - C581) * C31864) * C5983 +
            ((C1458 - C1457) * C5988 + (C1460 - C1459) * C31864) * C5984 +
            ((C1466 - C1465) * C5988 + (C1468 - C1467) * C31864) * C5985 +
            ((C31966 * C1623 - C113 * C1619) * C5988 +
             (C31966 * C1628 - C113 * C1624) * C31864) *
                C5986 +
            ((C31966 * C6327 - C113 * C6326) * C5988 +
             (C31966 * C6329 - C113 * C6328) * C31864) *
                C5987) *
               C573) *
              C31911 * C469)) /
            (p * q * std::sqrt(p + q));
    d2ee[124] +=
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C31966 * C126 - C113 * C119) * C114 +
           (C31966 * C140 - C113 * C127) * C102 + (C148 - C149) * C115 +
           (C150 - C151) * C103 + C168 * C116 + C169 * C104 + C170 * C117 +
           C171 * C105 + C172 * C118 + C173 * C106) *
              C31955 * C31925 * C31911 * C110 +
          ((C149 - C148) * C114 + (C151 - C150) * C102 + (C153 - C152) * C115 +
           (C155 - C154) * C103 + (C157 - C156) * C116 + (C159 - C158) * C104 +
           (C161 - C160) * C117 + (C163 - C162) * C105 + (C164 - C165) * C118 +
           (C166 - C167) * C106) *
              C31955 * C31925 * C31911 * C111 +
          (C168 * C114 + C169 * C102 + C170 * C115 + C171 * C103 + C172 * C116 +
           C173 * C104 + (C165 - C164) * C117 + (C167 - C166) * C105 +
           (C31966 * C138 - C113 * C125) * C118 +
           (C31966 * C146 - C113 * C139) * C106) *
              C31955 * C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C31966 * C126 - C113 * C119) * C114 +
           (C31966 * C140 - C113 * C127) * C102 + (C148 - C149) * C115 +
           (C150 - C151) * C103 + C168 * C116 + C169 * C104 + C170 * C117 +
           C171 * C105 + C172 * C118 + C173 * C106) *
              C31955 * C31925 * C235 +
          ((C113 * C239 - C31966 * C249) * C114 +
           (C113 * C250 - C31966 * C269) * C102 +
           (C113 * C240 - C31966 * C251) * C115 +
           (C113 * C252 - C31966 * C270) * C103 +
           (C113 * C241 - C31966 * C253) * C116 +
           (C113 * C254 - C31966 * C271) * C104 +
           (C113 * C242 - C31966 * C255) * C117 +
           (C113 * C256 - C31966 * C272) * C105 +
           (C113 * C243 - C31966 * C257) * C118 +
           (C113 * C258 - C31966 * C273) * C106) *
              C31955 * C31925 * C236 +
          ((C31966 * C259 - C113 * C244) * C114 +
           (C31966 * C274 - C113 * C260) * C102 +
           (C31966 * C261 - C113 * C245) * C115 +
           (C31966 * C275 - C113 * C262) * C103 +
           (C31966 * C263 - C113 * C246) * C116 +
           (C31966 * C276 - C113 * C264) * C104 +
           (C31966 * C265 - C113 * C247) * C117 +
           (C31966 * C277 - C113 * C266) * C105 +
           (C31966 * C267 - C113 * C248) * C118 +
           (C31966 * C278 - C113 * C268) * C106) *
              C31955 * C31925 * C237) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C31966 * C126 - C113 * C119) * C812 +
            (C31966 * C140 - C113 * C127) * C806 + (C148 - C149) * C813 +
            (C150 - C151) * C807 + C168 * C814 + C169 * C32227) *
               C32273 +
           ((C31966 * C249 - C113 * C239) * C812 +
            (C31966 * C269 - C113 * C250) * C806 + (C476 - C475) * C813 +
            (C478 - C477) * C807 + C816 * C814 + C817 * C32227) *
               C32261 +
           ((C31966 * C259 - C113 * C244) * C812 +
            (C31966 * C274 - C113 * C260) * C806 + (C818 - C819) * C813 +
            (C820 - C821) * C807 + C830 * C814 + C831 * C32227) *
               C32238) *
              C31925 * C31911 * C110 +
          (((C149 - C148) * C812 + (C151 - C150) * C806 + (C153 - C152) * C813 +
            (C155 - C154) * C807 + (C157 - C156) * C814 +
            (C159 - C158) * C32227) *
               C32273 +
           ((C475 - C476) * C812 + (C477 - C478) * C806 + (C479 - C480) * C813 +
            (C481 - C482) * C807 + (C483 - C484) * C814 +
            (C485 - C486) * C32227) *
               C32261 +
           ((C819 - C818) * C812 + (C821 - C820) * C806 + (C823 - C822) * C813 +
            (C825 - C824) * C807 + (C826 - C827) * C814 +
            (C828 - C829) * C32227) *
               C32238) *
              C31925 * C31911 * C111 +
          ((C168 * C812 + C169 * C806 + C170 * C813 + C171 * C807 +
            C172 * C814 + C173 * C32227) *
               C32273 +
           (C816 * C812 + C817 * C806 + (C484 - C483) * C813 +
            (C486 - C485) * C807 + (C488 - C487) * C814 +
            (C490 - C489) * C32227) *
               C32261 +
           (C830 * C812 + C831 * C806 + (C827 - C826) * C813 +
            (C829 - C828) * C807 + (C31966 * C267 - C113 * C248) * C814 +
            (C31966 * C278 - C113 * C268) * C32227) *
               C32238) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C31966 * C126 - C113 * C119) * C812 +
            (C31966 * C140 - C113 * C127) * C806 + (C148 - C149) * C813 +
            (C150 - C151) * C807 + C168 * C814 + C169 * C32227) *
               C32273 +
           ((C966 - C967) * C812 + (C968 - C969) * C806 + (C476 - C475) * C813 +
            (C478 - C477) * C807 + C816 * C814 + C817 * C32227) *
               C32261 +
           C1000 * C32238) *
              C31925 * C235 +
          (((C967 - C966) * C812 + (C969 - C968) * C806 + (C475 - C476) * C813 +
            (C477 - C478) * C807 + (C479 - C480) * C814 +
            (C481 - C482) * C32227) *
               C32273 +
           ((C971 - C970) * C812 + (C973 - C972) * C806 + (C819 - C818) * C813 +
            (C821 - C820) * C807 + (C823 - C822) * C814 +
            (C825 - C824) * C32227) *
               C32261 +
           ((C978 - C979) * C812 + (C980 - C981) * C806 + (C982 - C983) * C813 +
            (C984 - C985) * C807 + (C986 - C987) * C814 +
            (C988 - C989) * C32227) *
               C32238) *
              C31925 * C236 +
          (C1000 * C32273 +
           ((C979 - C978) * C812 + (C981 - C980) * C806 + (C983 - C982) * C813 +
            (C985 - C984) * C807 + (C987 - C986) * C814 +
            (C989 - C988) * C32227) *
               C32261 +
           ((C31966 * C953 - C113 * C944) * C812 +
            (C31966 * C962 - C113 * C954) * C806 +
            (C31966 * C955 - C113 * C945) * C813 +
            (C31966 * C963 - C113 * C956) * C807 +
            (C31966 * C957 - C113 * C946) * C814 +
            (C31966 * C964 - C113 * C958) * C32227) *
               C32238) *
              C31925 * C237) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C31966 * C126 - C113 * C119) * C5248 +
            (C31966 * C140 - C113 * C127) * C32270 + (C148 - C149) * C5249 +
            (C150 - C151) * C32257 + C168 * C5250 + C169 * C32227) *
               C5245 +
           ((C966 - C967) * C5248 + (C968 - C969) * C32270 + C1297 * C5249 +
            C1298 * C32257 + C816 * C5250 + C817 * C32227) *
               C5246 +
           (C990 * C5248 + C991 * C32270 + C974 * C5249 + C975 * C32257 +
            C830 * C5250 + C831 * C32227) *
               C32238) *
              C31925 * C31911 * C110 +
          (((C149 - C148) * C5248 + (C151 - C150) * C32270 +
            (C153 - C152) * C5249 + (C155 - C154) * C32257 +
            (C157 - C156) * C5250 + (C159 - C158) * C32227) *
               C5245 +
           (C1299 * C5248 + C1300 * C32270 + C1301 * C5249 + C1302 * C32257 +
            C2987 * C5250 + C2988 * C32227) *
               C5246 +
           (C1303 * C5248 + C1304 * C32270 + C1305 * C5249 + C1306 * C32257 +
            (C826 - C827) * C5250 + (C828 - C829) * C32227) *
               C32238) *
              C31925 * C31911 * C111 +
          ((C168 * C5248 + C169 * C32270 + C170 * C5249 + C171 * C32257 +
            C172 * C5250 + C173 * C32227) *
               C5245 +
           (C816 * C5248 + C817 * C32270 + C2659 * C5249 + C2660 * C32257 +
            (C488 - C487) * C5250 + (C490 - C489) * C32227) *
               C5246 +
           (C830 * C5248 + C831 * C32270 + (C827 - C826) * C5249 +
            (C829 - C828) * C32257 + (C31966 * C267 - C113 * C248) * C5250 +
            (C31966 * C278 - C113 * C268) * C32227) *
               C32238) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C31966 * C126 - C113 * C119) * C5248 +
            (C31966 * C140 - C113 * C127) * C32270 + (C148 - C149) * C5249 +
            (C150 - C151) * C32257 + C168 * C5250 + C169 * C32227) *
               C5245 +
           ((C966 - C967) * C5248 + (C968 - C969) * C32270 + C1297 * C5249 +
            C1298 * C32257 + C816 * C5250 + C817 * C32227) *
               C5246 +
           C5372 * C32238) *
              C31925 * C235 +
          (((C967 - C966) * C5248 + (C969 - C968) * C32270 + C1299 * C5249 +
            C1300 * C32257 + C1301 * C5250 + C1302 * C32227) *
               C5245 +
           ((C971 - C970) * C5248 + (C973 - C972) * C32270 + C1303 * C5249 +
            C1304 * C32257 + C1305 * C5250 + C1306 * C32227) *
               C5246 +
           ((C978 - C979) * C5248 + (C980 - C981) * C32270 +
            (C982 - C983) * C5249 + (C984 - C985) * C32257 +
            (C986 - C987) * C5250 + (C988 - C989) * C32227) *
               C32238) *
              C31925 * C236 +
          (C5372 * C5245 +
           ((C979 - C978) * C5248 + (C981 - C980) * C32270 +
            (C983 - C982) * C5249 + (C985 - C984) * C32257 +
            (C987 - C986) * C5250 + (C989 - C988) * C32227) *
               C5246 +
           ((C31966 * C953 - C113 * C944) * C5248 +
            (C31966 * C962 - C113 * C954) * C32270 +
            (C31966 * C955 - C113 * C945) * C5249 +
            (C31966 * C963 - C113 * C956) * C32257 +
            (C31966 * C957 - C113 * C946) * C5250 +
            (C31966 * C964 - C113 * C958) * C32227) *
               C32238) *
              C31925 * C237) *
         C31899) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C31966 * C126 - C113 * C119) * C5988 +
            (C31966 * C140 - C113 * C127) * C31864) *
               C5983 +
           ((C966 - C967) * C5988 + (C968 - C969) * C31864) * C5984 +
           (C990 * C5988 + C991 * C31864) * C5985 +
           ((C979 - C978) * C5988 + (C981 - C980) * C31864) * C5986 +
           ((C31966 * C953 - C113 * C944) * C5988 +
            (C31966 * C962 - C113 * C954) * C31864) *
               C5987) *
              C31925 * C31911 * C110 +
          (((C149 - C148) * C5988 + (C151 - C150) * C31864) * C5983 +
           (C1299 * C5988 + C1300 * C31864) * C5984 +
           (C1303 * C5988 + C1304 * C31864) * C5985 +
           ((C982 - C983) * C5988 + (C984 - C985) * C31864) * C5986 +
           ((C113 * C945 - C31966 * C955) * C5988 +
            (C113 * C956 - C31966 * C963) * C31864) *
               C5987) *
              C31925 * C31911 * C111 +
          ((C168 * C5988 + C169 * C31864) * C5983 +
           (C816 * C5988 + C817 * C31864) * C5984 +
           (C830 * C5988 + C831 * C31864) * C5985 +
           ((C987 - C986) * C5988 + (C989 - C988) * C31864) * C5986 +
           ((C31966 * C957 - C113 * C946) * C5988 +
            (C31966 * C964 - C113 * C958) * C31864) *
               C5987) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C31966 * C126 - C113 * C119) * C5988 +
            (C31966 * C140 - C113 * C127) * C31864) *
               C5983 +
           ((C966 - C967) * C5988 + (C968 - C969) * C31864) * C5984 +
           C6072 * C5985 + C6077 * C5986 + C6080 * C5987) *
              C31925 * C235 +
          (((C967 - C966) * C5988 + (C969 - C968) * C31864) * C5983 +
           ((C971 - C970) * C5988 + (C973 - C972) * C31864) * C5984 +
           ((C978 - C979) * C5988 + (C980 - C981) * C31864) * C5985 +
           ((C6065 - C6064) * C5988 + (C6067 - C6066) * C31864) * C5986 +
           ((C6068 - C6069) * C5988 + (C6070 - C6071) * C31864) * C5987) *
              C31925 * C236 +
          (C6072 * C5983 + C6077 * C5984 + C6080 * C5985 +
           ((C6069 - C6068) * C5988 + (C6071 - C6070) * C31864) * C5986 +
           ((C31966 * C6055 - C113 * C6052) * C5988 +
            (C31966 * C6058 - C113 * C6056) * C31864) *
               C5987) *
              C31925 * C237) *
         C31899) /
            (p * q * std::sqrt(p + q));
}
