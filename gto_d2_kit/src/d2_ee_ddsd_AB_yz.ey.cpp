/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

#include "gto_d2_kit/d2_ee_ddsd_AB_yz.hpp"
#include <cmath>
/*

*/
#pragma GCC optimize("O0")
namespace {
    const double Pi = M_PI;
}
#pragma GCC optimize("O0")

void second_derivative_ee_2202_12_23(const double ae,
                                     const double xA,
                                     const double yA,
                                     const double zA,
                                     const double be,
                                     const double xB,
                                     const double yB,
                                     const double zB,
                                     const double ce,
                                     const double xC,
                                     const double yC,
                                     const double zC,
                                     const double de,
                                     const double xD,
                                     const double yD,
                                     const double zD,
                                     const double* const bs,
                                     double* const d2ee)
{
    const double p = ae + be;
    const double q = ce + de;
    const double xP = (ae * xA + be * xB) / p;
    const double yP = (ae * yA + be * yB) / p;
    const double zP = (ae * zA + be * zB) / p;
    const double xQ = (ce * xC + de * xD) / q;
    const double yQ = (ce * yC + de * yD) / q;
    const double zQ = (ce * zC + de * zD) / q;
    const double C30825 = ae * be;
    const double C30824 = ae + be;
    const double C30823 = 0 * be;
    const double C30822 = yA - yB;
    const double C30842 = 0 * be;
    const double C30841 = zA - zB;
    const double C30882 = 0 * ae;
    const double C30877 = 0 * be;
    const double C30876 = 0 * be;
    const double C30927 = 0 * be;
    const double C30969 = 0 * ae;
    const double C30964 = 0 * be;
    const double C30963 = 0 * be;
    const double C31014 = 0 * be;
    const double C31075 = zP - zQ;
    const double C31074 = yP - yQ;
    const double C31073 = p + q;
    const double C31072 = p * q;
    const double C31084 = bs[4];
    const double C31082 = xP - xQ;
    const double C31089 = bs[5];
    const double C31096 = bs[6];
    const double C31104 = bs[7];
    const double C31124 = bs[3];
    const double C31488 = bs[2];
    const double C115 = bs[0];
    const double C31852 = xA - xB;
    const double C31887 = ce + de;
    const double C31886 = ce * de;
    const double C31885 = xC - xD;
    const double C31899 = yC - yD;
    const double C31913 = zC - zD;
    const double C30826 = std::pow(C30824, 2);
    const double C30860 = 2 * C30824;
    const double C30878 = C30823 / C30824;
    const double C30827 = C30825 * C30822;
    const double C30879 = C30822 * C30823;
    const double C31937 = std::pow(C30822, 2);
    const double C31995 = C30822 * be;
    const double C31993 = C30822 * ae;
    const double C30965 = C30842 / C30824;
    const double C30843 = C30825 * C30841;
    const double C30966 = C30841 * C30842;
    const double C31954 = std::pow(C30841, 2);
    const double C32037 = C30841 * be;
    const double C32035 = C30841 * ae;
    const double C30889 = C30882 / C30824;
    const double C30884 = C30822 * C30877;
    const double C30928 = C30927 / C30824;
    const double C30976 = C30969 / C30824;
    const double C30971 = C30841 * C30964;
    const double C31015 = C31014 / C30824;
    const double C31115 = C31075 * be;
    const double C31269 = std::pow(C31075, 2);
    const double C31077 = C31074 * C31075;
    const double C31156 = C31074 * ae;
    const double C31209 = std::pow(C31074, 2);
    const double C31076 = 2 * C31072;
    const double C31090 = std::pow(C31082, 2);
    const double C31855 = C31852 * be;
    const double C31854 = C31852 * ae;
    const double C31853 = std::pow(C31852, 2);
    const double C32192 = 2 * C31887;
    const double C32191 = std::pow(C31887, 2);
    const double C31888 = std::pow(C31885, 2);
    const double C32190 = C31885 * ce;
    const double C31900 = std::pow(C31899, 2);
    const double C32193 = C31899 * ce;
    const double C31914 = std::pow(C31913, 2);
    const double C32194 = C31913 * ce;
    const double C30828 = 2 * C30826;
    const double C136 = (std::pow((2 * p * q) / (p + q), 2) * bs[2] *
                         (yP - yQ) * (zP - zQ) * ae * be) /
                        C30826;
    const double C137 = ((xP - xQ) * std::pow(-(2 * p * q) / (p + q), 3) *
                         bs[3] * (yP - yQ) * (zP - zQ) * ae * be) /
                        C30826;
    const double C32188 = 4 * C30826;
    const double C31867 = std::pow(C30860, -1);
    const double C32189 = C30826 * C30860;
    const double C32185 = std::pow(C30860, -2);
    const double C30887 = C30879 / C30824;
    const double C31938 = C31937 * C30825;
    const double C32195 = std::pow(C31993, 2);
    const double C30974 = C30966 / C30824;
    const double C31955 = C31954 * C30825;
    const double C32197 = std::pow(C32035, 2);
    const double C30890 = C30884 / C30824;
    const double C30977 = C30971 / C30824;
    const double C31117 = C31084 * C31115;
    const double C31120 = C31089 * C31115;
    const double C31125 = C31124 * C31115;
    const double C31134 = C31096 * C31115;
    const double C31144 = C31104 * C31115;
    const double C31079 = C31077 * ae;
    const double C31158 = C31084 * C31156;
    const double C31161 = C31089 * C31156;
    const double C31164 = C31124 * C31156;
    const double C31173 = C31096 * C31156;
    const double C31183 = C31104 * C31156;
    const double C31078 = C31076 / C31073;
    const double C122 = (-(bs[1] * C31115 * C31076) / C31073) / C30824;
    const double C123 = (-(bs[1] * C31156 * C31076) / C31073) / C30824;
    const double C116 = -(C31082 * bs[1] * C31076) / C31073;
    const double C244 = -(C31074 * bs[1] * C31076) / C31073;
    const double C349 = -(C31075 * bs[1] * C31076) / C31073;
    const double C32178 = std::pow(C31854, 2);
    const double C31856 = C31853 * C30825;
    const double C32225 = std::pow(C32192, -2);
    const double C32223 = std::pow(C32192, -1);
    const double C31889 = C31888 * C31886;
    const double C31901 = C31900 * C31886;
    const double C31915 = C31914 * C31886;
    const double C30881 = C30823 / C30828;
    const double C30886 = C30877 / C30828;
    const double C30885 = C30876 / C30828;
    const double C30968 = C30842 / C30828;
    const double C30973 = C30964 / C30828;
    const double C30972 = C30963 / C30828;
    const double C32221 = C30824 * C32188;
    const double C32222 = 4 * C32189;
    const double C30891 = 0 - C30887;
    const double C31939 = C31938 / C30824;
    const double C30978 = 0 - C30974;
    const double C31956 = C31955 / C30824;
    const double C30894 = 0 - C30890;
    const double C30981 = 0 - C30977;
    const double C31080 = C31079 * be;
    const double C31083 = std::pow(C31078, 4);
    const double C31088 = -C31078;
    const double C31095 = std::pow(C31078, 6);
    const double C31487 = std::pow(C31078, 2);
    const double C124 =
        (C31082 * std::pow(C31078, 2) * bs[2] * C31115) / C30824;
    const double C125 =
        (C31082 * std::pow(C31078, 2) * bs[2] * C31156) / C30824;
    const double C254 =
        (C31074 * std::pow(C31078, 2) * bs[2] * C31115) / C30824;
    const double C255 =
        (C31074 * std::pow(C31078, 2) * bs[2] * C31156) / C30824 -
        (ae * bs[1] * C31076) / (C31073 * C30824);
    const double C31857 = C31856 / C30824;
    const double C31890 = C31889 / C31887;
    const double C31902 = C31901 / C31887;
    const double C31916 = C31915 / C31887;
    const double C30895 = C30891 * ae;
    const double C31940 = -C31939;
    const double C30982 = C30978 * ae;
    const double C31957 = -C31956;
    const double C30898 = C30894 * ae;
    const double C30985 = C30981 * ae;
    const double C31085 = C31084 * C31080;
    const double C31092 = C31089 * C31080;
    const double C31097 = C31096 * C31080;
    const double C31106 = C31104 * C31080;
    const double C138 =
        (std::pow(-C31078, 3) * bs[3] * C31080 +
         std::pow(C31078, 4) * bs[4] * C31080 * std::pow(xP - xQ, 2)) /
        C30826;
    const double C31118 = C31083 * C31117;
    const double C31159 = C31083 * C31158;
    const double C31198 = C31084 * C31083;
    const double C31091 = std::pow(C31088, 5);
    const double C31103 = std::pow(C31088, 7);
    const double C31123 = std::pow(C31088, 3);
    const double C274 = (ae * std::pow(C31078, 2) * bs[2] * C31075 * be +
                         C31074 * std::pow(C31088, 3) * bs[3] * C31080) /
                        C30826;
    const double C31136 = C31095 * C31134;
    const double C31175 = C31095 * C31173;
    const double C31243 = C31096 * C31095;
    const double C31489 = C31488 * C31487;
    const double C359 = (C31075 * C31487 * C31488 * C31115) / C30824 -
                        (be * bs[1] * C31076) / (C31073 * C30824);
    const double C360 = (C31075 * C31487 * C31488 * C31156) / C30824;
    const double C31858 = -C31857;
    const double C31891 = -C31890;
    const double C31903 = -C31902;
    const double C31917 = -C31916;
    const double C30899 = C30895 / C30824;
    const double C31941 = std::exp(C31940);
    const double C30986 = C30982 / C30824;
    const double C31958 = std::exp(C31957);
    const double C30902 = C30898 / C30824;
    const double C30989 = C30985 / C30824;
    const double C31086 = C31083 * C31085;
    const double C31098 = C31095 * C31097;
    const double C31128 = C31082 * C31118;
    const double C31207 = ae * C31118;
    const double C31206 = C31074 * C31118;
    const double C31606 = C31075 * C31118;
    const double C31167 = C31082 * C31159;
    const double C31253 = be * C31159;
    const double C31268 = C31075 * C31159;
    const double C31549 = C31074 * C31159;
    const double C31230 = C31082 * C31198;
    const double C31236 = C31074 * C31198;
    const double C31323 = C31198 * be;
    const double C31408 = C31075 * C31198;
    const double C31495 = C31198 * C31090;
    const double C31552 = C31198 * C31209;
    const double C31609 = C31198 * C31269;
    const double C31643 = C31198 * ae;
    const double C31093 = C31091 * C31092;
    const double C31121 = C31091 * C31120;
    const double C31162 = C31091 * C31161;
    const double C31200 = C31089 * C31091;
    const double C31107 = C31103 * C31106;
    const double C31146 = C31103 * C31144;
    const double C31185 = C31103 * C31183;
    const double C31126 = C31123 * C31125;
    const double C31165 = C31123 * C31164;
    const double C31228 = C31124 * C31123;
    const double C379 = (be * std::pow(C31078, 2) * bs[2] * C31074 * ae +
                         C31075 * C31123 * C31124 * C31080) /
                        C30826;
    const double C31137 = C31136 * C31090;
    const double C31143 = C31082 * C31136;
    const double C31289 = C31136 * C31209;
    const double C31303 = ae * C31136;
    const double C31302 = C31074 * C31136;
    const double C31341 = C31075 * C31136;
    const double C31176 = C31175 * C31090;
    const double C31182 = C31082 * C31175;
    const double C31345 = be * C31175;
    const double C31344 = C31075 * C31175;
    const double C31410 = C31175 * C31269;
    const double C31655 = C31074 * C31175;
    const double C31244 = C31243 * C31090;
    const double C31349 = C31074 * C31243;
    const double C31348 = C31243 * C31209;
    const double C31387 = C31082 * C31243;
    const double C31416 = C31243 * C31269;
    const double C117 = C31489 * C31090 - (bs[1] * C31076) / C31073;
    const double C245 = C31074 * C31082 * C31489;
    const double C249 = C31489 * C31209 - (bs[1] * C31076) / C31073;
    const double C350 = C31075 * C31082 * C31489;
    const double C354 = C31489 * C31269 - (bs[1] * C31076) / C31073;
    const double C681 = C31075 * C31074 * C31489;
    const double C31859 = std::exp(C31858);
    const double C31892 = std::exp(C31891);
    const double C31904 = std::exp(C31903);
    const double C31918 = std::exp(C31917);
    const double C30903 = C30899 - C30886;
    const double C30829 = C30827 * C31941;
    const double C114 = -(2 * ae * be * (yA - yB) * C31941) / (ae + be);
    const double C31994 = C31941 / C30860;
    const double C31996 = C31941 * C31993;
    const double C32003 = C31867 * C31941;
    const double C32201 = C31941 * C31995;
    const double C32230 = C32185 * C31941;
    const double C32228 = C31941 * C32195;
    const double C30990 = C30986 - C30973;
    const double C150 = C31958 * C138;
    const double C146 = C31958 * C137;
    const double C144 = C31958 * C124;
    const double C984 = C31958 * C274;
    const double C982 = C31958 * C254;
    const double C30844 = C30843 * C31958;
    const double C113 = -(2 * ae * be * (zA - zB) * C31958) / (ae + be);
    const double C32036 = C31958 / C30860;
    const double C32038 = C31958 * C32035;
    const double C32045 = C31867 * C31958;
    const double C32207 = C31958 * C32037;
    const double C32233 = C32185 * C31958;
    const double C32231 = C31958 * C32197;
    const double C30906 = C30902 - C30885;
    const double C30993 = C30989 - C30972;
    const double C139 = (2 * C31082 * C31086 +
                         C31082 * (C31086 + std::pow(-C31078, 5) * bs[5] *
                                                C31080 * std::pow(C31082, 2))) /
                        C30826;
    const double C275 =
        (ae * C31082 * std::pow(C31088, 3) * bs[3] * C31075 * be +
         C31074 * C31082 * C31086) /
        C30826;
    const double C380 = (be * C31082 * C31123 * C31124 * C31074 * ae +
                         C31075 * C31082 * C31086) /
                        C30826;
    const double C31099 = C31098 * C31090;
    const double C31102 = C31082 * C31098;
    const double C31288 = C31074 * C31098;
    const double C31325 = C31075 * C31098;
    const double C31499 = 2 * C31230;
    const double C31559 = C31074 * C31230;
    const double C31558 = C31230 * ae;
    const double C31616 = C31075 * C31230;
    const double C31615 = C31230 * be;
    const double C31645 = 2 * C31236;
    const double C31644 = C31236 * ae;
    const double C31696 = C31075 * C31236;
    const double C31695 = C31236 * be;
    const double C31718 = 2 * C31408;
    const double C31717 = C31408 * be;
    const double C31203 = C31082 * C31093;
    const double C31208 = C31074 * C31093;
    const double C31254 = C31075 * C31093;
    const double C140 =
        (3 * (C31086 + C31093 * C31090) +
         C31082 * (2 * C31082 * C31093 +
                   C31082 * (C31093 +
                             std::pow(C31078, 6) * bs[6] * C31080 * C31090))) /
        C30826;
    const double C276 = (ae * (std::pow(C31088, 3) * bs[3] * C31115 +
                               C31083 * C31084 * C31115 * C31090) +
                         C31074 * (C31086 + C31093 * C31090)) /
                        C30826;
    const double C280 = (C31082 * C31086 + ae * C31074 * C31128 +
                         C31074 * (ae * C31128 + C31074 * C31082 * C31093)) /
                        C30826;
    const double C381 =
        (be * (C31123 * C31124 * C31156 + C31083 * C31084 * C31156 * C31090) +
         C31075 * (C31086 + C31093 * C31090)) /
        C30826;
    const double C385 = (C31082 * C31086 + be * C31075 * C31167 +
                         C31075 * (be * C31167 + C31075 * C31082 * C31093)) /
                        C30826;
    const double C697 =
        (ae * (C31075 * C31128 + C31082 * C31124 * C31123 * be) +
         C31074 * (be * C31167 + C31075 * C31082 * C31093)) /
        C30826;
    const double C31130 = C31121 * C31090;
    const double C31133 = C31082 * C31121;
    const double C31211 = C31121 * C31209;
    const double C31287 = ae * C31121;
    const double C31286 = C31074 * C31121;
    const double C31322 = C31075 * C31121;
    const double C31169 = C31162 * C31090;
    const double C31172 = C31082 * C31162;
    const double C31270 = C31162 * C31269;
    const double C31324 = be * C31162;
    const double C31334 = C31075 * C31162;
    const double C1146 =
        (C31086 + be * C31075 * C31159 +
         C31075 * (be * C31159 + C31075 * C31093) +
         ae * (C31206 + C31075 * (C31075 * C31074 * C31121 + C31236 * be) +
               C31075 * C31236 * be) +
         C31074 * (ae * (C31118 + C31075 * (C31075 * C31121 + C31198 * be) +
                         C31075 * C31198 * be) +
                   C31074 * (C31093 + be * C31075 * C31162 +
                             C31075 * (be * C31162 + C31075 * C31098)))) /
        C30826;
    const double C31642 = C31074 * C31162;
    const double C31232 = C31200 * C31090;
    const double C31239 = C31082 * C31200;
    const double C31326 = C31200 * C31209;
    const double C31336 = C31074 * C31200;
    const double C31343 = C31075 * C31200;
    const double C31342 = C31200 * be;
    const double C31409 = C31200 * C31269;
    const double C31656 = C31200 * ae;
    const double C31108 = C31107 * C31090;
    const double C31304 = C31074 * C31107;
    const double C31346 = C31075 * C31107;
    const double C31369 = C31082 * C31107;
    const double C31147 = C31146 * C31090;
    const double C31306 = C31146 * C31209;
    const double C31370 = C31082 * C31146;
    const double C31186 = C31185 * C31090;
    const double C31417 = C31185 * C31269;
    const double C31425 = C31082 * C31185;
    const double C279 = (C31123 * C31124 * C31080 + ae * C31074 * C31126 +
                         C31074 * (ae * C31126 + C31074 * C31086)) /
                        C30826;
    const double C975 = (2 * (ae * C31126 + C31074 * C31086) +
                         ae * (C31126 + C31118 * std::pow(C31074, 2)) +
                         C31074 * (C31086 + ae * C31074 * C31118 +
                                   C31074 * (ae * C31118 + C31074 * C31093))) /
                        C30826;
    const double C126 =
        (std::pow(C31078, 2) * bs[2] * C31115 + C31126 * C31090) / C30824;
    const double C128 =
        (2 * C31082 * C31126 + C31082 * (C31126 + C31118 * C31090)) / C30824;
    const double C256 = (C31074 * C31082 * C31126) / C30824;
    const double C258 = (C31074 * (C31126 + C31118 * C31090)) / C30824;
    const double C264 =
        (std::pow(C31078, 2) * bs[2] * C31115 + C31126 * C31209) / C30824;
    const double C266 = (C31082 * C31126 + C31128 * C31209) / C30824;
    const double C361 =
        (C31075 * C31082 * C31126 + C31082 * C31489 * be) / C30824;
    const double C369 =
        (C31487 * C31488 * C31115 + C31075 * (C31075 * C31126 + C31489 * be) +
         C31075 * C31489 * be) /
        C30824;
    const double C686 =
        (C31075 * C31074 * C31126 + C31074 * C31489 * be) / C30824;
    const double C963 =
        (2 * C31074 * C31126 + C31074 * (C31126 + C31118 * C31209)) / C30824;
    const double C384 = (C31123 * C31124 * C31080 + be * C31075 * C31165 +
                         C31075 * (be * C31165 + C31075 * C31086)) /
                        C30826;
    const double C696 =
        (ae * (C31075 * C31126 + bs[2] * std::pow(C31078, 2) * be) +
         C31074 * (be * C31165 + C31075 * C31086)) /
        C30826;
    const double C127 =
        (std::pow(C31078, 2) * bs[2] * C31156 + C31165 * C31090) / C30824;
    const double C129 =
        (2 * C31082 * C31165 + C31082 * (C31165 + C31159 * C31090)) / C30824;
    const double C257 =
        (C31074 * C31082 * C31165 + C31082 * bs[2] * std::pow(C31078, 2) * ae) /
        C30824;
    const double C265 =
        (C31487 * C31488 * C31156 + C31074 * (C31074 * C31165 + C31489 * ae) +
         C31074 * C31489 * ae) /
        C30824;
    const double C362 = (C31075 * C31082 * C31165) / C30824;
    const double C364 = (C31075 * (C31165 + C31159 * C31090)) / C30824;
    const double C370 = (C31487 * C31488 * C31156 + C31165 * C31269) / C30824;
    const double C372 = (C31082 * C31165 + C31167 * C31269) / C30824;
    const double C687 = (C31075 * (C31074 * C31165 + C31489 * ae)) / C30824;
    const double C2035 =
        (2 * C31075 * C31165 + C31075 * (C31165 + C31159 * C31269)) / C30824;
    const double C1142 = (be * C31165 + C31075 * C31086 +
                          ae * (C31075 * C31206 + C31074 * C31228 * be) +
                          C31074 * (ae * (C31075 * C31118 + C31228 * be) +
                                    C31074 * (be * C31159 + C31075 * C31093))) /
                         C30826;
    const double C1145 =
        (ae * (C31126 + C31075 * (C31075 * C31118 + C31228 * be) +
               C31075 * C31228 * be) +
         C31074 * (C31086 + be * C31075 * C31159 +
                   C31075 * (be * C31159 + C31075 * C31093))) /
        C30826;
    const double C31492 = C31082 * C31228;
    const double C31496 = C31228 + C31495;
    const double C31551 = C31074 * C31228;
    const double C31550 = C31228 * ae;
    const double C31554 = C31228 + C31552;
    const double C31608 = C31075 * C31228;
    const double C31607 = C31228 * be;
    const double C31611 = C31228 + C31609;
    const double C259 = (C31074 * (C31165 + C31159 * C31090) +
                         (bs[2] * std::pow(C31078, 2) + C31228 * C31090) * ae) /
                        C30824;
    const double C363 = (C31075 * (C31126 + C31118 * C31090) +
                         (C31489 + C31228 * C31090) * be) /
                        C30824;
    const double C964 =
        (2 * (C31074 * C31165 + C31489 * ae) +
         C31074 * (C31165 + C31074 * (C31074 * C31159 + C31228 * ae) +
                   C31074 * C31228 * ae) +
         (C31489 + C31228 * C31209) * ae) /
        C30824;
    const double C1124 = (C31075 * (C31126 + C31118 * C31209) +
                          (C31489 + C31228 * C31209) * be) /
                         C30824;
    const double C2034 =
        (2 * (C31075 * C31126 + C31489 * be) +
         C31075 * (C31126 + C31075 * (C31075 * C31118 + C31228 * be) +
                   C31075 * C31228 * be) +
         (C31489 + C31228 * C31269) * be) /
        C30824;
    const double C118 =
        2 * C31082 * C31489 + C31082 * (C31489 + C31228 * C31090);
    const double C246 = C31074 * (C31489 + C31228 * C31090);
    const double C351 = C31075 * (C31489 + C31228 * C31090);
    const double C957 =
        2 * C31074 * C31489 + C31074 * (C31489 + C31228 * C31209);
    const double C1115 = C31075 * (C31489 + C31228 * C31209);
    const double C2028 =
        2 * C31075 * C31489 + C31075 * (C31489 + C31228 * C31269);
    const double C31138 = C31121 + C31137;
    const double C31145 = 2 * C31143;
    const double C31217 = C31143 * C31209;
    const double C31368 = ae * C31143;
    const double C31367 = C31074 * C31143;
    const double C31383 = C31075 * C31143;
    const double C31293 = C31121 + C31289;
    const double C31310 = 2 * C31302;
    const double C31308 = ae * C31302;
    const double C31396 = C31075 * C31302;
    const double C31177 = C31162 + C31176;
    const double C31184 = 2 * C31182;
    const double C31274 = C31182 * C31269;
    const double C31385 = be * C31182;
    const double C31422 = C31075 * C31182;
    const double C31677 = C31074 * C31182;
    const double C31352 = be * C31344;
    const double C31442 = 2 * C31344;
    const double C31412 = C31162 + C31410;
    const double C31245 = C31200 + C31244;
    const double C31415 = C31349 * C31269;
    const double C31354 = C31200 + C31348;
    const double C31390 = C31387 * C31209;
    const double C31424 = C31074 * C31387;
    const double C31449 = C31387 * C31269;
    const double C31419 = C31200 + C31416;
    const double C31861 = C31859 * C31854;
    const double C31860 = C31859 / C30860;
    const double C31869 = C31867 * C31859;
    const double C32181 = C31859 * C31855;
    const double C32219 = C32185 * C31859;
    const double C32213 = C31859 * C32178;
    const double C32224 = C31892 * C32190;
    const double C110 =
        (C31892 * std::pow(C32190, 2)) / C32191 + C31892 / C32192;
    const double C112 = C32225 * C31892;
    const double C474 = C32223 * C31892;
    const double C32226 = C31904 * C32193;
    const double C240 =
        (C31904 * std::pow(C32193, 2)) / C32191 + C31904 / C32192;
    const double C242 = C32225 * C31904;
    const double C472 = C32223 * C31904;
    const double C32227 = C31918 * C32194;
    const double C346 =
        (C31918 * std::pow(C32194, 2)) / C32191 + C31918 / C32192;
    const double C348 = C32225 * C31918;
    const double C578 = C32223 * C31918;
    const double C30908 = C30903 / C30860;
    const double C30907 = C30822 * C30903;
    const double C30861 = 2 * C30829;
    const double C30883 = C30829 / C30826;
    const double C819 = ((0 * ae) / C30824 - C30829 / C30826) / (2 * C30824) +
                        (0 * ae) / C30824;
    const double C2662 =
        ((C31941 - (C30822 * 2 * C30829) / C30824) * ae) / C30824 -
        C30823 / C30828;
    const double C2663 = (0 * ae) / C30824 - C30829 / C30826;
    const double C5275 = (C31941 * std::pow(C31995, 2)) / C30826 + C31994;
    const double C31997 = C31996 * C31995;
    const double C32002 = C31996 / C30828;
    const double C32199 = C31996 / C30824;
    const double C32196 = C31867 * C31996;
    const double C818 =
        (((C31941 - (C30822 * 2 * C30829) / C30824) * ae) / C30824 -
         C30823 / C30828) /
            (2 * C30824) +
        ((C30822 * ((0 * ae) / C30824 - C30829 / C30826) + C32003) * ae) /
            C30824;
    const double C32004 = C32003 * C31995;
    const double C32205 = C31993 * C32003;
    const double C32204 = 2 * C32003;
    const double C32240 = C32003 / C32188;
    const double C6019 = C32003 / C32222;
    const double C17091 = C32003 / C30860;
    const double C32236 = C32201 / C30824;
    const double C5276 = (-2 * C31867 * C32201) / C30824;
    const double C32252 = C32228 / C30826;
    const double C30995 = C30990 / C30860;
    const double C30994 = C30841 * C30990;
    const double C30948 = 2 * C30844;
    const double C30970 = C30844 / C30826;
    const double C1758 = ((0 * ae) / C30824 - C30844 / C30826) / (2 * C30824) +
                         (0 * ae) / C30824;
    const double C3372 =
        ((C31958 - (C30841 * 2 * C30844) / C30824) * ae) / C30824 -
        C30842 / C30828;
    const double C3373 = (0 * ae) / C30824 - C30844 / C30826;
    const double C149 = C113 * C117;
    const double C147 = C113 * C125;
    const double C145 = C113 * C116;
    const double C480 = C113 * C245;
    const double C584 = C113 * C350;
    const double C987 = C113 * C249;
    const double C985 = C113 * C255;
    const double C983 = C113 * C244;
    const double C1636 = C113 * C681;
    const double C9914 = (C31958 * std::pow(C32037, 2)) / C30826 + C32036;
    const double C32039 = C32038 * C32037;
    const double C32044 = C32038 / C30828;
    const double C32200 = C32038 / C30824;
    const double C32198 = C31867 * C32038;
    const double C1757 =
        (((C31958 - (C30841 * 2 * C30844) / C30824) * ae) / C30824 -
         C30842 / C30828) /
            (2 * C30824) +
        ((C30841 * ((0 * ae) / C30824 - C30844 / C30826) + C32045) * ae) /
            C30824;
    const double C32046 = C32045 * C32037;
    const double C32211 = C32035 * C32045;
    const double C32210 = 2 * C32045;
    const double C32246 = C32045 / C32188;
    const double C11591 = C32045 / C32222;
    const double C23645 = C32045 / C30860;
    const double C32242 = C32207 / C30824;
    const double C9915 = (-2 * C31867 * C32207) / C30824;
    const double C32254 = C32231 / C30826;
    const double C30912 = C30906 + C30878;
    const double C30999 = C30993 + C30965;
    const double C154 = C31958 * C139;
    const double C483 = C31958 * C275;
    const double C587 = C31958 * C380;
    const double C3381 = C32045 * C380;
    const double C19923 = C32045 * C380;
    const double C31100 = C31093 + C31099;
    const double C31105 = 2 * C31102;
    const double C31216 = C31074 * C31102;
    const double C31258 = C31075 * C31102;
    const double C31210 = C31207 + C31208;
    const double C31255 = C31253 + C31254;
    const double C158 = C31958 * C140;
    const double C487 = C31958 * C276;
    const double C823 = C31958 * C280;
    const double C591 = C31958 * C381;
    const double C3389 = C32045 * C381;
    const double C19931 = C32045 * C381;
    const double C1770 = C32233 * C385;
    const double C3912 = C32045 * C385;
    const double C9931 = C32233 * C385;
    const double C20454 = C32045 * C385;
    const double C1465 = C31958 * C697;
    const double C3758 = C32045 * C697;
    const double C20300 = C32045 * C697;
    const double C31131 = C31118 + C31130;
    const double C31135 = 2 * C31133;
    const double C31215 = ae * C31133;
    const double C31214 = C31074 * C31133;
    const double C976 = (2 * (ae * C31128 + C31074 * C31203) +
                         ae * (C31128 + C31133 * std::pow(C31074, 2)) +
                         C31074 * (C31203 + ae * C31074 * C31133 +
                                   C31074 * (ae * C31133 + C31074 * C31102))) /
                        C30826;
    const double C31614 = C31075 * C31133;
    const double C965 =
        (2 * C31074 * C31128 + C31074 * (C31128 + C31133 * C31209)) / C30824;
    const double C31212 = C31118 + C31211;
    const double C31291 = C31287 + C31288;
    const double C31292 = 2 * C31286;
    const double C31290 = ae * C31286;
    const double C31694 = C31075 * C31286;
    const double C31327 = C31322 + C31323;
    const double C31170 = C31159 + C31169;
    const double C31174 = 2 * C31172;
    const double C31257 = be * C31172;
    const double C31273 = C31075 * C31172;
    const double C1147 =
        (ae * (C31128 + C31075 * (C31075 * C31133 + C31230 * be) +
               C31075 * C31230 * be) +
         C31074 * (C31203 + be * C31075 * C31172 +
                   C31075 * (be * C31172 + C31075 * C31102))) /
        C30826;
    const double C31557 = C31074 * C31172;
    const double C2037 =
        (2 * C31075 * C31167 + C31075 * (C31167 + C31172 * C31269)) / C30824;
    const double C31271 = C31159 + C31270;
    const double C31328 = C31324 + C31325;
    const double C31337 = be * C31334;
    const double C31437 = 2 * C31334;
    const double C6695 = C32233 * C1146;
    const double C9098 = C32045 * C1146;
    const double C10918 = C32233 * C1146;
    const double C21730 = C32045 * C1146;
    const double C31647 = C31642 + C31643;
    const double C31233 = C31198 + C31232;
    const double C31240 = C31074 * C31239;
    const double C31249 = 2 * C31239;
    const double C31384 = C31239 * be;
    const double C31448 = C31075 * C31239;
    const double C31560 = C31239 * C31209;
    const double C31617 = C31239 * C31269;
    const double C31678 = C31239 * ae;
    const double C31329 = C31198 + C31326;
    const double C31347 = 2 * C31336;
    const double C31397 = C31336 * be;
    const double C31414 = C31075 * C31336;
    const double C31657 = C31336 * ae;
    const double C31697 = C31336 * C31269;
    const double C31351 = C31343 * be;
    const double C31458 = 2 * C31343;
    const double C31350 = C31341 + C31342;
    const double C31411 = C31198 + C31409;
    const double C31661 = C31655 + C31656;
    const double C31109 = C31098 + C31108;
    const double C31309 = C31303 + C31304;
    const double C31353 = C31345 + C31346;
    const double C31372 = C31074 * C31369;
    const double C31386 = C31075 * C31369;
    const double C31148 = C31136 + C31147;
    const double C31311 = C31136 + C31306;
    const double C31374 = C31370 * C31209;
    const double C31187 = C31175 + C31186;
    const double C31420 = C31175 + C31417;
    const double C31450 = C31425 * C31269;
    const double C988 = C31958 * C279;
    const double C995 = C31958 * C975;
    const double C148 = C31958 * C126;
    const double C152 = C31958 * C128;
    const double C481 = C31958 * C256;
    const double C485 = C31958 * C258;
    const double C986 = C31958 * C264;
    const double C821 = C31958 * C266;
    const double C585 = C31958 * C361;
    const double C3377 = C32045 * C361;
    const double C19919 = C32045 * C361;
    const double C1637 = C31958 * C686;
    const double C4366 = C32045 * C686;
    const double C20911 = C32045 * C686;
    const double C993 = C31958 * C963;
    const double C1639 = C31958 * C696;
    const double C4370 = C32045 * C696;
    const double C20915 = C32045 * C696;
    const double C151 = C113 * C127;
    const double C155 = C113 * C129;
    const double C482 = C113 * C257;
    const double C989 = C113 * C265;
    const double C586 = C113 * C362;
    const double C590 = C113 * C364;
    const double C1638 = C113 * C687;
    const double C1643 = C31958 * C1142;
    const double C4379 = C32045 * C1142;
    const double C20923 = C32045 * C1142;
    const double C5165 = C32045 * C1145;
    const double C6683 = C32233 * C1145;
    const double C10906 = C32233 * C1145;
    const double C21722 = C32045 * C1145;
    const double C267 =
        (C31082 * C31165 + C31074 * (C31074 * C31167 + C31492 * ae) +
         C31074 * C31492 * ae) /
        C30824;
    const double C371 =
        (C31082 * C31126 + C31075 * (C31075 * C31128 + C31492 * be) +
         C31075 * C31492 * be) /
        C30824;
    const double C688 =
        (C31075 * C31074 * C31128 + C31074 * C31492 * be) / C30824;
    const double C689 = (C31075 * (C31074 * C31167 + C31492 * ae)) / C30824;
    const double C966 =
        (2 * (C31074 * C31167 + C31492 * ae) +
         C31074 * (C31167 + C31074 * (C31074 * C31172 + C31230 * ae) +
                   C31074 * C31230 * ae) +
         (C31492 + C31230 * C31209) * ae) /
        C30824;
    const double C1126 = (C31075 * (C31128 + C31133 * C31209) +
                          (C31492 + C31230 * C31209) * be) /
                         C30824;
    const double C2036 =
        (2 * (C31075 * C31128 + C31492 * be) +
         C31075 * (C31128 + C31075 * (C31075 * C31133 + C31230 * be) +
                   C31075 * C31230 * be) +
         (C31492 + C31230 * C31269) * be) /
        C30824;
    const double C250 = C31082 * C31489 + C31492 * C31209;
    const double C355 = C31082 * C31489 + C31492 * C31269;
    const double C682 = C31075 * C31074 * C31492;
    const double C958 =
        2 * C31074 * C31492 + C31074 * (C31492 + C31230 * C31209);
    const double C1116 = C31075 * (C31492 + C31230 * C31209);
    const double C1120 = C31074 * C31492 + C31559 * C31269;
    const double C2029 =
        2 * C31075 * C31492 + C31075 * (C31492 + C31230 * C31269);
    const double C119 = 3 * (C31489 + C31228 * C31090) +
                        C31082 * (2 * C31492 + C31082 * C31496);
    const double C247 = C31074 * (2 * C31492 + C31082 * C31496);
    const double C251 = C31489 + C31228 * C31090 + C31496 * C31209;
    const double C352 = C31075 * (2 * C31492 + C31082 * C31496);
    const double C356 = C31489 + C31228 * C31090 + C31496 * C31269;
    const double C683 = C31075 * C31074 * C31496;
    const double C1130 =
        (C31074 * C31126 + C31075 * (C31075 * C31206 + C31551 * be) +
         C31075 * C31551 * be) /
        C30824;
    const double C2549 =
        (2 * (C31075 * C31206 + C31551 * be) +
         C31075 * (C31206 + C31075 * (C31075 * C31286 + C31236 * be) +
                   C31075 * C31236 * be) +
         (C31551 + C31236 * C31269) * be) /
        C30824;
    const double C1118 = C31074 * C31489 + C31551 * C31269;
    const double C2546 =
        2 * C31075 * C31551 + C31075 * (C31551 + C31236 * C31269);
    const double C31553 = C31549 + C31550;
    const double C960 = 3 * (C31489 + C31228 * C31209) +
                        C31074 * (2 * C31551 + C31074 * C31554);
    const double C1119 = C31489 + C31228 * C31209 + C31554 * C31269;
    const double C1623 = C31075 * (2 * C31551 + C31074 * C31554);
    const double C31610 = C31606 + C31607;
    const double C2031 = 3 * (C31489 + C31228 * C31269) +
                         C31075 * (2 * C31608 + C31075 * C31611);
    const double C486 = C113 * C259;
    const double C589 = C31958 * C363;
    const double C3385 = C32045 * C363;
    const double C19927 = C32045 * C363;
    const double C994 = C113 * C964;
    const double C1641 = C31958 * C1124;
    const double C4375 = C32045 * C1124;
    const double C20919 = C32045 * C1124;
    const double C153 = C113 * C118;
    const double C484 = C113 * C246;
    const double C588 = C113 * C351;
    const double C992 = C113 * C957;
    const double C1640 = C113 * C1115;
    const double C31139 = C31082 * C31138;
    const double C31142 = 3 * C31138;
    const double C31222 = ae * C31138;
    const double C31221 = C31074 * C31138;
    const double C31622 = C31075 * C31138;
    const double C31219 = C31133 + C31217;
    const double C31373 = 2 * C31367;
    const double C31371 = ae * C31367;
    const double C31735 = C31075 * C31367;
    const double C31296 = C31074 * C31293;
    const double C31305 = 3 * C31293;
    const double C31301 = ae * C31293;
    const double C31702 = C31075 * C31293;
    const double C31312 = C31098 + C31308;
    const double C31178 = C31082 * C31177;
    const double C31181 = 3 * C31177;
    const double C31261 = be * C31177;
    const double C31277 = C31075 * C31177;
    const double C31565 = C31074 * C31177;
    const double C31275 = C31172 + C31274;
    const double C31426 = be * C31422;
    const double C31454 = 2 * C31422;
    const double C31356 = C31098 + C31352;
    const double C31432 = be * C31412;
    const double C31438 = C31075 * C31412;
    const double C31441 = 3 * C31412;
    const double C31246 = C31074 * C31245;
    const double C31250 = C31082 * C31245;
    const double C31568 = C31245 * C31209;
    const double C31625 = C31245 * C31269;
    const double C31418 = C31336 + C31415;
    const double C31358 = C31074 * C31354;
    const double C31705 = C31354 * C31269;
    const double C31393 = C31239 + C31390;
    const double C31738 = C31424 * C31269;
    const double C31451 = C31239 + C31449;
    const double C31459 = C31075 * C31419;
    const double C31862 = C31861 * C31855;
    const double C31868 = C31861 / C30828;
    const double C32182 = C31867 * C31861;
    const double C32180 = C31861 / C30824;
    const double C814 = (C31859 * std::pow(C31855, 2)) / C30826 + C31860;
    const double C31870 = C31869 * C31855;
    const double C32186 = C31854 * C31869;
    const double C32184 = 2 * C31869;
    const double C32234 = C31869 / C32188;
    const double C107 = C31869 / C32222;
    const double C17094 = C31869 / C30860;
    const double C32215 = C32181 / C30824;
    const double C815 = (-2 * C31867 * C32181) / C30824;
    const double C32247 = C32213 / C30826;
    const double C111 = (2 * C32223 * C32224) / C31887;
    const double C473 = C32224 / C31887;
    const double C241 = (2 * C32223 * C32226) / C31887;
    const double C471 = C32226 / C31887;
    const double C347 = (2 * C32223 * C32227) / C31887;
    const double C577 = C32227 / C31887;
    const double C30913 = C30907 + 0;
    const double C30880 = C30822 * C30861;
    const double C5282 =
        ((-C30823 / C30824) / C30860 -
         ((C31941 - (C30822 * C30861) / C30824) * be) / C30824) /
            C30860 -
        ((C30822 * ((-C30861 / C30824) / C30860 - (0 * be) / C30824) + C32003) *
         be) /
            C30824;
    const double C5283 =
        ((-C30861 / C30824) / C30860 - (0 * be) / C30824) / C30860 -
        (0 * be) / C30824;
    const double C14632 = (-C30861 / C30824) / C30860 - (0 * be) / C30824;
    const double C30893 = C30889 - C30883;
    const double C31998 = C31997 / C30826;
    const double C817 =
        (((0 - (C30822 * C30823) / C30824) * ae) / C30824 - (0 * be) / C30828) /
            (2 * C30824) +
        ((C30822 * (((C31941 - (C30822 * 2 * C30829) / C30824) * ae) / C30824 -
                    C30823 / C30828) +
          C32199) *
         ae) /
            C30824 +
        (0 * ae) / C30824 - C30829 / C30826;
    const double C32229 = 2 * C32196;
    const double C32005 = C32004 / C30824;
    const double C32239 = C32205 / C30828;
    const double C32256 = C32199 - C32236;
    const double C14625 = -C32236;
    const double C32265 = C32252 + C31994;
    const double C31000 = C30994 + 0;
    const double C30967 = C30841 * C30948;
    const double C9918 =
        ((-C30842 / C30824) / C30860 -
         ((C31958 - (C30841 * C30948) / C30824) * be) / C30824) /
            C30860 -
        ((C30841 * ((-C30948 / C30824) / C30860 - (0 * be) / C30824) + C32045) *
         be) /
            C30824;
    const double C9919 =
        ((-C30948 / C30824) / C30860 - (0 * be) / C30824) / C30860 -
        (0 * be) / C30824;
    const double C19915 = (-C30948 / C30824) / C30860 - (0 * be) / C30824;
    const double C30980 = C30976 - C30970;
    const double C1771 = C1758 * C372;
    const double C3396 = C3372 * C129;
    const double C3392 = C3372 * C118;
    const double C3388 = C3372 * C127;
    const double C3384 = C3372 * C117;
    const double C3380 = C3372 * C125;
    const double C3376 = C3372 * C116;
    const double C3763 = C3372 * C259;
    const double C3759 = C3372 * C246;
    const double C3755 = C3372 * C257;
    const double C3751 = C3372 * C245;
    const double C3917 = C3372 * C364;
    const double C3913 = C3372 * C351;
    const double C3909 = C3372 * C362;
    const double C3905 = C3372 * C350;
    const double C4376 = C3372 * C265;
    const double C4372 = C3372 * C249;
    const double C4369 = C3372 * C255;
    const double C4365 = C3372 * C244;
    const double C5162 = C3372 * C687;
    const double C5158 = C3372 * C681;
    const double C8333 = C3372 * C964;
    const double C8329 = C3372 * C957;
    const double C9091 = C3372 * C1115;
    const double C3390 = C3373 * C364;
    const double C3386 = C3373 * C351;
    const double C3382 = C3373 * C362;
    const double C3378 = C3373 * C350;
    const double C3911 = C3373 * C372;
    const double C4374 = C3373 * C1115;
    const double C4371 = C3373 * C687;
    const double C4367 = C3373 * C681;
    const double C9952 = C9914 * C139;
    const double C9946 = C9914 * C128;
    const double C9939 = C9914 * C138;
    const double C9933 = C9914 * C126;
    const double C9927 = C9914 * C137;
    const double C9921 = C9914 * C124;
    const double C10355 = C9914 * C276;
    const double C10349 = C9914 * C258;
    const double C10343 = C9914 * C275;
    const double C10337 = C9914 * C256;
    const double C10525 = C9914 * C381;
    const double C10519 = C9914 * C363;
    const double C10513 = C9914 * C380;
    const double C10507 = C9914 * C361;
    const double C10927 = C9914 * C975;
    const double C10921 = C9914 * C963;
    const double C10914 = C9914 * C279;
    const double C10908 = C9914 * C264;
    const double C10902 = C9914 * C274;
    const double C10896 = C9914 * C254;
    const double C11205 = C9914 * C280;
    const double C11199 = C9914 * C266;
    const double C11521 = C9914 * C1142;
    const double C11515 = C9914 * C1124;
    const double C11509 = C9914 * C696;
    const double C11503 = C9914 * C686;
    const double C12841 = C9914 * C697;
    const double C32040 = C32039 / C30826;
    const double C3404 = C32200 * C140;
    const double C3395 = C32200 * C139;
    const double C3391 = C32200 * C128;
    const double C3387 = C32200 * C138;
    const double C3383 = C32200 * C126;
    const double C3379 = C32200 * C137;
    const double C3375 = C32200 * C124;
    const double C3764 = C32200 * C276;
    const double C3760 = C32200 * C258;
    const double C3756 = C32200 * C275;
    const double C3752 = C32200 * C256;
    const double C3918 = C32200 * C381;
    const double C3914 = C32200 * C363;
    const double C3910 = C32200 * C380;
    const double C3906 = C32200 * C361;
    const double C4385 = C32200 * C280;
    const double C4381 = C32200 * C266;
    const double C4377 = C32200 * C279;
    const double C4373 = C32200 * C264;
    const double C4368 = C32200 * C274;
    const double C4364 = C32200 * C254;
    const double C4953 = C32200 * C697;
    const double C5163 = C32200 * C696;
    const double C5159 = C32200 * C686;
    const double C8334 = C32200 * C975;
    const double C8330 = C32200 * C963;
    const double C9096 = C32200 * C1142;
    const double C9092 = C32200 * C1124;
    const double C1756 =
        (((0 - (C30841 * C30842) / C30824) * ae) / C30824 - (0 * be) / C30828) /
            (2 * C30824) +
        ((C30841 * (((C31958 - (C30841 * 2 * C30844) / C30824) * ae) / C30824 -
                    C30842 / C30828) +
          C32200) *
         ae) /
            C30824 +
        (0 * ae) / C30824 - C30844 / C30826;
    const double C32232 = 2 * C32198;
    const double C1781 = C1757 * C364;
    const double C1775 = C1757 * C351;
    const double C1769 = C1757 * C362;
    const double C1763 = C1757 * C350;
    const double C2385 = C1757 * C372;
    const double C6688 = C1757 * C1115;
    const double C6682 = C1757 * C687;
    const double C6676 = C1757 * C681;
    const double C32047 = C32046 / C30824;
    const double C32245 = C32211 / C30828;
    const double C23660 = C23645 * C385;
    const double C24720 = C23645 * C1146;
    const double C24707 = C23645 * C1145;
    const double C32259 = C32200 - C32242;
    const double C19912 = -C32242;
    const double C9941 = C9915 * C381;
    const double C9935 = C9915 * C363;
    const double C9929 = C9915 * C380;
    const double C9923 = C9915 * C361;
    const double C10345 = C9915 * C697;
    const double C10515 = C9915 * C385;
    const double C10916 = C9915 * C1142;
    const double C10910 = C9915 * C1124;
    const double C10904 = C9915 * C696;
    const double C10898 = C9915 * C686;
    const double C11523 = C9915 * C1146;
    const double C11511 = C9915 * C1145;
    const double C32266 = C32254 + C32036;
    const double C30916 = C30912 / C30860;
    const double C31003 = C30999 / C30860;
    const double C141 =
        (4 * (2 * C31082 * C31093 + C31082 * C31100) +
         C31082 * (3 * C31100 +
                   C31082 * (2 * C31082 * C31098 +
                             C31082 * (C31098 + std::pow(C31088, 7) * bs[7] *
                                                    C31080 * C31090)))) /
        C30826;
    const double C277 =
        (ae * (2 * C31082 * C31118 +
               C31082 * (C31118 + C31091 * C31089 * C31115 * C31090)) +
         C31074 * (2 * C31082 * C31093 + C31082 * C31100)) /
        C30826;
    const double C382 =
        (be * (2 * C31082 * C31159 +
               C31082 * (C31159 + C31091 * C31089 * C31156 * C31090)) +
         C31075 * (2 * C31082 * C31093 + C31082 * C31100)) /
        C30826;
    const double C2046 =
        (2 * (be * C31165 + C31075 * C31086) +
         be * (C31165 + C31159 * std::pow(C31075, 2)) +
         C31075 * (C31086 + be * C31075 * C31159 + C31075 * C31255)) /
        C30826;
    const double C281 = (C31086 + C31093 * C31090 + ae * C31074 * C31131 +
                         C31074 * (ae * C31131 + C31074 * C31100)) /
                        C30826;
    const double C130 = (3 * (C31126 + C31118 * C31090) +
                         C31082 * (2 * C31128 + C31082 * C31131)) /
                        C30824;
    const double C260 = (C31074 * (2 * C31128 + C31082 * C31131)) / C30824;
    const double C268 = (C31126 + C31118 * C31090 + C31131 * C31209) / C30824;
    const double C365 = (C31075 * (2 * C31128 + C31082 * C31131) +
                         (2 * C31492 + C31082 * C31496) * be) /
                        C30824;
    const double C373 =
        (C31126 + C31118 * C31090 + C31075 * (C31075 * C31131 + C31496 * be) +
         C31075 * C31496 * be) /
        C30824;
    const double C690 =
        (C31075 * C31074 * C31131 + C31074 * C31496 * be) / C30824;
    const double C967 =
        (2 * C31074 * C31131 + C31074 * (C31131 + C31138 * C31209)) / C30824;
    const double C31218 = C31215 + C31216;
    const double C1143 = (be * C31167 + C31075 * C31203 +
                          ae * (C31075 * C31214 + C31074 * C31230 * be) +
                          C31074 * (ae * (C31075 * C31133 + C31230 * be) +
                                    C31074 * (be * C31172 + C31075 * C31102))) /
                         C30826;
    const double C1134 =
        (C31074 * C31128 + C31075 * (C31075 * C31214 + C31559 * be) +
         C31075 * C31559 * be) /
        C30824;
    const double C999 = C31958 * C976;
    const double C8342 = C32200 * C976;
    const double C31618 = C31614 + C31615;
    const double C997 = C31958 * C965;
    const double C8338 = C32200 * C965;
    const double C978 =
        (3 * (C31086 + ae * C31206 + C31074 * C31210) +
         ae * (2 * C31206 + C31074 * C31212) +
         C31074 * (2 * C31210 + ae * C31212 +
                   C31074 * (C31093 + ae * C31074 * C31121 +
                             C31074 * (ae * C31121 + C31074 * C31098)))) /
        C30826;
    const double C1632 =
        (2 * (ae * (C31075 * C31118 + C31228 * be) + C31074 * C31255) +
         ae * (C31075 * C31212 + (C31228 + C31198 * C31209) * be) +
         C31074 * (C31255 + ae * (C31075 * C31074 * C31121 + C31236 * be) +
                   C31074 * (ae * (C31075 * C31121 + C31198 * be) +
                             C31074 * (be * C31162 + C31075 * C31098)))) /
        C30826;
    const double C969 = (3 * (C31126 + C31118 * C31209) +
                         C31074 * (2 * C31206 + C31074 * C31212)) /
                        C30824;
    const double C1132 =
        (C31126 + C31118 * C31209 + C31075 * (C31075 * C31212 + C31554 * be) +
         C31075 * C31554 * be) /
        C30824;
    const double C1626 = (C31075 * (2 * C31206 + C31074 * C31212) +
                          (2 * C31551 + C31074 * C31554) * be) /
                         C30824;
    const double C31295 = C31074 * C31291;
    const double C31300 = 2 * C31291;
    const double C31294 = C31093 + C31290;
    const double C31698 = C31694 + C31695;
    const double C31330 = ae * C31327;
    const double C31716 = C31075 * C31327;
    const double C31725 = 2 * C31327;
    const double C386 = (C31086 + C31093 * C31090 + be * C31075 * C31170 +
                         C31075 * (be * C31170 + C31075 * C31100)) /
                        C30826;
    const double C698 =
        (ae * (C31075 * C31131 +
               (C31124 * C31123 + C31084 * C31083 * C31090) * be) +
         C31074 * (be * C31170 + C31075 * C31100)) /
        C30826;
    const double C131 = (3 * (C31165 + C31159 * C31090) +
                         C31082 * (2 * C31167 + C31082 * C31170)) /
                        C30824;
    const double C261 =
        (C31074 * (2 * C31167 + C31082 * C31170) +
         (2 * C31082 * C31228 + C31082 * (C31228 + C31198 * C31090)) * ae) /
        C30824;
    const double C269 =
        (C31165 + C31159 * C31090 + C31074 * (C31074 * C31170 + C31496 * ae) +
         C31074 * C31496 * ae) /
        C30824;
    const double C366 = (C31075 * (2 * C31167 + C31082 * C31170)) / C30824;
    const double C374 = (C31165 + C31159 * C31090 + C31170 * C31269) / C30824;
    const double C691 = (C31075 * (C31074 * C31170 + C31496 * ae)) / C30824;
    const double C2039 =
        (2 * C31075 * C31170 + C31075 * (C31170 + C31177 * C31269)) / C30824;
    const double C31259 = C31257 + C31258;
    const double C2214 = C32233 * C1147;
    const double C4955 = C32045 * C1147;
    const double C10347 = C32233 * C1147;
    const double C12843 = C9915 * C1147;
    const double C21512 = C32045 * C1147;
    const double C24076 = C23645 * C1147;
    const double C31561 = C31557 + C31558;
    const double C2387 = C1758 * C2037;
    const double C2049 =
        (3 * (C31086 + be * C31268 + C31075 * C31255) +
         be * (2 * C31268 + C31075 * C31271) +
         C31075 * (2 * C31255 + be * C31271 +
                   C31075 * (C31093 + be * C31075 * C31162 +
                             C31075 * (be * C31162 + C31075 * C31098)))) /
        C30826;
    const double C2555 =
        (ae * (2 * (C31075 * C31118 + C31228 * be) +
               C31075 * (C31118 + C31075 * (C31075 * C31121 + C31198 * be) +
                         C31075 * C31198 * be) +
               (C31228 + C31198 * C31269) * be) +
         C31074 * (2 * C31255 + be * C31271 +
                   C31075 * (C31093 + be * C31075 * C31162 +
                             C31075 * (be * C31162 + C31075 * C31098)))) /
        C30826;
    const double C2041 = (3 * (C31165 + C31159 * C31269) +
                          C31075 * (2 * C31268 + C31075 * C31271)) /
                         C30824;
    const double C31331 = C31074 * C31328;
    const double C31335 = C31075 * C31328;
    const double C31431 = 2 * C31328;
    const double C31338 = C31093 + C31337;
    const double C31649 = C31074 * C31647;
    const double C31654 = 2 * C31647;
    const double C31500 = C31082 * C31233;
    const double C31504 = 3 * C31233;
    const double C31567 = C31074 * C31233;
    const double C31566 = C31233 * ae;
    const double C31624 = C31075 * C31233;
    const double C31623 = C31233 * be;
    const double C968 =
        (2 * (C31074 * C31170 + C31496 * ae) +
         C31074 * (C31170 + C31074 * (C31074 * C31177 + C31233 * ae) +
                   C31074 * C31233 * ae) +
         (C31496 + C31233 * C31209) * ae) /
        C30824;
    const double C1128 = (C31075 * (C31131 + C31138 * C31209) +
                          (C31496 + C31233 * C31209) * be) /
                         C30824;
    const double C2038 =
        (2 * (C31075 * C31131 + C31496 * be) +
         C31075 * (C31131 + C31075 * (C31075 * C31138 + C31233 * be) +
                   C31075 * C31233 * be) +
         (C31496 + C31233 * C31269) * be) /
        C30824;
    const double C959 =
        2 * C31074 * C31496 + C31074 * (C31496 + C31233 * C31209);
    const double C1117 = C31075 * (C31496 + C31233 * C31209);
    const double C2030 =
        2 * C31075 * C31496 + C31075 * (C31496 + C31233 * C31269);
    const double C1148 =
        (C31203 + be * C31075 * C31172 +
         C31075 * (be * C31172 + C31075 * C31102) +
         ae * (C31214 + C31075 * (C31075 * C31074 * C31143 + C31240 * be) +
               C31075 * C31240 * be) +
         C31074 *
             (ae * (C31133 + C31075 * (C31075 * C31143 + C31239 * be) +
                    C31075 * C31239 * be) +
              C31074 * (C31102 + be * C31075 * C31182 +
                        C31075 * (be * C31182 + C31075 * C31082 * C31107)))) /
        C30826;
    const double C31680 = 2 * C31240;
    const double C31679 = C31240 * ae;
    const double C31737 = C31075 * C31240;
    const double C31736 = C31240 * be;
    const double C2551 =
        (2 * (C31075 * C31214 + C31559 * be) +
         C31075 * (C31214 + C31075 * (C31075 * C31367 + C31240 * be) +
                   C31075 * C31240 * be) +
         (C31559 + C31240 * C31269) * be) /
        C30824;
    const double C2547 =
        2 * C31075 * C31559 + C31075 * (C31559 + C31240 * C31269);
    const double C31388 = C31383 + C31384;
    const double C31745 = 2 * C31448;
    const double C31744 = C31448 * be;
    const double C31562 = C31230 + C31560;
    const double C31619 = C31230 + C31617;
    const double C31682 = C31677 + C31678;
    const double C31646 = C31074 * C31329;
    const double C31659 = 3 * C31329;
    const double C31658 = C31329 * ae;
    const double C31704 = C31075 * C31329;
    const double C31703 = C31329 * be;
    const double C6831 =
        (2 * (C31075 * C31212 + C31554 * be) +
         C31075 * (C31212 + C31075 * (C31075 * C31293 + C31329 * be) +
                   C31075 * C31329 * be) +
         (C31554 + C31329 * C31269) * be) /
        C30824;
    const double C6828 =
        2 * C31075 * C31554 + C31075 * (C31554 + C31329 * C31269);
    const double C31400 = C31396 + C31397;
    const double C31754 = 2 * C31414;
    const double C31753 = C31414 * be;
    const double C31699 = C31236 + C31697;
    const double C31355 = C31075 * C31350;
    const double C31398 = ae * C31350;
    const double C31719 = C31075 * C31411;
    const double C31728 = 3 * C31411;
    const double C31727 = C31411 * be;
    const double C31663 = C31074 * C31661;
    const double C31760 = C31661 * C31269;
    const double C31110 = C31082 * C31109;
    const double C31223 = C31074 * C31109;
    const double C31262 = C31075 * C31109;
    const double C977 = (2 * (ae * C31131 + C31074 * C31100) +
                         ae * (C31131 + C31138 * std::pow(C31074, 2)) +
                         C31074 * (C31100 + ae * C31074 * C31138 +
                                   C31074 * (ae * C31138 + C31074 * C31109))) /
                        C30826;
    const double C1149 =
        (ae * (C31131 + C31075 * (C31075 * C31138 + C31233 * be) +
               C31075 * C31233 * be) +
         C31074 * (C31100 + be * C31075 * C31177 +
                   C31075 * (be * C31177 + C31075 * C31109))) /
        C30826;
    const double C31313 = C31074 * C31309;
    const double C31357 = C31075 * C31353;
    const double C31399 = C31074 * C31353;
    const double C31376 = C31368 + C31372;
    const double C31389 = C31385 + C31386;
    const double C31149 = C31082 * C31148;
    const double C31224 = C31148 * C31209;
    const double C31314 = C31074 * C31311;
    const double C31377 = C31143 + C31374;
    const double C31188 = C31082 * C31187;
    const double C31278 = C31187 * C31269;
    const double C31443 = C31075 * C31420;
    const double C31452 = C31182 + C31450;
    const double C164 = C148 - C149;
    const double C1304 = C480 - C481;
    const double C1302 = C481 - C480;
    const double C1004 = C986 - C987;
    const double C165 = C150 - C151;
    const double C167 = C154 - C155;
    const double C1305 = C482 - C483;
    const double C1303 = C483 - C482;
    const double C1005 = C988 - C989;
    const double C824 = C113 * C267;
    const double C4384 = C3372 * C267;
    const double C1764 = C32233 * C371;
    const double C3908 = C32045 * C371;
    const double C9925 = C32233 * C371;
    const double C10509 = C9915 * C371;
    const double C20450 = C32045 * C371;
    const double C23654 = C23645 * C371;
    const double C1463 = C31958 * C688;
    const double C3754 = C32045 * C688;
    const double C4949 = C32200 * C688;
    const double C10339 = C9915 * C688;
    const double C12835 = C9914 * C688;
    const double C20296 = C32045 * C688;
    const double C1464 = C113 * C689;
    const double C2211 = C1757 * C689;
    const double C3757 = C3373 * C689;
    const double C4952 = C3372 * C689;
    const double C998 = C113 * C966;
    const double C8341 = C3372 * C966;
    const double C1467 = C31958 * C1126;
    const double C4383 = C32045 * C1126;
    const double C8890 = C32200 * C1126;
    const double C11201 = C9915 * C1126;
    const double C20749 = C32045 * C1126;
    const double C2382 = C32233 * C2036;
    const double C10511 = C32233 * C2036;
    const double C13152 = C32246 * C2036;
    const double C21843 = C32246 * C2036;
    const double C24240 = C23645 * C2036;
    const double C822 = C113 * C250;
    const double C4380 = C3372 * C250;
    const double C1765 = C1758 * C355;
    const double C2379 = C1757 * C355;
    const double C3907 = C3373 * C355;
    const double C1462 = C113 * C682;
    const double C2205 = C1757 * C682;
    const double C3753 = C3373 * C682;
    const double C4948 = C3372 * C682;
    const double C996 = C113 * C958;
    const double C8337 = C3372 * C958;
    const double C1466 = C113 * C1116;
    const double C4382 = C3373 * C1116;
    const double C6993 = C1757 * C1116;
    const double C8889 = C3372 * C1116;
    const double C2207 = C1758 * C1120;
    const double C4950 = C3373 * C1120;
    const double C16776 = C1757 * C1120;
    const double C2381 = C1758 * C2029;
    const double C157 = C113 * C119;
    const double C3399 = C3372 * C119;
    const double C488 = C113 * C247;
    const double C3767 = C3372 * C247;
    const double C830 = C113 * C251;
    const double C4388 = C3372 * C251;
    const double C592 = C113 * C352;
    const double C1786 = C1757 * C352;
    const double C3394 = C3373 * C352;
    const double C3921 = C3372 * C352;
    const double C1777 = C1758 * C356;
    const double C2391 = C1757 * C356;
    const double C3915 = C3373 * C356;
    const double C1470 = C113 * C683;
    const double C2217 = C1757 * C683;
    const double C3761 = C3373 * C683;
    const double C4956 = C3372 * C683;
    const double C5161 = C32045 * C1130;
    const double C6677 = C32233 * C1130;
    const double C10900 = C32233 * C1130;
    const double C11505 = C9915 * C1130;
    const double C21718 = C32045 * C1130;
    const double C24701 = C23645 * C1130;
    const double C7308 = C32233 * C2549;
    const double C11507 = C32233 * C2549;
    const double C13998 = C32246 * C2549;
    const double C25498 = C23645 * C2549;
    const double C27440 = C32246 * C2549;
    const double C5160 = C3373 * C1118;
    const double C6678 = C1758 * C1118;
    const double C7305 = C1757 * C1118;
    const double C7307 = C1758 * C2546;
    const double C970 =
        (3 * (C31165 + C31074 * C31553 + C31551 * ae) +
         C31074 * (2 * C31553 +
                   C31074 * (C31159 + C31074 * (C31074 * C31162 + C31198 * ae) +
                             C31236 * ae) +
                   C31554 * ae) +
         (2 * C31551 + C31074 * C31554) * ae) /
        C30824;
    const double C1125 =
        (C31075 * (C31165 + C31074 * C31553 + C31551 * ae)) / C30824;
    const double C1131 =
        (C31074 * C31165 + C31489 * ae + C31553 * C31269) / C30824;
    const double C1133 =
        (C31165 + C31074 * C31553 + C31551 * ae +
         (C31159 + C31074 * (C31074 * C31162 + C31198 * ae) + C31236 * ae) *
             C31269) /
        C30824;
    const double C1627 =
        (C31075 * (2 * C31553 +
                   C31074 * (C31159 + C31074 * (C31074 * C31162 + C31198 * ae) +
                             C31236 * ae) +
                   C31554 * ae)) /
        C30824;
    const double C2550 =
        (2 * C31075 * C31553 +
         C31075 * (C31553 + (C31074 * C31162 + C31198 * ae) * C31269)) /
        C30824;
    const double C6834 =
        (3 * (C31553 + C31647 * C31269) +
         C31075 * (2 * C31075 * C31647 + C31075 * (C31647 + C31661 * C31269))) /
        C30824;
    const double C6100 = C113 * C960;
    const double C9299 = C3372 * C960;
    const double C6690 = C1758 * C1119;
    const double C7317 = C1757 * C1119;
    const double C9093 = C3373 * C1119;
    const double C6445 = C113 * C1623;
    const double C6699 = C1757 * C1623;
    const double C8331 = C3373 * C1623;
    const double C9797 = C3372 * C1623;
    const double C2040 =
        (3 * (C31126 + C31075 * C31610 + C31608 * be) +
         C31075 *
             (2 * C31610 + C31075 * (C31118 + C31075 * C31327 + C31408 * be) +
              C31611 * be) +
         (2 * C31608 + C31075 * C31611) * be) /
        C30824;
    const double C828 = C487 - C486;
    const double C1309 = C486 - C487;
    const double C6098 = C995 - C994;
    const double C166 = C152 - C153;
    const double C827 = C485 - C484;
    const double C1308 = C484 - C485;
    const double C6097 = C993 - C992;
    const double C31140 = C31135 + C31139;
    const double C1144 = (be * C31170 + C31075 * C31100 +
                          ae * (C31075 * C31221 + C31074 * C31233 * be) +
                          C31074 * (ae * (C31075 * C31138 + C31233 * be) +
                                    C31074 * (be * C31177 + C31075 * C31109))) /
                         C30826;
    const double C971 = (3 * (C31128 + C31133 * C31209) +
                         C31074 * (2 * C31214 + C31074 * C31219)) /
                        C30824;
    const double C31375 = C31102 + C31371;
    const double C31298 = C31292 + C31296;
    const double C31179 = C31174 + C31178;
    const double C2043 = (3 * (C31167 + C31172 * C31269) +
                          C31075 * (2 * C31273 + C31075 * C31275)) /
                         C30824;
    const double C31427 = C31102 + C31426;
    const double C31439 = C31437 + C31438;
    const double C1150 =
        (C31100 + be * C31075 * C31177 +
         C31075 * (be * C31177 + C31075 * C31109) +
         ae * (C31221 + C31075 * (C31075 * C31074 * C31148 + C31246 * be) +
               C31075 * C31246 * be) +
         C31074 * (ae * (C31138 + C31075 * (C31075 * C31148 + C31245 * be) +
                         C31075 * C31245 * be) +
                   C31074 * (C31109 + be * C31075 * C31187 +
                             C31075 * (be * C31187 +
                                       C31075 * (C31107 + std::pow(C31078, 8) *
                                                              bs[8] * C31080 *
                                                              C31090))))) /
        C30826;
    const double C31251 = C31249 + C31250;
    const double C31570 = C31233 + C31568;
    const double C31627 = C31233 + C31625;
    const double C31755 = C31075 * C31418;
    const double C31361 = C31347 + C31358;
    const double C31707 = C31329 + C31705;
    const double C31681 = C31074 * C31393;
    const double C31740 = C31240 + C31738;
    const double C31746 = C31075 * C31451;
    const double C31460 = C31458 + C31459;
    const double C31863 = C31862 / C30826;
    const double C32216 = 2 * C32182;
    const double C31871 = C31870 / C30824;
    const double C32220 = C32186 / C30828;
    const double C32248 = C32180 - C32215;
    const double C15335 = -C32215;
    const double C32262 = C32247 + C31860;
    const double C30917 = C30913 * be;
    const double C30888 = C30880 / C30824;
    const double C30897 = C30822 * C30893;
    const double C30926 = C30893 / C30860;
    const double C31999 = C31994 - C31998;
    const double C32253 = C32229 / C30824;
    const double C32006 = C32002 - C32005;
    const double C32267 = C32256 / C30860;
    const double C5281 =
        ((-(0 * be) / C30824) / C30860 -
         ((0 - (C30822 * C30823) / C30824) * be) / C30824) /
            C30860 -
        ((C30822 * ((-C30823 / C30824) / C30860 -
                    ((C31941 - (C30822 * C30861) / C30824) * be) / C30824) +
          C14625) *
         be) /
            C30824 +
        (-C30861 / C30824) / C30860 - (0 * be) / C30824;
    const double C31004 = C31000 * be;
    const double C30975 = C30967 / C30824;
    const double C9947 = C9918 * C352;
    const double C9942 = C9918 * C364;
    const double C9936 = C9918 * C351;
    const double C9930 = C9918 * C362;
    const double C9924 = C9918 * C350;
    const double C10350 = C9918 * C683;
    const double C10344 = C9918 * C689;
    const double C10338 = C9918 * C682;
    const double C10520 = C9918 * C356;
    const double C10514 = C9918 * C372;
    const double C10508 = C9918 * C355;
    const double C10922 = C9918 * C1623;
    const double C10911 = C9918 * C1115;
    const double C10905 = C9918 * C687;
    const double C10899 = C9918 * C681;
    const double C11200 = C9918 * C1116;
    const double C11516 = C9918 * C1119;
    const double C11504 = C9918 * C1118;
    const double C12836 = C9918 * C1120;
    const double C9938 = C9919 * C356;
    const double C9932 = C9919 * C372;
    const double C9926 = C9919 * C355;
    const double C10340 = C9919 * C1120;
    const double C10516 = C9919 * C2037;
    const double C10510 = C9919 * C2029;
    const double C10913 = C9919 * C1119;
    const double C10901 = C9919 * C1118;
    const double C11506 = C9919 * C2546;
    const double C19936 = C19915 * C352;
    const double C19932 = C19915 * C364;
    const double C19928 = C19915 * C351;
    const double C19924 = C19915 * C362;
    const double C19920 = C19915 * C350;
    const double C20303 = C19915 * C683;
    const double C20299 = C19915 * C689;
    const double C20295 = C19915 * C682;
    const double C20457 = C19915 * C356;
    const double C20453 = C19915 * C372;
    const double C20449 = C19915 * C355;
    const double C20750 = C19915 * C1116;
    const double C20931 = C19915 * C1623;
    const double C20920 = C19915 * C1115;
    const double C20916 = C19915 * C687;
    const double C20912 = C19915 * C681;
    const double C21507 = C19915 * C1120;
    const double C21725 = C19915 * C1119;
    const double C21717 = C19915 * C1118;
    const double C30984 = C30841 * C30980;
    const double C31013 = C30980 / C30860;
    const double C3410 = C3389 - C3390;
    const double C3408 = C3385 - C3386;
    const double C8322 = C4375 - C4374;
    const double C32041 = C32036 - C32040;
    const double C3413 = C3395 - C3396;
    const double C3411 = C3391 - C3392;
    const double C3409 = C3387 - C3388;
    const double C3407 = C3383 - C3384;
    const double C4209 = C3764 - C3763;
    const double C4746 = C3763 - C3764;
    const double C4207 = C3760 - C3759;
    const double C4744 = C3759 - C3760;
    const double C4742 = C3755 - C3756;
    const double C4738 = C3756 - C3755;
    const double C4740 = C3751 - C3752;
    const double C4736 = C3752 - C3751;
    const double C8323 = C4377 - C4376;
    const double C8321 = C4373 - C4372;
    const double C9297 = C8334 - C8333;
    const double C9295 = C8330 - C8329;
    const double C1790 = C1756 * C129;
    const double C1784 = C1756 * C118;
    const double C1779 = C1756 * C127;
    const double C1773 = C1756 * C117;
    const double C1767 = C1756 * C125;
    const double C1761 = C1756 * C116;
    const double C2221 = C1756 * C259;
    const double C2215 = C1756 * C246;
    const double C2209 = C1756 * C257;
    const double C2203 = C1756 * C245;
    const double C2395 = C1756 * C364;
    const double C2389 = C1756 * C351;
    const double C2383 = C1756 * C362;
    const double C2377 = C1756 * C350;
    const double C6703 = C1756 * C964;
    const double C6697 = C1756 * C957;
    const double C6692 = C1756 * C265;
    const double C6686 = C1756 * C249;
    const double C6680 = C1756 * C255;
    const double C6674 = C1756 * C244;
    const double C6997 = C1756 * C267;
    const double C6991 = C1756 * C250;
    const double C7315 = C1756 * C1115;
    const double C7309 = C1756 * C687;
    const double C7303 = C1756 * C681;
    const double C16780 = C1756 * C689;
    const double C16774 = C1756 * C682;
    const double C32255 = C32232 / C30824;
    const double C32048 = C32044 - C32047;
    const double C32269 = C32259 / C30860;
    const double C19946 = C19912 * C140;
    const double C19937 = C19912 * C139;
    const double C19933 = C19912 * C128;
    const double C19929 = C19912 * C138;
    const double C19925 = C19912 * C126;
    const double C19921 = C19912 * C137;
    const double C19917 = C19912 * C124;
    const double C20306 = C19912 * C276;
    const double C20302 = C19912 * C258;
    const double C20298 = C19912 * C275;
    const double C20294 = C19912 * C256;
    const double C20460 = C19912 * C381;
    const double C20456 = C19912 * C363;
    const double C20452 = C19912 * C380;
    const double C20448 = C19912 * C361;
    const double C20751 = C19912 * C280;
    const double C20747 = C19912 * C266;
    const double C20942 = C19912 * C976;
    const double C20938 = C19912 * C965;
    const double C20934 = C19912 * C975;
    const double C20930 = C19912 * C963;
    const double C20921 = C19912 * C279;
    const double C20917 = C19912 * C264;
    const double C20913 = C19912 * C274;
    const double C20909 = C19912 * C254;
    const double C21514 = C19912 * C1126;
    const double C21510 = C19912 * C697;
    const double C21506 = C19912 * C688;
    const double C21728 = C19912 * C1142;
    const double C21724 = C19912 * C1124;
    const double C21720 = C19912 * C696;
    const double C21716 = C19912 * C686;
    const double C9917 =
        ((-(0 * be) / C30824) / C30860 -
         ((0 - (C30841 * C30842) / C30824) * be) / C30824) /
            C30860 -
        ((C30841 * ((-C30842 / C30824) / C30860 -
                    ((C31958 - (C30841 * C30948) / C30824) * be) / C30824) +
          C19912) *
         be) /
            C30824 +
        (-C30948 / C30824) / C30860 - (0 * be) / C30824;
    const double C1791 = C32266 * C139;
    const double C1785 = C32266 * C128;
    const double C1778 = C32266 * C138;
    const double C1772 = C32266 * C126;
    const double C1766 = C32266 * C137;
    const double C1760 = C32266 * C124;
    const double C2222 = C32266 * C276;
    const double C2216 = C32266 * C258;
    const double C2210 = C32266 * C275;
    const double C2204 = C32266 * C256;
    const double C2396 = C32266 * C381;
    const double C2390 = C32266 * C363;
    const double C2384 = C32266 * C380;
    const double C2378 = C32266 * C361;
    const double C6704 = C32266 * C975;
    const double C6698 = C32266 * C963;
    const double C6691 = C32266 * C279;
    const double C6685 = C32266 * C264;
    const double C6679 = C32266 * C274;
    const double C6673 = C32266 * C254;
    const double C6998 = C32266 * C280;
    const double C6992 = C32266 * C266;
    const double C7322 = C32266 * C1142;
    const double C7316 = C32266 * C1124;
    const double C7310 = C32266 * C696;
    const double C7304 = C32266 * C686;
    const double C16781 = C32266 * C697;
    const double C16775 = C32266 * C688;
    const double C163 = C31958 * C141;
    const double C491 = C31958 * C277;
    const double C3772 = C32200 * C277;
    const double C20314 = C19912 * C277;
    const double C595 = C31958 * C382;
    const double C3397 = C32045 * C382;
    const double C3926 = C32200 * C382;
    const double C9954 = C9915 * C382;
    const double C19939 = C32045 * C382;
    const double C20468 = C19912 * C382;
    const double C831 = C31958 * C281;
    const double C4393 = C32200 * C281;
    const double C20760 = C19912 * C281;
    const double C156 = C31958 * C130;
    const double C3400 = C32200 * C130;
    const double C19942 = C19912 * C130;
    const double C489 = C31958 * C260;
    const double C3768 = C32200 * C260;
    const double C20310 = C19912 * C260;
    const double C829 = C31958 * C268;
    const double C4389 = C32200 * C268;
    const double C20756 = C19912 * C268;
    const double C593 = C31958 * C365;
    const double C3393 = C32045 * C365;
    const double C3922 = C32200 * C365;
    const double C9948 = C9915 * C365;
    const double C19935 = C32045 * C365;
    const double C20464 = C19912 * C365;
    const double C1776 = C32233 * C373;
    const double C3916 = C32045 * C373;
    const double C9937 = C32233 * C373;
    const double C10521 = C9915 * C373;
    const double C20458 = C32045 * C373;
    const double C23666 = C23645 * C373;
    const double C1471 = C31958 * C690;
    const double C3762 = C32045 * C690;
    const double C4957 = C32200 * C690;
    const double C10351 = C9915 * C690;
    const double C20304 = C32045 * C690;
    const double C23333 = C19912 * C690;
    const double C1001 = C31958 * C967;
    const double C979 =
        (3 * (C31203 + ae * C31214 + C31074 * C31218) +
         ae * (2 * C31214 + C31074 * C31219) +
         C31074 *
             (2 * C31218 + ae * C31219 +
              C31074 * (C31102 + ae * C31074 * C31143 +
                        C31074 * (ae * C31143 + C31074 * C31082 * C31107)))) /
        C30826;
    const double C1469 = C31958 * C1143;
    const double C4387 = C32045 * C1143;
    const double C8894 = C32200 * C1143;
    const double C11207 = C9915 * C1143;
    const double C20753 = C32045 * C1143;
    const double C21518 = C19912 * C1143;
    const double C2208 = C32233 * C1134;
    const double C4951 = C32045 * C1134;
    const double C10341 = C32233 * C1134;
    const double C12837 = C9915 * C1134;
    const double C21508 = C32045 * C1134;
    const double C24070 = C23645 * C1134;
    const double C6101 = C31958 * C978;
    const double C9304 = C32200 * C978;
    const double C26737 = C19912 * C978;
    const double C6448 = C31958 * C1632;
    const double C8336 = C32045 * C1632;
    const double C9802 = C32200 * C1632;
    const double C10929 = C9915 * C1632;
    const double C20936 = C32045 * C1632;
    const double C27235 = C19912 * C1632;
    const double C6099 = C31958 * C969;
    const double C9300 = C32200 * C969;
    const double C26733 = C19912 * C969;
    const double C6689 = C32233 * C1132;
    const double C9094 = C32045 * C1132;
    const double C10912 = C32233 * C1132;
    const double C11517 = C9915 * C1132;
    const double C21726 = C32045 * C1132;
    const double C24714 = C23645 * C1132;
    const double C6446 = C31958 * C1626;
    const double C8332 = C32045 * C1626;
    const double C9798 = C32200 * C1626;
    const double C10923 = C9915 * C1626;
    const double C20932 = C32045 * C1626;
    const double C27231 = C19912 * C1626;
    const double C31307 = C31300 + C31301;
    const double C31297 = C31294 + C31295;
    const double C31720 = C31118 + C31716;
    const double C1782 = C32233 * C386;
    const double C3920 = C32045 * C386;
    const double C9943 = C32233 * C386;
    const double C10527 = C9915 * C386;
    const double C20462 = C32045 * C386;
    const double C23672 = C23645 * C386;
    const double C1473 = C31958 * C698;
    const double C3766 = C32045 * C698;
    const double C4961 = C32200 * C698;
    const double C10357 = C9915 * C698;
    const double C20308 = C32045 * C698;
    const double C23337 = C19912 * C698;
    const double C159 = C113 * C131;
    const double C3403 = C3372 * C131;
    const double C490 = C113 * C261;
    const double C3771 = C3372 * C261;
    const double C832 = C113 * C269;
    const double C4392 = C3372 * C269;
    const double C594 = C113 * C366;
    const double C1792 = C1757 * C366;
    const double C3398 = C3373 * C366;
    const double C3925 = C3372 * C366;
    const double C9953 = C9918 * C366;
    const double C19940 = C19915 * C366;
    const double C1783 = C1758 * C374;
    const double C2397 = C1757 * C374;
    const double C3919 = C3373 * C374;
    const double C9944 = C9919 * C374;
    const double C10526 = C9918 * C374;
    const double C20461 = C19915 * C374;
    const double C1472 = C113 * C691;
    const double C2223 = C1757 * C691;
    const double C3765 = C3373 * C691;
    const double C4960 = C3372 * C691;
    const double C10356 = C9918 * C691;
    const double C20307 = C19915 * C691;
    const double C2399 = C1758 * C2039;
    const double C10528 = C9919 * C2039;
    const double C1633 =
        (2 * (ae * (C31075 * C31133 + C31230 * be) + C31074 * C31259) +
         ae * (C31075 * C31219 + (C31230 + C31239 * C31209) * be) +
         C31074 *
             (C31259 + ae * (C31075 * C31074 * C31143 + C31240 * be) +
              C31074 * (ae * (C31075 * C31143 + C31239 * be) +
                        C31074 * (be * C31182 + C31075 * C31082 * C31107)))) /
        C30826;
    const double C2047 =
        (2 * (be * C31167 + C31075 * C31203) +
         be * (C31167 + C31172 * std::pow(C31075, 2)) +
         C31075 * (C31203 + be * C31075 * C31172 + C31075 * C31259)) /
        C30826;
    const double C2050 =
        (3 * (C31203 + be * C31273 + C31075 * C31259) +
         be * (2 * C31273 + C31075 * C31275) +
         C31075 *
             (2 * C31259 + be * C31275 +
              C31075 * (C31102 + be * C31075 * C31182 +
                        C31075 * (be * C31182 + C31075 * C31082 * C31107)))) /
        C30826;
    const double C2556 =
        (ae * (2 * (C31075 * C31133 + C31230 * be) +
               C31075 * (C31133 + C31075 * (C31075 * C31143 + C31239 * be) +
                         C31075 * C31239 * be) +
               (C31230 + C31239 * C31269) * be) +
         C31074 *
             (2 * C31259 + be * C31275 +
              C31075 * (C31102 + be * C31075 * C31182 +
                        C31075 * (be * C31182 + C31075 * C31082 * C31107)))) /
        C30826;
    const double C1127 =
        (C31075 * (C31167 + C31074 * C31561 + C31559 * ae)) / C30824;
    const double C1135 =
        (C31074 * C31167 + C31492 * ae + C31561 * C31269) / C30824;
    const double C1137 =
        (C31167 + C31074 * C31561 + C31559 * ae +
         (C31172 + C31074 * (C31074 * C31182 + C31239 * ae) + C31240 * ae) *
             C31269) /
        C30824;
    const double C2552 =
        (2 * C31075 * C31561 +
         C31075 * (C31561 + (C31074 * C31182 + C31239 * ae) * C31269)) /
        C30824;
    const double C7314 = C32233 * C2555;
    const double C11513 = C32233 * C2555;
    const double C14006 = C32246 * C2555;
    const double C25504 = C23645 * C2555;
    const double C27448 = C32246 * C2555;
    const double C31332 = C31330 + C31331;
    const double C31434 = C31431 + C31432;
    const double C31339 = C31338 + C31335;
    const double C31650 = C31159 + C31649;
    const double C31501 = C31499 + C31500;
    const double C1138 =
        (C31074 * C31131 + C31075 * (C31075 * C31221 + C31567 * be) +
         C31075 * C31567 * be) /
        C30824;
    const double C2553 =
        (2 * (C31075 * C31221 + C31567 * be) +
         C31075 * (C31221 + C31075 * (C31075 * C31074 * C31148 + C31246 * be) +
                   C31075 * C31246 * be) +
         (C31567 + C31246 * C31269) * be) /
        C30824;
    const double C1122 = C31074 * C31496 + C31567 * C31269;
    const double C2548 =
        2 * C31075 * C31567 + C31075 * (C31567 + C31246 * C31269);
    const double C31569 = C31565 + C31566;
    const double C31626 = C31622 + C31623;
    const double C1002 = C113 * C968;
    const double C1475 = C31958 * C1128;
    const double C4391 = C32045 * C1128;
    const double C20758 = C32045 * C1128;
    const double C2394 = C32233 * C2038;
    const double C10523 = C32233 * C2038;
    const double C13169 = C32246 * C2038;
    const double C21860 = C32246 * C2038;
    const double C24252 = C23645 * C2038;
    const double C1000 = C113 * C959;
    const double C1474 = C113 * C1117;
    const double C4390 = C3373 * C1117;
    const double C20757 = C19915 * C1117;
    const double C2393 = C1758 * C2030;
    const double C10522 = C9919 * C2030;
    const double C7002 = C32233 * C1148;
    const double C8896 = C32045 * C1148;
    const double C11209 = C32233 * C1148;
    const double C21520 = C32045 * C1148;
    const double C24732 = C23645 * C1148;
    const double C31739 = C31735 + C31736;
    const double C12839 = C32233 * C2551;
    const double C13511 = C32246 * C2551;
    const double C16779 = C32233 * C2551;
    const double C22202 = C32246 * C2551;
    const double C25292 = C23645 * C2551;
    const double C12838 = C9919 * C2547;
    const double C16778 = C1758 * C2547;
    const double C31391 = ae * C31388;
    const double C31743 = C31075 * C31388;
    const double C972 =
        (3 * (C31167 + C31074 * C31561 + C31559 * ae) +
         C31074 * (2 * C31561 +
                   C31074 * (C31172 + C31074 * (C31074 * C31182 + C31239 * ae) +
                             C31240 * ae) +
                   C31562 * ae) +
         (2 * C31559 + C31074 * C31562) * ae) /
        C30824;
    const double C1136 =
        (C31128 + C31133 * C31209 + C31075 * (C31075 * C31219 + C31562 * be) +
         C31075 * C31562 * be) /
        C30824;
    const double C1628 = (C31075 * (2 * C31214 + C31074 * C31219) +
                          (2 * C31559 + C31074 * C31562) * be) /
                         C30824;
    const double C1629 =
        (C31075 * (2 * C31561 +
                   C31074 * (C31172 + C31074 * (C31074 * C31182 + C31239 * ae) +
                             C31240 * ae) +
                   C31562 * ae)) /
        C30824;
    const double C961 = 3 * (C31492 + C31230 * C31209) +
                        C31074 * (2 * C31559 + C31074 * C31562);
    const double C1121 = C31492 + C31230 * C31209 + C31562 * C31269;
    const double C1624 = C31075 * (2 * C31559 + C31074 * C31562);
    const double C7148 =
        2 * C31075 * C31562 + C31075 * (C31562 + C31393 * C31269);
    const double C2042 =
        (3 * (C31128 + C31075 * C31618 + C31616 * be) +
         C31075 *
             (2 * C31618 + C31075 * (C31133 + C31075 * C31388 + C31448 * be) +
              C31619 * be) +
         (2 * C31616 + C31075 * C31619) * be) /
        C30824;
    const double C2032 = 3 * (C31492 + C31230 * C31269) +
                         C31075 * (2 * C31616 + C31075 * C31619);
    const double C31684 = C31074 * C31682;
    const double C11813 =
        (3 * (C31561 + C31682 * C31269) +
         C31075 *
             (2 * C31075 * C31682 +
              C31075 * (C31682 + (C31074 * C31425 + C31387 * ae) * C31269))) /
        C30824;
    const double C31648 = C31645 + C31646;
    const double C31706 = C31702 + C31703;
    const double C7320 = C32233 * C6831;
    const double C11519 = C32233 * C6831;
    const double C14015 = C32246 * C6831;
    const double C27457 = C32246 * C6831;
    const double C30805 = C23645 * C6831;
    const double C7319 = C1758 * C6828;
    const double C11518 = C9919 * C6828;
    const double C31402 = ae * C31400;
    const double C31752 = C31075 * C31400;
    const double C6833 =
        (3 * (C31206 + C31075 * C31698 + C31696 * be) +
         C31075 *
             (2 * C31698 + C31075 * (C31286 + C31075 * C31400 + C31414 * be) +
              C31699 * be) +
         (2 * C31696 + C31075 * C31699) * be) /
        C30824;
    const double C6829 = 3 * (C31551 + C31236 * C31269) +
                         C31075 * (2 * C31696 + C31075 * C31699);
    const double C31359 = C31121 + C31355;
    const double C31721 = C31718 + C31719;
    const double C31664 = C31162 + C31663;
    const double C31761 = C31647 + C31760;
    const double C31111 = C31105 + C31110;
    const double C31225 = C31222 + C31223;
    const double C31263 = C31261 + C31262;
    const double C1003 = C31958 * C977;
    const double C2226 = C32233 * C1149;
    const double C4963 = C32045 * C1149;
    const double C10359 = C32233 * C1149;
    const double C23339 = C32045 * C1149;
    const double C24088 = C23645 * C1149;
    const double C31315 = C31312 + C31313;
    const double C31360 = C31356 + C31357;
    const double C31401 = C31398 + C31399;
    const double C31378 = C31074 * C31376;
    const double C31392 = C31074 * C31389;
    const double C31423 = C31075 * C31389;
    const double C31150 = C31145 + C31149;
    const double C31226 = C31138 + C31224;
    const double C31316 = C31310 + C31314;
    const double C31379 = C31074 * C31377;
    const double C7149 =
        (2 * (C31075 * C31219 + C31562 * be) +
         C31075 * (C31219 + C31075 * (C31075 * C31377 + C31393 * be) +
                   C31075 * C31393 * be) +
         (C31562 + C31393 * C31269) * be) /
        C30824;
    const double C31189 = C31184 + C31188;
    const double C31279 = C31177 + C31278;
    const double C31444 = C31442 + C31443;
    const double C31455 = C31075 * C31452;
    const double C170 = C164 * C114;
    const double C825 = C164 * C817;
    const double C2665 = C164 * C2662;
    const double C171 = C165 * C31941;
    const double C826 = C165 * C32265;
    const double C2666 = C165 * C32199;
    const double C5286 = C165 * C5275;
    const double C14635 = C165 * C14625;
    const double C173 = C167 * C31941;
    const double C2670 = C167 * C32199;
    const double C14639 = C167 * C14625;
    const double C991 = C823 - C824;
    const double C1307 = C824 - C823;
    const double C8327 = C4385 - C4384;
    const double C8691 = C4384 - C4385;
    const double C4743 = C3757 - C3758;
    const double C4739 = C3758 - C3757;
    const double C7534 = C999 - C998;
    const double C7764 = C998 - C999;
    const double C990 = C821 - C822;
    const double C1306 = C822 - C821;
    const double C8325 = C4381 - C4380;
    const double C8689 = C4380 - C4381;
    const double C4741 = C3753 - C3754;
    const double C4737 = C3754 - C3753;
    const double C7533 = C997 - C996;
    const double C7763 = C996 - C997;
    const double C8326 = C4383 - C4382;
    const double C8690 = C4382 - C4383;
    const double C6102 = C113 * C970;
    const double C9303 = C3372 * C970;
    const double C1642 = C113 * C1125;
    const double C4378 = C3373 * C1125;
    const double C6694 = C1757 * C1125;
    const double C7321 = C1756 * C1125;
    const double C9095 = C3372 * C1125;
    const double C10917 = C9918 * C1125;
    const double C20924 = C19915 * C1125;
    const double C5164 = C3373 * C1131;
    const double C6684 = C1758 * C1131;
    const double C7311 = C1757 * C1131;
    const double C10907 = C9919 * C1131;
    const double C11510 = C9918 * C1131;
    const double C21721 = C19915 * C1131;
    const double C6696 = C1758 * C1133;
    const double C7323 = C1757 * C1133;
    const double C9097 = C3373 * C1133;
    const double C10919 = C9919 * C1133;
    const double C11522 = C9918 * C1133;
    const double C21729 = C19915 * C1133;
    const double C6447 = C113 * C1627;
    const double C6705 = C1757 * C1627;
    const double C8335 = C3373 * C1627;
    const double C9801 = C3372 * C1627;
    const double C10928 = C9918 * C1627;
    const double C20935 = C19915 * C1627;
    const double C7313 = C1758 * C2550;
    const double C11512 = C9919 * C2550;
    const double C2668 = C828 * C32003;
    const double C5288 = C828 * C5276;
    const double C14637 = C828 * C32003;
    const double C172 = C166 * C114;
    const double C2669 = C166 * C2662;
    const double C838 = C827 * C818;
    const double C2667 = C827 * C2663;
    const double C5287 = C827 * C5282;
    const double C14636 = C827 * C14632;
    const double C132 = (4 * (2 * C31128 + C31082 * C31131) +
                         C31082 * (3 * C31131 + C31082 * C31140)) /
                        C30824;
    const double C262 = (C31074 * (3 * C31131 + C31082 * C31140)) / C30824;
    const double C270 =
        (2 * C31128 + C31082 * C31131 + C31140 * C31209) / C30824;
    const double C1477 = C31958 * C1144;
    const double C4395 = C32045 * C1144;
    const double C20762 = C32045 * C1144;
    const double C6270 = C31958 * C971;
    const double C6090 = (4 * (2 * C31206 + C31074 * C31212) +
                          C31074 * (3 * C31212 + C31074 * C31298)) /
                         C30824;
    const double C133 = (4 * (2 * C31167 + C31082 * C31170) +
                         C31082 * (3 * C31170 + C31082 * C31179)) /
                        C30824;
    const double C263 = (C31074 * (3 * C31170 + C31082 * C31179) +
                         (3 * (C31228 + C31198 * C31090) +
                          C31082 * (2 * C31230 + C31082 * C31233)) *
                             ae) /
                        C30824;
    const double C368 = (C31075 * (3 * C31170 + C31082 * C31179)) / C30824;
    const double C376 =
        (2 * C31167 + C31082 * C31170 + C31179 * C31269) / C30824;
    const double C11724 = (4 * (2 * C31268 + C31075 * C31271) +
                           C31075 * (3 * C31271 + C31075 * C31439)) /
                          C30824;
    const double C31505 = C31082 * C31251;
    const double C31630 = C31074 * C31251;
    const double C962 = 3 * (C31496 + C31233 * C31209) +
                        C31074 * (2 * C31567 + C31074 * C31570);
    const double C1123 = C31496 + C31233 * C31209 + C31570 * C31269;
    const double C1625 = C31075 * (2 * C31567 + C31074 * C31570);
    const double C2033 = 3 * (C31496 + C31233 * C31269) +
                         C31075 * (2 * C31624 + C31075 * C31627);
    const double C31757 = C31754 + C31755;
    const double C31660 = C31074 * C31361;
    const double C6830 = 3 * (C31554 + C31329 * C31269) +
                         C31075 * (2 * C31704 + C31075 * C31707);
    const double C31683 = C31680 + C31681;
    const double C11811 = 3 * (C31559 + C31240 * C31269) +
                          C31075 * (2 * C31737 + C31075 * C31740);
    const double C31748 = C31745 + C31746;
    const double C31729 = C31075 * C31460;
    const double C31864 = C31860 - C31863;
    const double C32249 = C32216 / C30824;
    const double C31872 = C31868 - C31871;
    const double C32263 = C32248 / C30860;
    const double C30919 = C30917 / C30824;
    const double C30892 = C31941 - C30888;
    const double C30901 = C30897 + C32003;
    const double C30929 = C30926 - C30928;
    const double C17100 = C165 * C31999;
    const double C32202 = C31999 * C31993;
    const double C32238 = C32204 + C31999;
    const double C839 = C828 * C32253;
    const double C17102 = C828 * C32006;
    const double C32206 = C32006 / C30860;
    const double C32203 = C32006 * C31993;
    const double C7424 = C32267 - (C31999 * C31995) / C30824;
    const double C5285 = C164 * C5281;
    const double C31006 = C31004 / C30824;
    const double C30979 = C31958 - C30975;
    const double C9961 = C9941 - C9942;
    const double C9958 = C9935 - C9936;
    const double C12630 = C10344 - C10345;
    const double C12624 = C10345 - C10344;
    const double C12627 = C10338 - C10339;
    const double C12621 = C10339 - C10338;
    const double C10933 = C10910 - C10911;
    const double C19952 = C19931 - C19932;
    const double C19950 = C19927 - C19928;
    const double C21300 = C20299 - C20300;
    const double C21296 = C20300 - C20299;
    const double C21298 = C20295 - C20296;
    const double C21294 = C20296 - C20295;
    const double C20926 = C20749 - C20750;
    const double C21302 = C20750 - C20749;
    const double C20946 = C20919 - C20920;
    const double C30988 = C30984 + C32045;
    const double C31016 = C31013 - C31015;
    const double C23681 = C32041 * C139;
    const double C23675 = C32041 * C128;
    const double C23668 = C32041 * C138;
    const double C23662 = C32041 * C126;
    const double C23656 = C32041 * C137;
    const double C23650 = C32041 * C124;
    const double C24084 = C32041 * C276;
    const double C24078 = C32041 * C258;
    const double C24072 = C32041 * C275;
    const double C24066 = C32041 * C256;
    const double C24254 = C32041 * C381;
    const double C24248 = C32041 * C363;
    const double C24242 = C32041 * C380;
    const double C24236 = C32041 * C361;
    const double C24728 = C32041 * C280;
    const double C24722 = C32041 * C266;
    const double C24716 = C32041 * C279;
    const double C24710 = C32041 * C264;
    const double C24703 = C32041 * C274;
    const double C24697 = C32041 * C254;
    const double C25294 = C32041 * C697;
    const double C25288 = C32041 * C688;
    const double C25500 = C32041 * C696;
    const double C25494 = C32041 * C686;
    const double C30243 = C32041 * C975;
    const double C30237 = C32041 * C963;
    const double C30807 = C32041 * C1142;
    const double C30801 = C32041 * C1124;
    const double C32208 = C32041 * C32035;
    const double C32244 = C32210 + C32041;
    const double C3416 = C3409 + C3410;
    const double C3415 = C3407 + C3408;
    const double C8345 = C8321 + C8322;
    const double C1793 = C32255 * C382;
    const double C1787 = C32255 * C365;
    const double C1780 = C32255 * C381;
    const double C1774 = C32255 * C363;
    const double C1768 = C32255 * C380;
    const double C1762 = C32255 * C361;
    const double C2224 = C32255 * C698;
    const double C2218 = C32255 * C690;
    const double C2212 = C32255 * C697;
    const double C2206 = C32255 * C688;
    const double C2398 = C32255 * C386;
    const double C2392 = C32255 * C373;
    const double C2386 = C32255 * C385;
    const double C2380 = C32255 * C371;
    const double C6706 = C32255 * C1632;
    const double C6700 = C32255 * C1626;
    const double C6693 = C32255 * C1142;
    const double C6687 = C32255 * C1124;
    const double C6681 = C32255 * C696;
    const double C6675 = C32255 * C686;
    const double C7000 = C32255 * C1143;
    const double C6994 = C32255 * C1126;
    const double C7324 = C32255 * C1146;
    const double C7318 = C32255 * C1132;
    const double C7312 = C32255 * C1145;
    const double C7306 = C32255 * C1130;
    const double C16783 = C32255 * C1147;
    const double C16777 = C32255 * C1134;
    const double C23683 = C32048 * C382;
    const double C23677 = C32048 * C365;
    const double C23670 = C32048 * C381;
    const double C23664 = C32048 * C363;
    const double C23658 = C32048 * C380;
    const double C23652 = C32048 * C361;
    const double C24086 = C32048 * C698;
    const double C24080 = C32048 * C690;
    const double C24074 = C32048 * C697;
    const double C24068 = C32048 * C688;
    const double C24256 = C32048 * C386;
    const double C24250 = C32048 * C373;
    const double C24244 = C32048 * C385;
    const double C24238 = C32048 * C371;
    const double C24730 = C32048 * C1143;
    const double C24724 = C32048 * C1126;
    const double C24718 = C32048 * C1142;
    const double C24712 = C32048 * C1124;
    const double C24705 = C32048 * C696;
    const double C24699 = C32048 * C686;
    const double C25296 = C32048 * C1147;
    const double C25290 = C32048 * C1134;
    const double C25502 = C32048 * C1145;
    const double C25496 = C32048 * C1130;
    const double C30245 = C32048 * C1632;
    const double C30239 = C32048 * C1626;
    const double C30809 = C32048 * C1146;
    const double C30803 = C32048 * C1132;
    const double C32212 = C32048 / C30860;
    const double C32209 = C32048 * C32035;
    const double C13137 = C32269 - (C32041 * C32037) / C30824;
    const double C9951 = C9917 * C129;
    const double C9945 = C9917 * C118;
    const double C9940 = C9917 * C127;
    const double C9934 = C9917 * C117;
    const double C9928 = C9917 * C125;
    const double C9922 = C9917 * C116;
    const double C10354 = C9917 * C259;
    const double C10348 = C9917 * C246;
    const double C10342 = C9917 * C257;
    const double C10336 = C9917 * C245;
    const double C10524 = C9917 * C364;
    const double C10518 = C9917 * C351;
    const double C10512 = C9917 * C362;
    const double C10506 = C9917 * C350;
    const double C10926 = C9917 * C964;
    const double C10920 = C9917 * C957;
    const double C10915 = C9917 * C265;
    const double C10909 = C9917 * C249;
    const double C10903 = C9917 * C255;
    const double C10897 = C9917 * C244;
    const double C11204 = C9917 * C267;
    const double C11198 = C9917 * C250;
    const double C11520 = C9917 * C1125;
    const double C11514 = C9917 * C1115;
    const double C11508 = C9917 * C687;
    const double C11502 = C9917 * C681;
    const double C12840 = C9917 * C689;
    const double C12834 = C9917 * C682;
    const double C1799 = C1778 - C1779;
    const double C1796 = C1772 - C1773;
    const double C16569 = C2209 - C2210;
    const double C16563 = C2210 - C2209;
    const double C16566 = C2203 - C2204;
    const double C16560 = C2204 - C2203;
    const double C6712 = C6691 - C6692;
    const double C6709 = C6685 - C6686;
    const double C168 = C156 - C157;
    const double C2671 = C489 - C488;
    const double C3007 = C488 - C489;
    const double C840 = C829 - C830;
    const double C1310 = C830 - C829;
    const double C3412 = C3393 - C3394;
    const double C19954 = C19935 - C19936;
    const double C1798 = C1776 - C1777;
    const double C9959 = C9937 - C9938;
    const double C4208 = C3762 - C3761;
    const double C4745 = C3761 - C3762;
    const double C22636 = C20304 - C20303;
    const double C23133 = C20303 - C20304;
    const double C6272 = C31958 * C979;
    const double C16568 = C2207 - C2208;
    const double C16562 = C2208 - C2207;
    const double C12628 = C10340 - C10341;
    const double C12622 = C10341 - C10340;
    const double C6107 = C6099 - C6100;
    const double C6711 = C6689 - C6690;
    const double C10934 = C10912 - C10913;
    const double C9296 = C8332 - C8331;
    const double C26729 = C20932 - C20931;
    const double C6094 =
        (4 * (2 * C31210 + ae * C31212 + C31074 * C31297) +
         ae * (3 * C31212 + C31074 * C31298) +
         C31074 *
             (3 * C31297 + ae * C31298 +
              C31074 * (2 * C31291 + ae * C31293 +
                        C31074 * (C31098 + ae * C31074 * C31136 +
                                  C31074 * (ae * C31136 + C31074 * C31107))))) /
        C30826;
    const double C31722 = C31720 + C31717;
    const double C169 = C158 - C159;
    const double C2672 = C491 - C490;
    const double C3008 = C490 - C491;
    const double C841 = C831 - C832;
    const double C1311 = C832 - C831;
    const double C3414 = C3397 - C3398;
    const double C19956 = C19939 - C19940;
    const double C1801 = C1782 - C1783;
    const double C9962 = C9943 - C9944;
    const double C4210 = C3766 - C3765;
    const double C4747 = C3765 - C3766;
    const double C22638 = C20308 - C20307;
    const double C23135 = C20307 - C20308;
    const double C7898 = C31958 * C1633;
    const double C8344 = C32045 * C1633;
    const double C20944 = C32045 * C1633;
    const double C2388 = C32233 * C2047;
    const double C10517 = C32233 * C2047;
    const double C13160 = C32246 * C2047;
    const double C21851 = C32246 * C2047;
    const double C24246 = C23645 * C2047;
    const double C13665 = C32246 * C2050;
    const double C22356 = C32246 * C2050;
    const double C12845 = C32233 * C2556;
    const double C13519 = C32246 * C2556;
    const double C16785 = C32233 * C2556;
    const double C22210 = C32246 * C2556;
    const double C25298 = C23645 * C2556;
    const double C1468 = C113 * C1127;
    const double C4386 = C3373 * C1127;
    const double C6999 = C1757 * C1127;
    const double C8893 = C3372 * C1127;
    const double C11206 = C9918 * C1127;
    const double C20754 = C19915 * C1127;
    const double C2213 = C1758 * C1135;
    const double C4954 = C3373 * C1135;
    const double C10346 = C9919 * C1135;
    const double C12842 = C9918 * C1135;
    const double C16782 = C1757 * C1135;
    const double C21511 = C19915 * C1135;
    const double C7001 = C1758 * C1137;
    const double C8895 = C3373 * C1137;
    const double C11208 = C9919 * C1137;
    const double C21519 = C19915 * C1137;
    const double C12844 = C9919 * C2552;
    const double C16784 = C1758 * C2552;
    const double C6179 =
        (3 * (C31255 + ae * (C31075 * C31286 + C31236 * be) + C31074 * C31332) +
         ae * (C31075 * C31298 + (2 * C31236 + C31074 * C31329) * be) +
         C31074 *
             (2 * C31332 + ae * (C31075 * C31293 + C31329 * be) +
              C31074 * (C31328 + ae * (C31075 * C31302 + C31074 * C31200 * be) +
                        C31074 * (ae * (C31075 * C31136 + C31200 * be) +
                                  C31074 * (be * C31175 + C31075 * C31107))))) /
        C30826;
    const double C6180 =
        (2 * (ae * (C31118 + C31075 * C31327 + C31075 * C31198 * be) +
              C31074 * C31339) +
         ae * (C31212 + C31075 * (C31075 * C31293 + C31329 * be) +
               C31075 * C31329 * be) +
         C31074 *
             (C31339 +
              ae * (C31286 + C31075 * (C31075 * C31302 + C31336 * be) +
                    C31075 * C31336 * be) +
              C31074 *
                  (ae * (C31121 + C31075 * (C31075 * C31136 + C31200 * be) +
                         C31075 * C31200 * be) +
                   C31074 * (C31098 + be * C31075 * C31175 +
                             C31075 * (be * C31175 + C31075 * C31107))))) /
        C30826;
    const double C31651 = C31650 + C31644;
    const double C271 =
        (2 * C31167 + C31082 * C31170 +
         C31074 * (C31074 * C31179 + C31501 * ae) + C31074 * C31501 * ae) /
        C30824;
    const double C367 = (C31075 * (3 * C31131 + C31082 * C31140) +
                         (3 * C31496 + C31082 * C31501) * be) /
                        C30824;
    const double C375 =
        (2 * C31128 + C31082 * C31131 +
         C31075 * (C31075 * C31140 + C31501 * be) + C31075 * C31501 * be) /
        C30824;
    const double C692 =
        (C31075 * C31074 * C31140 + C31074 * C31501 * be) / C30824;
    const double C693 = (C31075 * (C31074 * C31179 + C31501 * ae)) / C30824;
    const double C120 = 4 * (2 * C31492 + C31082 * C31496) +
                        C31082 * (3 * C31496 + C31082 * C31501);
    const double C248 = C31074 * (3 * C31496 + C31082 * C31501);
    const double C252 = 2 * C31492 + C31082 * C31496 + C31501 * C31209;
    const double C353 = C31075 * (3 * C31496 + C31082 * C31501);
    const double C357 = 2 * C31492 + C31082 * C31496 + C31501 * C31269;
    const double C684 = C31075 * C31074 * C31501;
    const double C1297 =
        2 * C31074 * C31501 + C31074 * (C31501 + C31251 * C31209);
    const double C1457 = C31075 * (C31501 + C31251 * C31209);
    const double C2372 =
        2 * C31075 * C31501 + C31075 * (C31501 + C31251 * C31269);
    const double C2220 = C32233 * C1138;
    const double C4959 = C32045 * C1138;
    const double C10353 = C32233 * C1138;
    const double C23335 = C32045 * C1138;
    const double C24082 = C23645 * C1138;
    const double C2219 = C1758 * C1122;
    const double C4958 = C3373 * C1122;
    const double C10352 = C9919 * C1122;
    const double C23334 = C19915 * C1122;
    const double C974 =
        (3 * (C31170 + C31074 * C31569 + C31567 * ae) +
         C31074 * (2 * C31569 +
                   C31074 * (C31177 + C31074 * (C31074 * C31187 + C31245 * ae) +
                             C31246 * ae) +
                   C31570 * ae) +
         (2 * C31567 + C31074 * C31570) * ae) /
        C30824;
    const double C1129 =
        (C31075 * (C31170 + C31074 * C31569 + C31567 * ae)) / C30824;
    const double C1139 =
        (C31074 * C31170 + C31496 * ae + C31569 * C31269) / C30824;
    const double C1141 =
        (C31170 + C31074 * C31569 + C31567 * ae +
         (C31177 + C31074 * (C31074 * C31187 + C31245 * ae) + C31246 * ae) *
             C31269) /
        C30824;
    const double C1631 =
        (C31075 * (2 * C31569 +
                   C31074 * (C31177 + C31074 * (C31074 * C31187 + C31245 * ae) +
                             C31246 * ae) +
                   C31570 * ae)) /
        C30824;
    const double C2554 =
        (2 * C31075 * C31569 +
         C31075 * (C31569 + (C31074 * C31187 + C31245 * ae) * C31269)) /
        C30824;
    const double C2044 =
        (3 * (C31131 + C31075 * C31626 + C31624 * be) +
         C31075 * (2 * C31626 +
                   C31075 * (C31138 + C31075 * (C31075 * C31148 + C31245 * be) +
                             C31075 * C31245 * be) +
                   C31627 * be) +
         (2 * C31624 + C31075 * C31627) * be) /
        C30824;
    const double C11812 =
        (3 * (C31214 + C31075 * C31739 + C31737 * be) +
         C31075 * (2 * C31739 +
                   C31075 * (C31367 +
                             C31075 * (C31075 * C31074 * C31370 + C31424 * be) +
                             C31075 * C31424 * be) +
                   C31740 * be) +
         (2 * C31737 + C31075 * C31740) * be) /
        C30824;
    const double C31747 = C31133 + C31743;
    const double C6271 = C113 * C972;
    const double C6996 = C32233 * C1136;
    const double C8892 = C32045 * C1136;
    const double C11203 = C32233 * C1136;
    const double C21516 = C32045 * C1136;
    const double C24726 = C23645 * C1136;
    const double C7896 = C31958 * C1628;
    const double C8340 = C32045 * C1628;
    const double C20940 = C32045 * C1628;
    const double C7897 = C113 * C1629;
    const double C8343 = C3373 * C1629;
    const double C20943 = C19915 * C1629;
    const double C6269 = C113 * C961;
    const double C6995 = C1758 * C1121;
    const double C8891 = C3373 * C1121;
    const double C11202 = C9919 * C1121;
    const double C21515 = C19915 * C1121;
    const double C7895 = C113 * C1624;
    const double C8339 = C3373 * C1624;
    const double C20939 = C19915 * C1624;
    const double C13657 = C32246 * C2042;
    const double C22348 = C32246 * C2042;
    const double C31685 = C31172 + C31684;
    const double C6173 = (C31075 * (3 * C31212 + C31074 * C31298) +
                          (3 * C31554 + C31074 * C31648) * be) /
                         C30824;
    const double C6175 =
        (2 * C31206 + C31074 * C31212 +
         C31075 * (C31075 * C31298 + C31648 * be) + C31075 * C31648 * be) /
        C30824;
    const double C6088 = 4 * (2 * C31551 + C31074 * C31554) +
                         C31074 * (3 * C31554 + C31074 * C31648);
    const double C6170 = C31075 * (3 * C31554 + C31074 * C31648);
    const double C6171 = 2 * C31551 + C31074 * C31554 + C31648 * C31269;
    const double C7298 =
        2 * C31075 * C31648 + C31075 * (C31648 + C31361 * C31269);
    const double C6835 =
        (3 * (C31212 + C31075 * C31706 + C31704 * be) +
         C31075 * (2 * C31706 +
                   C31075 * (C31293 + C31075 * (C31075 * C31311 + C31354 * be) +
                             C31075 * C31354 * be) +
                   C31707 * be) +
         (2 * C31704 + C31075 * C31707) * be) /
        C30824;
    const double C31404 = C31328 + C31402;
    const double C31756 = C31286 + C31752;
    const double C14519 = C32246 * C6833;
    const double C27961 = C32246 * C6833;
    const double C31362 = C31359 + C31351;
    const double C11721 = 4 * (2 * C31608 + C31075 * C31611) +
                          C31075 * (3 * C31611 + C31075 * C31721);
    const double C31665 = C31664 + C31657;
    const double C11985 =
        (4 * (2 * C31075 * C31647 + C31075 * C31761) +
         C31075 * (3 * C31761 + C31075 * (2 * C31075 * C31661 +
                                          C31075 * (C31661 + (C31074 * C31185 +
                                                              C31243 * ae) *
                                                                 C31269)))) /
        C30824;
    const double C142 =
        (5 * (3 * C31100 + C31082 * C31111) +
         C31082 * (4 * C31111 +
                   C31082 * (3 * C31109 +
                             C31082 * (2 * C31082 * C31107 +
                                       C31082 * (C31107 + std::pow(C31078, 8) *
                                                              bs[8] * C31080 *
                                                              C31090))))) /
        C30826;
    const double C278 =
        (ae * (3 * (C31118 + C31121 * C31090) +
               C31082 *
                   (2 * C31082 * C31121 +
                    C31082 * (C31121 + C31095 * C31096 * C31115 * C31090))) +
         C31074 * (3 * C31100 + C31082 * C31111)) /
        C30826;
    const double C282 =
        (2 * C31082 * C31093 + C31082 * C31100 + ae * C31074 * C31140 +
         C31074 * (ae * C31140 + C31074 * C31111)) /
        C30826;
    const double C383 =
        (be * (3 * (C31159 + C31162 * C31090) +
               C31082 *
                   (2 * C31082 * C31162 +
                    C31082 * (C31162 + C31095 * C31096 * C31156 * C31090))) +
         C31075 * (3 * C31100 + C31082 * C31111)) /
        C30826;
    const double C387 =
        (2 * C31082 * C31093 + C31082 * C31100 + be * C31075 * C31179 +
         C31075 * (be * C31179 + C31075 * C31111)) /
        C30826;
    const double C699 = (ae * (C31075 * C31140 +
                               (2 * C31082 * C31198 +
                                C31082 * (C31198 + C31089 * C31091 * C31090)) *
                                   be) +
                         C31074 * (be * C31179 + C31075 * C31111)) /
                        C30826;
    const double C2048 =
        (2 * (be * C31170 + C31075 * C31100) +
         be * (C31170 + C31177 * std::pow(C31075, 2)) +
         C31075 * (C31100 + be * C31075 * C31177 + C31075 * C31263)) /
        C30826;
    const double C31317 = C31074 * C31315;
    const double C31363 = C31074 * C31360;
    const double C31433 = C31075 * C31360;
    const double C31403 = C31074 * C31401;
    const double C31380 = C31375 + C31378;
    const double C31394 = C31391 + C31392;
    const double C31428 = C31427 + C31423;
    const double C31151 = C31082 * C31150;
    const double C1300 =
        (2 * (ae * C31140 + C31074 * C31111) + ae * (C31140 + C31150 * C31209) +
         C31074 * (C31111 + ae * C31074 * C31150 +
                   C31074 * (ae * C31150 +
                             C31074 * (2 * C31082 * C31107 +
                                       C31082 * (C31107 + std::pow(C31078, 8) *
                                                              bs[8] * C31080 *
                                                              C31090))))) /
        C30826;
    const double C1298 =
        (2 * C31074 * C31140 + C31074 * (C31140 + C31150 * C31209)) / C30824;
    const double C1458 = (C31075 * (C31140 + C31150 * C31209) +
                          (C31501 + C31251 * C31209) * be) /
                         C30824;
    const double C2373 =
        (2 * (C31075 * C31140 + C31501 * be) +
         C31075 * (C31140 + C31075 * (C31075 * C31150 + C31251 * be) +
                   C31075 * C31251 * be) +
         (C31501 + C31251 * C31269) * be) /
        C30824;
    const double C980 =
        (3 * (C31100 + ae * C31221 + C31074 * C31225) +
         ae * (2 * C31221 + C31074 * C31226) +
         C31074 * (2 * C31225 + ae * C31226 +
                   C31074 * (C31109 + ae * C31074 * C31148 +
                             C31074 * (ae * C31148 +
                                       C31074 * (C31107 + std::pow(C31078, 8) *
                                                              bs[8] * C31080 *
                                                              C31090))))) /
        C30826;
    const double C1634 =
        (2 * (ae * (C31075 * C31138 + C31233 * be) + C31074 * C31263) +
         ae * (C31075 * C31226 + (C31233 + C31245 * C31209) * be) +
         C31074 * (C31263 + ae * (C31075 * C31074 * C31148 + C31246 * be) +
                   C31074 * (ae * (C31075 * C31148 + C31245 * be) +
                             C31074 * (be * C31187 +
                                       C31075 * (C31107 + std::pow(C31078, 8) *
                                                              bs[8] * C31080 *
                                                              C31090))))) /
        C30826;
    const double C973 = (3 * (C31131 + C31138 * C31209) +
                         C31074 * (2 * C31221 + C31074 * C31226)) /
                        C30824;
    const double C1140 =
        (C31131 + C31138 * C31209 + C31075 * (C31075 * C31226 + C31570 * be) +
         C31075 * C31570 * be) /
        C30824;
    const double C1630 = (C31075 * (2 * C31221 + C31074 * C31226) +
                          (2 * C31567 + C31074 * C31570) * be) /
                         C30824;
    const double C31318 = C31074 * C31316;
    const double C7299 =
        (2 * (C31075 * C31298 + C31648 * be) +
         C31075 * (C31298 + C31075 * (C31075 * C31316 + C31361 * be) +
                   C31075 * C31361 * be) +
         (C31648 + C31361 * C31269) * be) /
        C30824;
    const double C31381 = C31373 + C31379;
    const double C31190 = C31082 * C31189;
    const double C1460 =
        (be * C31179 + C31075 * C31111 +
         ae * (C31075 * C31074 * C31150 + C31074 * C31251 * be) +
         C31074 * (ae * (C31075 * C31150 + C31251 * be) +
                   C31074 * (be * C31189 +
                             C31075 * (2 * C31082 * C31107 +
                                       C31082 * (C31107 + std::pow(C31078, 8) *
                                                              bs[8] * C31080 *
                                                              C31090))))) /
        C30826;
    const double C2201 =
        (ae * (C31140 + C31075 * (C31075 * C31150 + C31251 * be) +
               C31075 * C31251 * be) +
         C31074 * (C31111 + be * C31075 * C31189 +
                   C31075 * (be * C31189 +
                             C31075 * (2 * C31082 * C31107 +
                                       C31082 * (C31107 + std::pow(C31078, 8) *
                                                              bs[8] * C31080 *
                                                              C31090))))) /
        C30826;
    const double C2375 =
        (2 * (be * C31179 + C31075 * C31111) + be * (C31179 + C31189 * C31269) +
         C31075 * (C31111 + be * C31075 * C31189 +
                   C31075 * (be * C31189 +
                             C31075 * (2 * C31082 * C31107 +
                                       C31082 * (C31107 + std::pow(C31078, 8) *
                                                              bs[8] * C31080 *
                                                              C31090))))) /
        C30826;
    const double C1299 =
        (2 * (C31074 * C31179 + C31501 * ae) +
         C31074 * (C31179 + C31074 * (C31074 * C31189 + C31251 * ae) +
                   C31074 * C31251 * ae) +
         (C31501 + C31251 * C31209) * ae) /
        C30824;
    const double C1459 =
        (C31075 * (C31179 + C31074 * (C31074 * C31189 + C31251 * ae) +
                   C31074 * C31251 * ae)) /
        C30824;
    const double C2200 = (C31074 * C31179 + C31501 * ae +
                          (C31074 * C31189 + C31251 * ae) * C31269) /
                         C30824;
    const double C2374 =
        (2 * C31075 * C31179 + C31075 * (C31179 + C31189 * C31269)) / C30824;
    const double C2051 =
        (3 * (C31100 + be * C31277 + C31075 * C31263) +
         be * (2 * C31277 + C31075 * C31279) +
         C31075 * (2 * C31263 + be * C31279 +
                   C31075 * (C31109 + be * C31075 * C31187 +
                             C31075 * (be * C31187 +
                                       C31075 * (C31107 + std::pow(C31078, 8) *
                                                              bs[8] * C31080 *
                                                              C31090))))) /
        C30826;
    const double C2557 =
        (ae * (2 * (C31075 * C31138 + C31233 * be) +
               C31075 * (C31138 + C31075 * (C31075 * C31148 + C31245 * be) +
                         C31075 * C31245 * be) +
               (C31233 + C31245 * C31269) * be) +
         C31074 * (2 * C31263 + be * C31279 +
                   C31075 * (C31109 + be * C31075 * C31187 +
                             C31075 * (be * C31187 +
                                       C31075 * (C31107 + std::pow(C31078, 8) *
                                                              bs[8] * C31080 *
                                                              C31090))))) /
        C30826;
    const double C2045 = (3 * (C31170 + C31177 * C31269) +
                          C31075 * (2 * C31277 + C31075 * C31279)) /
                         C30824;
    const double C31445 = C31075 * C31444;
    const double C31456 = C31454 + C31455;
    const double C176 = C170 + C171;
    const double C837 = C825 + C826;
    const double C2673 = C2665 + C2666;
    const double C4751 = C4742 + C4743;
    const double C4749 = C4738 + C4739;
    const double C4750 = C4740 + C4741;
    const double C4748 = C4736 + C4737;
    const double C8347 = C8325 + C8326;
    const double C8693 = C8689 + C8690;
    const double C6108 = C6101 - C6102;
    const double C8324 = C4379 - C4378;
    const double C10936 = C10916 - C10917;
    const double C20948 = C20923 - C20924;
    const double C6714 = C6695 - C6696;
    const double C10937 = C10918 - C10919;
    const double C9298 = C8336 - C8335;
    const double C26731 = C20936 - C20935;
    const double C177 = C172 + C173;
    const double C2674 = C2669 + C2670;
    const double C161 = C31958 * C132;
    const double C493 = C31958 * C262;
    const double C834 = C31958 * C270;
    const double C6104 = C31958 * C6090;
    const double C162 = C113 * C133;
    const double C494 = C113 * C263;
    const double C598 = C113 * C368;
    const double C3405 = C3373 * C368;
    const double C19947 = C19915 * C368;
    const double C1794 = C1758 * C376;
    const double C3927 = C3373 * C376;
    const double C9955 = C9919 * C376;
    const double C20469 = C19915 * C376;
    const double C31506 = C31504 + C31505;
    const double C2199 =
        (C31074 * C31140 + C31075 * (C31075 * C31074 * C31150 + C31630 * be) +
         C31075 * C31630 * be) /
        C30824;
    const double C2198 = C31074 * C31501 + C31630 * C31269;
    const double C11983 = 4 * (2 * C31696 + C31075 * C31699) +
                          C31075 * (3 * C31699 + C31075 * C31757);
    const double C31662 = C31659 + C31660;
    const double C6264 = 4 * (2 * C31559 + C31074 * C31562) +
                         C31074 * (3 * C31562 + C31074 * C31683);
    const double C6354 = C31075 * (3 * C31562 + C31074 * C31683);
    const double C6986 = 2 * C31559 + C31074 * C31562 + C31683 * C31269;
    const double C11897 = 4 * (2 * C31616 + C31075 * C31619) +
                          C31075 * (3 * C31619 + C31075 * C31748);
    const double C31731 = C31728 + C31729;
    const double C32179 = C31864 * C31854;
    const double C32218 = C32184 + C31864;
    const double C32187 = C31872 / C30860;
    const double C32183 = C31872 * C31854;
    const double C2658 = C32263 - (C31864 * C31855) / C30824;
    const double C30921 = C30916 - C30919;
    const double C30896 = C30892 * ae;
    const double C14631 = (-C30878) / C30860 - (C30892 * be) / C30824;
    const double C30905 = C30901 * be;
    const double C6025 =
        (C30929 / C30860 + (0 * ae) / C30824) / C30860 - (0 * be) / C30824;
    const double C7433 = C30929 / C30860 - (0 * be) / C30824;
    const double C15340 = C30929 / C30860 + (0 * ae) / C30824;
    const double C32235 = C32202 / C30824;
    const double C32257 = C32238 / C30860;
    const double C32258 = C32239 + C32206;
    const double C7426 = C32206 - C32004 / C30828;
    const double C32237 = C32203 / C30824;
    const double C5291 = C5285 + C5286;
    const double C31008 = C31003 - C31006;
    const double C30983 = C30979 * ae;
    const double C19914 = (-C30965) / C30860 - (C30979 * be) / C30824;
    const double C30992 = C30988 * be;
    const double C23684 = C31016 * C376;
    const double C23673 = C31016 * C374;
    const double C23667 = C31016 * C356;
    const double C23661 = C31016 * C372;
    const double C23655 = C31016 * C355;
    const double C24081 = C31016 * C1122;
    const double C24075 = C31016 * C1135;
    const double C24069 = C31016 * C1120;
    const double C24257 = C31016 * C2039;
    const double C24251 = C31016 * C2030;
    const double C24245 = C31016 * C2037;
    const double C24239 = C31016 * C2029;
    const double C24731 = C31016 * C1137;
    const double C24725 = C31016 * C1121;
    const double C24719 = C31016 * C1133;
    const double C24713 = C31016 * C1119;
    const double C24708 = C31016 * C1131;
    const double C24702 = C31016 * C1118;
    const double C25297 = C31016 * C2552;
    const double C25291 = C31016 * C2547;
    const double C25503 = C31016 * C2550;
    const double C25497 = C31016 * C2546;
    const double C30804 = C31016 * C6828;
    const double C11596 =
        (C31016 / C30860 + (0 * ae) / C30824) / C30860 - (0 * be) / C30824;
    const double C13144 = C31016 / C30860 - (0 * be) / C30824;
    const double C21835 = C31016 / C30860 + (0 * ae) / C30824;
    const double C32241 = C32208 / C30824;
    const double C32260 = C32244 / C30860;
    const double C3420 = C3416 * C31941;
    const double C4206 = C3416 * C32199;
    const double C17915 = C3416 * C14625;
    const double C3419 = C3415 * C114;
    const double C4205 = C3415 * C2662;
    const double C1800 = C1780 - C1781;
    const double C1797 = C1774 - C1775;
    const double C16570 = C2211 - C2212;
    const double C16564 = C2212 - C2211;
    const double C16567 = C2205 - C2206;
    const double C16561 = C2206 - C2205;
    const double C6713 = C6693 - C6694;
    const double C6710 = C6687 - C6688;
    const double C32261 = C32245 + C32212;
    const double C13139 = C32212 - C32046 / C30828;
    const double C32243 = C32209 / C30824;
    const double C13171 = C13137 * C138;
    const double C13163 = C13137 * C126;
    const double C13154 = C13137 * C137;
    const double C13146 = C13137 * C124;
    const double C13513 = C13137 * C275;
    const double C13505 = C13137 * C256;
    const double C13659 = C13137 * C380;
    const double C13651 = C13137 * C361;
    const double C14017 = C13137 * C279;
    const double C14009 = C13137 * C264;
    const double C14000 = C13137 * C274;
    const double C13992 = C13137 * C254;
    const double C14521 = C13137 * C696;
    const double C14513 = C13137 * C686;
    const double C9960 = C9939 - C9940;
    const double C9957 = C9933 - C9934;
    const double C12629 = C10342 - C10343;
    const double C12623 = C10343 - C10342;
    const double C12626 = C10336 - C10337;
    const double C12620 = C10337 - C10336;
    const double C10935 = C10914 - C10915;
    const double C10932 = C10908 - C10909;
    const double C174 = C168 * C114;
    const double C2675 = C2671 * C2663;
    const double C14640 = C2671 * C14632;
    const double C843 = C840 * C819;
    const double C5289 = C840 * C5283;
    const double C17103 = C840 * C30929;
    const double C3417 = C3411 + C3412;
    const double C4212 = C4207 + C4208;
    const double C4752 = C4744 + C4745;
    const double C9307 = C9295 + C9296;
    const double C6106 = C31958 * C6094;
    const double C175 = C169 * C31941;
    const double C2676 = C2672 * C32003;
    const double C14641 = C2672 * C32003;
    const double C844 = C841 * C32230;
    const double C5290 = C841 * C32230;
    const double C17104 = C841 * C17091;
    const double C3418 = C3413 + C3414;
    const double C4213 = C4209 + C4210;
    const double C4753 = C4746 + C4747;
    const double C8328 = C4387 - C4386;
    const double C8692 = C4386 - C4387;
    const double C20928 = C20753 - C20754;
    const double C21304 = C20754 - C20753;
    const double C16571 = C2213 - C2214;
    const double C16565 = C2214 - C2213;
    const double C12631 = C10346 - C10347;
    const double C12625 = C10347 - C10346;
    const double C6452 = C31958 * C6179;
    const double C9306 = C32045 * C6179;
    const double C26739 = C32045 * C6179;
    const double C6708 = C32233 * C6180;
    const double C9804 = C32045 * C6180;
    const double C10931 = C32233 * C6180;
    const double C27237 = C32045 * C6180;
    const double C30247 = C23645 * C6180;
    const double C6091 =
        (4 * (2 * C31553 + C31074 * C31651 + C31554 * ae) +
         C31074 *
             (3 * C31651 +
              C31074 *
                  (2 * C31647 +
                   C31074 * (C31162 + C31074 * (C31074 * C31175 + C31200 * ae) +
                             C31336 * ae) +
                   C31329 * ae) +
              C31648 * ae) +
         (3 * C31554 + C31074 * C31648) * ae) /
        C30824;
    const double C835 = C113 * C271;
    const double C597 = C31958 * C367;
    const double C3402 = C32045 * C367;
    const double C19944 = C32045 * C367;
    const double C1789 = C32233 * C375;
    const double C3924 = C32045 * C375;
    const double C9950 = C32233 * C375;
    const double C20466 = C32045 * C375;
    const double C23679 = C23645 * C375;
    const double C3140 = C31958 * C692;
    const double C3770 = C32045 * C692;
    const double C20312 = C32045 * C692;
    const double C3141 = C113 * C693;
    const double C3773 = C3373 * C693;
    const double C20315 = C19915 * C693;
    const double C160 = C113 * C120;
    const double C492 = C113 * C248;
    const double C833 = C113 * C252;
    const double C596 = C113 * C353;
    const double C3401 = C3373 * C353;
    const double C19943 = C19915 * C353;
    const double C1788 = C1758 * C357;
    const double C3923 = C3373 * C357;
    const double C9949 = C9919 * C357;
    const double C20465 = C19915 * C357;
    const double C23678 = C31016 * C357;
    const double C3139 = C113 * C684;
    const double C3769 = C3373 * C684;
    const double C20311 = C19915 * C684;
    const double C1476 = C113 * C1129;
    const double C4394 = C3373 * C1129;
    const double C20761 = C19915 * C1129;
    const double C2225 = C1758 * C1139;
    const double C4962 = C3373 * C1139;
    const double C10358 = C9919 * C1139;
    const double C23338 = C19915 * C1139;
    const double C24087 = C31016 * C1139;
    const double C31749 = C31747 + C31744;
    const double C31686 = C31685 + C31679;
    const double C6450 = C31958 * C6173;
    const double C9302 = C32045 * C6173;
    const double C26735 = C32045 * C6173;
    const double C6702 = C32233 * C6175;
    const double C9800 = C32045 * C6175;
    const double C10925 = C32233 * C6175;
    const double C27233 = C32045 * C6175;
    const double C30241 = C23645 * C6175;
    const double C6103 = C113 * C6088;
    const double C6449 = C113 * C6170;
    const double C9301 = C3373 * C6170;
    const double C26734 = C19915 * C6170;
    const double C6701 = C1758 * C6171;
    const double C9799 = C3373 * C6171;
    const double C10924 = C9919 * C6171;
    const double C27232 = C19915 * C6171;
    const double C30240 = C31016 * C6171;
    const double C31758 = C31756 + C31753;
    const double C31364 = ae * C31362;
    const double C6837 =
        (2 * C31255 + be * C31271 + C31075 * C31339 +
         ae * (2 * (C31075 * C31286 + C31236 * be) +
               C31075 * (C31286 + C31075 * C31400 + C31075 * C31336 * be) +
               (C31236 + C31336 * C31269) * be) +
         C31074 * (ae * (2 * C31327 + C31075 * C31362 +
                         (C31198 + C31200 * C31269) * be) +
                   C31074 * (2 * C31328 + be * (C31162 + C31175 * C31269) +
                             C31075 * C31360))) /
        C30826;
    const double C6838 =
        (ae * (3 * (C31118 + C31075 * C31327 + C31408 * be) +
               C31075 * (2 * C31327 + C31075 * C31362 + C31411 * be) +
               (2 * C31408 + C31075 * C31411) * be) +
         C31074 * (3 * C31339 + be * (2 * C31334 + C31075 * C31412) +
                   C31075 * (2 * C31328 + be * C31412 + C31075 * C31360))) /
        C30826;
    const double C6839 =
        (3 * C31339 + be * (2 * C31334 + C31075 * C31412) +
         C31075 * (2 * C31328 + be * C31412 + C31075 * C31360) +
         ae * (3 * (C31286 + C31075 * C31400 + C31414 * be) +
               C31075 * (2 * C31400 +
                         C31075 * (C31302 +
                                   C31075 * (C31075 * C31074 * C31146 +
                                             C31349 * be) +
                                   C31075 * C31349 * be) +
                         C31418 * be) +
               (2 * C31414 + C31075 * C31418) * be) +
         C31074 *
             (ae * (3 * C31362 +
                    C31075 *
                        (2 * C31350 +
                         C31075 * (C31136 +
                                   C31075 * (C31075 * C31146 + C31243 * be) +
                                   C31075 * C31243 * be) +
                         C31419 * be) +
                    (2 * C31343 + C31075 * C31419) * be) +
              C31074 *
                  (3 * C31360 + be * (2 * C31344 + C31075 * C31420) +
                   C31075 * (2 * C31353 + be * C31420 +
                             C31075 * (C31107 + be * C31075 * C31185 +
                                       C31075 * (be * C31185 +
                                                 C31075 * std::pow(C31078, 8) *
                                                     bs[8] * C31080)))))) /
        C30826;
    const double C31726 = C31075 * C31362;
    const double C11723 =
        (4 * (2 * C31610 + C31075 * C31722 + C31611 * be) +
         C31075 * (3 * C31722 +
                   C31075 * (2 * C31327 + C31075 * C31362 + C31411 * be) +
                   C31721 * be) +
         (3 * C31611 + C31075 * C31721) * be) /
        C30824;
    const double C31666 = C31074 * C31665;
    const double C6832 =
        (2 * C31075 * C31651 + C31075 * (C31651 + C31665 * C31269)) / C30824;
    const double C6836 =
        (3 * (C31651 + C31665 * C31269) +
         C31075 *
             (2 * C31075 * C31665 +
              C31075 *
                  (C31665 + (C31175 + C31074 * (C31074 * C31185 + C31243 * ae) +
                             C31349 * ae) *
                                C31269))) /
        C30824;
    const double C495 = C31958 * C278;
    const double C836 = C31958 * C282;
    const double C599 = C31958 * C383;
    const double C3406 = C32045 * C383;
    const double C19948 = C32045 * C383;
    const double C1795 = C32233 * C387;
    const double C3928 = C32045 * C387;
    const double C9956 = C32233 * C387;
    const double C20470 = C32045 * C387;
    const double C23685 = C23645 * C387;
    const double C3142 = C31958 * C699;
    const double C3774 = C32045 * C699;
    const double C20316 = C32045 * C699;
    const double C2400 = C32233 * C2048;
    const double C10529 = C32233 * C2048;
    const double C13177 = C32246 * C2048;
    const double C21868 = C32246 * C2048;
    const double C24258 = C23645 * C2048;
    const double C31319 = C31307 + C31317;
    const double C31435 = C31434 + C31433;
    const double C31405 = C31404 + C31403;
    const double C6989 =
        (2 * (ae * (C31133 + C31075 * C31388 + C31075 * C31239 * be) +
              C31074 * C31428) +
         ae * (C31219 + C31075 * (C31075 * C31377 + C31393 * be) +
               C31075 * C31393 * be) +
         C31074 *
             (C31428 +
              ae * (C31367 + C31075 * (C31075 * C31074 * C31370 + C31424 * be) +
                    C31075 * C31424 * be) +
              C31074 *
                  (ae * (C31143 + C31075 * (C31075 * C31370 + C31387 * be) +
                         C31075 * C31387 * be) +
                   C31074 * (C31369 + be * C31075 * C31425 +
                             C31075 * (be * C31425 + C31075 * C31082 *
                                                         std::pow(C31078, 8) *
                                                         bs[8] * C31080))))) /
        C30826;
    const double C7151 =
        (2 * C31259 + be * C31275 + C31075 * C31428 +
         ae * (2 * (C31075 * C31367 + C31240 * be) +
               C31075 *
                   (C31367 + C31075 * (C31075 * C31074 * C31370 + C31424 * be) +
                    C31075 * C31424 * be) +
               (C31240 + C31424 * C31269) * be) +
         C31074 *
             (ae *
                  (2 * C31388 +
                   C31075 * (C31143 + C31075 * (C31075 * C31370 + C31387 * be) +
                             C31075 * C31387 * be) +
                   (C31239 + C31387 * C31269) * be) +
              C31074 *
                  (2 * C31389 + be * (C31182 + C31425 * C31269) +
                   C31075 * (C31369 + be * C31075 * C31425 +
                             C31075 * (be * C31425 + C31075 * C31082 *
                                                         std::pow(C31078, 8) *
                                                         bs[8] * C31080))))) /
        C30826;
    const double C11814 =
        (ae * (3 * (C31133 + C31075 * C31388 + C31448 * be) +
               C31075 * (2 * C31388 +
                         C31075 * (C31143 +
                                   C31075 * (C31075 * C31370 + C31387 * be) +
                                   C31075 * C31387 * be) +
                         C31451 * be) +
               (2 * C31448 + C31075 * C31451) * be) +
         C31074 * (3 * C31428 + be * (2 * C31422 + C31075 * C31452) +
                   C31075 * (2 * C31389 + be * C31452 +
                             C31075 * (C31369 + be * C31075 * C31425 +
                                       C31075 * (be * C31425 +
                                                 C31075 * C31082 *
                                                     std::pow(C31078, 8) *
                                                     bs[8] * C31080))))) /
        C30826;
    const double C31152 = C31142 + C31151;
    const double C31320 = C31305 + C31318;
    const double C6267 =
        (4 * (2 * C31218 + ae * C31219 + C31074 * C31380) +
         ae * (3 * C31219 + C31074 * C31381) +
         C31074 * (3 * C31380 + ae * C31381 +
                   C31074 * (2 * C31376 + ae * C31377 +
                             C31074 * (C31369 + ae * C31074 * C31370 +
                                       C31074 * (ae * C31370 +
                                                 C31074 * C31082 *
                                                     std::pow(C31078, 8) *
                                                     bs[8] * C31080))))) /
        C30826;
    const double C6357 =
        (3 * (C31259 + ae * (C31075 * C31367 + C31240 * be) + C31074 * C31394) +
         ae * (C31075 * C31381 + (2 * C31240 + C31074 * C31393) * be) +
         C31074 *
             (2 * C31394 + ae * (C31075 * C31377 + C31393 * be) +
              C31074 *
                  (C31389 +
                   ae * (C31075 * C31074 * C31370 + C31074 * C31387 * be) +
                   C31074 * (ae * (C31075 * C31370 + C31387 * be) +
                             C31074 * (be * C31082 * C31185 +
                                       C31075 * C31082 * std::pow(C31078, 8) *
                                           bs[8] * C31080))))) /
        C30826;
    const double C6265 = (4 * (2 * C31214 + C31074 * C31219) +
                          C31074 * (3 * C31219 + C31074 * C31381)) /
                         C30824;
    const double C6355 = (C31075 * (3 * C31219 + C31074 * C31381) +
                          (3 * C31562 + C31074 * C31683) * be) /
                         C30824;
    const double C6987 =
        (2 * C31214 + C31074 * C31219 +
         C31075 * (C31075 * C31381 + C31683 * be) + C31075 * C31683 * be) /
        C30824;
    const double C31191 = C31181 + C31190;
    const double C31446 = C31441 + C31445;
    const double C11900 =
        (4 * (2 * C31259 + be * C31275 + C31075 * C31428) +
         be * (3 * C31275 + C31075 * C31456) +
         C31075 * (3 * C31428 + be * C31456 +
                   C31075 * (2 * C31389 + be * C31452 +
                             C31075 * (C31369 + be * C31075 * C31425 +
                                       C31075 * (be * C31425 +
                                                 C31075 * C31082 *
                                                     std::pow(C31078, 8) *
                                                     bs[8] * C31080))))) /
        C30826;
    const double C11899 = (4 * (2 * C31273 + C31075 * C31275) +
                           C31075 * (3 * C31275 + C31075 * C31456)) /
                          C30824;
    const double C842 = C837 + C838;
    const double C2677 = C2673 + C2667;
    const double C8346 = C8323 + C8324;
    const double C9308 = C9297 + C9298;
    const double C121 = 5 * (3 * C31496 + C31082 * C31501) +
                        C31082 * (4 * C31501 + C31082 * C31506);
    const double C253 = 3 * C31496 + C31082 * C31501 + C31506 * C31209;
    const double C358 = 3 * C31496 + C31082 * C31501 + C31506 * C31269;
    const double C475 = C31074 * (4 * C31501 + C31082 * C31506);
    const double C579 = C31075 * (4 * C31501 + C31082 * C31506);
    const double C685 = C31075 * C31074 * C31506;
    const double C6089 = 5 * (3 * C31554 + C31074 * C31648) +
                         C31074 * (4 * C31648 + C31074 * C31662);
    const double C6172 = 3 * C31554 + C31074 * C31648 + C31662 * C31269;
    const double C6440 = C31075 * (4 * C31648 + C31074 * C31662);
    const double C11722 = 5 * (3 * C31611 + C31075 * C31721) +
                          C31075 * (4 * C31721 + C31075 * C31731);
    const double C32214 = C32179 / C30824;
    const double C32250 = C32218 / C30860;
    const double C32251 = C32220 + C32187;
    const double C2660 = C32187 - C31870 / C30828;
    const double C32217 = C32183 / C30824;
    const double C30900 = C30896 / C30824;
    const double C14638 = C166 * C14631;
    const double C14634 = C164 * C14631;
    const double C17914 = C3415 * C14631;
    const double C30911 = C30905 / C30824;
    const double C32272 = C32235 + C32267;
    const double C7425 = C32257 - (C32006 * C31995) / C30824;
    const double C6018 = C32258 / C30860 - C32004 / C32221;
    const double C32268 = C32237 + C32257;
    const double C5292 = C5291 + C5287;
    const double C30987 = C30983 / C30824;
    const double C19945 = C19914 * C131;
    const double C19941 = C19914 * C119;
    const double C19938 = C19914 * C129;
    const double C19934 = C19914 * C118;
    const double C19930 = C19914 * C127;
    const double C19926 = C19914 * C117;
    const double C19922 = C19914 * C125;
    const double C19918 = C19914 * C116;
    const double C20313 = C19914 * C261;
    const double C20309 = C19914 * C247;
    const double C20305 = C19914 * C259;
    const double C20301 = C19914 * C246;
    const double C20297 = C19914 * C257;
    const double C20293 = C19914 * C245;
    const double C20467 = C19914 * C366;
    const double C20463 = C19914 * C352;
    const double C20459 = C19914 * C364;
    const double C20455 = C19914 * C351;
    const double C20451 = C19914 * C362;
    const double C20447 = C19914 * C350;
    const double C20759 = C19914 * C269;
    const double C20755 = C19914 * C251;
    const double C20752 = C19914 * C267;
    const double C20748 = C19914 * C250;
    const double C20941 = C19914 * C966;
    const double C20937 = C19914 * C958;
    const double C20933 = C19914 * C964;
    const double C20929 = C19914 * C957;
    const double C20922 = C19914 * C265;
    const double C20918 = C19914 * C249;
    const double C20914 = C19914 * C255;
    const double C20910 = C19914 * C244;
    const double C21517 = C19914 * C1127;
    const double C21513 = C19914 * C1116;
    const double C21509 = C19914 * C689;
    const double C21505 = C19914 * C682;
    const double C21727 = C19914 * C1125;
    const double C21723 = C19914 * C1115;
    const double C21719 = C19914 * C687;
    const double C21715 = C19914 * C681;
    const double C23336 = C19914 * C691;
    const double C23332 = C19914 * C683;
    const double C26736 = C19914 * C970;
    const double C26732 = C19914 * C960;
    const double C27234 = C19914 * C1627;
    const double C27230 = C19914 * C1623;
    const double C30998 = C30992 / C30824;
    const double C23691 = C23672 - C23673;
    const double C23688 = C23666 - C23667;
    const double C25084 = C24075 - C24076;
    const double C25078 = C24076 - C24075;
    const double C25081 = C24069 - C24070;
    const double C25075 = C24070 - C24069;
    const double C30235 = C24720 - C24719;
    const double C30232 = C24714 - C24713;
    const double C13176 = C13144 * C2039;
    const double C13168 = C13144 * C2030;
    const double C13161 = C13144 * C2037;
    const double C13153 = C13144 * C2029;
    const double C13518 = C13144 * C2552;
    const double C13510 = C13144 * C2547;
    const double C13664 = C13144 * C2043;
    const double C13656 = C13144 * C2032;
    const double C14014 = C13144 * C6828;
    const double C14007 = C13144 * C2550;
    const double C13999 = C13144 * C2546;
    const double C14526 = C13144 * C6834;
    const double C14518 = C13144 * C6829;
    const double C21867 = C21835 * C2039;
    const double C21859 = C21835 * C2030;
    const double C21852 = C21835 * C2037;
    const double C21844 = C21835 * C2029;
    const double C22209 = C21835 * C2552;
    const double C22201 = C21835 * C2547;
    const double C22355 = C21835 * C2043;
    const double C22347 = C21835 * C2032;
    const double C27456 = C21835 * C6828;
    const double C27449 = C21835 * C2550;
    const double C27441 = C21835 * C2546;
    const double C27968 = C21835 * C6834;
    const double C27960 = C21835 * C6829;
    const double C32273 = C32241 + C32269;
    const double C13138 = C32260 - (C32048 * C32037) / C30824;
    const double C3423 = C3419 + C3420;
    const double C4211 = C4205 + C4206;
    const double C1803 = C1799 + C1800;
    const double C1802 = C1796 + C1797;
    const double C16575 = C16569 + C16570;
    const double C16573 = C16563 + C16564;
    const double C16574 = C16566 + C16567;
    const double C16572 = C16560 + C16561;
    const double C6716 = C6712 + C6713;
    const double C6715 = C6709 + C6710;
    const double C21866 = C32261 * C386;
    const double C21858 = C32261 * C373;
    const double C21849 = C32261 * C385;
    const double C21841 = C32261 * C371;
    const double C22208 = C32261 * C1147;
    const double C22200 = C32261 * C1134;
    const double C22354 = C32261 * C2047;
    const double C22346 = C32261 * C2036;
    const double C27463 = C32261 * C1146;
    const double C27455 = C32261 * C1132;
    const double C27446 = C32261 * C1145;
    const double C27438 = C32261 * C1130;
    const double C27967 = C32261 * C2555;
    const double C27959 = C32261 * C2549;
    const double C11590 = C32261 / C30860 - C32046 / C32221;
    const double C13175 = C13139 * C386;
    const double C13167 = C13139 * C373;
    const double C13158 = C13139 * C385;
    const double C13150 = C13139 * C371;
    const double C13517 = C13139 * C1147;
    const double C13509 = C13139 * C1134;
    const double C13663 = C13139 * C2047;
    const double C13655 = C13139 * C2036;
    const double C14021 = C13139 * C1146;
    const double C14013 = C13139 * C1132;
    const double C14004 = C13139 * C1145;
    const double C13996 = C13139 * C1130;
    const double C14525 = C13139 * C2555;
    const double C14517 = C13139 * C2549;
    const double C32270 = C32243 + C32260;
    const double C9964 = C9960 + C9961;
    const double C9963 = C9957 + C9958;
    const double C12635 = C12629 + C12630;
    const double C12633 = C12623 + C12624;
    const double C12634 = C12626 + C12627;
    const double C12632 = C12620 + C12621;
    const double C10939 = C10935 + C10936;
    const double C10938 = C10932 + C10933;
    const double C2678 = C2674 + C2675;
    const double C3421 = C3417 * C114;
    const double C4214 = C4212 * C2663;
    const double C17916 = C4212 * C14632;
    const double C178 = C174 + C175;
    const double C3422 = C3418 * C31941;
    const double C4215 = C4213 * C32003;
    const double C17917 = C4213 * C32003;
    const double C8348 = C8327 + C8328;
    const double C8694 = C8691 + C8692;
    const double C6105 = C113 * C6091;
    const double C11898 =
        (4 * (2 * C31618 + C31075 * C31749 + C31619 * be) +
         C31075 *
             (3 * C31749 +
              C31075 *
                  (2 * C31388 +
                   C31075 * (C31143 + C31075 * (C31075 * C31370 + C31387 * be) +
                             C31075 * C31387 * be) +
                   C31451 * be) +
              C31748 * be) +
         (3 * C31619 + C31075 * C31748) * be) /
        C30824;
    const double C6266 =
        (4 * (2 * C31561 + C31074 * C31686 + C31562 * ae) +
         C31074 *
             (3 * C31686 +
              C31074 *
                  (2 * C31682 +
                   C31074 * (C31182 + C31074 * (C31074 * C31425 + C31387 * ae) +
                             C31424 * ae) +
                   C31393 * ae) +
              C31683 * ae) +
         (3 * C31562 + C31074 * C31683) * ae) /
        C30824;
    const double C6356 =
        (C31075 *
         (3 * C31686 +
          C31074 *
              (2 * C31682 +
               C31074 * (C31182 + C31074 * (C31074 * C31425 + C31387 * ae) +
                         C31424 * ae) +
               C31393 * ae) +
          C31683 * ae)) /
        C30824;
    const double C6988 =
        (2 * C31561 + C31074 * C31686 + C31562 * ae +
         (2 * C31682 +
          C31074 * (C31182 + C31074 * (C31074 * C31425 + C31387 * ae) +
                    C31424 * ae) +
          C31393 * ae) *
             C31269) /
        C30824;
    const double C7150 =
        (2 * C31075 * C31686 +
         C31075 * (C31686 + (C31182 + C31074 * (C31074 * C31425 + C31387 * ae) +
                             C31424 * ae) *
                                C31269)) /
        C30824;
    const double C11984 =
        (4 * (2 * C31698 + C31075 * C31758 + C31699 * be) +
         C31075 * (3 * C31758 +
                   C31075 * (2 * C31400 +
                             C31075 * (C31302 +
                                       C31075 * (C31075 * C31074 * C31146 +
                                                 C31349 * be) +
                                       C31075 * C31349 * be) +
                             C31418 * be) +
                   C31757 * be) +
         (3 * C31699 + C31075 * C31757) * be) /
        C30824;
    const double C31365 = C31364 + C31363;
    const double C7326 = C32233 * C6837;
    const double C11525 = C32233 * C6837;
    const double C14023 = C32246 * C6837;
    const double C27465 = C32246 * C6837;
    const double C30811 = C23645 * C6837;
    const double C14527 = C32246 * C6838;
    const double C27969 = C32246 * C6838;
    const double C31730 = C31725 + C31726;
    const double C31667 = C31654 + C31666;
    const double C7325 = C1758 * C6832;
    const double C11524 = C9919 * C6832;
    const double C14022 = C13144 * C6832;
    const double C27464 = C21835 * C6832;
    const double C30810 = C31016 * C6832;
    const double C7301 =
        (2 * (ae * (2 * C31327 + C31075 * C31362 + C31411 * be) +
              C31074 * C31435) +
         ae * (2 * (C31075 * C31293 + C31329 * be) +
               C31075 * (C31293 + C31075 * (C31075 * C31311 + C31354 * be) +
                         C31075 * C31354 * be) +
               (C31329 + C31354 * C31269) * be) +
         C31074 *
             (C31435 +
              ae *
                  (2 * C31400 +
                   C31075 * (C31302 +
                             C31075 * (C31075 * C31074 * C31146 + C31349 * be) +
                             C31075 * C31349 * be) +
                   C31418 * be) +
              C31074 *
                  (ae * (2 * C31350 +
                         C31075 * (C31136 +
                                   C31075 * (C31075 * C31146 + C31243 * be) +
                                   C31075 * C31243 * be) +
                         C31419 * be) +
                   C31074 * (2 * C31353 + be * C31420 +
                             C31075 * (C31107 + be * C31075 * C31185 +
                                       C31075 * (be * C31185 +
                                                 C31075 * std::pow(C31078, 8) *
                                                     bs[8] * C31080)))))) /
        C30826;
    const double C11727 =
        (4 * (2 * C31255 + be * C31271 + C31075 * C31339) +
         be * (3 * C31271 + C31075 * C31439) +
         C31075 * (3 * C31339 + be * C31439 + C31075 * C31435)) /
        C30826;
    const double C283 =
        (3 * C31100 + C31082 * C31111 + ae * C31074 * C31152 +
         C31074 * (ae * C31152 +
                   C31074 * (3 * C31109 +
                             C31082 * (2 * C31082 * C31107 +
                                       C31082 * (C31107 + std::pow(C31078, 8) *
                                                              bs[8] * C31080 *
                                                              C31090))))) /
        C30826;
    const double C478 =
        (ae * (4 * C31140 + C31082 * C31152) +
         C31074 * (4 * C31111 +
                   C31082 * (3 * C31109 +
                             C31082 * (2 * C31082 * C31107 +
                                       C31082 * (C31107 + std::pow(C31078, 8) *
                                                              bs[8] * C31080 *
                                                              C31090))))) /
        C30826;
    const double C134 = (5 * (3 * C31131 + C31082 * C31140) +
                         C31082 * (4 * C31140 + C31082 * C31152)) /
                        C30824;
    const double C272 =
        (3 * C31131 + C31082 * C31140 + C31152 * C31209) / C30824;
    const double C377 =
        (3 * C31131 + C31082 * C31140 +
         C31075 * (C31075 * C31152 + C31506 * be) + C31075 * C31506 * be) /
        C30824;
    const double C476 = (C31074 * (4 * C31140 + C31082 * C31152)) / C30824;
    const double C580 = (C31075 * (4 * C31140 + C31082 * C31152) +
                         (4 * C31501 + C31082 * C31506) * be) /
                        C30824;
    const double C694 =
        (C31075 * C31074 * C31152 + C31074 * C31506 * be) / C30824;
    const double C6095 =
        (5 * (3 * C31297 + ae * C31298 + C31074 * C31319) +
         ae * (4 * C31298 + C31074 * C31320) +
         C31074 *
             (4 * C31319 + ae * C31320 +
              C31074 *
                  (3 * C31315 + ae * C31316 +
                   C31074 * (2 * C31309 + ae * C31311 +
                             C31074 * (C31107 + ae * C31074 * C31146 +
                                       C31074 * (ae * C31146 +
                                                 C31074 * std::pow(C31078, 8) *
                                                     bs[8] * C31080)))))) /
        C30826;
    const double C6443 =
        (4 * (2 * C31332 + ae * (C31075 * C31293 + C31329 * be) +
              C31074 * C31405) +
         ae * (C31075 * C31320 + (3 * C31329 + C31074 * C31361) * be) +
         C31074 *
             (3 * C31405 + ae * (C31075 * C31316 + C31361 * be) +
              C31074 *
                  (2 * C31401 + ae * (C31075 * C31311 + C31354 * be) +
                   C31074 *
                       (C31353 + ae * (C31075 * C31074 * C31146 + C31349 * be) +
                        C31074 * (ae * (C31075 * C31146 + C31243 * be) +
                                  C31074 * (be * C31185 +
                                            C31075 * std::pow(C31078, 8) *
                                                bs[8] * C31080)))))) /
        C30826;
    const double C6092 = (5 * (3 * C31212 + C31074 * C31298) +
                          C31074 * (4 * C31298 + C31074 * C31320)) /
                         C30824;
    const double C6177 =
        (3 * C31212 + C31074 * C31298 +
         C31075 * (C31075 * C31320 + C31662 * be) + C31075 * C31662 * be) /
        C30824;
    const double C6441 = (C31075 * (4 * C31298 + C31074 * C31320) +
                          (4 * C31648 + C31074 * C31662) * be) /
                         C30824;
    const double C388 =
        (3 * C31100 + C31082 * C31111 + be * C31075 * C31191 +
         C31075 * (be * C31191 +
                   C31075 * (3 * C31109 +
                             C31082 * (2 * C31082 * C31107 +
                                       C31082 * (C31107 + std::pow(C31078, 8) *
                                                              bs[8] * C31080 *
                                                              C31090))))) /
        C30826;
    const double C582 =
        (be * (4 * C31179 + C31082 * C31191) +
         C31075 * (4 * C31111 +
                   C31082 * (3 * C31109 +
                             C31082 * (2 * C31082 * C31107 +
                                       C31082 * (C31107 + std::pow(C31078, 8) *
                                                              bs[8] * C31080 *
                                                              C31090))))) /
        C30826;
    const double C700 =
        (ae * (C31075 * C31152 +
               (3 * (C31198 + C31200 * C31090) +
                C31082 * (2 * C31082 * C31200 +
                          C31082 * (C31200 + C31096 * C31095 * C31090))) *
                   be) +
         C31074 * (be * C31191 +
                   C31075 * (3 * C31109 +
                             C31082 * (2 * C31082 * C31107 +
                                       C31082 * (C31107 + std::pow(C31078, 8) *
                                                              bs[8] * C31080 *
                                                              C31090))))) /
        C30826;
    const double C135 = (5 * (3 * C31170 + C31082 * C31179) +
                         C31082 * (4 * C31179 + C31082 * C31191)) /
                        C30824;
    const double C273 =
        (3 * C31170 + C31082 * C31179 +
         C31074 * (C31074 * C31191 + C31506 * ae) + C31074 * C31506 * ae) /
        C30824;
    const double C378 =
        (3 * C31170 + C31082 * C31179 + C31191 * C31269) / C30824;
    const double C477 = (C31074 * (4 * C31179 + C31082 * C31191) +
                         (4 * C31501 + C31082 * C31506) * ae) /
                        C30824;
    const double C581 = (C31075 * (4 * C31179 + C31082 * C31191)) / C30824;
    const double C695 = (C31075 * (C31074 * C31191 + C31506 * ae)) / C30824;
    const double C11728 =
        (5 * (3 * C31339 + be * C31439 + C31075 * C31435) +
         be * (4 * C31439 + C31075 * C31446) +
         C31075 *
             (4 * C31435 + be * C31446 +
              C31075 *
                  (3 * C31360 + be * C31444 +
                   C31075 * (2 * C31353 + be * C31420 +
                             C31075 * (C31107 + be * C31075 * C31185 +
                                       C31075 * (be * C31185 +
                                                 C31075 * std::pow(C31078, 8) *
                                                     bs[8] * C31080)))))) /
        C30826;
    const double C11986 =
        (ae * (4 * (2 * C31327 + C31075 * C31362 + C31411 * be) +
               C31075 * (3 * C31362 +
                         C31075 * (2 * C31350 +
                                   C31075 * (C31136 +
                                             C31075 * (C31075 * C31146 +
                                                       C31243 * be) +
                                             C31075 * C31243 * be) +
                                   C31419 * be) +
                         C31460 * be) +
               (3 * C31411 + C31075 * C31460) * be) +
         C31074 *
             (4 * C31435 + be * C31446 +
              C31075 *
                  (3 * C31360 + be * C31444 +
                   C31075 * (2 * C31353 + be * C31420 +
                             C31075 * (C31107 + be * C31075 * C31185 +
                                       C31075 * (be * C31185 +
                                                 C31075 * std::pow(C31078, 8) *
                                                     bs[8] * C31080)))))) /
        C30826;
    const double C11726 = (5 * (3 * C31271 + C31075 * C31439) +
                           C31075 * (4 * C31439 + C31075 * C31446)) /
                          C30824;
    const double C845 = C842 + C839;
    const double C2679 = C2677 + C2668;
    const double C32271 = C32214 + C32263;
    const double C2659 = C32250 - (C31872 * C31855) / C30824;
    const double C106 = C32251 / C30860 - C31870 / C32221;
    const double C32264 = C32217 + C32250;
    const double C30904 = C30900 - C30881;
    const double C14643 = C14638 + C14639;
    const double C14642 = C14634 + C14635;
    const double C17918 = C17914 + C17915;
    const double C6015 =
        (C32265 + 2 * C31999) / C30860 - (C32272 * C31995) / C30824;
    const double C6016 =
        (C32253 + 2 * C32006 + C32272) / C30860 - (C32268 * C31995) / C30824;
    const double C6017 = (C32230 + C32003 / C30824 + C32268) / C30860 -
                         (C32258 * C31995) / C30824;
    const double C5293 = C5292 + C5288;
    const double C30991 = C30987 - C30968;
    const double C19955 = C19937 - C19938;
    const double C19953 = C19933 - C19934;
    const double C19951 = C19929 - C19930;
    const double C19949 = C19925 - C19926;
    const double C22637 = C20306 - C20305;
    const double C23134 = C20305 - C20306;
    const double C22635 = C20302 - C20301;
    const double C23132 = C20301 - C20302;
    const double C21299 = C20297 - C20298;
    const double C21295 = C20298 - C20297;
    const double C21297 = C20293 - C20294;
    const double C21293 = C20294 - C20293;
    const double C20927 = C20751 - C20752;
    const double C21303 = C20752 - C20751;
    const double C20925 = C20747 - C20748;
    const double C21301 = C20748 - C20747;
    const double C26730 = C20934 - C20933;
    const double C26728 = C20930 - C20929;
    const double C20947 = C20921 - C20922;
    const double C20945 = C20917 - C20918;
    const double C21862 = C32273 * C138;
    const double C21854 = C32273 * C126;
    const double C21845 = C32273 * C137;
    const double C21837 = C32273 * C124;
    const double C22204 = C32273 * C275;
    const double C22196 = C32273 * C256;
    const double C22350 = C32273 * C380;
    const double C22342 = C32273 * C361;
    const double C27459 = C32273 * C279;
    const double C27451 = C32273 * C264;
    const double C27442 = C32273 * C274;
    const double C27434 = C32273 * C254;
    const double C27963 = C32273 * C696;
    const double C27955 = C32273 * C686;
    const double C11587 =
        (C32266 + 2 * C32041) / C30860 - (C32273 * C32037) / C30824;
    const double C13173 = C13138 * C381;
    const double C13165 = C13138 * C363;
    const double C13156 = C13138 * C380;
    const double C13148 = C13138 * C361;
    const double C13515 = C13138 * C697;
    const double C13507 = C13138 * C688;
    const double C13661 = C13138 * C385;
    const double C13653 = C13138 * C371;
    const double C14019 = C13138 * C1142;
    const double C14011 = C13138 * C1124;
    const double C14002 = C13138 * C696;
    const double C13994 = C13138 * C686;
    const double C14523 = C13138 * C1145;
    const double C14515 = C13138 * C1130;
    const double C1805 = C1803 + C1801;
    const double C1804 = C1802 + C1798;
    const double C16579 = C16575 + C16571;
    const double C16577 = C16573 + C16565;
    const double C16578 = C16574 + C16568;
    const double C16576 = C16572 + C16562;
    const double C6718 = C6716 + C6714;
    const double C6717 = C6715 + C6711;
    const double C21864 = C32270 * C381;
    const double C21856 = C32270 * C363;
    const double C21847 = C32270 * C380;
    const double C21839 = C32270 * C361;
    const double C22206 = C32270 * C697;
    const double C22198 = C32270 * C688;
    const double C22352 = C32270 * C385;
    const double C22344 = C32270 * C371;
    const double C27461 = C32270 * C1142;
    const double C27453 = C32270 * C1124;
    const double C27444 = C32270 * C696;
    const double C27436 = C32270 * C686;
    const double C27965 = C32270 * C1145;
    const double C27957 = C32270 * C1130;
    const double C11588 =
        (C32255 + 2 * C32048 + C32273) / C30860 - (C32270 * C32037) / C30824;
    const double C11589 = (C32233 + C32045 / C30824 + C32270) / C30860 -
                          (C32261 * C32037) / C30824;
    const double C9966 = C9964 + C9962;
    const double C9965 = C9963 + C9959;
    const double C12639 = C12635 + C12631;
    const double C12637 = C12633 + C12625;
    const double C12638 = C12634 + C12628;
    const double C12636 = C12632 + C12622;
    const double C10941 = C10939 + C10937;
    const double C10940 = C10938 + C10934;
    const double C2680 = C2678 + C2676;
    const double C4216 = C4211 + C4214;
    const double C3424 = C3421 + C3422;
    const double C6181 =
        (3 * (C31339 +
              ae * (C31286 + C31075 * (C31075 * C31302 + C31336 * be) +
                    C31075 * C31336 * be) +
              C31074 * C31365) +
         ae * (C31298 + C31075 * (C31075 * C31316 + C31361 * be) +
               C31075 * C31361 * be) +
         C31074 *
             (2 * C31365 +
              ae * (C31293 + C31075 * (C31075 * C31311 + C31354 * be) +
                    C31075 * C31354 * be) +
              C31074 *
                  (C31360 +
                   ae * (C31302 +
                         C31075 * (C31075 * C31074 * C31146 + C31349 * be) +
                         C31075 * C31349 * be) +
                   C31074 * (ae * (C31136 +
                                   C31075 * (C31075 * C31146 + C31243 * be) +
                                   C31075 * C31243 * be) +
                             C31074 * (C31107 + be * C31075 * C31185 +
                                       C31075 * (be * C31185 +
                                                 C31075 * std::pow(C31078, 8) *
                                                     bs[8] * C31080)))))) /
        C30826;
    const double C31732 = C31730 + C31727;
    const double C31668 = C31667 + C31658;
    const double C846 = C845 + C843;
    const double C103 =
        (C32262 + 2 * C31864) / C30860 - (C32271 * C31855) / C30824;
    const double C104 =
        (C32249 + 2 * C31872 + C32271) / C30860 - (C32264 * C31855) / C30824;
    const double C105 = (C32219 + C31869 / C30824 + C32264) / C30860 -
                        (C32251 * C31855) / C30824;
    const double C30910 = C30904 / C30860;
    const double C30909 = C30822 * C30904;
    const double C14645 = C14643 + C14640;
    const double C14644 = C14642 + C14636;
    const double C17919 = C17918 + C17916;
    const double C5294 = C5293 + C5289;
    const double C30997 = C30991 / C30860;
    const double C30996 = C30841 * C30991;
    const double C19960 = C19955 + C19956;
    const double C19959 = C19953 + C19954;
    const double C19958 = C19951 + C19952;
    const double C19957 = C19949 + C19950;
    const double C22641 = C22637 + C22638;
    const double C23137 = C23134 + C23135;
    const double C22640 = C22635 + C22636;
    const double C23136 = C23132 + C23133;
    const double C21308 = C21299 + C21300;
    const double C21306 = C21295 + C21296;
    const double C21307 = C21297 + C21298;
    const double C21305 = C21293 + C21294;
    const double C20950 = C20927 + C20928;
    const double C21310 = C21303 + C21304;
    const double C20949 = C20925 + C20926;
    const double C21309 = C21301 + C21302;
    const double C26741 = C26730 + C26731;
    const double C26740 = C26728 + C26729;
    const double C20952 = C20947 + C20948;
    const double C20951 = C20945 + C20946;
    const double C1807 = C1805 * C31941;
    const double C1806 = C1804 * C114;
    const double C9968 = C9966 * C31941;
    const double C9967 = C9965 * C114;
    const double C4217 = C4216 + C4215;
    const double C11725 =
        (5 * (3 * C31722 + C31075 * C31732 + C31721 * be) +
         C31075 * (4 * C31732 +
                   C31075 * (3 * C31362 +
                             C31075 * (2 * C31350 +
                                       C31075 * (C31136 +
                                                 C31075 * (C31075 * C31146 +
                                                           C31243 * be) +
                                                 C31075 * C31243 * be) +
                                       C31419 * be) +
                             C31460 * be) +
                   C31731 * be) +
         (4 * C31721 + C31075 * C31731) * be) /
        C30824;
    const double C6093 =
        (5 * (3 * C31651 + C31074 * C31668 + C31648 * ae) +
         C31074 * (4 * C31668 +
                   C31074 * (3 * C31665 +
                             C31074 * (2 * C31661 +
                                       C31074 * (C31175 +
                                                 C31074 * (C31074 * C31185 +
                                                           C31243 * ae) +
                                                 C31349 * ae) +
                                       C31354 * ae) +
                             C31361 * ae) +
                   C31662 * ae) +
         (4 * C31648 + C31074 * C31662) * ae) /
        C30824;
    const double C6174 =
        (C31075 * (3 * C31651 + C31074 * C31668 + C31648 * ae)) / C30824;
    const double C6176 =
        (2 * C31553 + C31074 * C31651 + C31554 * ae + C31668 * C31269) / C30824;
    const double C6178 =
        (3 * C31651 + C31074 * C31668 + C31648 * ae +
         (3 * C31665 +
          C31074 *
              (2 * C31661 +
               C31074 * (C31175 + C31074 * (C31074 * C31185 + C31243 * ae) +
                         C31349 * ae) +
               C31354 * ae) +
          C31361 * ae) *
             C31269) /
        C30824;
    const double C6442 =
        (C31075 *
         (4 * C31668 +
          C31074 *
              (3 * C31665 +
               C31074 * (2 * C31661 +
                         C31074 * (C31175 +
                                   C31074 * (C31074 * C31185 + C31243 * ae) +
                                   C31349 * ae) +
                         C31354 * ae) +
               C31361 * ae) +
          C31662 * ae)) /
        C30824;
    const double C7300 =
        (2 * C31075 * C31668 +
         C31075 *
             (C31668 +
              (2 * C31661 +
               C31074 * (C31175 + C31074 * (C31074 * C31185 + C31243 * ae) +
                         C31349 * ae) +
               C31354 * ae) *
                  C31269)) /
        C30824;
    const double C847 = C846 + C844;
    const double C30915 = C30910 - C30911;
    const double C30914 = C30909 + C32199;
    const double C14647 = C14645 + C14641;
    const double C14646 = C14644 + C14637;
    const double C17920 = C17919 + C17917;
    const double C5295 = C5294 + C5290;
    const double C31002 = C30997 - C30998;
    const double C31001 = C30996 + C32200;
    const double C19964 = C19960 * C31941;
    const double C19963 = C19959 * C114;
    const double C19962 = C19958 * C31941;
    const double C22634 = C19958 * C32199;
    const double C25652 = C19958 * C14625;
    const double C19961 = C19957 * C114;
    const double C22633 = C19957 * C2662;
    const double C25651 = C19957 * C14631;
    const double C22643 = C22641 * C32003;
    const double C25654 = C22641 * C32003;
    const double C22642 = C22640 * C2663;
    const double C25653 = C22640 * C14632;
    const double C1808 = C1806 + C1807;
    const double C9969 = C9967 + C9968;
    const double C6451 = C113 * C6174;
    const double C9305 = C3373 * C6174;
    const double C26738 = C19915 * C6174;
    const double C6707 = C1758 * C6176;
    const double C9803 = C3373 * C6176;
    const double C10930 = C9919 * C6176;
    const double C27236 = C19915 * C6176;
    const double C30246 = C31016 * C6176;
    const double C17101 = C827 * C30915;
    const double C6024 =
        (C30915 / C30860 + ((C30822 * C30929 + C17091) * ae) / C30824) /
            C30860 -
        ((C30822 * (C30929 / C30860 + (0 * ae) / C30824) + C32240) * be) /
            C30824;
    const double C7432 =
        C30915 / C30860 - ((C30822 * C30929 + C17091) * be) / C30824;
    const double C15339 =
        C30915 / C30860 + ((C30822 * C30929 + C17091) * ae) / C30824;
    const double C30918 = C30914 * be;
    const double C23682 = C31002 * C366;
    const double C23676 = C31002 * C352;
    const double C23671 = C31002 * C364;
    const double C23665 = C31002 * C351;
    const double C23659 = C31002 * C362;
    const double C23653 = C31002 * C350;
    const double C24085 = C31002 * C691;
    const double C24079 = C31002 * C683;
    const double C24073 = C31002 * C689;
    const double C24067 = C31002 * C682;
    const double C24255 = C31002 * C374;
    const double C24249 = C31002 * C356;
    const double C24243 = C31002 * C372;
    const double C24237 = C31002 * C355;
    const double C24729 = C31002 * C1127;
    const double C24723 = C31002 * C1116;
    const double C24717 = C31002 * C1125;
    const double C24711 = C31002 * C1115;
    const double C24706 = C31002 * C687;
    const double C24700 = C31002 * C681;
    const double C25295 = C31002 * C1135;
    const double C25289 = C31002 * C1120;
    const double C25501 = C31002 * C1131;
    const double C25495 = C31002 * C1118;
    const double C30244 = C31002 * C1627;
    const double C30238 = C31002 * C1623;
    const double C30808 = C31002 * C1133;
    const double C30802 = C31002 * C1119;
    const double C11595 =
        (C31002 / C30860 + ((C30841 * C31016 + C23645) * ae) / C30824) /
            C30860 -
        ((C30841 * (C31016 / C30860 + (0 * ae) / C30824) + C32246) * be) /
            C30824;
    const double C13143 =
        C31002 / C30860 - ((C30841 * C31016 + C23645) * be) / C30824;
    const double C21834 =
        C31002 / C30860 + ((C30841 * C31016 + C23645) * ae) / C30824;
    const double C31005 = C31001 * be;
    const double C19966 = C19963 + C19964;
    const double C19965 = C19961 + C19962;
    const double C22639 = C22633 + C22634;
    const double C25655 = C25651 + C25652;
    const double C30920 = C30918 / C30824;
    const double C23690 = C23670 - C23671;
    const double C23687 = C23664 - C23665;
    const double C25083 = C24073 - C24074;
    const double C25077 = C24074 - C24073;
    const double C25080 = C24067 - C24068;
    const double C25074 = C24068 - C24067;
    const double C30234 = C24718 - C24717;
    const double C30231 = C24712 - C24711;
    const double C13174 = C13143 * C374;
    const double C13166 = C13143 * C356;
    const double C13159 = C13143 * C372;
    const double C13151 = C13143 * C355;
    const double C13516 = C13143 * C1135;
    const double C13508 = C13143 * C1120;
    const double C13662 = C13143 * C2037;
    const double C13654 = C13143 * C2029;
    const double C14020 = C13143 * C1133;
    const double C14012 = C13143 * C1119;
    const double C14005 = C13143 * C1131;
    const double C13997 = C13143 * C1118;
    const double C14524 = C13143 * C2550;
    const double C14516 = C13143 * C2546;
    const double C21865 = C21834 * C374;
    const double C21857 = C21834 * C356;
    const double C21850 = C21834 * C372;
    const double C21842 = C21834 * C355;
    const double C22207 = C21834 * C1135;
    const double C22199 = C21834 * C1120;
    const double C22353 = C21834 * C2037;
    const double C22345 = C21834 * C2029;
    const double C27462 = C21834 * C1133;
    const double C27454 = C21834 * C1119;
    const double C27447 = C21834 * C1131;
    const double C27439 = C21834 * C1118;
    const double C27966 = C21834 * C2550;
    const double C27958 = C21834 * C2546;
    const double C31007 = C31005 / C30824;
    const double C22644 = C22639 + C22642;
    const double C25656 = C25655 + C25653;
    const double C30922 = C30908 - C30920;
    const double C31009 = C30995 - C31007;
    const double C22645 = C22644 + C22643;
    const double C25657 = C25656 + C25654;
    const double C30923 = C30922 + C30893;
    const double C31010 = C31009 + C30980;
    const double C17099 = C164 * C30923;
    const double C6021 =
        (((((0 - (C30822 * C30876) / C30824) * ae) / C30824 -
           (0 * be) / C30828 + (2 * C30877) / C30824) /
              C30860 -
          ((C30822 * C30912 + 0) * be) / C30824 + C30886 - C30899) /
             C30860 +
         ((C30822 * C30921 + 0) * ae) / C30824) /
            C30860 -
        ((C30822 * (C30921 / C30860 +
                    ((C30822 * C30923 + C31999) * ae) / C30824 + C30915) +
          C32272) *
         be) /
            C30824 +
        C30923 / C30860 + ((C30822 * C30915 + C32006) * ae) / C30824 +
        2 * (C30893 / C30860 - (0 * be) / C30824);
    const double C6022 =
        (C30921 / C30860 + ((C30822 * C30923 + C31999) * ae) / C30824 +
         C30915) /
            C30860 -
        ((C30822 * (C30923 / C30860 +
                    ((C30822 * C30915 + C32006) * ae) / C30824 + 2 * C30929) +
          C32268) *
         be) /
            C30824 +
        2 * (C30915 / C30860 + ((C30822 * C30929 + C17091) * ae) / C30824);
    const double C6023 =
        (C30923 / C30860 + ((C30822 * C30915 + C32006) * ae) / C30824 +
         2 * C30929) /
            C30860 -
        ((C30822 *
              (C30915 / C30860 + ((C30822 * C30929 + C17091) * ae) / C30824) +
          C32258) *
         be) /
            C30824 +
        3 * (C30929 / C30860 + (0 * ae) / C30824);
    const double C7430 =
        C30921 / C30860 - ((C30822 * C30923 + C31999) * be) / C30824 + C30915;
    const double C7431 = C30923 / C30860 -
                         ((C30822 * C30915 + C32006) * be) / C30824 +
                         2 * C30929;
    const double C15337 =
        C30921 / C30860 + ((C30822 * C30923 + C31999) * ae) / C30824 + C30915;
    const double C15338 = C30923 / C30860 +
                          ((C30822 * C30915 + C32006) * ae) / C30824 +
                          2 * C30929;
    const double C23680 = C31010 * C129;
    const double C23674 = C31010 * C118;
    const double C23669 = C31010 * C127;
    const double C23663 = C31010 * C117;
    const double C23657 = C31010 * C125;
    const double C23651 = C31010 * C116;
    const double C24083 = C31010 * C259;
    const double C24077 = C31010 * C246;
    const double C24071 = C31010 * C257;
    const double C24065 = C31010 * C245;
    const double C24253 = C31010 * C364;
    const double C24247 = C31010 * C351;
    const double C24241 = C31010 * C362;
    const double C24235 = C31010 * C350;
    const double C24727 = C31010 * C267;
    const double C24721 = C31010 * C250;
    const double C24715 = C31010 * C265;
    const double C24709 = C31010 * C249;
    const double C24704 = C31010 * C255;
    const double C24698 = C31010 * C244;
    const double C25293 = C31010 * C689;
    const double C25287 = C31010 * C682;
    const double C25499 = C31010 * C687;
    const double C25493 = C31010 * C681;
    const double C30242 = C31010 * C964;
    const double C30236 = C31010 * C957;
    const double C30806 = C31010 * C1125;
    const double C30800 = C31010 * C1115;
    const double C11592 =
        (((((0 - (C30841 * C30963) / C30824) * ae) / C30824 -
           (0 * be) / C30828 + (2 * C30964) / C30824) /
              C30860 -
          ((C30841 * C30999 + 0) * be) / C30824 + C30973 - C30986) /
             C30860 +
         ((C30841 * C31008 + 0) * ae) / C30824) /
            C30860 -
        ((C30841 * (C31008 / C30860 +
                    ((C30841 * C31010 + C32041) * ae) / C30824 + C31002) +
          C32273) *
         be) /
            C30824 +
        C31010 / C30860 + ((C30841 * C31002 + C32048) * ae) / C30824 +
        2 * (C30980 / C30860 - (0 * be) / C30824);
    const double C11593 =
        (C31008 / C30860 + ((C30841 * C31010 + C32041) * ae) / C30824 +
         C31002) /
            C30860 -
        ((C30841 * (C31010 / C30860 +
                    ((C30841 * C31002 + C32048) * ae) / C30824 + 2 * C31016) +
          C32270) *
         be) /
            C30824 +
        2 * (C31002 / C30860 + ((C30841 * C31016 + C23645) * ae) / C30824);
    const double C11594 =
        (C31010 / C30860 + ((C30841 * C31002 + C32048) * ae) / C30824 +
         2 * C31016) /
            C30860 -
        ((C30841 *
              (C31002 / C30860 + ((C30841 * C31016 + C23645) * ae) / C30824) +
          C32261) *
         be) /
            C30824 +
        3 * (C31016 / C30860 + (0 * ae) / C30824);
    const double C13141 =
        C31008 / C30860 - ((C30841 * C31010 + C32041) * be) / C30824 + C31002;
    const double C13142 = C31010 / C30860 -
                          ((C30841 * C31002 + C32048) * be) / C30824 +
                          2 * C31016;
    const double C21832 =
        C31008 / C30860 + ((C30841 * C31010 + C32041) * ae) / C30824 + C31002;
    const double C21833 = C31010 / C30860 +
                          ((C30841 * C31002 + C32048) * ae) / C30824 +
                          2 * C31016;
    const double C17105 = C17099 + C17100;
    const double C23689 = C23668 - C23669;
    const double C23686 = C23662 - C23663;
    const double C25082 = C24071 - C24072;
    const double C25076 = C24072 - C24071;
    const double C25079 = C24065 - C24066;
    const double C25073 = C24066 - C24065;
    const double C30233 = C24716 - C24715;
    const double C30230 = C24710 - C24709;
    const double C13170 = C13141 * C127;
    const double C13162 = C13141 * C117;
    const double C13155 = C13141 * C125;
    const double C13147 = C13141 * C116;
    const double C13512 = C13141 * C257;
    const double C13504 = C13141 * C245;
    const double C13658 = C13141 * C362;
    const double C13650 = C13141 * C350;
    const double C14016 = C13141 * C265;
    const double C14008 = C13141 * C249;
    const double C14001 = C13141 * C255;
    const double C13993 = C13141 * C244;
    const double C14520 = C13141 * C687;
    const double C14512 = C13141 * C681;
    const double C13172 = C13142 * C364;
    const double C13164 = C13142 * C351;
    const double C13157 = C13142 * C362;
    const double C13149 = C13142 * C350;
    const double C13514 = C13142 * C689;
    const double C13506 = C13142 * C682;
    const double C13660 = C13142 * C372;
    const double C13652 = C13142 * C355;
    const double C14018 = C13142 * C1125;
    const double C14010 = C13142 * C1115;
    const double C14003 = C13142 * C687;
    const double C13995 = C13142 * C681;
    const double C14522 = C13142 * C1131;
    const double C14514 = C13142 * C1118;
    const double C21861 = C21832 * C127;
    const double C21853 = C21832 * C117;
    const double C21846 = C21832 * C125;
    const double C21838 = C21832 * C116;
    const double C22203 = C21832 * C257;
    const double C22195 = C21832 * C245;
    const double C22349 = C21832 * C362;
    const double C22341 = C21832 * C350;
    const double C27458 = C21832 * C265;
    const double C27450 = C21832 * C249;
    const double C27443 = C21832 * C255;
    const double C27435 = C21832 * C244;
    const double C27962 = C21832 * C687;
    const double C27954 = C21832 * C681;
    const double C21863 = C21833 * C364;
    const double C21855 = C21833 * C351;
    const double C21848 = C21833 * C362;
    const double C21840 = C21833 * C350;
    const double C22205 = C21833 * C689;
    const double C22197 = C21833 * C682;
    const double C22351 = C21833 * C372;
    const double C22343 = C21833 * C355;
    const double C27460 = C21833 * C1125;
    const double C27452 = C21833 * C1115;
    const double C27445 = C21833 * C687;
    const double C27437 = C21833 * C681;
    const double C27964 = C21833 * C1131;
    const double C27956 = C21833 * C1118;
    const double C17106 = C17105 + C17101;
    const double C23693 = C23689 + C23690;
    const double C23692 = C23686 + C23687;
    const double C25088 = C25082 + C25083;
    const double C25086 = C25076 + C25077;
    const double C25087 = C25079 + C25080;
    const double C25085 = C25073 + C25074;
    const double C30249 = C30233 + C30234;
    const double C30248 = C30230 + C30231;
    const double C17107 = C17106 + C17102;
    const double C23695 = C23693 + C23691;
    const double C23694 = C23692 + C23688;
    const double C25092 = C25088 + C25084;
    const double C25090 = C25086 + C25078;
    const double C25091 = C25087 + C25081;
    const double C25089 = C25085 + C25075;
    const double C30251 = C30249 + C30235;
    const double C30250 = C30248 + C30232;
    const double C17108 = C17107 + C17103;
    const double C23697 = C23695 * C31941;
    const double C23696 = C23694 * C114;
    const double C17109 = C17108 + C17104;
    const double C23698 = C23696 + C23697;
    d2ee[0] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C31958 * C122 - C113 * C115) * C30923 +
             (C31958 * C136 - C113 * C123) * C31999 + (C982 - C983) * C30915 +
             (C984 - C985) * C32006 + C1004 * C30929 + C1005 * C17091) *
                C31864 +
            ((C144 - C145) * C30923 + (C146 - C147) * C31999 + C1302 * C30915 +
             C1303 * C32006 + C990 * C30929 + C991 * C17091) *
                C31872 +
            C17109 * C17094) *
               C31918 * C471 +
           (((C983 - C982) * C30923 + (C985 - C984) * C31999 +
             (C987 - C986) * C30915 + (C989 - C988) * C32006 +
             (C992 - C993) * C30929 + (C994 - C995) * C17091) *
                C31864 +
            (C1304 * C30923 + C1305 * C31999 + C1306 * C30915 + C1307 * C32006 +
             C7763 * C30929 + C7764 * C17091) *
                C31872 +
            (C1308 * C30923 + C1309 * C31999 + C1310 * C30915 + C1311 * C32006 +
             (C1000 - C1001) * C30929 + (C1002 - C1003) * C17091) *
                C17094) *
               C31918 * C472) *
              C473 +
          ((((C145 - C144) * C30923 + (C147 - C146) * C31999 + C1304 * C30915 +
             C1305 * C32006 + C1306 * C30929 + C1307 * C17091) *
                C31864 +
            ((C149 - C148) * C30923 + (C151 - C150) * C31999 + C1308 * C30915 +
             C1309 * C32006 + C1310 * C30929 + C1311 * C17091) *
                C31872 +
            ((C153 - C152) * C30923 + (C155 - C154) * C31999 + C3007 * C30915 +
             C3008 * C32006 + (C833 - C834) * C30929 + (C835 - C836) * C17091) *
                C17094) *
               C31918 * C471 +
           ((C1302 * C30923 + C1303 * C31999 + C990 * C30915 + C991 * C32006 +
             C7533 * C30929 + C7534 * C17091) *
                C31864 +
            (C827 * C30923 + C828 * C31999 + C840 * C30915 + C841 * C32006 +
             (C1001 - C1000) * C30929 + (C1003 - C1002) * C17091) *
                C31872 +
            (C2671 * C30923 + C2672 * C31999 + (C834 - C833) * C30915 +
             (C836 - C835) * C32006 + (C31958 * C1298 - C113 * C1297) * C30929 +
             (C31958 * C1300 - C113 * C1299) * C17091) *
                C17094) *
               C31918 * C472) *
              C474)) /
        (p * q * std::sqrt(p + q));
    d2ee[1] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C31958 * C122 - C113 * C115) * C30923 +
             (C31958 * C136 - C113 * C123) * C31999 + (C982 - C983) * C30915 +
             (C984 - C985) * C32006 + C1004 * C30929 + C1005 * C17091) *
                C31864 +
            ((C144 - C145) * C30923 + (C146 - C147) * C31999 + C1302 * C30915 +
             C1303 * C32006 + C990 * C30929 + C991 * C17091) *
                C31872 +
            C17109 * C17094) *
               C577 +
           (((C113 * C349 - C31958 * C359) * C30923 +
             (C113 * C360 - C31958 * C379) * C31999 + (C1636 - C1637) * C30915 +
             (C1638 - C1639) * C32006 + (C1640 - C1641) * C30929 +
             (C1642 - C1643) * C17091) *
                C31864 +
            ((C584 - C585) * C30923 + (C586 - C587) * C31999 +
             (C1462 - C1463) * C30915 + (C1464 - C1465) * C32006 +
             (C1466 - C1467) * C30929 + (C1468 - C1469) * C17091) *
                C31872 +
            ((C588 - C589) * C30923 + (C590 - C591) * C31999 +
             (C1470 - C1471) * C30915 + (C1472 - C1473) * C32006 +
             (C1474 - C1475) * C30929 + (C1476 - C1477) * C17091) *
                C17094) *
               C578) *
              C471 +
          ((((C983 - C982) * C30923 + (C985 - C984) * C31999 +
             (C987 - C986) * C30915 + (C989 - C988) * C32006 +
             (C992 - C993) * C30929 + (C994 - C995) * C17091) *
                C31864 +
            (C1304 * C30923 + C1305 * C31999 + C1306 * C30915 + C1307 * C32006 +
             C7763 * C30929 + C7764 * C17091) *
                C31872 +
            (C1308 * C30923 + C1309 * C31999 + C1310 * C30915 + C1311 * C32006 +
             (C1000 - C1001) * C30929 + (C1002 - C1003) * C17091) *
                C17094) *
               C577 +
           (((C1637 - C1636) * C30923 + (C1639 - C1638) * C31999 +
             (C1641 - C1640) * C30915 + (C1643 - C1642) * C32006 +
             (C6446 - C6445) * C30929 + (C6448 - C6447) * C17091) *
                C31864 +
            ((C1463 - C1462) * C30923 + (C1465 - C1464) * C31999 +
             (C1467 - C1466) * C30915 + (C1469 - C1468) * C32006 +
             (C7896 - C7895) * C30929 + (C7898 - C7897) * C17091) *
                C31872 +
            ((C1471 - C1470) * C30923 + (C1473 - C1472) * C31999 +
             (C1475 - C1474) * C30915 + (C1477 - C1476) * C32006 +
             (C31958 * C1630 - C113 * C1625) * C30929 +
             (C31958 * C1634 - C113 * C1631) * C17091) *
                C17094) *
               C578) *
              C472) *
         C31892) /
        (p * q * std::sqrt(p + q));
    d2ee[2] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31958 * C122 - C113 * C115) * C30923 +
            (C31958 * C136 - C113 * C123) * C31999 + (C982 - C983) * C30915 +
            (C984 - C985) * C32006 + C1004 * C30929 + C1005 * C17091) *
               C31864 +
           ((C144 - C145) * C30923 + (C146 - C147) * C31999 + C1302 * C30915 +
            C1303 * C32006 + C990 * C30929 + C991 * C17091) *
               C31872 +
           C17109 * C17094) *
              C31918 * C240 +
          (((C983 - C982) * C30923 + (C985 - C984) * C31999 +
            (C987 - C986) * C30915 + (C989 - C988) * C32006 +
            (C992 - C993) * C30929 + (C994 - C995) * C17091) *
               C31864 +
           (C1304 * C30923 + C1305 * C31999 + C1306 * C30915 + C1307 * C32006 +
            C7763 * C30929 + C7764 * C17091) *
               C31872 +
           (C1308 * C30923 + C1309 * C31999 + C1310 * C30915 + C1311 * C32006 +
            (C1000 - C1001) * C30929 + (C1002 - C1003) * C17091) *
               C17094) *
              C31918 * C241 +
          ((C1004 * C30923 + C1005 * C31999 + C6097 * C30915 + C6098 * C32006 +
            C6107 * C30929 + C6108 * C17091) *
               C31864 +
           (C990 * C30923 + C991 * C31999 + C7533 * C30915 + C7534 * C32006 +
            (C6270 - C6269) * C30929 + (C6272 - C6271) * C17091) *
               C31872 +
           (C840 * C30923 + C841 * C31999 + (C1001 - C1000) * C30915 +
            (C1003 - C1002) * C32006 + (C31958 * C973 - C113 * C962) * C30929 +
            (C31958 * C980 - C113 * C974) * C17091) *
               C17094) *
              C31918 * C242) *
         C31892) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31958 * C122 - C113 * C115) * C30923 +
            (C31958 * C136 - C113 * C123) * C31999 + (C982 - C983) * C30915 +
            (C984 - C985) * C32006 + C1004 * C30929 + C1005 * C17091) *
               C31864 +
           ((C144 - C145) * C30923 + (C146 - C147) * C31999 + C1302 * C30915 +
            C1303 * C32006 + C990 * C30929 + C991 * C17091) *
               C31872 +
           C17109 * C17094) *
              C31918 * C31904 * C110 +
          (((C145 - C144) * C30923 + (C147 - C146) * C31999 + C1304 * C30915 +
            C1305 * C32006 + C1306 * C30929 + C1307 * C17091) *
               C31864 +
           ((C149 - C148) * C30923 + (C151 - C150) * C31999 + C1308 * C30915 +
            C1309 * C32006 + C1310 * C30929 + C1311 * C17091) *
               C31872 +
           ((C153 - C152) * C30923 + (C155 - C154) * C31999 + C3007 * C30915 +
            C3008 * C32006 + (C833 - C834) * C30929 + (C835 - C836) * C17091) *
               C17094) *
              C31918 * C31904 * C111 +
          (C17109 * C31864 +
           (C166 * C30923 + C167 * C31999 + C2671 * C30915 + C2672 * C32006 +
            (C834 - C833) * C30929 + (C836 - C835) * C17091) *
               C31872 +
           (C168 * C30923 + C169 * C31999 + (C493 - C492) * C30915 +
            (C495 - C494) * C32006 + (C31958 * C272 - C113 * C253) * C30929 +
            (C31958 * C283 - C113 * C273) * C17091) *
               C17094) *
              C31918 * C31904 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C31958 * C122 - C113 * C115) * C30923 +
            (C31958 * C136 - C113 * C123) * C31999 + (C982 - C983) * C30915 +
            (C984 - C985) * C32006 + C1004 * C30929 + C1005 * C17091) *
               C31864 +
           ((C144 - C145) * C30923 + (C146 - C147) * C31999 + C1302 * C30915 +
            C1303 * C32006 + C990 * C30929 + C991 * C17091) *
               C31872 +
           C17109 * C17094) *
              C346 +
          (((C113 * C349 - C31958 * C359) * C30923 +
            (C113 * C360 - C31958 * C379) * C31999 + (C1636 - C1637) * C30915 +
            (C1638 - C1639) * C32006 + (C1640 - C1641) * C30929 +
            (C1642 - C1643) * C17091) *
               C31864 +
           ((C584 - C585) * C30923 + (C586 - C587) * C31999 +
            (C1462 - C1463) * C30915 + (C1464 - C1465) * C32006 +
            (C1466 - C1467) * C30929 + (C1468 - C1469) * C17091) *
               C31872 +
           ((C588 - C589) * C30923 + (C590 - C591) * C31999 +
            (C1470 - C1471) * C30915 + (C1472 - C1473) * C32006 +
            (C1474 - C1475) * C30929 + (C1476 - C1477) * C17091) *
               C17094) *
              C347 +
          (((C31958 * C369 - C113 * C354) * C30923 +
            (C31958 * C384 - C113 * C370) * C31999 +
            (C31958 * C1130 - C113 * C1118) * C30915 +
            (C31958 * C1145 - C113 * C1131) * C32006 +
            (C31958 * C1132 - C113 * C1119) * C30929 +
            (C31958 * C1146 - C113 * C1133) * C17091) *
               C31864 +
           ((C31958 * C371 - C113 * C355) * C30923 +
            (C31958 * C385 - C113 * C372) * C31999 +
            (C31958 * C1134 - C113 * C1120) * C30915 +
            (C31958 * C1147 - C113 * C1135) * C32006 +
            (C31958 * C1136 - C113 * C1121) * C30929 +
            (C31958 * C1148 - C113 * C1137) * C17091) *
               C31872 +
           ((C31958 * C373 - C113 * C356) * C30923 +
            (C31958 * C386 - C113 * C374) * C31999 +
            (C31958 * C1138 - C113 * C1122) * C30915 +
            (C31958 * C1149 - C113 * C1139) * C32006 +
            (C31958 * C1140 - C113 * C1123) * C30929 +
            (C31958 * C1150 - C113 * C1141) * C17091) *
               C17094) *
              C348) *
         C31904 * C31892) /
            (p * q * std::sqrt(p + q));
    d2ee[3] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C31958 * C122 - C113 * C115) * C30923 +
             (C31958 * C136 - C113 * C123) * C31999 + (C982 - C983) * C30915 +
             (C984 - C985) * C32006 + C1004 * C30929 + C1005 * C17091) *
                C31864 +
            ((C144 - C145) * C30923 + (C146 - C147) * C31999 + C1302 * C30915 +
             C1303 * C32006 + C990 * C30929 + C991 * C17091) *
                C31872 +
            C17109 * C17094) *
               C577 +
           (((C113 * C349 - C31958 * C359) * C30923 +
             (C113 * C360 - C31958 * C379) * C31999 + (C1636 - C1637) * C30915 +
             (C1638 - C1639) * C32006 + (C1640 - C1641) * C30929 +
             (C1642 - C1643) * C17091) *
                C31864 +
            ((C584 - C585) * C30923 + (C586 - C587) * C31999 +
             (C1462 - C1463) * C30915 + (C1464 - C1465) * C32006 +
             (C1466 - C1467) * C30929 + (C1468 - C1469) * C17091) *
                C31872 +
            ((C588 - C589) * C30923 + (C590 - C591) * C31999 +
             (C1470 - C1471) * C30915 + (C1472 - C1473) * C32006 +
             (C1474 - C1475) * C30929 + (C1476 - C1477) * C17091) *
                C17094) *
               C578) *
              C31904 * C473 +
          ((((C145 - C144) * C30923 + (C147 - C146) * C31999 + C1304 * C30915 +
             C1305 * C32006 + C1306 * C30929 + C1307 * C17091) *
                C31864 +
            ((C149 - C148) * C30923 + (C151 - C150) * C31999 + C1308 * C30915 +
             C1309 * C32006 + C1310 * C30929 + C1311 * C17091) *
                C31872 +
            ((C153 - C152) * C30923 + (C155 - C154) * C31999 + C3007 * C30915 +
             C3008 * C32006 + (C833 - C834) * C30929 + (C835 - C836) * C17091) *
                C17094) *
               C577 +
           (((C585 - C584) * C30923 + (C587 - C586) * C31999 +
             (C1463 - C1462) * C30915 + (C1465 - C1464) * C32006 +
             (C1467 - C1466) * C30929 + (C1469 - C1468) * C17091) *
                C31864 +
            ((C589 - C588) * C30923 + (C591 - C590) * C31999 +
             (C1471 - C1470) * C30915 + (C1473 - C1472) * C32006 +
             (C1475 - C1474) * C30929 + (C1477 - C1476) * C17091) *
                C31872 +
            ((C593 - C592) * C30923 + (C595 - C594) * C31999 +
             (C3140 - C3139) * C30915 + (C3142 - C3141) * C32006 +
             (C31958 * C1458 - C113 * C1457) * C30929 +
             (C31958 * C1460 - C113 * C1459) * C17091) *
                C17094) *
               C578) *
              C31904 * C474)) /
        (p * q * std::sqrt(p + q));
    d2ee[4] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31958 * C122 - C113 * C115) * C30923 +
            (C31958 * C136 - C113 * C123) * C31999 + (C982 - C983) * C30915 +
            (C984 - C985) * C32006 + C1004 * C30929 + C1005 * C17091) *
               C31864 +
           ((C144 - C145) * C30923 + (C146 - C147) * C31999 + C1302 * C30915 +
            C1303 * C32006 + C990 * C30929 + C991 * C17091) *
               C31872 +
           C17109 * C17094) *
              C31918 * C31904 * C110 +
          (((C145 - C144) * C30923 + (C147 - C146) * C31999 + C1304 * C30915 +
            C1305 * C32006 + C1306 * C30929 + C1307 * C17091) *
               C31864 +
           ((C149 - C148) * C30923 + (C151 - C150) * C31999 + C1308 * C30915 +
            C1309 * C32006 + C1310 * C30929 + C1311 * C17091) *
               C31872 +
           ((C153 - C152) * C30923 + (C155 - C154) * C31999 + C3007 * C30915 +
            C3008 * C32006 + (C833 - C834) * C30929 + (C835 - C836) * C17091) *
               C17094) *
              C31918 * C31904 * C111 +
          (C17109 * C31864 +
           (C166 * C30923 + C167 * C31999 + C2671 * C30915 + C2672 * C32006 +
            (C834 - C833) * C30929 + (C836 - C835) * C17091) *
               C31872 +
           (C168 * C30923 + C169 * C31999 + (C493 - C492) * C30915 +
            (C495 - C494) * C32006 + (C31958 * C272 - C113 * C253) * C30929 +
            (C31958 * C283 - C113 * C273) * C17091) *
               C17094) *
              C31918 * C31904 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31958 * C122 - C113 * C115) * C30923 +
            (C31958 * C136 - C113 * C123) * C31999 + (C982 - C983) * C30915 +
            (C984 - C985) * C32006 + C1004 * C30929 + C1005 * C17091) *
               C31864 +
           ((C144 - C145) * C30923 + (C146 - C147) * C31999 + C1302 * C30915 +
            C1303 * C32006 + C990 * C30929 + C991 * C17091) *
               C31872 +
           C17109 * C17094) *
              C31918 * C240 +
          (((C983 - C982) * C30923 + (C985 - C984) * C31999 +
            (C987 - C986) * C30915 + (C989 - C988) * C32006 +
            (C992 - C993) * C30929 + (C994 - C995) * C17091) *
               C31864 +
           (C1304 * C30923 + C1305 * C31999 + C1306 * C30915 + C1307 * C32006 +
            C7763 * C30929 + C7764 * C17091) *
               C31872 +
           (C1308 * C30923 + C1309 * C31999 + C1310 * C30915 + C1311 * C32006 +
            (C1000 - C1001) * C30929 + (C1002 - C1003) * C17091) *
               C17094) *
              C31918 * C241 +
          ((C1004 * C30923 + C1005 * C31999 + C6097 * C30915 + C6098 * C32006 +
            C6107 * C30929 + C6108 * C17091) *
               C31864 +
           (C990 * C30923 + C991 * C31999 + C7533 * C30915 + C7534 * C32006 +
            (C6270 - C6269) * C30929 + (C6272 - C6271) * C17091) *
               C31872 +
           (C840 * C30923 + C841 * C31999 + (C1001 - C1000) * C30915 +
            (C1003 - C1002) * C32006 + (C31958 * C973 - C113 * C962) * C30929 +
            (C31958 * C980 - C113 * C974) * C17091) *
               C17094) *
              C31918 * C242) *
         C31892) /
            (p * q * std::sqrt(p + q));
    d2ee[5] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C32200 * C122 - C3372 * C115 + C32045 * C359 - C3373 * C349) *
                 C30923 +
             (C32200 * C136 - C3372 * C123 + C32045 * C379 - C3373 * C360) *
                 C31999 +
             (C4364 - C4365 + C4366 - C4367) * C30915 +
             (C4368 - C4369 + C4370 - C4371) * C32006 + C8345 * C30929 +
             C8346 * C17091) *
                C15335 +
            ((C3375 - C3376 + C3377 - C3378) * C30923 +
             (C3379 - C3380 + C3381 - C3382) * C31999 + C4748 * C30915 +
             C4749 * C32006 + C8347 * C30929 + C8348 * C17091) *
                C31869) *
               C31918 * C471 +
           (((C4365 - C4364 + C4367 - C4366) * C30923 +
             (C4369 - C4368 + C4371 - C4370) * C31999 +
             (C4372 - C4373 + C4374 - C4375) * C30915 +
             (C4376 - C4377 + C4378 - C4379) * C32006 +
             (C8329 - C8330 + C8331 - C8332) * C30929 +
             (C8333 - C8334 + C8335 - C8336) * C17091) *
                C15335 +
            (C4750 * C30923 + C4751 * C31999 + C8693 * C30915 + C8694 * C32006 +
             (C8337 - C8338 + C8339 - C8340) * C30929 +
             (C8341 - C8342 + C8343 - C8344) * C17091) *
                C31869) *
               C31918 * C472) *
              C473 +
          ((((C3376 - C3375 + C3378 - C3377) * C30923 +
             (C3380 - C3379 + C3382 - C3381) * C31999 + C4750 * C30915 +
             C4751 * C32006 + C8693 * C30929 + C8694 * C17091) *
                C15335 +
            ((C3384 - C3383 + C3386 - C3385) * C30923 +
             (C3388 - C3387 + C3390 - C3389) * C31999 + C4752 * C30915 +
             C4753 * C32006 + (C4388 - C4389 + C4390 - C4391) * C30929 +
             (C4392 - C4393 + C4394 - C4395) * C17091) *
                C31869) *
               C31918 * C471 +
           ((C4748 * C30923 + C4749 * C31999 + C8347 * C30915 + C8348 * C32006 +
             (C8338 - C8337 + C8340 - C8339) * C30929 +
             (C8342 - C8341 + C8344 - C8343) * C17091) *
                C15335 +
            (C4212 * C30923 + C4213 * C31999 +
             (C4389 - C4388 + C4391 - C4390) * C30915 +
             (C4393 - C4392 + C4395 - C4394) * C32006 +
             (C32200 * C967 - C3372 * C959 + C32045 * C1630 - C3373 * C1625) *
                 C30929 +
             (C32200 * C977 - C3372 * C968 + C32045 * C1634 - C3373 * C1631) *
                 C17091) *
                C31869) *
               C31918 * C472) *
              C474)) /
        (p * q * std::sqrt(p + q));
    d2ee[6] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C32200 * C122 - C3372 * C115 + C32045 * C359 - C3373 * C349) *
                 C30923 +
             (C32200 * C136 - C3372 * C123 + C32045 * C379 - C3373 * C360) *
                 C31999 +
             (C4364 - C4365 + C4366 - C4367) * C30915 +
             (C4368 - C4369 + C4370 - C4371) * C32006 + C8345 * C30929 +
             C8346 * C17091) *
                C15335 +
            ((C3375 - C3376 + C3377 - C3378) * C30923 +
             (C3379 - C3380 + C3381 - C3382) * C31999 + C4748 * C30915 +
             C4749 * C32006 + C8347 * C30929 + C8348 * C17091) *
                C31869) *
               C577 +
           (((C3372 * C349 - C32200 * C359 + C3373 * C354 - C32045 * C369) *
                 C30923 +
             (C3372 * C360 - C32200 * C379 + C3373 * C370 - C32045 * C384) *
                 C31999 +
             (C5158 - C5159 + C5160 - C5161) * C30915 +
             (C5162 - C5163 + C5164 - C5165) * C32006 +
             (C9091 - C9092 + C9093 - C9094) * C30929 +
             (C9095 - C9096 + C9097 - C9098) * C17091) *
                C15335 +
            ((C3905 - C3906 + C3907 - C3908) * C30923 +
             (C3909 - C3910 + C3911 - C3912) * C31999 +
             (C4948 - C4949 + C4950 - C4951) * C30915 +
             (C4952 - C4953 + C4954 - C4955) * C32006 +
             (C8889 - C8890 + C8891 - C8892) * C30929 +
             (C8893 - C8894 + C8895 - C8896) * C17091) *
                C31869) *
               C578) *
              C471 +
          ((((C4365 - C4364 + C4367 - C4366) * C30923 +
             (C4369 - C4368 + C4371 - C4370) * C31999 +
             (C4372 - C4373 + C4374 - C4375) * C30915 +
             (C4376 - C4377 + C4378 - C4379) * C32006 +
             (C8329 - C8330 + C8331 - C8332) * C30929 +
             (C8333 - C8334 + C8335 - C8336) * C17091) *
                C15335 +
            (C4750 * C30923 + C4751 * C31999 + C8693 * C30915 + C8694 * C32006 +
             (C8337 - C8338 + C8339 - C8340) * C30929 +
             (C8341 - C8342 + C8343 - C8344) * C17091) *
                C31869) *
               C577 +
           (((C5159 - C5158 + C5161 - C5160) * C30923 +
             (C5163 - C5162 + C5165 - C5164) * C31999 +
             (C9092 - C9091 + C9094 - C9093) * C30915 +
             (C9096 - C9095 + C9098 - C9097) * C32006 +
             (C9798 - C9797 + C9800 - C9799) * C30929 +
             (C9802 - C9801 + C9804 - C9803) * C17091) *
                C15335 +
            ((C4949 - C4948 + C4951 - C4950) * C30923 +
             (C4953 - C4952 + C4955 - C4954) * C31999 +
             (C8890 - C8889 + C8892 - C8891) * C30915 +
             (C8894 - C8893 + C8896 - C8895) * C32006 +
             (C32200 * C1628 - C3372 * C1624 + C32045 * C6987 - C3373 * C6986) *
                 C30929 +
             (C32200 * C1633 - C3372 * C1629 + C32045 * C6989 - C3373 * C6988) *
                 C17091) *
                C31869) *
               C578) *
              C472) *
         C31892) /
        (p * q * std::sqrt(p + q));
    d2ee[7] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C32200 * C122 - C3372 * C115 + C32045 * C359 - C3373 * C349) *
                C30923 +
            (C32200 * C136 - C3372 * C123 + C32045 * C379 - C3373 * C360) *
                C31999 +
            (C4364 - C4365 + C4366 - C4367) * C30915 +
            (C4368 - C4369 + C4370 - C4371) * C32006 + C8345 * C30929 +
            C8346 * C17091) *
               C15335 +
           ((C3375 - C3376 + C3377 - C3378) * C30923 +
            (C3379 - C3380 + C3381 - C3382) * C31999 + C4748 * C30915 +
            C4749 * C32006 + C8347 * C30929 + C8348 * C17091) *
               C31869) *
              C31918 * C240 +
          (((C4365 - C4364 + C4367 - C4366) * C30923 +
            (C4369 - C4368 + C4371 - C4370) * C31999 +
            (C4372 - C4373 + C4374 - C4375) * C30915 +
            (C4376 - C4377 + C4378 - C4379) * C32006 +
            (C8329 - C8330 + C8331 - C8332) * C30929 +
            (C8333 - C8334 + C8335 - C8336) * C17091) *
               C15335 +
           (C4750 * C30923 + C4751 * C31999 + C8693 * C30915 + C8694 * C32006 +
            (C8337 - C8338 + C8339 - C8340) * C30929 +
            (C8341 - C8342 + C8343 - C8344) * C17091) *
               C31869) *
              C31918 * C241 +
          ((C8345 * C30923 + C8346 * C31999 + C9307 * C30915 + C9308 * C32006 +
            (C9300 - C9299 + C9302 - C9301) * C30929 +
            (C9304 - C9303 + C9306 - C9305) * C17091) *
               C15335 +
           (C8347 * C30923 + C8348 * C31999 +
            (C8338 - C8337 + C8340 - C8339) * C30915 +
            (C8342 - C8341 + C8344 - C8343) * C32006 +
            (C32200 * C971 - C3372 * C961 + C32045 * C6355 - C3373 * C6354) *
                C30929 +
            (C32200 * C979 - C3372 * C972 + C32045 * C6357 - C3373 * C6356) *
                C17091) *
               C31869) *
              C31918 * C242) *
         C31892) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C32200 * C122 - C3372 * C115 + C32045 * C359 - C3373 * C349) *
                C30923 +
            (C32200 * C136 - C3372 * C123 + C32045 * C379 - C3373 * C360) *
                C31999 +
            (C4364 - C4365 + C4366 - C4367) * C30915 +
            (C4368 - C4369 + C4370 - C4371) * C32006 + C8345 * C30929 +
            C8346 * C17091) *
               C15335 +
           ((C3375 - C3376 + C3377 - C3378) * C30923 +
            (C3379 - C3380 + C3381 - C3382) * C31999 + C4748 * C30915 +
            C4749 * C32006 + C8347 * C30929 + C8348 * C17091) *
               C31869) *
              C31918 * C31904 * C110 +
          (((C3376 - C3375 + C3378 - C3377) * C30923 +
            (C3380 - C3379 + C3382 - C3381) * C31999 + C4750 * C30915 +
            C4751 * C32006 + C8693 * C30929 + C8694 * C17091) *
               C15335 +
           ((C3384 - C3383 + C3386 - C3385) * C30923 +
            (C3388 - C3387 + C3390 - C3389) * C31999 + C4752 * C30915 +
            C4753 * C32006 + (C4388 - C4389 + C4390 - C4391) * C30929 +
            (C4392 - C4393 + C4394 - C4395) * C17091) *
               C31869) *
              C31918 * C31904 * C111 +
          ((C3415 * C30923 + C3416 * C31999 + C4212 * C30915 + C4213 * C32006 +
            (C4389 - C4388 + C4391 - C4390) * C30929 +
            (C4393 - C4392 + C4395 - C4394) * C17091) *
               C15335 +
           (C3417 * C30923 + C3418 * C31999 +
            (C3768 - C3767 + C3770 - C3769) * C30915 +
            (C3772 - C3771 + C3774 - C3773) * C32006 +
            (C32200 * C270 - C3372 * C252 + C32045 * C1458 - C3373 * C1457) *
                C30929 +
            (C32200 * C282 - C3372 * C271 + C32045 * C1460 - C3373 * C1459) *
                C17091) *
               C31869) *
              C31918 * C31904 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C32200 * C122 - C3372 * C115 + C32045 * C359 - C3373 * C349) *
                C30923 +
            (C32200 * C136 - C3372 * C123 + C32045 * C379 - C3373 * C360) *
                C31999 +
            (C4364 - C4365 + C4366 - C4367) * C30915 +
            (C4368 - C4369 + C4370 - C4371) * C32006 + C8345 * C30929 +
            C8346 * C17091) *
               C15335 +
           ((C3375 - C3376 + C3377 - C3378) * C30923 +
            (C3379 - C3380 + C3381 - C3382) * C31999 + C4748 * C30915 +
            C4749 * C32006 + C8347 * C30929 + C8348 * C17091) *
               C31869) *
              C346 +
          (((C3372 * C349 - C32200 * C359 + C3373 * C354 - C32045 * C369) *
                C30923 +
            (C3372 * C360 - C32200 * C379 + C3373 * C370 - C32045 * C384) *
                C31999 +
            (C5158 - C5159 + C5160 - C5161) * C30915 +
            (C5162 - C5163 + C5164 - C5165) * C32006 +
            (C9091 - C9092 + C9093 - C9094) * C30929 +
            (C9095 - C9096 + C9097 - C9098) * C17091) *
               C15335 +
           ((C3905 - C3906 + C3907 - C3908) * C30923 +
            (C3909 - C3910 + C3911 - C3912) * C31999 +
            (C4948 - C4949 + C4950 - C4951) * C30915 +
            (C4952 - C4953 + C4954 - C4955) * C32006 +
            (C8889 - C8890 + C8891 - C8892) * C30929 +
            (C8893 - C8894 + C8895 - C8896) * C17091) *
               C31869) *
              C347 +
          (((C32200 * C369 - C3372 * C354 + C32045 * C2034 - C3373 * C2028) *
                C30923 +
            (C32200 * C384 - C3372 * C370 + C32045 * C2046 - C3373 * C2035) *
                C31999 +
            (C32200 * C1130 - C3372 * C1118 + C32045 * C2549 - C3373 * C2546) *
                C30915 +
            (C32200 * C1145 - C3372 * C1131 + C32045 * C2555 - C3373 * C2550) *
                C32006 +
            (C32200 * C1132 - C3372 * C1119 + C32045 * C6831 - C3373 * C6828) *
                C30929 +
            (C32200 * C1146 - C3372 * C1133 + C32045 * C6837 - C3373 * C6832) *
                C17091) *
               C15335 +
           ((C32200 * C371 - C3372 * C355 + C32045 * C2036 - C3373 * C2029) *
                C30923 +
            (C32200 * C385 - C3372 * C372 + C32045 * C2047 - C3373 * C2037) *
                C31999 +
            (C32200 * C1134 - C3372 * C1120 + C32045 * C2551 - C3373 * C2547) *
                C30915 +
            (C32200 * C1147 - C3372 * C1135 + C32045 * C2556 - C3373 * C2552) *
                C32006 +
            (C32200 * C1136 - C3372 * C1121 + C32045 * C7149 - C3373 * C7148) *
                C30929 +
            (C32200 * C1148 - C3372 * C1137 + C32045 * C7151 - C3373 * C7150) *
                C17091) *
               C31869) *
              C348) *
         C31904 * C31892) /
            (p * q * std::sqrt(p + q));
    d2ee[8] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C32200 * C122 - C3372 * C115 + C32045 * C359 - C3373 * C349) *
                 C30923 +
             (C32200 * C136 - C3372 * C123 + C32045 * C379 - C3373 * C360) *
                 C31999 +
             (C4364 - C4365 + C4366 - C4367) * C30915 +
             (C4368 - C4369 + C4370 - C4371) * C32006 + C8345 * C30929 +
             C8346 * C17091) *
                C15335 +
            ((C3375 - C3376 + C3377 - C3378) * C30923 +
             (C3379 - C3380 + C3381 - C3382) * C31999 + C4748 * C30915 +
             C4749 * C32006 + C8347 * C30929 + C8348 * C17091) *
                C31869) *
               C577 +
           (((C3372 * C349 - C32200 * C359 + C3373 * C354 - C32045 * C369) *
                 C30923 +
             (C3372 * C360 - C32200 * C379 + C3373 * C370 - C32045 * C384) *
                 C31999 +
             (C5158 - C5159 + C5160 - C5161) * C30915 +
             (C5162 - C5163 + C5164 - C5165) * C32006 +
             (C9091 - C9092 + C9093 - C9094) * C30929 +
             (C9095 - C9096 + C9097 - C9098) * C17091) *
                C15335 +
            ((C3905 - C3906 + C3907 - C3908) * C30923 +
             (C3909 - C3910 + C3911 - C3912) * C31999 +
             (C4948 - C4949 + C4950 - C4951) * C30915 +
             (C4952 - C4953 + C4954 - C4955) * C32006 +
             (C8889 - C8890 + C8891 - C8892) * C30929 +
             (C8893 - C8894 + C8895 - C8896) * C17091) *
                C31869) *
               C578) *
              C31904 * C473 +
          ((((C3376 - C3375 + C3378 - C3377) * C30923 +
             (C3380 - C3379 + C3382 - C3381) * C31999 + C4750 * C30915 +
             C4751 * C32006 + C8693 * C30929 + C8694 * C17091) *
                C15335 +
            ((C3384 - C3383 + C3386 - C3385) * C30923 +
             (C3388 - C3387 + C3390 - C3389) * C31999 + C4752 * C30915 +
             C4753 * C32006 + (C4388 - C4389 + C4390 - C4391) * C30929 +
             (C4392 - C4393 + C4394 - C4395) * C17091) *
                C31869) *
               C577 +
           (((C3906 - C3905 + C3908 - C3907) * C30923 +
             (C3910 - C3909 + C3912 - C3911) * C31999 +
             (C4949 - C4948 + C4951 - C4950) * C30915 +
             (C4953 - C4952 + C4955 - C4954) * C32006 +
             (C8890 - C8889 + C8892 - C8891) * C30929 +
             (C8894 - C8893 + C8896 - C8895) * C17091) *
                C15335 +
            ((C3914 - C3913 + C3916 - C3915) * C30923 +
             (C3918 - C3917 + C3920 - C3919) * C31999 +
             (C4957 - C4956 + C4959 - C4958) * C30915 +
             (C4961 - C4960 + C4963 - C4962) * C32006 +
             (C32200 * C1128 - C3372 * C1117 + C32045 * C1140 - C3373 * C1123) *
                 C30929 +
             (C32200 * C1144 - C3372 * C1129 + C32045 * C1150 - C3373 * C1141) *
                 C17091) *
                C31869) *
               C578) *
              C31904 * C474)) /
        (p * q * std::sqrt(p + q));
    d2ee[9] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C32200 * C122 - C3372 * C115 + C32045 * C359 - C3373 * C349) *
                C30923 +
            (C32200 * C136 - C3372 * C123 + C32045 * C379 - C3373 * C360) *
                C31999 +
            (C4364 - C4365 + C4366 - C4367) * C30915 +
            (C4368 - C4369 + C4370 - C4371) * C32006 + C8345 * C30929 +
            C8346 * C17091) *
               C15335 +
           ((C3375 - C3376 + C3377 - C3378) * C30923 +
            (C3379 - C3380 + C3381 - C3382) * C31999 + C4748 * C30915 +
            C4749 * C32006 + C8347 * C30929 + C8348 * C17091) *
               C31869) *
              C31918 * C31904 * C110 +
          (((C3376 - C3375 + C3378 - C3377) * C30923 +
            (C3380 - C3379 + C3382 - C3381) * C31999 + C4750 * C30915 +
            C4751 * C32006 + C8693 * C30929 + C8694 * C17091) *
               C15335 +
           ((C3384 - C3383 + C3386 - C3385) * C30923 +
            (C3388 - C3387 + C3390 - C3389) * C31999 + C4752 * C30915 +
            C4753 * C32006 + (C4388 - C4389 + C4390 - C4391) * C30929 +
            (C4392 - C4393 + C4394 - C4395) * C17091) *
               C31869) *
              C31918 * C31904 * C111 +
          ((C3415 * C30923 + C3416 * C31999 + C4212 * C30915 + C4213 * C32006 +
            (C4389 - C4388 + C4391 - C4390) * C30929 +
            (C4393 - C4392 + C4395 - C4394) * C17091) *
               C15335 +
           (C3417 * C30923 + C3418 * C31999 +
            (C3768 - C3767 + C3770 - C3769) * C30915 +
            (C3772 - C3771 + C3774 - C3773) * C32006 +
            (C32200 * C270 - C3372 * C252 + C32045 * C1458 - C3373 * C1457) *
                C30929 +
            (C32200 * C282 - C3372 * C271 + C32045 * C1460 - C3373 * C1459) *
                C17091) *
               C31869) *
              C31918 * C31904 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C32200 * C122 - C3372 * C115 + C32045 * C359 - C3373 * C349) *
                C30923 +
            (C32200 * C136 - C3372 * C123 + C32045 * C379 - C3373 * C360) *
                C31999 +
            (C4364 - C4365 + C4366 - C4367) * C30915 +
            (C4368 - C4369 + C4370 - C4371) * C32006 + C8345 * C30929 +
            C8346 * C17091) *
               C15335 +
           ((C3375 - C3376 + C3377 - C3378) * C30923 +
            (C3379 - C3380 + C3381 - C3382) * C31999 + C4748 * C30915 +
            C4749 * C32006 + C8347 * C30929 + C8348 * C17091) *
               C31869) *
              C31918 * C240 +
          (((C4365 - C4364 + C4367 - C4366) * C30923 +
            (C4369 - C4368 + C4371 - C4370) * C31999 +
            (C4372 - C4373 + C4374 - C4375) * C30915 +
            (C4376 - C4377 + C4378 - C4379) * C32006 +
            (C8329 - C8330 + C8331 - C8332) * C30929 +
            (C8333 - C8334 + C8335 - C8336) * C17091) *
               C15335 +
           (C4750 * C30923 + C4751 * C31999 + C8693 * C30915 + C8694 * C32006 +
            (C8337 - C8338 + C8339 - C8340) * C30929 +
            (C8341 - C8342 + C8343 - C8344) * C17091) *
               C31869) *
              C31918 * C241 +
          ((C8345 * C30923 + C8346 * C31999 + C9307 * C30915 + C9308 * C32006 +
            (C9300 - C9299 + C9302 - C9301) * C30929 +
            (C9304 - C9303 + C9306 - C9305) * C17091) *
               C15335 +
           (C8347 * C30923 + C8348 * C31999 +
            (C8338 - C8337 + C8340 - C8339) * C30915 +
            (C8342 - C8341 + C8344 - C8343) * C32006 +
            (C32200 * C971 - C3372 * C961 + C32045 * C6355 - C3373 * C6354) *
                C30929 +
            (C32200 * C979 - C3372 * C972 + C32045 * C6357 - C3373 * C6356) *
                C17091) *
               C31869) *
              C31918 * C242) *
         C31892) /
            (p * q * std::sqrt(p + q));
    d2ee[10] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31958 * C122 - C113 * C115) * C15337 +
             (C31958 * C136 - C113 * C123) * C32272 + (C982 - C983) * C15338 +
             (C984 - C985) * C32268 + C1004 * C15339 + C1005 * C32258 +
             C6097 * C15340 + C6098 * C32240) *
                C15335 +
            ((C144 - C145) * C15337 + (C146 - C147) * C32272 + C1302 * C15338 +
             C1303 * C32268 + C990 * C15339 + C991 * C32258 + C7533 * C15340 +
             C7534 * C32240) *
                C31869) *
               C31918 * C471 +
           (((C983 - C982) * C15337 + (C985 - C984) * C32272 +
             (C987 - C986) * C15338 + (C989 - C988) * C32268 +
             (C992 - C993) * C15339 + (C994 - C995) * C32258 +
             (C6100 - C6099) * C15340 + (C6102 - C6101) * C32240) *
                C15335 +
            (C1304 * C15337 + C1305 * C32272 + C1306 * C15338 + C1307 * C32268 +
             C7763 * C15339 + C7764 * C32258 + (C6269 - C6270) * C15340 +
             (C6271 - C6272) * C32240) *
                C31869) *
               C31918 * C472) *
              C473 +
          ((((C145 - C144) * C15337 + (C147 - C146) * C32272 + C1304 * C15338 +
             C1305 * C32268 + C1306 * C15339 + C1307 * C32258 + C7763 * C15340 +
             C7764 * C32240) *
                C15335 +
            ((C149 - C148) * C15337 + (C151 - C150) * C32272 + C1308 * C15338 +
             C1309 * C32268 + C1310 * C15339 + C1311 * C32258 +
             (C1000 - C1001) * C15340 + (C1002 - C1003) * C32240) *
                C31869) *
               C31918 * C471 +
           ((C1302 * C15337 + C1303 * C32272 + C990 * C15338 + C991 * C32268 +
             C7533 * C15339 + C7534 * C32258 + (C6270 - C6269) * C15340 +
             (C6272 - C6271) * C32240) *
                C15335 +
            (C827 * C15337 + C828 * C32272 + C840 * C15338 + C841 * C32268 +
             (C1001 - C1000) * C15339 + (C1003 - C1002) * C32258 +
             (C31958 * C973 - C113 * C962) * C15340 +
             (C31958 * C980 - C113 * C974) * C32240) *
                C31869) *
               C31918 * C472) *
              C474)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31958 * C122 - C113 * C115) * C14631 +
             (C31958 * C136 - C113 * C123) * C14625 + (C982 - C983) * C14632 +
             (C984 - C985) * C32003) *
                C32271 +
            ((C144 - C145) * C14631 + (C146 - C147) * C14625 + C1302 * C14632 +
             C1303 * C32003) *
                C32264 +
            C14646 * C32251 + C14647 * C32234) *
               C31918 * C471 +
           (((C983 - C982) * C14631 + (C985 - C984) * C14625 +
             (C987 - C986) * C14632 + (C989 - C988) * C32003) *
                C32271 +
            (C1304 * C14631 + C1305 * C14625 + C1306 * C14632 +
             C1307 * C32003) *
                C32264 +
            (C1308 * C14631 + C1309 * C14625 + C1310 * C14632 +
             C1311 * C32003) *
                C32251 +
            (C3007 * C14631 + C3008 * C14625 + (C833 - C834) * C14632 +
             (C835 - C836) * C32003) *
                C32234) *
               C31918 * C472) *
              C473 +
          ((((C145 - C144) * C14631 + (C147 - C146) * C14625 + C1304 * C14632 +
             C1305 * C32003) *
                C32271 +
            ((C149 - C148) * C14631 + (C151 - C150) * C14625 + C1308 * C14632 +
             C1309 * C32003) *
                C32264 +
            ((C153 - C152) * C14631 + (C155 - C154) * C14625 + C3007 * C14632 +
             C3008 * C32003) *
                C32251 +
            ((C157 - C156) * C14631 + (C159 - C158) * C14625 +
             (C492 - C493) * C14632 + (C494 - C495) * C32003) *
                C32234) *
               C31918 * C471 +
           ((C1302 * C14631 + C1303 * C14625 + C990 * C14632 + C991 * C32003) *
                C32271 +
            (C827 * C14631 + C828 * C14625 + C840 * C14632 + C841 * C32003) *
                C32264 +
            (C2671 * C14631 + C2672 * C14625 + (C834 - C833) * C14632 +
             (C836 - C835) * C32003) *
                C32251 +
            ((C493 - C492) * C14631 + (C495 - C494) * C14625 +
             (C31958 * C272 - C113 * C253) * C14632 +
             (C31958 * C283 - C113 * C273) * C32003) *
                C32234) *
               C31918 * C472) *
              C474)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C32266 * C122 - C1756 * C115 + C32255 * C359 - C1757 * C349 +
              C32233 * C369 - C1758 * C354) *
                 C14631 +
             (C32266 * C136 - C1756 * C123 + C32255 * C379 - C1757 * C360 +
              C32233 * C384 - C1758 * C370) *
                 C14625 +
             (C6673 - C6674 + C6675 - C6676 + C6677 - C6678) * C14632 +
             (C6679 - C6680 + C6681 - C6682 + C6683 - C6684) * C32003) *
                C15335 +
            ((C1760 - C1761 + C1762 - C1763 + C1764 - C1765) * C14631 +
             (C1766 - C1767 + C1768 - C1769 + C1770 - C1771) * C14625 +
             C16576 * C14632 + C16577 * C32003) *
                C31869) *
               C31918 * C471 +
           (((C6674 - C6673 + C6676 - C6675 + C6678 - C6677) * C14631 +
             (C6680 - C6679 + C6682 - C6681 + C6684 - C6683) * C14625 +
             (C6686 - C6685 + C6688 - C6687 + C6690 - C6689) * C14632 +
             (C6692 - C6691 + C6694 - C6693 + C6696 - C6695) * C32003) *
                C15335 +
            (C16578 * C14631 + C16579 * C14625 +
             (C6991 - C6992 + C6993 - C6994 + C6995 - C6996) * C14632 +
             (C6997 - C6998 + C6999 - C7000 + C7001 - C7002) * C32003) *
                C31869) *
               C31918 * C472) *
              C473 +
          ((((C1761 - C1760 + C1763 - C1762 + C1765 - C1764) * C14631 +
             (C1767 - C1766 + C1769 - C1768 + C1771 - C1770) * C14625 +
             C16578 * C14632 + C16579 * C32003) *
                C15335 +
            ((C1773 - C1772 + C1775 - C1774 + C1777 - C1776) * C14631 +
             (C1779 - C1778 + C1781 - C1780 + C1783 - C1782) * C14625 +
             (C2215 - C2216 + C2217 - C2218 + C2219 - C2220) * C14632 +
             (C2221 - C2222 + C2223 - C2224 + C2225 - C2226) * C32003) *
                C31869) *
               C31918 * C471 +
           ((C16576 * C14631 + C16577 * C14625 +
             (C6992 - C6991 + C6994 - C6993 + C6996 - C6995) * C14632 +
             (C6998 - C6997 + C7000 - C6999 + C7002 - C7001) * C32003) *
                C15335 +
            ((C2216 - C2215 + C2218 - C2217 + C2220 - C2219) * C14631 +
             (C2222 - C2221 + C2224 - C2223 + C2226 - C2225) * C14625 +
             (C32266 * C268 - C1756 * C251 + C32255 * C1128 - C1757 * C1117 +
              C32233 * C1140 - C1758 * C1123) *
                 C14632 +
             (C32266 * C281 - C1756 * C269 + C32255 * C1144 - C1757 * C1129 +
              C32233 * C1150 - C1758 * C1141) *
                 C32003) *
                C31869) *
               C31918 * C472) *
              C474)) /
            (p * q * std::sqrt(p + q));
    d2ee[11] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31958 * C122 - C113 * C115) * C15337 +
             (C31958 * C136 - C113 * C123) * C32272 + (C982 - C983) * C15338 +
             (C984 - C985) * C32268 + C1004 * C15339 + C1005 * C32258 +
             C6097 * C15340 + C6098 * C32240) *
                C15335 +
            ((C144 - C145) * C15337 + (C146 - C147) * C32272 + C1302 * C15338 +
             C1303 * C32268 + C990 * C15339 + C991 * C32258 + C7533 * C15340 +
             C7534 * C32240) *
                C31869) *
               C577 +
           (((C113 * C349 - C31958 * C359) * C15337 +
             (C113 * C360 - C31958 * C379) * C32272 + (C1636 - C1637) * C15338 +
             (C1638 - C1639) * C32268 + (C1640 - C1641) * C15339 +
             (C1642 - C1643) * C32258 + (C6445 - C6446) * C15340 +
             (C6447 - C6448) * C32240) *
                C15335 +
            ((C584 - C585) * C15337 + (C586 - C587) * C32272 +
             (C1462 - C1463) * C15338 + (C1464 - C1465) * C32268 +
             (C1466 - C1467) * C15339 + (C1468 - C1469) * C32258 +
             (C7895 - C7896) * C15340 + (C7897 - C7898) * C32240) *
                C31869) *
               C578) *
              C471 +
          ((((C983 - C982) * C15337 + (C985 - C984) * C32272 +
             (C987 - C986) * C15338 + (C989 - C988) * C32268 +
             (C992 - C993) * C15339 + (C994 - C995) * C32258 +
             (C6100 - C6099) * C15340 + (C6102 - C6101) * C32240) *
                C15335 +
            (C1304 * C15337 + C1305 * C32272 + C1306 * C15338 + C1307 * C32268 +
             C7763 * C15339 + C7764 * C32258 + (C6269 - C6270) * C15340 +
             (C6271 - C6272) * C32240) *
                C31869) *
               C577 +
           (((C1637 - C1636) * C15337 + (C1639 - C1638) * C32272 +
             (C1641 - C1640) * C15338 + (C1643 - C1642) * C32268 +
             (C6446 - C6445) * C15339 + (C6448 - C6447) * C32258 +
             (C6450 - C6449) * C15340 + (C6452 - C6451) * C32240) *
                C15335 +
            ((C1463 - C1462) * C15337 + (C1465 - C1464) * C32272 +
             (C1467 - C1466) * C15338 + (C1469 - C1468) * C32268 +
             (C7896 - C7895) * C15339 + (C7898 - C7897) * C32258 +
             (C31958 * C6355 - C113 * C6354) * C15340 +
             (C31958 * C6357 - C113 * C6356) * C32240) *
                C31869) *
               C578) *
              C472) *
         C31892) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31958 * C122 - C113 * C115) * C14631 +
             (C31958 * C136 - C113 * C123) * C14625 + (C982 - C983) * C14632 +
             (C984 - C985) * C32003) *
                C32271 +
            ((C144 - C145) * C14631 + (C146 - C147) * C14625 + C1302 * C14632 +
             C1303 * C32003) *
                C32264 +
            C14646 * C32251 + C14647 * C32234) *
               C577 +
           (((C113 * C349 - C31958 * C359) * C14631 +
             (C113 * C360 - C31958 * C379) * C14625 + (C1636 - C1637) * C14632 +
             (C1638 - C1639) * C32003) *
                C32271 +
            ((C584 - C585) * C14631 + (C586 - C587) * C14625 +
             (C1462 - C1463) * C14632 + (C1464 - C1465) * C32003) *
                C32264 +
            ((C588 - C589) * C14631 + (C590 - C591) * C14625 +
             (C1470 - C1471) * C14632 + (C1472 - C1473) * C32003) *
                C32251 +
            ((C592 - C593) * C14631 + (C594 - C595) * C14625 +
             (C3139 - C3140) * C14632 + (C3141 - C3142) * C32003) *
                C32234) *
               C578) *
              C471 +
          ((((C983 - C982) * C14631 + (C985 - C984) * C14625 +
             (C987 - C986) * C14632 + (C989 - C988) * C32003) *
                C32271 +
            (C1304 * C14631 + C1305 * C14625 + C1306 * C14632 +
             C1307 * C32003) *
                C32264 +
            (C1308 * C14631 + C1309 * C14625 + C1310 * C14632 +
             C1311 * C32003) *
                C32251 +
            (C3007 * C14631 + C3008 * C14625 + (C833 - C834) * C14632 +
             (C835 - C836) * C32003) *
                C32234) *
               C577 +
           (((C1637 - C1636) * C14631 + (C1639 - C1638) * C14625 +
             (C1641 - C1640) * C14632 + (C1643 - C1642) * C32003) *
                C32271 +
            ((C1463 - C1462) * C14631 + (C1465 - C1464) * C14625 +
             (C1467 - C1466) * C14632 + (C1469 - C1468) * C32003) *
                C32264 +
            ((C1471 - C1470) * C14631 + (C1473 - C1472) * C14625 +
             (C1475 - C1474) * C14632 + (C1477 - C1476) * C32003) *
                C32251 +
            ((C3140 - C3139) * C14631 + (C3142 - C3141) * C14625 +
             (C31958 * C1458 - C113 * C1457) * C14632 +
             (C31958 * C1460 - C113 * C1459) * C32003) *
                C32234) *
               C578) *
              C472) *
         C31892) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C32266 * C122 - C1756 * C115 + C32255 * C359 - C1757 * C349 +
              C32233 * C369 - C1758 * C354) *
                 C14631 +
             (C32266 * C136 - C1756 * C123 + C32255 * C379 - C1757 * C360 +
              C32233 * C384 - C1758 * C370) *
                 C14625 +
             (C6673 - C6674 + C6675 - C6676 + C6677 - C6678) * C14632 +
             (C6679 - C6680 + C6681 - C6682 + C6683 - C6684) * C32003) *
                C15335 +
            ((C1760 - C1761 + C1762 - C1763 + C1764 - C1765) * C14631 +
             (C1766 - C1767 + C1768 - C1769 + C1770 - C1771) * C14625 +
             C16576 * C14632 + C16577 * C32003) *
                C31869) *
               C577 +
           (((C1756 * C349 - C32266 * C359 + C1757 * C354 - C32255 * C369 +
              C1758 * C2028 - C32233 * C2034) *
                 C14631 +
             (C1756 * C360 - C32266 * C379 + C1757 * C370 - C32255 * C384 +
              C1758 * C2035 - C32233 * C2046) *
                 C14625 +
             (C7303 - C7304 + C7305 - C7306 + C7307 - C7308) * C14632 +
             (C7309 - C7310 + C7311 - C7312 + C7313 - C7314) * C32003) *
                C15335 +
            ((C2377 - C2378 + C2379 - C2380 + C2381 - C2382) * C14631 +
             (C2383 - C2384 + C2385 - C2386 + C2387 - C2388) * C14625 +
             (C16774 - C16775 + C16776 - C16777 + C16778 - C16779) * C14632 +
             (C16780 - C16781 + C16782 - C16783 + C16784 - C16785) * C32003) *
                C31869) *
               C578) *
              C471 +
          ((((C6674 - C6673 + C6676 - C6675 + C6678 - C6677) * C14631 +
             (C6680 - C6679 + C6682 - C6681 + C6684 - C6683) * C14625 +
             (C6686 - C6685 + C6688 - C6687 + C6690 - C6689) * C14632 +
             (C6692 - C6691 + C6694 - C6693 + C6696 - C6695) * C32003) *
                C15335 +
            (C16578 * C14631 + C16579 * C14625 +
             (C6991 - C6992 + C6993 - C6994 + C6995 - C6996) * C14632 +
             (C6997 - C6998 + C6999 - C7000 + C7001 - C7002) * C32003) *
                C31869) *
               C577 +
           (((C7304 - C7303 + C7306 - C7305 + C7308 - C7307) * C14631 +
             (C7310 - C7309 + C7312 - C7311 + C7314 - C7313) * C14625 +
             (C7316 - C7315 + C7318 - C7317 + C7320 - C7319) * C14632 +
             (C7322 - C7321 + C7324 - C7323 + C7326 - C7325) * C32003) *
                C15335 +
            ((C16775 - C16774 + C16777 - C16776 + C16779 - C16778) * C14631 +
             (C16781 - C16780 + C16783 - C16782 + C16785 - C16784) * C14625 +
             (C32266 * C1126 - C1756 * C1116 + C32255 * C1136 - C1757 * C1121 +
              C32233 * C7149 - C1758 * C7148) *
                 C14632 +
             (C32266 * C1143 - C1756 * C1127 + C32255 * C1148 - C1757 * C1137 +
              C32233 * C7151 - C1758 * C7150) *
                 C32003) *
                C31869) *
               C578) *
              C472) *
         C31892) /
            (p * q * std::sqrt(p + q));
    d2ee[12] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C31958 * C122 - C113 * C115) * C14631 +
                (C31958 * C136 - C113 * C123) * C14625 +
                (C982 - C983) * C14632 + (C984 - C985) * C32003) *
                   C32271 +
               ((C144 - C145) * C14631 + (C146 - C147) * C14625 +
                C1302 * C14632 + C1303 * C32003) *
                   C32264 +
               C14646 * C32251 + C14647 * C32234) *
                  C31918 * C31904 * C110 +
              (((C145 - C144) * C14631 + (C147 - C146) * C14625 +
                C1304 * C14632 + C1305 * C32003) *
                   C32271 +
               ((C149 - C148) * C14631 + (C151 - C150) * C14625 +
                C1308 * C14632 + C1309 * C32003) *
                   C32264 +
               ((C153 - C152) * C14631 + (C155 - C154) * C14625 +
                C3007 * C14632 + C3008 * C32003) *
                   C32251 +
               ((C157 - C156) * C14631 + (C159 - C158) * C14625 +
                (C492 - C493) * C14632 + (C494 - C495) * C32003) *
                   C32234) *
                  C31918 * C31904 * C111 +
              (C14646 * C32271 + C14647 * C32264 +
               (C168 * C14631 + C169 * C14625 + (C493 - C492) * C14632 +
                (C495 - C494) * C32003) *
                   C32251 +
               ((C161 - C160) * C14631 + (C163 - C162) * C14625 +
                (C31958 * C476 - C113 * C475) * C14632 +
                (C31958 * C478 - C113 * C477) * C32003) *
                   C32234) *
                  C31918 * C31904 * C112) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C31958 * C122 - C113 * C115) * C14631 +
                (C31958 * C136 - C113 * C123) * C14625 +
                (C982 - C983) * C14632 + (C984 - C985) * C32003) *
                   C32271 +
               ((C144 - C145) * C14631 + (C146 - C147) * C14625 +
                C1302 * C14632 + C1303 * C32003) *
                   C32264 +
               C14646 * C32251 + C14647 * C32234) *
                  C31918 * C240 +
              (((C983 - C982) * C14631 + (C985 - C984) * C14625 +
                (C987 - C986) * C14632 + (C989 - C988) * C32003) *
                   C32271 +
               (C1304 * C14631 + C1305 * C14625 + C1306 * C14632 +
                C1307 * C32003) *
                   C32264 +
               (C1308 * C14631 + C1309 * C14625 + C1310 * C14632 +
                C1311 * C32003) *
                   C32251 +
               (C3007 * C14631 + C3008 * C14625 + (C833 - C834) * C14632 +
                (C835 - C836) * C32003) *
                   C32234) *
                  C31918 * C241 +
              ((C1004 * C14631 + C1005 * C14625 + C6097 * C14632 +
                C6098 * C32003) *
                   C32271 +
               (C990 * C14631 + C991 * C14625 + C7533 * C14632 +
                C7534 * C32003) *
                   C32264 +
               (C840 * C14631 + C841 * C14625 + (C1001 - C1000) * C14632 +
                (C1003 - C1002) * C32003) *
                   C32251 +
               ((C834 - C833) * C14631 + (C836 - C835) * C14625 +
                (C31958 * C1298 - C113 * C1297) * C14632 +
                (C31958 * C1300 - C113 * C1299) * C32003) *
                   C32234) *
                  C31918 * C242) *
             C31892) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31958 * C122 - C113 * C115) * C14631 +
            (C31958 * C136 - C113 * C123) * C14625 + (C982 - C983) * C14632 +
            (C984 - C985) * C32003) *
               C32271 +
           ((C144 - C145) * C14631 + (C146 - C147) * C14625 + C1302 * C14632 +
            C1303 * C32003) *
               C32264 +
           C14646 * C32251 + C14647 * C32234) *
              C346 +
          (((C113 * C349 - C31958 * C359) * C14631 +
            (C113 * C360 - C31958 * C379) * C14625 + (C1636 - C1637) * C14632 +
            (C1638 - C1639) * C32003) *
               C32271 +
           ((C584 - C585) * C14631 + (C586 - C587) * C14625 +
            (C1462 - C1463) * C14632 + (C1464 - C1465) * C32003) *
               C32264 +
           ((C588 - C589) * C14631 + (C590 - C591) * C14625 +
            (C1470 - C1471) * C14632 + (C1472 - C1473) * C32003) *
               C32251 +
           ((C592 - C593) * C14631 + (C594 - C595) * C14625 +
            (C3139 - C3140) * C14632 + (C3141 - C3142) * C32003) *
               C32234) *
              C347 +
          (((C31958 * C369 - C113 * C354) * C14631 +
            (C31958 * C384 - C113 * C370) * C14625 +
            (C31958 * C1130 - C113 * C1118) * C14632 +
            (C31958 * C1145 - C113 * C1131) * C32003) *
               C32271 +
           ((C31958 * C371 - C113 * C355) * C14631 +
            (C31958 * C385 - C113 * C372) * C14625 +
            (C31958 * C1134 - C113 * C1120) * C14632 +
            (C31958 * C1147 - C113 * C1135) * C32003) *
               C32264 +
           ((C31958 * C373 - C113 * C356) * C14631 +
            (C31958 * C386 - C113 * C374) * C14625 +
            (C31958 * C1138 - C113 * C1122) * C14632 +
            (C31958 * C1149 - C113 * C1139) * C32003) *
               C32251 +
           ((C31958 * C375 - C113 * C357) * C14631 +
            (C31958 * C387 - C113 * C376) * C14625 +
            (C31958 * C2199 - C113 * C2198) * C14632 +
            (C31958 * C2201 - C113 * C2200) * C32003) *
               C32234) *
              C348) *
         C31904 * C31892) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C31958 * C122 - C113 * C115) * C15337 +
            (C31958 * C136 - C113 * C123) * C32272 + (C982 - C983) * C15338 +
            (C984 - C985) * C32268 + C1004 * C15339 + C1005 * C32258 +
            C6097 * C15340 + C6098 * C32240) *
               C15335 +
           ((C144 - C145) * C15337 + (C146 - C147) * C32272 + C1302 * C15338 +
            C1303 * C32268 + C990 * C15339 + C991 * C32258 + C7533 * C15340 +
            C7534 * C32240) *
               C31869) *
              C31918 * C31904 * C110 +
          (((C145 - C144) * C15337 + (C147 - C146) * C32272 + C1304 * C15338 +
            C1305 * C32268 + C1306 * C15339 + C1307 * C32258 + C7763 * C15340 +
            C7764 * C32240) *
               C15335 +
           ((C149 - C148) * C15337 + (C151 - C150) * C32272 + C1308 * C15338 +
            C1309 * C32268 + C1310 * C15339 + C1311 * C32258 +
            (C1000 - C1001) * C15340 + (C1002 - C1003) * C32240) *
               C31869) *
              C31918 * C31904 * C111 +
          ((C164 * C15337 + C165 * C32272 + C827 * C15338 + C828 * C32268 +
            C840 * C15339 + C841 * C32258 + (C1001 - C1000) * C15340 +
            (C1003 - C1002) * C32240) *
               C15335 +
           (C166 * C15337 + C167 * C32272 + C2671 * C15338 + C2672 * C32268 +
            (C834 - C833) * C15339 + (C836 - C835) * C32258 +
            (C31958 * C1298 - C113 * C1297) * C15340 +
            (C31958 * C1300 - C113 * C1299) * C32240) *
               C31869) *
              C31918 * C31904 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C31958 * C122 - C113 * C115) * C15337 +
            (C31958 * C136 - C113 * C123) * C32272 + (C982 - C983) * C15338 +
            (C984 - C985) * C32268 + C1004 * C15339 + C1005 * C32258 +
            C6097 * C15340 + C6098 * C32240) *
               C15335 +
           ((C144 - C145) * C15337 + (C146 - C147) * C32272 + C1302 * C15338 +
            C1303 * C32268 + C990 * C15339 + C991 * C32258 + C7533 * C15340 +
            C7534 * C32240) *
               C31869) *
              C31918 * C240 +
          (((C983 - C982) * C15337 + (C985 - C984) * C32272 +
            (C987 - C986) * C15338 + (C989 - C988) * C32268 +
            (C992 - C993) * C15339 + (C994 - C995) * C32258 +
            (C6100 - C6099) * C15340 + (C6102 - C6101) * C32240) *
               C15335 +
           (C1304 * C15337 + C1305 * C32272 + C1306 * C15338 + C1307 * C32268 +
            C7763 * C15339 + C7764 * C32258 + (C6269 - C6270) * C15340 +
            (C6271 - C6272) * C32240) *
               C31869) *
              C31918 * C241 +
          ((C1004 * C15337 + C1005 * C32272 + C6097 * C15338 + C6098 * C32268 +
            C6107 * C15339 + C6108 * C32258 + (C6104 - C6103) * C15340 +
            (C6106 - C6105) * C32240) *
               C15335 +
           (C990 * C15337 + C991 * C32272 + C7533 * C15338 + C7534 * C32268 +
            (C6270 - C6269) * C15339 + (C6272 - C6271) * C32258 +
            (C31958 * C6265 - C113 * C6264) * C15340 +
            (C31958 * C6267 - C113 * C6266) * C32240) *
               C31869) *
              C31918 * C242) *
         C31892) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31958 * C122 - C113 * C115) * C15337 +
            (C31958 * C136 - C113 * C123) * C32272 + (C982 - C983) * C15338 +
            (C984 - C985) * C32268 + C1004 * C15339 + C1005 * C32258 +
            C6097 * C15340 + C6098 * C32240) *
               C15335 +
           ((C144 - C145) * C15337 + (C146 - C147) * C32272 + C1302 * C15338 +
            C1303 * C32268 + C990 * C15339 + C991 * C32258 + C7533 * C15340 +
            C7534 * C32240) *
               C31869) *
              C346 +
          (((C113 * C349 - C31958 * C359) * C15337 +
            (C113 * C360 - C31958 * C379) * C32272 + (C1636 - C1637) * C15338 +
            (C1638 - C1639) * C32268 + (C1640 - C1641) * C15339 +
            (C1642 - C1643) * C32258 + (C6445 - C6446) * C15340 +
            (C6447 - C6448) * C32240) *
               C15335 +
           ((C584 - C585) * C15337 + (C586 - C587) * C32272 +
            (C1462 - C1463) * C15338 + (C1464 - C1465) * C32268 +
            (C1466 - C1467) * C15339 + (C1468 - C1469) * C32258 +
            (C7895 - C7896) * C15340 + (C7897 - C7898) * C32240) *
               C31869) *
              C347 +
          (((C31958 * C369 - C113 * C354) * C15337 +
            (C31958 * C384 - C113 * C370) * C32272 +
            (C31958 * C1130 - C113 * C1118) * C15338 +
            (C31958 * C1145 - C113 * C1131) * C32268 +
            (C31958 * C1132 - C113 * C1119) * C15339 +
            (C31958 * C1146 - C113 * C1133) * C32258 +
            (C31958 * C6175 - C113 * C6171) * C15340 +
            (C31958 * C6180 - C113 * C6176) * C32240) *
               C15335 +
           ((C31958 * C371 - C113 * C355) * C15337 +
            (C31958 * C385 - C113 * C372) * C32272 +
            (C31958 * C1134 - C113 * C1120) * C15338 +
            (C31958 * C1147 - C113 * C1135) * C32268 +
            (C31958 * C1136 - C113 * C1121) * C15339 +
            (C31958 * C1148 - C113 * C1137) * C32258 +
            (C31958 * C6987 - C113 * C6986) * C15340 +
            (C31958 * C6989 - C113 * C6988) * C32240) *
               C31869) *
              C348) *
         C31904 * C31892) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C32266 * C122 - C1756 * C115 + C32255 * C359 - C1757 * C349 +
             C32233 * C369 - C1758 * C354) *
                C14631 +
            (C32266 * C136 - C1756 * C123 + C32255 * C379 - C1757 * C360 +
             C32233 * C384 - C1758 * C370) *
                C14625 +
            (C6673 - C6674 + C6675 - C6676 + C6677 - C6678) * C14632 +
            (C6679 - C6680 + C6681 - C6682 + C6683 - C6684) * C32003) *
               C15335 +
           ((C1760 - C1761 + C1762 - C1763 + C1764 - C1765) * C14631 +
            (C1766 - C1767 + C1768 - C1769 + C1770 - C1771) * C14625 +
            (C2204 - C2203 + C2206 - C2205 + C2208 - C2207) * C14632 +
            (C2210 - C2209 + C2212 - C2211 + C2214 - C2213) * C32003) *
               C31869) *
              C31918 * C31904 * C110 +
          (((C1761 - C1760 + C1763 - C1762 + C1765 - C1764) * C14631 +
            (C1767 - C1766 + C1769 - C1768 + C1771 - C1770) * C14625 +
            (C2203 - C2204 + C2205 - C2206 + C2207 - C2208) * C14632 +
            (C2209 - C2210 + C2211 - C2212 + C2213 - C2214) * C32003) *
               C15335 +
           ((C1773 - C1772 + C1775 - C1774 + C1777 - C1776) * C14631 +
            (C1779 - C1778 + C1781 - C1780 + C1783 - C1782) * C14625 +
            (C2215 - C2216 + C2217 - C2218 + C2219 - C2220) * C14632 +
            (C2221 - C2222 + C2223 - C2224 + C2225 - C2226) * C32003) *
               C31869) *
              C31918 * C31904 * C111 +
          ((C1804 * C14631 + C1805 * C14625 +
            (C2216 - C2215 + C2218 - C2217 + C2220 - C2219) * C14632 +
            (C2222 - C2221 + C2224 - C2223 + C2226 - C2225) * C32003) *
               C15335 +
           ((C1785 - C1784 + C1787 - C1786 + C1789 - C1788) * C14631 +
            (C1791 - C1790 + C1793 - C1792 + C1795 - C1794) * C14625 +
            (C32266 * C260 - C1756 * C247 + C32255 * C692 - C1757 * C684 +
             C32233 * C2199 - C1758 * C2198) *
                C14632 +
            (C32266 * C277 - C1756 * C261 + C32255 * C699 - C1757 * C693 +
             C32233 * C2201 - C1758 * C2200) *
                C32003) *
               C31869) *
              C31918 * C31904 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C32266 * C122 - C1756 * C115 + C32255 * C359 - C1757 * C349 +
             C32233 * C369 - C1758 * C354) *
                C14631 +
            (C32266 * C136 - C1756 * C123 + C32255 * C379 - C1757 * C360 +
             C32233 * C384 - C1758 * C370) *
                C14625 +
            (C6673 - C6674 + C6675 - C6676 + C6677 - C6678) * C14632 +
            (C6679 - C6680 + C6681 - C6682 + C6683 - C6684) * C32003) *
               C15335 +
           ((C1760 - C1761 + C1762 - C1763 + C1764 - C1765) * C14631 +
            (C1766 - C1767 + C1768 - C1769 + C1770 - C1771) * C14625 +
            (C2204 - C2203 + C2206 - C2205 + C2208 - C2207) * C14632 +
            (C2210 - C2209 + C2212 - C2211 + C2214 - C2213) * C32003) *
               C31869) *
              C31918 * C240 +
          (((C6674 - C6673 + C6676 - C6675 + C6678 - C6677) * C14631 +
            (C6680 - C6679 + C6682 - C6681 + C6684 - C6683) * C14625 +
            (C6686 - C6685 + C6688 - C6687 + C6690 - C6689) * C14632 +
            (C6692 - C6691 + C6694 - C6693 + C6696 - C6695) * C32003) *
               C15335 +
           ((C2203 - C2204 + C2205 - C2206 + C2207 - C2208) * C14631 +
            (C2209 - C2210 + C2211 - C2212 + C2213 - C2214) * C14625 +
            (C6991 - C6992 + C6993 - C6994 + C6995 - C6996) * C14632 +
            (C6997 - C6998 + C6999 - C7000 + C7001 - C7002) * C32003) *
               C31869) *
              C31918 * C241 +
          ((C6717 * C14631 + C6718 * C14625 +
            (C6698 - C6697 + C6700 - C6699 + C6702 - C6701) * C14632 +
            (C6704 - C6703 + C6706 - C6705 + C6708 - C6707) * C32003) *
               C15335 +
           ((C6992 - C6991 + C6994 - C6993 + C6996 - C6995) * C14631 +
            (C6998 - C6997 + C7000 - C6999 + C7002 - C7001) * C14625 +
            (C32266 * C965 - C1756 * C958 + C32255 * C1628 - C1757 * C1624 +
             C32233 * C6987 - C1758 * C6986) *
                C14632 +
            (C32266 * C976 - C1756 * C966 + C32255 * C1633 - C1757 * C1629 +
             C32233 * C6989 - C1758 * C6988) *
                C32003) *
               C31869) *
              C31918 * C242) *
         C31892) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C32266 * C122 - C1756 * C115 + C32255 * C359 - C1757 * C349 +
             C32233 * C369 - C1758 * C354) *
                C14631 +
            (C32266 * C136 - C1756 * C123 + C32255 * C379 - C1757 * C360 +
             C32233 * C384 - C1758 * C370) *
                C14625 +
            (C6673 - C6674 + C6675 - C6676 + C6677 - C6678) * C14632 +
            (C6679 - C6680 + C6681 - C6682 + C6683 - C6684) * C32003) *
               C15335 +
           ((C1760 - C1761 + C1762 - C1763 + C1764 - C1765) * C14631 +
            (C1766 - C1767 + C1768 - C1769 + C1770 - C1771) * C14625 +
            (C2204 - C2203 + C2206 - C2205 + C2208 - C2207) * C14632 +
            (C2210 - C2209 + C2212 - C2211 + C2214 - C2213) * C32003) *
               C31869) *
              C346 +
          (((C1756 * C349 - C32266 * C359 + C1757 * C354 - C32255 * C369 +
             C1758 * C2028 - C32233 * C2034) *
                C14631 +
            (C1756 * C360 - C32266 * C379 + C1757 * C370 - C32255 * C384 +
             C1758 * C2035 - C32233 * C2046) *
                C14625 +
            (C7303 - C7304 + C7305 - C7306 + C7307 - C7308) * C14632 +
            (C7309 - C7310 + C7311 - C7312 + C7313 - C7314) * C32003) *
               C15335 +
           ((C2377 - C2378 + C2379 - C2380 + C2381 - C2382) * C14631 +
            (C2383 - C2384 + C2385 - C2386 + C2387 - C2388) * C14625 +
            (C1756 * C682 - C32266 * C688 + C1757 * C1120 - C32255 * C1134 +
             C1758 * C2547 - C32233 * C2551) *
                C14632 +
            (C1756 * C689 - C32266 * C697 + C1757 * C1135 - C32255 * C1147 +
             C1758 * C2552 - C32233 * C2556) *
                C32003) *
               C31869) *
              C347 +
          (((C32266 * C369 - C1756 * C354 + C32255 * C2034 - C1757 * C2028 +
             C32233 * C2040 - C1758 * C2031) *
                C14631 +
            (C32266 * C384 - C1756 * C370 + C32255 * C2046 - C1757 * C2035 +
             C32233 * C2049 - C1758 * C2041) *
                C14625 +
            (C32266 * C1130 - C1756 * C1118 + C32255 * C2549 - C1757 * C2546 +
             C32233 * C6833 - C1758 * C6829) *
                C14632 +
            (C32266 * C1145 - C1756 * C1131 + C32255 * C2555 - C1757 * C2550 +
             C32233 * C6838 - C1758 * C6834) *
                C32003) *
               C15335 +
           ((C32266 * C371 - C1756 * C355 + C32255 * C2036 - C1757 * C2029 +
             C32233 * C2042 - C1758 * C2032) *
                C14631 +
            (C32266 * C385 - C1756 * C372 + C32255 * C2047 - C1757 * C2037 +
             C32233 * C2050 - C1758 * C2043) *
                C14625 +
            (C32266 * C1134 - C1756 * C1120 + C32255 * C2551 - C1757 * C2547 +
             C32233 * C11812 - C1758 * C11811) *
                C14632 +
            (C32266 * C1147 - C1756 * C1135 + C32255 * C2556 - C1757 * C2552 +
             C32233 * C11814 - C1758 * C11813) *
                C32003) *
               C31869) *
              C348) *
         C31904 * C31892) /
            (p * q * std::sqrt(p + q));
    d2ee[13] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31958 * C122 - C113 * C115) * C15337 +
             (C31958 * C136 - C113 * C123) * C32272 + (C982 - C983) * C15338 +
             (C984 - C985) * C32268 + C1004 * C15339 + C1005 * C32258 +
             C6097 * C15340 + C6098 * C32240) *
                C15335 +
            ((C144 - C145) * C15337 + (C146 - C147) * C32272 + C1302 * C15338 +
             C1303 * C32268 + C990 * C15339 + C991 * C32258 + C7533 * C15340 +
             C7534 * C32240) *
                C31869) *
               C577 +
           (((C113 * C349 - C31958 * C359) * C15337 +
             (C113 * C360 - C31958 * C379) * C32272 + (C1636 - C1637) * C15338 +
             (C1638 - C1639) * C32268 + (C1640 - C1641) * C15339 +
             (C1642 - C1643) * C32258 + (C6445 - C6446) * C15340 +
             (C6447 - C6448) * C32240) *
                C15335 +
            ((C584 - C585) * C15337 + (C586 - C587) * C32272 +
             (C1462 - C1463) * C15338 + (C1464 - C1465) * C32268 +
             (C1466 - C1467) * C15339 + (C1468 - C1469) * C32258 +
             (C7895 - C7896) * C15340 + (C7897 - C7898) * C32240) *
                C31869) *
               C578) *
              C31904 * C473 +
          ((((C145 - C144) * C15337 + (C147 - C146) * C32272 + C1304 * C15338 +
             C1305 * C32268 + C1306 * C15339 + C1307 * C32258 + C7763 * C15340 +
             C7764 * C32240) *
                C15335 +
            ((C149 - C148) * C15337 + (C151 - C150) * C32272 + C1308 * C15338 +
             C1309 * C32268 + C1310 * C15339 + C1311 * C32258 +
             (C1000 - C1001) * C15340 + (C1002 - C1003) * C32240) *
                C31869) *
               C577 +
           (((C585 - C584) * C15337 + (C587 - C586) * C32272 +
             (C1463 - C1462) * C15338 + (C1465 - C1464) * C32268 +
             (C1467 - C1466) * C15339 + (C1469 - C1468) * C32258 +
             (C7896 - C7895) * C15340 + (C7898 - C7897) * C32240) *
                C15335 +
            ((C589 - C588) * C15337 + (C591 - C590) * C32272 +
             (C1471 - C1470) * C15338 + (C1473 - C1472) * C32268 +
             (C1475 - C1474) * C15339 + (C1477 - C1476) * C32258 +
             (C31958 * C1630 - C113 * C1625) * C15340 +
             (C31958 * C1634 - C113 * C1631) * C32240) *
                C31869) *
               C578) *
              C31904 * C474)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31958 * C122 - C113 * C115) * C14631 +
             (C31958 * C136 - C113 * C123) * C14625 + (C982 - C983) * C14632 +
             (C984 - C985) * C32003) *
                C32271 +
            ((C144 - C145) * C14631 + (C146 - C147) * C14625 + C1302 * C14632 +
             C1303 * C32003) *
                C32264 +
            C14646 * C32251 + C14647 * C32234) *
               C577 +
           (((C113 * C349 - C31958 * C359) * C14631 +
             (C113 * C360 - C31958 * C379) * C14625 + (C1636 - C1637) * C14632 +
             (C1638 - C1639) * C32003) *
                C32271 +
            ((C584 - C585) * C14631 + (C586 - C587) * C14625 +
             (C1462 - C1463) * C14632 + (C1464 - C1465) * C32003) *
                C32264 +
            ((C588 - C589) * C14631 + (C590 - C591) * C14625 +
             (C1470 - C1471) * C14632 + (C1472 - C1473) * C32003) *
                C32251 +
            ((C592 - C593) * C14631 + (C594 - C595) * C14625 +
             (C3139 - C3140) * C14632 + (C3141 - C3142) * C32003) *
                C32234) *
               C578) *
              C31904 * C473 +
          ((((C145 - C144) * C14631 + (C147 - C146) * C14625 + C1304 * C14632 +
             C1305 * C32003) *
                C32271 +
            ((C149 - C148) * C14631 + (C151 - C150) * C14625 + C1308 * C14632 +
             C1309 * C32003) *
                C32264 +
            ((C153 - C152) * C14631 + (C155 - C154) * C14625 + C3007 * C14632 +
             C3008 * C32003) *
                C32251 +
            ((C157 - C156) * C14631 + (C159 - C158) * C14625 +
             (C492 - C493) * C14632 + (C494 - C495) * C32003) *
                C32234) *
               C577 +
           (((C585 - C584) * C14631 + (C587 - C586) * C14625 +
             (C1463 - C1462) * C14632 + (C1465 - C1464) * C32003) *
                C32271 +
            ((C589 - C588) * C14631 + (C591 - C590) * C14625 +
             (C1471 - C1470) * C14632 + (C1473 - C1472) * C32003) *
                C32264 +
            ((C593 - C592) * C14631 + (C595 - C594) * C14625 +
             (C3140 - C3139) * C14632 + (C3142 - C3141) * C32003) *
                C32251 +
            ((C597 - C596) * C14631 + (C599 - C598) * C14625 +
             (C31958 * C694 - C113 * C685) * C14632 +
             (C31958 * C700 - C113 * C695) * C32003) *
                C32234) *
               C578) *
              C31904 * C474)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C32266 * C122 - C1756 * C115 + C32255 * C359 - C1757 * C349 +
              C32233 * C369 - C1758 * C354) *
                 C14631 +
             (C32266 * C136 - C1756 * C123 + C32255 * C379 - C1757 * C360 +
              C32233 * C384 - C1758 * C370) *
                 C14625 +
             (C6673 - C6674 + C6675 - C6676 + C6677 - C6678) * C14632 +
             (C6679 - C6680 + C6681 - C6682 + C6683 - C6684) * C32003) *
                C15335 +
            ((C1760 - C1761 + C1762 - C1763 + C1764 - C1765) * C14631 +
             (C1766 - C1767 + C1768 - C1769 + C1770 - C1771) * C14625 +
             C16576 * C14632 + C16577 * C32003) *
                C31869) *
               C577 +
           (((C1756 * C349 - C32266 * C359 + C1757 * C354 - C32255 * C369 +
              C1758 * C2028 - C32233 * C2034) *
                 C14631 +
             (C1756 * C360 - C32266 * C379 + C1757 * C370 - C32255 * C384 +
              C1758 * C2035 - C32233 * C2046) *
                 C14625 +
             (C7303 - C7304 + C7305 - C7306 + C7307 - C7308) * C14632 +
             (C7309 - C7310 + C7311 - C7312 + C7313 - C7314) * C32003) *
                C15335 +
            ((C2377 - C2378 + C2379 - C2380 + C2381 - C2382) * C14631 +
             (C2383 - C2384 + C2385 - C2386 + C2387 - C2388) * C14625 +
             (C16774 - C16775 + C16776 - C16777 + C16778 - C16779) * C14632 +
             (C16780 - C16781 + C16782 - C16783 + C16784 - C16785) * C32003) *
                C31869) *
               C578) *
              C31904 * C473 +
          ((((C1761 - C1760 + C1763 - C1762 + C1765 - C1764) * C14631 +
             (C1767 - C1766 + C1769 - C1768 + C1771 - C1770) * C14625 +
             C16578 * C14632 + C16579 * C32003) *
                C15335 +
            ((C1773 - C1772 + C1775 - C1774 + C1777 - C1776) * C14631 +
             (C1779 - C1778 + C1781 - C1780 + C1783 - C1782) * C14625 +
             (C2215 - C2216 + C2217 - C2218 + C2219 - C2220) * C14632 +
             (C2221 - C2222 + C2223 - C2224 + C2225 - C2226) * C32003) *
                C31869) *
               C577 +
           (((C2378 - C2377 + C2380 - C2379 + C2382 - C2381) * C14631 +
             (C2384 - C2383 + C2386 - C2385 + C2388 - C2387) * C14625 +
             (C16775 - C16774 + C16777 - C16776 + C16779 - C16778) * C14632 +
             (C16781 - C16780 + C16783 - C16782 + C16785 - C16784) * C32003) *
                C15335 +
            ((C2390 - C2389 + C2392 - C2391 + C2394 - C2393) * C14631 +
             (C2396 - C2395 + C2398 - C2397 + C2400 - C2399) * C14625 +
             (C32266 * C690 - C1756 * C683 + C32255 * C1138 - C1757 * C1122 +
              C32233 * C2553 - C1758 * C2548) *
                 C14632 +
             (C32266 * C698 - C1756 * C691 + C32255 * C1149 - C1757 * C1139 +
              C32233 * C2557 - C1758 * C2554) *
                 C32003) *
                C31869) *
               C578) *
              C31904 * C474)) /
            (p * q * std::sqrt(p + q));
    d2ee[14] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31958 * C122 - C113 * C115) * C14631 +
            (C31958 * C136 - C113 * C123) * C14625 + (C982 - C983) * C14632 +
            (C984 - C985) * C32003) *
               C32271 +
           ((C144 - C145) * C14631 + (C146 - C147) * C14625 + C1302 * C14632 +
            C1303 * C32003) *
               C32264 +
           C14646 * C32251 + C14647 * C32234) *
              C31918 * C240 +
          (((C983 - C982) * C14631 + (C985 - C984) * C14625 +
            (C987 - C986) * C14632 + (C989 - C988) * C32003) *
               C32271 +
           (C1304 * C14631 + C1305 * C14625 + C1306 * C14632 + C1307 * C32003) *
               C32264 +
           (C1308 * C14631 + C1309 * C14625 + C1310 * C14632 + C1311 * C32003) *
               C32251 +
           (C3007 * C14631 + C3008 * C14625 + (C833 - C834) * C14632 +
            (C835 - C836) * C32003) *
               C32234) *
              C31918 * C241 +
          ((C1004 * C14631 + C1005 * C14625 + C6097 * C14632 + C6098 * C32003) *
               C32271 +
           (C990 * C14631 + C991 * C14625 + C7533 * C14632 + C7534 * C32003) *
               C32264 +
           (C840 * C14631 + C841 * C14625 + (C1001 - C1000) * C14632 +
            (C1003 - C1002) * C32003) *
               C32251 +
           ((C834 - C833) * C14631 + (C836 - C835) * C14625 +
            (C31958 * C1298 - C113 * C1297) * C14632 +
            (C31958 * C1300 - C113 * C1299) * C32003) *
               C32234) *
              C31918 * C242) *
         C31892) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31958 * C122 - C113 * C115) * C14631 +
            (C31958 * C136 - C113 * C123) * C14625 + (C982 - C983) * C14632 +
            (C984 - C985) * C32003) *
               C32271 +
           ((C144 - C145) * C14631 + (C146 - C147) * C14625 + C1302 * C14632 +
            C1303 * C32003) *
               C32264 +
           C14646 * C32251 + C14647 * C32234) *
              C31918 * C31904 * C110 +
          (((C145 - C144) * C14631 + (C147 - C146) * C14625 + C1304 * C14632 +
            C1305 * C32003) *
               C32271 +
           ((C149 - C148) * C14631 + (C151 - C150) * C14625 + C1308 * C14632 +
            C1309 * C32003) *
               C32264 +
           ((C153 - C152) * C14631 + (C155 - C154) * C14625 + C3007 * C14632 +
            C3008 * C32003) *
               C32251 +
           ((C157 - C156) * C14631 + (C159 - C158) * C14625 +
            (C492 - C493) * C14632 + (C494 - C495) * C32003) *
               C32234) *
              C31918 * C31904 * C111 +
          (C14646 * C32271 + C14647 * C32264 +
           (C168 * C14631 + C169 * C14625 + (C493 - C492) * C14632 +
            (C495 - C494) * C32003) *
               C32251 +
           ((C161 - C160) * C14631 + (C163 - C162) * C14625 +
            (C31958 * C476 - C113 * C475) * C14632 +
            (C31958 * C478 - C113 * C477) * C32003) *
               C32234) *
              C31918 * C31904 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31958 * C122 - C113 * C115) * C15337 +
            (C31958 * C136 - C113 * C123) * C32272 + (C982 - C983) * C15338 +
            (C984 - C985) * C32268 + C1004 * C15339 + C1005 * C32258 +
            C6097 * C15340 + C6098 * C32240) *
               C15335 +
           ((C144 - C145) * C15337 + (C146 - C147) * C32272 + C1302 * C15338 +
            C1303 * C32268 + C990 * C15339 + C991 * C32258 + C7533 * C15340 +
            C7534 * C32240) *
               C31869) *
              C31918 * C31904 * C110 +
          (((C145 - C144) * C15337 + (C147 - C146) * C32272 + C1304 * C15338 +
            C1305 * C32268 + C1306 * C15339 + C1307 * C32258 + C7763 * C15340 +
            C7764 * C32240) *
               C15335 +
           ((C149 - C148) * C15337 + (C151 - C150) * C32272 + C1308 * C15338 +
            C1309 * C32268 + C1310 * C15339 + C1311 * C32258 +
            (C1000 - C1001) * C15340 + (C1002 - C1003) * C32240) *
               C31869) *
              C31918 * C31904 * C111 +
          ((C164 * C15337 + C165 * C32272 + C827 * C15338 + C828 * C32268 +
            C840 * C15339 + C841 * C32258 + (C1001 - C1000) * C15340 +
            (C1003 - C1002) * C32240) *
               C15335 +
           (C166 * C15337 + C167 * C32272 + C2671 * C15338 + C2672 * C32268 +
            (C834 - C833) * C15339 + (C836 - C835) * C32258 +
            (C31958 * C1298 - C113 * C1297) * C15340 +
            (C31958 * C1300 - C113 * C1299) * C32240) *
               C31869) *
              C31918 * C31904 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31958 * C122 - C113 * C115) * C15337 +
            (C31958 * C136 - C113 * C123) * C32272 + (C982 - C983) * C15338 +
            (C984 - C985) * C32268 + C1004 * C15339 + C1005 * C32258 +
            C6097 * C15340 + C6098 * C32240) *
               C15335 +
           ((C144 - C145) * C15337 + (C146 - C147) * C32272 + C1302 * C15338 +
            C1303 * C32268 + C990 * C15339 + C991 * C32258 + C7533 * C15340 +
            C7534 * C32240) *
               C31869) *
              C31918 * C240 +
          (((C983 - C982) * C15337 + (C985 - C984) * C32272 +
            (C987 - C986) * C15338 + (C989 - C988) * C32268 +
            (C992 - C993) * C15339 + (C994 - C995) * C32258 +
            (C6100 - C6099) * C15340 + (C6102 - C6101) * C32240) *
               C15335 +
           (C1304 * C15337 + C1305 * C32272 + C1306 * C15338 + C1307 * C32268 +
            C7763 * C15339 + C7764 * C32258 + (C6269 - C6270) * C15340 +
            (C6271 - C6272) * C32240) *
               C31869) *
              C31918 * C241 +
          ((C1004 * C15337 + C1005 * C32272 + C6097 * C15338 + C6098 * C32268 +
            C6107 * C15339 + C6108 * C32258 + (C6104 - C6103) * C15340 +
            (C6106 - C6105) * C32240) *
               C15335 +
           (C990 * C15337 + C991 * C32272 + C7533 * C15338 + C7534 * C32268 +
            (C6270 - C6269) * C15339 + (C6272 - C6271) * C32258 +
            (C31958 * C6265 - C113 * C6264) * C15340 +
            (C31958 * C6267 - C113 * C6266) * C32240) *
               C31869) *
              C31918 * C242) *
         C31892) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C32266 * C122 - C1756 * C115 + C32255 * C359 - C1757 * C349 +
             C32233 * C369 - C1758 * C354) *
                C14631 +
            (C32266 * C136 - C1756 * C123 + C32255 * C379 - C1757 * C360 +
             C32233 * C384 - C1758 * C370) *
                C14625 +
            (C6673 - C6674 + C6675 - C6676 + C6677 - C6678) * C14632 +
            (C6679 - C6680 + C6681 - C6682 + C6683 - C6684) * C32003) *
               C15335 +
           ((C1760 - C1761 + C1762 - C1763 + C1764 - C1765) * C14631 +
            (C1766 - C1767 + C1768 - C1769 + C1770 - C1771) * C14625 +
            (C2204 - C2203 + C2206 - C2205 + C2208 - C2207) * C14632 +
            (C2210 - C2209 + C2212 - C2211 + C2214 - C2213) * C32003) *
               C31869) *
              C31918 * C31904 * C110 +
          (((C1761 - C1760 + C1763 - C1762 + C1765 - C1764) * C14631 +
            (C1767 - C1766 + C1769 - C1768 + C1771 - C1770) * C14625 +
            (C2203 - C2204 + C2205 - C2206 + C2207 - C2208) * C14632 +
            (C2209 - C2210 + C2211 - C2212 + C2213 - C2214) * C32003) *
               C15335 +
           ((C1773 - C1772 + C1775 - C1774 + C1777 - C1776) * C14631 +
            (C1779 - C1778 + C1781 - C1780 + C1783 - C1782) * C14625 +
            (C2215 - C2216 + C2217 - C2218 + C2219 - C2220) * C14632 +
            (C2221 - C2222 + C2223 - C2224 + C2225 - C2226) * C32003) *
               C31869) *
              C31918 * C31904 * C111 +
          ((C1804 * C14631 + C1805 * C14625 +
            (C2216 - C2215 + C2218 - C2217 + C2220 - C2219) * C14632 +
            (C2222 - C2221 + C2224 - C2223 + C2226 - C2225) * C32003) *
               C15335 +
           ((C1785 - C1784 + C1787 - C1786 + C1789 - C1788) * C14631 +
            (C1791 - C1790 + C1793 - C1792 + C1795 - C1794) * C14625 +
            (C32266 * C260 - C1756 * C247 + C32255 * C692 - C1757 * C684 +
             C32233 * C2199 - C1758 * C2198) *
                C14632 +
            (C32266 * C277 - C1756 * C261 + C32255 * C699 - C1757 * C693 +
             C32233 * C2201 - C1758 * C2200) *
                C32003) *
               C31869) *
              C31918 * C31904 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C32266 * C122 - C1756 * C115 + C32255 * C359 - C1757 * C349 +
             C32233 * C369 - C1758 * C354) *
                C14631 +
            (C32266 * C136 - C1756 * C123 + C32255 * C379 - C1757 * C360 +
             C32233 * C384 - C1758 * C370) *
                C14625 +
            (C6673 - C6674 + C6675 - C6676 + C6677 - C6678) * C14632 +
            (C6679 - C6680 + C6681 - C6682 + C6683 - C6684) * C32003) *
               C15335 +
           ((C1760 - C1761 + C1762 - C1763 + C1764 - C1765) * C14631 +
            (C1766 - C1767 + C1768 - C1769 + C1770 - C1771) * C14625 +
            (C2204 - C2203 + C2206 - C2205 + C2208 - C2207) * C14632 +
            (C2210 - C2209 + C2212 - C2211 + C2214 - C2213) * C32003) *
               C31869) *
              C31918 * C240 +
          (((C6674 - C6673 + C6676 - C6675 + C6678 - C6677) * C14631 +
            (C6680 - C6679 + C6682 - C6681 + C6684 - C6683) * C14625 +
            (C6686 - C6685 + C6688 - C6687 + C6690 - C6689) * C14632 +
            (C6692 - C6691 + C6694 - C6693 + C6696 - C6695) * C32003) *
               C15335 +
           ((C2203 - C2204 + C2205 - C2206 + C2207 - C2208) * C14631 +
            (C2209 - C2210 + C2211 - C2212 + C2213 - C2214) * C14625 +
            (C6991 - C6992 + C6993 - C6994 + C6995 - C6996) * C14632 +
            (C6997 - C6998 + C6999 - C7000 + C7001 - C7002) * C32003) *
               C31869) *
              C31918 * C241 +
          ((C6717 * C14631 + C6718 * C14625 +
            (C6698 - C6697 + C6700 - C6699 + C6702 - C6701) * C14632 +
            (C6704 - C6703 + C6706 - C6705 + C6708 - C6707) * C32003) *
               C15335 +
           ((C6992 - C6991 + C6994 - C6993 + C6996 - C6995) * C14631 +
            (C6998 - C6997 + C7000 - C6999 + C7002 - C7001) * C14625 +
            (C32266 * C965 - C1756 * C958 + C32255 * C1628 - C1757 * C1624 +
             C32233 * C6987 - C1758 * C6986) *
                C14632 +
            (C32266 * C976 - C1756 * C966 + C32255 * C1633 - C1757 * C1629 +
             C32233 * C6989 - C1758 * C6988) *
                C32003) *
               C31869) *
              C31918 * C242) *
         C31892) /
            (p * q * std::sqrt(p + q));
    d2ee[15] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C32200 * C122 - C3372 * C115 + C32045 * C359 - C3373 * C349) *
                 C14631 +
             (C32200 * C136 - C3372 * C123 + C32045 * C379 - C3373 * C360) *
                 C14625 +
             (C4364 - C4365 + C4366 - C4367) * C14632 +
             (C4368 - C4369 + C4370 - C4371) * C32003) *
                C31864 +
            ((C3375 - C3376 + C3377 - C3378) * C14631 +
             (C3379 - C3380 + C3381 - C3382) * C14625 + C4748 * C14632 +
             C4749 * C32003) *
                C31872 +
            C17920 * C17094) *
               C31918 * C471 +
           (((C4365 - C4364 + C4367 - C4366) * C14631 +
             (C4369 - C4368 + C4371 - C4370) * C14625 +
             (C4372 - C4373 + C4374 - C4375) * C14632 +
             (C4376 - C4377 + C4378 - C4379) * C32003) *
                C31864 +
            (C4750 * C14631 + C4751 * C14625 + C8693 * C14632 +
             C8694 * C32003) *
                C31872 +
            (C4752 * C14631 + C4753 * C14625 +
             (C4388 - C4389 + C4390 - C4391) * C14632 +
             (C4392 - C4393 + C4394 - C4395) * C32003) *
                C17094) *
               C31918 * C472) *
              C473 +
          ((((C3376 - C3375 + C3378 - C3377) * C14631 +
             (C3380 - C3379 + C3382 - C3381) * C14625 + C4750 * C14632 +
             C4751 * C32003) *
                C31864 +
            ((C3384 - C3383 + C3386 - C3385) * C14631 +
             (C3388 - C3387 + C3390 - C3389) * C14625 + C4752 * C14632 +
             C4753 * C32003) *
                C31872 +
            ((C3392 - C3391 + C3394 - C3393) * C14631 +
             (C3396 - C3395 + C3398 - C3397) * C14625 +
             (C3767 - C3768 + C3769 - C3770) * C14632 +
             (C3771 - C3772 + C3773 - C3774) * C32003) *
                C17094) *
               C31918 * C471 +
           ((C4748 * C14631 + C4749 * C14625 + C8347 * C14632 +
             C8348 * C32003) *
                C31864 +
            (C4212 * C14631 + C4213 * C14625 +
             (C4389 - C4388 + C4391 - C4390) * C14632 +
             (C4393 - C4392 + C4395 - C4394) * C32003) *
                C31872 +
            ((C3768 - C3767 + C3770 - C3769) * C14631 +
             (C3772 - C3771 + C3774 - C3773) * C14625 +
             (C32200 * C270 - C3372 * C252 + C32045 * C1458 - C3373 * C1457) *
                 C14632 +
             (C32200 * C282 - C3372 * C271 + C32045 * C1460 - C3373 * C1459) *
                 C32003) *
                C17094) *
               C31918 * C472) *
              C474)) /
        (p * q * std::sqrt(p + q));
    d2ee[16] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C32200 * C122 - C3372 * C115 + C32045 * C359 - C3373 * C349) *
                 C14631 +
             (C32200 * C136 - C3372 * C123 + C32045 * C379 - C3373 * C360) *
                 C14625 +
             (C4364 - C4365 + C4366 - C4367) * C14632 +
             (C4368 - C4369 + C4370 - C4371) * C32003) *
                C31864 +
            ((C3375 - C3376 + C3377 - C3378) * C14631 +
             (C3379 - C3380 + C3381 - C3382) * C14625 + C4748 * C14632 +
             C4749 * C32003) *
                C31872 +
            C17920 * C17094) *
               C577 +
           (((C3372 * C349 - C32200 * C359 + C3373 * C354 - C32045 * C369) *
                 C14631 +
             (C3372 * C360 - C32200 * C379 + C3373 * C370 - C32045 * C384) *
                 C14625 +
             (C5158 - C5159 + C5160 - C5161) * C14632 +
             (C5162 - C5163 + C5164 - C5165) * C32003) *
                C31864 +
            ((C3905 - C3906 + C3907 - C3908) * C14631 +
             (C3909 - C3910 + C3911 - C3912) * C14625 +
             (C4948 - C4949 + C4950 - C4951) * C14632 +
             (C4952 - C4953 + C4954 - C4955) * C32003) *
                C31872 +
            ((C3913 - C3914 + C3915 - C3916) * C14631 +
             (C3917 - C3918 + C3919 - C3920) * C14625 +
             (C4956 - C4957 + C4958 - C4959) * C14632 +
             (C4960 - C4961 + C4962 - C4963) * C32003) *
                C17094) *
               C578) *
              C471 +
          ((((C4365 - C4364 + C4367 - C4366) * C14631 +
             (C4369 - C4368 + C4371 - C4370) * C14625 +
             (C4372 - C4373 + C4374 - C4375) * C14632 +
             (C4376 - C4377 + C4378 - C4379) * C32003) *
                C31864 +
            (C4750 * C14631 + C4751 * C14625 + C8693 * C14632 +
             C8694 * C32003) *
                C31872 +
            (C4752 * C14631 + C4753 * C14625 +
             (C4388 - C4389 + C4390 - C4391) * C14632 +
             (C4392 - C4393 + C4394 - C4395) * C32003) *
                C17094) *
               C577 +
           (((C5159 - C5158 + C5161 - C5160) * C14631 +
             (C5163 - C5162 + C5165 - C5164) * C14625 +
             (C9092 - C9091 + C9094 - C9093) * C14632 +
             (C9096 - C9095 + C9098 - C9097) * C32003) *
                C31864 +
            ((C4949 - C4948 + C4951 - C4950) * C14631 +
             (C4953 - C4952 + C4955 - C4954) * C14625 +
             (C8890 - C8889 + C8892 - C8891) * C14632 +
             (C8894 - C8893 + C8896 - C8895) * C32003) *
                C31872 +
            ((C4957 - C4956 + C4959 - C4958) * C14631 +
             (C4961 - C4960 + C4963 - C4962) * C14625 +
             (C32200 * C1128 - C3372 * C1117 + C32045 * C1140 - C3373 * C1123) *
                 C14632 +
             (C32200 * C1144 - C3372 * C1129 + C32045 * C1150 - C3373 * C1141) *
                 C32003) *
                C17094) *
               C578) *
              C472) *
         C31892) /
        (p * q * std::sqrt(p + q));
    d2ee[17] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C32200 * C122 - C3372 * C115 + C32045 * C359 - C3373 * C349) *
                C14631 +
            (C32200 * C136 - C3372 * C123 + C32045 * C379 - C3373 * C360) *
                C14625 +
            (C4364 - C4365 + C4366 - C4367) * C14632 +
            (C4368 - C4369 + C4370 - C4371) * C32003) *
               C31864 +
           ((C3375 - C3376 + C3377 - C3378) * C14631 +
            (C3379 - C3380 + C3381 - C3382) * C14625 + C4748 * C14632 +
            C4749 * C32003) *
               C31872 +
           C17920 * C17094) *
              C31918 * C240 +
          (((C4365 - C4364 + C4367 - C4366) * C14631 +
            (C4369 - C4368 + C4371 - C4370) * C14625 +
            (C4372 - C4373 + C4374 - C4375) * C14632 +
            (C4376 - C4377 + C4378 - C4379) * C32003) *
               C31864 +
           (C4750 * C14631 + C4751 * C14625 + C8693 * C14632 + C8694 * C32003) *
               C31872 +
           (C4752 * C14631 + C4753 * C14625 +
            (C4388 - C4389 + C4390 - C4391) * C14632 +
            (C4392 - C4393 + C4394 - C4395) * C32003) *
               C17094) *
              C31918 * C241 +
          ((C8345 * C14631 + C8346 * C14625 + C9307 * C14632 + C9308 * C32003) *
               C31864 +
           (C8347 * C14631 + C8348 * C14625 +
            (C8338 - C8337 + C8340 - C8339) * C14632 +
            (C8342 - C8341 + C8344 - C8343) * C32003) *
               C31872 +
           ((C4389 - C4388 + C4391 - C4390) * C14631 +
            (C4393 - C4392 + C4395 - C4394) * C14625 +
            (C32200 * C967 - C3372 * C959 + C32045 * C1630 - C3373 * C1625) *
                C14632 +
            (C32200 * C977 - C3372 * C968 + C32045 * C1634 - C3373 * C1631) *
                C32003) *
               C17094) *
              C31918 * C242) *
         C31892) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C32200 * C122 - C3372 * C115 + C32045 * C359 - C3373 * C349) *
                C14631 +
            (C32200 * C136 - C3372 * C123 + C32045 * C379 - C3373 * C360) *
                C14625 +
            (C4364 - C4365 + C4366 - C4367) * C14632 +
            (C4368 - C4369 + C4370 - C4371) * C32003) *
               C31864 +
           ((C3375 - C3376 + C3377 - C3378) * C14631 +
            (C3379 - C3380 + C3381 - C3382) * C14625 + C4748 * C14632 +
            C4749 * C32003) *
               C31872 +
           C17920 * C17094) *
              C31918 * C31904 * C110 +
          (((C3376 - C3375 + C3378 - C3377) * C14631 +
            (C3380 - C3379 + C3382 - C3381) * C14625 + C4750 * C14632 +
            C4751 * C32003) *
               C31864 +
           ((C3384 - C3383 + C3386 - C3385) * C14631 +
            (C3388 - C3387 + C3390 - C3389) * C14625 + C4752 * C14632 +
            C4753 * C32003) *
               C31872 +
           ((C3392 - C3391 + C3394 - C3393) * C14631 +
            (C3396 - C3395 + C3398 - C3397) * C14625 +
            (C3767 - C3768 + C3769 - C3770) * C14632 +
            (C3771 - C3772 + C3773 - C3774) * C32003) *
               C17094) *
              C31918 * C31904 * C111 +
          (C17920 * C31864 +
           (C3417 * C14631 + C3418 * C14625 +
            (C3768 - C3767 + C3770 - C3769) * C14632 +
            (C3772 - C3771 + C3774 - C3773) * C32003) *
               C31872 +
           ((C3400 - C3399 + C3402 - C3401) * C14631 +
            (C3404 - C3403 + C3406 - C3405) * C14625 +
            (C32200 * C262 - C3372 * C248 + C32045 * C694 - C3373 * C685) *
                C14632 +
            (C32200 * C278 - C3372 * C263 + C32045 * C700 - C3373 * C695) *
                C32003) *
               C17094) *
              C31918 * C31904 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C32200 * C122 - C3372 * C115 + C32045 * C359 - C3373 * C349) *
                C14631 +
            (C32200 * C136 - C3372 * C123 + C32045 * C379 - C3373 * C360) *
                C14625 +
            (C4364 - C4365 + C4366 - C4367) * C14632 +
            (C4368 - C4369 + C4370 - C4371) * C32003) *
               C31864 +
           ((C3375 - C3376 + C3377 - C3378) * C14631 +
            (C3379 - C3380 + C3381 - C3382) * C14625 + C4748 * C14632 +
            C4749 * C32003) *
               C31872 +
           C17920 * C17094) *
              C346 +
          (((C3372 * C349 - C32200 * C359 + C3373 * C354 - C32045 * C369) *
                C14631 +
            (C3372 * C360 - C32200 * C379 + C3373 * C370 - C32045 * C384) *
                C14625 +
            (C5158 - C5159 + C5160 - C5161) * C14632 +
            (C5162 - C5163 + C5164 - C5165) * C32003) *
               C31864 +
           ((C3905 - C3906 + C3907 - C3908) * C14631 +
            (C3909 - C3910 + C3911 - C3912) * C14625 +
            (C4948 - C4949 + C4950 - C4951) * C14632 +
            (C4952 - C4953 + C4954 - C4955) * C32003) *
               C31872 +
           ((C3913 - C3914 + C3915 - C3916) * C14631 +
            (C3917 - C3918 + C3919 - C3920) * C14625 +
            (C4956 - C4957 + C4958 - C4959) * C14632 +
            (C4960 - C4961 + C4962 - C4963) * C32003) *
               C17094) *
              C347 +
          (((C32200 * C369 - C3372 * C354 + C32045 * C2034 - C3373 * C2028) *
                C14631 +
            (C32200 * C384 - C3372 * C370 + C32045 * C2046 - C3373 * C2035) *
                C14625 +
            (C32200 * C1130 - C3372 * C1118 + C32045 * C2549 - C3373 * C2546) *
                C14632 +
            (C32200 * C1145 - C3372 * C1131 + C32045 * C2555 - C3373 * C2550) *
                C32003) *
               C31864 +
           ((C32200 * C371 - C3372 * C355 + C32045 * C2036 - C3373 * C2029) *
                C14631 +
            (C32200 * C385 - C3372 * C372 + C32045 * C2047 - C3373 * C2037) *
                C14625 +
            (C32200 * C1134 - C3372 * C1120 + C32045 * C2551 - C3373 * C2547) *
                C14632 +
            (C32200 * C1147 - C3372 * C1135 + C32045 * C2556 - C3373 * C2552) *
                C32003) *
               C31872 +
           ((C32200 * C373 - C3372 * C356 + C32045 * C2038 - C3373 * C2030) *
                C14631 +
            (C32200 * C386 - C3372 * C374 + C32045 * C2048 - C3373 * C2039) *
                C14625 +
            (C32200 * C1138 - C3372 * C1122 + C32045 * C2553 - C3373 * C2548) *
                C14632 +
            (C32200 * C1149 - C3372 * C1139 + C32045 * C2557 - C3373 * C2554) *
                C32003) *
               C17094) *
              C348) *
         C31904 * C31892) /
            (p * q * std::sqrt(p + q));
    d2ee[18] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C32200 * C122 - C3372 * C115 + C32045 * C359 - C3373 * C349) *
                 C14631 +
             (C32200 * C136 - C3372 * C123 + C32045 * C379 - C3373 * C360) *
                 C14625 +
             (C4364 - C4365 + C4366 - C4367) * C14632 +
             (C4368 - C4369 + C4370 - C4371) * C32003) *
                C31864 +
            ((C3375 - C3376 + C3377 - C3378) * C14631 +
             (C3379 - C3380 + C3381 - C3382) * C14625 + C4748 * C14632 +
             C4749 * C32003) *
                C31872 +
            C17920 * C17094) *
               C577 +
           (((C3372 * C349 - C32200 * C359 + C3373 * C354 - C32045 * C369) *
                 C14631 +
             (C3372 * C360 - C32200 * C379 + C3373 * C370 - C32045 * C384) *
                 C14625 +
             (C5158 - C5159 + C5160 - C5161) * C14632 +
             (C5162 - C5163 + C5164 - C5165) * C32003) *
                C31864 +
            ((C3905 - C3906 + C3907 - C3908) * C14631 +
             (C3909 - C3910 + C3911 - C3912) * C14625 +
             (C4948 - C4949 + C4950 - C4951) * C14632 +
             (C4952 - C4953 + C4954 - C4955) * C32003) *
                C31872 +
            ((C3913 - C3914 + C3915 - C3916) * C14631 +
             (C3917 - C3918 + C3919 - C3920) * C14625 +
             (C4956 - C4957 + C4958 - C4959) * C14632 +
             (C4960 - C4961 + C4962 - C4963) * C32003) *
                C17094) *
               C578) *
              C31904 * C473 +
          ((((C3376 - C3375 + C3378 - C3377) * C14631 +
             (C3380 - C3379 + C3382 - C3381) * C14625 + C4750 * C14632 +
             C4751 * C32003) *
                C31864 +
            ((C3384 - C3383 + C3386 - C3385) * C14631 +
             (C3388 - C3387 + C3390 - C3389) * C14625 + C4752 * C14632 +
             C4753 * C32003) *
                C31872 +
            ((C3392 - C3391 + C3394 - C3393) * C14631 +
             (C3396 - C3395 + C3398 - C3397) * C14625 +
             (C3767 - C3768 + C3769 - C3770) * C14632 +
             (C3771 - C3772 + C3773 - C3774) * C32003) *
                C17094) *
               C577 +
           (((C3906 - C3905 + C3908 - C3907) * C14631 +
             (C3910 - C3909 + C3912 - C3911) * C14625 +
             (C4949 - C4948 + C4951 - C4950) * C14632 +
             (C4953 - C4952 + C4955 - C4954) * C32003) *
                C31864 +
            ((C3914 - C3913 + C3916 - C3915) * C14631 +
             (C3918 - C3917 + C3920 - C3919) * C14625 +
             (C4957 - C4956 + C4959 - C4958) * C14632 +
             (C4961 - C4960 + C4963 - C4962) * C32003) *
                C31872 +
            ((C3922 - C3921 + C3924 - C3923) * C14631 +
             (C3926 - C3925 + C3928 - C3927) * C14625 +
             (C32200 * C692 - C3372 * C684 + C32045 * C2199 - C3373 * C2198) *
                 C14632 +
             (C32200 * C699 - C3372 * C693 + C32045 * C2201 - C3373 * C2200) *
                 C32003) *
                C17094) *
               C578) *
              C31904 * C474)) /
        (p * q * std::sqrt(p + q));
    d2ee[19] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C32200 * C122 - C3372 * C115 + C32045 * C359 - C3373 * C349) *
                C14631 +
            (C32200 * C136 - C3372 * C123 + C32045 * C379 - C3373 * C360) *
                C14625 +
            (C4364 - C4365 + C4366 - C4367) * C14632 +
            (C4368 - C4369 + C4370 - C4371) * C32003) *
               C31864 +
           ((C3375 - C3376 + C3377 - C3378) * C14631 +
            (C3379 - C3380 + C3381 - C3382) * C14625 + C4748 * C14632 +
            C4749 * C32003) *
               C31872 +
           C17920 * C17094) *
              C31918 * C31904 * C110 +
          (((C3376 - C3375 + C3378 - C3377) * C14631 +
            (C3380 - C3379 + C3382 - C3381) * C14625 + C4750 * C14632 +
            C4751 * C32003) *
               C31864 +
           ((C3384 - C3383 + C3386 - C3385) * C14631 +
            (C3388 - C3387 + C3390 - C3389) * C14625 + C4752 * C14632 +
            C4753 * C32003) *
               C31872 +
           ((C3392 - C3391 + C3394 - C3393) * C14631 +
            (C3396 - C3395 + C3398 - C3397) * C14625 +
            (C3767 - C3768 + C3769 - C3770) * C14632 +
            (C3771 - C3772 + C3773 - C3774) * C32003) *
               C17094) *
              C31918 * C31904 * C111 +
          (C17920 * C31864 +
           (C3417 * C14631 + C3418 * C14625 +
            (C3768 - C3767 + C3770 - C3769) * C14632 +
            (C3772 - C3771 + C3774 - C3773) * C32003) *
               C31872 +
           ((C3400 - C3399 + C3402 - C3401) * C14631 +
            (C3404 - C3403 + C3406 - C3405) * C14625 +
            (C32200 * C262 - C3372 * C248 + C32045 * C694 - C3373 * C685) *
                C14632 +
            (C32200 * C278 - C3372 * C263 + C32045 * C700 - C3373 * C695) *
                C32003) *
               C17094) *
              C31918 * C31904 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C32200 * C122 - C3372 * C115 + C32045 * C359 - C3373 * C349) *
                C14631 +
            (C32200 * C136 - C3372 * C123 + C32045 * C379 - C3373 * C360) *
                C14625 +
            (C4364 - C4365 + C4366 - C4367) * C14632 +
            (C4368 - C4369 + C4370 - C4371) * C32003) *
               C31864 +
           ((C3375 - C3376 + C3377 - C3378) * C14631 +
            (C3379 - C3380 + C3381 - C3382) * C14625 + C4748 * C14632 +
            C4749 * C32003) *
               C31872 +
           C17920 * C17094) *
              C31918 * C240 +
          (((C4365 - C4364 + C4367 - C4366) * C14631 +
            (C4369 - C4368 + C4371 - C4370) * C14625 +
            (C4372 - C4373 + C4374 - C4375) * C14632 +
            (C4376 - C4377 + C4378 - C4379) * C32003) *
               C31864 +
           (C4750 * C14631 + C4751 * C14625 + C8693 * C14632 + C8694 * C32003) *
               C31872 +
           (C4752 * C14631 + C4753 * C14625 +
            (C4388 - C4389 + C4390 - C4391) * C14632 +
            (C4392 - C4393 + C4394 - C4395) * C32003) *
               C17094) *
              C31918 * C241 +
          ((C8345 * C14631 + C8346 * C14625 + C9307 * C14632 + C9308 * C32003) *
               C31864 +
           (C8347 * C14631 + C8348 * C14625 +
            (C8338 - C8337 + C8340 - C8339) * C14632 +
            (C8342 - C8341 + C8344 - C8343) * C32003) *
               C31872 +
           ((C4389 - C4388 + C4391 - C4390) * C14631 +
            (C4393 - C4392 + C4395 - C4394) * C14625 +
            (C32200 * C967 - C3372 * C959 + C32045 * C1630 - C3373 * C1625) *
                C14632 +
            (C32200 * C977 - C3372 * C968 + C32045 * C1634 - C3373 * C1631) *
                C32003) *
               C17094) *
              C31918 * C242) *
         C31892) /
            (p * q * std::sqrt(p + q));
    d2ee[20] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31958 * C122 - C113 * C115) * C14631 +
             (C31958 * C136 - C113 * C123) * C14625 + (C982 - C983) * C14632 +
             (C984 - C985) * C32003) *
                C32271 +
            ((C144 - C145) * C14631 + (C146 - C147) * C14625 + C1302 * C14632 +
             C1303 * C32003) *
                C32264 +
            C14646 * C32251 + C14647 * C32234) *
               C31918 * C471 +
           (((C983 - C982) * C14631 + (C985 - C984) * C14625 +
             (C987 - C986) * C14632 + (C989 - C988) * C32003) *
                C32271 +
            (C1304 * C14631 + C1305 * C14625 + C1306 * C14632 +
             C1307 * C32003) *
                C32264 +
            (C1308 * C14631 + C1309 * C14625 + C1310 * C14632 +
             C1311 * C32003) *
                C32251 +
            (C3007 * C14631 + C3008 * C14625 + (C833 - C834) * C14632 +
             (C835 - C836) * C32003) *
                C32234) *
               C31918 * C472) *
              C473 +
          ((((C145 - C144) * C14631 + (C147 - C146) * C14625 + C1304 * C14632 +
             C1305 * C32003) *
                C32271 +
            ((C149 - C148) * C14631 + (C151 - C150) * C14625 + C1308 * C14632 +
             C1309 * C32003) *
                C32264 +
            ((C153 - C152) * C14631 + (C155 - C154) * C14625 + C3007 * C14632 +
             C3008 * C32003) *
                C32251 +
            ((C157 - C156) * C14631 + (C159 - C158) * C14625 +
             (C492 - C493) * C14632 + (C494 - C495) * C32003) *
                C32234) *
               C31918 * C471 +
           ((C1302 * C14631 + C1303 * C14625 + C990 * C14632 + C991 * C32003) *
                C32271 +
            (C827 * C14631 + C828 * C14625 + C840 * C14632 + C841 * C32003) *
                C32264 +
            (C2671 * C14631 + C2672 * C14625 + (C834 - C833) * C14632 +
             (C836 - C835) * C32003) *
                C32251 +
            ((C493 - C492) * C14631 + (C495 - C494) * C14625 +
             (C31958 * C272 - C113 * C253) * C14632 +
             (C31958 * C283 - C113 * C273) * C32003) *
                C32234) *
               C31918 * C472) *
              C474)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31958 * C122 - C113 * C115) * C15337 +
             (C31958 * C136 - C113 * C123) * C32272 + (C982 - C983) * C15338 +
             (C984 - C985) * C32268 + C1004 * C15339 + C1005 * C32258 +
             C6097 * C15340 + C6098 * C32240) *
                C15335 +
            ((C144 - C145) * C15337 + (C146 - C147) * C32272 + C1302 * C15338 +
             C1303 * C32268 + C990 * C15339 + C991 * C32258 + C7533 * C15340 +
             C7534 * C32240) *
                C31869) *
               C31918 * C471 +
           (((C983 - C982) * C15337 + (C985 - C984) * C32272 +
             (C987 - C986) * C15338 + (C989 - C988) * C32268 +
             (C992 - C993) * C15339 + (C994 - C995) * C32258 +
             (C6100 - C6099) * C15340 + (C6102 - C6101) * C32240) *
                C15335 +
            (C1304 * C15337 + C1305 * C32272 + C1306 * C15338 + C1307 * C32268 +
             C7763 * C15339 + C7764 * C32258 + (C6269 - C6270) * C15340 +
             (C6271 - C6272) * C32240) *
                C31869) *
               C31918 * C472) *
              C473 +
          ((((C145 - C144) * C15337 + (C147 - C146) * C32272 + C1304 * C15338 +
             C1305 * C32268 + C1306 * C15339 + C1307 * C32258 + C7763 * C15340 +
             C7764 * C32240) *
                C15335 +
            ((C149 - C148) * C15337 + (C151 - C150) * C32272 + C1308 * C15338 +
             C1309 * C32268 + C1310 * C15339 + C1311 * C32258 +
             (C1000 - C1001) * C15340 + (C1002 - C1003) * C32240) *
                C31869) *
               C31918 * C471 +
           ((C1302 * C15337 + C1303 * C32272 + C990 * C15338 + C991 * C32268 +
             C7533 * C15339 + C7534 * C32258 + (C6270 - C6269) * C15340 +
             (C6272 - C6271) * C32240) *
                C15335 +
            (C827 * C15337 + C828 * C32272 + C840 * C15338 + C841 * C32268 +
             (C1001 - C1000) * C15339 + (C1003 - C1002) * C32258 +
             (C31958 * C973 - C113 * C962) * C15340 +
             (C31958 * C980 - C113 * C974) * C32240) *
                C31869) *
               C31918 * C472) *
              C474)) /
            (p * q * std::sqrt(p + q));
    d2ee[21] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31958 * C122 - C113 * C115) * C14631 +
             (C31958 * C136 - C113 * C123) * C14625 + (C982 - C983) * C14632 +
             (C984 - C985) * C32003) *
                C32271 +
            ((C144 - C145) * C14631 + (C146 - C147) * C14625 + C1302 * C14632 +
             C1303 * C32003) *
                C32264 +
            C14646 * C32251 + C14647 * C32234) *
               C577 +
           (((C113 * C349 - C31958 * C359) * C14631 +
             (C113 * C360 - C31958 * C379) * C14625 + (C1636 - C1637) * C14632 +
             (C1638 - C1639) * C32003) *
                C32271 +
            ((C584 - C585) * C14631 + (C586 - C587) * C14625 +
             (C1462 - C1463) * C14632 + (C1464 - C1465) * C32003) *
                C32264 +
            ((C588 - C589) * C14631 + (C590 - C591) * C14625 +
             (C1470 - C1471) * C14632 + (C1472 - C1473) * C32003) *
                C32251 +
            ((C592 - C593) * C14631 + (C594 - C595) * C14625 +
             (C3139 - C3140) * C14632 + (C3141 - C3142) * C32003) *
                C32234) *
               C578) *
              C471 +
          ((((C983 - C982) * C14631 + (C985 - C984) * C14625 +
             (C987 - C986) * C14632 + (C989 - C988) * C32003) *
                C32271 +
            (C1304 * C14631 + C1305 * C14625 + C1306 * C14632 +
             C1307 * C32003) *
                C32264 +
            (C1308 * C14631 + C1309 * C14625 + C1310 * C14632 +
             C1311 * C32003) *
                C32251 +
            (C3007 * C14631 + C3008 * C14625 + (C833 - C834) * C14632 +
             (C835 - C836) * C32003) *
                C32234) *
               C577 +
           (((C1637 - C1636) * C14631 + (C1639 - C1638) * C14625 +
             (C1641 - C1640) * C14632 + (C1643 - C1642) * C32003) *
                C32271 +
            ((C1463 - C1462) * C14631 + (C1465 - C1464) * C14625 +
             (C1467 - C1466) * C14632 + (C1469 - C1468) * C32003) *
                C32264 +
            ((C1471 - C1470) * C14631 + (C1473 - C1472) * C14625 +
             (C1475 - C1474) * C14632 + (C1477 - C1476) * C32003) *
                C32251 +
            ((C3140 - C3139) * C14631 + (C3142 - C3141) * C14625 +
             (C31958 * C1458 - C113 * C1457) * C14632 +
             (C31958 * C1460 - C113 * C1459) * C32003) *
                C32234) *
               C578) *
              C472) *
         C31892) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31958 * C122 - C113 * C115) * C15337 +
             (C31958 * C136 - C113 * C123) * C32272 + (C982 - C983) * C15338 +
             (C984 - C985) * C32268 + C1004 * C15339 + C1005 * C32258 +
             C6097 * C15340 + C6098 * C32240) *
                C15335 +
            ((C144 - C145) * C15337 + (C146 - C147) * C32272 + C1302 * C15338 +
             C1303 * C32268 + C990 * C15339 + C991 * C32258 + C7533 * C15340 +
             C7534 * C32240) *
                C31869) *
               C577 +
           (((C113 * C349 - C31958 * C359) * C15337 +
             (C113 * C360 - C31958 * C379) * C32272 + (C1636 - C1637) * C15338 +
             (C1638 - C1639) * C32268 + (C1640 - C1641) * C15339 +
             (C1642 - C1643) * C32258 + (C6445 - C6446) * C15340 +
             (C6447 - C6448) * C32240) *
                C15335 +
            ((C584 - C585) * C15337 + (C586 - C587) * C32272 +
             (C1462 - C1463) * C15338 + (C1464 - C1465) * C32268 +
             (C1466 - C1467) * C15339 + (C1468 - C1469) * C32258 +
             (C7895 - C7896) * C15340 + (C7897 - C7898) * C32240) *
                C31869) *
               C578) *
              C471 +
          ((((C983 - C982) * C15337 + (C985 - C984) * C32272 +
             (C987 - C986) * C15338 + (C989 - C988) * C32268 +
             (C992 - C993) * C15339 + (C994 - C995) * C32258 +
             (C6100 - C6099) * C15340 + (C6102 - C6101) * C32240) *
                C15335 +
            (C1304 * C15337 + C1305 * C32272 + C1306 * C15338 + C1307 * C32268 +
             C7763 * C15339 + C7764 * C32258 + (C6269 - C6270) * C15340 +
             (C6271 - C6272) * C32240) *
                C31869) *
               C577 +
           (((C1637 - C1636) * C15337 + (C1639 - C1638) * C32272 +
             (C1641 - C1640) * C15338 + (C1643 - C1642) * C32268 +
             (C6446 - C6445) * C15339 + (C6448 - C6447) * C32258 +
             (C6450 - C6449) * C15340 + (C6452 - C6451) * C32240) *
                C15335 +
            ((C1463 - C1462) * C15337 + (C1465 - C1464) * C32272 +
             (C1467 - C1466) * C15338 + (C1469 - C1468) * C32268 +
             (C7896 - C7895) * C15339 + (C7898 - C7897) * C32258 +
             (C31958 * C6355 - C113 * C6354) * C15340 +
             (C31958 * C6357 - C113 * C6356) * C32240) *
                C31869) *
               C578) *
              C472) *
         C31892) /
            (p * q * std::sqrt(p + q));
    d2ee[22] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31958 * C122 - C113 * C115) * C14631 +
            (C31958 * C136 - C113 * C123) * C14625 + (C982 - C983) * C14632 +
            (C984 - C985) * C32003) *
               C32271 +
           ((C144 - C145) * C14631 + (C146 - C147) * C14625 + C1302 * C14632 +
            C1303 * C32003) *
               C32264 +
           C14646 * C32251 + C14647 * C32234) *
              C31918 * C240 +
          (((C983 - C982) * C14631 + (C985 - C984) * C14625 +
            (C987 - C986) * C14632 + (C989 - C988) * C32003) *
               C32271 +
           (C1304 * C14631 + C1305 * C14625 + C1306 * C14632 + C1307 * C32003) *
               C32264 +
           (C1308 * C14631 + C1309 * C14625 + C1310 * C14632 + C1311 * C32003) *
               C32251 +
           (C3007 * C14631 + C3008 * C14625 + (C833 - C834) * C14632 +
            (C835 - C836) * C32003) *
               C32234) *
              C31918 * C241 +
          ((C1004 * C14631 + C1005 * C14625 + C6097 * C14632 + C6098 * C32003) *
               C32271 +
           (C990 * C14631 + C991 * C14625 + C7533 * C14632 + C7534 * C32003) *
               C32264 +
           (C840 * C14631 + C841 * C14625 + (C1001 - C1000) * C14632 +
            (C1003 - C1002) * C32003) *
               C32251 +
           ((C834 - C833) * C14631 + (C836 - C835) * C14625 +
            (C31958 * C1298 - C113 * C1297) * C14632 +
            (C31958 * C1300 - C113 * C1299) * C32003) *
               C32234) *
              C31918 * C242) *
         C31892) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31958 * C122 - C113 * C115) * C14631 +
            (C31958 * C136 - C113 * C123) * C14625 + (C982 - C983) * C14632 +
            (C984 - C985) * C32003) *
               C32271 +
           ((C144 - C145) * C14631 + (C146 - C147) * C14625 + C1302 * C14632 +
            C1303 * C32003) *
               C32264 +
           C14646 * C32251 + C14647 * C32234) *
              C31918 * C31904 * C110 +
          (((C145 - C144) * C14631 + (C147 - C146) * C14625 + C1304 * C14632 +
            C1305 * C32003) *
               C32271 +
           ((C149 - C148) * C14631 + (C151 - C150) * C14625 + C1308 * C14632 +
            C1309 * C32003) *
               C32264 +
           ((C153 - C152) * C14631 + (C155 - C154) * C14625 + C3007 * C14632 +
            C3008 * C32003) *
               C32251 +
           ((C157 - C156) * C14631 + (C159 - C158) * C14625 +
            (C492 - C493) * C14632 + (C494 - C495) * C32003) *
               C32234) *
              C31918 * C31904 * C111 +
          (C14646 * C32271 + C14647 * C32264 +
           (C168 * C14631 + C169 * C14625 + (C493 - C492) * C14632 +
            (C495 - C494) * C32003) *
               C32251 +
           ((C161 - C160) * C14631 + (C163 - C162) * C14625 +
            (C31958 * C476 - C113 * C475) * C14632 +
            (C31958 * C478 - C113 * C477) * C32003) *
               C32234) *
              C31918 * C31904 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31958 * C122 - C113 * C115) * C14631 +
            (C31958 * C136 - C113 * C123) * C14625 + (C982 - C983) * C14632 +
            (C984 - C985) * C32003) *
               C32271 +
           ((C144 - C145) * C14631 + (C146 - C147) * C14625 + C1302 * C14632 +
            C1303 * C32003) *
               C32264 +
           C14646 * C32251 + C14647 * C32234) *
              C346 +
          (((C113 * C349 - C31958 * C359) * C14631 +
            (C113 * C360 - C31958 * C379) * C14625 + (C1636 - C1637) * C14632 +
            (C1638 - C1639) * C32003) *
               C32271 +
           ((C584 - C585) * C14631 + (C586 - C587) * C14625 +
            (C1462 - C1463) * C14632 + (C1464 - C1465) * C32003) *
               C32264 +
           ((C588 - C589) * C14631 + (C590 - C591) * C14625 +
            (C1470 - C1471) * C14632 + (C1472 - C1473) * C32003) *
               C32251 +
           ((C592 - C593) * C14631 + (C594 - C595) * C14625 +
            (C3139 - C3140) * C14632 + (C3141 - C3142) * C32003) *
               C32234) *
              C347 +
          (((C31958 * C369 - C113 * C354) * C14631 +
            (C31958 * C384 - C113 * C370) * C14625 +
            (C31958 * C1130 - C113 * C1118) * C14632 +
            (C31958 * C1145 - C113 * C1131) * C32003) *
               C32271 +
           ((C31958 * C371 - C113 * C355) * C14631 +
            (C31958 * C385 - C113 * C372) * C14625 +
            (C31958 * C1134 - C113 * C1120) * C14632 +
            (C31958 * C1147 - C113 * C1135) * C32003) *
               C32264 +
           ((C31958 * C373 - C113 * C356) * C14631 +
            (C31958 * C386 - C113 * C374) * C14625 +
            (C31958 * C1138 - C113 * C1122) * C14632 +
            (C31958 * C1149 - C113 * C1139) * C32003) *
               C32251 +
           ((C31958 * C375 - C113 * C357) * C14631 +
            (C31958 * C387 - C113 * C376) * C14625 +
            (C31958 * C2199 - C113 * C2198) * C14632 +
            (C31958 * C2201 - C113 * C2200) * C32003) *
               C32234) *
              C348) *
         C31904 * C31892) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31958 * C122 - C113 * C115) * C15337 +
            (C31958 * C136 - C113 * C123) * C32272 + (C982 - C983) * C15338 +
            (C984 - C985) * C32268 + C1004 * C15339 + C1005 * C32258 +
            C6097 * C15340 + C6098 * C32240) *
               C15335 +
           ((C144 - C145) * C15337 + (C146 - C147) * C32272 + C1302 * C15338 +
            C1303 * C32268 + C990 * C15339 + C991 * C32258 + C7533 * C15340 +
            C7534 * C32240) *
               C31869) *
              C31918 * C31904 * C110 +
          (((C145 - C144) * C15337 + (C147 - C146) * C32272 + C1304 * C15338 +
            C1305 * C32268 + C1306 * C15339 + C1307 * C32258 + C7763 * C15340 +
            C7764 * C32240) *
               C15335 +
           ((C149 - C148) * C15337 + (C151 - C150) * C32272 + C1308 * C15338 +
            C1309 * C32268 + C1310 * C15339 + C1311 * C32258 +
            (C1000 - C1001) * C15340 + (C1002 - C1003) * C32240) *
               C31869) *
              C31918 * C31904 * C111 +
          ((C164 * C15337 + C165 * C32272 + C827 * C15338 + C828 * C32268 +
            C840 * C15339 + C841 * C32258 + (C1001 - C1000) * C15340 +
            (C1003 - C1002) * C32240) *
               C15335 +
           (C166 * C15337 + C167 * C32272 + C2671 * C15338 + C2672 * C32268 +
            (C834 - C833) * C15339 + (C836 - C835) * C32258 +
            (C31958 * C1298 - C113 * C1297) * C15340 +
            (C31958 * C1300 - C113 * C1299) * C32240) *
               C31869) *
              C31918 * C31904 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31958 * C122 - C113 * C115) * C15337 +
            (C31958 * C136 - C113 * C123) * C32272 + (C982 - C983) * C15338 +
            (C984 - C985) * C32268 + C1004 * C15339 + C1005 * C32258 +
            C6097 * C15340 + C6098 * C32240) *
               C15335 +
           ((C144 - C145) * C15337 + (C146 - C147) * C32272 + C1302 * C15338 +
            C1303 * C32268 + C990 * C15339 + C991 * C32258 + C7533 * C15340 +
            C7534 * C32240) *
               C31869) *
              C31918 * C240 +
          (((C983 - C982) * C15337 + (C985 - C984) * C32272 +
            (C987 - C986) * C15338 + (C989 - C988) * C32268 +
            (C992 - C993) * C15339 + (C994 - C995) * C32258 +
            (C6100 - C6099) * C15340 + (C6102 - C6101) * C32240) *
               C15335 +
           (C1304 * C15337 + C1305 * C32272 + C1306 * C15338 + C1307 * C32268 +
            C7763 * C15339 + C7764 * C32258 + (C6269 - C6270) * C15340 +
            (C6271 - C6272) * C32240) *
               C31869) *
              C31918 * C241 +
          ((C1004 * C15337 + C1005 * C32272 + C6097 * C15338 + C6098 * C32268 +
            C6107 * C15339 + C6108 * C32258 + (C6104 - C6103) * C15340 +
            (C6106 - C6105) * C32240) *
               C15335 +
           (C990 * C15337 + C991 * C32272 + C7533 * C15338 + C7534 * C32268 +
            (C6270 - C6269) * C15339 + (C6272 - C6271) * C32258 +
            (C31958 * C6265 - C113 * C6264) * C15340 +
            (C31958 * C6267 - C113 * C6266) * C32240) *
               C31869) *
              C31918 * C242) *
         C31892) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31958 * C122 - C113 * C115) * C15337 +
            (C31958 * C136 - C113 * C123) * C32272 + (C982 - C983) * C15338 +
            (C984 - C985) * C32268 + C1004 * C15339 + C1005 * C32258 +
            C6097 * C15340 + C6098 * C32240) *
               C15335 +
           ((C144 - C145) * C15337 + (C146 - C147) * C32272 + C1302 * C15338 +
            C1303 * C32268 + C990 * C15339 + C991 * C32258 + C7533 * C15340 +
            C7534 * C32240) *
               C31869) *
              C346 +
          (((C113 * C349 - C31958 * C359) * C15337 +
            (C113 * C360 - C31958 * C379) * C32272 + (C1636 - C1637) * C15338 +
            (C1638 - C1639) * C32268 + (C1640 - C1641) * C15339 +
            (C1642 - C1643) * C32258 + (C6445 - C6446) * C15340 +
            (C6447 - C6448) * C32240) *
               C15335 +
           ((C584 - C585) * C15337 + (C586 - C587) * C32272 +
            (C1462 - C1463) * C15338 + (C1464 - C1465) * C32268 +
            (C1466 - C1467) * C15339 + (C1468 - C1469) * C32258 +
            (C7895 - C7896) * C15340 + (C7897 - C7898) * C32240) *
               C31869) *
              C347 +
          (((C31958 * C369 - C113 * C354) * C15337 +
            (C31958 * C384 - C113 * C370) * C32272 +
            (C31958 * C1130 - C113 * C1118) * C15338 +
            (C31958 * C1145 - C113 * C1131) * C32268 +
            (C31958 * C1132 - C113 * C1119) * C15339 +
            (C31958 * C1146 - C113 * C1133) * C32258 +
            (C31958 * C6175 - C113 * C6171) * C15340 +
            (C31958 * C6180 - C113 * C6176) * C32240) *
               C15335 +
           ((C31958 * C371 - C113 * C355) * C15337 +
            (C31958 * C385 - C113 * C372) * C32272 +
            (C31958 * C1134 - C113 * C1120) * C15338 +
            (C31958 * C1147 - C113 * C1135) * C32268 +
            (C31958 * C1136 - C113 * C1121) * C15339 +
            (C31958 * C1148 - C113 * C1137) * C32258 +
            (C31958 * C6987 - C113 * C6986) * C15340 +
            (C31958 * C6989 - C113 * C6988) * C32240) *
               C31869) *
              C348) *
         C31904 * C31892) /
            (p * q * std::sqrt(p + q));
    d2ee[23] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31958 * C122 - C113 * C115) * C14631 +
             (C31958 * C136 - C113 * C123) * C14625 + (C982 - C983) * C14632 +
             (C984 - C985) * C32003) *
                C32271 +
            ((C144 - C145) * C14631 + (C146 - C147) * C14625 + C1302 * C14632 +
             C1303 * C32003) *
                C32264 +
            C14646 * C32251 + C14647 * C32234) *
               C577 +
           (((C113 * C349 - C31958 * C359) * C14631 +
             (C113 * C360 - C31958 * C379) * C14625 + (C1636 - C1637) * C14632 +
             (C1638 - C1639) * C32003) *
                C32271 +
            ((C584 - C585) * C14631 + (C586 - C587) * C14625 +
             (C1462 - C1463) * C14632 + (C1464 - C1465) * C32003) *
                C32264 +
            ((C588 - C589) * C14631 + (C590 - C591) * C14625 +
             (C1470 - C1471) * C14632 + (C1472 - C1473) * C32003) *
                C32251 +
            ((C592 - C593) * C14631 + (C594 - C595) * C14625 +
             (C3139 - C3140) * C14632 + (C3141 - C3142) * C32003) *
                C32234) *
               C578) *
              C31904 * C473 +
          ((((C145 - C144) * C14631 + (C147 - C146) * C14625 + C1304 * C14632 +
             C1305 * C32003) *
                C32271 +
            ((C149 - C148) * C14631 + (C151 - C150) * C14625 + C1308 * C14632 +
             C1309 * C32003) *
                C32264 +
            ((C153 - C152) * C14631 + (C155 - C154) * C14625 + C3007 * C14632 +
             C3008 * C32003) *
                C32251 +
            ((C157 - C156) * C14631 + (C159 - C158) * C14625 +
             (C492 - C493) * C14632 + (C494 - C495) * C32003) *
                C32234) *
               C577 +
           (((C585 - C584) * C14631 + (C587 - C586) * C14625 +
             (C1463 - C1462) * C14632 + (C1465 - C1464) * C32003) *
                C32271 +
            ((C589 - C588) * C14631 + (C591 - C590) * C14625 +
             (C1471 - C1470) * C14632 + (C1473 - C1472) * C32003) *
                C32264 +
            ((C593 - C592) * C14631 + (C595 - C594) * C14625 +
             (C3140 - C3139) * C14632 + (C3142 - C3141) * C32003) *
                C32251 +
            ((C597 - C596) * C14631 + (C599 - C598) * C14625 +
             (C31958 * C694 - C113 * C685) * C14632 +
             (C31958 * C700 - C113 * C695) * C32003) *
                C32234) *
               C578) *
              C31904 * C474)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31958 * C122 - C113 * C115) * C15337 +
             (C31958 * C136 - C113 * C123) * C32272 + (C982 - C983) * C15338 +
             (C984 - C985) * C32268 + C1004 * C15339 + C1005 * C32258 +
             C6097 * C15340 + C6098 * C32240) *
                C15335 +
            ((C144 - C145) * C15337 + (C146 - C147) * C32272 + C1302 * C15338 +
             C1303 * C32268 + C990 * C15339 + C991 * C32258 + C7533 * C15340 +
             C7534 * C32240) *
                C31869) *
               C577 +
           (((C113 * C349 - C31958 * C359) * C15337 +
             (C113 * C360 - C31958 * C379) * C32272 + (C1636 - C1637) * C15338 +
             (C1638 - C1639) * C32268 + (C1640 - C1641) * C15339 +
             (C1642 - C1643) * C32258 + (C6445 - C6446) * C15340 +
             (C6447 - C6448) * C32240) *
                C15335 +
            ((C584 - C585) * C15337 + (C586 - C587) * C32272 +
             (C1462 - C1463) * C15338 + (C1464 - C1465) * C32268 +
             (C1466 - C1467) * C15339 + (C1468 - C1469) * C32258 +
             (C7895 - C7896) * C15340 + (C7897 - C7898) * C32240) *
                C31869) *
               C578) *
              C31904 * C473 +
          ((((C145 - C144) * C15337 + (C147 - C146) * C32272 + C1304 * C15338 +
             C1305 * C32268 + C1306 * C15339 + C1307 * C32258 + C7763 * C15340 +
             C7764 * C32240) *
                C15335 +
            ((C149 - C148) * C15337 + (C151 - C150) * C32272 + C1308 * C15338 +
             C1309 * C32268 + C1310 * C15339 + C1311 * C32258 +
             (C1000 - C1001) * C15340 + (C1002 - C1003) * C32240) *
                C31869) *
               C577 +
           (((C585 - C584) * C15337 + (C587 - C586) * C32272 +
             (C1463 - C1462) * C15338 + (C1465 - C1464) * C32268 +
             (C1467 - C1466) * C15339 + (C1469 - C1468) * C32258 +
             (C7896 - C7895) * C15340 + (C7898 - C7897) * C32240) *
                C15335 +
            ((C589 - C588) * C15337 + (C591 - C590) * C32272 +
             (C1471 - C1470) * C15338 + (C1473 - C1472) * C32268 +
             (C1475 - C1474) * C15339 + (C1477 - C1476) * C32258 +
             (C31958 * C1630 - C113 * C1625) * C15340 +
             (C31958 * C1634 - C113 * C1631) * C32240) *
                C31869) *
               C578) *
              C31904 * C474)) /
            (p * q * std::sqrt(p + q));
    d2ee[24] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C31958 * C122 - C113 * C115) * C14631 +
            (C31958 * C136 - C113 * C123) * C14625 + (C982 - C983) * C14632 +
            (C984 - C985) * C32003) *
               C32271 +
           ((C144 - C145) * C14631 + (C146 - C147) * C14625 + C1302 * C14632 +
            C1303 * C32003) *
               C32264 +
           C14646 * C32251 + C14647 * C32234) *
              C31918 * C31904 * C110 +
          (((C145 - C144) * C14631 + (C147 - C146) * C14625 + C1304 * C14632 +
            C1305 * C32003) *
               C32271 +
           ((C149 - C148) * C14631 + (C151 - C150) * C14625 + C1308 * C14632 +
            C1309 * C32003) *
               C32264 +
           ((C153 - C152) * C14631 + (C155 - C154) * C14625 + C3007 * C14632 +
            C3008 * C32003) *
               C32251 +
           ((C157 - C156) * C14631 + (C159 - C158) * C14625 +
            (C492 - C493) * C14632 + (C494 - C495) * C32003) *
               C32234) *
              C31918 * C31904 * C111 +
          (C14646 * C32271 + C14647 * C32264 +
           (C168 * C14631 + C169 * C14625 + (C493 - C492) * C14632 +
            (C495 - C494) * C32003) *
               C32251 +
           ((C161 - C160) * C14631 + (C163 - C162) * C14625 +
            (C31958 * C476 - C113 * C475) * C14632 +
            (C31958 * C478 - C113 * C477) * C32003) *
               C32234) *
              C31918 * C31904 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C31958 * C122 - C113 * C115) * C14631 +
            (C31958 * C136 - C113 * C123) * C14625 + (C982 - C983) * C14632 +
            (C984 - C985) * C32003) *
               C32271 +
           ((C144 - C145) * C14631 + (C146 - C147) * C14625 + C1302 * C14632 +
            C1303 * C32003) *
               C32264 +
           C14646 * C32251 + C14647 * C32234) *
              C31918 * C240 +
          (((C983 - C982) * C14631 + (C985 - C984) * C14625 +
            (C987 - C986) * C14632 + (C989 - C988) * C32003) *
               C32271 +
           (C1304 * C14631 + C1305 * C14625 + C1306 * C14632 + C1307 * C32003) *
               C32264 +
           (C1308 * C14631 + C1309 * C14625 + C1310 * C14632 + C1311 * C32003) *
               C32251 +
           (C3007 * C14631 + C3008 * C14625 + (C833 - C834) * C14632 +
            (C835 - C836) * C32003) *
               C32234) *
              C31918 * C241 +
          ((C1004 * C14631 + C1005 * C14625 + C6097 * C14632 + C6098 * C32003) *
               C32271 +
           (C990 * C14631 + C991 * C14625 + C7533 * C14632 + C7534 * C32003) *
               C32264 +
           (C840 * C14631 + C841 * C14625 + (C1001 - C1000) * C14632 +
            (C1003 - C1002) * C32003) *
               C32251 +
           ((C834 - C833) * C14631 + (C836 - C835) * C14625 +
            (C31958 * C1298 - C113 * C1297) * C14632 +
            (C31958 * C1300 - C113 * C1299) * C32003) *
               C32234) *
              C31918 * C242) *
         C31892) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C31958 * C122 - C113 * C115) * C15337 +
            (C31958 * C136 - C113 * C123) * C32272 + (C982 - C983) * C15338 +
            (C984 - C985) * C32268 + C1004 * C15339 + C1005 * C32258 +
            C6097 * C15340 + C6098 * C32240) *
               C15335 +
           ((C144 - C145) * C15337 + (C146 - C147) * C32272 + C1302 * C15338 +
            C1303 * C32268 + C990 * C15339 + C991 * C32258 + C7533 * C15340 +
            C7534 * C32240) *
               C31869) *
              C31918 * C31904 * C110 +
          (((C145 - C144) * C15337 + (C147 - C146) * C32272 + C1304 * C15338 +
            C1305 * C32268 + C1306 * C15339 + C1307 * C32258 + C7763 * C15340 +
            C7764 * C32240) *
               C15335 +
           ((C149 - C148) * C15337 + (C151 - C150) * C32272 + C1308 * C15338 +
            C1309 * C32268 + C1310 * C15339 + C1311 * C32258 +
            (C1000 - C1001) * C15340 + (C1002 - C1003) * C32240) *
               C31869) *
              C31918 * C31904 * C111 +
          ((C164 * C15337 + C165 * C32272 + C827 * C15338 + C828 * C32268 +
            C840 * C15339 + C841 * C32258 + (C1001 - C1000) * C15340 +
            (C1003 - C1002) * C32240) *
               C15335 +
           (C166 * C15337 + C167 * C32272 + C2671 * C15338 + C2672 * C32268 +
            (C834 - C833) * C15339 + (C836 - C835) * C32258 +
            (C31958 * C1298 - C113 * C1297) * C15340 +
            (C31958 * C1300 - C113 * C1299) * C32240) *
               C31869) *
              C31918 * C31904 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C31958 * C122 - C113 * C115) * C15337 +
            (C31958 * C136 - C113 * C123) * C32272 + (C982 - C983) * C15338 +
            (C984 - C985) * C32268 + C1004 * C15339 + C1005 * C32258 +
            C6097 * C15340 + C6098 * C32240) *
               C15335 +
           ((C144 - C145) * C15337 + (C146 - C147) * C32272 + C1302 * C15338 +
            C1303 * C32268 + C990 * C15339 + C991 * C32258 + C7533 * C15340 +
            C7534 * C32240) *
               C31869) *
              C31918 * C240 +
          (((C983 - C982) * C15337 + (C985 - C984) * C32272 +
            (C987 - C986) * C15338 + (C989 - C988) * C32268 +
            (C992 - C993) * C15339 + (C994 - C995) * C32258 +
            (C6100 - C6099) * C15340 + (C6102 - C6101) * C32240) *
               C15335 +
           (C1304 * C15337 + C1305 * C32272 + C1306 * C15338 + C1307 * C32268 +
            C7763 * C15339 + C7764 * C32258 + (C6269 - C6270) * C15340 +
            (C6271 - C6272) * C32240) *
               C31869) *
              C31918 * C241 +
          ((C1004 * C15337 + C1005 * C32272 + C6097 * C15338 + C6098 * C32268 +
            C6107 * C15339 + C6108 * C32258 + (C6104 - C6103) * C15340 +
            (C6106 - C6105) * C32240) *
               C15335 +
           (C990 * C15337 + C991 * C32272 + C7533 * C15338 + C7534 * C32268 +
            (C6270 - C6269) * C15339 + (C6272 - C6271) * C32258 +
            (C31958 * C6265 - C113 * C6264) * C15340 +
            (C31958 * C6267 - C113 * C6266) * C32240) *
               C31869) *
              C31918 * C242) *
         C31892) /
            (p * q * std::sqrt(p + q));
    d2ee[25] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C19912 * C122 - C19914 * C115 + C32045 * C359 - C19915 * C349) *
                 C30923 +
             (C19912 * C136 - C19914 * C123 + C32045 * C379 - C19915 * C360) *
                 C31999 +
             (C20909 - C20910 + C20911 - C20912) * C30915 +
             (C20913 - C20914 + C20915 - C20916) * C32006 + C20951 * C30929 +
             C20952 * C17091) *
                C32180 +
            ((C19917 - C19918 + C19919 - C19920) * C30923 +
             (C19921 - C19922 + C19923 - C19924) * C31999 + C21305 * C30915 +
             C21306 * C32006 + C20949 * C30929 + C20950 * C17091) *
                C31869) *
               C31918 * C471 +
           (((C20910 - C20909 + C20912 - C20911) * C30923 +
             (C20914 - C20913 + C20916 - C20915) * C31999 +
             (C20918 - C20917 + C20920 - C20919) * C30915 +
             (C20922 - C20921 + C20924 - C20923) * C32006 +
             (C20929 - C20930 + C20931 - C20932) * C30929 +
             (C20933 - C20934 + C20935 - C20936) * C17091) *
                C32180 +
            (C21307 * C30923 + C21308 * C31999 + C21309 * C30915 +
             C21310 * C32006 + (C20937 - C20938 + C20939 - C20940) * C30929 +
             (C20941 - C20942 + C20943 - C20944) * C17091) *
                C31869) *
               C31918 * C472) *
              C473 +
          ((((C19918 - C19917 + C19920 - C19919) * C30923 +
             (C19922 - C19921 + C19924 - C19923) * C31999 + C21307 * C30915 +
             C21308 * C32006 + C21309 * C30929 + C21310 * C17091) *
                C32180 +
            ((C19926 - C19925 + C19928 - C19927) * C30923 +
             (C19930 - C19929 + C19932 - C19931) * C31999 + C23136 * C30915 +
             C23137 * C32006 + (C20755 - C20756 + C20757 - C20758) * C30929 +
             (C20759 - C20760 + C20761 - C20762) * C17091) *
                C31869) *
               C31918 * C471 +
           ((C21305 * C30923 + C21306 * C31999 + C20949 * C30915 +
             C20950 * C32006 + (C20938 - C20937 + C20940 - C20939) * C30929 +
             (C20942 - C20941 + C20944 - C20943) * C17091) *
                C32180 +
            (C22640 * C30923 + C22641 * C31999 +
             (C20756 - C20755 + C20758 - C20757) * C30915 +
             (C20760 - C20759 + C20762 - C20761) * C32006 +
             (C19912 * C967 - C19914 * C959 + C32045 * C1630 - C19915 * C1625) *
                 C30929 +
             (C19912 * C977 - C19914 * C968 + C32045 * C1634 - C19915 * C1631) *
                 C17091) *
                C31869) *
               C31918 * C472) *
              C474)) /
        (p * q * std::sqrt(p + q));
    d2ee[26] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C19912 * C122 - C19914 * C115 + C32045 * C359 - C19915 * C349) *
                 C30923 +
             (C19912 * C136 - C19914 * C123 + C32045 * C379 - C19915 * C360) *
                 C31999 +
             (C20909 - C20910 + C20911 - C20912) * C30915 +
             (C20913 - C20914 + C20915 - C20916) * C32006 + C20951 * C30929 +
             C20952 * C17091) *
                C32180 +
            ((C19917 - C19918 + C19919 - C19920) * C30923 +
             (C19921 - C19922 + C19923 - C19924) * C31999 + C21305 * C30915 +
             C21306 * C32006 + C20949 * C30929 + C20950 * C17091) *
                C31869) *
               C577 +
           (((C19914 * C349 - C19912 * C359 + C19915 * C354 - C32045 * C369) *
                 C30923 +
             (C19914 * C360 - C19912 * C379 + C19915 * C370 - C32045 * C384) *
                 C31999 +
             (C21715 - C21716 + C21717 - C21718) * C30915 +
             (C21719 - C21720 + C21721 - C21722) * C32006 +
             (C21723 - C21724 + C21725 - C21726) * C30929 +
             (C21727 - C21728 + C21729 - C21730) * C17091) *
                C32180 +
            ((C20447 - C20448 + C20449 - C20450) * C30923 +
             (C20451 - C20452 + C20453 - C20454) * C31999 +
             (C21505 - C21506 + C21507 - C21508) * C30915 +
             (C21509 - C21510 + C21511 - C21512) * C32006 +
             (C21513 - C21514 + C21515 - C21516) * C30929 +
             (C21517 - C21518 + C21519 - C21520) * C17091) *
                C31869) *
               C578) *
              C471 +
          ((((C20910 - C20909 + C20912 - C20911) * C30923 +
             (C20914 - C20913 + C20916 - C20915) * C31999 +
             (C20918 - C20917 + C20920 - C20919) * C30915 +
             (C20922 - C20921 + C20924 - C20923) * C32006 +
             (C20929 - C20930 + C20931 - C20932) * C30929 +
             (C20933 - C20934 + C20935 - C20936) * C17091) *
                C32180 +
            (C21307 * C30923 + C21308 * C31999 + C21309 * C30915 +
             C21310 * C32006 + (C20937 - C20938 + C20939 - C20940) * C30929 +
             (C20941 - C20942 + C20943 - C20944) * C17091) *
                C31869) *
               C577 +
           (((C21716 - C21715 + C21718 - C21717) * C30923 +
             (C21720 - C21719 + C21722 - C21721) * C31999 +
             (C21724 - C21723 + C21726 - C21725) * C30915 +
             (C21728 - C21727 + C21730 - C21729) * C32006 +
             (C27231 - C27230 + C27233 - C27232) * C30929 +
             (C27235 - C27234 + C27237 - C27236) * C17091) *
                C32180 +
            ((C21506 - C21505 + C21508 - C21507) * C30923 +
             (C21510 - C21509 + C21512 - C21511) * C31999 +
             (C21514 - C21513 + C21516 - C21515) * C30915 +
             (C21518 - C21517 + C21520 - C21519) * C32006 +
             (C19912 * C1628 - C19914 * C1624 + C32045 * C6987 -
              C19915 * C6986) *
                 C30929 +
             (C19912 * C1633 - C19914 * C1629 + C32045 * C6989 -
              C19915 * C6988) *
                 C17091) *
                C31869) *
               C578) *
              C472) *
         C31892) /
        (p * q * std::sqrt(p + q));
    d2ee[27] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C19912 * C122 - C19914 * C115 + C32045 * C359 - C19915 * C349) *
                C30923 +
            (C19912 * C136 - C19914 * C123 + C32045 * C379 - C19915 * C360) *
                C31999 +
            (C20909 - C20910 + C20911 - C20912) * C30915 +
            (C20913 - C20914 + C20915 - C20916) * C32006 + C20951 * C30929 +
            C20952 * C17091) *
               C32180 +
           ((C19917 - C19918 + C19919 - C19920) * C30923 +
            (C19921 - C19922 + C19923 - C19924) * C31999 + C21305 * C30915 +
            C21306 * C32006 + C20949 * C30929 + C20950 * C17091) *
               C31869) *
              C31918 * C240 +
          (((C20910 - C20909 + C20912 - C20911) * C30923 +
            (C20914 - C20913 + C20916 - C20915) * C31999 +
            (C20918 - C20917 + C20920 - C20919) * C30915 +
            (C20922 - C20921 + C20924 - C20923) * C32006 +
            (C20929 - C20930 + C20931 - C20932) * C30929 +
            (C20933 - C20934 + C20935 - C20936) * C17091) *
               C32180 +
           (C21307 * C30923 + C21308 * C31999 + C21309 * C30915 +
            C21310 * C32006 + (C20937 - C20938 + C20939 - C20940) * C30929 +
            (C20941 - C20942 + C20943 - C20944) * C17091) *
               C31869) *
              C31918 * C241 +
          ((C20951 * C30923 + C20952 * C31999 + C26740 * C30915 +
            C26741 * C32006 + (C26733 - C26732 + C26735 - C26734) * C30929 +
            (C26737 - C26736 + C26739 - C26738) * C17091) *
               C32180 +
           (C20949 * C30923 + C20950 * C31999 +
            (C20938 - C20937 + C20940 - C20939) * C30915 +
            (C20942 - C20941 + C20944 - C20943) * C32006 +
            (C19912 * C971 - C19914 * C961 + C32045 * C6355 - C19915 * C6354) *
                C30929 +
            (C19912 * C979 - C19914 * C972 + C32045 * C6357 - C19915 * C6356) *
                C17091) *
               C31869) *
              C31918 * C242) *
         C31892) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C19912 * C122 - C19914 * C115 + C32045 * C359 - C19915 * C349) *
                C30923 +
            (C19912 * C136 - C19914 * C123 + C32045 * C379 - C19915 * C360) *
                C31999 +
            (C20909 - C20910 + C20911 - C20912) * C30915 +
            (C20913 - C20914 + C20915 - C20916) * C32006 + C20951 * C30929 +
            C20952 * C17091) *
               C32180 +
           ((C19917 - C19918 + C19919 - C19920) * C30923 +
            (C19921 - C19922 + C19923 - C19924) * C31999 + C21305 * C30915 +
            C21306 * C32006 + C20949 * C30929 + C20950 * C17091) *
               C31869) *
              C31918 * C31904 * C110 +
          (((C19918 - C19917 + C19920 - C19919) * C30923 +
            (C19922 - C19921 + C19924 - C19923) * C31999 + C21307 * C30915 +
            C21308 * C32006 + C21309 * C30929 + C21310 * C17091) *
               C32180 +
           ((C19926 - C19925 + C19928 - C19927) * C30923 +
            (C19930 - C19929 + C19932 - C19931) * C31999 + C23136 * C30915 +
            C23137 * C32006 + (C20755 - C20756 + C20757 - C20758) * C30929 +
            (C20759 - C20760 + C20761 - C20762) * C17091) *
               C31869) *
              C31918 * C31904 * C111 +
          ((C19957 * C30923 + C19958 * C31999 + C22640 * C30915 +
            C22641 * C32006 + (C20756 - C20755 + C20758 - C20757) * C30929 +
            (C20760 - C20759 + C20762 - C20761) * C17091) *
               C32180 +
           (C19959 * C30923 + C19960 * C31999 +
            (C20310 - C20309 + C20312 - C20311) * C30915 +
            (C20314 - C20313 + C20316 - C20315) * C32006 +
            (C19912 * C270 - C19914 * C252 + C32045 * C1458 - C19915 * C1457) *
                C30929 +
            (C19912 * C282 - C19914 * C271 + C32045 * C1460 - C19915 * C1459) *
                C17091) *
               C31869) *
              C31918 * C31904 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C19912 * C122 - C19914 * C115 + C32045 * C359 - C19915 * C349) *
                C30923 +
            (C19912 * C136 - C19914 * C123 + C32045 * C379 - C19915 * C360) *
                C31999 +
            (C20909 - C20910 + C20911 - C20912) * C30915 +
            (C20913 - C20914 + C20915 - C20916) * C32006 + C20951 * C30929 +
            C20952 * C17091) *
               C32180 +
           ((C19917 - C19918 + C19919 - C19920) * C30923 +
            (C19921 - C19922 + C19923 - C19924) * C31999 + C21305 * C30915 +
            C21306 * C32006 + C20949 * C30929 + C20950 * C17091) *
               C31869) *
              C346 +
          (((C19914 * C349 - C19912 * C359 + C19915 * C354 - C32045 * C369) *
                C30923 +
            (C19914 * C360 - C19912 * C379 + C19915 * C370 - C32045 * C384) *
                C31999 +
            (C21715 - C21716 + C21717 - C21718) * C30915 +
            (C21719 - C21720 + C21721 - C21722) * C32006 +
            (C21723 - C21724 + C21725 - C21726) * C30929 +
            (C21727 - C21728 + C21729 - C21730) * C17091) *
               C32180 +
           ((C20447 - C20448 + C20449 - C20450) * C30923 +
            (C20451 - C20452 + C20453 - C20454) * C31999 +
            (C21505 - C21506 + C21507 - C21508) * C30915 +
            (C21509 - C21510 + C21511 - C21512) * C32006 +
            (C21513 - C21514 + C21515 - C21516) * C30929 +
            (C21517 - C21518 + C21519 - C21520) * C17091) *
               C31869) *
              C347 +
          (((C19912 * C369 - C19914 * C354 + C32045 * C2034 - C19915 * C2028) *
                C30923 +
            (C19912 * C384 - C19914 * C370 + C32045 * C2046 - C19915 * C2035) *
                C31999 +
            (C19912 * C1130 - C19914 * C1118 + C32045 * C2549 -
             C19915 * C2546) *
                C30915 +
            (C19912 * C1145 - C19914 * C1131 + C32045 * C2555 -
             C19915 * C2550) *
                C32006 +
            (C19912 * C1132 - C19914 * C1119 + C32045 * C6831 -
             C19915 * C6828) *
                C30929 +
            (C19912 * C1146 - C19914 * C1133 + C32045 * C6837 -
             C19915 * C6832) *
                C17091) *
               C32180 +
           ((C19912 * C371 - C19914 * C355 + C32045 * C2036 - C19915 * C2029) *
                C30923 +
            (C19912 * C385 - C19914 * C372 + C32045 * C2047 - C19915 * C2037) *
                C31999 +
            (C19912 * C1134 - C19914 * C1120 + C32045 * C2551 -
             C19915 * C2547) *
                C30915 +
            (C19912 * C1147 - C19914 * C1135 + C32045 * C2556 -
             C19915 * C2552) *
                C32006 +
            (C19912 * C1136 - C19914 * C1121 + C32045 * C7149 -
             C19915 * C7148) *
                C30929 +
            (C19912 * C1148 - C19914 * C1137 + C32045 * C7151 -
             C19915 * C7150) *
                C17091) *
               C31869) *
              C348) *
         C31904 * C31892) /
            (p * q * std::sqrt(p + q));
    d2ee[28] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C19912 * C122 - C19914 * C115 + C32045 * C359 - C19915 * C349) *
                 C30923 +
             (C19912 * C136 - C19914 * C123 + C32045 * C379 - C19915 * C360) *
                 C31999 +
             (C20909 - C20910 + C20911 - C20912) * C30915 +
             (C20913 - C20914 + C20915 - C20916) * C32006 + C20951 * C30929 +
             C20952 * C17091) *
                C32180 +
            ((C19917 - C19918 + C19919 - C19920) * C30923 +
             (C19921 - C19922 + C19923 - C19924) * C31999 + C21305 * C30915 +
             C21306 * C32006 + C20949 * C30929 + C20950 * C17091) *
                C31869) *
               C577 +
           (((C19914 * C349 - C19912 * C359 + C19915 * C354 - C32045 * C369) *
                 C30923 +
             (C19914 * C360 - C19912 * C379 + C19915 * C370 - C32045 * C384) *
                 C31999 +
             (C21715 - C21716 + C21717 - C21718) * C30915 +
             (C21719 - C21720 + C21721 - C21722) * C32006 +
             (C21723 - C21724 + C21725 - C21726) * C30929 +
             (C21727 - C21728 + C21729 - C21730) * C17091) *
                C32180 +
            ((C20447 - C20448 + C20449 - C20450) * C30923 +
             (C20451 - C20452 + C20453 - C20454) * C31999 +
             (C21505 - C21506 + C21507 - C21508) * C30915 +
             (C21509 - C21510 + C21511 - C21512) * C32006 +
             (C21513 - C21514 + C21515 - C21516) * C30929 +
             (C21517 - C21518 + C21519 - C21520) * C17091) *
                C31869) *
               C578) *
              C31904 * C473 +
          ((((C19918 - C19917 + C19920 - C19919) * C30923 +
             (C19922 - C19921 + C19924 - C19923) * C31999 + C21307 * C30915 +
             C21308 * C32006 + C21309 * C30929 + C21310 * C17091) *
                C32180 +
            ((C19926 - C19925 + C19928 - C19927) * C30923 +
             (C19930 - C19929 + C19932 - C19931) * C31999 + C23136 * C30915 +
             C23137 * C32006 + (C20755 - C20756 + C20757 - C20758) * C30929 +
             (C20759 - C20760 + C20761 - C20762) * C17091) *
                C31869) *
               C577 +
           (((C20448 - C20447 + C20450 - C20449) * C30923 +
             (C20452 - C20451 + C20454 - C20453) * C31999 +
             (C21506 - C21505 + C21508 - C21507) * C30915 +
             (C21510 - C21509 + C21512 - C21511) * C32006 +
             (C21514 - C21513 + C21516 - C21515) * C30929 +
             (C21518 - C21517 + C21520 - C21519) * C17091) *
                C32180 +
            ((C20456 - C20455 + C20458 - C20457) * C30923 +
             (C20460 - C20459 + C20462 - C20461) * C31999 +
             (C23333 - C23332 + C23335 - C23334) * C30915 +
             (C23337 - C23336 + C23339 - C23338) * C32006 +
             (C19912 * C1128 - C19914 * C1117 + C32045 * C1140 -
              C19915 * C1123) *
                 C30929 +
             (C19912 * C1144 - C19914 * C1129 + C32045 * C1150 -
              C19915 * C1141) *
                 C17091) *
                C31869) *
               C578) *
              C31904 * C474)) /
        (p * q * std::sqrt(p + q));
    d2ee[29] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19912 * C122 - C19914 * C115 + C32045 * C359 - C19915 * C349) *
                C30923 +
            (C19912 * C136 - C19914 * C123 + C32045 * C379 - C19915 * C360) *
                C31999 +
            (C20909 - C20910 + C20911 - C20912) * C30915 +
            (C20913 - C20914 + C20915 - C20916) * C32006 + C20951 * C30929 +
            C20952 * C17091) *
               C32180 +
           ((C19917 - C19918 + C19919 - C19920) * C30923 +
            (C19921 - C19922 + C19923 - C19924) * C31999 + C21305 * C30915 +
            C21306 * C32006 + C20949 * C30929 + C20950 * C17091) *
               C31869) *
              C31918 * C31904 * C110 +
          (((C19918 - C19917 + C19920 - C19919) * C30923 +
            (C19922 - C19921 + C19924 - C19923) * C31999 + C21307 * C30915 +
            C21308 * C32006 + C21309 * C30929 + C21310 * C17091) *
               C32180 +
           ((C19926 - C19925 + C19928 - C19927) * C30923 +
            (C19930 - C19929 + C19932 - C19931) * C31999 + C23136 * C30915 +
            C23137 * C32006 + (C20755 - C20756 + C20757 - C20758) * C30929 +
            (C20759 - C20760 + C20761 - C20762) * C17091) *
               C31869) *
              C31918 * C31904 * C111 +
          ((C19957 * C30923 + C19958 * C31999 + C22640 * C30915 +
            C22641 * C32006 + (C20756 - C20755 + C20758 - C20757) * C30929 +
            (C20760 - C20759 + C20762 - C20761) * C17091) *
               C32180 +
           (C19959 * C30923 + C19960 * C31999 +
            (C20310 - C20309 + C20312 - C20311) * C30915 +
            (C20314 - C20313 + C20316 - C20315) * C32006 +
            (C19912 * C270 - C19914 * C252 + C32045 * C1458 - C19915 * C1457) *
                C30929 +
            (C19912 * C282 - C19914 * C271 + C32045 * C1460 - C19915 * C1459) *
                C17091) *
               C31869) *
              C31918 * C31904 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19912 * C122 - C19914 * C115 + C32045 * C359 - C19915 * C349) *
                C30923 +
            (C19912 * C136 - C19914 * C123 + C32045 * C379 - C19915 * C360) *
                C31999 +
            (C20909 - C20910 + C20911 - C20912) * C30915 +
            (C20913 - C20914 + C20915 - C20916) * C32006 + C20951 * C30929 +
            C20952 * C17091) *
               C32180 +
           ((C19917 - C19918 + C19919 - C19920) * C30923 +
            (C19921 - C19922 + C19923 - C19924) * C31999 + C21305 * C30915 +
            C21306 * C32006 + C20949 * C30929 + C20950 * C17091) *
               C31869) *
              C31918 * C240 +
          (((C20910 - C20909 + C20912 - C20911) * C30923 +
            (C20914 - C20913 + C20916 - C20915) * C31999 +
            (C20918 - C20917 + C20920 - C20919) * C30915 +
            (C20922 - C20921 + C20924 - C20923) * C32006 +
            (C20929 - C20930 + C20931 - C20932) * C30929 +
            (C20933 - C20934 + C20935 - C20936) * C17091) *
               C32180 +
           (C21307 * C30923 + C21308 * C31999 + C21309 * C30915 +
            C21310 * C32006 + (C20937 - C20938 + C20939 - C20940) * C30929 +
            (C20941 - C20942 + C20943 - C20944) * C17091) *
               C31869) *
              C31918 * C241 +
          ((C20951 * C30923 + C20952 * C31999 + C26740 * C30915 +
            C26741 * C32006 + (C26733 - C26732 + C26735 - C26734) * C30929 +
            (C26737 - C26736 + C26739 - C26738) * C17091) *
               C32180 +
           (C20949 * C30923 + C20950 * C31999 +
            (C20938 - C20937 + C20940 - C20939) * C30915 +
            (C20942 - C20941 + C20944 - C20943) * C32006 +
            (C19912 * C971 - C19914 * C961 + C32045 * C6355 - C19915 * C6354) *
                C30929 +
            (C19912 * C979 - C19914 * C972 + C32045 * C6357 - C19915 * C6356) *
                C17091) *
               C31869) *
              C31918 * C242) *
         C31892) /
            (p * q * std::sqrt(p + q));
    d2ee[30] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C32041 * C122 - C31010 * C115 + C32048 * C359 - C31002 * C349 +
             C23645 * C369 - C31016 * C354) *
                C30923 +
            (C32041 * C136 - C31010 * C123 + C32048 * C379 - C31002 * C360 +
             C23645 * C384 - C31016 * C370) *
                C31999 +
            (C24697 - C24698 + C24699 - C24700 + C24701 - C24702) * C30915 +
            (C24703 - C24704 + C24705 - C24706 + C24707 - C24708) * C32006 +
            C30250 * C30929 + C30251 * C17091) *
               C31859 * C31918 * C471 +
           ((C24698 - C24697 + C24700 - C24699 + C24702 - C24701) * C30923 +
            (C24704 - C24703 + C24706 - C24705 + C24708 - C24707) * C31999 +
            (C24709 - C24710 + C24711 - C24712 + C24713 - C24714) * C30915 +
            (C24715 - C24716 + C24717 - C24718 + C24719 - C24720) * C32006 +
            (C30236 - C30237 + C30238 - C30239 + C30240 - C30241) * C30929 +
            (C30242 - C30243 + C30244 - C30245 + C30246 - C30247) * C17091) *
               C31859 * C31918 * C472) *
              C473 +
          (((C23651 - C23650 + C23653 - C23652 + C23655 - C23654) * C30923 +
            (C23657 - C23656 + C23659 - C23658 + C23661 - C23660) * C31999 +
            C25091 * C30915 + C25092 * C32006 +
            (C24721 - C24722 + C24723 - C24724 + C24725 - C24726) * C30929 +
            (C24727 - C24728 + C24729 - C24730 + C24731 - C24732) * C17091) *
               C31859 * C31918 * C471 +
           (C25089 * C30923 + C25090 * C31999 +
            (C24722 - C24721 + C24724 - C24723 + C24726 - C24725) * C30915 +
            (C24728 - C24727 + C24730 - C24729 + C24732 - C24731) * C32006 +
            (C32041 * C965 - C31010 * C958 + C32048 * C1628 - C31002 * C1624 +
             C23645 * C6987 - C31016 * C6986) *
                C30929 +
            (C32041 * C976 - C31010 * C966 + C32048 * C1633 - C31002 * C1629 +
             C23645 * C6989 - C31016 * C6988) *
                C17091) *
               C31859 * C31918 * C472) *
              C474)) /
        (p * q * std::sqrt(p + q));
    d2ee[31] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C32041 * C122 - C31010 * C115 + C32048 * C359 - C31002 * C349 +
             C23645 * C369 - C31016 * C354) *
                C30923 +
            (C32041 * C136 - C31010 * C123 + C32048 * C379 - C31002 * C360 +
             C23645 * C384 - C31016 * C370) *
                C31999 +
            (C24697 - C24698 + C24699 - C24700 + C24701 - C24702) * C30915 +
            (C24703 - C24704 + C24705 - C24706 + C24707 - C24708) * C32006 +
            C30250 * C30929 + C30251 * C17091) *
               C31859 * C577 +
           ((C31010 * C349 - C32041 * C359 + C31002 * C354 - C32048 * C369 +
             C31016 * C2028 - C23645 * C2034) *
                C30923 +
            (C31010 * C360 - C32041 * C379 + C31002 * C370 - C32048 * C384 +
             C31016 * C2035 - C23645 * C2046) *
                C31999 +
            (C25493 - C25494 + C25495 - C25496 + C25497 - C25498) * C30915 +
            (C25499 - C25500 + C25501 - C25502 + C25503 - C25504) * C32006 +
            (C30800 - C30801 + C30802 - C30803 + C30804 - C30805) * C30929 +
            (C30806 - C30807 + C30808 - C30809 + C30810 - C30811) * C17091) *
               C31859 * C578) *
              C471 +
          (((C24698 - C24697 + C24700 - C24699 + C24702 - C24701) * C30923 +
            (C24704 - C24703 + C24706 - C24705 + C24708 - C24707) * C31999 +
            (C24709 - C24710 + C24711 - C24712 + C24713 - C24714) * C30915 +
            (C24715 - C24716 + C24717 - C24718 + C24719 - C24720) * C32006 +
            (C30236 - C30237 + C30238 - C30239 + C30240 - C30241) * C30929 +
            (C30242 - C30243 + C30244 - C30245 + C30246 - C30247) * C17091) *
               C31859 * C577 +
           ((C25494 - C25493 + C25496 - C25495 + C25498 - C25497) * C30923 +
            (C25500 - C25499 + C25502 - C25501 + C25504 - C25503) * C31999 +
            (C30801 - C30800 + C30803 - C30802 + C30805 - C30804) * C30915 +
            (C30807 - C30806 + C30809 - C30808 + C30811 - C30810) * C32006 +
            (C32041 * C1626 - C31010 * C1623 + C32048 * C6175 - C31002 * C6171 +
             C23645 * C7299 - C31016 * C7298) *
                C30929 +
            (C32041 * C1632 - C31010 * C1627 + C32048 * C6180 - C31002 * C6176 +
             C23645 * C7301 - C31016 * C7300) *
                C17091) *
               C31859 * C578) *
              C472) *
         C31892) /
        (p * q * std::sqrt(p + q));
    d2ee[32] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C32041 * C122 - C31010 * C115 + C32048 * C359 - C31002 * C349 +
            C23645 * C369 - C31016 * C354) *
               C30923 +
           (C32041 * C136 - C31010 * C123 + C32048 * C379 - C31002 * C360 +
            C23645 * C384 - C31016 * C370) *
               C31999 +
           (C24697 - C24698 + C24699 - C24700 + C24701 - C24702) * C30915 +
           (C24703 - C24704 + C24705 - C24706 + C24707 - C24708) * C32006 +
           C30250 * C30929 + C30251 * C17091) *
              C31859 * C31918 * C240 +
          ((C24698 - C24697 + C24700 - C24699 + C24702 - C24701) * C30923 +
           (C24704 - C24703 + C24706 - C24705 + C24708 - C24707) * C31999 +
           (C24709 - C24710 + C24711 - C24712 + C24713 - C24714) * C30915 +
           (C24715 - C24716 + C24717 - C24718 + C24719 - C24720) * C32006 +
           (C30236 - C30237 + C30238 - C30239 + C30240 - C30241) * C30929 +
           (C30242 - C30243 + C30244 - C30245 + C30246 - C30247) * C17091) *
              C31859 * C31918 * C241 +
          (C30250 * C30923 + C30251 * C31999 +
           (C30237 - C30236 + C30239 - C30238 + C30241 - C30240) * C30915 +
           (C30243 - C30242 + C30245 - C30244 + C30247 - C30246) * C32006 +
           (C32041 * C969 - C31010 * C960 + C32048 * C6173 - C31002 * C6170 +
            C23645 * C6177 - C31016 * C6172) *
               C30929 +
           (C32041 * C978 - C31010 * C970 + C32048 * C6179 - C31002 * C6174 +
            C23645 * C6181 - C31016 * C6178) *
               C17091) *
              C31859 * C31918 * C242) *
         C31892) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C32041 * C122 - C31010 * C115 + C32048 * C359 - C31002 * C349 +
            C23645 * C369 - C31016 * C354) *
               C30923 +
           (C32041 * C136 - C31010 * C123 + C32048 * C379 - C31002 * C360 +
            C23645 * C384 - C31016 * C370) *
               C31999 +
           (C24697 - C24698 + C24699 - C24700 + C24701 - C24702) * C30915 +
           (C24703 - C24704 + C24705 - C24706 + C24707 - C24708) * C32006 +
           (C24710 - C24709 + C24712 - C24711 + C24714 - C24713) * C30929 +
           (C24716 - C24715 + C24718 - C24717 + C24720 - C24719) * C17091) *
              C31859 * C31918 * C31904 * C110 +
          ((C23651 - C23650 + C23653 - C23652 + C23655 - C23654) * C30923 +
           (C23657 - C23656 + C23659 - C23658 + C23661 - C23660) * C31999 +
           C25091 * C30915 + C25092 * C32006 +
           (C24721 - C24722 + C24723 - C24724 + C24725 - C24726) * C30929 +
           (C24727 - C24728 + C24729 - C24730 + C24731 - C24732) * C17091) *
              C31859 * C31918 * C31904 * C111 +
          (C23694 * C30923 + C23695 * C31999 +
           (C24078 - C24077 + C24080 - C24079 + C24082 - C24081) * C30915 +
           (C24084 - C24083 + C24086 - C24085 + C24088 - C24087) * C32006 +
           (C32041 * C268 - C31010 * C251 + C32048 * C1128 - C31002 * C1117 +
            C23645 * C1140 - C31016 * C1123) *
               C30929 +
           (C32041 * C281 - C31010 * C269 + C32048 * C1144 - C31002 * C1129 +
            C23645 * C1150 - C31016 * C1141) *
               C17091) *
              C31859 * C31918 * C31904 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((C32041 * C122 - C31010 * C115 + C32048 * C359 - C31002 * C349 +
            C23645 * C369 - C31016 * C354) *
               C30923 +
           (C32041 * C136 - C31010 * C123 + C32048 * C379 - C31002 * C360 +
            C23645 * C384 - C31016 * C370) *
               C31999 +
           (C24697 - C24698 + C24699 - C24700 + C24701 - C24702) * C30915 +
           (C24703 - C24704 + C24705 - C24706 + C24707 - C24708) * C32006 +
           C30250 * C30929 + C30251 * C17091) *
              C31859 * C346 +
          ((C31010 * C349 - C32041 * C359 + C31002 * C354 - C32048 * C369 +
            C31016 * C2028 - C23645 * C2034) *
               C30923 +
           (C31010 * C360 - C32041 * C379 + C31002 * C370 - C32048 * C384 +
            C31016 * C2035 - C23645 * C2046) *
               C31999 +
           (C25493 - C25494 + C25495 - C25496 + C25497 - C25498) * C30915 +
           (C25499 - C25500 + C25501 - C25502 + C25503 - C25504) * C32006 +
           (C31010 * C1115 - C32041 * C1124 + C31002 * C1119 - C32048 * C1132 +
            C31016 * C6828 - C23645 * C6831) *
               C30929 +
           (C31010 * C1125 - C32041 * C1142 + C31002 * C1133 - C32048 * C1146 +
            C31016 * C6832 - C23645 * C6837) *
               C17091) *
              C31859 * C347 +
          ((C32041 * C369 - C31010 * C354 + C32048 * C2034 - C31002 * C2028 +
            C23645 * C2040 - C31016 * C2031) *
               C30923 +
           (C32041 * C384 - C31010 * C370 + C32048 * C2046 - C31002 * C2035 +
            C23645 * C2049 - C31016 * C2041) *
               C31999 +
           (C32041 * C1130 - C31010 * C1118 + C32048 * C2549 - C31002 * C2546 +
            C23645 * C6833 - C31016 * C6829) *
               C30915 +
           (C32041 * C1145 - C31010 * C1131 + C32048 * C2555 - C31002 * C2550 +
            C23645 * C6838 - C31016 * C6834) *
               C32006 +
           (C32041 * C1132 - C31010 * C1119 + C32048 * C6831 - C31002 * C6828 +
            C23645 * C6835 - C31016 * C6830) *
               C30929 +
           (C32041 * C1146 - C31010 * C1133 + C32048 * C6837 - C31002 * C6832 +
            C23645 * C6839 - C31016 * C6836) *
               C17091) *
              C31859 * C348) *
         C31904 * C31892) /
            (p * q * std::sqrt(p + q));
    d2ee[33] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C32041 * C122 - C31010 * C115 + C32048 * C359 - C31002 * C349 +
             C23645 * C369 - C31016 * C354) *
                C30923 +
            (C32041 * C136 - C31010 * C123 + C32048 * C379 - C31002 * C360 +
             C23645 * C384 - C31016 * C370) *
                C31999 +
            (C24697 - C24698 + C24699 - C24700 + C24701 - C24702) * C30915 +
            (C24703 - C24704 + C24705 - C24706 + C24707 - C24708) * C32006 +
            C30250 * C30929 + C30251 * C17091) *
               C31859 * C577 +
           ((C31010 * C349 - C32041 * C359 + C31002 * C354 - C32048 * C369 +
             C31016 * C2028 - C23645 * C2034) *
                C30923 +
            (C31010 * C360 - C32041 * C379 + C31002 * C370 - C32048 * C384 +
             C31016 * C2035 - C23645 * C2046) *
                C31999 +
            (C25493 - C25494 + C25495 - C25496 + C25497 - C25498) * C30915 +
            (C25499 - C25500 + C25501 - C25502 + C25503 - C25504) * C32006 +
            (C31010 * C1115 - C32041 * C1124 + C31002 * C1119 - C32048 * C1132 +
             C31016 * C6828 - C23645 * C6831) *
                C30929 +
            (C31010 * C1125 - C32041 * C1142 + C31002 * C1133 - C32048 * C1146 +
             C31016 * C6832 - C23645 * C6837) *
                C17091) *
               C31859 * C578) *
              C31904 * C473 +
          (((C23651 - C23650 + C23653 - C23652 + C23655 - C23654) * C30923 +
            (C23657 - C23656 + C23659 - C23658 + C23661 - C23660) * C31999 +
            C25091 * C30915 + C25092 * C32006 +
            (C24721 - C24722 + C24723 - C24724 + C24725 - C24726) * C30929 +
            (C24727 - C24728 + C24729 - C24730 + C24731 - C24732) * C17091) *
               C31859 * C577 +
           ((C24236 - C24235 + C24238 - C24237 + C24240 - C24239) * C30923 +
            (C24242 - C24241 + C24244 - C24243 + C24246 - C24245) * C31999 +
            (C25288 - C25287 + C25290 - C25289 + C25292 - C25291) * C30915 +
            (C25294 - C25293 + C25296 - C25295 + C25298 - C25297) * C32006 +
            (C32041 * C1126 - C31010 * C1116 + C32048 * C1136 - C31002 * C1121 +
             C23645 * C7149 - C31016 * C7148) *
                C30929 +
            (C32041 * C1143 - C31010 * C1127 + C32048 * C1148 - C31002 * C1137 +
             C23645 * C7151 - C31016 * C7150) *
                C17091) *
               C31859 * C578) *
              C31904 * C474)) /
        (p * q * std::sqrt(p + q));
    d2ee[34] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((C32041 * C122 - C31010 * C115 + C32048 * C359 - C31002 * C349 +
            C23645 * C369 - C31016 * C354) *
               C30923 +
           (C32041 * C136 - C31010 * C123 + C32048 * C379 - C31002 * C360 +
            C23645 * C384 - C31016 * C370) *
               C31999 +
           (C24697 - C24698 + C24699 - C24700 + C24701 - C24702) * C30915 +
           (C24703 - C24704 + C24705 - C24706 + C24707 - C24708) * C32006 +
           (C24710 - C24709 + C24712 - C24711 + C24714 - C24713) * C30929 +
           (C24716 - C24715 + C24718 - C24717 + C24720 - C24719) * C17091) *
              C31859 * C31918 * C31904 * C110 +
          ((C23651 - C23650 + C23653 - C23652 + C23655 - C23654) * C30923 +
           (C23657 - C23656 + C23659 - C23658 + C23661 - C23660) * C31999 +
           C25091 * C30915 + C25092 * C32006 +
           (C24721 - C24722 + C24723 - C24724 + C24725 - C24726) * C30929 +
           (C24727 - C24728 + C24729 - C24730 + C24731 - C24732) * C17091) *
              C31859 * C31918 * C31904 * C111 +
          (C23694 * C30923 + C23695 * C31999 +
           (C24078 - C24077 + C24080 - C24079 + C24082 - C24081) * C30915 +
           (C24084 - C24083 + C24086 - C24085 + C24088 - C24087) * C32006 +
           (C32041 * C268 - C31010 * C251 + C32048 * C1128 - C31002 * C1117 +
            C23645 * C1140 - C31016 * C1123) *
               C30929 +
           (C32041 * C281 - C31010 * C269 + C32048 * C1144 - C31002 * C1129 +
            C23645 * C1150 - C31016 * C1141) *
               C17091) *
              C31859 * C31918 * C31904 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((C32041 * C122 - C31010 * C115 + C32048 * C359 - C31002 * C349 +
            C23645 * C369 - C31016 * C354) *
               C30923 +
           (C32041 * C136 - C31010 * C123 + C32048 * C379 - C31002 * C360 +
            C23645 * C384 - C31016 * C370) *
               C31999 +
           (C24697 - C24698 + C24699 - C24700 + C24701 - C24702) * C30915 +
           (C24703 - C24704 + C24705 - C24706 + C24707 - C24708) * C32006 +
           C30250 * C30929 + C30251 * C17091) *
              C31859 * C31918 * C240 +
          ((C24698 - C24697 + C24700 - C24699 + C24702 - C24701) * C30923 +
           (C24704 - C24703 + C24706 - C24705 + C24708 - C24707) * C31999 +
           (C24709 - C24710 + C24711 - C24712 + C24713 - C24714) * C30915 +
           (C24715 - C24716 + C24717 - C24718 + C24719 - C24720) * C32006 +
           (C30236 - C30237 + C30238 - C30239 + C30240 - C30241) * C30929 +
           (C30242 - C30243 + C30244 - C30245 + C30246 - C30247) * C17091) *
              C31859 * C31918 * C241 +
          (C30250 * C30923 + C30251 * C31999 +
           (C30237 - C30236 + C30239 - C30238 + C30241 - C30240) * C30915 +
           (C30243 - C30242 + C30245 - C30244 + C30247 - C30246) * C32006 +
           (C32041 * C969 - C31010 * C960 + C32048 * C6173 - C31002 * C6170 +
            C23645 * C6177 - C31016 * C6172) *
               C30929 +
           (C32041 * C978 - C31010 * C970 + C32048 * C6179 - C31002 * C6174 +
            C23645 * C6181 - C31016 * C6178) *
               C17091) *
              C31859 * C31918 * C242) *
         C31892) /
            (p * q * std::sqrt(p + q));
    d2ee[35] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C19912 * C122 - C19914 * C115 + C32045 * C359 - C19915 * C349) *
                C15337 +
            (C19912 * C136 - C19914 * C123 + C32045 * C379 - C19915 * C360) *
                C32272 +
            (C20909 - C20910 + C20911 - C20912) * C15338 +
            (C20913 - C20914 + C20915 - C20916) * C32268 + C20951 * C15339 +
            C20952 * C32258 + C26740 * C15340 + C26741 * C32240) *
               C31859 * C31918 * C471 +
           ((C20910 - C20909 + C20912 - C20911) * C15337 +
            (C20914 - C20913 + C20916 - C20915) * C32272 +
            (C20918 - C20917 + C20920 - C20919) * C15338 +
            (C20922 - C20921 + C20924 - C20923) * C32268 +
            (C20929 - C20930 + C20931 - C20932) * C15339 +
            (C20933 - C20934 + C20935 - C20936) * C32258 +
            (C26732 - C26733 + C26734 - C26735) * C15340 +
            (C26736 - C26737 + C26738 - C26739) * C32240) *
               C31859 * C31918 * C472) *
              C473 +
          (((C19918 - C19917 + C19920 - C19919) * C15337 +
            (C19922 - C19921 + C19924 - C19923) * C32272 + C21307 * C15338 +
            C21308 * C32268 + C21309 * C15339 + C21310 * C32258 +
            (C20937 - C20938 + C20939 - C20940) * C15340 +
            (C20941 - C20942 + C20943 - C20944) * C32240) *
               C31859 * C31918 * C471 +
           (C21305 * C15337 + C21306 * C32272 + C20949 * C15338 +
            C20950 * C32268 + (C20938 - C20937 + C20940 - C20939) * C15339 +
            (C20942 - C20941 + C20944 - C20943) * C32258 +
            (C19912 * C971 - C19914 * C961 + C32045 * C6355 - C19915 * C6354) *
                C15340 +
            (C19912 * C979 - C19914 * C972 + C32045 * C6357 - C19915 * C6356) *
                C32240) *
               C31859 * C31918 * C472) *
              C474)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19912 * C122 - C19914 * C115 + C32045 * C359 - C19915 * C349) *
                 C14631 +
             (C19912 * C136 - C19914 * C123 + C32045 * C379 - C19915 * C360) *
                 C14625 +
             (C20909 - C20910 + C20911 - C20912) * C14632 +
             (C20913 - C20914 + C20915 - C20916) * C32003) *
                C32262 +
            ((C19917 - C19918 + C19919 - C19920) * C14631 +
             (C19921 - C19922 + C19923 - C19924) * C14625 + C21305 * C14632 +
             C21306 * C32003) *
                C32249 +
            C25657 * C32219) *
               C31918 * C471 +
           (((C20910 - C20909 + C20912 - C20911) * C14631 +
             (C20914 - C20913 + C20916 - C20915) * C14625 +
             (C20918 - C20917 + C20920 - C20919) * C14632 +
             (C20922 - C20921 + C20924 - C20923) * C32003) *
                C32262 +
            (C21307 * C14631 + C21308 * C14625 + C21309 * C14632 +
             C21310 * C32003) *
                C32249 +
            (C23136 * C14631 + C23137 * C14625 +
             (C20755 - C20756 + C20757 - C20758) * C14632 +
             (C20759 - C20760 + C20761 - C20762) * C32003) *
                C32219) *
               C31918 * C472) *
              C473 +
          ((((C19918 - C19917 + C19920 - C19919) * C14631 +
             (C19922 - C19921 + C19924 - C19923) * C14625 + C21307 * C14632 +
             C21308 * C32003) *
                C32262 +
            ((C19926 - C19925 + C19928 - C19927) * C14631 +
             (C19930 - C19929 + C19932 - C19931) * C14625 + C23136 * C14632 +
             C23137 * C32003) *
                C32249 +
            ((C19934 - C19933 + C19936 - C19935) * C14631 +
             (C19938 - C19937 + C19940 - C19939) * C14625 +
             (C20309 - C20310 + C20311 - C20312) * C14632 +
             (C20313 - C20314 + C20315 - C20316) * C32003) *
                C32219) *
               C31918 * C471 +
           ((C21305 * C14631 + C21306 * C14625 + C20949 * C14632 +
             C20950 * C32003) *
                C32262 +
            (C22640 * C14631 + C22641 * C14625 +
             (C20756 - C20755 + C20758 - C20757) * C14632 +
             (C20760 - C20759 + C20762 - C20761) * C32003) *
                C32249 +
            ((C20310 - C20309 + C20312 - C20311) * C14631 +
             (C20314 - C20313 + C20316 - C20315) * C14625 +
             (C19912 * C270 - C19914 * C252 + C32045 * C1458 - C19915 * C1457) *
                 C14632 +
             (C19912 * C282 - C19914 * C271 + C32045 * C1460 - C19915 * C1459) *
                 C32003) *
                C32219) *
               C31918 * C472) *
              C474)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C32273 * C122 - C21832 * C115 + C32270 * C359 - C21833 * C349 +
             C32261 * C369 - C21834 * C354 + C32246 * C2034 - C21835 * C2028) *
                C14631 +
            (C32273 * C136 - C21832 * C123 + C32270 * C379 - C21833 * C360 +
             C32261 * C384 - C21834 * C370 + C32246 * C2046 - C21835 * C2035) *
                C14625 +
            (C27434 - C27435 + C27436 - C27437 + C27438 - C27439 + C27440 -
             C27441) *
                C14632 +
            (C27442 - C27443 + C27444 - C27445 + C27446 - C27447 + C27448 -
             C27449) *
                C32003) *
               C31859 * C31918 * C471 +
           ((C27435 - C27434 + C27437 - C27436 + C27439 - C27438 + C27441 -
             C27440) *
                C14631 +
            (C27443 - C27442 + C27445 - C27444 + C27447 - C27446 + C27449 -
             C27448) *
                C14625 +
            (C27450 - C27451 + C27452 - C27453 + C27454 - C27455 + C27456 -
             C27457) *
                C14632 +
            (C27458 - C27459 + C27460 - C27461 + C27462 - C27463 + C27464 -
             C27465) *
                C32003) *
               C31859 * C31918 * C472) *
              C473 +
          (((C21838 - C21837 + C21840 - C21839 + C21842 - C21841 + C21844 -
             C21843) *
                C14631 +
            (C21846 - C21845 + C21848 - C21847 + C21850 - C21849 + C21852 -
             C21851) *
                C14625 +
            (C22195 - C22196 + C22197 - C22198 + C22199 - C22200 + C22201 -
             C22202) *
                C14632 +
            (C22203 - C22204 + C22205 - C22206 + C22207 - C22208 + C22209 -
             C22210) *
                C32003) *
               C31859 * C31918 * C471 +
           ((C22196 - C22195 + C22198 - C22197 + C22200 - C22199 + C22202 -
             C22201) *
                C14631 +
            (C22204 - C22203 + C22206 - C22205 + C22208 - C22207 + C22210 -
             C22209) *
                C14625 +
            (C32273 * C266 - C21832 * C250 + C32270 * C1126 - C21833 * C1116 +
             C32261 * C1136 - C21834 * C1121 + C32246 * C7149 -
             C21835 * C7148) *
                C14632 +
            (C32273 * C280 - C21832 * C267 + C32270 * C1143 - C21833 * C1127 +
             C32261 * C1148 - C21834 * C1137 + C32246 * C7151 -
             C21835 * C7150) *
                C32003) *
               C31859 * C31918 * C472) *
              C474)) /
            (p * q * std::sqrt(p + q));
    d2ee[36] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C19912 * C122 - C19914 * C115 + C32045 * C359 - C19915 * C349) *
                C15337 +
            (C19912 * C136 - C19914 * C123 + C32045 * C379 - C19915 * C360) *
                C32272 +
            (C20909 - C20910 + C20911 - C20912) * C15338 +
            (C20913 - C20914 + C20915 - C20916) * C32268 + C20951 * C15339 +
            C20952 * C32258 + C26740 * C15340 + C26741 * C32240) *
               C31859 * C577 +
           ((C19914 * C349 - C19912 * C359 + C19915 * C354 - C32045 * C369) *
                C15337 +
            (C19914 * C360 - C19912 * C379 + C19915 * C370 - C32045 * C384) *
                C32272 +
            (C21715 - C21716 + C21717 - C21718) * C15338 +
            (C21719 - C21720 + C21721 - C21722) * C32268 +
            (C21723 - C21724 + C21725 - C21726) * C15339 +
            (C21727 - C21728 + C21729 - C21730) * C32258 +
            (C27230 - C27231 + C27232 - C27233) * C15340 +
            (C27234 - C27235 + C27236 - C27237) * C32240) *
               C31859 * C578) *
              C471 +
          (((C20910 - C20909 + C20912 - C20911) * C15337 +
            (C20914 - C20913 + C20916 - C20915) * C32272 +
            (C20918 - C20917 + C20920 - C20919) * C15338 +
            (C20922 - C20921 + C20924 - C20923) * C32268 +
            (C20929 - C20930 + C20931 - C20932) * C15339 +
            (C20933 - C20934 + C20935 - C20936) * C32258 +
            (C26732 - C26733 + C26734 - C26735) * C15340 +
            (C26736 - C26737 + C26738 - C26739) * C32240) *
               C31859 * C577 +
           ((C21716 - C21715 + C21718 - C21717) * C15337 +
            (C21720 - C21719 + C21722 - C21721) * C32272 +
            (C21724 - C21723 + C21726 - C21725) * C15338 +
            (C21728 - C21727 + C21730 - C21729) * C32268 +
            (C27231 - C27230 + C27233 - C27232) * C15339 +
            (C27235 - C27234 + C27237 - C27236) * C32258 +
            (C19912 * C6173 - C19914 * C6170 + C32045 * C6177 -
             C19915 * C6172) *
                C15340 +
            (C19912 * C6179 - C19914 * C6174 + C32045 * C6181 -
             C19915 * C6178) *
                C32240) *
               C31859 * C578) *
              C472) *
         C31892) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19912 * C122 - C19914 * C115 + C32045 * C359 - C19915 * C349) *
                 C14631 +
             (C19912 * C136 - C19914 * C123 + C32045 * C379 - C19915 * C360) *
                 C14625 +
             (C20909 - C20910 + C20911 - C20912) * C14632 +
             (C20913 - C20914 + C20915 - C20916) * C32003) *
                C32262 +
            ((C19917 - C19918 + C19919 - C19920) * C14631 +
             (C19921 - C19922 + C19923 - C19924) * C14625 + C21305 * C14632 +
             C21306 * C32003) *
                C32249 +
            C25657 * C32219) *
               C577 +
           (((C19914 * C349 - C19912 * C359 + C19915 * C354 - C32045 * C369) *
                 C14631 +
             (C19914 * C360 - C19912 * C379 + C19915 * C370 - C32045 * C384) *
                 C14625 +
             (C21715 - C21716 + C21717 - C21718) * C14632 +
             (C21719 - C21720 + C21721 - C21722) * C32003) *
                C32262 +
            ((C20447 - C20448 + C20449 - C20450) * C14631 +
             (C20451 - C20452 + C20453 - C20454) * C14625 +
             (C21505 - C21506 + C21507 - C21508) * C14632 +
             (C21509 - C21510 + C21511 - C21512) * C32003) *
                C32249 +
            ((C20455 - C20456 + C20457 - C20458) * C14631 +
             (C20459 - C20460 + C20461 - C20462) * C14625 +
             (C23332 - C23333 + C23334 - C23335) * C14632 +
             (C23336 - C23337 + C23338 - C23339) * C32003) *
                C32219) *
               C578) *
              C471 +
          ((((C20910 - C20909 + C20912 - C20911) * C14631 +
             (C20914 - C20913 + C20916 - C20915) * C14625 +
             (C20918 - C20917 + C20920 - C20919) * C14632 +
             (C20922 - C20921 + C20924 - C20923) * C32003) *
                C32262 +
            (C21307 * C14631 + C21308 * C14625 + C21309 * C14632 +
             C21310 * C32003) *
                C32249 +
            (C23136 * C14631 + C23137 * C14625 +
             (C20755 - C20756 + C20757 - C20758) * C14632 +
             (C20759 - C20760 + C20761 - C20762) * C32003) *
                C32219) *
               C577 +
           (((C21716 - C21715 + C21718 - C21717) * C14631 +
             (C21720 - C21719 + C21722 - C21721) * C14625 +
             (C21724 - C21723 + C21726 - C21725) * C14632 +
             (C21728 - C21727 + C21730 - C21729) * C32003) *
                C32262 +
            ((C21506 - C21505 + C21508 - C21507) * C14631 +
             (C21510 - C21509 + C21512 - C21511) * C14625 +
             (C21514 - C21513 + C21516 - C21515) * C14632 +
             (C21518 - C21517 + C21520 - C21519) * C32003) *
                C32249 +
            ((C23333 - C23332 + C23335 - C23334) * C14631 +
             (C23337 - C23336 + C23339 - C23338) * C14625 +
             (C19912 * C1128 - C19914 * C1117 + C32045 * C1140 -
              C19915 * C1123) *
                 C14632 +
             (C19912 * C1144 - C19914 * C1129 + C32045 * C1150 -
              C19915 * C1141) *
                 C32003) *
                C32219) *
               C578) *
              C472) *
         C31892) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C32273 * C122 - C21832 * C115 + C32270 * C359 - C21833 * C349 +
             C32261 * C369 - C21834 * C354 + C32246 * C2034 - C21835 * C2028) *
                C14631 +
            (C32273 * C136 - C21832 * C123 + C32270 * C379 - C21833 * C360 +
             C32261 * C384 - C21834 * C370 + C32246 * C2046 - C21835 * C2035) *
                C14625 +
            (C27434 - C27435 + C27436 - C27437 + C27438 - C27439 + C27440 -
             C27441) *
                C14632 +
            (C27442 - C27443 + C27444 - C27445 + C27446 - C27447 + C27448 -
             C27449) *
                C32003) *
               C31859 * C577 +
           ((C21832 * C349 - C32273 * C359 + C21833 * C354 - C32270 * C369 +
             C21834 * C2028 - C32261 * C2034 + C21835 * C2031 -
             C32246 * C2040) *
                C14631 +
            (C21832 * C360 - C32273 * C379 + C21833 * C370 - C32270 * C384 +
             C21834 * C2035 - C32261 * C2046 + C21835 * C2041 -
             C32246 * C2049) *
                C14625 +
            (C27954 - C27955 + C27956 - C27957 + C27958 - C27959 + C27960 -
             C27961) *
                C14632 +
            (C27962 - C27963 + C27964 - C27965 + C27966 - C27967 + C27968 -
             C27969) *
                C32003) *
               C31859 * C578) *
              C471 +
          (((C27435 - C27434 + C27437 - C27436 + C27439 - C27438 + C27441 -
             C27440) *
                C14631 +
            (C27443 - C27442 + C27445 - C27444 + C27447 - C27446 + C27449 -
             C27448) *
                C14625 +
            (C27450 - C27451 + C27452 - C27453 + C27454 - C27455 + C27456 -
             C27457) *
                C14632 +
            (C27458 - C27459 + C27460 - C27461 + C27462 - C27463 + C27464 -
             C27465) *
                C32003) *
               C31859 * C577 +
           ((C27955 - C27954 + C27957 - C27956 + C27959 - C27958 + C27961 -
             C27960) *
                C14631 +
            (C27963 - C27962 + C27965 - C27964 + C27967 - C27966 + C27969 -
             C27968) *
                C14625 +
            (C32273 * C1124 - C21832 * C1115 + C32270 * C1132 - C21833 * C1119 +
             C32261 * C6831 - C21834 * C6828 + C32246 * C6835 -
             C21835 * C6830) *
                C14632 +
            (C32273 * C1142 - C21832 * C1125 + C32270 * C1146 - C21833 * C1133 +
             C32261 * C6837 - C21834 * C6832 + C32246 * C6839 -
             C21835 * C6836) *
                C32003) *
               C31859 * C578) *
              C472) *
         C31892) /
            (p * q * std::sqrt(p + q));
    d2ee[37] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C19912 * C122 - C19914 * C115 + C32045 * C359 -
                 C19915 * C349) *
                    C14631 +
                (C19912 * C136 - C19914 * C123 + C32045 * C379 -
                 C19915 * C360) *
                    C14625 +
                (C20909 - C20910 + C20911 - C20912) * C14632 +
                (C20913 - C20914 + C20915 - C20916) * C32003) *
                   C32262 +
               ((C19917 - C19918 + C19919 - C19920) * C14631 +
                (C19921 - C19922 + C19923 - C19924) * C14625 + C21305 * C14632 +
                C21306 * C32003) *
                   C32249 +
               C25657 * C32219) *
                  C31918 * C31904 * C110 +
              (((C19918 - C19917 + C19920 - C19919) * C14631 +
                (C19922 - C19921 + C19924 - C19923) * C14625 + C21307 * C14632 +
                C21308 * C32003) *
                   C32262 +
               ((C19926 - C19925 + C19928 - C19927) * C14631 +
                (C19930 - C19929 + C19932 - C19931) * C14625 + C23136 * C14632 +
                C23137 * C32003) *
                   C32249 +
               ((C19934 - C19933 + C19936 - C19935) * C14631 +
                (C19938 - C19937 + C19940 - C19939) * C14625 +
                (C20309 - C20310 + C20311 - C20312) * C14632 +
                (C20313 - C20314 + C20315 - C20316) * C32003) *
                   C32219) *
                  C31918 * C31904 * C111 +
              (C25657 * C32262 +
               (C19959 * C14631 + C19960 * C14625 +
                (C20310 - C20309 + C20312 - C20311) * C14632 +
                (C20314 - C20313 + C20316 - C20315) * C32003) *
                   C32249 +
               ((C19942 - C19941 + C19944 - C19943) * C14631 +
                (C19946 - C19945 + C19948 - C19947) * C14625 +
                (C19912 * C262 - C19914 * C248 + C32045 * C694 -
                 C19915 * C685) *
                    C14632 +
                (C19912 * C278 - C19914 * C263 + C32045 * C700 -
                 C19915 * C695) *
                    C32003) *
                   C32219) *
                  C31918 * C31904 * C112) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C19912 * C122 - C19914 * C115 + C32045 * C359 -
                 C19915 * C349) *
                    C14631 +
                (C19912 * C136 - C19914 * C123 + C32045 * C379 -
                 C19915 * C360) *
                    C14625 +
                (C20909 - C20910 + C20911 - C20912) * C14632 +
                (C20913 - C20914 + C20915 - C20916) * C32003) *
                   C32262 +
               ((C19917 - C19918 + C19919 - C19920) * C14631 +
                (C19921 - C19922 + C19923 - C19924) * C14625 + C21305 * C14632 +
                C21306 * C32003) *
                   C32249 +
               C25657 * C32219) *
                  C31918 * C240 +
              (((C20910 - C20909 + C20912 - C20911) * C14631 +
                (C20914 - C20913 + C20916 - C20915) * C14625 +
                (C20918 - C20917 + C20920 - C20919) * C14632 +
                (C20922 - C20921 + C20924 - C20923) * C32003) *
                   C32262 +
               (C21307 * C14631 + C21308 * C14625 + C21309 * C14632 +
                C21310 * C32003) *
                   C32249 +
               (C23136 * C14631 + C23137 * C14625 +
                (C20755 - C20756 + C20757 - C20758) * C14632 +
                (C20759 - C20760 + C20761 - C20762) * C32003) *
                   C32219) *
                  C31918 * C241 +
              ((C20951 * C14631 + C20952 * C14625 +
                (C20930 - C20929 + C20932 - C20931) * C14632 +
                (C20934 - C20933 + C20936 - C20935) * C32003) *
                   C32262 +
               (C20949 * C14631 + C20950 * C14625 +
                (C20938 - C20937 + C20940 - C20939) * C14632 +
                (C20942 - C20941 + C20944 - C20943) * C32003) *
                   C32249 +
               ((C20756 - C20755 + C20758 - C20757) * C14631 +
                (C20760 - C20759 + C20762 - C20761) * C14625 +
                (C19912 * C967 - C19914 * C959 + C32045 * C1630 -
                 C19915 * C1625) *
                    C14632 +
                (C19912 * C977 - C19914 * C968 + C32045 * C1634 -
                 C19915 * C1631) *
                    C32003) *
                   C32219) *
                  C31918 * C242) *
             C31892) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19912 * C122 - C19914 * C115 + C32045 * C359 - C19915 * C349) *
                C14631 +
            (C19912 * C136 - C19914 * C123 + C32045 * C379 - C19915 * C360) *
                C14625 +
            (C20909 - C20910 + C20911 - C20912) * C14632 +
            (C20913 - C20914 + C20915 - C20916) * C32003) *
               C32262 +
           ((C19917 - C19918 + C19919 - C19920) * C14631 +
            (C19921 - C19922 + C19923 - C19924) * C14625 + C21305 * C14632 +
            C21306 * C32003) *
               C32249 +
           C25657 * C32219) *
              C346 +
          (((C19914 * C349 - C19912 * C359 + C19915 * C354 - C32045 * C369) *
                C14631 +
            (C19914 * C360 - C19912 * C379 + C19915 * C370 - C32045 * C384) *
                C14625 +
            (C21715 - C21716 + C21717 - C21718) * C14632 +
            (C21719 - C21720 + C21721 - C21722) * C32003) *
               C32262 +
           ((C20447 - C20448 + C20449 - C20450) * C14631 +
            (C20451 - C20452 + C20453 - C20454) * C14625 +
            (C21505 - C21506 + C21507 - C21508) * C14632 +
            (C21509 - C21510 + C21511 - C21512) * C32003) *
               C32249 +
           ((C20455 - C20456 + C20457 - C20458) * C14631 +
            (C20459 - C20460 + C20461 - C20462) * C14625 +
            (C23332 - C23333 + C23334 - C23335) * C14632 +
            (C23336 - C23337 + C23338 - C23339) * C32003) *
               C32219) *
              C347 +
          (((C19912 * C369 - C19914 * C354 + C32045 * C2034 - C19915 * C2028) *
                C14631 +
            (C19912 * C384 - C19914 * C370 + C32045 * C2046 - C19915 * C2035) *
                C14625 +
            (C19912 * C1130 - C19914 * C1118 + C32045 * C2549 -
             C19915 * C2546) *
                C14632 +
            (C19912 * C1145 - C19914 * C1131 + C32045 * C2555 -
             C19915 * C2550) *
                C32003) *
               C32262 +
           ((C19912 * C371 - C19914 * C355 + C32045 * C2036 - C19915 * C2029) *
                C14631 +
            (C19912 * C385 - C19914 * C372 + C32045 * C2047 - C19915 * C2037) *
                C14625 +
            (C19912 * C1134 - C19914 * C1120 + C32045 * C2551 -
             C19915 * C2547) *
                C14632 +
            (C19912 * C1147 - C19914 * C1135 + C32045 * C2556 -
             C19915 * C2552) *
                C32003) *
               C32249 +
           ((C19912 * C373 - C19914 * C356 + C32045 * C2038 - C19915 * C2030) *
                C14631 +
            (C19912 * C386 - C19914 * C374 + C32045 * C2048 - C19915 * C2039) *
                C14625 +
            (C19912 * C1138 - C19914 * C1122 + C32045 * C2553 -
             C19915 * C2548) *
                C14632 +
            (C19912 * C1149 - C19914 * C1139 + C32045 * C2557 -
             C19915 * C2554) *
                C32003) *
               C32219) *
              C348) *
         C31904 * C31892) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C19912 * C122 - C19914 * C115 + C32045 * C359 - C19915 * C349) *
               C15337 +
           (C19912 * C136 - C19914 * C123 + C32045 * C379 - C19915 * C360) *
               C32272 +
           (C20909 - C20910 + C20911 - C20912) * C15338 +
           (C20913 - C20914 + C20915 - C20916) * C32268 + C20951 * C15339 +
           C20952 * C32258 + (C20930 - C20929 + C20932 - C20931) * C15340 +
           (C20934 - C20933 + C20936 - C20935) * C32240) *
              C31859 * C31918 * C31904 * C110 +
          ((C19918 - C19917 + C19920 - C19919) * C15337 +
           (C19922 - C19921 + C19924 - C19923) * C32272 + C21307 * C15338 +
           C21308 * C32268 + C21309 * C15339 + C21310 * C32258 +
           (C20937 - C20938 + C20939 - C20940) * C15340 +
           (C20941 - C20942 + C20943 - C20944) * C32240) *
              C31859 * C31918 * C31904 * C111 +
          (C19957 * C15337 + C19958 * C32272 + C22640 * C15338 +
           C22641 * C32268 + (C20756 - C20755 + C20758 - C20757) * C15339 +
           (C20760 - C20759 + C20762 - C20761) * C32258 +
           (C19912 * C967 - C19914 * C959 + C32045 * C1630 - C19915 * C1625) *
               C15340 +
           (C19912 * C977 - C19914 * C968 + C32045 * C1634 - C19915 * C1631) *
               C32240) *
              C31859 * C31918 * C31904 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C19912 * C122 - C19914 * C115 + C32045 * C359 - C19915 * C349) *
               C15337 +
           (C19912 * C136 - C19914 * C123 + C32045 * C379 - C19915 * C360) *
               C32272 +
           (C20909 - C20910 + C20911 - C20912) * C15338 +
           (C20913 - C20914 + C20915 - C20916) * C32268 + C20951 * C15339 +
           C20952 * C32258 + C26740 * C15340 + C26741 * C32240) *
              C31859 * C31918 * C240 +
          ((C20910 - C20909 + C20912 - C20911) * C15337 +
           (C20914 - C20913 + C20916 - C20915) * C32272 +
           (C20918 - C20917 + C20920 - C20919) * C15338 +
           (C20922 - C20921 + C20924 - C20923) * C32268 +
           (C20929 - C20930 + C20931 - C20932) * C15339 +
           (C20933 - C20934 + C20935 - C20936) * C32258 +
           (C26732 - C26733 + C26734 - C26735) * C15340 +
           (C26736 - C26737 + C26738 - C26739) * C32240) *
              C31859 * C31918 * C241 +
          (C20951 * C15337 + C20952 * C32272 + C26740 * C15338 +
           C26741 * C32268 + (C26733 - C26732 + C26735 - C26734) * C15339 +
           (C26737 - C26736 + C26739 - C26738) * C32258 +
           (C19912 * C6090 - C19914 * C6088 + C32045 * C6441 - C19915 * C6440) *
               C15340 +
           (C19912 * C6094 - C19914 * C6091 + C32045 * C6443 - C19915 * C6442) *
               C32240) *
              C31859 * C31918 * C242) *
         C31892) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C19912 * C122 - C19914 * C115 + C32045 * C359 - C19915 * C349) *
               C15337 +
           (C19912 * C136 - C19914 * C123 + C32045 * C379 - C19915 * C360) *
               C32272 +
           (C20909 - C20910 + C20911 - C20912) * C15338 +
           (C20913 - C20914 + C20915 - C20916) * C32268 + C20951 * C15339 +
           C20952 * C32258 + C26740 * C15340 + C26741 * C32240) *
              C31859 * C346 +
          ((C19914 * C349 - C19912 * C359 + C19915 * C354 - C32045 * C369) *
               C15337 +
           (C19914 * C360 - C19912 * C379 + C19915 * C370 - C32045 * C384) *
               C32272 +
           (C21715 - C21716 + C21717 - C21718) * C15338 +
           (C21719 - C21720 + C21721 - C21722) * C32268 +
           (C21723 - C21724 + C21725 - C21726) * C15339 +
           (C21727 - C21728 + C21729 - C21730) * C32258 +
           (C19914 * C1623 - C19912 * C1626 + C19915 * C6171 - C32045 * C6175) *
               C15340 +
           (C19914 * C1627 - C19912 * C1632 + C19915 * C6176 - C32045 * C6180) *
               C32240) *
              C31859 * C347 +
          ((C19912 * C369 - C19914 * C354 + C32045 * C2034 - C19915 * C2028) *
               C15337 +
           (C19912 * C384 - C19914 * C370 + C32045 * C2046 - C19915 * C2035) *
               C32272 +
           (C19912 * C1130 - C19914 * C1118 + C32045 * C2549 - C19915 * C2546) *
               C15338 +
           (C19912 * C1145 - C19914 * C1131 + C32045 * C2555 - C19915 * C2550) *
               C32268 +
           (C19912 * C1132 - C19914 * C1119 + C32045 * C6831 - C19915 * C6828) *
               C15339 +
           (C19912 * C1146 - C19914 * C1133 + C32045 * C6837 - C19915 * C6832) *
               C32258 +
           (C19912 * C6175 - C19914 * C6171 + C32045 * C7299 - C19915 * C7298) *
               C15340 +
           (C19912 * C6180 - C19914 * C6176 + C32045 * C7301 - C19915 * C7300) *
               C32240) *
              C31859 * C348) *
         C31904 * C31892) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C32273 * C122 - C21832 * C115 + C32270 * C359 - C21833 * C349 +
            C32261 * C369 - C21834 * C354 + C32246 * C2034 - C21835 * C2028) *
               C14631 +
           (C32273 * C136 - C21832 * C123 + C32270 * C379 - C21833 * C360 +
            C32261 * C384 - C21834 * C370 + C32246 * C2046 - C21835 * C2035) *
               C14625 +
           (C32273 * C254 - C21832 * C244 + C32270 * C686 - C21833 * C681 +
            C32261 * C1130 - C21834 * C1118 + C32246 * C2549 - C21835 * C2546) *
               C14632 +
           (C32273 * C274 - C21832 * C255 + C32270 * C696 - C21833 * C687 +
            C32261 * C1145 - C21834 * C1131 + C32246 * C2555 - C21835 * C2550) *
               C32003) *
              C31859 * C31918 * C31904 * C110 +
          ((C21838 - C21837 + C21840 - C21839 + C21842 - C21841 + C21844 -
            C21843) *
               C14631 +
           (C21846 - C21845 + C21848 - C21847 + C21850 - C21849 + C21852 -
            C21851) *
               C14625 +
           (C22195 - C22196 + C22197 - C22198 + C22199 - C22200 + C22201 -
            C22202) *
               C14632 +
           (C22203 - C22204 + C22205 - C22206 + C22207 - C22208 + C22209 -
            C22210) *
               C32003) *
              C31859 * C31918 * C31904 * C111 +
          ((C21854 - C21853 + C21856 - C21855 + C21858 - C21857 + C21860 -
            C21859) *
               C14631 +
           (C21862 - C21861 + C21864 - C21863 + C21866 - C21865 + C21868 -
            C21867) *
               C14625 +
           (C32273 * C258 - C21832 * C246 + C32270 * C690 - C21833 * C683 +
            C32261 * C1138 - C21834 * C1122 + C32246 * C2553 - C21835 * C2548) *
               C14632 +
           (C32273 * C276 - C21832 * C259 + C32270 * C698 - C21833 * C691 +
            C32261 * C1149 - C21834 * C1139 + C32246 * C2557 - C21835 * C2554) *
               C32003) *
              C31859 * C31918 * C31904 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C32273 * C122 - C21832 * C115 + C32270 * C359 - C21833 * C349 +
            C32261 * C369 - C21834 * C354 + C32246 * C2034 - C21835 * C2028) *
               C14631 +
           (C32273 * C136 - C21832 * C123 + C32270 * C379 - C21833 * C360 +
            C32261 * C384 - C21834 * C370 + C32246 * C2046 - C21835 * C2035) *
               C14625 +
           (C27434 - C27435 + C27436 - C27437 + C27438 - C27439 + C27440 -
            C27441) *
               C14632 +
           (C27442 - C27443 + C27444 - C27445 + C27446 - C27447 + C27448 -
            C27449) *
               C32003) *
              C31859 * C31918 * C240 +
          ((C27435 - C27434 + C27437 - C27436 + C27439 - C27438 + C27441 -
            C27440) *
               C14631 +
           (C27443 - C27442 + C27445 - C27444 + C27447 - C27446 + C27449 -
            C27448) *
               C14625 +
           (C27450 - C27451 + C27452 - C27453 + C27454 - C27455 + C27456 -
            C27457) *
               C14632 +
           (C27458 - C27459 + C27460 - C27461 + C27462 - C27463 + C27464 -
            C27465) *
               C32003) *
              C31859 * C31918 * C241 +
          ((C27451 - C27450 + C27453 - C27452 + C27455 - C27454 + C27457 -
            C27456) *
               C14631 +
           (C27459 - C27458 + C27461 - C27460 + C27463 - C27462 + C27465 -
            C27464) *
               C14625 +
           (C32273 * C963 - C21832 * C957 + C32270 * C1626 - C21833 * C1623 +
            C32261 * C6175 - C21834 * C6171 + C32246 * C7299 - C21835 * C7298) *
               C14632 +
           (C32273 * C975 - C21832 * C964 + C32270 * C1632 - C21833 * C1627 +
            C32261 * C6180 - C21834 * C6176 + C32246 * C7301 - C21835 * C7300) *
               C32003) *
              C31859 * C31918 * C242) *
         C31892) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C32273 * C122 - C21832 * C115 + C32270 * C359 - C21833 * C349 +
            C32261 * C369 - C21834 * C354 + C32246 * C2034 - C21835 * C2028) *
               C14631 +
           (C32273 * C136 - C21832 * C123 + C32270 * C379 - C21833 * C360 +
            C32261 * C384 - C21834 * C370 + C32246 * C2046 - C21835 * C2035) *
               C14625 +
           (C27434 - C27435 + C27436 - C27437 + C27438 - C27439 + C27440 -
            C27441) *
               C14632 +
           (C27442 - C27443 + C27444 - C27445 + C27446 - C27447 + C27448 -
            C27449) *
               C32003) *
              C31859 * C346 +
          ((C21832 * C349 - C32273 * C359 + C21833 * C354 - C32270 * C369 +
            C21834 * C2028 - C32261 * C2034 + C21835 * C2031 - C32246 * C2040) *
               C14631 +
           (C21832 * C360 - C32273 * C379 + C21833 * C370 - C32270 * C384 +
            C21834 * C2035 - C32261 * C2046 + C21835 * C2041 - C32246 * C2049) *
               C14625 +
           (C21832 * C681 - C32273 * C686 + C21833 * C1118 - C32270 * C1130 +
            C21834 * C2546 - C32261 * C2549 + C21835 * C6829 - C32246 * C6833) *
               C14632 +
           (C21832 * C687 - C32273 * C696 + C21833 * C1131 - C32270 * C1145 +
            C21834 * C2550 - C32261 * C2555 + C21835 * C6834 - C32246 * C6838) *
               C32003) *
              C31859 * C347 +
          ((C32273 * C369 - C21832 * C354 + C32270 * C2034 - C21833 * C2028 +
            C32261 * C2040 - C21834 * C2031 + C32246 * C11723 -
            C21835 * C11721) *
               C14631 +
           (C32273 * C384 - C21832 * C370 + C32270 * C2046 - C21833 * C2035 +
            C32261 * C2049 - C21834 * C2041 + C32246 * C11727 -
            C21835 * C11724) *
               C14625 +
           (C32273 * C1130 - C21832 * C1118 + C32270 * C2549 - C21833 * C2546 +
            C32261 * C6833 - C21834 * C6829 + C32246 * C11984 -
            C21835 * C11983) *
               C14632 +
           (C32273 * C1145 - C21832 * C1131 + C32270 * C2555 - C21833 * C2550 +
            C32261 * C6838 - C21834 * C6834 + C32246 * C11986 -
            C21835 * C11985) *
               C32003) *
              C31859 * C348) *
         C31904 * C31892) /
            (p * q * std::sqrt(p + q));
    d2ee[38] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C19912 * C122 - C19914 * C115 + C32045 * C359 - C19915 * C349) *
                C15337 +
            (C19912 * C136 - C19914 * C123 + C32045 * C379 - C19915 * C360) *
                C32272 +
            (C20909 - C20910 + C20911 - C20912) * C15338 +
            (C20913 - C20914 + C20915 - C20916) * C32268 + C20951 * C15339 +
            C20952 * C32258 + C26740 * C15340 + C26741 * C32240) *
               C31859 * C577 +
           ((C19914 * C349 - C19912 * C359 + C19915 * C354 - C32045 * C369) *
                C15337 +
            (C19914 * C360 - C19912 * C379 + C19915 * C370 - C32045 * C384) *
                C32272 +
            (C21715 - C21716 + C21717 - C21718) * C15338 +
            (C21719 - C21720 + C21721 - C21722) * C32268 +
            (C21723 - C21724 + C21725 - C21726) * C15339 +
            (C21727 - C21728 + C21729 - C21730) * C32258 +
            (C19914 * C1623 - C19912 * C1626 + C19915 * C6171 -
             C32045 * C6175) *
                C15340 +
            (C19914 * C1627 - C19912 * C1632 + C19915 * C6176 -
             C32045 * C6180) *
                C32240) *
               C31859 * C578) *
              C31904 * C473 +
          (((C19918 - C19917 + C19920 - C19919) * C15337 +
            (C19922 - C19921 + C19924 - C19923) * C32272 + C21307 * C15338 +
            C21308 * C32268 + C21309 * C15339 + C21310 * C32258 +
            (C20937 - C20938 + C20939 - C20940) * C15340 +
            (C20941 - C20942 + C20943 - C20944) * C32240) *
               C31859 * C577 +
           ((C20448 - C20447 + C20450 - C20449) * C15337 +
            (C20452 - C20451 + C20454 - C20453) * C32272 +
            (C21506 - C21505 + C21508 - C21507) * C15338 +
            (C21510 - C21509 + C21512 - C21511) * C32268 +
            (C21514 - C21513 + C21516 - C21515) * C15339 +
            (C21518 - C21517 + C21520 - C21519) * C32258 +
            (C19912 * C1628 - C19914 * C1624 + C32045 * C6987 -
             C19915 * C6986) *
                C15340 +
            (C19912 * C1633 - C19914 * C1629 + C32045 * C6989 -
             C19915 * C6988) *
                C32240) *
               C31859 * C578) *
              C31904 * C474)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19912 * C122 - C19914 * C115 + C32045 * C359 - C19915 * C349) *
                 C14631 +
             (C19912 * C136 - C19914 * C123 + C32045 * C379 - C19915 * C360) *
                 C14625 +
             (C20909 - C20910 + C20911 - C20912) * C14632 +
             (C20913 - C20914 + C20915 - C20916) * C32003) *
                C32262 +
            ((C19917 - C19918 + C19919 - C19920) * C14631 +
             (C19921 - C19922 + C19923 - C19924) * C14625 + C21305 * C14632 +
             C21306 * C32003) *
                C32249 +
            C25657 * C32219) *
               C577 +
           (((C19914 * C349 - C19912 * C359 + C19915 * C354 - C32045 * C369) *
                 C14631 +
             (C19914 * C360 - C19912 * C379 + C19915 * C370 - C32045 * C384) *
                 C14625 +
             (C21715 - C21716 + C21717 - C21718) * C14632 +
             (C21719 - C21720 + C21721 - C21722) * C32003) *
                C32262 +
            ((C20447 - C20448 + C20449 - C20450) * C14631 +
             (C20451 - C20452 + C20453 - C20454) * C14625 +
             (C21505 - C21506 + C21507 - C21508) * C14632 +
             (C21509 - C21510 + C21511 - C21512) * C32003) *
                C32249 +
            ((C20455 - C20456 + C20457 - C20458) * C14631 +
             (C20459 - C20460 + C20461 - C20462) * C14625 +
             (C23332 - C23333 + C23334 - C23335) * C14632 +
             (C23336 - C23337 + C23338 - C23339) * C32003) *
                C32219) *
               C578) *
              C31904 * C473 +
          ((((C19918 - C19917 + C19920 - C19919) * C14631 +
             (C19922 - C19921 + C19924 - C19923) * C14625 + C21307 * C14632 +
             C21308 * C32003) *
                C32262 +
            ((C19926 - C19925 + C19928 - C19927) * C14631 +
             (C19930 - C19929 + C19932 - C19931) * C14625 + C23136 * C14632 +
             C23137 * C32003) *
                C32249 +
            ((C19934 - C19933 + C19936 - C19935) * C14631 +
             (C19938 - C19937 + C19940 - C19939) * C14625 +
             (C20309 - C20310 + C20311 - C20312) * C14632 +
             (C20313 - C20314 + C20315 - C20316) * C32003) *
                C32219) *
               C577 +
           (((C20448 - C20447 + C20450 - C20449) * C14631 +
             (C20452 - C20451 + C20454 - C20453) * C14625 +
             (C21506 - C21505 + C21508 - C21507) * C14632 +
             (C21510 - C21509 + C21512 - C21511) * C32003) *
                C32262 +
            ((C20456 - C20455 + C20458 - C20457) * C14631 +
             (C20460 - C20459 + C20462 - C20461) * C14625 +
             (C23333 - C23332 + C23335 - C23334) * C14632 +
             (C23337 - C23336 + C23339 - C23338) * C32003) *
                C32249 +
            ((C20464 - C20463 + C20466 - C20465) * C14631 +
             (C20468 - C20467 + C20470 - C20469) * C14625 +
             (C19912 * C692 - C19914 * C684 + C32045 * C2199 - C19915 * C2198) *
                 C14632 +
             (C19912 * C699 - C19914 * C693 + C32045 * C2201 - C19915 * C2200) *
                 C32003) *
                C32219) *
               C578) *
              C31904 * C474)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C32273 * C122 - C21832 * C115 + C32270 * C359 - C21833 * C349 +
             C32261 * C369 - C21834 * C354 + C32246 * C2034 - C21835 * C2028) *
                C14631 +
            (C32273 * C136 - C21832 * C123 + C32270 * C379 - C21833 * C360 +
             C32261 * C384 - C21834 * C370 + C32246 * C2046 - C21835 * C2035) *
                C14625 +
            (C27434 - C27435 + C27436 - C27437 + C27438 - C27439 + C27440 -
             C27441) *
                C14632 +
            (C27442 - C27443 + C27444 - C27445 + C27446 - C27447 + C27448 -
             C27449) *
                C32003) *
               C31859 * C577 +
           ((C21832 * C349 - C32273 * C359 + C21833 * C354 - C32270 * C369 +
             C21834 * C2028 - C32261 * C2034 + C21835 * C2031 -
             C32246 * C2040) *
                C14631 +
            (C21832 * C360 - C32273 * C379 + C21833 * C370 - C32270 * C384 +
             C21834 * C2035 - C32261 * C2046 + C21835 * C2041 -
             C32246 * C2049) *
                C14625 +
            (C21832 * C681 - C32273 * C686 + C21833 * C1118 - C32270 * C1130 +
             C21834 * C2546 - C32261 * C2549 + C21835 * C6829 -
             C32246 * C6833) *
                C14632 +
            (C21832 * C687 - C32273 * C696 + C21833 * C1131 - C32270 * C1145 +
             C21834 * C2550 - C32261 * C2555 + C21835 * C6834 -
             C32246 * C6838) *
                C32003) *
               C31859 * C578) *
              C31904 * C473 +
          (((C21838 - C21837 + C21840 - C21839 + C21842 - C21841 + C21844 -
             C21843) *
                C14631 +
            (C21846 - C21845 + C21848 - C21847 + C21850 - C21849 + C21852 -
             C21851) *
                C14625 +
            (C22195 - C22196 + C22197 - C22198 + C22199 - C22200 + C22201 -
             C22202) *
                C14632 +
            (C22203 - C22204 + C22205 - C22206 + C22207 - C22208 + C22209 -
             C22210) *
                C32003) *
               C31859 * C577 +
           ((C22342 - C22341 + C22344 - C22343 + C22346 - C22345 + C22348 -
             C22347) *
                C14631 +
            (C22350 - C22349 + C22352 - C22351 + C22354 - C22353 + C22356 -
             C22355) *
                C14625 +
            (C32273 * C688 - C21832 * C682 + C32270 * C1134 - C21833 * C1120 +
             C32261 * C2551 - C21834 * C2547 + C32246 * C11812 -
             C21835 * C11811) *
                C14632 +
            (C32273 * C697 - C21832 * C689 + C32270 * C1147 - C21833 * C1135 +
             C32261 * C2556 - C21834 * C2552 + C32246 * C11814 -
             C21835 * C11813) *
                C32003) *
               C31859 * C578) *
              C31904 * C474)) /
            (p * q * std::sqrt(p + q));
    d2ee[39] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C19912 * C122 - C19914 * C115 + C32045 * C359 - C19915 * C349) *
                C14631 +
            (C19912 * C136 - C19914 * C123 + C32045 * C379 - C19915 * C360) *
                C14625 +
            (C20909 - C20910 + C20911 - C20912) * C14632 +
            (C20913 - C20914 + C20915 - C20916) * C32003) *
               C32262 +
           ((C19917 - C19918 + C19919 - C19920) * C14631 +
            (C19921 - C19922 + C19923 - C19924) * C14625 + C21305 * C14632 +
            C21306 * C32003) *
               C32249 +
           C25657 * C32219) *
              C31918 * C240 +
          (((C20910 - C20909 + C20912 - C20911) * C14631 +
            (C20914 - C20913 + C20916 - C20915) * C14625 +
            (C20918 - C20917 + C20920 - C20919) * C14632 +
            (C20922 - C20921 + C20924 - C20923) * C32003) *
               C32262 +
           (C21307 * C14631 + C21308 * C14625 + C21309 * C14632 +
            C21310 * C32003) *
               C32249 +
           (C23136 * C14631 + C23137 * C14625 +
            (C20755 - C20756 + C20757 - C20758) * C14632 +
            (C20759 - C20760 + C20761 - C20762) * C32003) *
               C32219) *
              C31918 * C241 +
          ((C20951 * C14631 + C20952 * C14625 +
            (C20930 - C20929 + C20932 - C20931) * C14632 +
            (C20934 - C20933 + C20936 - C20935) * C32003) *
               C32262 +
           (C20949 * C14631 + C20950 * C14625 +
            (C20938 - C20937 + C20940 - C20939) * C14632 +
            (C20942 - C20941 + C20944 - C20943) * C32003) *
               C32249 +
           ((C20756 - C20755 + C20758 - C20757) * C14631 +
            (C20760 - C20759 + C20762 - C20761) * C14625 +
            (C19912 * C967 - C19914 * C959 + C32045 * C1630 - C19915 * C1625) *
                C14632 +
            (C19912 * C977 - C19914 * C968 + C32045 * C1634 - C19915 * C1631) *
                C32003) *
               C32219) *
              C31918 * C242) *
         C31892) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C19912 * C122 - C19914 * C115 + C32045 * C359 - C19915 * C349) *
                C14631 +
            (C19912 * C136 - C19914 * C123 + C32045 * C379 - C19915 * C360) *
                C14625 +
            (C20909 - C20910 + C20911 - C20912) * C14632 +
            (C20913 - C20914 + C20915 - C20916) * C32003) *
               C32262 +
           ((C19917 - C19918 + C19919 - C19920) * C14631 +
            (C19921 - C19922 + C19923 - C19924) * C14625 + C21305 * C14632 +
            C21306 * C32003) *
               C32249 +
           C25657 * C32219) *
              C31918 * C31904 * C110 +
          (((C19918 - C19917 + C19920 - C19919) * C14631 +
            (C19922 - C19921 + C19924 - C19923) * C14625 + C21307 * C14632 +
            C21308 * C32003) *
               C32262 +
           ((C19926 - C19925 + C19928 - C19927) * C14631 +
            (C19930 - C19929 + C19932 - C19931) * C14625 + C23136 * C14632 +
            C23137 * C32003) *
               C32249 +
           ((C19934 - C19933 + C19936 - C19935) * C14631 +
            (C19938 - C19937 + C19940 - C19939) * C14625 +
            (C20309 - C20310 + C20311 - C20312) * C14632 +
            (C20313 - C20314 + C20315 - C20316) * C32003) *
               C32219) *
              C31918 * C31904 * C111 +
          (C25657 * C32262 +
           (C19959 * C14631 + C19960 * C14625 +
            (C20310 - C20309 + C20312 - C20311) * C14632 +
            (C20314 - C20313 + C20316 - C20315) * C32003) *
               C32249 +
           ((C19942 - C19941 + C19944 - C19943) * C14631 +
            (C19946 - C19945 + C19948 - C19947) * C14625 +
            (C19912 * C262 - C19914 * C248 + C32045 * C694 - C19915 * C685) *
                C14632 +
            (C19912 * C278 - C19914 * C263 + C32045 * C700 - C19915 * C695) *
                C32003) *
               C32219) *
              C31918 * C31904 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C19912 * C122 - C19914 * C115 + C32045 * C359 - C19915 * C349) *
               C15337 +
           (C19912 * C136 - C19914 * C123 + C32045 * C379 - C19915 * C360) *
               C32272 +
           (C20909 - C20910 + C20911 - C20912) * C15338 +
           (C20913 - C20914 + C20915 - C20916) * C32268 + C20951 * C15339 +
           C20952 * C32258 + (C20930 - C20929 + C20932 - C20931) * C15340 +
           (C20934 - C20933 + C20936 - C20935) * C32240) *
              C31859 * C31918 * C31904 * C110 +
          ((C19918 - C19917 + C19920 - C19919) * C15337 +
           (C19922 - C19921 + C19924 - C19923) * C32272 + C21307 * C15338 +
           C21308 * C32268 + C21309 * C15339 + C21310 * C32258 +
           (C20937 - C20938 + C20939 - C20940) * C15340 +
           (C20941 - C20942 + C20943 - C20944) * C32240) *
              C31859 * C31918 * C31904 * C111 +
          (C19957 * C15337 + C19958 * C32272 + C22640 * C15338 +
           C22641 * C32268 + (C20756 - C20755 + C20758 - C20757) * C15339 +
           (C20760 - C20759 + C20762 - C20761) * C32258 +
           (C19912 * C967 - C19914 * C959 + C32045 * C1630 - C19915 * C1625) *
               C15340 +
           (C19912 * C977 - C19914 * C968 + C32045 * C1634 - C19915 * C1631) *
               C32240) *
              C31859 * C31918 * C31904 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C19912 * C122 - C19914 * C115 + C32045 * C359 - C19915 * C349) *
               C15337 +
           (C19912 * C136 - C19914 * C123 + C32045 * C379 - C19915 * C360) *
               C32272 +
           (C20909 - C20910 + C20911 - C20912) * C15338 +
           (C20913 - C20914 + C20915 - C20916) * C32268 + C20951 * C15339 +
           C20952 * C32258 + C26740 * C15340 + C26741 * C32240) *
              C31859 * C31918 * C240 +
          ((C20910 - C20909 + C20912 - C20911) * C15337 +
           (C20914 - C20913 + C20916 - C20915) * C32272 +
           (C20918 - C20917 + C20920 - C20919) * C15338 +
           (C20922 - C20921 + C20924 - C20923) * C32268 +
           (C20929 - C20930 + C20931 - C20932) * C15339 +
           (C20933 - C20934 + C20935 - C20936) * C32258 +
           (C26732 - C26733 + C26734 - C26735) * C15340 +
           (C26736 - C26737 + C26738 - C26739) * C32240) *
              C31859 * C31918 * C241 +
          (C20951 * C15337 + C20952 * C32272 + C26740 * C15338 +
           C26741 * C32268 + (C26733 - C26732 + C26735 - C26734) * C15339 +
           (C26737 - C26736 + C26739 - C26738) * C32258 +
           (C19912 * C6090 - C19914 * C6088 + C32045 * C6441 - C19915 * C6440) *
               C15340 +
           (C19912 * C6094 - C19914 * C6091 + C32045 * C6443 - C19915 * C6442) *
               C32240) *
              C31859 * C31918 * C242) *
         C31892) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C32273 * C122 - C21832 * C115 + C32270 * C359 - C21833 * C349 +
            C32261 * C369 - C21834 * C354 + C32246 * C2034 - C21835 * C2028) *
               C14631 +
           (C32273 * C136 - C21832 * C123 + C32270 * C379 - C21833 * C360 +
            C32261 * C384 - C21834 * C370 + C32246 * C2046 - C21835 * C2035) *
               C14625 +
           (C32273 * C254 - C21832 * C244 + C32270 * C686 - C21833 * C681 +
            C32261 * C1130 - C21834 * C1118 + C32246 * C2549 - C21835 * C2546) *
               C14632 +
           (C32273 * C274 - C21832 * C255 + C32270 * C696 - C21833 * C687 +
            C32261 * C1145 - C21834 * C1131 + C32246 * C2555 - C21835 * C2550) *
               C32003) *
              C31859 * C31918 * C31904 * C110 +
          ((C21838 - C21837 + C21840 - C21839 + C21842 - C21841 + C21844 -
            C21843) *
               C14631 +
           (C21846 - C21845 + C21848 - C21847 + C21850 - C21849 + C21852 -
            C21851) *
               C14625 +
           (C22195 - C22196 + C22197 - C22198 + C22199 - C22200 + C22201 -
            C22202) *
               C14632 +
           (C22203 - C22204 + C22205 - C22206 + C22207 - C22208 + C22209 -
            C22210) *
               C32003) *
              C31859 * C31918 * C31904 * C111 +
          ((C21854 - C21853 + C21856 - C21855 + C21858 - C21857 + C21860 -
            C21859) *
               C14631 +
           (C21862 - C21861 + C21864 - C21863 + C21866 - C21865 + C21868 -
            C21867) *
               C14625 +
           (C32273 * C258 - C21832 * C246 + C32270 * C690 - C21833 * C683 +
            C32261 * C1138 - C21834 * C1122 + C32246 * C2553 - C21835 * C2548) *
               C14632 +
           (C32273 * C276 - C21832 * C259 + C32270 * C698 - C21833 * C691 +
            C32261 * C1149 - C21834 * C1139 + C32246 * C2557 - C21835 * C2554) *
               C32003) *
              C31859 * C31918 * C31904 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C32273 * C122 - C21832 * C115 + C32270 * C359 - C21833 * C349 +
            C32261 * C369 - C21834 * C354 + C32246 * C2034 - C21835 * C2028) *
               C14631 +
           (C32273 * C136 - C21832 * C123 + C32270 * C379 - C21833 * C360 +
            C32261 * C384 - C21834 * C370 + C32246 * C2046 - C21835 * C2035) *
               C14625 +
           (C27434 - C27435 + C27436 - C27437 + C27438 - C27439 + C27440 -
            C27441) *
               C14632 +
           (C27442 - C27443 + C27444 - C27445 + C27446 - C27447 + C27448 -
            C27449) *
               C32003) *
              C31859 * C31918 * C240 +
          ((C27435 - C27434 + C27437 - C27436 + C27439 - C27438 + C27441 -
            C27440) *
               C14631 +
           (C27443 - C27442 + C27445 - C27444 + C27447 - C27446 + C27449 -
            C27448) *
               C14625 +
           (C27450 - C27451 + C27452 - C27453 + C27454 - C27455 + C27456 -
            C27457) *
               C14632 +
           (C27458 - C27459 + C27460 - C27461 + C27462 - C27463 + C27464 -
            C27465) *
               C32003) *
              C31859 * C31918 * C241 +
          ((C27451 - C27450 + C27453 - C27452 + C27455 - C27454 + C27457 -
            C27456) *
               C14631 +
           (C27459 - C27458 + C27461 - C27460 + C27463 - C27462 + C27465 -
            C27464) *
               C14625 +
           (C32273 * C963 - C21832 * C957 + C32270 * C1626 - C21833 * C1623 +
            C32261 * C6175 - C21834 * C6171 + C32246 * C7299 - C21835 * C7298) *
               C14632 +
           (C32273 * C975 - C21832 * C964 + C32270 * C1632 - C21833 * C1627 +
            C32261 * C6180 - C21834 * C6176 + C32246 * C7301 - C21835 * C7300) *
               C32003) *
              C31859 * C31918 * C242) *
         C31892) /
            (p * q * std::sqrt(p + q));
    d2ee[40] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C32041 * C122 - C31010 * C115 + C32048 * C359 - C31002 * C349 +
              C23645 * C369 - C31016 * C354) *
                 C14631 +
             (C32041 * C136 - C31010 * C123 + C32048 * C379 - C31002 * C360 +
              C23645 * C384 - C31016 * C370) *
                 C14625 +
             (C24697 - C24698 + C24699 - C24700 + C24701 - C24702) * C14632 +
             (C24703 - C24704 + C24705 - C24706 + C24707 - C24708) * C32003) *
                C32180 +
            ((C23650 - C23651 + C23652 - C23653 + C23654 - C23655) * C14631 +
             (C23656 - C23657 + C23658 - C23659 + C23660 - C23661) * C14625 +
             C25089 * C14632 + C25090 * C32003) *
                C31869) *
               C31918 * C471 +
           (((C24698 - C24697 + C24700 - C24699 + C24702 - C24701) * C14631 +
             (C24704 - C24703 + C24706 - C24705 + C24708 - C24707) * C14625 +
             (C24709 - C24710 + C24711 - C24712 + C24713 - C24714) * C14632 +
             (C24715 - C24716 + C24717 - C24718 + C24719 - C24720) * C32003) *
                C32180 +
            (C25091 * C14631 + C25092 * C14625 +
             (C24721 - C24722 + C24723 - C24724 + C24725 - C24726) * C14632 +
             (C24727 - C24728 + C24729 - C24730 + C24731 - C24732) * C32003) *
                C31869) *
               C31918 * C472) *
              C473 +
          ((((C23651 - C23650 + C23653 - C23652 + C23655 - C23654) * C14631 +
             (C23657 - C23656 + C23659 - C23658 + C23661 - C23660) * C14625 +
             C25091 * C14632 + C25092 * C32003) *
                C32180 +
            ((C23663 - C23662 + C23665 - C23664 + C23667 - C23666) * C14631 +
             (C23669 - C23668 + C23671 - C23670 + C23673 - C23672) * C14625 +
             (C24077 - C24078 + C24079 - C24080 + C24081 - C24082) * C14632 +
             (C24083 - C24084 + C24085 - C24086 + C24087 - C24088) * C32003) *
                C31869) *
               C31918 * C471 +
           ((C25089 * C14631 + C25090 * C14625 +
             (C24722 - C24721 + C24724 - C24723 + C24726 - C24725) * C14632 +
             (C24728 - C24727 + C24730 - C24729 + C24732 - C24731) * C32003) *
                C32180 +
            ((C24078 - C24077 + C24080 - C24079 + C24082 - C24081) * C14631 +
             (C24084 - C24083 + C24086 - C24085 + C24088 - C24087) * C14625 +
             (C32041 * C268 - C31010 * C251 + C32048 * C1128 - C31002 * C1117 +
              C23645 * C1140 - C31016 * C1123) *
                 C14632 +
             (C32041 * C281 - C31010 * C269 + C32048 * C1144 - C31002 * C1129 +
              C23645 * C1150 - C31016 * C1141) *
                 C32003) *
                C31869) *
               C31918 * C472) *
              C474)) /
        (p * q * std::sqrt(p + q));
    d2ee[41] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C32041 * C122 - C31010 * C115 + C32048 * C359 - C31002 * C349 +
              C23645 * C369 - C31016 * C354) *
                 C14631 +
             (C32041 * C136 - C31010 * C123 + C32048 * C379 - C31002 * C360 +
              C23645 * C384 - C31016 * C370) *
                 C14625 +
             (C24697 - C24698 + C24699 - C24700 + C24701 - C24702) * C14632 +
             (C24703 - C24704 + C24705 - C24706 + C24707 - C24708) * C32003) *
                C32180 +
            ((C23650 - C23651 + C23652 - C23653 + C23654 - C23655) * C14631 +
             (C23656 - C23657 + C23658 - C23659 + C23660 - C23661) * C14625 +
             C25089 * C14632 + C25090 * C32003) *
                C31869) *
               C577 +
           (((C31010 * C349 - C32041 * C359 + C31002 * C354 - C32048 * C369 +
              C31016 * C2028 - C23645 * C2034) *
                 C14631 +
             (C31010 * C360 - C32041 * C379 + C31002 * C370 - C32048 * C384 +
              C31016 * C2035 - C23645 * C2046) *
                 C14625 +
             (C25493 - C25494 + C25495 - C25496 + C25497 - C25498) * C14632 +
             (C25499 - C25500 + C25501 - C25502 + C25503 - C25504) * C32003) *
                C32180 +
            ((C24235 - C24236 + C24237 - C24238 + C24239 - C24240) * C14631 +
             (C24241 - C24242 + C24243 - C24244 + C24245 - C24246) * C14625 +
             (C25287 - C25288 + C25289 - C25290 + C25291 - C25292) * C14632 +
             (C25293 - C25294 + C25295 - C25296 + C25297 - C25298) * C32003) *
                C31869) *
               C578) *
              C471 +
          ((((C24698 - C24697 + C24700 - C24699 + C24702 - C24701) * C14631 +
             (C24704 - C24703 + C24706 - C24705 + C24708 - C24707) * C14625 +
             (C24709 - C24710 + C24711 - C24712 + C24713 - C24714) * C14632 +
             (C24715 - C24716 + C24717 - C24718 + C24719 - C24720) * C32003) *
                C32180 +
            (C25091 * C14631 + C25092 * C14625 +
             (C24721 - C24722 + C24723 - C24724 + C24725 - C24726) * C14632 +
             (C24727 - C24728 + C24729 - C24730 + C24731 - C24732) * C32003) *
                C31869) *
               C577 +
           (((C25494 - C25493 + C25496 - C25495 + C25498 - C25497) * C14631 +
             (C25500 - C25499 + C25502 - C25501 + C25504 - C25503) * C14625 +
             (C32041 * C1124 - C31010 * C1115 + C32048 * C1132 -
              C31002 * C1119 + C23645 * C6831 - C31016 * C6828) *
                 C14632 +
             (C32041 * C1142 - C31010 * C1125 + C32048 * C1146 -
              C31002 * C1133 + C23645 * C6837 - C31016 * C6832) *
                 C32003) *
                C32180 +
            ((C25288 - C25287 + C25290 - C25289 + C25292 - C25291) * C14631 +
             (C25294 - C25293 + C25296 - C25295 + C25298 - C25297) * C14625 +
             (C32041 * C1126 - C31010 * C1116 + C32048 * C1136 -
              C31002 * C1121 + C23645 * C7149 - C31016 * C7148) *
                 C14632 +
             (C32041 * C1143 - C31010 * C1127 + C32048 * C1148 -
              C31002 * C1137 + C23645 * C7151 - C31016 * C7150) *
                 C32003) *
                C31869) *
               C578) *
              C472) *
         C31892) /
        (p * q * std::sqrt(p + q));
    d2ee[42] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C32041 * C122 - C31010 * C115 + C32048 * C359 - C31002 * C349 +
             C23645 * C369 - C31016 * C354) *
                C14631 +
            (C32041 * C136 - C31010 * C123 + C32048 * C379 - C31002 * C360 +
             C23645 * C384 - C31016 * C370) *
                C14625 +
            (C24697 - C24698 + C24699 - C24700 + C24701 - C24702) * C14632 +
            (C24703 - C24704 + C24705 - C24706 + C24707 - C24708) * C32003) *
               C32180 +
           ((C23650 - C23651 + C23652 - C23653 + C23654 - C23655) * C14631 +
            (C23656 - C23657 + C23658 - C23659 + C23660 - C23661) * C14625 +
            C25089 * C14632 + C25090 * C32003) *
               C31869) *
              C31918 * C240 +
          (((C24698 - C24697 + C24700 - C24699 + C24702 - C24701) * C14631 +
            (C24704 - C24703 + C24706 - C24705 + C24708 - C24707) * C14625 +
            (C24709 - C24710 + C24711 - C24712 + C24713 - C24714) * C14632 +
            (C24715 - C24716 + C24717 - C24718 + C24719 - C24720) * C32003) *
               C32180 +
           (C25091 * C14631 + C25092 * C14625 +
            (C24721 - C24722 + C24723 - C24724 + C24725 - C24726) * C14632 +
            (C24727 - C24728 + C24729 - C24730 + C24731 - C24732) * C32003) *
               C31869) *
              C31918 * C241 +
          (((C24710 - C24709 + C24712 - C24711 + C24714 - C24713) * C14631 +
            (C24716 - C24715 + C24718 - C24717 + C24720 - C24719) * C14625 +
            (C32041 * C963 - C31010 * C957 + C32048 * C1626 - C31002 * C1623 +
             C23645 * C6175 - C31016 * C6171) *
                C14632 +
            (C32041 * C975 - C31010 * C964 + C32048 * C1632 - C31002 * C1627 +
             C23645 * C6180 - C31016 * C6176) *
                C32003) *
               C32180 +
           ((C24722 - C24721 + C24724 - C24723 + C24726 - C24725) * C14631 +
            (C24728 - C24727 + C24730 - C24729 + C24732 - C24731) * C14625 +
            (C32041 * C965 - C31010 * C958 + C32048 * C1628 - C31002 * C1624 +
             C23645 * C6987 - C31016 * C6986) *
                C14632 +
            (C32041 * C976 - C31010 * C966 + C32048 * C1633 - C31002 * C1629 +
             C23645 * C6989 - C31016 * C6988) *
                C32003) *
               C31869) *
              C31918 * C242) *
         C31892) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C32041 * C122 - C31010 * C115 + C32048 * C359 - C31002 * C349 +
             C23645 * C369 - C31016 * C354) *
                C14631 +
            (C32041 * C136 - C31010 * C123 + C32048 * C379 - C31002 * C360 +
             C23645 * C384 - C31016 * C370) *
                C14625 +
            (C24697 - C24698 + C24699 - C24700 + C24701 - C24702) * C14632 +
            (C24703 - C24704 + C24705 - C24706 + C24707 - C24708) * C32003) *
               C32180 +
           ((C23650 - C23651 + C23652 - C23653 + C23654 - C23655) * C14631 +
            (C23656 - C23657 + C23658 - C23659 + C23660 - C23661) * C14625 +
            C25089 * C14632 + C25090 * C32003) *
               C31869) *
              C31918 * C31904 * C110 +
          (((C23651 - C23650 + C23653 - C23652 + C23655 - C23654) * C14631 +
            (C23657 - C23656 + C23659 - C23658 + C23661 - C23660) * C14625 +
            C25091 * C14632 + C25092 * C32003) *
               C32180 +
           ((C23663 - C23662 + C23665 - C23664 + C23667 - C23666) * C14631 +
            (C23669 - C23668 + C23671 - C23670 + C23673 - C23672) * C14625 +
            (C24077 - C24078 + C24079 - C24080 + C24081 - C24082) * C14632 +
            (C24083 - C24084 + C24085 - C24086 + C24087 - C24088) * C32003) *
               C31869) *
              C31918 * C31904 * C111 +
          ((C23694 * C14631 + C23695 * C14625 +
            (C24078 - C24077 + C24080 - C24079 + C24082 - C24081) * C14632 +
            (C24084 - C24083 + C24086 - C24085 + C24088 - C24087) * C32003) *
               C32180 +
           ((C23675 - C23674 + C23677 - C23676 + C23679 - C23678) * C14631 +
            (C23681 - C23680 + C23683 - C23682 + C23685 - C23684) * C14625 +
            (C32041 * C260 - C31010 * C247 + C32048 * C692 - C31002 * C684 +
             C23645 * C2199 - C31016 * C2198) *
                C14632 +
            (C32041 * C277 - C31010 * C261 + C32048 * C699 - C31002 * C693 +
             C23645 * C2201 - C31016 * C2200) *
                C32003) *
               C31869) *
              C31918 * C31904 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C32041 * C122 - C31010 * C115 + C32048 * C359 - C31002 * C349 +
             C23645 * C369 - C31016 * C354) *
                C14631 +
            (C32041 * C136 - C31010 * C123 + C32048 * C379 - C31002 * C360 +
             C23645 * C384 - C31016 * C370) *
                C14625 +
            (C24697 - C24698 + C24699 - C24700 + C24701 - C24702) * C14632 +
            (C24703 - C24704 + C24705 - C24706 + C24707 - C24708) * C32003) *
               C32180 +
           ((C23650 - C23651 + C23652 - C23653 + C23654 - C23655) * C14631 +
            (C23656 - C23657 + C23658 - C23659 + C23660 - C23661) * C14625 +
            C25089 * C14632 + C25090 * C32003) *
               C31869) *
              C346 +
          (((C31010 * C349 - C32041 * C359 + C31002 * C354 - C32048 * C369 +
             C31016 * C2028 - C23645 * C2034) *
                C14631 +
            (C31010 * C360 - C32041 * C379 + C31002 * C370 - C32048 * C384 +
             C31016 * C2035 - C23645 * C2046) *
                C14625 +
            (C25493 - C25494 + C25495 - C25496 + C25497 - C25498) * C14632 +
            (C25499 - C25500 + C25501 - C25502 + C25503 - C25504) * C32003) *
               C32180 +
           ((C24235 - C24236 + C24237 - C24238 + C24239 - C24240) * C14631 +
            (C24241 - C24242 + C24243 - C24244 + C24245 - C24246) * C14625 +
            (C25287 - C25288 + C25289 - C25290 + C25291 - C25292) * C14632 +
            (C25293 - C25294 + C25295 - C25296 + C25297 - C25298) * C32003) *
               C31869) *
              C347 +
          (((C32041 * C369 - C31010 * C354 + C32048 * C2034 - C31002 * C2028 +
             C23645 * C2040 - C31016 * C2031) *
                C14631 +
            (C32041 * C384 - C31010 * C370 + C32048 * C2046 - C31002 * C2035 +
             C23645 * C2049 - C31016 * C2041) *
                C14625 +
            (C32041 * C1130 - C31010 * C1118 + C32048 * C2549 - C31002 * C2546 +
             C23645 * C6833 - C31016 * C6829) *
                C14632 +
            (C32041 * C1145 - C31010 * C1131 + C32048 * C2555 - C31002 * C2550 +
             C23645 * C6838 - C31016 * C6834) *
                C32003) *
               C32180 +
           ((C32041 * C371 - C31010 * C355 + C32048 * C2036 - C31002 * C2029 +
             C23645 * C2042 - C31016 * C2032) *
                C14631 +
            (C32041 * C385 - C31010 * C372 + C32048 * C2047 - C31002 * C2037 +
             C23645 * C2050 - C31016 * C2043) *
                C14625 +
            (C32041 * C1134 - C31010 * C1120 + C32048 * C2551 - C31002 * C2547 +
             C23645 * C11812 - C31016 * C11811) *
                C14632 +
            (C32041 * C1147 - C31010 * C1135 + C32048 * C2556 - C31002 * C2552 +
             C23645 * C11814 - C31016 * C11813) *
                C32003) *
               C31869) *
              C348) *
         C31904 * C31892) /
            (p * q * std::sqrt(p + q));
    d2ee[43] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C32041 * C122 - C31010 * C115 + C32048 * C359 - C31002 * C349 +
              C23645 * C369 - C31016 * C354) *
                 C14631 +
             (C32041 * C136 - C31010 * C123 + C32048 * C379 - C31002 * C360 +
              C23645 * C384 - C31016 * C370) *
                 C14625 +
             (C24697 - C24698 + C24699 - C24700 + C24701 - C24702) * C14632 +
             (C24703 - C24704 + C24705 - C24706 + C24707 - C24708) * C32003) *
                C32180 +
            ((C23650 - C23651 + C23652 - C23653 + C23654 - C23655) * C14631 +
             (C23656 - C23657 + C23658 - C23659 + C23660 - C23661) * C14625 +
             C25089 * C14632 + C25090 * C32003) *
                C31869) *
               C577 +
           (((C31010 * C349 - C32041 * C359 + C31002 * C354 - C32048 * C369 +
              C31016 * C2028 - C23645 * C2034) *
                 C14631 +
             (C31010 * C360 - C32041 * C379 + C31002 * C370 - C32048 * C384 +
              C31016 * C2035 - C23645 * C2046) *
                 C14625 +
             (C25493 - C25494 + C25495 - C25496 + C25497 - C25498) * C14632 +
             (C25499 - C25500 + C25501 - C25502 + C25503 - C25504) * C32003) *
                C32180 +
            ((C24235 - C24236 + C24237 - C24238 + C24239 - C24240) * C14631 +
             (C24241 - C24242 + C24243 - C24244 + C24245 - C24246) * C14625 +
             (C25287 - C25288 + C25289 - C25290 + C25291 - C25292) * C14632 +
             (C25293 - C25294 + C25295 - C25296 + C25297 - C25298) * C32003) *
                C31869) *
               C578) *
              C31904 * C473 +
          ((((C23651 - C23650 + C23653 - C23652 + C23655 - C23654) * C14631 +
             (C23657 - C23656 + C23659 - C23658 + C23661 - C23660) * C14625 +
             C25091 * C14632 + C25092 * C32003) *
                C32180 +
            ((C23663 - C23662 + C23665 - C23664 + C23667 - C23666) * C14631 +
             (C23669 - C23668 + C23671 - C23670 + C23673 - C23672) * C14625 +
             (C24077 - C24078 + C24079 - C24080 + C24081 - C24082) * C14632 +
             (C24083 - C24084 + C24085 - C24086 + C24087 - C24088) * C32003) *
                C31869) *
               C577 +
           (((C24236 - C24235 + C24238 - C24237 + C24240 - C24239) * C14631 +
             (C24242 - C24241 + C24244 - C24243 + C24246 - C24245) * C14625 +
             (C25288 - C25287 + C25290 - C25289 + C25292 - C25291) * C14632 +
             (C25294 - C25293 + C25296 - C25295 + C25298 - C25297) * C32003) *
                C32180 +
            ((C24248 - C24247 + C24250 - C24249 + C24252 - C24251) * C14631 +
             (C24254 - C24253 + C24256 - C24255 + C24258 - C24257) * C14625 +
             (C32041 * C690 - C31010 * C683 + C32048 * C1138 - C31002 * C1122 +
              C23645 * C2553 - C31016 * C2548) *
                 C14632 +
             (C32041 * C698 - C31010 * C691 + C32048 * C1149 - C31002 * C1139 +
              C23645 * C2557 - C31016 * C2554) *
                 C32003) *
                C31869) *
               C578) *
              C31904 * C474)) /
        (p * q * std::sqrt(p + q));
    d2ee[44] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C32041 * C122 - C31010 * C115 + C32048 * C359 - C31002 * C349 +
             C23645 * C369 - C31016 * C354) *
                C14631 +
            (C32041 * C136 - C31010 * C123 + C32048 * C379 - C31002 * C360 +
             C23645 * C384 - C31016 * C370) *
                C14625 +
            (C24697 - C24698 + C24699 - C24700 + C24701 - C24702) * C14632 +
            (C24703 - C24704 + C24705 - C24706 + C24707 - C24708) * C32003) *
               C32180 +
           ((C23650 - C23651 + C23652 - C23653 + C23654 - C23655) * C14631 +
            (C23656 - C23657 + C23658 - C23659 + C23660 - C23661) * C14625 +
            C25089 * C14632 + C25090 * C32003) *
               C31869) *
              C31918 * C31904 * C110 +
          (((C23651 - C23650 + C23653 - C23652 + C23655 - C23654) * C14631 +
            (C23657 - C23656 + C23659 - C23658 + C23661 - C23660) * C14625 +
            C25091 * C14632 + C25092 * C32003) *
               C32180 +
           ((C23663 - C23662 + C23665 - C23664 + C23667 - C23666) * C14631 +
            (C23669 - C23668 + C23671 - C23670 + C23673 - C23672) * C14625 +
            (C24077 - C24078 + C24079 - C24080 + C24081 - C24082) * C14632 +
            (C24083 - C24084 + C24085 - C24086 + C24087 - C24088) * C32003) *
               C31869) *
              C31918 * C31904 * C111 +
          ((C23694 * C14631 + C23695 * C14625 +
            (C24078 - C24077 + C24080 - C24079 + C24082 - C24081) * C14632 +
            (C24084 - C24083 + C24086 - C24085 + C24088 - C24087) * C32003) *
               C32180 +
           ((C23675 - C23674 + C23677 - C23676 + C23679 - C23678) * C14631 +
            (C23681 - C23680 + C23683 - C23682 + C23685 - C23684) * C14625 +
            (C32041 * C260 - C31010 * C247 + C32048 * C692 - C31002 * C684 +
             C23645 * C2199 - C31016 * C2198) *
                C14632 +
            (C32041 * C277 - C31010 * C261 + C32048 * C699 - C31002 * C693 +
             C23645 * C2201 - C31016 * C2200) *
                C32003) *
               C31869) *
              C31918 * C31904 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C32041 * C122 - C31010 * C115 + C32048 * C359 - C31002 * C349 +
             C23645 * C369 - C31016 * C354) *
                C14631 +
            (C32041 * C136 - C31010 * C123 + C32048 * C379 - C31002 * C360 +
             C23645 * C384 - C31016 * C370) *
                C14625 +
            (C24697 - C24698 + C24699 - C24700 + C24701 - C24702) * C14632 +
            (C24703 - C24704 + C24705 - C24706 + C24707 - C24708) * C32003) *
               C32180 +
           ((C23650 - C23651 + C23652 - C23653 + C23654 - C23655) * C14631 +
            (C23656 - C23657 + C23658 - C23659 + C23660 - C23661) * C14625 +
            C25089 * C14632 + C25090 * C32003) *
               C31869) *
              C31918 * C240 +
          (((C24698 - C24697 + C24700 - C24699 + C24702 - C24701) * C14631 +
            (C24704 - C24703 + C24706 - C24705 + C24708 - C24707) * C14625 +
            (C24709 - C24710 + C24711 - C24712 + C24713 - C24714) * C14632 +
            (C24715 - C24716 + C24717 - C24718 + C24719 - C24720) * C32003) *
               C32180 +
           (C25091 * C14631 + C25092 * C14625 +
            (C24721 - C24722 + C24723 - C24724 + C24725 - C24726) * C14632 +
            (C24727 - C24728 + C24729 - C24730 + C24731 - C24732) * C32003) *
               C31869) *
              C31918 * C241 +
          (((C24710 - C24709 + C24712 - C24711 + C24714 - C24713) * C14631 +
            (C24716 - C24715 + C24718 - C24717 + C24720 - C24719) * C14625 +
            (C32041 * C963 - C31010 * C957 + C32048 * C1626 - C31002 * C1623 +
             C23645 * C6175 - C31016 * C6171) *
                C14632 +
            (C32041 * C975 - C31010 * C964 + C32048 * C1632 - C31002 * C1627 +
             C23645 * C6180 - C31016 * C6176) *
                C32003) *
               C32180 +
           ((C24722 - C24721 + C24724 - C24723 + C24726 - C24725) * C14631 +
            (C24728 - C24727 + C24730 - C24729 + C24732 - C24731) * C14625 +
            (C32041 * C965 - C31010 * C958 + C32048 * C1628 - C31002 * C1624 +
             C23645 * C6987 - C31016 * C6986) *
                C14632 +
            (C32041 * C976 - C31010 * C966 + C32048 * C1633 - C31002 * C1629 +
             C23645 * C6989 - C31016 * C6988) *
                C32003) *
               C31869) *
              C31918 * C242) *
         C31892) /
            (p * q * std::sqrt(p + q));
    d2ee[45] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19912 * C122 - C19914 * C115 + C32045 * C359 - C19915 * C349) *
                 C14631 +
             (C19912 * C136 - C19914 * C123 + C32045 * C379 - C19915 * C360) *
                 C14625 +
             (C20909 - C20910 + C20911 - C20912) * C14632 +
             (C20913 - C20914 + C20915 - C20916) * C32003) *
                C32262 +
            ((C19917 - C19918 + C19919 - C19920) * C14631 +
             (C19921 - C19922 + C19923 - C19924) * C14625 + C21305 * C14632 +
             C21306 * C32003) *
                C32249 +
            C25657 * C32219) *
               C31918 * C471 +
           (((C20910 - C20909 + C20912 - C20911) * C14631 +
             (C20914 - C20913 + C20916 - C20915) * C14625 +
             (C20918 - C20917 + C20920 - C20919) * C14632 +
             (C20922 - C20921 + C20924 - C20923) * C32003) *
                C32262 +
            (C21307 * C14631 + C21308 * C14625 + C21309 * C14632 +
             C21310 * C32003) *
                C32249 +
            (C23136 * C14631 + C23137 * C14625 +
             (C20755 - C20756 + C20757 - C20758) * C14632 +
             (C20759 - C20760 + C20761 - C20762) * C32003) *
                C32219) *
               C31918 * C472) *
              C473 +
          ((((C19918 - C19917 + C19920 - C19919) * C14631 +
             (C19922 - C19921 + C19924 - C19923) * C14625 + C21307 * C14632 +
             C21308 * C32003) *
                C32262 +
            ((C19926 - C19925 + C19928 - C19927) * C14631 +
             (C19930 - C19929 + C19932 - C19931) * C14625 + C23136 * C14632 +
             C23137 * C32003) *
                C32249 +
            ((C19934 - C19933 + C19936 - C19935) * C14631 +
             (C19938 - C19937 + C19940 - C19939) * C14625 +
             (C20309 - C20310 + C20311 - C20312) * C14632 +
             (C20313 - C20314 + C20315 - C20316) * C32003) *
                C32219) *
               C31918 * C471 +
           ((C21305 * C14631 + C21306 * C14625 + C20949 * C14632 +
             C20950 * C32003) *
                C32262 +
            (C22640 * C14631 + C22641 * C14625 +
             (C20756 - C20755 + C20758 - C20757) * C14632 +
             (C20760 - C20759 + C20762 - C20761) * C32003) *
                C32249 +
            ((C20310 - C20309 + C20312 - C20311) * C14631 +
             (C20314 - C20313 + C20316 - C20315) * C14625 +
             (C19912 * C270 - C19914 * C252 + C32045 * C1458 - C19915 * C1457) *
                 C14632 +
             (C19912 * C282 - C19914 * C271 + C32045 * C1460 - C19915 * C1459) *
                 C32003) *
                C32219) *
               C31918 * C472) *
              C474)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19912 * C122 - C19914 * C115 + C32045 * C359 - C19915 * C349) *
                C15337 +
            (C19912 * C136 - C19914 * C123 + C32045 * C379 - C19915 * C360) *
                C32272 +
            (C20909 - C20910 + C20911 - C20912) * C15338 +
            (C20913 - C20914 + C20915 - C20916) * C32268 + C20951 * C15339 +
            C20952 * C32258 + C26740 * C15340 + C26741 * C32240) *
               C31859 * C31918 * C471 +
           ((C20910 - C20909 + C20912 - C20911) * C15337 +
            (C20914 - C20913 + C20916 - C20915) * C32272 +
            (C20918 - C20917 + C20920 - C20919) * C15338 +
            (C20922 - C20921 + C20924 - C20923) * C32268 +
            (C20929 - C20930 + C20931 - C20932) * C15339 +
            (C20933 - C20934 + C20935 - C20936) * C32258 +
            (C26732 - C26733 + C26734 - C26735) * C15340 +
            (C26736 - C26737 + C26738 - C26739) * C32240) *
               C31859 * C31918 * C472) *
              C473 +
          (((C19918 - C19917 + C19920 - C19919) * C15337 +
            (C19922 - C19921 + C19924 - C19923) * C32272 + C21307 * C15338 +
            C21308 * C32268 + C21309 * C15339 + C21310 * C32258 +
            (C20937 - C20938 + C20939 - C20940) * C15340 +
            (C20941 - C20942 + C20943 - C20944) * C32240) *
               C31859 * C31918 * C471 +
           (C21305 * C15337 + C21306 * C32272 + C20949 * C15338 +
            C20950 * C32268 + (C20938 - C20937 + C20940 - C20939) * C15339 +
            (C20942 - C20941 + C20944 - C20943) * C32258 +
            (C19912 * C971 - C19914 * C961 + C32045 * C6355 - C19915 * C6354) *
                C15340 +
            (C19912 * C979 - C19914 * C972 + C32045 * C6357 - C19915 * C6356) *
                C32240) *
               C31859 * C31918 * C472) *
              C474)) /
            (p * q * std::sqrt(p + q));
    d2ee[46] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19912 * C122 - C19914 * C115 + C32045 * C359 - C19915 * C349) *
                 C14631 +
             (C19912 * C136 - C19914 * C123 + C32045 * C379 - C19915 * C360) *
                 C14625 +
             (C20909 - C20910 + C20911 - C20912) * C14632 +
             (C20913 - C20914 + C20915 - C20916) * C32003) *
                C32262 +
            ((C19917 - C19918 + C19919 - C19920) * C14631 +
             (C19921 - C19922 + C19923 - C19924) * C14625 + C21305 * C14632 +
             C21306 * C32003) *
                C32249 +
            C25657 * C32219) *
               C577 +
           (((C19914 * C349 - C19912 * C359 + C19915 * C354 - C32045 * C369) *
                 C14631 +
             (C19914 * C360 - C19912 * C379 + C19915 * C370 - C32045 * C384) *
                 C14625 +
             (C21715 - C21716 + C21717 - C21718) * C14632 +
             (C21719 - C21720 + C21721 - C21722) * C32003) *
                C32262 +
            ((C20447 - C20448 + C20449 - C20450) * C14631 +
             (C20451 - C20452 + C20453 - C20454) * C14625 +
             (C21505 - C21506 + C21507 - C21508) * C14632 +
             (C21509 - C21510 + C21511 - C21512) * C32003) *
                C32249 +
            ((C20455 - C20456 + C20457 - C20458) * C14631 +
             (C20459 - C20460 + C20461 - C20462) * C14625 +
             (C23332 - C23333 + C23334 - C23335) * C14632 +
             (C23336 - C23337 + C23338 - C23339) * C32003) *
                C32219) *
               C578) *
              C471 +
          ((((C20910 - C20909 + C20912 - C20911) * C14631 +
             (C20914 - C20913 + C20916 - C20915) * C14625 +
             (C20918 - C20917 + C20920 - C20919) * C14632 +
             (C20922 - C20921 + C20924 - C20923) * C32003) *
                C32262 +
            (C21307 * C14631 + C21308 * C14625 + C21309 * C14632 +
             C21310 * C32003) *
                C32249 +
            (C23136 * C14631 + C23137 * C14625 +
             (C20755 - C20756 + C20757 - C20758) * C14632 +
             (C20759 - C20760 + C20761 - C20762) * C32003) *
                C32219) *
               C577 +
           (((C21716 - C21715 + C21718 - C21717) * C14631 +
             (C21720 - C21719 + C21722 - C21721) * C14625 +
             (C21724 - C21723 + C21726 - C21725) * C14632 +
             (C21728 - C21727 + C21730 - C21729) * C32003) *
                C32262 +
            ((C21506 - C21505 + C21508 - C21507) * C14631 +
             (C21510 - C21509 + C21512 - C21511) * C14625 +
             (C21514 - C21513 + C21516 - C21515) * C14632 +
             (C21518 - C21517 + C21520 - C21519) * C32003) *
                C32249 +
            ((C23333 - C23332 + C23335 - C23334) * C14631 +
             (C23337 - C23336 + C23339 - C23338) * C14625 +
             (C19912 * C1128 - C19914 * C1117 + C32045 * C1140 -
              C19915 * C1123) *
                 C14632 +
             (C19912 * C1144 - C19914 * C1129 + C32045 * C1150 -
              C19915 * C1141) *
                 C32003) *
                C32219) *
               C578) *
              C472) *
         C31892) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19912 * C122 - C19914 * C115 + C32045 * C359 - C19915 * C349) *
                C15337 +
            (C19912 * C136 - C19914 * C123 + C32045 * C379 - C19915 * C360) *
                C32272 +
            (C20909 - C20910 + C20911 - C20912) * C15338 +
            (C20913 - C20914 + C20915 - C20916) * C32268 + C20951 * C15339 +
            C20952 * C32258 + C26740 * C15340 + C26741 * C32240) *
               C31859 * C577 +
           ((C19914 * C349 - C19912 * C359 + C19915 * C354 - C32045 * C369) *
                C15337 +
            (C19914 * C360 - C19912 * C379 + C19915 * C370 - C32045 * C384) *
                C32272 +
            (C21715 - C21716 + C21717 - C21718) * C15338 +
            (C21719 - C21720 + C21721 - C21722) * C32268 +
            (C21723 - C21724 + C21725 - C21726) * C15339 +
            (C21727 - C21728 + C21729 - C21730) * C32258 +
            (C27230 - C27231 + C27232 - C27233) * C15340 +
            (C27234 - C27235 + C27236 - C27237) * C32240) *
               C31859 * C578) *
              C471 +
          (((C20910 - C20909 + C20912 - C20911) * C15337 +
            (C20914 - C20913 + C20916 - C20915) * C32272 +
            (C20918 - C20917 + C20920 - C20919) * C15338 +
            (C20922 - C20921 + C20924 - C20923) * C32268 +
            (C20929 - C20930 + C20931 - C20932) * C15339 +
            (C20933 - C20934 + C20935 - C20936) * C32258 +
            (C26732 - C26733 + C26734 - C26735) * C15340 +
            (C26736 - C26737 + C26738 - C26739) * C32240) *
               C31859 * C577 +
           ((C21716 - C21715 + C21718 - C21717) * C15337 +
            (C21720 - C21719 + C21722 - C21721) * C32272 +
            (C21724 - C21723 + C21726 - C21725) * C15338 +
            (C21728 - C21727 + C21730 - C21729) * C32268 +
            (C27231 - C27230 + C27233 - C27232) * C15339 +
            (C27235 - C27234 + C27237 - C27236) * C32258 +
            (C19912 * C6173 - C19914 * C6170 + C32045 * C6177 -
             C19915 * C6172) *
                C15340 +
            (C19912 * C6179 - C19914 * C6174 + C32045 * C6181 -
             C19915 * C6178) *
                C32240) *
               C31859 * C578) *
              C472) *
         C31892) /
            (p * q * std::sqrt(p + q));
    d2ee[47] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C19912 * C122 - C19914 * C115 + C32045 * C359 - C19915 * C349) *
                C14631 +
            (C19912 * C136 - C19914 * C123 + C32045 * C379 - C19915 * C360) *
                C14625 +
            (C20909 - C20910 + C20911 - C20912) * C14632 +
            (C20913 - C20914 + C20915 - C20916) * C32003) *
               C32262 +
           ((C19917 - C19918 + C19919 - C19920) * C14631 +
            (C19921 - C19922 + C19923 - C19924) * C14625 + C21305 * C14632 +
            C21306 * C32003) *
               C32249 +
           C25657 * C32219) *
              C31918 * C240 +
          (((C20910 - C20909 + C20912 - C20911) * C14631 +
            (C20914 - C20913 + C20916 - C20915) * C14625 +
            (C20918 - C20917 + C20920 - C20919) * C14632 +
            (C20922 - C20921 + C20924 - C20923) * C32003) *
               C32262 +
           (C21307 * C14631 + C21308 * C14625 + C21309 * C14632 +
            C21310 * C32003) *
               C32249 +
           (C23136 * C14631 + C23137 * C14625 +
            (C20755 - C20756 + C20757 - C20758) * C14632 +
            (C20759 - C20760 + C20761 - C20762) * C32003) *
               C32219) *
              C31918 * C241 +
          ((C20951 * C14631 + C20952 * C14625 +
            (C20930 - C20929 + C20932 - C20931) * C14632 +
            (C20934 - C20933 + C20936 - C20935) * C32003) *
               C32262 +
           (C20949 * C14631 + C20950 * C14625 +
            (C20938 - C20937 + C20940 - C20939) * C14632 +
            (C20942 - C20941 + C20944 - C20943) * C32003) *
               C32249 +
           ((C20756 - C20755 + C20758 - C20757) * C14631 +
            (C20760 - C20759 + C20762 - C20761) * C14625 +
            (C19912 * C967 - C19914 * C959 + C32045 * C1630 - C19915 * C1625) *
                C14632 +
            (C19912 * C977 - C19914 * C968 + C32045 * C1634 - C19915 * C1631) *
                C32003) *
               C32219) *
              C31918 * C242) *
         C31892) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C19912 * C122 - C19914 * C115 + C32045 * C359 - C19915 * C349) *
                C14631 +
            (C19912 * C136 - C19914 * C123 + C32045 * C379 - C19915 * C360) *
                C14625 +
            (C20909 - C20910 + C20911 - C20912) * C14632 +
            (C20913 - C20914 + C20915 - C20916) * C32003) *
               C32262 +
           ((C19917 - C19918 + C19919 - C19920) * C14631 +
            (C19921 - C19922 + C19923 - C19924) * C14625 + C21305 * C14632 +
            C21306 * C32003) *
               C32249 +
           C25657 * C32219) *
              C31918 * C31904 * C110 +
          (((C19918 - C19917 + C19920 - C19919) * C14631 +
            (C19922 - C19921 + C19924 - C19923) * C14625 + C21307 * C14632 +
            C21308 * C32003) *
               C32262 +
           ((C19926 - C19925 + C19928 - C19927) * C14631 +
            (C19930 - C19929 + C19932 - C19931) * C14625 + C23136 * C14632 +
            C23137 * C32003) *
               C32249 +
           ((C19934 - C19933 + C19936 - C19935) * C14631 +
            (C19938 - C19937 + C19940 - C19939) * C14625 +
            (C20309 - C20310 + C20311 - C20312) * C14632 +
            (C20313 - C20314 + C20315 - C20316) * C32003) *
               C32219) *
              C31918 * C31904 * C111 +
          (C25657 * C32262 +
           (C19959 * C14631 + C19960 * C14625 +
            (C20310 - C20309 + C20312 - C20311) * C14632 +
            (C20314 - C20313 + C20316 - C20315) * C32003) *
               C32249 +
           ((C19942 - C19941 + C19944 - C19943) * C14631 +
            (C19946 - C19945 + C19948 - C19947) * C14625 +
            (C19912 * C262 - C19914 * C248 + C32045 * C694 - C19915 * C685) *
                C14632 +
            (C19912 * C278 - C19914 * C263 + C32045 * C700 - C19915 * C695) *
                C32003) *
               C32219) *
              C31918 * C31904 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C19912 * C122 - C19914 * C115 + C32045 * C359 - C19915 * C349) *
                C14631 +
            (C19912 * C136 - C19914 * C123 + C32045 * C379 - C19915 * C360) *
                C14625 +
            (C20909 - C20910 + C20911 - C20912) * C14632 +
            (C20913 - C20914 + C20915 - C20916) * C32003) *
               C32262 +
           ((C19917 - C19918 + C19919 - C19920) * C14631 +
            (C19921 - C19922 + C19923 - C19924) * C14625 + C21305 * C14632 +
            C21306 * C32003) *
               C32249 +
           C25657 * C32219) *
              C346 +
          (((C19914 * C349 - C19912 * C359 + C19915 * C354 - C32045 * C369) *
                C14631 +
            (C19914 * C360 - C19912 * C379 + C19915 * C370 - C32045 * C384) *
                C14625 +
            (C21715 - C21716 + C21717 - C21718) * C14632 +
            (C21719 - C21720 + C21721 - C21722) * C32003) *
               C32262 +
           ((C20447 - C20448 + C20449 - C20450) * C14631 +
            (C20451 - C20452 + C20453 - C20454) * C14625 +
            (C21505 - C21506 + C21507 - C21508) * C14632 +
            (C21509 - C21510 + C21511 - C21512) * C32003) *
               C32249 +
           ((C20455 - C20456 + C20457 - C20458) * C14631 +
            (C20459 - C20460 + C20461 - C20462) * C14625 +
            (C23332 - C23333 + C23334 - C23335) * C14632 +
            (C23336 - C23337 + C23338 - C23339) * C32003) *
               C32219) *
              C347 +
          (((C19912 * C369 - C19914 * C354 + C32045 * C2034 - C19915 * C2028) *
                C14631 +
            (C19912 * C384 - C19914 * C370 + C32045 * C2046 - C19915 * C2035) *
                C14625 +
            (C19912 * C1130 - C19914 * C1118 + C32045 * C2549 -
             C19915 * C2546) *
                C14632 +
            (C19912 * C1145 - C19914 * C1131 + C32045 * C2555 -
             C19915 * C2550) *
                C32003) *
               C32262 +
           ((C19912 * C371 - C19914 * C355 + C32045 * C2036 - C19915 * C2029) *
                C14631 +
            (C19912 * C385 - C19914 * C372 + C32045 * C2047 - C19915 * C2037) *
                C14625 +
            (C19912 * C1134 - C19914 * C1120 + C32045 * C2551 -
             C19915 * C2547) *
                C14632 +
            (C19912 * C1147 - C19914 * C1135 + C32045 * C2556 -
             C19915 * C2552) *
                C32003) *
               C32249 +
           ((C19912 * C373 - C19914 * C356 + C32045 * C2038 - C19915 * C2030) *
                C14631 +
            (C19912 * C386 - C19914 * C374 + C32045 * C2048 - C19915 * C2039) *
                C14625 +
            (C19912 * C1138 - C19914 * C1122 + C32045 * C2553 -
             C19915 * C2548) *
                C14632 +
            (C19912 * C1149 - C19914 * C1139 + C32045 * C2557 -
             C19915 * C2554) *
                C32003) *
               C32219) *
              C348) *
         C31904 * C31892) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C19912 * C122 - C19914 * C115 + C32045 * C359 - C19915 * C349) *
               C15337 +
           (C19912 * C136 - C19914 * C123 + C32045 * C379 - C19915 * C360) *
               C32272 +
           (C20909 - C20910 + C20911 - C20912) * C15338 +
           (C20913 - C20914 + C20915 - C20916) * C32268 + C20951 * C15339 +
           C20952 * C32258 + (C20930 - C20929 + C20932 - C20931) * C15340 +
           (C20934 - C20933 + C20936 - C20935) * C32240) *
              C31859 * C31918 * C31904 * C110 +
          ((C19918 - C19917 + C19920 - C19919) * C15337 +
           (C19922 - C19921 + C19924 - C19923) * C32272 + C21307 * C15338 +
           C21308 * C32268 + C21309 * C15339 + C21310 * C32258 +
           (C20937 - C20938 + C20939 - C20940) * C15340 +
           (C20941 - C20942 + C20943 - C20944) * C32240) *
              C31859 * C31918 * C31904 * C111 +
          (C19957 * C15337 + C19958 * C32272 + C22640 * C15338 +
           C22641 * C32268 + (C20756 - C20755 + C20758 - C20757) * C15339 +
           (C20760 - C20759 + C20762 - C20761) * C32258 +
           (C19912 * C967 - C19914 * C959 + C32045 * C1630 - C19915 * C1625) *
               C15340 +
           (C19912 * C977 - C19914 * C968 + C32045 * C1634 - C19915 * C1631) *
               C32240) *
              C31859 * C31918 * C31904 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C19912 * C122 - C19914 * C115 + C32045 * C359 - C19915 * C349) *
               C15337 +
           (C19912 * C136 - C19914 * C123 + C32045 * C379 - C19915 * C360) *
               C32272 +
           (C20909 - C20910 + C20911 - C20912) * C15338 +
           (C20913 - C20914 + C20915 - C20916) * C32268 + C20951 * C15339 +
           C20952 * C32258 + C26740 * C15340 + C26741 * C32240) *
              C31859 * C31918 * C240 +
          ((C20910 - C20909 + C20912 - C20911) * C15337 +
           (C20914 - C20913 + C20916 - C20915) * C32272 +
           (C20918 - C20917 + C20920 - C20919) * C15338 +
           (C20922 - C20921 + C20924 - C20923) * C32268 +
           (C20929 - C20930 + C20931 - C20932) * C15339 +
           (C20933 - C20934 + C20935 - C20936) * C32258 +
           (C26732 - C26733 + C26734 - C26735) * C15340 +
           (C26736 - C26737 + C26738 - C26739) * C32240) *
              C31859 * C31918 * C241 +
          (C20951 * C15337 + C20952 * C32272 + C26740 * C15338 +
           C26741 * C32268 + (C26733 - C26732 + C26735 - C26734) * C15339 +
           (C26737 - C26736 + C26739 - C26738) * C32258 +
           (C19912 * C6090 - C19914 * C6088 + C32045 * C6441 - C19915 * C6440) *
               C15340 +
           (C19912 * C6094 - C19914 * C6091 + C32045 * C6443 - C19915 * C6442) *
               C32240) *
              C31859 * C31918 * C242) *
         C31892) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C19912 * C122 - C19914 * C115 + C32045 * C359 - C19915 * C349) *
               C15337 +
           (C19912 * C136 - C19914 * C123 + C32045 * C379 - C19915 * C360) *
               C32272 +
           (C20909 - C20910 + C20911 - C20912) * C15338 +
           (C20913 - C20914 + C20915 - C20916) * C32268 + C20951 * C15339 +
           C20952 * C32258 + C26740 * C15340 + C26741 * C32240) *
              C31859 * C346 +
          ((C19914 * C349 - C19912 * C359 + C19915 * C354 - C32045 * C369) *
               C15337 +
           (C19914 * C360 - C19912 * C379 + C19915 * C370 - C32045 * C384) *
               C32272 +
           (C21715 - C21716 + C21717 - C21718) * C15338 +
           (C21719 - C21720 + C21721 - C21722) * C32268 +
           (C21723 - C21724 + C21725 - C21726) * C15339 +
           (C21727 - C21728 + C21729 - C21730) * C32258 +
           (C19914 * C1623 - C19912 * C1626 + C19915 * C6171 - C32045 * C6175) *
               C15340 +
           (C19914 * C1627 - C19912 * C1632 + C19915 * C6176 - C32045 * C6180) *
               C32240) *
              C31859 * C347 +
          ((C19912 * C369 - C19914 * C354 + C32045 * C2034 - C19915 * C2028) *
               C15337 +
           (C19912 * C384 - C19914 * C370 + C32045 * C2046 - C19915 * C2035) *
               C32272 +
           (C19912 * C1130 - C19914 * C1118 + C32045 * C2549 - C19915 * C2546) *
               C15338 +
           (C19912 * C1145 - C19914 * C1131 + C32045 * C2555 - C19915 * C2550) *
               C32268 +
           (C19912 * C1132 - C19914 * C1119 + C32045 * C6831 - C19915 * C6828) *
               C15339 +
           (C19912 * C1146 - C19914 * C1133 + C32045 * C6837 - C19915 * C6832) *
               C32258 +
           (C19912 * C6175 - C19914 * C6171 + C32045 * C7299 - C19915 * C7298) *
               C15340 +
           (C19912 * C6180 - C19914 * C6176 + C32045 * C7301 - C19915 * C7300) *
               C32240) *
              C31859 * C348) *
         C31904 * C31892) /
            (p * q * std::sqrt(p + q));
    d2ee[48] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19912 * C122 - C19914 * C115 + C32045 * C359 - C19915 * C349) *
                 C14631 +
             (C19912 * C136 - C19914 * C123 + C32045 * C379 - C19915 * C360) *
                 C14625 +
             (C20909 - C20910 + C20911 - C20912) * C14632 +
             (C20913 - C20914 + C20915 - C20916) * C32003) *
                C32262 +
            ((C19917 - C19918 + C19919 - C19920) * C14631 +
             (C19921 - C19922 + C19923 - C19924) * C14625 + C21305 * C14632 +
             C21306 * C32003) *
                C32249 +
            C25657 * C32219) *
               C577 +
           (((C19914 * C349 - C19912 * C359 + C19915 * C354 - C32045 * C369) *
                 C14631 +
             (C19914 * C360 - C19912 * C379 + C19915 * C370 - C32045 * C384) *
                 C14625 +
             (C21715 - C21716 + C21717 - C21718) * C14632 +
             (C21719 - C21720 + C21721 - C21722) * C32003) *
                C32262 +
            ((C20447 - C20448 + C20449 - C20450) * C14631 +
             (C20451 - C20452 + C20453 - C20454) * C14625 +
             (C21505 - C21506 + C21507 - C21508) * C14632 +
             (C21509 - C21510 + C21511 - C21512) * C32003) *
                C32249 +
            ((C20455 - C20456 + C20457 - C20458) * C14631 +
             (C20459 - C20460 + C20461 - C20462) * C14625 +
             (C23332 - C23333 + C23334 - C23335) * C14632 +
             (C23336 - C23337 + C23338 - C23339) * C32003) *
                C32219) *
               C578) *
              C31904 * C473 +
          ((((C19918 - C19917 + C19920 - C19919) * C14631 +
             (C19922 - C19921 + C19924 - C19923) * C14625 + C21307 * C14632 +
             C21308 * C32003) *
                C32262 +
            ((C19926 - C19925 + C19928 - C19927) * C14631 +
             (C19930 - C19929 + C19932 - C19931) * C14625 + C23136 * C14632 +
             C23137 * C32003) *
                C32249 +
            ((C19934 - C19933 + C19936 - C19935) * C14631 +
             (C19938 - C19937 + C19940 - C19939) * C14625 +
             (C20309 - C20310 + C20311 - C20312) * C14632 +
             (C20313 - C20314 + C20315 - C20316) * C32003) *
                C32219) *
               C577 +
           (((C20448 - C20447 + C20450 - C20449) * C14631 +
             (C20452 - C20451 + C20454 - C20453) * C14625 +
             (C21506 - C21505 + C21508 - C21507) * C14632 +
             (C21510 - C21509 + C21512 - C21511) * C32003) *
                C32262 +
            ((C20456 - C20455 + C20458 - C20457) * C14631 +
             (C20460 - C20459 + C20462 - C20461) * C14625 +
             (C23333 - C23332 + C23335 - C23334) * C14632 +
             (C23337 - C23336 + C23339 - C23338) * C32003) *
                C32249 +
            ((C20464 - C20463 + C20466 - C20465) * C14631 +
             (C20468 - C20467 + C20470 - C20469) * C14625 +
             (C19912 * C692 - C19914 * C684 + C32045 * C2199 - C19915 * C2198) *
                 C14632 +
             (C19912 * C699 - C19914 * C693 + C32045 * C2201 - C19915 * C2200) *
                 C32003) *
                C32219) *
               C578) *
              C31904 * C474)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19912 * C122 - C19914 * C115 + C32045 * C359 - C19915 * C349) *
                C15337 +
            (C19912 * C136 - C19914 * C123 + C32045 * C379 - C19915 * C360) *
                C32272 +
            (C20909 - C20910 + C20911 - C20912) * C15338 +
            (C20913 - C20914 + C20915 - C20916) * C32268 + C20951 * C15339 +
            C20952 * C32258 + C26740 * C15340 + C26741 * C32240) *
               C31859 * C577 +
           ((C19914 * C349 - C19912 * C359 + C19915 * C354 - C32045 * C369) *
                C15337 +
            (C19914 * C360 - C19912 * C379 + C19915 * C370 - C32045 * C384) *
                C32272 +
            (C21715 - C21716 + C21717 - C21718) * C15338 +
            (C21719 - C21720 + C21721 - C21722) * C32268 +
            (C21723 - C21724 + C21725 - C21726) * C15339 +
            (C21727 - C21728 + C21729 - C21730) * C32258 +
            (C19914 * C1623 - C19912 * C1626 + C19915 * C6171 -
             C32045 * C6175) *
                C15340 +
            (C19914 * C1627 - C19912 * C1632 + C19915 * C6176 -
             C32045 * C6180) *
                C32240) *
               C31859 * C578) *
              C31904 * C473 +
          (((C19918 - C19917 + C19920 - C19919) * C15337 +
            (C19922 - C19921 + C19924 - C19923) * C32272 + C21307 * C15338 +
            C21308 * C32268 + C21309 * C15339 + C21310 * C32258 +
            (C20937 - C20938 + C20939 - C20940) * C15340 +
            (C20941 - C20942 + C20943 - C20944) * C32240) *
               C31859 * C577 +
           ((C20448 - C20447 + C20450 - C20449) * C15337 +
            (C20452 - C20451 + C20454 - C20453) * C32272 +
            (C21506 - C21505 + C21508 - C21507) * C15338 +
            (C21510 - C21509 + C21512 - C21511) * C32268 +
            (C21514 - C21513 + C21516 - C21515) * C15339 +
            (C21518 - C21517 + C21520 - C21519) * C32258 +
            (C19912 * C1628 - C19914 * C1624 + C32045 * C6987 -
             C19915 * C6986) *
                C15340 +
            (C19912 * C1633 - C19914 * C1629 + C32045 * C6989 -
             C19915 * C6988) *
                C32240) *
               C31859 * C578) *
              C31904 * C474)) /
            (p * q * std::sqrt(p + q));
    d2ee[49] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C19912 * C122 - C19914 * C115 + C32045 * C359 - C19915 * C349) *
                C14631 +
            (C19912 * C136 - C19914 * C123 + C32045 * C379 - C19915 * C360) *
                C14625 +
            (C20909 - C20910 + C20911 - C20912) * C14632 +
            (C20913 - C20914 + C20915 - C20916) * C32003) *
               C32262 +
           ((C19917 - C19918 + C19919 - C19920) * C14631 +
            (C19921 - C19922 + C19923 - C19924) * C14625 + C21305 * C14632 +
            C21306 * C32003) *
               C32249 +
           C25657 * C32219) *
              C31918 * C31904 * C110 +
          (((C19918 - C19917 + C19920 - C19919) * C14631 +
            (C19922 - C19921 + C19924 - C19923) * C14625 + C21307 * C14632 +
            C21308 * C32003) *
               C32262 +
           ((C19926 - C19925 + C19928 - C19927) * C14631 +
            (C19930 - C19929 + C19932 - C19931) * C14625 + C23136 * C14632 +
            C23137 * C32003) *
               C32249 +
           ((C19934 - C19933 + C19936 - C19935) * C14631 +
            (C19938 - C19937 + C19940 - C19939) * C14625 +
            (C20309 - C20310 + C20311 - C20312) * C14632 +
            (C20313 - C20314 + C20315 - C20316) * C32003) *
               C32219) *
              C31918 * C31904 * C111 +
          (C25657 * C32262 +
           (C19959 * C14631 + C19960 * C14625 +
            (C20310 - C20309 + C20312 - C20311) * C14632 +
            (C20314 - C20313 + C20316 - C20315) * C32003) *
               C32249 +
           ((C19942 - C19941 + C19944 - C19943) * C14631 +
            (C19946 - C19945 + C19948 - C19947) * C14625 +
            (C19912 * C262 - C19914 * C248 + C32045 * C694 - C19915 * C685) *
                C14632 +
            (C19912 * C278 - C19914 * C263 + C32045 * C700 - C19915 * C695) *
                C32003) *
               C32219) *
              C31918 * C31904 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C19912 * C122 - C19914 * C115 + C32045 * C359 - C19915 * C349) *
                C14631 +
            (C19912 * C136 - C19914 * C123 + C32045 * C379 - C19915 * C360) *
                C14625 +
            (C20909 - C20910 + C20911 - C20912) * C14632 +
            (C20913 - C20914 + C20915 - C20916) * C32003) *
               C32262 +
           ((C19917 - C19918 + C19919 - C19920) * C14631 +
            (C19921 - C19922 + C19923 - C19924) * C14625 + C21305 * C14632 +
            C21306 * C32003) *
               C32249 +
           C25657 * C32219) *
              C31918 * C240 +
          (((C20910 - C20909 + C20912 - C20911) * C14631 +
            (C20914 - C20913 + C20916 - C20915) * C14625 +
            (C20918 - C20917 + C20920 - C20919) * C14632 +
            (C20922 - C20921 + C20924 - C20923) * C32003) *
               C32262 +
           (C21307 * C14631 + C21308 * C14625 + C21309 * C14632 +
            C21310 * C32003) *
               C32249 +
           (C23136 * C14631 + C23137 * C14625 +
            (C20755 - C20756 + C20757 - C20758) * C14632 +
            (C20759 - C20760 + C20761 - C20762) * C32003) *
               C32219) *
              C31918 * C241 +
          ((C20951 * C14631 + C20952 * C14625 +
            (C20930 - C20929 + C20932 - C20931) * C14632 +
            (C20934 - C20933 + C20936 - C20935) * C32003) *
               C32262 +
           (C20949 * C14631 + C20950 * C14625 +
            (C20938 - C20937 + C20940 - C20939) * C14632 +
            (C20942 - C20941 + C20944 - C20943) * C32003) *
               C32249 +
           ((C20756 - C20755 + C20758 - C20757) * C14631 +
            (C20760 - C20759 + C20762 - C20761) * C14625 +
            (C19912 * C967 - C19914 * C959 + C32045 * C1630 - C19915 * C1625) *
                C14632 +
            (C19912 * C977 - C19914 * C968 + C32045 * C1634 - C19915 * C1631) *
                C32003) *
               C32219) *
              C31918 * C242) *
         C31892) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C19912 * C122 - C19914 * C115 + C32045 * C359 - C19915 * C349) *
               C15337 +
           (C19912 * C136 - C19914 * C123 + C32045 * C379 - C19915 * C360) *
               C32272 +
           (C20909 - C20910 + C20911 - C20912) * C15338 +
           (C20913 - C20914 + C20915 - C20916) * C32268 + C20951 * C15339 +
           C20952 * C32258 + (C20930 - C20929 + C20932 - C20931) * C15340 +
           (C20934 - C20933 + C20936 - C20935) * C32240) *
              C31859 * C31918 * C31904 * C110 +
          ((C19918 - C19917 + C19920 - C19919) * C15337 +
           (C19922 - C19921 + C19924 - C19923) * C32272 + C21307 * C15338 +
           C21308 * C32268 + C21309 * C15339 + C21310 * C32258 +
           (C20937 - C20938 + C20939 - C20940) * C15340 +
           (C20941 - C20942 + C20943 - C20944) * C32240) *
              C31859 * C31918 * C31904 * C111 +
          (C19957 * C15337 + C19958 * C32272 + C22640 * C15338 +
           C22641 * C32268 + (C20756 - C20755 + C20758 - C20757) * C15339 +
           (C20760 - C20759 + C20762 - C20761) * C32258 +
           (C19912 * C967 - C19914 * C959 + C32045 * C1630 - C19915 * C1625) *
               C15340 +
           (C19912 * C977 - C19914 * C968 + C32045 * C1634 - C19915 * C1631) *
               C32240) *
              C31859 * C31918 * C31904 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C19912 * C122 - C19914 * C115 + C32045 * C359 - C19915 * C349) *
               C15337 +
           (C19912 * C136 - C19914 * C123 + C32045 * C379 - C19915 * C360) *
               C32272 +
           (C20909 - C20910 + C20911 - C20912) * C15338 +
           (C20913 - C20914 + C20915 - C20916) * C32268 + C20951 * C15339 +
           C20952 * C32258 + C26740 * C15340 + C26741 * C32240) *
              C31859 * C31918 * C240 +
          ((C20910 - C20909 + C20912 - C20911) * C15337 +
           (C20914 - C20913 + C20916 - C20915) * C32272 +
           (C20918 - C20917 + C20920 - C20919) * C15338 +
           (C20922 - C20921 + C20924 - C20923) * C32268 +
           (C20929 - C20930 + C20931 - C20932) * C15339 +
           (C20933 - C20934 + C20935 - C20936) * C32258 +
           (C26732 - C26733 + C26734 - C26735) * C15340 +
           (C26736 - C26737 + C26738 - C26739) * C32240) *
              C31859 * C31918 * C241 +
          (C20951 * C15337 + C20952 * C32272 + C26740 * C15338 +
           C26741 * C32268 + (C26733 - C26732 + C26735 - C26734) * C15339 +
           (C26737 - C26736 + C26739 - C26738) * C32258 +
           (C19912 * C6090 - C19914 * C6088 + C32045 * C6441 - C19915 * C6440) *
               C15340 +
           (C19912 * C6094 - C19914 * C6091 + C32045 * C6443 - C19915 * C6442) *
               C32240) *
              C31859 * C31918 * C242) *
         C31892) /
            (p * q * std::sqrt(p + q));
    d2ee[50] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31958 * C122 - C113 * C115) * C7430 +
             (C31958 * C136 - C113 * C123) * C7424 + (C982 - C983) * C7431 +
             (C984 - C985) * C7425 + C1004 * C7432 + C1005 * C7426 +
             C6097 * C7433 + C6098 * C32240) *
                C32180 +
            ((C144 - C145) * C7430 + (C146 - C147) * C7424 + C1302 * C7431 +
             C1303 * C7425 + C990 * C7432 + C991 * C7426 + C7533 * C7433 +
             C7534 * C32240) *
                C31869) *
               C31918 * C471 +
           (((C983 - C982) * C7430 + (C985 - C984) * C7424 +
             (C987 - C986) * C7431 + (C989 - C988) * C7425 +
             (C992 - C993) * C7432 + (C994 - C995) * C7426 +
             (C6100 - C6099) * C7433 + (C6102 - C6101) * C32240) *
                C32180 +
            (C1304 * C7430 + C1305 * C7424 + C1306 * C7431 + C1307 * C7425 +
             C7763 * C7432 + C7764 * C7426 + (C6269 - C6270) * C7433 +
             (C6271 - C6272) * C32240) *
                C31869) *
               C31918 * C472) *
              C473 +
          ((((C145 - C144) * C7430 + (C147 - C146) * C7424 + C1304 * C7431 +
             C1305 * C7425 + C1306 * C7432 + C1307 * C7426 + C7763 * C7433 +
             C7764 * C32240) *
                C32180 +
            ((C149 - C148) * C7430 + (C151 - C150) * C7424 + C1308 * C7431 +
             C1309 * C7425 + C1310 * C7432 + C1311 * C7426 +
             (C1000 - C1001) * C7433 + (C1002 - C1003) * C32240) *
                C31869) *
               C31918 * C471 +
           ((C1302 * C7430 + C1303 * C7424 + C990 * C7431 + C991 * C7425 +
             C7533 * C7432 + C7534 * C7426 + (C6270 - C6269) * C7433 +
             (C6272 - C6271) * C32240) *
                C32180 +
            (C827 * C7430 + C828 * C7424 + C840 * C7431 + C841 * C7425 +
             (C1001 - C1000) * C7432 + (C1003 - C1002) * C7426 +
             (C31958 * C973 - C113 * C962) * C7433 +
             (C31958 * C980 - C113 * C974) * C32240) *
                C31869) *
               C31918 * C472) *
              C474)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31958 * C122 - C113 * C115) * C2662 +
             (C31958 * C136 - C113 * C123) * C32199 + (C982 - C983) * C2663 +
             (C984 - C985) * C32003) *
                C2658 +
            ((C144 - C145) * C2662 + (C146 - C147) * C32199 + C1302 * C2663 +
             C1303 * C32003) *
                C2659 +
            C2679 * C2660 + C2680 * C32234) *
               C31918 * C471 +
           (((C983 - C982) * C2662 + (C985 - C984) * C32199 +
             (C987 - C986) * C2663 + (C989 - C988) * C32003) *
                C2658 +
            (C1304 * C2662 + C1305 * C32199 + C1306 * C2663 + C1307 * C32003) *
                C2659 +
            (C1308 * C2662 + C1309 * C32199 + C1310 * C2663 + C1311 * C32003) *
                C2660 +
            (C3007 * C2662 + C3008 * C32199 + (C833 - C834) * C2663 +
             (C835 - C836) * C32003) *
                C32234) *
               C31918 * C472) *
              C473 +
          ((((C145 - C144) * C2662 + (C147 - C146) * C32199 + C1304 * C2663 +
             C1305 * C32003) *
                C2658 +
            ((C149 - C148) * C2662 + (C151 - C150) * C32199 + C1308 * C2663 +
             C1309 * C32003) *
                C2659 +
            ((C153 - C152) * C2662 + (C155 - C154) * C32199 + C3007 * C2663 +
             C3008 * C32003) *
                C2660 +
            ((C157 - C156) * C2662 + (C159 - C158) * C32199 +
             (C492 - C493) * C2663 + (C494 - C495) * C32003) *
                C32234) *
               C31918 * C471 +
           ((C1302 * C2662 + C1303 * C32199 + C990 * C2663 + C991 * C32003) *
                C2658 +
            (C827 * C2662 + C828 * C32199 + C840 * C2663 + C841 * C32003) *
                C2659 +
            (C2671 * C2662 + C2672 * C32199 + (C834 - C833) * C2663 +
             (C836 - C835) * C32003) *
                C2660 +
            ((C493 - C492) * C2662 + (C495 - C494) * C32199 +
             (C31958 * C272 - C113 * C253) * C2663 +
             (C31958 * C283 - C113 * C273) * C32003) *
                C32234) *
               C31918 * C472) *
              C474)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C9914 * C122 - C9917 * C115 + C9915 * C359 - C9918 * C349 +
              C32233 * C369 - C9919 * C354) *
                 C2662 +
             (C9914 * C136 - C9917 * C123 + C9915 * C379 - C9918 * C360 +
              C32233 * C384 - C9919 * C370) *
                 C32199 +
             (C10896 - C10897 + C10898 - C10899 + C10900 - C10901) * C2663 +
             (C10902 - C10903 + C10904 - C10905 + C10906 - C10907) * C32003) *
                C32180 +
            ((C9921 - C9922 + C9923 - C9924 + C9925 - C9926) * C2662 +
             (C9927 - C9928 + C9929 - C9930 + C9931 - C9932) * C32199 +
             C12636 * C2663 + C12637 * C32003) *
                C31869) *
               C31918 * C471 +
           (((C10897 - C10896 + C10899 - C10898 + C10901 - C10900) * C2662 +
             (C10903 - C10902 + C10905 - C10904 + C10907 - C10906) * C32199 +
             (C10909 - C10908 + C10911 - C10910 + C10913 - C10912) * C2663 +
             (C10915 - C10914 + C10917 - C10916 + C10919 - C10918) * C32003) *
                C32180 +
            (C12638 * C2662 + C12639 * C32199 +
             (C11198 - C11199 + C11200 - C11201 + C11202 - C11203) * C2663 +
             (C11204 - C11205 + C11206 - C11207 + C11208 - C11209) * C32003) *
                C31869) *
               C31918 * C472) *
              C473 +
          ((((C9922 - C9921 + C9924 - C9923 + C9926 - C9925) * C2662 +
             (C9928 - C9927 + C9930 - C9929 + C9932 - C9931) * C32199 +
             C12638 * C2663 + C12639 * C32003) *
                C32180 +
            ((C9934 - C9933 + C9936 - C9935 + C9938 - C9937) * C2662 +
             (C9940 - C9939 + C9942 - C9941 + C9944 - C9943) * C32199 +
             (C10348 - C10349 + C10350 - C10351 + C10352 - C10353) * C2663 +
             (C10354 - C10355 + C10356 - C10357 + C10358 - C10359) * C32003) *
                C31869) *
               C31918 * C471 +
           ((C12636 * C2662 + C12637 * C32199 +
             (C11199 - C11198 + C11201 - C11200 + C11203 - C11202) * C2663 +
             (C11205 - C11204 + C11207 - C11206 + C11209 - C11208) * C32003) *
                C32180 +
            ((C10349 - C10348 + C10351 - C10350 + C10353 - C10352) * C2662 +
             (C10355 - C10354 + C10357 - C10356 + C10359 - C10358) * C32199 +
             (C9914 * C268 - C9917 * C251 + C9915 * C1128 - C9918 * C1117 +
              C32233 * C1140 - C9919 * C1123) *
                 C2663 +
             (C9914 * C281 - C9917 * C269 + C9915 * C1144 - C9918 * C1129 +
              C32233 * C1150 - C9919 * C1141) *
                 C32003) *
                C31869) *
               C31918 * C472) *
              C474)) /
            (p * q * std::sqrt(p + q));
    d2ee[51] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31958 * C122 - C113 * C115) * C7430 +
             (C31958 * C136 - C113 * C123) * C7424 + (C982 - C983) * C7431 +
             (C984 - C985) * C7425 + C1004 * C7432 + C1005 * C7426 +
             C6097 * C7433 + C6098 * C32240) *
                C32180 +
            ((C144 - C145) * C7430 + (C146 - C147) * C7424 + C1302 * C7431 +
             C1303 * C7425 + C990 * C7432 + C991 * C7426 + C7533 * C7433 +
             C7534 * C32240) *
                C31869) *
               C577 +
           (((C113 * C349 - C31958 * C359) * C7430 +
             (C113 * C360 - C31958 * C379) * C7424 + (C1636 - C1637) * C7431 +
             (C1638 - C1639) * C7425 + (C1640 - C1641) * C7432 +
             (C1642 - C1643) * C7426 + (C6445 - C6446) * C7433 +
             (C6447 - C6448) * C32240) *
                C32180 +
            ((C584 - C585) * C7430 + (C586 - C587) * C7424 +
             (C1462 - C1463) * C7431 + (C1464 - C1465) * C7425 +
             (C1466 - C1467) * C7432 + (C1468 - C1469) * C7426 +
             (C7895 - C7896) * C7433 + (C7897 - C7898) * C32240) *
                C31869) *
               C578) *
              C471 +
          ((((C983 - C982) * C7430 + (C985 - C984) * C7424 +
             (C987 - C986) * C7431 + (C989 - C988) * C7425 +
             (C992 - C993) * C7432 + (C994 - C995) * C7426 +
             (C6100 - C6099) * C7433 + (C6102 - C6101) * C32240) *
                C32180 +
            (C1304 * C7430 + C1305 * C7424 + C1306 * C7431 + C1307 * C7425 +
             C7763 * C7432 + C7764 * C7426 + (C6269 - C6270) * C7433 +
             (C6271 - C6272) * C32240) *
                C31869) *
               C577 +
           (((C1637 - C1636) * C7430 + (C1639 - C1638) * C7424 +
             (C1641 - C1640) * C7431 + (C1643 - C1642) * C7425 +
             (C6446 - C6445) * C7432 + (C6448 - C6447) * C7426 +
             (C6450 - C6449) * C7433 + (C6452 - C6451) * C32240) *
                C32180 +
            ((C1463 - C1462) * C7430 + (C1465 - C1464) * C7424 +
             (C1467 - C1466) * C7431 + (C1469 - C1468) * C7425 +
             (C7896 - C7895) * C7432 + (C7898 - C7897) * C7426 +
             (C31958 * C6355 - C113 * C6354) * C7433 +
             (C31958 * C6357 - C113 * C6356) * C32240) *
                C31869) *
               C578) *
              C472) *
         C31892) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31958 * C122 - C113 * C115) * C2662 +
             (C31958 * C136 - C113 * C123) * C32199 + (C982 - C983) * C2663 +
             (C984 - C985) * C32003) *
                C2658 +
            ((C144 - C145) * C2662 + (C146 - C147) * C32199 + C1302 * C2663 +
             C1303 * C32003) *
                C2659 +
            C2679 * C2660 + C2680 * C32234) *
               C577 +
           (((C113 * C349 - C31958 * C359) * C2662 +
             (C113 * C360 - C31958 * C379) * C32199 + (C1636 - C1637) * C2663 +
             (C1638 - C1639) * C32003) *
                C2658 +
            ((C584 - C585) * C2662 + (C586 - C587) * C32199 +
             (C1462 - C1463) * C2663 + (C1464 - C1465) * C32003) *
                C2659 +
            ((C588 - C589) * C2662 + (C590 - C591) * C32199 +
             (C1470 - C1471) * C2663 + (C1472 - C1473) * C32003) *
                C2660 +
            ((C592 - C593) * C2662 + (C594 - C595) * C32199 +
             (C3139 - C3140) * C2663 + (C3141 - C3142) * C32003) *
                C32234) *
               C578) *
              C471 +
          ((((C983 - C982) * C2662 + (C985 - C984) * C32199 +
             (C987 - C986) * C2663 + (C989 - C988) * C32003) *
                C2658 +
            (C1304 * C2662 + C1305 * C32199 + C1306 * C2663 + C1307 * C32003) *
                C2659 +
            (C1308 * C2662 + C1309 * C32199 + C1310 * C2663 + C1311 * C32003) *
                C2660 +
            (C3007 * C2662 + C3008 * C32199 + (C833 - C834) * C2663 +
             (C835 - C836) * C32003) *
                C32234) *
               C577 +
           (((C1637 - C1636) * C2662 + (C1639 - C1638) * C32199 +
             (C1641 - C1640) * C2663 + (C1643 - C1642) * C32003) *
                C2658 +
            ((C1463 - C1462) * C2662 + (C1465 - C1464) * C32199 +
             (C1467 - C1466) * C2663 + (C1469 - C1468) * C32003) *
                C2659 +
            ((C1471 - C1470) * C2662 + (C1473 - C1472) * C32199 +
             (C1475 - C1474) * C2663 + (C1477 - C1476) * C32003) *
                C2660 +
            ((C3140 - C3139) * C2662 + (C3142 - C3141) * C32199 +
             (C31958 * C1458 - C113 * C1457) * C2663 +
             (C31958 * C1460 - C113 * C1459) * C32003) *
                C32234) *
               C578) *
              C472) *
         C31892) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C9914 * C122 - C9917 * C115 + C9915 * C359 - C9918 * C349 +
              C32233 * C369 - C9919 * C354) *
                 C2662 +
             (C9914 * C136 - C9917 * C123 + C9915 * C379 - C9918 * C360 +
              C32233 * C384 - C9919 * C370) *
                 C32199 +
             (C10896 - C10897 + C10898 - C10899 + C10900 - C10901) * C2663 +
             (C10902 - C10903 + C10904 - C10905 + C10906 - C10907) * C32003) *
                C32180 +
            ((C9921 - C9922 + C9923 - C9924 + C9925 - C9926) * C2662 +
             (C9927 - C9928 + C9929 - C9930 + C9931 - C9932) * C32199 +
             C12636 * C2663 + C12637 * C32003) *
                C31869) *
               C577 +
           (((C9917 * C349 - C9914 * C359 + C9918 * C354 - C9915 * C369 +
              C9919 * C2028 - C32233 * C2034) *
                 C2662 +
             (C9917 * C360 - C9914 * C379 + C9918 * C370 - C9915 * C384 +
              C9919 * C2035 - C32233 * C2046) *
                 C32199 +
             (C11502 - C11503 + C11504 - C11505 + C11506 - C11507) * C2663 +
             (C11508 - C11509 + C11510 - C11511 + C11512 - C11513) * C32003) *
                C32180 +
            ((C10506 - C10507 + C10508 - C10509 + C10510 - C10511) * C2662 +
             (C10512 - C10513 + C10514 - C10515 + C10516 - C10517) * C32199 +
             (C12834 - C12835 + C12836 - C12837 + C12838 - C12839) * C2663 +
             (C12840 - C12841 + C12842 - C12843 + C12844 - C12845) * C32003) *
                C31869) *
               C578) *
              C471 +
          ((((C10897 - C10896 + C10899 - C10898 + C10901 - C10900) * C2662 +
             (C10903 - C10902 + C10905 - C10904 + C10907 - C10906) * C32199 +
             (C10909 - C10908 + C10911 - C10910 + C10913 - C10912) * C2663 +
             (C10915 - C10914 + C10917 - C10916 + C10919 - C10918) * C32003) *
                C32180 +
            (C12638 * C2662 + C12639 * C32199 +
             (C11198 - C11199 + C11200 - C11201 + C11202 - C11203) * C2663 +
             (C11204 - C11205 + C11206 - C11207 + C11208 - C11209) * C32003) *
                C31869) *
               C577 +
           (((C11503 - C11502 + C11505 - C11504 + C11507 - C11506) * C2662 +
             (C11509 - C11508 + C11511 - C11510 + C11513 - C11512) * C32199 +
             (C11515 - C11514 + C11517 - C11516 + C11519 - C11518) * C2663 +
             (C11521 - C11520 + C11523 - C11522 + C11525 - C11524) * C32003) *
                C32180 +
            ((C12835 - C12834 + C12837 - C12836 + C12839 - C12838) * C2662 +
             (C12841 - C12840 + C12843 - C12842 + C12845 - C12844) * C32199 +
             (C9914 * C1126 - C9917 * C1116 + C9915 * C1136 - C9918 * C1121 +
              C32233 * C7149 - C9919 * C7148) *
                 C2663 +
             (C9914 * C1143 - C9917 * C1127 + C9915 * C1148 - C9918 * C1137 +
              C32233 * C7151 - C9919 * C7150) *
                 C32003) *
                C31869) *
               C578) *
              C472) *
         C31892) /
            (p * q * std::sqrt(p + q));
    d2ee[52] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C31958 * C122 - C113 * C115) * C2662 +
                (C31958 * C136 - C113 * C123) * C32199 + (C982 - C983) * C2663 +
                (C984 - C985) * C32003) *
                   C2658 +
               ((C144 - C145) * C2662 + (C146 - C147) * C32199 + C1302 * C2663 +
                C1303 * C32003) *
                   C2659 +
               C2679 * C2660 + C2680 * C32234) *
                  C31918 * C31904 * C110 +
              (((C145 - C144) * C2662 + (C147 - C146) * C32199 + C1304 * C2663 +
                C1305 * C32003) *
                   C2658 +
               ((C149 - C148) * C2662 + (C151 - C150) * C32199 + C1308 * C2663 +
                C1309 * C32003) *
                   C2659 +
               ((C153 - C152) * C2662 + (C155 - C154) * C32199 +
                (C488 - C489) * C2663 + (C490 - C491) * C32003) *
                   C2660 +
               ((C157 - C156) * C2662 + (C159 - C158) * C32199 +
                (C492 - C493) * C2663 + (C494 - C495) * C32003) *
                   C32234) *
                  C31918 * C31904 * C111 +
              (C2679 * C2658 + C2680 * C2659 +
               (C168 * C2662 + C169 * C32199 + (C493 - C492) * C2663 +
                (C495 - C494) * C32003) *
                   C2660 +
               ((C161 - C160) * C2662 + (C163 - C162) * C32199 +
                (C31958 * C476 - C113 * C475) * C2663 +
                (C31958 * C478 - C113 * C477) * C32003) *
                   C32234) *
                  C31918 * C31904 * C112) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C31958 * C122 - C113 * C115) * C2662 +
                (C31958 * C136 - C113 * C123) * C32199 + (C982 - C983) * C2663 +
                (C984 - C985) * C32003) *
                   C2658 +
               ((C144 - C145) * C2662 + (C146 - C147) * C32199 + C1302 * C2663 +
                C1303 * C32003) *
                   C2659 +
               C2679 * C2660 + C2680 * C32234) *
                  C31918 * C240 +
              (((C983 - C982) * C2662 + (C985 - C984) * C32199 +
                (C987 - C986) * C2663 + (C989 - C988) * C32003) *
                   C2658 +
               (C1304 * C2662 + C1305 * C32199 + C1306 * C2663 +
                C1307 * C32003) *
                   C2659 +
               (C1308 * C2662 + C1309 * C32199 + C1310 * C2663 +
                C1311 * C32003) *
                   C2660 +
               ((C488 - C489) * C2662 + (C490 - C491) * C32199 +
                (C833 - C834) * C2663 + (C835 - C836) * C32003) *
                   C32234) *
                  C31918 * C241 +
              ((C1004 * C2662 + C1005 * C32199 + (C993 - C992) * C2663 +
                (C995 - C994) * C32003) *
                   C2658 +
               (C990 * C2662 + C991 * C32199 + (C997 - C996) * C2663 +
                (C999 - C998) * C32003) *
                   C2659 +
               (C840 * C2662 + C841 * C32199 + (C1001 - C1000) * C2663 +
                (C1003 - C1002) * C32003) *
                   C2660 +
               ((C834 - C833) * C2662 + (C836 - C835) * C32199 +
                (C31958 * C1298 - C113 * C1297) * C2663 +
                (C31958 * C1300 - C113 * C1299) * C32003) *
                   C32234) *
                  C31918 * C242) *
             C31892) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31958 * C122 - C113 * C115) * C2662 +
            (C31958 * C136 - C113 * C123) * C32199 + (C982 - C983) * C2663 +
            (C984 - C985) * C32003) *
               C2658 +
           ((C144 - C145) * C2662 + (C146 - C147) * C32199 + C1302 * C2663 +
            C1303 * C32003) *
               C2659 +
           C2679 * C2660 + C2680 * C32234) *
              C346 +
          (((C113 * C349 - C31958 * C359) * C2662 +
            (C113 * C360 - C31958 * C379) * C32199 + (C1636 - C1637) * C2663 +
            (C1638 - C1639) * C32003) *
               C2658 +
           ((C584 - C585) * C2662 + (C586 - C587) * C32199 +
            (C1462 - C1463) * C2663 + (C1464 - C1465) * C32003) *
               C2659 +
           ((C588 - C589) * C2662 + (C590 - C591) * C32199 +
            (C1470 - C1471) * C2663 + (C1472 - C1473) * C32003) *
               C2660 +
           ((C592 - C593) * C2662 + (C594 - C595) * C32199 +
            (C113 * C684 - C31958 * C692) * C2663 +
            (C113 * C693 - C31958 * C699) * C32003) *
               C32234) *
              C347 +
          (((C31958 * C369 - C113 * C354) * C2662 +
            (C31958 * C384 - C113 * C370) * C32199 +
            (C31958 * C1130 - C113 * C1118) * C2663 +
            (C31958 * C1145 - C113 * C1131) * C32003) *
               C2658 +
           ((C31958 * C371 - C113 * C355) * C2662 +
            (C31958 * C385 - C113 * C372) * C32199 +
            (C31958 * C1134 - C113 * C1120) * C2663 +
            (C31958 * C1147 - C113 * C1135) * C32003) *
               C2659 +
           ((C31958 * C373 - C113 * C356) * C2662 +
            (C31958 * C386 - C113 * C374) * C32199 +
            (C31958 * C1138 - C113 * C1122) * C2663 +
            (C31958 * C1149 - C113 * C1139) * C32003) *
               C2660 +
           ((C31958 * C375 - C113 * C357) * C2662 +
            (C31958 * C387 - C113 * C376) * C32199 +
            (C31958 * C2199 - C113 * C2198) * C2663 +
            (C31958 * C2201 - C113 * C2200) * C32003) *
               C32234) *
              C348) *
         C31904 * C31892) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C31958 * C122 - C113 * C115) * C7430 +
            (C31958 * C136 - C113 * C123) * C7424 + (C982 - C983) * C7431 +
            (C984 - C985) * C7425 + C1004 * C7432 + C1005 * C7426 +
            C6097 * C7433 + C6098 * C32240) *
               C32180 +
           ((C144 - C145) * C7430 + (C146 - C147) * C7424 + C1302 * C7431 +
            C1303 * C7425 + C990 * C7432 + C991 * C7426 +
            (C997 - C996) * C7433 + (C999 - C998) * C32240) *
               C31869) *
              C31918 * C31904 * C110 +
          (((C145 - C144) * C7430 + (C147 - C146) * C7424 + C1304 * C7431 +
            C1305 * C7425 + C1306 * C7432 + C1307 * C7426 +
            (C996 - C997) * C7433 + (C998 - C999) * C32240) *
               C32180 +
           ((C149 - C148) * C7430 + (C151 - C150) * C7424 + C1308 * C7431 +
            C1309 * C7425 + C1310 * C7432 + C1311 * C7426 +
            (C1000 - C1001) * C7433 + (C1002 - C1003) * C32240) *
               C31869) *
              C31918 * C31904 * C111 +
          ((C164 * C7430 + C165 * C7424 + C827 * C7431 + C828 * C7425 +
            C840 * C7432 + C841 * C7426 + (C1001 - C1000) * C7433 +
            (C1003 - C1002) * C32240) *
               C32180 +
           (C166 * C7430 + C167 * C7424 + C2671 * C7431 + C2672 * C7425 +
            (C834 - C833) * C7432 + (C836 - C835) * C7426 +
            (C31958 * C1298 - C113 * C1297) * C7433 +
            (C31958 * C1300 - C113 * C1299) * C32240) *
               C31869) *
              C31918 * C31904 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C31958 * C122 - C113 * C115) * C7430 +
            (C31958 * C136 - C113 * C123) * C7424 + (C982 - C983) * C7431 +
            (C984 - C985) * C7425 + C1004 * C7432 + C1005 * C7426 +
            C6097 * C7433 + C6098 * C32240) *
               C32180 +
           ((C144 - C145) * C7430 + (C146 - C147) * C7424 + C1302 * C7431 +
            C1303 * C7425 + C990 * C7432 + C991 * C7426 + C7533 * C7433 +
            C7534 * C32240) *
               C31869) *
              C31918 * C240 +
          (((C983 - C982) * C7430 + (C985 - C984) * C7424 +
            (C987 - C986) * C7431 + (C989 - C988) * C7425 +
            (C992 - C993) * C7432 + (C994 - C995) * C7426 +
            (C6100 - C6099) * C7433 + (C6102 - C6101) * C32240) *
               C32180 +
           (C1304 * C7430 + C1305 * C7424 + C1306 * C7431 + C1307 * C7425 +
            (C996 - C997) * C7432 + (C998 - C999) * C7426 +
            (C6269 - C6270) * C7433 + (C6271 - C6272) * C32240) *
               C31869) *
              C31918 * C241 +
          ((C1004 * C7430 + C1005 * C7424 + C6097 * C7431 + C6098 * C7425 +
            C6107 * C7432 + C6108 * C7426 + (C6104 - C6103) * C7433 +
            (C6106 - C6105) * C32240) *
               C32180 +
           (C990 * C7430 + C991 * C7424 + C7533 * C7431 + C7534 * C7425 +
            (C6270 - C6269) * C7432 + (C6272 - C6271) * C7426 +
            (C31958 * C6265 - C113 * C6264) * C7433 +
            (C31958 * C6267 - C113 * C6266) * C32240) *
               C31869) *
              C31918 * C242) *
         C31892) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31958 * C122 - C113 * C115) * C7430 +
            (C31958 * C136 - C113 * C123) * C7424 + (C982 - C983) * C7431 +
            (C984 - C985) * C7425 + C1004 * C7432 + C1005 * C7426 +
            C6097 * C7433 + C6098 * C32240) *
               C32180 +
           ((C144 - C145) * C7430 + (C146 - C147) * C7424 + C1302 * C7431 +
            C1303 * C7425 + C990 * C7432 + C991 * C7426 + C7533 * C7433 +
            C7534 * C32240) *
               C31869) *
              C346 +
          (((C113 * C349 - C31958 * C359) * C7430 +
            (C113 * C360 - C31958 * C379) * C7424 + (C1636 - C1637) * C7431 +
            (C1638 - C1639) * C7425 + (C1640 - C1641) * C7432 +
            (C1642 - C1643) * C7426 + (C6445 - C6446) * C7433 +
            (C6447 - C6448) * C32240) *
               C32180 +
           ((C584 - C585) * C7430 + (C586 - C587) * C7424 +
            (C1462 - C1463) * C7431 + (C1464 - C1465) * C7425 +
            (C1466 - C1467) * C7432 + (C1468 - C1469) * C7426 +
            (C113 * C1624 - C31958 * C1628) * C7433 +
            (C113 * C1629 - C31958 * C1633) * C32240) *
               C31869) *
              C347 +
          (((C31958 * C369 - C113 * C354) * C7430 +
            (C31958 * C384 - C113 * C370) * C7424 +
            (C31958 * C1130 - C113 * C1118) * C7431 +
            (C31958 * C1145 - C113 * C1131) * C7425 +
            (C31958 * C1132 - C113 * C1119) * C7432 +
            (C31958 * C1146 - C113 * C1133) * C7426 +
            (C31958 * C6175 - C113 * C6171) * C7433 +
            (C31958 * C6180 - C113 * C6176) * C32240) *
               C32180 +
           ((C31958 * C371 - C113 * C355) * C7430 +
            (C31958 * C385 - C113 * C372) * C7424 +
            (C31958 * C1134 - C113 * C1120) * C7431 +
            (C31958 * C1147 - C113 * C1135) * C7425 +
            (C31958 * C1136 - C113 * C1121) * C7432 +
            (C31958 * C1148 - C113 * C1137) * C7426 +
            (C31958 * C6987 - C113 * C6986) * C7433 +
            (C31958 * C6989 - C113 * C6988) * C32240) *
               C31869) *
              C348) *
         C31904 * C31892) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C9914 * C122 - C9917 * C115 + C9915 * C359 - C9918 * C349 +
             C32233 * C369 - C9919 * C354) *
                C2662 +
            (C9914 * C136 - C9917 * C123 + C9915 * C379 - C9918 * C360 +
             C32233 * C384 - C9919 * C370) *
                C32199 +
            (C10896 - C10897 + C10898 - C10899 + C10900 - C10901) * C2663 +
            (C10902 - C10903 + C10904 - C10905 + C10906 - C10907) * C32003) *
               C32180 +
           ((C9921 - C9922 + C9923 - C9924 + C9925 - C9926) * C2662 +
            (C9927 - C9928 + C9929 - C9930 + C9931 - C9932) * C32199 +
            (C10337 - C10336 + C10339 - C10338 + C10341 - C10340) * C2663 +
            (C10343 - C10342 + C10345 - C10344 + C10347 - C10346) * C32003) *
               C31869) *
              C31918 * C31904 * C110 +
          (((C9922 - C9921 + C9924 - C9923 + C9926 - C9925) * C2662 +
            (C9928 - C9927 + C9930 - C9929 + C9932 - C9931) * C32199 +
            (C10336 - C10337 + C10338 - C10339 + C10340 - C10341) * C2663 +
            (C10342 - C10343 + C10344 - C10345 + C10346 - C10347) * C32003) *
               C32180 +
           ((C9934 - C9933 + C9936 - C9935 + C9938 - C9937) * C2662 +
            (C9940 - C9939 + C9942 - C9941 + C9944 - C9943) * C32199 +
            (C10348 - C10349 + C10350 - C10351 + C10352 - C10353) * C2663 +
            (C10354 - C10355 + C10356 - C10357 + C10358 - C10359) * C32003) *
               C31869) *
              C31918 * C31904 * C111 +
          ((C9965 * C2662 + C9966 * C32199 +
            (C10349 - C10348 + C10351 - C10350 + C10353 - C10352) * C2663 +
            (C10355 - C10354 + C10357 - C10356 + C10359 - C10358) * C32003) *
               C32180 +
           ((C9946 - C9945 + C9948 - C9947 + C9950 - C9949) * C2662 +
            (C9952 - C9951 + C9954 - C9953 + C9956 - C9955) * C32199 +
            (C9914 * C260 - C9917 * C247 + C9915 * C692 - C9918 * C684 +
             C32233 * C2199 - C9919 * C2198) *
                C2663 +
            (C9914 * C277 - C9917 * C261 + C9915 * C699 - C9918 * C693 +
             C32233 * C2201 - C9919 * C2200) *
                C32003) *
               C31869) *
              C31918 * C31904 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C9914 * C122 - C9917 * C115 + C9915 * C359 - C9918 * C349 +
             C32233 * C369 - C9919 * C354) *
                C2662 +
            (C9914 * C136 - C9917 * C123 + C9915 * C379 - C9918 * C360 +
             C32233 * C384 - C9919 * C370) *
                C32199 +
            (C10896 - C10897 + C10898 - C10899 + C10900 - C10901) * C2663 +
            (C10902 - C10903 + C10904 - C10905 + C10906 - C10907) * C32003) *
               C32180 +
           ((C9921 - C9922 + C9923 - C9924 + C9925 - C9926) * C2662 +
            (C9927 - C9928 + C9929 - C9930 + C9931 - C9932) * C32199 +
            (C10337 - C10336 + C10339 - C10338 + C10341 - C10340) * C2663 +
            (C10343 - C10342 + C10345 - C10344 + C10347 - C10346) * C32003) *
               C31869) *
              C31918 * C240 +
          (((C10897 - C10896 + C10899 - C10898 + C10901 - C10900) * C2662 +
            (C10903 - C10902 + C10905 - C10904 + C10907 - C10906) * C32199 +
            (C10909 - C10908 + C10911 - C10910 + C10913 - C10912) * C2663 +
            (C10915 - C10914 + C10917 - C10916 + C10919 - C10918) * C32003) *
               C32180 +
           ((C10336 - C10337 + C10338 - C10339 + C10340 - C10341) * C2662 +
            (C10342 - C10343 + C10344 - C10345 + C10346 - C10347) * C32199 +
            (C11198 - C11199 + C11200 - C11201 + C11202 - C11203) * C2663 +
            (C11204 - C11205 + C11206 - C11207 + C11208 - C11209) * C32003) *
               C31869) *
              C31918 * C241 +
          ((C10940 * C2662 + C10941 * C32199 +
            (C10921 - C10920 + C10923 - C10922 + C10925 - C10924) * C2663 +
            (C10927 - C10926 + C10929 - C10928 + C10931 - C10930) * C32003) *
               C32180 +
           ((C11199 - C11198 + C11201 - C11200 + C11203 - C11202) * C2662 +
            (C11205 - C11204 + C11207 - C11206 + C11209 - C11208) * C32199 +
            (C9914 * C965 - C9917 * C958 + C9915 * C1628 - C9918 * C1624 +
             C32233 * C6987 - C9919 * C6986) *
                C2663 +
            (C9914 * C976 - C9917 * C966 + C9915 * C1633 - C9918 * C1629 +
             C32233 * C6989 - C9919 * C6988) *
                C32003) *
               C31869) *
              C31918 * C242) *
         C31892) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C9914 * C122 - C9917 * C115 + C9915 * C359 - C9918 * C349 +
             C32233 * C369 - C9919 * C354) *
                C2662 +
            (C9914 * C136 - C9917 * C123 + C9915 * C379 - C9918 * C360 +
             C32233 * C384 - C9919 * C370) *
                C32199 +
            (C10896 - C10897 + C10898 - C10899 + C10900 - C10901) * C2663 +
            (C10902 - C10903 + C10904 - C10905 + C10906 - C10907) * C32003) *
               C32180 +
           ((C9921 - C9922 + C9923 - C9924 + C9925 - C9926) * C2662 +
            (C9927 - C9928 + C9929 - C9930 + C9931 - C9932) * C32199 +
            (C10337 - C10336 + C10339 - C10338 + C10341 - C10340) * C2663 +
            (C10343 - C10342 + C10345 - C10344 + C10347 - C10346) * C32003) *
               C31869) *
              C346 +
          (((C9917 * C349 - C9914 * C359 + C9918 * C354 - C9915 * C369 +
             C9919 * C2028 - C32233 * C2034) *
                C2662 +
            (C9917 * C360 - C9914 * C379 + C9918 * C370 - C9915 * C384 +
             C9919 * C2035 - C32233 * C2046) *
                C32199 +
            (C11502 - C11503 + C11504 - C11505 + C11506 - C11507) * C2663 +
            (C11508 - C11509 + C11510 - C11511 + C11512 - C11513) * C32003) *
               C32180 +
           ((C10506 - C10507 + C10508 - C10509 + C10510 - C10511) * C2662 +
            (C10512 - C10513 + C10514 - C10515 + C10516 - C10517) * C32199 +
            (C9917 * C682 - C9914 * C688 + C9918 * C1120 - C9915 * C1134 +
             C9919 * C2547 - C32233 * C2551) *
                C2663 +
            (C9917 * C689 - C9914 * C697 + C9918 * C1135 - C9915 * C1147 +
             C9919 * C2552 - C32233 * C2556) *
                C32003) *
               C31869) *
              C347 +
          (((C9914 * C369 - C9917 * C354 + C9915 * C2034 - C9918 * C2028 +
             C32233 * C2040 - C9919 * C2031) *
                C2662 +
            (C9914 * C384 - C9917 * C370 + C9915 * C2046 - C9918 * C2035 +
             C32233 * C2049 - C9919 * C2041) *
                C32199 +
            (C9914 * C1130 - C9917 * C1118 + C9915 * C2549 - C9918 * C2546 +
             C32233 * C6833 - C9919 * C6829) *
                C2663 +
            (C9914 * C1145 - C9917 * C1131 + C9915 * C2555 - C9918 * C2550 +
             C32233 * C6838 - C9919 * C6834) *
                C32003) *
               C32180 +
           ((C9914 * C371 - C9917 * C355 + C9915 * C2036 - C9918 * C2029 +
             C32233 * C2042 - C9919 * C2032) *
                C2662 +
            (C9914 * C385 - C9917 * C372 + C9915 * C2047 - C9918 * C2037 +
             C32233 * C2050 - C9919 * C2043) *
                C32199 +
            (C9914 * C1134 - C9917 * C1120 + C9915 * C2551 - C9918 * C2547 +
             C32233 * C11812 - C9919 * C11811) *
                C2663 +
            (C9914 * C1147 - C9917 * C1135 + C9915 * C2556 - C9918 * C2552 +
             C32233 * C11814 - C9919 * C11813) *
                C32003) *
               C31869) *
              C348) *
         C31904 * C31892) /
            (p * q * std::sqrt(p + q));
    d2ee[53] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31958 * C122 - C113 * C115) * C7430 +
             (C31958 * C136 - C113 * C123) * C7424 + (C982 - C983) * C7431 +
             (C984 - C985) * C7425 + C1004 * C7432 + C1005 * C7426 +
             C6097 * C7433 + C6098 * C32240) *
                C32180 +
            ((C144 - C145) * C7430 + (C146 - C147) * C7424 + C1302 * C7431 +
             C1303 * C7425 + C990 * C7432 + C991 * C7426 + C7533 * C7433 +
             C7534 * C32240) *
                C31869) *
               C577 +
           (((C113 * C349 - C31958 * C359) * C7430 +
             (C113 * C360 - C31958 * C379) * C7424 + (C1636 - C1637) * C7431 +
             (C1638 - C1639) * C7425 + (C1640 - C1641) * C7432 +
             (C1642 - C1643) * C7426 + (C6445 - C6446) * C7433 +
             (C6447 - C6448) * C32240) *
                C32180 +
            ((C584 - C585) * C7430 + (C586 - C587) * C7424 +
             (C1462 - C1463) * C7431 + (C1464 - C1465) * C7425 +
             (C1466 - C1467) * C7432 + (C1468 - C1469) * C7426 +
             (C7895 - C7896) * C7433 + (C7897 - C7898) * C32240) *
                C31869) *
               C578) *
              C31904 * C473 +
          ((((C145 - C144) * C7430 + (C147 - C146) * C7424 + C1304 * C7431 +
             C1305 * C7425 + C1306 * C7432 + C1307 * C7426 + C7763 * C7433 +
             C7764 * C32240) *
                C32180 +
            ((C149 - C148) * C7430 + (C151 - C150) * C7424 + C1308 * C7431 +
             C1309 * C7425 + C1310 * C7432 + C1311 * C7426 +
             (C1000 - C1001) * C7433 + (C1002 - C1003) * C32240) *
                C31869) *
               C577 +
           (((C585 - C584) * C7430 + (C587 - C586) * C7424 +
             (C1463 - C1462) * C7431 + (C1465 - C1464) * C7425 +
             (C1467 - C1466) * C7432 + (C1469 - C1468) * C7426 +
             (C7896 - C7895) * C7433 + (C7898 - C7897) * C32240) *
                C32180 +
            ((C589 - C588) * C7430 + (C591 - C590) * C7424 +
             (C1471 - C1470) * C7431 + (C1473 - C1472) * C7425 +
             (C1475 - C1474) * C7432 + (C1477 - C1476) * C7426 +
             (C31958 * C1630 - C113 * C1625) * C7433 +
             (C31958 * C1634 - C113 * C1631) * C32240) *
                C31869) *
               C578) *
              C31904 * C474)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31958 * C122 - C113 * C115) * C2662 +
             (C31958 * C136 - C113 * C123) * C32199 + (C982 - C983) * C2663 +
             (C984 - C985) * C32003) *
                C2658 +
            ((C144 - C145) * C2662 + (C146 - C147) * C32199 + C1302 * C2663 +
             C1303 * C32003) *
                C2659 +
            C2679 * C2660 + C2680 * C32234) *
               C577 +
           (((C113 * C349 - C31958 * C359) * C2662 +
             (C113 * C360 - C31958 * C379) * C32199 + (C1636 - C1637) * C2663 +
             (C1638 - C1639) * C32003) *
                C2658 +
            ((C584 - C585) * C2662 + (C586 - C587) * C32199 +
             (C1462 - C1463) * C2663 + (C1464 - C1465) * C32003) *
                C2659 +
            ((C588 - C589) * C2662 + (C590 - C591) * C32199 +
             (C1470 - C1471) * C2663 + (C1472 - C1473) * C32003) *
                C2660 +
            ((C592 - C593) * C2662 + (C594 - C595) * C32199 +
             (C3139 - C3140) * C2663 + (C3141 - C3142) * C32003) *
                C32234) *
               C578) *
              C31904 * C473 +
          ((((C145 - C144) * C2662 + (C147 - C146) * C32199 + C1304 * C2663 +
             C1305 * C32003) *
                C2658 +
            ((C149 - C148) * C2662 + (C151 - C150) * C32199 + C1308 * C2663 +
             C1309 * C32003) *
                C2659 +
            ((C153 - C152) * C2662 + (C155 - C154) * C32199 + C3007 * C2663 +
             C3008 * C32003) *
                C2660 +
            ((C157 - C156) * C2662 + (C159 - C158) * C32199 +
             (C492 - C493) * C2663 + (C494 - C495) * C32003) *
                C32234) *
               C577 +
           (((C585 - C584) * C2662 + (C587 - C586) * C32199 +
             (C1463 - C1462) * C2663 + (C1465 - C1464) * C32003) *
                C2658 +
            ((C589 - C588) * C2662 + (C591 - C590) * C32199 +
             (C1471 - C1470) * C2663 + (C1473 - C1472) * C32003) *
                C2659 +
            ((C593 - C592) * C2662 + (C595 - C594) * C32199 +
             (C3140 - C3139) * C2663 + (C3142 - C3141) * C32003) *
                C2660 +
            ((C597 - C596) * C2662 + (C599 - C598) * C32199 +
             (C31958 * C694 - C113 * C685) * C2663 +
             (C31958 * C700 - C113 * C695) * C32003) *
                C32234) *
               C578) *
              C31904 * C474)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C9914 * C122 - C9917 * C115 + C9915 * C359 - C9918 * C349 +
              C32233 * C369 - C9919 * C354) *
                 C2662 +
             (C9914 * C136 - C9917 * C123 + C9915 * C379 - C9918 * C360 +
              C32233 * C384 - C9919 * C370) *
                 C32199 +
             (C10896 - C10897 + C10898 - C10899 + C10900 - C10901) * C2663 +
             (C10902 - C10903 + C10904 - C10905 + C10906 - C10907) * C32003) *
                C32180 +
            ((C9921 - C9922 + C9923 - C9924 + C9925 - C9926) * C2662 +
             (C9927 - C9928 + C9929 - C9930 + C9931 - C9932) * C32199 +
             C12636 * C2663 + C12637 * C32003) *
                C31869) *
               C577 +
           (((C9917 * C349 - C9914 * C359 + C9918 * C354 - C9915 * C369 +
              C9919 * C2028 - C32233 * C2034) *
                 C2662 +
             (C9917 * C360 - C9914 * C379 + C9918 * C370 - C9915 * C384 +
              C9919 * C2035 - C32233 * C2046) *
                 C32199 +
             (C11502 - C11503 + C11504 - C11505 + C11506 - C11507) * C2663 +
             (C11508 - C11509 + C11510 - C11511 + C11512 - C11513) * C32003) *
                C32180 +
            ((C10506 - C10507 + C10508 - C10509 + C10510 - C10511) * C2662 +
             (C10512 - C10513 + C10514 - C10515 + C10516 - C10517) * C32199 +
             (C12834 - C12835 + C12836 - C12837 + C12838 - C12839) * C2663 +
             (C12840 - C12841 + C12842 - C12843 + C12844 - C12845) * C32003) *
                C31869) *
               C578) *
              C31904 * C473 +
          ((((C9922 - C9921 + C9924 - C9923 + C9926 - C9925) * C2662 +
             (C9928 - C9927 + C9930 - C9929 + C9932 - C9931) * C32199 +
             C12638 * C2663 + C12639 * C32003) *
                C32180 +
            ((C9934 - C9933 + C9936 - C9935 + C9938 - C9937) * C2662 +
             (C9940 - C9939 + C9942 - C9941 + C9944 - C9943) * C32199 +
             (C10348 - C10349 + C10350 - C10351 + C10352 - C10353) * C2663 +
             (C10354 - C10355 + C10356 - C10357 + C10358 - C10359) * C32003) *
                C31869) *
               C577 +
           (((C10507 - C10506 + C10509 - C10508 + C10511 - C10510) * C2662 +
             (C10513 - C10512 + C10515 - C10514 + C10517 - C10516) * C32199 +
             (C12835 - C12834 + C12837 - C12836 + C12839 - C12838) * C2663 +
             (C12841 - C12840 + C12843 - C12842 + C12845 - C12844) * C32003) *
                C32180 +
            ((C10519 - C10518 + C10521 - C10520 + C10523 - C10522) * C2662 +
             (C10525 - C10524 + C10527 - C10526 + C10529 - C10528) * C32199 +
             (C9914 * C690 - C9917 * C683 + C9915 * C1138 - C9918 * C1122 +
              C32233 * C2553 - C9919 * C2548) *
                 C2663 +
             (C9914 * C698 - C9917 * C691 + C9915 * C1149 - C9918 * C1139 +
              C32233 * C2557 - C9919 * C2554) *
                 C32003) *
                C31869) *
               C578) *
              C31904 * C474)) /
            (p * q * std::sqrt(p + q));
    d2ee[54] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31958 * C122 - C113 * C115) * C2662 +
            (C31958 * C136 - C113 * C123) * C32199 + (C982 - C983) * C2663 +
            (C984 - C985) * C32003) *
               C2658 +
           ((C144 - C145) * C2662 + (C146 - C147) * C32199 + C1302 * C2663 +
            C1303 * C32003) *
               C2659 +
           C2679 * C2660 + C2680 * C32234) *
              C31918 * C240 +
          (((C983 - C982) * C2662 + (C985 - C984) * C32199 +
            (C987 - C986) * C2663 + (C989 - C988) * C32003) *
               C2658 +
           (C1304 * C2662 + C1305 * C32199 + C1306 * C2663 + C1307 * C32003) *
               C2659 +
           (C1308 * C2662 + C1309 * C32199 + C1310 * C2663 + C1311 * C32003) *
               C2660 +
           ((C488 - C489) * C2662 + (C490 - C491) * C32199 +
            (C833 - C834) * C2663 + (C835 - C836) * C32003) *
               C32234) *
              C31918 * C241 +
          ((C1004 * C2662 + C1005 * C32199 + (C993 - C992) * C2663 +
            (C995 - C994) * C32003) *
               C2658 +
           (C990 * C2662 + C991 * C32199 + (C997 - C996) * C2663 +
            (C999 - C998) * C32003) *
               C2659 +
           (C840 * C2662 + C841 * C32199 + (C1001 - C1000) * C2663 +
            (C1003 - C1002) * C32003) *
               C2660 +
           ((C834 - C833) * C2662 + (C836 - C835) * C32199 +
            (C31958 * C1298 - C113 * C1297) * C2663 +
            (C31958 * C1300 - C113 * C1299) * C32003) *
               C32234) *
              C31918 * C242) *
         C31892) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31958 * C122 - C113 * C115) * C2662 +
            (C31958 * C136 - C113 * C123) * C32199 + (C982 - C983) * C2663 +
            (C984 - C985) * C32003) *
               C2658 +
           ((C144 - C145) * C2662 + (C146 - C147) * C32199 + C1302 * C2663 +
            C1303 * C32003) *
               C2659 +
           C2679 * C2660 + C2680 * C32234) *
              C31918 * C31904 * C110 +
          (((C145 - C144) * C2662 + (C147 - C146) * C32199 + C1304 * C2663 +
            C1305 * C32003) *
               C2658 +
           ((C149 - C148) * C2662 + (C151 - C150) * C32199 + C1308 * C2663 +
            C1309 * C32003) *
               C2659 +
           ((C153 - C152) * C2662 + (C155 - C154) * C32199 +
            (C488 - C489) * C2663 + (C490 - C491) * C32003) *
               C2660 +
           ((C157 - C156) * C2662 + (C159 - C158) * C32199 +
            (C492 - C493) * C2663 + (C494 - C495) * C32003) *
               C32234) *
              C31918 * C31904 * C111 +
          (C2679 * C2658 + C2680 * C2659 +
           (C168 * C2662 + C169 * C32199 + (C493 - C492) * C2663 +
            (C495 - C494) * C32003) *
               C2660 +
           ((C161 - C160) * C2662 + (C163 - C162) * C32199 +
            (C31958 * C476 - C113 * C475) * C2663 +
            (C31958 * C478 - C113 * C477) * C32003) *
               C32234) *
              C31918 * C31904 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31958 * C122 - C113 * C115) * C7430 +
            (C31958 * C136 - C113 * C123) * C7424 + (C982 - C983) * C7431 +
            (C984 - C985) * C7425 + C1004 * C7432 + C1005 * C7426 +
            C6097 * C7433 + C6098 * C32240) *
               C32180 +
           ((C144 - C145) * C7430 + (C146 - C147) * C7424 + C1302 * C7431 +
            C1303 * C7425 + C990 * C7432 + C991 * C7426 +
            (C997 - C996) * C7433 + (C999 - C998) * C32240) *
               C31869) *
              C31918 * C31904 * C110 +
          (((C145 - C144) * C7430 + (C147 - C146) * C7424 + C1304 * C7431 +
            C1305 * C7425 + C1306 * C7432 + C1307 * C7426 +
            (C996 - C997) * C7433 + (C998 - C999) * C32240) *
               C32180 +
           ((C149 - C148) * C7430 + (C151 - C150) * C7424 + C1308 * C7431 +
            C1309 * C7425 + C1310 * C7432 + C1311 * C7426 +
            (C1000 - C1001) * C7433 + (C1002 - C1003) * C32240) *
               C31869) *
              C31918 * C31904 * C111 +
          ((C164 * C7430 + C165 * C7424 + C827 * C7431 + C828 * C7425 +
            C840 * C7432 + C841 * C7426 + (C1001 - C1000) * C7433 +
            (C1003 - C1002) * C32240) *
               C32180 +
           (C166 * C7430 + C167 * C7424 + C2671 * C7431 + C2672 * C7425 +
            (C834 - C833) * C7432 + (C836 - C835) * C7426 +
            (C31958 * C1298 - C113 * C1297) * C7433 +
            (C31958 * C1300 - C113 * C1299) * C32240) *
               C31869) *
              C31918 * C31904 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31958 * C122 - C113 * C115) * C7430 +
            (C31958 * C136 - C113 * C123) * C7424 + (C982 - C983) * C7431 +
            (C984 - C985) * C7425 + C1004 * C7432 + C1005 * C7426 +
            C6097 * C7433 + C6098 * C32240) *
               C32180 +
           ((C144 - C145) * C7430 + (C146 - C147) * C7424 + C1302 * C7431 +
            C1303 * C7425 + C990 * C7432 + C991 * C7426 + C7533 * C7433 +
            C7534 * C32240) *
               C31869) *
              C31918 * C240 +
          (((C983 - C982) * C7430 + (C985 - C984) * C7424 +
            (C987 - C986) * C7431 + (C989 - C988) * C7425 +
            (C992 - C993) * C7432 + (C994 - C995) * C7426 +
            (C6100 - C6099) * C7433 + (C6102 - C6101) * C32240) *
               C32180 +
           (C1304 * C7430 + C1305 * C7424 + C1306 * C7431 + C1307 * C7425 +
            (C996 - C997) * C7432 + (C998 - C999) * C7426 +
            (C6269 - C6270) * C7433 + (C6271 - C6272) * C32240) *
               C31869) *
              C31918 * C241 +
          ((C1004 * C7430 + C1005 * C7424 + C6097 * C7431 + C6098 * C7425 +
            C6107 * C7432 + C6108 * C7426 + (C6104 - C6103) * C7433 +
            (C6106 - C6105) * C32240) *
               C32180 +
           (C990 * C7430 + C991 * C7424 + C7533 * C7431 + C7534 * C7425 +
            (C6270 - C6269) * C7432 + (C6272 - C6271) * C7426 +
            (C31958 * C6265 - C113 * C6264) * C7433 +
            (C31958 * C6267 - C113 * C6266) * C32240) *
               C31869) *
              C31918 * C242) *
         C31892) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C9914 * C122 - C9917 * C115 + C9915 * C359 - C9918 * C349 +
             C32233 * C369 - C9919 * C354) *
                C2662 +
            (C9914 * C136 - C9917 * C123 + C9915 * C379 - C9918 * C360 +
             C32233 * C384 - C9919 * C370) *
                C32199 +
            (C10896 - C10897 + C10898 - C10899 + C10900 - C10901) * C2663 +
            (C10902 - C10903 + C10904 - C10905 + C10906 - C10907) * C32003) *
               C32180 +
           ((C9921 - C9922 + C9923 - C9924 + C9925 - C9926) * C2662 +
            (C9927 - C9928 + C9929 - C9930 + C9931 - C9932) * C32199 +
            (C10337 - C10336 + C10339 - C10338 + C10341 - C10340) * C2663 +
            (C10343 - C10342 + C10345 - C10344 + C10347 - C10346) * C32003) *
               C31869) *
              C31918 * C31904 * C110 +
          (((C9922 - C9921 + C9924 - C9923 + C9926 - C9925) * C2662 +
            (C9928 - C9927 + C9930 - C9929 + C9932 - C9931) * C32199 +
            (C10336 - C10337 + C10338 - C10339 + C10340 - C10341) * C2663 +
            (C10342 - C10343 + C10344 - C10345 + C10346 - C10347) * C32003) *
               C32180 +
           ((C9934 - C9933 + C9936 - C9935 + C9938 - C9937) * C2662 +
            (C9940 - C9939 + C9942 - C9941 + C9944 - C9943) * C32199 +
            (C10348 - C10349 + C10350 - C10351 + C10352 - C10353) * C2663 +
            (C10354 - C10355 + C10356 - C10357 + C10358 - C10359) * C32003) *
               C31869) *
              C31918 * C31904 * C111 +
          ((C9965 * C2662 + C9966 * C32199 +
            (C10349 - C10348 + C10351 - C10350 + C10353 - C10352) * C2663 +
            (C10355 - C10354 + C10357 - C10356 + C10359 - C10358) * C32003) *
               C32180 +
           ((C9946 - C9945 + C9948 - C9947 + C9950 - C9949) * C2662 +
            (C9952 - C9951 + C9954 - C9953 + C9956 - C9955) * C32199 +
            (C9914 * C260 - C9917 * C247 + C9915 * C692 - C9918 * C684 +
             C32233 * C2199 - C9919 * C2198) *
                C2663 +
            (C9914 * C277 - C9917 * C261 + C9915 * C699 - C9918 * C693 +
             C32233 * C2201 - C9919 * C2200) *
                C32003) *
               C31869) *
              C31918 * C31904 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C9914 * C122 - C9917 * C115 + C9915 * C359 - C9918 * C349 +
             C32233 * C369 - C9919 * C354) *
                C2662 +
            (C9914 * C136 - C9917 * C123 + C9915 * C379 - C9918 * C360 +
             C32233 * C384 - C9919 * C370) *
                C32199 +
            (C10896 - C10897 + C10898 - C10899 + C10900 - C10901) * C2663 +
            (C10902 - C10903 + C10904 - C10905 + C10906 - C10907) * C32003) *
               C32180 +
           ((C9921 - C9922 + C9923 - C9924 + C9925 - C9926) * C2662 +
            (C9927 - C9928 + C9929 - C9930 + C9931 - C9932) * C32199 +
            (C10337 - C10336 + C10339 - C10338 + C10341 - C10340) * C2663 +
            (C10343 - C10342 + C10345 - C10344 + C10347 - C10346) * C32003) *
               C31869) *
              C31918 * C240 +
          (((C10897 - C10896 + C10899 - C10898 + C10901 - C10900) * C2662 +
            (C10903 - C10902 + C10905 - C10904 + C10907 - C10906) * C32199 +
            (C10909 - C10908 + C10911 - C10910 + C10913 - C10912) * C2663 +
            (C10915 - C10914 + C10917 - C10916 + C10919 - C10918) * C32003) *
               C32180 +
           ((C10336 - C10337 + C10338 - C10339 + C10340 - C10341) * C2662 +
            (C10342 - C10343 + C10344 - C10345 + C10346 - C10347) * C32199 +
            (C11198 - C11199 + C11200 - C11201 + C11202 - C11203) * C2663 +
            (C11204 - C11205 + C11206 - C11207 + C11208 - C11209) * C32003) *
               C31869) *
              C31918 * C241 +
          ((C10940 * C2662 + C10941 * C32199 +
            (C10921 - C10920 + C10923 - C10922 + C10925 - C10924) * C2663 +
            (C10927 - C10926 + C10929 - C10928 + C10931 - C10930) * C32003) *
               C32180 +
           ((C11199 - C11198 + C11201 - C11200 + C11203 - C11202) * C2662 +
            (C11205 - C11204 + C11207 - C11206 + C11209 - C11208) * C32199 +
            (C9914 * C965 - C9917 * C958 + C9915 * C1628 - C9918 * C1624 +
             C32233 * C6987 - C9919 * C6986) *
                C2663 +
            (C9914 * C976 - C9917 * C966 + C9915 * C1633 - C9918 * C1629 +
             C32233 * C6989 - C9919 * C6988) *
                C32003) *
               C31869) *
              C31918 * C242) *
         C31892) /
            (p * q * std::sqrt(p + q));
    d2ee[55] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C32200 * C122 - C3372 * C115 + C32045 * C359 - C3373 * C349) *
                C7430 +
            (C32200 * C136 - C3372 * C123 + C32045 * C379 - C3373 * C360) *
                C7424 +
            (C4364 - C4365 + C4366 - C4367) * C7431 +
            (C4368 - C4369 + C4370 - C4371) * C7425 + C8345 * C7432 +
            C8346 * C7426 + C9307 * C7433 + C9308 * C32240) *
               C31859 * C31918 * C471 +
           ((C4365 - C4364 + C4367 - C4366) * C7430 +
            (C4369 - C4368 + C4371 - C4370) * C7424 +
            (C4372 - C4373 + C4374 - C4375) * C7431 +
            (C4376 - C4377 + C4378 - C4379) * C7425 +
            (C8329 - C8330 + C8331 - C8332) * C7432 +
            (C8333 - C8334 + C8335 - C8336) * C7426 +
            (C9299 - C9300 + C9301 - C9302) * C7433 +
            (C9303 - C9304 + C9305 - C9306) * C32240) *
               C31859 * C31918 * C472) *
              C473 +
          (((C3376 - C3375 + C3378 - C3377) * C7430 +
            (C3380 - C3379 + C3382 - C3381) * C7424 + C4750 * C7431 +
            C4751 * C7425 + C8693 * C7432 + C8694 * C7426 +
            (C8337 - C8338 + C8339 - C8340) * C7433 +
            (C8341 - C8342 + C8343 - C8344) * C32240) *
               C31859 * C31918 * C471 +
           (C4748 * C7430 + C4749 * C7424 + C8347 * C7431 + C8348 * C7425 +
            (C8338 - C8337 + C8340 - C8339) * C7432 +
            (C8342 - C8341 + C8344 - C8343) * C7426 +
            (C32200 * C971 - C3372 * C961 + C32045 * C6355 - C3373 * C6354) *
                C7433 +
            (C32200 * C979 - C3372 * C972 + C32045 * C6357 - C3373 * C6356) *
                C32240) *
               C31859 * C31918 * C472) *
              C474)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C32200 * C122 - C3372 * C115 + C32045 * C359 - C3373 * C349) *
                 C2662 +
             (C32200 * C136 - C3372 * C123 + C32045 * C379 - C3373 * C360) *
                 C32199 +
             (C4364 - C4365 + C4366 - C4367) * C2663 +
             (C4368 - C4369 + C4370 - C4371) * C32003) *
                C814 +
            ((C3375 - C3376 + C3377 - C3378) * C2662 +
             (C3379 - C3380 + C3381 - C3382) * C32199 + C4748 * C2663 +
             C4749 * C32003) *
                C815 +
            C4217 * C32219) *
               C31918 * C471 +
           (((C4365 - C4364 + C4367 - C4366) * C2662 +
             (C4369 - C4368 + C4371 - C4370) * C32199 +
             (C4372 - C4373 + C4374 - C4375) * C2663 +
             (C4376 - C4377 + C4378 - C4379) * C32003) *
                C814 +
            (C4750 * C2662 + C4751 * C32199 +
             (C4380 - C4381 + C4382 - C4383) * C2663 +
             (C4384 - C4385 + C4386 - C4387) * C32003) *
                C815 +
            (C4752 * C2662 + C4753 * C32199 +
             (C4388 - C4389 + C4390 - C4391) * C2663 +
             (C4392 - C4393 + C4394 - C4395) * C32003) *
                C32219) *
               C31918 * C472) *
              C473 +
          ((((C3376 - C3375 + C3378 - C3377) * C2662 +
             (C3380 - C3379 + C3382 - C3381) * C32199 + C4750 * C2663 +
             C4751 * C32003) *
                C814 +
            ((C3384 - C3383 + C3386 - C3385) * C2662 +
             (C3388 - C3387 + C3390 - C3389) * C32199 + C4752 * C2663 +
             C4753 * C32003) *
                C815 +
            ((C3392 - C3391 + C3394 - C3393) * C2662 +
             (C3396 - C3395 + C3398 - C3397) * C32199 +
             (C3767 - C3768 + C3769 - C3770) * C2663 +
             (C3771 - C3772 + C3773 - C3774) * C32003) *
                C32219) *
               C31918 * C471 +
           ((C4748 * C2662 + C4749 * C32199 +
             (C4381 - C4380 + C4383 - C4382) * C2663 +
             (C4385 - C4384 + C4387 - C4386) * C32003) *
                C814 +
            (C4212 * C2662 + C4213 * C32199 +
             (C4389 - C4388 + C4391 - C4390) * C2663 +
             (C4393 - C4392 + C4395 - C4394) * C32003) *
                C815 +
            ((C3768 - C3767 + C3770 - C3769) * C2662 +
             (C3772 - C3771 + C3774 - C3773) * C32199 +
             (C32200 * C270 - C3372 * C252 + C32045 * C1458 - C3373 * C1457) *
                 C2663 +
             (C32200 * C282 - C3372 * C271 + C32045 * C1460 - C3373 * C1459) *
                 C32003) *
                C32219) *
               C31918 * C472) *
              C474)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C13137 * C122 - C13141 * C115 + C13138 * C359 - C13142 * C349 +
             C13139 * C369 - C13143 * C354 + C32246 * C2034 - C13144 * C2028) *
                C2662 +
            (C13137 * C136 - C13141 * C123 + C13138 * C379 - C13142 * C360 +
             C13139 * C384 - C13143 * C370 + C32246 * C2046 - C13144 * C2035) *
                C32199 +
            (C13992 - C13993 + C13994 - C13995 + C13996 - C13997 + C13998 -
             C13999) *
                C2663 +
            (C14000 - C14001 + C14002 - C14003 + C14004 - C14005 + C14006 -
             C14007) *
                C32003) *
               C31859 * C31918 * C471 +
           ((C13993 - C13992 + C13995 - C13994 + C13997 - C13996 + C13999 -
             C13998) *
                C2662 +
            (C14001 - C14000 + C14003 - C14002 + C14005 - C14004 + C14007 -
             C14006) *
                C32199 +
            (C14008 - C14009 + C14010 - C14011 + C14012 - C14013 + C14014 -
             C14015) *
                C2663 +
            (C14016 - C14017 + C14018 - C14019 + C14020 - C14021 + C14022 -
             C14023) *
                C32003) *
               C31859 * C31918 * C472) *
              C473 +
          (((C13147 - C13146 + C13149 - C13148 + C13151 - C13150 + C13153 -
             C13152) *
                C2662 +
            (C13155 - C13154 + C13157 - C13156 + C13159 - C13158 + C13161 -
             C13160) *
                C32199 +
            (C13504 - C13505 + C13506 - C13507 + C13508 - C13509 + C13510 -
             C13511) *
                C2663 +
            (C13512 - C13513 + C13514 - C13515 + C13516 - C13517 + C13518 -
             C13519) *
                C32003) *
               C31859 * C31918 * C471 +
           ((C13505 - C13504 + C13507 - C13506 + C13509 - C13508 + C13511 -
             C13510) *
                C2662 +
            (C13513 - C13512 + C13515 - C13514 + C13517 - C13516 + C13519 -
             C13518) *
                C32199 +
            (C13137 * C266 - C13141 * C250 + C13138 * C1126 - C13142 * C1116 +
             C13139 * C1136 - C13143 * C1121 + C32246 * C7149 -
             C13144 * C7148) *
                C2663 +
            (C13137 * C280 - C13141 * C267 + C13138 * C1143 - C13142 * C1127 +
             C13139 * C1148 - C13143 * C1137 + C32246 * C7151 -
             C13144 * C7150) *
                C32003) *
               C31859 * C31918 * C472) *
              C474)) /
            (p * q * std::sqrt(p + q));
    d2ee[56] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C32200 * C122 - C3372 * C115 + C32045 * C359 - C3373 * C349) *
                C7430 +
            (C32200 * C136 - C3372 * C123 + C32045 * C379 - C3373 * C360) *
                C7424 +
            (C4364 - C4365 + C4366 - C4367) * C7431 +
            (C4368 - C4369 + C4370 - C4371) * C7425 + C8345 * C7432 +
            C8346 * C7426 + C9307 * C7433 + C9308 * C32240) *
               C31859 * C577 +
           ((C3372 * C349 - C32200 * C359 + C3373 * C354 - C32045 * C369) *
                C7430 +
            (C3372 * C360 - C32200 * C379 + C3373 * C370 - C32045 * C384) *
                C7424 +
            (C5158 - C5159 + C5160 - C5161) * C7431 +
            (C5162 - C5163 + C5164 - C5165) * C7425 +
            (C9091 - C9092 + C9093 - C9094) * C7432 +
            (C9095 - C9096 + C9097 - C9098) * C7426 +
            (C9797 - C9798 + C9799 - C9800) * C7433 +
            (C9801 - C9802 + C9803 - C9804) * C32240) *
               C31859 * C578) *
              C471 +
          (((C4365 - C4364 + C4367 - C4366) * C7430 +
            (C4369 - C4368 + C4371 - C4370) * C7424 +
            (C4372 - C4373 + C4374 - C4375) * C7431 +
            (C4376 - C4377 + C4378 - C4379) * C7425 +
            (C8329 - C8330 + C8331 - C8332) * C7432 +
            (C8333 - C8334 + C8335 - C8336) * C7426 +
            (C9299 - C9300 + C9301 - C9302) * C7433 +
            (C9303 - C9304 + C9305 - C9306) * C32240) *
               C31859 * C577 +
           ((C5159 - C5158 + C5161 - C5160) * C7430 +
            (C5163 - C5162 + C5165 - C5164) * C7424 +
            (C9092 - C9091 + C9094 - C9093) * C7431 +
            (C9096 - C9095 + C9098 - C9097) * C7425 +
            (C9798 - C9797 + C9800 - C9799) * C7432 +
            (C9802 - C9801 + C9804 - C9803) * C7426 +
            (C32200 * C6173 - C3372 * C6170 + C32045 * C6177 - C3373 * C6172) *
                C7433 +
            (C32200 * C6179 - C3372 * C6174 + C32045 * C6181 - C3373 * C6178) *
                C32240) *
               C31859 * C578) *
              C472) *
         C31892) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C32200 * C122 - C3372 * C115 + C32045 * C359 - C3373 * C349) *
                 C2662 +
             (C32200 * C136 - C3372 * C123 + C32045 * C379 - C3373 * C360) *
                 C32199 +
             (C4364 - C4365 + C4366 - C4367) * C2663 +
             (C4368 - C4369 + C4370 - C4371) * C32003) *
                C814 +
            ((C3375 - C3376 + C3377 - C3378) * C2662 +
             (C3379 - C3380 + C3381 - C3382) * C32199 + C4748 * C2663 +
             C4749 * C32003) *
                C815 +
            C4217 * C32219) *
               C577 +
           (((C3372 * C349 - C32200 * C359 + C3373 * C354 - C32045 * C369) *
                 C2662 +
             (C3372 * C360 - C32200 * C379 + C3373 * C370 - C32045 * C384) *
                 C32199 +
             (C5158 - C5159 + C5160 - C5161) * C2663 +
             (C5162 - C5163 + C5164 - C5165) * C32003) *
                C814 +
            ((C3905 - C3906 + C3907 - C3908) * C2662 +
             (C3909 - C3910 + C3911 - C3912) * C32199 +
             (C4948 - C4949 + C4950 - C4951) * C2663 +
             (C4952 - C4953 + C4954 - C4955) * C32003) *
                C815 +
            ((C3913 - C3914 + C3915 - C3916) * C2662 +
             (C3917 - C3918 + C3919 - C3920) * C32199 +
             (C4956 - C4957 + C4958 - C4959) * C2663 +
             (C4960 - C4961 + C4962 - C4963) * C32003) *
                C32219) *
               C578) *
              C471 +
          ((((C4365 - C4364 + C4367 - C4366) * C2662 +
             (C4369 - C4368 + C4371 - C4370) * C32199 +
             (C4372 - C4373 + C4374 - C4375) * C2663 +
             (C4376 - C4377 + C4378 - C4379) * C32003) *
                C814 +
            (C4750 * C2662 + C4751 * C32199 +
             (C4380 - C4381 + C4382 - C4383) * C2663 +
             (C4384 - C4385 + C4386 - C4387) * C32003) *
                C815 +
            (C4752 * C2662 + C4753 * C32199 +
             (C4388 - C4389 + C4390 - C4391) * C2663 +
             (C4392 - C4393 + C4394 - C4395) * C32003) *
                C32219) *
               C577 +
           (((C5159 - C5158 + C5161 - C5160) * C2662 +
             (C5163 - C5162 + C5165 - C5164) * C32199 +
             (C32200 * C1124 - C3372 * C1115 + C32045 * C1132 - C3373 * C1119) *
                 C2663 +
             (C32200 * C1142 - C3372 * C1125 + C32045 * C1146 - C3373 * C1133) *
                 C32003) *
                C814 +
            ((C4949 - C4948 + C4951 - C4950) * C2662 +
             (C4953 - C4952 + C4955 - C4954) * C32199 +
             (C32200 * C1126 - C3372 * C1116 + C32045 * C1136 - C3373 * C1121) *
                 C2663 +
             (C32200 * C1143 - C3372 * C1127 + C32045 * C1148 - C3373 * C1137) *
                 C32003) *
                C815 +
            ((C4957 - C4956 + C4959 - C4958) * C2662 +
             (C4961 - C4960 + C4963 - C4962) * C32199 +
             (C32200 * C1128 - C3372 * C1117 + C32045 * C1140 - C3373 * C1123) *
                 C2663 +
             (C32200 * C1144 - C3372 * C1129 + C32045 * C1150 - C3373 * C1141) *
                 C32003) *
                C32219) *
               C578) *
              C472) *
         C31892) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C13137 * C122 - C13141 * C115 + C13138 * C359 - C13142 * C349 +
             C13139 * C369 - C13143 * C354 + C32246 * C2034 - C13144 * C2028) *
                C2662 +
            (C13137 * C136 - C13141 * C123 + C13138 * C379 - C13142 * C360 +
             C13139 * C384 - C13143 * C370 + C32246 * C2046 - C13144 * C2035) *
                C32199 +
            (C13992 - C13993 + C13994 - C13995 + C13996 - C13997 + C13998 -
             C13999) *
                C2663 +
            (C14000 - C14001 + C14002 - C14003 + C14004 - C14005 + C14006 -
             C14007) *
                C32003) *
               C31859 * C577 +
           ((C13141 * C349 - C13137 * C359 + C13142 * C354 - C13138 * C369 +
             C13143 * C2028 - C13139 * C2034 + C13144 * C2031 -
             C32246 * C2040) *
                C2662 +
            (C13141 * C360 - C13137 * C379 + C13142 * C370 - C13138 * C384 +
             C13143 * C2035 - C13139 * C2046 + C13144 * C2041 -
             C32246 * C2049) *
                C32199 +
            (C14512 - C14513 + C14514 - C14515 + C14516 - C14517 + C14518 -
             C14519) *
                C2663 +
            (C14520 - C14521 + C14522 - C14523 + C14524 - C14525 + C14526 -
             C14527) *
                C32003) *
               C31859 * C578) *
              C471 +
          (((C13993 - C13992 + C13995 - C13994 + C13997 - C13996 + C13999 -
             C13998) *
                C2662 +
            (C14001 - C14000 + C14003 - C14002 + C14005 - C14004 + C14007 -
             C14006) *
                C32199 +
            (C14008 - C14009 + C14010 - C14011 + C14012 - C14013 + C14014 -
             C14015) *
                C2663 +
            (C14016 - C14017 + C14018 - C14019 + C14020 - C14021 + C14022 -
             C14023) *
                C32003) *
               C31859 * C577 +
           ((C14513 - C14512 + C14515 - C14514 + C14517 - C14516 + C14519 -
             C14518) *
                C2662 +
            (C14521 - C14520 + C14523 - C14522 + C14525 - C14524 + C14527 -
             C14526) *
                C32199 +
            (C13137 * C1124 - C13141 * C1115 + C13138 * C1132 - C13142 * C1119 +
             C13139 * C6831 - C13143 * C6828 + C32246 * C6835 -
             C13144 * C6830) *
                C2663 +
            (C13137 * C1142 - C13141 * C1125 + C13138 * C1146 - C13142 * C1133 +
             C13139 * C6837 - C13143 * C6832 + C32246 * C6839 -
             C13144 * C6836) *
                C32003) *
               C31859 * C578) *
              C472) *
         C31892) /
            (p * q * std::sqrt(p + q));
    d2ee[57] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C32200 * C122 - C3372 * C115 + C32045 * C359 - C3373 * C349) *
                    C2662 +
                (C32200 * C136 - C3372 * C123 + C32045 * C379 - C3373 * C360) *
                    C32199 +
                (C32200 * C254 - C3372 * C244 + C32045 * C686 - C3373 * C681) *
                    C2663 +
                (C32200 * C274 - C3372 * C255 + C32045 * C696 - C3373 * C687) *
                    C32003) *
                   C814 +
               ((C3375 - C3376 + C3377 - C3378) * C2662 +
                (C3379 - C3380 + C3381 - C3382) * C32199 +
                (C3752 - C3751 + C3754 - C3753) * C2663 +
                (C3756 - C3755 + C3758 - C3757) * C32003) *
                   C815 +
               C4217 * C32219) *
                  C31918 * C31904 * C110 +
              (((C3376 - C3375 + C3378 - C3377) * C2662 +
                (C3380 - C3379 + C3382 - C3381) * C32199 +
                (C3751 - C3752 + C3753 - C3754) * C2663 +
                (C3755 - C3756 + C3757 - C3758) * C32003) *
                   C814 +
               ((C3384 - C3383 + C3386 - C3385) * C2662 +
                (C3388 - C3387 + C3390 - C3389) * C32199 +
                (C3759 - C3760 + C3761 - C3762) * C2663 +
                (C3763 - C3764 + C3765 - C3766) * C32003) *
                   C815 +
               ((C3392 - C3391 + C3394 - C3393) * C2662 +
                (C3396 - C3395 + C3398 - C3397) * C32199 +
                (C3767 - C3768 + C3769 - C3770) * C2663 +
                (C3771 - C3772 + C3773 - C3774) * C32003) *
                   C32219) *
                  C31918 * C31904 * C111 +
              (C4217 * C814 +
               (C3417 * C2662 + C3418 * C32199 +
                (C3768 - C3767 + C3770 - C3769) * C2663 +
                (C3772 - C3771 + C3774 - C3773) * C32003) *
                   C815 +
               ((C3400 - C3399 + C3402 - C3401) * C2662 +
                (C3404 - C3403 + C3406 - C3405) * C32199 +
                (C32200 * C262 - C3372 * C248 + C32045 * C694 - C3373 * C685) *
                    C2663 +
                (C32200 * C278 - C3372 * C263 + C32045 * C700 - C3373 * C695) *
                    C32003) *
                   C32219) *
                  C31918 * C31904 * C112) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C32200 * C122 - C3372 * C115 + C32045 * C359 - C3373 * C349) *
                    C2662 +
                (C32200 * C136 - C3372 * C123 + C32045 * C379 - C3373 * C360) *
                    C32199 +
                (C4364 - C4365 + C4366 - C4367) * C2663 +
                (C4368 - C4369 + C4370 - C4371) * C32003) *
                   C814 +
               ((C3375 - C3376 + C3377 - C3378) * C2662 +
                (C3379 - C3380 + C3381 - C3382) * C32199 +
                (C3752 - C3751 + C3754 - C3753) * C2663 +
                (C3756 - C3755 + C3758 - C3757) * C32003) *
                   C815 +
               C4217 * C32219) *
                  C31918 * C240 +
              (((C4365 - C4364 + C4367 - C4366) * C2662 +
                (C4369 - C4368 + C4371 - C4370) * C32199 +
                (C4372 - C4373 + C4374 - C4375) * C2663 +
                (C4376 - C4377 + C4378 - C4379) * C32003) *
                   C814 +
               ((C3751 - C3752 + C3753 - C3754) * C2662 +
                (C3755 - C3756 + C3757 - C3758) * C32199 +
                (C4380 - C4381 + C4382 - C4383) * C2663 +
                (C4384 - C4385 + C4386 - C4387) * C32003) *
                   C815 +
               ((C3759 - C3760 + C3761 - C3762) * C2662 +
                (C3763 - C3764 + C3765 - C3766) * C32199 +
                (C4388 - C4389 + C4390 - C4391) * C2663 +
                (C4392 - C4393 + C4394 - C4395) * C32003) *
                   C32219) *
                  C31918 * C241 +
              (((C4373 - C4372 + C4375 - C4374) * C2662 +
                (C4377 - C4376 + C4379 - C4378) * C32199 +
                (C32200 * C963 - C3372 * C957 + C32045 * C1626 -
                 C3373 * C1623) *
                    C2663 +
                (C32200 * C975 - C3372 * C964 + C32045 * C1632 -
                 C3373 * C1627) *
                    C32003) *
                   C814 +
               ((C4381 - C4380 + C4383 - C4382) * C2662 +
                (C4385 - C4384 + C4387 - C4386) * C32199 +
                (C32200 * C965 - C3372 * C958 + C32045 * C1628 -
                 C3373 * C1624) *
                    C2663 +
                (C32200 * C976 - C3372 * C966 + C32045 * C1633 -
                 C3373 * C1629) *
                    C32003) *
                   C815 +
               ((C4389 - C4388 + C4391 - C4390) * C2662 +
                (C4393 - C4392 + C4395 - C4394) * C32199 +
                (C32200 * C967 - C3372 * C959 + C32045 * C1630 -
                 C3373 * C1625) *
                    C2663 +
                (C32200 * C977 - C3372 * C968 + C32045 * C1634 -
                 C3373 * C1631) *
                    C32003) *
                   C32219) *
                  C31918 * C242) *
             C31892) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C32200 * C122 - C3372 * C115 + C32045 * C359 - C3373 * C349) *
                C2662 +
            (C32200 * C136 - C3372 * C123 + C32045 * C379 - C3373 * C360) *
                C32199 +
            (C4364 - C4365 + C4366 - C4367) * C2663 +
            (C4368 - C4369 + C4370 - C4371) * C32003) *
               C814 +
           ((C3375 - C3376 + C3377 - C3378) * C2662 +
            (C3379 - C3380 + C3381 - C3382) * C32199 +
            (C3752 - C3751 + C3754 - C3753) * C2663 +
            (C3756 - C3755 + C3758 - C3757) * C32003) *
               C815 +
           C4217 * C32219) *
              C346 +
          (((C3372 * C349 - C32200 * C359 + C3373 * C354 - C32045 * C369) *
                C2662 +
            (C3372 * C360 - C32200 * C379 + C3373 * C370 - C32045 * C384) *
                C32199 +
            (C3372 * C681 - C32200 * C686 + C3373 * C1118 - C32045 * C1130) *
                C2663 +
            (C3372 * C687 - C32200 * C696 + C3373 * C1131 - C32045 * C1145) *
                C32003) *
               C814 +
           ((C3905 - C3906 + C3907 - C3908) * C2662 +
            (C3909 - C3910 + C3911 - C3912) * C32199 +
            (C3372 * C682 - C32200 * C688 + C3373 * C1120 - C32045 * C1134) *
                C2663 +
            (C3372 * C689 - C32200 * C697 + C3373 * C1135 - C32045 * C1147) *
                C32003) *
               C815 +
           ((C3913 - C3914 + C3915 - C3916) * C2662 +
            (C3917 - C3918 + C3919 - C3920) * C32199 +
            (C3372 * C683 - C32200 * C690 + C3373 * C1122 - C32045 * C1138) *
                C2663 +
            (C3372 * C691 - C32200 * C698 + C3373 * C1139 - C32045 * C1149) *
                C32003) *
               C32219) *
              C347 +
          (((C32200 * C369 - C3372 * C354 + C32045 * C2034 - C3373 * C2028) *
                C2662 +
            (C32200 * C384 - C3372 * C370 + C32045 * C2046 - C3373 * C2035) *
                C32199 +
            (C32200 * C1130 - C3372 * C1118 + C32045 * C2549 - C3373 * C2546) *
                C2663 +
            (C32200 * C1145 - C3372 * C1131 + C32045 * C2555 - C3373 * C2550) *
                C32003) *
               C814 +
           ((C32200 * C371 - C3372 * C355 + C32045 * C2036 - C3373 * C2029) *
                C2662 +
            (C32200 * C385 - C3372 * C372 + C32045 * C2047 - C3373 * C2037) *
                C32199 +
            (C32200 * C1134 - C3372 * C1120 + C32045 * C2551 - C3373 * C2547) *
                C2663 +
            (C32200 * C1147 - C3372 * C1135 + C32045 * C2556 - C3373 * C2552) *
                C32003) *
               C815 +
           ((C32200 * C373 - C3372 * C356 + C32045 * C2038 - C3373 * C2030) *
                C2662 +
            (C32200 * C386 - C3372 * C374 + C32045 * C2048 - C3373 * C2039) *
                C32199 +
            (C32200 * C1138 - C3372 * C1122 + C32045 * C2553 - C3373 * C2548) *
                C2663 +
            (C32200 * C1149 - C3372 * C1139 + C32045 * C2557 - C3373 * C2554) *
                C32003) *
               C32219) *
              C348) *
         C31904 * C31892) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C32200 * C122 - C3372 * C115 + C32045 * C359 - C3373 * C349) *
               C7430 +
           (C32200 * C136 - C3372 * C123 + C32045 * C379 - C3373 * C360) *
               C7424 +
           (C4364 - C4365 + C4366 - C4367) * C7431 +
           (C4368 - C4369 + C4370 - C4371) * C7425 + C8345 * C7432 +
           C8346 * C7426 + (C8330 - C8329 + C8332 - C8331) * C7433 +
           (C8334 - C8333 + C8336 - C8335) * C32240) *
              C31859 * C31918 * C31904 * C110 +
          ((C3376 - C3375 + C3378 - C3377) * C7430 +
           (C3380 - C3379 + C3382 - C3381) * C7424 + C4750 * C7431 +
           C4751 * C7425 + C8693 * C7432 + C8694 * C7426 +
           (C8337 - C8338 + C8339 - C8340) * C7433 +
           (C8341 - C8342 + C8343 - C8344) * C32240) *
              C31859 * C31918 * C31904 * C111 +
          (C3415 * C7430 + C3416 * C7424 + C4212 * C7431 + C4213 * C7425 +
           (C4389 - C4388 + C4391 - C4390) * C7432 +
           (C4393 - C4392 + C4395 - C4394) * C7426 +
           (C32200 * C967 - C3372 * C959 + C32045 * C1630 - C3373 * C1625) *
               C7433 +
           (C32200 * C977 - C3372 * C968 + C32045 * C1634 - C3373 * C1631) *
               C32240) *
              C31859 * C31918 * C31904 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C32200 * C122 - C3372 * C115 + C32045 * C359 - C3373 * C349) *
               C7430 +
           (C32200 * C136 - C3372 * C123 + C32045 * C379 - C3373 * C360) *
               C7424 +
           (C4364 - C4365 + C4366 - C4367) * C7431 +
           (C4368 - C4369 + C4370 - C4371) * C7425 + C8345 * C7432 +
           C8346 * C7426 + C9307 * C7433 + C9308 * C32240) *
              C31859 * C31918 * C240 +
          ((C4365 - C4364 + C4367 - C4366) * C7430 +
           (C4369 - C4368 + C4371 - C4370) * C7424 +
           (C4372 - C4373 + C4374 - C4375) * C7431 +
           (C4376 - C4377 + C4378 - C4379) * C7425 +
           (C8329 - C8330 + C8331 - C8332) * C7432 +
           (C8333 - C8334 + C8335 - C8336) * C7426 +
           (C9299 - C9300 + C9301 - C9302) * C7433 +
           (C9303 - C9304 + C9305 - C9306) * C32240) *
              C31859 * C31918 * C241 +
          (C8345 * C7430 + C8346 * C7424 + C9307 * C7431 + C9308 * C7425 +
           (C9300 - C9299 + C9302 - C9301) * C7432 +
           (C9304 - C9303 + C9306 - C9305) * C7426 +
           (C32200 * C6090 - C3372 * C6088 + C32045 * C6441 - C3373 * C6440) *
               C7433 +
           (C32200 * C6094 - C3372 * C6091 + C32045 * C6443 - C3373 * C6442) *
               C32240) *
              C31859 * C31918 * C242) *
         C31892) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C32200 * C122 - C3372 * C115 + C32045 * C359 - C3373 * C349) *
               C7430 +
           (C32200 * C136 - C3372 * C123 + C32045 * C379 - C3373 * C360) *
               C7424 +
           (C4364 - C4365 + C4366 - C4367) * C7431 +
           (C4368 - C4369 + C4370 - C4371) * C7425 + C8345 * C7432 +
           C8346 * C7426 + C9307 * C7433 + C9308 * C32240) *
              C31859 * C346 +
          ((C3372 * C349 - C32200 * C359 + C3373 * C354 - C32045 * C369) *
               C7430 +
           (C3372 * C360 - C32200 * C379 + C3373 * C370 - C32045 * C384) *
               C7424 +
           (C5158 - C5159 + C5160 - C5161) * C7431 +
           (C5162 - C5163 + C5164 - C5165) * C7425 +
           (C9091 - C9092 + C9093 - C9094) * C7432 +
           (C9095 - C9096 + C9097 - C9098) * C7426 +
           (C3372 * C1623 - C32200 * C1626 + C3373 * C6171 - C32045 * C6175) *
               C7433 +
           (C3372 * C1627 - C32200 * C1632 + C3373 * C6176 - C32045 * C6180) *
               C32240) *
              C31859 * C347 +
          ((C32200 * C369 - C3372 * C354 + C32045 * C2034 - C3373 * C2028) *
               C7430 +
           (C32200 * C384 - C3372 * C370 + C32045 * C2046 - C3373 * C2035) *
               C7424 +
           (C32200 * C1130 - C3372 * C1118 + C32045 * C2549 - C3373 * C2546) *
               C7431 +
           (C32200 * C1145 - C3372 * C1131 + C32045 * C2555 - C3373 * C2550) *
               C7425 +
           (C32200 * C1132 - C3372 * C1119 + C32045 * C6831 - C3373 * C6828) *
               C7432 +
           (C32200 * C1146 - C3372 * C1133 + C32045 * C6837 - C3373 * C6832) *
               C7426 +
           (C32200 * C6175 - C3372 * C6171 + C32045 * C7299 - C3373 * C7298) *
               C7433 +
           (C32200 * C6180 - C3372 * C6176 + C32045 * C7301 - C3373 * C7300) *
               C32240) *
              C31859 * C348) *
         C31904 * C31892) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C13137 * C122 - C13141 * C115 + C13138 * C359 - C13142 * C349 +
            C13139 * C369 - C13143 * C354 + C32246 * C2034 - C13144 * C2028) *
               C2662 +
           (C13137 * C136 - C13141 * C123 + C13138 * C379 - C13142 * C360 +
            C13139 * C384 - C13143 * C370 + C32246 * C2046 - C13144 * C2035) *
               C32199 +
           (C13137 * C254 - C13141 * C244 + C13138 * C686 - C13142 * C681 +
            C13139 * C1130 - C13143 * C1118 + C32246 * C2549 - C13144 * C2546) *
               C2663 +
           (C13137 * C274 - C13141 * C255 + C13138 * C696 - C13142 * C687 +
            C13139 * C1145 - C13143 * C1131 + C32246 * C2555 - C13144 * C2550) *
               C32003) *
              C31859 * C31918 * C31904 * C110 +
          ((C13147 - C13146 + C13149 - C13148 + C13151 - C13150 + C13153 -
            C13152) *
               C2662 +
           (C13155 - C13154 + C13157 - C13156 + C13159 - C13158 + C13161 -
            C13160) *
               C32199 +
           (C13504 - C13505 + C13506 - C13507 + C13508 - C13509 + C13510 -
            C13511) *
               C2663 +
           (C13512 - C13513 + C13514 - C13515 + C13516 - C13517 + C13518 -
            C13519) *
               C32003) *
              C31859 * C31918 * C31904 * C111 +
          ((C13163 - C13162 + C13165 - C13164 + C13167 - C13166 + C13169 -
            C13168) *
               C2662 +
           (C13171 - C13170 + C13173 - C13172 + C13175 - C13174 + C13177 -
            C13176) *
               C32199 +
           (C13137 * C258 - C13141 * C246 + C13138 * C690 - C13142 * C683 +
            C13139 * C1138 - C13143 * C1122 + C32246 * C2553 - C13144 * C2548) *
               C2663 +
           (C13137 * C276 - C13141 * C259 + C13138 * C698 - C13142 * C691 +
            C13139 * C1149 - C13143 * C1139 + C32246 * C2557 - C13144 * C2554) *
               C32003) *
              C31859 * C31918 * C31904 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C13137 * C122 - C13141 * C115 + C13138 * C359 - C13142 * C349 +
            C13139 * C369 - C13143 * C354 + C32246 * C2034 - C13144 * C2028) *
               C2662 +
           (C13137 * C136 - C13141 * C123 + C13138 * C379 - C13142 * C360 +
            C13139 * C384 - C13143 * C370 + C32246 * C2046 - C13144 * C2035) *
               C32199 +
           (C13992 - C13993 + C13994 - C13995 + C13996 - C13997 + C13998 -
            C13999) *
               C2663 +
           (C14000 - C14001 + C14002 - C14003 + C14004 - C14005 + C14006 -
            C14007) *
               C32003) *
              C31859 * C31918 * C240 +
          ((C13993 - C13992 + C13995 - C13994 + C13997 - C13996 + C13999 -
            C13998) *
               C2662 +
           (C14001 - C14000 + C14003 - C14002 + C14005 - C14004 + C14007 -
            C14006) *
               C32199 +
           (C14008 - C14009 + C14010 - C14011 + C14012 - C14013 + C14014 -
            C14015) *
               C2663 +
           (C14016 - C14017 + C14018 - C14019 + C14020 - C14021 + C14022 -
            C14023) *
               C32003) *
              C31859 * C31918 * C241 +
          ((C14009 - C14008 + C14011 - C14010 + C14013 - C14012 + C14015 -
            C14014) *
               C2662 +
           (C14017 - C14016 + C14019 - C14018 + C14021 - C14020 + C14023 -
            C14022) *
               C32199 +
           (C13137 * C963 - C13141 * C957 + C13138 * C1626 - C13142 * C1623 +
            C13139 * C6175 - C13143 * C6171 + C32246 * C7299 - C13144 * C7298) *
               C2663 +
           (C13137 * C975 - C13141 * C964 + C13138 * C1632 - C13142 * C1627 +
            C13139 * C6180 - C13143 * C6176 + C32246 * C7301 - C13144 * C7300) *
               C32003) *
              C31859 * C31918 * C242) *
         C31892) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C13137 * C122 - C13141 * C115 + C13138 * C359 - C13142 * C349 +
            C13139 * C369 - C13143 * C354 + C32246 * C2034 - C13144 * C2028) *
               C2662 +
           (C13137 * C136 - C13141 * C123 + C13138 * C379 - C13142 * C360 +
            C13139 * C384 - C13143 * C370 + C32246 * C2046 - C13144 * C2035) *
               C32199 +
           (C13992 - C13993 + C13994 - C13995 + C13996 - C13997 + C13998 -
            C13999) *
               C2663 +
           (C14000 - C14001 + C14002 - C14003 + C14004 - C14005 + C14006 -
            C14007) *
               C32003) *
              C31859 * C346 +
          ((C13141 * C349 - C13137 * C359 + C13142 * C354 - C13138 * C369 +
            C13143 * C2028 - C13139 * C2034 + C13144 * C2031 - C32246 * C2040) *
               C2662 +
           (C13141 * C360 - C13137 * C379 + C13142 * C370 - C13138 * C384 +
            C13143 * C2035 - C13139 * C2046 + C13144 * C2041 - C32246 * C2049) *
               C32199 +
           (C13141 * C681 - C13137 * C686 + C13142 * C1118 - C13138 * C1130 +
            C13143 * C2546 - C13139 * C2549 + C13144 * C6829 - C32246 * C6833) *
               C2663 +
           (C13141 * C687 - C13137 * C696 + C13142 * C1131 - C13138 * C1145 +
            C13143 * C2550 - C13139 * C2555 + C13144 * C6834 - C32246 * C6838) *
               C32003) *
              C31859 * C347 +
          ((C13137 * C369 - C13141 * C354 + C13138 * C2034 - C13142 * C2028 +
            C13139 * C2040 - C13143 * C2031 + C32246 * C11723 -
            C13144 * C11721) *
               C2662 +
           (C13137 * C384 - C13141 * C370 + C13138 * C2046 - C13142 * C2035 +
            C13139 * C2049 - C13143 * C2041 + C32246 * C11727 -
            C13144 * C11724) *
               C32199 +
           (C13137 * C1130 - C13141 * C1118 + C13138 * C2549 - C13142 * C2546 +
            C13139 * C6833 - C13143 * C6829 + C32246 * C11984 -
            C13144 * C11983) *
               C2663 +
           (C13137 * C1145 - C13141 * C1131 + C13138 * C2555 - C13142 * C2550 +
            C13139 * C6838 - C13143 * C6834 + C32246 * C11986 -
            C13144 * C11985) *
               C32003) *
              C31859 * C348) *
         C31904 * C31892) /
            (p * q * std::sqrt(p + q));
    d2ee[58] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C32200 * C122 - C3372 * C115 + C32045 * C359 - C3373 * C349) *
                C7430 +
            (C32200 * C136 - C3372 * C123 + C32045 * C379 - C3373 * C360) *
                C7424 +
            (C4364 - C4365 + C4366 - C4367) * C7431 +
            (C4368 - C4369 + C4370 - C4371) * C7425 + C8345 * C7432 +
            C8346 * C7426 + C9307 * C7433 + C9308 * C32240) *
               C31859 * C577 +
           ((C3372 * C349 - C32200 * C359 + C3373 * C354 - C32045 * C369) *
                C7430 +
            (C3372 * C360 - C32200 * C379 + C3373 * C370 - C32045 * C384) *
                C7424 +
            (C5158 - C5159 + C5160 - C5161) * C7431 +
            (C5162 - C5163 + C5164 - C5165) * C7425 +
            (C9091 - C9092 + C9093 - C9094) * C7432 +
            (C9095 - C9096 + C9097 - C9098) * C7426 +
            (C3372 * C1623 - C32200 * C1626 + C3373 * C6171 - C32045 * C6175) *
                C7433 +
            (C3372 * C1627 - C32200 * C1632 + C3373 * C6176 - C32045 * C6180) *
                C32240) *
               C31859 * C578) *
              C31904 * C473 +
          (((C3376 - C3375 + C3378 - C3377) * C7430 +
            (C3380 - C3379 + C3382 - C3381) * C7424 + C4750 * C7431 +
            C4751 * C7425 + C8693 * C7432 + C8694 * C7426 +
            (C8337 - C8338 + C8339 - C8340) * C7433 +
            (C8341 - C8342 + C8343 - C8344) * C32240) *
               C31859 * C577 +
           ((C3906 - C3905 + C3908 - C3907) * C7430 +
            (C3910 - C3909 + C3912 - C3911) * C7424 +
            (C4949 - C4948 + C4951 - C4950) * C7431 +
            (C4953 - C4952 + C4955 - C4954) * C7425 +
            (C8890 - C8889 + C8892 - C8891) * C7432 +
            (C8894 - C8893 + C8896 - C8895) * C7426 +
            (C32200 * C1628 - C3372 * C1624 + C32045 * C6987 - C3373 * C6986) *
                C7433 +
            (C32200 * C1633 - C3372 * C1629 + C32045 * C6989 - C3373 * C6988) *
                C32240) *
               C31859 * C578) *
              C31904 * C474)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C32200 * C122 - C3372 * C115 + C32045 * C359 - C3373 * C349) *
                 C2662 +
             (C32200 * C136 - C3372 * C123 + C32045 * C379 - C3373 * C360) *
                 C32199 +
             (C4364 - C4365 + C4366 - C4367) * C2663 +
             (C4368 - C4369 + C4370 - C4371) * C32003) *
                C814 +
            ((C3375 - C3376 + C3377 - C3378) * C2662 +
             (C3379 - C3380 + C3381 - C3382) * C32199 + C4748 * C2663 +
             C4749 * C32003) *
                C815 +
            C4217 * C32219) *
               C577 +
           (((C3372 * C349 - C32200 * C359 + C3373 * C354 - C32045 * C369) *
                 C2662 +
             (C3372 * C360 - C32200 * C379 + C3373 * C370 - C32045 * C384) *
                 C32199 +
             (C3372 * C681 - C32200 * C686 + C3373 * C1118 - C32045 * C1130) *
                 C2663 +
             (C3372 * C687 - C32200 * C696 + C3373 * C1131 - C32045 * C1145) *
                 C32003) *
                C814 +
            ((C3905 - C3906 + C3907 - C3908) * C2662 +
             (C3909 - C3910 + C3911 - C3912) * C32199 +
             (C4948 - C4949 + C4950 - C4951) * C2663 +
             (C4952 - C4953 + C4954 - C4955) * C32003) *
                C815 +
            ((C3913 - C3914 + C3915 - C3916) * C2662 +
             (C3917 - C3918 + C3919 - C3920) * C32199 +
             (C4956 - C4957 + C4958 - C4959) * C2663 +
             (C4960 - C4961 + C4962 - C4963) * C32003) *
                C32219) *
               C578) *
              C31904 * C473 +
          ((((C3376 - C3375 + C3378 - C3377) * C2662 +
             (C3380 - C3379 + C3382 - C3381) * C32199 + C4750 * C2663 +
             C4751 * C32003) *
                C814 +
            ((C3384 - C3383 + C3386 - C3385) * C2662 +
             (C3388 - C3387 + C3390 - C3389) * C32199 + C4752 * C2663 +
             C4753 * C32003) *
                C815 +
            ((C3392 - C3391 + C3394 - C3393) * C2662 +
             (C3396 - C3395 + C3398 - C3397) * C32199 +
             (C3767 - C3768 + C3769 - C3770) * C2663 +
             (C3771 - C3772 + C3773 - C3774) * C32003) *
                C32219) *
               C577 +
           (((C3906 - C3905 + C3908 - C3907) * C2662 +
             (C3910 - C3909 + C3912 - C3911) * C32199 +
             (C4949 - C4948 + C4951 - C4950) * C2663 +
             (C4953 - C4952 + C4955 - C4954) * C32003) *
                C814 +
            ((C3914 - C3913 + C3916 - C3915) * C2662 +
             (C3918 - C3917 + C3920 - C3919) * C32199 +
             (C4957 - C4956 + C4959 - C4958) * C2663 +
             (C4961 - C4960 + C4963 - C4962) * C32003) *
                C815 +
            ((C3922 - C3921 + C3924 - C3923) * C2662 +
             (C3926 - C3925 + C3928 - C3927) * C32199 +
             (C32200 * C692 - C3372 * C684 + C32045 * C2199 - C3373 * C2198) *
                 C2663 +
             (C32200 * C699 - C3372 * C693 + C32045 * C2201 - C3373 * C2200) *
                 C32003) *
                C32219) *
               C578) *
              C31904 * C474)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C13137 * C122 - C13141 * C115 + C13138 * C359 - C13142 * C349 +
             C13139 * C369 - C13143 * C354 + C32246 * C2034 - C13144 * C2028) *
                C2662 +
            (C13137 * C136 - C13141 * C123 + C13138 * C379 - C13142 * C360 +
             C13139 * C384 - C13143 * C370 + C32246 * C2046 - C13144 * C2035) *
                C32199 +
            (C13992 - C13993 + C13994 - C13995 + C13996 - C13997 + C13998 -
             C13999) *
                C2663 +
            (C14000 - C14001 + C14002 - C14003 + C14004 - C14005 + C14006 -
             C14007) *
                C32003) *
               C31859 * C577 +
           ((C13141 * C349 - C13137 * C359 + C13142 * C354 - C13138 * C369 +
             C13143 * C2028 - C13139 * C2034 + C13144 * C2031 -
             C32246 * C2040) *
                C2662 +
            (C13141 * C360 - C13137 * C379 + C13142 * C370 - C13138 * C384 +
             C13143 * C2035 - C13139 * C2046 + C13144 * C2041 -
             C32246 * C2049) *
                C32199 +
            (C13141 * C681 - C13137 * C686 + C13142 * C1118 - C13138 * C1130 +
             C13143 * C2546 - C13139 * C2549 + C13144 * C6829 -
             C32246 * C6833) *
                C2663 +
            (C13141 * C687 - C13137 * C696 + C13142 * C1131 - C13138 * C1145 +
             C13143 * C2550 - C13139 * C2555 + C13144 * C6834 -
             C32246 * C6838) *
                C32003) *
               C31859 * C578) *
              C31904 * C473 +
          (((C13147 - C13146 + C13149 - C13148 + C13151 - C13150 + C13153 -
             C13152) *
                C2662 +
            (C13155 - C13154 + C13157 - C13156 + C13159 - C13158 + C13161 -
             C13160) *
                C32199 +
            (C13504 - C13505 + C13506 - C13507 + C13508 - C13509 + C13510 -
             C13511) *
                C2663 +
            (C13512 - C13513 + C13514 - C13515 + C13516 - C13517 + C13518 -
             C13519) *
                C32003) *
               C31859 * C577 +
           ((C13651 - C13650 + C13653 - C13652 + C13655 - C13654 + C13657 -
             C13656) *
                C2662 +
            (C13659 - C13658 + C13661 - C13660 + C13663 - C13662 + C13665 -
             C13664) *
                C32199 +
            (C13137 * C688 - C13141 * C682 + C13138 * C1134 - C13142 * C1120 +
             C13139 * C2551 - C13143 * C2547 + C32246 * C11812 -
             C13144 * C11811) *
                C2663 +
            (C13137 * C697 - C13141 * C689 + C13138 * C1147 - C13142 * C1135 +
             C13139 * C2556 - C13143 * C2552 + C32246 * C11814 -
             C13144 * C11813) *
                C32003) *
               C31859 * C578) *
              C31904 * C474)) /
            (p * q * std::sqrt(p + q));
    d2ee[59] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C32200 * C122 - C3372 * C115 + C32045 * C359 - C3373 * C349) *
                C2662 +
            (C32200 * C136 - C3372 * C123 + C32045 * C379 - C3373 * C360) *
                C32199 +
            (C4364 - C4365 + C4366 - C4367) * C2663 +
            (C4368 - C4369 + C4370 - C4371) * C32003) *
               C814 +
           ((C3375 - C3376 + C3377 - C3378) * C2662 +
            (C3379 - C3380 + C3381 - C3382) * C32199 +
            (C3752 - C3751 + C3754 - C3753) * C2663 +
            (C3756 - C3755 + C3758 - C3757) * C32003) *
               C815 +
           C4217 * C32219) *
              C31918 * C240 +
          (((C4365 - C4364 + C4367 - C4366) * C2662 +
            (C4369 - C4368 + C4371 - C4370) * C32199 +
            (C4372 - C4373 + C4374 - C4375) * C2663 +
            (C4376 - C4377 + C4378 - C4379) * C32003) *
               C814 +
           ((C3751 - C3752 + C3753 - C3754) * C2662 +
            (C3755 - C3756 + C3757 - C3758) * C32199 +
            (C4380 - C4381 + C4382 - C4383) * C2663 +
            (C4384 - C4385 + C4386 - C4387) * C32003) *
               C815 +
           ((C3759 - C3760 + C3761 - C3762) * C2662 +
            (C3763 - C3764 + C3765 - C3766) * C32199 +
            (C4388 - C4389 + C4390 - C4391) * C2663 +
            (C4392 - C4393 + C4394 - C4395) * C32003) *
               C32219) *
              C31918 * C241 +
          (((C4373 - C4372 + C4375 - C4374) * C2662 +
            (C4377 - C4376 + C4379 - C4378) * C32199 +
            (C32200 * C963 - C3372 * C957 + C32045 * C1626 - C3373 * C1623) *
                C2663 +
            (C32200 * C975 - C3372 * C964 + C32045 * C1632 - C3373 * C1627) *
                C32003) *
               C814 +
           ((C4381 - C4380 + C4383 - C4382) * C2662 +
            (C4385 - C4384 + C4387 - C4386) * C32199 +
            (C32200 * C965 - C3372 * C958 + C32045 * C1628 - C3373 * C1624) *
                C2663 +
            (C32200 * C976 - C3372 * C966 + C32045 * C1633 - C3373 * C1629) *
                C32003) *
               C815 +
           ((C4389 - C4388 + C4391 - C4390) * C2662 +
            (C4393 - C4392 + C4395 - C4394) * C32199 +
            (C32200 * C967 - C3372 * C959 + C32045 * C1630 - C3373 * C1625) *
                C2663 +
            (C32200 * C977 - C3372 * C968 + C32045 * C1634 - C3373 * C1631) *
                C32003) *
               C32219) *
              C31918 * C242) *
         C31892) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C32200 * C122 - C3372 * C115 + C32045 * C359 - C3373 * C349) *
                C2662 +
            (C32200 * C136 - C3372 * C123 + C32045 * C379 - C3373 * C360) *
                C32199 +
            (C32200 * C254 - C3372 * C244 + C32045 * C686 - C3373 * C681) *
                C2663 +
            (C32200 * C274 - C3372 * C255 + C32045 * C696 - C3373 * C687) *
                C32003) *
               C814 +
           ((C3375 - C3376 + C3377 - C3378) * C2662 +
            (C3379 - C3380 + C3381 - C3382) * C32199 +
            (C3752 - C3751 + C3754 - C3753) * C2663 +
            (C3756 - C3755 + C3758 - C3757) * C32003) *
               C815 +
           C4217 * C32219) *
              C31918 * C31904 * C110 +
          (((C3376 - C3375 + C3378 - C3377) * C2662 +
            (C3380 - C3379 + C3382 - C3381) * C32199 +
            (C3751 - C3752 + C3753 - C3754) * C2663 +
            (C3755 - C3756 + C3757 - C3758) * C32003) *
               C814 +
           ((C3384 - C3383 + C3386 - C3385) * C2662 +
            (C3388 - C3387 + C3390 - C3389) * C32199 +
            (C3759 - C3760 + C3761 - C3762) * C2663 +
            (C3763 - C3764 + C3765 - C3766) * C32003) *
               C815 +
           ((C3392 - C3391 + C3394 - C3393) * C2662 +
            (C3396 - C3395 + C3398 - C3397) * C32199 +
            (C3767 - C3768 + C3769 - C3770) * C2663 +
            (C3771 - C3772 + C3773 - C3774) * C32003) *
               C32219) *
              C31918 * C31904 * C111 +
          (C4217 * C814 +
           (C3417 * C2662 + C3418 * C32199 +
            (C3768 - C3767 + C3770 - C3769) * C2663 +
            (C3772 - C3771 + C3774 - C3773) * C32003) *
               C815 +
           ((C3400 - C3399 + C3402 - C3401) * C2662 +
            (C3404 - C3403 + C3406 - C3405) * C32199 +
            (C32200 * C262 - C3372 * C248 + C32045 * C694 - C3373 * C685) *
                C2663 +
            (C32200 * C278 - C3372 * C263 + C32045 * C700 - C3373 * C695) *
                C32003) *
               C32219) *
              C31918 * C31904 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C32200 * C122 - C3372 * C115 + C32045 * C359 - C3373 * C349) *
               C7430 +
           (C32200 * C136 - C3372 * C123 + C32045 * C379 - C3373 * C360) *
               C7424 +
           (C4364 - C4365 + C4366 - C4367) * C7431 +
           (C4368 - C4369 + C4370 - C4371) * C7425 + C8345 * C7432 +
           C8346 * C7426 + (C8330 - C8329 + C8332 - C8331) * C7433 +
           (C8334 - C8333 + C8336 - C8335) * C32240) *
              C31859 * C31918 * C31904 * C110 +
          ((C3376 - C3375 + C3378 - C3377) * C7430 +
           (C3380 - C3379 + C3382 - C3381) * C7424 + C4750 * C7431 +
           C4751 * C7425 + C8693 * C7432 + C8694 * C7426 +
           (C8337 - C8338 + C8339 - C8340) * C7433 +
           (C8341 - C8342 + C8343 - C8344) * C32240) *
              C31859 * C31918 * C31904 * C111 +
          (C3415 * C7430 + C3416 * C7424 + C4212 * C7431 + C4213 * C7425 +
           (C4389 - C4388 + C4391 - C4390) * C7432 +
           (C4393 - C4392 + C4395 - C4394) * C7426 +
           (C32200 * C967 - C3372 * C959 + C32045 * C1630 - C3373 * C1625) *
               C7433 +
           (C32200 * C977 - C3372 * C968 + C32045 * C1634 - C3373 * C1631) *
               C32240) *
              C31859 * C31918 * C31904 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C32200 * C122 - C3372 * C115 + C32045 * C359 - C3373 * C349) *
               C7430 +
           (C32200 * C136 - C3372 * C123 + C32045 * C379 - C3373 * C360) *
               C7424 +
           (C4364 - C4365 + C4366 - C4367) * C7431 +
           (C4368 - C4369 + C4370 - C4371) * C7425 + C8345 * C7432 +
           C8346 * C7426 + C9307 * C7433 + C9308 * C32240) *
              C31859 * C31918 * C240 +
          ((C4365 - C4364 + C4367 - C4366) * C7430 +
           (C4369 - C4368 + C4371 - C4370) * C7424 +
           (C4372 - C4373 + C4374 - C4375) * C7431 +
           (C4376 - C4377 + C4378 - C4379) * C7425 +
           (C8329 - C8330 + C8331 - C8332) * C7432 +
           (C8333 - C8334 + C8335 - C8336) * C7426 +
           (C9299 - C9300 + C9301 - C9302) * C7433 +
           (C9303 - C9304 + C9305 - C9306) * C32240) *
              C31859 * C31918 * C241 +
          (C8345 * C7430 + C8346 * C7424 + C9307 * C7431 + C9308 * C7425 +
           (C9300 - C9299 + C9302 - C9301) * C7432 +
           (C9304 - C9303 + C9306 - C9305) * C7426 +
           (C32200 * C6090 - C3372 * C6088 + C32045 * C6441 - C3373 * C6440) *
               C7433 +
           (C32200 * C6094 - C3372 * C6091 + C32045 * C6443 - C3373 * C6442) *
               C32240) *
              C31859 * C31918 * C242) *
         C31892) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C13137 * C122 - C13141 * C115 + C13138 * C359 - C13142 * C349 +
            C13139 * C369 - C13143 * C354 + C32246 * C2034 - C13144 * C2028) *
               C2662 +
           (C13137 * C136 - C13141 * C123 + C13138 * C379 - C13142 * C360 +
            C13139 * C384 - C13143 * C370 + C32246 * C2046 - C13144 * C2035) *
               C32199 +
           (C13137 * C254 - C13141 * C244 + C13138 * C686 - C13142 * C681 +
            C13139 * C1130 - C13143 * C1118 + C32246 * C2549 - C13144 * C2546) *
               C2663 +
           (C13137 * C274 - C13141 * C255 + C13138 * C696 - C13142 * C687 +
            C13139 * C1145 - C13143 * C1131 + C32246 * C2555 - C13144 * C2550) *
               C32003) *
              C31859 * C31918 * C31904 * C110 +
          ((C13147 - C13146 + C13149 - C13148 + C13151 - C13150 + C13153 -
            C13152) *
               C2662 +
           (C13155 - C13154 + C13157 - C13156 + C13159 - C13158 + C13161 -
            C13160) *
               C32199 +
           (C13504 - C13505 + C13506 - C13507 + C13508 - C13509 + C13510 -
            C13511) *
               C2663 +
           (C13512 - C13513 + C13514 - C13515 + C13516 - C13517 + C13518 -
            C13519) *
               C32003) *
              C31859 * C31918 * C31904 * C111 +
          ((C13163 - C13162 + C13165 - C13164 + C13167 - C13166 + C13169 -
            C13168) *
               C2662 +
           (C13171 - C13170 + C13173 - C13172 + C13175 - C13174 + C13177 -
            C13176) *
               C32199 +
           (C13137 * C258 - C13141 * C246 + C13138 * C690 - C13142 * C683 +
            C13139 * C1138 - C13143 * C1122 + C32246 * C2553 - C13144 * C2548) *
               C2663 +
           (C13137 * C276 - C13141 * C259 + C13138 * C698 - C13142 * C691 +
            C13139 * C1149 - C13143 * C1139 + C32246 * C2557 - C13144 * C2554) *
               C32003) *
              C31859 * C31918 * C31904 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C13137 * C122 - C13141 * C115 + C13138 * C359 - C13142 * C349 +
            C13139 * C369 - C13143 * C354 + C32246 * C2034 - C13144 * C2028) *
               C2662 +
           (C13137 * C136 - C13141 * C123 + C13138 * C379 - C13142 * C360 +
            C13139 * C384 - C13143 * C370 + C32246 * C2046 - C13144 * C2035) *
               C32199 +
           (C13992 - C13993 + C13994 - C13995 + C13996 - C13997 + C13998 -
            C13999) *
               C2663 +
           (C14000 - C14001 + C14002 - C14003 + C14004 - C14005 + C14006 -
            C14007) *
               C32003) *
              C31859 * C31918 * C240 +
          ((C13993 - C13992 + C13995 - C13994 + C13997 - C13996 + C13999 -
            C13998) *
               C2662 +
           (C14001 - C14000 + C14003 - C14002 + C14005 - C14004 + C14007 -
            C14006) *
               C32199 +
           (C14008 - C14009 + C14010 - C14011 + C14012 - C14013 + C14014 -
            C14015) *
               C2663 +
           (C14016 - C14017 + C14018 - C14019 + C14020 - C14021 + C14022 -
            C14023) *
               C32003) *
              C31859 * C31918 * C241 +
          ((C14009 - C14008 + C14011 - C14010 + C14013 - C14012 + C14015 -
            C14014) *
               C2662 +
           (C14017 - C14016 + C14019 - C14018 + C14021 - C14020 + C14023 -
            C14022) *
               C32199 +
           (C13137 * C963 - C13141 * C957 + C13138 * C1626 - C13142 * C1623 +
            C13139 * C6175 - C13143 * C6171 + C32246 * C7299 - C13144 * C7298) *
               C2663 +
           (C13137 * C975 - C13141 * C964 + C13138 * C1632 - C13142 * C1627 +
            C13139 * C6180 - C13143 * C6176 + C32246 * C7301 - C13144 * C7300) *
               C32003) *
              C31859 * C31918 * C242) *
         C31892) /
            (p * q * std::sqrt(p + q));
    d2ee[60] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C31958 * C122 - C113 * C115) * C114 +
                 (C31958 * C136 - C113 * C123) * C31941) *
                    C103 +
                ((C144 - C145) * C114 + (C146 - C147) * C31941) * C104 +
                C176 * C105 + C177 * C106 + C178 * C107) *
                   C31918 * C471 +
               (((C113 * C244 - C31958 * C254) * C114 +
                 (C113 * C255 - C31958 * C274) * C31941) *
                    C103 +
                ((C480 - C481) * C114 + (C482 - C483) * C31941) * C104 +
                ((C484 - C485) * C114 + (C486 - C487) * C31941) * C105 +
                ((C488 - C489) * C114 + (C490 - C491) * C31941) * C106 +
                ((C492 - C493) * C114 + (C494 - C495) * C31941) * C107) *
                   C31918 * C472) *
                  C473 +
              ((((C145 - C144) * C114 + (C147 - C146) * C31941) * C103 +
                ((C149 - C148) * C114 + (C151 - C150) * C31941) * C104 +
                ((C153 - C152) * C114 + (C155 - C154) * C31941) * C105 +
                ((C157 - C156) * C114 + (C159 - C158) * C31941) * C106 +
                ((C160 - C161) * C114 + (C162 - C163) * C31941) * C107) *
                   C31918 * C471 +
               (((C481 - C480) * C114 + (C483 - C482) * C31941) * C103 +
                ((C485 - C484) * C114 + (C487 - C486) * C31941) * C104 +
                ((C489 - C488) * C114 + (C491 - C490) * C31941) * C105 +
                ((C493 - C492) * C114 + (C495 - C494) * C31941) * C106 +
                ((C31958 * C476 - C113 * C475) * C114 +
                 (C31958 * C478 - C113 * C477) * C31941) *
                    C107) *
                   C31918 * C472) *
                  C474) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C31958 * C122 - C113 * C115) * C817 +
                 (C31958 * C136 - C113 * C123) * C32265 + (C982 - C983) * C818 +
                 (C984 - C985) * C32253 + C1004 * C819 + C1005 * C32230) *
                    C814 +
                ((C144 - C145) * C817 + (C146 - C147) * C32265 + C1302 * C818 +
                 C1303 * C32253 + C990 * C819 + C991 * C32230) *
                    C815 +
                C847 * C32219) *
                   C31918 * C471 +
               (((C983 - C982) * C817 + (C985 - C984) * C32265 +
                 (C987 - C986) * C818 + (C989 - C988) * C32253 +
                 (C992 - C993) * C819 + (C994 - C995) * C32230) *
                    C814 +
                (C1304 * C817 + C1305 * C32265 + C1306 * C818 + C1307 * C32253 +
                 (C996 - C997) * C819 + (C998 - C999) * C32230) *
                    C815 +
                (C1308 * C817 + C1309 * C32265 + C1310 * C818 + C1311 * C32253 +
                 (C1000 - C1001) * C819 + (C1002 - C1003) * C32230) *
                    C32219) *
                   C31918 * C472) *
                  C473 +
              ((((C145 - C144) * C817 + (C147 - C146) * C32265 + C1304 * C818 +
                 C1305 * C32253 + C1306 * C819 + C1307 * C32230) *
                    C814 +
                ((C149 - C148) * C817 + (C151 - C150) * C32265 + C1308 * C818 +
                 C1309 * C32253 + C1310 * C819 + C1311 * C32230) *
                    C815 +
                ((C153 - C152) * C817 + (C155 - C154) * C32265 +
                 (C488 - C489) * C818 + (C490 - C491) * C32253 +
                 (C833 - C834) * C819 + (C835 - C836) * C32230) *
                    C32219) *
                   C31918 * C471 +
               ((C1302 * C817 + C1303 * C32265 + C990 * C818 + C991 * C32253 +
                 (C997 - C996) * C819 + (C999 - C998) * C32230) *
                    C814 +
                (C827 * C817 + C828 * C32265 + C840 * C818 + C841 * C32253 +
                 (C1001 - C1000) * C819 + (C1003 - C1002) * C32230) *
                    C815 +
                ((C489 - C488) * C817 + (C491 - C490) * C32265 +
                 (C834 - C833) * C818 + (C836 - C835) * C32253 +
                 (C31958 * C1298 - C113 * C1297) * C819 +
                 (C31958 * C1300 - C113 * C1299) * C32230) *
                    C32219) *
                   C31918 * C472) *
                  C474)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C32266 * C122 - C1756 * C115 + C32255 * C359 - C1757 * C349 +
              C32233 * C369 - C1758 * C354) *
                 C114 +
             (C32266 * C136 - C1756 * C123 + C32255 * C379 - C1757 * C360 +
              C32233 * C384 - C1758 * C370) *
                 C31941) *
                C814 +
            ((C1760 - C1761 + C1762 - C1763 + C1764 - C1765) * C114 +
             (C1766 - C1767 + C1768 - C1769 + C1770 - C1771) * C31941) *
                C815 +
            C1808 * C32219) *
               C31918 * C471 +
           (((C1756 * C244 - C32266 * C254 + C1757 * C681 - C32255 * C686 +
              C1758 * C1118 - C32233 * C1130) *
                 C114 +
             (C1756 * C255 - C32266 * C274 + C1757 * C687 - C32255 * C696 +
              C1758 * C1131 - C32233 * C1145) *
                 C31941) *
                C814 +
            ((C2203 - C2204 + C2205 - C2206 + C2207 - C2208) * C114 +
             (C2209 - C2210 + C2211 - C2212 + C2213 - C2214) * C31941) *
                C815 +
            ((C2215 - C2216 + C2217 - C2218 + C2219 - C2220) * C114 +
             (C2221 - C2222 + C2223 - C2224 + C2225 - C2226) * C31941) *
                C32219) *
               C31918 * C472) *
              C473 +
          ((((C1761 - C1760 + C1763 - C1762 + C1765 - C1764) * C114 +
             (C1767 - C1766 + C1769 - C1768 + C1771 - C1770) * C31941) *
                C814 +
            ((C1773 - C1772 + C1775 - C1774 + C1777 - C1776) * C114 +
             (C1779 - C1778 + C1781 - C1780 + C1783 - C1782) * C31941) *
                C815 +
            ((C1784 - C1785 + C1786 - C1787 + C1788 - C1789) * C114 +
             (C1790 - C1791 + C1792 - C1793 + C1794 - C1795) * C31941) *
                C32219) *
               C31918 * C471 +
           (((C2204 - C2203 + C2206 - C2205 + C2208 - C2207) * C114 +
             (C2210 - C2209 + C2212 - C2211 + C2214 - C2213) * C31941) *
                C814 +
            ((C2216 - C2215 + C2218 - C2217 + C2220 - C2219) * C114 +
             (C2222 - C2221 + C2224 - C2223 + C2226 - C2225) * C31941) *
                C815 +
            ((C32266 * C260 - C1756 * C247 + C32255 * C692 - C1757 * C684 +
              C32233 * C2199 - C1758 * C2198) *
                 C114 +
             (C32266 * C277 - C1756 * C261 + C32255 * C699 - C1757 * C693 +
              C32233 * C2201 - C1758 * C2200) *
                 C31941) *
                C32219) *
               C31918 * C472) *
              C474)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C31958 * C122 - C113 * C115) * C5281 +
             (C31958 * C136 - C113 * C123) * C5275 + (C982 - C983) * C5282 +
             (C984 - C985) * C5276 + C1004 * C5283 + C1005 * C32230) *
                C32262 +
            ((C144 - C145) * C5281 + (C146 - C147) * C5275 + C1302 * C5282 +
             C1303 * C5276 + C990 * C5283 + C991 * C32230) *
                C32249 +
            C5295 * C32219) *
               C31918 * C471 +
           (((C983 - C982) * C5281 + (C985 - C984) * C5275 +
             (C987 - C986) * C5282 + (C989 - C988) * C5276 +
             (C992 - C993) * C5283 + (C994 - C995) * C32230) *
                C32262 +
            (C1304 * C5281 + C1305 * C5275 + C1306 * C5282 + C1307 * C5276 +
             (C996 - C997) * C5283 + (C998 - C999) * C32230) *
                C32249 +
            (C1308 * C5281 + C1309 * C5275 + C1310 * C5282 + C1311 * C5276 +
             (C1000 - C1001) * C5283 + (C1002 - C1003) * C32230) *
                C32219) *
               C31918 * C472) *
              C473 +
          ((((C145 - C144) * C5281 + (C147 - C146) * C5275 + C1304 * C5282 +
             C1305 * C5276 + C1306 * C5283 + C1307 * C32230) *
                C32262 +
            ((C149 - C148) * C5281 + (C151 - C150) * C5275 + C1308 * C5282 +
             C1309 * C5276 + C1310 * C5283 + C1311 * C32230) *
                C32249 +
            ((C153 - C152) * C5281 + (C155 - C154) * C5275 + C3007 * C5282 +
             C3008 * C5276 + (C833 - C834) * C5283 + (C835 - C836) * C32230) *
                C32219) *
               C31918 * C471 +
           ((C1302 * C5281 + C1303 * C5275 + C990 * C5282 + C991 * C5276 +
             (C997 - C996) * C5283 + (C999 - C998) * C32230) *
                C32262 +
            (C827 * C5281 + C828 * C5275 + C840 * C5282 + C841 * C5276 +
             (C1001 - C1000) * C5283 + (C1003 - C1002) * C32230) *
                C32249 +
            (C2671 * C5281 + C2672 * C5275 + (C834 - C833) * C5282 +
             (C836 - C835) * C5276 + (C31958 * C1298 - C113 * C1297) * C5283 +
             (C31958 * C1300 - C113 * C1299) * C32230) *
                C32219) *
               C31918 * C472) *
              C474)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C31958 * C122 - C113 * C115) * C6021 +
            (C31958 * C136 - C113 * C123) * C6015 + (C982 - C983) * C6022 +
            (C984 - C985) * C6016 + C1004 * C6023 + C1005 * C6017 +
            C6097 * C6024 + C6098 * C6018 + C6107 * C6025 + C6108 * C6019) *
               C31859 * C31918 * C471 +
           ((C983 - C982) * C6021 + (C985 - C984) * C6015 +
            (C987 - C986) * C6022 + (C989 - C988) * C6016 +
            (C992 - C993) * C6023 + (C994 - C995) * C6017 +
            (C6100 - C6099) * C6024 + (C6102 - C6101) * C6018 +
            (C6103 - C6104) * C6025 + (C6105 - C6106) * C6019) *
               C31859 * C31918 * C472) *
              C473 +
          (((C145 - C144) * C6021 + (C147 - C146) * C6015 + C1304 * C6022 +
            C1305 * C6016 + C1306 * C6023 + C1307 * C6017 +
            (C996 - C997) * C6024 + (C998 - C999) * C6018 +
            (C6269 - C6270) * C6025 + (C6271 - C6272) * C6019) *
               C31859 * C31918 * C471 +
           (C1302 * C6021 + C1303 * C6015 + C990 * C6022 + C991 * C6016 +
            (C997 - C996) * C6023 + (C999 - C998) * C6017 +
            (C6270 - C6269) * C6024 + (C6272 - C6271) * C6018 +
            (C31958 * C6265 - C113 * C6264) * C6025 +
            (C31958 * C6267 - C113 * C6266) * C6019) *
               C31859 * C31918 * C472) *
              C474)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C32266 * C122 - C1756 * C115 + C32255 * C359 - C1757 * C349 +
             C32233 * C369 - C1758 * C354) *
                C5281 +
            (C32266 * C136 - C1756 * C123 + C32255 * C379 - C1757 * C360 +
             C32233 * C384 - C1758 * C370) *
                C5275 +
            (C6673 - C6674 + C6675 - C6676 + C6677 - C6678) * C5282 +
            (C6679 - C6680 + C6681 - C6682 + C6683 - C6684) * C5276 +
            C6717 * C5283 + C6718 * C32230) *
               C31859 * C31918 * C471 +
           ((C6674 - C6673 + C6676 - C6675 + C6678 - C6677) * C5281 +
            (C6680 - C6679 + C6682 - C6681 + C6684 - C6683) * C5275 +
            (C6686 - C6685 + C6688 - C6687 + C6690 - C6689) * C5282 +
            (C6692 - C6691 + C6694 - C6693 + C6696 - C6695) * C5276 +
            (C6697 - C6698 + C6699 - C6700 + C6701 - C6702) * C5283 +
            (C6703 - C6704 + C6705 - C6706 + C6707 - C6708) * C32230) *
               C31859 * C31918 * C472) *
              C473 +
          (((C1761 - C1760 + C1763 - C1762 + C1765 - C1764) * C5281 +
            (C1767 - C1766 + C1769 - C1768 + C1771 - C1770) * C5275 +
            (C2203 - C2204 + C2205 - C2206 + C2207 - C2208) * C5282 +
            (C2209 - C2210 + C2211 - C2212 + C2213 - C2214) * C5276 +
            (C6991 - C6992 + C6993 - C6994 + C6995 - C6996) * C5283 +
            (C6997 - C6998 + C6999 - C7000 + C7001 - C7002) * C32230) *
               C31859 * C31918 * C471 +
           ((C2204 - C2203 + C2206 - C2205 + C2208 - C2207) * C5281 +
            (C2210 - C2209 + C2212 - C2211 + C2214 - C2213) * C5275 +
            (C6992 - C6991 + C6994 - C6993 + C6996 - C6995) * C5282 +
            (C6998 - C6997 + C7000 - C6999 + C7002 - C7001) * C5276 +
            (C32266 * C965 - C1756 * C958 + C32255 * C1628 - C1757 * C1624 +
             C32233 * C6987 - C1758 * C6986) *
                C5283 +
            (C32266 * C976 - C1756 * C966 + C32255 * C1633 - C1757 * C1629 +
             C32233 * C6989 - C1758 * C6988) *
                C32230) *
               C31859 * C31918 * C472) *
              C474)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C9914 * C122 - C9917 * C115 + C9915 * C359 - C9918 * C349 +
              C32233 * C369 - C9919 * C354) *
                 C114 +
             (C9914 * C136 - C9917 * C123 + C9915 * C379 - C9918 * C360 +
              C32233 * C384 - C9919 * C370) *
                 C31941) *
                C32262 +
            ((C9921 - C9922 + C9923 - C9924 + C9925 - C9926) * C114 +
             (C9927 - C9928 + C9929 - C9930 + C9931 - C9932) * C31941) *
                C32249 +
            C9969 * C32219) *
               C31918 * C471 +
           (((C9917 * C244 - C9914 * C254 + C9918 * C681 - C9915 * C686 +
              C9919 * C1118 - C32233 * C1130) *
                 C114 +
             (C9917 * C255 - C9914 * C274 + C9918 * C687 - C9915 * C696 +
              C9919 * C1131 - C32233 * C1145) *
                 C31941) *
                C32262 +
            ((C10336 - C10337 + C10338 - C10339 + C10340 - C10341) * C114 +
             (C10342 - C10343 + C10344 - C10345 + C10346 - C10347) * C31941) *
                C32249 +
            ((C10348 - C10349 + C10350 - C10351 + C10352 - C10353) * C114 +
             (C10354 - C10355 + C10356 - C10357 + C10358 - C10359) * C31941) *
                C32219) *
               C31918 * C472) *
              C473 +
          ((((C9922 - C9921 + C9924 - C9923 + C9926 - C9925) * C114 +
             (C9928 - C9927 + C9930 - C9929 + C9932 - C9931) * C31941) *
                C32262 +
            ((C9934 - C9933 + C9936 - C9935 + C9938 - C9937) * C114 +
             (C9940 - C9939 + C9942 - C9941 + C9944 - C9943) * C31941) *
                C32249 +
            ((C9945 - C9946 + C9947 - C9948 + C9949 - C9950) * C114 +
             (C9951 - C9952 + C9953 - C9954 + C9955 - C9956) * C31941) *
                C32219) *
               C31918 * C471 +
           (((C10337 - C10336 + C10339 - C10338 + C10341 - C10340) * C114 +
             (C10343 - C10342 + C10345 - C10344 + C10347 - C10346) * C31941) *
                C32262 +
            ((C10349 - C10348 + C10351 - C10350 + C10353 - C10352) * C114 +
             (C10355 - C10354 + C10357 - C10356 + C10359 - C10358) * C31941) *
                C32249 +
            ((C9914 * C260 - C9917 * C247 + C9915 * C692 - C9918 * C684 +
              C32233 * C2199 - C9919 * C2198) *
                 C114 +
             (C9914 * C277 - C9917 * C261 + C9915 * C699 - C9918 * C693 +
              C32233 * C2201 - C9919 * C2200) *
                 C31941) *
                C32219) *
               C31918 * C472) *
              C474)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C9914 * C122 - C9917 * C115 + C9915 * C359 - C9918 * C349 +
             C32233 * C369 - C9919 * C354) *
                C817 +
            (C9914 * C136 - C9917 * C123 + C9915 * C379 - C9918 * C360 +
             C32233 * C384 - C9919 * C370) *
                C32265 +
            (C10896 - C10897 + C10898 - C10899 + C10900 - C10901) * C818 +
            (C10902 - C10903 + C10904 - C10905 + C10906 - C10907) * C32253 +
            C10940 * C819 + C10941 * C32230) *
               C31859 * C31918 * C471 +
           ((C10897 - C10896 + C10899 - C10898 + C10901 - C10900) * C817 +
            (C10903 - C10902 + C10905 - C10904 + C10907 - C10906) * C32265 +
            (C10909 - C10908 + C10911 - C10910 + C10913 - C10912) * C818 +
            (C10915 - C10914 + C10917 - C10916 + C10919 - C10918) * C32253 +
            (C10920 - C10921 + C10922 - C10923 + C10924 - C10925) * C819 +
            (C10926 - C10927 + C10928 - C10929 + C10930 - C10931) * C32230) *
               C31859 * C31918 * C472) *
              C473 +
          (((C9922 - C9921 + C9924 - C9923 + C9926 - C9925) * C817 +
            (C9928 - C9927 + C9930 - C9929 + C9932 - C9931) * C32265 +
            (C10336 - C10337 + C10338 - C10339 + C10340 - C10341) * C818 +
            (C10342 - C10343 + C10344 - C10345 + C10346 - C10347) * C32253 +
            (C11198 - C11199 + C11200 - C11201 + C11202 - C11203) * C819 +
            (C11204 - C11205 + C11206 - C11207 + C11208 - C11209) * C32230) *
               C31859 * C31918 * C471 +
           ((C10337 - C10336 + C10339 - C10338 + C10341 - C10340) * C817 +
            (C10343 - C10342 + C10345 - C10344 + C10347 - C10346) * C32265 +
            (C11199 - C11198 + C11201 - C11200 + C11203 - C11202) * C818 +
            (C11205 - C11204 + C11207 - C11206 + C11209 - C11208) * C32253 +
            (C9914 * C965 - C9917 * C958 + C9915 * C1628 - C9918 * C1624 +
             C32233 * C6987 - C9919 * C6986) *
                C819 +
            (C9914 * C976 - C9917 * C966 + C9915 * C1633 - C9918 * C1629 +
             C32233 * C6989 - C9919 * C6988) *
                C32230) *
               C31859 * C31918 * C472) *
              C474)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C11587 * C122 - C11592 * C115 + C11588 * C359 - C11593 * C349 +
             C11589 * C369 - C11594 * C354 + C11590 * C2034 - C11595 * C2028 +
             C11591 * C2040 - C11596 * C2031) *
                C114 +
            (C11587 * C136 - C11592 * C123 + C11588 * C379 - C11593 * C360 +
             C11589 * C384 - C11594 * C370 + C11590 * C2046 - C11595 * C2035 +
             C11591 * C2049 - C11596 * C2041) *
                C31941) *
               C31859 * C31918 * C471 +
           ((C11592 * C244 - C11587 * C254 + C11593 * C681 - C11588 * C686 +
             C11594 * C1118 - C11589 * C1130 + C11595 * C2546 - C11590 * C2549 +
             C11596 * C6829 - C11591 * C6833) *
                C114 +
            (C11592 * C255 - C11587 * C274 + C11593 * C687 - C11588 * C696 +
             C11594 * C1131 - C11589 * C1145 + C11595 * C2550 - C11590 * C2555 +
             C11596 * C6834 - C11591 * C6838) *
                C31941) *
               C31859 * C31918 * C472) *
              C473 +
          (((C11592 * C116 - C11587 * C124 + C11593 * C350 - C11588 * C361 +
             C11594 * C355 - C11589 * C371 + C11595 * C2029 - C11590 * C2036 +
             C11596 * C2032 - C11591 * C2042) *
                C114 +
            (C11592 * C125 - C11587 * C137 + C11593 * C362 - C11588 * C380 +
             C11594 * C372 - C11589 * C385 + C11595 * C2037 - C11590 * C2047 +
             C11596 * C2043 - C11591 * C2050) *
                C31941) *
               C31859 * C31918 * C471 +
           ((C11587 * C256 - C11592 * C245 + C11588 * C688 - C11593 * C682 +
             C11589 * C1134 - C11594 * C1120 + C11590 * C2551 - C11595 * C2547 +
             C11591 * C11812 - C11596 * C11811) *
                C114 +
            (C11587 * C275 - C11592 * C257 + C11588 * C697 - C11593 * C689 +
             C11589 * C1147 - C11594 * C1135 + C11590 * C2556 - C11595 * C2552 +
             C11591 * C11814 - C11596 * C11813) *
                C31941) *
               C31859 * C31918 * C472) *
              C474)) /
            (p * q * std::sqrt(p + q));
    d2ee[61] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C31958 * C122 - C113 * C115) * C114 +
                 (C31958 * C136 - C113 * C123) * C31941) *
                    C103 +
                ((C144 - C145) * C114 + (C146 - C147) * C31941) * C104 +
                C176 * C105 + C177 * C106 + C178 * C107) *
                   C577 +
               (((C113 * C349 - C31958 * C359) * C114 +
                 (C113 * C360 - C31958 * C379) * C31941) *
                    C103 +
                ((C584 - C585) * C114 + (C586 - C587) * C31941) * C104 +
                ((C588 - C589) * C114 + (C590 - C591) * C31941) * C105 +
                ((C592 - C593) * C114 + (C594 - C595) * C31941) * C106 +
                ((C596 - C597) * C114 + (C598 - C599) * C31941) * C107) *
                   C578) *
                  C471 +
              ((((C113 * C244 - C31958 * C254) * C114 +
                 (C113 * C255 - C31958 * C274) * C31941) *
                    C103 +
                ((C480 - C481) * C114 + (C482 - C483) * C31941) * C104 +
                ((C484 - C485) * C114 + (C486 - C487) * C31941) * C105 +
                ((C488 - C489) * C114 + (C490 - C491) * C31941) * C106 +
                ((C492 - C493) * C114 + (C494 - C495) * C31941) * C107) *
                   C577 +
               (((C31958 * C686 - C113 * C681) * C114 +
                 (C31958 * C696 - C113 * C687) * C31941) *
                    C103 +
                ((C31958 * C688 - C113 * C682) * C114 +
                 (C31958 * C697 - C113 * C689) * C31941) *
                    C104 +
                ((C31958 * C690 - C113 * C683) * C114 +
                 (C31958 * C698 - C113 * C691) * C31941) *
                    C105 +
                ((C31958 * C692 - C113 * C684) * C114 +
                 (C31958 * C699 - C113 * C693) * C31941) *
                    C106 +
                ((C31958 * C694 - C113 * C685) * C114 +
                 (C31958 * C700 - C113 * C695) * C31941) *
                    C107) *
                   C578) *
                  C472) *
             C31892 +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C31958 * C122 - C113 * C115) * C817 +
                 (C31958 * C136 - C113 * C123) * C32265 + (C982 - C983) * C818 +
                 (C984 - C985) * C32253 + C1004 * C819 + C1005 * C32230) *
                    C814 +
                ((C144 - C145) * C817 + (C146 - C147) * C32265 + C1302 * C818 +
                 C1303 * C32253 + C990 * C819 + C991 * C32230) *
                    C815 +
                C847 * C32219) *
                   C577 +
               (((C113 * C349 - C31958 * C359) * C817 +
                 (C113 * C360 - C31958 * C379) * C32265 +
                 (C1636 - C1637) * C818 + (C1638 - C1639) * C32253 +
                 (C1640 - C1641) * C819 + (C1642 - C1643) * C32230) *
                    C814 +
                ((C584 - C585) * C817 + (C586 - C587) * C32265 +
                 (C1462 - C1463) * C818 + (C1464 - C1465) * C32253 +
                 (C1466 - C1467) * C819 + (C1468 - C1469) * C32230) *
                    C815 +
                ((C588 - C589) * C817 + (C590 - C591) * C32265 +
                 (C1470 - C1471) * C818 + (C1472 - C1473) * C32253 +
                 (C1474 - C1475) * C819 + (C1476 - C1477) * C32230) *
                    C32219) *
                   C578) *
                  C471 +
              ((((C983 - C982) * C817 + (C985 - C984) * C32265 +
                 (C987 - C986) * C818 + (C989 - C988) * C32253 +
                 (C992 - C993) * C819 + (C994 - C995) * C32230) *
                    C814 +
                (C1304 * C817 + C1305 * C32265 + C1306 * C818 + C1307 * C32253 +
                 (C996 - C997) * C819 + (C998 - C999) * C32230) *
                    C815 +
                (C1308 * C817 + C1309 * C32265 + C1310 * C818 + C1311 * C32253 +
                 (C1000 - C1001) * C819 + (C1002 - C1003) * C32230) *
                    C32219) *
                   C577 +
               (((C1637 - C1636) * C817 + (C1639 - C1638) * C32265 +
                 (C1641 - C1640) * C818 + (C1643 - C1642) * C32253 +
                 (C31958 * C1626 - C113 * C1623) * C819 +
                 (C31958 * C1632 - C113 * C1627) * C32230) *
                    C814 +
                ((C1463 - C1462) * C817 + (C1465 - C1464) * C32265 +
                 (C1467 - C1466) * C818 + (C1469 - C1468) * C32253 +
                 (C31958 * C1628 - C113 * C1624) * C819 +
                 (C31958 * C1633 - C113 * C1629) * C32230) *
                    C815 +
                ((C1471 - C1470) * C817 + (C1473 - C1472) * C32265 +
                 (C1475 - C1474) * C818 + (C1477 - C1476) * C32253 +
                 (C31958 * C1630 - C113 * C1625) * C819 +
                 (C31958 * C1634 - C113 * C1631) * C32230) *
                    C32219) *
                   C578) *
                  C472) *
             C31892) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C32266 * C122 - C1756 * C115 + C32255 * C359 - C1757 * C349 +
              C32233 * C369 - C1758 * C354) *
                 C114 +
             (C32266 * C136 - C1756 * C123 + C32255 * C379 - C1757 * C360 +
              C32233 * C384 - C1758 * C370) *
                 C31941) *
                C814 +
            ((C1760 - C1761 + C1762 - C1763 + C1764 - C1765) * C114 +
             (C1766 - C1767 + C1768 - C1769 + C1770 - C1771) * C31941) *
                C815 +
            C1808 * C32219) *
               C577 +
           (((C1756 * C349 - C32266 * C359 + C1757 * C354 - C32255 * C369 +
              C1758 * C2028 - C32233 * C2034) *
                 C114 +
             (C1756 * C360 - C32266 * C379 + C1757 * C370 - C32255 * C384 +
              C1758 * C2035 - C32233 * C2046) *
                 C31941) *
                C814 +
            ((C2377 - C2378 + C2379 - C2380 + C2381 - C2382) * C114 +
             (C2383 - C2384 + C2385 - C2386 + C2387 - C2388) * C31941) *
                C815 +
            ((C2389 - C2390 + C2391 - C2392 + C2393 - C2394) * C114 +
             (C2395 - C2396 + C2397 - C2398 + C2399 - C2400) * C31941) *
                C32219) *
               C578) *
              C471 +
          ((((C1756 * C244 - C32266 * C254 + C1757 * C681 - C32255 * C686 +
              C1758 * C1118 - C32233 * C1130) *
                 C114 +
             (C1756 * C255 - C32266 * C274 + C1757 * C687 - C32255 * C696 +
              C1758 * C1131 - C32233 * C1145) *
                 C31941) *
                C814 +
            ((C2203 - C2204 + C2205 - C2206 + C2207 - C2208) * C114 +
             (C2209 - C2210 + C2211 - C2212 + C2213 - C2214) * C31941) *
                C815 +
            ((C2215 - C2216 + C2217 - C2218 + C2219 - C2220) * C114 +
             (C2221 - C2222 + C2223 - C2224 + C2225 - C2226) * C31941) *
                C32219) *
               C577 +
           (((C32266 * C686 - C1756 * C681 + C32255 * C1130 - C1757 * C1118 +
              C32233 * C2549 - C1758 * C2546) *
                 C114 +
             (C32266 * C696 - C1756 * C687 + C32255 * C1145 - C1757 * C1131 +
              C32233 * C2555 - C1758 * C2550) *
                 C31941) *
                C814 +
            ((C32266 * C688 - C1756 * C682 + C32255 * C1134 - C1757 * C1120 +
              C32233 * C2551 - C1758 * C2547) *
                 C114 +
             (C32266 * C697 - C1756 * C689 + C32255 * C1147 - C1757 * C1135 +
              C32233 * C2556 - C1758 * C2552) *
                 C31941) *
                C815 +
            ((C32266 * C690 - C1756 * C683 + C32255 * C1138 - C1757 * C1122 +
              C32233 * C2553 - C1758 * C2548) *
                 C114 +
             (C32266 * C698 - C1756 * C691 + C32255 * C1149 - C1757 * C1139 +
              C32233 * C2557 - C1758 * C2554) *
                 C31941) *
                C32219) *
               C578) *
              C472) *
         C31892) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C31958 * C122 - C113 * C115) * C5281 +
             (C31958 * C136 - C113 * C123) * C5275 + (C982 - C983) * C5282 +
             (C984 - C985) * C5276 + C1004 * C5283 + C1005 * C32230) *
                C32262 +
            ((C144 - C145) * C5281 + (C146 - C147) * C5275 + C1302 * C5282 +
             C1303 * C5276 + C990 * C5283 + C991 * C32230) *
                C32249 +
            C5295 * C32219) *
               C577 +
           (((C113 * C349 - C31958 * C359) * C5281 +
             (C113 * C360 - C31958 * C379) * C5275 + (C1636 - C1637) * C5282 +
             (C1638 - C1639) * C5276 + (C1640 - C1641) * C5283 +
             (C1642 - C1643) * C32230) *
                C32262 +
            ((C584 - C585) * C5281 + (C586 - C587) * C5275 +
             (C1462 - C1463) * C5282 + (C1464 - C1465) * C5276 +
             (C1466 - C1467) * C5283 + (C1468 - C1469) * C32230) *
                C32249 +
            ((C588 - C589) * C5281 + (C590 - C591) * C5275 +
             (C1470 - C1471) * C5282 + (C1472 - C1473) * C5276 +
             (C1474 - C1475) * C5283 + (C1476 - C1477) * C32230) *
                C32219) *
               C578) *
              C471 +
          ((((C983 - C982) * C5281 + (C985 - C984) * C5275 +
             (C987 - C986) * C5282 + (C989 - C988) * C5276 +
             (C992 - C993) * C5283 + (C994 - C995) * C32230) *
                C32262 +
            (C1304 * C5281 + C1305 * C5275 + C1306 * C5282 + C1307 * C5276 +
             (C996 - C997) * C5283 + (C998 - C999) * C32230) *
                C32249 +
            (C1308 * C5281 + C1309 * C5275 + C1310 * C5282 + C1311 * C5276 +
             (C1000 - C1001) * C5283 + (C1002 - C1003) * C32230) *
                C32219) *
               C577 +
           (((C1637 - C1636) * C5281 + (C1639 - C1638) * C5275 +
             (C1641 - C1640) * C5282 + (C1643 - C1642) * C5276 +
             (C31958 * C1626 - C113 * C1623) * C5283 +
             (C31958 * C1632 - C113 * C1627) * C32230) *
                C32262 +
            ((C1463 - C1462) * C5281 + (C1465 - C1464) * C5275 +
             (C1467 - C1466) * C5282 + (C1469 - C1468) * C5276 +
             (C31958 * C1628 - C113 * C1624) * C5283 +
             (C31958 * C1633 - C113 * C1629) * C32230) *
                C32249 +
            ((C1471 - C1470) * C5281 + (C1473 - C1472) * C5275 +
             (C1475 - C1474) * C5282 + (C1477 - C1476) * C5276 +
             (C31958 * C1630 - C113 * C1625) * C5283 +
             (C31958 * C1634 - C113 * C1631) * C32230) *
                C32219) *
               C578) *
              C472) *
         C31892) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C31958 * C122 - C113 * C115) * C6021 +
            (C31958 * C136 - C113 * C123) * C6015 + (C982 - C983) * C6022 +
            (C984 - C985) * C6016 + C1004 * C6023 + C1005 * C6017 +
            C6097 * C6024 + C6098 * C6018 + C6107 * C6025 + C6108 * C6019) *
               C31859 * C577 +
           ((C113 * C349 - C31958 * C359) * C6021 +
            (C113 * C360 - C31958 * C379) * C6015 + (C1636 - C1637) * C6022 +
            (C1638 - C1639) * C6016 + (C1640 - C1641) * C6023 +
            (C1642 - C1643) * C6017 + (C6445 - C6446) * C6024 +
            (C6447 - C6448) * C6018 + (C6449 - C6450) * C6025 +
            (C6451 - C6452) * C6019) *
               C31859 * C578) *
              C471 +
          (((C983 - C982) * C6021 + (C985 - C984) * C6015 +
            (C987 - C986) * C6022 + (C989 - C988) * C6016 +
            (C992 - C993) * C6023 + (C994 - C995) * C6017 +
            (C6100 - C6099) * C6024 + (C6102 - C6101) * C6018 +
            (C6103 - C6104) * C6025 + (C6105 - C6106) * C6019) *
               C31859 * C577 +
           ((C1637 - C1636) * C6021 + (C1639 - C1638) * C6015 +
            (C1641 - C1640) * C6022 + (C1643 - C1642) * C6016 +
            (C6446 - C6445) * C6023 + (C6448 - C6447) * C6017 +
            (C6450 - C6449) * C6024 + (C6452 - C6451) * C6018 +
            (C31958 * C6441 - C113 * C6440) * C6025 +
            (C31958 * C6443 - C113 * C6442) * C6019) *
               C31859 * C578) *
              C472) *
         C31892) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C32266 * C122 - C1756 * C115 + C32255 * C359 - C1757 * C349 +
             C32233 * C369 - C1758 * C354) *
                C5281 +
            (C32266 * C136 - C1756 * C123 + C32255 * C379 - C1757 * C360 +
             C32233 * C384 - C1758 * C370) *
                C5275 +
            (C6673 - C6674 + C6675 - C6676 + C6677 - C6678) * C5282 +
            (C6679 - C6680 + C6681 - C6682 + C6683 - C6684) * C5276 +
            C6717 * C5283 + C6718 * C32230) *
               C31859 * C577 +
           ((C1756 * C349 - C32266 * C359 + C1757 * C354 - C32255 * C369 +
             C1758 * C2028 - C32233 * C2034) *
                C5281 +
            (C1756 * C360 - C32266 * C379 + C1757 * C370 - C32255 * C384 +
             C1758 * C2035 - C32233 * C2046) *
                C5275 +
            (C7303 - C7304 + C7305 - C7306 + C7307 - C7308) * C5282 +
            (C7309 - C7310 + C7311 - C7312 + C7313 - C7314) * C5276 +
            (C7315 - C7316 + C7317 - C7318 + C7319 - C7320) * C5283 +
            (C7321 - C7322 + C7323 - C7324 + C7325 - C7326) * C32230) *
               C31859 * C578) *
              C471 +
          (((C6674 - C6673 + C6676 - C6675 + C6678 - C6677) * C5281 +
            (C6680 - C6679 + C6682 - C6681 + C6684 - C6683) * C5275 +
            (C6686 - C6685 + C6688 - C6687 + C6690 - C6689) * C5282 +
            (C6692 - C6691 + C6694 - C6693 + C6696 - C6695) * C5276 +
            (C6697 - C6698 + C6699 - C6700 + C6701 - C6702) * C5283 +
            (C6703 - C6704 + C6705 - C6706 + C6707 - C6708) * C32230) *
               C31859 * C577 +
           ((C7304 - C7303 + C7306 - C7305 + C7308 - C7307) * C5281 +
            (C7310 - C7309 + C7312 - C7311 + C7314 - C7313) * C5275 +
            (C7316 - C7315 + C7318 - C7317 + C7320 - C7319) * C5282 +
            (C7322 - C7321 + C7324 - C7323 + C7326 - C7325) * C5276 +
            (C32266 * C1626 - C1756 * C1623 + C32255 * C6175 - C1757 * C6171 +
             C32233 * C7299 - C1758 * C7298) *
                C5283 +
            (C32266 * C1632 - C1756 * C1627 + C32255 * C6180 - C1757 * C6176 +
             C32233 * C7301 - C1758 * C7300) *
                C32230) *
               C31859 * C578) *
              C472) *
         C31892) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C9914 * C122 - C9917 * C115 + C9915 * C359 - C9918 * C349 +
              C32233 * C369 - C9919 * C354) *
                 C114 +
             (C9914 * C136 - C9917 * C123 + C9915 * C379 - C9918 * C360 +
              C32233 * C384 - C9919 * C370) *
                 C31941) *
                C32262 +
            ((C9921 - C9922 + C9923 - C9924 + C9925 - C9926) * C114 +
             (C9927 - C9928 + C9929 - C9930 + C9931 - C9932) * C31941) *
                C32249 +
            C9969 * C32219) *
               C577 +
           (((C9917 * C349 - C9914 * C359 + C9918 * C354 - C9915 * C369 +
              C9919 * C2028 - C32233 * C2034) *
                 C114 +
             (C9917 * C360 - C9914 * C379 + C9918 * C370 - C9915 * C384 +
              C9919 * C2035 - C32233 * C2046) *
                 C31941) *
                C32262 +
            ((C10506 - C10507 + C10508 - C10509 + C10510 - C10511) * C114 +
             (C10512 - C10513 + C10514 - C10515 + C10516 - C10517) * C31941) *
                C32249 +
            ((C10518 - C10519 + C10520 - C10521 + C10522 - C10523) * C114 +
             (C10524 - C10525 + C10526 - C10527 + C10528 - C10529) * C31941) *
                C32219) *
               C578) *
              C471 +
          ((((C9917 * C244 - C9914 * C254 + C9918 * C681 - C9915 * C686 +
              C9919 * C1118 - C32233 * C1130) *
                 C114 +
             (C9917 * C255 - C9914 * C274 + C9918 * C687 - C9915 * C696 +
              C9919 * C1131 - C32233 * C1145) *
                 C31941) *
                C32262 +
            ((C10336 - C10337 + C10338 - C10339 + C10340 - C10341) * C114 +
             (C10342 - C10343 + C10344 - C10345 + C10346 - C10347) * C31941) *
                C32249 +
            ((C10348 - C10349 + C10350 - C10351 + C10352 - C10353) * C114 +
             (C10354 - C10355 + C10356 - C10357 + C10358 - C10359) * C31941) *
                C32219) *
               C577 +
           (((C9914 * C686 - C9917 * C681 + C9915 * C1130 - C9918 * C1118 +
              C32233 * C2549 - C9919 * C2546) *
                 C114 +
             (C9914 * C696 - C9917 * C687 + C9915 * C1145 - C9918 * C1131 +
              C32233 * C2555 - C9919 * C2550) *
                 C31941) *
                C32262 +
            ((C9914 * C688 - C9917 * C682 + C9915 * C1134 - C9918 * C1120 +
              C32233 * C2551 - C9919 * C2547) *
                 C114 +
             (C9914 * C697 - C9917 * C689 + C9915 * C1147 - C9918 * C1135 +
              C32233 * C2556 - C9919 * C2552) *
                 C31941) *
                C32249 +
            ((C9914 * C690 - C9917 * C683 + C9915 * C1138 - C9918 * C1122 +
              C32233 * C2553 - C9919 * C2548) *
                 C114 +
             (C9914 * C698 - C9917 * C691 + C9915 * C1149 - C9918 * C1139 +
              C32233 * C2557 - C9919 * C2554) *
                 C31941) *
                C32219) *
               C578) *
              C472) *
         C31892) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C9914 * C122 - C9917 * C115 + C9915 * C359 - C9918 * C349 +
             C32233 * C369 - C9919 * C354) *
                C817 +
            (C9914 * C136 - C9917 * C123 + C9915 * C379 - C9918 * C360 +
             C32233 * C384 - C9919 * C370) *
                C32265 +
            (C10896 - C10897 + C10898 - C10899 + C10900 - C10901) * C818 +
            (C10902 - C10903 + C10904 - C10905 + C10906 - C10907) * C32253 +
            C10940 * C819 + C10941 * C32230) *
               C31859 * C577 +
           ((C9917 * C349 - C9914 * C359 + C9918 * C354 - C9915 * C369 +
             C9919 * C2028 - C32233 * C2034) *
                C817 +
            (C9917 * C360 - C9914 * C379 + C9918 * C370 - C9915 * C384 +
             C9919 * C2035 - C32233 * C2046) *
                C32265 +
            (C11502 - C11503 + C11504 - C11505 + C11506 - C11507) * C818 +
            (C11508 - C11509 + C11510 - C11511 + C11512 - C11513) * C32253 +
            (C11514 - C11515 + C11516 - C11517 + C11518 - C11519) * C819 +
            (C11520 - C11521 + C11522 - C11523 + C11524 - C11525) * C32230) *
               C31859 * C578) *
              C471 +
          (((C10897 - C10896 + C10899 - C10898 + C10901 - C10900) * C817 +
            (C10903 - C10902 + C10905 - C10904 + C10907 - C10906) * C32265 +
            (C10909 - C10908 + C10911 - C10910 + C10913 - C10912) * C818 +
            (C10915 - C10914 + C10917 - C10916 + C10919 - C10918) * C32253 +
            (C10920 - C10921 + C10922 - C10923 + C10924 - C10925) * C819 +
            (C10926 - C10927 + C10928 - C10929 + C10930 - C10931) * C32230) *
               C31859 * C577 +
           ((C11503 - C11502 + C11505 - C11504 + C11507 - C11506) * C817 +
            (C11509 - C11508 + C11511 - C11510 + C11513 - C11512) * C32265 +
            (C11515 - C11514 + C11517 - C11516 + C11519 - C11518) * C818 +
            (C11521 - C11520 + C11523 - C11522 + C11525 - C11524) * C32253 +
            (C9914 * C1626 - C9917 * C1623 + C9915 * C6175 - C9918 * C6171 +
             C32233 * C7299 - C9919 * C7298) *
                C819 +
            (C9914 * C1632 - C9917 * C1627 + C9915 * C6180 - C9918 * C6176 +
             C32233 * C7301 - C9919 * C7300) *
                C32230) *
               C31859 * C578) *
              C472) *
         C31892) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C11587 * C122 - C11592 * C115 + C11588 * C359 - C11593 * C349 +
             C11589 * C369 - C11594 * C354 + C11590 * C2034 - C11595 * C2028 +
             C11591 * C2040 - C11596 * C2031) *
                C114 +
            (C11587 * C136 - C11592 * C123 + C11588 * C379 - C11593 * C360 +
             C11589 * C384 - C11594 * C370 + C11590 * C2046 - C11595 * C2035 +
             C11591 * C2049 - C11596 * C2041) *
                C31941) *
               C31859 * C577 +
           ((C11592 * C349 - C11587 * C359 + C11593 * C354 - C11588 * C369 +
             C11594 * C2028 - C11589 * C2034 + C11595 * C2031 - C11590 * C2040 +
             C11596 * C11721 - C11591 * C11723) *
                C114 +
            (C11592 * C360 - C11587 * C379 + C11593 * C370 - C11588 * C384 +
             C11594 * C2035 - C11589 * C2046 + C11595 * C2041 - C11590 * C2049 +
             C11596 * C11724 - C11591 * C11727) *
                C31941) *
               C31859 * C578) *
              C471 +
          (((C11592 * C244 - C11587 * C254 + C11593 * C681 - C11588 * C686 +
             C11594 * C1118 - C11589 * C1130 + C11595 * C2546 - C11590 * C2549 +
             C11596 * C6829 - C11591 * C6833) *
                C114 +
            (C11592 * C255 - C11587 * C274 + C11593 * C687 - C11588 * C696 +
             C11594 * C1131 - C11589 * C1145 + C11595 * C2550 - C11590 * C2555 +
             C11596 * C6834 - C11591 * C6838) *
                C31941) *
               C31859 * C577 +
           ((C11587 * C686 - C11592 * C681 + C11588 * C1130 - C11593 * C1118 +
             C11589 * C2549 - C11594 * C2546 + C11590 * C6833 - C11595 * C6829 +
             C11591 * C11984 - C11596 * C11983) *
                C114 +
            (C11587 * C696 - C11592 * C687 + C11588 * C1145 - C11593 * C1131 +
             C11589 * C2555 - C11594 * C2550 + C11590 * C6838 - C11595 * C6834 +
             C11591 * C11986 - C11596 * C11985) *
                C31941) *
               C31859 * C578) *
              C472) *
         C31892) /
            (p * q * std::sqrt(p + q));
    d2ee[62] +=
        (-0.25 * std::pow(Pi, 2.5) *
             ((((C31958 * C122 - C113 * C115) * C114 +
                (C31958 * C136 - C113 * C123) * C31941) *
                   C103 +
               ((C144 - C145) * C114 + (C146 - C147) * C31941) * C104 +
               C176 * C105 + C177 * C106 + C178 * C107) *
                  C31918 * C31904 * C110 +
              (((C145 - C144) * C114 + (C147 - C146) * C31941) * C103 +
               ((C149 - C148) * C114 + (C151 - C150) * C31941) * C104 +
               ((C153 - C152) * C114 + (C155 - C154) * C31941) * C105 +
               ((C157 - C156) * C114 + (C159 - C158) * C31941) * C106 +
               ((C160 - C161) * C114 + (C162 - C163) * C31941) * C107) *
                  C31918 * C31904 * C111 +
              (C176 * C103 + C177 * C104 + C178 * C105 +
               ((C161 - C160) * C114 + (C163 - C162) * C31941) * C106 +
               ((C31958 * C134 - C113 * C121) * C114 +
                (C31958 * C142 - C113 * C135) * C31941) *
                   C107) *
                  C31918 * C31904 * C112) -
         0.25 * std::pow(Pi, 2.5) *
             ((((C31958 * C122 - C113 * C115) * C114 +
                (C31958 * C136 - C113 * C123) * C31941) *
                   C103 +
               ((C144 - C145) * C114 + (C146 - C147) * C31941) * C104 +
               C176 * C105 + C177 * C106 + C178 * C107) *
                  C31918 * C240 +
              (((C113 * C244 - C31958 * C254) * C114 +
                (C113 * C255 - C31958 * C274) * C31941) *
                   C103 +
               ((C113 * C245 - C31958 * C256) * C114 +
                (C113 * C257 - C31958 * C275) * C31941) *
                   C104 +
               ((C113 * C246 - C31958 * C258) * C114 +
                (C113 * C259 - C31958 * C276) * C31941) *
                   C105 +
               ((C113 * C247 - C31958 * C260) * C114 +
                (C113 * C261 - C31958 * C277) * C31941) *
                   C106 +
               ((C113 * C248 - C31958 * C262) * C114 +
                (C113 * C263 - C31958 * C278) * C31941) *
                   C107) *
                  C31918 * C241 +
              (((C31958 * C264 - C113 * C249) * C114 +
                (C31958 * C279 - C113 * C265) * C31941) *
                   C103 +
               ((C31958 * C266 - C113 * C250) * C114 +
                (C31958 * C280 - C113 * C267) * C31941) *
                   C104 +
               ((C31958 * C268 - C113 * C251) * C114 +
                (C31958 * C281 - C113 * C269) * C31941) *
                   C105 +
               ((C31958 * C270 - C113 * C252) * C114 +
                (C31958 * C282 - C113 * C271) * C31941) *
                   C106 +
               ((C31958 * C272 - C113 * C253) * C114 +
                (C31958 * C283 - C113 * C273) * C31941) *
                   C107) *
                  C31918 * C242) *
             C31892 +
         0.5 * std::pow(Pi, 2.5) *
             ((((C31958 * C122 - C113 * C115) * C114 +
                (C31958 * C136 - C113 * C123) * C31941) *
                   C103 +
               ((C144 - C145) * C114 + (C146 - C147) * C31941) * C104 +
               C176 * C105 + C177 * C106 + C178 * C107) *
                  C346 +
              (((C113 * C349 - C31958 * C359) * C114 +
                (C113 * C360 - C31958 * C379) * C31941) *
                   C103 +
               ((C113 * C350 - C31958 * C361) * C114 +
                (C113 * C362 - C31958 * C380) * C31941) *
                   C104 +
               ((C113 * C351 - C31958 * C363) * C114 +
                (C113 * C364 - C31958 * C381) * C31941) *
                   C105 +
               ((C113 * C352 - C31958 * C365) * C114 +
                (C113 * C366 - C31958 * C382) * C31941) *
                   C106 +
               ((C113 * C353 - C31958 * C367) * C114 +
                (C113 * C368 - C31958 * C383) * C31941) *
                   C107) *
                  C347 +
              (((C31958 * C369 - C113 * C354) * C114 +
                (C31958 * C384 - C113 * C370) * C31941) *
                   C103 +
               ((C31958 * C371 - C113 * C355) * C114 +
                (C31958 * C385 - C113 * C372) * C31941) *
                   C104 +
               ((C31958 * C373 - C113 * C356) * C114 +
                (C31958 * C386 - C113 * C374) * C31941) *
                   C105 +
               ((C31958 * C375 - C113 * C357) * C114 +
                (C31958 * C387 - C113 * C376) * C31941) *
                   C106 +
               ((C31958 * C377 - C113 * C358) * C114 +
                (C31958 * C388 - C113 * C378) * C31941) *
                   C107) *
                  C348) *
             C31904 * C31892 -
         0.25 * std::pow(Pi, 2.5) *
             ((((C31958 * C122 - C113 * C115) * C817 +
                (C31958 * C136 - C113 * C123) * C32265 +
                (C31958 * C254 - C113 * C244) * C818 +
                (C31958 * C274 - C113 * C255) * C32253 +
                (C31958 * C264 - C113 * C249) * C819 +
                (C31958 * C279 - C113 * C265) * C32230) *
                   C814 +
               ((C144 - C145) * C817 + (C146 - C147) * C32265 +
                (C481 - C480) * C818 + (C483 - C482) * C32253 +
                (C821 - C822) * C819 + (C823 - C824) * C32230) *
                   C815 +
               C847 * C32219) *
                  C31918 * C31904 * C110 +
              (((C145 - C144) * C817 + (C147 - C146) * C32265 +
                (C480 - C481) * C818 + (C482 - C483) * C32253 +
                (C822 - C821) * C819 + (C824 - C823) * C32230) *
                   C814 +
               ((C149 - C148) * C817 + (C151 - C150) * C32265 +
                (C484 - C485) * C818 + (C486 - C487) * C32253 +
                (C830 - C829) * C819 + (C832 - C831) * C32230) *
                   C815 +
               ((C153 - C152) * C817 + (C155 - C154) * C32265 +
                (C488 - C489) * C818 + (C490 - C491) * C32253 +
                (C833 - C834) * C819 + (C835 - C836) * C32230) *
                   C32219) *
                  C31918 * C31904 * C111 +
              (C847 * C814 +
               (C166 * C817 + C167 * C32265 + (C489 - C488) * C818 +
                (C491 - C490) * C32253 + (C834 - C833) * C819 +
                (C836 - C835) * C32230) *
                   C815 +
               (C168 * C817 + C169 * C32265 + (C493 - C492) * C818 +
                (C495 - C494) * C32253 + (C31958 * C272 - C113 * C253) * C819 +
                (C31958 * C283 - C113 * C273) * C32230) *
                   C32219) *
                  C31918 * C31904 * C112) -
         0.25 * std::pow(Pi, 2.5) *
             ((((C31958 * C122 - C113 * C115) * C817 +
                (C31958 * C136 - C113 * C123) * C32265 + (C982 - C983) * C818 +
                (C984 - C985) * C32253 + C1004 * C819 + C1005 * C32230) *
                   C814 +
               ((C144 - C145) * C817 + (C146 - C147) * C32265 +
                (C481 - C480) * C818 + (C483 - C482) * C32253 + C990 * C819 +
                C991 * C32230) *
                   C815 +
               C847 * C32219) *
                  C31918 * C240 +
              (((C983 - C982) * C817 + (C985 - C984) * C32265 +
                (C987 - C986) * C818 + (C989 - C988) * C32253 +
                (C992 - C993) * C819 + (C994 - C995) * C32230) *
                   C814 +
               ((C480 - C481) * C817 + (C482 - C483) * C32265 +
                (C822 - C821) * C818 + (C824 - C823) * C32253 +
                (C996 - C997) * C819 + (C998 - C999) * C32230) *
                   C815 +
               ((C484 - C485) * C817 + (C486 - C487) * C32265 +
                (C830 - C829) * C818 + (C832 - C831) * C32253 +
                (C1000 - C1001) * C819 + (C1002 - C1003) * C32230) *
                   C32219) *
                  C31918 * C241 +
              ((C1004 * C817 + C1005 * C32265 + (C993 - C992) * C818 +
                (C995 - C994) * C32253 + (C31958 * C969 - C113 * C960) * C819 +
                (C31958 * C978 - C113 * C970) * C32230) *
                   C814 +
               (C990 * C817 + C991 * C32265 + (C997 - C996) * C818 +
                (C999 - C998) * C32253 + (C31958 * C971 - C113 * C961) * C819 +
                (C31958 * C979 - C113 * C972) * C32230) *
                   C815 +
               (C840 * C817 + C841 * C32265 + (C1001 - C1000) * C818 +
                (C1003 - C1002) * C32253 +
                (C31958 * C973 - C113 * C962) * C819 +
                (C31958 * C980 - C113 * C974) * C32230) *
                   C32219) *
                  C31918 * C242) *
             C31892 +
         0.5 * std::pow(Pi, 2.5) *
             ((((C31958 * C122 - C113 * C115) * C817 +
                (C31958 * C136 - C113 * C123) * C32265 + (C982 - C983) * C818 +
                (C984 - C985) * C32253 + C1004 * C819 + C1005 * C32230) *
                   C814 +
               ((C144 - C145) * C817 + (C146 - C147) * C32265 +
                (C481 - C480) * C818 + (C483 - C482) * C32253 + C990 * C819 +
                C991 * C32230) *
                   C815 +
               C847 * C32219) *
                  C346 +
              (((C113 * C349 - C31958 * C359) * C817 +
                (C113 * C360 - C31958 * C379) * C32265 +
                (C113 * C681 - C31958 * C686) * C818 +
                (C113 * C687 - C31958 * C696) * C32253 +
                (C113 * C1115 - C31958 * C1124) * C819 +
                (C113 * C1125 - C31958 * C1142) * C32230) *
                   C814 +
               ((C584 - C585) * C817 + (C586 - C587) * C32265 +
                (C113 * C682 - C31958 * C688) * C818 +
                (C113 * C689 - C31958 * C697) * C32253 +
                (C113 * C1116 - C31958 * C1126) * C819 +
                (C113 * C1127 - C31958 * C1143) * C32230) *
                   C815 +
               ((C588 - C589) * C817 + (C590 - C591) * C32265 +
                (C113 * C683 - C31958 * C690) * C818 +
                (C113 * C691 - C31958 * C698) * C32253 +
                (C113 * C1117 - C31958 * C1128) * C819 +
                (C113 * C1129 - C31958 * C1144) * C32230) *
                   C32219) *
                  C347 +
              (((C31958 * C369 - C113 * C354) * C817 +
                (C31958 * C384 - C113 * C370) * C32265 +
                (C31958 * C1130 - C113 * C1118) * C818 +
                (C31958 * C1145 - C113 * C1131) * C32253 +
                (C31958 * C1132 - C113 * C1119) * C819 +
                (C31958 * C1146 - C113 * C1133) * C32230) *
                   C814 +
               ((C31958 * C371 - C113 * C355) * C817 +
                (C31958 * C385 - C113 * C372) * C32265 +
                (C31958 * C1134 - C113 * C1120) * C818 +
                (C31958 * C1147 - C113 * C1135) * C32253 +
                (C31958 * C1136 - C113 * C1121) * C819 +
                (C31958 * C1148 - C113 * C1137) * C32230) *
                   C815 +
               ((C31958 * C373 - C113 * C356) * C817 +
                (C31958 * C386 - C113 * C374) * C32265 +
                (C31958 * C1138 - C113 * C1122) * C818 +
                (C31958 * C1149 - C113 * C1139) * C32253 +
                (C31958 * C1140 - C113 * C1123) * C819 +
                (C31958 * C1150 - C113 * C1141) * C32230) *
                   C32219) *
                  C348) *
             C31904 * C31892 +
         0.5 * std::pow(Pi, 2.5) *
             ((((C32266 * C122 - C1756 * C115 + C32255 * C359 - C1757 * C349 +
                 C32233 * C369 - C1758 * C354) *
                    C114 +
                (C32266 * C136 - C1756 * C123 + C32255 * C379 - C1757 * C360 +
                 C32233 * C384 - C1758 * C370) *
                    C31941) *
                   C814 +
               ((C1760 - C1761 + C1762 - C1763 + C1764 - C1765) * C114 +
                (C1766 - C1767 + C1768 - C1769 + C1770 - C1771) * C31941) *
                   C815 +
               C1808 * C32219) *
                  C31918 * C31904 * C110 +
              (((C1761 - C1760 + C1763 - C1762 + C1765 - C1764) * C114 +
                (C1767 - C1766 + C1769 - C1768 + C1771 - C1770) * C31941) *
                   C814 +
               ((C1773 - C1772 + C1775 - C1774 + C1777 - C1776) * C114 +
                (C1779 - C1778 + C1781 - C1780 + C1783 - C1782) * C31941) *
                   C815 +
               ((C1784 - C1785 + C1786 - C1787 + C1788 - C1789) * C114 +
                (C1790 - C1791 + C1792 - C1793 + C1794 - C1795) * C31941) *
                   C32219) *
                  C31918 * C31904 * C111 +
              (C1808 * C814 +
               ((C1785 - C1784 + C1787 - C1786 + C1789 - C1788) * C114 +
                (C1791 - C1790 + C1793 - C1792 + C1795 - C1794) * C31941) *
                   C815 +
               ((C32266 * C130 - C1756 * C119 + C32255 * C367 - C1757 * C353 +
                 C32233 * C377 - C1758 * C358) *
                    C114 +
                (C32266 * C140 - C1756 * C131 + C32255 * C383 - C1757 * C368 +
                 C32233 * C388 - C1758 * C378) *
                    C31941) *
                   C32219) *
                  C31918 * C31904 * C112) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C32266 * C122 - C1756 * C115 + C32255 * C359 - C1757 * C349 +
                 C32233 * C369 - C1758 * C354) *
                    C114 +
                (C32266 * C136 - C1756 * C123 + C32255 * C379 - C1757 * C360 +
                 C32233 * C384 - C1758 * C370) *
                    C31941) *
                   C814 +
               ((C1760 - C1761 + C1762 - C1763 + C1764 - C1765) * C114 +
                (C1766 - C1767 + C1768 - C1769 + C1770 - C1771) * C31941) *
                   C815 +
               C1808 * C32219) *
                  C31918 * C240 +
              (((C1756 * C244 - C32266 * C254 + C1757 * C681 - C32255 * C686 +
                 C1758 * C1118 - C32233 * C1130) *
                    C114 +
                (C1756 * C255 - C32266 * C274 + C1757 * C687 - C32255 * C696 +
                 C1758 * C1131 - C32233 * C1145) *
                    C31941) *
                   C814 +
               ((C1756 * C245 - C32266 * C256 + C1757 * C682 - C32255 * C688 +
                 C1758 * C1120 - C32233 * C1134) *
                    C114 +
                (C1756 * C257 - C32266 * C275 + C1757 * C689 - C32255 * C697 +
                 C1758 * C1135 - C32233 * C1147) *
                    C31941) *
                   C815 +
               ((C1756 * C246 - C32266 * C258 + C1757 * C683 - C32255 * C690 +
                 C1758 * C1122 - C32233 * C1138) *
                    C114 +
                (C1756 * C259 - C32266 * C276 + C1757 * C691 - C32255 * C698 +
                 C1758 * C1139 - C32233 * C1149) *
                    C31941) *
                   C32219) *
                  C31918 * C241 +
              (((C32266 * C264 - C1756 * C249 + C32255 * C1124 - C1757 * C1115 +
                 C32233 * C1132 - C1758 * C1119) *
                    C114 +
                (C32266 * C279 - C1756 * C265 + C32255 * C1142 - C1757 * C1125 +
                 C32233 * C1146 - C1758 * C1133) *
                    C31941) *
                   C814 +
               ((C32266 * C266 - C1756 * C250 + C32255 * C1126 - C1757 * C1116 +
                 C32233 * C1136 - C1758 * C1121) *
                    C114 +
                (C32266 * C280 - C1756 * C267 + C32255 * C1143 - C1757 * C1127 +
                 C32233 * C1148 - C1758 * C1137) *
                    C31941) *
                   C815 +
               ((C32266 * C268 - C1756 * C251 + C32255 * C1128 - C1757 * C1117 +
                 C32233 * C1140 - C1758 * C1123) *
                    C114 +
                (C32266 * C281 - C1756 * C269 + C32255 * C1144 - C1757 * C1129 +
                 C32233 * C1150 - C1758 * C1141) *
                    C31941) *
                   C32219) *
                  C31918 * C242) *
             C31892) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C32266 * C122 - C1756 * C115 + C32255 * C359 - C1757 * C349 +
             C32233 * C369 - C1758 * C354) *
                C114 +
            (C32266 * C136 - C1756 * C123 + C32255 * C379 - C1757 * C360 +
             C32233 * C384 - C1758 * C370) *
                C31941) *
               C814 +
           ((C1760 - C1761 + C1762 - C1763 + C1764 - C1765) * C114 +
            (C1766 - C1767 + C1768 - C1769 + C1770 - C1771) * C31941) *
               C815 +
           C1808 * C32219) *
              C346 +
          (((C1756 * C349 - C32266 * C359 + C1757 * C354 - C32255 * C369 +
             C1758 * C2028 - C32233 * C2034) *
                C114 +
            (C1756 * C360 - C32266 * C379 + C1757 * C370 - C32255 * C384 +
             C1758 * C2035 - C32233 * C2046) *
                C31941) *
               C814 +
           ((C1756 * C350 - C32266 * C361 + C1757 * C355 - C32255 * C371 +
             C1758 * C2029 - C32233 * C2036) *
                C114 +
            (C1756 * C362 - C32266 * C380 + C1757 * C372 - C32255 * C385 +
             C1758 * C2037 - C32233 * C2047) *
                C31941) *
               C815 +
           ((C1756 * C351 - C32266 * C363 + C1757 * C356 - C32255 * C373 +
             C1758 * C2030 - C32233 * C2038) *
                C114 +
            (C1756 * C364 - C32266 * C381 + C1757 * C374 - C32255 * C386 +
             C1758 * C2039 - C32233 * C2048) *
                C31941) *
               C32219) *
              C347 +
          (((C32266 * C369 - C1756 * C354 + C32255 * C2034 - C1757 * C2028 +
             C32233 * C2040 - C1758 * C2031) *
                C114 +
            (C32266 * C384 - C1756 * C370 + C32255 * C2046 - C1757 * C2035 +
             C32233 * C2049 - C1758 * C2041) *
                C31941) *
               C814 +
           ((C32266 * C371 - C1756 * C355 + C32255 * C2036 - C1757 * C2029 +
             C32233 * C2042 - C1758 * C2032) *
                C114 +
            (C32266 * C385 - C1756 * C372 + C32255 * C2047 - C1757 * C2037 +
             C32233 * C2050 - C1758 * C2043) *
                C31941) *
               C815 +
           ((C32266 * C373 - C1756 * C356 + C32255 * C2038 - C1757 * C2030 +
             C32233 * C2044 - C1758 * C2033) *
                C114 +
            (C32266 * C386 - C1756 * C374 + C32255 * C2048 - C1757 * C2039 +
             C32233 * C2051 - C1758 * C2045) *
                C31941) *
               C32219) *
              C348) *
         C31904 * C31892) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C31958 * C122 - C113 * C115) * C5281 +
            (C31958 * C136 - C113 * C123) * C5275 + (C982 - C983) * C5282 +
            (C984 - C985) * C5276 + C1004 * C5283 + C1005 * C32230) *
               C32262 +
           ((C144 - C145) * C5281 + (C146 - C147) * C5275 + C1302 * C5282 +
            C1303 * C5276 + C990 * C5283 + C991 * C32230) *
               C32249 +
           C5295 * C32219) *
              C31918 * C31904 * C110 +
          (((C145 - C144) * C5281 + (C147 - C146) * C5275 + C1304 * C5282 +
            C1305 * C5276 + C1306 * C5283 + C1307 * C32230) *
               C32262 +
           ((C149 - C148) * C5281 + (C151 - C150) * C5275 + C1308 * C5282 +
            C1309 * C5276 + C1310 * C5283 + C1311 * C32230) *
               C32249 +
           ((C153 - C152) * C5281 + (C155 - C154) * C5275 + C3007 * C5282 +
            C3008 * C5276 + (C833 - C834) * C5283 + (C835 - C836) * C32230) *
               C32219) *
              C31918 * C31904 * C111 +
          (C5295 * C32262 +
           (C166 * C5281 + C167 * C5275 + C2671 * C5282 + C2672 * C5276 +
            (C834 - C833) * C5283 + (C836 - C835) * C32230) *
               C32249 +
           (C168 * C5281 + C169 * C5275 + (C493 - C492) * C5282 +
            (C495 - C494) * C5276 + (C31958 * C272 - C113 * C253) * C5283 +
            (C31958 * C283 - C113 * C273) * C32230) *
               C32219) *
              C31918 * C31904 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C31958 * C122 - C113 * C115) * C5281 +
            (C31958 * C136 - C113 * C123) * C5275 + (C982 - C983) * C5282 +
            (C984 - C985) * C5276 + C1004 * C5283 + C1005 * C32230) *
               C32262 +
           ((C144 - C145) * C5281 + (C146 - C147) * C5275 + C1302 * C5282 +
            C1303 * C5276 + C990 * C5283 + C991 * C32230) *
               C32249 +
           C5295 * C32219) *
              C31918 * C240 +
          (((C983 - C982) * C5281 + (C985 - C984) * C5275 +
            (C987 - C986) * C5282 + (C989 - C988) * C5276 +
            (C992 - C993) * C5283 + (C994 - C995) * C32230) *
               C32262 +
           (C1304 * C5281 + C1305 * C5275 + C1306 * C5282 + C1307 * C5276 +
            (C996 - C997) * C5283 + (C998 - C999) * C32230) *
               C32249 +
           (C1308 * C5281 + C1309 * C5275 + C1310 * C5282 + C1311 * C5276 +
            (C1000 - C1001) * C5283 + (C1002 - C1003) * C32230) *
               C32219) *
              C31918 * C241 +
          ((C1004 * C5281 + C1005 * C5275 + (C993 - C992) * C5282 +
            (C995 - C994) * C5276 + (C31958 * C969 - C113 * C960) * C5283 +
            (C31958 * C978 - C113 * C970) * C32230) *
               C32262 +
           (C990 * C5281 + C991 * C5275 + (C997 - C996) * C5282 +
            (C999 - C998) * C5276 + (C31958 * C971 - C113 * C961) * C5283 +
            (C31958 * C979 - C113 * C972) * C32230) *
               C32249 +
           (C840 * C5281 + C841 * C5275 + (C1001 - C1000) * C5282 +
            (C1003 - C1002) * C5276 + (C31958 * C973 - C113 * C962) * C5283 +
            (C31958 * C980 - C113 * C974) * C32230) *
               C32219) *
              C31918 * C242) *
         C31892) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C31958 * C122 - C113 * C115) * C5281 +
            (C31958 * C136 - C113 * C123) * C5275 + (C982 - C983) * C5282 +
            (C984 - C985) * C5276 + C1004 * C5283 + C1005 * C32230) *
               C32262 +
           ((C144 - C145) * C5281 + (C146 - C147) * C5275 + C1302 * C5282 +
            C1303 * C5276 + C990 * C5283 + C991 * C32230) *
               C32249 +
           C5295 * C32219) *
              C346 +
          (((C113 * C349 - C31958 * C359) * C5281 +
            (C113 * C360 - C31958 * C379) * C5275 + (C1636 - C1637) * C5282 +
            (C1638 - C1639) * C5276 + (C1640 - C1641) * C5283 +
            (C1642 - C1643) * C32230) *
               C32262 +
           ((C584 - C585) * C5281 + (C586 - C587) * C5275 +
            (C1462 - C1463) * C5282 + (C1464 - C1465) * C5276 +
            (C1466 - C1467) * C5283 + (C1468 - C1469) * C32230) *
               C32249 +
           ((C588 - C589) * C5281 + (C590 - C591) * C5275 +
            (C1470 - C1471) * C5282 + (C1472 - C1473) * C5276 +
            (C1474 - C1475) * C5283 + (C1476 - C1477) * C32230) *
               C32219) *
              C347 +
          (((C31958 * C369 - C113 * C354) * C5281 +
            (C31958 * C384 - C113 * C370) * C5275 +
            (C31958 * C1130 - C113 * C1118) * C5282 +
            (C31958 * C1145 - C113 * C1131) * C5276 +
            (C31958 * C1132 - C113 * C1119) * C5283 +
            (C31958 * C1146 - C113 * C1133) * C32230) *
               C32262 +
           ((C31958 * C371 - C113 * C355) * C5281 +
            (C31958 * C385 - C113 * C372) * C5275 +
            (C31958 * C1134 - C113 * C1120) * C5282 +
            (C31958 * C1147 - C113 * C1135) * C5276 +
            (C31958 * C1136 - C113 * C1121) * C5283 +
            (C31958 * C1148 - C113 * C1137) * C32230) *
               C32249 +
           ((C31958 * C373 - C113 * C356) * C5281 +
            (C31958 * C386 - C113 * C374) * C5275 +
            (C31958 * C1138 - C113 * C1122) * C5282 +
            (C31958 * C1149 - C113 * C1139) * C5276 +
            (C31958 * C1140 - C113 * C1123) * C5283 +
            (C31958 * C1150 - C113 * C1141) * C32230) *
               C32219) *
              C348) *
         C31904 * C31892) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         (((C31958 * C122 - C113 * C115) * C6021 +
           (C31958 * C136 - C113 * C123) * C6015 + (C982 - C983) * C6022 +
           (C984 - C985) * C6016 + C1004 * C6023 + C1005 * C6017 +
           (C993 - C992) * C6024 + (C995 - C994) * C6018 +
           (C31958 * C969 - C113 * C960) * C6025 +
           (C31958 * C978 - C113 * C970) * C6019) *
              C31859 * C31918 * C31904 * C110 +
          ((C145 - C144) * C6021 + (C147 - C146) * C6015 + C1304 * C6022 +
           C1305 * C6016 + C1306 * C6023 + C1307 * C6017 +
           (C996 - C997) * C6024 + (C998 - C999) * C6018 +
           (C113 * C961 - C31958 * C971) * C6025 +
           (C113 * C972 - C31958 * C979) * C6019) *
              C31859 * C31918 * C31904 * C111 +
          (C164 * C6021 + C165 * C6015 + C827 * C6022 + C828 * C6016 +
           C840 * C6023 + C841 * C6017 + (C1001 - C1000) * C6024 +
           (C1003 - C1002) * C6018 + (C31958 * C973 - C113 * C962) * C6025 +
           (C31958 * C980 - C113 * C974) * C6019) *
              C31859 * C31918 * C31904 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         (((C31958 * C122 - C113 * C115) * C6021 +
           (C31958 * C136 - C113 * C123) * C6015 + (C982 - C983) * C6022 +
           (C984 - C985) * C6016 + C1004 * C6023 + C1005 * C6017 +
           C6097 * C6024 + C6098 * C6018 + C6107 * C6025 + C6108 * C6019) *
              C31859 * C31918 * C240 +
          ((C983 - C982) * C6021 + (C985 - C984) * C6015 +
           (C987 - C986) * C6022 + (C989 - C988) * C6016 +
           (C992 - C993) * C6023 + (C994 - C995) * C6017 +
           (C6100 - C6099) * C6024 + (C6102 - C6101) * C6018 +
           (C6103 - C6104) * C6025 + (C6105 - C6106) * C6019) *
              C31859 * C31918 * C241 +
          (C1004 * C6021 + C1005 * C6015 + C6097 * C6022 + C6098 * C6016 +
           C6107 * C6023 + C6108 * C6017 + (C6104 - C6103) * C6024 +
           (C6106 - C6105) * C6018 + (C31958 * C6092 - C113 * C6089) * C6025 +
           (C31958 * C6095 - C113 * C6093) * C6019) *
              C31859 * C31918 * C242) *
         C31892) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C31958 * C122 - C113 * C115) * C6021 +
           (C31958 * C136 - C113 * C123) * C6015 + (C982 - C983) * C6022 +
           (C984 - C985) * C6016 + C1004 * C6023 + C1005 * C6017 +
           C6097 * C6024 + C6098 * C6018 + C6107 * C6025 + C6108 * C6019) *
              C31859 * C346 +
          ((C113 * C349 - C31958 * C359) * C6021 +
           (C113 * C360 - C31958 * C379) * C6015 + (C1636 - C1637) * C6022 +
           (C1638 - C1639) * C6016 + (C1640 - C1641) * C6023 +
           (C1642 - C1643) * C6017 + (C113 * C1623 - C31958 * C1626) * C6024 +
           (C113 * C1627 - C31958 * C1632) * C6018 +
           (C113 * C6170 - C31958 * C6173) * C6025 +
           (C113 * C6174 - C31958 * C6179) * C6019) *
              C31859 * C347 +
          ((C31958 * C369 - C113 * C354) * C6021 +
           (C31958 * C384 - C113 * C370) * C6015 +
           (C31958 * C1130 - C113 * C1118) * C6022 +
           (C31958 * C1145 - C113 * C1131) * C6016 +
           (C31958 * C1132 - C113 * C1119) * C6023 +
           (C31958 * C1146 - C113 * C1133) * C6017 +
           (C31958 * C6175 - C113 * C6171) * C6024 +
           (C31958 * C6180 - C113 * C6176) * C6018 +
           (C31958 * C6177 - C113 * C6172) * C6025 +
           (C31958 * C6181 - C113 * C6178) * C6019) *
              C31859 * C348) *
         C31904 * C31892) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C32266 * C122 - C1756 * C115 + C32255 * C359 - C1757 * C349 +
            C32233 * C369 - C1758 * C354) *
               C5281 +
           (C32266 * C136 - C1756 * C123 + C32255 * C379 - C1757 * C360 +
            C32233 * C384 - C1758 * C370) *
               C5275 +
           (C32266 * C254 - C1756 * C244 + C32255 * C686 - C1757 * C681 +
            C32233 * C1130 - C1758 * C1118) *
               C5282 +
           (C32266 * C274 - C1756 * C255 + C32255 * C696 - C1757 * C687 +
            C32233 * C1145 - C1758 * C1131) *
               C5276 +
           (C32266 * C264 - C1756 * C249 + C32255 * C1124 - C1757 * C1115 +
            C32233 * C1132 - C1758 * C1119) *
               C5283 +
           (C32266 * C279 - C1756 * C265 + C32255 * C1142 - C1757 * C1125 +
            C32233 * C1146 - C1758 * C1133) *
               C32230) *
              C31859 * C31918 * C31904 * C110 +
          ((C1761 - C1760 + C1763 - C1762 + C1765 - C1764) * C5281 +
           (C1767 - C1766 + C1769 - C1768 + C1771 - C1770) * C5275 +
           (C2203 - C2204 + C2205 - C2206 + C2207 - C2208) * C5282 +
           (C2209 - C2210 + C2211 - C2212 + C2213 - C2214) * C5276 +
           (C1756 * C250 - C32266 * C266 + C1757 * C1116 - C32255 * C1126 +
            C1758 * C1121 - C32233 * C1136) *
               C5283 +
           (C1756 * C267 - C32266 * C280 + C1757 * C1127 - C32255 * C1143 +
            C1758 * C1137 - C32233 * C1148) *
               C32230) *
              C31859 * C31918 * C31904 * C111 +
          (C1804 * C5281 + C1805 * C5275 +
           (C2216 - C2215 + C2218 - C2217 + C2220 - C2219) * C5282 +
           (C2222 - C2221 + C2224 - C2223 + C2226 - C2225) * C5276 +
           (C32266 * C268 - C1756 * C251 + C32255 * C1128 - C1757 * C1117 +
            C32233 * C1140 - C1758 * C1123) *
               C5283 +
           (C32266 * C281 - C1756 * C269 + C32255 * C1144 - C1757 * C1129 +
            C32233 * C1150 - C1758 * C1141) *
               C32230) *
              C31859 * C31918 * C31904 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C32266 * C122 - C1756 * C115 + C32255 * C359 - C1757 * C349 +
            C32233 * C369 - C1758 * C354) *
               C5281 +
           (C32266 * C136 - C1756 * C123 + C32255 * C379 - C1757 * C360 +
            C32233 * C384 - C1758 * C370) *
               C5275 +
           (C6673 - C6674 + C6675 - C6676 + C6677 - C6678) * C5282 +
           (C6679 - C6680 + C6681 - C6682 + C6683 - C6684) * C5276 +
           C6717 * C5283 + C6718 * C32230) *
              C31859 * C31918 * C240 +
          ((C6674 - C6673 + C6676 - C6675 + C6678 - C6677) * C5281 +
           (C6680 - C6679 + C6682 - C6681 + C6684 - C6683) * C5275 +
           (C6686 - C6685 + C6688 - C6687 + C6690 - C6689) * C5282 +
           (C6692 - C6691 + C6694 - C6693 + C6696 - C6695) * C5276 +
           (C6697 - C6698 + C6699 - C6700 + C6701 - C6702) * C5283 +
           (C6703 - C6704 + C6705 - C6706 + C6707 - C6708) * C32230) *
              C31859 * C31918 * C241 +
          (C6717 * C5281 + C6718 * C5275 +
           (C6698 - C6697 + C6700 - C6699 + C6702 - C6701) * C5282 +
           (C6704 - C6703 + C6706 - C6705 + C6708 - C6707) * C5276 +
           (C32266 * C969 - C1756 * C960 + C32255 * C6173 - C1757 * C6170 +
            C32233 * C6177 - C1758 * C6172) *
               C5283 +
           (C32266 * C978 - C1756 * C970 + C32255 * C6179 - C1757 * C6174 +
            C32233 * C6181 - C1758 * C6178) *
               C32230) *
              C31859 * C31918 * C242) *
         C31892) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C32266 * C122 - C1756 * C115 + C32255 * C359 - C1757 * C349 +
            C32233 * C369 - C1758 * C354) *
               C5281 +
           (C32266 * C136 - C1756 * C123 + C32255 * C379 - C1757 * C360 +
            C32233 * C384 - C1758 * C370) *
               C5275 +
           (C6673 - C6674 + C6675 - C6676 + C6677 - C6678) * C5282 +
           (C6679 - C6680 + C6681 - C6682 + C6683 - C6684) * C5276 +
           C6717 * C5283 + C6718 * C32230) *
              C31859 * C346 +
          ((C1756 * C349 - C32266 * C359 + C1757 * C354 - C32255 * C369 +
            C1758 * C2028 - C32233 * C2034) *
               C5281 +
           (C1756 * C360 - C32266 * C379 + C1757 * C370 - C32255 * C384 +
            C1758 * C2035 - C32233 * C2046) *
               C5275 +
           (C1756 * C681 - C32266 * C686 + C1757 * C1118 - C32255 * C1130 +
            C1758 * C2546 - C32233 * C2549) *
               C5282 +
           (C1756 * C687 - C32266 * C696 + C1757 * C1131 - C32255 * C1145 +
            C1758 * C2550 - C32233 * C2555) *
               C5276 +
           (C1756 * C1115 - C32266 * C1124 + C1757 * C1119 - C32255 * C1132 +
            C1758 * C6828 - C32233 * C6831) *
               C5283 +
           (C1756 * C1125 - C32266 * C1142 + C1757 * C1133 - C32255 * C1146 +
            C1758 * C6832 - C32233 * C6837) *
               C32230) *
              C31859 * C347 +
          ((C32266 * C369 - C1756 * C354 + C32255 * C2034 - C1757 * C2028 +
            C32233 * C2040 - C1758 * C2031) *
               C5281 +
           (C32266 * C384 - C1756 * C370 + C32255 * C2046 - C1757 * C2035 +
            C32233 * C2049 - C1758 * C2041) *
               C5275 +
           (C32266 * C1130 - C1756 * C1118 + C32255 * C2549 - C1757 * C2546 +
            C32233 * C6833 - C1758 * C6829) *
               C5282 +
           (C32266 * C1145 - C1756 * C1131 + C32255 * C2555 - C1757 * C2550 +
            C32233 * C6838 - C1758 * C6834) *
               C5276 +
           (C32266 * C1132 - C1756 * C1119 + C32255 * C6831 - C1757 * C6828 +
            C32233 * C6835 - C1758 * C6830) *
               C5283 +
           (C32266 * C1146 - C1756 * C1133 + C32255 * C6837 - C1757 * C6832 +
            C32233 * C6839 - C1758 * C6836) *
               C32230) *
              C31859 * C348) *
         C31904 * C31892) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C9914 * C122 - C9917 * C115 + C9915 * C359 - C9918 * C349 +
             C32233 * C369 - C9919 * C354) *
                C114 +
            (C9914 * C136 - C9917 * C123 + C9915 * C379 - C9918 * C360 +
             C32233 * C384 - C9919 * C370) *
                C31941) *
               C32262 +
           ((C9921 - C9922 + C9923 - C9924 + C9925 - C9926) * C114 +
            (C9927 - C9928 + C9929 - C9930 + C9931 - C9932) * C31941) *
               C32249 +
           C9969 * C32219) *
              C31918 * C31904 * C110 +
          (((C9922 - C9921 + C9924 - C9923 + C9926 - C9925) * C114 +
            (C9928 - C9927 + C9930 - C9929 + C9932 - C9931) * C31941) *
               C32262 +
           ((C9934 - C9933 + C9936 - C9935 + C9938 - C9937) * C114 +
            (C9940 - C9939 + C9942 - C9941 + C9944 - C9943) * C31941) *
               C32249 +
           ((C9945 - C9946 + C9947 - C9948 + C9949 - C9950) * C114 +
            (C9951 - C9952 + C9953 - C9954 + C9955 - C9956) * C31941) *
               C32219) *
              C31918 * C31904 * C111 +
          (C9969 * C32262 +
           ((C9946 - C9945 + C9948 - C9947 + C9950 - C9949) * C114 +
            (C9952 - C9951 + C9954 - C9953 + C9956 - C9955) * C31941) *
               C32249 +
           ((C9914 * C130 - C9917 * C119 + C9915 * C367 - C9918 * C353 +
             C32233 * C377 - C9919 * C358) *
                C114 +
            (C9914 * C140 - C9917 * C131 + C9915 * C383 - C9918 * C368 +
             C32233 * C388 - C9919 * C378) *
                C31941) *
               C32219) *
              C31918 * C31904 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C9914 * C122 - C9917 * C115 + C9915 * C359 - C9918 * C349 +
             C32233 * C369 - C9919 * C354) *
                C114 +
            (C9914 * C136 - C9917 * C123 + C9915 * C379 - C9918 * C360 +
             C32233 * C384 - C9919 * C370) *
                C31941) *
               C32262 +
           ((C9921 - C9922 + C9923 - C9924 + C9925 - C9926) * C114 +
            (C9927 - C9928 + C9929 - C9930 + C9931 - C9932) * C31941) *
               C32249 +
           C9969 * C32219) *
              C31918 * C240 +
          (((C9917 * C244 - C9914 * C254 + C9918 * C681 - C9915 * C686 +
             C9919 * C1118 - C32233 * C1130) *
                C114 +
            (C9917 * C255 - C9914 * C274 + C9918 * C687 - C9915 * C696 +
             C9919 * C1131 - C32233 * C1145) *
                C31941) *
               C32262 +
           ((C9917 * C245 - C9914 * C256 + C9918 * C682 - C9915 * C688 +
             C9919 * C1120 - C32233 * C1134) *
                C114 +
            (C9917 * C257 - C9914 * C275 + C9918 * C689 - C9915 * C697 +
             C9919 * C1135 - C32233 * C1147) *
                C31941) *
               C32249 +
           ((C9917 * C246 - C9914 * C258 + C9918 * C683 - C9915 * C690 +
             C9919 * C1122 - C32233 * C1138) *
                C114 +
            (C9917 * C259 - C9914 * C276 + C9918 * C691 - C9915 * C698 +
             C9919 * C1139 - C32233 * C1149) *
                C31941) *
               C32219) *
              C31918 * C241 +
          (((C9914 * C264 - C9917 * C249 + C9915 * C1124 - C9918 * C1115 +
             C32233 * C1132 - C9919 * C1119) *
                C114 +
            (C9914 * C279 - C9917 * C265 + C9915 * C1142 - C9918 * C1125 +
             C32233 * C1146 - C9919 * C1133) *
                C31941) *
               C32262 +
           ((C9914 * C266 - C9917 * C250 + C9915 * C1126 - C9918 * C1116 +
             C32233 * C1136 - C9919 * C1121) *
                C114 +
            (C9914 * C280 - C9917 * C267 + C9915 * C1143 - C9918 * C1127 +
             C32233 * C1148 - C9919 * C1137) *
                C31941) *
               C32249 +
           ((C9914 * C268 - C9917 * C251 + C9915 * C1128 - C9918 * C1117 +
             C32233 * C1140 - C9919 * C1123) *
                C114 +
            (C9914 * C281 - C9917 * C269 + C9915 * C1144 - C9918 * C1129 +
             C32233 * C1150 - C9919 * C1141) *
                C31941) *
               C32219) *
              C31918 * C242) *
         C31892) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C9914 * C122 - C9917 * C115 + C9915 * C359 - C9918 * C349 +
             C32233 * C369 - C9919 * C354) *
                C114 +
            (C9914 * C136 - C9917 * C123 + C9915 * C379 - C9918 * C360 +
             C32233 * C384 - C9919 * C370) *
                C31941) *
               C32262 +
           ((C9921 - C9922 + C9923 - C9924 + C9925 - C9926) * C114 +
            (C9927 - C9928 + C9929 - C9930 + C9931 - C9932) * C31941) *
               C32249 +
           C9969 * C32219) *
              C346 +
          (((C9917 * C349 - C9914 * C359 + C9918 * C354 - C9915 * C369 +
             C9919 * C2028 - C32233 * C2034) *
                C114 +
            (C9917 * C360 - C9914 * C379 + C9918 * C370 - C9915 * C384 +
             C9919 * C2035 - C32233 * C2046) *
                C31941) *
               C32262 +
           ((C9917 * C350 - C9914 * C361 + C9918 * C355 - C9915 * C371 +
             C9919 * C2029 - C32233 * C2036) *
                C114 +
            (C9917 * C362 - C9914 * C380 + C9918 * C372 - C9915 * C385 +
             C9919 * C2037 - C32233 * C2047) *
                C31941) *
               C32249 +
           ((C9917 * C351 - C9914 * C363 + C9918 * C356 - C9915 * C373 +
             C9919 * C2030 - C32233 * C2038) *
                C114 +
            (C9917 * C364 - C9914 * C381 + C9918 * C374 - C9915 * C386 +
             C9919 * C2039 - C32233 * C2048) *
                C31941) *
               C32219) *
              C347 +
          (((C9914 * C369 - C9917 * C354 + C9915 * C2034 - C9918 * C2028 +
             C32233 * C2040 - C9919 * C2031) *
                C114 +
            (C9914 * C384 - C9917 * C370 + C9915 * C2046 - C9918 * C2035 +
             C32233 * C2049 - C9919 * C2041) *
                C31941) *
               C32262 +
           ((C9914 * C371 - C9917 * C355 + C9915 * C2036 - C9918 * C2029 +
             C32233 * C2042 - C9919 * C2032) *
                C114 +
            (C9914 * C385 - C9917 * C372 + C9915 * C2047 - C9918 * C2037 +
             C32233 * C2050 - C9919 * C2043) *
                C31941) *
               C32249 +
           ((C9914 * C373 - C9917 * C356 + C9915 * C2038 - C9918 * C2030 +
             C32233 * C2044 - C9919 * C2033) *
                C114 +
            (C9914 * C386 - C9917 * C374 + C9915 * C2048 - C9918 * C2039 +
             C32233 * C2051 - C9919 * C2045) *
                C31941) *
               C32219) *
              C348) *
         C31904 * C31892) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C9914 * C122 - C9917 * C115 + C9915 * C359 - C9918 * C349 +
            C32233 * C369 - C9919 * C354) *
               C817 +
           (C9914 * C136 - C9917 * C123 + C9915 * C379 - C9918 * C360 +
            C32233 * C384 - C9919 * C370) *
               C32265 +
           (C9914 * C254 - C9917 * C244 + C9915 * C686 - C9918 * C681 +
            C32233 * C1130 - C9919 * C1118) *
               C818 +
           (C9914 * C274 - C9917 * C255 + C9915 * C696 - C9918 * C687 +
            C32233 * C1145 - C9919 * C1131) *
               C32253 +
           (C9914 * C264 - C9917 * C249 + C9915 * C1124 - C9918 * C1115 +
            C32233 * C1132 - C9919 * C1119) *
               C819 +
           (C9914 * C279 - C9917 * C265 + C9915 * C1142 - C9918 * C1125 +
            C32233 * C1146 - C9919 * C1133) *
               C32230) *
              C31859 * C31918 * C31904 * C110 +
          ((C9922 - C9921 + C9924 - C9923 + C9926 - C9925) * C817 +
           (C9928 - C9927 + C9930 - C9929 + C9932 - C9931) * C32265 +
           (C10336 - C10337 + C10338 - C10339 + C10340 - C10341) * C818 +
           (C10342 - C10343 + C10344 - C10345 + C10346 - C10347) * C32253 +
           (C9917 * C250 - C9914 * C266 + C9918 * C1116 - C9915 * C1126 +
            C9919 * C1121 - C32233 * C1136) *
               C819 +
           (C9917 * C267 - C9914 * C280 + C9918 * C1127 - C9915 * C1143 +
            C9919 * C1137 - C32233 * C1148) *
               C32230) *
              C31859 * C31918 * C31904 * C111 +
          (C9965 * C817 + C9966 * C32265 +
           (C10349 - C10348 + C10351 - C10350 + C10353 - C10352) * C818 +
           (C10355 - C10354 + C10357 - C10356 + C10359 - C10358) * C32253 +
           (C9914 * C268 - C9917 * C251 + C9915 * C1128 - C9918 * C1117 +
            C32233 * C1140 - C9919 * C1123) *
               C819 +
           (C9914 * C281 - C9917 * C269 + C9915 * C1144 - C9918 * C1129 +
            C32233 * C1150 - C9919 * C1141) *
               C32230) *
              C31859 * C31918 * C31904 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C9914 * C122 - C9917 * C115 + C9915 * C359 - C9918 * C349 +
            C32233 * C369 - C9919 * C354) *
               C817 +
           (C9914 * C136 - C9917 * C123 + C9915 * C379 - C9918 * C360 +
            C32233 * C384 - C9919 * C370) *
               C32265 +
           (C10896 - C10897 + C10898 - C10899 + C10900 - C10901) * C818 +
           (C10902 - C10903 + C10904 - C10905 + C10906 - C10907) * C32253 +
           C10940 * C819 + C10941 * C32230) *
              C31859 * C31918 * C240 +
          ((C10897 - C10896 + C10899 - C10898 + C10901 - C10900) * C817 +
           (C10903 - C10902 + C10905 - C10904 + C10907 - C10906) * C32265 +
           (C10909 - C10908 + C10911 - C10910 + C10913 - C10912) * C818 +
           (C10915 - C10914 + C10917 - C10916 + C10919 - C10918) * C32253 +
           (C10920 - C10921 + C10922 - C10923 + C10924 - C10925) * C819 +
           (C10926 - C10927 + C10928 - C10929 + C10930 - C10931) * C32230) *
              C31859 * C31918 * C241 +
          (C10940 * C817 + C10941 * C32265 +
           (C10921 - C10920 + C10923 - C10922 + C10925 - C10924) * C818 +
           (C10927 - C10926 + C10929 - C10928 + C10931 - C10930) * C32253 +
           (C9914 * C969 - C9917 * C960 + C9915 * C6173 - C9918 * C6170 +
            C32233 * C6177 - C9919 * C6172) *
               C819 +
           (C9914 * C978 - C9917 * C970 + C9915 * C6179 - C9918 * C6174 +
            C32233 * C6181 - C9919 * C6178) *
               C32230) *
              C31859 * C31918 * C242) *
         C31892) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C9914 * C122 - C9917 * C115 + C9915 * C359 - C9918 * C349 +
            C32233 * C369 - C9919 * C354) *
               C817 +
           (C9914 * C136 - C9917 * C123 + C9915 * C379 - C9918 * C360 +
            C32233 * C384 - C9919 * C370) *
               C32265 +
           (C10896 - C10897 + C10898 - C10899 + C10900 - C10901) * C818 +
           (C10902 - C10903 + C10904 - C10905 + C10906 - C10907) * C32253 +
           C10940 * C819 + C10941 * C32230) *
              C31859 * C346 +
          ((C9917 * C349 - C9914 * C359 + C9918 * C354 - C9915 * C369 +
            C9919 * C2028 - C32233 * C2034) *
               C817 +
           (C9917 * C360 - C9914 * C379 + C9918 * C370 - C9915 * C384 +
            C9919 * C2035 - C32233 * C2046) *
               C32265 +
           (C9917 * C681 - C9914 * C686 + C9918 * C1118 - C9915 * C1130 +
            C9919 * C2546 - C32233 * C2549) *
               C818 +
           (C9917 * C687 - C9914 * C696 + C9918 * C1131 - C9915 * C1145 +
            C9919 * C2550 - C32233 * C2555) *
               C32253 +
           (C9917 * C1115 - C9914 * C1124 + C9918 * C1119 - C9915 * C1132 +
            C9919 * C6828 - C32233 * C6831) *
               C819 +
           (C9917 * C1125 - C9914 * C1142 + C9918 * C1133 - C9915 * C1146 +
            C9919 * C6832 - C32233 * C6837) *
               C32230) *
              C31859 * C347 +
          ((C9914 * C369 - C9917 * C354 + C9915 * C2034 - C9918 * C2028 +
            C32233 * C2040 - C9919 * C2031) *
               C817 +
           (C9914 * C384 - C9917 * C370 + C9915 * C2046 - C9918 * C2035 +
            C32233 * C2049 - C9919 * C2041) *
               C32265 +
           (C9914 * C1130 - C9917 * C1118 + C9915 * C2549 - C9918 * C2546 +
            C32233 * C6833 - C9919 * C6829) *
               C818 +
           (C9914 * C1145 - C9917 * C1131 + C9915 * C2555 - C9918 * C2550 +
            C32233 * C6838 - C9919 * C6834) *
               C32253 +
           (C9914 * C1132 - C9917 * C1119 + C9915 * C6831 - C9918 * C6828 +
            C32233 * C6835 - C9919 * C6830) *
               C819 +
           (C9914 * C1146 - C9917 * C1133 + C9915 * C6837 - C9918 * C6832 +
            C32233 * C6839 - C9919 * C6836) *
               C32230) *
              C31859 * C348) *
         C31904 * C31892) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C11587 * C122 - C11592 * C115 + C11588 * C359 - C11593 * C349 +
            C11589 * C369 - C11594 * C354 + C11590 * C2034 - C11595 * C2028 +
            C11591 * C2040 - C11596 * C2031) *
               C114 +
           (C11587 * C136 - C11592 * C123 + C11588 * C379 - C11593 * C360 +
            C11589 * C384 - C11594 * C370 + C11590 * C2046 - C11595 * C2035 +
            C11591 * C2049 - C11596 * C2041) *
               C31941) *
              C31859 * C31918 * C31904 * C110 +
          ((C11592 * C116 - C11587 * C124 + C11593 * C350 - C11588 * C361 +
            C11594 * C355 - C11589 * C371 + C11595 * C2029 - C11590 * C2036 +
            C11596 * C2032 - C11591 * C2042) *
               C114 +
           (C11592 * C125 - C11587 * C137 + C11593 * C362 - C11588 * C380 +
            C11594 * C372 - C11589 * C385 + C11595 * C2037 - C11590 * C2047 +
            C11596 * C2043 - C11591 * C2050) *
               C31941) *
              C31859 * C31918 * C31904 * C111 +
          ((C11587 * C126 - C11592 * C117 + C11588 * C363 - C11593 * C351 +
            C11589 * C373 - C11594 * C356 + C11590 * C2038 - C11595 * C2030 +
            C11591 * C2044 - C11596 * C2033) *
               C114 +
           (C11587 * C138 - C11592 * C127 + C11588 * C381 - C11593 * C364 +
            C11589 * C386 - C11594 * C374 + C11590 * C2048 - C11595 * C2039 +
            C11591 * C2051 - C11596 * C2045) *
               C31941) *
              C31859 * C31918 * C31904 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C11587 * C122 - C11592 * C115 + C11588 * C359 - C11593 * C349 +
            C11589 * C369 - C11594 * C354 + C11590 * C2034 - C11595 * C2028 +
            C11591 * C2040 - C11596 * C2031) *
               C114 +
           (C11587 * C136 - C11592 * C123 + C11588 * C379 - C11593 * C360 +
            C11589 * C384 - C11594 * C370 + C11590 * C2046 - C11595 * C2035 +
            C11591 * C2049 - C11596 * C2041) *
               C31941) *
              C31859 * C31918 * C240 +
          ((C11592 * C244 - C11587 * C254 + C11593 * C681 - C11588 * C686 +
            C11594 * C1118 - C11589 * C1130 + C11595 * C2546 - C11590 * C2549 +
            C11596 * C6829 - C11591 * C6833) *
               C114 +
           (C11592 * C255 - C11587 * C274 + C11593 * C687 - C11588 * C696 +
            C11594 * C1131 - C11589 * C1145 + C11595 * C2550 - C11590 * C2555 +
            C11596 * C6834 - C11591 * C6838) *
               C31941) *
              C31859 * C31918 * C241 +
          ((C11587 * C264 - C11592 * C249 + C11588 * C1124 - C11593 * C1115 +
            C11589 * C1132 - C11594 * C1119 + C11590 * C6831 - C11595 * C6828 +
            C11591 * C6835 - C11596 * C6830) *
               C114 +
           (C11587 * C279 - C11592 * C265 + C11588 * C1142 - C11593 * C1125 +
            C11589 * C1146 - C11594 * C1133 + C11590 * C6837 - C11595 * C6832 +
            C11591 * C6839 - C11596 * C6836) *
               C31941) *
              C31859 * C31918 * C242) *
         C31892) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C11587 * C122 - C11592 * C115 + C11588 * C359 - C11593 * C349 +
            C11589 * C369 - C11594 * C354 + C11590 * C2034 - C11595 * C2028 +
            C11591 * C2040 - C11596 * C2031) *
               C114 +
           (C11587 * C136 - C11592 * C123 + C11588 * C379 - C11593 * C360 +
            C11589 * C384 - C11594 * C370 + C11590 * C2046 - C11595 * C2035 +
            C11591 * C2049 - C11596 * C2041) *
               C31941) *
              C31859 * C346 +
          ((C11592 * C349 - C11587 * C359 + C11593 * C354 - C11588 * C369 +
            C11594 * C2028 - C11589 * C2034 + C11595 * C2031 - C11590 * C2040 +
            C11596 * C11721 - C11591 * C11723) *
               C114 +
           (C11592 * C360 - C11587 * C379 + C11593 * C370 - C11588 * C384 +
            C11594 * C2035 - C11589 * C2046 + C11595 * C2041 - C11590 * C2049 +
            C11596 * C11724 - C11591 * C11727) *
               C31941) *
              C31859 * C347 +
          ((C11587 * C369 - C11592 * C354 + C11588 * C2034 - C11593 * C2028 +
            C11589 * C2040 - C11594 * C2031 + C11590 * C11723 -
            C11595 * C11721 + C11591 * C11725 - C11596 * C11722) *
               C114 +
           (C11587 * C384 - C11592 * C370 + C11588 * C2046 - C11593 * C2035 +
            C11589 * C2049 - C11594 * C2041 + C11590 * C11727 -
            C11595 * C11724 + C11591 * C11728 - C11596 * C11726) *
               C31941) *
              C31859 * C348) *
         C31904 * C31892) /
            (p * q * std::sqrt(p + q));
    d2ee[63] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C31958 * C122 - C113 * C115) * C114 +
                 (C31958 * C136 - C113 * C123) * C31941) *
                    C103 +
                ((C144 - C145) * C114 + (C146 - C147) * C31941) * C104 +
                C176 * C105 + C177 * C106 + C178 * C107) *
                   C577 +
               (((C113 * C349 - C31958 * C359) * C114 +
                 (C113 * C360 - C31958 * C379) * C31941) *
                    C103 +
                ((C584 - C585) * C114 + (C586 - C587) * C31941) * C104 +
                ((C588 - C589) * C114 + (C590 - C591) * C31941) * C105 +
                ((C592 - C593) * C114 + (C594 - C595) * C31941) * C106 +
                ((C596 - C597) * C114 + (C598 - C599) * C31941) * C107) *
                   C578) *
                  C31904 * C473 +
              ((((C145 - C144) * C114 + (C147 - C146) * C31941) * C103 +
                ((C149 - C148) * C114 + (C151 - C150) * C31941) * C104 +
                ((C153 - C152) * C114 + (C155 - C154) * C31941) * C105 +
                ((C157 - C156) * C114 + (C159 - C158) * C31941) * C106 +
                ((C160 - C161) * C114 + (C162 - C163) * C31941) * C107) *
                   C577 +
               (((C585 - C584) * C114 + (C587 - C586) * C31941) * C103 +
                ((C589 - C588) * C114 + (C591 - C590) * C31941) * C104 +
                ((C593 - C592) * C114 + (C595 - C594) * C31941) * C105 +
                ((C597 - C596) * C114 + (C599 - C598) * C31941) * C106 +
                ((C31958 * C580 - C113 * C579) * C114 +
                 (C31958 * C582 - C113 * C581) * C31941) *
                    C107) *
                   C578) *
                  C31904 * C474) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C31958 * C122 - C113 * C115) * C817 +
                 (C31958 * C136 - C113 * C123) * C32265 + (C982 - C983) * C818 +
                 (C984 - C985) * C32253 + C1004 * C819 + C1005 * C32230) *
                    C814 +
                ((C144 - C145) * C817 + (C146 - C147) * C32265 + C1302 * C818 +
                 C1303 * C32253 + C990 * C819 + C991 * C32230) *
                    C815 +
                C847 * C32219) *
                   C577 +
               (((C113 * C349 - C31958 * C359) * C817 +
                 (C113 * C360 - C31958 * C379) * C32265 +
                 (C113 * C681 - C31958 * C686) * C818 +
                 (C113 * C687 - C31958 * C696) * C32253 +
                 (C113 * C1115 - C31958 * C1124) * C819 +
                 (C113 * C1125 - C31958 * C1142) * C32230) *
                    C814 +
                ((C584 - C585) * C817 + (C586 - C587) * C32265 +
                 (C1462 - C1463) * C818 + (C1464 - C1465) * C32253 +
                 (C1466 - C1467) * C819 + (C1468 - C1469) * C32230) *
                    C815 +
                ((C588 - C589) * C817 + (C590 - C591) * C32265 +
                 (C1470 - C1471) * C818 + (C1472 - C1473) * C32253 +
                 (C1474 - C1475) * C819 + (C1476 - C1477) * C32230) *
                    C32219) *
                   C578) *
                  C31904 * C473 +
              ((((C145 - C144) * C817 + (C147 - C146) * C32265 + C1304 * C818 +
                 C1305 * C32253 + C1306 * C819 + C1307 * C32230) *
                    C814 +
                ((C149 - C148) * C817 + (C151 - C150) * C32265 + C1308 * C818 +
                 C1309 * C32253 + C1310 * C819 + C1311 * C32230) *
                    C815 +
                ((C153 - C152) * C817 + (C155 - C154) * C32265 +
                 (C488 - C489) * C818 + (C490 - C491) * C32253 +
                 (C833 - C834) * C819 + (C835 - C836) * C32230) *
                    C32219) *
                   C577 +
               (((C585 - C584) * C817 + (C587 - C586) * C32265 +
                 (C1463 - C1462) * C818 + (C1465 - C1464) * C32253 +
                 (C1467 - C1466) * C819 + (C1469 - C1468) * C32230) *
                    C814 +
                ((C589 - C588) * C817 + (C591 - C590) * C32265 +
                 (C1471 - C1470) * C818 + (C1473 - C1472) * C32253 +
                 (C1475 - C1474) * C819 + (C1477 - C1476) * C32230) *
                    C815 +
                ((C593 - C592) * C817 + (C595 - C594) * C32265 +
                 (C31958 * C692 - C113 * C684) * C818 +
                 (C31958 * C699 - C113 * C693) * C32253 +
                 (C31958 * C1458 - C113 * C1457) * C819 +
                 (C31958 * C1460 - C113 * C1459) * C32230) *
                    C32219) *
                   C578) *
                  C31904 * C474)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C32266 * C122 - C1756 * C115 + C32255 * C359 - C1757 * C349 +
              C32233 * C369 - C1758 * C354) *
                 C114 +
             (C32266 * C136 - C1756 * C123 + C32255 * C379 - C1757 * C360 +
              C32233 * C384 - C1758 * C370) *
                 C31941) *
                C814 +
            ((C1760 - C1761 + C1762 - C1763 + C1764 - C1765) * C114 +
             (C1766 - C1767 + C1768 - C1769 + C1770 - C1771) * C31941) *
                C815 +
            C1808 * C32219) *
               C577 +
           (((C1756 * C349 - C32266 * C359 + C1757 * C354 - C32255 * C369 +
              C1758 * C2028 - C32233 * C2034) *
                 C114 +
             (C1756 * C360 - C32266 * C379 + C1757 * C370 - C32255 * C384 +
              C1758 * C2035 - C32233 * C2046) *
                 C31941) *
                C814 +
            ((C2377 - C2378 + C2379 - C2380 + C2381 - C2382) * C114 +
             (C2383 - C2384 + C2385 - C2386 + C2387 - C2388) * C31941) *
                C815 +
            ((C2389 - C2390 + C2391 - C2392 + C2393 - C2394) * C114 +
             (C2395 - C2396 + C2397 - C2398 + C2399 - C2400) * C31941) *
                C32219) *
               C578) *
              C31904 * C473 +
          ((((C1761 - C1760 + C1763 - C1762 + C1765 - C1764) * C114 +
             (C1767 - C1766 + C1769 - C1768 + C1771 - C1770) * C31941) *
                C814 +
            ((C1773 - C1772 + C1775 - C1774 + C1777 - C1776) * C114 +
             (C1779 - C1778 + C1781 - C1780 + C1783 - C1782) * C31941) *
                C815 +
            ((C1784 - C1785 + C1786 - C1787 + C1788 - C1789) * C114 +
             (C1790 - C1791 + C1792 - C1793 + C1794 - C1795) * C31941) *
                C32219) *
               C577 +
           (((C2378 - C2377 + C2380 - C2379 + C2382 - C2381) * C114 +
             (C2384 - C2383 + C2386 - C2385 + C2388 - C2387) * C31941) *
                C814 +
            ((C2390 - C2389 + C2392 - C2391 + C2394 - C2393) * C114 +
             (C2396 - C2395 + C2398 - C2397 + C2400 - C2399) * C31941) *
                C815 +
            ((C32266 * C365 - C1756 * C352 + C32255 * C375 - C1757 * C357 +
              C32233 * C2373 - C1758 * C2372) *
                 C114 +
             (C32266 * C382 - C1756 * C366 + C32255 * C387 - C1757 * C376 +
              C32233 * C2375 - C1758 * C2374) *
                 C31941) *
                C32219) *
               C578) *
              C31904 * C474)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C31958 * C122 - C113 * C115) * C5281 +
             (C31958 * C136 - C113 * C123) * C5275 + (C982 - C983) * C5282 +
             (C984 - C985) * C5276 + C1004 * C5283 + C1005 * C32230) *
                C32262 +
            ((C144 - C145) * C5281 + (C146 - C147) * C5275 + C1302 * C5282 +
             C1303 * C5276 + C990 * C5283 + C991 * C32230) *
                C32249 +
            C5295 * C32219) *
               C577 +
           (((C113 * C349 - C31958 * C359) * C5281 +
             (C113 * C360 - C31958 * C379) * C5275 + (C1636 - C1637) * C5282 +
             (C1638 - C1639) * C5276 + (C1640 - C1641) * C5283 +
             (C1642 - C1643) * C32230) *
                C32262 +
            ((C584 - C585) * C5281 + (C586 - C587) * C5275 +
             (C1462 - C1463) * C5282 + (C1464 - C1465) * C5276 +
             (C1466 - C1467) * C5283 + (C1468 - C1469) * C32230) *
                C32249 +
            ((C588 - C589) * C5281 + (C590 - C591) * C5275 +
             (C1470 - C1471) * C5282 + (C1472 - C1473) * C5276 +
             (C1474 - C1475) * C5283 + (C1476 - C1477) * C32230) *
                C32219) *
               C578) *
              C31904 * C473 +
          ((((C145 - C144) * C5281 + (C147 - C146) * C5275 + C1304 * C5282 +
             C1305 * C5276 + C1306 * C5283 + C1307 * C32230) *
                C32262 +
            ((C149 - C148) * C5281 + (C151 - C150) * C5275 + C1308 * C5282 +
             C1309 * C5276 + C1310 * C5283 + C1311 * C32230) *
                C32249 +
            ((C153 - C152) * C5281 + (C155 - C154) * C5275 + C3007 * C5282 +
             C3008 * C5276 + (C833 - C834) * C5283 + (C835 - C836) * C32230) *
                C32219) *
               C577 +
           (((C585 - C584) * C5281 + (C587 - C586) * C5275 +
             (C1463 - C1462) * C5282 + (C1465 - C1464) * C5276 +
             (C1467 - C1466) * C5283 + (C1469 - C1468) * C32230) *
                C32262 +
            ((C589 - C588) * C5281 + (C591 - C590) * C5275 +
             (C1471 - C1470) * C5282 + (C1473 - C1472) * C5276 +
             (C1475 - C1474) * C5283 + (C1477 - C1476) * C32230) *
                C32249 +
            ((C593 - C592) * C5281 + (C595 - C594) * C5275 +
             (C3140 - C3139) * C5282 + (C3142 - C3141) * C5276 +
             (C31958 * C1458 - C113 * C1457) * C5283 +
             (C31958 * C1460 - C113 * C1459) * C32230) *
                C32219) *
               C578) *
              C31904 * C474)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C31958 * C122 - C113 * C115) * C6021 +
            (C31958 * C136 - C113 * C123) * C6015 + (C982 - C983) * C6022 +
            (C984 - C985) * C6016 + C1004 * C6023 + C1005 * C6017 +
            C6097 * C6024 + C6098 * C6018 + C6107 * C6025 + C6108 * C6019) *
               C31859 * C577 +
           ((C113 * C349 - C31958 * C359) * C6021 +
            (C113 * C360 - C31958 * C379) * C6015 + (C1636 - C1637) * C6022 +
            (C1638 - C1639) * C6016 + (C1640 - C1641) * C6023 +
            (C1642 - C1643) * C6017 + (C113 * C1623 - C31958 * C1626) * C6024 +
            (C113 * C1627 - C31958 * C1632) * C6018 +
            (C113 * C6170 - C31958 * C6173) * C6025 +
            (C113 * C6174 - C31958 * C6179) * C6019) *
               C31859 * C578) *
              C31904 * C473 +
          (((C145 - C144) * C6021 + (C147 - C146) * C6015 + C1304 * C6022 +
            C1305 * C6016 + C1306 * C6023 + C1307 * C6017 +
            (C996 - C997) * C6024 + (C998 - C999) * C6018 +
            (C6269 - C6270) * C6025 + (C6271 - C6272) * C6019) *
               C31859 * C577 +
           ((C585 - C584) * C6021 + (C587 - C586) * C6015 +
            (C1463 - C1462) * C6022 + (C1465 - C1464) * C6016 +
            (C1467 - C1466) * C6023 + (C1469 - C1468) * C6017 +
            (C31958 * C1628 - C113 * C1624) * C6024 +
            (C31958 * C1633 - C113 * C1629) * C6018 +
            (C31958 * C6355 - C113 * C6354) * C6025 +
            (C31958 * C6357 - C113 * C6356) * C6019) *
               C31859 * C578) *
              C31904 * C474)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C32266 * C122 - C1756 * C115 + C32255 * C359 - C1757 * C349 +
             C32233 * C369 - C1758 * C354) *
                C5281 +
            (C32266 * C136 - C1756 * C123 + C32255 * C379 - C1757 * C360 +
             C32233 * C384 - C1758 * C370) *
                C5275 +
            (C6673 - C6674 + C6675 - C6676 + C6677 - C6678) * C5282 +
            (C6679 - C6680 + C6681 - C6682 + C6683 - C6684) * C5276 +
            C6717 * C5283 + C6718 * C32230) *
               C31859 * C577 +
           ((C1756 * C349 - C32266 * C359 + C1757 * C354 - C32255 * C369 +
             C1758 * C2028 - C32233 * C2034) *
                C5281 +
            (C1756 * C360 - C32266 * C379 + C1757 * C370 - C32255 * C384 +
             C1758 * C2035 - C32233 * C2046) *
                C5275 +
            (C1756 * C681 - C32266 * C686 + C1757 * C1118 - C32255 * C1130 +
             C1758 * C2546 - C32233 * C2549) *
                C5282 +
            (C1756 * C687 - C32266 * C696 + C1757 * C1131 - C32255 * C1145 +
             C1758 * C2550 - C32233 * C2555) *
                C5276 +
            (C1756 * C1115 - C32266 * C1124 + C1757 * C1119 - C32255 * C1132 +
             C1758 * C6828 - C32233 * C6831) *
                C5283 +
            (C1756 * C1125 - C32266 * C1142 + C1757 * C1133 - C32255 * C1146 +
             C1758 * C6832 - C32233 * C6837) *
                C32230) *
               C31859 * C578) *
              C31904 * C473 +
          (((C1761 - C1760 + C1763 - C1762 + C1765 - C1764) * C5281 +
            (C1767 - C1766 + C1769 - C1768 + C1771 - C1770) * C5275 +
            (C2203 - C2204 + C2205 - C2206 + C2207 - C2208) * C5282 +
            (C2209 - C2210 + C2211 - C2212 + C2213 - C2214) * C5276 +
            (C6991 - C6992 + C6993 - C6994 + C6995 - C6996) * C5283 +
            (C6997 - C6998 + C6999 - C7000 + C7001 - C7002) * C32230) *
               C31859 * C577 +
           ((C2378 - C2377 + C2380 - C2379 + C2382 - C2381) * C5281 +
            (C2384 - C2383 + C2386 - C2385 + C2388 - C2387) * C5275 +
            (C32266 * C688 - C1756 * C682 + C32255 * C1134 - C1757 * C1120 +
             C32233 * C2551 - C1758 * C2547) *
                C5282 +
            (C32266 * C697 - C1756 * C689 + C32255 * C1147 - C1757 * C1135 +
             C32233 * C2556 - C1758 * C2552) *
                C5276 +
            (C32266 * C1126 - C1756 * C1116 + C32255 * C1136 - C1757 * C1121 +
             C32233 * C7149 - C1758 * C7148) *
                C5283 +
            (C32266 * C1143 - C1756 * C1127 + C32255 * C1148 - C1757 * C1137 +
             C32233 * C7151 - C1758 * C7150) *
                C32230) *
               C31859 * C578) *
              C31904 * C474)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C9914 * C122 - C9917 * C115 + C9915 * C359 - C9918 * C349 +
              C32233 * C369 - C9919 * C354) *
                 C114 +
             (C9914 * C136 - C9917 * C123 + C9915 * C379 - C9918 * C360 +
              C32233 * C384 - C9919 * C370) *
                 C31941) *
                C32262 +
            ((C9921 - C9922 + C9923 - C9924 + C9925 - C9926) * C114 +
             (C9927 - C9928 + C9929 - C9930 + C9931 - C9932) * C31941) *
                C32249 +
            C9969 * C32219) *
               C577 +
           (((C9917 * C349 - C9914 * C359 + C9918 * C354 - C9915 * C369 +
              C9919 * C2028 - C32233 * C2034) *
                 C114 +
             (C9917 * C360 - C9914 * C379 + C9918 * C370 - C9915 * C384 +
              C9919 * C2035 - C32233 * C2046) *
                 C31941) *
                C32262 +
            ((C10506 - C10507 + C10508 - C10509 + C10510 - C10511) * C114 +
             (C10512 - C10513 + C10514 - C10515 + C10516 - C10517) * C31941) *
                C32249 +
            ((C10518 - C10519 + C10520 - C10521 + C10522 - C10523) * C114 +
             (C10524 - C10525 + C10526 - C10527 + C10528 - C10529) * C31941) *
                C32219) *
               C578) *
              C31904 * C473 +
          ((((C9922 - C9921 + C9924 - C9923 + C9926 - C9925) * C114 +
             (C9928 - C9927 + C9930 - C9929 + C9932 - C9931) * C31941) *
                C32262 +
            ((C9934 - C9933 + C9936 - C9935 + C9938 - C9937) * C114 +
             (C9940 - C9939 + C9942 - C9941 + C9944 - C9943) * C31941) *
                C32249 +
            ((C9945 - C9946 + C9947 - C9948 + C9949 - C9950) * C114 +
             (C9951 - C9952 + C9953 - C9954 + C9955 - C9956) * C31941) *
                C32219) *
               C577 +
           (((C10507 - C10506 + C10509 - C10508 + C10511 - C10510) * C114 +
             (C10513 - C10512 + C10515 - C10514 + C10517 - C10516) * C31941) *
                C32262 +
            ((C10519 - C10518 + C10521 - C10520 + C10523 - C10522) * C114 +
             (C10525 - C10524 + C10527 - C10526 + C10529 - C10528) * C31941) *
                C32249 +
            ((C9914 * C365 - C9917 * C352 + C9915 * C375 - C9918 * C357 +
              C32233 * C2373 - C9919 * C2372) *
                 C114 +
             (C9914 * C382 - C9917 * C366 + C9915 * C387 - C9918 * C376 +
              C32233 * C2375 - C9919 * C2374) *
                 C31941) *
                C32219) *
               C578) *
              C31904 * C474)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C9914 * C122 - C9917 * C115 + C9915 * C359 - C9918 * C349 +
             C32233 * C369 - C9919 * C354) *
                C817 +
            (C9914 * C136 - C9917 * C123 + C9915 * C379 - C9918 * C360 +
             C32233 * C384 - C9919 * C370) *
                C32265 +
            (C10896 - C10897 + C10898 - C10899 + C10900 - C10901) * C818 +
            (C10902 - C10903 + C10904 - C10905 + C10906 - C10907) * C32253 +
            C10940 * C819 + C10941 * C32230) *
               C31859 * C577 +
           ((C9917 * C349 - C9914 * C359 + C9918 * C354 - C9915 * C369 +
             C9919 * C2028 - C32233 * C2034) *
                C817 +
            (C9917 * C360 - C9914 * C379 + C9918 * C370 - C9915 * C384 +
             C9919 * C2035 - C32233 * C2046) *
                C32265 +
            (C9917 * C681 - C9914 * C686 + C9918 * C1118 - C9915 * C1130 +
             C9919 * C2546 - C32233 * C2549) *
                C818 +
            (C9917 * C687 - C9914 * C696 + C9918 * C1131 - C9915 * C1145 +
             C9919 * C2550 - C32233 * C2555) *
                C32253 +
            (C9917 * C1115 - C9914 * C1124 + C9918 * C1119 - C9915 * C1132 +
             C9919 * C6828 - C32233 * C6831) *
                C819 +
            (C9917 * C1125 - C9914 * C1142 + C9918 * C1133 - C9915 * C1146 +
             C9919 * C6832 - C32233 * C6837) *
                C32230) *
               C31859 * C578) *
              C31904 * C473 +
          (((C9922 - C9921 + C9924 - C9923 + C9926 - C9925) * C817 +
            (C9928 - C9927 + C9930 - C9929 + C9932 - C9931) * C32265 +
            (C10336 - C10337 + C10338 - C10339 + C10340 - C10341) * C818 +
            (C10342 - C10343 + C10344 - C10345 + C10346 - C10347) * C32253 +
            (C11198 - C11199 + C11200 - C11201 + C11202 - C11203) * C819 +
            (C11204 - C11205 + C11206 - C11207 + C11208 - C11209) * C32230) *
               C31859 * C577 +
           ((C10507 - C10506 + C10509 - C10508 + C10511 - C10510) * C817 +
            (C10513 - C10512 + C10515 - C10514 + C10517 - C10516) * C32265 +
            (C9914 * C688 - C9917 * C682 + C9915 * C1134 - C9918 * C1120 +
             C32233 * C2551 - C9919 * C2547) *
                C818 +
            (C9914 * C697 - C9917 * C689 + C9915 * C1147 - C9918 * C1135 +
             C32233 * C2556 - C9919 * C2552) *
                C32253 +
            (C9914 * C1126 - C9917 * C1116 + C9915 * C1136 - C9918 * C1121 +
             C32233 * C7149 - C9919 * C7148) *
                C819 +
            (C9914 * C1143 - C9917 * C1127 + C9915 * C1148 - C9918 * C1137 +
             C32233 * C7151 - C9919 * C7150) *
                C32230) *
               C31859 * C578) *
              C31904 * C474)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C11587 * C122 - C11592 * C115 + C11588 * C359 - C11593 * C349 +
             C11589 * C369 - C11594 * C354 + C11590 * C2034 - C11595 * C2028 +
             C11591 * C2040 - C11596 * C2031) *
                C114 +
            (C11587 * C136 - C11592 * C123 + C11588 * C379 - C11593 * C360 +
             C11589 * C384 - C11594 * C370 + C11590 * C2046 - C11595 * C2035 +
             C11591 * C2049 - C11596 * C2041) *
                C31941) *
               C31859 * C577 +
           ((C11592 * C349 - C11587 * C359 + C11593 * C354 - C11588 * C369 +
             C11594 * C2028 - C11589 * C2034 + C11595 * C2031 - C11590 * C2040 +
             C11596 * C11721 - C11591 * C11723) *
                C114 +
            (C11592 * C360 - C11587 * C379 + C11593 * C370 - C11588 * C384 +
             C11594 * C2035 - C11589 * C2046 + C11595 * C2041 - C11590 * C2049 +
             C11596 * C11724 - C11591 * C11727) *
                C31941) *
               C31859 * C578) *
              C31904 * C473 +
          (((C11592 * C116 - C11587 * C124 + C11593 * C350 - C11588 * C361 +
             C11594 * C355 - C11589 * C371 + C11595 * C2029 - C11590 * C2036 +
             C11596 * C2032 - C11591 * C2042) *
                C114 +
            (C11592 * C125 - C11587 * C137 + C11593 * C362 - C11588 * C380 +
             C11594 * C372 - C11589 * C385 + C11595 * C2037 - C11590 * C2047 +
             C11596 * C2043 - C11591 * C2050) *
                C31941) *
               C31859 * C577 +
           ((C11587 * C361 - C11592 * C350 + C11588 * C371 - C11593 * C355 +
             C11589 * C2036 - C11594 * C2029 + C11590 * C2042 - C11595 * C2032 +
             C11591 * C11898 - C11596 * C11897) *
                C114 +
            (C11587 * C380 - C11592 * C362 + C11588 * C385 - C11593 * C372 +
             C11589 * C2047 - C11594 * C2037 + C11590 * C2050 - C11595 * C2043 +
             C11591 * C11900 - C11596 * C11899) *
                C31941) *
               C31859 * C578) *
              C31904 * C474)) /
            (p * q * std::sqrt(p + q));
    d2ee[64] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C31958 * C122 - C113 * C115) * C114 +
            (C31958 * C136 - C113 * C123) * C31941) *
               C103 +
           ((C144 - C145) * C114 + (C146 - C147) * C31941) * C104 +
           C176 * C105 + C177 * C106 + C178 * C107) *
              C31918 * C31904 * C110 +
          (((C145 - C144) * C114 + (C147 - C146) * C31941) * C103 +
           ((C149 - C148) * C114 + (C151 - C150) * C31941) * C104 +
           ((C153 - C152) * C114 + (C155 - C154) * C31941) * C105 +
           ((C157 - C156) * C114 + (C159 - C158) * C31941) * C106 +
           ((C160 - C161) * C114 + (C162 - C163) * C31941) * C107) *
              C31918 * C31904 * C111 +
          (C176 * C103 + C177 * C104 + C178 * C105 +
           ((C161 - C160) * C114 + (C163 - C162) * C31941) * C106 +
           ((C31958 * C134 - C113 * C121) * C114 +
            (C31958 * C142 - C113 * C135) * C31941) *
               C107) *
              C31918 * C31904 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C31958 * C122 - C113 * C115) * C114 +
            (C31958 * C136 - C113 * C123) * C31941) *
               C103 +
           ((C144 - C145) * C114 + (C146 - C147) * C31941) * C104 +
           C176 * C105 + C177 * C106 + C178 * C107) *
              C31918 * C240 +
          (((C113 * C244 - C31958 * C254) * C114 +
            (C113 * C255 - C31958 * C274) * C31941) *
               C103 +
           ((C113 * C245 - C31958 * C256) * C114 +
            (C113 * C257 - C31958 * C275) * C31941) *
               C104 +
           ((C113 * C246 - C31958 * C258) * C114 +
            (C113 * C259 - C31958 * C276) * C31941) *
               C105 +
           ((C113 * C247 - C31958 * C260) * C114 +
            (C113 * C261 - C31958 * C277) * C31941) *
               C106 +
           ((C113 * C248 - C31958 * C262) * C114 +
            (C113 * C263 - C31958 * C278) * C31941) *
               C107) *
              C31918 * C241 +
          (((C31958 * C264 - C113 * C249) * C114 +
            (C31958 * C279 - C113 * C265) * C31941) *
               C103 +
           ((C31958 * C266 - C113 * C250) * C114 +
            (C31958 * C280 - C113 * C267) * C31941) *
               C104 +
           ((C31958 * C268 - C113 * C251) * C114 +
            (C31958 * C281 - C113 * C269) * C31941) *
               C105 +
           ((C31958 * C270 - C113 * C252) * C114 +
            (C31958 * C282 - C113 * C271) * C31941) *
               C106 +
           ((C31958 * C272 - C113 * C253) * C114 +
            (C31958 * C283 - C113 * C273) * C31941) *
               C107) *
              C31918 * C242) *
         C31892) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C31958 * C122 - C113 * C115) * C817 +
            (C31958 * C136 - C113 * C123) * C32265 +
            (C31958 * C254 - C113 * C244) * C818 +
            (C31958 * C274 - C113 * C255) * C32253 +
            (C31958 * C264 - C113 * C249) * C819 +
            (C31958 * C279 - C113 * C265) * C32230) *
               C814 +
           ((C144 - C145) * C817 + (C146 - C147) * C32265 +
            (C481 - C480) * C818 + (C483 - C482) * C32253 +
            (C821 - C822) * C819 + (C823 - C824) * C32230) *
               C815 +
           C847 * C32219) *
              C31918 * C31904 * C110 +
          (((C145 - C144) * C817 + (C147 - C146) * C32265 +
            (C480 - C481) * C818 + (C482 - C483) * C32253 +
            (C822 - C821) * C819 + (C824 - C823) * C32230) *
               C814 +
           ((C149 - C148) * C817 + (C151 - C150) * C32265 +
            (C484 - C485) * C818 + (C486 - C487) * C32253 +
            (C830 - C829) * C819 + (C832 - C831) * C32230) *
               C815 +
           ((C153 - C152) * C817 + (C155 - C154) * C32265 +
            (C488 - C489) * C818 + (C490 - C491) * C32253 +
            (C833 - C834) * C819 + (C835 - C836) * C32230) *
               C32219) *
              C31918 * C31904 * C111 +
          (C847 * C814 +
           (C166 * C817 + C167 * C32265 + (C489 - C488) * C818 +
            (C491 - C490) * C32253 + (C834 - C833) * C819 +
            (C836 - C835) * C32230) *
               C815 +
           (C168 * C817 + C169 * C32265 + (C493 - C492) * C818 +
            (C495 - C494) * C32253 + (C31958 * C272 - C113 * C253) * C819 +
            (C31958 * C283 - C113 * C273) * C32230) *
               C32219) *
              C31918 * C31904 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C31958 * C122 - C113 * C115) * C817 +
            (C31958 * C136 - C113 * C123) * C32265 + (C982 - C983) * C818 +
            (C984 - C985) * C32253 + C1004 * C819 + C1005 * C32230) *
               C814 +
           ((C144 - C145) * C817 + (C146 - C147) * C32265 +
            (C481 - C480) * C818 + (C483 - C482) * C32253 + C990 * C819 +
            C991 * C32230) *
               C815 +
           C847 * C32219) *
              C31918 * C240 +
          (((C983 - C982) * C817 + (C985 - C984) * C32265 +
            (C987 - C986) * C818 + (C989 - C988) * C32253 +
            (C992 - C993) * C819 + (C994 - C995) * C32230) *
               C814 +
           ((C480 - C481) * C817 + (C482 - C483) * C32265 +
            (C822 - C821) * C818 + (C824 - C823) * C32253 +
            (C996 - C997) * C819 + (C998 - C999) * C32230) *
               C815 +
           ((C484 - C485) * C817 + (C486 - C487) * C32265 +
            (C830 - C829) * C818 + (C832 - C831) * C32253 +
            (C1000 - C1001) * C819 + (C1002 - C1003) * C32230) *
               C32219) *
              C31918 * C241 +
          ((C1004 * C817 + C1005 * C32265 + (C993 - C992) * C818 +
            (C995 - C994) * C32253 + (C31958 * C969 - C113 * C960) * C819 +
            (C31958 * C978 - C113 * C970) * C32230) *
               C814 +
           (C990 * C817 + C991 * C32265 + (C997 - C996) * C818 +
            (C999 - C998) * C32253 + (C31958 * C971 - C113 * C961) * C819 +
            (C31958 * C979 - C113 * C972) * C32230) *
               C815 +
           (C840 * C817 + C841 * C32265 + (C1001 - C1000) * C818 +
            (C1003 - C1002) * C32253 + (C31958 * C973 - C113 * C962) * C819 +
            (C31958 * C980 - C113 * C974) * C32230) *
               C32219) *
              C31918 * C242) *
         C31892) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C32266 * C122 - C1756 * C115 + C32255 * C359 - C1757 * C349 +
             C32233 * C369 - C1758 * C354) *
                C114 +
            (C32266 * C136 - C1756 * C123 + C32255 * C379 - C1757 * C360 +
             C32233 * C384 - C1758 * C370) *
                C31941) *
               C814 +
           ((C1760 - C1761 + C1762 - C1763 + C1764 - C1765) * C114 +
            (C1766 - C1767 + C1768 - C1769 + C1770 - C1771) * C31941) *
               C815 +
           C1808 * C32219) *
              C31918 * C31904 * C110 +
          (((C1761 - C1760 + C1763 - C1762 + C1765 - C1764) * C114 +
            (C1767 - C1766 + C1769 - C1768 + C1771 - C1770) * C31941) *
               C814 +
           ((C1773 - C1772 + C1775 - C1774 + C1777 - C1776) * C114 +
            (C1779 - C1778 + C1781 - C1780 + C1783 - C1782) * C31941) *
               C815 +
           ((C1784 - C1785 + C1786 - C1787 + C1788 - C1789) * C114 +
            (C1790 - C1791 + C1792 - C1793 + C1794 - C1795) * C31941) *
               C32219) *
              C31918 * C31904 * C111 +
          (C1808 * C814 +
           ((C1785 - C1784 + C1787 - C1786 + C1789 - C1788) * C114 +
            (C1791 - C1790 + C1793 - C1792 + C1795 - C1794) * C31941) *
               C815 +
           ((C32266 * C130 - C1756 * C119 + C32255 * C367 - C1757 * C353 +
             C32233 * C377 - C1758 * C358) *
                C114 +
            (C32266 * C140 - C1756 * C131 + C32255 * C383 - C1757 * C368 +
             C32233 * C388 - C1758 * C378) *
                C31941) *
               C32219) *
              C31918 * C31904 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C32266 * C122 - C1756 * C115 + C32255 * C359 - C1757 * C349 +
             C32233 * C369 - C1758 * C354) *
                C114 +
            (C32266 * C136 - C1756 * C123 + C32255 * C379 - C1757 * C360 +
             C32233 * C384 - C1758 * C370) *
                C31941) *
               C814 +
           ((C1760 - C1761 + C1762 - C1763 + C1764 - C1765) * C114 +
            (C1766 - C1767 + C1768 - C1769 + C1770 - C1771) * C31941) *
               C815 +
           C1808 * C32219) *
              C31918 * C240 +
          (((C1756 * C244 - C32266 * C254 + C1757 * C681 - C32255 * C686 +
             C1758 * C1118 - C32233 * C1130) *
                C114 +
            (C1756 * C255 - C32266 * C274 + C1757 * C687 - C32255 * C696 +
             C1758 * C1131 - C32233 * C1145) *
                C31941) *
               C814 +
           ((C1756 * C245 - C32266 * C256 + C1757 * C682 - C32255 * C688 +
             C1758 * C1120 - C32233 * C1134) *
                C114 +
            (C1756 * C257 - C32266 * C275 + C1757 * C689 - C32255 * C697 +
             C1758 * C1135 - C32233 * C1147) *
                C31941) *
               C815 +
           ((C1756 * C246 - C32266 * C258 + C1757 * C683 - C32255 * C690 +
             C1758 * C1122 - C32233 * C1138) *
                C114 +
            (C1756 * C259 - C32266 * C276 + C1757 * C691 - C32255 * C698 +
             C1758 * C1139 - C32233 * C1149) *
                C31941) *
               C32219) *
              C31918 * C241 +
          (((C32266 * C264 - C1756 * C249 + C32255 * C1124 - C1757 * C1115 +
             C32233 * C1132 - C1758 * C1119) *
                C114 +
            (C32266 * C279 - C1756 * C265 + C32255 * C1142 - C1757 * C1125 +
             C32233 * C1146 - C1758 * C1133) *
                C31941) *
               C814 +
           ((C32266 * C266 - C1756 * C250 + C32255 * C1126 - C1757 * C1116 +
             C32233 * C1136 - C1758 * C1121) *
                C114 +
            (C32266 * C280 - C1756 * C267 + C32255 * C1143 - C1757 * C1127 +
             C32233 * C1148 - C1758 * C1137) *
                C31941) *
               C815 +
           ((C32266 * C268 - C1756 * C251 + C32255 * C1128 - C1757 * C1117 +
             C32233 * C1140 - C1758 * C1123) *
                C114 +
            (C32266 * C281 - C1756 * C269 + C32255 * C1144 - C1757 * C1129 +
             C32233 * C1150 - C1758 * C1141) *
                C31941) *
               C32219) *
              C31918 * C242) *
         C31892) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C31958 * C122 - C113 * C115) * C5281 +
            (C31958 * C136 - C113 * C123) * C5275 + (C982 - C983) * C5282 +
            (C984 - C985) * C5276 + C1004 * C5283 + C1005 * C32230) *
               C32262 +
           ((C144 - C145) * C5281 + (C146 - C147) * C5275 + C1302 * C5282 +
            C1303 * C5276 + C990 * C5283 + C991 * C32230) *
               C32249 +
           C5295 * C32219) *
              C31918 * C31904 * C110 +
          (((C145 - C144) * C5281 + (C147 - C146) * C5275 + C1304 * C5282 +
            C1305 * C5276 + C1306 * C5283 + C1307 * C32230) *
               C32262 +
           ((C149 - C148) * C5281 + (C151 - C150) * C5275 + C1308 * C5282 +
            C1309 * C5276 + C1310 * C5283 + C1311 * C32230) *
               C32249 +
           ((C153 - C152) * C5281 + (C155 - C154) * C5275 + C3007 * C5282 +
            C3008 * C5276 + (C833 - C834) * C5283 + (C835 - C836) * C32230) *
               C32219) *
              C31918 * C31904 * C111 +
          (C5295 * C32262 +
           (C166 * C5281 + C167 * C5275 + C2671 * C5282 + C2672 * C5276 +
            (C834 - C833) * C5283 + (C836 - C835) * C32230) *
               C32249 +
           (C168 * C5281 + C169 * C5275 + (C493 - C492) * C5282 +
            (C495 - C494) * C5276 + (C31958 * C272 - C113 * C253) * C5283 +
            (C31958 * C283 - C113 * C273) * C32230) *
               C32219) *
              C31918 * C31904 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C31958 * C122 - C113 * C115) * C5281 +
            (C31958 * C136 - C113 * C123) * C5275 + (C982 - C983) * C5282 +
            (C984 - C985) * C5276 + C1004 * C5283 + C1005 * C32230) *
               C32262 +
           ((C144 - C145) * C5281 + (C146 - C147) * C5275 + C1302 * C5282 +
            C1303 * C5276 + C990 * C5283 + C991 * C32230) *
               C32249 +
           C5295 * C32219) *
              C31918 * C240 +
          (((C983 - C982) * C5281 + (C985 - C984) * C5275 +
            (C987 - C986) * C5282 + (C989 - C988) * C5276 +
            (C992 - C993) * C5283 + (C994 - C995) * C32230) *
               C32262 +
           (C1304 * C5281 + C1305 * C5275 + C1306 * C5282 + C1307 * C5276 +
            (C996 - C997) * C5283 + (C998 - C999) * C32230) *
               C32249 +
           (C1308 * C5281 + C1309 * C5275 + C1310 * C5282 + C1311 * C5276 +
            (C1000 - C1001) * C5283 + (C1002 - C1003) * C32230) *
               C32219) *
              C31918 * C241 +
          ((C1004 * C5281 + C1005 * C5275 + (C993 - C992) * C5282 +
            (C995 - C994) * C5276 + (C31958 * C969 - C113 * C960) * C5283 +
            (C31958 * C978 - C113 * C970) * C32230) *
               C32262 +
           (C990 * C5281 + C991 * C5275 + (C997 - C996) * C5282 +
            (C999 - C998) * C5276 + (C31958 * C971 - C113 * C961) * C5283 +
            (C31958 * C979 - C113 * C972) * C32230) *
               C32249 +
           (C840 * C5281 + C841 * C5275 + (C1001 - C1000) * C5282 +
            (C1003 - C1002) * C5276 + (C31958 * C973 - C113 * C962) * C5283 +
            (C31958 * C980 - C113 * C974) * C32230) *
               C32219) *
              C31918 * C242) *
         C31892) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C31958 * C122 - C113 * C115) * C6021 +
           (C31958 * C136 - C113 * C123) * C6015 + (C982 - C983) * C6022 +
           (C984 - C985) * C6016 + C1004 * C6023 + C1005 * C6017 +
           (C993 - C992) * C6024 + (C995 - C994) * C6018 +
           (C31958 * C969 - C113 * C960) * C6025 +
           (C31958 * C978 - C113 * C970) * C6019) *
              C31859 * C31918 * C31904 * C110 +
          ((C145 - C144) * C6021 + (C147 - C146) * C6015 + C1304 * C6022 +
           C1305 * C6016 + C1306 * C6023 + C1307 * C6017 +
           (C996 - C997) * C6024 + (C998 - C999) * C6018 +
           (C113 * C961 - C31958 * C971) * C6025 +
           (C113 * C972 - C31958 * C979) * C6019) *
              C31859 * C31918 * C31904 * C111 +
          (C164 * C6021 + C165 * C6015 + C827 * C6022 + C828 * C6016 +
           C840 * C6023 + C841 * C6017 + (C1001 - C1000) * C6024 +
           (C1003 - C1002) * C6018 + (C31958 * C973 - C113 * C962) * C6025 +
           (C31958 * C980 - C113 * C974) * C6019) *
              C31859 * C31918 * C31904 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C31958 * C122 - C113 * C115) * C6021 +
           (C31958 * C136 - C113 * C123) * C6015 + (C982 - C983) * C6022 +
           (C984 - C985) * C6016 + C1004 * C6023 + C1005 * C6017 +
           C6097 * C6024 + C6098 * C6018 + C6107 * C6025 + C6108 * C6019) *
              C31859 * C31918 * C240 +
          ((C983 - C982) * C6021 + (C985 - C984) * C6015 +
           (C987 - C986) * C6022 + (C989 - C988) * C6016 +
           (C992 - C993) * C6023 + (C994 - C995) * C6017 +
           (C6100 - C6099) * C6024 + (C6102 - C6101) * C6018 +
           (C6103 - C6104) * C6025 + (C6105 - C6106) * C6019) *
              C31859 * C31918 * C241 +
          (C1004 * C6021 + C1005 * C6015 + C6097 * C6022 + C6098 * C6016 +
           C6107 * C6023 + C6108 * C6017 + (C6104 - C6103) * C6024 +
           (C6106 - C6105) * C6018 + (C31958 * C6092 - C113 * C6089) * C6025 +
           (C31958 * C6095 - C113 * C6093) * C6019) *
              C31859 * C31918 * C242) *
         C31892) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C32266 * C122 - C1756 * C115 + C32255 * C359 - C1757 * C349 +
            C32233 * C369 - C1758 * C354) *
               C5281 +
           (C32266 * C136 - C1756 * C123 + C32255 * C379 - C1757 * C360 +
            C32233 * C384 - C1758 * C370) *
               C5275 +
           (C32266 * C254 - C1756 * C244 + C32255 * C686 - C1757 * C681 +
            C32233 * C1130 - C1758 * C1118) *
               C5282 +
           (C32266 * C274 - C1756 * C255 + C32255 * C696 - C1757 * C687 +
            C32233 * C1145 - C1758 * C1131) *
               C5276 +
           (C32266 * C264 - C1756 * C249 + C32255 * C1124 - C1757 * C1115 +
            C32233 * C1132 - C1758 * C1119) *
               C5283 +
           (C32266 * C279 - C1756 * C265 + C32255 * C1142 - C1757 * C1125 +
            C32233 * C1146 - C1758 * C1133) *
               C32230) *
              C31859 * C31918 * C31904 * C110 +
          ((C1761 - C1760 + C1763 - C1762 + C1765 - C1764) * C5281 +
           (C1767 - C1766 + C1769 - C1768 + C1771 - C1770) * C5275 +
           (C2203 - C2204 + C2205 - C2206 + C2207 - C2208) * C5282 +
           (C2209 - C2210 + C2211 - C2212 + C2213 - C2214) * C5276 +
           (C1756 * C250 - C32266 * C266 + C1757 * C1116 - C32255 * C1126 +
            C1758 * C1121 - C32233 * C1136) *
               C5283 +
           (C1756 * C267 - C32266 * C280 + C1757 * C1127 - C32255 * C1143 +
            C1758 * C1137 - C32233 * C1148) *
               C32230) *
              C31859 * C31918 * C31904 * C111 +
          (C1804 * C5281 + C1805 * C5275 +
           (C2216 - C2215 + C2218 - C2217 + C2220 - C2219) * C5282 +
           (C2222 - C2221 + C2224 - C2223 + C2226 - C2225) * C5276 +
           (C32266 * C268 - C1756 * C251 + C32255 * C1128 - C1757 * C1117 +
            C32233 * C1140 - C1758 * C1123) *
               C5283 +
           (C32266 * C281 - C1756 * C269 + C32255 * C1144 - C1757 * C1129 +
            C32233 * C1150 - C1758 * C1141) *
               C32230) *
              C31859 * C31918 * C31904 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C32266 * C122 - C1756 * C115 + C32255 * C359 - C1757 * C349 +
            C32233 * C369 - C1758 * C354) *
               C5281 +
           (C32266 * C136 - C1756 * C123 + C32255 * C379 - C1757 * C360 +
            C32233 * C384 - C1758 * C370) *
               C5275 +
           (C6673 - C6674 + C6675 - C6676 + C6677 - C6678) * C5282 +
           (C6679 - C6680 + C6681 - C6682 + C6683 - C6684) * C5276 +
           C6717 * C5283 + C6718 * C32230) *
              C31859 * C31918 * C240 +
          ((C6674 - C6673 + C6676 - C6675 + C6678 - C6677) * C5281 +
           (C6680 - C6679 + C6682 - C6681 + C6684 - C6683) * C5275 +
           (C6686 - C6685 + C6688 - C6687 + C6690 - C6689) * C5282 +
           (C6692 - C6691 + C6694 - C6693 + C6696 - C6695) * C5276 +
           (C6697 - C6698 + C6699 - C6700 + C6701 - C6702) * C5283 +
           (C6703 - C6704 + C6705 - C6706 + C6707 - C6708) * C32230) *
              C31859 * C31918 * C241 +
          (C6717 * C5281 + C6718 * C5275 +
           (C6698 - C6697 + C6700 - C6699 + C6702 - C6701) * C5282 +
           (C6704 - C6703 + C6706 - C6705 + C6708 - C6707) * C5276 +
           (C32266 * C969 - C1756 * C960 + C32255 * C6173 - C1757 * C6170 +
            C32233 * C6177 - C1758 * C6172) *
               C5283 +
           (C32266 * C978 - C1756 * C970 + C32255 * C6179 - C1757 * C6174 +
            C32233 * C6181 - C1758 * C6178) *
               C32230) *
              C31859 * C31918 * C242) *
         C31892) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C9914 * C122 - C9917 * C115 + C9915 * C359 - C9918 * C349 +
             C32233 * C369 - C9919 * C354) *
                C114 +
            (C9914 * C136 - C9917 * C123 + C9915 * C379 - C9918 * C360 +
             C32233 * C384 - C9919 * C370) *
                C31941) *
               C32262 +
           ((C9921 - C9922 + C9923 - C9924 + C9925 - C9926) * C114 +
            (C9927 - C9928 + C9929 - C9930 + C9931 - C9932) * C31941) *
               C32249 +
           C9969 * C32219) *
              C31918 * C31904 * C110 +
          (((C9922 - C9921 + C9924 - C9923 + C9926 - C9925) * C114 +
            (C9928 - C9927 + C9930 - C9929 + C9932 - C9931) * C31941) *
               C32262 +
           ((C9934 - C9933 + C9936 - C9935 + C9938 - C9937) * C114 +
            (C9940 - C9939 + C9942 - C9941 + C9944 - C9943) * C31941) *
               C32249 +
           ((C9945 - C9946 + C9947 - C9948 + C9949 - C9950) * C114 +
            (C9951 - C9952 + C9953 - C9954 + C9955 - C9956) * C31941) *
               C32219) *
              C31918 * C31904 * C111 +
          (C9969 * C32262 +
           ((C9946 - C9945 + C9948 - C9947 + C9950 - C9949) * C114 +
            (C9952 - C9951 + C9954 - C9953 + C9956 - C9955) * C31941) *
               C32249 +
           ((C9914 * C130 - C9917 * C119 + C9915 * C367 - C9918 * C353 +
             C32233 * C377 - C9919 * C358) *
                C114 +
            (C9914 * C140 - C9917 * C131 + C9915 * C383 - C9918 * C368 +
             C32233 * C388 - C9919 * C378) *
                C31941) *
               C32219) *
              C31918 * C31904 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C9914 * C122 - C9917 * C115 + C9915 * C359 - C9918 * C349 +
             C32233 * C369 - C9919 * C354) *
                C114 +
            (C9914 * C136 - C9917 * C123 + C9915 * C379 - C9918 * C360 +
             C32233 * C384 - C9919 * C370) *
                C31941) *
               C32262 +
           ((C9921 - C9922 + C9923 - C9924 + C9925 - C9926) * C114 +
            (C9927 - C9928 + C9929 - C9930 + C9931 - C9932) * C31941) *
               C32249 +
           C9969 * C32219) *
              C31918 * C240 +
          (((C9917 * C244 - C9914 * C254 + C9918 * C681 - C9915 * C686 +
             C9919 * C1118 - C32233 * C1130) *
                C114 +
            (C9917 * C255 - C9914 * C274 + C9918 * C687 - C9915 * C696 +
             C9919 * C1131 - C32233 * C1145) *
                C31941) *
               C32262 +
           ((C9917 * C245 - C9914 * C256 + C9918 * C682 - C9915 * C688 +
             C9919 * C1120 - C32233 * C1134) *
                C114 +
            (C9917 * C257 - C9914 * C275 + C9918 * C689 - C9915 * C697 +
             C9919 * C1135 - C32233 * C1147) *
                C31941) *
               C32249 +
           ((C9917 * C246 - C9914 * C258 + C9918 * C683 - C9915 * C690 +
             C9919 * C1122 - C32233 * C1138) *
                C114 +
            (C9917 * C259 - C9914 * C276 + C9918 * C691 - C9915 * C698 +
             C9919 * C1139 - C32233 * C1149) *
                C31941) *
               C32219) *
              C31918 * C241 +
          (((C9914 * C264 - C9917 * C249 + C9915 * C1124 - C9918 * C1115 +
             C32233 * C1132 - C9919 * C1119) *
                C114 +
            (C9914 * C279 - C9917 * C265 + C9915 * C1142 - C9918 * C1125 +
             C32233 * C1146 - C9919 * C1133) *
                C31941) *
               C32262 +
           ((C9914 * C266 - C9917 * C250 + C9915 * C1126 - C9918 * C1116 +
             C32233 * C1136 - C9919 * C1121) *
                C114 +
            (C9914 * C280 - C9917 * C267 + C9915 * C1143 - C9918 * C1127 +
             C32233 * C1148 - C9919 * C1137) *
                C31941) *
               C32249 +
           ((C9914 * C268 - C9917 * C251 + C9915 * C1128 - C9918 * C1117 +
             C32233 * C1140 - C9919 * C1123) *
                C114 +
            (C9914 * C281 - C9917 * C269 + C9915 * C1144 - C9918 * C1129 +
             C32233 * C1150 - C9919 * C1141) *
                C31941) *
               C32219) *
              C31918 * C242) *
         C31892) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C9914 * C122 - C9917 * C115 + C9915 * C359 - C9918 * C349 +
            C32233 * C369 - C9919 * C354) *
               C817 +
           (C9914 * C136 - C9917 * C123 + C9915 * C379 - C9918 * C360 +
            C32233 * C384 - C9919 * C370) *
               C32265 +
           (C9914 * C254 - C9917 * C244 + C9915 * C686 - C9918 * C681 +
            C32233 * C1130 - C9919 * C1118) *
               C818 +
           (C9914 * C274 - C9917 * C255 + C9915 * C696 - C9918 * C687 +
            C32233 * C1145 - C9919 * C1131) *
               C32253 +
           (C9914 * C264 - C9917 * C249 + C9915 * C1124 - C9918 * C1115 +
            C32233 * C1132 - C9919 * C1119) *
               C819 +
           (C9914 * C279 - C9917 * C265 + C9915 * C1142 - C9918 * C1125 +
            C32233 * C1146 - C9919 * C1133) *
               C32230) *
              C31859 * C31918 * C31904 * C110 +
          ((C9922 - C9921 + C9924 - C9923 + C9926 - C9925) * C817 +
           (C9928 - C9927 + C9930 - C9929 + C9932 - C9931) * C32265 +
           (C10336 - C10337 + C10338 - C10339 + C10340 - C10341) * C818 +
           (C10342 - C10343 + C10344 - C10345 + C10346 - C10347) * C32253 +
           (C9917 * C250 - C9914 * C266 + C9918 * C1116 - C9915 * C1126 +
            C9919 * C1121 - C32233 * C1136) *
               C819 +
           (C9917 * C267 - C9914 * C280 + C9918 * C1127 - C9915 * C1143 +
            C9919 * C1137 - C32233 * C1148) *
               C32230) *
              C31859 * C31918 * C31904 * C111 +
          (C9965 * C817 + C9966 * C32265 +
           (C10349 - C10348 + C10351 - C10350 + C10353 - C10352) * C818 +
           (C10355 - C10354 + C10357 - C10356 + C10359 - C10358) * C32253 +
           (C9914 * C268 - C9917 * C251 + C9915 * C1128 - C9918 * C1117 +
            C32233 * C1140 - C9919 * C1123) *
               C819 +
           (C9914 * C281 - C9917 * C269 + C9915 * C1144 - C9918 * C1129 +
            C32233 * C1150 - C9919 * C1141) *
               C32230) *
              C31859 * C31918 * C31904 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C9914 * C122 - C9917 * C115 + C9915 * C359 - C9918 * C349 +
            C32233 * C369 - C9919 * C354) *
               C817 +
           (C9914 * C136 - C9917 * C123 + C9915 * C379 - C9918 * C360 +
            C32233 * C384 - C9919 * C370) *
               C32265 +
           (C10896 - C10897 + C10898 - C10899 + C10900 - C10901) * C818 +
           (C10902 - C10903 + C10904 - C10905 + C10906 - C10907) * C32253 +
           C10940 * C819 + C10941 * C32230) *
              C31859 * C31918 * C240 +
          ((C10897 - C10896 + C10899 - C10898 + C10901 - C10900) * C817 +
           (C10903 - C10902 + C10905 - C10904 + C10907 - C10906) * C32265 +
           (C10909 - C10908 + C10911 - C10910 + C10913 - C10912) * C818 +
           (C10915 - C10914 + C10917 - C10916 + C10919 - C10918) * C32253 +
           (C10920 - C10921 + C10922 - C10923 + C10924 - C10925) * C819 +
           (C10926 - C10927 + C10928 - C10929 + C10930 - C10931) * C32230) *
              C31859 * C31918 * C241 +
          (C10940 * C817 + C10941 * C32265 +
           (C10921 - C10920 + C10923 - C10922 + C10925 - C10924) * C818 +
           (C10927 - C10926 + C10929 - C10928 + C10931 - C10930) * C32253 +
           (C9914 * C969 - C9917 * C960 + C9915 * C6173 - C9918 * C6170 +
            C32233 * C6177 - C9919 * C6172) *
               C819 +
           (C9914 * C978 - C9917 * C970 + C9915 * C6179 - C9918 * C6174 +
            C32233 * C6181 - C9919 * C6178) *
               C32230) *
              C31859 * C31918 * C242) *
         C31892) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C11587 * C122 - C11592 * C115 + C11588 * C359 - C11593 * C349 +
            C11589 * C369 - C11594 * C354 + C11590 * C2034 - C11595 * C2028 +
            C11591 * C2040 - C11596 * C2031) *
               C114 +
           (C11587 * C136 - C11592 * C123 + C11588 * C379 - C11593 * C360 +
            C11589 * C384 - C11594 * C370 + C11590 * C2046 - C11595 * C2035 +
            C11591 * C2049 - C11596 * C2041) *
               C31941) *
              C31859 * C31918 * C31904 * C110 +
          ((C11592 * C116 - C11587 * C124 + C11593 * C350 - C11588 * C361 +
            C11594 * C355 - C11589 * C371 + C11595 * C2029 - C11590 * C2036 +
            C11596 * C2032 - C11591 * C2042) *
               C114 +
           (C11592 * C125 - C11587 * C137 + C11593 * C362 - C11588 * C380 +
            C11594 * C372 - C11589 * C385 + C11595 * C2037 - C11590 * C2047 +
            C11596 * C2043 - C11591 * C2050) *
               C31941) *
              C31859 * C31918 * C31904 * C111 +
          ((C11587 * C126 - C11592 * C117 + C11588 * C363 - C11593 * C351 +
            C11589 * C373 - C11594 * C356 + C11590 * C2038 - C11595 * C2030 +
            C11591 * C2044 - C11596 * C2033) *
               C114 +
           (C11587 * C138 - C11592 * C127 + C11588 * C381 - C11593 * C364 +
            C11589 * C386 - C11594 * C374 + C11590 * C2048 - C11595 * C2039 +
            C11591 * C2051 - C11596 * C2045) *
               C31941) *
              C31859 * C31918 * C31904 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C11587 * C122 - C11592 * C115 + C11588 * C359 - C11593 * C349 +
            C11589 * C369 - C11594 * C354 + C11590 * C2034 - C11595 * C2028 +
            C11591 * C2040 - C11596 * C2031) *
               C114 +
           (C11587 * C136 - C11592 * C123 + C11588 * C379 - C11593 * C360 +
            C11589 * C384 - C11594 * C370 + C11590 * C2046 - C11595 * C2035 +
            C11591 * C2049 - C11596 * C2041) *
               C31941) *
              C31859 * C31918 * C240 +
          ((C11592 * C244 - C11587 * C254 + C11593 * C681 - C11588 * C686 +
            C11594 * C1118 - C11589 * C1130 + C11595 * C2546 - C11590 * C2549 +
            C11596 * C6829 - C11591 * C6833) *
               C114 +
           (C11592 * C255 - C11587 * C274 + C11593 * C687 - C11588 * C696 +
            C11594 * C1131 - C11589 * C1145 + C11595 * C2550 - C11590 * C2555 +
            C11596 * C6834 - C11591 * C6838) *
               C31941) *
              C31859 * C31918 * C241 +
          ((C11587 * C264 - C11592 * C249 + C11588 * C1124 - C11593 * C1115 +
            C11589 * C1132 - C11594 * C1119 + C11590 * C6831 - C11595 * C6828 +
            C11591 * C6835 - C11596 * C6830) *
               C114 +
           (C11587 * C279 - C11592 * C265 + C11588 * C1142 - C11593 * C1125 +
            C11589 * C1146 - C11594 * C1133 + C11590 * C6837 - C11595 * C6832 +
            C11591 * C6839 - C11596 * C6836) *
               C31941) *
              C31859 * C31918 * C242) *
         C31892) /
            (p * q * std::sqrt(p + q));
    d2ee[65] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C32200 * C122 - C3372 * C115 + C32045 * C359 - C3373 * C349) *
                 C5281 +
             (C32200 * C136 - C3372 * C123 + C32045 * C379 - C3373 * C360) *
                 C5275 +
             (C4364 - C4365 + C4366 - C4367) * C5282 +
             (C4368 - C4369 + C4370 - C4371) * C5276 + C8345 * C5283 +
             C8346 * C32230) *
                C32180 +
            ((C3375 - C3376 + C3377 - C3378) * C5281 +
             (C3379 - C3380 + C3381 - C3382) * C5275 + C4748 * C5282 +
             C4749 * C5276 + C8347 * C5283 + C8348 * C32230) *
                C31869) *
               C31918 * C471 +
           (((C4365 - C4364 + C4367 - C4366) * C5281 +
             (C4369 - C4368 + C4371 - C4370) * C5275 +
             (C4372 - C4373 + C4374 - C4375) * C5282 +
             (C4376 - C4377 + C4378 - C4379) * C5276 +
             (C8329 - C8330 + C8331 - C8332) * C5283 +
             (C8333 - C8334 + C8335 - C8336) * C32230) *
                C32180 +
            (C4750 * C5281 + C4751 * C5275 + C8693 * C5282 + C8694 * C5276 +
             (C8337 - C8338 + C8339 - C8340) * C5283 +
             (C8341 - C8342 + C8343 - C8344) * C32230) *
                C31869) *
               C31918 * C472) *
              C473 +
          ((((C3376 - C3375 + C3378 - C3377) * C5281 +
             (C3380 - C3379 + C3382 - C3381) * C5275 + C4750 * C5282 +
             C4751 * C5276 + C8693 * C5283 + C8694 * C32230) *
                C32180 +
            ((C3384 - C3383 + C3386 - C3385) * C5281 +
             (C3388 - C3387 + C3390 - C3389) * C5275 + C4752 * C5282 +
             C4753 * C5276 + (C4388 - C4389 + C4390 - C4391) * C5283 +
             (C4392 - C4393 + C4394 - C4395) * C32230) *
                C31869) *
               C31918 * C471 +
           ((C4748 * C5281 + C4749 * C5275 + C8347 * C5282 + C8348 * C5276 +
             (C8338 - C8337 + C8340 - C8339) * C5283 +
             (C8342 - C8341 + C8344 - C8343) * C32230) *
                C32180 +
            (C4212 * C5281 + C4213 * C5275 +
             (C4389 - C4388 + C4391 - C4390) * C5282 +
             (C4393 - C4392 + C4395 - C4394) * C5276 +
             (C32200 * C967 - C3372 * C959 + C32045 * C1630 - C3373 * C1625) *
                 C5283 +
             (C32200 * C977 - C3372 * C968 + C32045 * C1634 - C3373 * C1631) *
                 C32230) *
                C31869) *
               C31918 * C472) *
              C474)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C32200 * C122 - C3372 * C115 + C32045 * C359 - C3373 * C349) *
                 C114 +
             (C32200 * C136 - C3372 * C123 + C32045 * C379 - C3373 * C360) *
                 C31941) *
                C2658 +
            ((C3375 - C3376 + C3377 - C3378) * C114 +
             (C3379 - C3380 + C3381 - C3382) * C31941) *
                C2659 +
            C3423 * C2660 + C3424 * C32234) *
               C31918 * C471 +
           (((C3372 * C244 - C32200 * C254 + C3373 * C681 - C32045 * C686) *
                 C114 +
             (C3372 * C255 - C32200 * C274 + C3373 * C687 - C32045 * C696) *
                 C31941) *
                C2658 +
            ((C3751 - C3752 + C3753 - C3754) * C114 +
             (C3755 - C3756 + C3757 - C3758) * C31941) *
                C2659 +
            ((C3759 - C3760 + C3761 - C3762) * C114 +
             (C3763 - C3764 + C3765 - C3766) * C31941) *
                C2660 +
            ((C3767 - C3768 + C3769 - C3770) * C114 +
             (C3771 - C3772 + C3773 - C3774) * C31941) *
                C32234) *
               C31918 * C472) *
              C473 +
          ((((C3376 - C3375 + C3378 - C3377) * C114 +
             (C3380 - C3379 + C3382 - C3381) * C31941) *
                C2658 +
            ((C3384 - C3383 + C3386 - C3385) * C114 +
             (C3388 - C3387 + C3390 - C3389) * C31941) *
                C2659 +
            ((C3392 - C3391 + C3394 - C3393) * C114 +
             (C3396 - C3395 + C3398 - C3397) * C31941) *
                C2660 +
            ((C3399 - C3400 + C3401 - C3402) * C114 +
             (C3403 - C3404 + C3405 - C3406) * C31941) *
                C32234) *
               C31918 * C471 +
           (((C3752 - C3751 + C3754 - C3753) * C114 +
             (C3756 - C3755 + C3758 - C3757) * C31941) *
                C2658 +
            ((C3760 - C3759 + C3762 - C3761) * C114 +
             (C3764 - C3763 + C3766 - C3765) * C31941) *
                C2659 +
            ((C3768 - C3767 + C3770 - C3769) * C114 +
             (C3772 - C3771 + C3774 - C3773) * C31941) *
                C2660 +
            ((C32200 * C262 - C3372 * C248 + C32045 * C694 - C3373 * C685) *
                 C114 +
             (C32200 * C278 - C3372 * C263 + C32045 * C700 - C3373 * C695) *
                 C31941) *
                C32234) *
               C31918 * C472) *
              C474)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C13137 * C122 - C13141 * C115 + C13138 * C359 - C13142 * C349 +
              C13139 * C369 - C13143 * C354 + C32246 * C2034 - C13144 * C2028) *
                 C114 +
             (C13137 * C136 - C13141 * C123 + C13138 * C379 - C13142 * C360 +
              C13139 * C384 - C13143 * C370 + C32246 * C2046 - C13144 * C2035) *
                 C31941) *
                C32180 +
            ((C13146 - C13147 + C13148 - C13149 + C13150 - C13151 + C13152 -
              C13153) *
                 C114 +
             (C13154 - C13155 + C13156 - C13157 + C13158 - C13159 + C13160 -
              C13161) *
                 C31941) *
                C31869) *
               C31918 * C471 +
           (((C13141 * C244 - C13137 * C254 + C13142 * C681 - C13138 * C686 +
              C13143 * C1118 - C13139 * C1130 + C13144 * C2546 -
              C32246 * C2549) *
                 C114 +
             (C13141 * C255 - C13137 * C274 + C13142 * C687 - C13138 * C696 +
              C13143 * C1131 - C13139 * C1145 + C13144 * C2550 -
              C32246 * C2555) *
                 C31941) *
                C32180 +
            ((C13504 - C13505 + C13506 - C13507 + C13508 - C13509 + C13510 -
              C13511) *
                 C114 +
             (C13512 - C13513 + C13514 - C13515 + C13516 - C13517 + C13518 -
              C13519) *
                 C31941) *
                C31869) *
               C31918 * C472) *
              C473 +
          ((((C13147 - C13146 + C13149 - C13148 + C13151 - C13150 + C13153 -
              C13152) *
                 C114 +
             (C13155 - C13154 + C13157 - C13156 + C13159 - C13158 + C13161 -
              C13160) *
                 C31941) *
                C32180 +
            ((C13162 - C13163 + C13164 - C13165 + C13166 - C13167 + C13168 -
              C13169) *
                 C114 +
             (C13170 - C13171 + C13172 - C13173 + C13174 - C13175 + C13176 -
              C13177) *
                 C31941) *
                C31869) *
               C31918 * C471 +
           (((C13505 - C13504 + C13507 - C13506 + C13509 - C13508 + C13511 -
              C13510) *
                 C114 +
             (C13513 - C13512 + C13515 - C13514 + C13517 - C13516 + C13519 -
              C13518) *
                 C31941) *
                C32180 +
            ((C13137 * C258 - C13141 * C246 + C13138 * C690 - C13142 * C683 +
              C13139 * C1138 - C13143 * C1122 + C32246 * C2553 -
              C13144 * C2548) *
                 C114 +
             (C13137 * C276 - C13141 * C259 + C13138 * C698 - C13142 * C691 +
              C13139 * C1149 - C13143 * C1139 + C32246 * C2557 -
              C13144 * C2554) *
                 C31941) *
                C31869) *
               C31918 * C472) *
              C474)) /
            (p * q * std::sqrt(p + q));
    d2ee[66] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C32200 * C122 - C3372 * C115 + C32045 * C359 - C3373 * C349) *
                 C5281 +
             (C32200 * C136 - C3372 * C123 + C32045 * C379 - C3373 * C360) *
                 C5275 +
             (C4364 - C4365 + C4366 - C4367) * C5282 +
             (C4368 - C4369 + C4370 - C4371) * C5276 + C8345 * C5283 +
             C8346 * C32230) *
                C32180 +
            ((C3375 - C3376 + C3377 - C3378) * C5281 +
             (C3379 - C3380 + C3381 - C3382) * C5275 + C4748 * C5282 +
             C4749 * C5276 + C8347 * C5283 + C8348 * C32230) *
                C31869) *
               C577 +
           (((C3372 * C349 - C32200 * C359 + C3373 * C354 - C32045 * C369) *
                 C5281 +
             (C3372 * C360 - C32200 * C379 + C3373 * C370 - C32045 * C384) *
                 C5275 +
             (C5158 - C5159 + C5160 - C5161) * C5282 +
             (C5162 - C5163 + C5164 - C5165) * C5276 +
             (C9091 - C9092 + C9093 - C9094) * C5283 +
             (C9095 - C9096 + C9097 - C9098) * C32230) *
                C32180 +
            ((C3905 - C3906 + C3907 - C3908) * C5281 +
             (C3909 - C3910 + C3911 - C3912) * C5275 +
             (C4948 - C4949 + C4950 - C4951) * C5282 +
             (C4952 - C4953 + C4954 - C4955) * C5276 +
             (C8889 - C8890 + C8891 - C8892) * C5283 +
             (C8893 - C8894 + C8895 - C8896) * C32230) *
                C31869) *
               C578) *
              C471 +
          ((((C4365 - C4364 + C4367 - C4366) * C5281 +
             (C4369 - C4368 + C4371 - C4370) * C5275 +
             (C4372 - C4373 + C4374 - C4375) * C5282 +
             (C4376 - C4377 + C4378 - C4379) * C5276 +
             (C8329 - C8330 + C8331 - C8332) * C5283 +
             (C8333 - C8334 + C8335 - C8336) * C32230) *
                C32180 +
            (C4750 * C5281 + C4751 * C5275 + C8693 * C5282 + C8694 * C5276 +
             (C8337 - C8338 + C8339 - C8340) * C5283 +
             (C8341 - C8342 + C8343 - C8344) * C32230) *
                C31869) *
               C577 +
           (((C5159 - C5158 + C5161 - C5160) * C5281 +
             (C5163 - C5162 + C5165 - C5164) * C5275 +
             (C9092 - C9091 + C9094 - C9093) * C5282 +
             (C9096 - C9095 + C9098 - C9097) * C5276 +
             (C32200 * C1626 - C3372 * C1623 + C32045 * C6175 - C3373 * C6171) *
                 C5283 +
             (C32200 * C1632 - C3372 * C1627 + C32045 * C6180 - C3373 * C6176) *
                 C32230) *
                C32180 +
            ((C4949 - C4948 + C4951 - C4950) * C5281 +
             (C4953 - C4952 + C4955 - C4954) * C5275 +
             (C8890 - C8889 + C8892 - C8891) * C5282 +
             (C8894 - C8893 + C8896 - C8895) * C5276 +
             (C32200 * C1628 - C3372 * C1624 + C32045 * C6987 - C3373 * C6986) *
                 C5283 +
             (C32200 * C1633 - C3372 * C1629 + C32045 * C6989 - C3373 * C6988) *
                 C32230) *
                C31869) *
               C578) *
              C472) *
         C31892) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C32200 * C122 - C3372 * C115 + C32045 * C359 - C3373 * C349) *
                 C114 +
             (C32200 * C136 - C3372 * C123 + C32045 * C379 - C3373 * C360) *
                 C31941) *
                C2658 +
            ((C3375 - C3376 + C3377 - C3378) * C114 +
             (C3379 - C3380 + C3381 - C3382) * C31941) *
                C2659 +
            C3423 * C2660 + C3424 * C32234) *
               C577 +
           (((C3372 * C349 - C32200 * C359 + C3373 * C354 - C32045 * C369) *
                 C114 +
             (C3372 * C360 - C32200 * C379 + C3373 * C370 - C32045 * C384) *
                 C31941) *
                C2658 +
            ((C3905 - C3906 + C3907 - C3908) * C114 +
             (C3909 - C3910 + C3911 - C3912) * C31941) *
                C2659 +
            ((C3913 - C3914 + C3915 - C3916) * C114 +
             (C3917 - C3918 + C3919 - C3920) * C31941) *
                C2660 +
            ((C3921 - C3922 + C3923 - C3924) * C114 +
             (C3925 - C3926 + C3927 - C3928) * C31941) *
                C32234) *
               C578) *
              C471 +
          ((((C3372 * C244 - C32200 * C254 + C3373 * C681 - C32045 * C686) *
                 C114 +
             (C3372 * C255 - C32200 * C274 + C3373 * C687 - C32045 * C696) *
                 C31941) *
                C2658 +
            ((C3751 - C3752 + C3753 - C3754) * C114 +
             (C3755 - C3756 + C3757 - C3758) * C31941) *
                C2659 +
            ((C3759 - C3760 + C3761 - C3762) * C114 +
             (C3763 - C3764 + C3765 - C3766) * C31941) *
                C2660 +
            ((C3767 - C3768 + C3769 - C3770) * C114 +
             (C3771 - C3772 + C3773 - C3774) * C31941) *
                C32234) *
               C577 +
           (((C32200 * C686 - C3372 * C681 + C32045 * C1130 - C3373 * C1118) *
                 C114 +
             (C32200 * C696 - C3372 * C687 + C32045 * C1145 - C3373 * C1131) *
                 C31941) *
                C2658 +
            ((C32200 * C688 - C3372 * C682 + C32045 * C1134 - C3373 * C1120) *
                 C114 +
             (C32200 * C697 - C3372 * C689 + C32045 * C1147 - C3373 * C1135) *
                 C31941) *
                C2659 +
            ((C32200 * C690 - C3372 * C683 + C32045 * C1138 - C3373 * C1122) *
                 C114 +
             (C32200 * C698 - C3372 * C691 + C32045 * C1149 - C3373 * C1139) *
                 C31941) *
                C2660 +
            ((C32200 * C692 - C3372 * C684 + C32045 * C2199 - C3373 * C2198) *
                 C114 +
             (C32200 * C699 - C3372 * C693 + C32045 * C2201 - C3373 * C2200) *
                 C31941) *
                C32234) *
               C578) *
              C472) *
         C31892) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C13137 * C122 - C13141 * C115 + C13138 * C359 - C13142 * C349 +
              C13139 * C369 - C13143 * C354 + C32246 * C2034 - C13144 * C2028) *
                 C114 +
             (C13137 * C136 - C13141 * C123 + C13138 * C379 - C13142 * C360 +
              C13139 * C384 - C13143 * C370 + C32246 * C2046 - C13144 * C2035) *
                 C31941) *
                C32180 +
            ((C13146 - C13147 + C13148 - C13149 + C13150 - C13151 + C13152 -
              C13153) *
                 C114 +
             (C13154 - C13155 + C13156 - C13157 + C13158 - C13159 + C13160 -
              C13161) *
                 C31941) *
                C31869) *
               C577 +
           (((C13141 * C349 - C13137 * C359 + C13142 * C354 - C13138 * C369 +
              C13143 * C2028 - C13139 * C2034 + C13144 * C2031 -
              C32246 * C2040) *
                 C114 +
             (C13141 * C360 - C13137 * C379 + C13142 * C370 - C13138 * C384 +
              C13143 * C2035 - C13139 * C2046 + C13144 * C2041 -
              C32246 * C2049) *
                 C31941) *
                C32180 +
            ((C13650 - C13651 + C13652 - C13653 + C13654 - C13655 + C13656 -
              C13657) *
                 C114 +
             (C13658 - C13659 + C13660 - C13661 + C13662 - C13663 + C13664 -
              C13665) *
                 C31941) *
                C31869) *
               C578) *
              C471 +
          ((((C13141 * C244 - C13137 * C254 + C13142 * C681 - C13138 * C686 +
              C13143 * C1118 - C13139 * C1130 + C13144 * C2546 -
              C32246 * C2549) *
                 C114 +
             (C13141 * C255 - C13137 * C274 + C13142 * C687 - C13138 * C696 +
              C13143 * C1131 - C13139 * C1145 + C13144 * C2550 -
              C32246 * C2555) *
                 C31941) *
                C32180 +
            ((C13504 - C13505 + C13506 - C13507 + C13508 - C13509 + C13510 -
              C13511) *
                 C114 +
             (C13512 - C13513 + C13514 - C13515 + C13516 - C13517 + C13518 -
              C13519) *
                 C31941) *
                C31869) *
               C577 +
           (((C13137 * C686 - C13141 * C681 + C13138 * C1130 - C13142 * C1118 +
              C13139 * C2549 - C13143 * C2546 + C32246 * C6833 -
              C13144 * C6829) *
                 C114 +
             (C13137 * C696 - C13141 * C687 + C13138 * C1145 - C13142 * C1131 +
              C13139 * C2555 - C13143 * C2550 + C32246 * C6838 -
              C13144 * C6834) *
                 C31941) *
                C32180 +
            ((C13137 * C688 - C13141 * C682 + C13138 * C1134 - C13142 * C1120 +
              C13139 * C2551 - C13143 * C2547 + C32246 * C11812 -
              C13144 * C11811) *
                 C114 +
             (C13137 * C697 - C13141 * C689 + C13138 * C1147 - C13142 * C1135 +
              C13139 * C2556 - C13143 * C2552 + C32246 * C11814 -
              C13144 * C11813) *
                 C31941) *
                C31869) *
               C578) *
              C472) *
         C31892) /
            (p * q * std::sqrt(p + q));
    d2ee[67] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C32200 * C122 - C3372 * C115 + C32045 * C359 - C3373 * C349) *
                    C114 +
                (C32200 * C136 - C3372 * C123 + C32045 * C379 - C3373 * C360) *
                    C31941) *
                   C2658 +
               ((C3375 - C3376 + C3377 - C3378) * C114 +
                (C3379 - C3380 + C3381 - C3382) * C31941) *
                   C2659 +
               C3423 * C2660 + C3424 * C32234) *
                  C31918 * C31904 * C110 +
              (((C3376 - C3375 + C3378 - C3377) * C114 +
                (C3380 - C3379 + C3382 - C3381) * C31941) *
                   C2658 +
               ((C3384 - C3383 + C3386 - C3385) * C114 +
                (C3388 - C3387 + C3390 - C3389) * C31941) *
                   C2659 +
               ((C3392 - C3391 + C3394 - C3393) * C114 +
                (C3396 - C3395 + C3398 - C3397) * C31941) *
                   C2660 +
               ((C3399 - C3400 + C3401 - C3402) * C114 +
                (C3403 - C3404 + C3405 - C3406) * C31941) *
                   C32234) *
                  C31918 * C31904 * C111 +
              (C3423 * C2658 + C3424 * C2659 +
               ((C3400 - C3399 + C3402 - C3401) * C114 +
                (C3404 - C3403 + C3406 - C3405) * C31941) *
                   C2660 +
               ((C32200 * C132 - C3372 * C120 + C32045 * C580 - C3373 * C579) *
                    C114 +
                (C32200 * C141 - C3372 * C133 + C32045 * C582 - C3373 * C581) *
                    C31941) *
                   C32234) *
                  C31918 * C31904 * C112) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C32200 * C122 - C3372 * C115 + C32045 * C359 - C3373 * C349) *
                    C114 +
                (C32200 * C136 - C3372 * C123 + C32045 * C379 - C3373 * C360) *
                    C31941) *
                   C2658 +
               ((C3375 - C3376 + C3377 - C3378) * C114 +
                (C3379 - C3380 + C3381 - C3382) * C31941) *
                   C2659 +
               C3423 * C2660 + C3424 * C32234) *
                  C31918 * C240 +
              (((C3372 * C244 - C32200 * C254 + C3373 * C681 - C32045 * C686) *
                    C114 +
                (C3372 * C255 - C32200 * C274 + C3373 * C687 - C32045 * C696) *
                    C31941) *
                   C2658 +
               ((C3372 * C245 - C32200 * C256 + C3373 * C682 - C32045 * C688) *
                    C114 +
                (C3372 * C257 - C32200 * C275 + C3373 * C689 - C32045 * C697) *
                    C31941) *
                   C2659 +
               ((C3372 * C246 - C32200 * C258 + C3373 * C683 - C32045 * C690) *
                    C114 +
                (C3372 * C259 - C32200 * C276 + C3373 * C691 - C32045 * C698) *
                    C31941) *
                   C2660 +
               ((C3372 * C247 - C32200 * C260 + C3373 * C684 - C32045 * C692) *
                    C114 +
                (C3372 * C261 - C32200 * C277 + C3373 * C693 - C32045 * C699) *
                    C31941) *
                   C32234) *
                  C31918 * C241 +
              (((C32200 * C264 - C3372 * C249 + C32045 * C1124 -
                 C3373 * C1115) *
                    C114 +
                (C32200 * C279 - C3372 * C265 + C32045 * C1142 -
                 C3373 * C1125) *
                    C31941) *
                   C2658 +
               ((C32200 * C266 - C3372 * C250 + C32045 * C1126 -
                 C3373 * C1116) *
                    C114 +
                (C32200 * C280 - C3372 * C267 + C32045 * C1143 -
                 C3373 * C1127) *
                    C31941) *
                   C2659 +
               ((C32200 * C268 - C3372 * C251 + C32045 * C1128 -
                 C3373 * C1117) *
                    C114 +
                (C32200 * C281 - C3372 * C269 + C32045 * C1144 -
                 C3373 * C1129) *
                    C31941) *
                   C2660 +
               ((C32200 * C270 - C3372 * C252 + C32045 * C1458 -
                 C3373 * C1457) *
                    C114 +
                (C32200 * C282 - C3372 * C271 + C32045 * C1460 -
                 C3373 * C1459) *
                    C31941) *
                   C32234) *
                  C31918 * C242) *
             C31892) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C32200 * C122 - C3372 * C115 + C32045 * C359 - C3373 * C349) *
                C114 +
            (C32200 * C136 - C3372 * C123 + C32045 * C379 - C3373 * C360) *
                C31941) *
               C2658 +
           ((C3375 - C3376 + C3377 - C3378) * C114 +
            (C3379 - C3380 + C3381 - C3382) * C31941) *
               C2659 +
           C3423 * C2660 + C3424 * C32234) *
              C346 +
          (((C3372 * C349 - C32200 * C359 + C3373 * C354 - C32045 * C369) *
                C114 +
            (C3372 * C360 - C32200 * C379 + C3373 * C370 - C32045 * C384) *
                C31941) *
               C2658 +
           ((C3372 * C350 - C32200 * C361 + C3373 * C355 - C32045 * C371) *
                C114 +
            (C3372 * C362 - C32200 * C380 + C3373 * C372 - C32045 * C385) *
                C31941) *
               C2659 +
           ((C3372 * C351 - C32200 * C363 + C3373 * C356 - C32045 * C373) *
                C114 +
            (C3372 * C364 - C32200 * C381 + C3373 * C374 - C32045 * C386) *
                C31941) *
               C2660 +
           ((C3372 * C352 - C32200 * C365 + C3373 * C357 - C32045 * C375) *
                C114 +
            (C3372 * C366 - C32200 * C382 + C3373 * C376 - C32045 * C387) *
                C31941) *
               C32234) *
              C347 +
          (((C32200 * C369 - C3372 * C354 + C32045 * C2034 - C3373 * C2028) *
                C114 +
            (C32200 * C384 - C3372 * C370 + C32045 * C2046 - C3373 * C2035) *
                C31941) *
               C2658 +
           ((C32200 * C371 - C3372 * C355 + C32045 * C2036 - C3373 * C2029) *
                C114 +
            (C32200 * C385 - C3372 * C372 + C32045 * C2047 - C3373 * C2037) *
                C31941) *
               C2659 +
           ((C32200 * C373 - C3372 * C356 + C32045 * C2038 - C3373 * C2030) *
                C114 +
            (C32200 * C386 - C3372 * C374 + C32045 * C2048 - C3373 * C2039) *
                C31941) *
               C2660 +
           ((C32200 * C375 - C3372 * C357 + C32045 * C2373 - C3373 * C2372) *
                C114 +
            (C32200 * C387 - C3372 * C376 + C32045 * C2375 - C3373 * C2374) *
                C31941) *
               C32234) *
              C348) *
         C31904 * C31892) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C32200 * C122 - C3372 * C115 + C32045 * C359 - C3373 * C349) *
                C5281 +
            (C32200 * C136 - C3372 * C123 + C32045 * C379 - C3373 * C360) *
                C5275 +
            (C4364 - C4365 + C4366 - C4367) * C5282 +
            (C4368 - C4369 + C4370 - C4371) * C5276 +
            (C4373 - C4372 + C4375 - C4374) * C5283 +
            (C4377 - C4376 + C4379 - C4378) * C32230) *
               C32180 +
           ((C3375 - C3376 + C3377 - C3378) * C5281 +
            (C3379 - C3380 + C3381 - C3382) * C5275 + C4748 * C5282 +
            C4749 * C5276 + (C4381 - C4380 + C4383 - C4382) * C5283 +
            (C4385 - C4384 + C4387 - C4386) * C32230) *
               C31869) *
              C31918 * C31904 * C110 +
          (((C3376 - C3375 + C3378 - C3377) * C5281 +
            (C3380 - C3379 + C3382 - C3381) * C5275 + C4750 * C5282 +
            C4751 * C5276 + (C4380 - C4381 + C4382 - C4383) * C5283 +
            (C4384 - C4385 + C4386 - C4387) * C32230) *
               C32180 +
           ((C3384 - C3383 + C3386 - C3385) * C5281 +
            (C3388 - C3387 + C3390 - C3389) * C5275 + C4752 * C5282 +
            C4753 * C5276 + (C4388 - C4389 + C4390 - C4391) * C5283 +
            (C4392 - C4393 + C4394 - C4395) * C32230) *
               C31869) *
              C31918 * C31904 * C111 +
          ((C3415 * C5281 + C3416 * C5275 + C4212 * C5282 + C4213 * C5276 +
            (C4389 - C4388 + C4391 - C4390) * C5283 +
            (C4393 - C4392 + C4395 - C4394) * C32230) *
               C32180 +
           (C3417 * C5281 + C3418 * C5275 +
            (C3768 - C3767 + C3770 - C3769) * C5282 +
            (C3772 - C3771 + C3774 - C3773) * C5276 +
            (C32200 * C270 - C3372 * C252 + C32045 * C1458 - C3373 * C1457) *
                C5283 +
            (C32200 * C282 - C3372 * C271 + C32045 * C1460 - C3373 * C1459) *
                C32230) *
               C31869) *
              C31918 * C31904 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C32200 * C122 - C3372 * C115 + C32045 * C359 - C3373 * C349) *
                C5281 +
            (C32200 * C136 - C3372 * C123 + C32045 * C379 - C3373 * C360) *
                C5275 +
            (C4364 - C4365 + C4366 - C4367) * C5282 +
            (C4368 - C4369 + C4370 - C4371) * C5276 + C8345 * C5283 +
            C8346 * C32230) *
               C32180 +
           ((C3375 - C3376 + C3377 - C3378) * C5281 +
            (C3379 - C3380 + C3381 - C3382) * C5275 + C4748 * C5282 +
            C4749 * C5276 + C8347 * C5283 + C8348 * C32230) *
               C31869) *
              C31918 * C240 +
          (((C4365 - C4364 + C4367 - C4366) * C5281 +
            (C4369 - C4368 + C4371 - C4370) * C5275 +
            (C4372 - C4373 + C4374 - C4375) * C5282 +
            (C4376 - C4377 + C4378 - C4379) * C5276 +
            (C8329 - C8330 + C8331 - C8332) * C5283 +
            (C8333 - C8334 + C8335 - C8336) * C32230) *
               C32180 +
           (C4750 * C5281 + C4751 * C5275 +
            (C4380 - C4381 + C4382 - C4383) * C5282 +
            (C4384 - C4385 + C4386 - C4387) * C5276 +
            (C8337 - C8338 + C8339 - C8340) * C5283 +
            (C8341 - C8342 + C8343 - C8344) * C32230) *
               C31869) *
              C31918 * C241 +
          ((C8345 * C5281 + C8346 * C5275 +
            (C8330 - C8329 + C8332 - C8331) * C5282 +
            (C8334 - C8333 + C8336 - C8335) * C5276 +
            (C32200 * C969 - C3372 * C960 + C32045 * C6173 - C3373 * C6170) *
                C5283 +
            (C32200 * C978 - C3372 * C970 + C32045 * C6179 - C3373 * C6174) *
                C32230) *
               C32180 +
           (C8347 * C5281 + C8348 * C5275 +
            (C8338 - C8337 + C8340 - C8339) * C5282 +
            (C8342 - C8341 + C8344 - C8343) * C5276 +
            (C32200 * C971 - C3372 * C961 + C32045 * C6355 - C3373 * C6354) *
                C5283 +
            (C32200 * C979 - C3372 * C972 + C32045 * C6357 - C3373 * C6356) *
                C32230) *
               C31869) *
              C31918 * C242) *
         C31892) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C32200 * C122 - C3372 * C115 + C32045 * C359 - C3373 * C349) *
                C5281 +
            (C32200 * C136 - C3372 * C123 + C32045 * C379 - C3373 * C360) *
                C5275 +
            (C4364 - C4365 + C4366 - C4367) * C5282 +
            (C4368 - C4369 + C4370 - C4371) * C5276 + C8345 * C5283 +
            C8346 * C32230) *
               C32180 +
           ((C3375 - C3376 + C3377 - C3378) * C5281 +
            (C3379 - C3380 + C3381 - C3382) * C5275 + C4748 * C5282 +
            C4749 * C5276 + C8347 * C5283 + C8348 * C32230) *
               C31869) *
              C346 +
          (((C3372 * C349 - C32200 * C359 + C3373 * C354 - C32045 * C369) *
                C5281 +
            (C3372 * C360 - C32200 * C379 + C3373 * C370 - C32045 * C384) *
                C5275 +
            (C5158 - C5159 + C5160 - C5161) * C5282 +
            (C5162 - C5163 + C5164 - C5165) * C5276 +
            (C3372 * C1115 - C32200 * C1124 + C3373 * C1119 - C32045 * C1132) *
                C5283 +
            (C3372 * C1125 - C32200 * C1142 + C3373 * C1133 - C32045 * C1146) *
                C32230) *
               C32180 +
           ((C3905 - C3906 + C3907 - C3908) * C5281 +
            (C3909 - C3910 + C3911 - C3912) * C5275 +
            (C4948 - C4949 + C4950 - C4951) * C5282 +
            (C4952 - C4953 + C4954 - C4955) * C5276 +
            (C3372 * C1116 - C32200 * C1126 + C3373 * C1121 - C32045 * C1136) *
                C5283 +
            (C3372 * C1127 - C32200 * C1143 + C3373 * C1137 - C32045 * C1148) *
                C32230) *
               C31869) *
              C347 +
          (((C32200 * C369 - C3372 * C354 + C32045 * C2034 - C3373 * C2028) *
                C5281 +
            (C32200 * C384 - C3372 * C370 + C32045 * C2046 - C3373 * C2035) *
                C5275 +
            (C32200 * C1130 - C3372 * C1118 + C32045 * C2549 - C3373 * C2546) *
                C5282 +
            (C32200 * C1145 - C3372 * C1131 + C32045 * C2555 - C3373 * C2550) *
                C5276 +
            (C32200 * C1132 - C3372 * C1119 + C32045 * C6831 - C3373 * C6828) *
                C5283 +
            (C32200 * C1146 - C3372 * C1133 + C32045 * C6837 - C3373 * C6832) *
                C32230) *
               C32180 +
           ((C32200 * C371 - C3372 * C355 + C32045 * C2036 - C3373 * C2029) *
                C5281 +
            (C32200 * C385 - C3372 * C372 + C32045 * C2047 - C3373 * C2037) *
                C5275 +
            (C32200 * C1134 - C3372 * C1120 + C32045 * C2551 - C3373 * C2547) *
                C5282 +
            (C32200 * C1147 - C3372 * C1135 + C32045 * C2556 - C3373 * C2552) *
                C5276 +
            (C32200 * C1136 - C3372 * C1121 + C32045 * C7149 - C3373 * C7148) *
                C5283 +
            (C32200 * C1148 - C3372 * C1137 + C32045 * C7151 - C3373 * C7150) *
                C32230) *
               C31869) *
              C348) *
         C31904 * C31892) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13137 * C122 - C13141 * C115 + C13138 * C359 - C13142 * C349 +
             C13139 * C369 - C13143 * C354 + C32246 * C2034 - C13144 * C2028) *
                C114 +
            (C13137 * C136 - C13141 * C123 + C13138 * C379 - C13142 * C360 +
             C13139 * C384 - C13143 * C370 + C32246 * C2046 - C13144 * C2035) *
                C31941) *
               C32180 +
           ((C13146 - C13147 + C13148 - C13149 + C13150 - C13151 + C13152 -
             C13153) *
                C114 +
            (C13154 - C13155 + C13156 - C13157 + C13158 - C13159 + C13160 -
             C13161) *
                C31941) *
               C31869) *
              C31918 * C31904 * C110 +
          (((C13147 - C13146 + C13149 - C13148 + C13151 - C13150 + C13153 -
             C13152) *
                C114 +
            (C13155 - C13154 + C13157 - C13156 + C13159 - C13158 + C13161 -
             C13160) *
                C31941) *
               C32180 +
           ((C13162 - C13163 + C13164 - C13165 + C13166 - C13167 + C13168 -
             C13169) *
                C114 +
            (C13170 - C13171 + C13172 - C13173 + C13174 - C13175 + C13176 -
             C13177) *
                C31941) *
               C31869) *
              C31918 * C31904 * C111 +
          (((C13163 - C13162 + C13165 - C13164 + C13167 - C13166 + C13169 -
             C13168) *
                C114 +
            (C13171 - C13170 + C13173 - C13172 + C13175 - C13174 + C13177 -
             C13176) *
                C31941) *
               C32180 +
           ((C13137 * C128 - C13141 * C118 + C13138 * C365 - C13142 * C352 +
             C13139 * C375 - C13143 * C357 + C32246 * C2373 - C13144 * C2372) *
                C114 +
            (C13137 * C139 - C13141 * C129 + C13138 * C382 - C13142 * C366 +
             C13139 * C387 - C13143 * C376 + C32246 * C2375 - C13144 * C2374) *
                C31941) *
               C31869) *
              C31918 * C31904 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C13137 * C122 - C13141 * C115 + C13138 * C359 - C13142 * C349 +
             C13139 * C369 - C13143 * C354 + C32246 * C2034 - C13144 * C2028) *
                C114 +
            (C13137 * C136 - C13141 * C123 + C13138 * C379 - C13142 * C360 +
             C13139 * C384 - C13143 * C370 + C32246 * C2046 - C13144 * C2035) *
                C31941) *
               C32180 +
           ((C13146 - C13147 + C13148 - C13149 + C13150 - C13151 + C13152 -
             C13153) *
                C114 +
            (C13154 - C13155 + C13156 - C13157 + C13158 - C13159 + C13160 -
             C13161) *
                C31941) *
               C31869) *
              C31918 * C240 +
          (((C13141 * C244 - C13137 * C254 + C13142 * C681 - C13138 * C686 +
             C13143 * C1118 - C13139 * C1130 + C13144 * C2546 -
             C32246 * C2549) *
                C114 +
            (C13141 * C255 - C13137 * C274 + C13142 * C687 - C13138 * C696 +
             C13143 * C1131 - C13139 * C1145 + C13144 * C2550 -
             C32246 * C2555) *
                C31941) *
               C32180 +
           ((C13141 * C245 - C13137 * C256 + C13142 * C682 - C13138 * C688 +
             C13143 * C1120 - C13139 * C1134 + C13144 * C2547 -
             C32246 * C2551) *
                C114 +
            (C13141 * C257 - C13137 * C275 + C13142 * C689 - C13138 * C697 +
             C13143 * C1135 - C13139 * C1147 + C13144 * C2552 -
             C32246 * C2556) *
                C31941) *
               C31869) *
              C31918 * C241 +
          (((C13137 * C264 - C13141 * C249 + C13138 * C1124 - C13142 * C1115 +
             C13139 * C1132 - C13143 * C1119 + C32246 * C6831 -
             C13144 * C6828) *
                C114 +
            (C13137 * C279 - C13141 * C265 + C13138 * C1142 - C13142 * C1125 +
             C13139 * C1146 - C13143 * C1133 + C32246 * C6837 -
             C13144 * C6832) *
                C31941) *
               C32180 +
           ((C13137 * C266 - C13141 * C250 + C13138 * C1126 - C13142 * C1116 +
             C13139 * C1136 - C13143 * C1121 + C32246 * C7149 -
             C13144 * C7148) *
                C114 +
            (C13137 * C280 - C13141 * C267 + C13138 * C1143 - C13142 * C1127 +
             C13139 * C1148 - C13143 * C1137 + C32246 * C7151 -
             C13144 * C7150) *
                C31941) *
               C31869) *
              C31918 * C242) *
         C31892) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C13137 * C122 - C13141 * C115 + C13138 * C359 - C13142 * C349 +
             C13139 * C369 - C13143 * C354 + C32246 * C2034 - C13144 * C2028) *
                C114 +
            (C13137 * C136 - C13141 * C123 + C13138 * C379 - C13142 * C360 +
             C13139 * C384 - C13143 * C370 + C32246 * C2046 - C13144 * C2035) *
                C31941) *
               C32180 +
           ((C13146 - C13147 + C13148 - C13149 + C13150 - C13151 + C13152 -
             C13153) *
                C114 +
            (C13154 - C13155 + C13156 - C13157 + C13158 - C13159 + C13160 -
             C13161) *
                C31941) *
               C31869) *
              C346 +
          (((C13141 * C349 - C13137 * C359 + C13142 * C354 - C13138 * C369 +
             C13143 * C2028 - C13139 * C2034 + C13144 * C2031 -
             C32246 * C2040) *
                C114 +
            (C13141 * C360 - C13137 * C379 + C13142 * C370 - C13138 * C384 +
             C13143 * C2035 - C13139 * C2046 + C13144 * C2041 -
             C32246 * C2049) *
                C31941) *
               C32180 +
           ((C13141 * C350 - C13137 * C361 + C13142 * C355 - C13138 * C371 +
             C13143 * C2029 - C13139 * C2036 + C13144 * C2032 -
             C32246 * C2042) *
                C114 +
            (C13141 * C362 - C13137 * C380 + C13142 * C372 - C13138 * C385 +
             C13143 * C2037 - C13139 * C2047 + C13144 * C2043 -
             C32246 * C2050) *
                C31941) *
               C31869) *
              C347 +
          (((C13137 * C369 - C13141 * C354 + C13138 * C2034 - C13142 * C2028 +
             C13139 * C2040 - C13143 * C2031 + C32246 * C11723 -
             C13144 * C11721) *
                C114 +
            (C13137 * C384 - C13141 * C370 + C13138 * C2046 - C13142 * C2035 +
             C13139 * C2049 - C13143 * C2041 + C32246 * C11727 -
             C13144 * C11724) *
                C31941) *
               C32180 +
           ((C13137 * C371 - C13141 * C355 + C13138 * C2036 - C13142 * C2029 +
             C13139 * C2042 - C13143 * C2032 + C32246 * C11898 -
             C13144 * C11897) *
                C114 +
            (C13137 * C385 - C13141 * C372 + C13138 * C2047 - C13142 * C2037 +
             C13139 * C2050 - C13143 * C2043 + C32246 * C11900 -
             C13144 * C11899) *
                C31941) *
               C31869) *
              C348) *
         C31904 * C31892) /
            (p * q * std::sqrt(p + q));
    d2ee[68] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C32200 * C122 - C3372 * C115 + C32045 * C359 - C3373 * C349) *
                 C5281 +
             (C32200 * C136 - C3372 * C123 + C32045 * C379 - C3373 * C360) *
                 C5275 +
             (C4364 - C4365 + C4366 - C4367) * C5282 +
             (C4368 - C4369 + C4370 - C4371) * C5276 + C8345 * C5283 +
             C8346 * C32230) *
                C32180 +
            ((C3375 - C3376 + C3377 - C3378) * C5281 +
             (C3379 - C3380 + C3381 - C3382) * C5275 + C4748 * C5282 +
             C4749 * C5276 + C8347 * C5283 + C8348 * C32230) *
                C31869) *
               C577 +
           (((C3372 * C349 - C32200 * C359 + C3373 * C354 - C32045 * C369) *
                 C5281 +
             (C3372 * C360 - C32200 * C379 + C3373 * C370 - C32045 * C384) *
                 C5275 +
             (C5158 - C5159 + C5160 - C5161) * C5282 +
             (C5162 - C5163 + C5164 - C5165) * C5276 +
             (C3372 * C1115 - C32200 * C1124 + C3373 * C1119 - C32045 * C1132) *
                 C5283 +
             (C3372 * C1125 - C32200 * C1142 + C3373 * C1133 - C32045 * C1146) *
                 C32230) *
                C32180 +
            ((C3905 - C3906 + C3907 - C3908) * C5281 +
             (C3909 - C3910 + C3911 - C3912) * C5275 +
             (C4948 - C4949 + C4950 - C4951) * C5282 +
             (C4952 - C4953 + C4954 - C4955) * C5276 +
             (C8889 - C8890 + C8891 - C8892) * C5283 +
             (C8893 - C8894 + C8895 - C8896) * C32230) *
                C31869) *
               C578) *
              C31904 * C473 +
          ((((C3376 - C3375 + C3378 - C3377) * C5281 +
             (C3380 - C3379 + C3382 - C3381) * C5275 + C4750 * C5282 +
             C4751 * C5276 + C8693 * C5283 + C8694 * C32230) *
                C32180 +
            ((C3384 - C3383 + C3386 - C3385) * C5281 +
             (C3388 - C3387 + C3390 - C3389) * C5275 + C4752 * C5282 +
             C4753 * C5276 + (C4388 - C4389 + C4390 - C4391) * C5283 +
             (C4392 - C4393 + C4394 - C4395) * C32230) *
                C31869) *
               C577 +
           (((C3906 - C3905 + C3908 - C3907) * C5281 +
             (C3910 - C3909 + C3912 - C3911) * C5275 +
             (C4949 - C4948 + C4951 - C4950) * C5282 +
             (C4953 - C4952 + C4955 - C4954) * C5276 +
             (C8890 - C8889 + C8892 - C8891) * C5283 +
             (C8894 - C8893 + C8896 - C8895) * C32230) *
                C32180 +
            ((C3914 - C3913 + C3916 - C3915) * C5281 +
             (C3918 - C3917 + C3920 - C3919) * C5275 +
             (C4957 - C4956 + C4959 - C4958) * C5282 +
             (C4961 - C4960 + C4963 - C4962) * C5276 +
             (C32200 * C1128 - C3372 * C1117 + C32045 * C1140 - C3373 * C1123) *
                 C5283 +
             (C32200 * C1144 - C3372 * C1129 + C32045 * C1150 - C3373 * C1141) *
                 C32230) *
                C31869) *
               C578) *
              C31904 * C474)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C32200 * C122 - C3372 * C115 + C32045 * C359 - C3373 * C349) *
                 C114 +
             (C32200 * C136 - C3372 * C123 + C32045 * C379 - C3373 * C360) *
                 C31941) *
                C2658 +
            ((C3375 - C3376 + C3377 - C3378) * C114 +
             (C3379 - C3380 + C3381 - C3382) * C31941) *
                C2659 +
            C3423 * C2660 + C3424 * C32234) *
               C577 +
           (((C3372 * C349 - C32200 * C359 + C3373 * C354 - C32045 * C369) *
                 C114 +
             (C3372 * C360 - C32200 * C379 + C3373 * C370 - C32045 * C384) *
                 C31941) *
                C2658 +
            ((C3905 - C3906 + C3907 - C3908) * C114 +
             (C3909 - C3910 + C3911 - C3912) * C31941) *
                C2659 +
            ((C3913 - C3914 + C3915 - C3916) * C114 +
             (C3917 - C3918 + C3919 - C3920) * C31941) *
                C2660 +
            ((C3921 - C3922 + C3923 - C3924) * C114 +
             (C3925 - C3926 + C3927 - C3928) * C31941) *
                C32234) *
               C578) *
              C31904 * C473 +
          ((((C3376 - C3375 + C3378 - C3377) * C114 +
             (C3380 - C3379 + C3382 - C3381) * C31941) *
                C2658 +
            ((C3384 - C3383 + C3386 - C3385) * C114 +
             (C3388 - C3387 + C3390 - C3389) * C31941) *
                C2659 +
            ((C3392 - C3391 + C3394 - C3393) * C114 +
             (C3396 - C3395 + C3398 - C3397) * C31941) *
                C2660 +
            ((C3399 - C3400 + C3401 - C3402) * C114 +
             (C3403 - C3404 + C3405 - C3406) * C31941) *
                C32234) *
               C577 +
           (((C3906 - C3905 + C3908 - C3907) * C114 +
             (C3910 - C3909 + C3912 - C3911) * C31941) *
                C2658 +
            ((C3914 - C3913 + C3916 - C3915) * C114 +
             (C3918 - C3917 + C3920 - C3919) * C31941) *
                C2659 +
            ((C3922 - C3921 + C3924 - C3923) * C114 +
             (C3926 - C3925 + C3928 - C3927) * C31941) *
                C2660 +
            ((C32200 * C367 - C3372 * C353 + C32045 * C377 - C3373 * C358) *
                 C114 +
             (C32200 * C383 - C3372 * C368 + C32045 * C388 - C3373 * C378) *
                 C31941) *
                C32234) *
               C578) *
              C31904 * C474)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C13137 * C122 - C13141 * C115 + C13138 * C359 - C13142 * C349 +
              C13139 * C369 - C13143 * C354 + C32246 * C2034 - C13144 * C2028) *
                 C114 +
             (C13137 * C136 - C13141 * C123 + C13138 * C379 - C13142 * C360 +
              C13139 * C384 - C13143 * C370 + C32246 * C2046 - C13144 * C2035) *
                 C31941) *
                C32180 +
            ((C13146 - C13147 + C13148 - C13149 + C13150 - C13151 + C13152 -
              C13153) *
                 C114 +
             (C13154 - C13155 + C13156 - C13157 + C13158 - C13159 + C13160 -
              C13161) *
                 C31941) *
                C31869) *
               C577 +
           (((C13141 * C349 - C13137 * C359 + C13142 * C354 - C13138 * C369 +
              C13143 * C2028 - C13139 * C2034 + C13144 * C2031 -
              C32246 * C2040) *
                 C114 +
             (C13141 * C360 - C13137 * C379 + C13142 * C370 - C13138 * C384 +
              C13143 * C2035 - C13139 * C2046 + C13144 * C2041 -
              C32246 * C2049) *
                 C31941) *
                C32180 +
            ((C13650 - C13651 + C13652 - C13653 + C13654 - C13655 + C13656 -
              C13657) *
                 C114 +
             (C13658 - C13659 + C13660 - C13661 + C13662 - C13663 + C13664 -
              C13665) *
                 C31941) *
                C31869) *
               C578) *
              C31904 * C473 +
          ((((C13147 - C13146 + C13149 - C13148 + C13151 - C13150 + C13153 -
              C13152) *
                 C114 +
             (C13155 - C13154 + C13157 - C13156 + C13159 - C13158 + C13161 -
              C13160) *
                 C31941) *
                C32180 +
            ((C13162 - C13163 + C13164 - C13165 + C13166 - C13167 + C13168 -
              C13169) *
                 C114 +
             (C13170 - C13171 + C13172 - C13173 + C13174 - C13175 + C13176 -
              C13177) *
                 C31941) *
                C31869) *
               C577 +
           (((C13651 - C13650 + C13653 - C13652 + C13655 - C13654 + C13657 -
              C13656) *
                 C114 +
             (C13659 - C13658 + C13661 - C13660 + C13663 - C13662 + C13665 -
              C13664) *
                 C31941) *
                C32180 +
            ((C13137 * C363 - C13141 * C351 + C13138 * C373 - C13142 * C356 +
              C13139 * C2038 - C13143 * C2030 + C32246 * C2044 -
              C13144 * C2033) *
                 C114 +
             (C13137 * C381 - C13141 * C364 + C13138 * C386 - C13142 * C374 +
              C13139 * C2048 - C13143 * C2039 + C32246 * C2051 -
              C13144 * C2045) *
                 C31941) *
                C31869) *
               C578) *
              C31904 * C474)) /
            (p * q * std::sqrt(p + q));
    d2ee[69] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C32200 * C122 - C3372 * C115 + C32045 * C359 - C3373 * C349) *
                C114 +
            (C32200 * C136 - C3372 * C123 + C32045 * C379 - C3373 * C360) *
                C31941) *
               C2658 +
           ((C3375 - C3376 + C3377 - C3378) * C114 +
            (C3379 - C3380 + C3381 - C3382) * C31941) *
               C2659 +
           C3423 * C2660 + C3424 * C32234) *
              C31918 * C240 +
          (((C3372 * C244 - C32200 * C254 + C3373 * C681 - C32045 * C686) *
                C114 +
            (C3372 * C255 - C32200 * C274 + C3373 * C687 - C32045 * C696) *
                C31941) *
               C2658 +
           ((C3372 * C245 - C32200 * C256 + C3373 * C682 - C32045 * C688) *
                C114 +
            (C3372 * C257 - C32200 * C275 + C3373 * C689 - C32045 * C697) *
                C31941) *
               C2659 +
           ((C3372 * C246 - C32200 * C258 + C3373 * C683 - C32045 * C690) *
                C114 +
            (C3372 * C259 - C32200 * C276 + C3373 * C691 - C32045 * C698) *
                C31941) *
               C2660 +
           ((C3372 * C247 - C32200 * C260 + C3373 * C684 - C32045 * C692) *
                C114 +
            (C3372 * C261 - C32200 * C277 + C3373 * C693 - C32045 * C699) *
                C31941) *
               C32234) *
              C31918 * C241 +
          (((C32200 * C264 - C3372 * C249 + C32045 * C1124 - C3373 * C1115) *
                C114 +
            (C32200 * C279 - C3372 * C265 + C32045 * C1142 - C3373 * C1125) *
                C31941) *
               C2658 +
           ((C32200 * C266 - C3372 * C250 + C32045 * C1126 - C3373 * C1116) *
                C114 +
            (C32200 * C280 - C3372 * C267 + C32045 * C1143 - C3373 * C1127) *
                C31941) *
               C2659 +
           ((C32200 * C268 - C3372 * C251 + C32045 * C1128 - C3373 * C1117) *
                C114 +
            (C32200 * C281 - C3372 * C269 + C32045 * C1144 - C3373 * C1129) *
                C31941) *
               C2660 +
           ((C32200 * C270 - C3372 * C252 + C32045 * C1458 - C3373 * C1457) *
                C114 +
            (C32200 * C282 - C3372 * C271 + C32045 * C1460 - C3373 * C1459) *
                C31941) *
               C32234) *
              C31918 * C242) *
         C31892) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C32200 * C122 - C3372 * C115 + C32045 * C359 - C3373 * C349) *
                C114 +
            (C32200 * C136 - C3372 * C123 + C32045 * C379 - C3373 * C360) *
                C31941) *
               C2658 +
           ((C3375 - C3376 + C3377 - C3378) * C114 +
            (C3379 - C3380 + C3381 - C3382) * C31941) *
               C2659 +
           C3423 * C2660 + C3424 * C32234) *
              C31918 * C31904 * C110 +
          (((C3376 - C3375 + C3378 - C3377) * C114 +
            (C3380 - C3379 + C3382 - C3381) * C31941) *
               C2658 +
           ((C3384 - C3383 + C3386 - C3385) * C114 +
            (C3388 - C3387 + C3390 - C3389) * C31941) *
               C2659 +
           ((C3392 - C3391 + C3394 - C3393) * C114 +
            (C3396 - C3395 + C3398 - C3397) * C31941) *
               C2660 +
           ((C3399 - C3400 + C3401 - C3402) * C114 +
            (C3403 - C3404 + C3405 - C3406) * C31941) *
               C32234) *
              C31918 * C31904 * C111 +
          (C3423 * C2658 + C3424 * C2659 +
           ((C3400 - C3399 + C3402 - C3401) * C114 +
            (C3404 - C3403 + C3406 - C3405) * C31941) *
               C2660 +
           ((C32200 * C132 - C3372 * C120 + C32045 * C580 - C3373 * C579) *
                C114 +
            (C32200 * C141 - C3372 * C133 + C32045 * C582 - C3373 * C581) *
                C31941) *
               C32234) *
              C31918 * C31904 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C32200 * C122 - C3372 * C115 + C32045 * C359 - C3373 * C349) *
                C5281 +
            (C32200 * C136 - C3372 * C123 + C32045 * C379 - C3373 * C360) *
                C5275 +
            (C4364 - C4365 + C4366 - C4367) * C5282 +
            (C4368 - C4369 + C4370 - C4371) * C5276 +
            (C4373 - C4372 + C4375 - C4374) * C5283 +
            (C4377 - C4376 + C4379 - C4378) * C32230) *
               C32180 +
           ((C3375 - C3376 + C3377 - C3378) * C5281 +
            (C3379 - C3380 + C3381 - C3382) * C5275 + C4748 * C5282 +
            C4749 * C5276 + (C4381 - C4380 + C4383 - C4382) * C5283 +
            (C4385 - C4384 + C4387 - C4386) * C32230) *
               C31869) *
              C31918 * C31904 * C110 +
          (((C3376 - C3375 + C3378 - C3377) * C5281 +
            (C3380 - C3379 + C3382 - C3381) * C5275 + C4750 * C5282 +
            C4751 * C5276 + (C4380 - C4381 + C4382 - C4383) * C5283 +
            (C4384 - C4385 + C4386 - C4387) * C32230) *
               C32180 +
           ((C3384 - C3383 + C3386 - C3385) * C5281 +
            (C3388 - C3387 + C3390 - C3389) * C5275 + C4752 * C5282 +
            C4753 * C5276 + (C4388 - C4389 + C4390 - C4391) * C5283 +
            (C4392 - C4393 + C4394 - C4395) * C32230) *
               C31869) *
              C31918 * C31904 * C111 +
          ((C3415 * C5281 + C3416 * C5275 + C4212 * C5282 + C4213 * C5276 +
            (C4389 - C4388 + C4391 - C4390) * C5283 +
            (C4393 - C4392 + C4395 - C4394) * C32230) *
               C32180 +
           (C3417 * C5281 + C3418 * C5275 +
            (C3768 - C3767 + C3770 - C3769) * C5282 +
            (C3772 - C3771 + C3774 - C3773) * C5276 +
            (C32200 * C270 - C3372 * C252 + C32045 * C1458 - C3373 * C1457) *
                C5283 +
            (C32200 * C282 - C3372 * C271 + C32045 * C1460 - C3373 * C1459) *
                C32230) *
               C31869) *
              C31918 * C31904 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C32200 * C122 - C3372 * C115 + C32045 * C359 - C3373 * C349) *
                C5281 +
            (C32200 * C136 - C3372 * C123 + C32045 * C379 - C3373 * C360) *
                C5275 +
            (C4364 - C4365 + C4366 - C4367) * C5282 +
            (C4368 - C4369 + C4370 - C4371) * C5276 + C8345 * C5283 +
            C8346 * C32230) *
               C32180 +
           ((C3375 - C3376 + C3377 - C3378) * C5281 +
            (C3379 - C3380 + C3381 - C3382) * C5275 + C4748 * C5282 +
            C4749 * C5276 + C8347 * C5283 + C8348 * C32230) *
               C31869) *
              C31918 * C240 +
          (((C4365 - C4364 + C4367 - C4366) * C5281 +
            (C4369 - C4368 + C4371 - C4370) * C5275 +
            (C4372 - C4373 + C4374 - C4375) * C5282 +
            (C4376 - C4377 + C4378 - C4379) * C5276 +
            (C8329 - C8330 + C8331 - C8332) * C5283 +
            (C8333 - C8334 + C8335 - C8336) * C32230) *
               C32180 +
           (C4750 * C5281 + C4751 * C5275 +
            (C4380 - C4381 + C4382 - C4383) * C5282 +
            (C4384 - C4385 + C4386 - C4387) * C5276 +
            (C8337 - C8338 + C8339 - C8340) * C5283 +
            (C8341 - C8342 + C8343 - C8344) * C32230) *
               C31869) *
              C31918 * C241 +
          ((C8345 * C5281 + C8346 * C5275 +
            (C8330 - C8329 + C8332 - C8331) * C5282 +
            (C8334 - C8333 + C8336 - C8335) * C5276 +
            (C32200 * C969 - C3372 * C960 + C32045 * C6173 - C3373 * C6170) *
                C5283 +
            (C32200 * C978 - C3372 * C970 + C32045 * C6179 - C3373 * C6174) *
                C32230) *
               C32180 +
           (C8347 * C5281 + C8348 * C5275 +
            (C8338 - C8337 + C8340 - C8339) * C5282 +
            (C8342 - C8341 + C8344 - C8343) * C5276 +
            (C32200 * C971 - C3372 * C961 + C32045 * C6355 - C3373 * C6354) *
                C5283 +
            (C32200 * C979 - C3372 * C972 + C32045 * C6357 - C3373 * C6356) *
                C32230) *
               C31869) *
              C31918 * C242) *
         C31892) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C13137 * C122 - C13141 * C115 + C13138 * C359 - C13142 * C349 +
             C13139 * C369 - C13143 * C354 + C32246 * C2034 - C13144 * C2028) *
                C114 +
            (C13137 * C136 - C13141 * C123 + C13138 * C379 - C13142 * C360 +
             C13139 * C384 - C13143 * C370 + C32246 * C2046 - C13144 * C2035) *
                C31941) *
               C32180 +
           ((C13146 - C13147 + C13148 - C13149 + C13150 - C13151 + C13152 -
             C13153) *
                C114 +
            (C13154 - C13155 + C13156 - C13157 + C13158 - C13159 + C13160 -
             C13161) *
                C31941) *
               C31869) *
              C31918 * C31904 * C110 +
          (((C13147 - C13146 + C13149 - C13148 + C13151 - C13150 + C13153 -
             C13152) *
                C114 +
            (C13155 - C13154 + C13157 - C13156 + C13159 - C13158 + C13161 -
             C13160) *
                C31941) *
               C32180 +
           ((C13162 - C13163 + C13164 - C13165 + C13166 - C13167 + C13168 -
             C13169) *
                C114 +
            (C13170 - C13171 + C13172 - C13173 + C13174 - C13175 + C13176 -
             C13177) *
                C31941) *
               C31869) *
              C31918 * C31904 * C111 +
          (((C13163 - C13162 + C13165 - C13164 + C13167 - C13166 + C13169 -
             C13168) *
                C114 +
            (C13171 - C13170 + C13173 - C13172 + C13175 - C13174 + C13177 -
             C13176) *
                C31941) *
               C32180 +
           ((C13137 * C128 - C13141 * C118 + C13138 * C365 - C13142 * C352 +
             C13139 * C375 - C13143 * C357 + C32246 * C2373 - C13144 * C2372) *
                C114 +
            (C13137 * C139 - C13141 * C129 + C13138 * C382 - C13142 * C366 +
             C13139 * C387 - C13143 * C376 + C32246 * C2375 - C13144 * C2374) *
                C31941) *
               C31869) *
              C31918 * C31904 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C13137 * C122 - C13141 * C115 + C13138 * C359 - C13142 * C349 +
             C13139 * C369 - C13143 * C354 + C32246 * C2034 - C13144 * C2028) *
                C114 +
            (C13137 * C136 - C13141 * C123 + C13138 * C379 - C13142 * C360 +
             C13139 * C384 - C13143 * C370 + C32246 * C2046 - C13144 * C2035) *
                C31941) *
               C32180 +
           ((C13146 - C13147 + C13148 - C13149 + C13150 - C13151 + C13152 -
             C13153) *
                C114 +
            (C13154 - C13155 + C13156 - C13157 + C13158 - C13159 + C13160 -
             C13161) *
                C31941) *
               C31869) *
              C31918 * C240 +
          (((C13141 * C244 - C13137 * C254 + C13142 * C681 - C13138 * C686 +
             C13143 * C1118 - C13139 * C1130 + C13144 * C2546 -
             C32246 * C2549) *
                C114 +
            (C13141 * C255 - C13137 * C274 + C13142 * C687 - C13138 * C696 +
             C13143 * C1131 - C13139 * C1145 + C13144 * C2550 -
             C32246 * C2555) *
                C31941) *
               C32180 +
           ((C13141 * C245 - C13137 * C256 + C13142 * C682 - C13138 * C688 +
             C13143 * C1120 - C13139 * C1134 + C13144 * C2547 -
             C32246 * C2551) *
                C114 +
            (C13141 * C257 - C13137 * C275 + C13142 * C689 - C13138 * C697 +
             C13143 * C1135 - C13139 * C1147 + C13144 * C2552 -
             C32246 * C2556) *
                C31941) *
               C31869) *
              C31918 * C241 +
          (((C13137 * C264 - C13141 * C249 + C13138 * C1124 - C13142 * C1115 +
             C13139 * C1132 - C13143 * C1119 + C32246 * C6831 -
             C13144 * C6828) *
                C114 +
            (C13137 * C279 - C13141 * C265 + C13138 * C1142 - C13142 * C1125 +
             C13139 * C1146 - C13143 * C1133 + C32246 * C6837 -
             C13144 * C6832) *
                C31941) *
               C32180 +
           ((C13137 * C266 - C13141 * C250 + C13138 * C1126 - C13142 * C1116 +
             C13139 * C1136 - C13143 * C1121 + C32246 * C7149 -
             C13144 * C7148) *
                C114 +
            (C13137 * C280 - C13141 * C267 + C13138 * C1143 - C13142 * C1127 +
             C13139 * C1148 - C13143 * C1137 + C32246 * C7151 -
             C13144 * C7150) *
                C31941) *
               C31869) *
              C31918 * C242) *
         C31892) /
            (p * q * std::sqrt(p + q));
    d2ee[70] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C31958 * C122 - C113 * C115) * C817 +
             (C31958 * C136 - C113 * C123) * C32265 + (C982 - C983) * C818 +
             (C984 - C985) * C32253 + C1004 * C819 + C1005 * C32230) *
                C814 +
            ((C144 - C145) * C817 + (C146 - C147) * C32265 + C1302 * C818 +
             C1303 * C32253 + C990 * C819 + C991 * C32230) *
                C815 +
            C847 * C32219) *
               C31918 * C471 +
           (((C983 - C982) * C817 + (C985 - C984) * C32265 +
             (C987 - C986) * C818 + (C989 - C988) * C32253 +
             (C992 - C993) * C819 + (C994 - C995) * C32230) *
                C814 +
            (C1304 * C817 + C1305 * C32265 + C1306 * C818 + C1307 * C32253 +
             (C996 - C997) * C819 + (C998 - C999) * C32230) *
                C815 +
            (C1308 * C817 + C1309 * C32265 + C1310 * C818 + C1311 * C32253 +
             (C1000 - C1001) * C819 + (C1002 - C1003) * C32230) *
                C32219) *
               C31918 * C472) *
              C473 +
          ((((C145 - C144) * C817 + (C147 - C146) * C32265 + C1304 * C818 +
             C1305 * C32253 + C1306 * C819 + C1307 * C32230) *
                C814 +
            ((C149 - C148) * C817 + (C151 - C150) * C32265 + C1308 * C818 +
             C1309 * C32253 + C1310 * C819 + C1311 * C32230) *
                C815 +
            ((C153 - C152) * C817 + (C155 - C154) * C32265 +
             (C488 - C489) * C818 + (C490 - C491) * C32253 +
             (C833 - C834) * C819 + (C835 - C836) * C32230) *
                C32219) *
               C31918 * C471 +
           ((C1302 * C817 + C1303 * C32265 + C990 * C818 + C991 * C32253 +
             (C997 - C996) * C819 + (C999 - C998) * C32230) *
                C814 +
            (C827 * C817 + C828 * C32265 + C840 * C818 + C841 * C32253 +
             (C1001 - C1000) * C819 + (C1003 - C1002) * C32230) *
                C815 +
            ((C489 - C488) * C817 + (C491 - C490) * C32265 +
             (C834 - C833) * C818 + (C836 - C835) * C32253 +
             (C31958 * C1298 - C113 * C1297) * C819 +
             (C31958 * C1300 - C113 * C1299) * C32230) *
                C32219) *
               C31918 * C472) *
              C474)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C31958 * C122 - C113 * C115) * C114 +
             (C31958 * C136 - C113 * C123) * C31941) *
                C103 +
            ((C144 - C145) * C114 + (C146 - C147) * C31941) * C104 +
            C176 * C105 + C177 * C106 + C178 * C107) *
               C31918 * C471 +
           (((C113 * C244 - C31958 * C254) * C114 +
             (C113 * C255 - C31958 * C274) * C31941) *
                C103 +
            ((C480 - C481) * C114 + (C482 - C483) * C31941) * C104 +
            ((C484 - C485) * C114 + (C486 - C487) * C31941) * C105 +
            ((C488 - C489) * C114 + (C490 - C491) * C31941) * C106 +
            ((C492 - C493) * C114 + (C494 - C495) * C31941) * C107) *
               C31918 * C472) *
              C473 +
          ((((C145 - C144) * C114 + (C147 - C146) * C31941) * C103 +
            ((C149 - C148) * C114 + (C151 - C150) * C31941) * C104 +
            ((C153 - C152) * C114 + (C155 - C154) * C31941) * C105 +
            ((C157 - C156) * C114 + (C159 - C158) * C31941) * C106 +
            ((C160 - C161) * C114 + (C162 - C163) * C31941) * C107) *
               C31918 * C471 +
           (((C481 - C480) * C114 + (C483 - C482) * C31941) * C103 +
            ((C485 - C484) * C114 + (C487 - C486) * C31941) * C104 +
            ((C489 - C488) * C114 + (C491 - C490) * C31941) * C105 +
            ((C493 - C492) * C114 + (C495 - C494) * C31941) * C106 +
            ((C31958 * C476 - C113 * C475) * C114 +
             (C31958 * C478 - C113 * C477) * C31941) *
                C107) *
               C31918 * C472) *
              C474)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C31958 * C122 - C113 * C115) * C5281 +
             (C31958 * C136 - C113 * C123) * C5275 + (C982 - C983) * C5282 +
             (C984 - C985) * C5276 + C1004 * C5283 + C1005 * C32230) *
                C32262 +
            ((C144 - C145) * C5281 + (C146 - C147) * C5275 + C1302 * C5282 +
             C1303 * C5276 + C990 * C5283 + C991 * C32230) *
                C32249 +
            C5295 * C32219) *
               C31918 * C471 +
           (((C983 - C982) * C5281 + (C985 - C984) * C5275 +
             (C987 - C986) * C5282 + (C989 - C988) * C5276 +
             (C992 - C993) * C5283 + (C994 - C995) * C32230) *
                C32262 +
            (C1304 * C5281 + C1305 * C5275 + C1306 * C5282 + C1307 * C5276 +
             (C996 - C997) * C5283 + (C998 - C999) * C32230) *
                C32249 +
            (C1308 * C5281 + C1309 * C5275 + C1310 * C5282 + C1311 * C5276 +
             (C1000 - C1001) * C5283 + (C1002 - C1003) * C32230) *
                C32219) *
               C31918 * C472) *
              C473 +
          ((((C145 - C144) * C5281 + (C147 - C146) * C5275 + C1304 * C5282 +
             C1305 * C5276 + C1306 * C5283 + C1307 * C32230) *
                C32262 +
            ((C149 - C148) * C5281 + (C151 - C150) * C5275 + C1308 * C5282 +
             C1309 * C5276 + C1310 * C5283 + C1311 * C32230) *
                C32249 +
            ((C153 - C152) * C5281 + (C155 - C154) * C5275 + C3007 * C5282 +
             C3008 * C5276 + (C833 - C834) * C5283 + (C835 - C836) * C32230) *
                C32219) *
               C31918 * C471 +
           ((C1302 * C5281 + C1303 * C5275 + C990 * C5282 + C991 * C5276 +
             (C997 - C996) * C5283 + (C999 - C998) * C32230) *
                C32262 +
            (C827 * C5281 + C828 * C5275 + C840 * C5282 + C841 * C5276 +
             (C1001 - C1000) * C5283 + (C1003 - C1002) * C32230) *
                C32249 +
            (C2671 * C5281 + C2672 * C5275 + (C834 - C833) * C5282 +
             (C836 - C835) * C5276 + (C31958 * C1298 - C113 * C1297) * C5283 +
             (C31958 * C1300 - C113 * C1299) * C32230) *
                C32219) *
               C31918 * C472) *
              C474)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31958 * C122 - C113 * C115) * C6021 +
            (C31958 * C136 - C113 * C123) * C6015 + (C982 - C983) * C6022 +
            (C984 - C985) * C6016 + C1004 * C6023 + C1005 * C6017 +
            C6097 * C6024 + C6098 * C6018 + C6107 * C6025 + C6108 * C6019) *
               C31859 * C31918 * C471 +
           ((C983 - C982) * C6021 + (C985 - C984) * C6015 +
            (C987 - C986) * C6022 + (C989 - C988) * C6016 +
            (C992 - C993) * C6023 + (C994 - C995) * C6017 +
            (C6100 - C6099) * C6024 + (C6102 - C6101) * C6018 +
            (C6103 - C6104) * C6025 + (C6105 - C6106) * C6019) *
               C31859 * C31918 * C472) *
              C473 +
          (((C145 - C144) * C6021 + (C147 - C146) * C6015 + C1304 * C6022 +
            C1305 * C6016 + C1306 * C6023 + C1307 * C6017 +
            (C996 - C997) * C6024 + (C998 - C999) * C6018 +
            (C6269 - C6270) * C6025 + (C6271 - C6272) * C6019) *
               C31859 * C31918 * C471 +
           (C1302 * C6021 + C1303 * C6015 + C990 * C6022 + C991 * C6016 +
            (C997 - C996) * C6023 + (C999 - C998) * C6017 +
            (C6270 - C6269) * C6024 + (C6272 - C6271) * C6018 +
            (C31958 * C6265 - C113 * C6264) * C6025 +
            (C31958 * C6267 - C113 * C6266) * C6019) *
               C31859 * C31918 * C472) *
              C474)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C9914 * C122 - C9917 * C115 + C9915 * C359 - C9918 * C349 +
              C32233 * C369 - C9919 * C354) *
                 C114 +
             (C9914 * C136 - C9917 * C123 + C9915 * C379 - C9918 * C360 +
              C32233 * C384 - C9919 * C370) *
                 C31941) *
                C32262 +
            ((C9921 - C9922 + C9923 - C9924 + C9925 - C9926) * C114 +
             (C9927 - C9928 + C9929 - C9930 + C9931 - C9932) * C31941) *
                C32249 +
            C9969 * C32219) *
               C31918 * C471 +
           (((C9917 * C244 - C9914 * C254 + C9918 * C681 - C9915 * C686 +
              C9919 * C1118 - C32233 * C1130) *
                 C114 +
             (C9917 * C255 - C9914 * C274 + C9918 * C687 - C9915 * C696 +
              C9919 * C1131 - C32233 * C1145) *
                 C31941) *
                C32262 +
            ((C10336 - C10337 + C10338 - C10339 + C10340 - C10341) * C114 +
             (C10342 - C10343 + C10344 - C10345 + C10346 - C10347) * C31941) *
                C32249 +
            ((C10348 - C10349 + C10350 - C10351 + C10352 - C10353) * C114 +
             (C10354 - C10355 + C10356 - C10357 + C10358 - C10359) * C31941) *
                C32219) *
               C31918 * C472) *
              C473 +
          ((((C9922 - C9921 + C9924 - C9923 + C9926 - C9925) * C114 +
             (C9928 - C9927 + C9930 - C9929 + C9932 - C9931) * C31941) *
                C32262 +
            ((C9934 - C9933 + C9936 - C9935 + C9938 - C9937) * C114 +
             (C9940 - C9939 + C9942 - C9941 + C9944 - C9943) * C31941) *
                C32249 +
            ((C9945 - C9946 + C9947 - C9948 + C9949 - C9950) * C114 +
             (C9951 - C9952 + C9953 - C9954 + C9955 - C9956) * C31941) *
                C32219) *
               C31918 * C471 +
           (((C10337 - C10336 + C10339 - C10338 + C10341 - C10340) * C114 +
             (C10343 - C10342 + C10345 - C10344 + C10347 - C10346) * C31941) *
                C32262 +
            ((C10349 - C10348 + C10351 - C10350 + C10353 - C10352) * C114 +
             (C10355 - C10354 + C10357 - C10356 + C10359 - C10358) * C31941) *
                C32249 +
            ((C9914 * C260 - C9917 * C247 + C9915 * C692 - C9918 * C684 +
              C32233 * C2199 - C9919 * C2198) *
                 C114 +
             (C9914 * C277 - C9917 * C261 + C9915 * C699 - C9918 * C693 +
              C32233 * C2201 - C9919 * C2200) *
                 C31941) *
                C32219) *
               C31918 * C472) *
              C474)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C9914 * C122 - C9917 * C115 + C9915 * C359 - C9918 * C349 +
             C32233 * C369 - C9919 * C354) *
                C817 +
            (C9914 * C136 - C9917 * C123 + C9915 * C379 - C9918 * C360 +
             C32233 * C384 - C9919 * C370) *
                C32265 +
            (C10896 - C10897 + C10898 - C10899 + C10900 - C10901) * C818 +
            (C10902 - C10903 + C10904 - C10905 + C10906 - C10907) * C32253 +
            C10940 * C819 + C10941 * C32230) *
               C31859 * C31918 * C471 +
           ((C10897 - C10896 + C10899 - C10898 + C10901 - C10900) * C817 +
            (C10903 - C10902 + C10905 - C10904 + C10907 - C10906) * C32265 +
            (C10909 - C10908 + C10911 - C10910 + C10913 - C10912) * C818 +
            (C10915 - C10914 + C10917 - C10916 + C10919 - C10918) * C32253 +
            (C10920 - C10921 + C10922 - C10923 + C10924 - C10925) * C819 +
            (C10926 - C10927 + C10928 - C10929 + C10930 - C10931) * C32230) *
               C31859 * C31918 * C472) *
              C473 +
          (((C9922 - C9921 + C9924 - C9923 + C9926 - C9925) * C817 +
            (C9928 - C9927 + C9930 - C9929 + C9932 - C9931) * C32265 +
            (C10336 - C10337 + C10338 - C10339 + C10340 - C10341) * C818 +
            (C10342 - C10343 + C10344 - C10345 + C10346 - C10347) * C32253 +
            (C11198 - C11199 + C11200 - C11201 + C11202 - C11203) * C819 +
            (C11204 - C11205 + C11206 - C11207 + C11208 - C11209) * C32230) *
               C31859 * C31918 * C471 +
           ((C10337 - C10336 + C10339 - C10338 + C10341 - C10340) * C817 +
            (C10343 - C10342 + C10345 - C10344 + C10347 - C10346) * C32265 +
            (C11199 - C11198 + C11201 - C11200 + C11203 - C11202) * C818 +
            (C11205 - C11204 + C11207 - C11206 + C11209 - C11208) * C32253 +
            (C9914 * C965 - C9917 * C958 + C9915 * C1628 - C9918 * C1624 +
             C32233 * C6987 - C9919 * C6986) *
                C819 +
            (C9914 * C976 - C9917 * C966 + C9915 * C1633 - C9918 * C1629 +
             C32233 * C6989 - C9919 * C6988) *
                C32230) *
               C31859 * C31918 * C472) *
              C474)) /
            (p * q * std::sqrt(p + q));
    d2ee[71] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C31958 * C122 - C113 * C115) * C817 +
             (C31958 * C136 - C113 * C123) * C32265 + (C982 - C983) * C818 +
             (C984 - C985) * C32253 + C1004 * C819 + C1005 * C32230) *
                C814 +
            ((C144 - C145) * C817 + (C146 - C147) * C32265 + C1302 * C818 +
             C1303 * C32253 + C990 * C819 + C991 * C32230) *
                C815 +
            C847 * C32219) *
               C577 +
           (((C113 * C349 - C31958 * C359) * C817 +
             (C113 * C360 - C31958 * C379) * C32265 + (C1636 - C1637) * C818 +
             (C1638 - C1639) * C32253 + (C1640 - C1641) * C819 +
             (C1642 - C1643) * C32230) *
                C814 +
            ((C584 - C585) * C817 + (C586 - C587) * C32265 +
             (C1462 - C1463) * C818 + (C1464 - C1465) * C32253 +
             (C1466 - C1467) * C819 + (C1468 - C1469) * C32230) *
                C815 +
            ((C588 - C589) * C817 + (C590 - C591) * C32265 +
             (C1470 - C1471) * C818 + (C1472 - C1473) * C32253 +
             (C1474 - C1475) * C819 + (C1476 - C1477) * C32230) *
                C32219) *
               C578) *
              C471 +
          ((((C983 - C982) * C817 + (C985 - C984) * C32265 +
             (C987 - C986) * C818 + (C989 - C988) * C32253 +
             (C992 - C993) * C819 + (C994 - C995) * C32230) *
                C814 +
            (C1304 * C817 + C1305 * C32265 + C1306 * C818 + C1307 * C32253 +
             (C996 - C997) * C819 + (C998 - C999) * C32230) *
                C815 +
            (C1308 * C817 + C1309 * C32265 + C1310 * C818 + C1311 * C32253 +
             (C1000 - C1001) * C819 + (C1002 - C1003) * C32230) *
                C32219) *
               C577 +
           (((C1637 - C1636) * C817 + (C1639 - C1638) * C32265 +
             (C1641 - C1640) * C818 + (C1643 - C1642) * C32253 +
             (C31958 * C1626 - C113 * C1623) * C819 +
             (C31958 * C1632 - C113 * C1627) * C32230) *
                C814 +
            ((C1463 - C1462) * C817 + (C1465 - C1464) * C32265 +
             (C1467 - C1466) * C818 + (C1469 - C1468) * C32253 +
             (C31958 * C1628 - C113 * C1624) * C819 +
             (C31958 * C1633 - C113 * C1629) * C32230) *
                C815 +
            ((C1471 - C1470) * C817 + (C1473 - C1472) * C32265 +
             (C1475 - C1474) * C818 + (C1477 - C1476) * C32253 +
             (C31958 * C1630 - C113 * C1625) * C819 +
             (C31958 * C1634 - C113 * C1631) * C32230) *
                C32219) *
               C578) *
              C472) *
         C31892) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C31958 * C122 - C113 * C115) * C114 +
             (C31958 * C136 - C113 * C123) * C31941) *
                C103 +
            ((C144 - C145) * C114 + (C146 - C147) * C31941) * C104 +
            C176 * C105 + C177 * C106 + C178 * C107) *
               C577 +
           (((C113 * C349 - C31958 * C359) * C114 +
             (C113 * C360 - C31958 * C379) * C31941) *
                C103 +
            ((C584 - C585) * C114 + (C586 - C587) * C31941) * C104 +
            ((C588 - C589) * C114 + (C590 - C591) * C31941) * C105 +
            ((C592 - C593) * C114 + (C594 - C595) * C31941) * C106 +
            ((C596 - C597) * C114 + (C598 - C599) * C31941) * C107) *
               C578) *
              C471 +
          ((((C113 * C244 - C31958 * C254) * C114 +
             (C113 * C255 - C31958 * C274) * C31941) *
                C103 +
            ((C480 - C481) * C114 + (C482 - C483) * C31941) * C104 +
            ((C484 - C485) * C114 + (C486 - C487) * C31941) * C105 +
            ((C488 - C489) * C114 + (C490 - C491) * C31941) * C106 +
            ((C492 - C493) * C114 + (C494 - C495) * C31941) * C107) *
               C577 +
           (((C31958 * C686 - C113 * C681) * C114 +
             (C31958 * C696 - C113 * C687) * C31941) *
                C103 +
            ((C31958 * C688 - C113 * C682) * C114 +
             (C31958 * C697 - C113 * C689) * C31941) *
                C104 +
            ((C31958 * C690 - C113 * C683) * C114 +
             (C31958 * C698 - C113 * C691) * C31941) *
                C105 +
            ((C31958 * C692 - C113 * C684) * C114 +
             (C31958 * C699 - C113 * C693) * C31941) *
                C106 +
            ((C31958 * C694 - C113 * C685) * C114 +
             (C31958 * C700 - C113 * C695) * C31941) *
                C107) *
               C578) *
              C472) *
         C31892) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C31958 * C122 - C113 * C115) * C5281 +
             (C31958 * C136 - C113 * C123) * C5275 + (C982 - C983) * C5282 +
             (C984 - C985) * C5276 + C1004 * C5283 + C1005 * C32230) *
                C32262 +
            ((C144 - C145) * C5281 + (C146 - C147) * C5275 + C1302 * C5282 +
             C1303 * C5276 + C990 * C5283 + C991 * C32230) *
                C32249 +
            C5295 * C32219) *
               C577 +
           (((C113 * C349 - C31958 * C359) * C5281 +
             (C113 * C360 - C31958 * C379) * C5275 + (C1636 - C1637) * C5282 +
             (C1638 - C1639) * C5276 + (C1640 - C1641) * C5283 +
             (C1642 - C1643) * C32230) *
                C32262 +
            ((C584 - C585) * C5281 + (C586 - C587) * C5275 +
             (C1462 - C1463) * C5282 + (C1464 - C1465) * C5276 +
             (C1466 - C1467) * C5283 + (C1468 - C1469) * C32230) *
                C32249 +
            ((C588 - C589) * C5281 + (C590 - C591) * C5275 +
             (C1470 - C1471) * C5282 + (C1472 - C1473) * C5276 +
             (C1474 - C1475) * C5283 + (C1476 - C1477) * C32230) *
                C32219) *
               C578) *
              C471 +
          ((((C983 - C982) * C5281 + (C985 - C984) * C5275 +
             (C987 - C986) * C5282 + (C989 - C988) * C5276 +
             (C992 - C993) * C5283 + (C994 - C995) * C32230) *
                C32262 +
            (C1304 * C5281 + C1305 * C5275 + C1306 * C5282 + C1307 * C5276 +
             (C996 - C997) * C5283 + (C998 - C999) * C32230) *
                C32249 +
            (C1308 * C5281 + C1309 * C5275 + C1310 * C5282 + C1311 * C5276 +
             (C1000 - C1001) * C5283 + (C1002 - C1003) * C32230) *
                C32219) *
               C577 +
           (((C1637 - C1636) * C5281 + (C1639 - C1638) * C5275 +
             (C1641 - C1640) * C5282 + (C1643 - C1642) * C5276 +
             (C31958 * C1626 - C113 * C1623) * C5283 +
             (C31958 * C1632 - C113 * C1627) * C32230) *
                C32262 +
            ((C1463 - C1462) * C5281 + (C1465 - C1464) * C5275 +
             (C1467 - C1466) * C5282 + (C1469 - C1468) * C5276 +
             (C31958 * C1628 - C113 * C1624) * C5283 +
             (C31958 * C1633 - C113 * C1629) * C32230) *
                C32249 +
            ((C1471 - C1470) * C5281 + (C1473 - C1472) * C5275 +
             (C1475 - C1474) * C5282 + (C1477 - C1476) * C5276 +
             (C31958 * C1630 - C113 * C1625) * C5283 +
             (C31958 * C1634 - C113 * C1631) * C32230) *
                C32219) *
               C578) *
              C472) *
         C31892) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31958 * C122 - C113 * C115) * C6021 +
            (C31958 * C136 - C113 * C123) * C6015 + (C982 - C983) * C6022 +
            (C984 - C985) * C6016 + C1004 * C6023 + C1005 * C6017 +
            C6097 * C6024 + C6098 * C6018 + C6107 * C6025 + C6108 * C6019) *
               C31859 * C577 +
           ((C113 * C349 - C31958 * C359) * C6021 +
            (C113 * C360 - C31958 * C379) * C6015 + (C1636 - C1637) * C6022 +
            (C1638 - C1639) * C6016 + (C1640 - C1641) * C6023 +
            (C1642 - C1643) * C6017 + (C6445 - C6446) * C6024 +
            (C6447 - C6448) * C6018 + (C6449 - C6450) * C6025 +
            (C6451 - C6452) * C6019) *
               C31859 * C578) *
              C471 +
          (((C983 - C982) * C6021 + (C985 - C984) * C6015 +
            (C987 - C986) * C6022 + (C989 - C988) * C6016 +
            (C992 - C993) * C6023 + (C994 - C995) * C6017 +
            (C6100 - C6099) * C6024 + (C6102 - C6101) * C6018 +
            (C6103 - C6104) * C6025 + (C6105 - C6106) * C6019) *
               C31859 * C577 +
           ((C1637 - C1636) * C6021 + (C1639 - C1638) * C6015 +
            (C1641 - C1640) * C6022 + (C1643 - C1642) * C6016 +
            (C6446 - C6445) * C6023 + (C6448 - C6447) * C6017 +
            (C6450 - C6449) * C6024 + (C6452 - C6451) * C6018 +
            (C31958 * C6441 - C113 * C6440) * C6025 +
            (C31958 * C6443 - C113 * C6442) * C6019) *
               C31859 * C578) *
              C472) *
         C31892) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C9914 * C122 - C9917 * C115 + C9915 * C359 - C9918 * C349 +
              C32233 * C369 - C9919 * C354) *
                 C114 +
             (C9914 * C136 - C9917 * C123 + C9915 * C379 - C9918 * C360 +
              C32233 * C384 - C9919 * C370) *
                 C31941) *
                C32262 +
            ((C9921 - C9922 + C9923 - C9924 + C9925 - C9926) * C114 +
             (C9927 - C9928 + C9929 - C9930 + C9931 - C9932) * C31941) *
                C32249 +
            C9969 * C32219) *
               C577 +
           (((C9917 * C349 - C9914 * C359 + C9918 * C354 - C9915 * C369 +
              C9919 * C2028 - C32233 * C2034) *
                 C114 +
             (C9917 * C360 - C9914 * C379 + C9918 * C370 - C9915 * C384 +
              C9919 * C2035 - C32233 * C2046) *
                 C31941) *
                C32262 +
            ((C10506 - C10507 + C10508 - C10509 + C10510 - C10511) * C114 +
             (C10512 - C10513 + C10514 - C10515 + C10516 - C10517) * C31941) *
                C32249 +
            ((C10518 - C10519 + C10520 - C10521 + C10522 - C10523) * C114 +
             (C10524 - C10525 + C10526 - C10527 + C10528 - C10529) * C31941) *
                C32219) *
               C578) *
              C471 +
          ((((C9917 * C244 - C9914 * C254 + C9918 * C681 - C9915 * C686 +
              C9919 * C1118 - C32233 * C1130) *
                 C114 +
             (C9917 * C255 - C9914 * C274 + C9918 * C687 - C9915 * C696 +
              C9919 * C1131 - C32233 * C1145) *
                 C31941) *
                C32262 +
            ((C10336 - C10337 + C10338 - C10339 + C10340 - C10341) * C114 +
             (C10342 - C10343 + C10344 - C10345 + C10346 - C10347) * C31941) *
                C32249 +
            ((C10348 - C10349 + C10350 - C10351 + C10352 - C10353) * C114 +
             (C10354 - C10355 + C10356 - C10357 + C10358 - C10359) * C31941) *
                C32219) *
               C577 +
           (((C9914 * C686 - C9917 * C681 + C9915 * C1130 - C9918 * C1118 +
              C32233 * C2549 - C9919 * C2546) *
                 C114 +
             (C9914 * C696 - C9917 * C687 + C9915 * C1145 - C9918 * C1131 +
              C32233 * C2555 - C9919 * C2550) *
                 C31941) *
                C32262 +
            ((C9914 * C688 - C9917 * C682 + C9915 * C1134 - C9918 * C1120 +
              C32233 * C2551 - C9919 * C2547) *
                 C114 +
             (C9914 * C697 - C9917 * C689 + C9915 * C1147 - C9918 * C1135 +
              C32233 * C2556 - C9919 * C2552) *
                 C31941) *
                C32249 +
            ((C9914 * C690 - C9917 * C683 + C9915 * C1138 - C9918 * C1122 +
              C32233 * C2553 - C9919 * C2548) *
                 C114 +
             (C9914 * C698 - C9917 * C691 + C9915 * C1149 - C9918 * C1139 +
              C32233 * C2557 - C9919 * C2554) *
                 C31941) *
                C32219) *
               C578) *
              C472) *
         C31892) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C9914 * C122 - C9917 * C115 + C9915 * C359 - C9918 * C349 +
             C32233 * C369 - C9919 * C354) *
                C817 +
            (C9914 * C136 - C9917 * C123 + C9915 * C379 - C9918 * C360 +
             C32233 * C384 - C9919 * C370) *
                C32265 +
            (C10896 - C10897 + C10898 - C10899 + C10900 - C10901) * C818 +
            (C10902 - C10903 + C10904 - C10905 + C10906 - C10907) * C32253 +
            C10940 * C819 + C10941 * C32230) *
               C31859 * C577 +
           ((C9917 * C349 - C9914 * C359 + C9918 * C354 - C9915 * C369 +
             C9919 * C2028 - C32233 * C2034) *
                C817 +
            (C9917 * C360 - C9914 * C379 + C9918 * C370 - C9915 * C384 +
             C9919 * C2035 - C32233 * C2046) *
                C32265 +
            (C11502 - C11503 + C11504 - C11505 + C11506 - C11507) * C818 +
            (C11508 - C11509 + C11510 - C11511 + C11512 - C11513) * C32253 +
            (C11514 - C11515 + C11516 - C11517 + C11518 - C11519) * C819 +
            (C11520 - C11521 + C11522 - C11523 + C11524 - C11525) * C32230) *
               C31859 * C578) *
              C471 +
          (((C10897 - C10896 + C10899 - C10898 + C10901 - C10900) * C817 +
            (C10903 - C10902 + C10905 - C10904 + C10907 - C10906) * C32265 +
            (C10909 - C10908 + C10911 - C10910 + C10913 - C10912) * C818 +
            (C10915 - C10914 + C10917 - C10916 + C10919 - C10918) * C32253 +
            (C10920 - C10921 + C10922 - C10923 + C10924 - C10925) * C819 +
            (C10926 - C10927 + C10928 - C10929 + C10930 - C10931) * C32230) *
               C31859 * C577 +
           ((C11503 - C11502 + C11505 - C11504 + C11507 - C11506) * C817 +
            (C11509 - C11508 + C11511 - C11510 + C11513 - C11512) * C32265 +
            (C11515 - C11514 + C11517 - C11516 + C11519 - C11518) * C818 +
            (C11521 - C11520 + C11523 - C11522 + C11525 - C11524) * C32253 +
            (C9914 * C1626 - C9917 * C1623 + C9915 * C6175 - C9918 * C6171 +
             C32233 * C7299 - C9919 * C7298) *
                C819 +
            (C9914 * C1632 - C9917 * C1627 + C9915 * C6180 - C9918 * C6176 +
             C32233 * C7301 - C9919 * C7300) *
                C32230) *
               C31859 * C578) *
              C472) *
         C31892) /
            (p * q * std::sqrt(p + q));
    d2ee[72] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((((C31958 * C122 - C113 * C115) * C114 +
                (C31958 * C136 - C113 * C123) * C31941) *
                   C103 +
               ((C144 - C145) * C114 + (C146 - C147) * C31941) * C104 +
               C176 * C105 + C177 * C106 + C178 * C107) *
                  C31918 * C31904 * C110 +
              (((C145 - C144) * C114 + (C147 - C146) * C31941) * C103 +
               ((C149 - C148) * C114 + (C151 - C150) * C31941) * C104 +
               ((C153 - C152) * C114 + (C155 - C154) * C31941) * C105 +
               ((C157 - C156) * C114 + (C159 - C158) * C31941) * C106 +
               ((C160 - C161) * C114 + (C162 - C163) * C31941) * C107) *
                  C31918 * C31904 * C111 +
              (C176 * C103 + C177 * C104 + C178 * C105 +
               ((C161 - C160) * C114 + (C163 - C162) * C31941) * C106 +
               ((C31958 * C134 - C113 * C121) * C114 +
                (C31958 * C142 - C113 * C135) * C31941) *
                   C107) *
                  C31918 * C31904 * C112) +
         std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((((C31958 * C122 - C113 * C115) * C114 +
                (C31958 * C136 - C113 * C123) * C31941) *
                   C103 +
               ((C144 - C145) * C114 + (C146 - C147) * C31941) * C104 +
               C176 * C105 + C177 * C106 + C178 * C107) *
                  C31918 * C240 +
              (((C113 * C244 - C31958 * C254) * C114 +
                (C113 * C255 - C31958 * C274) * C31941) *
                   C103 +
               ((C113 * C245 - C31958 * C256) * C114 +
                (C113 * C257 - C31958 * C275) * C31941) *
                   C104 +
               ((C113 * C246 - C31958 * C258) * C114 +
                (C113 * C259 - C31958 * C276) * C31941) *
                   C105 +
               ((C113 * C247 - C31958 * C260) * C114 +
                (C113 * C261 - C31958 * C277) * C31941) *
                   C106 +
               ((C113 * C248 - C31958 * C262) * C114 +
                (C113 * C263 - C31958 * C278) * C31941) *
                   C107) *
                  C31918 * C241 +
              (((C31958 * C264 - C113 * C249) * C114 +
                (C31958 * C279 - C113 * C265) * C31941) *
                   C103 +
               ((C31958 * C266 - C113 * C250) * C114 +
                (C31958 * C280 - C113 * C267) * C31941) *
                   C104 +
               ((C31958 * C268 - C113 * C251) * C114 +
                (C31958 * C281 - C113 * C269) * C31941) *
                   C105 +
               ((C31958 * C270 - C113 * C252) * C114 +
                (C31958 * C282 - C113 * C271) * C31941) *
                   C106 +
               ((C31958 * C272 - C113 * C253) * C114 +
                (C31958 * C283 - C113 * C273) * C31941) *
                   C107) *
                  C31918 * C242) *
             C31892) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C31958 * C122 - C113 * C115) * C114 +
            (C31958 * C136 - C113 * C123) * C31941) *
               C103 +
           ((C144 - C145) * C114 + (C146 - C147) * C31941) * C104 +
           C176 * C105 + C177 * C106 + C178 * C107) *
              C346 +
          (((C113 * C349 - C31958 * C359) * C114 +
            (C113 * C360 - C31958 * C379) * C31941) *
               C103 +
           ((C113 * C350 - C31958 * C361) * C114 +
            (C113 * C362 - C31958 * C380) * C31941) *
               C104 +
           ((C113 * C351 - C31958 * C363) * C114 +
            (C113 * C364 - C31958 * C381) * C31941) *
               C105 +
           ((C113 * C352 - C31958 * C365) * C114 +
            (C113 * C366 - C31958 * C382) * C31941) *
               C106 +
           ((C113 * C353 - C31958 * C367) * C114 +
            (C113 * C368 - C31958 * C383) * C31941) *
               C107) *
              C347 +
          (((C31958 * C369 - C113 * C354) * C114 +
            (C31958 * C384 - C113 * C370) * C31941) *
               C103 +
           ((C31958 * C371 - C113 * C355) * C114 +
            (C31958 * C385 - C113 * C372) * C31941) *
               C104 +
           ((C31958 * C373 - C113 * C356) * C114 +
            (C31958 * C386 - C113 * C374) * C31941) *
               C105 +
           ((C31958 * C375 - C113 * C357) * C114 +
            (C31958 * C387 - C113 * C376) * C31941) *
               C106 +
           ((C31958 * C377 - C113 * C358) * C114 +
            (C31958 * C388 - C113 * C378) * C31941) *
               C107) *
              C348) *
         C31904 * C31892) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C31958 * C122 - C113 * C115) * C817 +
            (C31958 * C136 - C113 * C123) * C32265 +
            (C31958 * C254 - C113 * C244) * C818 +
            (C31958 * C274 - C113 * C255) * C32253 +
            (C31958 * C264 - C113 * C249) * C819 +
            (C31958 * C279 - C113 * C265) * C32230) *
               C814 +
           ((C144 - C145) * C817 + (C146 - C147) * C32265 +
            (C481 - C480) * C818 + (C483 - C482) * C32253 +
            (C821 - C822) * C819 + (C823 - C824) * C32230) *
               C815 +
           C847 * C32219) *
              C31918 * C31904 * C110 +
          (((C145 - C144) * C817 + (C147 - C146) * C32265 +
            (C480 - C481) * C818 + (C482 - C483) * C32253 +
            (C822 - C821) * C819 + (C824 - C823) * C32230) *
               C814 +
           ((C149 - C148) * C817 + (C151 - C150) * C32265 +
            (C484 - C485) * C818 + (C486 - C487) * C32253 +
            (C830 - C829) * C819 + (C832 - C831) * C32230) *
               C815 +
           ((C153 - C152) * C817 + (C155 - C154) * C32265 +
            (C488 - C489) * C818 + (C490 - C491) * C32253 +
            (C833 - C834) * C819 + (C835 - C836) * C32230) *
               C32219) *
              C31918 * C31904 * C111 +
          (C847 * C814 +
           (C166 * C817 + C167 * C32265 + (C489 - C488) * C818 +
            (C491 - C490) * C32253 + (C834 - C833) * C819 +
            (C836 - C835) * C32230) *
               C815 +
           (C168 * C817 + C169 * C32265 + (C493 - C492) * C818 +
            (C495 - C494) * C32253 + (C31958 * C272 - C113 * C253) * C819 +
            (C31958 * C283 - C113 * C273) * C32230) *
               C32219) *
              C31918 * C31904 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C31958 * C122 - C113 * C115) * C817 +
            (C31958 * C136 - C113 * C123) * C32265 + (C982 - C983) * C818 +
            (C984 - C985) * C32253 + C1004 * C819 + C1005 * C32230) *
               C814 +
           ((C144 - C145) * C817 + (C146 - C147) * C32265 +
            (C481 - C480) * C818 + (C483 - C482) * C32253 + C990 * C819 +
            C991 * C32230) *
               C815 +
           C847 * C32219) *
              C31918 * C240 +
          (((C983 - C982) * C817 + (C985 - C984) * C32265 +
            (C987 - C986) * C818 + (C989 - C988) * C32253 +
            (C992 - C993) * C819 + (C994 - C995) * C32230) *
               C814 +
           ((C480 - C481) * C817 + (C482 - C483) * C32265 +
            (C822 - C821) * C818 + (C824 - C823) * C32253 +
            (C996 - C997) * C819 + (C998 - C999) * C32230) *
               C815 +
           ((C484 - C485) * C817 + (C486 - C487) * C32265 +
            (C830 - C829) * C818 + (C832 - C831) * C32253 +
            (C1000 - C1001) * C819 + (C1002 - C1003) * C32230) *
               C32219) *
              C31918 * C241 +
          ((C1004 * C817 + C1005 * C32265 + (C993 - C992) * C818 +
            (C995 - C994) * C32253 + (C31958 * C969 - C113 * C960) * C819 +
            (C31958 * C978 - C113 * C970) * C32230) *
               C814 +
           (C990 * C817 + C991 * C32265 + (C997 - C996) * C818 +
            (C999 - C998) * C32253 + (C31958 * C971 - C113 * C961) * C819 +
            (C31958 * C979 - C113 * C972) * C32230) *
               C815 +
           (C840 * C817 + C841 * C32265 + (C1001 - C1000) * C818 +
            (C1003 - C1002) * C32253 + (C31958 * C973 - C113 * C962) * C819 +
            (C31958 * C980 - C113 * C974) * C32230) *
               C32219) *
              C31918 * C242) *
         C31892) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C31958 * C122 - C113 * C115) * C817 +
            (C31958 * C136 - C113 * C123) * C32265 + (C982 - C983) * C818 +
            (C984 - C985) * C32253 + C1004 * C819 + C1005 * C32230) *
               C814 +
           ((C144 - C145) * C817 + (C146 - C147) * C32265 +
            (C481 - C480) * C818 + (C483 - C482) * C32253 + C990 * C819 +
            C991 * C32230) *
               C815 +
           C847 * C32219) *
              C346 +
          (((C113 * C349 - C31958 * C359) * C817 +
            (C113 * C360 - C31958 * C379) * C32265 +
            (C113 * C681 - C31958 * C686) * C818 +
            (C113 * C687 - C31958 * C696) * C32253 +
            (C113 * C1115 - C31958 * C1124) * C819 +
            (C113 * C1125 - C31958 * C1142) * C32230) *
               C814 +
           ((C584 - C585) * C817 + (C586 - C587) * C32265 +
            (C113 * C682 - C31958 * C688) * C818 +
            (C113 * C689 - C31958 * C697) * C32253 +
            (C113 * C1116 - C31958 * C1126) * C819 +
            (C113 * C1127 - C31958 * C1143) * C32230) *
               C815 +
           ((C588 - C589) * C817 + (C590 - C591) * C32265 +
            (C113 * C683 - C31958 * C690) * C818 +
            (C113 * C691 - C31958 * C698) * C32253 +
            (C113 * C1117 - C31958 * C1128) * C819 +
            (C113 * C1129 - C31958 * C1144) * C32230) *
               C32219) *
              C347 +
          (((C31958 * C369 - C113 * C354) * C817 +
            (C31958 * C384 - C113 * C370) * C32265 +
            (C31958 * C1130 - C113 * C1118) * C818 +
            (C31958 * C1145 - C113 * C1131) * C32253 +
            (C31958 * C1132 - C113 * C1119) * C819 +
            (C31958 * C1146 - C113 * C1133) * C32230) *
               C814 +
           ((C31958 * C371 - C113 * C355) * C817 +
            (C31958 * C385 - C113 * C372) * C32265 +
            (C31958 * C1134 - C113 * C1120) * C818 +
            (C31958 * C1147 - C113 * C1135) * C32253 +
            (C31958 * C1136 - C113 * C1121) * C819 +
            (C31958 * C1148 - C113 * C1137) * C32230) *
               C815 +
           ((C31958 * C373 - C113 * C356) * C817 +
            (C31958 * C386 - C113 * C374) * C32265 +
            (C31958 * C1138 - C113 * C1122) * C818 +
            (C31958 * C1149 - C113 * C1139) * C32253 +
            (C31958 * C1140 - C113 * C1123) * C819 +
            (C31958 * C1150 - C113 * C1141) * C32230) *
               C32219) *
              C348) *
         C31904 * C31892) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C31958 * C122 - C113 * C115) * C5281 +
            (C31958 * C136 - C113 * C123) * C5275 + (C982 - C983) * C5282 +
            (C984 - C985) * C5276 + C1004 * C5283 + C1005 * C32230) *
               C32262 +
           ((C144 - C145) * C5281 + (C146 - C147) * C5275 + C1302 * C5282 +
            C1303 * C5276 + C990 * C5283 + C991 * C32230) *
               C32249 +
           C5295 * C32219) *
              C31918 * C31904 * C110 +
          (((C145 - C144) * C5281 + (C147 - C146) * C5275 + C1304 * C5282 +
            C1305 * C5276 + C1306 * C5283 + C1307 * C32230) *
               C32262 +
           ((C149 - C148) * C5281 + (C151 - C150) * C5275 + C1308 * C5282 +
            C1309 * C5276 + C1310 * C5283 + C1311 * C32230) *
               C32249 +
           ((C153 - C152) * C5281 + (C155 - C154) * C5275 + C3007 * C5282 +
            C3008 * C5276 + (C833 - C834) * C5283 + (C835 - C836) * C32230) *
               C32219) *
              C31918 * C31904 * C111 +
          (C5295 * C32262 +
           (C166 * C5281 + C167 * C5275 + C2671 * C5282 + C2672 * C5276 +
            (C834 - C833) * C5283 + (C836 - C835) * C32230) *
               C32249 +
           (C168 * C5281 + C169 * C5275 + (C493 - C492) * C5282 +
            (C495 - C494) * C5276 + (C31958 * C272 - C113 * C253) * C5283 +
            (C31958 * C283 - C113 * C273) * C32230) *
               C32219) *
              C31918 * C31904 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C31958 * C122 - C113 * C115) * C5281 +
            (C31958 * C136 - C113 * C123) * C5275 + (C982 - C983) * C5282 +
            (C984 - C985) * C5276 + C1004 * C5283 + C1005 * C32230) *
               C32262 +
           ((C144 - C145) * C5281 + (C146 - C147) * C5275 + C1302 * C5282 +
            C1303 * C5276 + C990 * C5283 + C991 * C32230) *
               C32249 +
           C5295 * C32219) *
              C31918 * C240 +
          (((C983 - C982) * C5281 + (C985 - C984) * C5275 +
            (C987 - C986) * C5282 + (C989 - C988) * C5276 +
            (C992 - C993) * C5283 + (C994 - C995) * C32230) *
               C32262 +
           (C1304 * C5281 + C1305 * C5275 + C1306 * C5282 + C1307 * C5276 +
            (C996 - C997) * C5283 + (C998 - C999) * C32230) *
               C32249 +
           (C1308 * C5281 + C1309 * C5275 + C1310 * C5282 + C1311 * C5276 +
            (C1000 - C1001) * C5283 + (C1002 - C1003) * C32230) *
               C32219) *
              C31918 * C241 +
          ((C1004 * C5281 + C1005 * C5275 + (C993 - C992) * C5282 +
            (C995 - C994) * C5276 + (C31958 * C969 - C113 * C960) * C5283 +
            (C31958 * C978 - C113 * C970) * C32230) *
               C32262 +
           (C990 * C5281 + C991 * C5275 + (C997 - C996) * C5282 +
            (C999 - C998) * C5276 + (C31958 * C971 - C113 * C961) * C5283 +
            (C31958 * C979 - C113 * C972) * C32230) *
               C32249 +
           (C840 * C5281 + C841 * C5275 + (C1001 - C1000) * C5282 +
            (C1003 - C1002) * C5276 + (C31958 * C973 - C113 * C962) * C5283 +
            (C31958 * C980 - C113 * C974) * C32230) *
               C32219) *
              C31918 * C242) *
         C31892) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C31958 * C122 - C113 * C115) * C5281 +
            (C31958 * C136 - C113 * C123) * C5275 + (C982 - C983) * C5282 +
            (C984 - C985) * C5276 + C1004 * C5283 + C1005 * C32230) *
               C32262 +
           ((C144 - C145) * C5281 + (C146 - C147) * C5275 + C1302 * C5282 +
            C1303 * C5276 + C990 * C5283 + C991 * C32230) *
               C32249 +
           C5295 * C32219) *
              C346 +
          (((C113 * C349 - C31958 * C359) * C5281 +
            (C113 * C360 - C31958 * C379) * C5275 + (C1636 - C1637) * C5282 +
            (C1638 - C1639) * C5276 + (C1640 - C1641) * C5283 +
            (C1642 - C1643) * C32230) *
               C32262 +
           ((C584 - C585) * C5281 + (C586 - C587) * C5275 +
            (C1462 - C1463) * C5282 + (C1464 - C1465) * C5276 +
            (C1466 - C1467) * C5283 + (C1468 - C1469) * C32230) *
               C32249 +
           ((C588 - C589) * C5281 + (C590 - C591) * C5275 +
            (C1470 - C1471) * C5282 + (C1472 - C1473) * C5276 +
            (C1474 - C1475) * C5283 + (C1476 - C1477) * C32230) *
               C32219) *
              C347 +
          (((C31958 * C369 - C113 * C354) * C5281 +
            (C31958 * C384 - C113 * C370) * C5275 +
            (C31958 * C1130 - C113 * C1118) * C5282 +
            (C31958 * C1145 - C113 * C1131) * C5276 +
            (C31958 * C1132 - C113 * C1119) * C5283 +
            (C31958 * C1146 - C113 * C1133) * C32230) *
               C32262 +
           ((C31958 * C371 - C113 * C355) * C5281 +
            (C31958 * C385 - C113 * C372) * C5275 +
            (C31958 * C1134 - C113 * C1120) * C5282 +
            (C31958 * C1147 - C113 * C1135) * C5276 +
            (C31958 * C1136 - C113 * C1121) * C5283 +
            (C31958 * C1148 - C113 * C1137) * C32230) *
               C32249 +
           ((C31958 * C373 - C113 * C356) * C5281 +
            (C31958 * C386 - C113 * C374) * C5275 +
            (C31958 * C1138 - C113 * C1122) * C5282 +
            (C31958 * C1149 - C113 * C1139) * C5276 +
            (C31958 * C1140 - C113 * C1123) * C5283 +
            (C31958 * C1150 - C113 * C1141) * C32230) *
               C32219) *
              C348) *
         C31904 * C31892) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C31958 * C122 - C113 * C115) * C6021 +
           (C31958 * C136 - C113 * C123) * C6015 + (C982 - C983) * C6022 +
           (C984 - C985) * C6016 + C1004 * C6023 + C1005 * C6017 +
           (C993 - C992) * C6024 + (C995 - C994) * C6018 +
           (C31958 * C969 - C113 * C960) * C6025 +
           (C31958 * C978 - C113 * C970) * C6019) *
              C31859 * C31918 * C31904 * C110 +
          ((C145 - C144) * C6021 + (C147 - C146) * C6015 + C1304 * C6022 +
           C1305 * C6016 + C1306 * C6023 + C1307 * C6017 +
           (C996 - C997) * C6024 + (C998 - C999) * C6018 +
           (C113 * C961 - C31958 * C971) * C6025 +
           (C113 * C972 - C31958 * C979) * C6019) *
              C31859 * C31918 * C31904 * C111 +
          (C164 * C6021 + C165 * C6015 + C827 * C6022 + C828 * C6016 +
           C840 * C6023 + C841 * C6017 + (C1001 - C1000) * C6024 +
           (C1003 - C1002) * C6018 + (C31958 * C973 - C113 * C962) * C6025 +
           (C31958 * C980 - C113 * C974) * C6019) *
              C31859 * C31918 * C31904 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C31958 * C122 - C113 * C115) * C6021 +
           (C31958 * C136 - C113 * C123) * C6015 + (C982 - C983) * C6022 +
           (C984 - C985) * C6016 + C1004 * C6023 + C1005 * C6017 +
           C6097 * C6024 + C6098 * C6018 + C6107 * C6025 + C6108 * C6019) *
              C31859 * C31918 * C240 +
          ((C983 - C982) * C6021 + (C985 - C984) * C6015 +
           (C987 - C986) * C6022 + (C989 - C988) * C6016 +
           (C992 - C993) * C6023 + (C994 - C995) * C6017 +
           (C6100 - C6099) * C6024 + (C6102 - C6101) * C6018 +
           (C6103 - C6104) * C6025 + (C6105 - C6106) * C6019) *
              C31859 * C31918 * C241 +
          (C1004 * C6021 + C1005 * C6015 + C6097 * C6022 + C6098 * C6016 +
           C6107 * C6023 + C6108 * C6017 + (C6104 - C6103) * C6024 +
           (C6106 - C6105) * C6018 + (C31958 * C6092 - C113 * C6089) * C6025 +
           (C31958 * C6095 - C113 * C6093) * C6019) *
              C31859 * C31918 * C242) *
         C31892) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C31958 * C122 - C113 * C115) * C6021 +
           (C31958 * C136 - C113 * C123) * C6015 + (C982 - C983) * C6022 +
           (C984 - C985) * C6016 + C1004 * C6023 + C1005 * C6017 +
           C6097 * C6024 + C6098 * C6018 + C6107 * C6025 + C6108 * C6019) *
              C31859 * C346 +
          ((C113 * C349 - C31958 * C359) * C6021 +
           (C113 * C360 - C31958 * C379) * C6015 + (C1636 - C1637) * C6022 +
           (C1638 - C1639) * C6016 + (C1640 - C1641) * C6023 +
           (C1642 - C1643) * C6017 + (C113 * C1623 - C31958 * C1626) * C6024 +
           (C113 * C1627 - C31958 * C1632) * C6018 +
           (C113 * C6170 - C31958 * C6173) * C6025 +
           (C113 * C6174 - C31958 * C6179) * C6019) *
              C31859 * C347 +
          ((C31958 * C369 - C113 * C354) * C6021 +
           (C31958 * C384 - C113 * C370) * C6015 +
           (C31958 * C1130 - C113 * C1118) * C6022 +
           (C31958 * C1145 - C113 * C1131) * C6016 +
           (C31958 * C1132 - C113 * C1119) * C6023 +
           (C31958 * C1146 - C113 * C1133) * C6017 +
           (C31958 * C6175 - C113 * C6171) * C6024 +
           (C31958 * C6180 - C113 * C6176) * C6018 +
           (C31958 * C6177 - C113 * C6172) * C6025 +
           (C31958 * C6181 - C113 * C6178) * C6019) *
              C31859 * C348) *
         C31904 * C31892) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C9914 * C122 - C9917 * C115 + C9915 * C359 - C9918 * C349 +
             C32233 * C369 - C9919 * C354) *
                C114 +
            (C9914 * C136 - C9917 * C123 + C9915 * C379 - C9918 * C360 +
             C32233 * C384 - C9919 * C370) *
                C31941) *
               C32262 +
           ((C9921 - C9922 + C9923 - C9924 + C9925 - C9926) * C114 +
            (C9927 - C9928 + C9929 - C9930 + C9931 - C9932) * C31941) *
               C32249 +
           C9969 * C32219) *
              C31918 * C31904 * C110 +
          (((C9922 - C9921 + C9924 - C9923 + C9926 - C9925) * C114 +
            (C9928 - C9927 + C9930 - C9929 + C9932 - C9931) * C31941) *
               C32262 +
           ((C9934 - C9933 + C9936 - C9935 + C9938 - C9937) * C114 +
            (C9940 - C9939 + C9942 - C9941 + C9944 - C9943) * C31941) *
               C32249 +
           ((C9945 - C9946 + C9947 - C9948 + C9949 - C9950) * C114 +
            (C9951 - C9952 + C9953 - C9954 + C9955 - C9956) * C31941) *
               C32219) *
              C31918 * C31904 * C111 +
          (C9969 * C32262 +
           ((C9946 - C9945 + C9948 - C9947 + C9950 - C9949) * C114 +
            (C9952 - C9951 + C9954 - C9953 + C9956 - C9955) * C31941) *
               C32249 +
           ((C9914 * C130 - C9917 * C119 + C9915 * C367 - C9918 * C353 +
             C32233 * C377 - C9919 * C358) *
                C114 +
            (C9914 * C140 - C9917 * C131 + C9915 * C383 - C9918 * C368 +
             C32233 * C388 - C9919 * C378) *
                C31941) *
               C32219) *
              C31918 * C31904 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C9914 * C122 - C9917 * C115 + C9915 * C359 - C9918 * C349 +
             C32233 * C369 - C9919 * C354) *
                C114 +
            (C9914 * C136 - C9917 * C123 + C9915 * C379 - C9918 * C360 +
             C32233 * C384 - C9919 * C370) *
                C31941) *
               C32262 +
           ((C9921 - C9922 + C9923 - C9924 + C9925 - C9926) * C114 +
            (C9927 - C9928 + C9929 - C9930 + C9931 - C9932) * C31941) *
               C32249 +
           C9969 * C32219) *
              C31918 * C240 +
          (((C9917 * C244 - C9914 * C254 + C9918 * C681 - C9915 * C686 +
             C9919 * C1118 - C32233 * C1130) *
                C114 +
            (C9917 * C255 - C9914 * C274 + C9918 * C687 - C9915 * C696 +
             C9919 * C1131 - C32233 * C1145) *
                C31941) *
               C32262 +
           ((C9917 * C245 - C9914 * C256 + C9918 * C682 - C9915 * C688 +
             C9919 * C1120 - C32233 * C1134) *
                C114 +
            (C9917 * C257 - C9914 * C275 + C9918 * C689 - C9915 * C697 +
             C9919 * C1135 - C32233 * C1147) *
                C31941) *
               C32249 +
           ((C9917 * C246 - C9914 * C258 + C9918 * C683 - C9915 * C690 +
             C9919 * C1122 - C32233 * C1138) *
                C114 +
            (C9917 * C259 - C9914 * C276 + C9918 * C691 - C9915 * C698 +
             C9919 * C1139 - C32233 * C1149) *
                C31941) *
               C32219) *
              C31918 * C241 +
          (((C9914 * C264 - C9917 * C249 + C9915 * C1124 - C9918 * C1115 +
             C32233 * C1132 - C9919 * C1119) *
                C114 +
            (C9914 * C279 - C9917 * C265 + C9915 * C1142 - C9918 * C1125 +
             C32233 * C1146 - C9919 * C1133) *
                C31941) *
               C32262 +
           ((C9914 * C266 - C9917 * C250 + C9915 * C1126 - C9918 * C1116 +
             C32233 * C1136 - C9919 * C1121) *
                C114 +
            (C9914 * C280 - C9917 * C267 + C9915 * C1143 - C9918 * C1127 +
             C32233 * C1148 - C9919 * C1137) *
                C31941) *
               C32249 +
           ((C9914 * C268 - C9917 * C251 + C9915 * C1128 - C9918 * C1117 +
             C32233 * C1140 - C9919 * C1123) *
                C114 +
            (C9914 * C281 - C9917 * C269 + C9915 * C1144 - C9918 * C1129 +
             C32233 * C1150 - C9919 * C1141) *
                C31941) *
               C32219) *
              C31918 * C242) *
         C31892) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C9914 * C122 - C9917 * C115 + C9915 * C359 - C9918 * C349 +
             C32233 * C369 - C9919 * C354) *
                C114 +
            (C9914 * C136 - C9917 * C123 + C9915 * C379 - C9918 * C360 +
             C32233 * C384 - C9919 * C370) *
                C31941) *
               C32262 +
           ((C9921 - C9922 + C9923 - C9924 + C9925 - C9926) * C114 +
            (C9927 - C9928 + C9929 - C9930 + C9931 - C9932) * C31941) *
               C32249 +
           C9969 * C32219) *
              C346 +
          (((C9917 * C349 - C9914 * C359 + C9918 * C354 - C9915 * C369 +
             C9919 * C2028 - C32233 * C2034) *
                C114 +
            (C9917 * C360 - C9914 * C379 + C9918 * C370 - C9915 * C384 +
             C9919 * C2035 - C32233 * C2046) *
                C31941) *
               C32262 +
           ((C9917 * C350 - C9914 * C361 + C9918 * C355 - C9915 * C371 +
             C9919 * C2029 - C32233 * C2036) *
                C114 +
            (C9917 * C362 - C9914 * C380 + C9918 * C372 - C9915 * C385 +
             C9919 * C2037 - C32233 * C2047) *
                C31941) *
               C32249 +
           ((C9917 * C351 - C9914 * C363 + C9918 * C356 - C9915 * C373 +
             C9919 * C2030 - C32233 * C2038) *
                C114 +
            (C9917 * C364 - C9914 * C381 + C9918 * C374 - C9915 * C386 +
             C9919 * C2039 - C32233 * C2048) *
                C31941) *
               C32219) *
              C347 +
          (((C9914 * C369 - C9917 * C354 + C9915 * C2034 - C9918 * C2028 +
             C32233 * C2040 - C9919 * C2031) *
                C114 +
            (C9914 * C384 - C9917 * C370 + C9915 * C2046 - C9918 * C2035 +
             C32233 * C2049 - C9919 * C2041) *
                C31941) *
               C32262 +
           ((C9914 * C371 - C9917 * C355 + C9915 * C2036 - C9918 * C2029 +
             C32233 * C2042 - C9919 * C2032) *
                C114 +
            (C9914 * C385 - C9917 * C372 + C9915 * C2047 - C9918 * C2037 +
             C32233 * C2050 - C9919 * C2043) *
                C31941) *
               C32249 +
           ((C9914 * C373 - C9917 * C356 + C9915 * C2038 - C9918 * C2030 +
             C32233 * C2044 - C9919 * C2033) *
                C114 +
            (C9914 * C386 - C9917 * C374 + C9915 * C2048 - C9918 * C2039 +
             C32233 * C2051 - C9919 * C2045) *
                C31941) *
               C32219) *
              C348) *
         C31904 * C31892) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C9914 * C122 - C9917 * C115 + C9915 * C359 - C9918 * C349 +
            C32233 * C369 - C9919 * C354) *
               C817 +
           (C9914 * C136 - C9917 * C123 + C9915 * C379 - C9918 * C360 +
            C32233 * C384 - C9919 * C370) *
               C32265 +
           (C9914 * C254 - C9917 * C244 + C9915 * C686 - C9918 * C681 +
            C32233 * C1130 - C9919 * C1118) *
               C818 +
           (C9914 * C274 - C9917 * C255 + C9915 * C696 - C9918 * C687 +
            C32233 * C1145 - C9919 * C1131) *
               C32253 +
           (C9914 * C264 - C9917 * C249 + C9915 * C1124 - C9918 * C1115 +
            C32233 * C1132 - C9919 * C1119) *
               C819 +
           (C9914 * C279 - C9917 * C265 + C9915 * C1142 - C9918 * C1125 +
            C32233 * C1146 - C9919 * C1133) *
               C32230) *
              C31859 * C31918 * C31904 * C110 +
          ((C9922 - C9921 + C9924 - C9923 + C9926 - C9925) * C817 +
           (C9928 - C9927 + C9930 - C9929 + C9932 - C9931) * C32265 +
           (C10336 - C10337 + C10338 - C10339 + C10340 - C10341) * C818 +
           (C10342 - C10343 + C10344 - C10345 + C10346 - C10347) * C32253 +
           (C9917 * C250 - C9914 * C266 + C9918 * C1116 - C9915 * C1126 +
            C9919 * C1121 - C32233 * C1136) *
               C819 +
           (C9917 * C267 - C9914 * C280 + C9918 * C1127 - C9915 * C1143 +
            C9919 * C1137 - C32233 * C1148) *
               C32230) *
              C31859 * C31918 * C31904 * C111 +
          (C9965 * C817 + C9966 * C32265 +
           (C10349 - C10348 + C10351 - C10350 + C10353 - C10352) * C818 +
           (C10355 - C10354 + C10357 - C10356 + C10359 - C10358) * C32253 +
           (C9914 * C268 - C9917 * C251 + C9915 * C1128 - C9918 * C1117 +
            C32233 * C1140 - C9919 * C1123) *
               C819 +
           (C9914 * C281 - C9917 * C269 + C9915 * C1144 - C9918 * C1129 +
            C32233 * C1150 - C9919 * C1141) *
               C32230) *
              C31859 * C31918 * C31904 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C9914 * C122 - C9917 * C115 + C9915 * C359 - C9918 * C349 +
            C32233 * C369 - C9919 * C354) *
               C817 +
           (C9914 * C136 - C9917 * C123 + C9915 * C379 - C9918 * C360 +
            C32233 * C384 - C9919 * C370) *
               C32265 +
           (C10896 - C10897 + C10898 - C10899 + C10900 - C10901) * C818 +
           (C10902 - C10903 + C10904 - C10905 + C10906 - C10907) * C32253 +
           C10940 * C819 + C10941 * C32230) *
              C31859 * C31918 * C240 +
          ((C10897 - C10896 + C10899 - C10898 + C10901 - C10900) * C817 +
           (C10903 - C10902 + C10905 - C10904 + C10907 - C10906) * C32265 +
           (C10909 - C10908 + C10911 - C10910 + C10913 - C10912) * C818 +
           (C10915 - C10914 + C10917 - C10916 + C10919 - C10918) * C32253 +
           (C10920 - C10921 + C10922 - C10923 + C10924 - C10925) * C819 +
           (C10926 - C10927 + C10928 - C10929 + C10930 - C10931) * C32230) *
              C31859 * C31918 * C241 +
          (C10940 * C817 + C10941 * C32265 +
           (C10921 - C10920 + C10923 - C10922 + C10925 - C10924) * C818 +
           (C10927 - C10926 + C10929 - C10928 + C10931 - C10930) * C32253 +
           (C9914 * C969 - C9917 * C960 + C9915 * C6173 - C9918 * C6170 +
            C32233 * C6177 - C9919 * C6172) *
               C819 +
           (C9914 * C978 - C9917 * C970 + C9915 * C6179 - C9918 * C6174 +
            C32233 * C6181 - C9919 * C6178) *
               C32230) *
              C31859 * C31918 * C242) *
         C31892) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C9914 * C122 - C9917 * C115 + C9915 * C359 - C9918 * C349 +
            C32233 * C369 - C9919 * C354) *
               C817 +
           (C9914 * C136 - C9917 * C123 + C9915 * C379 - C9918 * C360 +
            C32233 * C384 - C9919 * C370) *
               C32265 +
           (C10896 - C10897 + C10898 - C10899 + C10900 - C10901) * C818 +
           (C10902 - C10903 + C10904 - C10905 + C10906 - C10907) * C32253 +
           C10940 * C819 + C10941 * C32230) *
              C31859 * C346 +
          ((C9917 * C349 - C9914 * C359 + C9918 * C354 - C9915 * C369 +
            C9919 * C2028 - C32233 * C2034) *
               C817 +
           (C9917 * C360 - C9914 * C379 + C9918 * C370 - C9915 * C384 +
            C9919 * C2035 - C32233 * C2046) *
               C32265 +
           (C9917 * C681 - C9914 * C686 + C9918 * C1118 - C9915 * C1130 +
            C9919 * C2546 - C32233 * C2549) *
               C818 +
           (C9917 * C687 - C9914 * C696 + C9918 * C1131 - C9915 * C1145 +
            C9919 * C2550 - C32233 * C2555) *
               C32253 +
           (C9917 * C1115 - C9914 * C1124 + C9918 * C1119 - C9915 * C1132 +
            C9919 * C6828 - C32233 * C6831) *
               C819 +
           (C9917 * C1125 - C9914 * C1142 + C9918 * C1133 - C9915 * C1146 +
            C9919 * C6832 - C32233 * C6837) *
               C32230) *
              C31859 * C347 +
          ((C9914 * C369 - C9917 * C354 + C9915 * C2034 - C9918 * C2028 +
            C32233 * C2040 - C9919 * C2031) *
               C817 +
           (C9914 * C384 - C9917 * C370 + C9915 * C2046 - C9918 * C2035 +
            C32233 * C2049 - C9919 * C2041) *
               C32265 +
           (C9914 * C1130 - C9917 * C1118 + C9915 * C2549 - C9918 * C2546 +
            C32233 * C6833 - C9919 * C6829) *
               C818 +
           (C9914 * C1145 - C9917 * C1131 + C9915 * C2555 - C9918 * C2550 +
            C32233 * C6838 - C9919 * C6834) *
               C32253 +
           (C9914 * C1132 - C9917 * C1119 + C9915 * C6831 - C9918 * C6828 +
            C32233 * C6835 - C9919 * C6830) *
               C819 +
           (C9914 * C1146 - C9917 * C1133 + C9915 * C6837 - C9918 * C6832 +
            C32233 * C6839 - C9919 * C6836) *
               C32230) *
              C31859 * C348) *
         C31904 * C31892) /
            (p * q * std::sqrt(p + q));
    d2ee[73] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C31958 * C122 - C113 * C115) * C817 +
             (C31958 * C136 - C113 * C123) * C32265 + (C982 - C983) * C818 +
             (C984 - C985) * C32253 + C1004 * C819 + C1005 * C32230) *
                C814 +
            ((C144 - C145) * C817 + (C146 - C147) * C32265 + C1302 * C818 +
             C1303 * C32253 + C990 * C819 + C991 * C32230) *
                C815 +
            C847 * C32219) *
               C577 +
           (((C113 * C349 - C31958 * C359) * C817 +
             (C113 * C360 - C31958 * C379) * C32265 +
             (C113 * C681 - C31958 * C686) * C818 +
             (C113 * C687 - C31958 * C696) * C32253 +
             (C113 * C1115 - C31958 * C1124) * C819 +
             (C113 * C1125 - C31958 * C1142) * C32230) *
                C814 +
            ((C584 - C585) * C817 + (C586 - C587) * C32265 +
             (C1462 - C1463) * C818 + (C1464 - C1465) * C32253 +
             (C1466 - C1467) * C819 + (C1468 - C1469) * C32230) *
                C815 +
            ((C588 - C589) * C817 + (C590 - C591) * C32265 +
             (C1470 - C1471) * C818 + (C1472 - C1473) * C32253 +
             (C1474 - C1475) * C819 + (C1476 - C1477) * C32230) *
                C32219) *
               C578) *
              C31904 * C473 +
          ((((C145 - C144) * C817 + (C147 - C146) * C32265 + C1304 * C818 +
             C1305 * C32253 + C1306 * C819 + C1307 * C32230) *
                C814 +
            ((C149 - C148) * C817 + (C151 - C150) * C32265 + C1308 * C818 +
             C1309 * C32253 + C1310 * C819 + C1311 * C32230) *
                C815 +
            ((C153 - C152) * C817 + (C155 - C154) * C32265 +
             (C488 - C489) * C818 + (C490 - C491) * C32253 +
             (C833 - C834) * C819 + (C835 - C836) * C32230) *
                C32219) *
               C577 +
           (((C585 - C584) * C817 + (C587 - C586) * C32265 +
             (C1463 - C1462) * C818 + (C1465 - C1464) * C32253 +
             (C1467 - C1466) * C819 + (C1469 - C1468) * C32230) *
                C814 +
            ((C589 - C588) * C817 + (C591 - C590) * C32265 +
             (C1471 - C1470) * C818 + (C1473 - C1472) * C32253 +
             (C1475 - C1474) * C819 + (C1477 - C1476) * C32230) *
                C815 +
            ((C593 - C592) * C817 + (C595 - C594) * C32265 +
             (C31958 * C692 - C113 * C684) * C818 +
             (C31958 * C699 - C113 * C693) * C32253 +
             (C31958 * C1458 - C113 * C1457) * C819 +
             (C31958 * C1460 - C113 * C1459) * C32230) *
                C32219) *
               C578) *
              C31904 * C474)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C31958 * C122 - C113 * C115) * C114 +
             (C31958 * C136 - C113 * C123) * C31941) *
                C103 +
            ((C144 - C145) * C114 + (C146 - C147) * C31941) * C104 +
            C176 * C105 + C177 * C106 + C178 * C107) *
               C577 +
           (((C113 * C349 - C31958 * C359) * C114 +
             (C113 * C360 - C31958 * C379) * C31941) *
                C103 +
            ((C584 - C585) * C114 + (C586 - C587) * C31941) * C104 +
            ((C588 - C589) * C114 + (C590 - C591) * C31941) * C105 +
            ((C592 - C593) * C114 + (C594 - C595) * C31941) * C106 +
            ((C596 - C597) * C114 + (C598 - C599) * C31941) * C107) *
               C578) *
              C31904 * C473 +
          ((((C145 - C144) * C114 + (C147 - C146) * C31941) * C103 +
            ((C149 - C148) * C114 + (C151 - C150) * C31941) * C104 +
            ((C153 - C152) * C114 + (C155 - C154) * C31941) * C105 +
            ((C157 - C156) * C114 + (C159 - C158) * C31941) * C106 +
            ((C160 - C161) * C114 + (C162 - C163) * C31941) * C107) *
               C577 +
           (((C585 - C584) * C114 + (C587 - C586) * C31941) * C103 +
            ((C589 - C588) * C114 + (C591 - C590) * C31941) * C104 +
            ((C593 - C592) * C114 + (C595 - C594) * C31941) * C105 +
            ((C597 - C596) * C114 + (C599 - C598) * C31941) * C106 +
            ((C31958 * C580 - C113 * C579) * C114 +
             (C31958 * C582 - C113 * C581) * C31941) *
                C107) *
               C578) *
              C31904 * C474)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C31958 * C122 - C113 * C115) * C5281 +
             (C31958 * C136 - C113 * C123) * C5275 + (C982 - C983) * C5282 +
             (C984 - C985) * C5276 + C1004 * C5283 + C1005 * C32230) *
                C32262 +
            ((C144 - C145) * C5281 + (C146 - C147) * C5275 + C1302 * C5282 +
             C1303 * C5276 + C990 * C5283 + C991 * C32230) *
                C32249 +
            C5295 * C32219) *
               C577 +
           (((C113 * C349 - C31958 * C359) * C5281 +
             (C113 * C360 - C31958 * C379) * C5275 + (C1636 - C1637) * C5282 +
             (C1638 - C1639) * C5276 + (C1640 - C1641) * C5283 +
             (C1642 - C1643) * C32230) *
                C32262 +
            ((C584 - C585) * C5281 + (C586 - C587) * C5275 +
             (C1462 - C1463) * C5282 + (C1464 - C1465) * C5276 +
             (C1466 - C1467) * C5283 + (C1468 - C1469) * C32230) *
                C32249 +
            ((C588 - C589) * C5281 + (C590 - C591) * C5275 +
             (C1470 - C1471) * C5282 + (C1472 - C1473) * C5276 +
             (C1474 - C1475) * C5283 + (C1476 - C1477) * C32230) *
                C32219) *
               C578) *
              C31904 * C473 +
          ((((C145 - C144) * C5281 + (C147 - C146) * C5275 + C1304 * C5282 +
             C1305 * C5276 + C1306 * C5283 + C1307 * C32230) *
                C32262 +
            ((C149 - C148) * C5281 + (C151 - C150) * C5275 + C1308 * C5282 +
             C1309 * C5276 + C1310 * C5283 + C1311 * C32230) *
                C32249 +
            ((C153 - C152) * C5281 + (C155 - C154) * C5275 + C3007 * C5282 +
             C3008 * C5276 + (C833 - C834) * C5283 + (C835 - C836) * C32230) *
                C32219) *
               C577 +
           (((C585 - C584) * C5281 + (C587 - C586) * C5275 +
             (C1463 - C1462) * C5282 + (C1465 - C1464) * C5276 +
             (C1467 - C1466) * C5283 + (C1469 - C1468) * C32230) *
                C32262 +
            ((C589 - C588) * C5281 + (C591 - C590) * C5275 +
             (C1471 - C1470) * C5282 + (C1473 - C1472) * C5276 +
             (C1475 - C1474) * C5283 + (C1477 - C1476) * C32230) *
                C32249 +
            ((C593 - C592) * C5281 + (C595 - C594) * C5275 +
             (C3140 - C3139) * C5282 + (C3142 - C3141) * C5276 +
             (C31958 * C1458 - C113 * C1457) * C5283 +
             (C31958 * C1460 - C113 * C1459) * C32230) *
                C32219) *
               C578) *
              C31904 * C474)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31958 * C122 - C113 * C115) * C6021 +
            (C31958 * C136 - C113 * C123) * C6015 + (C982 - C983) * C6022 +
            (C984 - C985) * C6016 + C1004 * C6023 + C1005 * C6017 +
            C6097 * C6024 + C6098 * C6018 + C6107 * C6025 + C6108 * C6019) *
               C31859 * C577 +
           ((C113 * C349 - C31958 * C359) * C6021 +
            (C113 * C360 - C31958 * C379) * C6015 + (C1636 - C1637) * C6022 +
            (C1638 - C1639) * C6016 + (C1640 - C1641) * C6023 +
            (C1642 - C1643) * C6017 + (C113 * C1623 - C31958 * C1626) * C6024 +
            (C113 * C1627 - C31958 * C1632) * C6018 +
            (C113 * C6170 - C31958 * C6173) * C6025 +
            (C113 * C6174 - C31958 * C6179) * C6019) *
               C31859 * C578) *
              C31904 * C473 +
          (((C145 - C144) * C6021 + (C147 - C146) * C6015 + C1304 * C6022 +
            C1305 * C6016 + C1306 * C6023 + C1307 * C6017 +
            (C996 - C997) * C6024 + (C998 - C999) * C6018 +
            (C6269 - C6270) * C6025 + (C6271 - C6272) * C6019) *
               C31859 * C577 +
           ((C585 - C584) * C6021 + (C587 - C586) * C6015 +
            (C1463 - C1462) * C6022 + (C1465 - C1464) * C6016 +
            (C1467 - C1466) * C6023 + (C1469 - C1468) * C6017 +
            (C31958 * C1628 - C113 * C1624) * C6024 +
            (C31958 * C1633 - C113 * C1629) * C6018 +
            (C31958 * C6355 - C113 * C6354) * C6025 +
            (C31958 * C6357 - C113 * C6356) * C6019) *
               C31859 * C578) *
              C31904 * C474)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C9914 * C122 - C9917 * C115 + C9915 * C359 - C9918 * C349 +
              C32233 * C369 - C9919 * C354) *
                 C114 +
             (C9914 * C136 - C9917 * C123 + C9915 * C379 - C9918 * C360 +
              C32233 * C384 - C9919 * C370) *
                 C31941) *
                C32262 +
            ((C9921 - C9922 + C9923 - C9924 + C9925 - C9926) * C114 +
             (C9927 - C9928 + C9929 - C9930 + C9931 - C9932) * C31941) *
                C32249 +
            C9969 * C32219) *
               C577 +
           (((C9917 * C349 - C9914 * C359 + C9918 * C354 - C9915 * C369 +
              C9919 * C2028 - C32233 * C2034) *
                 C114 +
             (C9917 * C360 - C9914 * C379 + C9918 * C370 - C9915 * C384 +
              C9919 * C2035 - C32233 * C2046) *
                 C31941) *
                C32262 +
            ((C10506 - C10507 + C10508 - C10509 + C10510 - C10511) * C114 +
             (C10512 - C10513 + C10514 - C10515 + C10516 - C10517) * C31941) *
                C32249 +
            ((C10518 - C10519 + C10520 - C10521 + C10522 - C10523) * C114 +
             (C10524 - C10525 + C10526 - C10527 + C10528 - C10529) * C31941) *
                C32219) *
               C578) *
              C31904 * C473 +
          ((((C9922 - C9921 + C9924 - C9923 + C9926 - C9925) * C114 +
             (C9928 - C9927 + C9930 - C9929 + C9932 - C9931) * C31941) *
                C32262 +
            ((C9934 - C9933 + C9936 - C9935 + C9938 - C9937) * C114 +
             (C9940 - C9939 + C9942 - C9941 + C9944 - C9943) * C31941) *
                C32249 +
            ((C9945 - C9946 + C9947 - C9948 + C9949 - C9950) * C114 +
             (C9951 - C9952 + C9953 - C9954 + C9955 - C9956) * C31941) *
                C32219) *
               C577 +
           (((C10507 - C10506 + C10509 - C10508 + C10511 - C10510) * C114 +
             (C10513 - C10512 + C10515 - C10514 + C10517 - C10516) * C31941) *
                C32262 +
            ((C10519 - C10518 + C10521 - C10520 + C10523 - C10522) * C114 +
             (C10525 - C10524 + C10527 - C10526 + C10529 - C10528) * C31941) *
                C32249 +
            ((C9914 * C365 - C9917 * C352 + C9915 * C375 - C9918 * C357 +
              C32233 * C2373 - C9919 * C2372) *
                 C114 +
             (C9914 * C382 - C9917 * C366 + C9915 * C387 - C9918 * C376 +
              C32233 * C2375 - C9919 * C2374) *
                 C31941) *
                C32219) *
               C578) *
              C31904 * C474)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C9914 * C122 - C9917 * C115 + C9915 * C359 - C9918 * C349 +
             C32233 * C369 - C9919 * C354) *
                C817 +
            (C9914 * C136 - C9917 * C123 + C9915 * C379 - C9918 * C360 +
             C32233 * C384 - C9919 * C370) *
                C32265 +
            (C10896 - C10897 + C10898 - C10899 + C10900 - C10901) * C818 +
            (C10902 - C10903 + C10904 - C10905 + C10906 - C10907) * C32253 +
            C10940 * C819 + C10941 * C32230) *
               C31859 * C577 +
           ((C9917 * C349 - C9914 * C359 + C9918 * C354 - C9915 * C369 +
             C9919 * C2028 - C32233 * C2034) *
                C817 +
            (C9917 * C360 - C9914 * C379 + C9918 * C370 - C9915 * C384 +
             C9919 * C2035 - C32233 * C2046) *
                C32265 +
            (C9917 * C681 - C9914 * C686 + C9918 * C1118 - C9915 * C1130 +
             C9919 * C2546 - C32233 * C2549) *
                C818 +
            (C9917 * C687 - C9914 * C696 + C9918 * C1131 - C9915 * C1145 +
             C9919 * C2550 - C32233 * C2555) *
                C32253 +
            (C9917 * C1115 - C9914 * C1124 + C9918 * C1119 - C9915 * C1132 +
             C9919 * C6828 - C32233 * C6831) *
                C819 +
            (C9917 * C1125 - C9914 * C1142 + C9918 * C1133 - C9915 * C1146 +
             C9919 * C6832 - C32233 * C6837) *
                C32230) *
               C31859 * C578) *
              C31904 * C473 +
          (((C9922 - C9921 + C9924 - C9923 + C9926 - C9925) * C817 +
            (C9928 - C9927 + C9930 - C9929 + C9932 - C9931) * C32265 +
            (C10336 - C10337 + C10338 - C10339 + C10340 - C10341) * C818 +
            (C10342 - C10343 + C10344 - C10345 + C10346 - C10347) * C32253 +
            (C11198 - C11199 + C11200 - C11201 + C11202 - C11203) * C819 +
            (C11204 - C11205 + C11206 - C11207 + C11208 - C11209) * C32230) *
               C31859 * C577 +
           ((C10507 - C10506 + C10509 - C10508 + C10511 - C10510) * C817 +
            (C10513 - C10512 + C10515 - C10514 + C10517 - C10516) * C32265 +
            (C9914 * C688 - C9917 * C682 + C9915 * C1134 - C9918 * C1120 +
             C32233 * C2551 - C9919 * C2547) *
                C818 +
            (C9914 * C697 - C9917 * C689 + C9915 * C1147 - C9918 * C1135 +
             C32233 * C2556 - C9919 * C2552) *
                C32253 +
            (C9914 * C1126 - C9917 * C1116 + C9915 * C1136 - C9918 * C1121 +
             C32233 * C7149 - C9919 * C7148) *
                C819 +
            (C9914 * C1143 - C9917 * C1127 + C9915 * C1148 - C9918 * C1137 +
             C32233 * C7151 - C9919 * C7150) *
                C32230) *
               C31859 * C578) *
              C31904 * C474)) /
            (p * q * std::sqrt(p + q));
    d2ee[74] +=
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C31958 * C122 - C113 * C115) * C114 +
            (C31958 * C136 - C113 * C123) * C31941) *
               C103 +
           ((C144 - C145) * C114 + (C146 - C147) * C31941) * C104 +
           C176 * C105 + C177 * C106 + C178 * C107) *
              C31918 * C240 +
          (((C113 * C244 - C31958 * C254) * C114 +
            (C113 * C255 - C31958 * C274) * C31941) *
               C103 +
           ((C113 * C245 - C31958 * C256) * C114 +
            (C113 * C257 - C31958 * C275) * C31941) *
               C104 +
           ((C113 * C246 - C31958 * C258) * C114 +
            (C113 * C259 - C31958 * C276) * C31941) *
               C105 +
           ((C113 * C247 - C31958 * C260) * C114 +
            (C113 * C261 - C31958 * C277) * C31941) *
               C106 +
           ((C113 * C248 - C31958 * C262) * C114 +
            (C113 * C263 - C31958 * C278) * C31941) *
               C107) *
              C31918 * C241 +
          (((C31958 * C264 - C113 * C249) * C114 +
            (C31958 * C279 - C113 * C265) * C31941) *
               C103 +
           ((C31958 * C266 - C113 * C250) * C114 +
            (C31958 * C280 - C113 * C267) * C31941) *
               C104 +
           ((C31958 * C268 - C113 * C251) * C114 +
            (C31958 * C281 - C113 * C269) * C31941) *
               C105 +
           ((C31958 * C270 - C113 * C252) * C114 +
            (C31958 * C282 - C113 * C271) * C31941) *
               C106 +
           ((C31958 * C272 - C113 * C253) * C114 +
            (C31958 * C283 - C113 * C273) * C31941) *
               C107) *
              C31918 * C242) *
         C31892) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C31958 * C122 - C113 * C115) * C114 +
            (C31958 * C136 - C113 * C123) * C31941) *
               C103 +
           ((C144 - C145) * C114 + (C146 - C147) * C31941) * C104 +
           C176 * C105 + C177 * C106 + C178 * C107) *
              C31918 * C31904 * C110 +
          (((C145 - C144) * C114 + (C147 - C146) * C31941) * C103 +
           ((C149 - C148) * C114 + (C151 - C150) * C31941) * C104 +
           ((C153 - C152) * C114 + (C155 - C154) * C31941) * C105 +
           ((C157 - C156) * C114 + (C159 - C158) * C31941) * C106 +
           ((C160 - C161) * C114 + (C162 - C163) * C31941) * C107) *
              C31918 * C31904 * C111 +
          (C176 * C103 + C177 * C104 + C178 * C105 +
           ((C161 - C160) * C114 + (C163 - C162) * C31941) * C106 +
           ((C31958 * C134 - C113 * C121) * C114 +
            (C31958 * C142 - C113 * C135) * C31941) *
               C107) *
              C31918 * C31904 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C31958 * C122 - C113 * C115) * C817 +
            (C31958 * C136 - C113 * C123) * C32265 +
            (C31958 * C254 - C113 * C244) * C818 +
            (C31958 * C274 - C113 * C255) * C32253 +
            (C31958 * C264 - C113 * C249) * C819 +
            (C31958 * C279 - C113 * C265) * C32230) *
               C814 +
           ((C144 - C145) * C817 + (C146 - C147) * C32265 +
            (C481 - C480) * C818 + (C483 - C482) * C32253 +
            (C821 - C822) * C819 + (C823 - C824) * C32230) *
               C815 +
           C847 * C32219) *
              C31918 * C31904 * C110 +
          (((C145 - C144) * C817 + (C147 - C146) * C32265 +
            (C480 - C481) * C818 + (C482 - C483) * C32253 +
            (C822 - C821) * C819 + (C824 - C823) * C32230) *
               C814 +
           ((C149 - C148) * C817 + (C151 - C150) * C32265 +
            (C484 - C485) * C818 + (C486 - C487) * C32253 +
            (C830 - C829) * C819 + (C832 - C831) * C32230) *
               C815 +
           ((C153 - C152) * C817 + (C155 - C154) * C32265 +
            (C488 - C489) * C818 + (C490 - C491) * C32253 +
            (C833 - C834) * C819 + (C835 - C836) * C32230) *
               C32219) *
              C31918 * C31904 * C111 +
          (C847 * C814 +
           (C166 * C817 + C167 * C32265 + (C489 - C488) * C818 +
            (C491 - C490) * C32253 + (C834 - C833) * C819 +
            (C836 - C835) * C32230) *
               C815 +
           (C168 * C817 + C169 * C32265 + (C493 - C492) * C818 +
            (C495 - C494) * C32253 + (C31958 * C272 - C113 * C253) * C819 +
            (C31958 * C283 - C113 * C273) * C32230) *
               C32219) *
              C31918 * C31904 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C31958 * C122 - C113 * C115) * C817 +
            (C31958 * C136 - C113 * C123) * C32265 + (C982 - C983) * C818 +
            (C984 - C985) * C32253 + C1004 * C819 + C1005 * C32230) *
               C814 +
           ((C144 - C145) * C817 + (C146 - C147) * C32265 +
            (C481 - C480) * C818 + (C483 - C482) * C32253 + C990 * C819 +
            C991 * C32230) *
               C815 +
           C847 * C32219) *
              C31918 * C240 +
          (((C983 - C982) * C817 + (C985 - C984) * C32265 +
            (C987 - C986) * C818 + (C989 - C988) * C32253 +
            (C992 - C993) * C819 + (C994 - C995) * C32230) *
               C814 +
           ((C480 - C481) * C817 + (C482 - C483) * C32265 +
            (C822 - C821) * C818 + (C824 - C823) * C32253 +
            (C996 - C997) * C819 + (C998 - C999) * C32230) *
               C815 +
           ((C484 - C485) * C817 + (C486 - C487) * C32265 +
            (C830 - C829) * C818 + (C832 - C831) * C32253 +
            (C1000 - C1001) * C819 + (C1002 - C1003) * C32230) *
               C32219) *
              C31918 * C241 +
          ((C1004 * C817 + C1005 * C32265 + (C993 - C992) * C818 +
            (C995 - C994) * C32253 + (C31958 * C969 - C113 * C960) * C819 +
            (C31958 * C978 - C113 * C970) * C32230) *
               C814 +
           (C990 * C817 + C991 * C32265 + (C997 - C996) * C818 +
            (C999 - C998) * C32253 + (C31958 * C971 - C113 * C961) * C819 +
            (C31958 * C979 - C113 * C972) * C32230) *
               C815 +
           (C840 * C817 + C841 * C32265 + (C1001 - C1000) * C818 +
            (C1003 - C1002) * C32253 + (C31958 * C973 - C113 * C962) * C819 +
            (C31958 * C980 - C113 * C974) * C32230) *
               C32219) *
              C31918 * C242) *
         C31892) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C31958 * C122 - C113 * C115) * C5281 +
            (C31958 * C136 - C113 * C123) * C5275 + (C982 - C983) * C5282 +
            (C984 - C985) * C5276 + C1004 * C5283 + C1005 * C32230) *
               C32262 +
           ((C144 - C145) * C5281 + (C146 - C147) * C5275 + C1302 * C5282 +
            C1303 * C5276 + C990 * C5283 + C991 * C32230) *
               C32249 +
           C5295 * C32219) *
              C31918 * C31904 * C110 +
          (((C145 - C144) * C5281 + (C147 - C146) * C5275 + C1304 * C5282 +
            C1305 * C5276 + C1306 * C5283 + C1307 * C32230) *
               C32262 +
           ((C149 - C148) * C5281 + (C151 - C150) * C5275 + C1308 * C5282 +
            C1309 * C5276 + C1310 * C5283 + C1311 * C32230) *
               C32249 +
           ((C153 - C152) * C5281 + (C155 - C154) * C5275 + C3007 * C5282 +
            C3008 * C5276 + (C833 - C834) * C5283 + (C835 - C836) * C32230) *
               C32219) *
              C31918 * C31904 * C111 +
          (C5295 * C32262 +
           (C166 * C5281 + C167 * C5275 + C2671 * C5282 + C2672 * C5276 +
            (C834 - C833) * C5283 + (C836 - C835) * C32230) *
               C32249 +
           (C168 * C5281 + C169 * C5275 + (C493 - C492) * C5282 +
            (C495 - C494) * C5276 + (C31958 * C272 - C113 * C253) * C5283 +
            (C31958 * C283 - C113 * C273) * C32230) *
               C32219) *
              C31918 * C31904 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C31958 * C122 - C113 * C115) * C5281 +
            (C31958 * C136 - C113 * C123) * C5275 + (C982 - C983) * C5282 +
            (C984 - C985) * C5276 + C1004 * C5283 + C1005 * C32230) *
               C32262 +
           ((C144 - C145) * C5281 + (C146 - C147) * C5275 + C1302 * C5282 +
            C1303 * C5276 + C990 * C5283 + C991 * C32230) *
               C32249 +
           C5295 * C32219) *
              C31918 * C240 +
          (((C983 - C982) * C5281 + (C985 - C984) * C5275 +
            (C987 - C986) * C5282 + (C989 - C988) * C5276 +
            (C992 - C993) * C5283 + (C994 - C995) * C32230) *
               C32262 +
           (C1304 * C5281 + C1305 * C5275 + C1306 * C5282 + C1307 * C5276 +
            (C996 - C997) * C5283 + (C998 - C999) * C32230) *
               C32249 +
           (C1308 * C5281 + C1309 * C5275 + C1310 * C5282 + C1311 * C5276 +
            (C1000 - C1001) * C5283 + (C1002 - C1003) * C32230) *
               C32219) *
              C31918 * C241 +
          ((C1004 * C5281 + C1005 * C5275 + (C993 - C992) * C5282 +
            (C995 - C994) * C5276 + (C31958 * C969 - C113 * C960) * C5283 +
            (C31958 * C978 - C113 * C970) * C32230) *
               C32262 +
           (C990 * C5281 + C991 * C5275 + (C997 - C996) * C5282 +
            (C999 - C998) * C5276 + (C31958 * C971 - C113 * C961) * C5283 +
            (C31958 * C979 - C113 * C972) * C32230) *
               C32249 +
           (C840 * C5281 + C841 * C5275 + (C1001 - C1000) * C5282 +
            (C1003 - C1002) * C5276 + (C31958 * C973 - C113 * C962) * C5283 +
            (C31958 * C980 - C113 * C974) * C32230) *
               C32219) *
              C31918 * C242) *
         C31892) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C31958 * C122 - C113 * C115) * C6021 +
           (C31958 * C136 - C113 * C123) * C6015 + (C982 - C983) * C6022 +
           (C984 - C985) * C6016 + C1004 * C6023 + C1005 * C6017 +
           (C993 - C992) * C6024 + (C995 - C994) * C6018 +
           (C31958 * C969 - C113 * C960) * C6025 +
           (C31958 * C978 - C113 * C970) * C6019) *
              C31859 * C31918 * C31904 * C110 +
          ((C145 - C144) * C6021 + (C147 - C146) * C6015 + C1304 * C6022 +
           C1305 * C6016 + C1306 * C6023 + C1307 * C6017 +
           (C996 - C997) * C6024 + (C998 - C999) * C6018 +
           (C113 * C961 - C31958 * C971) * C6025 +
           (C113 * C972 - C31958 * C979) * C6019) *
              C31859 * C31918 * C31904 * C111 +
          (C164 * C6021 + C165 * C6015 + C827 * C6022 + C828 * C6016 +
           C840 * C6023 + C841 * C6017 + (C1001 - C1000) * C6024 +
           (C1003 - C1002) * C6018 + (C31958 * C973 - C113 * C962) * C6025 +
           (C31958 * C980 - C113 * C974) * C6019) *
              C31859 * C31918 * C31904 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C31958 * C122 - C113 * C115) * C6021 +
           (C31958 * C136 - C113 * C123) * C6015 + (C982 - C983) * C6022 +
           (C984 - C985) * C6016 + C1004 * C6023 + C1005 * C6017 +
           C6097 * C6024 + C6098 * C6018 + C6107 * C6025 + C6108 * C6019) *
              C31859 * C31918 * C240 +
          ((C983 - C982) * C6021 + (C985 - C984) * C6015 +
           (C987 - C986) * C6022 + (C989 - C988) * C6016 +
           (C992 - C993) * C6023 + (C994 - C995) * C6017 +
           (C6100 - C6099) * C6024 + (C6102 - C6101) * C6018 +
           (C6103 - C6104) * C6025 + (C6105 - C6106) * C6019) *
              C31859 * C31918 * C241 +
          (C1004 * C6021 + C1005 * C6015 + C6097 * C6022 + C6098 * C6016 +
           C6107 * C6023 + C6108 * C6017 + (C6104 - C6103) * C6024 +
           (C6106 - C6105) * C6018 + (C31958 * C6092 - C113 * C6089) * C6025 +
           (C31958 * C6095 - C113 * C6093) * C6019) *
              C31859 * C31918 * C242) *
         C31892) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C9914 * C122 - C9917 * C115 + C9915 * C359 - C9918 * C349 +
             C32233 * C369 - C9919 * C354) *
                C114 +
            (C9914 * C136 - C9917 * C123 + C9915 * C379 - C9918 * C360 +
             C32233 * C384 - C9919 * C370) *
                C31941) *
               C32262 +
           ((C9921 - C9922 + C9923 - C9924 + C9925 - C9926) * C114 +
            (C9927 - C9928 + C9929 - C9930 + C9931 - C9932) * C31941) *
               C32249 +
           C9969 * C32219) *
              C31918 * C31904 * C110 +
          (((C9922 - C9921 + C9924 - C9923 + C9926 - C9925) * C114 +
            (C9928 - C9927 + C9930 - C9929 + C9932 - C9931) * C31941) *
               C32262 +
           ((C9934 - C9933 + C9936 - C9935 + C9938 - C9937) * C114 +
            (C9940 - C9939 + C9942 - C9941 + C9944 - C9943) * C31941) *
               C32249 +
           ((C9945 - C9946 + C9947 - C9948 + C9949 - C9950) * C114 +
            (C9951 - C9952 + C9953 - C9954 + C9955 - C9956) * C31941) *
               C32219) *
              C31918 * C31904 * C111 +
          (C9969 * C32262 +
           ((C9946 - C9945 + C9948 - C9947 + C9950 - C9949) * C114 +
            (C9952 - C9951 + C9954 - C9953 + C9956 - C9955) * C31941) *
               C32249 +
           ((C9914 * C130 - C9917 * C119 + C9915 * C367 - C9918 * C353 +
             C32233 * C377 - C9919 * C358) *
                C114 +
            (C9914 * C140 - C9917 * C131 + C9915 * C383 - C9918 * C368 +
             C32233 * C388 - C9919 * C378) *
                C31941) *
               C32219) *
              C31918 * C31904 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C9914 * C122 - C9917 * C115 + C9915 * C359 - C9918 * C349 +
             C32233 * C369 - C9919 * C354) *
                C114 +
            (C9914 * C136 - C9917 * C123 + C9915 * C379 - C9918 * C360 +
             C32233 * C384 - C9919 * C370) *
                C31941) *
               C32262 +
           ((C9921 - C9922 + C9923 - C9924 + C9925 - C9926) * C114 +
            (C9927 - C9928 + C9929 - C9930 + C9931 - C9932) * C31941) *
               C32249 +
           C9969 * C32219) *
              C31918 * C240 +
          (((C9917 * C244 - C9914 * C254 + C9918 * C681 - C9915 * C686 +
             C9919 * C1118 - C32233 * C1130) *
                C114 +
            (C9917 * C255 - C9914 * C274 + C9918 * C687 - C9915 * C696 +
             C9919 * C1131 - C32233 * C1145) *
                C31941) *
               C32262 +
           ((C9917 * C245 - C9914 * C256 + C9918 * C682 - C9915 * C688 +
             C9919 * C1120 - C32233 * C1134) *
                C114 +
            (C9917 * C257 - C9914 * C275 + C9918 * C689 - C9915 * C697 +
             C9919 * C1135 - C32233 * C1147) *
                C31941) *
               C32249 +
           ((C9917 * C246 - C9914 * C258 + C9918 * C683 - C9915 * C690 +
             C9919 * C1122 - C32233 * C1138) *
                C114 +
            (C9917 * C259 - C9914 * C276 + C9918 * C691 - C9915 * C698 +
             C9919 * C1139 - C32233 * C1149) *
                C31941) *
               C32219) *
              C31918 * C241 +
          (((C9914 * C264 - C9917 * C249 + C9915 * C1124 - C9918 * C1115 +
             C32233 * C1132 - C9919 * C1119) *
                C114 +
            (C9914 * C279 - C9917 * C265 + C9915 * C1142 - C9918 * C1125 +
             C32233 * C1146 - C9919 * C1133) *
                C31941) *
               C32262 +
           ((C9914 * C266 - C9917 * C250 + C9915 * C1126 - C9918 * C1116 +
             C32233 * C1136 - C9919 * C1121) *
                C114 +
            (C9914 * C280 - C9917 * C267 + C9915 * C1143 - C9918 * C1127 +
             C32233 * C1148 - C9919 * C1137) *
                C31941) *
               C32249 +
           ((C9914 * C268 - C9917 * C251 + C9915 * C1128 - C9918 * C1117 +
             C32233 * C1140 - C9919 * C1123) *
                C114 +
            (C9914 * C281 - C9917 * C269 + C9915 * C1144 - C9918 * C1129 +
             C32233 * C1150 - C9919 * C1141) *
                C31941) *
               C32219) *
              C31918 * C242) *
         C31892) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C9914 * C122 - C9917 * C115 + C9915 * C359 - C9918 * C349 +
            C32233 * C369 - C9919 * C354) *
               C817 +
           (C9914 * C136 - C9917 * C123 + C9915 * C379 - C9918 * C360 +
            C32233 * C384 - C9919 * C370) *
               C32265 +
           (C9914 * C254 - C9917 * C244 + C9915 * C686 - C9918 * C681 +
            C32233 * C1130 - C9919 * C1118) *
               C818 +
           (C9914 * C274 - C9917 * C255 + C9915 * C696 - C9918 * C687 +
            C32233 * C1145 - C9919 * C1131) *
               C32253 +
           (C9914 * C264 - C9917 * C249 + C9915 * C1124 - C9918 * C1115 +
            C32233 * C1132 - C9919 * C1119) *
               C819 +
           (C9914 * C279 - C9917 * C265 + C9915 * C1142 - C9918 * C1125 +
            C32233 * C1146 - C9919 * C1133) *
               C32230) *
              C31859 * C31918 * C31904 * C110 +
          ((C9922 - C9921 + C9924 - C9923 + C9926 - C9925) * C817 +
           (C9928 - C9927 + C9930 - C9929 + C9932 - C9931) * C32265 +
           (C10336 - C10337 + C10338 - C10339 + C10340 - C10341) * C818 +
           (C10342 - C10343 + C10344 - C10345 + C10346 - C10347) * C32253 +
           (C9917 * C250 - C9914 * C266 + C9918 * C1116 - C9915 * C1126 +
            C9919 * C1121 - C32233 * C1136) *
               C819 +
           (C9917 * C267 - C9914 * C280 + C9918 * C1127 - C9915 * C1143 +
            C9919 * C1137 - C32233 * C1148) *
               C32230) *
              C31859 * C31918 * C31904 * C111 +
          (C9965 * C817 + C9966 * C32265 +
           (C10349 - C10348 + C10351 - C10350 + C10353 - C10352) * C818 +
           (C10355 - C10354 + C10357 - C10356 + C10359 - C10358) * C32253 +
           (C9914 * C268 - C9917 * C251 + C9915 * C1128 - C9918 * C1117 +
            C32233 * C1140 - C9919 * C1123) *
               C819 +
           (C9914 * C281 - C9917 * C269 + C9915 * C1144 - C9918 * C1129 +
            C32233 * C1150 - C9919 * C1141) *
               C32230) *
              C31859 * C31918 * C31904 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C9914 * C122 - C9917 * C115 + C9915 * C359 - C9918 * C349 +
            C32233 * C369 - C9919 * C354) *
               C817 +
           (C9914 * C136 - C9917 * C123 + C9915 * C379 - C9918 * C360 +
            C32233 * C384 - C9919 * C370) *
               C32265 +
           (C10896 - C10897 + C10898 - C10899 + C10900 - C10901) * C818 +
           (C10902 - C10903 + C10904 - C10905 + C10906 - C10907) * C32253 +
           C10940 * C819 + C10941 * C32230) *
              C31859 * C31918 * C240 +
          ((C10897 - C10896 + C10899 - C10898 + C10901 - C10900) * C817 +
           (C10903 - C10902 + C10905 - C10904 + C10907 - C10906) * C32265 +
           (C10909 - C10908 + C10911 - C10910 + C10913 - C10912) * C818 +
           (C10915 - C10914 + C10917 - C10916 + C10919 - C10918) * C32253 +
           (C10920 - C10921 + C10922 - C10923 + C10924 - C10925) * C819 +
           (C10926 - C10927 + C10928 - C10929 + C10930 - C10931) * C32230) *
              C31859 * C31918 * C241 +
          (C10940 * C817 + C10941 * C32265 +
           (C10921 - C10920 + C10923 - C10922 + C10925 - C10924) * C818 +
           (C10927 - C10926 + C10929 - C10928 + C10931 - C10930) * C32253 +
           (C9914 * C969 - C9917 * C960 + C9915 * C6173 - C9918 * C6170 +
            C32233 * C6177 - C9919 * C6172) *
               C819 +
           (C9914 * C978 - C9917 * C970 + C9915 * C6179 - C9918 * C6174 +
            C32233 * C6181 - C9919 * C6178) *
               C32230) *
              C31859 * C31918 * C242) *
         C31892) /
            (p * q * std::sqrt(p + q));
    d2ee[75] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C19912 * C122 - C19914 * C115 + C32045 * C359 - C19915 * C349) *
                 C2662 +
             (C19912 * C136 - C19914 * C123 + C32045 * C379 - C19915 * C360) *
                 C32199 +
             (C20909 - C20910 + C20911 - C20912) * C2663 +
             (C20913 - C20914 + C20915 - C20916) * C32003) *
                C31864 +
            ((C19917 - C19918 + C19919 - C19920) * C2662 +
             (C19921 - C19922 + C19923 - C19924) * C32199 + C21305 * C2663 +
             C21306 * C32003) *
                C31872 +
            C22645 * C17094) *
               C31918 * C471 +
           (((C20910 - C20909 + C20912 - C20911) * C2662 +
             (C20914 - C20913 + C20916 - C20915) * C32199 +
             (C20918 - C20917 + C20920 - C20919) * C2663 +
             (C20922 - C20921 + C20924 - C20923) * C32003) *
                C31864 +
            (C21307 * C2662 + C21308 * C32199 + C21309 * C2663 +
             C21310 * C32003) *
                C31872 +
            (C23136 * C2662 + C23137 * C32199 +
             (C20755 - C20756 + C20757 - C20758) * C2663 +
             (C20759 - C20760 + C20761 - C20762) * C32003) *
                C17094) *
               C31918 * C472) *
              C473 +
          ((((C19918 - C19917 + C19920 - C19919) * C2662 +
             (C19922 - C19921 + C19924 - C19923) * C32199 + C21307 * C2663 +
             C21308 * C32003) *
                C31864 +
            ((C19926 - C19925 + C19928 - C19927) * C2662 +
             (C19930 - C19929 + C19932 - C19931) * C32199 + C23136 * C2663 +
             C23137 * C32003) *
                C31872 +
            ((C19934 - C19933 + C19936 - C19935) * C2662 +
             (C19938 - C19937 + C19940 - C19939) * C32199 +
             (C20309 - C20310 + C20311 - C20312) * C2663 +
             (C20313 - C20314 + C20315 - C20316) * C32003) *
                C17094) *
               C31918 * C471 +
           ((C21305 * C2662 + C21306 * C32199 + C20949 * C2663 +
             C20950 * C32003) *
                C31864 +
            (C22640 * C2662 + C22641 * C32199 +
             (C20756 - C20755 + C20758 - C20757) * C2663 +
             (C20760 - C20759 + C20762 - C20761) * C32003) *
                C31872 +
            ((C20310 - C20309 + C20312 - C20311) * C2662 +
             (C20314 - C20313 + C20316 - C20315) * C32199 +
             (C19912 * C270 - C19914 * C252 + C32045 * C1458 - C19915 * C1457) *
                 C2663 +
             (C19912 * C282 - C19914 * C271 + C32045 * C1460 - C19915 * C1459) *
                 C32003) *
                C17094) *
               C31918 * C472) *
              C474)) /
        (p * q * std::sqrt(p + q));
    d2ee[76] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C19912 * C122 - C19914 * C115 + C32045 * C359 - C19915 * C349) *
                 C2662 +
             (C19912 * C136 - C19914 * C123 + C32045 * C379 - C19915 * C360) *
                 C32199 +
             (C20909 - C20910 + C20911 - C20912) * C2663 +
             (C20913 - C20914 + C20915 - C20916) * C32003) *
                C31864 +
            ((C19917 - C19918 + C19919 - C19920) * C2662 +
             (C19921 - C19922 + C19923 - C19924) * C32199 + C21305 * C2663 +
             C21306 * C32003) *
                C31872 +
            C22645 * C17094) *
               C577 +
           (((C19914 * C349 - C19912 * C359 + C19915 * C354 - C32045 * C369) *
                 C2662 +
             (C19914 * C360 - C19912 * C379 + C19915 * C370 - C32045 * C384) *
                 C32199 +
             (C21715 - C21716 + C21717 - C21718) * C2663 +
             (C21719 - C21720 + C21721 - C21722) * C32003) *
                C31864 +
            ((C20447 - C20448 + C20449 - C20450) * C2662 +
             (C20451 - C20452 + C20453 - C20454) * C32199 +
             (C21505 - C21506 + C21507 - C21508) * C2663 +
             (C21509 - C21510 + C21511 - C21512) * C32003) *
                C31872 +
            ((C20455 - C20456 + C20457 - C20458) * C2662 +
             (C20459 - C20460 + C20461 - C20462) * C32199 +
             (C23332 - C23333 + C23334 - C23335) * C2663 +
             (C23336 - C23337 + C23338 - C23339) * C32003) *
                C17094) *
               C578) *
              C471 +
          ((((C20910 - C20909 + C20912 - C20911) * C2662 +
             (C20914 - C20913 + C20916 - C20915) * C32199 +
             (C20918 - C20917 + C20920 - C20919) * C2663 +
             (C20922 - C20921 + C20924 - C20923) * C32003) *
                C31864 +
            (C21307 * C2662 + C21308 * C32199 + C21309 * C2663 +
             C21310 * C32003) *
                C31872 +
            (C23136 * C2662 + C23137 * C32199 +
             (C20755 - C20756 + C20757 - C20758) * C2663 +
             (C20759 - C20760 + C20761 - C20762) * C32003) *
                C17094) *
               C577 +
           (((C21716 - C21715 + C21718 - C21717) * C2662 +
             (C21720 - C21719 + C21722 - C21721) * C32199 +
             (C21724 - C21723 + C21726 - C21725) * C2663 +
             (C21728 - C21727 + C21730 - C21729) * C32003) *
                C31864 +
            ((C21506 - C21505 + C21508 - C21507) * C2662 +
             (C21510 - C21509 + C21512 - C21511) * C32199 +
             (C21514 - C21513 + C21516 - C21515) * C2663 +
             (C21518 - C21517 + C21520 - C21519) * C32003) *
                C31872 +
            ((C23333 - C23332 + C23335 - C23334) * C2662 +
             (C23337 - C23336 + C23339 - C23338) * C32199 +
             (C19912 * C1128 - C19914 * C1117 + C32045 * C1140 -
              C19915 * C1123) *
                 C2663 +
             (C19912 * C1144 - C19914 * C1129 + C32045 * C1150 -
              C19915 * C1141) *
                 C32003) *
                C17094) *
               C578) *
              C472) *
         C31892) /
        (p * q * std::sqrt(p + q));
    d2ee[77] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C19912 * C122 - C19914 * C115 + C32045 * C359 - C19915 * C349) *
                C2662 +
            (C19912 * C136 - C19914 * C123 + C32045 * C379 - C19915 * C360) *
                C32199 +
            (C20909 - C20910 + C20911 - C20912) * C2663 +
            (C20913 - C20914 + C20915 - C20916) * C32003) *
               C31864 +
           ((C19917 - C19918 + C19919 - C19920) * C2662 +
            (C19921 - C19922 + C19923 - C19924) * C32199 + C21305 * C2663 +
            C21306 * C32003) *
               C31872 +
           C22645 * C17094) *
              C31918 * C240 +
          (((C20910 - C20909 + C20912 - C20911) * C2662 +
            (C20914 - C20913 + C20916 - C20915) * C32199 +
            (C20918 - C20917 + C20920 - C20919) * C2663 +
            (C20922 - C20921 + C20924 - C20923) * C32003) *
               C31864 +
           (C21307 * C2662 + C21308 * C32199 + C21309 * C2663 +
            C21310 * C32003) *
               C31872 +
           ((C20301 - C20302 + C20303 - C20304) * C2662 +
            (C20305 - C20306 + C20307 - C20308) * C32199 +
            (C20755 - C20756 + C20757 - C20758) * C2663 +
            (C20759 - C20760 + C20761 - C20762) * C32003) *
               C17094) *
              C31918 * C241 +
          ((C20951 * C2662 + C20952 * C32199 +
            (C20930 - C20929 + C20932 - C20931) * C2663 +
            (C20934 - C20933 + C20936 - C20935) * C32003) *
               C31864 +
           (C20949 * C2662 + C20950 * C32199 +
            (C20938 - C20937 + C20940 - C20939) * C2663 +
            (C20942 - C20941 + C20944 - C20943) * C32003) *
               C31872 +
           ((C20756 - C20755 + C20758 - C20757) * C2662 +
            (C20760 - C20759 + C20762 - C20761) * C32199 +
            (C19912 * C967 - C19914 * C959 + C32045 * C1630 - C19915 * C1625) *
                C2663 +
            (C19912 * C977 - C19914 * C968 + C32045 * C1634 - C19915 * C1631) *
                C32003) *
               C17094) *
              C31918 * C242) *
         C31892) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C19912 * C122 - C19914 * C115 + C32045 * C359 - C19915 * C349) *
                C2662 +
            (C19912 * C136 - C19914 * C123 + C32045 * C379 - C19915 * C360) *
                C32199 +
            (C20909 - C20910 + C20911 - C20912) * C2663 +
            (C20913 - C20914 + C20915 - C20916) * C32003) *
               C31864 +
           ((C19917 - C19918 + C19919 - C19920) * C2662 +
            (C19921 - C19922 + C19923 - C19924) * C32199 + C21305 * C2663 +
            C21306 * C32003) *
               C31872 +
           C22645 * C17094) *
              C31918 * C31904 * C110 +
          (((C19918 - C19917 + C19920 - C19919) * C2662 +
            (C19922 - C19921 + C19924 - C19923) * C32199 + C21307 * C2663 +
            C21308 * C32003) *
               C31864 +
           ((C19926 - C19925 + C19928 - C19927) * C2662 +
            (C19930 - C19929 + C19932 - C19931) * C32199 +
            (C20301 - C20302 + C20303 - C20304) * C2663 +
            (C20305 - C20306 + C20307 - C20308) * C32003) *
               C31872 +
           ((C19934 - C19933 + C19936 - C19935) * C2662 +
            (C19938 - C19937 + C19940 - C19939) * C32199 +
            (C20309 - C20310 + C20311 - C20312) * C2663 +
            (C20313 - C20314 + C20315 - C20316) * C32003) *
               C17094) *
              C31918 * C31904 * C111 +
          (C22645 * C31864 +
           (C19959 * C2662 + C19960 * C32199 +
            (C20310 - C20309 + C20312 - C20311) * C2663 +
            (C20314 - C20313 + C20316 - C20315) * C32003) *
               C31872 +
           ((C19942 - C19941 + C19944 - C19943) * C2662 +
            (C19946 - C19945 + C19948 - C19947) * C32199 +
            (C19912 * C262 - C19914 * C248 + C32045 * C694 - C19915 * C685) *
                C2663 +
            (C19912 * C278 - C19914 * C263 + C32045 * C700 - C19915 * C695) *
                C32003) *
               C17094) *
              C31918 * C31904 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C19912 * C122 - C19914 * C115 + C32045 * C359 - C19915 * C349) *
                C2662 +
            (C19912 * C136 - C19914 * C123 + C32045 * C379 - C19915 * C360) *
                C32199 +
            (C20909 - C20910 + C20911 - C20912) * C2663 +
            (C20913 - C20914 + C20915 - C20916) * C32003) *
               C31864 +
           ((C19917 - C19918 + C19919 - C19920) * C2662 +
            (C19921 - C19922 + C19923 - C19924) * C32199 + C21305 * C2663 +
            C21306 * C32003) *
               C31872 +
           C22645 * C17094) *
              C346 +
          (((C19914 * C349 - C19912 * C359 + C19915 * C354 - C32045 * C369) *
                C2662 +
            (C19914 * C360 - C19912 * C379 + C19915 * C370 - C32045 * C384) *
                C32199 +
            (C21715 - C21716 + C21717 - C21718) * C2663 +
            (C21719 - C21720 + C21721 - C21722) * C32003) *
               C31864 +
           ((C20447 - C20448 + C20449 - C20450) * C2662 +
            (C20451 - C20452 + C20453 - C20454) * C32199 +
            (C21505 - C21506 + C21507 - C21508) * C2663 +
            (C21509 - C21510 + C21511 - C21512) * C32003) *
               C31872 +
           ((C20455 - C20456 + C20457 - C20458) * C2662 +
            (C20459 - C20460 + C20461 - C20462) * C32199 +
            (C19914 * C683 - C19912 * C690 + C19915 * C1122 - C32045 * C1138) *
                C2663 +
            (C19914 * C691 - C19912 * C698 + C19915 * C1139 - C32045 * C1149) *
                C32003) *
               C17094) *
              C347 +
          (((C19912 * C369 - C19914 * C354 + C32045 * C2034 - C19915 * C2028) *
                C2662 +
            (C19912 * C384 - C19914 * C370 + C32045 * C2046 - C19915 * C2035) *
                C32199 +
            (C19912 * C1130 - C19914 * C1118 + C32045 * C2549 -
             C19915 * C2546) *
                C2663 +
            (C19912 * C1145 - C19914 * C1131 + C32045 * C2555 -
             C19915 * C2550) *
                C32003) *
               C31864 +
           ((C19912 * C371 - C19914 * C355 + C32045 * C2036 - C19915 * C2029) *
                C2662 +
            (C19912 * C385 - C19914 * C372 + C32045 * C2047 - C19915 * C2037) *
                C32199 +
            (C19912 * C1134 - C19914 * C1120 + C32045 * C2551 -
             C19915 * C2547) *
                C2663 +
            (C19912 * C1147 - C19914 * C1135 + C32045 * C2556 -
             C19915 * C2552) *
                C32003) *
               C31872 +
           ((C19912 * C373 - C19914 * C356 + C32045 * C2038 - C19915 * C2030) *
                C2662 +
            (C19912 * C386 - C19914 * C374 + C32045 * C2048 - C19915 * C2039) *
                C32199 +
            (C19912 * C1138 - C19914 * C1122 + C32045 * C2553 -
             C19915 * C2548) *
                C2663 +
            (C19912 * C1149 - C19914 * C1139 + C32045 * C2557 -
             C19915 * C2554) *
                C32003) *
               C17094) *
              C348) *
         C31904 * C31892) /
            (p * q * std::sqrt(p + q));
    d2ee[78] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C19912 * C122 - C19914 * C115 + C32045 * C359 - C19915 * C349) *
                 C2662 +
             (C19912 * C136 - C19914 * C123 + C32045 * C379 - C19915 * C360) *
                 C32199 +
             (C20909 - C20910 + C20911 - C20912) * C2663 +
             (C20913 - C20914 + C20915 - C20916) * C32003) *
                C31864 +
            ((C19917 - C19918 + C19919 - C19920) * C2662 +
             (C19921 - C19922 + C19923 - C19924) * C32199 + C21305 * C2663 +
             C21306 * C32003) *
                C31872 +
            C22645 * C17094) *
               C577 +
           (((C19914 * C349 - C19912 * C359 + C19915 * C354 - C32045 * C369) *
                 C2662 +
             (C19914 * C360 - C19912 * C379 + C19915 * C370 - C32045 * C384) *
                 C32199 +
             (C21715 - C21716 + C21717 - C21718) * C2663 +
             (C21719 - C21720 + C21721 - C21722) * C32003) *
                C31864 +
            ((C20447 - C20448 + C20449 - C20450) * C2662 +
             (C20451 - C20452 + C20453 - C20454) * C32199 +
             (C21505 - C21506 + C21507 - C21508) * C2663 +
             (C21509 - C21510 + C21511 - C21512) * C32003) *
                C31872 +
            ((C20455 - C20456 + C20457 - C20458) * C2662 +
             (C20459 - C20460 + C20461 - C20462) * C32199 +
             (C23332 - C23333 + C23334 - C23335) * C2663 +
             (C23336 - C23337 + C23338 - C23339) * C32003) *
                C17094) *
               C578) *
              C31904 * C473 +
          ((((C19918 - C19917 + C19920 - C19919) * C2662 +
             (C19922 - C19921 + C19924 - C19923) * C32199 + C21307 * C2663 +
             C21308 * C32003) *
                C31864 +
            ((C19926 - C19925 + C19928 - C19927) * C2662 +
             (C19930 - C19929 + C19932 - C19931) * C32199 + C23136 * C2663 +
             C23137 * C32003) *
                C31872 +
            ((C19934 - C19933 + C19936 - C19935) * C2662 +
             (C19938 - C19937 + C19940 - C19939) * C32199 +
             (C20309 - C20310 + C20311 - C20312) * C2663 +
             (C20313 - C20314 + C20315 - C20316) * C32003) *
                C17094) *
               C577 +
           (((C20448 - C20447 + C20450 - C20449) * C2662 +
             (C20452 - C20451 + C20454 - C20453) * C32199 +
             (C21506 - C21505 + C21508 - C21507) * C2663 +
             (C21510 - C21509 + C21512 - C21511) * C32003) *
                C31864 +
            ((C20456 - C20455 + C20458 - C20457) * C2662 +
             (C20460 - C20459 + C20462 - C20461) * C32199 +
             (C23333 - C23332 + C23335 - C23334) * C2663 +
             (C23337 - C23336 + C23339 - C23338) * C32003) *
                C31872 +
            ((C20464 - C20463 + C20466 - C20465) * C2662 +
             (C20468 - C20467 + C20470 - C20469) * C32199 +
             (C19912 * C692 - C19914 * C684 + C32045 * C2199 - C19915 * C2198) *
                 C2663 +
             (C19912 * C699 - C19914 * C693 + C32045 * C2201 - C19915 * C2200) *
                 C32003) *
                C17094) *
               C578) *
              C31904 * C474)) /
        (p * q * std::sqrt(p + q));
    d2ee[79] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19912 * C122 - C19914 * C115 + C32045 * C359 - C19915 * C349) *
                C2662 +
            (C19912 * C136 - C19914 * C123 + C32045 * C379 - C19915 * C360) *
                C32199 +
            (C20909 - C20910 + C20911 - C20912) * C2663 +
            (C20913 - C20914 + C20915 - C20916) * C32003) *
               C31864 +
           ((C19917 - C19918 + C19919 - C19920) * C2662 +
            (C19921 - C19922 + C19923 - C19924) * C32199 + C21305 * C2663 +
            C21306 * C32003) *
               C31872 +
           C22645 * C17094) *
              C31918 * C31904 * C110 +
          (((C19918 - C19917 + C19920 - C19919) * C2662 +
            (C19922 - C19921 + C19924 - C19923) * C32199 + C21307 * C2663 +
            C21308 * C32003) *
               C31864 +
           ((C19926 - C19925 + C19928 - C19927) * C2662 +
            (C19930 - C19929 + C19932 - C19931) * C32199 +
            (C20301 - C20302 + C20303 - C20304) * C2663 +
            (C20305 - C20306 + C20307 - C20308) * C32003) *
               C31872 +
           ((C19934 - C19933 + C19936 - C19935) * C2662 +
            (C19938 - C19937 + C19940 - C19939) * C32199 +
            (C20309 - C20310 + C20311 - C20312) * C2663 +
            (C20313 - C20314 + C20315 - C20316) * C32003) *
               C17094) *
              C31918 * C31904 * C111 +
          (C22645 * C31864 +
           (C19959 * C2662 + C19960 * C32199 +
            (C20310 - C20309 + C20312 - C20311) * C2663 +
            (C20314 - C20313 + C20316 - C20315) * C32003) *
               C31872 +
           ((C19942 - C19941 + C19944 - C19943) * C2662 +
            (C19946 - C19945 + C19948 - C19947) * C32199 +
            (C19912 * C262 - C19914 * C248 + C32045 * C694 - C19915 * C685) *
                C2663 +
            (C19912 * C278 - C19914 * C263 + C32045 * C700 - C19915 * C695) *
                C32003) *
               C17094) *
              C31918 * C31904 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19912 * C122 - C19914 * C115 + C32045 * C359 - C19915 * C349) *
                C2662 +
            (C19912 * C136 - C19914 * C123 + C32045 * C379 - C19915 * C360) *
                C32199 +
            (C20909 - C20910 + C20911 - C20912) * C2663 +
            (C20913 - C20914 + C20915 - C20916) * C32003) *
               C31864 +
           ((C19917 - C19918 + C19919 - C19920) * C2662 +
            (C19921 - C19922 + C19923 - C19924) * C32199 + C21305 * C2663 +
            C21306 * C32003) *
               C31872 +
           C22645 * C17094) *
              C31918 * C240 +
          (((C20910 - C20909 + C20912 - C20911) * C2662 +
            (C20914 - C20913 + C20916 - C20915) * C32199 +
            (C20918 - C20917 + C20920 - C20919) * C2663 +
            (C20922 - C20921 + C20924 - C20923) * C32003) *
               C31864 +
           (C21307 * C2662 + C21308 * C32199 + C21309 * C2663 +
            C21310 * C32003) *
               C31872 +
           ((C20301 - C20302 + C20303 - C20304) * C2662 +
            (C20305 - C20306 + C20307 - C20308) * C32199 +
            (C20755 - C20756 + C20757 - C20758) * C2663 +
            (C20759 - C20760 + C20761 - C20762) * C32003) *
               C17094) *
              C31918 * C241 +
          ((C20951 * C2662 + C20952 * C32199 +
            (C20930 - C20929 + C20932 - C20931) * C2663 +
            (C20934 - C20933 + C20936 - C20935) * C32003) *
               C31864 +
           (C20949 * C2662 + C20950 * C32199 +
            (C20938 - C20937 + C20940 - C20939) * C2663 +
            (C20942 - C20941 + C20944 - C20943) * C32003) *
               C31872 +
           ((C20756 - C20755 + C20758 - C20757) * C2662 +
            (C20760 - C20759 + C20762 - C20761) * C32199 +
            (C19912 * C967 - C19914 * C959 + C32045 * C1630 - C19915 * C1625) *
                C2663 +
            (C19912 * C977 - C19914 * C968 + C32045 * C1634 - C19915 * C1631) *
                C32003) *
               C17094) *
              C31918 * C242) *
         C31892) /
            (p * q * std::sqrt(p + q));
    d2ee[80] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C32041 * C122 - C31010 * C115 + C32048 * C359 - C31002 * C349 +
              C23645 * C369 - C31016 * C354) *
                 C2662 +
             (C32041 * C136 - C31010 * C123 + C32048 * C379 - C31002 * C360 +
              C23645 * C384 - C31016 * C370) *
                 C32199 +
             (C24697 - C24698 + C24699 - C24700 + C24701 - C24702) * C2663 +
             (C24703 - C24704 + C24705 - C24706 + C24707 - C24708) * C32003) *
                C15335 +
            ((C23650 - C23651 + C23652 - C23653 + C23654 - C23655) * C2662 +
             (C23656 - C23657 + C23658 - C23659 + C23660 - C23661) * C32199 +
             C25089 * C2663 + C25090 * C32003) *
                C31869) *
               C31918 * C471 +
           (((C24698 - C24697 + C24700 - C24699 + C24702 - C24701) * C2662 +
             (C24704 - C24703 + C24706 - C24705 + C24708 - C24707) * C32199 +
             (C24709 - C24710 + C24711 - C24712 + C24713 - C24714) * C2663 +
             (C24715 - C24716 + C24717 - C24718 + C24719 - C24720) * C32003) *
                C15335 +
            (C25091 * C2662 + C25092 * C32199 +
             (C24721 - C24722 + C24723 - C24724 + C24725 - C24726) * C2663 +
             (C24727 - C24728 + C24729 - C24730 + C24731 - C24732) * C32003) *
                C31869) *
               C31918 * C472) *
              C473 +
          ((((C23651 - C23650 + C23653 - C23652 + C23655 - C23654) * C2662 +
             (C23657 - C23656 + C23659 - C23658 + C23661 - C23660) * C32199 +
             C25091 * C2663 + C25092 * C32003) *
                C15335 +
            ((C23663 - C23662 + C23665 - C23664 + C23667 - C23666) * C2662 +
             (C23669 - C23668 + C23671 - C23670 + C23673 - C23672) * C32199 +
             (C24077 - C24078 + C24079 - C24080 + C24081 - C24082) * C2663 +
             (C24083 - C24084 + C24085 - C24086 + C24087 - C24088) * C32003) *
                C31869) *
               C31918 * C471 +
           ((C25089 * C2662 + C25090 * C32199 +
             (C24722 - C24721 + C24724 - C24723 + C24726 - C24725) * C2663 +
             (C24728 - C24727 + C24730 - C24729 + C24732 - C24731) * C32003) *
                C15335 +
            ((C24078 - C24077 + C24080 - C24079 + C24082 - C24081) * C2662 +
             (C24084 - C24083 + C24086 - C24085 + C24088 - C24087) * C32199 +
             (C32041 * C268 - C31010 * C251 + C32048 * C1128 - C31002 * C1117 +
              C23645 * C1140 - C31016 * C1123) *
                 C2663 +
             (C32041 * C281 - C31010 * C269 + C32048 * C1144 - C31002 * C1129 +
              C23645 * C1150 - C31016 * C1141) *
                 C32003) *
                C31869) *
               C31918 * C472) *
              C474)) /
        (p * q * std::sqrt(p + q));
    d2ee[81] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C32041 * C122 - C31010 * C115 + C32048 * C359 - C31002 * C349 +
              C23645 * C369 - C31016 * C354) *
                 C2662 +
             (C32041 * C136 - C31010 * C123 + C32048 * C379 - C31002 * C360 +
              C23645 * C384 - C31016 * C370) *
                 C32199 +
             (C24697 - C24698 + C24699 - C24700 + C24701 - C24702) * C2663 +
             (C24703 - C24704 + C24705 - C24706 + C24707 - C24708) * C32003) *
                C15335 +
            ((C23650 - C23651 + C23652 - C23653 + C23654 - C23655) * C2662 +
             (C23656 - C23657 + C23658 - C23659 + C23660 - C23661) * C32199 +
             C25089 * C2663 + C25090 * C32003) *
                C31869) *
               C577 +
           (((C31010 * C349 - C32041 * C359 + C31002 * C354 - C32048 * C369 +
              C31016 * C2028 - C23645 * C2034) *
                 C2662 +
             (C31010 * C360 - C32041 * C379 + C31002 * C370 - C32048 * C384 +
              C31016 * C2035 - C23645 * C2046) *
                 C32199 +
             (C25493 - C25494 + C25495 - C25496 + C25497 - C25498) * C2663 +
             (C25499 - C25500 + C25501 - C25502 + C25503 - C25504) * C32003) *
                C15335 +
            ((C24235 - C24236 + C24237 - C24238 + C24239 - C24240) * C2662 +
             (C24241 - C24242 + C24243 - C24244 + C24245 - C24246) * C32199 +
             (C25287 - C25288 + C25289 - C25290 + C25291 - C25292) * C2663 +
             (C25293 - C25294 + C25295 - C25296 + C25297 - C25298) * C32003) *
                C31869) *
               C578) *
              C471 +
          ((((C24698 - C24697 + C24700 - C24699 + C24702 - C24701) * C2662 +
             (C24704 - C24703 + C24706 - C24705 + C24708 - C24707) * C32199 +
             (C24709 - C24710 + C24711 - C24712 + C24713 - C24714) * C2663 +
             (C24715 - C24716 + C24717 - C24718 + C24719 - C24720) * C32003) *
                C15335 +
            (C25091 * C2662 + C25092 * C32199 +
             (C24721 - C24722 + C24723 - C24724 + C24725 - C24726) * C2663 +
             (C24727 - C24728 + C24729 - C24730 + C24731 - C24732) * C32003) *
                C31869) *
               C577 +
           (((C25494 - C25493 + C25496 - C25495 + C25498 - C25497) * C2662 +
             (C25500 - C25499 + C25502 - C25501 + C25504 - C25503) * C32199 +
             (C32041 * C1124 - C31010 * C1115 + C32048 * C1132 -
              C31002 * C1119 + C23645 * C6831 - C31016 * C6828) *
                 C2663 +
             (C32041 * C1142 - C31010 * C1125 + C32048 * C1146 -
              C31002 * C1133 + C23645 * C6837 - C31016 * C6832) *
                 C32003) *
                C15335 +
            ((C25288 - C25287 + C25290 - C25289 + C25292 - C25291) * C2662 +
             (C25294 - C25293 + C25296 - C25295 + C25298 - C25297) * C32199 +
             (C32041 * C1126 - C31010 * C1116 + C32048 * C1136 -
              C31002 * C1121 + C23645 * C7149 - C31016 * C7148) *
                 C2663 +
             (C32041 * C1143 - C31010 * C1127 + C32048 * C1148 -
              C31002 * C1137 + C23645 * C7151 - C31016 * C7150) *
                 C32003) *
                C31869) *
               C578) *
              C472) *
         C31892) /
        (p * q * std::sqrt(p + q));
    d2ee[82] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C32041 * C122 - C31010 * C115 + C32048 * C359 - C31002 * C349 +
             C23645 * C369 - C31016 * C354) *
                C2662 +
            (C32041 * C136 - C31010 * C123 + C32048 * C379 - C31002 * C360 +
             C23645 * C384 - C31016 * C370) *
                C32199 +
            (C24697 - C24698 + C24699 - C24700 + C24701 - C24702) * C2663 +
            (C24703 - C24704 + C24705 - C24706 + C24707 - C24708) * C32003) *
               C15335 +
           ((C23650 - C23651 + C23652 - C23653 + C23654 - C23655) * C2662 +
            (C23656 - C23657 + C23658 - C23659 + C23660 - C23661) * C32199 +
            (C24066 - C24065 + C24068 - C24067 + C24070 - C24069) * C2663 +
            (C24072 - C24071 + C24074 - C24073 + C24076 - C24075) * C32003) *
               C31869) *
              C31918 * C240 +
          (((C24698 - C24697 + C24700 - C24699 + C24702 - C24701) * C2662 +
            (C24704 - C24703 + C24706 - C24705 + C24708 - C24707) * C32199 +
            (C24709 - C24710 + C24711 - C24712 + C24713 - C24714) * C2663 +
            (C24715 - C24716 + C24717 - C24718 + C24719 - C24720) * C32003) *
               C15335 +
           ((C24065 - C24066 + C24067 - C24068 + C24069 - C24070) * C2662 +
            (C24071 - C24072 + C24073 - C24074 + C24075 - C24076) * C32199 +
            (C24721 - C24722 + C24723 - C24724 + C24725 - C24726) * C2663 +
            (C24727 - C24728 + C24729 - C24730 + C24731 - C24732) * C32003) *
               C31869) *
              C31918 * C241 +
          (((C24710 - C24709 + C24712 - C24711 + C24714 - C24713) * C2662 +
            (C24716 - C24715 + C24718 - C24717 + C24720 - C24719) * C32199 +
            (C32041 * C963 - C31010 * C957 + C32048 * C1626 - C31002 * C1623 +
             C23645 * C6175 - C31016 * C6171) *
                C2663 +
            (C32041 * C975 - C31010 * C964 + C32048 * C1632 - C31002 * C1627 +
             C23645 * C6180 - C31016 * C6176) *
                C32003) *
               C15335 +
           ((C24722 - C24721 + C24724 - C24723 + C24726 - C24725) * C2662 +
            (C24728 - C24727 + C24730 - C24729 + C24732 - C24731) * C32199 +
            (C32041 * C965 - C31010 * C958 + C32048 * C1628 - C31002 * C1624 +
             C23645 * C6987 - C31016 * C6986) *
                C2663 +
            (C32041 * C976 - C31010 * C966 + C32048 * C1633 - C31002 * C1629 +
             C23645 * C6989 - C31016 * C6988) *
                C32003) *
               C31869) *
              C31918 * C242) *
         C31892) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C32041 * C122 - C31010 * C115 + C32048 * C359 - C31002 * C349 +
             C23645 * C369 - C31016 * C354) *
                C2662 +
            (C32041 * C136 - C31010 * C123 + C32048 * C379 - C31002 * C360 +
             C23645 * C384 - C31016 * C370) *
                C32199 +
            (C32041 * C254 - C31010 * C244 + C32048 * C686 - C31002 * C681 +
             C23645 * C1130 - C31016 * C1118) *
                C2663 +
            (C32041 * C274 - C31010 * C255 + C32048 * C696 - C31002 * C687 +
             C23645 * C1145 - C31016 * C1131) *
                C32003) *
               C15335 +
           ((C23650 - C23651 + C23652 - C23653 + C23654 - C23655) * C2662 +
            (C23656 - C23657 + C23658 - C23659 + C23660 - C23661) * C32199 +
            (C24066 - C24065 + C24068 - C24067 + C24070 - C24069) * C2663 +
            (C24072 - C24071 + C24074 - C24073 + C24076 - C24075) * C32003) *
               C31869) *
              C31918 * C31904 * C110 +
          (((C23651 - C23650 + C23653 - C23652 + C23655 - C23654) * C2662 +
            (C23657 - C23656 + C23659 - C23658 + C23661 - C23660) * C32199 +
            (C24065 - C24066 + C24067 - C24068 + C24069 - C24070) * C2663 +
            (C24071 - C24072 + C24073 - C24074 + C24075 - C24076) * C32003) *
               C15335 +
           ((C23663 - C23662 + C23665 - C23664 + C23667 - C23666) * C2662 +
            (C23669 - C23668 + C23671 - C23670 + C23673 - C23672) * C32199 +
            (C24077 - C24078 + C24079 - C24080 + C24081 - C24082) * C2663 +
            (C24083 - C24084 + C24085 - C24086 + C24087 - C24088) * C32003) *
               C31869) *
              C31918 * C31904 * C111 +
          ((C23694 * C2662 + C23695 * C32199 +
            (C24078 - C24077 + C24080 - C24079 + C24082 - C24081) * C2663 +
            (C24084 - C24083 + C24086 - C24085 + C24088 - C24087) * C32003) *
               C15335 +
           ((C23675 - C23674 + C23677 - C23676 + C23679 - C23678) * C2662 +
            (C23681 - C23680 + C23683 - C23682 + C23685 - C23684) * C32199 +
            (C32041 * C260 - C31010 * C247 + C32048 * C692 - C31002 * C684 +
             C23645 * C2199 - C31016 * C2198) *
                C2663 +
            (C32041 * C277 - C31010 * C261 + C32048 * C699 - C31002 * C693 +
             C23645 * C2201 - C31016 * C2200) *
                C32003) *
               C31869) *
              C31918 * C31904 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C32041 * C122 - C31010 * C115 + C32048 * C359 - C31002 * C349 +
             C23645 * C369 - C31016 * C354) *
                C2662 +
            (C32041 * C136 - C31010 * C123 + C32048 * C379 - C31002 * C360 +
             C23645 * C384 - C31016 * C370) *
                C32199 +
            (C24697 - C24698 + C24699 - C24700 + C24701 - C24702) * C2663 +
            (C24703 - C24704 + C24705 - C24706 + C24707 - C24708) * C32003) *
               C15335 +
           ((C23650 - C23651 + C23652 - C23653 + C23654 - C23655) * C2662 +
            (C23656 - C23657 + C23658 - C23659 + C23660 - C23661) * C32199 +
            (C24066 - C24065 + C24068 - C24067 + C24070 - C24069) * C2663 +
            (C24072 - C24071 + C24074 - C24073 + C24076 - C24075) * C32003) *
               C31869) *
              C346 +
          (((C31010 * C349 - C32041 * C359 + C31002 * C354 - C32048 * C369 +
             C31016 * C2028 - C23645 * C2034) *
                C2662 +
            (C31010 * C360 - C32041 * C379 + C31002 * C370 - C32048 * C384 +
             C31016 * C2035 - C23645 * C2046) *
                C32199 +
            (C31010 * C681 - C32041 * C686 + C31002 * C1118 - C32048 * C1130 +
             C31016 * C2546 - C23645 * C2549) *
                C2663 +
            (C31010 * C687 - C32041 * C696 + C31002 * C1131 - C32048 * C1145 +
             C31016 * C2550 - C23645 * C2555) *
                C32003) *
               C15335 +
           ((C24235 - C24236 + C24237 - C24238 + C24239 - C24240) * C2662 +
            (C24241 - C24242 + C24243 - C24244 + C24245 - C24246) * C32199 +
            (C31010 * C682 - C32041 * C688 + C31002 * C1120 - C32048 * C1134 +
             C31016 * C2547 - C23645 * C2551) *
                C2663 +
            (C31010 * C689 - C32041 * C697 + C31002 * C1135 - C32048 * C1147 +
             C31016 * C2552 - C23645 * C2556) *
                C32003) *
               C31869) *
              C347 +
          (((C32041 * C369 - C31010 * C354 + C32048 * C2034 - C31002 * C2028 +
             C23645 * C2040 - C31016 * C2031) *
                C2662 +
            (C32041 * C384 - C31010 * C370 + C32048 * C2046 - C31002 * C2035 +
             C23645 * C2049 - C31016 * C2041) *
                C32199 +
            (C32041 * C1130 - C31010 * C1118 + C32048 * C2549 - C31002 * C2546 +
             C23645 * C6833 - C31016 * C6829) *
                C2663 +
            (C32041 * C1145 - C31010 * C1131 + C32048 * C2555 - C31002 * C2550 +
             C23645 * C6838 - C31016 * C6834) *
                C32003) *
               C15335 +
           ((C32041 * C371 - C31010 * C355 + C32048 * C2036 - C31002 * C2029 +
             C23645 * C2042 - C31016 * C2032) *
                C2662 +
            (C32041 * C385 - C31010 * C372 + C32048 * C2047 - C31002 * C2037 +
             C23645 * C2050 - C31016 * C2043) *
                C32199 +
            (C32041 * C1134 - C31010 * C1120 + C32048 * C2551 - C31002 * C2547 +
             C23645 * C11812 - C31016 * C11811) *
                C2663 +
            (C32041 * C1147 - C31010 * C1135 + C32048 * C2556 - C31002 * C2552 +
             C23645 * C11814 - C31016 * C11813) *
                C32003) *
               C31869) *
              C348) *
         C31904 * C31892) /
            (p * q * std::sqrt(p + q));
    d2ee[83] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C32041 * C122 - C31010 * C115 + C32048 * C359 - C31002 * C349 +
              C23645 * C369 - C31016 * C354) *
                 C2662 +
             (C32041 * C136 - C31010 * C123 + C32048 * C379 - C31002 * C360 +
              C23645 * C384 - C31016 * C370) *
                 C32199 +
             (C24697 - C24698 + C24699 - C24700 + C24701 - C24702) * C2663 +
             (C24703 - C24704 + C24705 - C24706 + C24707 - C24708) * C32003) *
                C15335 +
            ((C23650 - C23651 + C23652 - C23653 + C23654 - C23655) * C2662 +
             (C23656 - C23657 + C23658 - C23659 + C23660 - C23661) * C32199 +
             C25089 * C2663 + C25090 * C32003) *
                C31869) *
               C577 +
           (((C31010 * C349 - C32041 * C359 + C31002 * C354 - C32048 * C369 +
              C31016 * C2028 - C23645 * C2034) *
                 C2662 +
             (C31010 * C360 - C32041 * C379 + C31002 * C370 - C32048 * C384 +
              C31016 * C2035 - C23645 * C2046) *
                 C32199 +
             (C31010 * C681 - C32041 * C686 + C31002 * C1118 - C32048 * C1130 +
              C31016 * C2546 - C23645 * C2549) *
                 C2663 +
             (C31010 * C687 - C32041 * C696 + C31002 * C1131 - C32048 * C1145 +
              C31016 * C2550 - C23645 * C2555) *
                 C32003) *
                C15335 +
            ((C24235 - C24236 + C24237 - C24238 + C24239 - C24240) * C2662 +
             (C24241 - C24242 + C24243 - C24244 + C24245 - C24246) * C32199 +
             (C25287 - C25288 + C25289 - C25290 + C25291 - C25292) * C2663 +
             (C25293 - C25294 + C25295 - C25296 + C25297 - C25298) * C32003) *
                C31869) *
               C578) *
              C31904 * C473 +
          ((((C23651 - C23650 + C23653 - C23652 + C23655 - C23654) * C2662 +
             (C23657 - C23656 + C23659 - C23658 + C23661 - C23660) * C32199 +
             C25091 * C2663 + C25092 * C32003) *
                C15335 +
            ((C23663 - C23662 + C23665 - C23664 + C23667 - C23666) * C2662 +
             (C23669 - C23668 + C23671 - C23670 + C23673 - C23672) * C32199 +
             (C24077 - C24078 + C24079 - C24080 + C24081 - C24082) * C2663 +
             (C24083 - C24084 + C24085 - C24086 + C24087 - C24088) * C32003) *
                C31869) *
               C577 +
           (((C24236 - C24235 + C24238 - C24237 + C24240 - C24239) * C2662 +
             (C24242 - C24241 + C24244 - C24243 + C24246 - C24245) * C32199 +
             (C25288 - C25287 + C25290 - C25289 + C25292 - C25291) * C2663 +
             (C25294 - C25293 + C25296 - C25295 + C25298 - C25297) * C32003) *
                C15335 +
            ((C24248 - C24247 + C24250 - C24249 + C24252 - C24251) * C2662 +
             (C24254 - C24253 + C24256 - C24255 + C24258 - C24257) * C32199 +
             (C32041 * C690 - C31010 * C683 + C32048 * C1138 - C31002 * C1122 +
              C23645 * C2553 - C31016 * C2548) *
                 C2663 +
             (C32041 * C698 - C31010 * C691 + C32048 * C1149 - C31002 * C1139 +
              C23645 * C2557 - C31016 * C2554) *
                 C32003) *
                C31869) *
               C578) *
              C31904 * C474)) /
        (p * q * std::sqrt(p + q));
    d2ee[84] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C32041 * C122 - C31010 * C115 + C32048 * C359 - C31002 * C349 +
             C23645 * C369 - C31016 * C354) *
                C2662 +
            (C32041 * C136 - C31010 * C123 + C32048 * C379 - C31002 * C360 +
             C23645 * C384 - C31016 * C370) *
                C32199 +
            (C32041 * C254 - C31010 * C244 + C32048 * C686 - C31002 * C681 +
             C23645 * C1130 - C31016 * C1118) *
                C2663 +
            (C32041 * C274 - C31010 * C255 + C32048 * C696 - C31002 * C687 +
             C23645 * C1145 - C31016 * C1131) *
                C32003) *
               C15335 +
           ((C23650 - C23651 + C23652 - C23653 + C23654 - C23655) * C2662 +
            (C23656 - C23657 + C23658 - C23659 + C23660 - C23661) * C32199 +
            (C24066 - C24065 + C24068 - C24067 + C24070 - C24069) * C2663 +
            (C24072 - C24071 + C24074 - C24073 + C24076 - C24075) * C32003) *
               C31869) *
              C31918 * C31904 * C110 +
          (((C23651 - C23650 + C23653 - C23652 + C23655 - C23654) * C2662 +
            (C23657 - C23656 + C23659 - C23658 + C23661 - C23660) * C32199 +
            (C24065 - C24066 + C24067 - C24068 + C24069 - C24070) * C2663 +
            (C24071 - C24072 + C24073 - C24074 + C24075 - C24076) * C32003) *
               C15335 +
           ((C23663 - C23662 + C23665 - C23664 + C23667 - C23666) * C2662 +
            (C23669 - C23668 + C23671 - C23670 + C23673 - C23672) * C32199 +
            (C24077 - C24078 + C24079 - C24080 + C24081 - C24082) * C2663 +
            (C24083 - C24084 + C24085 - C24086 + C24087 - C24088) * C32003) *
               C31869) *
              C31918 * C31904 * C111 +
          ((C23694 * C2662 + C23695 * C32199 +
            (C24078 - C24077 + C24080 - C24079 + C24082 - C24081) * C2663 +
            (C24084 - C24083 + C24086 - C24085 + C24088 - C24087) * C32003) *
               C15335 +
           ((C23675 - C23674 + C23677 - C23676 + C23679 - C23678) * C2662 +
            (C23681 - C23680 + C23683 - C23682 + C23685 - C23684) * C32199 +
            (C32041 * C260 - C31010 * C247 + C32048 * C692 - C31002 * C684 +
             C23645 * C2199 - C31016 * C2198) *
                C2663 +
            (C32041 * C277 - C31010 * C261 + C32048 * C699 - C31002 * C693 +
             C23645 * C2201 - C31016 * C2200) *
                C32003) *
               C31869) *
              C31918 * C31904 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C32041 * C122 - C31010 * C115 + C32048 * C359 - C31002 * C349 +
             C23645 * C369 - C31016 * C354) *
                C2662 +
            (C32041 * C136 - C31010 * C123 + C32048 * C379 - C31002 * C360 +
             C23645 * C384 - C31016 * C370) *
                C32199 +
            (C24697 - C24698 + C24699 - C24700 + C24701 - C24702) * C2663 +
            (C24703 - C24704 + C24705 - C24706 + C24707 - C24708) * C32003) *
               C15335 +
           ((C23650 - C23651 + C23652 - C23653 + C23654 - C23655) * C2662 +
            (C23656 - C23657 + C23658 - C23659 + C23660 - C23661) * C32199 +
            (C24066 - C24065 + C24068 - C24067 + C24070 - C24069) * C2663 +
            (C24072 - C24071 + C24074 - C24073 + C24076 - C24075) * C32003) *
               C31869) *
              C31918 * C240 +
          (((C24698 - C24697 + C24700 - C24699 + C24702 - C24701) * C2662 +
            (C24704 - C24703 + C24706 - C24705 + C24708 - C24707) * C32199 +
            (C24709 - C24710 + C24711 - C24712 + C24713 - C24714) * C2663 +
            (C24715 - C24716 + C24717 - C24718 + C24719 - C24720) * C32003) *
               C15335 +
           ((C24065 - C24066 + C24067 - C24068 + C24069 - C24070) * C2662 +
            (C24071 - C24072 + C24073 - C24074 + C24075 - C24076) * C32199 +
            (C24721 - C24722 + C24723 - C24724 + C24725 - C24726) * C2663 +
            (C24727 - C24728 + C24729 - C24730 + C24731 - C24732) * C32003) *
               C31869) *
              C31918 * C241 +
          (((C24710 - C24709 + C24712 - C24711 + C24714 - C24713) * C2662 +
            (C24716 - C24715 + C24718 - C24717 + C24720 - C24719) * C32199 +
            (C32041 * C963 - C31010 * C957 + C32048 * C1626 - C31002 * C1623 +
             C23645 * C6175 - C31016 * C6171) *
                C2663 +
            (C32041 * C975 - C31010 * C964 + C32048 * C1632 - C31002 * C1627 +
             C23645 * C6180 - C31016 * C6176) *
                C32003) *
               C15335 +
           ((C24722 - C24721 + C24724 - C24723 + C24726 - C24725) * C2662 +
            (C24728 - C24727 + C24730 - C24729 + C24732 - C24731) * C32199 +
            (C32041 * C965 - C31010 * C958 + C32048 * C1628 - C31002 * C1624 +
             C23645 * C6987 - C31016 * C6986) *
                C2663 +
            (C32041 * C976 - C31010 * C966 + C32048 * C1633 - C31002 * C1629 +
             C23645 * C6989 - C31016 * C6988) *
                C32003) *
               C31869) *
              C31918 * C242) *
         C31892) /
            (p * q * std::sqrt(p + q));
    d2ee[85] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19912 * C122 - C19914 * C115 + C32045 * C359 - C19915 * C349) *
                 C817 +
             (C19912 * C136 - C19914 * C123 + C32045 * C379 - C19915 * C360) *
                 C32265 +
             (C20909 - C20910 + C20911 - C20912) * C818 +
             (C20913 - C20914 + C20915 - C20916) * C32253 + C20951 * C819 +
             C20952 * C32230) *
                C15335 +
            ((C19917 - C19918 + C19919 - C19920) * C817 +
             (C19921 - C19922 + C19923 - C19924) * C32265 + C21305 * C818 +
             C21306 * C32253 + C20949 * C819 + C20950 * C32230) *
                C31869) *
               C31918 * C471 +
           (((C20910 - C20909 + C20912 - C20911) * C817 +
             (C20914 - C20913 + C20916 - C20915) * C32265 +
             (C20918 - C20917 + C20920 - C20919) * C818 +
             (C20922 - C20921 + C20924 - C20923) * C32253 +
             (C20929 - C20930 + C20931 - C20932) * C819 +
             (C20933 - C20934 + C20935 - C20936) * C32230) *
                C15335 +
            (C21307 * C817 + C21308 * C32265 + C21309 * C818 + C21310 * C32253 +
             (C20937 - C20938 + C20939 - C20940) * C819 +
             (C20941 - C20942 + C20943 - C20944) * C32230) *
                C31869) *
               C31918 * C472) *
              C473 +
          ((((C19918 - C19917 + C19920 - C19919) * C817 +
             (C19922 - C19921 + C19924 - C19923) * C32265 + C21307 * C818 +
             C21308 * C32253 + C21309 * C819 + C21310 * C32230) *
                C15335 +
            ((C19926 - C19925 + C19928 - C19927) * C817 +
             (C19930 - C19929 + C19932 - C19931) * C32265 +
             (C20301 - C20302 + C20303 - C20304) * C818 +
             (C20305 - C20306 + C20307 - C20308) * C32253 +
             (C20755 - C20756 + C20757 - C20758) * C819 +
             (C20759 - C20760 + C20761 - C20762) * C32230) *
                C31869) *
               C31918 * C471 +
           ((C21305 * C817 + C21306 * C32265 + C20949 * C818 + C20950 * C32253 +
             (C20938 - C20937 + C20940 - C20939) * C819 +
             (C20942 - C20941 + C20944 - C20943) * C32230) *
                C15335 +
            ((C20302 - C20301 + C20304 - C20303) * C817 +
             (C20306 - C20305 + C20308 - C20307) * C32265 +
             (C20756 - C20755 + C20758 - C20757) * C818 +
             (C20760 - C20759 + C20762 - C20761) * C32253 +
             (C19912 * C967 - C19914 * C959 + C32045 * C1630 - C19915 * C1625) *
                 C819 +
             (C19912 * C977 - C19914 * C968 + C32045 * C1634 - C19915 * C1631) *
                 C32230) *
                C31869) *
               C31918 * C472) *
              C474)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19912 * C122 - C19914 * C115 + C32045 * C359 - C19915 * C349) *
                 C114 +
             (C19912 * C136 - C19914 * C123 + C32045 * C379 - C19915 * C360) *
                 C31941) *
                C32271 +
            ((C19917 - C19918 + C19919 - C19920) * C114 +
             (C19921 - C19922 + C19923 - C19924) * C31941) *
                C32264 +
            C19965 * C32251 + C19966 * C32234) *
               C31918 * C471 +
           (((C19914 * C244 - C19912 * C254 + C19915 * C681 - C32045 * C686) *
                 C114 +
             (C19914 * C255 - C19912 * C274 + C19915 * C687 - C32045 * C696) *
                 C31941) *
                C32271 +
            ((C20293 - C20294 + C20295 - C20296) * C114 +
             (C20297 - C20298 + C20299 - C20300) * C31941) *
                C32264 +
            ((C20301 - C20302 + C20303 - C20304) * C114 +
             (C20305 - C20306 + C20307 - C20308) * C31941) *
                C32251 +
            ((C20309 - C20310 + C20311 - C20312) * C114 +
             (C20313 - C20314 + C20315 - C20316) * C31941) *
                C32234) *
               C31918 * C472) *
              C473 +
          ((((C19918 - C19917 + C19920 - C19919) * C114 +
             (C19922 - C19921 + C19924 - C19923) * C31941) *
                C32271 +
            ((C19926 - C19925 + C19928 - C19927) * C114 +
             (C19930 - C19929 + C19932 - C19931) * C31941) *
                C32264 +
            ((C19934 - C19933 + C19936 - C19935) * C114 +
             (C19938 - C19937 + C19940 - C19939) * C31941) *
                C32251 +
            ((C19941 - C19942 + C19943 - C19944) * C114 +
             (C19945 - C19946 + C19947 - C19948) * C31941) *
                C32234) *
               C31918 * C471 +
           (((C20294 - C20293 + C20296 - C20295) * C114 +
             (C20298 - C20297 + C20300 - C20299) * C31941) *
                C32271 +
            ((C20302 - C20301 + C20304 - C20303) * C114 +
             (C20306 - C20305 + C20308 - C20307) * C31941) *
                C32264 +
            ((C20310 - C20309 + C20312 - C20311) * C114 +
             (C20314 - C20313 + C20316 - C20315) * C31941) *
                C32251 +
            ((C19912 * C262 - C19914 * C248 + C32045 * C694 - C19915 * C685) *
                 C114 +
             (C19912 * C278 - C19914 * C263 + C32045 * C700 - C19915 * C695) *
                 C31941) *
                C32234) *
               C31918 * C472) *
              C474)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C32273 * C122 - C21832 * C115 + C32270 * C359 - C21833 * C349 +
              C32261 * C369 - C21834 * C354 + C32246 * C2034 - C21835 * C2028) *
                 C114 +
             (C32273 * C136 - C21832 * C123 + C32270 * C379 - C21833 * C360 +
              C32261 * C384 - C21834 * C370 + C32246 * C2046 - C21835 * C2035) *
                 C31941) *
                C15335 +
            ((C21837 - C21838 + C21839 - C21840 + C21841 - C21842 + C21843 -
              C21844) *
                 C114 +
             (C21845 - C21846 + C21847 - C21848 + C21849 - C21850 + C21851 -
              C21852) *
                 C31941) *
                C31869) *
               C31918 * C471 +
           (((C21832 * C244 - C32273 * C254 + C21833 * C681 - C32270 * C686 +
              C21834 * C1118 - C32261 * C1130 + C21835 * C2546 -
              C32246 * C2549) *
                 C114 +
             (C21832 * C255 - C32273 * C274 + C21833 * C687 - C32270 * C696 +
              C21834 * C1131 - C32261 * C1145 + C21835 * C2550 -
              C32246 * C2555) *
                 C31941) *
                C15335 +
            ((C22195 - C22196 + C22197 - C22198 + C22199 - C22200 + C22201 -
              C22202) *
                 C114 +
             (C22203 - C22204 + C22205 - C22206 + C22207 - C22208 + C22209 -
              C22210) *
                 C31941) *
                C31869) *
               C31918 * C472) *
              C473 +
          ((((C21838 - C21837 + C21840 - C21839 + C21842 - C21841 + C21844 -
              C21843) *
                 C114 +
             (C21846 - C21845 + C21848 - C21847 + C21850 - C21849 + C21852 -
              C21851) *
                 C31941) *
                C15335 +
            ((C21853 - C21854 + C21855 - C21856 + C21857 - C21858 + C21859 -
              C21860) *
                 C114 +
             (C21861 - C21862 + C21863 - C21864 + C21865 - C21866 + C21867 -
              C21868) *
                 C31941) *
                C31869) *
               C31918 * C471 +
           (((C22196 - C22195 + C22198 - C22197 + C22200 - C22199 + C22202 -
              C22201) *
                 C114 +
             (C22204 - C22203 + C22206 - C22205 + C22208 - C22207 + C22210 -
              C22209) *
                 C31941) *
                C15335 +
            ((C32273 * C258 - C21832 * C246 + C32270 * C690 - C21833 * C683 +
              C32261 * C1138 - C21834 * C1122 + C32246 * C2553 -
              C21835 * C2548) *
                 C114 +
             (C32273 * C276 - C21832 * C259 + C32270 * C698 - C21833 * C691 +
              C32261 * C1149 - C21834 * C1139 + C32246 * C2557 -
              C21835 * C2554) *
                 C31941) *
                C31869) *
               C31918 * C472) *
              C474)) /
            (p * q * std::sqrt(p + q));
    d2ee[86] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19912 * C122 - C19914 * C115 + C32045 * C359 - C19915 * C349) *
                 C817 +
             (C19912 * C136 - C19914 * C123 + C32045 * C379 - C19915 * C360) *
                 C32265 +
             (C20909 - C20910 + C20911 - C20912) * C818 +
             (C20913 - C20914 + C20915 - C20916) * C32253 + C20951 * C819 +
             C20952 * C32230) *
                C15335 +
            ((C19917 - C19918 + C19919 - C19920) * C817 +
             (C19921 - C19922 + C19923 - C19924) * C32265 + C21305 * C818 +
             C21306 * C32253 + C20949 * C819 + C20950 * C32230) *
                C31869) *
               C577 +
           (((C19914 * C349 - C19912 * C359 + C19915 * C354 - C32045 * C369) *
                 C817 +
             (C19914 * C360 - C19912 * C379 + C19915 * C370 - C32045 * C384) *
                 C32265 +
             (C21715 - C21716 + C21717 - C21718) * C818 +
             (C21719 - C21720 + C21721 - C21722) * C32253 +
             (C21723 - C21724 + C21725 - C21726) * C819 +
             (C21727 - C21728 + C21729 - C21730) * C32230) *
                C15335 +
            ((C20447 - C20448 + C20449 - C20450) * C817 +
             (C20451 - C20452 + C20453 - C20454) * C32265 +
             (C21505 - C21506 + C21507 - C21508) * C818 +
             (C21509 - C21510 + C21511 - C21512) * C32253 +
             (C21513 - C21514 + C21515 - C21516) * C819 +
             (C21517 - C21518 + C21519 - C21520) * C32230) *
                C31869) *
               C578) *
              C471 +
          ((((C20910 - C20909 + C20912 - C20911) * C817 +
             (C20914 - C20913 + C20916 - C20915) * C32265 +
             (C20918 - C20917 + C20920 - C20919) * C818 +
             (C20922 - C20921 + C20924 - C20923) * C32253 +
             (C20929 - C20930 + C20931 - C20932) * C819 +
             (C20933 - C20934 + C20935 - C20936) * C32230) *
                C15335 +
            (C21307 * C817 + C21308 * C32265 + C21309 * C818 + C21310 * C32253 +
             (C20937 - C20938 + C20939 - C20940) * C819 +
             (C20941 - C20942 + C20943 - C20944) * C32230) *
                C31869) *
               C577 +
           (((C21716 - C21715 + C21718 - C21717) * C817 +
             (C21720 - C21719 + C21722 - C21721) * C32265 +
             (C21724 - C21723 + C21726 - C21725) * C818 +
             (C21728 - C21727 + C21730 - C21729) * C32253 +
             (C19912 * C1626 - C19914 * C1623 + C32045 * C6175 -
              C19915 * C6171) *
                 C819 +
             (C19912 * C1632 - C19914 * C1627 + C32045 * C6180 -
              C19915 * C6176) *
                 C32230) *
                C15335 +
            ((C21506 - C21505 + C21508 - C21507) * C817 +
             (C21510 - C21509 + C21512 - C21511) * C32265 +
             (C21514 - C21513 + C21516 - C21515) * C818 +
             (C21518 - C21517 + C21520 - C21519) * C32253 +
             (C19912 * C1628 - C19914 * C1624 + C32045 * C6987 -
              C19915 * C6986) *
                 C819 +
             (C19912 * C1633 - C19914 * C1629 + C32045 * C6989 -
              C19915 * C6988) *
                 C32230) *
                C31869) *
               C578) *
              C472) *
         C31892) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19912 * C122 - C19914 * C115 + C32045 * C359 - C19915 * C349) *
                 C114 +
             (C19912 * C136 - C19914 * C123 + C32045 * C379 - C19915 * C360) *
                 C31941) *
                C32271 +
            ((C19917 - C19918 + C19919 - C19920) * C114 +
             (C19921 - C19922 + C19923 - C19924) * C31941) *
                C32264 +
            C19965 * C32251 + C19966 * C32234) *
               C577 +
           (((C19914 * C349 - C19912 * C359 + C19915 * C354 - C32045 * C369) *
                 C114 +
             (C19914 * C360 - C19912 * C379 + C19915 * C370 - C32045 * C384) *
                 C31941) *
                C32271 +
            ((C20447 - C20448 + C20449 - C20450) * C114 +
             (C20451 - C20452 + C20453 - C20454) * C31941) *
                C32264 +
            ((C20455 - C20456 + C20457 - C20458) * C114 +
             (C20459 - C20460 + C20461 - C20462) * C31941) *
                C32251 +
            ((C20463 - C20464 + C20465 - C20466) * C114 +
             (C20467 - C20468 + C20469 - C20470) * C31941) *
                C32234) *
               C578) *
              C471 +
          ((((C19914 * C244 - C19912 * C254 + C19915 * C681 - C32045 * C686) *
                 C114 +
             (C19914 * C255 - C19912 * C274 + C19915 * C687 - C32045 * C696) *
                 C31941) *
                C32271 +
            ((C20293 - C20294 + C20295 - C20296) * C114 +
             (C20297 - C20298 + C20299 - C20300) * C31941) *
                C32264 +
            ((C20301 - C20302 + C20303 - C20304) * C114 +
             (C20305 - C20306 + C20307 - C20308) * C31941) *
                C32251 +
            ((C20309 - C20310 + C20311 - C20312) * C114 +
             (C20313 - C20314 + C20315 - C20316) * C31941) *
                C32234) *
               C577 +
           (((C19912 * C686 - C19914 * C681 + C32045 * C1130 - C19915 * C1118) *
                 C114 +
             (C19912 * C696 - C19914 * C687 + C32045 * C1145 - C19915 * C1131) *
                 C31941) *
                C32271 +
            ((C19912 * C688 - C19914 * C682 + C32045 * C1134 - C19915 * C1120) *
                 C114 +
             (C19912 * C697 - C19914 * C689 + C32045 * C1147 - C19915 * C1135) *
                 C31941) *
                C32264 +
            ((C19912 * C690 - C19914 * C683 + C32045 * C1138 - C19915 * C1122) *
                 C114 +
             (C19912 * C698 - C19914 * C691 + C32045 * C1149 - C19915 * C1139) *
                 C31941) *
                C32251 +
            ((C19912 * C692 - C19914 * C684 + C32045 * C2199 - C19915 * C2198) *
                 C114 +
             (C19912 * C699 - C19914 * C693 + C32045 * C2201 - C19915 * C2200) *
                 C31941) *
                C32234) *
               C578) *
              C472) *
         C31892) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C32273 * C122 - C21832 * C115 + C32270 * C359 - C21833 * C349 +
              C32261 * C369 - C21834 * C354 + C32246 * C2034 - C21835 * C2028) *
                 C114 +
             (C32273 * C136 - C21832 * C123 + C32270 * C379 - C21833 * C360 +
              C32261 * C384 - C21834 * C370 + C32246 * C2046 - C21835 * C2035) *
                 C31941) *
                C15335 +
            ((C21837 - C21838 + C21839 - C21840 + C21841 - C21842 + C21843 -
              C21844) *
                 C114 +
             (C21845 - C21846 + C21847 - C21848 + C21849 - C21850 + C21851 -
              C21852) *
                 C31941) *
                C31869) *
               C577 +
           (((C21832 * C349 - C32273 * C359 + C21833 * C354 - C32270 * C369 +
              C21834 * C2028 - C32261 * C2034 + C21835 * C2031 -
              C32246 * C2040) *
                 C114 +
             (C21832 * C360 - C32273 * C379 + C21833 * C370 - C32270 * C384 +
              C21834 * C2035 - C32261 * C2046 + C21835 * C2041 -
              C32246 * C2049) *
                 C31941) *
                C15335 +
            ((C22341 - C22342 + C22343 - C22344 + C22345 - C22346 + C22347 -
              C22348) *
                 C114 +
             (C22349 - C22350 + C22351 - C22352 + C22353 - C22354 + C22355 -
              C22356) *
                 C31941) *
                C31869) *
               C578) *
              C471 +
          ((((C21832 * C244 - C32273 * C254 + C21833 * C681 - C32270 * C686 +
              C21834 * C1118 - C32261 * C1130 + C21835 * C2546 -
              C32246 * C2549) *
                 C114 +
             (C21832 * C255 - C32273 * C274 + C21833 * C687 - C32270 * C696 +
              C21834 * C1131 - C32261 * C1145 + C21835 * C2550 -
              C32246 * C2555) *
                 C31941) *
                C15335 +
            ((C22195 - C22196 + C22197 - C22198 + C22199 - C22200 + C22201 -
              C22202) *
                 C114 +
             (C22203 - C22204 + C22205 - C22206 + C22207 - C22208 + C22209 -
              C22210) *
                 C31941) *
                C31869) *
               C577 +
           (((C32273 * C686 - C21832 * C681 + C32270 * C1130 - C21833 * C1118 +
              C32261 * C2549 - C21834 * C2546 + C32246 * C6833 -
              C21835 * C6829) *
                 C114 +
             (C32273 * C696 - C21832 * C687 + C32270 * C1145 - C21833 * C1131 +
              C32261 * C2555 - C21834 * C2550 + C32246 * C6838 -
              C21835 * C6834) *
                 C31941) *
                C15335 +
            ((C32273 * C688 - C21832 * C682 + C32270 * C1134 - C21833 * C1120 +
              C32261 * C2551 - C21834 * C2547 + C32246 * C11812 -
              C21835 * C11811) *
                 C114 +
             (C32273 * C697 - C21832 * C689 + C32270 * C1147 - C21833 * C1135 +
              C32261 * C2556 - C21834 * C2552 + C32246 * C11814 -
              C21835 * C11813) *
                 C31941) *
                C31869) *
               C578) *
              C472) *
         C31892) /
            (p * q * std::sqrt(p + q));
    d2ee[87] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C19912 * C122 - C19914 * C115 + C32045 * C359 -
                 C19915 * C349) *
                    C114 +
                (C19912 * C136 - C19914 * C123 + C32045 * C379 -
                 C19915 * C360) *
                    C31941) *
                   C32271 +
               ((C19917 - C19918 + C19919 - C19920) * C114 +
                (C19921 - C19922 + C19923 - C19924) * C31941) *
                   C32264 +
               C19965 * C32251 + C19966 * C32234) *
                  C31918 * C31904 * C110 +
              (((C19918 - C19917 + C19920 - C19919) * C114 +
                (C19922 - C19921 + C19924 - C19923) * C31941) *
                   C32271 +
               ((C19926 - C19925 + C19928 - C19927) * C114 +
                (C19930 - C19929 + C19932 - C19931) * C31941) *
                   C32264 +
               ((C19934 - C19933 + C19936 - C19935) * C114 +
                (C19938 - C19937 + C19940 - C19939) * C31941) *
                   C32251 +
               ((C19941 - C19942 + C19943 - C19944) * C114 +
                (C19945 - C19946 + C19947 - C19948) * C31941) *
                   C32234) *
                  C31918 * C31904 * C111 +
              (C19965 * C32271 + C19966 * C32264 +
               ((C19942 - C19941 + C19944 - C19943) * C114 +
                (C19946 - C19945 + C19948 - C19947) * C31941) *
                   C32251 +
               ((C19912 * C132 - C19914 * C120 + C32045 * C580 -
                 C19915 * C579) *
                    C114 +
                (C19912 * C141 - C19914 * C133 + C32045 * C582 -
                 C19915 * C581) *
                    C31941) *
                   C32234) *
                  C31918 * C31904 * C112) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C19912 * C122 - C19914 * C115 + C32045 * C359 -
                 C19915 * C349) *
                    C114 +
                (C19912 * C136 - C19914 * C123 + C32045 * C379 -
                 C19915 * C360) *
                    C31941) *
                   C32271 +
               ((C19917 - C19918 + C19919 - C19920) * C114 +
                (C19921 - C19922 + C19923 - C19924) * C31941) *
                   C32264 +
               C19965 * C32251 + C19966 * C32234) *
                  C31918 * C240 +
              (((C19914 * C244 - C19912 * C254 + C19915 * C681 -
                 C32045 * C686) *
                    C114 +
                (C19914 * C255 - C19912 * C274 + C19915 * C687 -
                 C32045 * C696) *
                    C31941) *
                   C32271 +
               ((C19914 * C245 - C19912 * C256 + C19915 * C682 -
                 C32045 * C688) *
                    C114 +
                (C19914 * C257 - C19912 * C275 + C19915 * C689 -
                 C32045 * C697) *
                    C31941) *
                   C32264 +
               ((C19914 * C246 - C19912 * C258 + C19915 * C683 -
                 C32045 * C690) *
                    C114 +
                (C19914 * C259 - C19912 * C276 + C19915 * C691 -
                 C32045 * C698) *
                    C31941) *
                   C32251 +
               ((C19914 * C247 - C19912 * C260 + C19915 * C684 -
                 C32045 * C692) *
                    C114 +
                (C19914 * C261 - C19912 * C277 + C19915 * C693 -
                 C32045 * C699) *
                    C31941) *
                   C32234) *
                  C31918 * C241 +
              (((C19912 * C264 - C19914 * C249 + C32045 * C1124 -
                 C19915 * C1115) *
                    C114 +
                (C19912 * C279 - C19914 * C265 + C32045 * C1142 -
                 C19915 * C1125) *
                    C31941) *
                   C32271 +
               ((C19912 * C266 - C19914 * C250 + C32045 * C1126 -
                 C19915 * C1116) *
                    C114 +
                (C19912 * C280 - C19914 * C267 + C32045 * C1143 -
                 C19915 * C1127) *
                    C31941) *
                   C32264 +
               ((C19912 * C268 - C19914 * C251 + C32045 * C1128 -
                 C19915 * C1117) *
                    C114 +
                (C19912 * C281 - C19914 * C269 + C32045 * C1144 -
                 C19915 * C1129) *
                    C31941) *
                   C32251 +
               ((C19912 * C270 - C19914 * C252 + C32045 * C1458 -
                 C19915 * C1457) *
                    C114 +
                (C19912 * C282 - C19914 * C271 + C32045 * C1460 -
                 C19915 * C1459) *
                    C31941) *
                   C32234) *
                  C31918 * C242) *
             C31892) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19912 * C122 - C19914 * C115 + C32045 * C359 - C19915 * C349) *
                C114 +
            (C19912 * C136 - C19914 * C123 + C32045 * C379 - C19915 * C360) *
                C31941) *
               C32271 +
           ((C19917 - C19918 + C19919 - C19920) * C114 +
            (C19921 - C19922 + C19923 - C19924) * C31941) *
               C32264 +
           C19965 * C32251 + C19966 * C32234) *
              C346 +
          (((C19914 * C349 - C19912 * C359 + C19915 * C354 - C32045 * C369) *
                C114 +
            (C19914 * C360 - C19912 * C379 + C19915 * C370 - C32045 * C384) *
                C31941) *
               C32271 +
           ((C19914 * C350 - C19912 * C361 + C19915 * C355 - C32045 * C371) *
                C114 +
            (C19914 * C362 - C19912 * C380 + C19915 * C372 - C32045 * C385) *
                C31941) *
               C32264 +
           ((C19914 * C351 - C19912 * C363 + C19915 * C356 - C32045 * C373) *
                C114 +
            (C19914 * C364 - C19912 * C381 + C19915 * C374 - C32045 * C386) *
                C31941) *
               C32251 +
           ((C19914 * C352 - C19912 * C365 + C19915 * C357 - C32045 * C375) *
                C114 +
            (C19914 * C366 - C19912 * C382 + C19915 * C376 - C32045 * C387) *
                C31941) *
               C32234) *
              C347 +
          (((C19912 * C369 - C19914 * C354 + C32045 * C2034 - C19915 * C2028) *
                C114 +
            (C19912 * C384 - C19914 * C370 + C32045 * C2046 - C19915 * C2035) *
                C31941) *
               C32271 +
           ((C19912 * C371 - C19914 * C355 + C32045 * C2036 - C19915 * C2029) *
                C114 +
            (C19912 * C385 - C19914 * C372 + C32045 * C2047 - C19915 * C2037) *
                C31941) *
               C32264 +
           ((C19912 * C373 - C19914 * C356 + C32045 * C2038 - C19915 * C2030) *
                C114 +
            (C19912 * C386 - C19914 * C374 + C32045 * C2048 - C19915 * C2039) *
                C31941) *
               C32251 +
           ((C19912 * C375 - C19914 * C357 + C32045 * C2373 - C19915 * C2372) *
                C114 +
            (C19912 * C387 - C19914 * C376 + C32045 * C2375 - C19915 * C2374) *
                C31941) *
               C32234) *
              C348) *
         C31904 * C31892) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C19912 * C122 - C19914 * C115 + C32045 * C359 - C19915 * C349) *
                C817 +
            (C19912 * C136 - C19914 * C123 + C32045 * C379 - C19915 * C360) *
                C32265 +
            (C19912 * C254 - C19914 * C244 + C32045 * C686 - C19915 * C681) *
                C818 +
            (C19912 * C274 - C19914 * C255 + C32045 * C696 - C19915 * C687) *
                C32253 +
            (C19912 * C264 - C19914 * C249 + C32045 * C1124 - C19915 * C1115) *
                C819 +
            (C19912 * C279 - C19914 * C265 + C32045 * C1142 - C19915 * C1125) *
                C32230) *
               C15335 +
           ((C19917 - C19918 + C19919 - C19920) * C817 +
            (C19921 - C19922 + C19923 - C19924) * C32265 +
            (C20294 - C20293 + C20296 - C20295) * C818 +
            (C20298 - C20297 + C20300 - C20299) * C32253 +
            (C20747 - C20748 + C20749 - C20750) * C819 +
            (C20751 - C20752 + C20753 - C20754) * C32230) *
               C31869) *
              C31918 * C31904 * C110 +
          (((C19918 - C19917 + C19920 - C19919) * C817 +
            (C19922 - C19921 + C19924 - C19923) * C32265 +
            (C20293 - C20294 + C20295 - C20296) * C818 +
            (C20297 - C20298 + C20299 - C20300) * C32253 +
            (C20748 - C20747 + C20750 - C20749) * C819 +
            (C20752 - C20751 + C20754 - C20753) * C32230) *
               C15335 +
           ((C19926 - C19925 + C19928 - C19927) * C817 +
            (C19930 - C19929 + C19932 - C19931) * C32265 +
            (C20301 - C20302 + C20303 - C20304) * C818 +
            (C20305 - C20306 + C20307 - C20308) * C32253 +
            (C20755 - C20756 + C20757 - C20758) * C819 +
            (C20759 - C20760 + C20761 - C20762) * C32230) *
               C31869) *
              C31918 * C31904 * C111 +
          ((C19957 * C817 + C19958 * C32265 +
            (C20302 - C20301 + C20304 - C20303) * C818 +
            (C20306 - C20305 + C20308 - C20307) * C32253 +
            (C20756 - C20755 + C20758 - C20757) * C819 +
            (C20760 - C20759 + C20762 - C20761) * C32230) *
               C15335 +
           (C19959 * C817 + C19960 * C32265 +
            (C20310 - C20309 + C20312 - C20311) * C818 +
            (C20314 - C20313 + C20316 - C20315) * C32253 +
            (C19912 * C270 - C19914 * C252 + C32045 * C1458 - C19915 * C1457) *
                C819 +
            (C19912 * C282 - C19914 * C271 + C32045 * C1460 - C19915 * C1459) *
                C32230) *
               C31869) *
              C31918 * C31904 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C19912 * C122 - C19914 * C115 + C32045 * C359 - C19915 * C349) *
                C817 +
            (C19912 * C136 - C19914 * C123 + C32045 * C379 - C19915 * C360) *
                C32265 +
            (C20909 - C20910 + C20911 - C20912) * C818 +
            (C20913 - C20914 + C20915 - C20916) * C32253 + C20951 * C819 +
            C20952 * C32230) *
               C15335 +
           ((C19917 - C19918 + C19919 - C19920) * C817 +
            (C19921 - C19922 + C19923 - C19924) * C32265 +
            (C20294 - C20293 + C20296 - C20295) * C818 +
            (C20298 - C20297 + C20300 - C20299) * C32253 + C20949 * C819 +
            C20950 * C32230) *
               C31869) *
              C31918 * C240 +
          (((C20910 - C20909 + C20912 - C20911) * C817 +
            (C20914 - C20913 + C20916 - C20915) * C32265 +
            (C20918 - C20917 + C20920 - C20919) * C818 +
            (C20922 - C20921 + C20924 - C20923) * C32253 +
            (C20929 - C20930 + C20931 - C20932) * C819 +
            (C20933 - C20934 + C20935 - C20936) * C32230) *
               C15335 +
           ((C20293 - C20294 + C20295 - C20296) * C817 +
            (C20297 - C20298 + C20299 - C20300) * C32265 +
            (C20748 - C20747 + C20750 - C20749) * C818 +
            (C20752 - C20751 + C20754 - C20753) * C32253 +
            (C20937 - C20938 + C20939 - C20940) * C819 +
            (C20941 - C20942 + C20943 - C20944) * C32230) *
               C31869) *
              C31918 * C241 +
          ((C20951 * C817 + C20952 * C32265 +
            (C20930 - C20929 + C20932 - C20931) * C818 +
            (C20934 - C20933 + C20936 - C20935) * C32253 +
            (C19912 * C969 - C19914 * C960 + C32045 * C6173 - C19915 * C6170) *
                C819 +
            (C19912 * C978 - C19914 * C970 + C32045 * C6179 - C19915 * C6174) *
                C32230) *
               C15335 +
           (C20949 * C817 + C20950 * C32265 +
            (C20938 - C20937 + C20940 - C20939) * C818 +
            (C20942 - C20941 + C20944 - C20943) * C32253 +
            (C19912 * C971 - C19914 * C961 + C32045 * C6355 - C19915 * C6354) *
                C819 +
            (C19912 * C979 - C19914 * C972 + C32045 * C6357 - C19915 * C6356) *
                C32230) *
               C31869) *
              C31918 * C242) *
         C31892) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C19912 * C122 - C19914 * C115 + C32045 * C359 - C19915 * C349) *
                C817 +
            (C19912 * C136 - C19914 * C123 + C32045 * C379 - C19915 * C360) *
                C32265 +
            (C20909 - C20910 + C20911 - C20912) * C818 +
            (C20913 - C20914 + C20915 - C20916) * C32253 + C20951 * C819 +
            C20952 * C32230) *
               C15335 +
           ((C19917 - C19918 + C19919 - C19920) * C817 +
            (C19921 - C19922 + C19923 - C19924) * C32265 +
            (C20294 - C20293 + C20296 - C20295) * C818 +
            (C20298 - C20297 + C20300 - C20299) * C32253 + C20949 * C819 +
            C20950 * C32230) *
               C31869) *
              C346 +
          (((C19914 * C349 - C19912 * C359 + C19915 * C354 - C32045 * C369) *
                C817 +
            (C19914 * C360 - C19912 * C379 + C19915 * C370 - C32045 * C384) *
                C32265 +
            (C19914 * C681 - C19912 * C686 + C19915 * C1118 - C32045 * C1130) *
                C818 +
            (C19914 * C687 - C19912 * C696 + C19915 * C1131 - C32045 * C1145) *
                C32253 +
            (C19914 * C1115 - C19912 * C1124 + C19915 * C1119 -
             C32045 * C1132) *
                C819 +
            (C19914 * C1125 - C19912 * C1142 + C19915 * C1133 -
             C32045 * C1146) *
                C32230) *
               C15335 +
           ((C20447 - C20448 + C20449 - C20450) * C817 +
            (C20451 - C20452 + C20453 - C20454) * C32265 +
            (C19914 * C682 - C19912 * C688 + C19915 * C1120 - C32045 * C1134) *
                C818 +
            (C19914 * C689 - C19912 * C697 + C19915 * C1135 - C32045 * C1147) *
                C32253 +
            (C19914 * C1116 - C19912 * C1126 + C19915 * C1121 -
             C32045 * C1136) *
                C819 +
            (C19914 * C1127 - C19912 * C1143 + C19915 * C1137 -
             C32045 * C1148) *
                C32230) *
               C31869) *
              C347 +
          (((C19912 * C369 - C19914 * C354 + C32045 * C2034 - C19915 * C2028) *
                C817 +
            (C19912 * C384 - C19914 * C370 + C32045 * C2046 - C19915 * C2035) *
                C32265 +
            (C19912 * C1130 - C19914 * C1118 + C32045 * C2549 -
             C19915 * C2546) *
                C818 +
            (C19912 * C1145 - C19914 * C1131 + C32045 * C2555 -
             C19915 * C2550) *
                C32253 +
            (C19912 * C1132 - C19914 * C1119 + C32045 * C6831 -
             C19915 * C6828) *
                C819 +
            (C19912 * C1146 - C19914 * C1133 + C32045 * C6837 -
             C19915 * C6832) *
                C32230) *
               C15335 +
           ((C19912 * C371 - C19914 * C355 + C32045 * C2036 - C19915 * C2029) *
                C817 +
            (C19912 * C385 - C19914 * C372 + C32045 * C2047 - C19915 * C2037) *
                C32265 +
            (C19912 * C1134 - C19914 * C1120 + C32045 * C2551 -
             C19915 * C2547) *
                C818 +
            (C19912 * C1147 - C19914 * C1135 + C32045 * C2556 -
             C19915 * C2552) *
                C32253 +
            (C19912 * C1136 - C19914 * C1121 + C32045 * C7149 -
             C19915 * C7148) *
                C819 +
            (C19912 * C1148 - C19914 * C1137 + C32045 * C7151 -
             C19915 * C7150) *
                C32230) *
               C31869) *
              C348) *
         C31904 * C31892) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C32273 * C122 - C21832 * C115 + C32270 * C359 - C21833 * C349 +
             C32261 * C369 - C21834 * C354 + C32246 * C2034 - C21835 * C2028) *
                C114 +
            (C32273 * C136 - C21832 * C123 + C32270 * C379 - C21833 * C360 +
             C32261 * C384 - C21834 * C370 + C32246 * C2046 - C21835 * C2035) *
                C31941) *
               C15335 +
           ((C21837 - C21838 + C21839 - C21840 + C21841 - C21842 + C21843 -
             C21844) *
                C114 +
            (C21845 - C21846 + C21847 - C21848 + C21849 - C21850 + C21851 -
             C21852) *
                C31941) *
               C31869) *
              C31918 * C31904 * C110 +
          (((C21838 - C21837 + C21840 - C21839 + C21842 - C21841 + C21844 -
             C21843) *
                C114 +
            (C21846 - C21845 + C21848 - C21847 + C21850 - C21849 + C21852 -
             C21851) *
                C31941) *
               C15335 +
           ((C21853 - C21854 + C21855 - C21856 + C21857 - C21858 + C21859 -
             C21860) *
                C114 +
            (C21861 - C21862 + C21863 - C21864 + C21865 - C21866 + C21867 -
             C21868) *
                C31941) *
               C31869) *
              C31918 * C31904 * C111 +
          (((C21854 - C21853 + C21856 - C21855 + C21858 - C21857 + C21860 -
             C21859) *
                C114 +
            (C21862 - C21861 + C21864 - C21863 + C21866 - C21865 + C21868 -
             C21867) *
                C31941) *
               C15335 +
           ((C32273 * C128 - C21832 * C118 + C32270 * C365 - C21833 * C352 +
             C32261 * C375 - C21834 * C357 + C32246 * C2373 - C21835 * C2372) *
                C114 +
            (C32273 * C139 - C21832 * C129 + C32270 * C382 - C21833 * C366 +
             C32261 * C387 - C21834 * C376 + C32246 * C2375 - C21835 * C2374) *
                C31941) *
               C31869) *
              C31918 * C31904 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C32273 * C122 - C21832 * C115 + C32270 * C359 - C21833 * C349 +
             C32261 * C369 - C21834 * C354 + C32246 * C2034 - C21835 * C2028) *
                C114 +
            (C32273 * C136 - C21832 * C123 + C32270 * C379 - C21833 * C360 +
             C32261 * C384 - C21834 * C370 + C32246 * C2046 - C21835 * C2035) *
                C31941) *
               C15335 +
           ((C21837 - C21838 + C21839 - C21840 + C21841 - C21842 + C21843 -
             C21844) *
                C114 +
            (C21845 - C21846 + C21847 - C21848 + C21849 - C21850 + C21851 -
             C21852) *
                C31941) *
               C31869) *
              C31918 * C240 +
          (((C21832 * C244 - C32273 * C254 + C21833 * C681 - C32270 * C686 +
             C21834 * C1118 - C32261 * C1130 + C21835 * C2546 -
             C32246 * C2549) *
                C114 +
            (C21832 * C255 - C32273 * C274 + C21833 * C687 - C32270 * C696 +
             C21834 * C1131 - C32261 * C1145 + C21835 * C2550 -
             C32246 * C2555) *
                C31941) *
               C15335 +
           ((C21832 * C245 - C32273 * C256 + C21833 * C682 - C32270 * C688 +
             C21834 * C1120 - C32261 * C1134 + C21835 * C2547 -
             C32246 * C2551) *
                C114 +
            (C21832 * C257 - C32273 * C275 + C21833 * C689 - C32270 * C697 +
             C21834 * C1135 - C32261 * C1147 + C21835 * C2552 -
             C32246 * C2556) *
                C31941) *
               C31869) *
              C31918 * C241 +
          (((C32273 * C264 - C21832 * C249 + C32270 * C1124 - C21833 * C1115 +
             C32261 * C1132 - C21834 * C1119 + C32246 * C6831 -
             C21835 * C6828) *
                C114 +
            (C32273 * C279 - C21832 * C265 + C32270 * C1142 - C21833 * C1125 +
             C32261 * C1146 - C21834 * C1133 + C32246 * C6837 -
             C21835 * C6832) *
                C31941) *
               C15335 +
           ((C32273 * C266 - C21832 * C250 + C32270 * C1126 - C21833 * C1116 +
             C32261 * C1136 - C21834 * C1121 + C32246 * C7149 -
             C21835 * C7148) *
                C114 +
            (C32273 * C280 - C21832 * C267 + C32270 * C1143 - C21833 * C1127 +
             C32261 * C1148 - C21834 * C1137 + C32246 * C7151 -
             C21835 * C7150) *
                C31941) *
               C31869) *
              C31918 * C242) *
         C31892) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C32273 * C122 - C21832 * C115 + C32270 * C359 - C21833 * C349 +
             C32261 * C369 - C21834 * C354 + C32246 * C2034 - C21835 * C2028) *
                C114 +
            (C32273 * C136 - C21832 * C123 + C32270 * C379 - C21833 * C360 +
             C32261 * C384 - C21834 * C370 + C32246 * C2046 - C21835 * C2035) *
                C31941) *
               C15335 +
           ((C21837 - C21838 + C21839 - C21840 + C21841 - C21842 + C21843 -
             C21844) *
                C114 +
            (C21845 - C21846 + C21847 - C21848 + C21849 - C21850 + C21851 -
             C21852) *
                C31941) *
               C31869) *
              C346 +
          (((C21832 * C349 - C32273 * C359 + C21833 * C354 - C32270 * C369 +
             C21834 * C2028 - C32261 * C2034 + C21835 * C2031 -
             C32246 * C2040) *
                C114 +
            (C21832 * C360 - C32273 * C379 + C21833 * C370 - C32270 * C384 +
             C21834 * C2035 - C32261 * C2046 + C21835 * C2041 -
             C32246 * C2049) *
                C31941) *
               C15335 +
           ((C21832 * C350 - C32273 * C361 + C21833 * C355 - C32270 * C371 +
             C21834 * C2029 - C32261 * C2036 + C21835 * C2032 -
             C32246 * C2042) *
                C114 +
            (C21832 * C362 - C32273 * C380 + C21833 * C372 - C32270 * C385 +
             C21834 * C2037 - C32261 * C2047 + C21835 * C2043 -
             C32246 * C2050) *
                C31941) *
               C31869) *
              C347 +
          (((C32273 * C369 - C21832 * C354 + C32270 * C2034 - C21833 * C2028 +
             C32261 * C2040 - C21834 * C2031 + C32246 * C11723 -
             C21835 * C11721) *
                C114 +
            (C32273 * C384 - C21832 * C370 + C32270 * C2046 - C21833 * C2035 +
             C32261 * C2049 - C21834 * C2041 + C32246 * C11727 -
             C21835 * C11724) *
                C31941) *
               C15335 +
           ((C32273 * C371 - C21832 * C355 + C32270 * C2036 - C21833 * C2029 +
             C32261 * C2042 - C21834 * C2032 + C32246 * C11898 -
             C21835 * C11897) *
                C114 +
            (C32273 * C385 - C21832 * C372 + C32270 * C2047 - C21833 * C2037 +
             C32261 * C2050 - C21834 * C2043 + C32246 * C11900 -
             C21835 * C11899) *
                C31941) *
               C31869) *
              C348) *
         C31904 * C31892) /
            (p * q * std::sqrt(p + q));
    d2ee[88] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19912 * C122 - C19914 * C115 + C32045 * C359 - C19915 * C349) *
                 C817 +
             (C19912 * C136 - C19914 * C123 + C32045 * C379 - C19915 * C360) *
                 C32265 +
             (C20909 - C20910 + C20911 - C20912) * C818 +
             (C20913 - C20914 + C20915 - C20916) * C32253 + C20951 * C819 +
             C20952 * C32230) *
                C15335 +
            ((C19917 - C19918 + C19919 - C19920) * C817 +
             (C19921 - C19922 + C19923 - C19924) * C32265 + C21305 * C818 +
             C21306 * C32253 + C20949 * C819 + C20950 * C32230) *
                C31869) *
               C577 +
           (((C19914 * C349 - C19912 * C359 + C19915 * C354 - C32045 * C369) *
                 C817 +
             (C19914 * C360 - C19912 * C379 + C19915 * C370 - C32045 * C384) *
                 C32265 +
             (C19914 * C681 - C19912 * C686 + C19915 * C1118 - C32045 * C1130) *
                 C818 +
             (C19914 * C687 - C19912 * C696 + C19915 * C1131 - C32045 * C1145) *
                 C32253 +
             (C19914 * C1115 - C19912 * C1124 + C19915 * C1119 -
              C32045 * C1132) *
                 C819 +
             (C19914 * C1125 - C19912 * C1142 + C19915 * C1133 -
              C32045 * C1146) *
                 C32230) *
                C15335 +
            ((C20447 - C20448 + C20449 - C20450) * C817 +
             (C20451 - C20452 + C20453 - C20454) * C32265 +
             (C21505 - C21506 + C21507 - C21508) * C818 +
             (C21509 - C21510 + C21511 - C21512) * C32253 +
             (C21513 - C21514 + C21515 - C21516) * C819 +
             (C21517 - C21518 + C21519 - C21520) * C32230) *
                C31869) *
               C578) *
              C31904 * C473 +
          ((((C19918 - C19917 + C19920 - C19919) * C817 +
             (C19922 - C19921 + C19924 - C19923) * C32265 + C21307 * C818 +
             C21308 * C32253 + C21309 * C819 + C21310 * C32230) *
                C15335 +
            ((C19926 - C19925 + C19928 - C19927) * C817 +
             (C19930 - C19929 + C19932 - C19931) * C32265 +
             (C20301 - C20302 + C20303 - C20304) * C818 +
             (C20305 - C20306 + C20307 - C20308) * C32253 +
             (C20755 - C20756 + C20757 - C20758) * C819 +
             (C20759 - C20760 + C20761 - C20762) * C32230) *
                C31869) *
               C577 +
           (((C20448 - C20447 + C20450 - C20449) * C817 +
             (C20452 - C20451 + C20454 - C20453) * C32265 +
             (C21506 - C21505 + C21508 - C21507) * C818 +
             (C21510 - C21509 + C21512 - C21511) * C32253 +
             (C21514 - C21513 + C21516 - C21515) * C819 +
             (C21518 - C21517 + C21520 - C21519) * C32230) *
                C15335 +
            ((C20456 - C20455 + C20458 - C20457) * C817 +
             (C20460 - C20459 + C20462 - C20461) * C32265 +
             (C19912 * C690 - C19914 * C683 + C32045 * C1138 - C19915 * C1122) *
                 C818 +
             (C19912 * C698 - C19914 * C691 + C32045 * C1149 - C19915 * C1139) *
                 C32253 +
             (C19912 * C1128 - C19914 * C1117 + C32045 * C1140 -
              C19915 * C1123) *
                 C819 +
             (C19912 * C1144 - C19914 * C1129 + C32045 * C1150 -
              C19915 * C1141) *
                 C32230) *
                C31869) *
               C578) *
              C31904 * C474)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C19912 * C122 - C19914 * C115 + C32045 * C359 - C19915 * C349) *
                 C114 +
             (C19912 * C136 - C19914 * C123 + C32045 * C379 - C19915 * C360) *
                 C31941) *
                C32271 +
            ((C19917 - C19918 + C19919 - C19920) * C114 +
             (C19921 - C19922 + C19923 - C19924) * C31941) *
                C32264 +
            C19965 * C32251 + C19966 * C32234) *
               C577 +
           (((C19914 * C349 - C19912 * C359 + C19915 * C354 - C32045 * C369) *
                 C114 +
             (C19914 * C360 - C19912 * C379 + C19915 * C370 - C32045 * C384) *
                 C31941) *
                C32271 +
            ((C20447 - C20448 + C20449 - C20450) * C114 +
             (C20451 - C20452 + C20453 - C20454) * C31941) *
                C32264 +
            ((C20455 - C20456 + C20457 - C20458) * C114 +
             (C20459 - C20460 + C20461 - C20462) * C31941) *
                C32251 +
            ((C20463 - C20464 + C20465 - C20466) * C114 +
             (C20467 - C20468 + C20469 - C20470) * C31941) *
                C32234) *
               C578) *
              C31904 * C473 +
          ((((C19918 - C19917 + C19920 - C19919) * C114 +
             (C19922 - C19921 + C19924 - C19923) * C31941) *
                C32271 +
            ((C19926 - C19925 + C19928 - C19927) * C114 +
             (C19930 - C19929 + C19932 - C19931) * C31941) *
                C32264 +
            ((C19934 - C19933 + C19936 - C19935) * C114 +
             (C19938 - C19937 + C19940 - C19939) * C31941) *
                C32251 +
            ((C19941 - C19942 + C19943 - C19944) * C114 +
             (C19945 - C19946 + C19947 - C19948) * C31941) *
                C32234) *
               C577 +
           (((C20448 - C20447 + C20450 - C20449) * C114 +
             (C20452 - C20451 + C20454 - C20453) * C31941) *
                C32271 +
            ((C20456 - C20455 + C20458 - C20457) * C114 +
             (C20460 - C20459 + C20462 - C20461) * C31941) *
                C32264 +
            ((C20464 - C20463 + C20466 - C20465) * C114 +
             (C20468 - C20467 + C20470 - C20469) * C31941) *
                C32251 +
            ((C19912 * C367 - C19914 * C353 + C32045 * C377 - C19915 * C358) *
                 C114 +
             (C19912 * C383 - C19914 * C368 + C32045 * C388 - C19915 * C378) *
                 C31941) *
                C32234) *
               C578) *
              C31904 * C474)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C32273 * C122 - C21832 * C115 + C32270 * C359 - C21833 * C349 +
              C32261 * C369 - C21834 * C354 + C32246 * C2034 - C21835 * C2028) *
                 C114 +
             (C32273 * C136 - C21832 * C123 + C32270 * C379 - C21833 * C360 +
              C32261 * C384 - C21834 * C370 + C32246 * C2046 - C21835 * C2035) *
                 C31941) *
                C15335 +
            ((C21837 - C21838 + C21839 - C21840 + C21841 - C21842 + C21843 -
              C21844) *
                 C114 +
             (C21845 - C21846 + C21847 - C21848 + C21849 - C21850 + C21851 -
              C21852) *
                 C31941) *
                C31869) *
               C577 +
           (((C21832 * C349 - C32273 * C359 + C21833 * C354 - C32270 * C369 +
              C21834 * C2028 - C32261 * C2034 + C21835 * C2031 -
              C32246 * C2040) *
                 C114 +
             (C21832 * C360 - C32273 * C379 + C21833 * C370 - C32270 * C384 +
              C21834 * C2035 - C32261 * C2046 + C21835 * C2041 -
              C32246 * C2049) *
                 C31941) *
                C15335 +
            ((C22341 - C22342 + C22343 - C22344 + C22345 - C22346 + C22347 -
              C22348) *
                 C114 +
             (C22349 - C22350 + C22351 - C22352 + C22353 - C22354 + C22355 -
              C22356) *
                 C31941) *
                C31869) *
               C578) *
              C31904 * C473 +
          ((((C21838 - C21837 + C21840 - C21839 + C21842 - C21841 + C21844 -
              C21843) *
                 C114 +
             (C21846 - C21845 + C21848 - C21847 + C21850 - C21849 + C21852 -
              C21851) *
                 C31941) *
                C15335 +
            ((C21853 - C21854 + C21855 - C21856 + C21857 - C21858 + C21859 -
              C21860) *
                 C114 +
             (C21861 - C21862 + C21863 - C21864 + C21865 - C21866 + C21867 -
              C21868) *
                 C31941) *
                C31869) *
               C577 +
           (((C22342 - C22341 + C22344 - C22343 + C22346 - C22345 + C22348 -
              C22347) *
                 C114 +
             (C22350 - C22349 + C22352 - C22351 + C22354 - C22353 + C22356 -
              C22355) *
                 C31941) *
                C15335 +
            ((C32273 * C363 - C21832 * C351 + C32270 * C373 - C21833 * C356 +
              C32261 * C2038 - C21834 * C2030 + C32246 * C2044 -
              C21835 * C2033) *
                 C114 +
             (C32273 * C381 - C21832 * C364 + C32270 * C386 - C21833 * C374 +
              C32261 * C2048 - C21834 * C2039 + C32246 * C2051 -
              C21835 * C2045) *
                 C31941) *
                C31869) *
               C578) *
              C31904 * C474)) /
            (p * q * std::sqrt(p + q));
    d2ee[89] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C19912 * C122 - C19914 * C115 + C32045 * C359 - C19915 * C349) *
                C114 +
            (C19912 * C136 - C19914 * C123 + C32045 * C379 - C19915 * C360) *
                C31941) *
               C32271 +
           ((C19917 - C19918 + C19919 - C19920) * C114 +
            (C19921 - C19922 + C19923 - C19924) * C31941) *
               C32264 +
           C19965 * C32251 + C19966 * C32234) *
              C31918 * C240 +
          (((C19914 * C244 - C19912 * C254 + C19915 * C681 - C32045 * C686) *
                C114 +
            (C19914 * C255 - C19912 * C274 + C19915 * C687 - C32045 * C696) *
                C31941) *
               C32271 +
           ((C19914 * C245 - C19912 * C256 + C19915 * C682 - C32045 * C688) *
                C114 +
            (C19914 * C257 - C19912 * C275 + C19915 * C689 - C32045 * C697) *
                C31941) *
               C32264 +
           ((C19914 * C246 - C19912 * C258 + C19915 * C683 - C32045 * C690) *
                C114 +
            (C19914 * C259 - C19912 * C276 + C19915 * C691 - C32045 * C698) *
                C31941) *
               C32251 +
           ((C19914 * C247 - C19912 * C260 + C19915 * C684 - C32045 * C692) *
                C114 +
            (C19914 * C261 - C19912 * C277 + C19915 * C693 - C32045 * C699) *
                C31941) *
               C32234) *
              C31918 * C241 +
          (((C19912 * C264 - C19914 * C249 + C32045 * C1124 - C19915 * C1115) *
                C114 +
            (C19912 * C279 - C19914 * C265 + C32045 * C1142 - C19915 * C1125) *
                C31941) *
               C32271 +
           ((C19912 * C266 - C19914 * C250 + C32045 * C1126 - C19915 * C1116) *
                C114 +
            (C19912 * C280 - C19914 * C267 + C32045 * C1143 - C19915 * C1127) *
                C31941) *
               C32264 +
           ((C19912 * C268 - C19914 * C251 + C32045 * C1128 - C19915 * C1117) *
                C114 +
            (C19912 * C281 - C19914 * C269 + C32045 * C1144 - C19915 * C1129) *
                C31941) *
               C32251 +
           ((C19912 * C270 - C19914 * C252 + C32045 * C1458 - C19915 * C1457) *
                C114 +
            (C19912 * C282 - C19914 * C271 + C32045 * C1460 - C19915 * C1459) *
                C31941) *
               C32234) *
              C31918 * C242) *
         C31892) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C19912 * C122 - C19914 * C115 + C32045 * C359 - C19915 * C349) *
                C114 +
            (C19912 * C136 - C19914 * C123 + C32045 * C379 - C19915 * C360) *
                C31941) *
               C32271 +
           ((C19917 - C19918 + C19919 - C19920) * C114 +
            (C19921 - C19922 + C19923 - C19924) * C31941) *
               C32264 +
           C19965 * C32251 + C19966 * C32234) *
              C31918 * C31904 * C110 +
          (((C19918 - C19917 + C19920 - C19919) * C114 +
            (C19922 - C19921 + C19924 - C19923) * C31941) *
               C32271 +
           ((C19926 - C19925 + C19928 - C19927) * C114 +
            (C19930 - C19929 + C19932 - C19931) * C31941) *
               C32264 +
           ((C19934 - C19933 + C19936 - C19935) * C114 +
            (C19938 - C19937 + C19940 - C19939) * C31941) *
               C32251 +
           ((C19941 - C19942 + C19943 - C19944) * C114 +
            (C19945 - C19946 + C19947 - C19948) * C31941) *
               C32234) *
              C31918 * C31904 * C111 +
          (C19965 * C32271 + C19966 * C32264 +
           ((C19942 - C19941 + C19944 - C19943) * C114 +
            (C19946 - C19945 + C19948 - C19947) * C31941) *
               C32251 +
           ((C19912 * C132 - C19914 * C120 + C32045 * C580 - C19915 * C579) *
                C114 +
            (C19912 * C141 - C19914 * C133 + C32045 * C582 - C19915 * C581) *
                C31941) *
               C32234) *
              C31918 * C31904 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C19912 * C122 - C19914 * C115 + C32045 * C359 - C19915 * C349) *
                C817 +
            (C19912 * C136 - C19914 * C123 + C32045 * C379 - C19915 * C360) *
                C32265 +
            (C19912 * C254 - C19914 * C244 + C32045 * C686 - C19915 * C681) *
                C818 +
            (C19912 * C274 - C19914 * C255 + C32045 * C696 - C19915 * C687) *
                C32253 +
            (C19912 * C264 - C19914 * C249 + C32045 * C1124 - C19915 * C1115) *
                C819 +
            (C19912 * C279 - C19914 * C265 + C32045 * C1142 - C19915 * C1125) *
                C32230) *
               C15335 +
           ((C19917 - C19918 + C19919 - C19920) * C817 +
            (C19921 - C19922 + C19923 - C19924) * C32265 +
            (C20294 - C20293 + C20296 - C20295) * C818 +
            (C20298 - C20297 + C20300 - C20299) * C32253 +
            (C20747 - C20748 + C20749 - C20750) * C819 +
            (C20751 - C20752 + C20753 - C20754) * C32230) *
               C31869) *
              C31918 * C31904 * C110 +
          (((C19918 - C19917 + C19920 - C19919) * C817 +
            (C19922 - C19921 + C19924 - C19923) * C32265 +
            (C20293 - C20294 + C20295 - C20296) * C818 +
            (C20297 - C20298 + C20299 - C20300) * C32253 +
            (C20748 - C20747 + C20750 - C20749) * C819 +
            (C20752 - C20751 + C20754 - C20753) * C32230) *
               C15335 +
           ((C19926 - C19925 + C19928 - C19927) * C817 +
            (C19930 - C19929 + C19932 - C19931) * C32265 +
            (C20301 - C20302 + C20303 - C20304) * C818 +
            (C20305 - C20306 + C20307 - C20308) * C32253 +
            (C20755 - C20756 + C20757 - C20758) * C819 +
            (C20759 - C20760 + C20761 - C20762) * C32230) *
               C31869) *
              C31918 * C31904 * C111 +
          ((C19957 * C817 + C19958 * C32265 +
            (C20302 - C20301 + C20304 - C20303) * C818 +
            (C20306 - C20305 + C20308 - C20307) * C32253 +
            (C20756 - C20755 + C20758 - C20757) * C819 +
            (C20760 - C20759 + C20762 - C20761) * C32230) *
               C15335 +
           (C19959 * C817 + C19960 * C32265 +
            (C20310 - C20309 + C20312 - C20311) * C818 +
            (C20314 - C20313 + C20316 - C20315) * C32253 +
            (C19912 * C270 - C19914 * C252 + C32045 * C1458 - C19915 * C1457) *
                C819 +
            (C19912 * C282 - C19914 * C271 + C32045 * C1460 - C19915 * C1459) *
                C32230) *
               C31869) *
              C31918 * C31904 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C19912 * C122 - C19914 * C115 + C32045 * C359 - C19915 * C349) *
                C817 +
            (C19912 * C136 - C19914 * C123 + C32045 * C379 - C19915 * C360) *
                C32265 +
            (C20909 - C20910 + C20911 - C20912) * C818 +
            (C20913 - C20914 + C20915 - C20916) * C32253 + C20951 * C819 +
            C20952 * C32230) *
               C15335 +
           ((C19917 - C19918 + C19919 - C19920) * C817 +
            (C19921 - C19922 + C19923 - C19924) * C32265 +
            (C20294 - C20293 + C20296 - C20295) * C818 +
            (C20298 - C20297 + C20300 - C20299) * C32253 + C20949 * C819 +
            C20950 * C32230) *
               C31869) *
              C31918 * C240 +
          (((C20910 - C20909 + C20912 - C20911) * C817 +
            (C20914 - C20913 + C20916 - C20915) * C32265 +
            (C20918 - C20917 + C20920 - C20919) * C818 +
            (C20922 - C20921 + C20924 - C20923) * C32253 +
            (C20929 - C20930 + C20931 - C20932) * C819 +
            (C20933 - C20934 + C20935 - C20936) * C32230) *
               C15335 +
           ((C20293 - C20294 + C20295 - C20296) * C817 +
            (C20297 - C20298 + C20299 - C20300) * C32265 +
            (C20748 - C20747 + C20750 - C20749) * C818 +
            (C20752 - C20751 + C20754 - C20753) * C32253 +
            (C20937 - C20938 + C20939 - C20940) * C819 +
            (C20941 - C20942 + C20943 - C20944) * C32230) *
               C31869) *
              C31918 * C241 +
          ((C20951 * C817 + C20952 * C32265 +
            (C20930 - C20929 + C20932 - C20931) * C818 +
            (C20934 - C20933 + C20936 - C20935) * C32253 +
            (C19912 * C969 - C19914 * C960 + C32045 * C6173 - C19915 * C6170) *
                C819 +
            (C19912 * C978 - C19914 * C970 + C32045 * C6179 - C19915 * C6174) *
                C32230) *
               C15335 +
           (C20949 * C817 + C20950 * C32265 +
            (C20938 - C20937 + C20940 - C20939) * C818 +
            (C20942 - C20941 + C20944 - C20943) * C32253 +
            (C19912 * C971 - C19914 * C961 + C32045 * C6355 - C19915 * C6354) *
                C819 +
            (C19912 * C979 - C19914 * C972 + C32045 * C6357 - C19915 * C6356) *
                C32230) *
               C31869) *
              C31918 * C242) *
         C31892) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C32273 * C122 - C21832 * C115 + C32270 * C359 - C21833 * C349 +
             C32261 * C369 - C21834 * C354 + C32246 * C2034 - C21835 * C2028) *
                C114 +
            (C32273 * C136 - C21832 * C123 + C32270 * C379 - C21833 * C360 +
             C32261 * C384 - C21834 * C370 + C32246 * C2046 - C21835 * C2035) *
                C31941) *
               C15335 +
           ((C21837 - C21838 + C21839 - C21840 + C21841 - C21842 + C21843 -
             C21844) *
                C114 +
            (C21845 - C21846 + C21847 - C21848 + C21849 - C21850 + C21851 -
             C21852) *
                C31941) *
               C31869) *
              C31918 * C31904 * C110 +
          (((C21838 - C21837 + C21840 - C21839 + C21842 - C21841 + C21844 -
             C21843) *
                C114 +
            (C21846 - C21845 + C21848 - C21847 + C21850 - C21849 + C21852 -
             C21851) *
                C31941) *
               C15335 +
           ((C21853 - C21854 + C21855 - C21856 + C21857 - C21858 + C21859 -
             C21860) *
                C114 +
            (C21861 - C21862 + C21863 - C21864 + C21865 - C21866 + C21867 -
             C21868) *
                C31941) *
               C31869) *
              C31918 * C31904 * C111 +
          (((C21854 - C21853 + C21856 - C21855 + C21858 - C21857 + C21860 -
             C21859) *
                C114 +
            (C21862 - C21861 + C21864 - C21863 + C21866 - C21865 + C21868 -
             C21867) *
                C31941) *
               C15335 +
           ((C32273 * C128 - C21832 * C118 + C32270 * C365 - C21833 * C352 +
             C32261 * C375 - C21834 * C357 + C32246 * C2373 - C21835 * C2372) *
                C114 +
            (C32273 * C139 - C21832 * C129 + C32270 * C382 - C21833 * C366 +
             C32261 * C387 - C21834 * C376 + C32246 * C2375 - C21835 * C2374) *
                C31941) *
               C31869) *
              C31918 * C31904 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C32273 * C122 - C21832 * C115 + C32270 * C359 - C21833 * C349 +
             C32261 * C369 - C21834 * C354 + C32246 * C2034 - C21835 * C2028) *
                C114 +
            (C32273 * C136 - C21832 * C123 + C32270 * C379 - C21833 * C360 +
             C32261 * C384 - C21834 * C370 + C32246 * C2046 - C21835 * C2035) *
                C31941) *
               C15335 +
           ((C21837 - C21838 + C21839 - C21840 + C21841 - C21842 + C21843 -
             C21844) *
                C114 +
            (C21845 - C21846 + C21847 - C21848 + C21849 - C21850 + C21851 -
             C21852) *
                C31941) *
               C31869) *
              C31918 * C240 +
          (((C21832 * C244 - C32273 * C254 + C21833 * C681 - C32270 * C686 +
             C21834 * C1118 - C32261 * C1130 + C21835 * C2546 -
             C32246 * C2549) *
                C114 +
            (C21832 * C255 - C32273 * C274 + C21833 * C687 - C32270 * C696 +
             C21834 * C1131 - C32261 * C1145 + C21835 * C2550 -
             C32246 * C2555) *
                C31941) *
               C15335 +
           ((C21832 * C245 - C32273 * C256 + C21833 * C682 - C32270 * C688 +
             C21834 * C1120 - C32261 * C1134 + C21835 * C2547 -
             C32246 * C2551) *
                C114 +
            (C21832 * C257 - C32273 * C275 + C21833 * C689 - C32270 * C697 +
             C21834 * C1135 - C32261 * C1147 + C21835 * C2552 -
             C32246 * C2556) *
                C31941) *
               C31869) *
              C31918 * C241 +
          (((C32273 * C264 - C21832 * C249 + C32270 * C1124 - C21833 * C1115 +
             C32261 * C1132 - C21834 * C1119 + C32246 * C6831 -
             C21835 * C6828) *
                C114 +
            (C32273 * C279 - C21832 * C265 + C32270 * C1142 - C21833 * C1125 +
             C32261 * C1146 - C21834 * C1133 + C32246 * C6837 -
             C21835 * C6832) *
                C31941) *
               C15335 +
           ((C32273 * C266 - C21832 * C250 + C32270 * C1126 - C21833 * C1116 +
             C32261 * C1136 - C21834 * C1121 + C32246 * C7149 -
             C21835 * C7148) *
                C114 +
            (C32273 * C280 - C21832 * C267 + C32270 * C1143 - C21833 * C1127 +
             C32261 * C1148 - C21834 * C1137 + C32246 * C7151 -
             C21835 * C7150) *
                C31941) *
               C31869) *
              C31918 * C242) *
         C31892) /
            (p * q * std::sqrt(p + q));
    d2ee[90] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C32041 * C122 - C31010 * C115 + C32048 * C359 - C31002 * C349 +
              C23645 * C369 - C31016 * C354) *
                 C114 +
             (C32041 * C136 - C31010 * C123 + C32048 * C379 - C31002 * C360 +
              C23645 * C384 - C31016 * C370) *
                 C31941) *
                C31864 +
            ((C23650 - C23651 + C23652 - C23653 + C23654 - C23655) * C114 +
             (C23656 - C23657 + C23658 - C23659 + C23660 - C23661) * C31941) *
                C31872 +
            C23698 * C17094) *
               C31918 * C471 +
           (((C31010 * C244 - C32041 * C254 + C31002 * C681 - C32048 * C686 +
              C31016 * C1118 - C23645 * C1130) *
                 C114 +
             (C31010 * C255 - C32041 * C274 + C31002 * C687 - C32048 * C696 +
              C31016 * C1131 - C23645 * C1145) *
                 C31941) *
                C31864 +
            ((C24065 - C24066 + C24067 - C24068 + C24069 - C24070) * C114 +
             (C24071 - C24072 + C24073 - C24074 + C24075 - C24076) * C31941) *
                C31872 +
            ((C24077 - C24078 + C24079 - C24080 + C24081 - C24082) * C114 +
             (C24083 - C24084 + C24085 - C24086 + C24087 - C24088) * C31941) *
                C17094) *
               C31918 * C472) *
              C473 +
          ((((C23651 - C23650 + C23653 - C23652 + C23655 - C23654) * C114 +
             (C23657 - C23656 + C23659 - C23658 + C23661 - C23660) * C31941) *
                C31864 +
            ((C23663 - C23662 + C23665 - C23664 + C23667 - C23666) * C114 +
             (C23669 - C23668 + C23671 - C23670 + C23673 - C23672) * C31941) *
                C31872 +
            ((C23674 - C23675 + C23676 - C23677 + C23678 - C23679) * C114 +
             (C23680 - C23681 + C23682 - C23683 + C23684 - C23685) * C31941) *
                C17094) *
               C31918 * C471 +
           (((C24066 - C24065 + C24068 - C24067 + C24070 - C24069) * C114 +
             (C24072 - C24071 + C24074 - C24073 + C24076 - C24075) * C31941) *
                C31864 +
            ((C24078 - C24077 + C24080 - C24079 + C24082 - C24081) * C114 +
             (C24084 - C24083 + C24086 - C24085 + C24088 - C24087) * C31941) *
                C31872 +
            ((C32041 * C260 - C31010 * C247 + C32048 * C692 - C31002 * C684 +
              C23645 * C2199 - C31016 * C2198) *
                 C114 +
             (C32041 * C277 - C31010 * C261 + C32048 * C699 - C31002 * C693 +
              C23645 * C2201 - C31016 * C2200) *
                 C31941) *
                C17094) *
               C31918 * C472) *
              C474)) /
        (p * q * std::sqrt(p + q));
    d2ee[91] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C32041 * C122 - C31010 * C115 + C32048 * C359 - C31002 * C349 +
              C23645 * C369 - C31016 * C354) *
                 C114 +
             (C32041 * C136 - C31010 * C123 + C32048 * C379 - C31002 * C360 +
              C23645 * C384 - C31016 * C370) *
                 C31941) *
                C31864 +
            ((C23650 - C23651 + C23652 - C23653 + C23654 - C23655) * C114 +
             (C23656 - C23657 + C23658 - C23659 + C23660 - C23661) * C31941) *
                C31872 +
            C23698 * C17094) *
               C577 +
           (((C31010 * C349 - C32041 * C359 + C31002 * C354 - C32048 * C369 +
              C31016 * C2028 - C23645 * C2034) *
                 C114 +
             (C31010 * C360 - C32041 * C379 + C31002 * C370 - C32048 * C384 +
              C31016 * C2035 - C23645 * C2046) *
                 C31941) *
                C31864 +
            ((C24235 - C24236 + C24237 - C24238 + C24239 - C24240) * C114 +
             (C24241 - C24242 + C24243 - C24244 + C24245 - C24246) * C31941) *
                C31872 +
            ((C24247 - C24248 + C24249 - C24250 + C24251 - C24252) * C114 +
             (C24253 - C24254 + C24255 - C24256 + C24257 - C24258) * C31941) *
                C17094) *
               C578) *
              C471 +
          ((((C31010 * C244 - C32041 * C254 + C31002 * C681 - C32048 * C686 +
              C31016 * C1118 - C23645 * C1130) *
                 C114 +
             (C31010 * C255 - C32041 * C274 + C31002 * C687 - C32048 * C696 +
              C31016 * C1131 - C23645 * C1145) *
                 C31941) *
                C31864 +
            ((C24065 - C24066 + C24067 - C24068 + C24069 - C24070) * C114 +
             (C24071 - C24072 + C24073 - C24074 + C24075 - C24076) * C31941) *
                C31872 +
            ((C24077 - C24078 + C24079 - C24080 + C24081 - C24082) * C114 +
             (C24083 - C24084 + C24085 - C24086 + C24087 - C24088) * C31941) *
                C17094) *
               C577 +
           (((C32041 * C686 - C31010 * C681 + C32048 * C1130 - C31002 * C1118 +
              C23645 * C2549 - C31016 * C2546) *
                 C114 +
             (C32041 * C696 - C31010 * C687 + C32048 * C1145 - C31002 * C1131 +
              C23645 * C2555 - C31016 * C2550) *
                 C31941) *
                C31864 +
            ((C32041 * C688 - C31010 * C682 + C32048 * C1134 - C31002 * C1120 +
              C23645 * C2551 - C31016 * C2547) *
                 C114 +
             (C32041 * C697 - C31010 * C689 + C32048 * C1147 - C31002 * C1135 +
              C23645 * C2556 - C31016 * C2552) *
                 C31941) *
                C31872 +
            ((C32041 * C690 - C31010 * C683 + C32048 * C1138 - C31002 * C1122 +
              C23645 * C2553 - C31016 * C2548) *
                 C114 +
             (C32041 * C698 - C31010 * C691 + C32048 * C1149 - C31002 * C1139 +
              C23645 * C2557 - C31016 * C2554) *
                 C31941) *
                C17094) *
               C578) *
              C472) *
         C31892) /
        (p * q * std::sqrt(p + q));
    d2ee[92] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C32041 * C122 - C31010 * C115 + C32048 * C359 - C31002 * C349 +
             C23645 * C369 - C31016 * C354) *
                C114 +
            (C32041 * C136 - C31010 * C123 + C32048 * C379 - C31002 * C360 +
             C23645 * C384 - C31016 * C370) *
                C31941) *
               C31864 +
           ((C23650 - C23651 + C23652 - C23653 + C23654 - C23655) * C114 +
            (C23656 - C23657 + C23658 - C23659 + C23660 - C23661) * C31941) *
               C31872 +
           C23698 * C17094) *
              C31918 * C240 +
          (((C31010 * C244 - C32041 * C254 + C31002 * C681 - C32048 * C686 +
             C31016 * C1118 - C23645 * C1130) *
                C114 +
            (C31010 * C255 - C32041 * C274 + C31002 * C687 - C32048 * C696 +
             C31016 * C1131 - C23645 * C1145) *
                C31941) *
               C31864 +
           ((C31010 * C245 - C32041 * C256 + C31002 * C682 - C32048 * C688 +
             C31016 * C1120 - C23645 * C1134) *
                C114 +
            (C31010 * C257 - C32041 * C275 + C31002 * C689 - C32048 * C697 +
             C31016 * C1135 - C23645 * C1147) *
                C31941) *
               C31872 +
           ((C31010 * C246 - C32041 * C258 + C31002 * C683 - C32048 * C690 +
             C31016 * C1122 - C23645 * C1138) *
                C114 +
            (C31010 * C259 - C32041 * C276 + C31002 * C691 - C32048 * C698 +
             C31016 * C1139 - C23645 * C1149) *
                C31941) *
               C17094) *
              C31918 * C241 +
          (((C32041 * C264 - C31010 * C249 + C32048 * C1124 - C31002 * C1115 +
             C23645 * C1132 - C31016 * C1119) *
                C114 +
            (C32041 * C279 - C31010 * C265 + C32048 * C1142 - C31002 * C1125 +
             C23645 * C1146 - C31016 * C1133) *
                C31941) *
               C31864 +
           ((C32041 * C266 - C31010 * C250 + C32048 * C1126 - C31002 * C1116 +
             C23645 * C1136 - C31016 * C1121) *
                C114 +
            (C32041 * C280 - C31010 * C267 + C32048 * C1143 - C31002 * C1127 +
             C23645 * C1148 - C31016 * C1137) *
                C31941) *
               C31872 +
           ((C32041 * C268 - C31010 * C251 + C32048 * C1128 - C31002 * C1117 +
             C23645 * C1140 - C31016 * C1123) *
                C114 +
            (C32041 * C281 - C31010 * C269 + C32048 * C1144 - C31002 * C1129 +
             C23645 * C1150 - C31016 * C1141) *
                C31941) *
               C17094) *
              C31918 * C242) *
         C31892) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C32041 * C122 - C31010 * C115 + C32048 * C359 - C31002 * C349 +
             C23645 * C369 - C31016 * C354) *
                C114 +
            (C32041 * C136 - C31010 * C123 + C32048 * C379 - C31002 * C360 +
             C23645 * C384 - C31016 * C370) *
                C31941) *
               C31864 +
           ((C23650 - C23651 + C23652 - C23653 + C23654 - C23655) * C114 +
            (C23656 - C23657 + C23658 - C23659 + C23660 - C23661) * C31941) *
               C31872 +
           C23698 * C17094) *
              C31918 * C31904 * C110 +
          (((C23651 - C23650 + C23653 - C23652 + C23655 - C23654) * C114 +
            (C23657 - C23656 + C23659 - C23658 + C23661 - C23660) * C31941) *
               C31864 +
           ((C23663 - C23662 + C23665 - C23664 + C23667 - C23666) * C114 +
            (C23669 - C23668 + C23671 - C23670 + C23673 - C23672) * C31941) *
               C31872 +
           ((C23674 - C23675 + C23676 - C23677 + C23678 - C23679) * C114 +
            (C23680 - C23681 + C23682 - C23683 + C23684 - C23685) * C31941) *
               C17094) *
              C31918 * C31904 * C111 +
          (C23698 * C31864 +
           ((C23675 - C23674 + C23677 - C23676 + C23679 - C23678) * C114 +
            (C23681 - C23680 + C23683 - C23682 + C23685 - C23684) * C31941) *
               C31872 +
           ((C32041 * C130 - C31010 * C119 + C32048 * C367 - C31002 * C353 +
             C23645 * C377 - C31016 * C358) *
                C114 +
            (C32041 * C140 - C31010 * C131 + C32048 * C383 - C31002 * C368 +
             C23645 * C388 - C31016 * C378) *
                C31941) *
               C17094) *
              C31918 * C31904 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C32041 * C122 - C31010 * C115 + C32048 * C359 - C31002 * C349 +
             C23645 * C369 - C31016 * C354) *
                C114 +
            (C32041 * C136 - C31010 * C123 + C32048 * C379 - C31002 * C360 +
             C23645 * C384 - C31016 * C370) *
                C31941) *
               C31864 +
           ((C23650 - C23651 + C23652 - C23653 + C23654 - C23655) * C114 +
            (C23656 - C23657 + C23658 - C23659 + C23660 - C23661) * C31941) *
               C31872 +
           C23698 * C17094) *
              C346 +
          (((C31010 * C349 - C32041 * C359 + C31002 * C354 - C32048 * C369 +
             C31016 * C2028 - C23645 * C2034) *
                C114 +
            (C31010 * C360 - C32041 * C379 + C31002 * C370 - C32048 * C384 +
             C31016 * C2035 - C23645 * C2046) *
                C31941) *
               C31864 +
           ((C31010 * C350 - C32041 * C361 + C31002 * C355 - C32048 * C371 +
             C31016 * C2029 - C23645 * C2036) *
                C114 +
            (C31010 * C362 - C32041 * C380 + C31002 * C372 - C32048 * C385 +
             C31016 * C2037 - C23645 * C2047) *
                C31941) *
               C31872 +
           ((C31010 * C351 - C32041 * C363 + C31002 * C356 - C32048 * C373 +
             C31016 * C2030 - C23645 * C2038) *
                C114 +
            (C31010 * C364 - C32041 * C381 + C31002 * C374 - C32048 * C386 +
             C31016 * C2039 - C23645 * C2048) *
                C31941) *
               C17094) *
              C347 +
          (((C32041 * C369 - C31010 * C354 + C32048 * C2034 - C31002 * C2028 +
             C23645 * C2040 - C31016 * C2031) *
                C114 +
            (C32041 * C384 - C31010 * C370 + C32048 * C2046 - C31002 * C2035 +
             C23645 * C2049 - C31016 * C2041) *
                C31941) *
               C31864 +
           ((C32041 * C371 - C31010 * C355 + C32048 * C2036 - C31002 * C2029 +
             C23645 * C2042 - C31016 * C2032) *
                C114 +
            (C32041 * C385 - C31010 * C372 + C32048 * C2047 - C31002 * C2037 +
             C23645 * C2050 - C31016 * C2043) *
                C31941) *
               C31872 +
           ((C32041 * C373 - C31010 * C356 + C32048 * C2038 - C31002 * C2030 +
             C23645 * C2044 - C31016 * C2033) *
                C114 +
            (C32041 * C386 - C31010 * C374 + C32048 * C2048 - C31002 * C2039 +
             C23645 * C2051 - C31016 * C2045) *
                C31941) *
               C17094) *
              C348) *
         C31904 * C31892) /
            (p * q * std::sqrt(p + q));
    d2ee[93] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C32041 * C122 - C31010 * C115 + C32048 * C359 - C31002 * C349 +
              C23645 * C369 - C31016 * C354) *
                 C114 +
             (C32041 * C136 - C31010 * C123 + C32048 * C379 - C31002 * C360 +
              C23645 * C384 - C31016 * C370) *
                 C31941) *
                C31864 +
            ((C23650 - C23651 + C23652 - C23653 + C23654 - C23655) * C114 +
             (C23656 - C23657 + C23658 - C23659 + C23660 - C23661) * C31941) *
                C31872 +
            C23698 * C17094) *
               C577 +
           (((C31010 * C349 - C32041 * C359 + C31002 * C354 - C32048 * C369 +
              C31016 * C2028 - C23645 * C2034) *
                 C114 +
             (C31010 * C360 - C32041 * C379 + C31002 * C370 - C32048 * C384 +
              C31016 * C2035 - C23645 * C2046) *
                 C31941) *
                C31864 +
            ((C24235 - C24236 + C24237 - C24238 + C24239 - C24240) * C114 +
             (C24241 - C24242 + C24243 - C24244 + C24245 - C24246) * C31941) *
                C31872 +
            ((C24247 - C24248 + C24249 - C24250 + C24251 - C24252) * C114 +
             (C24253 - C24254 + C24255 - C24256 + C24257 - C24258) * C31941) *
                C17094) *
               C578) *
              C31904 * C473 +
          ((((C23651 - C23650 + C23653 - C23652 + C23655 - C23654) * C114 +
             (C23657 - C23656 + C23659 - C23658 + C23661 - C23660) * C31941) *
                C31864 +
            ((C23663 - C23662 + C23665 - C23664 + C23667 - C23666) * C114 +
             (C23669 - C23668 + C23671 - C23670 + C23673 - C23672) * C31941) *
                C31872 +
            ((C23674 - C23675 + C23676 - C23677 + C23678 - C23679) * C114 +
             (C23680 - C23681 + C23682 - C23683 + C23684 - C23685) * C31941) *
                C17094) *
               C577 +
           (((C24236 - C24235 + C24238 - C24237 + C24240 - C24239) * C114 +
             (C24242 - C24241 + C24244 - C24243 + C24246 - C24245) * C31941) *
                C31864 +
            ((C24248 - C24247 + C24250 - C24249 + C24252 - C24251) * C114 +
             (C24254 - C24253 + C24256 - C24255 + C24258 - C24257) * C31941) *
                C31872 +
            ((C32041 * C365 - C31010 * C352 + C32048 * C375 - C31002 * C357 +
              C23645 * C2373 - C31016 * C2372) *
                 C114 +
             (C32041 * C382 - C31010 * C366 + C32048 * C387 - C31002 * C376 +
              C23645 * C2375 - C31016 * C2374) *
                 C31941) *
                C17094) *
               C578) *
              C31904 * C474)) /
        (p * q * std::sqrt(p + q));
    d2ee[94] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C32041 * C122 - C31010 * C115 + C32048 * C359 - C31002 * C349 +
             C23645 * C369 - C31016 * C354) *
                C114 +
            (C32041 * C136 - C31010 * C123 + C32048 * C379 - C31002 * C360 +
             C23645 * C384 - C31016 * C370) *
                C31941) *
               C31864 +
           ((C23650 - C23651 + C23652 - C23653 + C23654 - C23655) * C114 +
            (C23656 - C23657 + C23658 - C23659 + C23660 - C23661) * C31941) *
               C31872 +
           C23698 * C17094) *
              C31918 * C31904 * C110 +
          (((C23651 - C23650 + C23653 - C23652 + C23655 - C23654) * C114 +
            (C23657 - C23656 + C23659 - C23658 + C23661 - C23660) * C31941) *
               C31864 +
           ((C23663 - C23662 + C23665 - C23664 + C23667 - C23666) * C114 +
            (C23669 - C23668 + C23671 - C23670 + C23673 - C23672) * C31941) *
               C31872 +
           ((C23674 - C23675 + C23676 - C23677 + C23678 - C23679) * C114 +
            (C23680 - C23681 + C23682 - C23683 + C23684 - C23685) * C31941) *
               C17094) *
              C31918 * C31904 * C111 +
          (C23698 * C31864 +
           ((C23675 - C23674 + C23677 - C23676 + C23679 - C23678) * C114 +
            (C23681 - C23680 + C23683 - C23682 + C23685 - C23684) * C31941) *
               C31872 +
           ((C32041 * C130 - C31010 * C119 + C32048 * C367 - C31002 * C353 +
             C23645 * C377 - C31016 * C358) *
                C114 +
            (C32041 * C140 - C31010 * C131 + C32048 * C383 - C31002 * C368 +
             C23645 * C388 - C31016 * C378) *
                C31941) *
               C17094) *
              C31918 * C31904 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C32041 * C122 - C31010 * C115 + C32048 * C359 - C31002 * C349 +
             C23645 * C369 - C31016 * C354) *
                C114 +
            (C32041 * C136 - C31010 * C123 + C32048 * C379 - C31002 * C360 +
             C23645 * C384 - C31016 * C370) *
                C31941) *
               C31864 +
           ((C23650 - C23651 + C23652 - C23653 + C23654 - C23655) * C114 +
            (C23656 - C23657 + C23658 - C23659 + C23660 - C23661) * C31941) *
               C31872 +
           C23698 * C17094) *
              C31918 * C240 +
          (((C31010 * C244 - C32041 * C254 + C31002 * C681 - C32048 * C686 +
             C31016 * C1118 - C23645 * C1130) *
                C114 +
            (C31010 * C255 - C32041 * C274 + C31002 * C687 - C32048 * C696 +
             C31016 * C1131 - C23645 * C1145) *
                C31941) *
               C31864 +
           ((C31010 * C245 - C32041 * C256 + C31002 * C682 - C32048 * C688 +
             C31016 * C1120 - C23645 * C1134) *
                C114 +
            (C31010 * C257 - C32041 * C275 + C31002 * C689 - C32048 * C697 +
             C31016 * C1135 - C23645 * C1147) *
                C31941) *
               C31872 +
           ((C31010 * C246 - C32041 * C258 + C31002 * C683 - C32048 * C690 +
             C31016 * C1122 - C23645 * C1138) *
                C114 +
            (C31010 * C259 - C32041 * C276 + C31002 * C691 - C32048 * C698 +
             C31016 * C1139 - C23645 * C1149) *
                C31941) *
               C17094) *
              C31918 * C241 +
          (((C32041 * C264 - C31010 * C249 + C32048 * C1124 - C31002 * C1115 +
             C23645 * C1132 - C31016 * C1119) *
                C114 +
            (C32041 * C279 - C31010 * C265 + C32048 * C1142 - C31002 * C1125 +
             C23645 * C1146 - C31016 * C1133) *
                C31941) *
               C31864 +
           ((C32041 * C266 - C31010 * C250 + C32048 * C1126 - C31002 * C1116 +
             C23645 * C1136 - C31016 * C1121) *
                C114 +
            (C32041 * C280 - C31010 * C267 + C32048 * C1143 - C31002 * C1127 +
             C23645 * C1148 - C31016 * C1137) *
                C31941) *
               C31872 +
           ((C32041 * C268 - C31010 * C251 + C32048 * C1128 - C31002 * C1117 +
             C23645 * C1140 - C31016 * C1123) *
                C114 +
            (C32041 * C281 - C31010 * C269 + C32048 * C1144 - C31002 * C1129 +
             C23645 * C1150 - C31016 * C1141) *
                C31941) *
               C17094) *
              C31918 * C242) *
         C31892) /
            (p * q * std::sqrt(p + q));
    d2ee[95] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19912 * C122 - C19914 * C115 + C32045 * C359 - C19915 * C349) *
                 C114 +
             (C19912 * C136 - C19914 * C123 + C32045 * C379 - C19915 * C360) *
                 C31941) *
                C32271 +
            ((C19917 - C19918 + C19919 - C19920) * C114 +
             (C19921 - C19922 + C19923 - C19924) * C31941) *
                C32264 +
            C19965 * C32251 + C19966 * C32234) *
               C31918 * C471 +
           (((C19914 * C244 - C19912 * C254 + C19915 * C681 - C32045 * C686) *
                 C114 +
             (C19914 * C255 - C19912 * C274 + C19915 * C687 - C32045 * C696) *
                 C31941) *
                C32271 +
            ((C20293 - C20294 + C20295 - C20296) * C114 +
             (C20297 - C20298 + C20299 - C20300) * C31941) *
                C32264 +
            ((C20301 - C20302 + C20303 - C20304) * C114 +
             (C20305 - C20306 + C20307 - C20308) * C31941) *
                C32251 +
            ((C20309 - C20310 + C20311 - C20312) * C114 +
             (C20313 - C20314 + C20315 - C20316) * C31941) *
                C32234) *
               C31918 * C472) *
              C473 +
          ((((C19918 - C19917 + C19920 - C19919) * C114 +
             (C19922 - C19921 + C19924 - C19923) * C31941) *
                C32271 +
            ((C19926 - C19925 + C19928 - C19927) * C114 +
             (C19930 - C19929 + C19932 - C19931) * C31941) *
                C32264 +
            ((C19934 - C19933 + C19936 - C19935) * C114 +
             (C19938 - C19937 + C19940 - C19939) * C31941) *
                C32251 +
            ((C19941 - C19942 + C19943 - C19944) * C114 +
             (C19945 - C19946 + C19947 - C19948) * C31941) *
                C32234) *
               C31918 * C471 +
           (((C20294 - C20293 + C20296 - C20295) * C114 +
             (C20298 - C20297 + C20300 - C20299) * C31941) *
                C32271 +
            ((C20302 - C20301 + C20304 - C20303) * C114 +
             (C20306 - C20305 + C20308 - C20307) * C31941) *
                C32264 +
            ((C20310 - C20309 + C20312 - C20311) * C114 +
             (C20314 - C20313 + C20316 - C20315) * C31941) *
                C32251 +
            ((C19912 * C262 - C19914 * C248 + C32045 * C694 - C19915 * C685) *
                 C114 +
             (C19912 * C278 - C19914 * C263 + C32045 * C700 - C19915 * C695) *
                 C31941) *
                C32234) *
               C31918 * C472) *
              C474)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19912 * C122 - C19914 * C115 + C32045 * C359 - C19915 * C349) *
                 C817 +
             (C19912 * C136 - C19914 * C123 + C32045 * C379 - C19915 * C360) *
                 C32265 +
             (C20909 - C20910 + C20911 - C20912) * C818 +
             (C20913 - C20914 + C20915 - C20916) * C32253 + C20951 * C819 +
             C20952 * C32230) *
                C15335 +
            ((C19917 - C19918 + C19919 - C19920) * C817 +
             (C19921 - C19922 + C19923 - C19924) * C32265 + C21305 * C818 +
             C21306 * C32253 + C20949 * C819 + C20950 * C32230) *
                C31869) *
               C31918 * C471 +
           (((C20910 - C20909 + C20912 - C20911) * C817 +
             (C20914 - C20913 + C20916 - C20915) * C32265 +
             (C20918 - C20917 + C20920 - C20919) * C818 +
             (C20922 - C20921 + C20924 - C20923) * C32253 +
             (C20929 - C20930 + C20931 - C20932) * C819 +
             (C20933 - C20934 + C20935 - C20936) * C32230) *
                C15335 +
            (C21307 * C817 + C21308 * C32265 + C21309 * C818 + C21310 * C32253 +
             (C20937 - C20938 + C20939 - C20940) * C819 +
             (C20941 - C20942 + C20943 - C20944) * C32230) *
                C31869) *
               C31918 * C472) *
              C473 +
          ((((C19918 - C19917 + C19920 - C19919) * C817 +
             (C19922 - C19921 + C19924 - C19923) * C32265 + C21307 * C818 +
             C21308 * C32253 + C21309 * C819 + C21310 * C32230) *
                C15335 +
            ((C19926 - C19925 + C19928 - C19927) * C817 +
             (C19930 - C19929 + C19932 - C19931) * C32265 +
             (C20301 - C20302 + C20303 - C20304) * C818 +
             (C20305 - C20306 + C20307 - C20308) * C32253 +
             (C20755 - C20756 + C20757 - C20758) * C819 +
             (C20759 - C20760 + C20761 - C20762) * C32230) *
                C31869) *
               C31918 * C471 +
           ((C21305 * C817 + C21306 * C32265 + C20949 * C818 + C20950 * C32253 +
             (C20938 - C20937 + C20940 - C20939) * C819 +
             (C20942 - C20941 + C20944 - C20943) * C32230) *
                C15335 +
            ((C20302 - C20301 + C20304 - C20303) * C817 +
             (C20306 - C20305 + C20308 - C20307) * C32265 +
             (C20756 - C20755 + C20758 - C20757) * C818 +
             (C20760 - C20759 + C20762 - C20761) * C32253 +
             (C19912 * C967 - C19914 * C959 + C32045 * C1630 - C19915 * C1625) *
                 C819 +
             (C19912 * C977 - C19914 * C968 + C32045 * C1634 - C19915 * C1631) *
                 C32230) *
                C31869) *
               C31918 * C472) *
              C474)) /
            (p * q * std::sqrt(p + q));
    d2ee[96] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19912 * C122 - C19914 * C115 + C32045 * C359 - C19915 * C349) *
                 C114 +
             (C19912 * C136 - C19914 * C123 + C32045 * C379 - C19915 * C360) *
                 C31941) *
                C32271 +
            ((C19917 - C19918 + C19919 - C19920) * C114 +
             (C19921 - C19922 + C19923 - C19924) * C31941) *
                C32264 +
            C19965 * C32251 + C19966 * C32234) *
               C577 +
           (((C19914 * C349 - C19912 * C359 + C19915 * C354 - C32045 * C369) *
                 C114 +
             (C19914 * C360 - C19912 * C379 + C19915 * C370 - C32045 * C384) *
                 C31941) *
                C32271 +
            ((C20447 - C20448 + C20449 - C20450) * C114 +
             (C20451 - C20452 + C20453 - C20454) * C31941) *
                C32264 +
            ((C20455 - C20456 + C20457 - C20458) * C114 +
             (C20459 - C20460 + C20461 - C20462) * C31941) *
                C32251 +
            ((C20463 - C20464 + C20465 - C20466) * C114 +
             (C20467 - C20468 + C20469 - C20470) * C31941) *
                C32234) *
               C578) *
              C471 +
          ((((C19914 * C244 - C19912 * C254 + C19915 * C681 - C32045 * C686) *
                 C114 +
             (C19914 * C255 - C19912 * C274 + C19915 * C687 - C32045 * C696) *
                 C31941) *
                C32271 +
            ((C20293 - C20294 + C20295 - C20296) * C114 +
             (C20297 - C20298 + C20299 - C20300) * C31941) *
                C32264 +
            ((C20301 - C20302 + C20303 - C20304) * C114 +
             (C20305 - C20306 + C20307 - C20308) * C31941) *
                C32251 +
            ((C20309 - C20310 + C20311 - C20312) * C114 +
             (C20313 - C20314 + C20315 - C20316) * C31941) *
                C32234) *
               C577 +
           (((C19912 * C686 - C19914 * C681 + C32045 * C1130 - C19915 * C1118) *
                 C114 +
             (C19912 * C696 - C19914 * C687 + C32045 * C1145 - C19915 * C1131) *
                 C31941) *
                C32271 +
            ((C19912 * C688 - C19914 * C682 + C32045 * C1134 - C19915 * C1120) *
                 C114 +
             (C19912 * C697 - C19914 * C689 + C32045 * C1147 - C19915 * C1135) *
                 C31941) *
                C32264 +
            ((C19912 * C690 - C19914 * C683 + C32045 * C1138 - C19915 * C1122) *
                 C114 +
             (C19912 * C698 - C19914 * C691 + C32045 * C1149 - C19915 * C1139) *
                 C31941) *
                C32251 +
            ((C19912 * C692 - C19914 * C684 + C32045 * C2199 - C19915 * C2198) *
                 C114 +
             (C19912 * C699 - C19914 * C693 + C32045 * C2201 - C19915 * C2200) *
                 C31941) *
                C32234) *
               C578) *
              C472) *
         C31892) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19912 * C122 - C19914 * C115 + C32045 * C359 - C19915 * C349) *
                 C817 +
             (C19912 * C136 - C19914 * C123 + C32045 * C379 - C19915 * C360) *
                 C32265 +
             (C20909 - C20910 + C20911 - C20912) * C818 +
             (C20913 - C20914 + C20915 - C20916) * C32253 + C20951 * C819 +
             C20952 * C32230) *
                C15335 +
            ((C19917 - C19918 + C19919 - C19920) * C817 +
             (C19921 - C19922 + C19923 - C19924) * C32265 + C21305 * C818 +
             C21306 * C32253 + C20949 * C819 + C20950 * C32230) *
                C31869) *
               C577 +
           (((C19914 * C349 - C19912 * C359 + C19915 * C354 - C32045 * C369) *
                 C817 +
             (C19914 * C360 - C19912 * C379 + C19915 * C370 - C32045 * C384) *
                 C32265 +
             (C21715 - C21716 + C21717 - C21718) * C818 +
             (C21719 - C21720 + C21721 - C21722) * C32253 +
             (C21723 - C21724 + C21725 - C21726) * C819 +
             (C21727 - C21728 + C21729 - C21730) * C32230) *
                C15335 +
            ((C20447 - C20448 + C20449 - C20450) * C817 +
             (C20451 - C20452 + C20453 - C20454) * C32265 +
             (C21505 - C21506 + C21507 - C21508) * C818 +
             (C21509 - C21510 + C21511 - C21512) * C32253 +
             (C21513 - C21514 + C21515 - C21516) * C819 +
             (C21517 - C21518 + C21519 - C21520) * C32230) *
                C31869) *
               C578) *
              C471 +
          ((((C20910 - C20909 + C20912 - C20911) * C817 +
             (C20914 - C20913 + C20916 - C20915) * C32265 +
             (C20918 - C20917 + C20920 - C20919) * C818 +
             (C20922 - C20921 + C20924 - C20923) * C32253 +
             (C20929 - C20930 + C20931 - C20932) * C819 +
             (C20933 - C20934 + C20935 - C20936) * C32230) *
                C15335 +
            (C21307 * C817 + C21308 * C32265 + C21309 * C818 + C21310 * C32253 +
             (C20937 - C20938 + C20939 - C20940) * C819 +
             (C20941 - C20942 + C20943 - C20944) * C32230) *
                C31869) *
               C577 +
           (((C21716 - C21715 + C21718 - C21717) * C817 +
             (C21720 - C21719 + C21722 - C21721) * C32265 +
             (C21724 - C21723 + C21726 - C21725) * C818 +
             (C21728 - C21727 + C21730 - C21729) * C32253 +
             (C19912 * C1626 - C19914 * C1623 + C32045 * C6175 -
              C19915 * C6171) *
                 C819 +
             (C19912 * C1632 - C19914 * C1627 + C32045 * C6180 -
              C19915 * C6176) *
                 C32230) *
                C15335 +
            ((C21506 - C21505 + C21508 - C21507) * C817 +
             (C21510 - C21509 + C21512 - C21511) * C32265 +
             (C21514 - C21513 + C21516 - C21515) * C818 +
             (C21518 - C21517 + C21520 - C21519) * C32253 +
             (C19912 * C1628 - C19914 * C1624 + C32045 * C6987 -
              C19915 * C6986) *
                 C819 +
             (C19912 * C1633 - C19914 * C1629 + C32045 * C6989 -
              C19915 * C6988) *
                 C32230) *
                C31869) *
               C578) *
              C472) *
         C31892) /
            (p * q * std::sqrt(p + q));
    d2ee[97] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C19912 * C122 - C19914 * C115 + C32045 * C359 - C19915 * C349) *
                C114 +
            (C19912 * C136 - C19914 * C123 + C32045 * C379 - C19915 * C360) *
                C31941) *
               C32271 +
           ((C19917 - C19918 + C19919 - C19920) * C114 +
            (C19921 - C19922 + C19923 - C19924) * C31941) *
               C32264 +
           C19965 * C32251 + C19966 * C32234) *
              C31918 * C240 +
          (((C19914 * C244 - C19912 * C254 + C19915 * C681 - C32045 * C686) *
                C114 +
            (C19914 * C255 - C19912 * C274 + C19915 * C687 - C32045 * C696) *
                C31941) *
               C32271 +
           ((C19914 * C245 - C19912 * C256 + C19915 * C682 - C32045 * C688) *
                C114 +
            (C19914 * C257 - C19912 * C275 + C19915 * C689 - C32045 * C697) *
                C31941) *
               C32264 +
           ((C19914 * C246 - C19912 * C258 + C19915 * C683 - C32045 * C690) *
                C114 +
            (C19914 * C259 - C19912 * C276 + C19915 * C691 - C32045 * C698) *
                C31941) *
               C32251 +
           ((C19914 * C247 - C19912 * C260 + C19915 * C684 - C32045 * C692) *
                C114 +
            (C19914 * C261 - C19912 * C277 + C19915 * C693 - C32045 * C699) *
                C31941) *
               C32234) *
              C31918 * C241 +
          (((C19912 * C264 - C19914 * C249 + C32045 * C1124 - C19915 * C1115) *
                C114 +
            (C19912 * C279 - C19914 * C265 + C32045 * C1142 - C19915 * C1125) *
                C31941) *
               C32271 +
           ((C19912 * C266 - C19914 * C250 + C32045 * C1126 - C19915 * C1116) *
                C114 +
            (C19912 * C280 - C19914 * C267 + C32045 * C1143 - C19915 * C1127) *
                C31941) *
               C32264 +
           ((C19912 * C268 - C19914 * C251 + C32045 * C1128 - C19915 * C1117) *
                C114 +
            (C19912 * C281 - C19914 * C269 + C32045 * C1144 - C19915 * C1129) *
                C31941) *
               C32251 +
           ((C19912 * C270 - C19914 * C252 + C32045 * C1458 - C19915 * C1457) *
                C114 +
            (C19912 * C282 - C19914 * C271 + C32045 * C1460 - C19915 * C1459) *
                C31941) *
               C32234) *
              C31918 * C242) *
         C31892) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C19912 * C122 - C19914 * C115 + C32045 * C359 - C19915 * C349) *
                C114 +
            (C19912 * C136 - C19914 * C123 + C32045 * C379 - C19915 * C360) *
                C31941) *
               C32271 +
           ((C19917 - C19918 + C19919 - C19920) * C114 +
            (C19921 - C19922 + C19923 - C19924) * C31941) *
               C32264 +
           C19965 * C32251 + C19966 * C32234) *
              C31918 * C31904 * C110 +
          (((C19918 - C19917 + C19920 - C19919) * C114 +
            (C19922 - C19921 + C19924 - C19923) * C31941) *
               C32271 +
           ((C19926 - C19925 + C19928 - C19927) * C114 +
            (C19930 - C19929 + C19932 - C19931) * C31941) *
               C32264 +
           ((C19934 - C19933 + C19936 - C19935) * C114 +
            (C19938 - C19937 + C19940 - C19939) * C31941) *
               C32251 +
           ((C19941 - C19942 + C19943 - C19944) * C114 +
            (C19945 - C19946 + C19947 - C19948) * C31941) *
               C32234) *
              C31918 * C31904 * C111 +
          (C19965 * C32271 + C19966 * C32264 +
           ((C19942 - C19941 + C19944 - C19943) * C114 +
            (C19946 - C19945 + C19948 - C19947) * C31941) *
               C32251 +
           ((C19912 * C132 - C19914 * C120 + C32045 * C580 - C19915 * C579) *
                C114 +
            (C19912 * C141 - C19914 * C133 + C32045 * C582 - C19915 * C581) *
                C31941) *
               C32234) *
              C31918 * C31904 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C19912 * C122 - C19914 * C115 + C32045 * C359 - C19915 * C349) *
                C114 +
            (C19912 * C136 - C19914 * C123 + C32045 * C379 - C19915 * C360) *
                C31941) *
               C32271 +
           ((C19917 - C19918 + C19919 - C19920) * C114 +
            (C19921 - C19922 + C19923 - C19924) * C31941) *
               C32264 +
           C19965 * C32251 + C19966 * C32234) *
              C346 +
          (((C19914 * C349 - C19912 * C359 + C19915 * C354 - C32045 * C369) *
                C114 +
            (C19914 * C360 - C19912 * C379 + C19915 * C370 - C32045 * C384) *
                C31941) *
               C32271 +
           ((C19914 * C350 - C19912 * C361 + C19915 * C355 - C32045 * C371) *
                C114 +
            (C19914 * C362 - C19912 * C380 + C19915 * C372 - C32045 * C385) *
                C31941) *
               C32264 +
           ((C19914 * C351 - C19912 * C363 + C19915 * C356 - C32045 * C373) *
                C114 +
            (C19914 * C364 - C19912 * C381 + C19915 * C374 - C32045 * C386) *
                C31941) *
               C32251 +
           ((C19914 * C352 - C19912 * C365 + C19915 * C357 - C32045 * C375) *
                C114 +
            (C19914 * C366 - C19912 * C382 + C19915 * C376 - C32045 * C387) *
                C31941) *
               C32234) *
              C347 +
          (((C19912 * C369 - C19914 * C354 + C32045 * C2034 - C19915 * C2028) *
                C114 +
            (C19912 * C384 - C19914 * C370 + C32045 * C2046 - C19915 * C2035) *
                C31941) *
               C32271 +
           ((C19912 * C371 - C19914 * C355 + C32045 * C2036 - C19915 * C2029) *
                C114 +
            (C19912 * C385 - C19914 * C372 + C32045 * C2047 - C19915 * C2037) *
                C31941) *
               C32264 +
           ((C19912 * C373 - C19914 * C356 + C32045 * C2038 - C19915 * C2030) *
                C114 +
            (C19912 * C386 - C19914 * C374 + C32045 * C2048 - C19915 * C2039) *
                C31941) *
               C32251 +
           ((C19912 * C375 - C19914 * C357 + C32045 * C2373 - C19915 * C2372) *
                C114 +
            (C19912 * C387 - C19914 * C376 + C32045 * C2375 - C19915 * C2374) *
                C31941) *
               C32234) *
              C348) *
         C31904 * C31892) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C19912 * C122 - C19914 * C115 + C32045 * C359 - C19915 * C349) *
                C817 +
            (C19912 * C136 - C19914 * C123 + C32045 * C379 - C19915 * C360) *
                C32265 +
            (C19912 * C254 - C19914 * C244 + C32045 * C686 - C19915 * C681) *
                C818 +
            (C19912 * C274 - C19914 * C255 + C32045 * C696 - C19915 * C687) *
                C32253 +
            (C19912 * C264 - C19914 * C249 + C32045 * C1124 - C19915 * C1115) *
                C819 +
            (C19912 * C279 - C19914 * C265 + C32045 * C1142 - C19915 * C1125) *
                C32230) *
               C15335 +
           ((C19917 - C19918 + C19919 - C19920) * C817 +
            (C19921 - C19922 + C19923 - C19924) * C32265 +
            (C20294 - C20293 + C20296 - C20295) * C818 +
            (C20298 - C20297 + C20300 - C20299) * C32253 +
            (C20747 - C20748 + C20749 - C20750) * C819 +
            (C20751 - C20752 + C20753 - C20754) * C32230) *
               C31869) *
              C31918 * C31904 * C110 +
          (((C19918 - C19917 + C19920 - C19919) * C817 +
            (C19922 - C19921 + C19924 - C19923) * C32265 +
            (C20293 - C20294 + C20295 - C20296) * C818 +
            (C20297 - C20298 + C20299 - C20300) * C32253 +
            (C20748 - C20747 + C20750 - C20749) * C819 +
            (C20752 - C20751 + C20754 - C20753) * C32230) *
               C15335 +
           ((C19926 - C19925 + C19928 - C19927) * C817 +
            (C19930 - C19929 + C19932 - C19931) * C32265 +
            (C20301 - C20302 + C20303 - C20304) * C818 +
            (C20305 - C20306 + C20307 - C20308) * C32253 +
            (C20755 - C20756 + C20757 - C20758) * C819 +
            (C20759 - C20760 + C20761 - C20762) * C32230) *
               C31869) *
              C31918 * C31904 * C111 +
          ((C19957 * C817 + C19958 * C32265 +
            (C20302 - C20301 + C20304 - C20303) * C818 +
            (C20306 - C20305 + C20308 - C20307) * C32253 +
            (C20756 - C20755 + C20758 - C20757) * C819 +
            (C20760 - C20759 + C20762 - C20761) * C32230) *
               C15335 +
           (C19959 * C817 + C19960 * C32265 +
            (C20310 - C20309 + C20312 - C20311) * C818 +
            (C20314 - C20313 + C20316 - C20315) * C32253 +
            (C19912 * C270 - C19914 * C252 + C32045 * C1458 - C19915 * C1457) *
                C819 +
            (C19912 * C282 - C19914 * C271 + C32045 * C1460 - C19915 * C1459) *
                C32230) *
               C31869) *
              C31918 * C31904 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C19912 * C122 - C19914 * C115 + C32045 * C359 - C19915 * C349) *
                C817 +
            (C19912 * C136 - C19914 * C123 + C32045 * C379 - C19915 * C360) *
                C32265 +
            (C20909 - C20910 + C20911 - C20912) * C818 +
            (C20913 - C20914 + C20915 - C20916) * C32253 + C20951 * C819 +
            C20952 * C32230) *
               C15335 +
           ((C19917 - C19918 + C19919 - C19920) * C817 +
            (C19921 - C19922 + C19923 - C19924) * C32265 +
            (C20294 - C20293 + C20296 - C20295) * C818 +
            (C20298 - C20297 + C20300 - C20299) * C32253 + C20949 * C819 +
            C20950 * C32230) *
               C31869) *
              C31918 * C240 +
          (((C20910 - C20909 + C20912 - C20911) * C817 +
            (C20914 - C20913 + C20916 - C20915) * C32265 +
            (C20918 - C20917 + C20920 - C20919) * C818 +
            (C20922 - C20921 + C20924 - C20923) * C32253 +
            (C20929 - C20930 + C20931 - C20932) * C819 +
            (C20933 - C20934 + C20935 - C20936) * C32230) *
               C15335 +
           ((C20293 - C20294 + C20295 - C20296) * C817 +
            (C20297 - C20298 + C20299 - C20300) * C32265 +
            (C20748 - C20747 + C20750 - C20749) * C818 +
            (C20752 - C20751 + C20754 - C20753) * C32253 +
            (C20937 - C20938 + C20939 - C20940) * C819 +
            (C20941 - C20942 + C20943 - C20944) * C32230) *
               C31869) *
              C31918 * C241 +
          ((C20951 * C817 + C20952 * C32265 +
            (C20930 - C20929 + C20932 - C20931) * C818 +
            (C20934 - C20933 + C20936 - C20935) * C32253 +
            (C19912 * C969 - C19914 * C960 + C32045 * C6173 - C19915 * C6170) *
                C819 +
            (C19912 * C978 - C19914 * C970 + C32045 * C6179 - C19915 * C6174) *
                C32230) *
               C15335 +
           (C20949 * C817 + C20950 * C32265 +
            (C20938 - C20937 + C20940 - C20939) * C818 +
            (C20942 - C20941 + C20944 - C20943) * C32253 +
            (C19912 * C971 - C19914 * C961 + C32045 * C6355 - C19915 * C6354) *
                C819 +
            (C19912 * C979 - C19914 * C972 + C32045 * C6357 - C19915 * C6356) *
                C32230) *
               C31869) *
              C31918 * C242) *
         C31892) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C19912 * C122 - C19914 * C115 + C32045 * C359 - C19915 * C349) *
                C817 +
            (C19912 * C136 - C19914 * C123 + C32045 * C379 - C19915 * C360) *
                C32265 +
            (C20909 - C20910 + C20911 - C20912) * C818 +
            (C20913 - C20914 + C20915 - C20916) * C32253 + C20951 * C819 +
            C20952 * C32230) *
               C15335 +
           ((C19917 - C19918 + C19919 - C19920) * C817 +
            (C19921 - C19922 + C19923 - C19924) * C32265 +
            (C20294 - C20293 + C20296 - C20295) * C818 +
            (C20298 - C20297 + C20300 - C20299) * C32253 + C20949 * C819 +
            C20950 * C32230) *
               C31869) *
              C346 +
          (((C19914 * C349 - C19912 * C359 + C19915 * C354 - C32045 * C369) *
                C817 +
            (C19914 * C360 - C19912 * C379 + C19915 * C370 - C32045 * C384) *
                C32265 +
            (C19914 * C681 - C19912 * C686 + C19915 * C1118 - C32045 * C1130) *
                C818 +
            (C19914 * C687 - C19912 * C696 + C19915 * C1131 - C32045 * C1145) *
                C32253 +
            (C19914 * C1115 - C19912 * C1124 + C19915 * C1119 -
             C32045 * C1132) *
                C819 +
            (C19914 * C1125 - C19912 * C1142 + C19915 * C1133 -
             C32045 * C1146) *
                C32230) *
               C15335 +
           ((C20447 - C20448 + C20449 - C20450) * C817 +
            (C20451 - C20452 + C20453 - C20454) * C32265 +
            (C19914 * C682 - C19912 * C688 + C19915 * C1120 - C32045 * C1134) *
                C818 +
            (C19914 * C689 - C19912 * C697 + C19915 * C1135 - C32045 * C1147) *
                C32253 +
            (C19914 * C1116 - C19912 * C1126 + C19915 * C1121 -
             C32045 * C1136) *
                C819 +
            (C19914 * C1127 - C19912 * C1143 + C19915 * C1137 -
             C32045 * C1148) *
                C32230) *
               C31869) *
              C347 +
          (((C19912 * C369 - C19914 * C354 + C32045 * C2034 - C19915 * C2028) *
                C817 +
            (C19912 * C384 - C19914 * C370 + C32045 * C2046 - C19915 * C2035) *
                C32265 +
            (C19912 * C1130 - C19914 * C1118 + C32045 * C2549 -
             C19915 * C2546) *
                C818 +
            (C19912 * C1145 - C19914 * C1131 + C32045 * C2555 -
             C19915 * C2550) *
                C32253 +
            (C19912 * C1132 - C19914 * C1119 + C32045 * C6831 -
             C19915 * C6828) *
                C819 +
            (C19912 * C1146 - C19914 * C1133 + C32045 * C6837 -
             C19915 * C6832) *
                C32230) *
               C15335 +
           ((C19912 * C371 - C19914 * C355 + C32045 * C2036 - C19915 * C2029) *
                C817 +
            (C19912 * C385 - C19914 * C372 + C32045 * C2047 - C19915 * C2037) *
                C32265 +
            (C19912 * C1134 - C19914 * C1120 + C32045 * C2551 -
             C19915 * C2547) *
                C818 +
            (C19912 * C1147 - C19914 * C1135 + C32045 * C2556 -
             C19915 * C2552) *
                C32253 +
            (C19912 * C1136 - C19914 * C1121 + C32045 * C7149 -
             C19915 * C7148) *
                C819 +
            (C19912 * C1148 - C19914 * C1137 + C32045 * C7151 -
             C19915 * C7150) *
                C32230) *
               C31869) *
              C348) *
         C31904 * C31892) /
            (p * q * std::sqrt(p + q));
    d2ee[98] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19912 * C122 - C19914 * C115 + C32045 * C359 - C19915 * C349) *
                 C114 +
             (C19912 * C136 - C19914 * C123 + C32045 * C379 - C19915 * C360) *
                 C31941) *
                C32271 +
            ((C19917 - C19918 + C19919 - C19920) * C114 +
             (C19921 - C19922 + C19923 - C19924) * C31941) *
                C32264 +
            C19965 * C32251 + C19966 * C32234) *
               C577 +
           (((C19914 * C349 - C19912 * C359 + C19915 * C354 - C32045 * C369) *
                 C114 +
             (C19914 * C360 - C19912 * C379 + C19915 * C370 - C32045 * C384) *
                 C31941) *
                C32271 +
            ((C20447 - C20448 + C20449 - C20450) * C114 +
             (C20451 - C20452 + C20453 - C20454) * C31941) *
                C32264 +
            ((C20455 - C20456 + C20457 - C20458) * C114 +
             (C20459 - C20460 + C20461 - C20462) * C31941) *
                C32251 +
            ((C20463 - C20464 + C20465 - C20466) * C114 +
             (C20467 - C20468 + C20469 - C20470) * C31941) *
                C32234) *
               C578) *
              C31904 * C473 +
          ((((C19918 - C19917 + C19920 - C19919) * C114 +
             (C19922 - C19921 + C19924 - C19923) * C31941) *
                C32271 +
            ((C19926 - C19925 + C19928 - C19927) * C114 +
             (C19930 - C19929 + C19932 - C19931) * C31941) *
                C32264 +
            ((C19934 - C19933 + C19936 - C19935) * C114 +
             (C19938 - C19937 + C19940 - C19939) * C31941) *
                C32251 +
            ((C19941 - C19942 + C19943 - C19944) * C114 +
             (C19945 - C19946 + C19947 - C19948) * C31941) *
                C32234) *
               C577 +
           (((C20448 - C20447 + C20450 - C20449) * C114 +
             (C20452 - C20451 + C20454 - C20453) * C31941) *
                C32271 +
            ((C20456 - C20455 + C20458 - C20457) * C114 +
             (C20460 - C20459 + C20462 - C20461) * C31941) *
                C32264 +
            ((C20464 - C20463 + C20466 - C20465) * C114 +
             (C20468 - C20467 + C20470 - C20469) * C31941) *
                C32251 +
            ((C19912 * C367 - C19914 * C353 + C32045 * C377 - C19915 * C358) *
                 C114 +
             (C19912 * C383 - C19914 * C368 + C32045 * C388 - C19915 * C378) *
                 C31941) *
                C32234) *
               C578) *
              C31904 * C474)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C19912 * C122 - C19914 * C115 + C32045 * C359 - C19915 * C349) *
                 C817 +
             (C19912 * C136 - C19914 * C123 + C32045 * C379 - C19915 * C360) *
                 C32265 +
             (C20909 - C20910 + C20911 - C20912) * C818 +
             (C20913 - C20914 + C20915 - C20916) * C32253 + C20951 * C819 +
             C20952 * C32230) *
                C15335 +
            ((C19917 - C19918 + C19919 - C19920) * C817 +
             (C19921 - C19922 + C19923 - C19924) * C32265 + C21305 * C818 +
             C21306 * C32253 + C20949 * C819 + C20950 * C32230) *
                C31869) *
               C577 +
           (((C19914 * C349 - C19912 * C359 + C19915 * C354 - C32045 * C369) *
                 C817 +
             (C19914 * C360 - C19912 * C379 + C19915 * C370 - C32045 * C384) *
                 C32265 +
             (C19914 * C681 - C19912 * C686 + C19915 * C1118 - C32045 * C1130) *
                 C818 +
             (C19914 * C687 - C19912 * C696 + C19915 * C1131 - C32045 * C1145) *
                 C32253 +
             (C19914 * C1115 - C19912 * C1124 + C19915 * C1119 -
              C32045 * C1132) *
                 C819 +
             (C19914 * C1125 - C19912 * C1142 + C19915 * C1133 -
              C32045 * C1146) *
                 C32230) *
                C15335 +
            ((C20447 - C20448 + C20449 - C20450) * C817 +
             (C20451 - C20452 + C20453 - C20454) * C32265 +
             (C21505 - C21506 + C21507 - C21508) * C818 +
             (C21509 - C21510 + C21511 - C21512) * C32253 +
             (C21513 - C21514 + C21515 - C21516) * C819 +
             (C21517 - C21518 + C21519 - C21520) * C32230) *
                C31869) *
               C578) *
              C31904 * C473 +
          ((((C19918 - C19917 + C19920 - C19919) * C817 +
             (C19922 - C19921 + C19924 - C19923) * C32265 + C21307 * C818 +
             C21308 * C32253 + C21309 * C819 + C21310 * C32230) *
                C15335 +
            ((C19926 - C19925 + C19928 - C19927) * C817 +
             (C19930 - C19929 + C19932 - C19931) * C32265 +
             (C20301 - C20302 + C20303 - C20304) * C818 +
             (C20305 - C20306 + C20307 - C20308) * C32253 +
             (C20755 - C20756 + C20757 - C20758) * C819 +
             (C20759 - C20760 + C20761 - C20762) * C32230) *
                C31869) *
               C577 +
           (((C20448 - C20447 + C20450 - C20449) * C817 +
             (C20452 - C20451 + C20454 - C20453) * C32265 +
             (C21506 - C21505 + C21508 - C21507) * C818 +
             (C21510 - C21509 + C21512 - C21511) * C32253 +
             (C21514 - C21513 + C21516 - C21515) * C819 +
             (C21518 - C21517 + C21520 - C21519) * C32230) *
                C15335 +
            ((C20456 - C20455 + C20458 - C20457) * C817 +
             (C20460 - C20459 + C20462 - C20461) * C32265 +
             (C19912 * C690 - C19914 * C683 + C32045 * C1138 - C19915 * C1122) *
                 C818 +
             (C19912 * C698 - C19914 * C691 + C32045 * C1149 - C19915 * C1139) *
                 C32253 +
             (C19912 * C1128 - C19914 * C1117 + C32045 * C1140 -
              C19915 * C1123) *
                 C819 +
             (C19912 * C1144 - C19914 * C1129 + C32045 * C1150 -
              C19915 * C1141) *
                 C32230) *
                C31869) *
               C578) *
              C31904 * C474)) /
            (p * q * std::sqrt(p + q));
    d2ee[99] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C19912 * C122 - C19914 * C115 + C32045 * C359 - C19915 * C349) *
                C114 +
            (C19912 * C136 - C19914 * C123 + C32045 * C379 - C19915 * C360) *
                C31941) *
               C32271 +
           ((C19917 - C19918 + C19919 - C19920) * C114 +
            (C19921 - C19922 + C19923 - C19924) * C31941) *
               C32264 +
           C19965 * C32251 + C19966 * C32234) *
              C31918 * C31904 * C110 +
          (((C19918 - C19917 + C19920 - C19919) * C114 +
            (C19922 - C19921 + C19924 - C19923) * C31941) *
               C32271 +
           ((C19926 - C19925 + C19928 - C19927) * C114 +
            (C19930 - C19929 + C19932 - C19931) * C31941) *
               C32264 +
           ((C19934 - C19933 + C19936 - C19935) * C114 +
            (C19938 - C19937 + C19940 - C19939) * C31941) *
               C32251 +
           ((C19941 - C19942 + C19943 - C19944) * C114 +
            (C19945 - C19946 + C19947 - C19948) * C31941) *
               C32234) *
              C31918 * C31904 * C111 +
          (C19965 * C32271 + C19966 * C32264 +
           ((C19942 - C19941 + C19944 - C19943) * C114 +
            (C19946 - C19945 + C19948 - C19947) * C31941) *
               C32251 +
           ((C19912 * C132 - C19914 * C120 + C32045 * C580 - C19915 * C579) *
                C114 +
            (C19912 * C141 - C19914 * C133 + C32045 * C582 - C19915 * C581) *
                C31941) *
               C32234) *
              C31918 * C31904 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C19912 * C122 - C19914 * C115 + C32045 * C359 - C19915 * C349) *
                C114 +
            (C19912 * C136 - C19914 * C123 + C32045 * C379 - C19915 * C360) *
                C31941) *
               C32271 +
           ((C19917 - C19918 + C19919 - C19920) * C114 +
            (C19921 - C19922 + C19923 - C19924) * C31941) *
               C32264 +
           C19965 * C32251 + C19966 * C32234) *
              C31918 * C240 +
          (((C19914 * C244 - C19912 * C254 + C19915 * C681 - C32045 * C686) *
                C114 +
            (C19914 * C255 - C19912 * C274 + C19915 * C687 - C32045 * C696) *
                C31941) *
               C32271 +
           ((C19914 * C245 - C19912 * C256 + C19915 * C682 - C32045 * C688) *
                C114 +
            (C19914 * C257 - C19912 * C275 + C19915 * C689 - C32045 * C697) *
                C31941) *
               C32264 +
           ((C19914 * C246 - C19912 * C258 + C19915 * C683 - C32045 * C690) *
                C114 +
            (C19914 * C259 - C19912 * C276 + C19915 * C691 - C32045 * C698) *
                C31941) *
               C32251 +
           ((C19914 * C247 - C19912 * C260 + C19915 * C684 - C32045 * C692) *
                C114 +
            (C19914 * C261 - C19912 * C277 + C19915 * C693 - C32045 * C699) *
                C31941) *
               C32234) *
              C31918 * C241 +
          (((C19912 * C264 - C19914 * C249 + C32045 * C1124 - C19915 * C1115) *
                C114 +
            (C19912 * C279 - C19914 * C265 + C32045 * C1142 - C19915 * C1125) *
                C31941) *
               C32271 +
           ((C19912 * C266 - C19914 * C250 + C32045 * C1126 - C19915 * C1116) *
                C114 +
            (C19912 * C280 - C19914 * C267 + C32045 * C1143 - C19915 * C1127) *
                C31941) *
               C32264 +
           ((C19912 * C268 - C19914 * C251 + C32045 * C1128 - C19915 * C1117) *
                C114 +
            (C19912 * C281 - C19914 * C269 + C32045 * C1144 - C19915 * C1129) *
                C31941) *
               C32251 +
           ((C19912 * C270 - C19914 * C252 + C32045 * C1458 - C19915 * C1457) *
                C114 +
            (C19912 * C282 - C19914 * C271 + C32045 * C1460 - C19915 * C1459) *
                C31941) *
               C32234) *
              C31918 * C242) *
         C31892) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C19912 * C122 - C19914 * C115 + C32045 * C359 - C19915 * C349) *
                C817 +
            (C19912 * C136 - C19914 * C123 + C32045 * C379 - C19915 * C360) *
                C32265 +
            (C19912 * C254 - C19914 * C244 + C32045 * C686 - C19915 * C681) *
                C818 +
            (C19912 * C274 - C19914 * C255 + C32045 * C696 - C19915 * C687) *
                C32253 +
            (C19912 * C264 - C19914 * C249 + C32045 * C1124 - C19915 * C1115) *
                C819 +
            (C19912 * C279 - C19914 * C265 + C32045 * C1142 - C19915 * C1125) *
                C32230) *
               C15335 +
           ((C19917 - C19918 + C19919 - C19920) * C817 +
            (C19921 - C19922 + C19923 - C19924) * C32265 +
            (C20294 - C20293 + C20296 - C20295) * C818 +
            (C20298 - C20297 + C20300 - C20299) * C32253 +
            (C20747 - C20748 + C20749 - C20750) * C819 +
            (C20751 - C20752 + C20753 - C20754) * C32230) *
               C31869) *
              C31918 * C31904 * C110 +
          (((C19918 - C19917 + C19920 - C19919) * C817 +
            (C19922 - C19921 + C19924 - C19923) * C32265 +
            (C20293 - C20294 + C20295 - C20296) * C818 +
            (C20297 - C20298 + C20299 - C20300) * C32253 +
            (C20748 - C20747 + C20750 - C20749) * C819 +
            (C20752 - C20751 + C20754 - C20753) * C32230) *
               C15335 +
           ((C19926 - C19925 + C19928 - C19927) * C817 +
            (C19930 - C19929 + C19932 - C19931) * C32265 +
            (C20301 - C20302 + C20303 - C20304) * C818 +
            (C20305 - C20306 + C20307 - C20308) * C32253 +
            (C20755 - C20756 + C20757 - C20758) * C819 +
            (C20759 - C20760 + C20761 - C20762) * C32230) *
               C31869) *
              C31918 * C31904 * C111 +
          ((C19957 * C817 + C19958 * C32265 +
            (C20302 - C20301 + C20304 - C20303) * C818 +
            (C20306 - C20305 + C20308 - C20307) * C32253 +
            (C20756 - C20755 + C20758 - C20757) * C819 +
            (C20760 - C20759 + C20762 - C20761) * C32230) *
               C15335 +
           (C19959 * C817 + C19960 * C32265 +
            (C20310 - C20309 + C20312 - C20311) * C818 +
            (C20314 - C20313 + C20316 - C20315) * C32253 +
            (C19912 * C270 - C19914 * C252 + C32045 * C1458 - C19915 * C1457) *
                C819 +
            (C19912 * C282 - C19914 * C271 + C32045 * C1460 - C19915 * C1459) *
                C32230) *
               C31869) *
              C31918 * C31904 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C19912 * C122 - C19914 * C115 + C32045 * C359 - C19915 * C349) *
                C817 +
            (C19912 * C136 - C19914 * C123 + C32045 * C379 - C19915 * C360) *
                C32265 +
            (C20909 - C20910 + C20911 - C20912) * C818 +
            (C20913 - C20914 + C20915 - C20916) * C32253 + C20951 * C819 +
            C20952 * C32230) *
               C15335 +
           ((C19917 - C19918 + C19919 - C19920) * C817 +
            (C19921 - C19922 + C19923 - C19924) * C32265 +
            (C20294 - C20293 + C20296 - C20295) * C818 +
            (C20298 - C20297 + C20300 - C20299) * C32253 + C20949 * C819 +
            C20950 * C32230) *
               C31869) *
              C31918 * C240 +
          (((C20910 - C20909 + C20912 - C20911) * C817 +
            (C20914 - C20913 + C20916 - C20915) * C32265 +
            (C20918 - C20917 + C20920 - C20919) * C818 +
            (C20922 - C20921 + C20924 - C20923) * C32253 +
            (C20929 - C20930 + C20931 - C20932) * C819 +
            (C20933 - C20934 + C20935 - C20936) * C32230) *
               C15335 +
           ((C20293 - C20294 + C20295 - C20296) * C817 +
            (C20297 - C20298 + C20299 - C20300) * C32265 +
            (C20748 - C20747 + C20750 - C20749) * C818 +
            (C20752 - C20751 + C20754 - C20753) * C32253 +
            (C20937 - C20938 + C20939 - C20940) * C819 +
            (C20941 - C20942 + C20943 - C20944) * C32230) *
               C31869) *
              C31918 * C241 +
          ((C20951 * C817 + C20952 * C32265 +
            (C20930 - C20929 + C20932 - C20931) * C818 +
            (C20934 - C20933 + C20936 - C20935) * C32253 +
            (C19912 * C969 - C19914 * C960 + C32045 * C6173 - C19915 * C6170) *
                C819 +
            (C19912 * C978 - C19914 * C970 + C32045 * C6179 - C19915 * C6174) *
                C32230) *
               C15335 +
           (C20949 * C817 + C20950 * C32265 +
            (C20938 - C20937 + C20940 - C20939) * C818 +
            (C20942 - C20941 + C20944 - C20943) * C32253 +
            (C19912 * C971 - C19914 * C961 + C32045 * C6355 - C19915 * C6354) *
                C819 +
            (C19912 * C979 - C19914 * C972 + C32045 * C6357 - C19915 * C6356) *
                C32230) *
               C31869) *
              C31918 * C242) *
         C31892) /
            (p * q * std::sqrt(p + q));
    d2ee[100] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31958 * C122 - C113 * C115) * C2662 +
             (C31958 * C136 - C113 * C123) * C32199 + (C982 - C983) * C2663 +
             (C984 - C985) * C32003) *
                C2658 +
            ((C144 - C145) * C2662 + (C146 - C147) * C32199 + C1302 * C2663 +
             C1303 * C32003) *
                C2659 +
            C2679 * C2660 + C2680 * C32234) *
               C31918 * C471 +
           (((C983 - C982) * C2662 + (C985 - C984) * C32199 +
             (C987 - C986) * C2663 + (C989 - C988) * C32003) *
                C2658 +
            (C1304 * C2662 + C1305 * C32199 + C1306 * C2663 + C1307 * C32003) *
                C2659 +
            (C1308 * C2662 + C1309 * C32199 + C1310 * C2663 + C1311 * C32003) *
                C2660 +
            (C3007 * C2662 + C3008 * C32199 + (C833 - C834) * C2663 +
             (C835 - C836) * C32003) *
                C32234) *
               C31918 * C472) *
              C473 +
          ((((C145 - C144) * C2662 + (C147 - C146) * C32199 + C1304 * C2663 +
             C1305 * C32003) *
                C2658 +
            ((C149 - C148) * C2662 + (C151 - C150) * C32199 + C1308 * C2663 +
             C1309 * C32003) *
                C2659 +
            ((C153 - C152) * C2662 + (C155 - C154) * C32199 + C3007 * C2663 +
             C3008 * C32003) *
                C2660 +
            ((C157 - C156) * C2662 + (C159 - C158) * C32199 +
             (C492 - C493) * C2663 + (C494 - C495) * C32003) *
                C32234) *
               C31918 * C471 +
           ((C1302 * C2662 + C1303 * C32199 + C990 * C2663 + C991 * C32003) *
                C2658 +
            (C827 * C2662 + C828 * C32199 + C840 * C2663 + C841 * C32003) *
                C2659 +
            (C2671 * C2662 + C2672 * C32199 + (C834 - C833) * C2663 +
             (C836 - C835) * C32003) *
                C2660 +
            ((C493 - C492) * C2662 + (C495 - C494) * C32199 +
             (C31958 * C272 - C113 * C253) * C2663 +
             (C31958 * C283 - C113 * C273) * C32003) *
                C32234) *
               C31918 * C472) *
              C474)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31958 * C122 - C113 * C115) * C7430 +
             (C31958 * C136 - C113 * C123) * C7424 + (C982 - C983) * C7431 +
             (C984 - C985) * C7425 + C1004 * C7432 + C1005 * C7426 +
             C6097 * C7433 + C6098 * C32240) *
                C32180 +
            ((C144 - C145) * C7430 + (C146 - C147) * C7424 + C1302 * C7431 +
             C1303 * C7425 + C990 * C7432 + C991 * C7426 + C7533 * C7433 +
             C7534 * C32240) *
                C31869) *
               C31918 * C471 +
           (((C983 - C982) * C7430 + (C985 - C984) * C7424 +
             (C987 - C986) * C7431 + (C989 - C988) * C7425 +
             (C992 - C993) * C7432 + (C994 - C995) * C7426 +
             (C6100 - C6099) * C7433 + (C6102 - C6101) * C32240) *
                C32180 +
            (C1304 * C7430 + C1305 * C7424 + C1306 * C7431 + C1307 * C7425 +
             C7763 * C7432 + C7764 * C7426 + (C6269 - C6270) * C7433 +
             (C6271 - C6272) * C32240) *
                C31869) *
               C31918 * C472) *
              C473 +
          ((((C145 - C144) * C7430 + (C147 - C146) * C7424 + C1304 * C7431 +
             C1305 * C7425 + C1306 * C7432 + C1307 * C7426 + C7763 * C7433 +
             C7764 * C32240) *
                C32180 +
            ((C149 - C148) * C7430 + (C151 - C150) * C7424 + C1308 * C7431 +
             C1309 * C7425 + C1310 * C7432 + C1311 * C7426 +
             (C1000 - C1001) * C7433 + (C1002 - C1003) * C32240) *
                C31869) *
               C31918 * C471 +
           ((C1302 * C7430 + C1303 * C7424 + C990 * C7431 + C991 * C7425 +
             C7533 * C7432 + C7534 * C7426 + (C6270 - C6269) * C7433 +
             (C6272 - C6271) * C32240) *
                C32180 +
            (C827 * C7430 + C828 * C7424 + C840 * C7431 + C841 * C7425 +
             (C1001 - C1000) * C7432 + (C1003 - C1002) * C7426 +
             (C31958 * C973 - C113 * C962) * C7433 +
             (C31958 * C980 - C113 * C974) * C32240) *
                C31869) *
               C31918 * C472) *
              C474)) /
            (p * q * std::sqrt(p + q));
    d2ee[101] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31958 * C122 - C113 * C115) * C2662 +
             (C31958 * C136 - C113 * C123) * C32199 + (C982 - C983) * C2663 +
             (C984 - C985) * C32003) *
                C2658 +
            ((C144 - C145) * C2662 + (C146 - C147) * C32199 + C1302 * C2663 +
             C1303 * C32003) *
                C2659 +
            C2679 * C2660 + C2680 * C32234) *
               C577 +
           (((C113 * C349 - C31958 * C359) * C2662 +
             (C113 * C360 - C31958 * C379) * C32199 + (C1636 - C1637) * C2663 +
             (C1638 - C1639) * C32003) *
                C2658 +
            ((C584 - C585) * C2662 + (C586 - C587) * C32199 +
             (C1462 - C1463) * C2663 + (C1464 - C1465) * C32003) *
                C2659 +
            ((C588 - C589) * C2662 + (C590 - C591) * C32199 +
             (C1470 - C1471) * C2663 + (C1472 - C1473) * C32003) *
                C2660 +
            ((C592 - C593) * C2662 + (C594 - C595) * C32199 +
             (C3139 - C3140) * C2663 + (C3141 - C3142) * C32003) *
                C32234) *
               C578) *
              C471 +
          ((((C983 - C982) * C2662 + (C985 - C984) * C32199 +
             (C987 - C986) * C2663 + (C989 - C988) * C32003) *
                C2658 +
            (C1304 * C2662 + C1305 * C32199 + C1306 * C2663 + C1307 * C32003) *
                C2659 +
            (C1308 * C2662 + C1309 * C32199 + C1310 * C2663 + C1311 * C32003) *
                C2660 +
            (C3007 * C2662 + C3008 * C32199 + (C833 - C834) * C2663 +
             (C835 - C836) * C32003) *
                C32234) *
               C577 +
           (((C1637 - C1636) * C2662 + (C1639 - C1638) * C32199 +
             (C1641 - C1640) * C2663 + (C1643 - C1642) * C32003) *
                C2658 +
            ((C1463 - C1462) * C2662 + (C1465 - C1464) * C32199 +
             (C1467 - C1466) * C2663 + (C1469 - C1468) * C32003) *
                C2659 +
            ((C1471 - C1470) * C2662 + (C1473 - C1472) * C32199 +
             (C1475 - C1474) * C2663 + (C1477 - C1476) * C32003) *
                C2660 +
            ((C3140 - C3139) * C2662 + (C3142 - C3141) * C32199 +
             (C31958 * C1458 - C113 * C1457) * C2663 +
             (C31958 * C1460 - C113 * C1459) * C32003) *
                C32234) *
               C578) *
              C472) *
         C31892) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31958 * C122 - C113 * C115) * C7430 +
             (C31958 * C136 - C113 * C123) * C7424 + (C982 - C983) * C7431 +
             (C984 - C985) * C7425 + C1004 * C7432 + C1005 * C7426 +
             C6097 * C7433 + C6098 * C32240) *
                C32180 +
            ((C144 - C145) * C7430 + (C146 - C147) * C7424 + C1302 * C7431 +
             C1303 * C7425 + C990 * C7432 + C991 * C7426 + C7533 * C7433 +
             C7534 * C32240) *
                C31869) *
               C577 +
           (((C113 * C349 - C31958 * C359) * C7430 +
             (C113 * C360 - C31958 * C379) * C7424 + (C1636 - C1637) * C7431 +
             (C1638 - C1639) * C7425 + (C1640 - C1641) * C7432 +
             (C1642 - C1643) * C7426 + (C6445 - C6446) * C7433 +
             (C6447 - C6448) * C32240) *
                C32180 +
            ((C584 - C585) * C7430 + (C586 - C587) * C7424 +
             (C1462 - C1463) * C7431 + (C1464 - C1465) * C7425 +
             (C1466 - C1467) * C7432 + (C1468 - C1469) * C7426 +
             (C7895 - C7896) * C7433 + (C7897 - C7898) * C32240) *
                C31869) *
               C578) *
              C471 +
          ((((C983 - C982) * C7430 + (C985 - C984) * C7424 +
             (C987 - C986) * C7431 + (C989 - C988) * C7425 +
             (C992 - C993) * C7432 + (C994 - C995) * C7426 +
             (C6100 - C6099) * C7433 + (C6102 - C6101) * C32240) *
                C32180 +
            (C1304 * C7430 + C1305 * C7424 + C1306 * C7431 + C1307 * C7425 +
             C7763 * C7432 + C7764 * C7426 + (C6269 - C6270) * C7433 +
             (C6271 - C6272) * C32240) *
                C31869) *
               C577 +
           (((C1637 - C1636) * C7430 + (C1639 - C1638) * C7424 +
             (C1641 - C1640) * C7431 + (C1643 - C1642) * C7425 +
             (C6446 - C6445) * C7432 + (C6448 - C6447) * C7426 +
             (C6450 - C6449) * C7433 + (C6452 - C6451) * C32240) *
                C32180 +
            ((C1463 - C1462) * C7430 + (C1465 - C1464) * C7424 +
             (C1467 - C1466) * C7431 + (C1469 - C1468) * C7425 +
             (C7896 - C7895) * C7432 + (C7898 - C7897) * C7426 +
             (C31958 * C6355 - C113 * C6354) * C7433 +
             (C31958 * C6357 - C113 * C6356) * C32240) *
                C31869) *
               C578) *
              C472) *
         C31892) /
            (p * q * std::sqrt(p + q));
    d2ee[102] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31958 * C122 - C113 * C115) * C2662 +
            (C31958 * C136 - C113 * C123) * C32199 + (C982 - C983) * C2663 +
            (C984 - C985) * C32003) *
               C2658 +
           ((C144 - C145) * C2662 + (C146 - C147) * C32199 + C1302 * C2663 +
            C1303 * C32003) *
               C2659 +
           C2679 * C2660 + C2680 * C32234) *
              C31918 * C240 +
          (((C983 - C982) * C2662 + (C985 - C984) * C32199 +
            (C987 - C986) * C2663 + (C989 - C988) * C32003) *
               C2658 +
           (C1304 * C2662 + C1305 * C32199 + C1306 * C2663 + C1307 * C32003) *
               C2659 +
           (C1308 * C2662 + C1309 * C32199 + C1310 * C2663 + C1311 * C32003) *
               C2660 +
           ((C488 - C489) * C2662 + (C490 - C491) * C32199 +
            (C833 - C834) * C2663 + (C835 - C836) * C32003) *
               C32234) *
              C31918 * C241 +
          ((C1004 * C2662 + C1005 * C32199 + (C993 - C992) * C2663 +
            (C995 - C994) * C32003) *
               C2658 +
           (C990 * C2662 + C991 * C32199 + (C997 - C996) * C2663 +
            (C999 - C998) * C32003) *
               C2659 +
           (C840 * C2662 + C841 * C32199 + (C1001 - C1000) * C2663 +
            (C1003 - C1002) * C32003) *
               C2660 +
           ((C834 - C833) * C2662 + (C836 - C835) * C32199 +
            (C31958 * C1298 - C113 * C1297) * C2663 +
            (C31958 * C1300 - C113 * C1299) * C32003) *
               C32234) *
              C31918 * C242) *
         C31892) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31958 * C122 - C113 * C115) * C2662 +
            (C31958 * C136 - C113 * C123) * C32199 + (C982 - C983) * C2663 +
            (C984 - C985) * C32003) *
               C2658 +
           ((C144 - C145) * C2662 + (C146 - C147) * C32199 + C1302 * C2663 +
            C1303 * C32003) *
               C2659 +
           C2679 * C2660 + C2680 * C32234) *
              C31918 * C31904 * C110 +
          (((C145 - C144) * C2662 + (C147 - C146) * C32199 + C1304 * C2663 +
            C1305 * C32003) *
               C2658 +
           ((C149 - C148) * C2662 + (C151 - C150) * C32199 + C1308 * C2663 +
            C1309 * C32003) *
               C2659 +
           ((C153 - C152) * C2662 + (C155 - C154) * C32199 +
            (C488 - C489) * C2663 + (C490 - C491) * C32003) *
               C2660 +
           ((C157 - C156) * C2662 + (C159 - C158) * C32199 +
            (C492 - C493) * C2663 + (C494 - C495) * C32003) *
               C32234) *
              C31918 * C31904 * C111 +
          (C2679 * C2658 + C2680 * C2659 +
           (C168 * C2662 + C169 * C32199 + (C493 - C492) * C2663 +
            (C495 - C494) * C32003) *
               C2660 +
           ((C161 - C160) * C2662 + (C163 - C162) * C32199 +
            (C31958 * C476 - C113 * C475) * C2663 +
            (C31958 * C478 - C113 * C477) * C32003) *
               C32234) *
              C31918 * C31904 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31958 * C122 - C113 * C115) * C2662 +
            (C31958 * C136 - C113 * C123) * C32199 + (C982 - C983) * C2663 +
            (C984 - C985) * C32003) *
               C2658 +
           ((C144 - C145) * C2662 + (C146 - C147) * C32199 + C1302 * C2663 +
            C1303 * C32003) *
               C2659 +
           C2679 * C2660 + C2680 * C32234) *
              C346 +
          (((C113 * C349 - C31958 * C359) * C2662 +
            (C113 * C360 - C31958 * C379) * C32199 + (C1636 - C1637) * C2663 +
            (C1638 - C1639) * C32003) *
               C2658 +
           ((C584 - C585) * C2662 + (C586 - C587) * C32199 +
            (C1462 - C1463) * C2663 + (C1464 - C1465) * C32003) *
               C2659 +
           ((C588 - C589) * C2662 + (C590 - C591) * C32199 +
            (C1470 - C1471) * C2663 + (C1472 - C1473) * C32003) *
               C2660 +
           ((C592 - C593) * C2662 + (C594 - C595) * C32199 +
            (C113 * C684 - C31958 * C692) * C2663 +
            (C113 * C693 - C31958 * C699) * C32003) *
               C32234) *
              C347 +
          (((C31958 * C369 - C113 * C354) * C2662 +
            (C31958 * C384 - C113 * C370) * C32199 +
            (C31958 * C1130 - C113 * C1118) * C2663 +
            (C31958 * C1145 - C113 * C1131) * C32003) *
               C2658 +
           ((C31958 * C371 - C113 * C355) * C2662 +
            (C31958 * C385 - C113 * C372) * C32199 +
            (C31958 * C1134 - C113 * C1120) * C2663 +
            (C31958 * C1147 - C113 * C1135) * C32003) *
               C2659 +
           ((C31958 * C373 - C113 * C356) * C2662 +
            (C31958 * C386 - C113 * C374) * C32199 +
            (C31958 * C1138 - C113 * C1122) * C2663 +
            (C31958 * C1149 - C113 * C1139) * C32003) *
               C2660 +
           ((C31958 * C375 - C113 * C357) * C2662 +
            (C31958 * C387 - C113 * C376) * C32199 +
            (C31958 * C2199 - C113 * C2198) * C2663 +
            (C31958 * C2201 - C113 * C2200) * C32003) *
               C32234) *
              C348) *
         C31904 * C31892) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31958 * C122 - C113 * C115) * C7430 +
            (C31958 * C136 - C113 * C123) * C7424 + (C982 - C983) * C7431 +
            (C984 - C985) * C7425 + C1004 * C7432 + C1005 * C7426 +
            C6097 * C7433 + C6098 * C32240) *
               C32180 +
           ((C144 - C145) * C7430 + (C146 - C147) * C7424 + C1302 * C7431 +
            C1303 * C7425 + C990 * C7432 + C991 * C7426 +
            (C997 - C996) * C7433 + (C999 - C998) * C32240) *
               C31869) *
              C31918 * C31904 * C110 +
          (((C145 - C144) * C7430 + (C147 - C146) * C7424 + C1304 * C7431 +
            C1305 * C7425 + C1306 * C7432 + C1307 * C7426 +
            (C996 - C997) * C7433 + (C998 - C999) * C32240) *
               C32180 +
           ((C149 - C148) * C7430 + (C151 - C150) * C7424 + C1308 * C7431 +
            C1309 * C7425 + C1310 * C7432 + C1311 * C7426 +
            (C1000 - C1001) * C7433 + (C1002 - C1003) * C32240) *
               C31869) *
              C31918 * C31904 * C111 +
          ((C164 * C7430 + C165 * C7424 + C827 * C7431 + C828 * C7425 +
            C840 * C7432 + C841 * C7426 + (C1001 - C1000) * C7433 +
            (C1003 - C1002) * C32240) *
               C32180 +
           (C166 * C7430 + C167 * C7424 + C2671 * C7431 + C2672 * C7425 +
            (C834 - C833) * C7432 + (C836 - C835) * C7426 +
            (C31958 * C1298 - C113 * C1297) * C7433 +
            (C31958 * C1300 - C113 * C1299) * C32240) *
               C31869) *
              C31918 * C31904 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31958 * C122 - C113 * C115) * C7430 +
            (C31958 * C136 - C113 * C123) * C7424 + (C982 - C983) * C7431 +
            (C984 - C985) * C7425 + C1004 * C7432 + C1005 * C7426 +
            C6097 * C7433 + C6098 * C32240) *
               C32180 +
           ((C144 - C145) * C7430 + (C146 - C147) * C7424 + C1302 * C7431 +
            C1303 * C7425 + C990 * C7432 + C991 * C7426 + C7533 * C7433 +
            C7534 * C32240) *
               C31869) *
              C31918 * C240 +
          (((C983 - C982) * C7430 + (C985 - C984) * C7424 +
            (C987 - C986) * C7431 + (C989 - C988) * C7425 +
            (C992 - C993) * C7432 + (C994 - C995) * C7426 +
            (C6100 - C6099) * C7433 + (C6102 - C6101) * C32240) *
               C32180 +
           (C1304 * C7430 + C1305 * C7424 + C1306 * C7431 + C1307 * C7425 +
            (C996 - C997) * C7432 + (C998 - C999) * C7426 +
            (C6269 - C6270) * C7433 + (C6271 - C6272) * C32240) *
               C31869) *
              C31918 * C241 +
          ((C1004 * C7430 + C1005 * C7424 + C6097 * C7431 + C6098 * C7425 +
            C6107 * C7432 + C6108 * C7426 + (C6104 - C6103) * C7433 +
            (C6106 - C6105) * C32240) *
               C32180 +
           (C990 * C7430 + C991 * C7424 + C7533 * C7431 + C7534 * C7425 +
            (C6270 - C6269) * C7432 + (C6272 - C6271) * C7426 +
            (C31958 * C6265 - C113 * C6264) * C7433 +
            (C31958 * C6267 - C113 * C6266) * C32240) *
               C31869) *
              C31918 * C242) *
         C31892) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31958 * C122 - C113 * C115) * C7430 +
            (C31958 * C136 - C113 * C123) * C7424 + (C982 - C983) * C7431 +
            (C984 - C985) * C7425 + C1004 * C7432 + C1005 * C7426 +
            C6097 * C7433 + C6098 * C32240) *
               C32180 +
           ((C144 - C145) * C7430 + (C146 - C147) * C7424 + C1302 * C7431 +
            C1303 * C7425 + C990 * C7432 + C991 * C7426 + C7533 * C7433 +
            C7534 * C32240) *
               C31869) *
              C346 +
          (((C113 * C349 - C31958 * C359) * C7430 +
            (C113 * C360 - C31958 * C379) * C7424 + (C1636 - C1637) * C7431 +
            (C1638 - C1639) * C7425 + (C1640 - C1641) * C7432 +
            (C1642 - C1643) * C7426 + (C6445 - C6446) * C7433 +
            (C6447 - C6448) * C32240) *
               C32180 +
           ((C584 - C585) * C7430 + (C586 - C587) * C7424 +
            (C1462 - C1463) * C7431 + (C1464 - C1465) * C7425 +
            (C1466 - C1467) * C7432 + (C1468 - C1469) * C7426 +
            (C113 * C1624 - C31958 * C1628) * C7433 +
            (C113 * C1629 - C31958 * C1633) * C32240) *
               C31869) *
              C347 +
          (((C31958 * C369 - C113 * C354) * C7430 +
            (C31958 * C384 - C113 * C370) * C7424 +
            (C31958 * C1130 - C113 * C1118) * C7431 +
            (C31958 * C1145 - C113 * C1131) * C7425 +
            (C31958 * C1132 - C113 * C1119) * C7432 +
            (C31958 * C1146 - C113 * C1133) * C7426 +
            (C31958 * C6175 - C113 * C6171) * C7433 +
            (C31958 * C6180 - C113 * C6176) * C32240) *
               C32180 +
           ((C31958 * C371 - C113 * C355) * C7430 +
            (C31958 * C385 - C113 * C372) * C7424 +
            (C31958 * C1134 - C113 * C1120) * C7431 +
            (C31958 * C1147 - C113 * C1135) * C7425 +
            (C31958 * C1136 - C113 * C1121) * C7432 +
            (C31958 * C1148 - C113 * C1137) * C7426 +
            (C31958 * C6987 - C113 * C6986) * C7433 +
            (C31958 * C6989 - C113 * C6988) * C32240) *
               C31869) *
              C348) *
         C31904 * C31892) /
            (p * q * std::sqrt(p + q));
    d2ee[103] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31958 * C122 - C113 * C115) * C2662 +
             (C31958 * C136 - C113 * C123) * C32199 + (C982 - C983) * C2663 +
             (C984 - C985) * C32003) *
                C2658 +
            ((C144 - C145) * C2662 + (C146 - C147) * C32199 + C1302 * C2663 +
             C1303 * C32003) *
                C2659 +
            C2679 * C2660 + C2680 * C32234) *
               C577 +
           (((C113 * C349 - C31958 * C359) * C2662 +
             (C113 * C360 - C31958 * C379) * C32199 + (C1636 - C1637) * C2663 +
             (C1638 - C1639) * C32003) *
                C2658 +
            ((C584 - C585) * C2662 + (C586 - C587) * C32199 +
             (C1462 - C1463) * C2663 + (C1464 - C1465) * C32003) *
                C2659 +
            ((C588 - C589) * C2662 + (C590 - C591) * C32199 +
             (C1470 - C1471) * C2663 + (C1472 - C1473) * C32003) *
                C2660 +
            ((C592 - C593) * C2662 + (C594 - C595) * C32199 +
             (C3139 - C3140) * C2663 + (C3141 - C3142) * C32003) *
                C32234) *
               C578) *
              C31904 * C473 +
          ((((C145 - C144) * C2662 + (C147 - C146) * C32199 + C1304 * C2663 +
             C1305 * C32003) *
                C2658 +
            ((C149 - C148) * C2662 + (C151 - C150) * C32199 + C1308 * C2663 +
             C1309 * C32003) *
                C2659 +
            ((C153 - C152) * C2662 + (C155 - C154) * C32199 + C3007 * C2663 +
             C3008 * C32003) *
                C2660 +
            ((C157 - C156) * C2662 + (C159 - C158) * C32199 +
             (C492 - C493) * C2663 + (C494 - C495) * C32003) *
                C32234) *
               C577 +
           (((C585 - C584) * C2662 + (C587 - C586) * C32199 +
             (C1463 - C1462) * C2663 + (C1465 - C1464) * C32003) *
                C2658 +
            ((C589 - C588) * C2662 + (C591 - C590) * C32199 +
             (C1471 - C1470) * C2663 + (C1473 - C1472) * C32003) *
                C2659 +
            ((C593 - C592) * C2662 + (C595 - C594) * C32199 +
             (C3140 - C3139) * C2663 + (C3142 - C3141) * C32003) *
                C2660 +
            ((C597 - C596) * C2662 + (C599 - C598) * C32199 +
             (C31958 * C694 - C113 * C685) * C2663 +
             (C31958 * C700 - C113 * C695) * C32003) *
                C32234) *
               C578) *
              C31904 * C474)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31958 * C122 - C113 * C115) * C7430 +
             (C31958 * C136 - C113 * C123) * C7424 + (C982 - C983) * C7431 +
             (C984 - C985) * C7425 + C1004 * C7432 + C1005 * C7426 +
             C6097 * C7433 + C6098 * C32240) *
                C32180 +
            ((C144 - C145) * C7430 + (C146 - C147) * C7424 + C1302 * C7431 +
             C1303 * C7425 + C990 * C7432 + C991 * C7426 + C7533 * C7433 +
             C7534 * C32240) *
                C31869) *
               C577 +
           (((C113 * C349 - C31958 * C359) * C7430 +
             (C113 * C360 - C31958 * C379) * C7424 + (C1636 - C1637) * C7431 +
             (C1638 - C1639) * C7425 + (C1640 - C1641) * C7432 +
             (C1642 - C1643) * C7426 + (C6445 - C6446) * C7433 +
             (C6447 - C6448) * C32240) *
                C32180 +
            ((C584 - C585) * C7430 + (C586 - C587) * C7424 +
             (C1462 - C1463) * C7431 + (C1464 - C1465) * C7425 +
             (C1466 - C1467) * C7432 + (C1468 - C1469) * C7426 +
             (C7895 - C7896) * C7433 + (C7897 - C7898) * C32240) *
                C31869) *
               C578) *
              C31904 * C473 +
          ((((C145 - C144) * C7430 + (C147 - C146) * C7424 + C1304 * C7431 +
             C1305 * C7425 + C1306 * C7432 + C1307 * C7426 + C7763 * C7433 +
             C7764 * C32240) *
                C32180 +
            ((C149 - C148) * C7430 + (C151 - C150) * C7424 + C1308 * C7431 +
             C1309 * C7425 + C1310 * C7432 + C1311 * C7426 +
             (C1000 - C1001) * C7433 + (C1002 - C1003) * C32240) *
                C31869) *
               C577 +
           (((C585 - C584) * C7430 + (C587 - C586) * C7424 +
             (C1463 - C1462) * C7431 + (C1465 - C1464) * C7425 +
             (C1467 - C1466) * C7432 + (C1469 - C1468) * C7426 +
             (C7896 - C7895) * C7433 + (C7898 - C7897) * C32240) *
                C32180 +
            ((C589 - C588) * C7430 + (C591 - C590) * C7424 +
             (C1471 - C1470) * C7431 + (C1473 - C1472) * C7425 +
             (C1475 - C1474) * C7432 + (C1477 - C1476) * C7426 +
             (C31958 * C1630 - C113 * C1625) * C7433 +
             (C31958 * C1634 - C113 * C1631) * C32240) *
                C31869) *
               C578) *
              C31904 * C474)) /
            (p * q * std::sqrt(p + q));
    d2ee[104] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C31958 * C122 - C113 * C115) * C2662 +
            (C31958 * C136 - C113 * C123) * C32199 + (C982 - C983) * C2663 +
            (C984 - C985) * C32003) *
               C2658 +
           ((C144 - C145) * C2662 + (C146 - C147) * C32199 + C1302 * C2663 +
            C1303 * C32003) *
               C2659 +
           C2679 * C2660 + C2680 * C32234) *
              C31918 * C31904 * C110 +
          (((C145 - C144) * C2662 + (C147 - C146) * C32199 + C1304 * C2663 +
            C1305 * C32003) *
               C2658 +
           ((C149 - C148) * C2662 + (C151 - C150) * C32199 + C1308 * C2663 +
            C1309 * C32003) *
               C2659 +
           ((C153 - C152) * C2662 + (C155 - C154) * C32199 +
            (C488 - C489) * C2663 + (C490 - C491) * C32003) *
               C2660 +
           ((C157 - C156) * C2662 + (C159 - C158) * C32199 +
            (C492 - C493) * C2663 + (C494 - C495) * C32003) *
               C32234) *
              C31918 * C31904 * C111 +
          (C2679 * C2658 + C2680 * C2659 +
           (C168 * C2662 + C169 * C32199 + (C493 - C492) * C2663 +
            (C495 - C494) * C32003) *
               C2660 +
           ((C161 - C160) * C2662 + (C163 - C162) * C32199 +
            (C31958 * C476 - C113 * C475) * C2663 +
            (C31958 * C478 - C113 * C477) * C32003) *
               C32234) *
              C31918 * C31904 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C31958 * C122 - C113 * C115) * C2662 +
            (C31958 * C136 - C113 * C123) * C32199 + (C982 - C983) * C2663 +
            (C984 - C985) * C32003) *
               C2658 +
           ((C144 - C145) * C2662 + (C146 - C147) * C32199 + C1302 * C2663 +
            C1303 * C32003) *
               C2659 +
           C2679 * C2660 + C2680 * C32234) *
              C31918 * C240 +
          (((C983 - C982) * C2662 + (C985 - C984) * C32199 +
            (C987 - C986) * C2663 + (C989 - C988) * C32003) *
               C2658 +
           (C1304 * C2662 + C1305 * C32199 + C1306 * C2663 + C1307 * C32003) *
               C2659 +
           (C1308 * C2662 + C1309 * C32199 + C1310 * C2663 + C1311 * C32003) *
               C2660 +
           ((C488 - C489) * C2662 + (C490 - C491) * C32199 +
            (C833 - C834) * C2663 + (C835 - C836) * C32003) *
               C32234) *
              C31918 * C241 +
          ((C1004 * C2662 + C1005 * C32199 + (C993 - C992) * C2663 +
            (C995 - C994) * C32003) *
               C2658 +
           (C990 * C2662 + C991 * C32199 + (C997 - C996) * C2663 +
            (C999 - C998) * C32003) *
               C2659 +
           (C840 * C2662 + C841 * C32199 + (C1001 - C1000) * C2663 +
            (C1003 - C1002) * C32003) *
               C2660 +
           ((C834 - C833) * C2662 + (C836 - C835) * C32199 +
            (C31958 * C1298 - C113 * C1297) * C2663 +
            (C31958 * C1300 - C113 * C1299) * C32003) *
               C32234) *
              C31918 * C242) *
         C31892) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C31958 * C122 - C113 * C115) * C7430 +
            (C31958 * C136 - C113 * C123) * C7424 + (C982 - C983) * C7431 +
            (C984 - C985) * C7425 + C1004 * C7432 + C1005 * C7426 +
            C6097 * C7433 + C6098 * C32240) *
               C32180 +
           ((C144 - C145) * C7430 + (C146 - C147) * C7424 + C1302 * C7431 +
            C1303 * C7425 + C990 * C7432 + C991 * C7426 +
            (C997 - C996) * C7433 + (C999 - C998) * C32240) *
               C31869) *
              C31918 * C31904 * C110 +
          (((C145 - C144) * C7430 + (C147 - C146) * C7424 + C1304 * C7431 +
            C1305 * C7425 + C1306 * C7432 + C1307 * C7426 +
            (C996 - C997) * C7433 + (C998 - C999) * C32240) *
               C32180 +
           ((C149 - C148) * C7430 + (C151 - C150) * C7424 + C1308 * C7431 +
            C1309 * C7425 + C1310 * C7432 + C1311 * C7426 +
            (C1000 - C1001) * C7433 + (C1002 - C1003) * C32240) *
               C31869) *
              C31918 * C31904 * C111 +
          ((C164 * C7430 + C165 * C7424 + C827 * C7431 + C828 * C7425 +
            C840 * C7432 + C841 * C7426 + (C1001 - C1000) * C7433 +
            (C1003 - C1002) * C32240) *
               C32180 +
           (C166 * C7430 + C167 * C7424 + C2671 * C7431 + C2672 * C7425 +
            (C834 - C833) * C7432 + (C836 - C835) * C7426 +
            (C31958 * C1298 - C113 * C1297) * C7433 +
            (C31958 * C1300 - C113 * C1299) * C32240) *
               C31869) *
              C31918 * C31904 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C31958 * C122 - C113 * C115) * C7430 +
            (C31958 * C136 - C113 * C123) * C7424 + (C982 - C983) * C7431 +
            (C984 - C985) * C7425 + C1004 * C7432 + C1005 * C7426 +
            C6097 * C7433 + C6098 * C32240) *
               C32180 +
           ((C144 - C145) * C7430 + (C146 - C147) * C7424 + C1302 * C7431 +
            C1303 * C7425 + C990 * C7432 + C991 * C7426 + C7533 * C7433 +
            C7534 * C32240) *
               C31869) *
              C31918 * C240 +
          (((C983 - C982) * C7430 + (C985 - C984) * C7424 +
            (C987 - C986) * C7431 + (C989 - C988) * C7425 +
            (C992 - C993) * C7432 + (C994 - C995) * C7426 +
            (C6100 - C6099) * C7433 + (C6102 - C6101) * C32240) *
               C32180 +
           (C1304 * C7430 + C1305 * C7424 + C1306 * C7431 + C1307 * C7425 +
            (C996 - C997) * C7432 + (C998 - C999) * C7426 +
            (C6269 - C6270) * C7433 + (C6271 - C6272) * C32240) *
               C31869) *
              C31918 * C241 +
          ((C1004 * C7430 + C1005 * C7424 + C6097 * C7431 + C6098 * C7425 +
            C6107 * C7432 + C6108 * C7426 + (C6104 - C6103) * C7433 +
            (C6106 - C6105) * C32240) *
               C32180 +
           (C990 * C7430 + C991 * C7424 + C7533 * C7431 + C7534 * C7425 +
            (C6270 - C6269) * C7432 + (C6272 - C6271) * C7426 +
            (C31958 * C6265 - C113 * C6264) * C7433 +
            (C31958 * C6267 - C113 * C6266) * C32240) *
               C31869) *
              C31918 * C242) *
         C31892) /
            (p * q * std::sqrt(p + q));
    d2ee[105] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C32200 * C122 - C3372 * C115 + C32045 * C359 - C3373 * C349) *
                 C2662 +
             (C32200 * C136 - C3372 * C123 + C32045 * C379 - C3373 * C360) *
                 C32199 +
             (C4364 - C4365 + C4366 - C4367) * C2663 +
             (C4368 - C4369 + C4370 - C4371) * C32003) *
                C814 +
            ((C3375 - C3376 + C3377 - C3378) * C2662 +
             (C3379 - C3380 + C3381 - C3382) * C32199 + C4748 * C2663 +
             C4749 * C32003) *
                C815 +
            C4217 * C32219) *
               C31918 * C471 +
           (((C4365 - C4364 + C4367 - C4366) * C2662 +
             (C4369 - C4368 + C4371 - C4370) * C32199 +
             (C4372 - C4373 + C4374 - C4375) * C2663 +
             (C4376 - C4377 + C4378 - C4379) * C32003) *
                C814 +
            (C4750 * C2662 + C4751 * C32199 +
             (C4380 - C4381 + C4382 - C4383) * C2663 +
             (C4384 - C4385 + C4386 - C4387) * C32003) *
                C815 +
            (C4752 * C2662 + C4753 * C32199 +
             (C4388 - C4389 + C4390 - C4391) * C2663 +
             (C4392 - C4393 + C4394 - C4395) * C32003) *
                C32219) *
               C31918 * C472) *
              C473 +
          ((((C3376 - C3375 + C3378 - C3377) * C2662 +
             (C3380 - C3379 + C3382 - C3381) * C32199 + C4750 * C2663 +
             C4751 * C32003) *
                C814 +
            ((C3384 - C3383 + C3386 - C3385) * C2662 +
             (C3388 - C3387 + C3390 - C3389) * C32199 + C4752 * C2663 +
             C4753 * C32003) *
                C815 +
            ((C3392 - C3391 + C3394 - C3393) * C2662 +
             (C3396 - C3395 + C3398 - C3397) * C32199 +
             (C3767 - C3768 + C3769 - C3770) * C2663 +
             (C3771 - C3772 + C3773 - C3774) * C32003) *
                C32219) *
               C31918 * C471 +
           ((C4748 * C2662 + C4749 * C32199 +
             (C4381 - C4380 + C4383 - C4382) * C2663 +
             (C4385 - C4384 + C4387 - C4386) * C32003) *
                C814 +
            (C4212 * C2662 + C4213 * C32199 +
             (C4389 - C4388 + C4391 - C4390) * C2663 +
             (C4393 - C4392 + C4395 - C4394) * C32003) *
                C815 +
            ((C3768 - C3767 + C3770 - C3769) * C2662 +
             (C3772 - C3771 + C3774 - C3773) * C32199 +
             (C32200 * C270 - C3372 * C252 + C32045 * C1458 - C3373 * C1457) *
                 C2663 +
             (C32200 * C282 - C3372 * C271 + C32045 * C1460 - C3373 * C1459) *
                 C32003) *
                C32219) *
               C31918 * C472) *
              C474)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C32200 * C122 - C3372 * C115 + C32045 * C359 - C3373 * C349) *
                C7430 +
            (C32200 * C136 - C3372 * C123 + C32045 * C379 - C3373 * C360) *
                C7424 +
            (C4364 - C4365 + C4366 - C4367) * C7431 +
            (C4368 - C4369 + C4370 - C4371) * C7425 + C8345 * C7432 +
            C8346 * C7426 + C9307 * C7433 + C9308 * C32240) *
               C31859 * C31918 * C471 +
           ((C4365 - C4364 + C4367 - C4366) * C7430 +
            (C4369 - C4368 + C4371 - C4370) * C7424 +
            (C4372 - C4373 + C4374 - C4375) * C7431 +
            (C4376 - C4377 + C4378 - C4379) * C7425 +
            (C8329 - C8330 + C8331 - C8332) * C7432 +
            (C8333 - C8334 + C8335 - C8336) * C7426 +
            (C9299 - C9300 + C9301 - C9302) * C7433 +
            (C9303 - C9304 + C9305 - C9306) * C32240) *
               C31859 * C31918 * C472) *
              C473 +
          (((C3376 - C3375 + C3378 - C3377) * C7430 +
            (C3380 - C3379 + C3382 - C3381) * C7424 + C4750 * C7431 +
            C4751 * C7425 + C8693 * C7432 + C8694 * C7426 +
            (C8337 - C8338 + C8339 - C8340) * C7433 +
            (C8341 - C8342 + C8343 - C8344) * C32240) *
               C31859 * C31918 * C471 +
           (C4748 * C7430 + C4749 * C7424 + C8347 * C7431 + C8348 * C7425 +
            (C8338 - C8337 + C8340 - C8339) * C7432 +
            (C8342 - C8341 + C8344 - C8343) * C7426 +
            (C32200 * C971 - C3372 * C961 + C32045 * C6355 - C3373 * C6354) *
                C7433 +
            (C32200 * C979 - C3372 * C972 + C32045 * C6357 - C3373 * C6356) *
                C32240) *
               C31859 * C31918 * C472) *
              C474)) /
            (p * q * std::sqrt(p + q));
    d2ee[106] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C32200 * C122 - C3372 * C115 + C32045 * C359 - C3373 * C349) *
                 C2662 +
             (C32200 * C136 - C3372 * C123 + C32045 * C379 - C3373 * C360) *
                 C32199 +
             (C4364 - C4365 + C4366 - C4367) * C2663 +
             (C4368 - C4369 + C4370 - C4371) * C32003) *
                C814 +
            ((C3375 - C3376 + C3377 - C3378) * C2662 +
             (C3379 - C3380 + C3381 - C3382) * C32199 + C4748 * C2663 +
             C4749 * C32003) *
                C815 +
            C4217 * C32219) *
               C577 +
           (((C3372 * C349 - C32200 * C359 + C3373 * C354 - C32045 * C369) *
                 C2662 +
             (C3372 * C360 - C32200 * C379 + C3373 * C370 - C32045 * C384) *
                 C32199 +
             (C5158 - C5159 + C5160 - C5161) * C2663 +
             (C5162 - C5163 + C5164 - C5165) * C32003) *
                C814 +
            ((C3905 - C3906 + C3907 - C3908) * C2662 +
             (C3909 - C3910 + C3911 - C3912) * C32199 +
             (C4948 - C4949 + C4950 - C4951) * C2663 +
             (C4952 - C4953 + C4954 - C4955) * C32003) *
                C815 +
            ((C3913 - C3914 + C3915 - C3916) * C2662 +
             (C3917 - C3918 + C3919 - C3920) * C32199 +
             (C4956 - C4957 + C4958 - C4959) * C2663 +
             (C4960 - C4961 + C4962 - C4963) * C32003) *
                C32219) *
               C578) *
              C471 +
          ((((C4365 - C4364 + C4367 - C4366) * C2662 +
             (C4369 - C4368 + C4371 - C4370) * C32199 +
             (C4372 - C4373 + C4374 - C4375) * C2663 +
             (C4376 - C4377 + C4378 - C4379) * C32003) *
                C814 +
            (C4750 * C2662 + C4751 * C32199 +
             (C4380 - C4381 + C4382 - C4383) * C2663 +
             (C4384 - C4385 + C4386 - C4387) * C32003) *
                C815 +
            (C4752 * C2662 + C4753 * C32199 +
             (C4388 - C4389 + C4390 - C4391) * C2663 +
             (C4392 - C4393 + C4394 - C4395) * C32003) *
                C32219) *
               C577 +
           (((C5159 - C5158 + C5161 - C5160) * C2662 +
             (C5163 - C5162 + C5165 - C5164) * C32199 +
             (C32200 * C1124 - C3372 * C1115 + C32045 * C1132 - C3373 * C1119) *
                 C2663 +
             (C32200 * C1142 - C3372 * C1125 + C32045 * C1146 - C3373 * C1133) *
                 C32003) *
                C814 +
            ((C4949 - C4948 + C4951 - C4950) * C2662 +
             (C4953 - C4952 + C4955 - C4954) * C32199 +
             (C32200 * C1126 - C3372 * C1116 + C32045 * C1136 - C3373 * C1121) *
                 C2663 +
             (C32200 * C1143 - C3372 * C1127 + C32045 * C1148 - C3373 * C1137) *
                 C32003) *
                C815 +
            ((C4957 - C4956 + C4959 - C4958) * C2662 +
             (C4961 - C4960 + C4963 - C4962) * C32199 +
             (C32200 * C1128 - C3372 * C1117 + C32045 * C1140 - C3373 * C1123) *
                 C2663 +
             (C32200 * C1144 - C3372 * C1129 + C32045 * C1150 - C3373 * C1141) *
                 C32003) *
                C32219) *
               C578) *
              C472) *
         C31892) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C32200 * C122 - C3372 * C115 + C32045 * C359 - C3373 * C349) *
                C7430 +
            (C32200 * C136 - C3372 * C123 + C32045 * C379 - C3373 * C360) *
                C7424 +
            (C4364 - C4365 + C4366 - C4367) * C7431 +
            (C4368 - C4369 + C4370 - C4371) * C7425 + C8345 * C7432 +
            C8346 * C7426 + C9307 * C7433 + C9308 * C32240) *
               C31859 * C577 +
           ((C3372 * C349 - C32200 * C359 + C3373 * C354 - C32045 * C369) *
                C7430 +
            (C3372 * C360 - C32200 * C379 + C3373 * C370 - C32045 * C384) *
                C7424 +
            (C5158 - C5159 + C5160 - C5161) * C7431 +
            (C5162 - C5163 + C5164 - C5165) * C7425 +
            (C9091 - C9092 + C9093 - C9094) * C7432 +
            (C9095 - C9096 + C9097 - C9098) * C7426 +
            (C9797 - C9798 + C9799 - C9800) * C7433 +
            (C9801 - C9802 + C9803 - C9804) * C32240) *
               C31859 * C578) *
              C471 +
          (((C4365 - C4364 + C4367 - C4366) * C7430 +
            (C4369 - C4368 + C4371 - C4370) * C7424 +
            (C4372 - C4373 + C4374 - C4375) * C7431 +
            (C4376 - C4377 + C4378 - C4379) * C7425 +
            (C8329 - C8330 + C8331 - C8332) * C7432 +
            (C8333 - C8334 + C8335 - C8336) * C7426 +
            (C9299 - C9300 + C9301 - C9302) * C7433 +
            (C9303 - C9304 + C9305 - C9306) * C32240) *
               C31859 * C577 +
           ((C5159 - C5158 + C5161 - C5160) * C7430 +
            (C5163 - C5162 + C5165 - C5164) * C7424 +
            (C9092 - C9091 + C9094 - C9093) * C7431 +
            (C9096 - C9095 + C9098 - C9097) * C7425 +
            (C9798 - C9797 + C9800 - C9799) * C7432 +
            (C9802 - C9801 + C9804 - C9803) * C7426 +
            (C32200 * C6173 - C3372 * C6170 + C32045 * C6177 - C3373 * C6172) *
                C7433 +
            (C32200 * C6179 - C3372 * C6174 + C32045 * C6181 - C3373 * C6178) *
                C32240) *
               C31859 * C578) *
              C472) *
         C31892) /
            (p * q * std::sqrt(p + q));
    d2ee[107] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C32200 * C122 - C3372 * C115 + C32045 * C359 - C3373 * C349) *
                C2662 +
            (C32200 * C136 - C3372 * C123 + C32045 * C379 - C3373 * C360) *
                C32199 +
            (C4364 - C4365 + C4366 - C4367) * C2663 +
            (C4368 - C4369 + C4370 - C4371) * C32003) *
               C814 +
           ((C3375 - C3376 + C3377 - C3378) * C2662 +
            (C3379 - C3380 + C3381 - C3382) * C32199 +
            (C3752 - C3751 + C3754 - C3753) * C2663 +
            (C3756 - C3755 + C3758 - C3757) * C32003) *
               C815 +
           C4217 * C32219) *
              C31918 * C240 +
          (((C4365 - C4364 + C4367 - C4366) * C2662 +
            (C4369 - C4368 + C4371 - C4370) * C32199 +
            (C4372 - C4373 + C4374 - C4375) * C2663 +
            (C4376 - C4377 + C4378 - C4379) * C32003) *
               C814 +
           ((C3751 - C3752 + C3753 - C3754) * C2662 +
            (C3755 - C3756 + C3757 - C3758) * C32199 +
            (C4380 - C4381 + C4382 - C4383) * C2663 +
            (C4384 - C4385 + C4386 - C4387) * C32003) *
               C815 +
           ((C3759 - C3760 + C3761 - C3762) * C2662 +
            (C3763 - C3764 + C3765 - C3766) * C32199 +
            (C4388 - C4389 + C4390 - C4391) * C2663 +
            (C4392 - C4393 + C4394 - C4395) * C32003) *
               C32219) *
              C31918 * C241 +
          (((C4373 - C4372 + C4375 - C4374) * C2662 +
            (C4377 - C4376 + C4379 - C4378) * C32199 +
            (C32200 * C963 - C3372 * C957 + C32045 * C1626 - C3373 * C1623) *
                C2663 +
            (C32200 * C975 - C3372 * C964 + C32045 * C1632 - C3373 * C1627) *
                C32003) *
               C814 +
           ((C4381 - C4380 + C4383 - C4382) * C2662 +
            (C4385 - C4384 + C4387 - C4386) * C32199 +
            (C32200 * C965 - C3372 * C958 + C32045 * C1628 - C3373 * C1624) *
                C2663 +
            (C32200 * C976 - C3372 * C966 + C32045 * C1633 - C3373 * C1629) *
                C32003) *
               C815 +
           ((C4389 - C4388 + C4391 - C4390) * C2662 +
            (C4393 - C4392 + C4395 - C4394) * C32199 +
            (C32200 * C967 - C3372 * C959 + C32045 * C1630 - C3373 * C1625) *
                C2663 +
            (C32200 * C977 - C3372 * C968 + C32045 * C1634 - C3373 * C1631) *
                C32003) *
               C32219) *
              C31918 * C242) *
         C31892) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C32200 * C122 - C3372 * C115 + C32045 * C359 - C3373 * C349) *
                C2662 +
            (C32200 * C136 - C3372 * C123 + C32045 * C379 - C3373 * C360) *
                C32199 +
            (C32200 * C254 - C3372 * C244 + C32045 * C686 - C3373 * C681) *
                C2663 +
            (C32200 * C274 - C3372 * C255 + C32045 * C696 - C3373 * C687) *
                C32003) *
               C814 +
           ((C3375 - C3376 + C3377 - C3378) * C2662 +
            (C3379 - C3380 + C3381 - C3382) * C32199 +
            (C3752 - C3751 + C3754 - C3753) * C2663 +
            (C3756 - C3755 + C3758 - C3757) * C32003) *
               C815 +
           C4217 * C32219) *
              C31918 * C31904 * C110 +
          (((C3376 - C3375 + C3378 - C3377) * C2662 +
            (C3380 - C3379 + C3382 - C3381) * C32199 +
            (C3751 - C3752 + C3753 - C3754) * C2663 +
            (C3755 - C3756 + C3757 - C3758) * C32003) *
               C814 +
           ((C3384 - C3383 + C3386 - C3385) * C2662 +
            (C3388 - C3387 + C3390 - C3389) * C32199 +
            (C3759 - C3760 + C3761 - C3762) * C2663 +
            (C3763 - C3764 + C3765 - C3766) * C32003) *
               C815 +
           ((C3392 - C3391 + C3394 - C3393) * C2662 +
            (C3396 - C3395 + C3398 - C3397) * C32199 +
            (C3767 - C3768 + C3769 - C3770) * C2663 +
            (C3771 - C3772 + C3773 - C3774) * C32003) *
               C32219) *
              C31918 * C31904 * C111 +
          (C4217 * C814 +
           (C3417 * C2662 + C3418 * C32199 +
            (C3768 - C3767 + C3770 - C3769) * C2663 +
            (C3772 - C3771 + C3774 - C3773) * C32003) *
               C815 +
           ((C3400 - C3399 + C3402 - C3401) * C2662 +
            (C3404 - C3403 + C3406 - C3405) * C32199 +
            (C32200 * C262 - C3372 * C248 + C32045 * C694 - C3373 * C685) *
                C2663 +
            (C32200 * C278 - C3372 * C263 + C32045 * C700 - C3373 * C695) *
                C32003) *
               C32219) *
              C31918 * C31904 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C32200 * C122 - C3372 * C115 + C32045 * C359 - C3373 * C349) *
                C2662 +
            (C32200 * C136 - C3372 * C123 + C32045 * C379 - C3373 * C360) *
                C32199 +
            (C4364 - C4365 + C4366 - C4367) * C2663 +
            (C4368 - C4369 + C4370 - C4371) * C32003) *
               C814 +
           ((C3375 - C3376 + C3377 - C3378) * C2662 +
            (C3379 - C3380 + C3381 - C3382) * C32199 +
            (C3752 - C3751 + C3754 - C3753) * C2663 +
            (C3756 - C3755 + C3758 - C3757) * C32003) *
               C815 +
           C4217 * C32219) *
              C346 +
          (((C3372 * C349 - C32200 * C359 + C3373 * C354 - C32045 * C369) *
                C2662 +
            (C3372 * C360 - C32200 * C379 + C3373 * C370 - C32045 * C384) *
                C32199 +
            (C3372 * C681 - C32200 * C686 + C3373 * C1118 - C32045 * C1130) *
                C2663 +
            (C3372 * C687 - C32200 * C696 + C3373 * C1131 - C32045 * C1145) *
                C32003) *
               C814 +
           ((C3905 - C3906 + C3907 - C3908) * C2662 +
            (C3909 - C3910 + C3911 - C3912) * C32199 +
            (C3372 * C682 - C32200 * C688 + C3373 * C1120 - C32045 * C1134) *
                C2663 +
            (C3372 * C689 - C32200 * C697 + C3373 * C1135 - C32045 * C1147) *
                C32003) *
               C815 +
           ((C3913 - C3914 + C3915 - C3916) * C2662 +
            (C3917 - C3918 + C3919 - C3920) * C32199 +
            (C3372 * C683 - C32200 * C690 + C3373 * C1122 - C32045 * C1138) *
                C2663 +
            (C3372 * C691 - C32200 * C698 + C3373 * C1139 - C32045 * C1149) *
                C32003) *
               C32219) *
              C347 +
          (((C32200 * C369 - C3372 * C354 + C32045 * C2034 - C3373 * C2028) *
                C2662 +
            (C32200 * C384 - C3372 * C370 + C32045 * C2046 - C3373 * C2035) *
                C32199 +
            (C32200 * C1130 - C3372 * C1118 + C32045 * C2549 - C3373 * C2546) *
                C2663 +
            (C32200 * C1145 - C3372 * C1131 + C32045 * C2555 - C3373 * C2550) *
                C32003) *
               C814 +
           ((C32200 * C371 - C3372 * C355 + C32045 * C2036 - C3373 * C2029) *
                C2662 +
            (C32200 * C385 - C3372 * C372 + C32045 * C2047 - C3373 * C2037) *
                C32199 +
            (C32200 * C1134 - C3372 * C1120 + C32045 * C2551 - C3373 * C2547) *
                C2663 +
            (C32200 * C1147 - C3372 * C1135 + C32045 * C2556 - C3373 * C2552) *
                C32003) *
               C815 +
           ((C32200 * C373 - C3372 * C356 + C32045 * C2038 - C3373 * C2030) *
                C2662 +
            (C32200 * C386 - C3372 * C374 + C32045 * C2048 - C3373 * C2039) *
                C32199 +
            (C32200 * C1138 - C3372 * C1122 + C32045 * C2553 - C3373 * C2548) *
                C2663 +
            (C32200 * C1149 - C3372 * C1139 + C32045 * C2557 - C3373 * C2554) *
                C32003) *
               C32219) *
              C348) *
         C31904 * C31892) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C32200 * C122 - C3372 * C115 + C32045 * C359 - C3373 * C349) *
               C7430 +
           (C32200 * C136 - C3372 * C123 + C32045 * C379 - C3373 * C360) *
               C7424 +
           (C4364 - C4365 + C4366 - C4367) * C7431 +
           (C4368 - C4369 + C4370 - C4371) * C7425 + C8345 * C7432 +
           C8346 * C7426 + (C8330 - C8329 + C8332 - C8331) * C7433 +
           (C8334 - C8333 + C8336 - C8335) * C32240) *
              C31859 * C31918 * C31904 * C110 +
          ((C3376 - C3375 + C3378 - C3377) * C7430 +
           (C3380 - C3379 + C3382 - C3381) * C7424 + C4750 * C7431 +
           C4751 * C7425 + C8693 * C7432 + C8694 * C7426 +
           (C8337 - C8338 + C8339 - C8340) * C7433 +
           (C8341 - C8342 + C8343 - C8344) * C32240) *
              C31859 * C31918 * C31904 * C111 +
          (C3415 * C7430 + C3416 * C7424 + C4212 * C7431 + C4213 * C7425 +
           (C4389 - C4388 + C4391 - C4390) * C7432 +
           (C4393 - C4392 + C4395 - C4394) * C7426 +
           (C32200 * C967 - C3372 * C959 + C32045 * C1630 - C3373 * C1625) *
               C7433 +
           (C32200 * C977 - C3372 * C968 + C32045 * C1634 - C3373 * C1631) *
               C32240) *
              C31859 * C31918 * C31904 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C32200 * C122 - C3372 * C115 + C32045 * C359 - C3373 * C349) *
               C7430 +
           (C32200 * C136 - C3372 * C123 + C32045 * C379 - C3373 * C360) *
               C7424 +
           (C4364 - C4365 + C4366 - C4367) * C7431 +
           (C4368 - C4369 + C4370 - C4371) * C7425 + C8345 * C7432 +
           C8346 * C7426 + C9307 * C7433 + C9308 * C32240) *
              C31859 * C31918 * C240 +
          ((C4365 - C4364 + C4367 - C4366) * C7430 +
           (C4369 - C4368 + C4371 - C4370) * C7424 +
           (C4372 - C4373 + C4374 - C4375) * C7431 +
           (C4376 - C4377 + C4378 - C4379) * C7425 +
           (C8329 - C8330 + C8331 - C8332) * C7432 +
           (C8333 - C8334 + C8335 - C8336) * C7426 +
           (C9299 - C9300 + C9301 - C9302) * C7433 +
           (C9303 - C9304 + C9305 - C9306) * C32240) *
              C31859 * C31918 * C241 +
          (C8345 * C7430 + C8346 * C7424 + C9307 * C7431 + C9308 * C7425 +
           (C9300 - C9299 + C9302 - C9301) * C7432 +
           (C9304 - C9303 + C9306 - C9305) * C7426 +
           (C32200 * C6090 - C3372 * C6088 + C32045 * C6441 - C3373 * C6440) *
               C7433 +
           (C32200 * C6094 - C3372 * C6091 + C32045 * C6443 - C3373 * C6442) *
               C32240) *
              C31859 * C31918 * C242) *
         C31892) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C32200 * C122 - C3372 * C115 + C32045 * C359 - C3373 * C349) *
               C7430 +
           (C32200 * C136 - C3372 * C123 + C32045 * C379 - C3373 * C360) *
               C7424 +
           (C4364 - C4365 + C4366 - C4367) * C7431 +
           (C4368 - C4369 + C4370 - C4371) * C7425 + C8345 * C7432 +
           C8346 * C7426 + C9307 * C7433 + C9308 * C32240) *
              C31859 * C346 +
          ((C3372 * C349 - C32200 * C359 + C3373 * C354 - C32045 * C369) *
               C7430 +
           (C3372 * C360 - C32200 * C379 + C3373 * C370 - C32045 * C384) *
               C7424 +
           (C5158 - C5159 + C5160 - C5161) * C7431 +
           (C5162 - C5163 + C5164 - C5165) * C7425 +
           (C9091 - C9092 + C9093 - C9094) * C7432 +
           (C9095 - C9096 + C9097 - C9098) * C7426 +
           (C3372 * C1623 - C32200 * C1626 + C3373 * C6171 - C32045 * C6175) *
               C7433 +
           (C3372 * C1627 - C32200 * C1632 + C3373 * C6176 - C32045 * C6180) *
               C32240) *
              C31859 * C347 +
          ((C32200 * C369 - C3372 * C354 + C32045 * C2034 - C3373 * C2028) *
               C7430 +
           (C32200 * C384 - C3372 * C370 + C32045 * C2046 - C3373 * C2035) *
               C7424 +
           (C32200 * C1130 - C3372 * C1118 + C32045 * C2549 - C3373 * C2546) *
               C7431 +
           (C32200 * C1145 - C3372 * C1131 + C32045 * C2555 - C3373 * C2550) *
               C7425 +
           (C32200 * C1132 - C3372 * C1119 + C32045 * C6831 - C3373 * C6828) *
               C7432 +
           (C32200 * C1146 - C3372 * C1133 + C32045 * C6837 - C3373 * C6832) *
               C7426 +
           (C32200 * C6175 - C3372 * C6171 + C32045 * C7299 - C3373 * C7298) *
               C7433 +
           (C32200 * C6180 - C3372 * C6176 + C32045 * C7301 - C3373 * C7300) *
               C32240) *
              C31859 * C348) *
         C31904 * C31892) /
            (p * q * std::sqrt(p + q));
    d2ee[108] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C32200 * C122 - C3372 * C115 + C32045 * C359 - C3373 * C349) *
                 C2662 +
             (C32200 * C136 - C3372 * C123 + C32045 * C379 - C3373 * C360) *
                 C32199 +
             (C4364 - C4365 + C4366 - C4367) * C2663 +
             (C4368 - C4369 + C4370 - C4371) * C32003) *
                C814 +
            ((C3375 - C3376 + C3377 - C3378) * C2662 +
             (C3379 - C3380 + C3381 - C3382) * C32199 + C4748 * C2663 +
             C4749 * C32003) *
                C815 +
            C4217 * C32219) *
               C577 +
           (((C3372 * C349 - C32200 * C359 + C3373 * C354 - C32045 * C369) *
                 C2662 +
             (C3372 * C360 - C32200 * C379 + C3373 * C370 - C32045 * C384) *
                 C32199 +
             (C3372 * C681 - C32200 * C686 + C3373 * C1118 - C32045 * C1130) *
                 C2663 +
             (C3372 * C687 - C32200 * C696 + C3373 * C1131 - C32045 * C1145) *
                 C32003) *
                C814 +
            ((C3905 - C3906 + C3907 - C3908) * C2662 +
             (C3909 - C3910 + C3911 - C3912) * C32199 +
             (C4948 - C4949 + C4950 - C4951) * C2663 +
             (C4952 - C4953 + C4954 - C4955) * C32003) *
                C815 +
            ((C3913 - C3914 + C3915 - C3916) * C2662 +
             (C3917 - C3918 + C3919 - C3920) * C32199 +
             (C4956 - C4957 + C4958 - C4959) * C2663 +
             (C4960 - C4961 + C4962 - C4963) * C32003) *
                C32219) *
               C578) *
              C31904 * C473 +
          ((((C3376 - C3375 + C3378 - C3377) * C2662 +
             (C3380 - C3379 + C3382 - C3381) * C32199 + C4750 * C2663 +
             C4751 * C32003) *
                C814 +
            ((C3384 - C3383 + C3386 - C3385) * C2662 +
             (C3388 - C3387 + C3390 - C3389) * C32199 + C4752 * C2663 +
             C4753 * C32003) *
                C815 +
            ((C3392 - C3391 + C3394 - C3393) * C2662 +
             (C3396 - C3395 + C3398 - C3397) * C32199 +
             (C3767 - C3768 + C3769 - C3770) * C2663 +
             (C3771 - C3772 + C3773 - C3774) * C32003) *
                C32219) *
               C577 +
           (((C3906 - C3905 + C3908 - C3907) * C2662 +
             (C3910 - C3909 + C3912 - C3911) * C32199 +
             (C4949 - C4948 + C4951 - C4950) * C2663 +
             (C4953 - C4952 + C4955 - C4954) * C32003) *
                C814 +
            ((C3914 - C3913 + C3916 - C3915) * C2662 +
             (C3918 - C3917 + C3920 - C3919) * C32199 +
             (C4957 - C4956 + C4959 - C4958) * C2663 +
             (C4961 - C4960 + C4963 - C4962) * C32003) *
                C815 +
            ((C3922 - C3921 + C3924 - C3923) * C2662 +
             (C3926 - C3925 + C3928 - C3927) * C32199 +
             (C32200 * C692 - C3372 * C684 + C32045 * C2199 - C3373 * C2198) *
                 C2663 +
             (C32200 * C699 - C3372 * C693 + C32045 * C2201 - C3373 * C2200) *
                 C32003) *
                C32219) *
               C578) *
              C31904 * C474)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C32200 * C122 - C3372 * C115 + C32045 * C359 - C3373 * C349) *
                C7430 +
            (C32200 * C136 - C3372 * C123 + C32045 * C379 - C3373 * C360) *
                C7424 +
            (C4364 - C4365 + C4366 - C4367) * C7431 +
            (C4368 - C4369 + C4370 - C4371) * C7425 + C8345 * C7432 +
            C8346 * C7426 + C9307 * C7433 + C9308 * C32240) *
               C31859 * C577 +
           ((C3372 * C349 - C32200 * C359 + C3373 * C354 - C32045 * C369) *
                C7430 +
            (C3372 * C360 - C32200 * C379 + C3373 * C370 - C32045 * C384) *
                C7424 +
            (C5158 - C5159 + C5160 - C5161) * C7431 +
            (C5162 - C5163 + C5164 - C5165) * C7425 +
            (C9091 - C9092 + C9093 - C9094) * C7432 +
            (C9095 - C9096 + C9097 - C9098) * C7426 +
            (C3372 * C1623 - C32200 * C1626 + C3373 * C6171 - C32045 * C6175) *
                C7433 +
            (C3372 * C1627 - C32200 * C1632 + C3373 * C6176 - C32045 * C6180) *
                C32240) *
               C31859 * C578) *
              C31904 * C473 +
          (((C3376 - C3375 + C3378 - C3377) * C7430 +
            (C3380 - C3379 + C3382 - C3381) * C7424 + C4750 * C7431 +
            C4751 * C7425 + C8693 * C7432 + C8694 * C7426 +
            (C8337 - C8338 + C8339 - C8340) * C7433 +
            (C8341 - C8342 + C8343 - C8344) * C32240) *
               C31859 * C577 +
           ((C3906 - C3905 + C3908 - C3907) * C7430 +
            (C3910 - C3909 + C3912 - C3911) * C7424 +
            (C4949 - C4948 + C4951 - C4950) * C7431 +
            (C4953 - C4952 + C4955 - C4954) * C7425 +
            (C8890 - C8889 + C8892 - C8891) * C7432 +
            (C8894 - C8893 + C8896 - C8895) * C7426 +
            (C32200 * C1628 - C3372 * C1624 + C32045 * C6987 - C3373 * C6986) *
                C7433 +
            (C32200 * C1633 - C3372 * C1629 + C32045 * C6989 - C3373 * C6988) *
                C32240) *
               C31859 * C578) *
              C31904 * C474)) /
            (p * q * std::sqrt(p + q));
    d2ee[109] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C32200 * C122 - C3372 * C115 + C32045 * C359 - C3373 * C349) *
                C2662 +
            (C32200 * C136 - C3372 * C123 + C32045 * C379 - C3373 * C360) *
                C32199 +
            (C32200 * C254 - C3372 * C244 + C32045 * C686 - C3373 * C681) *
                C2663 +
            (C32200 * C274 - C3372 * C255 + C32045 * C696 - C3373 * C687) *
                C32003) *
               C814 +
           ((C3375 - C3376 + C3377 - C3378) * C2662 +
            (C3379 - C3380 + C3381 - C3382) * C32199 +
            (C3752 - C3751 + C3754 - C3753) * C2663 +
            (C3756 - C3755 + C3758 - C3757) * C32003) *
               C815 +
           C4217 * C32219) *
              C31918 * C31904 * C110 +
          (((C3376 - C3375 + C3378 - C3377) * C2662 +
            (C3380 - C3379 + C3382 - C3381) * C32199 +
            (C3751 - C3752 + C3753 - C3754) * C2663 +
            (C3755 - C3756 + C3757 - C3758) * C32003) *
               C814 +
           ((C3384 - C3383 + C3386 - C3385) * C2662 +
            (C3388 - C3387 + C3390 - C3389) * C32199 +
            (C3759 - C3760 + C3761 - C3762) * C2663 +
            (C3763 - C3764 + C3765 - C3766) * C32003) *
               C815 +
           ((C3392 - C3391 + C3394 - C3393) * C2662 +
            (C3396 - C3395 + C3398 - C3397) * C32199 +
            (C3767 - C3768 + C3769 - C3770) * C2663 +
            (C3771 - C3772 + C3773 - C3774) * C32003) *
               C32219) *
              C31918 * C31904 * C111 +
          (C4217 * C814 +
           (C3417 * C2662 + C3418 * C32199 +
            (C3768 - C3767 + C3770 - C3769) * C2663 +
            (C3772 - C3771 + C3774 - C3773) * C32003) *
               C815 +
           ((C3400 - C3399 + C3402 - C3401) * C2662 +
            (C3404 - C3403 + C3406 - C3405) * C32199 +
            (C32200 * C262 - C3372 * C248 + C32045 * C694 - C3373 * C685) *
                C2663 +
            (C32200 * C278 - C3372 * C263 + C32045 * C700 - C3373 * C695) *
                C32003) *
               C32219) *
              C31918 * C31904 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C32200 * C122 - C3372 * C115 + C32045 * C359 - C3373 * C349) *
                C2662 +
            (C32200 * C136 - C3372 * C123 + C32045 * C379 - C3373 * C360) *
                C32199 +
            (C4364 - C4365 + C4366 - C4367) * C2663 +
            (C4368 - C4369 + C4370 - C4371) * C32003) *
               C814 +
           ((C3375 - C3376 + C3377 - C3378) * C2662 +
            (C3379 - C3380 + C3381 - C3382) * C32199 +
            (C3752 - C3751 + C3754 - C3753) * C2663 +
            (C3756 - C3755 + C3758 - C3757) * C32003) *
               C815 +
           C4217 * C32219) *
              C31918 * C240 +
          (((C4365 - C4364 + C4367 - C4366) * C2662 +
            (C4369 - C4368 + C4371 - C4370) * C32199 +
            (C4372 - C4373 + C4374 - C4375) * C2663 +
            (C4376 - C4377 + C4378 - C4379) * C32003) *
               C814 +
           ((C3751 - C3752 + C3753 - C3754) * C2662 +
            (C3755 - C3756 + C3757 - C3758) * C32199 +
            (C4380 - C4381 + C4382 - C4383) * C2663 +
            (C4384 - C4385 + C4386 - C4387) * C32003) *
               C815 +
           ((C3759 - C3760 + C3761 - C3762) * C2662 +
            (C3763 - C3764 + C3765 - C3766) * C32199 +
            (C4388 - C4389 + C4390 - C4391) * C2663 +
            (C4392 - C4393 + C4394 - C4395) * C32003) *
               C32219) *
              C31918 * C241 +
          (((C4373 - C4372 + C4375 - C4374) * C2662 +
            (C4377 - C4376 + C4379 - C4378) * C32199 +
            (C32200 * C963 - C3372 * C957 + C32045 * C1626 - C3373 * C1623) *
                C2663 +
            (C32200 * C975 - C3372 * C964 + C32045 * C1632 - C3373 * C1627) *
                C32003) *
               C814 +
           ((C4381 - C4380 + C4383 - C4382) * C2662 +
            (C4385 - C4384 + C4387 - C4386) * C32199 +
            (C32200 * C965 - C3372 * C958 + C32045 * C1628 - C3373 * C1624) *
                C2663 +
            (C32200 * C976 - C3372 * C966 + C32045 * C1633 - C3373 * C1629) *
                C32003) *
               C815 +
           ((C4389 - C4388 + C4391 - C4390) * C2662 +
            (C4393 - C4392 + C4395 - C4394) * C32199 +
            (C32200 * C967 - C3372 * C959 + C32045 * C1630 - C3373 * C1625) *
                C2663 +
            (C32200 * C977 - C3372 * C968 + C32045 * C1634 - C3373 * C1631) *
                C32003) *
               C32219) *
              C31918 * C242) *
         C31892) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C32200 * C122 - C3372 * C115 + C32045 * C359 - C3373 * C349) *
               C7430 +
           (C32200 * C136 - C3372 * C123 + C32045 * C379 - C3373 * C360) *
               C7424 +
           (C4364 - C4365 + C4366 - C4367) * C7431 +
           (C4368 - C4369 + C4370 - C4371) * C7425 + C8345 * C7432 +
           C8346 * C7426 + (C8330 - C8329 + C8332 - C8331) * C7433 +
           (C8334 - C8333 + C8336 - C8335) * C32240) *
              C31859 * C31918 * C31904 * C110 +
          ((C3376 - C3375 + C3378 - C3377) * C7430 +
           (C3380 - C3379 + C3382 - C3381) * C7424 + C4750 * C7431 +
           C4751 * C7425 + C8693 * C7432 + C8694 * C7426 +
           (C8337 - C8338 + C8339 - C8340) * C7433 +
           (C8341 - C8342 + C8343 - C8344) * C32240) *
              C31859 * C31918 * C31904 * C111 +
          (C3415 * C7430 + C3416 * C7424 + C4212 * C7431 + C4213 * C7425 +
           (C4389 - C4388 + C4391 - C4390) * C7432 +
           (C4393 - C4392 + C4395 - C4394) * C7426 +
           (C32200 * C967 - C3372 * C959 + C32045 * C1630 - C3373 * C1625) *
               C7433 +
           (C32200 * C977 - C3372 * C968 + C32045 * C1634 - C3373 * C1631) *
               C32240) *
              C31859 * C31918 * C31904 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C32200 * C122 - C3372 * C115 + C32045 * C359 - C3373 * C349) *
               C7430 +
           (C32200 * C136 - C3372 * C123 + C32045 * C379 - C3373 * C360) *
               C7424 +
           (C4364 - C4365 + C4366 - C4367) * C7431 +
           (C4368 - C4369 + C4370 - C4371) * C7425 + C8345 * C7432 +
           C8346 * C7426 + C9307 * C7433 + C9308 * C32240) *
              C31859 * C31918 * C240 +
          ((C4365 - C4364 + C4367 - C4366) * C7430 +
           (C4369 - C4368 + C4371 - C4370) * C7424 +
           (C4372 - C4373 + C4374 - C4375) * C7431 +
           (C4376 - C4377 + C4378 - C4379) * C7425 +
           (C8329 - C8330 + C8331 - C8332) * C7432 +
           (C8333 - C8334 + C8335 - C8336) * C7426 +
           (C9299 - C9300 + C9301 - C9302) * C7433 +
           (C9303 - C9304 + C9305 - C9306) * C32240) *
              C31859 * C31918 * C241 +
          (C8345 * C7430 + C8346 * C7424 + C9307 * C7431 + C9308 * C7425 +
           (C9300 - C9299 + C9302 - C9301) * C7432 +
           (C9304 - C9303 + C9306 - C9305) * C7426 +
           (C32200 * C6090 - C3372 * C6088 + C32045 * C6441 - C3373 * C6440) *
               C7433 +
           (C32200 * C6094 - C3372 * C6091 + C32045 * C6443 - C3373 * C6442) *
               C32240) *
              C31859 * C31918 * C242) *
         C31892) /
            (p * q * std::sqrt(p + q));
    d2ee[110] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C31958 * C122 - C113 * C115) * C817 +
             (C31958 * C136 - C113 * C123) * C32265 + (C982 - C983) * C818 +
             (C984 - C985) * C32253 + C1004 * C819 + C1005 * C32230) *
                C814 +
            ((C144 - C145) * C817 + (C146 - C147) * C32265 + C1302 * C818 +
             C1303 * C32253 + C990 * C819 + C991 * C32230) *
                C815 +
            C847 * C32219) *
               C31918 * C471 +
           (((C983 - C982) * C817 + (C985 - C984) * C32265 +
             (C987 - C986) * C818 + (C989 - C988) * C32253 +
             (C992 - C993) * C819 + (C994 - C995) * C32230) *
                C814 +
            (C1304 * C817 + C1305 * C32265 + C1306 * C818 + C1307 * C32253 +
             (C996 - C997) * C819 + (C998 - C999) * C32230) *
                C815 +
            (C1308 * C817 + C1309 * C32265 + C1310 * C818 + C1311 * C32253 +
             (C1000 - C1001) * C819 + (C1002 - C1003) * C32230) *
                C32219) *
               C31918 * C472) *
              C473 +
          ((((C145 - C144) * C817 + (C147 - C146) * C32265 + C1304 * C818 +
             C1305 * C32253 + C1306 * C819 + C1307 * C32230) *
                C814 +
            ((C149 - C148) * C817 + (C151 - C150) * C32265 + C1308 * C818 +
             C1309 * C32253 + C1310 * C819 + C1311 * C32230) *
                C815 +
            ((C153 - C152) * C817 + (C155 - C154) * C32265 +
             (C488 - C489) * C818 + (C490 - C491) * C32253 +
             (C833 - C834) * C819 + (C835 - C836) * C32230) *
                C32219) *
               C31918 * C471 +
           ((C1302 * C817 + C1303 * C32265 + C990 * C818 + C991 * C32253 +
             (C997 - C996) * C819 + (C999 - C998) * C32230) *
                C814 +
            (C827 * C817 + C828 * C32265 + C840 * C818 + C841 * C32253 +
             (C1001 - C1000) * C819 + (C1003 - C1002) * C32230) *
                C815 +
            ((C489 - C488) * C817 + (C491 - C490) * C32265 +
             (C834 - C833) * C818 + (C836 - C835) * C32253 +
             (C31958 * C1298 - C113 * C1297) * C819 +
             (C31958 * C1300 - C113 * C1299) * C32230) *
                C32219) *
               C31918 * C472) *
              C474)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C31958 * C122 - C113 * C115) * C114 +
             (C31958 * C136 - C113 * C123) * C31941) *
                C103 +
            ((C144 - C145) * C114 + (C146 - C147) * C31941) * C104 +
            C176 * C105 + C177 * C106 + C178 * C107) *
               C31918 * C471 +
           (((C113 * C244 - C31958 * C254) * C114 +
             (C113 * C255 - C31958 * C274) * C31941) *
                C103 +
            ((C480 - C481) * C114 + (C482 - C483) * C31941) * C104 +
            ((C484 - C485) * C114 + (C486 - C487) * C31941) * C105 +
            ((C488 - C489) * C114 + (C490 - C491) * C31941) * C106 +
            ((C492 - C493) * C114 + (C494 - C495) * C31941) * C107) *
               C31918 * C472) *
              C473 +
          ((((C145 - C144) * C114 + (C147 - C146) * C31941) * C103 +
            ((C149 - C148) * C114 + (C151 - C150) * C31941) * C104 +
            ((C153 - C152) * C114 + (C155 - C154) * C31941) * C105 +
            ((C157 - C156) * C114 + (C159 - C158) * C31941) * C106 +
            ((C160 - C161) * C114 + (C162 - C163) * C31941) * C107) *
               C31918 * C471 +
           (((C481 - C480) * C114 + (C483 - C482) * C31941) * C103 +
            ((C485 - C484) * C114 + (C487 - C486) * C31941) * C104 +
            ((C489 - C488) * C114 + (C491 - C490) * C31941) * C105 +
            ((C493 - C492) * C114 + (C495 - C494) * C31941) * C106 +
            ((C31958 * C476 - C113 * C475) * C114 +
             (C31958 * C478 - C113 * C477) * C31941) *
                C107) *
               C31918 * C472) *
              C474)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C32266 * C122 - C1756 * C115 + C32255 * C359 - C1757 * C349 +
              C32233 * C369 - C1758 * C354) *
                 C114 +
             (C32266 * C136 - C1756 * C123 + C32255 * C379 - C1757 * C360 +
              C32233 * C384 - C1758 * C370) *
                 C31941) *
                C814 +
            ((C1760 - C1761 + C1762 - C1763 + C1764 - C1765) * C114 +
             (C1766 - C1767 + C1768 - C1769 + C1770 - C1771) * C31941) *
                C815 +
            C1808 * C32219) *
               C31918 * C471 +
           (((C1756 * C244 - C32266 * C254 + C1757 * C681 - C32255 * C686 +
              C1758 * C1118 - C32233 * C1130) *
                 C114 +
             (C1756 * C255 - C32266 * C274 + C1757 * C687 - C32255 * C696 +
              C1758 * C1131 - C32233 * C1145) *
                 C31941) *
                C814 +
            ((C2203 - C2204 + C2205 - C2206 + C2207 - C2208) * C114 +
             (C2209 - C2210 + C2211 - C2212 + C2213 - C2214) * C31941) *
                C815 +
            ((C2215 - C2216 + C2217 - C2218 + C2219 - C2220) * C114 +
             (C2221 - C2222 + C2223 - C2224 + C2225 - C2226) * C31941) *
                C32219) *
               C31918 * C472) *
              C473 +
          ((((C1761 - C1760 + C1763 - C1762 + C1765 - C1764) * C114 +
             (C1767 - C1766 + C1769 - C1768 + C1771 - C1770) * C31941) *
                C814 +
            ((C1773 - C1772 + C1775 - C1774 + C1777 - C1776) * C114 +
             (C1779 - C1778 + C1781 - C1780 + C1783 - C1782) * C31941) *
                C815 +
            ((C1784 - C1785 + C1786 - C1787 + C1788 - C1789) * C114 +
             (C1790 - C1791 + C1792 - C1793 + C1794 - C1795) * C31941) *
                C32219) *
               C31918 * C471 +
           (((C2204 - C2203 + C2206 - C2205 + C2208 - C2207) * C114 +
             (C2210 - C2209 + C2212 - C2211 + C2214 - C2213) * C31941) *
                C814 +
            ((C2216 - C2215 + C2218 - C2217 + C2220 - C2219) * C114 +
             (C2222 - C2221 + C2224 - C2223 + C2226 - C2225) * C31941) *
                C815 +
            ((C32266 * C260 - C1756 * C247 + C32255 * C692 - C1757 * C684 +
              C32233 * C2199 - C1758 * C2198) *
                 C114 +
             (C32266 * C277 - C1756 * C261 + C32255 * C699 - C1757 * C693 +
              C32233 * C2201 - C1758 * C2200) *
                 C31941) *
                C32219) *
               C31918 * C472) *
              C474)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C31958 * C122 - C113 * C115) * C5281 +
             (C31958 * C136 - C113 * C123) * C5275 + (C982 - C983) * C5282 +
             (C984 - C985) * C5276 + C1004 * C5283 + C1005 * C32230) *
                C32262 +
            ((C144 - C145) * C5281 + (C146 - C147) * C5275 + C1302 * C5282 +
             C1303 * C5276 + C990 * C5283 + C991 * C32230) *
                C32249 +
            C5295 * C32219) *
               C31918 * C471 +
           (((C983 - C982) * C5281 + (C985 - C984) * C5275 +
             (C987 - C986) * C5282 + (C989 - C988) * C5276 +
             (C992 - C993) * C5283 + (C994 - C995) * C32230) *
                C32262 +
            (C1304 * C5281 + C1305 * C5275 + C1306 * C5282 + C1307 * C5276 +
             (C996 - C997) * C5283 + (C998 - C999) * C32230) *
                C32249 +
            (C1308 * C5281 + C1309 * C5275 + C1310 * C5282 + C1311 * C5276 +
             (C1000 - C1001) * C5283 + (C1002 - C1003) * C32230) *
                C32219) *
               C31918 * C472) *
              C473 +
          ((((C145 - C144) * C5281 + (C147 - C146) * C5275 + C1304 * C5282 +
             C1305 * C5276 + C1306 * C5283 + C1307 * C32230) *
                C32262 +
            ((C149 - C148) * C5281 + (C151 - C150) * C5275 + C1308 * C5282 +
             C1309 * C5276 + C1310 * C5283 + C1311 * C32230) *
                C32249 +
            ((C153 - C152) * C5281 + (C155 - C154) * C5275 + C3007 * C5282 +
             C3008 * C5276 + (C833 - C834) * C5283 + (C835 - C836) * C32230) *
                C32219) *
               C31918 * C471 +
           ((C1302 * C5281 + C1303 * C5275 + C990 * C5282 + C991 * C5276 +
             (C997 - C996) * C5283 + (C999 - C998) * C32230) *
                C32262 +
            (C827 * C5281 + C828 * C5275 + C840 * C5282 + C841 * C5276 +
             (C1001 - C1000) * C5283 + (C1003 - C1002) * C32230) *
                C32249 +
            (C2671 * C5281 + C2672 * C5275 + (C834 - C833) * C5282 +
             (C836 - C835) * C5276 + (C31958 * C1298 - C113 * C1297) * C5283 +
             (C31958 * C1300 - C113 * C1299) * C32230) *
                C32219) *
               C31918 * C472) *
              C474)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31958 * C122 - C113 * C115) * C6021 +
            (C31958 * C136 - C113 * C123) * C6015 + (C982 - C983) * C6022 +
            (C984 - C985) * C6016 + C1004 * C6023 + C1005 * C6017 +
            C6097 * C6024 + C6098 * C6018 + C6107 * C6025 + C6108 * C6019) *
               C31859 * C31918 * C471 +
           ((C983 - C982) * C6021 + (C985 - C984) * C6015 +
            (C987 - C986) * C6022 + (C989 - C988) * C6016 +
            (C992 - C993) * C6023 + (C994 - C995) * C6017 +
            (C6100 - C6099) * C6024 + (C6102 - C6101) * C6018 +
            (C6103 - C6104) * C6025 + (C6105 - C6106) * C6019) *
               C31859 * C31918 * C472) *
              C473 +
          (((C145 - C144) * C6021 + (C147 - C146) * C6015 + C1304 * C6022 +
            C1305 * C6016 + C1306 * C6023 + C1307 * C6017 +
            (C996 - C997) * C6024 + (C998 - C999) * C6018 +
            (C6269 - C6270) * C6025 + (C6271 - C6272) * C6019) *
               C31859 * C31918 * C471 +
           (C1302 * C6021 + C1303 * C6015 + C990 * C6022 + C991 * C6016 +
            (C997 - C996) * C6023 + (C999 - C998) * C6017 +
            (C6270 - C6269) * C6024 + (C6272 - C6271) * C6018 +
            (C31958 * C6265 - C113 * C6264) * C6025 +
            (C31958 * C6267 - C113 * C6266) * C6019) *
               C31859 * C31918 * C472) *
              C474)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C32266 * C122 - C1756 * C115 + C32255 * C359 - C1757 * C349 +
             C32233 * C369 - C1758 * C354) *
                C5281 +
            (C32266 * C136 - C1756 * C123 + C32255 * C379 - C1757 * C360 +
             C32233 * C384 - C1758 * C370) *
                C5275 +
            (C6673 - C6674 + C6675 - C6676 + C6677 - C6678) * C5282 +
            (C6679 - C6680 + C6681 - C6682 + C6683 - C6684) * C5276 +
            C6717 * C5283 + C6718 * C32230) *
               C31859 * C31918 * C471 +
           ((C6674 - C6673 + C6676 - C6675 + C6678 - C6677) * C5281 +
            (C6680 - C6679 + C6682 - C6681 + C6684 - C6683) * C5275 +
            (C6686 - C6685 + C6688 - C6687 + C6690 - C6689) * C5282 +
            (C6692 - C6691 + C6694 - C6693 + C6696 - C6695) * C5276 +
            (C6697 - C6698 + C6699 - C6700 + C6701 - C6702) * C5283 +
            (C6703 - C6704 + C6705 - C6706 + C6707 - C6708) * C32230) *
               C31859 * C31918 * C472) *
              C473 +
          (((C1761 - C1760 + C1763 - C1762 + C1765 - C1764) * C5281 +
            (C1767 - C1766 + C1769 - C1768 + C1771 - C1770) * C5275 +
            (C2203 - C2204 + C2205 - C2206 + C2207 - C2208) * C5282 +
            (C2209 - C2210 + C2211 - C2212 + C2213 - C2214) * C5276 +
            (C6991 - C6992 + C6993 - C6994 + C6995 - C6996) * C5283 +
            (C6997 - C6998 + C6999 - C7000 + C7001 - C7002) * C32230) *
               C31859 * C31918 * C471 +
           ((C2204 - C2203 + C2206 - C2205 + C2208 - C2207) * C5281 +
            (C2210 - C2209 + C2212 - C2211 + C2214 - C2213) * C5275 +
            (C6992 - C6991 + C6994 - C6993 + C6996 - C6995) * C5282 +
            (C6998 - C6997 + C7000 - C6999 + C7002 - C7001) * C5276 +
            (C32266 * C965 - C1756 * C958 + C32255 * C1628 - C1757 * C1624 +
             C32233 * C6987 - C1758 * C6986) *
                C5283 +
            (C32266 * C976 - C1756 * C966 + C32255 * C1633 - C1757 * C1629 +
             C32233 * C6989 - C1758 * C6988) *
                C32230) *
               C31859 * C31918 * C472) *
              C474)) /
            (p * q * std::sqrt(p + q));
    d2ee[111] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C31958 * C122 - C113 * C115) * C817 +
             (C31958 * C136 - C113 * C123) * C32265 + (C982 - C983) * C818 +
             (C984 - C985) * C32253 + C1004 * C819 + C1005 * C32230) *
                C814 +
            ((C144 - C145) * C817 + (C146 - C147) * C32265 + C1302 * C818 +
             C1303 * C32253 + C990 * C819 + C991 * C32230) *
                C815 +
            C847 * C32219) *
               C577 +
           (((C113 * C349 - C31958 * C359) * C817 +
             (C113 * C360 - C31958 * C379) * C32265 + (C1636 - C1637) * C818 +
             (C1638 - C1639) * C32253 + (C1640 - C1641) * C819 +
             (C1642 - C1643) * C32230) *
                C814 +
            ((C584 - C585) * C817 + (C586 - C587) * C32265 +
             (C1462 - C1463) * C818 + (C1464 - C1465) * C32253 +
             (C1466 - C1467) * C819 + (C1468 - C1469) * C32230) *
                C815 +
            ((C588 - C589) * C817 + (C590 - C591) * C32265 +
             (C1470 - C1471) * C818 + (C1472 - C1473) * C32253 +
             (C1474 - C1475) * C819 + (C1476 - C1477) * C32230) *
                C32219) *
               C578) *
              C471 +
          ((((C983 - C982) * C817 + (C985 - C984) * C32265 +
             (C987 - C986) * C818 + (C989 - C988) * C32253 +
             (C992 - C993) * C819 + (C994 - C995) * C32230) *
                C814 +
            (C1304 * C817 + C1305 * C32265 + C1306 * C818 + C1307 * C32253 +
             (C996 - C997) * C819 + (C998 - C999) * C32230) *
                C815 +
            (C1308 * C817 + C1309 * C32265 + C1310 * C818 + C1311 * C32253 +
             (C1000 - C1001) * C819 + (C1002 - C1003) * C32230) *
                C32219) *
               C577 +
           (((C1637 - C1636) * C817 + (C1639 - C1638) * C32265 +
             (C1641 - C1640) * C818 + (C1643 - C1642) * C32253 +
             (C31958 * C1626 - C113 * C1623) * C819 +
             (C31958 * C1632 - C113 * C1627) * C32230) *
                C814 +
            ((C1463 - C1462) * C817 + (C1465 - C1464) * C32265 +
             (C1467 - C1466) * C818 + (C1469 - C1468) * C32253 +
             (C31958 * C1628 - C113 * C1624) * C819 +
             (C31958 * C1633 - C113 * C1629) * C32230) *
                C815 +
            ((C1471 - C1470) * C817 + (C1473 - C1472) * C32265 +
             (C1475 - C1474) * C818 + (C1477 - C1476) * C32253 +
             (C31958 * C1630 - C113 * C1625) * C819 +
             (C31958 * C1634 - C113 * C1631) * C32230) *
                C32219) *
               C578) *
              C472) *
         C31892) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C31958 * C122 - C113 * C115) * C114 +
             (C31958 * C136 - C113 * C123) * C31941) *
                C103 +
            ((C144 - C145) * C114 + (C146 - C147) * C31941) * C104 +
            C176 * C105 + C177 * C106 + C178 * C107) *
               C577 +
           (((C113 * C349 - C31958 * C359) * C114 +
             (C113 * C360 - C31958 * C379) * C31941) *
                C103 +
            ((C584 - C585) * C114 + (C586 - C587) * C31941) * C104 +
            ((C588 - C589) * C114 + (C590 - C591) * C31941) * C105 +
            ((C592 - C593) * C114 + (C594 - C595) * C31941) * C106 +
            ((C596 - C597) * C114 + (C598 - C599) * C31941) * C107) *
               C578) *
              C471 +
          ((((C113 * C244 - C31958 * C254) * C114 +
             (C113 * C255 - C31958 * C274) * C31941) *
                C103 +
            ((C480 - C481) * C114 + (C482 - C483) * C31941) * C104 +
            ((C484 - C485) * C114 + (C486 - C487) * C31941) * C105 +
            ((C488 - C489) * C114 + (C490 - C491) * C31941) * C106 +
            ((C492 - C493) * C114 + (C494 - C495) * C31941) * C107) *
               C577 +
           (((C31958 * C686 - C113 * C681) * C114 +
             (C31958 * C696 - C113 * C687) * C31941) *
                C103 +
            ((C31958 * C688 - C113 * C682) * C114 +
             (C31958 * C697 - C113 * C689) * C31941) *
                C104 +
            ((C31958 * C690 - C113 * C683) * C114 +
             (C31958 * C698 - C113 * C691) * C31941) *
                C105 +
            ((C31958 * C692 - C113 * C684) * C114 +
             (C31958 * C699 - C113 * C693) * C31941) *
                C106 +
            ((C31958 * C694 - C113 * C685) * C114 +
             (C31958 * C700 - C113 * C695) * C31941) *
                C107) *
               C578) *
              C472) *
         C31892) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C32266 * C122 - C1756 * C115 + C32255 * C359 - C1757 * C349 +
              C32233 * C369 - C1758 * C354) *
                 C114 +
             (C32266 * C136 - C1756 * C123 + C32255 * C379 - C1757 * C360 +
              C32233 * C384 - C1758 * C370) *
                 C31941) *
                C814 +
            ((C1760 - C1761 + C1762 - C1763 + C1764 - C1765) * C114 +
             (C1766 - C1767 + C1768 - C1769 + C1770 - C1771) * C31941) *
                C815 +
            C1808 * C32219) *
               C577 +
           (((C1756 * C349 - C32266 * C359 + C1757 * C354 - C32255 * C369 +
              C1758 * C2028 - C32233 * C2034) *
                 C114 +
             (C1756 * C360 - C32266 * C379 + C1757 * C370 - C32255 * C384 +
              C1758 * C2035 - C32233 * C2046) *
                 C31941) *
                C814 +
            ((C2377 - C2378 + C2379 - C2380 + C2381 - C2382) * C114 +
             (C2383 - C2384 + C2385 - C2386 + C2387 - C2388) * C31941) *
                C815 +
            ((C2389 - C2390 + C2391 - C2392 + C2393 - C2394) * C114 +
             (C2395 - C2396 + C2397 - C2398 + C2399 - C2400) * C31941) *
                C32219) *
               C578) *
              C471 +
          ((((C1756 * C244 - C32266 * C254 + C1757 * C681 - C32255 * C686 +
              C1758 * C1118 - C32233 * C1130) *
                 C114 +
             (C1756 * C255 - C32266 * C274 + C1757 * C687 - C32255 * C696 +
              C1758 * C1131 - C32233 * C1145) *
                 C31941) *
                C814 +
            ((C2203 - C2204 + C2205 - C2206 + C2207 - C2208) * C114 +
             (C2209 - C2210 + C2211 - C2212 + C2213 - C2214) * C31941) *
                C815 +
            ((C2215 - C2216 + C2217 - C2218 + C2219 - C2220) * C114 +
             (C2221 - C2222 + C2223 - C2224 + C2225 - C2226) * C31941) *
                C32219) *
               C577 +
           (((C32266 * C686 - C1756 * C681 + C32255 * C1130 - C1757 * C1118 +
              C32233 * C2549 - C1758 * C2546) *
                 C114 +
             (C32266 * C696 - C1756 * C687 + C32255 * C1145 - C1757 * C1131 +
              C32233 * C2555 - C1758 * C2550) *
                 C31941) *
                C814 +
            ((C32266 * C688 - C1756 * C682 + C32255 * C1134 - C1757 * C1120 +
              C32233 * C2551 - C1758 * C2547) *
                 C114 +
             (C32266 * C697 - C1756 * C689 + C32255 * C1147 - C1757 * C1135 +
              C32233 * C2556 - C1758 * C2552) *
                 C31941) *
                C815 +
            ((C32266 * C690 - C1756 * C683 + C32255 * C1138 - C1757 * C1122 +
              C32233 * C2553 - C1758 * C2548) *
                 C114 +
             (C32266 * C698 - C1756 * C691 + C32255 * C1149 - C1757 * C1139 +
              C32233 * C2557 - C1758 * C2554) *
                 C31941) *
                C32219) *
               C578) *
              C472) *
         C31892) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C31958 * C122 - C113 * C115) * C5281 +
             (C31958 * C136 - C113 * C123) * C5275 + (C982 - C983) * C5282 +
             (C984 - C985) * C5276 + C1004 * C5283 + C1005 * C32230) *
                C32262 +
            ((C144 - C145) * C5281 + (C146 - C147) * C5275 + C1302 * C5282 +
             C1303 * C5276 + C990 * C5283 + C991 * C32230) *
                C32249 +
            C5295 * C32219) *
               C577 +
           (((C113 * C349 - C31958 * C359) * C5281 +
             (C113 * C360 - C31958 * C379) * C5275 + (C1636 - C1637) * C5282 +
             (C1638 - C1639) * C5276 + (C1640 - C1641) * C5283 +
             (C1642 - C1643) * C32230) *
                C32262 +
            ((C584 - C585) * C5281 + (C586 - C587) * C5275 +
             (C1462 - C1463) * C5282 + (C1464 - C1465) * C5276 +
             (C1466 - C1467) * C5283 + (C1468 - C1469) * C32230) *
                C32249 +
            ((C588 - C589) * C5281 + (C590 - C591) * C5275 +
             (C1470 - C1471) * C5282 + (C1472 - C1473) * C5276 +
             (C1474 - C1475) * C5283 + (C1476 - C1477) * C32230) *
                C32219) *
               C578) *
              C471 +
          ((((C983 - C982) * C5281 + (C985 - C984) * C5275 +
             (C987 - C986) * C5282 + (C989 - C988) * C5276 +
             (C992 - C993) * C5283 + (C994 - C995) * C32230) *
                C32262 +
            (C1304 * C5281 + C1305 * C5275 + C1306 * C5282 + C1307 * C5276 +
             (C996 - C997) * C5283 + (C998 - C999) * C32230) *
                C32249 +
            (C1308 * C5281 + C1309 * C5275 + C1310 * C5282 + C1311 * C5276 +
             (C1000 - C1001) * C5283 + (C1002 - C1003) * C32230) *
                C32219) *
               C577 +
           (((C1637 - C1636) * C5281 + (C1639 - C1638) * C5275 +
             (C1641 - C1640) * C5282 + (C1643 - C1642) * C5276 +
             (C31958 * C1626 - C113 * C1623) * C5283 +
             (C31958 * C1632 - C113 * C1627) * C32230) *
                C32262 +
            ((C1463 - C1462) * C5281 + (C1465 - C1464) * C5275 +
             (C1467 - C1466) * C5282 + (C1469 - C1468) * C5276 +
             (C31958 * C1628 - C113 * C1624) * C5283 +
             (C31958 * C1633 - C113 * C1629) * C32230) *
                C32249 +
            ((C1471 - C1470) * C5281 + (C1473 - C1472) * C5275 +
             (C1475 - C1474) * C5282 + (C1477 - C1476) * C5276 +
             (C31958 * C1630 - C113 * C1625) * C5283 +
             (C31958 * C1634 - C113 * C1631) * C32230) *
                C32219) *
               C578) *
              C472) *
         C31892) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31958 * C122 - C113 * C115) * C6021 +
            (C31958 * C136 - C113 * C123) * C6015 + (C982 - C983) * C6022 +
            (C984 - C985) * C6016 + C1004 * C6023 + C1005 * C6017 +
            C6097 * C6024 + C6098 * C6018 + C6107 * C6025 + C6108 * C6019) *
               C31859 * C577 +
           ((C113 * C349 - C31958 * C359) * C6021 +
            (C113 * C360 - C31958 * C379) * C6015 + (C1636 - C1637) * C6022 +
            (C1638 - C1639) * C6016 + (C1640 - C1641) * C6023 +
            (C1642 - C1643) * C6017 + (C6445 - C6446) * C6024 +
            (C6447 - C6448) * C6018 + (C6449 - C6450) * C6025 +
            (C6451 - C6452) * C6019) *
               C31859 * C578) *
              C471 +
          (((C983 - C982) * C6021 + (C985 - C984) * C6015 +
            (C987 - C986) * C6022 + (C989 - C988) * C6016 +
            (C992 - C993) * C6023 + (C994 - C995) * C6017 +
            (C6100 - C6099) * C6024 + (C6102 - C6101) * C6018 +
            (C6103 - C6104) * C6025 + (C6105 - C6106) * C6019) *
               C31859 * C577 +
           ((C1637 - C1636) * C6021 + (C1639 - C1638) * C6015 +
            (C1641 - C1640) * C6022 + (C1643 - C1642) * C6016 +
            (C6446 - C6445) * C6023 + (C6448 - C6447) * C6017 +
            (C6450 - C6449) * C6024 + (C6452 - C6451) * C6018 +
            (C31958 * C6441 - C113 * C6440) * C6025 +
            (C31958 * C6443 - C113 * C6442) * C6019) *
               C31859 * C578) *
              C472) *
         C31892) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C32266 * C122 - C1756 * C115 + C32255 * C359 - C1757 * C349 +
             C32233 * C369 - C1758 * C354) *
                C5281 +
            (C32266 * C136 - C1756 * C123 + C32255 * C379 - C1757 * C360 +
             C32233 * C384 - C1758 * C370) *
                C5275 +
            (C6673 - C6674 + C6675 - C6676 + C6677 - C6678) * C5282 +
            (C6679 - C6680 + C6681 - C6682 + C6683 - C6684) * C5276 +
            C6717 * C5283 + C6718 * C32230) *
               C31859 * C577 +
           ((C1756 * C349 - C32266 * C359 + C1757 * C354 - C32255 * C369 +
             C1758 * C2028 - C32233 * C2034) *
                C5281 +
            (C1756 * C360 - C32266 * C379 + C1757 * C370 - C32255 * C384 +
             C1758 * C2035 - C32233 * C2046) *
                C5275 +
            (C7303 - C7304 + C7305 - C7306 + C7307 - C7308) * C5282 +
            (C7309 - C7310 + C7311 - C7312 + C7313 - C7314) * C5276 +
            (C7315 - C7316 + C7317 - C7318 + C7319 - C7320) * C5283 +
            (C7321 - C7322 + C7323 - C7324 + C7325 - C7326) * C32230) *
               C31859 * C578) *
              C471 +
          (((C6674 - C6673 + C6676 - C6675 + C6678 - C6677) * C5281 +
            (C6680 - C6679 + C6682 - C6681 + C6684 - C6683) * C5275 +
            (C6686 - C6685 + C6688 - C6687 + C6690 - C6689) * C5282 +
            (C6692 - C6691 + C6694 - C6693 + C6696 - C6695) * C5276 +
            (C6697 - C6698 + C6699 - C6700 + C6701 - C6702) * C5283 +
            (C6703 - C6704 + C6705 - C6706 + C6707 - C6708) * C32230) *
               C31859 * C577 +
           ((C7304 - C7303 + C7306 - C7305 + C7308 - C7307) * C5281 +
            (C7310 - C7309 + C7312 - C7311 + C7314 - C7313) * C5275 +
            (C7316 - C7315 + C7318 - C7317 + C7320 - C7319) * C5282 +
            (C7322 - C7321 + C7324 - C7323 + C7326 - C7325) * C5276 +
            (C32266 * C1626 - C1756 * C1623 + C32255 * C6175 - C1757 * C6171 +
             C32233 * C7299 - C1758 * C7298) *
                C5283 +
            (C32266 * C1632 - C1756 * C1627 + C32255 * C6180 - C1757 * C6176 +
             C32233 * C7301 - C1758 * C7300) *
                C32230) *
               C31859 * C578) *
              C472) *
         C31892) /
            (p * q * std::sqrt(p + q));
    d2ee[112] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((((C31958 * C122 - C113 * C115) * C114 +
                (C31958 * C136 - C113 * C123) * C31941) *
                   C103 +
               ((C144 - C145) * C114 + (C146 - C147) * C31941) * C104 +
               C176 * C105 + C177 * C106 + C178 * C107) *
                  C31918 * C31904 * C110 +
              (((C145 - C144) * C114 + (C147 - C146) * C31941) * C103 +
               ((C149 - C148) * C114 + (C151 - C150) * C31941) * C104 +
               ((C153 - C152) * C114 + (C155 - C154) * C31941) * C105 +
               ((C157 - C156) * C114 + (C159 - C158) * C31941) * C106 +
               ((C160 - C161) * C114 + (C162 - C163) * C31941) * C107) *
                  C31918 * C31904 * C111 +
              (C176 * C103 + C177 * C104 + C178 * C105 +
               ((C161 - C160) * C114 + (C163 - C162) * C31941) * C106 +
               ((C31958 * C134 - C113 * C121) * C114 +
                (C31958 * C142 - C113 * C135) * C31941) *
                   C107) *
                  C31918 * C31904 * C112) +
         std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((((C31958 * C122 - C113 * C115) * C114 +
                (C31958 * C136 - C113 * C123) * C31941) *
                   C103 +
               ((C144 - C145) * C114 + (C146 - C147) * C31941) * C104 +
               C176 * C105 + C177 * C106 + C178 * C107) *
                  C31918 * C240 +
              (((C113 * C244 - C31958 * C254) * C114 +
                (C113 * C255 - C31958 * C274) * C31941) *
                   C103 +
               ((C113 * C245 - C31958 * C256) * C114 +
                (C113 * C257 - C31958 * C275) * C31941) *
                   C104 +
               ((C113 * C246 - C31958 * C258) * C114 +
                (C113 * C259 - C31958 * C276) * C31941) *
                   C105 +
               ((C113 * C247 - C31958 * C260) * C114 +
                (C113 * C261 - C31958 * C277) * C31941) *
                   C106 +
               ((C113 * C248 - C31958 * C262) * C114 +
                (C113 * C263 - C31958 * C278) * C31941) *
                   C107) *
                  C31918 * C241 +
              (((C31958 * C264 - C113 * C249) * C114 +
                (C31958 * C279 - C113 * C265) * C31941) *
                   C103 +
               ((C31958 * C266 - C113 * C250) * C114 +
                (C31958 * C280 - C113 * C267) * C31941) *
                   C104 +
               ((C31958 * C268 - C113 * C251) * C114 +
                (C31958 * C281 - C113 * C269) * C31941) *
                   C105 +
               ((C31958 * C270 - C113 * C252) * C114 +
                (C31958 * C282 - C113 * C271) * C31941) *
                   C106 +
               ((C31958 * C272 - C113 * C253) * C114 +
                (C31958 * C283 - C113 * C273) * C31941) *
                   C107) *
                  C31918 * C242) *
             C31892) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C31958 * C122 - C113 * C115) * C114 +
            (C31958 * C136 - C113 * C123) * C31941) *
               C103 +
           ((C144 - C145) * C114 + (C146 - C147) * C31941) * C104 +
           C176 * C105 + C177 * C106 + C178 * C107) *
              C346 +
          (((C113 * C349 - C31958 * C359) * C114 +
            (C113 * C360 - C31958 * C379) * C31941) *
               C103 +
           ((C113 * C350 - C31958 * C361) * C114 +
            (C113 * C362 - C31958 * C380) * C31941) *
               C104 +
           ((C113 * C351 - C31958 * C363) * C114 +
            (C113 * C364 - C31958 * C381) * C31941) *
               C105 +
           ((C113 * C352 - C31958 * C365) * C114 +
            (C113 * C366 - C31958 * C382) * C31941) *
               C106 +
           ((C113 * C353 - C31958 * C367) * C114 +
            (C113 * C368 - C31958 * C383) * C31941) *
               C107) *
              C347 +
          (((C31958 * C369 - C113 * C354) * C114 +
            (C31958 * C384 - C113 * C370) * C31941) *
               C103 +
           ((C31958 * C371 - C113 * C355) * C114 +
            (C31958 * C385 - C113 * C372) * C31941) *
               C104 +
           ((C31958 * C373 - C113 * C356) * C114 +
            (C31958 * C386 - C113 * C374) * C31941) *
               C105 +
           ((C31958 * C375 - C113 * C357) * C114 +
            (C31958 * C387 - C113 * C376) * C31941) *
               C106 +
           ((C31958 * C377 - C113 * C358) * C114 +
            (C31958 * C388 - C113 * C378) * C31941) *
               C107) *
              C348) *
         C31904 * C31892) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C31958 * C122 - C113 * C115) * C817 +
            (C31958 * C136 - C113 * C123) * C32265 +
            (C31958 * C254 - C113 * C244) * C818 +
            (C31958 * C274 - C113 * C255) * C32253 +
            (C31958 * C264 - C113 * C249) * C819 +
            (C31958 * C279 - C113 * C265) * C32230) *
               C814 +
           ((C144 - C145) * C817 + (C146 - C147) * C32265 +
            (C481 - C480) * C818 + (C483 - C482) * C32253 +
            (C821 - C822) * C819 + (C823 - C824) * C32230) *
               C815 +
           C847 * C32219) *
              C31918 * C31904 * C110 +
          (((C145 - C144) * C817 + (C147 - C146) * C32265 +
            (C480 - C481) * C818 + (C482 - C483) * C32253 +
            (C822 - C821) * C819 + (C824 - C823) * C32230) *
               C814 +
           ((C149 - C148) * C817 + (C151 - C150) * C32265 +
            (C484 - C485) * C818 + (C486 - C487) * C32253 +
            (C830 - C829) * C819 + (C832 - C831) * C32230) *
               C815 +
           ((C153 - C152) * C817 + (C155 - C154) * C32265 +
            (C488 - C489) * C818 + (C490 - C491) * C32253 +
            (C833 - C834) * C819 + (C835 - C836) * C32230) *
               C32219) *
              C31918 * C31904 * C111 +
          (C847 * C814 +
           (C166 * C817 + C167 * C32265 + (C489 - C488) * C818 +
            (C491 - C490) * C32253 + (C834 - C833) * C819 +
            (C836 - C835) * C32230) *
               C815 +
           (C168 * C817 + C169 * C32265 + (C493 - C492) * C818 +
            (C495 - C494) * C32253 + (C31958 * C272 - C113 * C253) * C819 +
            (C31958 * C283 - C113 * C273) * C32230) *
               C32219) *
              C31918 * C31904 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C31958 * C122 - C113 * C115) * C817 +
            (C31958 * C136 - C113 * C123) * C32265 + (C982 - C983) * C818 +
            (C984 - C985) * C32253 + C1004 * C819 + C1005 * C32230) *
               C814 +
           ((C144 - C145) * C817 + (C146 - C147) * C32265 +
            (C481 - C480) * C818 + (C483 - C482) * C32253 + C990 * C819 +
            C991 * C32230) *
               C815 +
           C847 * C32219) *
              C31918 * C240 +
          (((C983 - C982) * C817 + (C985 - C984) * C32265 +
            (C987 - C986) * C818 + (C989 - C988) * C32253 +
            (C992 - C993) * C819 + (C994 - C995) * C32230) *
               C814 +
           ((C480 - C481) * C817 + (C482 - C483) * C32265 +
            (C822 - C821) * C818 + (C824 - C823) * C32253 +
            (C996 - C997) * C819 + (C998 - C999) * C32230) *
               C815 +
           ((C484 - C485) * C817 + (C486 - C487) * C32265 +
            (C830 - C829) * C818 + (C832 - C831) * C32253 +
            (C1000 - C1001) * C819 + (C1002 - C1003) * C32230) *
               C32219) *
              C31918 * C241 +
          ((C1004 * C817 + C1005 * C32265 + (C993 - C992) * C818 +
            (C995 - C994) * C32253 + (C31958 * C969 - C113 * C960) * C819 +
            (C31958 * C978 - C113 * C970) * C32230) *
               C814 +
           (C990 * C817 + C991 * C32265 + (C997 - C996) * C818 +
            (C999 - C998) * C32253 + (C31958 * C971 - C113 * C961) * C819 +
            (C31958 * C979 - C113 * C972) * C32230) *
               C815 +
           (C840 * C817 + C841 * C32265 + (C1001 - C1000) * C818 +
            (C1003 - C1002) * C32253 + (C31958 * C973 - C113 * C962) * C819 +
            (C31958 * C980 - C113 * C974) * C32230) *
               C32219) *
              C31918 * C242) *
         C31892) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C31958 * C122 - C113 * C115) * C817 +
            (C31958 * C136 - C113 * C123) * C32265 + (C982 - C983) * C818 +
            (C984 - C985) * C32253 + C1004 * C819 + C1005 * C32230) *
               C814 +
           ((C144 - C145) * C817 + (C146 - C147) * C32265 +
            (C481 - C480) * C818 + (C483 - C482) * C32253 + C990 * C819 +
            C991 * C32230) *
               C815 +
           C847 * C32219) *
              C346 +
          (((C113 * C349 - C31958 * C359) * C817 +
            (C113 * C360 - C31958 * C379) * C32265 +
            (C113 * C681 - C31958 * C686) * C818 +
            (C113 * C687 - C31958 * C696) * C32253 +
            (C113 * C1115 - C31958 * C1124) * C819 +
            (C113 * C1125 - C31958 * C1142) * C32230) *
               C814 +
           ((C584 - C585) * C817 + (C586 - C587) * C32265 +
            (C113 * C682 - C31958 * C688) * C818 +
            (C113 * C689 - C31958 * C697) * C32253 +
            (C113 * C1116 - C31958 * C1126) * C819 +
            (C113 * C1127 - C31958 * C1143) * C32230) *
               C815 +
           ((C588 - C589) * C817 + (C590 - C591) * C32265 +
            (C113 * C683 - C31958 * C690) * C818 +
            (C113 * C691 - C31958 * C698) * C32253 +
            (C113 * C1117 - C31958 * C1128) * C819 +
            (C113 * C1129 - C31958 * C1144) * C32230) *
               C32219) *
              C347 +
          (((C31958 * C369 - C113 * C354) * C817 +
            (C31958 * C384 - C113 * C370) * C32265 +
            (C31958 * C1130 - C113 * C1118) * C818 +
            (C31958 * C1145 - C113 * C1131) * C32253 +
            (C31958 * C1132 - C113 * C1119) * C819 +
            (C31958 * C1146 - C113 * C1133) * C32230) *
               C814 +
           ((C31958 * C371 - C113 * C355) * C817 +
            (C31958 * C385 - C113 * C372) * C32265 +
            (C31958 * C1134 - C113 * C1120) * C818 +
            (C31958 * C1147 - C113 * C1135) * C32253 +
            (C31958 * C1136 - C113 * C1121) * C819 +
            (C31958 * C1148 - C113 * C1137) * C32230) *
               C815 +
           ((C31958 * C373 - C113 * C356) * C817 +
            (C31958 * C386 - C113 * C374) * C32265 +
            (C31958 * C1138 - C113 * C1122) * C818 +
            (C31958 * C1149 - C113 * C1139) * C32253 +
            (C31958 * C1140 - C113 * C1123) * C819 +
            (C31958 * C1150 - C113 * C1141) * C32230) *
               C32219) *
              C348) *
         C31904 * C31892) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C32266 * C122 - C1756 * C115 + C32255 * C359 - C1757 * C349 +
             C32233 * C369 - C1758 * C354) *
                C114 +
            (C32266 * C136 - C1756 * C123 + C32255 * C379 - C1757 * C360 +
             C32233 * C384 - C1758 * C370) *
                C31941) *
               C814 +
           ((C1760 - C1761 + C1762 - C1763 + C1764 - C1765) * C114 +
            (C1766 - C1767 + C1768 - C1769 + C1770 - C1771) * C31941) *
               C815 +
           C1808 * C32219) *
              C31918 * C31904 * C110 +
          (((C1761 - C1760 + C1763 - C1762 + C1765 - C1764) * C114 +
            (C1767 - C1766 + C1769 - C1768 + C1771 - C1770) * C31941) *
               C814 +
           ((C1773 - C1772 + C1775 - C1774 + C1777 - C1776) * C114 +
            (C1779 - C1778 + C1781 - C1780 + C1783 - C1782) * C31941) *
               C815 +
           ((C1784 - C1785 + C1786 - C1787 + C1788 - C1789) * C114 +
            (C1790 - C1791 + C1792 - C1793 + C1794 - C1795) * C31941) *
               C32219) *
              C31918 * C31904 * C111 +
          (C1808 * C814 +
           ((C1785 - C1784 + C1787 - C1786 + C1789 - C1788) * C114 +
            (C1791 - C1790 + C1793 - C1792 + C1795 - C1794) * C31941) *
               C815 +
           ((C32266 * C130 - C1756 * C119 + C32255 * C367 - C1757 * C353 +
             C32233 * C377 - C1758 * C358) *
                C114 +
            (C32266 * C140 - C1756 * C131 + C32255 * C383 - C1757 * C368 +
             C32233 * C388 - C1758 * C378) *
                C31941) *
               C32219) *
              C31918 * C31904 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C32266 * C122 - C1756 * C115 + C32255 * C359 - C1757 * C349 +
             C32233 * C369 - C1758 * C354) *
                C114 +
            (C32266 * C136 - C1756 * C123 + C32255 * C379 - C1757 * C360 +
             C32233 * C384 - C1758 * C370) *
                C31941) *
               C814 +
           ((C1760 - C1761 + C1762 - C1763 + C1764 - C1765) * C114 +
            (C1766 - C1767 + C1768 - C1769 + C1770 - C1771) * C31941) *
               C815 +
           C1808 * C32219) *
              C31918 * C240 +
          (((C1756 * C244 - C32266 * C254 + C1757 * C681 - C32255 * C686 +
             C1758 * C1118 - C32233 * C1130) *
                C114 +
            (C1756 * C255 - C32266 * C274 + C1757 * C687 - C32255 * C696 +
             C1758 * C1131 - C32233 * C1145) *
                C31941) *
               C814 +
           ((C1756 * C245 - C32266 * C256 + C1757 * C682 - C32255 * C688 +
             C1758 * C1120 - C32233 * C1134) *
                C114 +
            (C1756 * C257 - C32266 * C275 + C1757 * C689 - C32255 * C697 +
             C1758 * C1135 - C32233 * C1147) *
                C31941) *
               C815 +
           ((C1756 * C246 - C32266 * C258 + C1757 * C683 - C32255 * C690 +
             C1758 * C1122 - C32233 * C1138) *
                C114 +
            (C1756 * C259 - C32266 * C276 + C1757 * C691 - C32255 * C698 +
             C1758 * C1139 - C32233 * C1149) *
                C31941) *
               C32219) *
              C31918 * C241 +
          (((C32266 * C264 - C1756 * C249 + C32255 * C1124 - C1757 * C1115 +
             C32233 * C1132 - C1758 * C1119) *
                C114 +
            (C32266 * C279 - C1756 * C265 + C32255 * C1142 - C1757 * C1125 +
             C32233 * C1146 - C1758 * C1133) *
                C31941) *
               C814 +
           ((C32266 * C266 - C1756 * C250 + C32255 * C1126 - C1757 * C1116 +
             C32233 * C1136 - C1758 * C1121) *
                C114 +
            (C32266 * C280 - C1756 * C267 + C32255 * C1143 - C1757 * C1127 +
             C32233 * C1148 - C1758 * C1137) *
                C31941) *
               C815 +
           ((C32266 * C268 - C1756 * C251 + C32255 * C1128 - C1757 * C1117 +
             C32233 * C1140 - C1758 * C1123) *
                C114 +
            (C32266 * C281 - C1756 * C269 + C32255 * C1144 - C1757 * C1129 +
             C32233 * C1150 - C1758 * C1141) *
                C31941) *
               C32219) *
              C31918 * C242) *
         C31892) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C32266 * C122 - C1756 * C115 + C32255 * C359 - C1757 * C349 +
             C32233 * C369 - C1758 * C354) *
                C114 +
            (C32266 * C136 - C1756 * C123 + C32255 * C379 - C1757 * C360 +
             C32233 * C384 - C1758 * C370) *
                C31941) *
               C814 +
           ((C1760 - C1761 + C1762 - C1763 + C1764 - C1765) * C114 +
            (C1766 - C1767 + C1768 - C1769 + C1770 - C1771) * C31941) *
               C815 +
           C1808 * C32219) *
              C346 +
          (((C1756 * C349 - C32266 * C359 + C1757 * C354 - C32255 * C369 +
             C1758 * C2028 - C32233 * C2034) *
                C114 +
            (C1756 * C360 - C32266 * C379 + C1757 * C370 - C32255 * C384 +
             C1758 * C2035 - C32233 * C2046) *
                C31941) *
               C814 +
           ((C1756 * C350 - C32266 * C361 + C1757 * C355 - C32255 * C371 +
             C1758 * C2029 - C32233 * C2036) *
                C114 +
            (C1756 * C362 - C32266 * C380 + C1757 * C372 - C32255 * C385 +
             C1758 * C2037 - C32233 * C2047) *
                C31941) *
               C815 +
           ((C1756 * C351 - C32266 * C363 + C1757 * C356 - C32255 * C373 +
             C1758 * C2030 - C32233 * C2038) *
                C114 +
            (C1756 * C364 - C32266 * C381 + C1757 * C374 - C32255 * C386 +
             C1758 * C2039 - C32233 * C2048) *
                C31941) *
               C32219) *
              C347 +
          (((C32266 * C369 - C1756 * C354 + C32255 * C2034 - C1757 * C2028 +
             C32233 * C2040 - C1758 * C2031) *
                C114 +
            (C32266 * C384 - C1756 * C370 + C32255 * C2046 - C1757 * C2035 +
             C32233 * C2049 - C1758 * C2041) *
                C31941) *
               C814 +
           ((C32266 * C371 - C1756 * C355 + C32255 * C2036 - C1757 * C2029 +
             C32233 * C2042 - C1758 * C2032) *
                C114 +
            (C32266 * C385 - C1756 * C372 + C32255 * C2047 - C1757 * C2037 +
             C32233 * C2050 - C1758 * C2043) *
                C31941) *
               C815 +
           ((C32266 * C373 - C1756 * C356 + C32255 * C2038 - C1757 * C2030 +
             C32233 * C2044 - C1758 * C2033) *
                C114 +
            (C32266 * C386 - C1756 * C374 + C32255 * C2048 - C1757 * C2039 +
             C32233 * C2051 - C1758 * C2045) *
                C31941) *
               C32219) *
              C348) *
         C31904 * C31892) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C31958 * C122 - C113 * C115) * C5281 +
            (C31958 * C136 - C113 * C123) * C5275 + (C982 - C983) * C5282 +
            (C984 - C985) * C5276 + C1004 * C5283 + C1005 * C32230) *
               C32262 +
           ((C144 - C145) * C5281 + (C146 - C147) * C5275 + C1302 * C5282 +
            C1303 * C5276 + C990 * C5283 + C991 * C32230) *
               C32249 +
           C5295 * C32219) *
              C31918 * C31904 * C110 +
          (((C145 - C144) * C5281 + (C147 - C146) * C5275 + C1304 * C5282 +
            C1305 * C5276 + C1306 * C5283 + C1307 * C32230) *
               C32262 +
           ((C149 - C148) * C5281 + (C151 - C150) * C5275 + C1308 * C5282 +
            C1309 * C5276 + C1310 * C5283 + C1311 * C32230) *
               C32249 +
           ((C153 - C152) * C5281 + (C155 - C154) * C5275 + C3007 * C5282 +
            C3008 * C5276 + (C833 - C834) * C5283 + (C835 - C836) * C32230) *
               C32219) *
              C31918 * C31904 * C111 +
          (C5295 * C32262 +
           (C166 * C5281 + C167 * C5275 + C2671 * C5282 + C2672 * C5276 +
            (C834 - C833) * C5283 + (C836 - C835) * C32230) *
               C32249 +
           (C168 * C5281 + C169 * C5275 + (C493 - C492) * C5282 +
            (C495 - C494) * C5276 + (C31958 * C272 - C113 * C253) * C5283 +
            (C31958 * C283 - C113 * C273) * C32230) *
               C32219) *
              C31918 * C31904 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C31958 * C122 - C113 * C115) * C5281 +
            (C31958 * C136 - C113 * C123) * C5275 + (C982 - C983) * C5282 +
            (C984 - C985) * C5276 + C1004 * C5283 + C1005 * C32230) *
               C32262 +
           ((C144 - C145) * C5281 + (C146 - C147) * C5275 + C1302 * C5282 +
            C1303 * C5276 + C990 * C5283 + C991 * C32230) *
               C32249 +
           C5295 * C32219) *
              C31918 * C240 +
          (((C983 - C982) * C5281 + (C985 - C984) * C5275 +
            (C987 - C986) * C5282 + (C989 - C988) * C5276 +
            (C992 - C993) * C5283 + (C994 - C995) * C32230) *
               C32262 +
           (C1304 * C5281 + C1305 * C5275 + C1306 * C5282 + C1307 * C5276 +
            (C996 - C997) * C5283 + (C998 - C999) * C32230) *
               C32249 +
           (C1308 * C5281 + C1309 * C5275 + C1310 * C5282 + C1311 * C5276 +
            (C1000 - C1001) * C5283 + (C1002 - C1003) * C32230) *
               C32219) *
              C31918 * C241 +
          ((C1004 * C5281 + C1005 * C5275 + (C993 - C992) * C5282 +
            (C995 - C994) * C5276 + (C31958 * C969 - C113 * C960) * C5283 +
            (C31958 * C978 - C113 * C970) * C32230) *
               C32262 +
           (C990 * C5281 + C991 * C5275 + (C997 - C996) * C5282 +
            (C999 - C998) * C5276 + (C31958 * C971 - C113 * C961) * C5283 +
            (C31958 * C979 - C113 * C972) * C32230) *
               C32249 +
           (C840 * C5281 + C841 * C5275 + (C1001 - C1000) * C5282 +
            (C1003 - C1002) * C5276 + (C31958 * C973 - C113 * C962) * C5283 +
            (C31958 * C980 - C113 * C974) * C32230) *
               C32219) *
              C31918 * C242) *
         C31892) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C31958 * C122 - C113 * C115) * C5281 +
            (C31958 * C136 - C113 * C123) * C5275 + (C982 - C983) * C5282 +
            (C984 - C985) * C5276 + C1004 * C5283 + C1005 * C32230) *
               C32262 +
           ((C144 - C145) * C5281 + (C146 - C147) * C5275 + C1302 * C5282 +
            C1303 * C5276 + C990 * C5283 + C991 * C32230) *
               C32249 +
           C5295 * C32219) *
              C346 +
          (((C113 * C349 - C31958 * C359) * C5281 +
            (C113 * C360 - C31958 * C379) * C5275 + (C1636 - C1637) * C5282 +
            (C1638 - C1639) * C5276 + (C1640 - C1641) * C5283 +
            (C1642 - C1643) * C32230) *
               C32262 +
           ((C584 - C585) * C5281 + (C586 - C587) * C5275 +
            (C1462 - C1463) * C5282 + (C1464 - C1465) * C5276 +
            (C1466 - C1467) * C5283 + (C1468 - C1469) * C32230) *
               C32249 +
           ((C588 - C589) * C5281 + (C590 - C591) * C5275 +
            (C1470 - C1471) * C5282 + (C1472 - C1473) * C5276 +
            (C1474 - C1475) * C5283 + (C1476 - C1477) * C32230) *
               C32219) *
              C347 +
          (((C31958 * C369 - C113 * C354) * C5281 +
            (C31958 * C384 - C113 * C370) * C5275 +
            (C31958 * C1130 - C113 * C1118) * C5282 +
            (C31958 * C1145 - C113 * C1131) * C5276 +
            (C31958 * C1132 - C113 * C1119) * C5283 +
            (C31958 * C1146 - C113 * C1133) * C32230) *
               C32262 +
           ((C31958 * C371 - C113 * C355) * C5281 +
            (C31958 * C385 - C113 * C372) * C5275 +
            (C31958 * C1134 - C113 * C1120) * C5282 +
            (C31958 * C1147 - C113 * C1135) * C5276 +
            (C31958 * C1136 - C113 * C1121) * C5283 +
            (C31958 * C1148 - C113 * C1137) * C32230) *
               C32249 +
           ((C31958 * C373 - C113 * C356) * C5281 +
            (C31958 * C386 - C113 * C374) * C5275 +
            (C31958 * C1138 - C113 * C1122) * C5282 +
            (C31958 * C1149 - C113 * C1139) * C5276 +
            (C31958 * C1140 - C113 * C1123) * C5283 +
            (C31958 * C1150 - C113 * C1141) * C32230) *
               C32219) *
              C348) *
         C31904 * C31892) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C31958 * C122 - C113 * C115) * C6021 +
           (C31958 * C136 - C113 * C123) * C6015 + (C982 - C983) * C6022 +
           (C984 - C985) * C6016 + C1004 * C6023 + C1005 * C6017 +
           (C993 - C992) * C6024 + (C995 - C994) * C6018 +
           (C31958 * C969 - C113 * C960) * C6025 +
           (C31958 * C978 - C113 * C970) * C6019) *
              C31859 * C31918 * C31904 * C110 +
          ((C145 - C144) * C6021 + (C147 - C146) * C6015 + C1304 * C6022 +
           C1305 * C6016 + C1306 * C6023 + C1307 * C6017 +
           (C996 - C997) * C6024 + (C998 - C999) * C6018 +
           (C113 * C961 - C31958 * C971) * C6025 +
           (C113 * C972 - C31958 * C979) * C6019) *
              C31859 * C31918 * C31904 * C111 +
          (C164 * C6021 + C165 * C6015 + C827 * C6022 + C828 * C6016 +
           C840 * C6023 + C841 * C6017 + (C1001 - C1000) * C6024 +
           (C1003 - C1002) * C6018 + (C31958 * C973 - C113 * C962) * C6025 +
           (C31958 * C980 - C113 * C974) * C6019) *
              C31859 * C31918 * C31904 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C31958 * C122 - C113 * C115) * C6021 +
           (C31958 * C136 - C113 * C123) * C6015 + (C982 - C983) * C6022 +
           (C984 - C985) * C6016 + C1004 * C6023 + C1005 * C6017 +
           C6097 * C6024 + C6098 * C6018 + C6107 * C6025 + C6108 * C6019) *
              C31859 * C31918 * C240 +
          ((C983 - C982) * C6021 + (C985 - C984) * C6015 +
           (C987 - C986) * C6022 + (C989 - C988) * C6016 +
           (C992 - C993) * C6023 + (C994 - C995) * C6017 +
           (C6100 - C6099) * C6024 + (C6102 - C6101) * C6018 +
           (C6103 - C6104) * C6025 + (C6105 - C6106) * C6019) *
              C31859 * C31918 * C241 +
          (C1004 * C6021 + C1005 * C6015 + C6097 * C6022 + C6098 * C6016 +
           C6107 * C6023 + C6108 * C6017 + (C6104 - C6103) * C6024 +
           (C6106 - C6105) * C6018 + (C31958 * C6092 - C113 * C6089) * C6025 +
           (C31958 * C6095 - C113 * C6093) * C6019) *
              C31859 * C31918 * C242) *
         C31892) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C31958 * C122 - C113 * C115) * C6021 +
           (C31958 * C136 - C113 * C123) * C6015 + (C982 - C983) * C6022 +
           (C984 - C985) * C6016 + C1004 * C6023 + C1005 * C6017 +
           C6097 * C6024 + C6098 * C6018 + C6107 * C6025 + C6108 * C6019) *
              C31859 * C346 +
          ((C113 * C349 - C31958 * C359) * C6021 +
           (C113 * C360 - C31958 * C379) * C6015 + (C1636 - C1637) * C6022 +
           (C1638 - C1639) * C6016 + (C1640 - C1641) * C6023 +
           (C1642 - C1643) * C6017 + (C113 * C1623 - C31958 * C1626) * C6024 +
           (C113 * C1627 - C31958 * C1632) * C6018 +
           (C113 * C6170 - C31958 * C6173) * C6025 +
           (C113 * C6174 - C31958 * C6179) * C6019) *
              C31859 * C347 +
          ((C31958 * C369 - C113 * C354) * C6021 +
           (C31958 * C384 - C113 * C370) * C6015 +
           (C31958 * C1130 - C113 * C1118) * C6022 +
           (C31958 * C1145 - C113 * C1131) * C6016 +
           (C31958 * C1132 - C113 * C1119) * C6023 +
           (C31958 * C1146 - C113 * C1133) * C6017 +
           (C31958 * C6175 - C113 * C6171) * C6024 +
           (C31958 * C6180 - C113 * C6176) * C6018 +
           (C31958 * C6177 - C113 * C6172) * C6025 +
           (C31958 * C6181 - C113 * C6178) * C6019) *
              C31859 * C348) *
         C31904 * C31892) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C32266 * C122 - C1756 * C115 + C32255 * C359 - C1757 * C349 +
            C32233 * C369 - C1758 * C354) *
               C5281 +
           (C32266 * C136 - C1756 * C123 + C32255 * C379 - C1757 * C360 +
            C32233 * C384 - C1758 * C370) *
               C5275 +
           (C32266 * C254 - C1756 * C244 + C32255 * C686 - C1757 * C681 +
            C32233 * C1130 - C1758 * C1118) *
               C5282 +
           (C32266 * C274 - C1756 * C255 + C32255 * C696 - C1757 * C687 +
            C32233 * C1145 - C1758 * C1131) *
               C5276 +
           (C32266 * C264 - C1756 * C249 + C32255 * C1124 - C1757 * C1115 +
            C32233 * C1132 - C1758 * C1119) *
               C5283 +
           (C32266 * C279 - C1756 * C265 + C32255 * C1142 - C1757 * C1125 +
            C32233 * C1146 - C1758 * C1133) *
               C32230) *
              C31859 * C31918 * C31904 * C110 +
          ((C1761 - C1760 + C1763 - C1762 + C1765 - C1764) * C5281 +
           (C1767 - C1766 + C1769 - C1768 + C1771 - C1770) * C5275 +
           (C2203 - C2204 + C2205 - C2206 + C2207 - C2208) * C5282 +
           (C2209 - C2210 + C2211 - C2212 + C2213 - C2214) * C5276 +
           (C1756 * C250 - C32266 * C266 + C1757 * C1116 - C32255 * C1126 +
            C1758 * C1121 - C32233 * C1136) *
               C5283 +
           (C1756 * C267 - C32266 * C280 + C1757 * C1127 - C32255 * C1143 +
            C1758 * C1137 - C32233 * C1148) *
               C32230) *
              C31859 * C31918 * C31904 * C111 +
          (C1804 * C5281 + C1805 * C5275 +
           (C2216 - C2215 + C2218 - C2217 + C2220 - C2219) * C5282 +
           (C2222 - C2221 + C2224 - C2223 + C2226 - C2225) * C5276 +
           (C32266 * C268 - C1756 * C251 + C32255 * C1128 - C1757 * C1117 +
            C32233 * C1140 - C1758 * C1123) *
               C5283 +
           (C32266 * C281 - C1756 * C269 + C32255 * C1144 - C1757 * C1129 +
            C32233 * C1150 - C1758 * C1141) *
               C32230) *
              C31859 * C31918 * C31904 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C32266 * C122 - C1756 * C115 + C32255 * C359 - C1757 * C349 +
            C32233 * C369 - C1758 * C354) *
               C5281 +
           (C32266 * C136 - C1756 * C123 + C32255 * C379 - C1757 * C360 +
            C32233 * C384 - C1758 * C370) *
               C5275 +
           (C6673 - C6674 + C6675 - C6676 + C6677 - C6678) * C5282 +
           (C6679 - C6680 + C6681 - C6682 + C6683 - C6684) * C5276 +
           C6717 * C5283 + C6718 * C32230) *
              C31859 * C31918 * C240 +
          ((C6674 - C6673 + C6676 - C6675 + C6678 - C6677) * C5281 +
           (C6680 - C6679 + C6682 - C6681 + C6684 - C6683) * C5275 +
           (C6686 - C6685 + C6688 - C6687 + C6690 - C6689) * C5282 +
           (C6692 - C6691 + C6694 - C6693 + C6696 - C6695) * C5276 +
           (C6697 - C6698 + C6699 - C6700 + C6701 - C6702) * C5283 +
           (C6703 - C6704 + C6705 - C6706 + C6707 - C6708) * C32230) *
              C31859 * C31918 * C241 +
          (C6717 * C5281 + C6718 * C5275 +
           (C6698 - C6697 + C6700 - C6699 + C6702 - C6701) * C5282 +
           (C6704 - C6703 + C6706 - C6705 + C6708 - C6707) * C5276 +
           (C32266 * C969 - C1756 * C960 + C32255 * C6173 - C1757 * C6170 +
            C32233 * C6177 - C1758 * C6172) *
               C5283 +
           (C32266 * C978 - C1756 * C970 + C32255 * C6179 - C1757 * C6174 +
            C32233 * C6181 - C1758 * C6178) *
               C32230) *
              C31859 * C31918 * C242) *
         C31892) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C32266 * C122 - C1756 * C115 + C32255 * C359 - C1757 * C349 +
            C32233 * C369 - C1758 * C354) *
               C5281 +
           (C32266 * C136 - C1756 * C123 + C32255 * C379 - C1757 * C360 +
            C32233 * C384 - C1758 * C370) *
               C5275 +
           (C6673 - C6674 + C6675 - C6676 + C6677 - C6678) * C5282 +
           (C6679 - C6680 + C6681 - C6682 + C6683 - C6684) * C5276 +
           C6717 * C5283 + C6718 * C32230) *
              C31859 * C346 +
          ((C1756 * C349 - C32266 * C359 + C1757 * C354 - C32255 * C369 +
            C1758 * C2028 - C32233 * C2034) *
               C5281 +
           (C1756 * C360 - C32266 * C379 + C1757 * C370 - C32255 * C384 +
            C1758 * C2035 - C32233 * C2046) *
               C5275 +
           (C1756 * C681 - C32266 * C686 + C1757 * C1118 - C32255 * C1130 +
            C1758 * C2546 - C32233 * C2549) *
               C5282 +
           (C1756 * C687 - C32266 * C696 + C1757 * C1131 - C32255 * C1145 +
            C1758 * C2550 - C32233 * C2555) *
               C5276 +
           (C1756 * C1115 - C32266 * C1124 + C1757 * C1119 - C32255 * C1132 +
            C1758 * C6828 - C32233 * C6831) *
               C5283 +
           (C1756 * C1125 - C32266 * C1142 + C1757 * C1133 - C32255 * C1146 +
            C1758 * C6832 - C32233 * C6837) *
               C32230) *
              C31859 * C347 +
          ((C32266 * C369 - C1756 * C354 + C32255 * C2034 - C1757 * C2028 +
            C32233 * C2040 - C1758 * C2031) *
               C5281 +
           (C32266 * C384 - C1756 * C370 + C32255 * C2046 - C1757 * C2035 +
            C32233 * C2049 - C1758 * C2041) *
               C5275 +
           (C32266 * C1130 - C1756 * C1118 + C32255 * C2549 - C1757 * C2546 +
            C32233 * C6833 - C1758 * C6829) *
               C5282 +
           (C32266 * C1145 - C1756 * C1131 + C32255 * C2555 - C1757 * C2550 +
            C32233 * C6838 - C1758 * C6834) *
               C5276 +
           (C32266 * C1132 - C1756 * C1119 + C32255 * C6831 - C1757 * C6828 +
            C32233 * C6835 - C1758 * C6830) *
               C5283 +
           (C32266 * C1146 - C1756 * C1133 + C32255 * C6837 - C1757 * C6832 +
            C32233 * C6839 - C1758 * C6836) *
               C32230) *
              C31859 * C348) *
         C31904 * C31892) /
            (p * q * std::sqrt(p + q));
    d2ee[113] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C31958 * C122 - C113 * C115) * C817 +
             (C31958 * C136 - C113 * C123) * C32265 + (C982 - C983) * C818 +
             (C984 - C985) * C32253 + C1004 * C819 + C1005 * C32230) *
                C814 +
            ((C144 - C145) * C817 + (C146 - C147) * C32265 + C1302 * C818 +
             C1303 * C32253 + C990 * C819 + C991 * C32230) *
                C815 +
            C847 * C32219) *
               C577 +
           (((C113 * C349 - C31958 * C359) * C817 +
             (C113 * C360 - C31958 * C379) * C32265 +
             (C113 * C681 - C31958 * C686) * C818 +
             (C113 * C687 - C31958 * C696) * C32253 +
             (C113 * C1115 - C31958 * C1124) * C819 +
             (C113 * C1125 - C31958 * C1142) * C32230) *
                C814 +
            ((C584 - C585) * C817 + (C586 - C587) * C32265 +
             (C1462 - C1463) * C818 + (C1464 - C1465) * C32253 +
             (C1466 - C1467) * C819 + (C1468 - C1469) * C32230) *
                C815 +
            ((C588 - C589) * C817 + (C590 - C591) * C32265 +
             (C1470 - C1471) * C818 + (C1472 - C1473) * C32253 +
             (C1474 - C1475) * C819 + (C1476 - C1477) * C32230) *
                C32219) *
               C578) *
              C31904 * C473 +
          ((((C145 - C144) * C817 + (C147 - C146) * C32265 + C1304 * C818 +
             C1305 * C32253 + C1306 * C819 + C1307 * C32230) *
                C814 +
            ((C149 - C148) * C817 + (C151 - C150) * C32265 + C1308 * C818 +
             C1309 * C32253 + C1310 * C819 + C1311 * C32230) *
                C815 +
            ((C153 - C152) * C817 + (C155 - C154) * C32265 +
             (C488 - C489) * C818 + (C490 - C491) * C32253 +
             (C833 - C834) * C819 + (C835 - C836) * C32230) *
                C32219) *
               C577 +
           (((C585 - C584) * C817 + (C587 - C586) * C32265 +
             (C1463 - C1462) * C818 + (C1465 - C1464) * C32253 +
             (C1467 - C1466) * C819 + (C1469 - C1468) * C32230) *
                C814 +
            ((C589 - C588) * C817 + (C591 - C590) * C32265 +
             (C1471 - C1470) * C818 + (C1473 - C1472) * C32253 +
             (C1475 - C1474) * C819 + (C1477 - C1476) * C32230) *
                C815 +
            ((C593 - C592) * C817 + (C595 - C594) * C32265 +
             (C31958 * C692 - C113 * C684) * C818 +
             (C31958 * C699 - C113 * C693) * C32253 +
             (C31958 * C1458 - C113 * C1457) * C819 +
             (C31958 * C1460 - C113 * C1459) * C32230) *
                C32219) *
               C578) *
              C31904 * C474)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C31958 * C122 - C113 * C115) * C114 +
             (C31958 * C136 - C113 * C123) * C31941) *
                C103 +
            ((C144 - C145) * C114 + (C146 - C147) * C31941) * C104 +
            C176 * C105 + C177 * C106 + C178 * C107) *
               C577 +
           (((C113 * C349 - C31958 * C359) * C114 +
             (C113 * C360 - C31958 * C379) * C31941) *
                C103 +
            ((C584 - C585) * C114 + (C586 - C587) * C31941) * C104 +
            ((C588 - C589) * C114 + (C590 - C591) * C31941) * C105 +
            ((C592 - C593) * C114 + (C594 - C595) * C31941) * C106 +
            ((C596 - C597) * C114 + (C598 - C599) * C31941) * C107) *
               C578) *
              C31904 * C473 +
          ((((C145 - C144) * C114 + (C147 - C146) * C31941) * C103 +
            ((C149 - C148) * C114 + (C151 - C150) * C31941) * C104 +
            ((C153 - C152) * C114 + (C155 - C154) * C31941) * C105 +
            ((C157 - C156) * C114 + (C159 - C158) * C31941) * C106 +
            ((C160 - C161) * C114 + (C162 - C163) * C31941) * C107) *
               C577 +
           (((C585 - C584) * C114 + (C587 - C586) * C31941) * C103 +
            ((C589 - C588) * C114 + (C591 - C590) * C31941) * C104 +
            ((C593 - C592) * C114 + (C595 - C594) * C31941) * C105 +
            ((C597 - C596) * C114 + (C599 - C598) * C31941) * C106 +
            ((C31958 * C580 - C113 * C579) * C114 +
             (C31958 * C582 - C113 * C581) * C31941) *
                C107) *
               C578) *
              C31904 * C474)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C32266 * C122 - C1756 * C115 + C32255 * C359 - C1757 * C349 +
              C32233 * C369 - C1758 * C354) *
                 C114 +
             (C32266 * C136 - C1756 * C123 + C32255 * C379 - C1757 * C360 +
              C32233 * C384 - C1758 * C370) *
                 C31941) *
                C814 +
            ((C1760 - C1761 + C1762 - C1763 + C1764 - C1765) * C114 +
             (C1766 - C1767 + C1768 - C1769 + C1770 - C1771) * C31941) *
                C815 +
            C1808 * C32219) *
               C577 +
           (((C1756 * C349 - C32266 * C359 + C1757 * C354 - C32255 * C369 +
              C1758 * C2028 - C32233 * C2034) *
                 C114 +
             (C1756 * C360 - C32266 * C379 + C1757 * C370 - C32255 * C384 +
              C1758 * C2035 - C32233 * C2046) *
                 C31941) *
                C814 +
            ((C2377 - C2378 + C2379 - C2380 + C2381 - C2382) * C114 +
             (C2383 - C2384 + C2385 - C2386 + C2387 - C2388) * C31941) *
                C815 +
            ((C2389 - C2390 + C2391 - C2392 + C2393 - C2394) * C114 +
             (C2395 - C2396 + C2397 - C2398 + C2399 - C2400) * C31941) *
                C32219) *
               C578) *
              C31904 * C473 +
          ((((C1761 - C1760 + C1763 - C1762 + C1765 - C1764) * C114 +
             (C1767 - C1766 + C1769 - C1768 + C1771 - C1770) * C31941) *
                C814 +
            ((C1773 - C1772 + C1775 - C1774 + C1777 - C1776) * C114 +
             (C1779 - C1778 + C1781 - C1780 + C1783 - C1782) * C31941) *
                C815 +
            ((C1784 - C1785 + C1786 - C1787 + C1788 - C1789) * C114 +
             (C1790 - C1791 + C1792 - C1793 + C1794 - C1795) * C31941) *
                C32219) *
               C577 +
           (((C2378 - C2377 + C2380 - C2379 + C2382 - C2381) * C114 +
             (C2384 - C2383 + C2386 - C2385 + C2388 - C2387) * C31941) *
                C814 +
            ((C2390 - C2389 + C2392 - C2391 + C2394 - C2393) * C114 +
             (C2396 - C2395 + C2398 - C2397 + C2400 - C2399) * C31941) *
                C815 +
            ((C32266 * C365 - C1756 * C352 + C32255 * C375 - C1757 * C357 +
              C32233 * C2373 - C1758 * C2372) *
                 C114 +
             (C32266 * C382 - C1756 * C366 + C32255 * C387 - C1757 * C376 +
              C32233 * C2375 - C1758 * C2374) *
                 C31941) *
                C32219) *
               C578) *
              C31904 * C474)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C31958 * C122 - C113 * C115) * C5281 +
             (C31958 * C136 - C113 * C123) * C5275 + (C982 - C983) * C5282 +
             (C984 - C985) * C5276 + C1004 * C5283 + C1005 * C32230) *
                C32262 +
            ((C144 - C145) * C5281 + (C146 - C147) * C5275 + C1302 * C5282 +
             C1303 * C5276 + C990 * C5283 + C991 * C32230) *
                C32249 +
            C5295 * C32219) *
               C577 +
           (((C113 * C349 - C31958 * C359) * C5281 +
             (C113 * C360 - C31958 * C379) * C5275 + (C1636 - C1637) * C5282 +
             (C1638 - C1639) * C5276 + (C1640 - C1641) * C5283 +
             (C1642 - C1643) * C32230) *
                C32262 +
            ((C584 - C585) * C5281 + (C586 - C587) * C5275 +
             (C1462 - C1463) * C5282 + (C1464 - C1465) * C5276 +
             (C1466 - C1467) * C5283 + (C1468 - C1469) * C32230) *
                C32249 +
            ((C588 - C589) * C5281 + (C590 - C591) * C5275 +
             (C1470 - C1471) * C5282 + (C1472 - C1473) * C5276 +
             (C1474 - C1475) * C5283 + (C1476 - C1477) * C32230) *
                C32219) *
               C578) *
              C31904 * C473 +
          ((((C145 - C144) * C5281 + (C147 - C146) * C5275 + C1304 * C5282 +
             C1305 * C5276 + C1306 * C5283 + C1307 * C32230) *
                C32262 +
            ((C149 - C148) * C5281 + (C151 - C150) * C5275 + C1308 * C5282 +
             C1309 * C5276 + C1310 * C5283 + C1311 * C32230) *
                C32249 +
            ((C153 - C152) * C5281 + (C155 - C154) * C5275 + C3007 * C5282 +
             C3008 * C5276 + (C833 - C834) * C5283 + (C835 - C836) * C32230) *
                C32219) *
               C577 +
           (((C585 - C584) * C5281 + (C587 - C586) * C5275 +
             (C1463 - C1462) * C5282 + (C1465 - C1464) * C5276 +
             (C1467 - C1466) * C5283 + (C1469 - C1468) * C32230) *
                C32262 +
            ((C589 - C588) * C5281 + (C591 - C590) * C5275 +
             (C1471 - C1470) * C5282 + (C1473 - C1472) * C5276 +
             (C1475 - C1474) * C5283 + (C1477 - C1476) * C32230) *
                C32249 +
            ((C593 - C592) * C5281 + (C595 - C594) * C5275 +
             (C3140 - C3139) * C5282 + (C3142 - C3141) * C5276 +
             (C31958 * C1458 - C113 * C1457) * C5283 +
             (C31958 * C1460 - C113 * C1459) * C32230) *
                C32219) *
               C578) *
              C31904 * C474)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31958 * C122 - C113 * C115) * C6021 +
            (C31958 * C136 - C113 * C123) * C6015 + (C982 - C983) * C6022 +
            (C984 - C985) * C6016 + C1004 * C6023 + C1005 * C6017 +
            C6097 * C6024 + C6098 * C6018 + C6107 * C6025 + C6108 * C6019) *
               C31859 * C577 +
           ((C113 * C349 - C31958 * C359) * C6021 +
            (C113 * C360 - C31958 * C379) * C6015 + (C1636 - C1637) * C6022 +
            (C1638 - C1639) * C6016 + (C1640 - C1641) * C6023 +
            (C1642 - C1643) * C6017 + (C113 * C1623 - C31958 * C1626) * C6024 +
            (C113 * C1627 - C31958 * C1632) * C6018 +
            (C113 * C6170 - C31958 * C6173) * C6025 +
            (C113 * C6174 - C31958 * C6179) * C6019) *
               C31859 * C578) *
              C31904 * C473 +
          (((C145 - C144) * C6021 + (C147 - C146) * C6015 + C1304 * C6022 +
            C1305 * C6016 + C1306 * C6023 + C1307 * C6017 +
            (C996 - C997) * C6024 + (C998 - C999) * C6018 +
            (C6269 - C6270) * C6025 + (C6271 - C6272) * C6019) *
               C31859 * C577 +
           ((C585 - C584) * C6021 + (C587 - C586) * C6015 +
            (C1463 - C1462) * C6022 + (C1465 - C1464) * C6016 +
            (C1467 - C1466) * C6023 + (C1469 - C1468) * C6017 +
            (C31958 * C1628 - C113 * C1624) * C6024 +
            (C31958 * C1633 - C113 * C1629) * C6018 +
            (C31958 * C6355 - C113 * C6354) * C6025 +
            (C31958 * C6357 - C113 * C6356) * C6019) *
               C31859 * C578) *
              C31904 * C474)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C32266 * C122 - C1756 * C115 + C32255 * C359 - C1757 * C349 +
             C32233 * C369 - C1758 * C354) *
                C5281 +
            (C32266 * C136 - C1756 * C123 + C32255 * C379 - C1757 * C360 +
             C32233 * C384 - C1758 * C370) *
                C5275 +
            (C6673 - C6674 + C6675 - C6676 + C6677 - C6678) * C5282 +
            (C6679 - C6680 + C6681 - C6682 + C6683 - C6684) * C5276 +
            C6717 * C5283 + C6718 * C32230) *
               C31859 * C577 +
           ((C1756 * C349 - C32266 * C359 + C1757 * C354 - C32255 * C369 +
             C1758 * C2028 - C32233 * C2034) *
                C5281 +
            (C1756 * C360 - C32266 * C379 + C1757 * C370 - C32255 * C384 +
             C1758 * C2035 - C32233 * C2046) *
                C5275 +
            (C1756 * C681 - C32266 * C686 + C1757 * C1118 - C32255 * C1130 +
             C1758 * C2546 - C32233 * C2549) *
                C5282 +
            (C1756 * C687 - C32266 * C696 + C1757 * C1131 - C32255 * C1145 +
             C1758 * C2550 - C32233 * C2555) *
                C5276 +
            (C1756 * C1115 - C32266 * C1124 + C1757 * C1119 - C32255 * C1132 +
             C1758 * C6828 - C32233 * C6831) *
                C5283 +
            (C1756 * C1125 - C32266 * C1142 + C1757 * C1133 - C32255 * C1146 +
             C1758 * C6832 - C32233 * C6837) *
                C32230) *
               C31859 * C578) *
              C31904 * C473 +
          (((C1761 - C1760 + C1763 - C1762 + C1765 - C1764) * C5281 +
            (C1767 - C1766 + C1769 - C1768 + C1771 - C1770) * C5275 +
            (C2203 - C2204 + C2205 - C2206 + C2207 - C2208) * C5282 +
            (C2209 - C2210 + C2211 - C2212 + C2213 - C2214) * C5276 +
            (C6991 - C6992 + C6993 - C6994 + C6995 - C6996) * C5283 +
            (C6997 - C6998 + C6999 - C7000 + C7001 - C7002) * C32230) *
               C31859 * C577 +
           ((C2378 - C2377 + C2380 - C2379 + C2382 - C2381) * C5281 +
            (C2384 - C2383 + C2386 - C2385 + C2388 - C2387) * C5275 +
            (C32266 * C688 - C1756 * C682 + C32255 * C1134 - C1757 * C1120 +
             C32233 * C2551 - C1758 * C2547) *
                C5282 +
            (C32266 * C697 - C1756 * C689 + C32255 * C1147 - C1757 * C1135 +
             C32233 * C2556 - C1758 * C2552) *
                C5276 +
            (C32266 * C1126 - C1756 * C1116 + C32255 * C1136 - C1757 * C1121 +
             C32233 * C7149 - C1758 * C7148) *
                C5283 +
            (C32266 * C1143 - C1756 * C1127 + C32255 * C1148 - C1757 * C1137 +
             C32233 * C7151 - C1758 * C7150) *
                C32230) *
               C31859 * C578) *
              C31904 * C474)) /
            (p * q * std::sqrt(p + q));
    d2ee[114] +=
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C31958 * C122 - C113 * C115) * C114 +
            (C31958 * C136 - C113 * C123) * C31941) *
               C103 +
           ((C144 - C145) * C114 + (C146 - C147) * C31941) * C104 +
           C176 * C105 + C177 * C106 + C178 * C107) *
              C31918 * C240 +
          (((C113 * C244 - C31958 * C254) * C114 +
            (C113 * C255 - C31958 * C274) * C31941) *
               C103 +
           ((C113 * C245 - C31958 * C256) * C114 +
            (C113 * C257 - C31958 * C275) * C31941) *
               C104 +
           ((C113 * C246 - C31958 * C258) * C114 +
            (C113 * C259 - C31958 * C276) * C31941) *
               C105 +
           ((C113 * C247 - C31958 * C260) * C114 +
            (C113 * C261 - C31958 * C277) * C31941) *
               C106 +
           ((C113 * C248 - C31958 * C262) * C114 +
            (C113 * C263 - C31958 * C278) * C31941) *
               C107) *
              C31918 * C241 +
          (((C31958 * C264 - C113 * C249) * C114 +
            (C31958 * C279 - C113 * C265) * C31941) *
               C103 +
           ((C31958 * C266 - C113 * C250) * C114 +
            (C31958 * C280 - C113 * C267) * C31941) *
               C104 +
           ((C31958 * C268 - C113 * C251) * C114 +
            (C31958 * C281 - C113 * C269) * C31941) *
               C105 +
           ((C31958 * C270 - C113 * C252) * C114 +
            (C31958 * C282 - C113 * C271) * C31941) *
               C106 +
           ((C31958 * C272 - C113 * C253) * C114 +
            (C31958 * C283 - C113 * C273) * C31941) *
               C107) *
              C31918 * C242) *
         C31892) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C31958 * C122 - C113 * C115) * C114 +
            (C31958 * C136 - C113 * C123) * C31941) *
               C103 +
           ((C144 - C145) * C114 + (C146 - C147) * C31941) * C104 +
           C176 * C105 + C177 * C106 + C178 * C107) *
              C31918 * C31904 * C110 +
          (((C145 - C144) * C114 + (C147 - C146) * C31941) * C103 +
           ((C149 - C148) * C114 + (C151 - C150) * C31941) * C104 +
           ((C153 - C152) * C114 + (C155 - C154) * C31941) * C105 +
           ((C157 - C156) * C114 + (C159 - C158) * C31941) * C106 +
           ((C160 - C161) * C114 + (C162 - C163) * C31941) * C107) *
              C31918 * C31904 * C111 +
          (C176 * C103 + C177 * C104 + C178 * C105 +
           ((C161 - C160) * C114 + (C163 - C162) * C31941) * C106 +
           ((C31958 * C134 - C113 * C121) * C114 +
            (C31958 * C142 - C113 * C135) * C31941) *
               C107) *
              C31918 * C31904 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C31958 * C122 - C113 * C115) * C817 +
            (C31958 * C136 - C113 * C123) * C32265 +
            (C31958 * C254 - C113 * C244) * C818 +
            (C31958 * C274 - C113 * C255) * C32253 +
            (C31958 * C264 - C113 * C249) * C819 +
            (C31958 * C279 - C113 * C265) * C32230) *
               C814 +
           ((C144 - C145) * C817 + (C146 - C147) * C32265 +
            (C481 - C480) * C818 + (C483 - C482) * C32253 +
            (C821 - C822) * C819 + (C823 - C824) * C32230) *
               C815 +
           C847 * C32219) *
              C31918 * C31904 * C110 +
          (((C145 - C144) * C817 + (C147 - C146) * C32265 +
            (C480 - C481) * C818 + (C482 - C483) * C32253 +
            (C822 - C821) * C819 + (C824 - C823) * C32230) *
               C814 +
           ((C149 - C148) * C817 + (C151 - C150) * C32265 +
            (C484 - C485) * C818 + (C486 - C487) * C32253 +
            (C830 - C829) * C819 + (C832 - C831) * C32230) *
               C815 +
           ((C153 - C152) * C817 + (C155 - C154) * C32265 +
            (C488 - C489) * C818 + (C490 - C491) * C32253 +
            (C833 - C834) * C819 + (C835 - C836) * C32230) *
               C32219) *
              C31918 * C31904 * C111 +
          (C847 * C814 +
           (C166 * C817 + C167 * C32265 + (C489 - C488) * C818 +
            (C491 - C490) * C32253 + (C834 - C833) * C819 +
            (C836 - C835) * C32230) *
               C815 +
           (C168 * C817 + C169 * C32265 + (C493 - C492) * C818 +
            (C495 - C494) * C32253 + (C31958 * C272 - C113 * C253) * C819 +
            (C31958 * C283 - C113 * C273) * C32230) *
               C32219) *
              C31918 * C31904 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C31958 * C122 - C113 * C115) * C817 +
            (C31958 * C136 - C113 * C123) * C32265 + (C982 - C983) * C818 +
            (C984 - C985) * C32253 + C1004 * C819 + C1005 * C32230) *
               C814 +
           ((C144 - C145) * C817 + (C146 - C147) * C32265 +
            (C481 - C480) * C818 + (C483 - C482) * C32253 + C990 * C819 +
            C991 * C32230) *
               C815 +
           C847 * C32219) *
              C31918 * C240 +
          (((C983 - C982) * C817 + (C985 - C984) * C32265 +
            (C987 - C986) * C818 + (C989 - C988) * C32253 +
            (C992 - C993) * C819 + (C994 - C995) * C32230) *
               C814 +
           ((C480 - C481) * C817 + (C482 - C483) * C32265 +
            (C822 - C821) * C818 + (C824 - C823) * C32253 +
            (C996 - C997) * C819 + (C998 - C999) * C32230) *
               C815 +
           ((C484 - C485) * C817 + (C486 - C487) * C32265 +
            (C830 - C829) * C818 + (C832 - C831) * C32253 +
            (C1000 - C1001) * C819 + (C1002 - C1003) * C32230) *
               C32219) *
              C31918 * C241 +
          ((C1004 * C817 + C1005 * C32265 + (C993 - C992) * C818 +
            (C995 - C994) * C32253 + (C31958 * C969 - C113 * C960) * C819 +
            (C31958 * C978 - C113 * C970) * C32230) *
               C814 +
           (C990 * C817 + C991 * C32265 + (C997 - C996) * C818 +
            (C999 - C998) * C32253 + (C31958 * C971 - C113 * C961) * C819 +
            (C31958 * C979 - C113 * C972) * C32230) *
               C815 +
           (C840 * C817 + C841 * C32265 + (C1001 - C1000) * C818 +
            (C1003 - C1002) * C32253 + (C31958 * C973 - C113 * C962) * C819 +
            (C31958 * C980 - C113 * C974) * C32230) *
               C32219) *
              C31918 * C242) *
         C31892) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C32266 * C122 - C1756 * C115 + C32255 * C359 - C1757 * C349 +
             C32233 * C369 - C1758 * C354) *
                C114 +
            (C32266 * C136 - C1756 * C123 + C32255 * C379 - C1757 * C360 +
             C32233 * C384 - C1758 * C370) *
                C31941) *
               C814 +
           ((C1760 - C1761 + C1762 - C1763 + C1764 - C1765) * C114 +
            (C1766 - C1767 + C1768 - C1769 + C1770 - C1771) * C31941) *
               C815 +
           C1808 * C32219) *
              C31918 * C31904 * C110 +
          (((C1761 - C1760 + C1763 - C1762 + C1765 - C1764) * C114 +
            (C1767 - C1766 + C1769 - C1768 + C1771 - C1770) * C31941) *
               C814 +
           ((C1773 - C1772 + C1775 - C1774 + C1777 - C1776) * C114 +
            (C1779 - C1778 + C1781 - C1780 + C1783 - C1782) * C31941) *
               C815 +
           ((C1784 - C1785 + C1786 - C1787 + C1788 - C1789) * C114 +
            (C1790 - C1791 + C1792 - C1793 + C1794 - C1795) * C31941) *
               C32219) *
              C31918 * C31904 * C111 +
          (C1808 * C814 +
           ((C1785 - C1784 + C1787 - C1786 + C1789 - C1788) * C114 +
            (C1791 - C1790 + C1793 - C1792 + C1795 - C1794) * C31941) *
               C815 +
           ((C32266 * C130 - C1756 * C119 + C32255 * C367 - C1757 * C353 +
             C32233 * C377 - C1758 * C358) *
                C114 +
            (C32266 * C140 - C1756 * C131 + C32255 * C383 - C1757 * C368 +
             C32233 * C388 - C1758 * C378) *
                C31941) *
               C32219) *
              C31918 * C31904 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C32266 * C122 - C1756 * C115 + C32255 * C359 - C1757 * C349 +
             C32233 * C369 - C1758 * C354) *
                C114 +
            (C32266 * C136 - C1756 * C123 + C32255 * C379 - C1757 * C360 +
             C32233 * C384 - C1758 * C370) *
                C31941) *
               C814 +
           ((C1760 - C1761 + C1762 - C1763 + C1764 - C1765) * C114 +
            (C1766 - C1767 + C1768 - C1769 + C1770 - C1771) * C31941) *
               C815 +
           C1808 * C32219) *
              C31918 * C240 +
          (((C1756 * C244 - C32266 * C254 + C1757 * C681 - C32255 * C686 +
             C1758 * C1118 - C32233 * C1130) *
                C114 +
            (C1756 * C255 - C32266 * C274 + C1757 * C687 - C32255 * C696 +
             C1758 * C1131 - C32233 * C1145) *
                C31941) *
               C814 +
           ((C1756 * C245 - C32266 * C256 + C1757 * C682 - C32255 * C688 +
             C1758 * C1120 - C32233 * C1134) *
                C114 +
            (C1756 * C257 - C32266 * C275 + C1757 * C689 - C32255 * C697 +
             C1758 * C1135 - C32233 * C1147) *
                C31941) *
               C815 +
           ((C1756 * C246 - C32266 * C258 + C1757 * C683 - C32255 * C690 +
             C1758 * C1122 - C32233 * C1138) *
                C114 +
            (C1756 * C259 - C32266 * C276 + C1757 * C691 - C32255 * C698 +
             C1758 * C1139 - C32233 * C1149) *
                C31941) *
               C32219) *
              C31918 * C241 +
          (((C32266 * C264 - C1756 * C249 + C32255 * C1124 - C1757 * C1115 +
             C32233 * C1132 - C1758 * C1119) *
                C114 +
            (C32266 * C279 - C1756 * C265 + C32255 * C1142 - C1757 * C1125 +
             C32233 * C1146 - C1758 * C1133) *
                C31941) *
               C814 +
           ((C32266 * C266 - C1756 * C250 + C32255 * C1126 - C1757 * C1116 +
             C32233 * C1136 - C1758 * C1121) *
                C114 +
            (C32266 * C280 - C1756 * C267 + C32255 * C1143 - C1757 * C1127 +
             C32233 * C1148 - C1758 * C1137) *
                C31941) *
               C815 +
           ((C32266 * C268 - C1756 * C251 + C32255 * C1128 - C1757 * C1117 +
             C32233 * C1140 - C1758 * C1123) *
                C114 +
            (C32266 * C281 - C1756 * C269 + C32255 * C1144 - C1757 * C1129 +
             C32233 * C1150 - C1758 * C1141) *
                C31941) *
               C32219) *
              C31918 * C242) *
         C31892) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C31958 * C122 - C113 * C115) * C5281 +
            (C31958 * C136 - C113 * C123) * C5275 + (C982 - C983) * C5282 +
            (C984 - C985) * C5276 + C1004 * C5283 + C1005 * C32230) *
               C32262 +
           ((C144 - C145) * C5281 + (C146 - C147) * C5275 + C1302 * C5282 +
            C1303 * C5276 + C990 * C5283 + C991 * C32230) *
               C32249 +
           C5295 * C32219) *
              C31918 * C31904 * C110 +
          (((C145 - C144) * C5281 + (C147 - C146) * C5275 + C1304 * C5282 +
            C1305 * C5276 + C1306 * C5283 + C1307 * C32230) *
               C32262 +
           ((C149 - C148) * C5281 + (C151 - C150) * C5275 + C1308 * C5282 +
            C1309 * C5276 + C1310 * C5283 + C1311 * C32230) *
               C32249 +
           ((C153 - C152) * C5281 + (C155 - C154) * C5275 + C3007 * C5282 +
            C3008 * C5276 + (C833 - C834) * C5283 + (C835 - C836) * C32230) *
               C32219) *
              C31918 * C31904 * C111 +
          (C5295 * C32262 +
           (C166 * C5281 + C167 * C5275 + C2671 * C5282 + C2672 * C5276 +
            (C834 - C833) * C5283 + (C836 - C835) * C32230) *
               C32249 +
           (C168 * C5281 + C169 * C5275 + (C493 - C492) * C5282 +
            (C495 - C494) * C5276 + (C31958 * C272 - C113 * C253) * C5283 +
            (C31958 * C283 - C113 * C273) * C32230) *
               C32219) *
              C31918 * C31904 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C31958 * C122 - C113 * C115) * C5281 +
            (C31958 * C136 - C113 * C123) * C5275 + (C982 - C983) * C5282 +
            (C984 - C985) * C5276 + C1004 * C5283 + C1005 * C32230) *
               C32262 +
           ((C144 - C145) * C5281 + (C146 - C147) * C5275 + C1302 * C5282 +
            C1303 * C5276 + C990 * C5283 + C991 * C32230) *
               C32249 +
           C5295 * C32219) *
              C31918 * C240 +
          (((C983 - C982) * C5281 + (C985 - C984) * C5275 +
            (C987 - C986) * C5282 + (C989 - C988) * C5276 +
            (C992 - C993) * C5283 + (C994 - C995) * C32230) *
               C32262 +
           (C1304 * C5281 + C1305 * C5275 + C1306 * C5282 + C1307 * C5276 +
            (C996 - C997) * C5283 + (C998 - C999) * C32230) *
               C32249 +
           (C1308 * C5281 + C1309 * C5275 + C1310 * C5282 + C1311 * C5276 +
            (C1000 - C1001) * C5283 + (C1002 - C1003) * C32230) *
               C32219) *
              C31918 * C241 +
          ((C1004 * C5281 + C1005 * C5275 + (C993 - C992) * C5282 +
            (C995 - C994) * C5276 + (C31958 * C969 - C113 * C960) * C5283 +
            (C31958 * C978 - C113 * C970) * C32230) *
               C32262 +
           (C990 * C5281 + C991 * C5275 + (C997 - C996) * C5282 +
            (C999 - C998) * C5276 + (C31958 * C971 - C113 * C961) * C5283 +
            (C31958 * C979 - C113 * C972) * C32230) *
               C32249 +
           (C840 * C5281 + C841 * C5275 + (C1001 - C1000) * C5282 +
            (C1003 - C1002) * C5276 + (C31958 * C973 - C113 * C962) * C5283 +
            (C31958 * C980 - C113 * C974) * C32230) *
               C32219) *
              C31918 * C242) *
         C31892) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C31958 * C122 - C113 * C115) * C6021 +
           (C31958 * C136 - C113 * C123) * C6015 + (C982 - C983) * C6022 +
           (C984 - C985) * C6016 + C1004 * C6023 + C1005 * C6017 +
           (C993 - C992) * C6024 + (C995 - C994) * C6018 +
           (C31958 * C969 - C113 * C960) * C6025 +
           (C31958 * C978 - C113 * C970) * C6019) *
              C31859 * C31918 * C31904 * C110 +
          ((C145 - C144) * C6021 + (C147 - C146) * C6015 + C1304 * C6022 +
           C1305 * C6016 + C1306 * C6023 + C1307 * C6017 +
           (C996 - C997) * C6024 + (C998 - C999) * C6018 +
           (C113 * C961 - C31958 * C971) * C6025 +
           (C113 * C972 - C31958 * C979) * C6019) *
              C31859 * C31918 * C31904 * C111 +
          (C164 * C6021 + C165 * C6015 + C827 * C6022 + C828 * C6016 +
           C840 * C6023 + C841 * C6017 + (C1001 - C1000) * C6024 +
           (C1003 - C1002) * C6018 + (C31958 * C973 - C113 * C962) * C6025 +
           (C31958 * C980 - C113 * C974) * C6019) *
              C31859 * C31918 * C31904 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C31958 * C122 - C113 * C115) * C6021 +
           (C31958 * C136 - C113 * C123) * C6015 + (C982 - C983) * C6022 +
           (C984 - C985) * C6016 + C1004 * C6023 + C1005 * C6017 +
           C6097 * C6024 + C6098 * C6018 + C6107 * C6025 + C6108 * C6019) *
              C31859 * C31918 * C240 +
          ((C983 - C982) * C6021 + (C985 - C984) * C6015 +
           (C987 - C986) * C6022 + (C989 - C988) * C6016 +
           (C992 - C993) * C6023 + (C994 - C995) * C6017 +
           (C6100 - C6099) * C6024 + (C6102 - C6101) * C6018 +
           (C6103 - C6104) * C6025 + (C6105 - C6106) * C6019) *
              C31859 * C31918 * C241 +
          (C1004 * C6021 + C1005 * C6015 + C6097 * C6022 + C6098 * C6016 +
           C6107 * C6023 + C6108 * C6017 + (C6104 - C6103) * C6024 +
           (C6106 - C6105) * C6018 + (C31958 * C6092 - C113 * C6089) * C6025 +
           (C31958 * C6095 - C113 * C6093) * C6019) *
              C31859 * C31918 * C242) *
         C31892) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C32266 * C122 - C1756 * C115 + C32255 * C359 - C1757 * C349 +
            C32233 * C369 - C1758 * C354) *
               C5281 +
           (C32266 * C136 - C1756 * C123 + C32255 * C379 - C1757 * C360 +
            C32233 * C384 - C1758 * C370) *
               C5275 +
           (C32266 * C254 - C1756 * C244 + C32255 * C686 - C1757 * C681 +
            C32233 * C1130 - C1758 * C1118) *
               C5282 +
           (C32266 * C274 - C1756 * C255 + C32255 * C696 - C1757 * C687 +
            C32233 * C1145 - C1758 * C1131) *
               C5276 +
           (C32266 * C264 - C1756 * C249 + C32255 * C1124 - C1757 * C1115 +
            C32233 * C1132 - C1758 * C1119) *
               C5283 +
           (C32266 * C279 - C1756 * C265 + C32255 * C1142 - C1757 * C1125 +
            C32233 * C1146 - C1758 * C1133) *
               C32230) *
              C31859 * C31918 * C31904 * C110 +
          ((C1761 - C1760 + C1763 - C1762 + C1765 - C1764) * C5281 +
           (C1767 - C1766 + C1769 - C1768 + C1771 - C1770) * C5275 +
           (C2203 - C2204 + C2205 - C2206 + C2207 - C2208) * C5282 +
           (C2209 - C2210 + C2211 - C2212 + C2213 - C2214) * C5276 +
           (C1756 * C250 - C32266 * C266 + C1757 * C1116 - C32255 * C1126 +
            C1758 * C1121 - C32233 * C1136) *
               C5283 +
           (C1756 * C267 - C32266 * C280 + C1757 * C1127 - C32255 * C1143 +
            C1758 * C1137 - C32233 * C1148) *
               C32230) *
              C31859 * C31918 * C31904 * C111 +
          (C1804 * C5281 + C1805 * C5275 +
           (C2216 - C2215 + C2218 - C2217 + C2220 - C2219) * C5282 +
           (C2222 - C2221 + C2224 - C2223 + C2226 - C2225) * C5276 +
           (C32266 * C268 - C1756 * C251 + C32255 * C1128 - C1757 * C1117 +
            C32233 * C1140 - C1758 * C1123) *
               C5283 +
           (C32266 * C281 - C1756 * C269 + C32255 * C1144 - C1757 * C1129 +
            C32233 * C1150 - C1758 * C1141) *
               C32230) *
              C31859 * C31918 * C31904 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C32266 * C122 - C1756 * C115 + C32255 * C359 - C1757 * C349 +
            C32233 * C369 - C1758 * C354) *
               C5281 +
           (C32266 * C136 - C1756 * C123 + C32255 * C379 - C1757 * C360 +
            C32233 * C384 - C1758 * C370) *
               C5275 +
           (C6673 - C6674 + C6675 - C6676 + C6677 - C6678) * C5282 +
           (C6679 - C6680 + C6681 - C6682 + C6683 - C6684) * C5276 +
           C6717 * C5283 + C6718 * C32230) *
              C31859 * C31918 * C240 +
          ((C6674 - C6673 + C6676 - C6675 + C6678 - C6677) * C5281 +
           (C6680 - C6679 + C6682 - C6681 + C6684 - C6683) * C5275 +
           (C6686 - C6685 + C6688 - C6687 + C6690 - C6689) * C5282 +
           (C6692 - C6691 + C6694 - C6693 + C6696 - C6695) * C5276 +
           (C6697 - C6698 + C6699 - C6700 + C6701 - C6702) * C5283 +
           (C6703 - C6704 + C6705 - C6706 + C6707 - C6708) * C32230) *
              C31859 * C31918 * C241 +
          (C6717 * C5281 + C6718 * C5275 +
           (C6698 - C6697 + C6700 - C6699 + C6702 - C6701) * C5282 +
           (C6704 - C6703 + C6706 - C6705 + C6708 - C6707) * C5276 +
           (C32266 * C969 - C1756 * C960 + C32255 * C6173 - C1757 * C6170 +
            C32233 * C6177 - C1758 * C6172) *
               C5283 +
           (C32266 * C978 - C1756 * C970 + C32255 * C6179 - C1757 * C6174 +
            C32233 * C6181 - C1758 * C6178) *
               C32230) *
              C31859 * C31918 * C242) *
         C31892) /
            (p * q * std::sqrt(p + q));
    d2ee[115] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C32200 * C122 - C3372 * C115 + C32045 * C359 - C3373 * C349) *
                 C114 +
             (C32200 * C136 - C3372 * C123 + C32045 * C379 - C3373 * C360) *
                 C31941) *
                C2658 +
            ((C3375 - C3376 + C3377 - C3378) * C114 +
             (C3379 - C3380 + C3381 - C3382) * C31941) *
                C2659 +
            C3423 * C2660 + C3424 * C32234) *
               C31918 * C471 +
           (((C3372 * C244 - C32200 * C254 + C3373 * C681 - C32045 * C686) *
                 C114 +
             (C3372 * C255 - C32200 * C274 + C3373 * C687 - C32045 * C696) *
                 C31941) *
                C2658 +
            ((C3751 - C3752 + C3753 - C3754) * C114 +
             (C3755 - C3756 + C3757 - C3758) * C31941) *
                C2659 +
            ((C3759 - C3760 + C3761 - C3762) * C114 +
             (C3763 - C3764 + C3765 - C3766) * C31941) *
                C2660 +
            ((C3767 - C3768 + C3769 - C3770) * C114 +
             (C3771 - C3772 + C3773 - C3774) * C31941) *
                C32234) *
               C31918 * C472) *
              C473 +
          ((((C3376 - C3375 + C3378 - C3377) * C114 +
             (C3380 - C3379 + C3382 - C3381) * C31941) *
                C2658 +
            ((C3384 - C3383 + C3386 - C3385) * C114 +
             (C3388 - C3387 + C3390 - C3389) * C31941) *
                C2659 +
            ((C3392 - C3391 + C3394 - C3393) * C114 +
             (C3396 - C3395 + C3398 - C3397) * C31941) *
                C2660 +
            ((C3399 - C3400 + C3401 - C3402) * C114 +
             (C3403 - C3404 + C3405 - C3406) * C31941) *
                C32234) *
               C31918 * C471 +
           (((C3752 - C3751 + C3754 - C3753) * C114 +
             (C3756 - C3755 + C3758 - C3757) * C31941) *
                C2658 +
            ((C3760 - C3759 + C3762 - C3761) * C114 +
             (C3764 - C3763 + C3766 - C3765) * C31941) *
                C2659 +
            ((C3768 - C3767 + C3770 - C3769) * C114 +
             (C3772 - C3771 + C3774 - C3773) * C31941) *
                C2660 +
            ((C32200 * C262 - C3372 * C248 + C32045 * C694 - C3373 * C685) *
                 C114 +
             (C32200 * C278 - C3372 * C263 + C32045 * C700 - C3373 * C695) *
                 C31941) *
                C32234) *
               C31918 * C472) *
              C474)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C32200 * C122 - C3372 * C115 + C32045 * C359 - C3373 * C349) *
                 C5281 +
             (C32200 * C136 - C3372 * C123 + C32045 * C379 - C3373 * C360) *
                 C5275 +
             (C4364 - C4365 + C4366 - C4367) * C5282 +
             (C4368 - C4369 + C4370 - C4371) * C5276 + C8345 * C5283 +
             C8346 * C32230) *
                C32180 +
            ((C3375 - C3376 + C3377 - C3378) * C5281 +
             (C3379 - C3380 + C3381 - C3382) * C5275 + C4748 * C5282 +
             C4749 * C5276 + C8347 * C5283 + C8348 * C32230) *
                C31869) *
               C31918 * C471 +
           (((C4365 - C4364 + C4367 - C4366) * C5281 +
             (C4369 - C4368 + C4371 - C4370) * C5275 +
             (C4372 - C4373 + C4374 - C4375) * C5282 +
             (C4376 - C4377 + C4378 - C4379) * C5276 +
             (C8329 - C8330 + C8331 - C8332) * C5283 +
             (C8333 - C8334 + C8335 - C8336) * C32230) *
                C32180 +
            (C4750 * C5281 + C4751 * C5275 + C8693 * C5282 + C8694 * C5276 +
             (C8337 - C8338 + C8339 - C8340) * C5283 +
             (C8341 - C8342 + C8343 - C8344) * C32230) *
                C31869) *
               C31918 * C472) *
              C473 +
          ((((C3376 - C3375 + C3378 - C3377) * C5281 +
             (C3380 - C3379 + C3382 - C3381) * C5275 + C4750 * C5282 +
             C4751 * C5276 + C8693 * C5283 + C8694 * C32230) *
                C32180 +
            ((C3384 - C3383 + C3386 - C3385) * C5281 +
             (C3388 - C3387 + C3390 - C3389) * C5275 + C4752 * C5282 +
             C4753 * C5276 + (C4388 - C4389 + C4390 - C4391) * C5283 +
             (C4392 - C4393 + C4394 - C4395) * C32230) *
                C31869) *
               C31918 * C471 +
           ((C4748 * C5281 + C4749 * C5275 + C8347 * C5282 + C8348 * C5276 +
             (C8338 - C8337 + C8340 - C8339) * C5283 +
             (C8342 - C8341 + C8344 - C8343) * C32230) *
                C32180 +
            (C4212 * C5281 + C4213 * C5275 +
             (C4389 - C4388 + C4391 - C4390) * C5282 +
             (C4393 - C4392 + C4395 - C4394) * C5276 +
             (C32200 * C967 - C3372 * C959 + C32045 * C1630 - C3373 * C1625) *
                 C5283 +
             (C32200 * C977 - C3372 * C968 + C32045 * C1634 - C3373 * C1631) *
                 C32230) *
                C31869) *
               C31918 * C472) *
              C474)) /
            (p * q * std::sqrt(p + q));
    d2ee[116] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C32200 * C122 - C3372 * C115 + C32045 * C359 - C3373 * C349) *
                 C114 +
             (C32200 * C136 - C3372 * C123 + C32045 * C379 - C3373 * C360) *
                 C31941) *
                C2658 +
            ((C3375 - C3376 + C3377 - C3378) * C114 +
             (C3379 - C3380 + C3381 - C3382) * C31941) *
                C2659 +
            C3423 * C2660 + C3424 * C32234) *
               C577 +
           (((C3372 * C349 - C32200 * C359 + C3373 * C354 - C32045 * C369) *
                 C114 +
             (C3372 * C360 - C32200 * C379 + C3373 * C370 - C32045 * C384) *
                 C31941) *
                C2658 +
            ((C3905 - C3906 + C3907 - C3908) * C114 +
             (C3909 - C3910 + C3911 - C3912) * C31941) *
                C2659 +
            ((C3913 - C3914 + C3915 - C3916) * C114 +
             (C3917 - C3918 + C3919 - C3920) * C31941) *
                C2660 +
            ((C3921 - C3922 + C3923 - C3924) * C114 +
             (C3925 - C3926 + C3927 - C3928) * C31941) *
                C32234) *
               C578) *
              C471 +
          ((((C3372 * C244 - C32200 * C254 + C3373 * C681 - C32045 * C686) *
                 C114 +
             (C3372 * C255 - C32200 * C274 + C3373 * C687 - C32045 * C696) *
                 C31941) *
                C2658 +
            ((C3751 - C3752 + C3753 - C3754) * C114 +
             (C3755 - C3756 + C3757 - C3758) * C31941) *
                C2659 +
            ((C3759 - C3760 + C3761 - C3762) * C114 +
             (C3763 - C3764 + C3765 - C3766) * C31941) *
                C2660 +
            ((C3767 - C3768 + C3769 - C3770) * C114 +
             (C3771 - C3772 + C3773 - C3774) * C31941) *
                C32234) *
               C577 +
           (((C32200 * C686 - C3372 * C681 + C32045 * C1130 - C3373 * C1118) *
                 C114 +
             (C32200 * C696 - C3372 * C687 + C32045 * C1145 - C3373 * C1131) *
                 C31941) *
                C2658 +
            ((C32200 * C688 - C3372 * C682 + C32045 * C1134 - C3373 * C1120) *
                 C114 +
             (C32200 * C697 - C3372 * C689 + C32045 * C1147 - C3373 * C1135) *
                 C31941) *
                C2659 +
            ((C32200 * C690 - C3372 * C683 + C32045 * C1138 - C3373 * C1122) *
                 C114 +
             (C32200 * C698 - C3372 * C691 + C32045 * C1149 - C3373 * C1139) *
                 C31941) *
                C2660 +
            ((C32200 * C692 - C3372 * C684 + C32045 * C2199 - C3373 * C2198) *
                 C114 +
             (C32200 * C699 - C3372 * C693 + C32045 * C2201 - C3373 * C2200) *
                 C31941) *
                C32234) *
               C578) *
              C472) *
         C31892) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C32200 * C122 - C3372 * C115 + C32045 * C359 - C3373 * C349) *
                 C5281 +
             (C32200 * C136 - C3372 * C123 + C32045 * C379 - C3373 * C360) *
                 C5275 +
             (C4364 - C4365 + C4366 - C4367) * C5282 +
             (C4368 - C4369 + C4370 - C4371) * C5276 + C8345 * C5283 +
             C8346 * C32230) *
                C32180 +
            ((C3375 - C3376 + C3377 - C3378) * C5281 +
             (C3379 - C3380 + C3381 - C3382) * C5275 + C4748 * C5282 +
             C4749 * C5276 + C8347 * C5283 + C8348 * C32230) *
                C31869) *
               C577 +
           (((C3372 * C349 - C32200 * C359 + C3373 * C354 - C32045 * C369) *
                 C5281 +
             (C3372 * C360 - C32200 * C379 + C3373 * C370 - C32045 * C384) *
                 C5275 +
             (C5158 - C5159 + C5160 - C5161) * C5282 +
             (C5162 - C5163 + C5164 - C5165) * C5276 +
             (C9091 - C9092 + C9093 - C9094) * C5283 +
             (C9095 - C9096 + C9097 - C9098) * C32230) *
                C32180 +
            ((C3905 - C3906 + C3907 - C3908) * C5281 +
             (C3909 - C3910 + C3911 - C3912) * C5275 +
             (C4948 - C4949 + C4950 - C4951) * C5282 +
             (C4952 - C4953 + C4954 - C4955) * C5276 +
             (C8889 - C8890 + C8891 - C8892) * C5283 +
             (C8893 - C8894 + C8895 - C8896) * C32230) *
                C31869) *
               C578) *
              C471 +
          ((((C4365 - C4364 + C4367 - C4366) * C5281 +
             (C4369 - C4368 + C4371 - C4370) * C5275 +
             (C4372 - C4373 + C4374 - C4375) * C5282 +
             (C4376 - C4377 + C4378 - C4379) * C5276 +
             (C8329 - C8330 + C8331 - C8332) * C5283 +
             (C8333 - C8334 + C8335 - C8336) * C32230) *
                C32180 +
            (C4750 * C5281 + C4751 * C5275 + C8693 * C5282 + C8694 * C5276 +
             (C8337 - C8338 + C8339 - C8340) * C5283 +
             (C8341 - C8342 + C8343 - C8344) * C32230) *
                C31869) *
               C577 +
           (((C5159 - C5158 + C5161 - C5160) * C5281 +
             (C5163 - C5162 + C5165 - C5164) * C5275 +
             (C9092 - C9091 + C9094 - C9093) * C5282 +
             (C9096 - C9095 + C9098 - C9097) * C5276 +
             (C32200 * C1626 - C3372 * C1623 + C32045 * C6175 - C3373 * C6171) *
                 C5283 +
             (C32200 * C1632 - C3372 * C1627 + C32045 * C6180 - C3373 * C6176) *
                 C32230) *
                C32180 +
            ((C4949 - C4948 + C4951 - C4950) * C5281 +
             (C4953 - C4952 + C4955 - C4954) * C5275 +
             (C8890 - C8889 + C8892 - C8891) * C5282 +
             (C8894 - C8893 + C8896 - C8895) * C5276 +
             (C32200 * C1628 - C3372 * C1624 + C32045 * C6987 - C3373 * C6986) *
                 C5283 +
             (C32200 * C1633 - C3372 * C1629 + C32045 * C6989 - C3373 * C6988) *
                 C32230) *
                C31869) *
               C578) *
              C472) *
         C31892) /
            (p * q * std::sqrt(p + q));
    d2ee[117] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C32200 * C122 - C3372 * C115 + C32045 * C359 - C3373 * C349) *
                C114 +
            (C32200 * C136 - C3372 * C123 + C32045 * C379 - C3373 * C360) *
                C31941) *
               C2658 +
           ((C3375 - C3376 + C3377 - C3378) * C114 +
            (C3379 - C3380 + C3381 - C3382) * C31941) *
               C2659 +
           C3423 * C2660 + C3424 * C32234) *
              C31918 * C240 +
          (((C3372 * C244 - C32200 * C254 + C3373 * C681 - C32045 * C686) *
                C114 +
            (C3372 * C255 - C32200 * C274 + C3373 * C687 - C32045 * C696) *
                C31941) *
               C2658 +
           ((C3372 * C245 - C32200 * C256 + C3373 * C682 - C32045 * C688) *
                C114 +
            (C3372 * C257 - C32200 * C275 + C3373 * C689 - C32045 * C697) *
                C31941) *
               C2659 +
           ((C3372 * C246 - C32200 * C258 + C3373 * C683 - C32045 * C690) *
                C114 +
            (C3372 * C259 - C32200 * C276 + C3373 * C691 - C32045 * C698) *
                C31941) *
               C2660 +
           ((C3372 * C247 - C32200 * C260 + C3373 * C684 - C32045 * C692) *
                C114 +
            (C3372 * C261 - C32200 * C277 + C3373 * C693 - C32045 * C699) *
                C31941) *
               C32234) *
              C31918 * C241 +
          (((C32200 * C264 - C3372 * C249 + C32045 * C1124 - C3373 * C1115) *
                C114 +
            (C32200 * C279 - C3372 * C265 + C32045 * C1142 - C3373 * C1125) *
                C31941) *
               C2658 +
           ((C32200 * C266 - C3372 * C250 + C32045 * C1126 - C3373 * C1116) *
                C114 +
            (C32200 * C280 - C3372 * C267 + C32045 * C1143 - C3373 * C1127) *
                C31941) *
               C2659 +
           ((C32200 * C268 - C3372 * C251 + C32045 * C1128 - C3373 * C1117) *
                C114 +
            (C32200 * C281 - C3372 * C269 + C32045 * C1144 - C3373 * C1129) *
                C31941) *
               C2660 +
           ((C32200 * C270 - C3372 * C252 + C32045 * C1458 - C3373 * C1457) *
                C114 +
            (C32200 * C282 - C3372 * C271 + C32045 * C1460 - C3373 * C1459) *
                C31941) *
               C32234) *
              C31918 * C242) *
         C31892) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C32200 * C122 - C3372 * C115 + C32045 * C359 - C3373 * C349) *
                C114 +
            (C32200 * C136 - C3372 * C123 + C32045 * C379 - C3373 * C360) *
                C31941) *
               C2658 +
           ((C3375 - C3376 + C3377 - C3378) * C114 +
            (C3379 - C3380 + C3381 - C3382) * C31941) *
               C2659 +
           C3423 * C2660 + C3424 * C32234) *
              C31918 * C31904 * C110 +
          (((C3376 - C3375 + C3378 - C3377) * C114 +
            (C3380 - C3379 + C3382 - C3381) * C31941) *
               C2658 +
           ((C3384 - C3383 + C3386 - C3385) * C114 +
            (C3388 - C3387 + C3390 - C3389) * C31941) *
               C2659 +
           ((C3392 - C3391 + C3394 - C3393) * C114 +
            (C3396 - C3395 + C3398 - C3397) * C31941) *
               C2660 +
           ((C3399 - C3400 + C3401 - C3402) * C114 +
            (C3403 - C3404 + C3405 - C3406) * C31941) *
               C32234) *
              C31918 * C31904 * C111 +
          (C3423 * C2658 + C3424 * C2659 +
           ((C3400 - C3399 + C3402 - C3401) * C114 +
            (C3404 - C3403 + C3406 - C3405) * C31941) *
               C2660 +
           ((C32200 * C132 - C3372 * C120 + C32045 * C580 - C3373 * C579) *
                C114 +
            (C32200 * C141 - C3372 * C133 + C32045 * C582 - C3373 * C581) *
                C31941) *
               C32234) *
              C31918 * C31904 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C32200 * C122 - C3372 * C115 + C32045 * C359 - C3373 * C349) *
                C114 +
            (C32200 * C136 - C3372 * C123 + C32045 * C379 - C3373 * C360) *
                C31941) *
               C2658 +
           ((C3375 - C3376 + C3377 - C3378) * C114 +
            (C3379 - C3380 + C3381 - C3382) * C31941) *
               C2659 +
           C3423 * C2660 + C3424 * C32234) *
              C346 +
          (((C3372 * C349 - C32200 * C359 + C3373 * C354 - C32045 * C369) *
                C114 +
            (C3372 * C360 - C32200 * C379 + C3373 * C370 - C32045 * C384) *
                C31941) *
               C2658 +
           ((C3372 * C350 - C32200 * C361 + C3373 * C355 - C32045 * C371) *
                C114 +
            (C3372 * C362 - C32200 * C380 + C3373 * C372 - C32045 * C385) *
                C31941) *
               C2659 +
           ((C3372 * C351 - C32200 * C363 + C3373 * C356 - C32045 * C373) *
                C114 +
            (C3372 * C364 - C32200 * C381 + C3373 * C374 - C32045 * C386) *
                C31941) *
               C2660 +
           ((C3372 * C352 - C32200 * C365 + C3373 * C357 - C32045 * C375) *
                C114 +
            (C3372 * C366 - C32200 * C382 + C3373 * C376 - C32045 * C387) *
                C31941) *
               C32234) *
              C347 +
          (((C32200 * C369 - C3372 * C354 + C32045 * C2034 - C3373 * C2028) *
                C114 +
            (C32200 * C384 - C3372 * C370 + C32045 * C2046 - C3373 * C2035) *
                C31941) *
               C2658 +
           ((C32200 * C371 - C3372 * C355 + C32045 * C2036 - C3373 * C2029) *
                C114 +
            (C32200 * C385 - C3372 * C372 + C32045 * C2047 - C3373 * C2037) *
                C31941) *
               C2659 +
           ((C32200 * C373 - C3372 * C356 + C32045 * C2038 - C3373 * C2030) *
                C114 +
            (C32200 * C386 - C3372 * C374 + C32045 * C2048 - C3373 * C2039) *
                C31941) *
               C2660 +
           ((C32200 * C375 - C3372 * C357 + C32045 * C2373 - C3373 * C2372) *
                C114 +
            (C32200 * C387 - C3372 * C376 + C32045 * C2375 - C3373 * C2374) *
                C31941) *
               C32234) *
              C348) *
         C31904 * C31892) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C32200 * C122 - C3372 * C115 + C32045 * C359 - C3373 * C349) *
                C5281 +
            (C32200 * C136 - C3372 * C123 + C32045 * C379 - C3373 * C360) *
                C5275 +
            (C4364 - C4365 + C4366 - C4367) * C5282 +
            (C4368 - C4369 + C4370 - C4371) * C5276 +
            (C4373 - C4372 + C4375 - C4374) * C5283 +
            (C4377 - C4376 + C4379 - C4378) * C32230) *
               C32180 +
           ((C3375 - C3376 + C3377 - C3378) * C5281 +
            (C3379 - C3380 + C3381 - C3382) * C5275 + C4748 * C5282 +
            C4749 * C5276 + (C4381 - C4380 + C4383 - C4382) * C5283 +
            (C4385 - C4384 + C4387 - C4386) * C32230) *
               C31869) *
              C31918 * C31904 * C110 +
          (((C3376 - C3375 + C3378 - C3377) * C5281 +
            (C3380 - C3379 + C3382 - C3381) * C5275 + C4750 * C5282 +
            C4751 * C5276 + (C4380 - C4381 + C4382 - C4383) * C5283 +
            (C4384 - C4385 + C4386 - C4387) * C32230) *
               C32180 +
           ((C3384 - C3383 + C3386 - C3385) * C5281 +
            (C3388 - C3387 + C3390 - C3389) * C5275 + C4752 * C5282 +
            C4753 * C5276 + (C4388 - C4389 + C4390 - C4391) * C5283 +
            (C4392 - C4393 + C4394 - C4395) * C32230) *
               C31869) *
              C31918 * C31904 * C111 +
          ((C3415 * C5281 + C3416 * C5275 + C4212 * C5282 + C4213 * C5276 +
            (C4389 - C4388 + C4391 - C4390) * C5283 +
            (C4393 - C4392 + C4395 - C4394) * C32230) *
               C32180 +
           (C3417 * C5281 + C3418 * C5275 +
            (C3768 - C3767 + C3770 - C3769) * C5282 +
            (C3772 - C3771 + C3774 - C3773) * C5276 +
            (C32200 * C270 - C3372 * C252 + C32045 * C1458 - C3373 * C1457) *
                C5283 +
            (C32200 * C282 - C3372 * C271 + C32045 * C1460 - C3373 * C1459) *
                C32230) *
               C31869) *
              C31918 * C31904 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C32200 * C122 - C3372 * C115 + C32045 * C359 - C3373 * C349) *
                C5281 +
            (C32200 * C136 - C3372 * C123 + C32045 * C379 - C3373 * C360) *
                C5275 +
            (C4364 - C4365 + C4366 - C4367) * C5282 +
            (C4368 - C4369 + C4370 - C4371) * C5276 + C8345 * C5283 +
            C8346 * C32230) *
               C32180 +
           ((C3375 - C3376 + C3377 - C3378) * C5281 +
            (C3379 - C3380 + C3381 - C3382) * C5275 + C4748 * C5282 +
            C4749 * C5276 + C8347 * C5283 + C8348 * C32230) *
               C31869) *
              C31918 * C240 +
          (((C4365 - C4364 + C4367 - C4366) * C5281 +
            (C4369 - C4368 + C4371 - C4370) * C5275 +
            (C4372 - C4373 + C4374 - C4375) * C5282 +
            (C4376 - C4377 + C4378 - C4379) * C5276 +
            (C8329 - C8330 + C8331 - C8332) * C5283 +
            (C8333 - C8334 + C8335 - C8336) * C32230) *
               C32180 +
           (C4750 * C5281 + C4751 * C5275 +
            (C4380 - C4381 + C4382 - C4383) * C5282 +
            (C4384 - C4385 + C4386 - C4387) * C5276 +
            (C8337 - C8338 + C8339 - C8340) * C5283 +
            (C8341 - C8342 + C8343 - C8344) * C32230) *
               C31869) *
              C31918 * C241 +
          ((C8345 * C5281 + C8346 * C5275 +
            (C8330 - C8329 + C8332 - C8331) * C5282 +
            (C8334 - C8333 + C8336 - C8335) * C5276 +
            (C32200 * C969 - C3372 * C960 + C32045 * C6173 - C3373 * C6170) *
                C5283 +
            (C32200 * C978 - C3372 * C970 + C32045 * C6179 - C3373 * C6174) *
                C32230) *
               C32180 +
           (C8347 * C5281 + C8348 * C5275 +
            (C8338 - C8337 + C8340 - C8339) * C5282 +
            (C8342 - C8341 + C8344 - C8343) * C5276 +
            (C32200 * C971 - C3372 * C961 + C32045 * C6355 - C3373 * C6354) *
                C5283 +
            (C32200 * C979 - C3372 * C972 + C32045 * C6357 - C3373 * C6356) *
                C32230) *
               C31869) *
              C31918 * C242) *
         C31892) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C32200 * C122 - C3372 * C115 + C32045 * C359 - C3373 * C349) *
                C5281 +
            (C32200 * C136 - C3372 * C123 + C32045 * C379 - C3373 * C360) *
                C5275 +
            (C4364 - C4365 + C4366 - C4367) * C5282 +
            (C4368 - C4369 + C4370 - C4371) * C5276 + C8345 * C5283 +
            C8346 * C32230) *
               C32180 +
           ((C3375 - C3376 + C3377 - C3378) * C5281 +
            (C3379 - C3380 + C3381 - C3382) * C5275 + C4748 * C5282 +
            C4749 * C5276 + C8347 * C5283 + C8348 * C32230) *
               C31869) *
              C346 +
          (((C3372 * C349 - C32200 * C359 + C3373 * C354 - C32045 * C369) *
                C5281 +
            (C3372 * C360 - C32200 * C379 + C3373 * C370 - C32045 * C384) *
                C5275 +
            (C5158 - C5159 + C5160 - C5161) * C5282 +
            (C5162 - C5163 + C5164 - C5165) * C5276 +
            (C3372 * C1115 - C32200 * C1124 + C3373 * C1119 - C32045 * C1132) *
                C5283 +
            (C3372 * C1125 - C32200 * C1142 + C3373 * C1133 - C32045 * C1146) *
                C32230) *
               C32180 +
           ((C3905 - C3906 + C3907 - C3908) * C5281 +
            (C3909 - C3910 + C3911 - C3912) * C5275 +
            (C4948 - C4949 + C4950 - C4951) * C5282 +
            (C4952 - C4953 + C4954 - C4955) * C5276 +
            (C3372 * C1116 - C32200 * C1126 + C3373 * C1121 - C32045 * C1136) *
                C5283 +
            (C3372 * C1127 - C32200 * C1143 + C3373 * C1137 - C32045 * C1148) *
                C32230) *
               C31869) *
              C347 +
          (((C32200 * C369 - C3372 * C354 + C32045 * C2034 - C3373 * C2028) *
                C5281 +
            (C32200 * C384 - C3372 * C370 + C32045 * C2046 - C3373 * C2035) *
                C5275 +
            (C32200 * C1130 - C3372 * C1118 + C32045 * C2549 - C3373 * C2546) *
                C5282 +
            (C32200 * C1145 - C3372 * C1131 + C32045 * C2555 - C3373 * C2550) *
                C5276 +
            (C32200 * C1132 - C3372 * C1119 + C32045 * C6831 - C3373 * C6828) *
                C5283 +
            (C32200 * C1146 - C3372 * C1133 + C32045 * C6837 - C3373 * C6832) *
                C32230) *
               C32180 +
           ((C32200 * C371 - C3372 * C355 + C32045 * C2036 - C3373 * C2029) *
                C5281 +
            (C32200 * C385 - C3372 * C372 + C32045 * C2047 - C3373 * C2037) *
                C5275 +
            (C32200 * C1134 - C3372 * C1120 + C32045 * C2551 - C3373 * C2547) *
                C5282 +
            (C32200 * C1147 - C3372 * C1135 + C32045 * C2556 - C3373 * C2552) *
                C5276 +
            (C32200 * C1136 - C3372 * C1121 + C32045 * C7149 - C3373 * C7148) *
                C5283 +
            (C32200 * C1148 - C3372 * C1137 + C32045 * C7151 - C3373 * C7150) *
                C32230) *
               C31869) *
              C348) *
         C31904 * C31892) /
            (p * q * std::sqrt(p + q));
    d2ee[118] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C32200 * C122 - C3372 * C115 + C32045 * C359 - C3373 * C349) *
                 C114 +
             (C32200 * C136 - C3372 * C123 + C32045 * C379 - C3373 * C360) *
                 C31941) *
                C2658 +
            ((C3375 - C3376 + C3377 - C3378) * C114 +
             (C3379 - C3380 + C3381 - C3382) * C31941) *
                C2659 +
            C3423 * C2660 + C3424 * C32234) *
               C577 +
           (((C3372 * C349 - C32200 * C359 + C3373 * C354 - C32045 * C369) *
                 C114 +
             (C3372 * C360 - C32200 * C379 + C3373 * C370 - C32045 * C384) *
                 C31941) *
                C2658 +
            ((C3905 - C3906 + C3907 - C3908) * C114 +
             (C3909 - C3910 + C3911 - C3912) * C31941) *
                C2659 +
            ((C3913 - C3914 + C3915 - C3916) * C114 +
             (C3917 - C3918 + C3919 - C3920) * C31941) *
                C2660 +
            ((C3921 - C3922 + C3923 - C3924) * C114 +
             (C3925 - C3926 + C3927 - C3928) * C31941) *
                C32234) *
               C578) *
              C31904 * C473 +
          ((((C3376 - C3375 + C3378 - C3377) * C114 +
             (C3380 - C3379 + C3382 - C3381) * C31941) *
                C2658 +
            ((C3384 - C3383 + C3386 - C3385) * C114 +
             (C3388 - C3387 + C3390 - C3389) * C31941) *
                C2659 +
            ((C3392 - C3391 + C3394 - C3393) * C114 +
             (C3396 - C3395 + C3398 - C3397) * C31941) *
                C2660 +
            ((C3399 - C3400 + C3401 - C3402) * C114 +
             (C3403 - C3404 + C3405 - C3406) * C31941) *
                C32234) *
               C577 +
           (((C3906 - C3905 + C3908 - C3907) * C114 +
             (C3910 - C3909 + C3912 - C3911) * C31941) *
                C2658 +
            ((C3914 - C3913 + C3916 - C3915) * C114 +
             (C3918 - C3917 + C3920 - C3919) * C31941) *
                C2659 +
            ((C3922 - C3921 + C3924 - C3923) * C114 +
             (C3926 - C3925 + C3928 - C3927) * C31941) *
                C2660 +
            ((C32200 * C367 - C3372 * C353 + C32045 * C377 - C3373 * C358) *
                 C114 +
             (C32200 * C383 - C3372 * C368 + C32045 * C388 - C3373 * C378) *
                 C31941) *
                C32234) *
               C578) *
              C31904 * C474)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C32200 * C122 - C3372 * C115 + C32045 * C359 - C3373 * C349) *
                 C5281 +
             (C32200 * C136 - C3372 * C123 + C32045 * C379 - C3373 * C360) *
                 C5275 +
             (C4364 - C4365 + C4366 - C4367) * C5282 +
             (C4368 - C4369 + C4370 - C4371) * C5276 + C8345 * C5283 +
             C8346 * C32230) *
                C32180 +
            ((C3375 - C3376 + C3377 - C3378) * C5281 +
             (C3379 - C3380 + C3381 - C3382) * C5275 + C4748 * C5282 +
             C4749 * C5276 + C8347 * C5283 + C8348 * C32230) *
                C31869) *
               C577 +
           (((C3372 * C349 - C32200 * C359 + C3373 * C354 - C32045 * C369) *
                 C5281 +
             (C3372 * C360 - C32200 * C379 + C3373 * C370 - C32045 * C384) *
                 C5275 +
             (C5158 - C5159 + C5160 - C5161) * C5282 +
             (C5162 - C5163 + C5164 - C5165) * C5276 +
             (C3372 * C1115 - C32200 * C1124 + C3373 * C1119 - C32045 * C1132) *
                 C5283 +
             (C3372 * C1125 - C32200 * C1142 + C3373 * C1133 - C32045 * C1146) *
                 C32230) *
                C32180 +
            ((C3905 - C3906 + C3907 - C3908) * C5281 +
             (C3909 - C3910 + C3911 - C3912) * C5275 +
             (C4948 - C4949 + C4950 - C4951) * C5282 +
             (C4952 - C4953 + C4954 - C4955) * C5276 +
             (C8889 - C8890 + C8891 - C8892) * C5283 +
             (C8893 - C8894 + C8895 - C8896) * C32230) *
                C31869) *
               C578) *
              C31904 * C473 +
          ((((C3376 - C3375 + C3378 - C3377) * C5281 +
             (C3380 - C3379 + C3382 - C3381) * C5275 + C4750 * C5282 +
             C4751 * C5276 + C8693 * C5283 + C8694 * C32230) *
                C32180 +
            ((C3384 - C3383 + C3386 - C3385) * C5281 +
             (C3388 - C3387 + C3390 - C3389) * C5275 + C4752 * C5282 +
             C4753 * C5276 + (C4388 - C4389 + C4390 - C4391) * C5283 +
             (C4392 - C4393 + C4394 - C4395) * C32230) *
                C31869) *
               C577 +
           (((C3906 - C3905 + C3908 - C3907) * C5281 +
             (C3910 - C3909 + C3912 - C3911) * C5275 +
             (C4949 - C4948 + C4951 - C4950) * C5282 +
             (C4953 - C4952 + C4955 - C4954) * C5276 +
             (C8890 - C8889 + C8892 - C8891) * C5283 +
             (C8894 - C8893 + C8896 - C8895) * C32230) *
                C32180 +
            ((C3914 - C3913 + C3916 - C3915) * C5281 +
             (C3918 - C3917 + C3920 - C3919) * C5275 +
             (C4957 - C4956 + C4959 - C4958) * C5282 +
             (C4961 - C4960 + C4963 - C4962) * C5276 +
             (C32200 * C1128 - C3372 * C1117 + C32045 * C1140 - C3373 * C1123) *
                 C5283 +
             (C32200 * C1144 - C3372 * C1129 + C32045 * C1150 - C3373 * C1141) *
                 C32230) *
                C31869) *
               C578) *
              C31904 * C474)) /
            (p * q * std::sqrt(p + q));
    d2ee[119] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C32200 * C122 - C3372 * C115 + C32045 * C359 - C3373 * C349) *
                C114 +
            (C32200 * C136 - C3372 * C123 + C32045 * C379 - C3373 * C360) *
                C31941) *
               C2658 +
           ((C3375 - C3376 + C3377 - C3378) * C114 +
            (C3379 - C3380 + C3381 - C3382) * C31941) *
               C2659 +
           C3423 * C2660 + C3424 * C32234) *
              C31918 * C31904 * C110 +
          (((C3376 - C3375 + C3378 - C3377) * C114 +
            (C3380 - C3379 + C3382 - C3381) * C31941) *
               C2658 +
           ((C3384 - C3383 + C3386 - C3385) * C114 +
            (C3388 - C3387 + C3390 - C3389) * C31941) *
               C2659 +
           ((C3392 - C3391 + C3394 - C3393) * C114 +
            (C3396 - C3395 + C3398 - C3397) * C31941) *
               C2660 +
           ((C3399 - C3400 + C3401 - C3402) * C114 +
            (C3403 - C3404 + C3405 - C3406) * C31941) *
               C32234) *
              C31918 * C31904 * C111 +
          (C3423 * C2658 + C3424 * C2659 +
           ((C3400 - C3399 + C3402 - C3401) * C114 +
            (C3404 - C3403 + C3406 - C3405) * C31941) *
               C2660 +
           ((C32200 * C132 - C3372 * C120 + C32045 * C580 - C3373 * C579) *
                C114 +
            (C32200 * C141 - C3372 * C133 + C32045 * C582 - C3373 * C581) *
                C31941) *
               C32234) *
              C31918 * C31904 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C32200 * C122 - C3372 * C115 + C32045 * C359 - C3373 * C349) *
                C114 +
            (C32200 * C136 - C3372 * C123 + C32045 * C379 - C3373 * C360) *
                C31941) *
               C2658 +
           ((C3375 - C3376 + C3377 - C3378) * C114 +
            (C3379 - C3380 + C3381 - C3382) * C31941) *
               C2659 +
           C3423 * C2660 + C3424 * C32234) *
              C31918 * C240 +
          (((C3372 * C244 - C32200 * C254 + C3373 * C681 - C32045 * C686) *
                C114 +
            (C3372 * C255 - C32200 * C274 + C3373 * C687 - C32045 * C696) *
                C31941) *
               C2658 +
           ((C3372 * C245 - C32200 * C256 + C3373 * C682 - C32045 * C688) *
                C114 +
            (C3372 * C257 - C32200 * C275 + C3373 * C689 - C32045 * C697) *
                C31941) *
               C2659 +
           ((C3372 * C246 - C32200 * C258 + C3373 * C683 - C32045 * C690) *
                C114 +
            (C3372 * C259 - C32200 * C276 + C3373 * C691 - C32045 * C698) *
                C31941) *
               C2660 +
           ((C3372 * C247 - C32200 * C260 + C3373 * C684 - C32045 * C692) *
                C114 +
            (C3372 * C261 - C32200 * C277 + C3373 * C693 - C32045 * C699) *
                C31941) *
               C32234) *
              C31918 * C241 +
          (((C32200 * C264 - C3372 * C249 + C32045 * C1124 - C3373 * C1115) *
                C114 +
            (C32200 * C279 - C3372 * C265 + C32045 * C1142 - C3373 * C1125) *
                C31941) *
               C2658 +
           ((C32200 * C266 - C3372 * C250 + C32045 * C1126 - C3373 * C1116) *
                C114 +
            (C32200 * C280 - C3372 * C267 + C32045 * C1143 - C3373 * C1127) *
                C31941) *
               C2659 +
           ((C32200 * C268 - C3372 * C251 + C32045 * C1128 - C3373 * C1117) *
                C114 +
            (C32200 * C281 - C3372 * C269 + C32045 * C1144 - C3373 * C1129) *
                C31941) *
               C2660 +
           ((C32200 * C270 - C3372 * C252 + C32045 * C1458 - C3373 * C1457) *
                C114 +
            (C32200 * C282 - C3372 * C271 + C32045 * C1460 - C3373 * C1459) *
                C31941) *
               C32234) *
              C31918 * C242) *
         C31892) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C32200 * C122 - C3372 * C115 + C32045 * C359 - C3373 * C349) *
                C5281 +
            (C32200 * C136 - C3372 * C123 + C32045 * C379 - C3373 * C360) *
                C5275 +
            (C4364 - C4365 + C4366 - C4367) * C5282 +
            (C4368 - C4369 + C4370 - C4371) * C5276 +
            (C4373 - C4372 + C4375 - C4374) * C5283 +
            (C4377 - C4376 + C4379 - C4378) * C32230) *
               C32180 +
           ((C3375 - C3376 + C3377 - C3378) * C5281 +
            (C3379 - C3380 + C3381 - C3382) * C5275 + C4748 * C5282 +
            C4749 * C5276 + (C4381 - C4380 + C4383 - C4382) * C5283 +
            (C4385 - C4384 + C4387 - C4386) * C32230) *
               C31869) *
              C31918 * C31904 * C110 +
          (((C3376 - C3375 + C3378 - C3377) * C5281 +
            (C3380 - C3379 + C3382 - C3381) * C5275 + C4750 * C5282 +
            C4751 * C5276 + (C4380 - C4381 + C4382 - C4383) * C5283 +
            (C4384 - C4385 + C4386 - C4387) * C32230) *
               C32180 +
           ((C3384 - C3383 + C3386 - C3385) * C5281 +
            (C3388 - C3387 + C3390 - C3389) * C5275 + C4752 * C5282 +
            C4753 * C5276 + (C4388 - C4389 + C4390 - C4391) * C5283 +
            (C4392 - C4393 + C4394 - C4395) * C32230) *
               C31869) *
              C31918 * C31904 * C111 +
          ((C3415 * C5281 + C3416 * C5275 + C4212 * C5282 + C4213 * C5276 +
            (C4389 - C4388 + C4391 - C4390) * C5283 +
            (C4393 - C4392 + C4395 - C4394) * C32230) *
               C32180 +
           (C3417 * C5281 + C3418 * C5275 +
            (C3768 - C3767 + C3770 - C3769) * C5282 +
            (C3772 - C3771 + C3774 - C3773) * C5276 +
            (C32200 * C270 - C3372 * C252 + C32045 * C1458 - C3373 * C1457) *
                C5283 +
            (C32200 * C282 - C3372 * C271 + C32045 * C1460 - C3373 * C1459) *
                C32230) *
               C31869) *
              C31918 * C31904 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C32200 * C122 - C3372 * C115 + C32045 * C359 - C3373 * C349) *
                C5281 +
            (C32200 * C136 - C3372 * C123 + C32045 * C379 - C3373 * C360) *
                C5275 +
            (C4364 - C4365 + C4366 - C4367) * C5282 +
            (C4368 - C4369 + C4370 - C4371) * C5276 + C8345 * C5283 +
            C8346 * C32230) *
               C32180 +
           ((C3375 - C3376 + C3377 - C3378) * C5281 +
            (C3379 - C3380 + C3381 - C3382) * C5275 + C4748 * C5282 +
            C4749 * C5276 + C8347 * C5283 + C8348 * C32230) *
               C31869) *
              C31918 * C240 +
          (((C4365 - C4364 + C4367 - C4366) * C5281 +
            (C4369 - C4368 + C4371 - C4370) * C5275 +
            (C4372 - C4373 + C4374 - C4375) * C5282 +
            (C4376 - C4377 + C4378 - C4379) * C5276 +
            (C8329 - C8330 + C8331 - C8332) * C5283 +
            (C8333 - C8334 + C8335 - C8336) * C32230) *
               C32180 +
           (C4750 * C5281 + C4751 * C5275 +
            (C4380 - C4381 + C4382 - C4383) * C5282 +
            (C4384 - C4385 + C4386 - C4387) * C5276 +
            (C8337 - C8338 + C8339 - C8340) * C5283 +
            (C8341 - C8342 + C8343 - C8344) * C32230) *
               C31869) *
              C31918 * C241 +
          ((C8345 * C5281 + C8346 * C5275 +
            (C8330 - C8329 + C8332 - C8331) * C5282 +
            (C8334 - C8333 + C8336 - C8335) * C5276 +
            (C32200 * C969 - C3372 * C960 + C32045 * C6173 - C3373 * C6170) *
                C5283 +
            (C32200 * C978 - C3372 * C970 + C32045 * C6179 - C3373 * C6174) *
                C32230) *
               C32180 +
           (C8347 * C5281 + C8348 * C5275 +
            (C8338 - C8337 + C8340 - C8339) * C5282 +
            (C8342 - C8341 + C8344 - C8343) * C5276 +
            (C32200 * C971 - C3372 * C961 + C32045 * C6355 - C3373 * C6354) *
                C5283 +
            (C32200 * C979 - C3372 * C972 + C32045 * C6357 - C3373 * C6356) *
                C32230) *
               C31869) *
              C31918 * C242) *
         C31892) /
            (p * q * std::sqrt(p + q));
    d2ee[120] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C31958 * C122 - C113 * C115) * C114 +
             (C31958 * C136 - C113 * C123) * C31941) *
                C103 +
            ((C144 - C145) * C114 + (C146 - C147) * C31941) * C104 +
            C176 * C105 + C177 * C106 + C178 * C107) *
               C31918 * C471 +
           (((C113 * C244 - C31958 * C254) * C114 +
             (C113 * C255 - C31958 * C274) * C31941) *
                C103 +
            ((C480 - C481) * C114 + (C482 - C483) * C31941) * C104 +
            ((C484 - C485) * C114 + (C486 - C487) * C31941) * C105 +
            ((C488 - C489) * C114 + (C490 - C491) * C31941) * C106 +
            ((C492 - C493) * C114 + (C494 - C495) * C31941) * C107) *
               C31918 * C472) *
              C473 +
          ((((C145 - C144) * C114 + (C147 - C146) * C31941) * C103 +
            ((C149 - C148) * C114 + (C151 - C150) * C31941) * C104 +
            ((C153 - C152) * C114 + (C155 - C154) * C31941) * C105 +
            ((C157 - C156) * C114 + (C159 - C158) * C31941) * C106 +
            ((C160 - C161) * C114 + (C162 - C163) * C31941) * C107) *
               C31918 * C471 +
           (((C481 - C480) * C114 + (C483 - C482) * C31941) * C103 +
            ((C485 - C484) * C114 + (C487 - C486) * C31941) * C104 +
            ((C489 - C488) * C114 + (C491 - C490) * C31941) * C105 +
            ((C493 - C492) * C114 + (C495 - C494) * C31941) * C106 +
            ((C31958 * C476 - C113 * C475) * C114 +
             (C31958 * C478 - C113 * C477) * C31941) *
                C107) *
               C31918 * C472) *
              C474)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C31958 * C122 - C113 * C115) * C817 +
             (C31958 * C136 - C113 * C123) * C32265 + (C982 - C983) * C818 +
             (C984 - C985) * C32253 + C1004 * C819 + C1005 * C32230) *
                C814 +
            ((C144 - C145) * C817 + (C146 - C147) * C32265 + C1302 * C818 +
             C1303 * C32253 + C990 * C819 + C991 * C32230) *
                C815 +
            C847 * C32219) *
               C31918 * C471 +
           (((C983 - C982) * C817 + (C985 - C984) * C32265 +
             (C987 - C986) * C818 + (C989 - C988) * C32253 +
             (C992 - C993) * C819 + (C994 - C995) * C32230) *
                C814 +
            (C1304 * C817 + C1305 * C32265 + C1306 * C818 + C1307 * C32253 +
             (C996 - C997) * C819 + (C998 - C999) * C32230) *
                C815 +
            (C1308 * C817 + C1309 * C32265 + C1310 * C818 + C1311 * C32253 +
             (C1000 - C1001) * C819 + (C1002 - C1003) * C32230) *
                C32219) *
               C31918 * C472) *
              C473 +
          ((((C145 - C144) * C817 + (C147 - C146) * C32265 + C1304 * C818 +
             C1305 * C32253 + C1306 * C819 + C1307 * C32230) *
                C814 +
            ((C149 - C148) * C817 + (C151 - C150) * C32265 + C1308 * C818 +
             C1309 * C32253 + C1310 * C819 + C1311 * C32230) *
                C815 +
            ((C153 - C152) * C817 + (C155 - C154) * C32265 +
             (C488 - C489) * C818 + (C490 - C491) * C32253 +
             (C833 - C834) * C819 + (C835 - C836) * C32230) *
                C32219) *
               C31918 * C471 +
           ((C1302 * C817 + C1303 * C32265 + C990 * C818 + C991 * C32253 +
             (C997 - C996) * C819 + (C999 - C998) * C32230) *
                C814 +
            (C827 * C817 + C828 * C32265 + C840 * C818 + C841 * C32253 +
             (C1001 - C1000) * C819 + (C1003 - C1002) * C32230) *
                C815 +
            ((C489 - C488) * C817 + (C491 - C490) * C32265 +
             (C834 - C833) * C818 + (C836 - C835) * C32253 +
             (C31958 * C1298 - C113 * C1297) * C819 +
             (C31958 * C1300 - C113 * C1299) * C32230) *
                C32219) *
               C31918 * C472) *
              C474)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C31958 * C122 - C113 * C115) * C5281 +
             (C31958 * C136 - C113 * C123) * C5275 + (C982 - C983) * C5282 +
             (C984 - C985) * C5276 + C1004 * C5283 + C1005 * C32230) *
                C32262 +
            ((C144 - C145) * C5281 + (C146 - C147) * C5275 + C1302 * C5282 +
             C1303 * C5276 + C990 * C5283 + C991 * C32230) *
                C32249 +
            C5295 * C32219) *
               C31918 * C471 +
           (((C983 - C982) * C5281 + (C985 - C984) * C5275 +
             (C987 - C986) * C5282 + (C989 - C988) * C5276 +
             (C992 - C993) * C5283 + (C994 - C995) * C32230) *
                C32262 +
            (C1304 * C5281 + C1305 * C5275 + C1306 * C5282 + C1307 * C5276 +
             (C996 - C997) * C5283 + (C998 - C999) * C32230) *
                C32249 +
            (C1308 * C5281 + C1309 * C5275 + C1310 * C5282 + C1311 * C5276 +
             (C1000 - C1001) * C5283 + (C1002 - C1003) * C32230) *
                C32219) *
               C31918 * C472) *
              C473 +
          ((((C145 - C144) * C5281 + (C147 - C146) * C5275 + C1304 * C5282 +
             C1305 * C5276 + C1306 * C5283 + C1307 * C32230) *
                C32262 +
            ((C149 - C148) * C5281 + (C151 - C150) * C5275 + C1308 * C5282 +
             C1309 * C5276 + C1310 * C5283 + C1311 * C32230) *
                C32249 +
            ((C153 - C152) * C5281 + (C155 - C154) * C5275 + C3007 * C5282 +
             C3008 * C5276 + (C833 - C834) * C5283 + (C835 - C836) * C32230) *
                C32219) *
               C31918 * C471 +
           ((C1302 * C5281 + C1303 * C5275 + C990 * C5282 + C991 * C5276 +
             (C997 - C996) * C5283 + (C999 - C998) * C32230) *
                C32262 +
            (C827 * C5281 + C828 * C5275 + C840 * C5282 + C841 * C5276 +
             (C1001 - C1000) * C5283 + (C1003 - C1002) * C32230) *
                C32249 +
            (C2671 * C5281 + C2672 * C5275 + (C834 - C833) * C5282 +
             (C836 - C835) * C5276 + (C31958 * C1298 - C113 * C1297) * C5283 +
             (C31958 * C1300 - C113 * C1299) * C32230) *
                C32219) *
               C31918 * C472) *
              C474)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C31958 * C122 - C113 * C115) * C6021 +
            (C31958 * C136 - C113 * C123) * C6015 + (C982 - C983) * C6022 +
            (C984 - C985) * C6016 + C1004 * C6023 + C1005 * C6017 +
            C6097 * C6024 + C6098 * C6018 + C6107 * C6025 + C6108 * C6019) *
               C31859 * C31918 * C471 +
           ((C983 - C982) * C6021 + (C985 - C984) * C6015 +
            (C987 - C986) * C6022 + (C989 - C988) * C6016 +
            (C992 - C993) * C6023 + (C994 - C995) * C6017 +
            (C6100 - C6099) * C6024 + (C6102 - C6101) * C6018 +
            (C6103 - C6104) * C6025 + (C6105 - C6106) * C6019) *
               C31859 * C31918 * C472) *
              C473 +
          (((C145 - C144) * C6021 + (C147 - C146) * C6015 + C1304 * C6022 +
            C1305 * C6016 + C1306 * C6023 + C1307 * C6017 +
            (C996 - C997) * C6024 + (C998 - C999) * C6018 +
            (C6269 - C6270) * C6025 + (C6271 - C6272) * C6019) *
               C31859 * C31918 * C471 +
           (C1302 * C6021 + C1303 * C6015 + C990 * C6022 + C991 * C6016 +
            (C997 - C996) * C6023 + (C999 - C998) * C6017 +
            (C6270 - C6269) * C6024 + (C6272 - C6271) * C6018 +
            (C31958 * C6265 - C113 * C6264) * C6025 +
            (C31958 * C6267 - C113 * C6266) * C6019) *
               C31859 * C31918 * C472) *
              C474)) /
            (p * q * std::sqrt(p + q));
    d2ee[121] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C31958 * C122 - C113 * C115) * C114 +
             (C31958 * C136 - C113 * C123) * C31941) *
                C103 +
            ((C144 - C145) * C114 + (C146 - C147) * C31941) * C104 +
            C176 * C105 + C177 * C106 + C178 * C107) *
               C577 +
           (((C113 * C349 - C31958 * C359) * C114 +
             (C113 * C360 - C31958 * C379) * C31941) *
                C103 +
            ((C584 - C585) * C114 + (C586 - C587) * C31941) * C104 +
            ((C588 - C589) * C114 + (C590 - C591) * C31941) * C105 +
            ((C592 - C593) * C114 + (C594 - C595) * C31941) * C106 +
            ((C596 - C597) * C114 + (C598 - C599) * C31941) * C107) *
               C578) *
              C471 +
          ((((C113 * C244 - C31958 * C254) * C114 +
             (C113 * C255 - C31958 * C274) * C31941) *
                C103 +
            ((C480 - C481) * C114 + (C482 - C483) * C31941) * C104 +
            ((C484 - C485) * C114 + (C486 - C487) * C31941) * C105 +
            ((C488 - C489) * C114 + (C490 - C491) * C31941) * C106 +
            ((C492 - C493) * C114 + (C494 - C495) * C31941) * C107) *
               C577 +
           (((C31958 * C686 - C113 * C681) * C114 +
             (C31958 * C696 - C113 * C687) * C31941) *
                C103 +
            ((C31958 * C688 - C113 * C682) * C114 +
             (C31958 * C697 - C113 * C689) * C31941) *
                C104 +
            ((C31958 * C690 - C113 * C683) * C114 +
             (C31958 * C698 - C113 * C691) * C31941) *
                C105 +
            ((C31958 * C692 - C113 * C684) * C114 +
             (C31958 * C699 - C113 * C693) * C31941) *
                C106 +
            ((C31958 * C694 - C113 * C685) * C114 +
             (C31958 * C700 - C113 * C695) * C31941) *
                C107) *
               C578) *
              C472) *
         C31892) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C31958 * C122 - C113 * C115) * C817 +
             (C31958 * C136 - C113 * C123) * C32265 + (C982 - C983) * C818 +
             (C984 - C985) * C32253 + C1004 * C819 + C1005 * C32230) *
                C814 +
            ((C144 - C145) * C817 + (C146 - C147) * C32265 + C1302 * C818 +
             C1303 * C32253 + C990 * C819 + C991 * C32230) *
                C815 +
            C847 * C32219) *
               C577 +
           (((C113 * C349 - C31958 * C359) * C817 +
             (C113 * C360 - C31958 * C379) * C32265 + (C1636 - C1637) * C818 +
             (C1638 - C1639) * C32253 + (C1640 - C1641) * C819 +
             (C1642 - C1643) * C32230) *
                C814 +
            ((C584 - C585) * C817 + (C586 - C587) * C32265 +
             (C1462 - C1463) * C818 + (C1464 - C1465) * C32253 +
             (C1466 - C1467) * C819 + (C1468 - C1469) * C32230) *
                C815 +
            ((C588 - C589) * C817 + (C590 - C591) * C32265 +
             (C1470 - C1471) * C818 + (C1472 - C1473) * C32253 +
             (C1474 - C1475) * C819 + (C1476 - C1477) * C32230) *
                C32219) *
               C578) *
              C471 +
          ((((C983 - C982) * C817 + (C985 - C984) * C32265 +
             (C987 - C986) * C818 + (C989 - C988) * C32253 +
             (C992 - C993) * C819 + (C994 - C995) * C32230) *
                C814 +
            (C1304 * C817 + C1305 * C32265 + C1306 * C818 + C1307 * C32253 +
             (C996 - C997) * C819 + (C998 - C999) * C32230) *
                C815 +
            (C1308 * C817 + C1309 * C32265 + C1310 * C818 + C1311 * C32253 +
             (C1000 - C1001) * C819 + (C1002 - C1003) * C32230) *
                C32219) *
               C577 +
           (((C1637 - C1636) * C817 + (C1639 - C1638) * C32265 +
             (C1641 - C1640) * C818 + (C1643 - C1642) * C32253 +
             (C31958 * C1626 - C113 * C1623) * C819 +
             (C31958 * C1632 - C113 * C1627) * C32230) *
                C814 +
            ((C1463 - C1462) * C817 + (C1465 - C1464) * C32265 +
             (C1467 - C1466) * C818 + (C1469 - C1468) * C32253 +
             (C31958 * C1628 - C113 * C1624) * C819 +
             (C31958 * C1633 - C113 * C1629) * C32230) *
                C815 +
            ((C1471 - C1470) * C817 + (C1473 - C1472) * C32265 +
             (C1475 - C1474) * C818 + (C1477 - C1476) * C32253 +
             (C31958 * C1630 - C113 * C1625) * C819 +
             (C31958 * C1634 - C113 * C1631) * C32230) *
                C32219) *
               C578) *
              C472) *
         C31892) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C31958 * C122 - C113 * C115) * C5281 +
             (C31958 * C136 - C113 * C123) * C5275 + (C982 - C983) * C5282 +
             (C984 - C985) * C5276 + C1004 * C5283 + C1005 * C32230) *
                C32262 +
            ((C144 - C145) * C5281 + (C146 - C147) * C5275 + C1302 * C5282 +
             C1303 * C5276 + C990 * C5283 + C991 * C32230) *
                C32249 +
            C5295 * C32219) *
               C577 +
           (((C113 * C349 - C31958 * C359) * C5281 +
             (C113 * C360 - C31958 * C379) * C5275 + (C1636 - C1637) * C5282 +
             (C1638 - C1639) * C5276 + (C1640 - C1641) * C5283 +
             (C1642 - C1643) * C32230) *
                C32262 +
            ((C584 - C585) * C5281 + (C586 - C587) * C5275 +
             (C1462 - C1463) * C5282 + (C1464 - C1465) * C5276 +
             (C1466 - C1467) * C5283 + (C1468 - C1469) * C32230) *
                C32249 +
            ((C588 - C589) * C5281 + (C590 - C591) * C5275 +
             (C1470 - C1471) * C5282 + (C1472 - C1473) * C5276 +
             (C1474 - C1475) * C5283 + (C1476 - C1477) * C32230) *
                C32219) *
               C578) *
              C471 +
          ((((C983 - C982) * C5281 + (C985 - C984) * C5275 +
             (C987 - C986) * C5282 + (C989 - C988) * C5276 +
             (C992 - C993) * C5283 + (C994 - C995) * C32230) *
                C32262 +
            (C1304 * C5281 + C1305 * C5275 + C1306 * C5282 + C1307 * C5276 +
             (C996 - C997) * C5283 + (C998 - C999) * C32230) *
                C32249 +
            (C1308 * C5281 + C1309 * C5275 + C1310 * C5282 + C1311 * C5276 +
             (C1000 - C1001) * C5283 + (C1002 - C1003) * C32230) *
                C32219) *
               C577 +
           (((C1637 - C1636) * C5281 + (C1639 - C1638) * C5275 +
             (C1641 - C1640) * C5282 + (C1643 - C1642) * C5276 +
             (C31958 * C1626 - C113 * C1623) * C5283 +
             (C31958 * C1632 - C113 * C1627) * C32230) *
                C32262 +
            ((C1463 - C1462) * C5281 + (C1465 - C1464) * C5275 +
             (C1467 - C1466) * C5282 + (C1469 - C1468) * C5276 +
             (C31958 * C1628 - C113 * C1624) * C5283 +
             (C31958 * C1633 - C113 * C1629) * C32230) *
                C32249 +
            ((C1471 - C1470) * C5281 + (C1473 - C1472) * C5275 +
             (C1475 - C1474) * C5282 + (C1477 - C1476) * C5276 +
             (C31958 * C1630 - C113 * C1625) * C5283 +
             (C31958 * C1634 - C113 * C1631) * C32230) *
                C32219) *
               C578) *
              C472) *
         C31892) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C31958 * C122 - C113 * C115) * C6021 +
            (C31958 * C136 - C113 * C123) * C6015 + (C982 - C983) * C6022 +
            (C984 - C985) * C6016 + C1004 * C6023 + C1005 * C6017 +
            C6097 * C6024 + C6098 * C6018 + C6107 * C6025 + C6108 * C6019) *
               C31859 * C577 +
           ((C113 * C349 - C31958 * C359) * C6021 +
            (C113 * C360 - C31958 * C379) * C6015 + (C1636 - C1637) * C6022 +
            (C1638 - C1639) * C6016 + (C1640 - C1641) * C6023 +
            (C1642 - C1643) * C6017 + (C6445 - C6446) * C6024 +
            (C6447 - C6448) * C6018 + (C6449 - C6450) * C6025 +
            (C6451 - C6452) * C6019) *
               C31859 * C578) *
              C471 +
          (((C983 - C982) * C6021 + (C985 - C984) * C6015 +
            (C987 - C986) * C6022 + (C989 - C988) * C6016 +
            (C992 - C993) * C6023 + (C994 - C995) * C6017 +
            (C6100 - C6099) * C6024 + (C6102 - C6101) * C6018 +
            (C6103 - C6104) * C6025 + (C6105 - C6106) * C6019) *
               C31859 * C577 +
           ((C1637 - C1636) * C6021 + (C1639 - C1638) * C6015 +
            (C1641 - C1640) * C6022 + (C1643 - C1642) * C6016 +
            (C6446 - C6445) * C6023 + (C6448 - C6447) * C6017 +
            (C6450 - C6449) * C6024 + (C6452 - C6451) * C6018 +
            (C31958 * C6441 - C113 * C6440) * C6025 +
            (C31958 * C6443 - C113 * C6442) * C6019) *
               C31859 * C578) *
              C472) *
         C31892) /
            (p * q * std::sqrt(p + q));
    d2ee[122] +=
        (-std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C31958 * C122 - C113 * C115) * C114 +
            (C31958 * C136 - C113 * C123) * C31941) *
               C103 +
           ((C144 - C145) * C114 + (C146 - C147) * C31941) * C104 +
           C176 * C105 + C177 * C106 + C178 * C107) *
              C31918 * C240 +
          (((C113 * C244 - C31958 * C254) * C114 +
            (C113 * C255 - C31958 * C274) * C31941) *
               C103 +
           ((C113 * C245 - C31958 * C256) * C114 +
            (C113 * C257 - C31958 * C275) * C31941) *
               C104 +
           ((C113 * C246 - C31958 * C258) * C114 +
            (C113 * C259 - C31958 * C276) * C31941) *
               C105 +
           ((C113 * C247 - C31958 * C260) * C114 +
            (C113 * C261 - C31958 * C277) * C31941) *
               C106 +
           ((C113 * C248 - C31958 * C262) * C114 +
            (C113 * C263 - C31958 * C278) * C31941) *
               C107) *
              C31918 * C241 +
          (((C31958 * C264 - C113 * C249) * C114 +
            (C31958 * C279 - C113 * C265) * C31941) *
               C103 +
           ((C31958 * C266 - C113 * C250) * C114 +
            (C31958 * C280 - C113 * C267) * C31941) *
               C104 +
           ((C31958 * C268 - C113 * C251) * C114 +
            (C31958 * C281 - C113 * C269) * C31941) *
               C105 +
           ((C31958 * C270 - C113 * C252) * C114 +
            (C31958 * C282 - C113 * C271) * C31941) *
               C106 +
           ((C31958 * C272 - C113 * C253) * C114 +
            (C31958 * C283 - C113 * C273) * C31941) *
               C107) *
              C31918 * C242) *
         C31892) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C31958 * C122 - C113 * C115) * C114 +
            (C31958 * C136 - C113 * C123) * C31941) *
               C103 +
           ((C144 - C145) * C114 + (C146 - C147) * C31941) * C104 +
           C176 * C105 + C177 * C106 + C178 * C107) *
              C31918 * C31904 * C110 +
          (((C145 - C144) * C114 + (C147 - C146) * C31941) * C103 +
           ((C149 - C148) * C114 + (C151 - C150) * C31941) * C104 +
           ((C153 - C152) * C114 + (C155 - C154) * C31941) * C105 +
           ((C157 - C156) * C114 + (C159 - C158) * C31941) * C106 +
           ((C160 - C161) * C114 + (C162 - C163) * C31941) * C107) *
              C31918 * C31904 * C111 +
          (C176 * C103 + C177 * C104 + C178 * C105 +
           ((C161 - C160) * C114 + (C163 - C162) * C31941) * C106 +
           ((C31958 * C134 - C113 * C121) * C114 +
            (C31958 * C142 - C113 * C135) * C31941) *
               C107) *
              C31918 * C31904 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31958 * C122 - C113 * C115) * C114 +
            (C31958 * C136 - C113 * C123) * C31941) *
               C103 +
           ((C144 - C145) * C114 + (C146 - C147) * C31941) * C104 +
           C176 * C105 + C177 * C106 + C178 * C107) *
              C346 +
          (((C113 * C349 - C31958 * C359) * C114 +
            (C113 * C360 - C31958 * C379) * C31941) *
               C103 +
           ((C113 * C350 - C31958 * C361) * C114 +
            (C113 * C362 - C31958 * C380) * C31941) *
               C104 +
           ((C113 * C351 - C31958 * C363) * C114 +
            (C113 * C364 - C31958 * C381) * C31941) *
               C105 +
           ((C113 * C352 - C31958 * C365) * C114 +
            (C113 * C366 - C31958 * C382) * C31941) *
               C106 +
           ((C113 * C353 - C31958 * C367) * C114 +
            (C113 * C368 - C31958 * C383) * C31941) *
               C107) *
              C347 +
          (((C31958 * C369 - C113 * C354) * C114 +
            (C31958 * C384 - C113 * C370) * C31941) *
               C103 +
           ((C31958 * C371 - C113 * C355) * C114 +
            (C31958 * C385 - C113 * C372) * C31941) *
               C104 +
           ((C31958 * C373 - C113 * C356) * C114 +
            (C31958 * C386 - C113 * C374) * C31941) *
               C105 +
           ((C31958 * C375 - C113 * C357) * C114 +
            (C31958 * C387 - C113 * C376) * C31941) *
               C106 +
           ((C31958 * C377 - C113 * C358) * C114 +
            (C31958 * C388 - C113 * C378) * C31941) *
               C107) *
              C348) *
         C31904 * C31892) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C31958 * C122 - C113 * C115) * C817 +
            (C31958 * C136 - C113 * C123) * C32265 +
            (C31958 * C254 - C113 * C244) * C818 +
            (C31958 * C274 - C113 * C255) * C32253 +
            (C31958 * C264 - C113 * C249) * C819 +
            (C31958 * C279 - C113 * C265) * C32230) *
               C814 +
           ((C144 - C145) * C817 + (C146 - C147) * C32265 +
            (C481 - C480) * C818 + (C483 - C482) * C32253 +
            (C821 - C822) * C819 + (C823 - C824) * C32230) *
               C815 +
           C847 * C32219) *
              C31918 * C31904 * C110 +
          (((C145 - C144) * C817 + (C147 - C146) * C32265 +
            (C480 - C481) * C818 + (C482 - C483) * C32253 +
            (C822 - C821) * C819 + (C824 - C823) * C32230) *
               C814 +
           ((C149 - C148) * C817 + (C151 - C150) * C32265 +
            (C484 - C485) * C818 + (C486 - C487) * C32253 +
            (C830 - C829) * C819 + (C832 - C831) * C32230) *
               C815 +
           ((C153 - C152) * C817 + (C155 - C154) * C32265 +
            (C488 - C489) * C818 + (C490 - C491) * C32253 +
            (C833 - C834) * C819 + (C835 - C836) * C32230) *
               C32219) *
              C31918 * C31904 * C111 +
          (C847 * C814 +
           (C166 * C817 + C167 * C32265 + (C489 - C488) * C818 +
            (C491 - C490) * C32253 + (C834 - C833) * C819 +
            (C836 - C835) * C32230) *
               C815 +
           (C168 * C817 + C169 * C32265 + (C493 - C492) * C818 +
            (C495 - C494) * C32253 + (C31958 * C272 - C113 * C253) * C819 +
            (C31958 * C283 - C113 * C273) * C32230) *
               C32219) *
              C31918 * C31904 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C31958 * C122 - C113 * C115) * C817 +
            (C31958 * C136 - C113 * C123) * C32265 + (C982 - C983) * C818 +
            (C984 - C985) * C32253 + C1004 * C819 + C1005 * C32230) *
               C814 +
           ((C144 - C145) * C817 + (C146 - C147) * C32265 +
            (C481 - C480) * C818 + (C483 - C482) * C32253 + C990 * C819 +
            C991 * C32230) *
               C815 +
           C847 * C32219) *
              C31918 * C240 +
          (((C983 - C982) * C817 + (C985 - C984) * C32265 +
            (C987 - C986) * C818 + (C989 - C988) * C32253 +
            (C992 - C993) * C819 + (C994 - C995) * C32230) *
               C814 +
           ((C480 - C481) * C817 + (C482 - C483) * C32265 +
            (C822 - C821) * C818 + (C824 - C823) * C32253 +
            (C996 - C997) * C819 + (C998 - C999) * C32230) *
               C815 +
           ((C484 - C485) * C817 + (C486 - C487) * C32265 +
            (C830 - C829) * C818 + (C832 - C831) * C32253 +
            (C1000 - C1001) * C819 + (C1002 - C1003) * C32230) *
               C32219) *
              C31918 * C241 +
          ((C1004 * C817 + C1005 * C32265 + (C993 - C992) * C818 +
            (C995 - C994) * C32253 + (C31958 * C969 - C113 * C960) * C819 +
            (C31958 * C978 - C113 * C970) * C32230) *
               C814 +
           (C990 * C817 + C991 * C32265 + (C997 - C996) * C818 +
            (C999 - C998) * C32253 + (C31958 * C971 - C113 * C961) * C819 +
            (C31958 * C979 - C113 * C972) * C32230) *
               C815 +
           (C840 * C817 + C841 * C32265 + (C1001 - C1000) * C818 +
            (C1003 - C1002) * C32253 + (C31958 * C973 - C113 * C962) * C819 +
            (C31958 * C980 - C113 * C974) * C32230) *
               C32219) *
              C31918 * C242) *
         C31892) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31958 * C122 - C113 * C115) * C817 +
            (C31958 * C136 - C113 * C123) * C32265 + (C982 - C983) * C818 +
            (C984 - C985) * C32253 + C1004 * C819 + C1005 * C32230) *
               C814 +
           ((C144 - C145) * C817 + (C146 - C147) * C32265 +
            (C481 - C480) * C818 + (C483 - C482) * C32253 + C990 * C819 +
            C991 * C32230) *
               C815 +
           C847 * C32219) *
              C346 +
          (((C113 * C349 - C31958 * C359) * C817 +
            (C113 * C360 - C31958 * C379) * C32265 +
            (C113 * C681 - C31958 * C686) * C818 +
            (C113 * C687 - C31958 * C696) * C32253 +
            (C113 * C1115 - C31958 * C1124) * C819 +
            (C113 * C1125 - C31958 * C1142) * C32230) *
               C814 +
           ((C584 - C585) * C817 + (C586 - C587) * C32265 +
            (C113 * C682 - C31958 * C688) * C818 +
            (C113 * C689 - C31958 * C697) * C32253 +
            (C113 * C1116 - C31958 * C1126) * C819 +
            (C113 * C1127 - C31958 * C1143) * C32230) *
               C815 +
           ((C588 - C589) * C817 + (C590 - C591) * C32265 +
            (C113 * C683 - C31958 * C690) * C818 +
            (C113 * C691 - C31958 * C698) * C32253 +
            (C113 * C1117 - C31958 * C1128) * C819 +
            (C113 * C1129 - C31958 * C1144) * C32230) *
               C32219) *
              C347 +
          (((C31958 * C369 - C113 * C354) * C817 +
            (C31958 * C384 - C113 * C370) * C32265 +
            (C31958 * C1130 - C113 * C1118) * C818 +
            (C31958 * C1145 - C113 * C1131) * C32253 +
            (C31958 * C1132 - C113 * C1119) * C819 +
            (C31958 * C1146 - C113 * C1133) * C32230) *
               C814 +
           ((C31958 * C371 - C113 * C355) * C817 +
            (C31958 * C385 - C113 * C372) * C32265 +
            (C31958 * C1134 - C113 * C1120) * C818 +
            (C31958 * C1147 - C113 * C1135) * C32253 +
            (C31958 * C1136 - C113 * C1121) * C819 +
            (C31958 * C1148 - C113 * C1137) * C32230) *
               C815 +
           ((C31958 * C373 - C113 * C356) * C817 +
            (C31958 * C386 - C113 * C374) * C32265 +
            (C31958 * C1138 - C113 * C1122) * C818 +
            (C31958 * C1149 - C113 * C1139) * C32253 +
            (C31958 * C1140 - C113 * C1123) * C819 +
            (C31958 * C1150 - C113 * C1141) * C32230) *
               C32219) *
              C348) *
         C31904 * C31892) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C31958 * C122 - C113 * C115) * C5281 +
            (C31958 * C136 - C113 * C123) * C5275 + (C982 - C983) * C5282 +
            (C984 - C985) * C5276 + C1004 * C5283 + C1005 * C32230) *
               C32262 +
           ((C144 - C145) * C5281 + (C146 - C147) * C5275 + C1302 * C5282 +
            C1303 * C5276 + C990 * C5283 + C991 * C32230) *
               C32249 +
           C5295 * C32219) *
              C31918 * C31904 * C110 +
          (((C145 - C144) * C5281 + (C147 - C146) * C5275 + C1304 * C5282 +
            C1305 * C5276 + C1306 * C5283 + C1307 * C32230) *
               C32262 +
           ((C149 - C148) * C5281 + (C151 - C150) * C5275 + C1308 * C5282 +
            C1309 * C5276 + C1310 * C5283 + C1311 * C32230) *
               C32249 +
           ((C153 - C152) * C5281 + (C155 - C154) * C5275 + C3007 * C5282 +
            C3008 * C5276 + (C833 - C834) * C5283 + (C835 - C836) * C32230) *
               C32219) *
              C31918 * C31904 * C111 +
          (C5295 * C32262 +
           (C166 * C5281 + C167 * C5275 + C2671 * C5282 + C2672 * C5276 +
            (C834 - C833) * C5283 + (C836 - C835) * C32230) *
               C32249 +
           (C168 * C5281 + C169 * C5275 + (C493 - C492) * C5282 +
            (C495 - C494) * C5276 + (C31958 * C272 - C113 * C253) * C5283 +
            (C31958 * C283 - C113 * C273) * C32230) *
               C32219) *
              C31918 * C31904 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C31958 * C122 - C113 * C115) * C5281 +
            (C31958 * C136 - C113 * C123) * C5275 + (C982 - C983) * C5282 +
            (C984 - C985) * C5276 + C1004 * C5283 + C1005 * C32230) *
               C32262 +
           ((C144 - C145) * C5281 + (C146 - C147) * C5275 + C1302 * C5282 +
            C1303 * C5276 + C990 * C5283 + C991 * C32230) *
               C32249 +
           C5295 * C32219) *
              C31918 * C240 +
          (((C983 - C982) * C5281 + (C985 - C984) * C5275 +
            (C987 - C986) * C5282 + (C989 - C988) * C5276 +
            (C992 - C993) * C5283 + (C994 - C995) * C32230) *
               C32262 +
           (C1304 * C5281 + C1305 * C5275 + C1306 * C5282 + C1307 * C5276 +
            (C996 - C997) * C5283 + (C998 - C999) * C32230) *
               C32249 +
           (C1308 * C5281 + C1309 * C5275 + C1310 * C5282 + C1311 * C5276 +
            (C1000 - C1001) * C5283 + (C1002 - C1003) * C32230) *
               C32219) *
              C31918 * C241 +
          ((C1004 * C5281 + C1005 * C5275 + (C993 - C992) * C5282 +
            (C995 - C994) * C5276 + (C31958 * C969 - C113 * C960) * C5283 +
            (C31958 * C978 - C113 * C970) * C32230) *
               C32262 +
           (C990 * C5281 + C991 * C5275 + (C997 - C996) * C5282 +
            (C999 - C998) * C5276 + (C31958 * C971 - C113 * C961) * C5283 +
            (C31958 * C979 - C113 * C972) * C32230) *
               C32249 +
           (C840 * C5281 + C841 * C5275 + (C1001 - C1000) * C5282 +
            (C1003 - C1002) * C5276 + (C31958 * C973 - C113 * C962) * C5283 +
            (C31958 * C980 - C113 * C974) * C32230) *
               C32219) *
              C31918 * C242) *
         C31892) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31958 * C122 - C113 * C115) * C5281 +
            (C31958 * C136 - C113 * C123) * C5275 + (C982 - C983) * C5282 +
            (C984 - C985) * C5276 + C1004 * C5283 + C1005 * C32230) *
               C32262 +
           ((C144 - C145) * C5281 + (C146 - C147) * C5275 + C1302 * C5282 +
            C1303 * C5276 + C990 * C5283 + C991 * C32230) *
               C32249 +
           C5295 * C32219) *
              C346 +
          (((C113 * C349 - C31958 * C359) * C5281 +
            (C113 * C360 - C31958 * C379) * C5275 + (C1636 - C1637) * C5282 +
            (C1638 - C1639) * C5276 + (C1640 - C1641) * C5283 +
            (C1642 - C1643) * C32230) *
               C32262 +
           ((C584 - C585) * C5281 + (C586 - C587) * C5275 +
            (C1462 - C1463) * C5282 + (C1464 - C1465) * C5276 +
            (C1466 - C1467) * C5283 + (C1468 - C1469) * C32230) *
               C32249 +
           ((C588 - C589) * C5281 + (C590 - C591) * C5275 +
            (C1470 - C1471) * C5282 + (C1472 - C1473) * C5276 +
            (C1474 - C1475) * C5283 + (C1476 - C1477) * C32230) *
               C32219) *
              C347 +
          (((C31958 * C369 - C113 * C354) * C5281 +
            (C31958 * C384 - C113 * C370) * C5275 +
            (C31958 * C1130 - C113 * C1118) * C5282 +
            (C31958 * C1145 - C113 * C1131) * C5276 +
            (C31958 * C1132 - C113 * C1119) * C5283 +
            (C31958 * C1146 - C113 * C1133) * C32230) *
               C32262 +
           ((C31958 * C371 - C113 * C355) * C5281 +
            (C31958 * C385 - C113 * C372) * C5275 +
            (C31958 * C1134 - C113 * C1120) * C5282 +
            (C31958 * C1147 - C113 * C1135) * C5276 +
            (C31958 * C1136 - C113 * C1121) * C5283 +
            (C31958 * C1148 - C113 * C1137) * C32230) *
               C32249 +
           ((C31958 * C373 - C113 * C356) * C5281 +
            (C31958 * C386 - C113 * C374) * C5275 +
            (C31958 * C1138 - C113 * C1122) * C5282 +
            (C31958 * C1149 - C113 * C1139) * C5276 +
            (C31958 * C1140 - C113 * C1123) * C5283 +
            (C31958 * C1150 - C113 * C1141) * C32230) *
               C32219) *
              C348) *
         C31904 * C31892) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C31958 * C122 - C113 * C115) * C6021 +
           (C31958 * C136 - C113 * C123) * C6015 + (C982 - C983) * C6022 +
           (C984 - C985) * C6016 + C1004 * C6023 + C1005 * C6017 +
           (C993 - C992) * C6024 + (C995 - C994) * C6018 +
           (C31958 * C969 - C113 * C960) * C6025 +
           (C31958 * C978 - C113 * C970) * C6019) *
              C31859 * C31918 * C31904 * C110 +
          ((C145 - C144) * C6021 + (C147 - C146) * C6015 + C1304 * C6022 +
           C1305 * C6016 + C1306 * C6023 + C1307 * C6017 +
           (C996 - C997) * C6024 + (C998 - C999) * C6018 +
           (C113 * C961 - C31958 * C971) * C6025 +
           (C113 * C972 - C31958 * C979) * C6019) *
              C31859 * C31918 * C31904 * C111 +
          (C164 * C6021 + C165 * C6015 + C827 * C6022 + C828 * C6016 +
           C840 * C6023 + C841 * C6017 + (C1001 - C1000) * C6024 +
           (C1003 - C1002) * C6018 + (C31958 * C973 - C113 * C962) * C6025 +
           (C31958 * C980 - C113 * C974) * C6019) *
              C31859 * C31918 * C31904 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C31958 * C122 - C113 * C115) * C6021 +
           (C31958 * C136 - C113 * C123) * C6015 + (C982 - C983) * C6022 +
           (C984 - C985) * C6016 + C1004 * C6023 + C1005 * C6017 +
           C6097 * C6024 + C6098 * C6018 + C6107 * C6025 + C6108 * C6019) *
              C31859 * C31918 * C240 +
          ((C983 - C982) * C6021 + (C985 - C984) * C6015 +
           (C987 - C986) * C6022 + (C989 - C988) * C6016 +
           (C992 - C993) * C6023 + (C994 - C995) * C6017 +
           (C6100 - C6099) * C6024 + (C6102 - C6101) * C6018 +
           (C6103 - C6104) * C6025 + (C6105 - C6106) * C6019) *
              C31859 * C31918 * C241 +
          (C1004 * C6021 + C1005 * C6015 + C6097 * C6022 + C6098 * C6016 +
           C6107 * C6023 + C6108 * C6017 + (C6104 - C6103) * C6024 +
           (C6106 - C6105) * C6018 + (C31958 * C6092 - C113 * C6089) * C6025 +
           (C31958 * C6095 - C113 * C6093) * C6019) *
              C31859 * C31918 * C242) *
         C31892) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C31958 * C122 - C113 * C115) * C6021 +
           (C31958 * C136 - C113 * C123) * C6015 + (C982 - C983) * C6022 +
           (C984 - C985) * C6016 + C1004 * C6023 + C1005 * C6017 +
           C6097 * C6024 + C6098 * C6018 + C6107 * C6025 + C6108 * C6019) *
              C31859 * C346 +
          ((C113 * C349 - C31958 * C359) * C6021 +
           (C113 * C360 - C31958 * C379) * C6015 + (C1636 - C1637) * C6022 +
           (C1638 - C1639) * C6016 + (C1640 - C1641) * C6023 +
           (C1642 - C1643) * C6017 + (C113 * C1623 - C31958 * C1626) * C6024 +
           (C113 * C1627 - C31958 * C1632) * C6018 +
           (C113 * C6170 - C31958 * C6173) * C6025 +
           (C113 * C6174 - C31958 * C6179) * C6019) *
              C31859 * C347 +
          ((C31958 * C369 - C113 * C354) * C6021 +
           (C31958 * C384 - C113 * C370) * C6015 +
           (C31958 * C1130 - C113 * C1118) * C6022 +
           (C31958 * C1145 - C113 * C1131) * C6016 +
           (C31958 * C1132 - C113 * C1119) * C6023 +
           (C31958 * C1146 - C113 * C1133) * C6017 +
           (C31958 * C6175 - C113 * C6171) * C6024 +
           (C31958 * C6180 - C113 * C6176) * C6018 +
           (C31958 * C6177 - C113 * C6172) * C6025 +
           (C31958 * C6181 - C113 * C6178) * C6019) *
              C31859 * C348) *
         C31904 * C31892) /
            (p * q * std::sqrt(p + q));
    d2ee[123] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C31958 * C122 - C113 * C115) * C114 +
             (C31958 * C136 - C113 * C123) * C31941) *
                C103 +
            ((C144 - C145) * C114 + (C146 - C147) * C31941) * C104 +
            C176 * C105 + C177 * C106 + C178 * C107) *
               C577 +
           (((C113 * C349 - C31958 * C359) * C114 +
             (C113 * C360 - C31958 * C379) * C31941) *
                C103 +
            ((C584 - C585) * C114 + (C586 - C587) * C31941) * C104 +
            ((C588 - C589) * C114 + (C590 - C591) * C31941) * C105 +
            ((C592 - C593) * C114 + (C594 - C595) * C31941) * C106 +
            ((C596 - C597) * C114 + (C598 - C599) * C31941) * C107) *
               C578) *
              C31904 * C473 +
          ((((C145 - C144) * C114 + (C147 - C146) * C31941) * C103 +
            ((C149 - C148) * C114 + (C151 - C150) * C31941) * C104 +
            ((C153 - C152) * C114 + (C155 - C154) * C31941) * C105 +
            ((C157 - C156) * C114 + (C159 - C158) * C31941) * C106 +
            ((C160 - C161) * C114 + (C162 - C163) * C31941) * C107) *
               C577 +
           (((C585 - C584) * C114 + (C587 - C586) * C31941) * C103 +
            ((C589 - C588) * C114 + (C591 - C590) * C31941) * C104 +
            ((C593 - C592) * C114 + (C595 - C594) * C31941) * C105 +
            ((C597 - C596) * C114 + (C599 - C598) * C31941) * C106 +
            ((C31958 * C580 - C113 * C579) * C114 +
             (C31958 * C582 - C113 * C581) * C31941) *
                C107) *
               C578) *
              C31904 * C474)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C31958 * C122 - C113 * C115) * C817 +
             (C31958 * C136 - C113 * C123) * C32265 + (C982 - C983) * C818 +
             (C984 - C985) * C32253 + C1004 * C819 + C1005 * C32230) *
                C814 +
            ((C144 - C145) * C817 + (C146 - C147) * C32265 + C1302 * C818 +
             C1303 * C32253 + C990 * C819 + C991 * C32230) *
                C815 +
            C847 * C32219) *
               C577 +
           (((C113 * C349 - C31958 * C359) * C817 +
             (C113 * C360 - C31958 * C379) * C32265 +
             (C113 * C681 - C31958 * C686) * C818 +
             (C113 * C687 - C31958 * C696) * C32253 +
             (C113 * C1115 - C31958 * C1124) * C819 +
             (C113 * C1125 - C31958 * C1142) * C32230) *
                C814 +
            ((C584 - C585) * C817 + (C586 - C587) * C32265 +
             (C1462 - C1463) * C818 + (C1464 - C1465) * C32253 +
             (C1466 - C1467) * C819 + (C1468 - C1469) * C32230) *
                C815 +
            ((C588 - C589) * C817 + (C590 - C591) * C32265 +
             (C1470 - C1471) * C818 + (C1472 - C1473) * C32253 +
             (C1474 - C1475) * C819 + (C1476 - C1477) * C32230) *
                C32219) *
               C578) *
              C31904 * C473 +
          ((((C145 - C144) * C817 + (C147 - C146) * C32265 + C1304 * C818 +
             C1305 * C32253 + C1306 * C819 + C1307 * C32230) *
                C814 +
            ((C149 - C148) * C817 + (C151 - C150) * C32265 + C1308 * C818 +
             C1309 * C32253 + C1310 * C819 + C1311 * C32230) *
                C815 +
            ((C153 - C152) * C817 + (C155 - C154) * C32265 +
             (C488 - C489) * C818 + (C490 - C491) * C32253 +
             (C833 - C834) * C819 + (C835 - C836) * C32230) *
                C32219) *
               C577 +
           (((C585 - C584) * C817 + (C587 - C586) * C32265 +
             (C1463 - C1462) * C818 + (C1465 - C1464) * C32253 +
             (C1467 - C1466) * C819 + (C1469 - C1468) * C32230) *
                C814 +
            ((C589 - C588) * C817 + (C591 - C590) * C32265 +
             (C1471 - C1470) * C818 + (C1473 - C1472) * C32253 +
             (C1475 - C1474) * C819 + (C1477 - C1476) * C32230) *
                C815 +
            ((C593 - C592) * C817 + (C595 - C594) * C32265 +
             (C31958 * C692 - C113 * C684) * C818 +
             (C31958 * C699 - C113 * C693) * C32253 +
             (C31958 * C1458 - C113 * C1457) * C819 +
             (C31958 * C1460 - C113 * C1459) * C32230) *
                C32219) *
               C578) *
              C31904 * C474)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C31958 * C122 - C113 * C115) * C5281 +
             (C31958 * C136 - C113 * C123) * C5275 + (C982 - C983) * C5282 +
             (C984 - C985) * C5276 + C1004 * C5283 + C1005 * C32230) *
                C32262 +
            ((C144 - C145) * C5281 + (C146 - C147) * C5275 + C1302 * C5282 +
             C1303 * C5276 + C990 * C5283 + C991 * C32230) *
                C32249 +
            C5295 * C32219) *
               C577 +
           (((C113 * C349 - C31958 * C359) * C5281 +
             (C113 * C360 - C31958 * C379) * C5275 + (C1636 - C1637) * C5282 +
             (C1638 - C1639) * C5276 + (C1640 - C1641) * C5283 +
             (C1642 - C1643) * C32230) *
                C32262 +
            ((C584 - C585) * C5281 + (C586 - C587) * C5275 +
             (C1462 - C1463) * C5282 + (C1464 - C1465) * C5276 +
             (C1466 - C1467) * C5283 + (C1468 - C1469) * C32230) *
                C32249 +
            ((C588 - C589) * C5281 + (C590 - C591) * C5275 +
             (C1470 - C1471) * C5282 + (C1472 - C1473) * C5276 +
             (C1474 - C1475) * C5283 + (C1476 - C1477) * C32230) *
                C32219) *
               C578) *
              C31904 * C473 +
          ((((C145 - C144) * C5281 + (C147 - C146) * C5275 + C1304 * C5282 +
             C1305 * C5276 + C1306 * C5283 + C1307 * C32230) *
                C32262 +
            ((C149 - C148) * C5281 + (C151 - C150) * C5275 + C1308 * C5282 +
             C1309 * C5276 + C1310 * C5283 + C1311 * C32230) *
                C32249 +
            ((C153 - C152) * C5281 + (C155 - C154) * C5275 + C3007 * C5282 +
             C3008 * C5276 + (C833 - C834) * C5283 + (C835 - C836) * C32230) *
                C32219) *
               C577 +
           (((C585 - C584) * C5281 + (C587 - C586) * C5275 +
             (C1463 - C1462) * C5282 + (C1465 - C1464) * C5276 +
             (C1467 - C1466) * C5283 + (C1469 - C1468) * C32230) *
                C32262 +
            ((C589 - C588) * C5281 + (C591 - C590) * C5275 +
             (C1471 - C1470) * C5282 + (C1473 - C1472) * C5276 +
             (C1475 - C1474) * C5283 + (C1477 - C1476) * C32230) *
                C32249 +
            ((C593 - C592) * C5281 + (C595 - C594) * C5275 +
             (C3140 - C3139) * C5282 + (C3142 - C3141) * C5276 +
             (C31958 * C1458 - C113 * C1457) * C5283 +
             (C31958 * C1460 - C113 * C1459) * C32230) *
                C32219) *
               C578) *
              C31904 * C474)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C31958 * C122 - C113 * C115) * C6021 +
            (C31958 * C136 - C113 * C123) * C6015 + (C982 - C983) * C6022 +
            (C984 - C985) * C6016 + C1004 * C6023 + C1005 * C6017 +
            C6097 * C6024 + C6098 * C6018 + C6107 * C6025 + C6108 * C6019) *
               C31859 * C577 +
           ((C113 * C349 - C31958 * C359) * C6021 +
            (C113 * C360 - C31958 * C379) * C6015 + (C1636 - C1637) * C6022 +
            (C1638 - C1639) * C6016 + (C1640 - C1641) * C6023 +
            (C1642 - C1643) * C6017 + (C113 * C1623 - C31958 * C1626) * C6024 +
            (C113 * C1627 - C31958 * C1632) * C6018 +
            (C113 * C6170 - C31958 * C6173) * C6025 +
            (C113 * C6174 - C31958 * C6179) * C6019) *
               C31859 * C578) *
              C31904 * C473 +
          (((C145 - C144) * C6021 + (C147 - C146) * C6015 + C1304 * C6022 +
            C1305 * C6016 + C1306 * C6023 + C1307 * C6017 +
            (C996 - C997) * C6024 + (C998 - C999) * C6018 +
            (C6269 - C6270) * C6025 + (C6271 - C6272) * C6019) *
               C31859 * C577 +
           ((C585 - C584) * C6021 + (C587 - C586) * C6015 +
            (C1463 - C1462) * C6022 + (C1465 - C1464) * C6016 +
            (C1467 - C1466) * C6023 + (C1469 - C1468) * C6017 +
            (C31958 * C1628 - C113 * C1624) * C6024 +
            (C31958 * C1633 - C113 * C1629) * C6018 +
            (C31958 * C6355 - C113 * C6354) * C6025 +
            (C31958 * C6357 - C113 * C6356) * C6019) *
               C31859 * C578) *
              C31904 * C474)) /
            (p * q * std::sqrt(p + q));
    d2ee[124] +=
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C31958 * C122 - C113 * C115) * C114 +
            (C31958 * C136 - C113 * C123) * C31941) *
               C103 +
           ((C144 - C145) * C114 + (C146 - C147) * C31941) * C104 +
           C176 * C105 + C177 * C106 + C178 * C107) *
              C31918 * C31904 * C110 +
          (((C145 - C144) * C114 + (C147 - C146) * C31941) * C103 +
           ((C149 - C148) * C114 + (C151 - C150) * C31941) * C104 +
           ((C153 - C152) * C114 + (C155 - C154) * C31941) * C105 +
           ((C157 - C156) * C114 + (C159 - C158) * C31941) * C106 +
           ((C160 - C161) * C114 + (C162 - C163) * C31941) * C107) *
              C31918 * C31904 * C111 +
          (C176 * C103 + C177 * C104 + C178 * C105 +
           ((C161 - C160) * C114 + (C163 - C162) * C31941) * C106 +
           ((C31958 * C134 - C113 * C121) * C114 +
            (C31958 * C142 - C113 * C135) * C31941) *
               C107) *
              C31918 * C31904 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C31958 * C122 - C113 * C115) * C114 +
            (C31958 * C136 - C113 * C123) * C31941) *
               C103 +
           ((C144 - C145) * C114 + (C146 - C147) * C31941) * C104 +
           C176 * C105 + C177 * C106 + C178 * C107) *
              C31918 * C240 +
          (((C113 * C244 - C31958 * C254) * C114 +
            (C113 * C255 - C31958 * C274) * C31941) *
               C103 +
           ((C113 * C245 - C31958 * C256) * C114 +
            (C113 * C257 - C31958 * C275) * C31941) *
               C104 +
           ((C113 * C246 - C31958 * C258) * C114 +
            (C113 * C259 - C31958 * C276) * C31941) *
               C105 +
           ((C113 * C247 - C31958 * C260) * C114 +
            (C113 * C261 - C31958 * C277) * C31941) *
               C106 +
           ((C113 * C248 - C31958 * C262) * C114 +
            (C113 * C263 - C31958 * C278) * C31941) *
               C107) *
              C31918 * C241 +
          (((C31958 * C264 - C113 * C249) * C114 +
            (C31958 * C279 - C113 * C265) * C31941) *
               C103 +
           ((C31958 * C266 - C113 * C250) * C114 +
            (C31958 * C280 - C113 * C267) * C31941) *
               C104 +
           ((C31958 * C268 - C113 * C251) * C114 +
            (C31958 * C281 - C113 * C269) * C31941) *
               C105 +
           ((C31958 * C270 - C113 * C252) * C114 +
            (C31958 * C282 - C113 * C271) * C31941) *
               C106 +
           ((C31958 * C272 - C113 * C253) * C114 +
            (C31958 * C283 - C113 * C273) * C31941) *
               C107) *
              C31918 * C242) *
         C31892) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C31958 * C122 - C113 * C115) * C817 +
            (C31958 * C136 - C113 * C123) * C32265 +
            (C31958 * C254 - C113 * C244) * C818 +
            (C31958 * C274 - C113 * C255) * C32253 +
            (C31958 * C264 - C113 * C249) * C819 +
            (C31958 * C279 - C113 * C265) * C32230) *
               C814 +
           ((C144 - C145) * C817 + (C146 - C147) * C32265 +
            (C481 - C480) * C818 + (C483 - C482) * C32253 +
            (C821 - C822) * C819 + (C823 - C824) * C32230) *
               C815 +
           C847 * C32219) *
              C31918 * C31904 * C110 +
          (((C145 - C144) * C817 + (C147 - C146) * C32265 +
            (C480 - C481) * C818 + (C482 - C483) * C32253 +
            (C822 - C821) * C819 + (C824 - C823) * C32230) *
               C814 +
           ((C149 - C148) * C817 + (C151 - C150) * C32265 +
            (C484 - C485) * C818 + (C486 - C487) * C32253 +
            (C830 - C829) * C819 + (C832 - C831) * C32230) *
               C815 +
           ((C153 - C152) * C817 + (C155 - C154) * C32265 +
            (C488 - C489) * C818 + (C490 - C491) * C32253 +
            (C833 - C834) * C819 + (C835 - C836) * C32230) *
               C32219) *
              C31918 * C31904 * C111 +
          (C847 * C814 +
           (C166 * C817 + C167 * C32265 + (C489 - C488) * C818 +
            (C491 - C490) * C32253 + (C834 - C833) * C819 +
            (C836 - C835) * C32230) *
               C815 +
           (C168 * C817 + C169 * C32265 + (C493 - C492) * C818 +
            (C495 - C494) * C32253 + (C31958 * C272 - C113 * C253) * C819 +
            (C31958 * C283 - C113 * C273) * C32230) *
               C32219) *
              C31918 * C31904 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C31958 * C122 - C113 * C115) * C817 +
            (C31958 * C136 - C113 * C123) * C32265 + (C982 - C983) * C818 +
            (C984 - C985) * C32253 + C1004 * C819 + C1005 * C32230) *
               C814 +
           ((C144 - C145) * C817 + (C146 - C147) * C32265 +
            (C481 - C480) * C818 + (C483 - C482) * C32253 + C990 * C819 +
            C991 * C32230) *
               C815 +
           C847 * C32219) *
              C31918 * C240 +
          (((C983 - C982) * C817 + (C985 - C984) * C32265 +
            (C987 - C986) * C818 + (C989 - C988) * C32253 +
            (C992 - C993) * C819 + (C994 - C995) * C32230) *
               C814 +
           ((C480 - C481) * C817 + (C482 - C483) * C32265 +
            (C822 - C821) * C818 + (C824 - C823) * C32253 +
            (C996 - C997) * C819 + (C998 - C999) * C32230) *
               C815 +
           ((C484 - C485) * C817 + (C486 - C487) * C32265 +
            (C830 - C829) * C818 + (C832 - C831) * C32253 +
            (C1000 - C1001) * C819 + (C1002 - C1003) * C32230) *
               C32219) *
              C31918 * C241 +
          ((C1004 * C817 + C1005 * C32265 + (C993 - C992) * C818 +
            (C995 - C994) * C32253 + (C31958 * C969 - C113 * C960) * C819 +
            (C31958 * C978 - C113 * C970) * C32230) *
               C814 +
           (C990 * C817 + C991 * C32265 + (C997 - C996) * C818 +
            (C999 - C998) * C32253 + (C31958 * C971 - C113 * C961) * C819 +
            (C31958 * C979 - C113 * C972) * C32230) *
               C815 +
           (C840 * C817 + C841 * C32265 + (C1001 - C1000) * C818 +
            (C1003 - C1002) * C32253 + (C31958 * C973 - C113 * C962) * C819 +
            (C31958 * C980 - C113 * C974) * C32230) *
               C32219) *
              C31918 * C242) *
         C31892) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C31958 * C122 - C113 * C115) * C5281 +
            (C31958 * C136 - C113 * C123) * C5275 + (C982 - C983) * C5282 +
            (C984 - C985) * C5276 + C1004 * C5283 + C1005 * C32230) *
               C32262 +
           ((C144 - C145) * C5281 + (C146 - C147) * C5275 + C1302 * C5282 +
            C1303 * C5276 + C990 * C5283 + C991 * C32230) *
               C32249 +
           C5295 * C32219) *
              C31918 * C31904 * C110 +
          (((C145 - C144) * C5281 + (C147 - C146) * C5275 + C1304 * C5282 +
            C1305 * C5276 + C1306 * C5283 + C1307 * C32230) *
               C32262 +
           ((C149 - C148) * C5281 + (C151 - C150) * C5275 + C1308 * C5282 +
            C1309 * C5276 + C1310 * C5283 + C1311 * C32230) *
               C32249 +
           ((C153 - C152) * C5281 + (C155 - C154) * C5275 + C3007 * C5282 +
            C3008 * C5276 + (C833 - C834) * C5283 + (C835 - C836) * C32230) *
               C32219) *
              C31918 * C31904 * C111 +
          (C5295 * C32262 +
           (C166 * C5281 + C167 * C5275 + C2671 * C5282 + C2672 * C5276 +
            (C834 - C833) * C5283 + (C836 - C835) * C32230) *
               C32249 +
           (C168 * C5281 + C169 * C5275 + (C493 - C492) * C5282 +
            (C495 - C494) * C5276 + (C31958 * C272 - C113 * C253) * C5283 +
            (C31958 * C283 - C113 * C273) * C32230) *
               C32219) *
              C31918 * C31904 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C31958 * C122 - C113 * C115) * C5281 +
            (C31958 * C136 - C113 * C123) * C5275 + (C982 - C983) * C5282 +
            (C984 - C985) * C5276 + C1004 * C5283 + C1005 * C32230) *
               C32262 +
           ((C144 - C145) * C5281 + (C146 - C147) * C5275 + C1302 * C5282 +
            C1303 * C5276 + C990 * C5283 + C991 * C32230) *
               C32249 +
           C5295 * C32219) *
              C31918 * C240 +
          (((C983 - C982) * C5281 + (C985 - C984) * C5275 +
            (C987 - C986) * C5282 + (C989 - C988) * C5276 +
            (C992 - C993) * C5283 + (C994 - C995) * C32230) *
               C32262 +
           (C1304 * C5281 + C1305 * C5275 + C1306 * C5282 + C1307 * C5276 +
            (C996 - C997) * C5283 + (C998 - C999) * C32230) *
               C32249 +
           (C1308 * C5281 + C1309 * C5275 + C1310 * C5282 + C1311 * C5276 +
            (C1000 - C1001) * C5283 + (C1002 - C1003) * C32230) *
               C32219) *
              C31918 * C241 +
          ((C1004 * C5281 + C1005 * C5275 + (C993 - C992) * C5282 +
            (C995 - C994) * C5276 + (C31958 * C969 - C113 * C960) * C5283 +
            (C31958 * C978 - C113 * C970) * C32230) *
               C32262 +
           (C990 * C5281 + C991 * C5275 + (C997 - C996) * C5282 +
            (C999 - C998) * C5276 + (C31958 * C971 - C113 * C961) * C5283 +
            (C31958 * C979 - C113 * C972) * C32230) *
               C32249 +
           (C840 * C5281 + C841 * C5275 + (C1001 - C1000) * C5282 +
            (C1003 - C1002) * C5276 + (C31958 * C973 - C113 * C962) * C5283 +
            (C31958 * C980 - C113 * C974) * C32230) *
               C32219) *
              C31918 * C242) *
         C31892) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C31958 * C122 - C113 * C115) * C6021 +
           (C31958 * C136 - C113 * C123) * C6015 + (C982 - C983) * C6022 +
           (C984 - C985) * C6016 + C1004 * C6023 + C1005 * C6017 +
           (C993 - C992) * C6024 + (C995 - C994) * C6018 +
           (C31958 * C969 - C113 * C960) * C6025 +
           (C31958 * C978 - C113 * C970) * C6019) *
              C31859 * C31918 * C31904 * C110 +
          ((C145 - C144) * C6021 + (C147 - C146) * C6015 + C1304 * C6022 +
           C1305 * C6016 + C1306 * C6023 + C1307 * C6017 +
           (C996 - C997) * C6024 + (C998 - C999) * C6018 +
           (C113 * C961 - C31958 * C971) * C6025 +
           (C113 * C972 - C31958 * C979) * C6019) *
              C31859 * C31918 * C31904 * C111 +
          (C164 * C6021 + C165 * C6015 + C827 * C6022 + C828 * C6016 +
           C840 * C6023 + C841 * C6017 + (C1001 - C1000) * C6024 +
           (C1003 - C1002) * C6018 + (C31958 * C973 - C113 * C962) * C6025 +
           (C31958 * C980 - C113 * C974) * C6019) *
              C31859 * C31918 * C31904 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C31958 * C122 - C113 * C115) * C6021 +
           (C31958 * C136 - C113 * C123) * C6015 + (C982 - C983) * C6022 +
           (C984 - C985) * C6016 + C1004 * C6023 + C1005 * C6017 +
           C6097 * C6024 + C6098 * C6018 + C6107 * C6025 + C6108 * C6019) *
              C31859 * C31918 * C240 +
          ((C983 - C982) * C6021 + (C985 - C984) * C6015 +
           (C987 - C986) * C6022 + (C989 - C988) * C6016 +
           (C992 - C993) * C6023 + (C994 - C995) * C6017 +
           (C6100 - C6099) * C6024 + (C6102 - C6101) * C6018 +
           (C6103 - C6104) * C6025 + (C6105 - C6106) * C6019) *
              C31859 * C31918 * C241 +
          (C1004 * C6021 + C1005 * C6015 + C6097 * C6022 + C6098 * C6016 +
           C6107 * C6023 + C6108 * C6017 + (C6104 - C6103) * C6024 +
           (C6106 - C6105) * C6018 + (C31958 * C6092 - C113 * C6089) * C6025 +
           (C31958 * C6095 - C113 * C6093) * C6019) *
              C31859 * C31918 * C242) *
         C31892) /
            (p * q * std::sqrt(p + q));
}
