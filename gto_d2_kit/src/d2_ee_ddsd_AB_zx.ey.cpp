/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

#include "gto_d2_kit/d2_ee_ddsd_AB_zx.hpp"
#include <cmath>
/*

*/
#pragma GCC optimize("O0")
namespace {
    const double Pi = M_PI;
}
#pragma GCC optimize("O0")

void second_derivative_ee_2202_12_31(const double ae,
                                     const double xA,
                                     const double yA,
                                     const double zA,
                                     const double be,
                                     const double xB,
                                     const double yB,
                                     const double zB,
                                     const double ce,
                                     const double xC,
                                     const double yC,
                                     const double zC,
                                     const double de,
                                     const double xD,
                                     const double yD,
                                     const double zD,
                                     const double* const bs,
                                     double* const d2ee)
{
    const double p = ae + be;
    const double q = ce + de;
    const double xP = (ae * xA + be * xB) / p;
    const double yP = (ae * yA + be * yB) / p;
    const double zP = (ae * zA + be * zB) / p;
    const double xQ = (ce * xC + de * xD) / q;
    const double yQ = (ce * yC + de * yD) / q;
    const double zQ = (ce * zC + de * zD) / q;
    const double C30832 = 0 * ae;
    const double C30831 = ae * be;
    const double C30830 = 0 * be;
    const double C30829 = 0 * be;
    const double C30828 = ae + be;
    const double C30827 = 0 * be;
    const double C30826 = xA - xB;
    const double C30887 = 0 * be;
    const double C30914 = 0 * be;
    const double C30913 = zA - zB;
    const double C30969 = 0 * ae;
    const double C30964 = 0 * be;
    const double C30963 = 0 * be;
    const double C31014 = 0 * be;
    const double C31074 = xP - xQ;
    const double C31073 = zP - zQ;
    const double C31072 = p + q;
    const double C31071 = p * q;
    const double C31079 = bs[3];
    const double C31089 = bs[4];
    const double C31098 = bs[5];
    const double C31112 = bs[6];
    const double C31134 = bs[7];
    const double C31243 = yP - yQ;
    const double C31449 = bs[2];
    const double C119 = bs[0];
    const double C31894 = ce + de;
    const double C31893 = ce * de;
    const double C31892 = xC - xD;
    const double C31906 = yC - yD;
    const double C31920 = zC - zD;
    const double C31950 = yA - yB;
    const double C30839 = C30832 / C30828;
    const double C30836 = C30830 / C30828;
    const double C30834 = 2 * C30828;
    const double C30833 = std::pow(C30828, 2);
    const double C30838 = C30831 * C30826;
    const double C30837 = C30826 * C30830;
    const double C30835 = C30826 * C30829;
    const double C31858 = C30826 * be;
    const double C31857 = C30826 * ae;
    const double C31856 = std::pow(C30826, 2);
    const double C30888 = C30887 / C30828;
    const double C30965 = C30914 / C30828;
    const double C30915 = C30831 * C30913;
    const double C30966 = C30913 * C30914;
    const double C31962 = std::pow(C30913, 2);
    const double C32045 = C30913 * be;
    const double C32043 = C30913 * ae;
    const double C30976 = C30969 / C30828;
    const double C30971 = C30913 * C30964;
    const double C31015 = C31014 / C30828;
    const double C31099 = std::pow(C31074, 2);
    const double C31169 = C31074 * be;
    const double C31081 = C31073 * ae;
    const double C31080 = C31073 * C31074;
    const double C31285 = std::pow(C31073, 2);
    const double C31075 = 2 * C31071;
    const double C31252 = std::pow(C31243, 2);
    const double C32200 = 2 * C31894;
    const double C32199 = std::pow(C31894, 2);
    const double C31895 = std::pow(C31892, 2);
    const double C32198 = C31892 * ce;
    const double C31907 = std::pow(C31906, 2);
    const double C32201 = C31906 * ce;
    const double C31921 = std::pow(C31920, 2);
    const double C32202 = C31920 * ce;
    const double C31951 = std::pow(C31950, 2);
    const double C32005 = C31950 * be;
    const double C32003 = C31950 * ae;
    const double C31870 = std::pow(C30834, -1);
    const double C32193 = std::pow(C30834, -2);
    const double C30840 = 2 * C30833;
    const double C140 = (std::pow((2 * p * q) / (p + q), 2) * bs[2] *
                         (zP - zQ) * (xP - xQ) * ae * be) /
                        C30833;
    const double C32197 = C30833 * C30834;
    const double C32196 = 4 * C30833;
    const double C30842 = C30837 / C30828;
    const double C30841 = C30835 / C30828;
    const double C32186 = std::pow(C31857, 2);
    const double C31859 = C31856 * C30831;
    const double C30974 = C30966 / C30828;
    const double C31963 = C31962 * C30831;
    const double C32205 = std::pow(C32043, 2);
    const double C30977 = C30971 / C30828;
    const double C31172 = C31089 * C31169;
    const double C31176 = C31098 * C31169;
    const double C31186 = C31079 * C31169;
    const double C31199 = C31112 * C31169;
    const double C31216 = C31134 * C31169;
    const double C31084 = C31079 * C31081;
    const double C31091 = C31089 * C31081;
    const double C31101 = C31098 * C31081;
    const double C31116 = C31112 * C31081;
    const double C31140 = C31134 * C31081;
    const double C31083 = C31080 * ae;
    const double C31076 = C31075 / C31072;
    const double C126 = (-(bs[1] * C31169 * C31075) / C31072) / C30828;
    const double C131 = (-(bs[1] * C31081 * C31075) / C31072) / C30828;
    const double C120 = -(C31074 * bs[1] * C31075) / C31072;
    const double C213 = -(C31243 * bs[1] * C31075) / C31072;
    const double C318 = -(C31073 * bs[1] * C31075) / C31072;
    const double C32233 = std::pow(C32200, -2);
    const double C32231 = std::pow(C32200, -1);
    const double C31896 = C31895 * C31893;
    const double C31908 = C31907 * C31893;
    const double C31922 = C31921 * C31893;
    const double C31952 = C31951 * C30831;
    const double C32203 = std::pow(C32003, 2);
    const double C30849 = C30830 / C30840;
    const double C30846 = C30829 / C30840;
    const double C30845 = C30827 / C30840;
    const double C30968 = C30914 / C30840;
    const double C30973 = C30964 / C30840;
    const double C30972 = C30963 / C30840;
    const double C32230 = 4 * C32197;
    const double C32229 = C30828 * C32196;
    const double C30847 = 0 - C30842;
    const double C30844 = 0 - C30841;
    const double C31860 = C31859 / C30828;
    const double C30978 = 0 - C30974;
    const double C31964 = C31963 / C30828;
    const double C30981 = 0 - C30977;
    const double C31085 = C31083 * be;
    const double C31078 = -C31076;
    const double C31088 = std::pow(C31076, 4);
    const double C31111 = std::pow(C31076, 6);
    const double C141 =
        (be * std::pow(C31076, 2) * bs[2] * C31073 * ae +
         C31074 * std::pow(-C31076, 3) * bs[3] * C31073 * C31074 * ae * be) /
        C30833;
    const double C31448 = std::pow(C31076, 2);
    const double C127 =
        (C31074 * std::pow(C31076, 2) * bs[2] * C31169) / C30828 -
        (be * bs[1] * C31075) / (C31072 * C30828);
    const double C31897 = C31896 / C31894;
    const double C31909 = C31908 / C31894;
    const double C31923 = C31922 / C31894;
    const double C31953 = C31952 / C30828;
    const double C30852 = C30847 * ae;
    const double C30851 = C30844 * ae;
    const double C31861 = -C31860;
    const double C30982 = C30978 * ae;
    const double C31965 = -C31964;
    const double C30985 = C30981 * ae;
    const double C31090 = C31089 * C31085;
    const double C31100 = C31098 * C31085;
    const double C31114 = C31112 * C31085;
    const double C31138 = C31134 * C31085;
    const double C31082 = std::pow(C31078, 3);
    const double C31097 = std::pow(C31078, 5);
    const double C31133 = std::pow(C31078, 7);
    const double C31093 = C31088 * C31091;
    const double C31173 = C31089 * C31088;
    const double C31174 = C31088 * C31172;
    const double C31119 = C31111 * C31116;
    const double C31203 = C31111 * C31199;
    const double C31217 = C31112 * C31111;
    const double C31450 = C31449 * C31448;
    const double C132 = (C31074 * C31448 * C31449 * C31081) / C30828;
    const double C223 = (C31243 * C31448 * C31449 * C31169) / C30828;
    const double C228 = (C31243 * C31448 * C31449 * C31081) / C30828;
    const double C328 = (C31073 * C31448 * C31449 * C31169) / C30828;
    const double C333 = (C31073 * C31448 * C31449 * C31081) / C30828 -
                        (ae * bs[1] * C31075) / (C31072 * C30828);
    const double C31898 = -C31897;
    const double C31910 = -C31909;
    const double C31924 = -C31923;
    const double C31954 = -C31953;
    const double C30856 = C30852 / C30828;
    const double C30855 = C30851 / C30828;
    const double C31862 = std::exp(C31861);
    const double C30986 = C30982 / C30828;
    const double C31966 = std::exp(C31965);
    const double C30989 = C30985 / C30828;
    const double C31092 = C31088 * C31090;
    const double C31118 = C31111 * C31114;
    const double C31086 = C31082 * C31084;
    const double C31170 = C31079 * C31082;
    const double C31187 = C31082 * C31186;
    const double C243 = ((yP - yQ) * C31082 * C31079 * C31085) / C30833;
    const double C348 = (ae * std::pow(C31076, 2) * bs[2] * C31074 * be +
                         C31073 * C31082 * C31079 * C31085) /
                        C30833;
    const double C31103 = C31097 * C31101;
    const double C31102 = C31097 * C31100;
    const double C31179 = C31098 * C31097;
    const double C31180 = C31097 * C31176;
    const double C31143 = C31133 * C31140;
    const double C31142 = C31133 * C31138;
    const double C31219 = C31133 * C31216;
    const double C31096 = be * C31093;
    const double C31095 = C31074 * C31093;
    const double C31584 = C31073 * C31093;
    const double C31613 = C31243 * C31093;
    const double C31178 = C31074 * C31173;
    const double C31177 = C31173 * be;
    const double C31454 = C31173 * C31099;
    const double C31556 = C31173 * C31252;
    const double C31587 = C31173 * C31285;
    const double C31614 = C31243 * C31173;
    const double C31694 = C31073 * C31173;
    const double C31693 = C31173 * ae;
    const double C31189 = C31074 * C31174;
    const double C31259 = C31243 * C31174;
    const double C31283 = ae * C31174;
    const double C31282 = C31073 * C31174;
    const double C31121 = C31119 * C31099;
    const double C31132 = be * C31119;
    const double C31131 = C31074 * C31119;
    const double C31628 = C31119 * C31252;
    const double C31708 = C31073 * C31119;
    const double C31755 = C31243 * C31119;
    const double C31205 = C31074 * C31203;
    const double C31328 = C31203 * C31252;
    const double C31334 = C31243 * C31203;
    const double C31374 = C31203 * C31285;
    const double C31388 = ae * C31203;
    const double C31387 = C31073 * C31203;
    const double C31222 = C31217 * C31099;
    const double C31221 = C31074 * C31217;
    const double C31220 = C31217 * be;
    const double C31646 = C31217 * C31252;
    const double C31712 = C31217 * C31285;
    const double C31758 = C31243 * C31217;
    const double C121 = C31450 * C31099 - (bs[1] * C31075) / C31072;
    const double C214 = C31243 * C31074 * C31450;
    const double C218 = C31450 * C31252 - (bs[1] * C31075) / C31072;
    const double C319 = C31073 * C31074 * C31450;
    const double C323 = C31450 * C31285 - (bs[1] * C31075) / C31072;
    const double C618 = C31073 * C31243 * C31450;
    const double C31899 = std::exp(C31898);
    const double C31911 = std::exp(C31910);
    const double C31925 = std::exp(C31924);
    const double C31955 = std::exp(C31954);
    const double C30860 = C30856 - C30846;
    const double C30859 = C30855 - C30845;
    const double C6052 = C31862 * C223;
    const double C6820 = C31862 * C328;
    const double C30843 = C30838 * C31862;
    const double C31864 = C31862 * C31857;
    const double C31863 = C31862 / C30834;
    const double C31872 = C31870 * C31862;
    const double C32189 = C31862 * C31858;
    const double C32227 = C32193 * C31862;
    const double C32221 = C31862 * C32186;
    const double C30990 = C30986 - C30973;
    const double C30916 = C30915 * C31966;
    const double C118 = -(2 * C30831 * (zA - zB) * C31966) / C30828;
    const double C32044 = C31966 / C30834;
    const double C32046 = C31966 * C32043;
    const double C32053 = C31870 * C31966;
    const double C32215 = C31966 * C32045;
    const double C32241 = C32193 * C31966;
    const double C32239 = C31966 * C32205;
    const double C30993 = C30989 - C30972;
    const double C248 =
        (C31082 * C31079 * C31085 + C31092 * std::pow(yP - yQ, 2)) / C30833;
    const double C31120 = C31074 * C31118;
    const double C31316 = C31118 * C31252;
    const double C31319 = C31243 * C31118;
    const double C31373 = C31073 * C31118;
    const double C142 = (C31082 * C31079 * C31085 + be * C31074 * C31086 +
                         C31074 * (be * C31086 + C31074 * std::pow(C31076, 4) *
                                                     bs[4] * C31085)) /
                        C30833;
    const double C143 =
        (2 * (be * C31086 + C31074 * C31092) +
         be * (C31086 + C31093 * std::pow(C31074, 2)) +
         C31074 * (C31092 + be * C31074 * C31093 +
                   C31074 * (be * C31093 +
                             C31074 * std::pow(C31078, 5) * bs[5] * C31085))) /
        C30833;
    const double C244 = ((yP - yQ) * (be * C31086 + C31074 * C31092)) / C30833;
    const double C349 = (ae * (C31074 * C31082 * C31079 * C31074 * be +
                               bs[2] * std::pow(C31076, 2) * be) +
                         C31073 * (be * C31086 + C31074 * C31092)) /
                        C30833;
    const double C133 = (C31448 * C31449 * C31081 + C31086 * C31099) / C30828;
    const double C134 =
        (2 * C31074 * C31086 + C31074 * (C31086 + C31093 * C31099)) / C30828;
    const double C229 = (C31243 * C31074 * C31086) / C30828;
    const double C230 = (C31243 * (C31086 + C31093 * C31099)) / C30828;
    const double C238 = (C31448 * C31449 * C31081 + C31086 * C31252) / C30828;
    const double C334 =
        (C31073 * C31074 * C31086 + C31074 * C31450 * ae) / C30828;
    const double C343 =
        (C31448 * C31449 * C31081 + C31073 * (C31073 * C31086 + C31450 * ae) +
         C31073 * C31450 * ae) /
        C30828;
    const double C628 =
        (C31073 * C31243 * C31086 + C31243 * C31450 * ae) / C30828;
    const double C876 =
        (2 * C31243 * C31086 + C31243 * (C31086 + C31093 * C31252)) / C30828;
    const double C31190 = C31170 * be;
    const double C31453 = C31074 * C31170;
    const double C31547 = C31243 * C31170;
    const double C31586 = C31073 * C31170;
    const double C31585 = C31170 * ae;
    const double C335 = (C31073 * (C31086 + C31093 * C31099) +
                         (C31450 + C31170 * C31099) * ae) /
                        C30828;
    const double C1062 = (C31073 * (C31086 + C31093 * C31252) +
                          (C31450 + C31170 * C31252) * ae) /
                         C30828;
    const double C1937 =
        (2 * (C31073 * C31086 + C31450 * ae) +
         C31073 * (C31086 + C31073 * (C31073 * C31093 + C31170 * ae) +
                   C31073 * C31170 * ae) +
         (C31450 + C31170 * C31285) * ae) /
        C30828;
    const double C122 =
        2 * C31074 * C31450 + C31074 * (C31450 + C31170 * C31099);
    const double C215 = C31243 * (C31450 + C31170 * C31099);
    const double C320 = C31073 * (C31450 + C31170 * C31099);
    const double C867 =
        2 * C31243 * C31450 + C31243 * (C31450 + C31170 * C31252);
    const double C1050 = C31073 * (C31450 + C31170 * C31252);
    const double C1928 =
        2 * C31073 * C31450 + C31073 * (C31450 + C31170 * C31285);
    const double C353 = (C31082 * C31079 * C31085 + ae * C31073 * C31187 +
                         C31073 * (ae * C31187 + C31073 * C31092)) /
                        C30833;
    const double C633 =
        (ae * C31243 * C31187 + C31073 * C31243 * C31092) / C30833;
    const double C128 =
        (C31448 * C31449 * C31169 + C31074 * (C31074 * C31187 + C31450 * be) +
         C31074 * C31450 * be) /
        C30828;
    const double C224 = (C31243 * (C31074 * C31187 + C31450 * be)) / C30828;
    const double C233 = (C31448 * C31449 * C31169 + C31187 * C31252) / C30828;
    const double C329 = (C31073 * (C31074 * C31187 + C31450 * be)) / C30828;
    const double C338 = (C31448 * C31449 * C31169 + C31187 * C31285) / C30828;
    const double C623 = (C31073 * C31243 * C31187) / C30828;
    const double C873 =
        (2 * C31243 * C31187 + C31243 * (C31187 + C31174 * C31252)) / C30828;
    const double C1059 = (C31073 * (C31187 + C31174 * C31252)) / C30828;
    const double C1934 =
        (2 * C31073 * C31187 + C31073 * (C31187 + C31174 * C31285)) / C30828;
    const double C6054 = C31862 * C243;
    const double C6822 = C31862 * C348;
    const double C31105 = C31103 * C31099;
    const double C31110 = be * C31103;
    const double C31109 = C31074 * C31103;
    const double C31623 = C31103 * C31252;
    const double C31627 = C31243 * C31103;
    const double C31692 = C31073 * C31103;
    const double C882 =
        (3 * (C31086 + C31093 * C31252) +
         C31243 * (2 * C31243 * C31093 + C31243 * (C31093 + C31103 * C31252))) /
        C30828;
    const double C31104 = C31074 * C31102;
    const double C31284 = C31073 * C31102;
    const double C31307 = C31243 * C31102;
    const double C885 = (2 * C31243 * C31092 +
                         C31243 * (C31092 + C31102 * std::pow(C31243, 2))) /
                        C30833;
    const double C888 =
        (3 * (C31092 + C31102 * C31252) +
         C31243 * (2 * C31243 * C31102 + C31243 * (C31102 + C31118 * C31252))) /
        C30833;
    const double C1077 = (ae * (C31187 + C31174 * C31252) +
                          C31073 * (C31092 + C31102 * C31252)) /
                         C30833;
    const double C1946 = (2 * (ae * C31187 + C31073 * C31092) +
                          ae * (C31187 + C31174 * std::pow(C31073, 2)) +
                          C31073 * (C31092 + ae * C31073 * C31174 +
                                    C31073 * (ae * C31174 + C31073 * C31102))) /
                         C30833;
    const double C31181 = C31179 * C31099;
    const double C31201 = C31074 * C31179;
    const double C31200 = C31179 * be;
    const double C31638 = C31179 * C31252;
    const double C31645 = C31243 * C31179;
    const double C31695 = C31179 * C31285;
    const double C31710 = C31073 * C31179;
    const double C31709 = C31179 * ae;
    const double C31182 = C31074 * C31180;
    const double C31265 = C31180 * C31252;
    const double C31287 = C31180 * C31285;
    const double C31308 = C31243 * C31180;
    const double C31372 = ae * C31180;
    const double C31371 = C31073 * C31180;
    const double C31145 = C31143 * C31099;
    const double C31144 = C31074 * C31142;
    const double C31320 = C31142 * C31252;
    const double C31389 = C31073 * C31142;
    const double C31432 = C31243 * C31142;
    const double C31223 = C31074 * C31219;
    const double C31335 = C31219 * C31252;
    const double C31391 = C31219 * C31285;
    const double C31433 = C31243 * C31219;
    const double C239 = (C31074 * C31086 + C31095 * C31252) / C30828;
    const double C31194 = C31178 * be;
    const double C31462 = 2 * C31178;
    const double C31549 = C31243 * C31178;
    const double C31593 = C31073 * C31178;
    const double C31592 = C31178 * ae;
    const double C31455 = C31170 + C31454;
    const double C31557 = C31170 + C31556;
    const double C31589 = C31170 + C31587;
    const double C31637 = 2 * C31614;
    const double C31667 = C31073 * C31614;
    const double C31666 = C31614 * ae;
    const double C31699 = 2 * C31694;
    const double C31697 = C31694 * ae;
    const double C1080 = (C31243 * C31092 + ae * C31073 * C31259 +
                          C31073 * (ae * C31259 + C31073 * C31243 * C31102)) /
                         C30833;
    const double C1065 = (C31243 * C31187 + C31259 * C31285) / C30828;
    const double C31123 = C31103 + C31121;
    const double C31139 = 2 * C31131;
    const double C31137 = be * C31131;
    const double C31655 = C31131 * C31252;
    const double C31730 = C31243 * C31131;
    const double C31740 = C31073 * C31131;
    const double C31630 = C31103 + C31628;
    const double C31759 = C31073 * C31755;
    const double C31329 = C31180 + C31328;
    const double C31336 = 2 * C31334;
    const double C31352 = C31334 * C31285;
    const double C31431 = ae * C31334;
    const double C31430 = C31073 * C31334;
    const double C31378 = C31180 + C31374;
    const double C31395 = 2 * C31387;
    const double C31393 = ae * C31387;
    const double C31225 = C31179 + C31222;
    const double C31224 = C31221 * be;
    const double C31682 = C31221 * C31252;
    const double C31733 = C31243 * C31221;
    const double C31743 = C31221 * C31285;
    const double C31648 = C31179 + C31646;
    const double C31716 = C31179 + C31712;
    const double C31761 = C31758 * C31285;
    const double C32232 = C31899 * C32198;
    const double C110 =
        (C31899 * std::pow(C32198, 2)) / C32199 + C31899 / C32200;
    const double C112 = C32233 * C31899;
    const double C443 = C32231 * C31899;
    const double C32234 = C31911 * C32201;
    const double C209 =
        (C31911 * std::pow(C32201, 2)) / C32199 + C31911 / C32200;
    const double C211 = C32233 * C31911;
    const double C441 = C32231 * C31911;
    const double C32235 = C31925 * C32202;
    const double C315 =
        (C31925 * std::pow(C32202, 2)) / C32199 + C31925 / C32200;
    const double C317 = C32233 * C31925;
    const double C531 = C32231 * C31925;
    const double C32004 = C31955 / C30834;
    const double C32006 = C31955 * C32003;
    const double C32013 = C31870 * C31955;
    const double C32209 = C31955 * C32005;
    const double C32238 = C32193 * C31955;
    const double C32236 = C31955 * C32203;
    const double C30865 = C30860 / C30834;
    const double C30864 = C30826 * C30860;
    const double C30863 = C30859 + C30836;
    const double C30850 = C30843 / C30833;
    const double C30848 = 2 * C30843;
    const double C31865 = C31864 * C31858;
    const double C31871 = C31864 / C30840;
    const double C32190 = C31870 * C31864;
    const double C32188 = C31864 / C30828;
    const double C748 = (C31862 * std::pow(C31858, 2)) / C30833 + C31863;
    const double C31873 = C31872 * C31858;
    const double C32194 = C31857 * C31872;
    const double C32192 = 2 * C31872;
    const double C32242 = C31872 / C32196;
    const double C105 = C31872 / C32230;
    const double C17317 = C31872 / C30834;
    const double C32223 = C32189 / C30828;
    const double C749 = (-2 * C31870 * C32189) / C30828;
    const double C32255 = C32221 / C30833;
    const double C30995 = C30990 / C30834;
    const double C30994 = C30913 * C30990;
    const double C30948 = 2 * C30916;
    const double C30970 = C30916 / C30833;
    const double C1707 =
        ((0 * ae) / C30828 - C30916 / C30833) / C30834 + (0 * ae) / C30828;
    const double C3350 =
        ((C31966 - (C30913 * 2 * C30916) / C30828) * ae) / C30828 -
        C30914 / C30840;
    const double C3351 = (0 * ae) / C30828 - C30916 / C30833;
    const double C10040 = (C31966 * std::pow(C32045, 2)) / C30833 + C32044;
    const double C32047 = C32046 * C32045;
    const double C32052 = C32046 / C30840;
    const double C32208 = C32046 / C30828;
    const double C32206 = C31870 * C32046;
    const double C1706 =
        (((C31966 - (C30913 * 2 * C30916) / C30828) * ae) / C30828 -
         C30914 / C30840) /
            C30834 +
        ((C30913 * ((0 * ae) / C30828 - C30916 / C30833) + C32053) * ae) /
            C30828;
    const double C32054 = C32053 * C32045;
    const double C32219 = C32043 * C32053;
    const double C32218 = 2 * C32053;
    const double C32254 = C32053 / C32196;
    const double C11631 = C32053 / C32230;
    const double C23835 = C32053 / C30834;
    const double C32250 = C32215 / C30828;
    const double C10041 = (-2 * C31870 * C32215) / C30828;
    const double C32262 = C32239 / C30833;
    const double C30999 = C30993 + C30965;
    const double C6058 = C31862 * C248;
    const double C31317 = C31102 + C31316;
    const double C31321 = 2 * C31319;
    const double C31351 = C31073 * C31319;
    const double C6250 = C31862 * C244;
    const double C7538 = C31872 * C244;
    const double C15496 = C31872 * C244;
    const double C7163 = C31862 * C349;
    const double C8575 = C31872 * C349;
    const double C16536 = C31872 * C349;
    const double C31191 = C31189 + C31190;
    const double C344 =
        (C31074 * C31086 + C31073 * (C31073 * C31095 + C31453 * ae) +
         C31073 * C31453 * ae) /
        C30828;
    const double C629 =
        (C31073 * C31243 * C31095 + C31243 * C31453 * ae) / C30828;
    const double C219 = C31074 * C31450 + C31453 * C31252;
    const double C324 = C31074 * C31450 + C31453 * C31285;
    const double C619 = C31073 * C31243 * C31453;
    const double C868 =
        2 * C31243 * C31453 + C31243 * (C31453 + C31178 * C31252);
    const double C1051 = C31073 * (C31453 + C31178 * C31252);
    const double C1929 =
        2 * C31073 * C31453 + C31073 * (C31453 + C31178 * C31285);
    const double C1068 =
        (C31243 * C31086 + C31073 * (C31073 * C31243 * C31093 + C31547 * ae) +
         C31073 * C31547 * ae) /
        C30828;
    const double C2474 =
        (2 * (C31073 * C31613 + C31547 * ae) +
         C31073 * (C31613 + C31073 * (C31073 * C31243 * C31103 + C31614 * ae) +
                   C31073 * C31614 * ae) +
         (C31547 + C31614 * C31285) * ae) /
        C30828;
    const double C1053 = C31243 * C31450 + C31547 * C31285;
    const double C2468 =
        2 * C31073 * C31547 + C31073 * (C31547 + C31614 * C31285);
    const double C31588 = C31584 + C31585;
    const double C6826 = C31862 * C353;
    const double C6438 = C31862 * C633;
    const double C6248 = C31862 * C224;
    const double C7534 = C31872 * C224;
    const double C15492 = C31872 * C224;
    const double C6056 = C31862 * C233;
    const double C7161 = C31862 * C329;
    const double C8571 = C31872 * C329;
    const double C16532 = C31872 * C329;
    const double C6824 = C31862 * C338;
    const double C6436 = C31862 * C623;
    const double C6060 = C31862 * C873;
    const double C6440 = C31862 * C1059;
    const double C6831 = C31862 * C1934;
    const double C31107 = C31093 + C31105;
    const double C31122 = C31110 + C31120;
    const double C31115 = 2 * C31109;
    const double C31113 = be * C31109;
    const double C31591 = C31073 * C31109;
    const double C31616 = C31243 * C31109;
    const double C877 =
        (2 * C31243 * C31095 + C31243 * (C31095 + C31109 * C31252)) / C30828;
    const double C883 =
        (3 * (C31095 + C31109 * C31252) +
         C31243 * (2 * C31243 * C31109 + C31243 * (C31109 + C31131 * C31252))) /
        C30828;
    const double C1063 = (C31073 * (C31095 + C31109 * C31252) +
                          (C31453 + C31178 * C31252) * ae) /
                         C30828;
    const double C1938 =
        (2 * (C31073 * C31095 + C31453 * ae) +
         C31073 * (C31095 + C31073 * (C31073 * C31109 + C31178 * ae) +
                   C31073 * C31178 * ae) +
         (C31453 + C31178 * C31285) * ae) /
        C30828;
    const double C31624 = C31093 + C31623;
    const double C31629 = 2 * C31627;
    const double C31665 = C31073 * C31627;
    const double C31696 = C31692 + C31693;
    const double C31106 = C31096 + C31104;
    const double C31286 = C31283 + C31284;
    const double C6062 = C31862 * C885;
    const double C6066 = C31862 * C888;
    const double C6442 = C31862 * C1077;
    const double C6833 = C31862 * C1946;
    const double C31183 = C31173 + C31181;
    const double C31204 = C31201 * be;
    const double C31218 = 2 * C31201;
    const double C31559 = C31201 * C31252;
    const double C31594 = C31201 * C31285;
    const double C31617 = C31243 * C31201;
    const double C31742 = C31073 * C31201;
    const double C31741 = C31201 * ae;
    const double C31206 = C31205 + C31200;
    const double C31639 = C31173 + C31638;
    const double C31647 = 2 * C31645;
    const double C31668 = C31645 * C31285;
    const double C31757 = C31073 * C31645;
    const double C31756 = C31645 * ae;
    const double C31698 = C31173 + C31695;
    const double C31717 = 2 * C31710;
    const double C31715 = C31710 * ae;
    const double C31714 = C31708 + C31709;
    const double C31184 = C31182 + C31177;
    const double C31266 = C31174 + C31265;
    const double C31288 = C31174 + C31287;
    const double C31327 = 2 * C31308;
    const double C31350 = ae * C31308;
    const double C31349 = C31073 * C31308;
    const double C2477 =
        (2 * (ae * C31259 + C31073 * C31307) + ae * (C31259 + C31308 * C31285) +
         C31073 * (C31307 + ae * C31073 * C31308 +
                   C31073 * (ae * C31308 + C31073 * C31243 * C31118))) /
        C30833;
    const double C2471 =
        (2 * C31073 * C31259 + C31073 * (C31259 + C31308 * C31285)) / C30828;
    const double C31376 = C31372 + C31373;
    const double C31377 = 2 * C31371;
    const double C31375 = ae * C31371;
    const double C31147 = C31119 + C31145;
    const double C31146 = C31132 + C31144;
    const double C31322 = C31118 + C31320;
    const double C31394 = C31388 + C31389;
    const double C31435 = C31073 * C31432;
    const double C31226 = C31223 + C31220;
    const double C31337 = C31203 + C31335;
    const double C31396 = C31203 + C31391;
    const double C31437 = C31433 * C31285;
    const double C1069 =
        (C31243 * C31095 + C31073 * (C31073 * C31243 * C31109 + C31549 * ae) +
         C31073 * C31549 * ae) /
        C30828;
    const double C1054 = C31243 * C31453 + C31549 * C31285;
    const double C123 = 3 * (C31450 + C31170 * C31099) +
                        C31074 * (2 * C31453 + C31074 * C31455);
    const double C216 = C31243 * (2 * C31453 + C31074 * C31455);
    const double C220 = C31450 + C31170 * C31099 + C31455 * C31252;
    const double C321 = C31073 * (2 * C31453 + C31074 * C31455);
    const double C325 = C31450 + C31170 * C31099 + C31455 * C31285;
    const double C620 = C31073 * C31243 * C31455;
    const double C1074 =
        (C31086 + C31093 * C31252 +
         C31073 * (C31073 * (C31093 + C31103 * C31252) + C31557 * ae) +
         C31073 * C31557 * ae) /
        C30828;
    const double C1562 =
        (C31073 * (2 * C31243 * C31093 + C31243 * (C31093 + C31103 * C31252)) +
         (2 * C31547 + C31243 * C31557) * ae) /
        C30828;
    const double C870 = 3 * (C31450 + C31170 * C31252) +
                        C31243 * (2 * C31547 + C31243 * C31557);
    const double C1056 = C31450 + C31170 * C31252 + C31557 * C31285;
    const double C1556 = C31073 * (2 * C31547 + C31243 * C31557);
    const double C1931 = 3 * (C31450 + C31170 * C31285) +
                         C31073 * (2 * C31586 + C31073 * C31589);
    const double C6673 = C31862 * C1080;
    const double C6671 = C31862 * C1065;
    const double C31125 = C31074 * C31123;
    const double C31135 = 3 * C31123;
    const double C31130 = be * C31123;
    const double C31598 = C31073 * C31123;
    const double C31619 = C31243 * C31123;
    const double C31141 = C31118 + C31137;
    const double C31656 = C31109 + C31655;
    const double C31734 = C31073 * C31730;
    const double C31631 = C31243 * C31630;
    const double C31673 = C31073 * C31630;
    const double C31330 = C31243 * C31329;
    const double C31333 = 3 * C31329;
    const double C31357 = ae * C31329;
    const double C31356 = C31073 * C31329;
    const double C31354 = C31308 + C31352;
    const double C31436 = 2 * C31430;
    const double C31434 = ae * C31430;
    const double C31381 = C31073 * C31378;
    const double C31390 = 3 * C31378;
    const double C31386 = ae * C31378;
    const double C31397 = C31118 + C31393;
    const double C31228 = C31074 * C31225;
    const double C31227 = C31225 * be;
    const double C31562 = C31225 * C31252;
    const double C31601 = C31225 * C31285;
    const double C31620 = C31243 * C31225;
    const double C31683 = C31201 + C31682;
    const double C31735 = C31733 * C31285;
    const double C31746 = C31201 + C31743;
    const double C31649 = C31243 * C31648;
    const double C31676 = C31648 * C31285;
    const double C31719 = C31073 * C31716;
    const double C31764 = C31645 + C31761;
    const double C111 = (2 * C32231 * C32232) / C31894;
    const double C442 = C32232 / C31894;
    const double C210 = (2 * C32231 * C32234) / C31894;
    const double C440 = C32234 / C31894;
    const double C316 = (2 * C32231 * C32235) / C31894;
    const double C530 = C32235 / C31894;
    const double C5151 = (C31955 * std::pow(C32005, 2)) / C30833 + C32004;
    const double C32007 = C32006 * C32005;
    const double C32012 = C32006 / C30840;
    const double C32207 = C32006 / C30828;
    const double C32204 = C31870 * C32006;
    const double C32014 = C32013 * C32005;
    const double C32213 = C32003 * C32013;
    const double C32212 = 2 * C32013;
    const double C32248 = C32013 / C32196;
    const double C5979 = C32013 / C32230;
    const double C17320 = C32013 / C30834;
    const double C32244 = C32209 / C30828;
    const double C5152 = (-2 * C31870 * C32209) / C30828;
    const double C32260 = C32236 / C30833;
    const double C30869 = C30864 + 0;
    const double C30868 = C30863 / C30834;
    const double C30854 = C30839 - C30850;
    const double C30853 = C30826 * C30848;
    const double C756 =
        ((-C30848 / C30828) / C30834 - (0 * be) / C30828) / C30834 -
        (0 * be) / C30828;
    const double C5980 = -C30848 / C30828;
    const double C15390 = (-C30848 / C30828) / C30834 - (0 * be) / C30828;
    const double C31866 = C31865 / C30833;
    const double C32224 = 2 * C32190;
    const double C7561 = C32188 * C888;
    const double C7552 = C32188 * C885;
    const double C7548 = C32188 * C873;
    const double C7544 = C32188 * C248;
    const double C7540 = C32188 * C233;
    const double C7536 = C32188 * C243;
    const double C7532 = C32188 * C223;
    const double C7815 = C32188 * C244;
    const double C7811 = C32188 * C224;
    const double C8107 = C32188 * C1077;
    const double C8103 = C32188 * C1059;
    const double C8099 = C32188 * C633;
    const double C8095 = C32188 * C623;
    const double C8590 = C32188 * C1080;
    const double C8586 = C32188 * C1065;
    const double C8582 = C32188 * C353;
    const double C8578 = C32188 * C338;
    const double C8573 = C32188 * C348;
    const double C8569 = C32188 * C328;
    const double C9010 = C32188 * C349;
    const double C9006 = C32188 * C329;
    const double C12503 = C32188 * C1946;
    const double C12499 = C32188 * C1934;
    const double C923 = C748 * C885;
    const double C917 = C748 * C873;
    const double C910 = C748 * C248;
    const double C904 = C748 * C233;
    const double C898 = C748 * C243;
    const double C892 = C748 * C223;
    const double C1244 = C748 * C244;
    const double C1238 = C748 * C224;
    const double C1588 = C748 * C1077;
    const double C1582 = C748 * C1059;
    const double C1576 = C748 * C633;
    const double C1570 = C748 * C623;
    const double C1984 = C748 * C1946;
    const double C1978 = C748 * C1934;
    const double C1971 = C748 * C353;
    const double C1965 = C748 * C338;
    const double C1959 = C748 * C348;
    const double C1953 = C748 * C328;
    const double C2306 = C748 * C349;
    const double C2300 = C748 * C329;
    const double C2488 = C748 * C1080;
    const double C2482 = C748 * C1065;
    const double C31874 = C31873 / C30828;
    const double C32228 = C32194 / C30840;
    const double C32256 = C32188 - C32223;
    const double C15383 = -C32223;
    const double C900 = C749 * C244;
    const double C894 = C749 * C224;
    const double C1961 = C749 * C349;
    const double C1955 = C749 * C329;
    const double C32270 = C32255 + C31863;
    const double C31000 = C30994 + 0;
    const double C30967 = C30913 * C30948;
    const double C10044 =
        ((-C30914 / C30828) / C30834 -
         ((C31966 - (C30913 * C30948) / C30828) * be) / C30828) /
            C30834 -
        ((C30913 * ((-C30948 / C30828) / C30834 - (0 * be) / C30828) + C32053) *
         be) /
            C30828;
    const double C10045 =
        ((-C30948 / C30828) / C30834 - (0 * be) / C30828) / C30834 -
        (0 * be) / C30828;
    const double C20327 = (-C30948 / C30828) / C30834 - (0 * be) / C30828;
    const double C30980 = C30976 - C30970;
    const double C32048 = C32047 / C30833;
    const double C1705 =
        (((0 - (C30913 * C30914) / C30828) * ae) / C30828 - (0 * be) / C30840) /
            C30834 +
        ((C30913 * (((C31966 - (C30913 * 2 * C30916) / C30828) * ae) / C30828 -
                    C30914 / C30840) +
          C32208) *
         ae) /
            C30828 +
        (0 * ae) / C30828 - C30916 / C30833;
    const double C32240 = 2 * C32206;
    const double C32055 = C32054 / C30828;
    const double C32253 = C32219 / C30840;
    const double C32267 = C32208 - C32250;
    const double C20324 = -C32250;
    const double C32274 = C32262 + C32044;
    const double C31003 = C30999 / C30834;
    const double C6049 =
        (4 * (2 * C31307 + C31243 * C31317) +
         C31243 *
             (3 * C31317 + C31243 * (2 * C31243 * C31118 +
                                     C31243 * (C31118 + C31142 * C31252)))) /
        C30833;
    const double C129 =
        (2 * (C31074 * C31187 + C31450 * be) +
         C31074 * (C31187 + C31074 * C31191 + C31074 * C31170 * be) +
         (C31450 + C31170 * C31099) * be) /
        C30828;
    const double C225 =
        (C31243 * (C31187 + C31074 * C31191 + C31453 * be)) / C30828;
    const double C234 =
        (C31074 * C31187 + C31450 * be + C31191 * C31252) / C30828;
    const double C330 =
        (C31073 * (C31187 + C31074 * C31191 + C31453 * be)) / C30828;
    const double C339 =
        (C31074 * C31187 + C31450 * be + C31191 * C31285) / C30828;
    const double C624 = (C31073 * C31243 * C31191) / C30828;
    const double C1943 =
        (3 * (C31086 + C31073 * C31588 + C31586 * ae) +
         C31073 * (2 * C31588 +
                   C31073 * (C31093 + C31073 * (C31073 * C31103 + C31173 * ae) +
                             C31073 * C31173 * ae) +
                   C31589 * ae) +
         (2 * C31586 + C31073 * C31589) * ae) /
        C30828;
    const double C135 = (3 * (C31086 + C31093 * C31099) +
                         C31074 * (2 * C31095 + C31074 * C31107)) /
                        C30828;
    const double C231 = (C31243 * (2 * C31095 + C31074 * C31107)) / C30828;
    const double C240 = (C31086 + C31093 * C31099 + C31107 * C31252) / C30828;
    const double C336 = (C31073 * (2 * C31095 + C31074 * C31107) +
                         (2 * C31453 + C31074 * C31455) * ae) /
                        C30828;
    const double C345 =
        (C31086 + C31093 * C31099 + C31073 * (C31073 * C31107 + C31455 * ae) +
         C31073 * C31455 * ae) /
        C30828;
    const double C630 =
        (C31073 * C31243 * C31107 + C31243 * C31455 * ae) / C30828;
    const double C878 =
        (2 * C31243 * C31107 + C31243 * (C31107 + C31123 * C31252)) / C30828;
    const double C31124 = C31074 * C31122;
    const double C31129 = 2 * C31122;
    const double C31292 = C31073 * C31122;
    const double C31310 = C31243 * C31122;
    const double C31117 = C31102 + C31113;
    const double C31595 = C31591 + C31592;
    const double C6046 =
        (4 * (2 * C31613 + C31243 * C31624) +
         C31243 *
             (3 * C31624 + C31243 * (2 * C31243 * C31103 +
                                     C31243 * (C31103 + C31119 * C31252)))) /
        C30828;
    const double C31669 = C31665 + C31666;
    const double C31700 = C31073 * C31696;
    const double C31707 = 2 * C31696;
    const double C144 =
        (3 * (C31092 + be * C31095 + C31074 * C31106) +
         be * (2 * C31095 + C31074 * C31107) +
         C31074 *
             (2 * C31106 + be * C31107 +
              C31074 * (C31102 + be * C31074 * C31103 +
                        C31074 * (be * C31103 + C31074 * std::pow(C31076, 6) *
                                                    bs[6] * C31085)))) /
        C30833;
    const double C245 =
        ((yP - yQ) * (C31092 + be * C31095 + C31074 * C31106)) / C30833;
    const double C249 =
        (be * C31086 + C31074 * C31092 + C31106 * std::pow(yP - yQ, 2)) /
        C30833;
    const double C350 =
        (ae * (C31082 * C31079 * C31169 +
               C31074 * (C31074 * C31088 * C31089 * C31169 + C31170 * be) +
               C31074 * C31170 * be) +
         C31073 * (C31092 + be * C31095 + C31074 * C31106)) /
        C30833;
    const double C354 = (be * C31086 + C31074 * C31092 + ae * C31073 * C31191 +
                         C31073 * (ae * C31191 + C31073 * C31106)) /
                        C30833;
    const double C634 =
        (ae * C31243 * C31191 + C31073 * C31243 * C31106) / C30833;
    const double C886 = (2 * C31243 * C31106 +
                         C31243 * (C31106 + C31122 * std::pow(C31243, 2))) /
                        C30833;
    const double C31202 = C31183 * be;
    const double C31463 = C31074 * C31183;
    const double C31467 = 3 * C31183;
    const double C31551 = C31243 * C31183;
    const double C31600 = C31073 * C31183;
    const double C31599 = C31183 * ae;
    const double C1064 = (C31073 * (C31107 + C31123 * C31252) +
                          (C31455 + C31183 * C31252) * ae) /
                         C30828;
    const double C1939 =
        (2 * (C31073 * C31107 + C31455 * ae) +
         C31073 * (C31107 + C31073 * (C31073 * C31123 + C31183 * ae) +
                   C31073 * C31183 * ae) +
         (C31455 + C31183 * C31285) * ae) /
        C30828;
    const double C869 =
        2 * C31243 * C31455 + C31243 * (C31455 + C31183 * C31252);
    const double C1052 = C31073 * (C31455 + C31183 * C31252);
    const double C1930 =
        2 * C31073 * C31455 + C31073 * (C31455 + C31183 * C31285);
    const double C31560 = C31178 + C31559;
    const double C31596 = C31178 + C31594;
    const double C31681 = 2 * C31617;
    const double C31732 = C31073 * C31617;
    const double C31731 = C31617 * ae;
    const double C2475 =
        (2 * (C31073 * C31616 + C31549 * ae) +
         C31073 * (C31616 + C31073 * (C31073 * C31243 * C31131 + C31617 * ae) +
                   C31073 * C31617 * ae) +
         (C31549 + C31617 * C31285) * ae) /
        C30828;
    const double C2469 =
        2 * C31073 * C31549 + C31073 * (C31549 + C31617 * C31285);
    const double C31747 = 2 * C31742;
    const double C31745 = C31742 * ae;
    const double C31744 = C31740 + C31741;
    const double C31207 = C31074 * C31206;
    const double C31215 = 2 * C31206;
    const double C31268 = C31206 * C31252;
    const double C31293 = C31206 * C31285;
    const double C31311 = C31243 * C31206;
    const double C31417 = ae * C31206;
    const double C31416 = C31073 * C31206;
    const double C31640 = C31243 * C31639;
    const double C31644 = 3 * C31639;
    const double C31675 = C31073 * C31639;
    const double C31674 = C31639 * ae;
    const double C6811 =
        (2 * (C31073 * C31624 + C31557 * ae) +
         C31073 * (C31624 + C31073 * (C31073 * C31630 + C31639 * ae) +
                   C31073 * C31639 * ae) +
         (C31557 + C31639 * C31285) * ae) /
        C30828;
    const double C6807 =
        2 * C31073 * C31557 + C31073 * (C31557 + C31639 * C31285);
    const double C31670 = C31614 + C31668;
    const double C31762 = 2 * C31757;
    const double C31760 = C31757 * ae;
    const double C31763 = C31759 + C31756;
    const double C31701 = C31073 * C31698;
    const double C31713 = 3 * C31698;
    const double C31711 = C31698 * ae;
    const double C31718 = C31073 * C31714;
    const double C31193 = C31074 * C31184;
    const double C31198 = 2 * C31184;
    const double C31261 = C31243 * C31184;
    const double C31291 = ae * C31184;
    const double C31290 = C31073 * C31184;
    const double C1078 = (ae * (C31191 + C31184 * C31252) +
                          C31073 * (C31106 + C31122 * C31252)) /
                         C30833;
    const double C1947 = (2 * (ae * C31191 + C31073 * C31106) +
                          ae * (C31191 + C31184 * std::pow(C31073, 2)) +
                          C31073 * (C31106 + ae * C31073 * C31184 +
                                    C31073 * (ae * C31184 + C31073 * C31122))) /
                         C30833;
    const double C874 =
        (2 * C31243 * C31191 + C31243 * (C31191 + C31184 * C31252)) / C30828;
    const double C1060 = (C31073 * (C31191 + C31184 * C31252)) / C30828;
    const double C1935 =
        (2 * C31073 * C31191 + C31073 * (C31191 + C31184 * C31285)) / C30828;
    const double C1083 =
        (C31092 + C31102 * C31252 + ae * C31073 * C31266 +
         C31073 * (ae * C31266 + C31073 * (C31102 + C31118 * C31252))) /
        C30833;
    const double C1565 =
        (ae * (2 * C31259 + C31243 * C31266) +
         C31073 * (2 * C31243 * C31102 + C31243 * (C31102 + C31118 * C31252))) /
        C30833;
    const double C879 = (3 * (C31187 + C31174 * C31252) +
                         C31243 * (2 * C31259 + C31243 * C31266)) /
                        C30828;
    const double C1071 = (C31187 + C31174 * C31252 + C31266 * C31285) / C30828;
    const double C1559 = (C31073 * (2 * C31259 + C31243 * C31266)) / C30828;
    const double C6810 =
        (2 * C31073 * C31266 + C31073 * (C31266 + C31329 * C31285)) / C30828;
    const double C1949 =
        (3 * (C31092 + ae * C31282 + C31073 * C31286) +
         ae * (2 * C31282 + C31073 * C31288) +
         C31073 * (2 * C31286 + ae * C31288 +
                   C31073 * (C31102 + ae * C31073 * C31180 +
                             C31073 * (ae * C31180 + C31073 * C31118)))) /
        C30833;
    const double C1940 = (3 * (C31187 + C31174 * C31285) +
                          C31073 * (2 * C31282 + C31073 * C31288)) /
                         C30828;
    const double C31353 = C31350 + C31351;
    const double C6837 = C31862 * C2477;
    const double C12511 = C32188 * C2477;
    const double C6835 = C31862 * C2471;
    const double C12507 = C32188 * C2471;
    const double C31380 = C31073 * C31376;
    const double C31385 = 2 * C31376;
    const double C31379 = C31102 + C31375;
    const double C31149 = C31074 * C31147;
    const double C884 =
        (3 * (C31107 + C31123 * C31252) +
         C31243 * (2 * C31243 * C31123 + C31243 * (C31123 + C31147 * C31252))) /
        C30828;
    const double C31148 = C31074 * C31146;
    const double C31343 = C31146 * C31252;
    const double C31409 = C31243 * C31146;
    const double C31418 = C31073 * C31146;
    const double C889 =
        (3 * (C31106 + C31122 * C31252) +
         C31243 * (2 * C31243 * C31122 + C31243 * (C31122 + C31146 * C31252))) /
        C30833;
    const double C31323 = C31243 * C31322;
    const double C31358 = C31073 * C31322;
    const double C6816 =
        (2 * (ae * C31266 + C31073 * C31317) + ae * (C31266 + C31329 * C31285) +
         C31073 * (C31317 + ae * C31073 * C31329 +
                   C31073 * (ae * C31329 + C31073 * C31322))) /
        C30833;
    const double C31398 = C31073 * C31394;
    const double C31439 = C31431 + C31435;
    const double C31229 = C31074 * C31226;
    const double C31364 = C31226 * C31252;
    const double C31410 = C31243 * C31226;
    const double C31419 = C31226 * C31285;
    const double C31338 = C31243 * C31337;
    const double C31359 = C31337 * C31285;
    const double C31399 = C31073 * C31396;
    const double C31440 = C31334 + C31437;
    const double C31127 = C31115 + C31125;
    const double C6244 =
        (4 * (2 * C31616 + C31243 * C31656) +
         C31243 * (3 * C31656 +
                   C31243 * (2 * C31243 * C31131 +
                             C31243 * (C31131 + C31074 * C31143 * C31252)))) /
        C30828;
    const double C31632 = C31629 + C31631;
    const double C31331 = C31327 + C31330;
    const double C6812 = (3 * (C31259 + C31308 * C31285) +
                          C31073 * (2 * C31349 + C31073 * C31354)) /
                         C30828;
    const double C31438 = C31319 + C31434;
    const double C31383 = C31377 + C31381;
    const double C31230 = C31218 + C31228;
    const double C31563 = C31183 + C31562;
    const double C31603 = C31183 + C31601;
    const double C31684 = C31243 * C31683;
    const double C31737 = C31617 + C31735;
    const double C31749 = C31073 * C31746;
    const double C31650 = C31647 + C31649;
    const double C31678 = C31639 + C31676;
    const double C31721 = C31717 + C31719;
    const double C31766 = C31073 * C31764;
    const double C32008 = C32007 / C30833;
    const double C32237 = 2 * C32204;
    const double C32015 = C32014 / C30828;
    const double C32247 = C32213 / C30840;
    const double C32264 = C32207 - C32244;
    const double C14629 = -C32244;
    const double C32273 = C32260 + C32004;
    const double C30872 = C30869 * be;
    const double C7562 = C30854 * C883;
    const double C7555 = C30854 * C877;
    const double C7551 = C30854 * C868;
    const double C7547 = C30854 * C239;
    const double C7543 = C30854 * C219;
    const double C7539 = C30854 * C229;
    const double C7535 = C30854 * C214;
    const double C7820 = C30854 * C220;
    const double C7816 = C30854 * C230;
    const double C7812 = C30854 * C215;
    const double C8108 = C30854 * C1063;
    const double C8104 = C30854 * C1051;
    const double C8100 = C30854 * C629;
    const double C8096 = C30854 * C619;
    const double C8591 = C30854 * C1069;
    const double C8587 = C30854 * C1054;
    const double C8583 = C30854 * C344;
    const double C8579 = C30854 * C324;
    const double C8576 = C30854 * C334;
    const double C8572 = C30854 * C319;
    const double C8797 = C30854 * C620;
    const double C9011 = C30854 * C335;
    const double C9007 = C30854 * C320;
    const double C12504 = C30854 * C1938;
    const double C12500 = C30854 * C1929;
    const double C12916 = C30854 * C325;
    const double C30858 = C30826 * C30854;
    const double C30886 = C30854 / C30834;
    const double C30857 = C30853 / C30828;
    const double C909 = C756 * C220;
    const double C903 = C756 * C230;
    const double C897 = C756 * C215;
    const double C1241 = C756 * C216;
    const double C1573 = C756 * C620;
    const double C1970 = C756 * C325;
    const double C1964 = C756 * C335;
    const double C1958 = C756 * C320;
    const double C2303 = C756 * C321;
    const double C6067 = C5980 * C882;
    const double C6065 = C5980 * C870;
    const double C6063 = C5980 * C876;
    const double C6061 = C5980 * C867;
    const double C6059 = C5980 * C238;
    const double C6057 = C5980 * C218;
    const double C6055 = C5980 * C228;
    const double C6053 = C5980 * C213;
    const double C6261 = C5980 * C883;
    const double C6257 = C5980 * C877;
    const double C6255 = C5980 * C868;
    const double C6253 = C5980 * C239;
    const double C6251 = C5980 * C219;
    const double C6249 = C5980 * C229;
    const double C6247 = C5980 * C214;
    const double C6445 = C5980 * C1562;
    const double C6443 = C5980 * C1556;
    const double C6441 = C5980 * C1062;
    const double C6439 = C5980 * C1050;
    const double C6437 = C5980 * C628;
    const double C6435 = C5980 * C618;
    const double C6682 = C5980 * C1074;
    const double C6680 = C5980 * C1056;
    const double C6674 = C5980 * C1068;
    const double C6672 = C5980 * C1053;
    const double C6836 = C5980 * C2474;
    const double C6834 = C5980 * C2468;
    const double C6832 = C5980 * C1937;
    const double C6830 = C5980 * C1928;
    const double C6827 = C5980 * C343;
    const double C6825 = C5980 * C323;
    const double C6823 = C5980 * C333;
    const double C6821 = C5980 * C318;
    const double C7004 = C5980 * C1063;
    const double C7002 = C5980 * C1051;
    const double C7000 = C5980 * C1069;
    const double C6998 = C5980 * C1054;
    const double C6996 = C5980 * C629;
    const double C6994 = C5980 * C619;
    const double C7166 = C5980 * C344;
    const double C7164 = C5980 * C324;
    const double C7162 = C5980 * C334;
    const double C7160 = C5980 * C319;
    const double C11773 = C5980 * C1931;
    const double C11956 = C5980 * C1938;
    const double C11954 = C5980 * C1929;
    const double C15520 = C15390 * C883;
    const double C15513 = C15390 * C877;
    const double C15509 = C15390 * C868;
    const double C15505 = C15390 * C239;
    const double C15501 = C15390 * C219;
    const double C15497 = C15390 * C229;
    const double C15493 = C15390 * C214;
    const double C15778 = C15390 * C220;
    const double C15774 = C15390 * C230;
    const double C15770 = C15390 * C215;
    const double C16066 = C15390 * C1063;
    const double C16062 = C15390 * C1051;
    const double C16058 = C15390 * C629;
    const double C16054 = C15390 * C619;
    const double C16375 = C15390 * C1069;
    const double C16371 = C15390 * C1054;
    const double C16556 = C15390 * C1938;
    const double C16552 = C15390 * C1929;
    const double C16545 = C15390 * C344;
    const double C16541 = C15390 * C324;
    const double C16537 = C15390 * C334;
    const double C16533 = C15390 * C319;
    const double C16770 = C15390 * C620;
    const double C16988 = C15390 * C325;
    const double C16984 = C15390 * C335;
    const double C16980 = C15390 * C320;
    const double C31867 = C31863 - C31866;
    const double C32257 = C32224 / C30828;
    const double C31875 = C31871 - C31874;
    const double C32271 = C32256 / C30834;
    const double C15519 = C15383 * C888;
    const double C15510 = C15383 * C885;
    const double C15506 = C15383 * C873;
    const double C15502 = C15383 * C248;
    const double C15498 = C15383 * C233;
    const double C15494 = C15383 * C243;
    const double C15490 = C15383 * C223;
    const double C15773 = C15383 * C244;
    const double C15769 = C15383 * C224;
    const double C16065 = C15383 * C1077;
    const double C16061 = C15383 * C1059;
    const double C16057 = C15383 * C633;
    const double C16053 = C15383 * C623;
    const double C16372 = C15383 * C1080;
    const double C16368 = C15383 * C1065;
    const double C16563 = C15383 * C2477;
    const double C16559 = C15383 * C2471;
    const double C16555 = C15383 * C1946;
    const double C16551 = C15383 * C1934;
    const double C16542 = C15383 * C353;
    const double C16538 = C15383 * C338;
    const double C16534 = C15383 * C348;
    const double C16530 = C15383 * C328;
    const double C16983 = C15383 * C349;
    const double C16979 = C15383 * C329;
    const double C5299 = C32270 * C885;
    const double C5293 = C32270 * C873;
    const double C5286 = C32270 * C248;
    const double C5280 = C32270 * C233;
    const double C5274 = C32270 * C243;
    const double C5268 = C32270 * C223;
    const double C5580 = C32270 * C244;
    const double C5574 = C32270 * C224;
    const double C5908 = C32270 * C1077;
    const double C5902 = C32270 * C1059;
    const double C5896 = C32270 * C633;
    const double C5890 = C32270 * C623;
    const double C10298 = C32270 * C1946;
    const double C10292 = C32270 * C1934;
    const double C10285 = C32270 * C353;
    const double C10279 = C32270 * C338;
    const double C10273 = C32270 * C348;
    const double C10267 = C32270 * C328;
    const double C10612 = C32270 * C349;
    const double C10606 = C32270 * C329;
    const double C10782 = C32270 * C1080;
    const double C10776 = C32270 * C1065;
    const double C31004 = C31000 * be;
    const double C30975 = C30967 / C30828;
    const double C30984 = C30913 * C30980;
    const double C31013 = C30980 / C30834;
    const double C32049 = C32044 - C32048;
    const double C32263 = C32240 / C30828;
    const double C32056 = C32052 - C32055;
    const double C32277 = C32267 / C30834;
    const double C10043 =
        ((-(0 * be) / C30828) / C30834 -
         ((0 - (C30913 * C30914) / C30828) * be) / C30828) /
            C30834 -
        ((C30913 * ((-C30914 / C30828) / C30834 -
                    ((C31966 - (C30913 * C30948) / C30828) * be) / C30828) +
          C20324) *
         be) /
            C30828 +
        (-C30948 / C30828) / C30834 - (0 * be) / C30828;
    const double C6071 = C31862 * C6049;
    const double C896 = C32227 * C225;
    const double C1240 = C749 * C225;
    const double C5272 = C32227 * C225;
    const double C7813 = C31872 * C225;
    const double C15771 = C31872 * C225;
    const double C17439 = C17317 * C225;
    const double C906 = C749 * C234;
    const double C1250 = C748 * C234;
    const double C5586 = C32270 * C234;
    const double C6252 = C31862 * C234;
    const double C7542 = C31872 * C234;
    const double C7819 = C32188 * C234;
    const double C15500 = C31872 * C234;
    const double C15777 = C15383 * C234;
    const double C1957 = C32227 * C330;
    const double C2302 = C749 * C330;
    const double C9008 = C31872 * C330;
    const double C10271 = C32227 * C330;
    const double C16981 = C31872 * C330;
    const double C18522 = C17317 * C330;
    const double C1967 = C749 * C339;
    const double C2312 = C748 * C339;
    const double C7165 = C31862 * C339;
    const double C8580 = C31872 * C339;
    const double C10618 = C32270 * C339;
    const double C12915 = C32188 * C339;
    const double C16540 = C31872 * C339;
    const double C16987 = C15383 * C339;
    const double C1572 = C749 * C624;
    const double C4620 = C748 * C624;
    const double C6995 = C31862 * C624;
    const double C8097 = C31872 * C624;
    const double C8796 = C32188 * C624;
    const double C16055 = C31872 * C624;
    const double C16769 = C15383 * C624;
    const double C26185 = C32270 * C624;
    const double C11775 = C5980 * C1943;
    const double C1247 = C756 * C231;
    const double C915 = C756 * C240;
    const double C7824 = C30854 * C240;
    const double C15782 = C15390 * C240;
    const double C2309 = C756 * C336;
    const double C1976 = C756 * C345;
    const double C12920 = C30854 * C345;
    const double C16992 = C15390 * C345;
    const double C1579 = C756 * C630;
    const double C8801 = C30854 * C630;
    const double C16774 = C15390 * C630;
    const double C926 = C756 * C878;
    const double C7832 = C30854 * C878;
    const double C15790 = C15390 * C878;
    const double C31136 = C31129 + C31130;
    const double C31126 = C31117 + C31124;
    const double C6070 = C5980 * C6046;
    const double C31702 = C31093 + C31700;
    const double C902 = C32227 * C245;
    const double C1246 = C749 * C245;
    const double C5278 = C32227 * C245;
    const double C7817 = C31872 * C245;
    const double C15775 = C31872 * C245;
    const double C17445 = C17317 * C245;
    const double C912 = C749 * C249;
    const double C1256 = C748 * C249;
    const double C5592 = C32270 * C249;
    const double C6254 = C31862 * C249;
    const double C7546 = C31872 * C249;
    const double C7823 = C32188 * C249;
    const double C15504 = C31872 * C249;
    const double C15781 = C15383 * C249;
    const double C1963 = C32227 * C350;
    const double C2308 = C749 * C350;
    const double C9012 = C31872 * C350;
    const double C10277 = C32227 * C350;
    const double C16985 = C31872 * C350;
    const double C18528 = C17317 * C350;
    const double C1973 = C749 * C354;
    const double C2318 = C748 * C354;
    const double C7167 = C31862 * C354;
    const double C8584 = C31872 * C354;
    const double C10624 = C32270 * C354;
    const double C12919 = C32188 * C354;
    const double C16544 = C31872 * C354;
    const double C16991 = C15383 * C354;
    const double C1578 = C749 * C634;
    const double C4626 = C748 * C634;
    const double C6997 = C31862 * C634;
    const double C8101 = C31872 * C634;
    const double C8800 = C32188 * C634;
    const double C16059 = C31872 * C634;
    const double C16773 = C15383 * C634;
    const double C26191 = C32270 * C634;
    const double C925 = C749 * C886;
    const double C6258 = C31862 * C886;
    const double C7554 = C31872 * C886;
    const double C7831 = C32188 * C886;
    const double C15512 = C31872 * C886;
    const double C15789 = C15383 * C886;
    const double C31464 = C31462 + C31463;
    const double C1070 =
        (C31243 * C31107 + C31073 * (C31073 * C31243 * C31123 + C31551 * ae) +
         C31073 * C31551 * ae) /
        C30828;
    const double C2476 =
        (2 * (C31073 * C31619 + C31551 * ae) +
         C31073 * (C31619 + C31073 * (C31073 * C31243 * C31147 + C31620 * ae) +
                   C31073 * C31620 * ae) +
         (C31551 + C31620 * C31285) * ae) /
        C30828;
    const double C1055 = C31243 * C31455 + C31551 * C31285;
    const double C2470 =
        2 * C31073 * C31551 + C31073 * (C31551 + C31620 * C31285);
    const double C31602 = C31598 + C31599;
    const double C1591 = C756 * C1064;
    const double C8809 = C30854 * C1064;
    const double C19831 = C15390 * C1064;
    const double C1987 = C756 * C1939;
    const double C13704 = C30854 * C1939;
    const double C22572 = C15390 * C1939;
    const double C920 = C756 * C869;
    const double C7828 = C30854 * C869;
    const double C15786 = C15390 * C869;
    const double C1585 = C756 * C1052;
    const double C8805 = C30854 * C1052;
    const double C19827 = C15390 * C1052;
    const double C1981 = C756 * C1930;
    const double C13700 = C30854 * C1930;
    const double C22568 = C15390 * C1930;
    const double C1075 =
        (C31095 + C31109 * C31252 +
         C31073 * (C31073 * (C31109 + C31131 * C31252) + C31560 * ae) +
         C31073 * C31560 * ae) /
        C30828;
    const double C1563 =
        (C31073 * (2 * C31243 * C31109 + C31243 * (C31109 + C31131 * C31252)) +
         (2 * C31549 + C31243 * C31560) * ae) /
        C30828;
    const double C6346 =
        (C31073 * (3 * C31656 +
                   C31243 * (2 * C31243 * C31131 +
                             C31243 * (C31131 + C31074 * C31143 * C31252))) +
         (3 * C31560 +
          C31243 * (2 * C31617 + C31243 * (C31201 + C31221 * C31252))) *
             ae) /
        C30828;
    const double C7157 =
        (2 * (C31073 * C31656 + C31560 * ae) +
         C31073 * (C31656 +
                   C31073 * (C31073 * (C31131 + C31074 * C31143 * C31252) +
                             C31683 * ae) +
                   C31073 * C31683 * ae) +
         (C31560 + C31683 * C31285) * ae) /
        C30828;
    const double C871 = 3 * (C31453 + C31178 * C31252) +
                        C31243 * (2 * C31549 + C31243 * C31560);
    const double C1057 = C31453 + C31178 * C31252 + C31560 * C31285;
    const double C1557 = C31073 * (2 * C31549 + C31243 * C31560);
    const double C7155 =
        2 * C31073 * C31560 + C31073 * (C31560 + C31683 * C31285);
    const double C1944 =
        (3 * (C31095 + C31073 * C31595 + C31593 * ae) +
         C31073 * (2 * C31595 +
                   C31073 * (C31109 + C31073 * (C31073 * C31131 + C31201 * ae) +
                             C31073 * C31201 * ae) +
                   C31596 * ae) +
         (2 * C31593 + C31073 * C31596) * ae) /
        C30828;
    const double C1932 = 3 * (C31453 + C31178 * C31285) +
                         C31073 * (2 * C31593 + C31073 * C31596);
    const double C31736 = C31734 + C31731;
    const double C12512 = C30854 * C2475;
    const double C14264 = C5980 * C2475;
    const double C16564 = C15390 * C2475;
    const double C12508 = C30854 * C2469;
    const double C14262 = C5980 * C2469;
    const double C16560 = C15390 * C2469;
    const double C31748 = C31073 * C31744;
    const double C31208 = C31180 + C31207;
    const double C31269 = C31184 + C31268;
    const double C31295 = C31184 + C31293;
    const double C31363 = 2 * C31311;
    const double C31408 = ae * C31311;
    const double C31407 = C31073 * C31311;
    const double C31422 = 2 * C31416;
    const double C31420 = ae * C31416;
    const double C31641 = C31637 + C31640;
    const double C31677 = C31673 + C31674;
    const double C6840 = C5980 * C6811;
    const double C6838 = C5980 * C6807;
    const double C6813 =
        (3 * (C31613 + C31073 * C31669 + C31667 * ae) +
         C31073 * (2 * C31669 +
                   C31073 * (C31627 +
                             C31073 * (C31073 * C31243 * C31119 + C31645 * ae) +
                             C31073 * C31645 * ae) +
                   C31670 * ae) +
         (2 * C31667 + C31073 * C31670) * ae) /
        C30828;
    const double C6808 = 3 * (C31547 + C31614 * C31285) +
                         C31073 * (2 * C31667 + C31073 * C31670);
    const double C31765 = C31073 * C31763;
    const double C31703 = C31699 + C31701;
    const double C31720 = C31103 + C31718;
    const double C31195 = C31174 + C31193;
    const double C1081 = (C31243 * C31106 + ae * C31073 * C31261 +
                          C31073 * (ae * C31261 + C31073 * C31243 * C31122)) /
                         C30833;
    const double C2478 =
        (2 * (ae * C31261 + C31073 * C31310) + ae * (C31261 + C31311 * C31285) +
         C31073 * (C31310 + ae * C31073 * C31311 +
                   C31073 * (ae * C31311 + C31073 * C31243 * C31146))) /
        C30833;
    const double C1066 = (C31243 * C31191 + C31261 * C31285) / C30828;
    const double C2472 =
        (2 * C31073 * C31261 + C31073 * (C31261 + C31311 * C31285)) / C30828;
    const double C31294 = C31291 + C31292;
    const double C1590 = C749 * C1078;
    const double C7005 = C31862 * C1078;
    const double C8109 = C31872 * C1078;
    const double C8808 = C32188 * C1078;
    const double C16067 = C31872 * C1078;
    const double C19830 = C15383 * C1078;
    const double C1986 = C749 * C1947;
    const double C11957 = C31862 * C1947;
    const double C12505 = C31872 * C1947;
    const double C13703 = C32188 * C1947;
    const double C16557 = C31872 * C1947;
    const double C22571 = C15383 * C1947;
    const double C919 = C749 * C874;
    const double C6256 = C31862 * C874;
    const double C7550 = C31872 * C874;
    const double C7827 = C32188 * C874;
    const double C15508 = C31872 * C874;
    const double C15785 = C15383 * C874;
    const double C1584 = C749 * C1060;
    const double C7003 = C31862 * C1060;
    const double C8105 = C31872 * C1060;
    const double C8804 = C32188 * C1060;
    const double C16063 = C31872 * C1060;
    const double C19826 = C15383 * C1060;
    const double C1980 = C749 * C1935;
    const double C11955 = C31862 * C1935;
    const double C12501 = C31872 * C1935;
    const double C13699 = C32188 * C1935;
    const double C16553 = C31872 * C1935;
    const double C22567 = C15383 * C1935;
    const double C6681 = C31862 * C1083;
    const double C8598 = C32188 * C1083;
    const double C16381 = C15383 * C1083;
    const double C6446 = C31862 * C1565;
    const double C8115 = C32188 * C1565;
    const double C16073 = C15383 * C1565;
    const double C6064 = C31862 * C879;
    const double C7557 = C32188 * C879;
    const double C15515 = C15383 * C879;
    const double C6679 = C31862 * C1071;
    const double C8594 = C32188 * C1071;
    const double C16377 = C15383 * C1071;
    const double C6444 = C31862 * C1559;
    const double C8111 = C32188 * C1559;
    const double C16069 = C15383 * C1559;
    const double C6839 = C31862 * C6810;
    const double C11774 = C31862 * C1949;
    const double C13433 = C32188 * C1949;
    const double C22301 = C15383 * C1949;
    const double C11772 = C31862 * C1940;
    const double C13429 = C32188 * C1940;
    const double C22297 = C15383 * C1940;
    const double C6817 =
        (3 * (C31307 + ae * C31349 + C31073 * C31353) +
         ae * (2 * C31349 + C31073 * C31354) +
         C31073 *
             (2 * C31353 + ae * C31354 +
              C31073 * (C31319 + ae * C31073 * C31334 +
                        C31073 * (ae * C31334 + C31073 * C31243 * C31142)))) /
        C30833;
    const double C31392 = C31385 + C31386;
    const double C31382 = C31379 + C31380;
    const double C31151 = C31139 + C31149;
    const double C31150 = C31141 + C31148;
    const double C31344 = C31122 + C31343;
    const double C31411 = C31073 * C31409;
    const double C31421 = C31417 + C31418;
    const double C6262 = C31862 * C889;
    const double C7563 = C31872 * C889;
    const double C15521 = C31872 * C889;
    const double C31324 = C31321 + C31323;
    const double C31360 = C31357 + C31358;
    const double C6841 = C31862 * C6816;
    const double C31400 = C31397 + C31398;
    const double C31441 = C31073 * C31439;
    const double C31231 = C31203 + C31229;
    const double C31365 = C31206 + C31364;
    const double C31412 = C31410 * C31285;
    const double C31423 = C31206 + C31419;
    const double C31339 = C31336 + C31338;
    const double C31361 = C31329 + C31359;
    const double C31401 = C31395 + C31399;
    const double C31442 = C31073 * C31440;
    const double C137 = (4 * (2 * C31095 + C31074 * C31107) +
                         C31074 * (3 * C31107 + C31074 * C31127)) /
                        C30828;
    const double C232 = (C31243 * (3 * C31107 + C31074 * C31127)) / C30828;
    const double C241 =
        (2 * C31095 + C31074 * C31107 + C31127 * C31252) / C30828;
    const double C6048 =
        (5 * (3 * C31624 + C31243 * C31632) +
         C31243 * (4 * C31632 +
                   C31243 * (3 * C31630 +
                             C31243 * (2 * C31243 * C31119 +
                                       C31243 * (C31119 + C31143 * C31252))))) /
        C30828;
    const double C6152 =
        (C31073 * (3 * C31624 + C31243 * C31632) +
         (3 * C31557 +
          C31243 * (2 * C31614 + C31243 * (C31173 + C31179 * C31252))) *
             ae) /
        C30828;
    const double C6045 = (4 * (2 * C31259 + C31243 * C31266) +
                          C31243 * (3 * C31266 + C31243 * C31331)) /
                         C30828;
    const double C6151 = (C31073 * (3 * C31266 + C31243 * C31331)) / C30828;
    const double C6153 =
        (2 * C31259 + C31243 * C31266 + C31331 * C31285) / C30828;
    const double C12049 = C31862 * C6812;
    const double C11763 = (4 * (2 * C31282 + C31073 * C31288) +
                           C31073 * (3 * C31288 + C31073 * C31383)) /
                          C30828;
    const double C31232 = C31230 * be;
    const double C31468 = C31074 * C31230;
    const double C31606 = C31243 * C31230;
    const double C1076 =
        (C31107 + C31123 * C31252 +
         C31073 * (C31073 * (C31123 + C31147 * C31252) + C31563 * ae) +
         C31073 * C31563 * ae) /
        C30828;
    const double C1564 =
        (C31073 * (2 * C31243 * C31123 + C31243 * (C31123 + C31147 * C31252)) +
         (2 * C31551 + C31243 * C31563) * ae) /
        C30828;
    const double C872 = 3 * (C31455 + C31183 * C31252) +
                        C31243 * (2 * C31551 + C31243 * C31563);
    const double C1058 = C31455 + C31183 * C31252 + C31563 * C31285;
    const double C1558 = C31073 * (2 * C31551 + C31243 * C31563);
    const double C1933 = 3 * (C31455 + C31183 * C31285) +
                         C31073 * (2 * C31600 + C31073 * C31603);
    const double C31685 = C31681 + C31684;
    const double C11863 = 3 * (C31549 + C31617 * C31285) +
                          C31073 * (2 * C31732 + C31073 * C31737);
    const double C31751 = C31747 + C31749;
    const double C31651 = C31243 * C31650;
    const double C6809 = 3 * (C31557 + C31639 * C31285) +
                         C31073 * (2 * C31675 + C31073 * C31678);
    const double C31723 = C31073 * C31721;
    const double C31768 = C31762 + C31766;
    const double C32009 = C32004 - C32008;
    const double C32261 = C32237 / C30828;
    const double C32016 = C32012 - C32015;
    const double C32275 = C32264 / C30834;
    const double C30874 = C30872 / C30828;
    const double C30862 = C30858 + C31872;
    const double C30889 = C30886 - C30888;
    const double C5156 = C30886 + (0 * ae) / C30828;
    const double C30861 = C31862 - C30857;
    const double C6077 = C6066 - C6067;
    const double C6075 = C6062 - C6063;
    const double C6074 = C6060 - C6061;
    const double C6073 = C6058 - C6059;
    const double C6072 = C6056 - C6057;
    const double C6678 = C6442 - C6441;
    const double C7325 = C6441 - C6442;
    const double C6677 = C6440 - C6439;
    const double C7324 = C6439 - C6440;
    const double C7321 = C6437 - C6438;
    const double C7319 = C6438 - C6437;
    const double C7320 = C6435 - C6436;
    const double C7318 = C6436 - C6435;
    const double C6829 = C6673 - C6674;
    const double C7323 = C6674 - C6673;
    const double C6828 = C6671 - C6672;
    const double C7322 = C6672 - C6671;
    const double C14131 = C6837 - C6836;
    const double C14527 = C6836 - C6837;
    const double C14130 = C6835 - C6834;
    const double C14526 = C6834 - C6835;
    const double C11771 = C6833 - C6832;
    const double C11770 = C6831 - C6830;
    const double C6843 = C6826 - C6827;
    const double C6842 = C6824 - C6825;
    const double C17466 = C31867 * C885;
    const double C17460 = C31867 * C873;
    const double C17453 = C31867 * C248;
    const double C17447 = C31867 * C233;
    const double C17441 = C31867 * C243;
    const double C17435 = C31867 * C223;
    const double C17759 = C31867 * C249;
    const double C17753 = C31867 * C234;
    const double C17747 = C31867 * C244;
    const double C17741 = C31867 * C224;
    const double C18075 = C31867 * C1077;
    const double C18069 = C31867 * C1059;
    const double C18063 = C31867 * C633;
    const double C18057 = C31867 * C623;
    const double C18549 = C31867 * C1080;
    const double C18543 = C31867 * C1065;
    const double C18537 = C31867 * C353;
    const double C18531 = C31867 * C338;
    const double C18524 = C31867 * C348;
    const double C18518 = C31867 * C328;
    const double C18755 = C31867 * C634;
    const double C18749 = C31867 * C624;
    const double C18961 = C31867 * C349;
    const double C18955 = C31867 * C329;
    const double C24073 = C31867 * C1946;
    const double C24067 = C31867 * C1934;
    const double C24381 = C31867 * C354;
    const double C24375 = C31867 * C339;
    const double C32187 = C31867 * C31857;
    const double C32226 = C32192 + C31867;
    const double C5301 = C32257 * C886;
    const double C5295 = C32257 * C874;
    const double C5288 = C32257 * C249;
    const double C5282 = C32257 * C234;
    const double C5276 = C32257 * C244;
    const double C5270 = C32257 * C224;
    const double C5582 = C32257 * C245;
    const double C5576 = C32257 * C225;
    const double C5910 = C32257 * C1078;
    const double C5904 = C32257 * C1060;
    const double C5898 = C32257 * C634;
    const double C5892 = C32257 * C624;
    const double C10300 = C32257 * C1947;
    const double C10294 = C32257 * C1935;
    const double C10287 = C32257 * C354;
    const double C10281 = C32257 * C339;
    const double C10275 = C32257 * C349;
    const double C10269 = C32257 * C329;
    const double C10614 = C32257 * C350;
    const double C10608 = C32257 * C330;
    const double C17468 = C31875 * C886;
    const double C17462 = C31875 * C874;
    const double C17455 = C31875 * C249;
    const double C17449 = C31875 * C234;
    const double C17443 = C31875 * C244;
    const double C17437 = C31875 * C224;
    const double C17749 = C31875 * C245;
    const double C17743 = C31875 * C225;
    const double C18077 = C31875 * C1078;
    const double C18071 = C31875 * C1060;
    const double C18065 = C31875 * C634;
    const double C18059 = C31875 * C624;
    const double C18539 = C31875 * C354;
    const double C18533 = C31875 * C339;
    const double C18526 = C31875 * C349;
    const double C18520 = C31875 * C329;
    const double C18963 = C31875 * C350;
    const double C18957 = C31875 * C330;
    const double C24075 = C31875 * C1947;
    const double C24069 = C31875 * C1935;
    const double C32195 = C31875 / C30834;
    const double C32191 = C31875 * C31857;
    const double C2590 = C32271 - (C31867 * C31858) / C30828;
    const double C31006 = C31004 / C30828;
    const double C30979 = C31966 - C30975;
    const double C30988 = C30984 + C32053;
    const double C31016 = C31013 - C31015;
    const double C32216 = C32049 * C32043;
    const double C32252 = C32218 + C32049;
    const double C32220 = C32056 / C30834;
    const double C32217 = C32056 * C32043;
    const double C13219 = C32277 - (C32049 * C32045) / C30828;
    const double C7565 = C7542 - C7543;
    const double C15523 = C15500 - C15501;
    const double C12491 = C8580 - C8579;
    const double C16567 = C16540 - C16541;
    const double C9212 = C8096 - C8097;
    const double C9208 = C8097 - C8096;
    const double C17193 = C16054 - C16055;
    const double C17189 = C16055 - C16054;
    const double C145 =
        (4 * (2 * C31106 + be * C31107 + C31074 * C31126) +
         be * (3 * C31107 + C31074 * C31127) +
         C31074 * (3 * C31126 + be * C31127 +
                   C31074 * (2 * C31122 + be * C31123 +
                             C31074 * (C31118 + be * C31074 * C31119 +
                                       C31074 * (be * C31119 +
                                                 C31074 * std::pow(C31078, 7) *
                                                     bs[7] * C31085))))) /
        C30833;
    const double C246 =
        ((yP - yQ) * (2 * C31106 + be * C31107 + C31074 * C31126)) / C30833;
    const double C250 = (C31092 + be * C31095 + C31074 * C31106 +
                         C31126 * std::pow(yP - yQ, 2)) /
                        C30833;
    const double C351 =
        (ae * (2 * (C31074 * C31174 + C31170 * be) +
               C31074 *
                   (C31174 +
                    C31074 * (C31074 * C31097 * C31098 * C31169 + C31173 * be) +
                    C31074 * C31173 * be) +
               (C31170 + C31173 * C31099) * be) +
         C31073 * (2 * C31106 + be * C31107 + C31074 * C31126)) /
        C30833;
    const double C31704 = C31702 + C31697;
    const double C7567 = C7546 - C7547;
    const double C15525 = C15504 - C15505;
    const double C12493 = C8584 - C8583;
    const double C16569 = C16544 - C16545;
    const double C9214 = C8100 - C8101;
    const double C9210 = C8101 - C8100;
    const double C17195 = C16058 - C16059;
    const double C17191 = C16059 - C16058;
    const double C7571 = C7554 - C7555;
    const double C15529 = C15512 - C15513;
    const double C337 = (C31073 * (3 * C31107 + C31074 * C31127) +
                         (3 * C31455 + C31074 * C31464) * ae) /
                        C30828;
    const double C346 =
        (2 * C31095 + C31074 * C31107 +
         C31073 * (C31073 * C31127 + C31464 * ae) + C31073 * C31464 * ae) /
        C30828;
    const double C631 =
        (C31073 * C31243 * C31127 + C31243 * C31464 * ae) / C30828;
    const double C124 = 4 * (2 * C31453 + C31074 * C31455) +
                        C31074 * (3 * C31455 + C31074 * C31464);
    const double C217 = C31243 * (3 * C31455 + C31074 * C31464);
    const double C221 = 2 * C31453 + C31074 * C31455 + C31464 * C31252;
    const double C322 = C31073 * (3 * C31455 + C31074 * C31464);
    const double C326 = 2 * C31453 + C31074 * C31455 + C31464 * C31285;
    const double C621 = C31073 * C31243 * C31464;
    const double C1232 =
        2 * C31243 * C31464 + C31243 * (C31464 + C31230 * C31252);
    const double C1406 = C31073 * (C31464 + C31230 * C31252);
    const double C2294 =
        2 * C31073 * C31464 + C31073 * (C31464 + C31230 * C31285);
    const double C2491 = C756 * C1070;
    const double C12718 = C30854 * C1070;
    const double C16782 = C15390 * C1070;
    const double C2485 = C756 * C1055;
    const double C12714 = C30854 * C1055;
    const double C16778 = C15390 * C1055;
    const double C1945 =
        (3 * (C31107 + C31073 * C31602 + C31600 * ae) +
         C31073 * (2 * C31602 +
                   C31073 * (C31123 + C31073 * (C31073 * C31147 + C31225 * ae) +
                             C31073 * C31225 * ae) +
                   C31603 * ae) +
         (2 * C31600 + C31073 * C31603) * ae) /
        C30828;
    const double C7008 = C5980 * C1075;
    const double C8599 = C30854 * C1075;
    const double C16382 = C15390 * C1075;
    const double C8116 = C30854 * C1563;
    const double C9667 = C5980 * C1563;
    const double C16074 = C15390 * C1563;
    const double C6259 = C5980 * C871;
    const double C7558 = C30854 * C871;
    const double C15516 = C15390 * C871;
    const double C7006 = C5980 * C1057;
    const double C8595 = C30854 * C1057;
    const double C16378 = C15390 * C1057;
    const double C8112 = C30854 * C1557;
    const double C9665 = C5980 * C1557;
    const double C16070 = C15390 * C1557;
    const double C11960 = C5980 * C1944;
    const double C13434 = C30854 * C1944;
    const double C22302 = C15390 * C1944;
    const double C11958 = C5980 * C1932;
    const double C13430 = C30854 * C1932;
    const double C22298 = C15390 * C1932;
    const double C11865 =
        (3 * (C31616 + C31073 * C31736 + C31732 * ae) +
         C31073 * (2 * C31736 +
                   C31073 * (C31730 +
                             C31073 * (C31073 * C31243 * C31074 * C31143 +
                                       C31733 * ae) +
                             C31073 * C31733 * ae) +
                   C31737 * ae) +
         (2 * C31732 + C31073 * C31737) * ae) /
        C30828;
    const double C31750 = C31109 + C31748;
    const double C31209 = C31208 + C31204;
    const double C1084 =
        (C31106 + C31122 * C31252 + ae * C31073 * C31269 +
         C31073 * (ae * C31269 + C31073 * (C31122 + C31146 * C31252))) /
        C30833;
    const double C1566 =
        (ae * (2 * C31261 + C31243 * C31269) +
         C31073 * (2 * C31243 * C31122 + C31243 * (C31122 + C31146 * C31252))) /
        C30833;
    const double C880 = (3 * (C31191 + C31184 * C31252) +
                         C31243 * (2 * C31261 + C31243 * C31269)) /
                        C30828;
    const double C1072 = (C31191 + C31184 * C31252 + C31269 * C31285) / C30828;
    const double C1560 = (C31073 * (2 * C31261 + C31243 * C31269)) / C30828;
    const double C1941 = (3 * (C31191 + C31184 * C31285) +
                          C31073 * (2 * C31290 + C31073 * C31295)) /
                         C30828;
    const double C31424 = C31122 + C31420;
    const double C6154 =
        (2 * C31613 + C31243 * C31624 +
         C31073 * (C31073 * C31632 + C31641 * ae) + C31073 * C31641 * ae) /
        C30828;
    const double C7315 =
        (2 * (C31073 * C31632 + C31641 * ae) +
         C31073 * (C31632 +
                   C31073 * (C31073 * (2 * C31243 * C31119 +
                                       C31243 * (C31119 + C31143 * C31252)) +
                             C31650 * ae) +
                   C31073 * C31650 * ae) +
         (C31641 + C31650 * C31285) * ae) /
        C30828;
    const double C6043 = 4 * (2 * C31547 + C31243 * C31557) +
                         C31243 * (3 * C31557 + C31243 * C31641);
    const double C6148 = C31073 * (3 * C31557 + C31243 * C31641);
    const double C6149 = 2 * C31547 + C31243 * C31557 + C31641 * C31285;
    const double C7313 =
        2 * C31073 * C31641 + C31073 * (C31641 + C31650 * C31285);
    const double C6815 =
        (3 * (C31624 + C31073 * C31677 + C31675 * ae) +
         C31073 * (2 * C31677 +
                   C31073 * (C31630 +
                             C31073 * (C31073 * (C31119 + C31143 * C31252) +
                                       C31648 * ae) +
                             C31073 * C31648 * ae) +
                   C31678 * ae) +
         (2 * C31675 + C31073 * C31678) * ae) /
        C30828;
    const double C12050 = C5980 * C6813;
    const double C12048 = C5980 * C6808;
    const double C31767 = C31627 + C31765;
    const double C11761 = 4 * (2 * C31586 + C31073 * C31589) +
                          C31073 * (3 * C31589 + C31073 * C31703);
    const double C31722 = C31720 + C31715;
    const double C31196 = C31195 + C31194;
    const double C2490 = C749 * C1081;
    const double C7001 = C31862 * C1081;
    const double C8592 = C31872 * C1081;
    const double C10784 = C32257 * C1081;
    const double C12717 = C32188 * C1081;
    const double C16374 = C31872 * C1081;
    const double C16781 = C15383 * C1081;
    const double C18551 = C31875 * C1081;
    const double C12513 = C31872 * C2478;
    const double C14265 = C31862 * C2478;
    const double C16565 = C31872 * C2478;
    const double C2484 = C749 * C1066;
    const double C6999 = C31862 * C1066;
    const double C8588 = C31872 * C1066;
    const double C10778 = C32257 * C1066;
    const double C12713 = C32188 * C1066;
    const double C16370 = C31872 * C1066;
    const double C16777 = C15383 * C1066;
    const double C18545 = C31875 * C1066;
    const double C12509 = C31872 * C2472;
    const double C14263 = C31862 * C2472;
    const double C16561 = C31872 * C2472;
    const double C1950 =
        (3 * (C31106 + ae * C31290 + C31073 * C31294) +
         ae * (2 * C31290 + C31073 * C31295) +
         C31073 * (2 * C31294 + ae * C31295 +
                   C31073 * (C31122 + ae * C31073 * C31206 +
                             C31073 * (ae * C31206 + C31073 * C31146)))) /
        C30833;
    const double C8415 = C8109 - C8108;
    const double C9218 = C8108 - C8109;
    const double C19477 = C16067 - C16066;
    const double C20224 = C16066 - C16067;
    const double C13427 = C12505 - C12504;
    const double C22295 = C16557 - C16556;
    const double C7569 = C7550 - C7551;
    const double C15527 = C15508 - C15509;
    const double C8413 = C8105 - C8104;
    const double C9216 = C8104 - C8105;
    const double C19475 = C16063 - C16062;
    const double C20222 = C16062 - C16063;
    const double C13425 = C12501 - C12500;
    const double C22293 = C16553 - C16552;
    const double C6691 = C6681 - C6682;
    const double C7327 = C6682 - C6681;
    const double C9428 = C6446 - C6445;
    const double C9930 = C6445 - C6446;
    const double C6076 = C6064 - C6065;
    const double C6690 = C6679 - C6680;
    const double C7326 = C6680 - C6679;
    const double C9427 = C6444 - C6443;
    const double C9929 = C6443 - C6444;
    const double C11781 = C11774 - C11775;
    const double C11780 = C11772 - C11773;
    const double C12051 = C31862 * C6817;
    const double C11767 =
        (4 * (2 * C31286 + ae * C31288 + C31073 * C31382) +
         ae * (3 * C31288 + C31073 * C31383) +
         C31073 *
             (3 * C31382 + ae * C31383 +
              C31073 * (2 * C31376 + ae * C31378 +
                        C31073 * (C31118 + ae * C31073 * C31203 +
                                  C31073 * (ae * C31203 + C31073 * C31142))))) /
        C30833;
    const double C31153 = C31074 * C31151;
    const double C1234 =
        (2 * C31243 * C31127 + C31243 * (C31127 + C31151 * C31252)) / C30828;
    const double C1408 = (C31073 * (C31127 + C31151 * C31252) +
                          (C31464 + C31230 * C31252) * ae) /
                         C30828;
    const double C2296 =
        (2 * (C31073 * C31127 + C31464 * ae) +
         C31073 * (C31127 + C31073 * (C31073 * C31151 + C31230 * ae) +
                   C31073 * C31230 * ae) +
         (C31464 + C31230 * C31285) * ae) /
        C30828;
    const double C31152 = C31074 * C31150;
    const double C31299 = C31073 * C31150;
    const double C31313 = C31243 * C31150;
    const double C887 = (2 * C31243 * C31126 +
                         C31243 * (C31126 + C31150 * std::pow(C31243, 2))) /
                        C30833;
    const double C890 =
        (3 * (C31126 + C31150 * C31252) +
         C31243 * (2 * C31243 * C31150 +
                   C31243 * (C31150 + (C31142 + be * C31074 * C31143 +
                                       C31074 * (be * C31143 +
                                                 C31074 * std::pow(C31076, 8) *
                                                     bs[8] * C31085)) *
                                          C31252))) /
        C30833;
    const double C6245 =
        (4 * (2 * C31310 + C31243 * C31344) +
         C31243 * (3 * C31344 +
                   C31243 * (2 * C31243 * C31146 +
                             C31243 * (C31146 + (be * C31143 +
                                                 C31074 * std::pow(C31076, 8) *
                                                     bs[8] * C31085) *
                                                    C31252)))) /
        C30833;
    const double C6347 =
        (ae * (3 * C31269 +
               C31243 * (2 * C31311 + C31243 * (C31206 + C31226 * C31252))) +
         C31073 * (3 * C31344 +
                   C31243 * (2 * C31243 * C31146 +
                             C31243 * (C31146 + (be * C31143 +
                                                 C31074 * std::pow(C31076, 8) *
                                                     bs[8] * C31085) *
                                                    C31252)))) /
        C30833;
    const double C31413 = C31408 + C31411;
    const double C31425 = C31073 * C31421;
    const double C6050 =
        (5 * (3 * C31317 + C31243 * C31324) +
         C31243 * (4 * C31324 +
                   C31243 * (3 * C31322 +
                             C31243 * (2 * C31243 * C31142 +
                                       C31243 * (C31142 + std::pow(C31076, 8) *
                                                              bs[8] * C31085 *
                                                              C31252))))) /
        C30833;
    const double C6157 =
        (ae * (3 * C31266 +
               C31243 * (2 * C31308 + C31243 * (C31180 + C31203 * C31252))) +
         C31073 * (3 * C31317 + C31243 * C31324)) /
        C30833;
    const double C6158 = (2 * C31307 + C31243 * C31317 + ae * C31073 * C31331 +
                          C31073 * (ae * C31331 + C31073 * C31324)) /
                         C30833;
    const double C31402 = C31073 * C31400;
    const double C31443 = C31438 + C31441;
    const double C31233 = C31231 + C31224;
    const double C31366 = C31243 * C31365;
    const double C7158 =
        (2 * (ae * C31269 + C31073 * C31344) + ae * (C31269 + C31365 * C31285) +
         C31073 * (C31344 + ae * C31073 * C31365 +
                   C31073 * (ae * C31365 +
                             C31073 * (C31146 + (be * C31143 +
                                                 C31074 * std::pow(C31076, 8) *
                                                     bs[8] * C31085) *
                                                    C31252)))) /
        C30833;
    const double C7156 =
        (2 * C31073 * C31269 + C31073 * (C31269 + C31365 * C31285)) / C30828;
    const double C31414 = C31311 + C31412;
    const double C31426 = C31073 * C31423;
    const double C31340 = C31243 * C31339;
    const double C7316 =
        (2 * (ae * C31331 + C31073 * C31324) + ae * (C31331 + C31339 * C31285) +
         C31073 * (C31324 + ae * C31073 * C31339 +
                   C31073 * (ae * C31339 +
                             C31073 * (2 * C31243 * C31142 +
                                       C31243 * (C31142 + std::pow(C31076, 8) *
                                                              bs[8] * C31085 *
                                                              C31252))))) /
        C30833;
    const double C7314 =
        (2 * C31073 * C31331 + C31073 * (C31331 + C31339 * C31285)) / C30828;
    const double C6818 =
        (3 * (C31317 + ae * C31356 + C31073 * C31360) +
         ae * (2 * C31356 + C31073 * C31361) +
         C31073 * (2 * C31360 + ae * C31361 +
                   C31073 * (C31322 + ae * C31073 * C31337 +
                             C31073 * (ae * C31337 +
                                       C31073 * (C31142 + std::pow(C31076, 8) *
                                                              bs[8] * C31085 *
                                                              C31252))))) /
        C30833;
    const double C6814 = (3 * (C31266 + C31329 * C31285) +
                          C31073 * (2 * C31356 + C31073 * C31361)) /
                         C30828;
    const double C31403 = C31073 * C31401;
    const double C31444 = C31436 + C31442;
    const double C1259 = C756 * C241;
    const double C6449 = C5980 * C6152;
    const double C6069 = C31862 * C6045;
    const double C6448 = C31862 * C6151;
    const double C6684 = C31862 * C6153;
    const double C11777 = C31862 * C11763;
    const double C31469 = C31467 + C31468;
    const double C2146 =
        (C31243 * C31127 + C31073 * (C31073 * C31243 * C31151 + C31606 * ae) +
         C31073 * C31606 * ae) /
        C30828;
    const double C2144 = C31243 * C31464 + C31606 * C31285;
    const double C6991 =
        (2 * C31616 + C31243 * C31656 +
         C31073 * (C31073 * (2 * C31243 * C31131 +
                             C31243 * (C31131 + C31074 * C31143 * C31252)) +
                   C31685 * ae) +
         C31073 * C31685 * ae) /
        C30828;
    const double C6242 = 4 * (2 * C31549 + C31243 * C31560) +
                         C31243 * (3 * C31560 + C31243 * C31685);
    const double C6344 = C31073 * (3 * C31560 + C31243 * C31685);
    const double C6989 = 2 * C31549 + C31243 * C31560 + C31685 * C31285;
    const double C11949 = 4 * (2 * C31593 + C31073 * C31596) +
                          C31073 * (3 * C31596 + C31073 * C31751);
    const double C31652 = C31644 + C31651;
    const double C31725 = C31713 + C31723;
    const double C12043 = 4 * (2 * C31667 + C31073 * C31670) +
                          C31073 * (3 * C31670 + C31073 * C31768);
    const double C32210 = C32009 * C32003;
    const double C32246 = C32212 + C32009;
    const double C32214 = C32016 / C30834;
    const double C32211 = C32016 * C32003;
    const double C7427 = C32275 - (C32009 * C32005) / C30828;
    const double C30877 = C30868 - C30874;
    const double C30867 = C30862 * be;
    const double C17469 = C30889 * C878;
    const double C17463 = C30889 * C869;
    const double C17458 = C30889 * C240;
    const double C17452 = C30889 * C220;
    const double C17446 = C30889 * C230;
    const double C17440 = C30889 * C215;
    const double C17762 = C30889 * C241;
    const double C17750 = C30889 * C231;
    const double C17744 = C30889 * C216;
    const double C18078 = C30889 * C1064;
    const double C18072 = C30889 * C1052;
    const double C18066 = C30889 * C630;
    const double C18060 = C30889 * C620;
    const double C18552 = C30889 * C1070;
    const double C18546 = C30889 * C1055;
    const double C18540 = C30889 * C345;
    const double C18534 = C30889 * C325;
    const double C18529 = C30889 * C335;
    const double C18523 = C30889 * C320;
    const double C18964 = C30889 * C336;
    const double C18958 = C30889 * C321;
    const double C24076 = C30889 * C1939;
    const double C24070 = C30889 * C1930;
    const double C117 =
        (C30889 / C30834 + (0 * ae) / C30828) / C30834 - (0 * be) / C30828;
    const double C2599 = C30889 / C30834 - (0 * be) / C30828;
    const double C14634 = C30889 / C30834 + (0 * ae) / C30828;
    const double C5302 = C5156 * C878;
    const double C5296 = C5156 * C869;
    const double C5291 = C5156 * C240;
    const double C5285 = C5156 * C220;
    const double C5279 = C5156 * C230;
    const double C5273 = C5156 * C215;
    const double C5595 = C5156 * C241;
    const double C5583 = C5156 * C231;
    const double C5577 = C5156 * C216;
    const double C5911 = C5156 * C1064;
    const double C5905 = C5156 * C1052;
    const double C5899 = C5156 * C630;
    const double C5893 = C5156 * C620;
    const double C10301 = C5156 * C1939;
    const double C10295 = C5156 * C1930;
    const double C10290 = C5156 * C345;
    const double C10284 = C5156 * C325;
    const double C10278 = C5156 * C335;
    const double C10272 = C5156 * C320;
    const double C10615 = C5156 * C336;
    const double C10609 = C5156 * C321;
    const double C10785 = C5156 * C1070;
    const double C10779 = C5156 * C1055;
    const double C30866 = C30861 * ae;
    const double C754 =
        ((-C30829 / C30828) / C30834 - (C30847 * be) / C30828) / C30834 -
        ((C30826 * ((-C30836) / C30834 - (C30861 * be) / C30828) + C15383) *
         be) /
            C30828 +
        (-C30848 / C30828) / C30834 - (0 * be) / C30828;
    const double C755 =
        ((-C30836) / C30834 - (C30861 * be) / C30828) / C30834 -
        ((C30826 * ((-C30848 / C30828) / C30834 - (0 * be) / C30828) + C31872) *
         be) /
            C30828;
    const double C15389 = (-C30836) / C30834 - (C30861 * be) / C30828;
    const double C6083 = C6077 * C31966;
    const double C6081 = C6075 * C31966;
    const double C9426 = C6075 * C32208;
    const double C26805 = C6075 * C20324;
    const double C6080 = C6074 * C118;
    const double C9425 = C6074 * C3350;
    const double C6079 = C6073 * C31966;
    const double C6676 = C6073 * C32274;
    const double C9422 = C6073 * C32208;
    const double C11008 = C6073 * C10040;
    const double C26801 = C6073 * C20324;
    const double C30254 = C6073 * C32049;
    const double C6078 = C6072 * C118;
    const double C6675 = C6072 * C1705;
    const double C9421 = C6072 * C3350;
    const double C11007 = C6072 * C10043;
    const double C6689 = C6678 * C32263;
    const double C9424 = C6678 * C32053;
    const double C11010 = C6678 * C10041;
    const double C26803 = C6678 * C32053;
    const double C30256 = C6678 * C32056;
    const double C6688 = C6677 * C1706;
    const double C9423 = C6677 * C3351;
    const double C11009 = C6677 * C10044;
    const double C26802 = C6677 * C20327;
    const double C32222 = C32187 / C30828;
    const double C32258 = C32226 / C30834;
    const double C32259 = C32228 + C32195;
    const double C2592 = C32195 - C31873 / C30840;
    const double C32225 = C32191 / C30828;
    const double C2724 = C2590 * C248;
    const double C2716 = C2590 * C233;
    const double C2707 = C2590 * C243;
    const double C2699 = C2590 * C223;
    const double C2968 = C2590 * C244;
    const double C2960 = C2590 * C224;
    const double C3244 = C2590 * C633;
    const double C3236 = C2590 * C623;
    const double C3574 = C2590 * C353;
    const double C3566 = C2590 * C338;
    const double C3557 = C2590 * C348;
    const double C3549 = C2590 * C328;
    const double C3850 = C2590 * C349;
    const double C3842 = C2590 * C329;
    const double C31008 = C31003 - C31006;
    const double C30983 = C30979 * ae;
    const double C20326 = (-C30965) / C30834 - (C30979 * be) / C30828;
    const double C30992 = C30988 * be;
    const double C11636 =
        (C31016 / C30834 + (0 * ae) / C30828) / C30834 - (0 * be) / C30828;
    const double C13226 = C31016 / C30834 - (0 * be) / C30828;
    const double C22094 = C31016 / C30834 + (0 * ae) / C30828;
    const double C32249 = C32216 / C30828;
    const double C32268 = C32252 / C30834;
    const double C32269 = C32253 + C32220;
    const double C13221 = C32220 - C32054 / C30840;
    const double C32251 = C32217 / C30828;
    const double C1248 = C32227 * C246;
    const double C2713 = C32242 * C246;
    const double C5584 = C32227 * C246;
    const double C14748 = C32242 * C246;
    const double C17751 = C17317 * C246;
    const double C914 = C32227 * C250;
    const double C1258 = C749 * C250;
    const double C5290 = C32227 * C250;
    const double C5594 = C32257 * C250;
    const double C7825 = C31872 * C250;
    const double C15783 = C31872 * C250;
    const double C17457 = C17317 * C250;
    const double C17761 = C31875 * C250;
    const double C2310 = C32227 * C351;
    const double C3563 = C32242 * C351;
    const double C10616 = C32227 * C351;
    const double C18965 = C17317 * C351;
    const double C20539 = C32242 * C351;
    const double C11764 =
        (4 * (2 * C31588 + C31073 * C31704 + C31589 * ae) +
         C31073 *
             (3 * C31704 +
              C31073 *
                  (2 * C31696 +
                   C31073 * (C31103 + C31073 * (C31073 * C31119 + C31179 * ae) +
                             C31073 * C31179 * ae) +
                   C31698 * ae) +
              C31703 * ae) +
         (3 * C31589 + C31073 * C31703) * ae) /
        C30828;
    const double C2321 = C756 * C346;
    const double C10627 = C5156 * C346;
    const double C24384 = C30889 * C346;
    const double C4629 = C756 * C631;
    const double C18758 = C30889 * C631;
    const double C26194 = C5156 * C631;
    const double C1253 = C756 * C221;
    const double C5589 = C5156 * C221;
    const double C17756 = C30889 * C221;
    const double C2315 = C756 * C326;
    const double C10621 = C5156 * C326;
    const double C24378 = C30889 * C326;
    const double C4623 = C756 * C621;
    const double C18752 = C30889 * C621;
    const double C26188 = C5156 * C621;
    const double C31752 = C31750 + C31745;
    const double C31210 = C31074 * C31209;
    const double C31214 = 3 * C31209;
    const double C31263 = C31243 * C31209;
    const double C31298 = ae * C31209;
    const double C31297 = C31073 * C31209;
    const double C7009 = C31862 * C1084;
    const double C8600 = C31872 * C1084;
    const double C16383 = C31872 * C1084;
    const double C8117 = C31872 * C1566;
    const double C9668 = C31862 * C1566;
    const double C16075 = C31872 * C1566;
    const double C6260 = C31862 * C880;
    const double C7559 = C31872 * C880;
    const double C15517 = C31872 * C880;
    const double C7007 = C31862 * C1072;
    const double C8596 = C31872 * C1072;
    const double C16379 = C31872 * C1072;
    const double C8113 = C31872 * C1560;
    const double C9666 = C31862 * C1560;
    const double C16071 = C31872 * C1560;
    const double C11959 = C31862 * C1941;
    const double C13431 = C31872 * C1941;
    const double C22299 = C31872 * C1941;
    const double C6685 = C5980 * C6154;
    const double C6068 = C5980 * C6043;
    const double C6447 = C5980 * C6148;
    const double C6683 = C5980 * C6149;
    const double C31769 = C31767 + C31760;
    const double C11776 = C5980 * C11761;
    const double C31724 = C31073 * C31722;
    const double C355 =
        (C31092 + be * C31095 + C31074 * C31106 + ae * C31073 * C31196 +
         C31073 * (ae * C31196 + C31073 * C31126)) /
        C30833;
    const double C635 =
        (ae * C31243 * C31196 + C31073 * C31243 * C31126) / C30833;
    const double C1079 = (ae * (C31196 + C31209 * C31252) +
                          C31073 * (C31126 + C31150 * C31252)) /
                         C30833;
    const double C1948 = (2 * (ae * C31196 + C31073 * C31126) +
                          ae * (C31196 + C31209 * std::pow(C31073, 2)) +
                          C31073 * (C31126 + ae * C31073 * C31209 +
                                    C31073 * (ae * C31209 + C31073 * C31150))) /
                         C30833;
    const double C130 = (3 * (C31187 + C31074 * C31191 + C31453 * be) +
                         C31074 * (2 * C31191 + C31074 * C31196 + C31455 * be) +
                         (2 * C31453 + C31074 * C31455) * be) /
                        C30828;
    const double C226 =
        (C31243 * (2 * C31191 + C31074 * C31196 + C31455 * be)) / C30828;
    const double C235 =
        (C31187 + C31074 * C31191 + C31453 * be + C31196 * C31252) / C30828;
    const double C331 =
        (C31073 * (2 * C31191 + C31074 * C31196 + C31455 * be)) / C30828;
    const double C340 =
        (C31187 + C31074 * C31191 + C31453 * be + C31196 * C31285) / C30828;
    const double C625 = (C31073 * C31243 * C31196) / C30828;
    const double C875 =
        (2 * C31243 * C31196 + C31243 * (C31196 + C31209 * C31252)) / C30828;
    const double C1061 = (C31073 * (C31196 + C31209 * C31252)) / C30828;
    const double C1936 =
        (2 * C31073 * C31196 + C31073 * (C31196 + C31209 * C31285)) / C30828;
    const double C12497 = C8592 - C8591;
    const double C13119 = C8591 - C8592;
    const double C16549 = C16374 - C16375;
    const double C17199 = C16375 - C16374;
    const double C12495 = C8588 - C8587;
    const double C13117 = C8587 - C8588;
    const double C16547 = C16370 - C16371;
    const double C17197 = C16371 - C16370;
    const double C11961 = C31862 * C1950;
    const double C13435 = C31872 * C1950;
    const double C22303 = C31872 * C1950;
    const double C6694 = C6691 * C32241;
    const double C11012 = C6691 * C32241;
    const double C30258 = C6691 * C23835;
    const double C9432 = C9428 * C32053;
    const double C26807 = C9428 * C32053;
    const double C6082 = C6076 * C118;
    const double C6693 = C6690 * C1707;
    const double C11011 = C6690 * C10045;
    const double C30257 = C6690 * C31016;
    const double C9431 = C9427 * C3351;
    const double C26806 = C9427 * C20327;
    const double C11779 = C31862 * C11767;
    const double C31155 = C31135 + C31153;
    const double C31154 = C31136 + C31152;
    const double C927 = C32227 * C887;
    const double C5303 = C32227 * C887;
    const double C7833 = C31872 * C887;
    const double C15791 = C31872 * C887;
    const double C17470 = C17317 * C887;
    const double C31427 = C31424 + C31425;
    const double C6450 = C31862 * C6157;
    const double C6686 = C31862 * C6158;
    const double C31404 = C31392 + C31402;
    const double C31234 = C31074 * C31233;
    const double C31271 = C31233 * C31252;
    const double C31300 = C31233 * C31285;
    const double C31314 = C31243 * C31233;
    const double C31367 = C31363 + C31366;
    const double C11866 =
        (3 * (C31310 + ae * C31407 + C31073 * C31413) +
         ae * (2 * C31407 + C31073 * C31414) +
         C31073 * (2 * C31413 + ae * C31414 +
                   C31073 * (C31409 + ae * C31073 * C31410 +
                             C31073 * (ae * C31410 +
                                       C31073 * C31243 *
                                           (be * C31143 +
                                            C31074 * std::pow(C31076, 8) *
                                                bs[8] * C31085))))) /
        C30833;
    const double C11864 = (3 * (C31261 + C31311 * C31285) +
                           C31073 * (2 * C31407 + C31073 * C31414)) /
                          C30828;
    const double C31428 = C31422 + C31426;
    const double C31341 = C31333 + C31340;
    const double C31405 = C31390 + C31403;
    const double C12046 =
        (4 * (2 * C31353 + ae * C31354 + C31073 * C31443) +
         ae * (3 * C31354 + C31073 * C31444) +
         C31073 * (3 * C31443 + ae * C31444 +
                   C31073 * (2 * C31439 + ae * C31440 +
                             C31073 * (C31432 + ae * C31073 * C31433 +
                                       C31073 * (ae * C31433 +
                                                 C31073 * C31243 *
                                                     std::pow(C31076, 8) *
                                                     bs[8] * C31085))))) /
        C30833;
    const double C12044 = (4 * (2 * C31349 + C31073 * C31354) +
                           C31073 * (3 * C31354 + C31073 * C31444)) /
                          C30828;
    const double C125 = 5 * (3 * C31455 + C31074 * C31464) +
                        C31074 * (4 * C31464 + C31074 * C31469);
    const double C222 = 3 * C31455 + C31074 * C31464 + C31469 * C31252;
    const double C327 = 3 * C31455 + C31074 * C31464 + C31469 * C31285;
    const double C444 = C31243 * (4 * C31464 + C31074 * C31469);
    const double C532 = C31073 * (4 * C31464 + C31074 * C31469);
    const double C622 = C31073 * C31243 * C31469;
    const double C6156 =
        (3 * C31624 + C31243 * C31632 +
         C31073 * (C31073 * (3 * C31630 +
                             C31243 * (2 * C31243 * C31119 +
                                       C31243 * (C31119 + C31143 * C31252))) +
                   C31652 * ae) +
         C31073 * C31652 * ae) /
        C30828;
    const double C6432 =
        (C31073 * (4 * C31632 +
                   C31243 * (3 * C31630 +
                             C31243 * (2 * C31243 * C31119 +
                                       C31243 * (C31119 + C31143 * C31252)))) +
         (4 * C31641 + C31243 * C31652) * ae) /
        C30828;
    const double C6044 = 5 * (3 * C31557 + C31243 * C31641) +
                         C31243 * (4 * C31641 + C31243 * C31652);
    const double C6150 = 3 * C31557 + C31243 * C31641 + C31652 * C31285;
    const double C6430 = C31073 * (4 * C31641 + C31243 * C31652);
    const double C11762 = 5 * (3 * C31589 + C31073 * C31703) +
                          C31073 * (4 * C31703 + C31073 * C31725);
    const double C32243 = C32210 / C30828;
    const double C32265 = C32246 / C30834;
    const double C32266 = C32247 + C32214;
    const double C7429 = C32214 - C32014 / C30840;
    const double C32245 = C32211 / C30828;
    const double C30871 = C30867 / C30828;
    const double C2729 = C2599 * C241;
    const double C2721 = C2599 * C221;
    const double C2714 = C2599 * C231;
    const double C2706 = C2599 * C216;
    const double C2973 = C2599 * C232;
    const double C2965 = C2599 * C217;
    const double C3249 = C2599 * C631;
    const double C3241 = C2599 * C621;
    const double C3579 = C2599 * C346;
    const double C3571 = C2599 * C326;
    const double C3564 = C2599 * C336;
    const double C3556 = C2599 * C321;
    const double C3855 = C2599 * C337;
    const double C3847 = C2599 * C322;
    const double C14764 = C14634 * C241;
    const double C14756 = C14634 * C221;
    const double C14749 = C14634 * C231;
    const double C14741 = C14634 * C216;
    const double C15008 = C14634 * C232;
    const double C15000 = C14634 * C217;
    const double C15284 = C14634 * C631;
    const double C15276 = C14634 * C621;
    const double C20555 = C14634 * C346;
    const double C20547 = C14634 * C326;
    const double C20540 = C14634 * C336;
    const double C20532 = C14634 * C321;
    const double C20831 = C14634 * C337;
    const double C20823 = C14634 * C322;
    const double C30870 = C30866 / C30828;
    const double C922 = C754 * C876;
    const double C916 = C754 * C867;
    const double C911 = C754 * C238;
    const double C905 = C754 * C218;
    const double C899 = C754 * C228;
    const double C893 = C754 * C213;
    const double C1255 = C754 * C239;
    const double C1249 = C754 * C219;
    const double C1243 = C754 * C229;
    const double C1237 = C754 * C214;
    const double C1587 = C754 * C1062;
    const double C1581 = C754 * C1050;
    const double C1575 = C754 * C628;
    const double C1569 = C754 * C618;
    const double C1983 = C754 * C1937;
    const double C1977 = C754 * C1928;
    const double C1972 = C754 * C343;
    const double C1966 = C754 * C323;
    const double C1960 = C754 * C333;
    const double C1954 = C754 * C318;
    const double C2317 = C754 * C344;
    const double C2311 = C754 * C324;
    const double C2305 = C754 * C334;
    const double C2299 = C754 * C319;
    const double C2487 = C754 * C1068;
    const double C2481 = C754 * C1053;
    const double C4625 = C754 * C629;
    const double C4619 = C754 * C619;
    const double C924 = C755 * C877;
    const double C918 = C755 * C868;
    const double C913 = C755 * C239;
    const double C907 = C755 * C219;
    const double C901 = C755 * C229;
    const double C895 = C755 * C214;
    const double C1257 = C755 * C240;
    const double C1251 = C755 * C220;
    const double C1245 = C755 * C230;
    const double C1239 = C755 * C215;
    const double C1589 = C755 * C1063;
    const double C1583 = C755 * C1051;
    const double C1577 = C755 * C629;
    const double C1571 = C755 * C619;
    const double C1985 = C755 * C1938;
    const double C1979 = C755 * C1929;
    const double C1974 = C755 * C344;
    const double C1968 = C755 * C324;
    const double C1962 = C755 * C334;
    const double C1956 = C755 * C319;
    const double C2319 = C755 * C345;
    const double C2313 = C755 * C325;
    const double C2307 = C755 * C335;
    const double C2301 = C755 * C320;
    const double C2489 = C755 * C1069;
    const double C2483 = C755 * C1054;
    const double C4627 = C755 * C630;
    const double C4621 = C755 * C620;
    const double C15518 = C15389 * C882;
    const double C15514 = C15389 * C870;
    const double C15511 = C15389 * C876;
    const double C15507 = C15389 * C867;
    const double C15503 = C15389 * C238;
    const double C15499 = C15389 * C218;
    const double C15495 = C15389 * C228;
    const double C15491 = C15389 * C213;
    const double C15788 = C15389 * C877;
    const double C15784 = C15389 * C868;
    const double C15780 = C15389 * C239;
    const double C15776 = C15389 * C219;
    const double C15772 = C15389 * C229;
    const double C15768 = C15389 * C214;
    const double C16072 = C15389 * C1562;
    const double C16068 = C15389 * C1556;
    const double C16064 = C15389 * C1062;
    const double C16060 = C15389 * C1050;
    const double C16056 = C15389 * C628;
    const double C16052 = C15389 * C618;
    const double C16380 = C15389 * C1074;
    const double C16376 = C15389 * C1056;
    const double C16373 = C15389 * C1068;
    const double C16369 = C15389 * C1053;
    const double C16562 = C15389 * C2474;
    const double C16558 = C15389 * C2468;
    const double C16554 = C15389 * C1937;
    const double C16550 = C15389 * C1928;
    const double C16543 = C15389 * C343;
    const double C16539 = C15389 * C323;
    const double C16535 = C15389 * C333;
    const double C16531 = C15389 * C318;
    const double C16780 = C15389 * C1069;
    const double C16776 = C15389 * C1054;
    const double C16772 = C15389 * C629;
    const double C16768 = C15389 * C619;
    const double C16990 = C15389 * C344;
    const double C16986 = C15389 * C324;
    const double C16982 = C15389 * C334;
    const double C16978 = C15389 * C319;
    const double C19829 = C15389 * C1063;
    const double C19825 = C15389 * C1051;
    const double C22300 = C15389 * C1943;
    const double C22296 = C15389 * C1931;
    const double C22570 = C15389 * C1938;
    const double C22566 = C15389 * C1929;
    const double C6085 = C6080 + C6081;
    const double C9430 = C9425 + C9426;
    const double C6084 = C6078 + C6079;
    const double C6687 = C6675 + C6676;
    const double C9429 = C9421 + C9422;
    const double C11013 = C11007 + C11008;
    const double C32279 = C32222 + C32271;
    const double C2591 = C32258 - (C31875 * C31858) / C30828;
    const double C14763 = C32259 * C250;
    const double C14746 = C32259 * C245;
    const double C14738 = C32259 * C225;
    const double C15007 = C32259 * C246;
    const double C20537 = C32259 * C350;
    const double C20529 = C32259 * C330;
    const double C20830 = C32259 * C351;
    const double C104 = C32259 / C30834 - C31873 / C32229;
    const double C2728 = C2592 * C250;
    const double C2711 = C2592 * C245;
    const double C2703 = C2592 * C225;
    const double C2972 = C2592 * C246;
    const double C3561 = C2592 * C350;
    const double C3553 = C2592 * C330;
    const double C3854 = C2592 * C351;
    const double C32272 = C32225 + C32258;
    const double C30987 = C30983 / C30828;
    const double C26804 = C6074 * C20326;
    const double C26800 = C6072 * C20326;
    const double C30998 = C30992 / C30828;
    const double C32281 = C32249 + C32277;
    const double C13220 = C32268 - (C32056 * C32045) / C30828;
    const double C11630 = C32269 / C30834 - C32054 / C32229;
    const double C32278 = C32251 + C32268;
    const double C933 = C914 - C915;
    const double C5309 = C5290 - C5291;
    const double C17476 = C17457 - C17458;
    const double C11778 = C5980 * C11764;
    const double C11951 =
        (4 * (2 * C31595 + C31073 * C31752 + C31596 * ae) +
         C31073 * (3 * C31752 +
                   C31073 * (2 * C31744 +
                             C31073 * (C31131 +
                                       C31073 * (C31073 * C31074 * C31143 +
                                                 C31221 * ae) +
                                       C31073 * C31221 * ae) +
                             C31746 * ae) +
                   C31751 * ae) +
         (3 * C31596 + C31073 * C31751) * ae) /
        C30828;
    const double C31211 = C31198 + C31210;
    const double C1082 = (C31243 * C31126 + ae * C31073 * C31263 +
                          C31073 * (ae * C31263 + C31073 * C31243 * C31150)) /
                         C30833;
    const double C1067 = (C31243 * C31196 + C31263 * C31285) / C30828;
    const double C31301 = C31298 + C31299;
    const double C12045 =
        (4 * (2 * C31669 + C31073 * C31769 + C31670 * ae) +
         C31073 * (3 * C31769 +
                   C31073 * (2 * C31763 +
                             C31073 * (C31755 +
                                       C31073 * (C31073 * C31243 * C31143 +
                                                 C31758 * ae) +
                                       C31073 * C31758 * ae) +
                             C31764 * ae) +
                   C31768 * ae) +
         (3 * C31670 + C31073 * C31768) * ae) /
        C30828;
    const double C31726 = C31707 + C31724;
    const double C1975 = C32227 * C355;
    const double C2320 = C749 * C355;
    const double C3578 = C2592 * C355;
    const double C10289 = C32227 * C355;
    const double C10626 = C32257 * C355;
    const double C12921 = C31872 * C355;
    const double C16993 = C31872 * C355;
    const double C18541 = C17317 * C355;
    const double C20554 = C32259 * C355;
    const double C24383 = C31875 * C355;
    const double C1580 = C32227 * C635;
    const double C3248 = C2592 * C635;
    const double C4628 = C749 * C635;
    const double C5900 = C32227 * C635;
    const double C8802 = C31872 * C635;
    const double C15283 = C32259 * C635;
    const double C16775 = C31872 * C635;
    const double C18067 = C17317 * C635;
    const double C18757 = C31875 * C635;
    const double C26193 = C32257 * C635;
    const double C1592 = C32227 * C1079;
    const double C5912 = C32227 * C1079;
    const double C8810 = C31872 * C1079;
    const double C18079 = C17317 * C1079;
    const double C19832 = C31872 * C1079;
    const double C1988 = C32227 * C1948;
    const double C10302 = C32227 * C1948;
    const double C13705 = C31872 * C1948;
    const double C22573 = C31872 * C1948;
    const double C24077 = C17317 * C1948;
    const double C1242 = C32227 * C226;
    const double C2705 = C32242 * C226;
    const double C2964 = C2592 * C226;
    const double C5578 = C32227 * C226;
    const double C14740 = C32242 * C226;
    const double C14999 = C32259 * C226;
    const double C17745 = C17317 * C226;
    const double C908 = C32227 * C235;
    const double C1252 = C749 * C235;
    const double C2720 = C2592 * C235;
    const double C5284 = C32227 * C235;
    const double C5588 = C32257 * C235;
    const double C7821 = C31872 * C235;
    const double C14755 = C32259 * C235;
    const double C15779 = C31872 * C235;
    const double C17451 = C17317 * C235;
    const double C17755 = C31875 * C235;
    const double C2304 = C32227 * C331;
    const double C3555 = C32242 * C331;
    const double C3846 = C2592 * C331;
    const double C10610 = C32227 * C331;
    const double C18959 = C17317 * C331;
    const double C20531 = C32242 * C331;
    const double C20822 = C32259 * C331;
    const double C1969 = C32227 * C340;
    const double C2314 = C749 * C340;
    const double C3570 = C2592 * C340;
    const double C10283 = C32227 * C340;
    const double C10620 = C32257 * C340;
    const double C12917 = C31872 * C340;
    const double C16989 = C31872 * C340;
    const double C18535 = C17317 * C340;
    const double C20546 = C32259 * C340;
    const double C24377 = C31875 * C340;
    const double C1574 = C32227 * C625;
    const double C3240 = C2592 * C625;
    const double C4622 = C749 * C625;
    const double C5894 = C32227 * C625;
    const double C8798 = C31872 * C625;
    const double C15275 = C32259 * C625;
    const double C16771 = C31872 * C625;
    const double C18061 = C17317 * C625;
    const double C18751 = C31875 * C625;
    const double C26187 = C32257 * C625;
    const double C921 = C32227 * C875;
    const double C5297 = C32227 * C875;
    const double C7829 = C31872 * C875;
    const double C15787 = C31872 * C875;
    const double C17464 = C17317 * C875;
    const double C1586 = C32227 * C1061;
    const double C5906 = C32227 * C1061;
    const double C8806 = C31872 * C1061;
    const double C18073 = C17317 * C1061;
    const double C19828 = C31872 * C1061;
    const double C1982 = C32227 * C1936;
    const double C10296 = C32227 * C1936;
    const double C13701 = C31872 * C1936;
    const double C22569 = C31872 * C1936;
    const double C24071 = C17317 * C1936;
    const double C6086 = C6082 + C6083;
    const double C139 = (5 * (3 * C31107 + C31074 * C31127) +
                         C31074 * (4 * C31127 + C31074 * C31155)) /
                        C30828;
    const double C242 =
        (3 * C31107 + C31074 * C31127 + C31155 * C31252) / C30828;
    const double C347 =
        (3 * C31107 + C31074 * C31127 +
         C31073 * (C31073 * C31155 + C31469 * ae) + C31073 * C31469 * ae) /
        C30828;
    const double C446 = (C31243 * (4 * C31127 + C31074 * C31155)) / C30828;
    const double C534 = (C31073 * (4 * C31127 + C31074 * C31155) +
                         (4 * C31464 + C31074 * C31469) * ae) /
                        C30828;
    const double C632 =
        (C31073 * C31243 * C31155 + C31243 * C31469 * ae) / C30828;
    const double C146 =
        (5 * (3 * C31126 + be * C31127 + C31074 * C31154) +
         be * (4 * C31127 + C31074 * C31155) +
         C31074 *
             (4 * C31154 + be * C31155 +
              C31074 *
                  (3 * C31150 + be * C31151 +
                   C31074 * (2 * C31146 + be * C31147 +
                             C31074 * (C31142 + be * C31074 * C31143 +
                                       C31074 * (be * C31143 +
                                                 C31074 * std::pow(C31076, 8) *
                                                     bs[8] * C31085)))))) /
        C30833;
    const double C247 =
        ((yP - yQ) * (3 * C31126 + be * C31127 + C31074 * C31154)) / C30833;
    const double C251 = (2 * C31106 + be * C31107 + C31074 * C31126 +
                         C31154 * std::pow(yP - yQ, 2)) /
                        C30833;
    const double C252 =
        (3 * C31126 + be * C31127 + C31074 * C31154 +
         (3 * C31150 + be * C31151 +
          C31074 *
              (2 * C31146 + be * C31147 +
               C31074 * (C31142 + be * C31074 * C31143 +
                         C31074 * (be * C31143 + C31074 * std::pow(C31076, 8) *
                                                     bs[8] * C31085)))) *
             std::pow(yP - yQ, 2)) /
        C30833;
    const double C352 =
        (ae * (3 * (C31174 + C31074 * C31184 + C31178 * be) +
               C31074 * (2 * C31184 +
                         C31074 * (C31180 +
                                   C31074 * (C31074 * C31111 * C31112 * C31169 +
                                             C31179 * be) +
                                   C31074 * C31179 * be) +
                         C31183 * be) +
               (2 * C31178 + C31074 * C31183) * be) +
         C31073 * (3 * C31126 + be * C31127 + C31074 * C31154)) /
        C30833;
    const double C447 =
        ((yP - yQ) *
         (4 * C31154 + be * C31155 +
          C31074 * (3 * C31150 + be * C31151 +
                    C31074 * (2 * C31146 + be * C31147 +
                              C31074 * (C31142 + be * C31074 * C31143 +
                                        C31074 * (be * C31143 +
                                                  C31074 * std::pow(C31076, 8) *
                                                      bs[8] * C31085)))))) /
        C30833;
    const double C1235 =
        (2 * C31243 * C31154 +
         C31243 * (C31154 + (2 * C31146 + be * C31147 +
                             C31074 * (C31142 + be * C31074 * C31143 +
                                       C31074 * (be * C31143 +
                                                 C31074 * std::pow(C31076, 8) *
                                                     bs[8] * C31085))) *
                                C31252)) /
        C30833;
    const double C31235 = C31215 + C31234;
    const double C31272 = C31209 + C31271;
    const double C31302 = C31209 + C31300;
    const double C2479 =
        (2 * (ae * C31263 + C31073 * C31313) + ae * (C31263 + C31314 * C31285) +
         C31073 * (C31313 + ae * C31073 * C31314 +
                   C31073 * (ae * C31314 +
                             C31073 * C31243 *
                                 (C31142 + be * C31074 * C31143 +
                                  C31074 * (be * C31143 +
                                            C31074 * std::pow(C31076, 8) *
                                                bs[8] * C31085))))) /
        C30833;
    const double C2473 =
        (2 * C31073 * C31263 + C31073 * (C31263 + C31314 * C31285)) / C30828;
    const double C6992 =
        (2 * C31310 + C31243 * C31344 + ae * C31073 * C31367 +
         C31073 * (ae * C31367 +
                   C31073 * (2 * C31243 * C31146 +
                             C31243 * (C31146 + (be * C31143 +
                                                 C31074 * std::pow(C31076, 8) *
                                                     bs[8] * C31085) *
                                                    C31252)))) /
        C30833;
    const double C6243 = (4 * (2 * C31261 + C31243 * C31269) +
                          C31243 * (3 * C31269 + C31243 * C31367)) /
                         C30828;
    const double C6345 = (C31073 * (3 * C31269 + C31243 * C31367)) / C30828;
    const double C6990 =
        (2 * C31261 + C31243 * C31269 + C31367 * C31285) / C30828;
    const double C11952 =
        (4 * (2 * C31294 + ae * C31295 + C31073 * C31427) +
         ae * (3 * C31295 + C31073 * C31428) +
         C31073 *
             (3 * C31427 + ae * C31428 +
              C31073 *
                  (2 * C31421 + ae * C31423 +
                   C31073 * (C31146 + ae * C31073 * C31226 +
                             C31073 * (ae * C31226 +
                                       C31073 * (be * C31143 +
                                                 C31074 * std::pow(C31076, 8) *
                                                     bs[8] * C31085)))))) /
        C30833;
    const double C11950 = (4 * (2 * C31290 + C31073 * C31295) +
                           C31073 * (3 * C31295 + C31073 * C31428)) /
                          C30828;
    const double C6159 =
        (3 * C31317 + C31243 * C31324 + ae * C31073 * C31341 +
         C31073 * (ae * C31341 +
                   C31073 * (3 * C31322 +
                             C31243 * (2 * C31243 * C31142 +
                                       C31243 * (C31142 + std::pow(C31076, 8) *
                                                              bs[8] * C31085 *
                                                              C31252))))) /
        C30833;
    const double C6433 =
        (ae * (4 * C31331 + C31243 * C31341) +
         C31073 * (4 * C31324 +
                   C31243 * (3 * C31322 +
                             C31243 * (2 * C31243 * C31142 +
                                       C31243 * (C31142 + std::pow(C31076, 8) *
                                                              bs[8] * C31085 *
                                                              C31252))))) /
        C30833;
    const double C6047 = (5 * (3 * C31266 + C31243 * C31331) +
                          C31243 * (4 * C31331 + C31243 * C31341)) /
                         C30828;
    const double C6155 =
        (3 * C31266 + C31243 * C31331 + C31341 * C31285) / C30828;
    const double C6431 = (C31073 * (4 * C31331 + C31243 * C31341)) / C30828;
    const double C11768 =
        (5 * (3 * C31382 + ae * C31383 + C31073 * C31404) +
         ae * (4 * C31383 + C31073 * C31405) +
         C31073 *
             (4 * C31404 + ae * C31405 +
              C31073 *
                  (3 * C31400 + ae * C31401 +
                   C31073 * (2 * C31394 + ae * C31396 +
                             C31073 * (C31142 + ae * C31073 * C31219 +
                                       C31073 * (ae * C31219 +
                                                 C31073 * std::pow(C31076, 8) *
                                                     bs[8] * C31085)))))) /
        C30833;
    const double C11765 = (5 * (3 * C31288 + C31073 * C31383) +
                           C31073 * (4 * C31383 + C31073 * C31405)) /
                          C30828;
    const double C32280 = C32243 + C32275;
    const double C7428 = C32265 - (C32016 * C32005) / C30828;
    const double C5978 = C32266 / C30834 - C32014 / C32229;
    const double C32276 = C32245 + C32265;
    const double C30873 = C30870 - C30849;
    const double C931 = C910 - C911;
    const double C928 = C904 - C905;
    const double C5028 = C1575 - C1576;
    const double C5022 = C1576 - C1575;
    const double C5025 = C1569 - C1570;
    const double C5019 = C1570 - C1569;
    const double C1992 = C1971 - C1972;
    const double C1989 = C1965 - C1966;
    const double C932 = C912 - C913;
    const double C929 = C906 - C907;
    const double C5029 = C1577 - C1578;
    const double C5023 = C1578 - C1577;
    const double C5026 = C1571 - C1572;
    const double C5020 = C1572 - C1571;
    const double C1993 = C1973 - C1974;
    const double C1990 = C1967 - C1968;
    const double C15528 = C15510 - C15511;
    const double C15526 = C15506 - C15507;
    const double C15524 = C15502 - C15503;
    const double C15522 = C15498 - C15499;
    const double C19476 = C16065 - C16064;
    const double C20223 = C16064 - C16065;
    const double C19474 = C16061 - C16060;
    const double C20221 = C16060 - C16061;
    const double C17194 = C16056 - C16057;
    const double C17190 = C16057 - C16056;
    const double C17192 = C16052 - C16053;
    const double C17188 = C16053 - C16052;
    const double C16548 = C16372 - C16373;
    const double C17198 = C16373 - C16372;
    const double C16546 = C16368 - C16369;
    const double C17196 = C16369 - C16368;
    const double C22294 = C16555 - C16554;
    const double C22292 = C16551 - C16550;
    const double C16568 = C16542 - C16543;
    const double C16566 = C16538 - C16539;
    const double C9434 = C9430 + C9431;
    const double C6692 = C6687 + C6688;
    const double C9433 = C9429 + C9423;
    const double C11014 = C11013 + C11009;
    const double C14759 = C32279 * C248;
    const double C14751 = C32279 * C233;
    const double C14742 = C32279 * C243;
    const double C14734 = C32279 * C223;
    const double C15003 = C32279 * C244;
    const double C14995 = C32279 * C224;
    const double C15279 = C32279 * C633;
    const double C15271 = C32279 * C623;
    const double C20550 = C32279 * C353;
    const double C20542 = C32279 * C338;
    const double C20533 = C32279 * C348;
    const double C20525 = C32279 * C328;
    const double C20826 = C32279 * C349;
    const double C20818 = C32279 * C329;
    const double C101 =
        (C32270 + 2 * C31867) / C30834 - (C32279 * C31858) / C30828;
    const double C2726 = C2591 * C249;
    const double C2718 = C2591 * C234;
    const double C2709 = C2591 * C244;
    const double C2701 = C2591 * C224;
    const double C2970 = C2591 * C245;
    const double C2962 = C2591 * C225;
    const double C3246 = C2591 * C634;
    const double C3238 = C2591 * C624;
    const double C3576 = C2591 * C354;
    const double C3568 = C2591 * C339;
    const double C3559 = C2591 * C349;
    const double C3551 = C2591 * C329;
    const double C3852 = C2591 * C350;
    const double C3844 = C2591 * C330;
    const double C14761 = C32272 * C249;
    const double C14753 = C32272 * C234;
    const double C14744 = C32272 * C244;
    const double C14736 = C32272 * C224;
    const double C15005 = C32272 * C245;
    const double C14997 = C32272 * C225;
    const double C15281 = C32272 * C634;
    const double C15273 = C32272 * C624;
    const double C20552 = C32272 * C354;
    const double C20544 = C32272 * C339;
    const double C20535 = C32272 * C349;
    const double C20527 = C32272 * C329;
    const double C20828 = C32272 * C350;
    const double C20820 = C32272 * C330;
    const double C102 =
        (C32257 + 2 * C31875 + C32279) / C30834 - (C32272 * C31858) / C30828;
    const double C103 = (C32227 + C31872 / C30828 + C32272) / C30834 -
                        (C32259 * C31858) / C30828;
    const double C30991 = C30987 - C30968;
    const double C26809 = C26804 + C26805;
    const double C26808 = C26800 + C26801;
    const double C11627 =
        (C32274 + 2 * C32049) / C30834 - (C32281 * C32045) / C30828;
    const double C11628 =
        (C32263 + 2 * C32056 + C32281) / C30834 - (C32278 * C32045) / C30828;
    const double C11629 = (C32241 + C32053 / C30828 + C32278) / C30834 -
                          (C32269 * C32045) / C30828;
    const double C31212 = C31211 + C31202;
    const double C2492 = C32227 * C1082;
    const double C10786 = C32227 * C1082;
    const double C12719 = C31872 * C1082;
    const double C16783 = C31872 * C1082;
    const double C18553 = C17317 * C1082;
    const double C2486 = C32227 * C1067;
    const double C10780 = C32227 * C1067;
    const double C12715 = C31872 * C1067;
    const double C16779 = C31872 * C1067;
    const double C18547 = C17317 * C1067;
    const double C31727 = C31726 + C31711;
    const double C1994 = C1975 - C1976;
    const double C10308 = C10289 - C10290;
    const double C24065 = C18541 - C18540;
    const double C5030 = C1579 - C1580;
    const double C5024 = C1580 - C1579;
    const double C26595 = C5899 - C5900;
    const double C26589 = C5900 - C5899;
    const double C19171 = C18066 - C18067;
    const double C19165 = C18067 - C18066;
    const double C930 = C908 - C909;
    const double C5306 = C5284 - C5285;
    const double C17473 = C17451 - C17452;
    const double C1991 = C1969 - C1970;
    const double C10305 = C10283 - C10284;
    const double C24062 = C18535 - C18534;
    const double C5027 = C1573 - C1574;
    const double C5021 = C1574 - C1573;
    const double C26592 = C5893 - C5894;
    const double C26586 = C5894 - C5893;
    const double C19168 = C18060 - C18061;
    const double C19162 = C18061 - C18060;
    const double C2974 = C32242 * C247;
    const double C15009 = C32242 * C247;
    const double C1260 = C32227 * C251;
    const double C2730 = C32242 * C251;
    const double C5596 = C32227 * C251;
    const double C14765 = C32242 * C251;
    const double C17763 = C17317 * C251;
    const double C3856 = C32242 * C352;
    const double C20832 = C32242 * C352;
    const double C31236 = C31235 + C31227;
    const double C1085 =
        (C31126 + C31150 * C31252 + ae * C31073 * C31272 +
         C31073 * (ae * C31272 +
                   C31073 * (C31150 + (C31142 + be * C31074 * C31143 +
                                       C31074 * (be * C31143 +
                                                 C31074 * std::pow(C31076, 8) *
                                                     bs[8] * C31085)) *
                                          C31252))) /
        C30833;
    const double C1567 =
        (ae * (2 * C31263 + C31243 * C31272) +
         C31073 * (2 * C31243 * C31150 +
                   C31243 * (C31150 + (C31142 + be * C31074 * C31143 +
                                       C31074 * (be * C31143 +
                                                 C31074 * std::pow(C31076, 8) *
                                                     bs[8] * C31085)) *
                                          C31252))) /
        C30833;
    const double C881 = (3 * (C31196 + C31209 * C31252) +
                         C31243 * (2 * C31263 + C31243 * C31272)) /
                        C30828;
    const double C1073 = (C31196 + C31209 * C31252 + C31272 * C31285) / C30828;
    const double C1561 = (C31073 * (2 * C31263 + C31243 * C31272)) / C30828;
    const double C1951 =
        (3 * (C31126 + ae * C31297 + C31073 * C31301) +
         ae * (2 * C31297 + C31073 * C31302) +
         C31073 *
             (2 * C31301 + ae * C31302 +
              C31073 *
                  (C31150 + ae * C31073 * C31233 +
                   C31073 * (ae * C31233 +
                             C31073 * (C31142 + be * C31074 * C31143 +
                                       C31074 * (be * C31143 +
                                                 C31074 * std::pow(C31076, 8) *
                                                     bs[8] * C31085)))))) /
        C30833;
    const double C1942 = (3 * (C31196 + C31209 * C31285) +
                          C31073 * (2 * C31297 + C31073 * C31302)) /
                         C30828;
    const double C5975 =
        (C32273 + 2 * C32009) / C30834 - (C32280 * C32005) / C30828;
    const double C5976 =
        (C32261 + 2 * C32016 + C32280) / C30834 - (C32276 * C32005) / C30828;
    const double C5977 = (C32238 + C32013 / C30828 + C32276) / C30834 -
                         (C32266 * C32005) / C30828;
    const double C7560 = C30873 * C882;
    const double C7556 = C30873 * C870;
    const double C7553 = C30873 * C876;
    const double C7549 = C30873 * C867;
    const double C7545 = C30873 * C238;
    const double C7541 = C30873 * C218;
    const double C7537 = C30873 * C228;
    const double C7533 = C30873 * C213;
    const double C7830 = C30873 * C877;
    const double C7826 = C30873 * C868;
    const double C7822 = C30873 * C239;
    const double C7818 = C30873 * C219;
    const double C7814 = C30873 * C229;
    const double C7810 = C30873 * C214;
    const double C8114 = C30873 * C1562;
    const double C8110 = C30873 * C1556;
    const double C8106 = C30873 * C1062;
    const double C8102 = C30873 * C1050;
    const double C8098 = C30873 * C628;
    const double C8094 = C30873 * C618;
    const double C8597 = C30873 * C1074;
    const double C8593 = C30873 * C1056;
    const double C8589 = C30873 * C1068;
    const double C8585 = C30873 * C1053;
    const double C8581 = C30873 * C343;
    const double C8577 = C30873 * C323;
    const double C8574 = C30873 * C333;
    const double C8570 = C30873 * C318;
    const double C8807 = C30873 * C1063;
    const double C8803 = C30873 * C1051;
    const double C8799 = C30873 * C629;
    const double C8795 = C30873 * C619;
    const double C9009 = C30873 * C334;
    const double C9005 = C30873 * C319;
    const double C12510 = C30873 * C2474;
    const double C12506 = C30873 * C2468;
    const double C12502 = C30873 * C1937;
    const double C12498 = C30873 * C1928;
    const double C12716 = C30873 * C1069;
    const double C12712 = C30873 * C1054;
    const double C12918 = C30873 * C344;
    const double C12914 = C30873 * C324;
    const double C13432 = C30873 * C1943;
    const double C13428 = C30873 * C1931;
    const double C13702 = C30873 * C1938;
    const double C13698 = C30873 * C1929;
    const double C30876 = C30873 / C30834;
    const double C30875 = C30826 * C30873;
    const double C935 = C931 + C932;
    const double C934 = C928 + C929;
    const double C5034 = C5028 + C5029;
    const double C5032 = C5022 + C5023;
    const double C5033 = C5025 + C5026;
    const double C5031 = C5019 + C5020;
    const double C1996 = C1992 + C1993;
    const double C1995 = C1989 + C1990;
    const double C15533 = C15528 + C15529;
    const double C15532 = C15526 + C15527;
    const double C15531 = C15524 + C15525;
    const double C15530 = C15522 + C15523;
    const double C19480 = C19476 + C19477;
    const double C20226 = C20223 + C20224;
    const double C19479 = C19474 + C19475;
    const double C20225 = C20221 + C20222;
    const double C17203 = C17194 + C17195;
    const double C17201 = C17190 + C17191;
    const double C17202 = C17192 + C17193;
    const double C17200 = C17188 + C17189;
    const double C16571 = C16548 + C16549;
    const double C17205 = C17198 + C17199;
    const double C16570 = C16546 + C16547;
    const double C17204 = C17196 + C17197;
    const double C22305 = C22294 + C22295;
    const double C22304 = C22292 + C22293;
    const double C16573 = C16568 + C16569;
    const double C16572 = C16566 + C16567;
    const double C9436 = C9434 + C9432;
    const double C6695 = C6692 + C6689;
    const double C9435 = C9433 + C9424;
    const double C11015 = C11014 + C11010;
    const double C30997 = C30991 / C30834;
    const double C30996 = C30913 * C30991;
    const double C26811 = C26809 + C26806;
    const double C26810 = C26808 + C26802;
    const double C356 =
        (2 * C31106 + be * C31107 + C31074 * C31126 + ae * C31073 * C31212 +
         C31073 * (ae * C31212 + C31073 * C31154)) /
        C30833;
    const double C636 =
        (ae * C31243 * C31212 + C31073 * C31243 * C31154) / C30833;
    const double C136 = (4 * (2 * C31191 + C31074 * C31196 + C31455 * be) +
                         C31074 * (3 * C31196 + C31074 * C31212 + C31464 * be) +
                         (3 * C31455 + C31074 * C31464) * be) /
                        C30828;
    const double C227 =
        (C31243 * (3 * C31196 + C31074 * C31212 + C31464 * be)) / C30828;
    const double C236 =
        (2 * C31191 + C31074 * C31196 + C31455 * be + C31212 * C31252) / C30828;
    const double C332 =
        (C31073 * (3 * C31196 + C31074 * C31212 + C31464 * be)) / C30828;
    const double C341 =
        (2 * C31191 + C31074 * C31196 + C31455 * be + C31212 * C31285) / C30828;
    const double C626 = (C31073 * C31243 * C31212) / C30828;
    const double C11766 =
        (5 * (3 * C31704 + C31073 * C31727 + C31703 * ae) +
         C31073 * (4 * C31727 +
                   C31073 * (3 * C31722 +
                             C31073 * (2 * C31714 +
                                       C31073 * (C31119 +
                                                 C31073 * (C31073 * C31143 +
                                                           C31217 * ae) +
                                                 C31073 * C31217 * ae) +
                                       C31716 * ae) +
                             C31721 * ae) +
                   C31725 * ae) +
         (4 * C31703 + C31073 * C31725) * ae) /
        C30828;
    const double C31237 = C31074 * C31236;
    const double C31304 = C31243 * C31236;
    const double C1409 =
        (ae * (C31212 + C31236 * C31252) +
         C31073 * (C31154 + (2 * C31146 + be * C31147 +
                             C31074 * (C31142 + be * C31074 * C31143 +
                                       C31074 * (be * C31143 +
                                                 C31074 * std::pow(C31076, 8) *
                                                     bs[8] * C31085))) *
                                C31252)) /
        C30833;
    const double C2297 =
        (2 * (ae * C31212 + C31073 * C31154) + ae * (C31212 + C31236 * C31285) +
         C31073 *
             (C31154 + ae * C31073 * C31236 +
              C31073 *
                  (ae * C31236 +
                   C31073 * (2 * C31146 + be * C31147 +
                             C31074 * (C31142 + be * C31074 * C31143 +
                                       C31074 * (be * C31143 +
                                                 C31074 * std::pow(C31076, 8) *
                                                     bs[8] * C31085)))))) /
        C30833;
    const double C1233 =
        (2 * C31243 * C31212 + C31243 * (C31212 + C31236 * C31252)) / C30828;
    const double C1407 = (C31073 * (C31212 + C31236 * C31252)) / C30828;
    const double C2295 =
        (2 * C31073 * C31212 + C31073 * (C31212 + C31236 * C31285)) / C30828;
    const double C7570 = C7552 - C7553;
    const double C7568 = C7548 - C7549;
    const double C7566 = C7544 - C7545;
    const double C7564 = C7540 - C7541;
    const double C8414 = C8107 - C8106;
    const double C9217 = C8106 - C8107;
    const double C8412 = C8103 - C8102;
    const double C9215 = C8102 - C8103;
    const double C9213 = C8098 - C8099;
    const double C9209 = C8099 - C8098;
    const double C9211 = C8094 - C8095;
    const double C9207 = C8095 - C8094;
    const double C12496 = C8590 - C8589;
    const double C13118 = C8589 - C8590;
    const double C12494 = C8586 - C8585;
    const double C13116 = C8585 - C8586;
    const double C12492 = C8582 - C8581;
    const double C12490 = C8578 - C8577;
    const double C13426 = C12503 - C12502;
    const double C13424 = C12499 - C12498;
    const double C30879 = C30876 - C30871;
    const double C5155 = C30876 + (C30862 * ae) / C30828;
    const double C30878 = C30875 + C32188;
    const double C937 = C935 + C933;
    const double C936 = C934 + C930;
    const double C5038 = C5034 + C5030;
    const double C5036 = C5032 + C5024;
    const double C5037 = C5033 + C5027;
    const double C5035 = C5031 + C5021;
    const double C1998 = C1996 + C1994;
    const double C1997 = C1995 + C1991;
    const double C15537 = C15533 * C31966;
    const double C15536 = C15532 * C118;
    const double C15535 = C15531 * C31966;
    const double C19473 = C15531 * C32208;
    const double C21256 = C15531 * C20324;
    const double C15534 = C15530 * C118;
    const double C19472 = C15530 * C3350;
    const double C21255 = C15530 * C20326;
    const double C19482 = C19480 * C32053;
    const double C21258 = C19480 * C32053;
    const double C19481 = C19479 * C3351;
    const double C21257 = C19479 * C20327;
    const double C6696 = C6695 + C6693;
    const double C11016 = C11015 + C11011;
    const double C31002 = C30997 - C30998;
    const double C31001 = C30996 + C32208;
    const double C26813 = C26811 + C26807;
    const double C26812 = C26810 + C26803;
    const double C2322 = C32227 * C356;
    const double C3580 = C32242 * C356;
    const double C10628 = C32227 * C356;
    const double C20556 = C32242 * C356;
    const double C24385 = C17317 * C356;
    const double C3250 = C32242 * C636;
    const double C4630 = C32227 * C636;
    const double C15285 = C32242 * C636;
    const double C18759 = C17317 * C636;
    const double C26195 = C32227 * C636;
    const double C2966 = C32242 * C227;
    const double C15001 = C32242 * C227;
    const double C1254 = C32227 * C236;
    const double C2722 = C32242 * C236;
    const double C5590 = C32227 * C236;
    const double C14757 = C32242 * C236;
    const double C17757 = C17317 * C236;
    const double C3848 = C32242 * C332;
    const double C20824 = C32242 * C332;
    const double C2316 = C32227 * C341;
    const double C3572 = C32242 * C341;
    const double C10622 = C32227 * C341;
    const double C20548 = C32242 * C341;
    const double C24379 = C17317 * C341;
    const double C3242 = C32242 * C626;
    const double C4624 = C32227 * C626;
    const double C15277 = C32242 * C626;
    const double C18753 = C17317 * C626;
    const double C26189 = C32227 * C626;
    const double C31238 = C31214 + C31237;
    const double C2147 =
        (C31243 * C31154 + ae * C31073 * C31304 +
         C31073 * (ae * C31304 +
                   C31073 * C31243 *
                       (2 * C31146 + be * C31147 +
                        C31074 * (C31142 + be * C31074 * C31143 +
                                  C31074 * (be * C31143 +
                                            C31074 * std::pow(C31076, 8) *
                                                bs[8] * C31085))))) /
        C30833;
    const double C2145 = (C31243 * C31212 + C31304 * C31285) / C30828;
    const double C7575 = C7570 + C7571;
    const double C7574 = C7568 + C7569;
    const double C7573 = C7566 + C7567;
    const double C7572 = C7564 + C7565;
    const double C8418 = C8414 + C8415;
    const double C9224 = C9217 + C9218;
    const double C8417 = C8412 + C8413;
    const double C9223 = C9215 + C9216;
    const double C9222 = C9213 + C9214;
    const double C9220 = C9209 + C9210;
    const double C9221 = C9211 + C9212;
    const double C9219 = C9207 + C9208;
    const double C12517 = C12496 + C12497;
    const double C13121 = C13118 + C13119;
    const double C12516 = C12494 + C12495;
    const double C13120 = C13116 + C13117;
    const double C12515 = C12492 + C12493;
    const double C12514 = C12490 + C12491;
    const double C13437 = C13426 + C13427;
    const double C13436 = C13424 + C13425;
    const double C17467 = C30879 * C877;
    const double C17461 = C30879 * C868;
    const double C17456 = C30879 * C239;
    const double C17450 = C30879 * C219;
    const double C17444 = C30879 * C229;
    const double C17438 = C30879 * C214;
    const double C17760 = C30879 * C240;
    const double C17754 = C30879 * C220;
    const double C17748 = C30879 * C230;
    const double C17742 = C30879 * C215;
    const double C18076 = C30879 * C1063;
    const double C18070 = C30879 * C1051;
    const double C18064 = C30879 * C629;
    const double C18058 = C30879 * C619;
    const double C18550 = C30879 * C1069;
    const double C18544 = C30879 * C1054;
    const double C18538 = C30879 * C344;
    const double C18532 = C30879 * C324;
    const double C18527 = C30879 * C334;
    const double C18521 = C30879 * C319;
    const double C18756 = C30879 * C630;
    const double C18750 = C30879 * C620;
    const double C18962 = C30879 * C335;
    const double C18956 = C30879 * C320;
    const double C24074 = C30879 * C1938;
    const double C24068 = C30879 * C1929;
    const double C24382 = C30879 * C345;
    const double C24376 = C30879 * C325;
    const double C116 =
        (C30879 / C30834 + ((C30826 * C30889 + C17317) * ae) / C30828) /
            C30834 -
        ((C30826 * (C30889 / C30834 + (0 * ae) / C30828) + C32242) * be) /
            C30828;
    const double C2598 =
        C30879 / C30834 - ((C30826 * C30889 + C17317) * be) / C30828;
    const double C14633 =
        C30879 / C30834 + ((C30826 * C30889 + C17317) * ae) / C30828;
    const double C5300 = C5155 * C877;
    const double C5294 = C5155 * C868;
    const double C5289 = C5155 * C239;
    const double C5283 = C5155 * C219;
    const double C5277 = C5155 * C229;
    const double C5271 = C5155 * C214;
    const double C5593 = C5155 * C240;
    const double C5587 = C5155 * C220;
    const double C5581 = C5155 * C230;
    const double C5575 = C5155 * C215;
    const double C5909 = C5155 * C1063;
    const double C5903 = C5155 * C1051;
    const double C5897 = C5155 * C629;
    const double C5891 = C5155 * C619;
    const double C10299 = C5155 * C1938;
    const double C10293 = C5155 * C1929;
    const double C10288 = C5155 * C344;
    const double C10282 = C5155 * C324;
    const double C10276 = C5155 * C334;
    const double C10270 = C5155 * C319;
    const double C10625 = C5155 * C345;
    const double C10619 = C5155 * C325;
    const double C10613 = C5155 * C335;
    const double C10607 = C5155 * C320;
    const double C10783 = C5155 * C1069;
    const double C10777 = C5155 * C1054;
    const double C26192 = C5155 * C630;
    const double C26186 = C5155 * C620;
    const double C30880 = C30878 * be;
    const double C5154 = C30865 + (C30878 * ae) / C30828 + C30854;
    const double C939 = C937 * C31966;
    const double C938 = C936 * C118;
    const double C15539 = C15536 + C15537;
    const double C15538 = C15534 + C15535;
    const double C19478 = C19472 + C19473;
    const double C21259 = C21255 + C21256;
    const double C6697 = C6696 + C6694;
    const double C11017 = C11016 + C11012;
    const double C30255 = C6677 * C31002;
    const double C11635 =
        (C31002 / C30834 + ((C30913 * C31016 + C23835) * ae) / C30828) /
            C30834 -
        ((C30913 * (C31016 / C30834 + (0 * ae) / C30828) + C32254) * be) /
            C30828;
    const double C13225 =
        C31002 / C30834 - ((C30913 * C31016 + C23835) * be) / C30828;
    const double C22093 =
        C31002 / C30834 + ((C30913 * C31016 + C23835) * ae) / C30828;
    const double C31005 = C31001 * be;
    const double C31239 = C31238 + C31232;
    const double C7579 = C7575 * C31966;
    const double C7578 = C7574 * C118;
    const double C7577 = C7573 * C31966;
    const double C8411 = C7573 * C32208;
    const double C28279 = C7573 * C20324;
    const double C7576 = C7572 * C118;
    const double C8410 = C7572 * C3350;
    const double C28278 = C7572 * C20326;
    const double C8420 = C8418 * C32053;
    const double C28281 = C8418 * C32053;
    const double C8419 = C8417 * C3351;
    const double C28280 = C8417 * C20327;
    const double C17475 = C17455 - C17456;
    const double C17472 = C17449 - C17450;
    const double C19170 = C18064 - C18065;
    const double C19164 = C18065 - C18064;
    const double C19167 = C18058 - C18059;
    const double C19161 = C18059 - C18058;
    const double C24064 = C18539 - C18538;
    const double C24061 = C18533 - C18532;
    const double C2727 = C2598 * C240;
    const double C2719 = C2598 * C220;
    const double C2712 = C2598 * C230;
    const double C2704 = C2598 * C215;
    const double C2971 = C2598 * C231;
    const double C2963 = C2598 * C216;
    const double C3247 = C2598 * C630;
    const double C3239 = C2598 * C620;
    const double C3577 = C2598 * C345;
    const double C3569 = C2598 * C325;
    const double C3562 = C2598 * C335;
    const double C3554 = C2598 * C320;
    const double C3853 = C2598 * C336;
    const double C3845 = C2598 * C321;
    const double C14762 = C14633 * C240;
    const double C14754 = C14633 * C220;
    const double C14747 = C14633 * C230;
    const double C14739 = C14633 * C215;
    const double C15006 = C14633 * C231;
    const double C14998 = C14633 * C216;
    const double C15282 = C14633 * C630;
    const double C15274 = C14633 * C620;
    const double C20553 = C14633 * C345;
    const double C20545 = C14633 * C325;
    const double C20538 = C14633 * C335;
    const double C20530 = C14633 * C320;
    const double C20829 = C14633 * C336;
    const double C20821 = C14633 * C321;
    const double C5308 = C5288 - C5289;
    const double C5305 = C5282 - C5283;
    const double C26594 = C5897 - C5898;
    const double C26588 = C5898 - C5897;
    const double C26591 = C5891 - C5892;
    const double C26585 = C5892 - C5891;
    const double C10307 = C10287 - C10288;
    const double C10304 = C10281 - C10282;
    const double C30881 = C30880 / C30828;
    const double C5298 = C5154 * C876;
    const double C5292 = C5154 * C867;
    const double C5287 = C5154 * C238;
    const double C5281 = C5154 * C218;
    const double C5275 = C5154 * C228;
    const double C5269 = C5154 * C213;
    const double C5591 = C5154 * C239;
    const double C5585 = C5154 * C219;
    const double C5579 = C5154 * C229;
    const double C5573 = C5154 * C214;
    const double C5907 = C5154 * C1062;
    const double C5901 = C5154 * C1050;
    const double C5895 = C5154 * C628;
    const double C5889 = C5154 * C618;
    const double C10297 = C5154 * C1937;
    const double C10291 = C5154 * C1928;
    const double C10286 = C5154 * C343;
    const double C10280 = C5154 * C323;
    const double C10274 = C5154 * C333;
    const double C10268 = C5154 * C318;
    const double C10623 = C5154 * C344;
    const double C10617 = C5154 * C324;
    const double C10611 = C5154 * C334;
    const double C10605 = C5154 * C319;
    const double C10781 = C5154 * C1068;
    const double C10775 = C5154 * C1053;
    const double C26190 = C5154 * C629;
    const double C26184 = C5154 * C619;
    const double C940 = C938 + C939;
    const double C19483 = C19478 + C19481;
    const double C21260 = C21259 + C21257;
    const double C31007 = C31005 / C30828;
    const double C357 =
        (3 * C31126 + be * C31127 + C31074 * C31154 + ae * C31073 * C31239 +
         C31073 *
             (ae * C31239 +
              C31073 *
                  (3 * C31150 + be * C31151 +
                   C31074 * (2 * C31146 + be * C31147 +
                             C31074 * (C31142 + be * C31074 * C31143 +
                                       C31074 * (be * C31143 +
                                                 C31074 * std::pow(C31076, 8) *
                                                     bs[8] * C31085)))))) /
        C30833;
    const double C535 =
        (ae * (4 * C31212 + C31074 * C31239 +
               (3 * C31183 + C31074 * C31230) * be) +
         C31073 *
             (4 * C31154 + be * C31155 +
              C31074 *
                  (3 * C31150 + be * C31151 +
                   C31074 * (2 * C31146 + be * C31147 +
                             C31074 * (C31142 + be * C31074 * C31143 +
                                       C31074 * (be * C31143 +
                                                 C31074 * std::pow(C31076, 8) *
                                                     bs[8] * C31085)))))) /
        C30833;
    const double C637 =
        (ae * C31243 * C31239 +
         C31073 * C31243 *
             (3 * C31150 + be * C31151 +
              C31074 * (2 * C31146 + be * C31147 +
                        C31074 * (C31142 + be * C31074 * C31143 +
                                  C31074 * (be * C31143 +
                                            C31074 * std::pow(C31076, 8) *
                                                bs[8] * C31085))))) /
        C30833;
    const double C138 = (5 * (3 * C31196 + C31074 * C31212 + C31464 * be) +
                         C31074 * (4 * C31212 + C31074 * C31239 + C31469 * be) +
                         (4 * C31464 + C31074 * C31469) * be) /
                        C30828;
    const double C237 =
        (3 * C31196 + C31074 * C31212 + C31464 * be + C31239 * C31252) / C30828;
    const double C342 =
        (3 * C31196 + C31074 * C31212 + C31464 * be + C31239 * C31285) / C30828;
    const double C445 =
        (C31243 * (4 * C31212 + C31074 * C31239 + C31469 * be)) / C30828;
    const double C533 =
        (C31073 * (4 * C31212 + C31074 * C31239 + C31469 * be)) / C30828;
    const double C627 = (C31073 * C31243 * C31239) / C30828;
    const double C7581 = C7578 + C7579;
    const double C7580 = C7576 + C7577;
    const double C8416 = C8410 + C8411;
    const double C28282 = C28278 + C28279;
    const double C30882 = C30865 - C30881;
    const double C5307 = C5286 - C5287;
    const double C5304 = C5280 - C5281;
    const double C26593 = C5895 - C5896;
    const double C26587 = C5896 - C5895;
    const double C26590 = C5889 - C5890;
    const double C26584 = C5890 - C5889;
    const double C10306 = C10285 - C10286;
    const double C10303 = C10279 - C10280;
    const double C19484 = C19483 + C19482;
    const double C21261 = C21260 + C21258;
    const double C31009 = C30995 - C31007;
    const double C8421 = C8416 + C8419;
    const double C28283 = C28282 + C28280;
    const double C30883 = C30882 + C30854;
    const double C5311 = C5307 + C5308;
    const double C5310 = C5304 + C5305;
    const double C26599 = C26593 + C26594;
    const double C26597 = C26587 + C26588;
    const double C26598 = C26590 + C26591;
    const double C26596 = C26584 + C26585;
    const double C10310 = C10306 + C10307;
    const double C10309 = C10303 + C10304;
    const double C31010 = C31009 + C30980;
    const double C8422 = C8421 + C8420;
    const double C28284 = C28283 + C28281;
    const double C17465 = C30883 * C876;
    const double C17459 = C30883 * C867;
    const double C17454 = C30883 * C238;
    const double C17448 = C30883 * C218;
    const double C17442 = C30883 * C228;
    const double C17436 = C30883 * C213;
    const double C17758 = C30883 * C239;
    const double C17752 = C30883 * C219;
    const double C17746 = C30883 * C229;
    const double C17740 = C30883 * C214;
    const double C18074 = C30883 * C1062;
    const double C18068 = C30883 * C1050;
    const double C18062 = C30883 * C628;
    const double C18056 = C30883 * C618;
    const double C18548 = C30883 * C1068;
    const double C18542 = C30883 * C1053;
    const double C18536 = C30883 * C343;
    const double C18530 = C30883 * C323;
    const double C18525 = C30883 * C333;
    const double C18519 = C30883 * C318;
    const double C18754 = C30883 * C629;
    const double C18748 = C30883 * C619;
    const double C18960 = C30883 * C334;
    const double C18954 = C30883 * C319;
    const double C24072 = C30883 * C1937;
    const double C24066 = C30883 * C1928;
    const double C24380 = C30883 * C344;
    const double C24374 = C30883 * C324;
    const double C113 =
        (((((0 - (C30826 * C30827) / C30828) * ae) / C30828 -
           (0 * be) / C30840 + (2 * C30829) / C30828) /
              C30834 -
          ((C30826 * C30863 + 0) * be) / C30828 + C30846 - C30856) /
             C30834 +
         ((C30826 * C30877 + 0) * ae) / C30828) /
            C30834 -
        ((C30826 * (C30877 / C30834 +
                    ((C30826 * C30883 + C31867) * ae) / C30828 + C30879) +
          C32279) *
         be) /
            C30828 +
        C30883 / C30834 + ((C30826 * C30879 + C31875) * ae) / C30828 +
        2 * (C30854 / C30834 - (0 * be) / C30828);
    const double C114 =
        (C30877 / C30834 + ((C30826 * C30883 + C31867) * ae) / C30828 +
         C30879) /
            C30834 -
        ((C30826 * (C30883 / C30834 +
                    ((C30826 * C30879 + C31875) * ae) / C30828 + 2 * C30889) +
          C32272) *
         be) /
            C30828 +
        2 * (C30879 / C30834 + ((C30826 * C30889 + C17317) * ae) / C30828);
    const double C115 =
        (C30883 / C30834 + ((C30826 * C30879 + C31875) * ae) / C30828 +
         2 * C30889) /
            C30834 -
        ((C30826 *
              (C30879 / C30834 + ((C30826 * C30889 + C17317) * ae) / C30828) +
          C32259) *
         be) /
            C30828 +
        3 * (C30889 / C30834 + (0 * ae) / C30828);
    const double C2596 =
        C30877 / C30834 - ((C30826 * C30883 + C31867) * be) / C30828 + C30879;
    const double C2597 = C30883 / C30834 -
                         ((C30826 * C30879 + C31875) * be) / C30828 +
                         2 * C30889;
    const double C14631 =
        C30877 / C30834 + ((C30826 * C30883 + C31867) * ae) / C30828 + C30879;
    const double C14632 = C30883 / C30834 +
                          ((C30826 * C30879 + C31875) * ae) / C30828 +
                          2 * C30889;
    const double C5313 = C5311 + C5309;
    const double C5312 = C5310 + C5306;
    const double C26603 = C26599 + C26595;
    const double C26601 = C26597 + C26589;
    const double C26602 = C26598 + C26592;
    const double C26600 = C26596 + C26586;
    const double C10312 = C10310 + C10308;
    const double C10311 = C10309 + C10305;
    const double C30253 = C6072 * C31010;
    const double C11632 =
        (((((0 - (C30913 * C30963) / C30828) * ae) / C30828 -
           (0 * be) / C30840 + (2 * C30964) / C30828) /
              C30834 -
          ((C30913 * C30999 + 0) * be) / C30828 + C30973 - C30986) /
             C30834 +
         ((C30913 * C31008 + 0) * ae) / C30828) /
            C30834 -
        ((C30913 * (C31008 / C30834 +
                    ((C30913 * C31010 + C32049) * ae) / C30828 + C31002) +
          C32281) *
         be) /
            C30828 +
        C31010 / C30834 + ((C30913 * C31002 + C32056) * ae) / C30828 +
        2 * (C30980 / C30834 - (0 * be) / C30828);
    const double C11633 =
        (C31008 / C30834 + ((C30913 * C31010 + C32049) * ae) / C30828 +
         C31002) /
            C30834 -
        ((C30913 * (C31010 / C30834 +
                    ((C30913 * C31002 + C32056) * ae) / C30828 + 2 * C31016) +
          C32278) *
         be) /
            C30828 +
        2 * (C31002 / C30834 + ((C30913 * C31016 + C23835) * ae) / C30828);
    const double C11634 =
        (C31010 / C30834 + ((C30913 * C31002 + C32056) * ae) / C30828 +
         2 * C31016) /
            C30834 -
        ((C30913 *
              (C31002 / C30834 + ((C30913 * C31016 + C23835) * ae) / C30828) +
          C32269) *
         be) /
            C30828 +
        3 * (C31016 / C30834 + (0 * ae) / C30828);
    const double C13223 =
        C31008 / C30834 - ((C30913 * C31010 + C32049) * be) / C30828 + C31002;
    const double C13224 = C31010 / C30834 -
                          ((C30913 * C31002 + C32056) * be) / C30828 +
                          2 * C31016;
    const double C22091 =
        C31008 / C30834 + ((C30913 * C31010 + C32049) * ae) / C30828 + C31002;
    const double C22092 = C31010 / C30834 +
                          ((C30913 * C31002 + C32056) * ae) / C30828 +
                          2 * C31016;
    const double C17474 = C17453 - C17454;
    const double C17471 = C17447 - C17448;
    const double C19169 = C18062 - C18063;
    const double C19163 = C18063 - C18062;
    const double C19166 = C18056 - C18057;
    const double C19160 = C18057 - C18056;
    const double C24063 = C18537 - C18536;
    const double C24060 = C18531 - C18530;
    const double C2723 = C2596 * C238;
    const double C2715 = C2596 * C218;
    const double C2708 = C2596 * C228;
    const double C2700 = C2596 * C213;
    const double C2967 = C2596 * C229;
    const double C2959 = C2596 * C214;
    const double C3243 = C2596 * C628;
    const double C3235 = C2596 * C618;
    const double C3573 = C2596 * C343;
    const double C3565 = C2596 * C323;
    const double C3558 = C2596 * C333;
    const double C3550 = C2596 * C318;
    const double C3849 = C2596 * C334;
    const double C3841 = C2596 * C319;
    const double C2725 = C2597 * C239;
    const double C2717 = C2597 * C219;
    const double C2710 = C2597 * C229;
    const double C2702 = C2597 * C214;
    const double C2969 = C2597 * C230;
    const double C2961 = C2597 * C215;
    const double C3245 = C2597 * C629;
    const double C3237 = C2597 * C619;
    const double C3575 = C2597 * C344;
    const double C3567 = C2597 * C324;
    const double C3560 = C2597 * C334;
    const double C3552 = C2597 * C319;
    const double C3851 = C2597 * C335;
    const double C3843 = C2597 * C320;
    const double C14758 = C14631 * C238;
    const double C14750 = C14631 * C218;
    const double C14743 = C14631 * C228;
    const double C14735 = C14631 * C213;
    const double C15002 = C14631 * C229;
    const double C14994 = C14631 * C214;
    const double C15278 = C14631 * C628;
    const double C15270 = C14631 * C618;
    const double C20549 = C14631 * C343;
    const double C20541 = C14631 * C323;
    const double C20534 = C14631 * C333;
    const double C20526 = C14631 * C318;
    const double C20825 = C14631 * C334;
    const double C20817 = C14631 * C319;
    const double C14760 = C14632 * C239;
    const double C14752 = C14632 * C219;
    const double C14745 = C14632 * C229;
    const double C14737 = C14632 * C214;
    const double C15004 = C14632 * C230;
    const double C14996 = C14632 * C215;
    const double C15280 = C14632 * C629;
    const double C15272 = C14632 * C619;
    const double C20551 = C14632 * C344;
    const double C20543 = C14632 * C324;
    const double C20536 = C14632 * C334;
    const double C20528 = C14632 * C319;
    const double C20827 = C14632 * C335;
    const double C20819 = C14632 * C320;
    const double C5315 = C5313 * C31966;
    const double C5314 = C5312 * C118;
    const double C30259 = C30253 + C30254;
    const double C17478 = C17474 + C17475;
    const double C17477 = C17471 + C17472;
    const double C19175 = C19169 + C19170;
    const double C19173 = C19163 + C19164;
    const double C19174 = C19166 + C19167;
    const double C19172 = C19160 + C19161;
    const double C24079 = C24063 + C24064;
    const double C24078 = C24060 + C24061;
    const double C5316 = C5314 + C5315;
    const double C30260 = C30259 + C30255;
    const double C17480 = C17478 + C17476;
    const double C17479 = C17477 + C17473;
    const double C19179 = C19175 + C19171;
    const double C19177 = C19173 + C19165;
    const double C19178 = C19174 + C19168;
    const double C19176 = C19172 + C19162;
    const double C24081 = C24079 + C24065;
    const double C24080 = C24078 + C24062;
    const double C30261 = C30260 + C30256;
    const double C17482 = C17480 * C31966;
    const double C17481 = C17479 * C118;
    const double C30262 = C30261 + C30257;
    const double C17483 = C17481 + C17482;
    const double C30263 = C30262 + C30258;
    d2ee[0] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C31867 * C126 - C30883 * C119 + C31875 * C127 - C30879 * C120 +
              C17317 * C128 - C30889 * C121) *
                 C118 +
             (C31867 * C140 - C30883 * C131 + C31875 * C141 - C30879 * C132 +
              C17317 * C142 - C30889 * C133) *
                 C31966) *
                C32009 +
            ((C17435 - C17436 + C17437 - C17438 + C17439 - C17440) * C118 +
             (C17441 - C17442 + C17443 - C17444 + C17445 - C17446) * C31966) *
                C32016 +
            C17483 * C17320) *
               C31925 * C440 +
           (((C17436 - C17435 + C17438 - C17437 + C17440 - C17439) * C118 +
             (C17442 - C17441 + C17444 - C17443 + C17446 - C17445) * C31966) *
                C32009 +
            ((C17448 - C17447 + C17450 - C17449 + C17452 - C17451) * C118 +
             (C17454 - C17453 + C17456 - C17455 + C17458 - C17457) * C31966) *
                C32016 +
            ((C17459 - C17460 + C17461 - C17462 + C17463 - C17464) * C118 +
             (C17465 - C17466 + C17467 - C17468 + C17469 - C17470) * C31966) *
                C17320) *
               C31925 * C441) *
              C442 +
          ((((C30883 * C120 - C31867 * C127 + C30879 * C121 - C31875 * C128 +
              C30889 * C122 - C17317 * C129) *
                 C118 +
             (C30883 * C132 - C31867 * C141 + C30879 * C133 - C31875 * C142 +
              C30889 * C134 - C17317 * C143) *
                 C31966) *
                C32009 +
            ((C17740 - C17741 + C17742 - C17743 + C17744 - C17745) * C118 +
             (C17746 - C17747 + C17748 - C17749 + C17750 - C17751) * C31966) *
                C32016 +
            ((C17752 - C17753 + C17754 - C17755 + C17756 - C17757) * C118 +
             (C17758 - C17759 + C17760 - C17761 + C17762 - C17763) * C31966) *
                C17320) *
               C31925 * C440 +
           (((C17741 - C17740 + C17743 - C17742 + C17745 - C17744) * C118 +
             (C17747 - C17746 + C17749 - C17748 + C17751 - C17750) * C31966) *
                C32009 +
            ((C17753 - C17752 + C17755 - C17754 + C17757 - C17756) * C118 +
             (C17759 - C17758 + C17761 - C17760 + C17763 - C17762) * C31966) *
                C32016 +
            ((C31867 * C874 - C30883 * C868 + C31875 * C875 - C30879 * C869 +
              C17317 * C1233 - C30889 * C1232) *
                 C118 +
             (C31867 * C886 - C30883 * C877 + C31875 * C887 - C30879 * C878 +
              C17317 * C1235 - C30889 * C1234) *
                 C31966) *
                C17320) *
               C31925 * C441) *
              C443)) /
        (p * q * std::sqrt(p + q));
    d2ee[1] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C31867 * C126 - C30883 * C119 + C31875 * C127 - C30879 * C120 +
              C17317 * C128 - C30889 * C121) *
                 C118 +
             (C31867 * C140 - C30883 * C131 + C31875 * C141 - C30879 * C132 +
              C17317 * C142 - C30889 * C133) *
                 C31966) *
                C32009 +
            ((C17435 - C17436 + C17437 - C17438 + C17439 - C17440) * C118 +
             (C17441 - C17442 + C17443 - C17444 + C17445 - C17446) * C31966) *
                C32016 +
            C17483 * C17320) *
               C530 +
           (((C30883 * C318 - C31867 * C328 + C30879 * C319 - C31875 * C329 +
              C30889 * C320 - C17317 * C330) *
                 C118 +
             (C30883 * C333 - C31867 * C348 + C30879 * C334 - C31875 * C349 +
              C30889 * C335 - C17317 * C350) *
                 C31966) *
                C32009 +
            ((C18056 - C18057 + C18058 - C18059 + C18060 - C18061) * C118 +
             (C18062 - C18063 + C18064 - C18065 + C18066 - C18067) * C31966) *
                C32016 +
            ((C18068 - C18069 + C18070 - C18071 + C18072 - C18073) * C118 +
             (C18074 - C18075 + C18076 - C18077 + C18078 - C18079) * C31966) *
                C17320) *
               C531) *
              C440 +
          ((((C17436 - C17435 + C17438 - C17437 + C17440 - C17439) * C118 +
             (C17442 - C17441 + C17444 - C17443 + C17446 - C17445) * C31966) *
                C32009 +
            ((C17448 - C17447 + C17450 - C17449 + C17452 - C17451) * C118 +
             (C17454 - C17453 + C17456 - C17455 + C17458 - C17457) * C31966) *
                C32016 +
            ((C17459 - C17460 + C17461 - C17462 + C17463 - C17464) * C118 +
             (C17465 - C17466 + C17467 - C17468 + C17469 - C17470) * C31966) *
                C17320) *
               C530 +
           (((C18057 - C18056 + C18059 - C18058 + C18061 - C18060) * C118 +
             (C18063 - C18062 + C18065 - C18064 + C18067 - C18066) * C31966) *
                C32009 +
            ((C18069 - C18068 + C18071 - C18070 + C18073 - C18072) * C118 +
             (C18075 - C18074 + C18077 - C18076 + C18079 - C18078) * C31966) *
                C32016 +
            ((C31867 * C1559 - C30883 * C1556 + C31875 * C1560 -
              C30879 * C1557 + C17317 * C1561 - C30889 * C1558) *
                 C118 +
             (C31867 * C1565 - C30883 * C1562 + C31875 * C1566 -
              C30879 * C1563 + C17317 * C1567 - C30889 * C1564) *
                 C31966) *
                C17320) *
               C531) *
              C441) *
         C31899) /
        (p * q * std::sqrt(p + q));
    d2ee[2] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31867 * C126 - C30883 * C119 + C31875 * C127 - C30879 * C120 +
             C17317 * C128 - C30889 * C121) *
                C118 +
            (C31867 * C140 - C30883 * C131 + C31875 * C141 - C30879 * C132 +
             C17317 * C142 - C30889 * C133) *
                C31966) *
               C32009 +
           ((C17435 - C17436 + C17437 - C17438 + C17439 - C17440) * C118 +
            (C17441 - C17442 + C17443 - C17444 + C17445 - C17446) * C31966) *
               C32016 +
           C17483 * C17320) *
              C31925 * C209 +
          (((C17436 - C17435 + C17438 - C17437 + C17440 - C17439) * C118 +
            (C17442 - C17441 + C17444 - C17443 + C17446 - C17445) * C31966) *
               C32009 +
           ((C17448 - C17447 + C17450 - C17449 + C17452 - C17451) * C118 +
            (C17454 - C17453 + C17456 - C17455 + C17458 - C17457) * C31966) *
               C32016 +
           ((C17459 - C17460 + C17461 - C17462 + C17463 - C17464) * C118 +
            (C17465 - C17466 + C17467 - C17468 + C17469 - C17470) * C31966) *
               C17320) *
              C31925 * C210 +
          (C17483 * C32009 +
           ((C17460 - C17459 + C17462 - C17461 + C17464 - C17463) * C118 +
            (C17466 - C17465 + C17468 - C17467 + C17470 - C17469) * C31966) *
               C32016 +
           ((C31867 * C879 - C30883 * C870 + C31875 * C880 - C30879 * C871 +
             C17317 * C881 - C30889 * C872) *
                C118 +
            (C31867 * C888 - C30883 * C882 + C31875 * C889 - C30879 * C883 +
             C17317 * C890 - C30889 * C884) *
                C31966) *
               C17320) *
              C31925 * C211) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31867 * C126 - C30883 * C119 + C31875 * C127 - C30879 * C120 +
             C17317 * C128 - C30889 * C121) *
                C118 +
            (C31867 * C140 - C30883 * C131 + C31875 * C141 - C30879 * C132 +
             C17317 * C142 - C30889 * C133) *
                C31966) *
               C32009 +
           ((C31867 * C223 - C30883 * C213 + C31875 * C224 - C30879 * C214 +
             C17317 * C225 - C30889 * C215) *
                C118 +
            (C31867 * C243 - C30883 * C228 + C31875 * C244 - C30879 * C229 +
             C17317 * C245 - C30889 * C230) *
                C31966) *
               C32016 +
           ((C31867 * C233 - C30883 * C218 + C31875 * C234 - C30879 * C219 +
             C17317 * C235 - C30889 * C220) *
                C118 +
            (C31867 * C248 - C30883 * C238 + C31875 * C249 - C30879 * C239 +
             C17317 * C250 - C30889 * C240) *
                C31966) *
               C17320) *
              C31925 * C31911 * C110 +
          (((C30883 * C120 - C31867 * C127 + C30879 * C121 - C31875 * C128 +
             C30889 * C122 - C17317 * C129) *
                C118 +
            (C30883 * C132 - C31867 * C141 + C30879 * C133 - C31875 * C142 +
             C30889 * C134 - C17317 * C143) *
                C31966) *
               C32009 +
           ((C30883 * C214 - C31867 * C224 + C30879 * C215 - C31875 * C225 +
             C30889 * C216 - C17317 * C226) *
                C118 +
            (C30883 * C229 - C31867 * C244 + C30879 * C230 - C31875 * C245 +
             C30889 * C231 - C17317 * C246) *
                C31966) *
               C32016 +
           ((C30883 * C219 - C31867 * C234 + C30879 * C220 - C31875 * C235 +
             C30889 * C221 - C17317 * C236) *
                C118 +
            (C30883 * C239 - C31867 * C249 + C30879 * C240 - C31875 * C250 +
             C30889 * C241 - C17317 * C251) *
                C31966) *
               C17320) *
              C31925 * C31911 * C111 +
          (((C31867 * C128 - C30883 * C121 + C31875 * C129 - C30879 * C122 +
             C17317 * C130 - C30889 * C123) *
                C118 +
            (C31867 * C142 - C30883 * C133 + C31875 * C143 - C30879 * C134 +
             C17317 * C144 - C30889 * C135) *
                C31966) *
               C32009 +
           ((C31867 * C225 - C30883 * C215 + C31875 * C226 - C30879 * C216 +
             C17317 * C227 - C30889 * C217) *
                C118 +
            (C31867 * C245 - C30883 * C230 + C31875 * C246 - C30879 * C231 +
             C17317 * C247 - C30889 * C232) *
                C31966) *
               C32016 +
           ((C31867 * C235 - C30883 * C220 + C31875 * C236 - C30879 * C221 +
             C17317 * C237 - C30889 * C222) *
                C118 +
            (C31867 * C250 - C30883 * C240 + C31875 * C251 - C30879 * C241 +
             C17317 * C252 - C30889 * C242) *
                C31966) *
               C17320) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C31867 * C126 - C30883 * C119 + C31875 * C127 - C30879 * C120 +
             C17317 * C128 - C30889 * C121) *
                C118 +
            (C31867 * C140 - C30883 * C131 + C31875 * C141 - C30879 * C132 +
             C17317 * C142 - C30889 * C133) *
                C31966) *
               C32009 +
           ((C17435 - C17436 + C17437 - C17438 + C17439 - C17440) * C118 +
            (C17441 - C17442 + C17443 - C17444 + C17445 - C17446) * C31966) *
               C32016 +
           C17483 * C17320) *
              C315 +
          (((C30883 * C318 - C31867 * C328 + C30879 * C319 - C31875 * C329 +
             C30889 * C320 - C17317 * C330) *
                C118 +
            (C30883 * C333 - C31867 * C348 + C30879 * C334 - C31875 * C349 +
             C30889 * C335 - C17317 * C350) *
                C31966) *
               C32009 +
           ((C30883 * C618 - C31867 * C623 + C30879 * C619 - C31875 * C624 +
             C30889 * C620 - C17317 * C625) *
                C118 +
            (C30883 * C628 - C31867 * C633 + C30879 * C629 - C31875 * C634 +
             C30889 * C630 - C17317 * C635) *
                C31966) *
               C32016 +
           ((C30883 * C1050 - C31867 * C1059 + C30879 * C1051 - C31875 * C1060 +
             C30889 * C1052 - C17317 * C1061) *
                C118 +
            (C30883 * C1062 - C31867 * C1077 + C30879 * C1063 - C31875 * C1078 +
             C30889 * C1064 - C17317 * C1079) *
                C31966) *
               C17320) *
              C316 +
          (((C31867 * C338 - C30883 * C323 + C31875 * C339 - C30879 * C324 +
             C17317 * C340 - C30889 * C325) *
                C118 +
            (C31867 * C353 - C30883 * C343 + C31875 * C354 - C30879 * C344 +
             C17317 * C355 - C30889 * C345) *
                C31966) *
               C32009 +
           ((C31867 * C1065 - C30883 * C1053 + C31875 * C1066 - C30879 * C1054 +
             C17317 * C1067 - C30889 * C1055) *
                C118 +
            (C31867 * C1080 - C30883 * C1068 + C31875 * C1081 - C30879 * C1069 +
             C17317 * C1082 - C30889 * C1070) *
                C31966) *
               C32016 +
           ((C31867 * C1071 - C30883 * C1056 + C31875 * C1072 - C30879 * C1057 +
             C17317 * C1073 - C30889 * C1058) *
                C118 +
            (C31867 * C1083 - C30883 * C1074 + C31875 * C1084 - C30879 * C1075 +
             C17317 * C1085 - C30889 * C1076) *
                C31966) *
               C17320) *
              C317) *
         C31911 * C31899) /
            (p * q * std::sqrt(p + q));
    d2ee[3] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C31867 * C126 - C30883 * C119 + C31875 * C127 - C30879 * C120 +
              C17317 * C128 - C30889 * C121) *
                 C118 +
             (C31867 * C140 - C30883 * C131 + C31875 * C141 - C30879 * C132 +
              C17317 * C142 - C30889 * C133) *
                 C31966) *
                C32009 +
            ((C17435 - C17436 + C17437 - C17438 + C17439 - C17440) * C118 +
             (C17441 - C17442 + C17443 - C17444 + C17445 - C17446) * C31966) *
                C32016 +
            C17483 * C17320) *
               C530 +
           (((C30883 * C318 - C31867 * C328 + C30879 * C319 - C31875 * C329 +
              C30889 * C320 - C17317 * C330) *
                 C118 +
             (C30883 * C333 - C31867 * C348 + C30879 * C334 - C31875 * C349 +
              C30889 * C335 - C17317 * C350) *
                 C31966) *
                C32009 +
            ((C30883 * C618 - C31867 * C623 + C30879 * C619 - C31875 * C624 +
              C30889 * C620 - C17317 * C625) *
                 C118 +
             (C30883 * C628 - C31867 * C633 + C30879 * C629 - C31875 * C634 +
              C30889 * C630 - C17317 * C635) *
                 C31966) *
                C32016 +
            ((C30883 * C1050 - C31867 * C1059 + C30879 * C1051 -
              C31875 * C1060 + C30889 * C1052 - C17317 * C1061) *
                 C118 +
             (C30883 * C1062 - C31867 * C1077 + C30879 * C1063 -
              C31875 * C1078 + C30889 * C1064 - C17317 * C1079) *
                 C31966) *
                C17320) *
               C531) *
              C31911 * C442 +
          ((((C30883 * C120 - C31867 * C127 + C30879 * C121 - C31875 * C128 +
              C30889 * C122 - C17317 * C129) *
                 C118 +
             (C30883 * C132 - C31867 * C141 + C30879 * C133 - C31875 * C142 +
              C30889 * C134 - C17317 * C143) *
                 C31966) *
                C32009 +
            ((C17740 - C17741 + C17742 - C17743 + C17744 - C17745) * C118 +
             (C17746 - C17747 + C17748 - C17749 + C17750 - C17751) * C31966) *
                C32016 +
            ((C17752 - C17753 + C17754 - C17755 + C17756 - C17757) * C118 +
             (C17758 - C17759 + C17760 - C17761 + C17762 - C17763) * C31966) *
                C17320) *
               C530 +
           (((C31867 * C329 - C30883 * C319 + C31875 * C330 - C30879 * C320 +
              C17317 * C331 - C30889 * C321) *
                 C118 +
             (C31867 * C349 - C30883 * C334 + C31875 * C350 - C30879 * C335 +
              C17317 * C351 - C30889 * C336) *
                 C31966) *
                C32009 +
            ((C31867 * C624 - C30883 * C619 + C31875 * C625 - C30879 * C620 +
              C17317 * C626 - C30889 * C621) *
                 C118 +
             (C31867 * C634 - C30883 * C629 + C31875 * C635 - C30879 * C630 +
              C17317 * C636 - C30889 * C631) *
                 C31966) *
                C32016 +
            ((C31867 * C1060 - C30883 * C1051 + C31875 * C1061 -
              C30879 * C1052 + C17317 * C1407 - C30889 * C1406) *
                 C118 +
             (C31867 * C1078 - C30883 * C1063 + C31875 * C1079 -
              C30879 * C1064 + C17317 * C1409 - C30889 * C1408) *
                 C31966) *
                C17320) *
               C531) *
              C31911 * C443)) /
        (p * q * std::sqrt(p + q));
    d2ee[4] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31867 * C126 - C30883 * C119 + C31875 * C127 - C30879 * C120 +
             C17317 * C128 - C30889 * C121) *
                C118 +
            (C31867 * C140 - C30883 * C131 + C31875 * C141 - C30879 * C132 +
             C17317 * C142 - C30889 * C133) *
                C31966) *
               C32009 +
           ((C31867 * C223 - C30883 * C213 + C31875 * C224 - C30879 * C214 +
             C17317 * C225 - C30889 * C215) *
                C118 +
            (C31867 * C243 - C30883 * C228 + C31875 * C244 - C30879 * C229 +
             C17317 * C245 - C30889 * C230) *
                C31966) *
               C32016 +
           ((C31867 * C233 - C30883 * C218 + C31875 * C234 - C30879 * C219 +
             C17317 * C235 - C30889 * C220) *
                C118 +
            (C31867 * C248 - C30883 * C238 + C31875 * C249 - C30879 * C239 +
             C17317 * C250 - C30889 * C240) *
                C31966) *
               C17320) *
              C31925 * C31911 * C110 +
          (((C30883 * C120 - C31867 * C127 + C30879 * C121 - C31875 * C128 +
             C30889 * C122 - C17317 * C129) *
                C118 +
            (C30883 * C132 - C31867 * C141 + C30879 * C133 - C31875 * C142 +
             C30889 * C134 - C17317 * C143) *
                C31966) *
               C32009 +
           ((C30883 * C214 - C31867 * C224 + C30879 * C215 - C31875 * C225 +
             C30889 * C216 - C17317 * C226) *
                C118 +
            (C30883 * C229 - C31867 * C244 + C30879 * C230 - C31875 * C245 +
             C30889 * C231 - C17317 * C246) *
                C31966) *
               C32016 +
           ((C30883 * C219 - C31867 * C234 + C30879 * C220 - C31875 * C235 +
             C30889 * C221 - C17317 * C236) *
                C118 +
            (C30883 * C239 - C31867 * C249 + C30879 * C240 - C31875 * C250 +
             C30889 * C241 - C17317 * C251) *
                C31966) *
               C17320) *
              C31925 * C31911 * C111 +
          (((C31867 * C128 - C30883 * C121 + C31875 * C129 - C30879 * C122 +
             C17317 * C130 - C30889 * C123) *
                C118 +
            (C31867 * C142 - C30883 * C133 + C31875 * C143 - C30879 * C134 +
             C17317 * C144 - C30889 * C135) *
                C31966) *
               C32009 +
           ((C31867 * C225 - C30883 * C215 + C31875 * C226 - C30879 * C216 +
             C17317 * C227 - C30889 * C217) *
                C118 +
            (C31867 * C245 - C30883 * C230 + C31875 * C246 - C30879 * C231 +
             C17317 * C247 - C30889 * C232) *
                C31966) *
               C32016 +
           ((C31867 * C235 - C30883 * C220 + C31875 * C236 - C30879 * C221 +
             C17317 * C237 - C30889 * C222) *
                C118 +
            (C31867 * C250 - C30883 * C240 + C31875 * C251 - C30879 * C241 +
             C17317 * C252 - C30889 * C242) *
                C31966) *
               C17320) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31867 * C126 - C30883 * C119 + C31875 * C127 - C30879 * C120 +
             C17317 * C128 - C30889 * C121) *
                C118 +
            (C31867 * C140 - C30883 * C131 + C31875 * C141 - C30879 * C132 +
             C17317 * C142 - C30889 * C133) *
                C31966) *
               C32009 +
           ((C17435 - C17436 + C17437 - C17438 + C17439 - C17440) * C118 +
            (C17441 - C17442 + C17443 - C17444 + C17445 - C17446) * C31966) *
               C32016 +
           C17483 * C17320) *
              C31925 * C209 +
          (((C17436 - C17435 + C17438 - C17437 + C17440 - C17439) * C118 +
            (C17442 - C17441 + C17444 - C17443 + C17446 - C17445) * C31966) *
               C32009 +
           ((C17448 - C17447 + C17450 - C17449 + C17452 - C17451) * C118 +
            (C17454 - C17453 + C17456 - C17455 + C17458 - C17457) * C31966) *
               C32016 +
           ((C17459 - C17460 + C17461 - C17462 + C17463 - C17464) * C118 +
            (C17465 - C17466 + C17467 - C17468 + C17469 - C17470) * C31966) *
               C17320) *
              C31925 * C210 +
          (C17483 * C32009 +
           ((C17460 - C17459 + C17462 - C17461 + C17464 - C17463) * C118 +
            (C17466 - C17465 + C17468 - C17467 + C17470 - C17469) * C31966) *
               C32016 +
           ((C31867 * C879 - C30883 * C870 + C31875 * C880 - C30879 * C871 +
             C17317 * C881 - C30889 * C872) *
                C118 +
            (C31867 * C888 - C30883 * C882 + C31875 * C889 - C30879 * C883 +
             C17317 * C890 - C30889 * C884) *
                C31966) *
               C17320) *
              C31925 * C211) *
         C31899) /
            (p * q * std::sqrt(p + q));
    d2ee[5] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C15383 * C126 - C15389 * C119 + C31872 * C127 - C15390 * C120) *
                 C3350 +
             (C15383 * C140 - C15389 * C131 + C31872 * C141 - C15390 * C132) *
                 C32208 +
             (C16530 - C16531 + C16532 - C16533) * C3351 +
             (C16534 - C16535 + C16536 - C16537) * C32053) *
                C32009 +
            ((C15490 - C15491 + C15492 - C15493) * C3350 +
             (C15494 - C15495 + C15496 - C15497) * C32208 + C17200 * C3351 +
             C17201 * C32053) *
                C32016 +
            C19484 * C17320) *
               C31925 * C440 +
           (((C15491 - C15490 + C15493 - C15492) * C3350 +
             (C15495 - C15494 + C15497 - C15496) * C32208 + C17202 * C3351 +
             C17203 * C32053) *
                C32009 +
            ((C15499 - C15498 + C15501 - C15500) * C3350 +
             (C15503 - C15502 + C15505 - C15504) * C32208 +
             (C16060 - C16061 + C16062 - C16063) * C3351 +
             (C16064 - C16065 + C16066 - C16067) * C32053) *
                C32016 +
            ((C15507 - C15506 + C15509 - C15508) * C3350 +
             (C15511 - C15510 + C15513 - C15512) * C32208 +
             (C16068 - C16069 + C16070 - C16071) * C3351 +
             (C16072 - C16073 + C16074 - C16075) * C32053) *
                C17320) *
               C31925 * C441) *
              C442 +
          ((((C15389 * C120 - C15383 * C127 + C15390 * C121 - C31872 * C128) *
                 C3350 +
             (C15389 * C132 - C15383 * C141 + C15390 * C133 - C31872 * C142) *
                 C32208 +
             (C16978 - C16979 + C16980 - C16981) * C3351 +
             (C16982 - C16983 + C16984 - C16985) * C32053) *
                C32009 +
            ((C15768 - C15769 + C15770 - C15771) * C3350 +
             (C15772 - C15773 + C15774 - C15775) * C32208 +
             (C16768 - C16769 + C16770 - C16771) * C3351 +
             (C16772 - C16773 + C16774 - C16775) * C32053) *
                C32016 +
            ((C15776 - C15777 + C15778 - C15779) * C3350 +
             (C15780 - C15781 + C15782 - C15783) * C32208 +
             (C19825 - C19826 + C19827 - C19828) * C3351 +
             (C19829 - C19830 + C19831 - C19832) * C32053) *
                C17320) *
               C31925 * C440 +
           (((C15769 - C15768 + C15771 - C15770) * C3350 +
             (C15773 - C15772 + C15775 - C15774) * C32208 +
             (C16769 - C16768 + C16771 - C16770) * C3351 +
             (C16773 - C16772 + C16775 - C16774) * C32053) *
                C32009 +
            ((C15777 - C15776 + C15779 - C15778) * C3350 +
             (C15781 - C15780 + C15783 - C15782) * C32208 +
             (C19826 - C19825 + C19828 - C19827) * C3351 +
             (C19830 - C19829 + C19832 - C19831) * C32053) *
                C32016 +
            ((C15785 - C15784 + C15787 - C15786) * C3350 +
             (C15789 - C15788 + C15791 - C15790) * C32208 +
             (C15383 * C1560 - C15389 * C1557 + C31872 * C1561 -
              C15390 * C1558) *
                 C3351 +
             (C15383 * C1566 - C15389 * C1563 + C31872 * C1567 -
              C15390 * C1564) *
                 C32053) *
                C17320) *
               C31925 * C441) *
              C443)) /
        (p * q * std::sqrt(p + q));
    d2ee[6] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C15383 * C126 - C15389 * C119 + C31872 * C127 - C15390 * C120) *
                 C3350 +
             (C15383 * C140 - C15389 * C131 + C31872 * C141 - C15390 * C132) *
                 C32208 +
             (C16530 - C16531 + C16532 - C16533) * C3351 +
             (C16534 - C16535 + C16536 - C16537) * C32053) *
                C32009 +
            ((C15490 - C15491 + C15492 - C15493) * C3350 +
             (C15494 - C15495 + C15496 - C15497) * C32208 + C17200 * C3351 +
             C17201 * C32053) *
                C32016 +
            C19484 * C17320) *
               C530 +
           (((C16531 - C16530 + C16533 - C16532) * C3350 +
             (C16535 - C16534 + C16537 - C16536) * C32208 +
             (C16539 - C16538 + C16541 - C16540) * C3351 +
             (C16543 - C16542 + C16545 - C16544) * C32053) *
                C32009 +
            (C17202 * C3350 + C17203 * C32208 + C17204 * C3351 +
             C17205 * C32053) *
                C32016 +
            (C20225 * C3350 + C20226 * C32208 +
             (C16376 - C16377 + C16378 - C16379) * C3351 +
             (C16380 - C16381 + C16382 - C16383) * C32053) *
                C17320) *
               C531) *
              C440 +
          ((((C15491 - C15490 + C15493 - C15492) * C3350 +
             (C15495 - C15494 + C15497 - C15496) * C32208 + C17202 * C3351 +
             C17203 * C32053) *
                C32009 +
            ((C15499 - C15498 + C15501 - C15500) * C3350 +
             (C15503 - C15502 + C15505 - C15504) * C32208 + C20225 * C3351 +
             C20226 * C32053) *
                C32016 +
            ((C15507 - C15506 + C15509 - C15508) * C3350 +
             (C15511 - C15510 + C15513 - C15512) * C32208 +
             (C16068 - C16069 + C16070 - C16071) * C3351 +
             (C16072 - C16073 + C16074 - C16075) * C32053) *
                C17320) *
               C530 +
           ((C17200 * C3350 + C17201 * C32208 + C16570 * C3351 +
             C16571 * C32053) *
                C32009 +
            (C19479 * C3350 + C19480 * C32208 +
             (C16377 - C16376 + C16379 - C16378) * C3351 +
             (C16381 - C16380 + C16383 - C16382) * C32053) *
                C32016 +
            ((C16069 - C16068 + C16071 - C16070) * C3350 +
             (C16073 - C16072 + C16075 - C16074) * C32208 +
             (C15383 * C6153 - C15389 * C6149 + C31872 * C6990 -
              C15390 * C6989) *
                 C3351 +
             (C15383 * C6158 - C15389 * C6154 + C31872 * C6992 -
              C15390 * C6991) *
                 C32053) *
                C17320) *
               C531) *
              C441) *
         C31899) /
        (p * q * std::sqrt(p + q));
    d2ee[7] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C15383 * C126 - C15389 * C119 + C31872 * C127 - C15390 * C120) *
                C3350 +
            (C15383 * C140 - C15389 * C131 + C31872 * C141 - C15390 * C132) *
                C32208 +
            (C16530 - C16531 + C16532 - C16533) * C3351 +
            (C16534 - C16535 + C16536 - C16537) * C32053) *
               C32009 +
           ((C15490 - C15491 + C15492 - C15493) * C3350 +
            (C15494 - C15495 + C15496 - C15497) * C32208 + C17200 * C3351 +
            C17201 * C32053) *
               C32016 +
           C19484 * C17320) *
              C31925 * C209 +
          (((C15491 - C15490 + C15493 - C15492) * C3350 +
            (C15495 - C15494 + C15497 - C15496) * C32208 + C17202 * C3351 +
            C17203 * C32053) *
               C32009 +
           ((C15499 - C15498 + C15501 - C15500) * C3350 +
            (C15503 - C15502 + C15505 - C15504) * C32208 +
            (C16060 - C16061 + C16062 - C16063) * C3351 +
            (C16064 - C16065 + C16066 - C16067) * C32053) *
               C32016 +
           ((C15507 - C15506 + C15509 - C15508) * C3350 +
            (C15511 - C15510 + C15513 - C15512) * C32208 +
            (C16068 - C16069 + C16070 - C16071) * C3351 +
            (C16072 - C16073 + C16074 - C16075) * C32053) *
               C17320) *
              C31925 * C210 +
          (C19484 * C32009 +
           (C15532 * C3350 + C15533 * C32208 +
            (C16069 - C16068 + C16071 - C16070) * C3351 +
            (C16073 - C16072 + C16075 - C16074) * C32053) *
               C32016 +
           ((C15515 - C15514 + C15517 - C15516) * C3350 +
            (C15519 - C15518 + C15521 - C15520) * C32208 +
            (C15383 * C6151 - C15389 * C6148 + C31872 * C6345 -
             C15390 * C6344) *
                C3351 +
            (C15383 * C6157 - C15389 * C6152 + C31872 * C6347 -
             C15390 * C6346) *
                C32053) *
               C17320) *
              C31925 * C211) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C15383 * C126 - C15389 * C119 + C31872 * C127 - C15390 * C120) *
                C3350 +
            (C15383 * C140 - C15389 * C131 + C31872 * C141 - C15390 * C132) *
                C32208 +
            (C16530 - C16531 + C16532 - C16533) * C3351 +
            (C16534 - C16535 + C16536 - C16537) * C32053) *
               C32009 +
           ((C15490 - C15491 + C15492 - C15493) * C3350 +
            (C15494 - C15495 + C15496 - C15497) * C32208 + C17200 * C3351 +
            C17201 * C32053) *
               C32016 +
           (C15530 * C3350 + C15531 * C32208 +
            (C16061 - C16060 + C16063 - C16062) * C3351 +
            (C16065 - C16064 + C16067 - C16066) * C32053) *
               C17320) *
              C31925 * C31911 * C110 +
          (((C15389 * C120 - C15383 * C127 + C15390 * C121 - C31872 * C128) *
                C3350 +
            (C15389 * C132 - C15383 * C141 + C15390 * C133 - C31872 * C142) *
                C32208 +
            (C16978 - C16979 + C16980 - C16981) * C3351 +
            (C16982 - C16983 + C16984 - C16985) * C32053) *
               C32009 +
           ((C15768 - C15769 + C15770 - C15771) * C3350 +
            (C15772 - C15773 + C15774 - C15775) * C32208 +
            (C16768 - C16769 + C16770 - C16771) * C3351 +
            (C16772 - C16773 + C16774 - C16775) * C32053) *
               C32016 +
           ((C15776 - C15777 + C15778 - C15779) * C3350 +
            (C15780 - C15781 + C15782 - C15783) * C32208 +
            (C15389 * C1051 - C15383 * C1060 + C15390 * C1052 -
             C31872 * C1061) *
                C3351 +
            (C15389 * C1063 - C15383 * C1078 + C15390 * C1064 -
             C31872 * C1079) *
                C32053) *
               C17320) *
              C31925 * C31911 * C111 +
          (((C15383 * C128 - C15389 * C121 + C31872 * C129 - C15390 * C122) *
                C3350 +
            (C15383 * C142 - C15389 * C133 + C31872 * C143 - C15390 * C134) *
                C32208 +
            (C15383 * C330 - C15389 * C320 + C31872 * C331 - C15390 * C321) *
                C3351 +
            (C15383 * C350 - C15389 * C335 + C31872 * C351 - C15390 * C336) *
                C32053) *
               C32009 +
           ((C15383 * C225 - C15389 * C215 + C31872 * C226 - C15390 * C216) *
                C3350 +
            (C15383 * C245 - C15389 * C230 + C31872 * C246 - C15390 * C231) *
                C32208 +
            (C15383 * C625 - C15389 * C620 + C31872 * C626 - C15390 * C621) *
                C3351 +
            (C15383 * C635 - C15389 * C630 + C31872 * C636 - C15390 * C631) *
                C32053) *
               C32016 +
           ((C15383 * C235 - C15389 * C220 + C31872 * C236 - C15390 * C221) *
                C3350 +
            (C15383 * C250 - C15389 * C240 + C31872 * C251 - C15390 * C241) *
                C32208 +
            (C15383 * C1061 - C15389 * C1052 + C31872 * C1407 -
             C15390 * C1406) *
                C3351 +
            (C15383 * C1079 - C15389 * C1064 + C31872 * C1409 -
             C15390 * C1408) *
                C32053) *
               C17320) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C15383 * C126 - C15389 * C119 + C31872 * C127 - C15390 * C120) *
                C3350 +
            (C15383 * C140 - C15389 * C131 + C31872 * C141 - C15390 * C132) *
                C32208 +
            (C16530 - C16531 + C16532 - C16533) * C3351 +
            (C16534 - C16535 + C16536 - C16537) * C32053) *
               C32009 +
           ((C15490 - C15491 + C15492 - C15493) * C3350 +
            (C15494 - C15495 + C15496 - C15497) * C32208 + C17200 * C3351 +
            C17201 * C32053) *
               C32016 +
           C19484 * C17320) *
              C315 +
          (((C16531 - C16530 + C16533 - C16532) * C3350 +
            (C16535 - C16534 + C16537 - C16536) * C32208 +
            (C16539 - C16538 + C16541 - C16540) * C3351 +
            (C16543 - C16542 + C16545 - C16544) * C32053) *
               C32009 +
           (C17202 * C3350 + C17203 * C32208 + C17204 * C3351 +
            C17205 * C32053) *
               C32016 +
           ((C16060 - C16061 + C16062 - C16063) * C3350 +
            (C16064 - C16065 + C16066 - C16067) * C32208 +
            (C16376 - C16377 + C16378 - C16379) * C3351 +
            (C16380 - C16381 + C16382 - C16383) * C32053) *
               C17320) *
              C316 +
          ((C16572 * C3350 + C16573 * C32208 +
            (C16551 - C16550 + C16553 - C16552) * C3351 +
            (C16555 - C16554 + C16557 - C16556) * C32053) *
               C32009 +
           (C16570 * C3350 + C16571 * C32208 +
            (C16559 - C16558 + C16561 - C16560) * C3351 +
            (C16563 - C16562 + C16565 - C16564) * C32053) *
               C32016 +
           ((C16377 - C16376 + C16379 - C16378) * C3350 +
            (C16381 - C16380 + C16383 - C16382) * C32208 +
            (C15383 * C6810 - C15389 * C6807 + C31872 * C7156 -
             C15390 * C7155) *
                C3351 +
            (C15383 * C6816 - C15389 * C6811 + C31872 * C7158 -
             C15390 * C7157) *
                C32053) *
               C17320) *
              C317) *
         C31911 * C31899) /
            (p * q * std::sqrt(p + q));
    d2ee[8] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C15383 * C126 - C15389 * C119 + C31872 * C127 - C15390 * C120) *
                 C3350 +
             (C15383 * C140 - C15389 * C131 + C31872 * C141 - C15390 * C132) *
                 C32208 +
             (C16530 - C16531 + C16532 - C16533) * C3351 +
             (C16534 - C16535 + C16536 - C16537) * C32053) *
                C32009 +
            ((C15490 - C15491 + C15492 - C15493) * C3350 +
             (C15494 - C15495 + C15496 - C15497) * C32208 + C17200 * C3351 +
             C17201 * C32053) *
                C32016 +
            C19484 * C17320) *
               C530 +
           (((C16531 - C16530 + C16533 - C16532) * C3350 +
             (C16535 - C16534 + C16537 - C16536) * C32208 +
             (C16539 - C16538 + C16541 - C16540) * C3351 +
             (C16543 - C16542 + C16545 - C16544) * C32053) *
                C32009 +
            (C17202 * C3350 + C17203 * C32208 + C17204 * C3351 +
             C17205 * C32053) *
                C32016 +
            ((C16060 - C16061 + C16062 - C16063) * C3350 +
             (C16064 - C16065 + C16066 - C16067) * C32208 +
             (C16376 - C16377 + C16378 - C16379) * C3351 +
             (C16380 - C16381 + C16382 - C16383) * C32053) *
                C17320) *
               C531) *
              C31911 * C442 +
          ((((C15389 * C120 - C15383 * C127 + C15390 * C121 - C31872 * C128) *
                 C3350 +
             (C15389 * C132 - C15383 * C141 + C15390 * C133 - C31872 * C142) *
                 C32208 +
             (C16978 - C16979 + C16980 - C16981) * C3351 +
             (C16982 - C16983 + C16984 - C16985) * C32053) *
                C32009 +
            ((C15768 - C15769 + C15770 - C15771) * C3350 +
             (C15772 - C15773 + C15774 - C15775) * C32208 +
             (C16768 - C16769 + C16770 - C16771) * C3351 +
             (C16772 - C16773 + C16774 - C16775) * C32053) *
                C32016 +
            ((C15776 - C15777 + C15778 - C15779) * C3350 +
             (C15780 - C15781 + C15782 - C15783) * C32208 +
             (C19825 - C19826 + C19827 - C19828) * C3351 +
             (C19829 - C19830 + C19831 - C19832) * C32053) *
                C17320) *
               C530 +
           (((C16979 - C16978 + C16981 - C16980) * C3350 +
             (C16983 - C16982 + C16985 - C16984) * C32208 +
             (C16987 - C16986 + C16989 - C16988) * C3351 +
             (C16991 - C16990 + C16993 - C16992) * C32053) *
                C32009 +
            ((C16769 - C16768 + C16771 - C16770) * C3350 +
             (C16773 - C16772 + C16775 - C16774) * C32208 +
             (C16777 - C16776 + C16779 - C16778) * C3351 +
             (C16781 - C16780 + C16783 - C16782) * C32053) *
                C32016 +
            ((C19826 - C19825 + C19828 - C19827) * C3350 +
             (C19830 - C19829 + C19832 - C19831) * C32208 +
             (C15383 * C1072 - C15389 * C1057 + C31872 * C1073 -
              C15390 * C1058) *
                 C3351 +
             (C15383 * C1084 - C15389 * C1075 + C31872 * C1085 -
              C15390 * C1076) *
                 C32053) *
                C17320) *
               C531) *
              C31911 * C443)) /
        (p * q * std::sqrt(p + q));
    d2ee[9] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15383 * C126 - C15389 * C119 + C31872 * C127 - C15390 * C120) *
                C3350 +
            (C15383 * C140 - C15389 * C131 + C31872 * C141 - C15390 * C132) *
                C32208 +
            (C16530 - C16531 + C16532 - C16533) * C3351 +
            (C16534 - C16535 + C16536 - C16537) * C32053) *
               C32009 +
           ((C15490 - C15491 + C15492 - C15493) * C3350 +
            (C15494 - C15495 + C15496 - C15497) * C32208 + C17200 * C3351 +
            C17201 * C32053) *
               C32016 +
           (C15530 * C3350 + C15531 * C32208 +
            (C16061 - C16060 + C16063 - C16062) * C3351 +
            (C16065 - C16064 + C16067 - C16066) * C32053) *
               C17320) *
              C31925 * C31911 * C110 +
          (((C15389 * C120 - C15383 * C127 + C15390 * C121 - C31872 * C128) *
                C3350 +
            (C15389 * C132 - C15383 * C141 + C15390 * C133 - C31872 * C142) *
                C32208 +
            (C16978 - C16979 + C16980 - C16981) * C3351 +
            (C16982 - C16983 + C16984 - C16985) * C32053) *
               C32009 +
           ((C15768 - C15769 + C15770 - C15771) * C3350 +
            (C15772 - C15773 + C15774 - C15775) * C32208 +
            (C16768 - C16769 + C16770 - C16771) * C3351 +
            (C16772 - C16773 + C16774 - C16775) * C32053) *
               C32016 +
           ((C15776 - C15777 + C15778 - C15779) * C3350 +
            (C15780 - C15781 + C15782 - C15783) * C32208 +
            (C15389 * C1051 - C15383 * C1060 + C15390 * C1052 -
             C31872 * C1061) *
                C3351 +
            (C15389 * C1063 - C15383 * C1078 + C15390 * C1064 -
             C31872 * C1079) *
                C32053) *
               C17320) *
              C31925 * C31911 * C111 +
          (((C15383 * C128 - C15389 * C121 + C31872 * C129 - C15390 * C122) *
                C3350 +
            (C15383 * C142 - C15389 * C133 + C31872 * C143 - C15390 * C134) *
                C32208 +
            (C15383 * C330 - C15389 * C320 + C31872 * C331 - C15390 * C321) *
                C3351 +
            (C15383 * C350 - C15389 * C335 + C31872 * C351 - C15390 * C336) *
                C32053) *
               C32009 +
           ((C15383 * C225 - C15389 * C215 + C31872 * C226 - C15390 * C216) *
                C3350 +
            (C15383 * C245 - C15389 * C230 + C31872 * C246 - C15390 * C231) *
                C32208 +
            (C15383 * C625 - C15389 * C620 + C31872 * C626 - C15390 * C621) *
                C3351 +
            (C15383 * C635 - C15389 * C630 + C31872 * C636 - C15390 * C631) *
                C32053) *
               C32016 +
           ((C15383 * C235 - C15389 * C220 + C31872 * C236 - C15390 * C221) *
                C3350 +
            (C15383 * C250 - C15389 * C240 + C31872 * C251 - C15390 * C241) *
                C32208 +
            (C15383 * C1061 - C15389 * C1052 + C31872 * C1407 -
             C15390 * C1406) *
                C3351 +
            (C15383 * C1079 - C15389 * C1064 + C31872 * C1409 -
             C15390 * C1408) *
                C32053) *
               C17320) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15383 * C126 - C15389 * C119 + C31872 * C127 - C15390 * C120) *
                C3350 +
            (C15383 * C140 - C15389 * C131 + C31872 * C141 - C15390 * C132) *
                C32208 +
            (C16530 - C16531 + C16532 - C16533) * C3351 +
            (C16534 - C16535 + C16536 - C16537) * C32053) *
               C32009 +
           ((C15490 - C15491 + C15492 - C15493) * C3350 +
            (C15494 - C15495 + C15496 - C15497) * C32208 + C17200 * C3351 +
            C17201 * C32053) *
               C32016 +
           C19484 * C17320) *
              C31925 * C209 +
          (((C15491 - C15490 + C15493 - C15492) * C3350 +
            (C15495 - C15494 + C15497 - C15496) * C32208 + C17202 * C3351 +
            C17203 * C32053) *
               C32009 +
           ((C15499 - C15498 + C15501 - C15500) * C3350 +
            (C15503 - C15502 + C15505 - C15504) * C32208 +
            (C16060 - C16061 + C16062 - C16063) * C3351 +
            (C16064 - C16065 + C16066 - C16067) * C32053) *
               C32016 +
           ((C15507 - C15506 + C15509 - C15508) * C3350 +
            (C15511 - C15510 + C15513 - C15512) * C32208 +
            (C16068 - C16069 + C16070 - C16071) * C3351 +
            (C16072 - C16073 + C16074 - C16075) * C32053) *
               C17320) *
              C31925 * C210 +
          (C19484 * C32009 +
           (C15532 * C3350 + C15533 * C32208 +
            (C16069 - C16068 + C16071 - C16070) * C3351 +
            (C16073 - C16072 + C16075 - C16074) * C32053) *
               C32016 +
           ((C15515 - C15514 + C15517 - C15516) * C3350 +
            (C15519 - C15518 + C15521 - C15520) * C32208 +
            (C15383 * C6151 - C15389 * C6148 + C31872 * C6345 -
             C15390 * C6344) *
                C3351 +
            (C15383 * C6157 - C15389 * C6152 + C31872 * C6347 -
             C15390 * C6346) *
                C32053) *
               C17320) *
              C31925 * C211) *
         C31899) /
            (p * q * std::sqrt(p + q));
    d2ee[10] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C15383 * C126 - C15389 * C119 + C31872 * C127 - C15390 * C120) *
                 C118 +
             (C15383 * C140 - C15389 * C131 + C31872 * C141 - C15390 * C132) *
                 C31966) *
                C32280 +
            ((C15490 - C15491 + C15492 - C15493) * C118 +
             (C15494 - C15495 + C15496 - C15497) * C31966) *
                C32276 +
            C15538 * C32266 + C15539 * C32248) *
               C31925 * C440 +
           (((C15491 - C15490 + C15493 - C15492) * C118 +
             (C15495 - C15494 + C15497 - C15496) * C31966) *
                C32280 +
            ((C15499 - C15498 + C15501 - C15500) * C118 +
             (C15503 - C15502 + C15505 - C15504) * C31966) *
                C32276 +
            ((C15507 - C15506 + C15509 - C15508) * C118 +
             (C15511 - C15510 + C15513 - C15512) * C31966) *
                C32266 +
            ((C15514 - C15515 + C15516 - C15517) * C118 +
             (C15518 - C15519 + C15520 - C15521) * C31966) *
                C32248) *
               C31925 * C441) *
              C442 +
          ((((C15389 * C120 - C15383 * C127 + C15390 * C121 - C31872 * C128) *
                 C118 +
             (C15389 * C132 - C15383 * C141 + C15390 * C133 - C31872 * C142) *
                 C31966) *
                C32280 +
            ((C15768 - C15769 + C15770 - C15771) * C118 +
             (C15772 - C15773 + C15774 - C15775) * C31966) *
                C32276 +
            ((C15776 - C15777 + C15778 - C15779) * C118 +
             (C15780 - C15781 + C15782 - C15783) * C31966) *
                C32266 +
            ((C15784 - C15785 + C15786 - C15787) * C118 +
             (C15788 - C15789 + C15790 - C15791) * C31966) *
                C32248) *
               C31925 * C440 +
           (((C15769 - C15768 + C15771 - C15770) * C118 +
             (C15773 - C15772 + C15775 - C15774) * C31966) *
                C32280 +
            ((C15777 - C15776 + C15779 - C15778) * C118 +
             (C15781 - C15780 + C15783 - C15782) * C31966) *
                C32276 +
            ((C15785 - C15784 + C15787 - C15786) * C118 +
             (C15789 - C15788 + C15791 - C15790) * C31966) *
                C32266 +
            ((C15383 * C880 - C15389 * C871 + C31872 * C881 - C15390 * C872) *
                 C118 +
             (C15383 * C889 - C15389 * C883 + C31872 * C890 - C15390 * C884) *
                 C31966) *
                C32248) *
               C31925 * C441) *
              C443)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C32279 * C126 - C14631 * C119 + C32272 * C127 - C14632 * C120 +
              C32259 * C128 - C14633 * C121 + C32242 * C129 - C14634 * C122) *
                 C118 +
             (C32279 * C140 - C14631 * C131 + C32272 * C141 - C14632 * C132 +
              C32259 * C142 - C14633 * C133 + C32242 * C143 - C14634 * C134) *
                 C31966) *
                C14629 +
            ((C14734 - C14735 + C14736 - C14737 + C14738 - C14739 + C14740 -
              C14741) *
                 C118 +
             (C14742 - C14743 + C14744 - C14745 + C14746 - C14747 + C14748 -
              C14749) *
                 C31966) *
                C32013) *
               C31925 * C440 +
           (((C14735 - C14734 + C14737 - C14736 + C14739 - C14738 + C14741 -
              C14740) *
                 C118 +
             (C14743 - C14742 + C14745 - C14744 + C14747 - C14746 + C14749 -
              C14748) *
                 C31966) *
                C14629 +
            ((C14750 - C14751 + C14752 - C14753 + C14754 - C14755 + C14756 -
              C14757) *
                 C118 +
             (C14758 - C14759 + C14760 - C14761 + C14762 - C14763 + C14764 -
              C14765) *
                 C31966) *
                C32013) *
               C31925 * C441) *
              C442 +
          ((((C14631 * C120 - C32279 * C127 + C14632 * C121 - C32272 * C128 +
              C14633 * C122 - C32259 * C129 + C14634 * C123 - C32242 * C130) *
                 C118 +
             (C14631 * C132 - C32279 * C141 + C14632 * C133 - C32272 * C142 +
              C14633 * C134 - C32259 * C143 + C14634 * C135 - C32242 * C144) *
                 C31966) *
                C14629 +
            ((C14994 - C14995 + C14996 - C14997 + C14998 - C14999 + C15000 -
              C15001) *
                 C118 +
             (C15002 - C15003 + C15004 - C15005 + C15006 - C15007 + C15008 -
              C15009) *
                 C31966) *
                C32013) *
               C31925 * C440 +
           (((C14995 - C14994 + C14997 - C14996 + C14999 - C14998 + C15001 -
              C15000) *
                 C118 +
             (C15003 - C15002 + C15005 - C15004 + C15007 - C15006 + C15009 -
              C15008) *
                 C31966) *
                C14629 +
            ((C32279 * C234 - C14631 * C219 + C32272 * C235 - C14632 * C220 +
              C32259 * C236 - C14633 * C221 + C32242 * C237 - C14634 * C222) *
                 C118 +
             (C32279 * C249 - C14631 * C239 + C32272 * C250 - C14632 * C240 +
              C32259 * C251 - C14633 * C241 + C32242 * C252 - C14634 * C242) *
                 C31966) *
                C32013) *
               C31925 * C441) *
              C443)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C15383 * C126 - C15389 * C119 + C31872 * C127 - C15390 * C120) *
                 C1705 +
             (C15383 * C140 - C15389 * C131 + C31872 * C141 - C15390 * C132) *
                 C32274 +
             (C16530 - C16531 + C16532 - C16533) * C1706 +
             (C16534 - C16535 + C16536 - C16537) * C32263 + C16572 * C1707 +
             C16573 * C32241) *
                C14629 +
            ((C15490 - C15491 + C15492 - C15493) * C1705 +
             (C15494 - C15495 + C15496 - C15497) * C32274 +
             (C16053 - C16052 + C16055 - C16054) * C1706 +
             (C16057 - C16056 + C16059 - C16058) * C32263 + C16570 * C1707 +
             C16571 * C32241) *
                C32013) *
               C31925 * C440 +
           (((C15491 - C15490 + C15493 - C15492) * C1705 +
             (C15495 - C15494 + C15497 - C15496) * C32274 +
             (C16052 - C16053 + C16054 - C16055) * C1706 +
             (C16056 - C16057 + C16058 - C16059) * C32263 +
             (C16369 - C16368 + C16371 - C16370) * C1707 +
             (C16373 - C16372 + C16375 - C16374) * C32241) *
                C14629 +
            ((C15499 - C15498 + C15501 - C15500) * C1705 +
             (C15503 - C15502 + C15505 - C15504) * C32274 +
             (C16060 - C16061 + C16062 - C16063) * C1706 +
             (C16064 - C16065 + C16066 - C16067) * C32263 +
             (C16376 - C16377 + C16378 - C16379) * C1707 +
             (C16380 - C16381 + C16382 - C16383) * C32241) *
                C32013) *
               C31925 * C441) *
              C442 +
          ((((C15389 * C120 - C15383 * C127 + C15390 * C121 - C31872 * C128) *
                 C1705 +
             (C15389 * C132 - C15383 * C141 + C15390 * C133 - C31872 * C142) *
                 C32274 +
             (C15389 * C319 - C15383 * C329 + C15390 * C320 - C31872 * C330) *
                 C1706 +
             (C15389 * C334 - C15383 * C349 + C15390 * C335 - C31872 * C350) *
                 C32263 +
             (C15389 * C324 - C15383 * C339 + C15390 * C325 - C31872 * C340) *
                 C1707 +
             (C15389 * C344 - C15383 * C354 + C15390 * C345 - C31872 * C355) *
                 C32241) *
                C14629 +
            ((C15768 - C15769 + C15770 - C15771) * C1705 +
             (C15772 - C15773 + C15774 - C15775) * C32274 +
             (C16768 - C16769 + C16770 - C16771) * C1706 +
             (C16772 - C16773 + C16774 - C16775) * C32263 +
             (C16776 - C16777 + C16778 - C16779) * C1707 +
             (C16780 - C16781 + C16782 - C16783) * C32241) *
                C32013) *
               C31925 * C440 +
           (((C15769 - C15768 + C15771 - C15770) * C1705 +
             (C15773 - C15772 + C15775 - C15774) * C32274 +
             (C16769 - C16768 + C16771 - C16770) * C1706 +
             (C16773 - C16772 + C16775 - C16774) * C32263 +
             (C16777 - C16776 + C16779 - C16778) * C1707 +
             (C16781 - C16780 + C16783 - C16782) * C32241) *
                C14629 +
            ((C15777 - C15776 + C15779 - C15778) * C1705 +
             (C15781 - C15780 + C15783 - C15782) * C32274 +
             (C15383 * C1060 - C15389 * C1051 + C31872 * C1061 -
              C15390 * C1052) *
                 C1706 +
             (C15383 * C1078 - C15389 * C1063 + C31872 * C1079 -
              C15390 * C1064) *
                 C32263 +
             (C15383 * C1072 - C15389 * C1057 + C31872 * C1073 -
              C15390 * C1058) *
                 C1707 +
             (C15383 * C1084 - C15389 * C1075 + C31872 * C1085 -
              C15390 * C1076) *
                 C32241) *
                C32013) *
               C31925 * C441) *
              C443)) /
            (p * q * std::sqrt(p + q));
    d2ee[11] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C15383 * C126 - C15389 * C119 + C31872 * C127 - C15390 * C120) *
                 C118 +
             (C15383 * C140 - C15389 * C131 + C31872 * C141 - C15390 * C132) *
                 C31966) *
                C32280 +
            ((C15490 - C15491 + C15492 - C15493) * C118 +
             (C15494 - C15495 + C15496 - C15497) * C31966) *
                C32276 +
            C15538 * C32266 + C15539 * C32248) *
               C530 +
           (((C15389 * C318 - C15383 * C328 + C15390 * C319 - C31872 * C329) *
                 C118 +
             (C15389 * C333 - C15383 * C348 + C15390 * C334 - C31872 * C349) *
                 C31966) *
                C32280 +
            ((C16052 - C16053 + C16054 - C16055) * C118 +
             (C16056 - C16057 + C16058 - C16059) * C31966) *
                C32276 +
            ((C16060 - C16061 + C16062 - C16063) * C118 +
             (C16064 - C16065 + C16066 - C16067) * C31966) *
                C32266 +
            ((C16068 - C16069 + C16070 - C16071) * C118 +
             (C16072 - C16073 + C16074 - C16075) * C31966) *
                C32248) *
               C531) *
              C440 +
          ((((C15491 - C15490 + C15493 - C15492) * C118 +
             (C15495 - C15494 + C15497 - C15496) * C31966) *
                C32280 +
            ((C15499 - C15498 + C15501 - C15500) * C118 +
             (C15503 - C15502 + C15505 - C15504) * C31966) *
                C32276 +
            ((C15507 - C15506 + C15509 - C15508) * C118 +
             (C15511 - C15510 + C15513 - C15512) * C31966) *
                C32266 +
            ((C15514 - C15515 + C15516 - C15517) * C118 +
             (C15518 - C15519 + C15520 - C15521) * C31966) *
                C32248) *
               C530 +
           (((C16053 - C16052 + C16055 - C16054) * C118 +
             (C16057 - C16056 + C16059 - C16058) * C31966) *
                C32280 +
            ((C16061 - C16060 + C16063 - C16062) * C118 +
             (C16065 - C16064 + C16067 - C16066) * C31966) *
                C32276 +
            ((C16069 - C16068 + C16071 - C16070) * C118 +
             (C16073 - C16072 + C16075 - C16074) * C31966) *
                C32266 +
            ((C15383 * C6151 - C15389 * C6148 + C31872 * C6345 -
              C15390 * C6344) *
                 C118 +
             (C15383 * C6157 - C15389 * C6152 + C31872 * C6347 -
              C15390 * C6346) *
                 C31966) *
                C32248) *
               C531) *
              C441) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C32279 * C126 - C14631 * C119 + C32272 * C127 - C14632 * C120 +
              C32259 * C128 - C14633 * C121 + C32242 * C129 - C14634 * C122) *
                 C118 +
             (C32279 * C140 - C14631 * C131 + C32272 * C141 - C14632 * C132 +
              C32259 * C142 - C14633 * C133 + C32242 * C143 - C14634 * C134) *
                 C31966) *
                C14629 +
            ((C14734 - C14735 + C14736 - C14737 + C14738 - C14739 + C14740 -
              C14741) *
                 C118 +
             (C14742 - C14743 + C14744 - C14745 + C14746 - C14747 + C14748 -
              C14749) *
                 C31966) *
                C32013) *
               C530 +
           (((C14631 * C318 - C32279 * C328 + C14632 * C319 - C32272 * C329 +
              C14633 * C320 - C32259 * C330 + C14634 * C321 - C32242 * C331) *
                 C118 +
             (C14631 * C333 - C32279 * C348 + C14632 * C334 - C32272 * C349 +
              C14633 * C335 - C32259 * C350 + C14634 * C336 - C32242 * C351) *
                 C31966) *
                C14629 +
            ((C15270 - C15271 + C15272 - C15273 + C15274 - C15275 + C15276 -
              C15277) *
                 C118 +
             (C15278 - C15279 + C15280 - C15281 + C15282 - C15283 + C15284 -
              C15285) *
                 C31966) *
                C32013) *
               C531) *
              C440 +
          ((((C14735 - C14734 + C14737 - C14736 + C14739 - C14738 + C14741 -
              C14740) *
                 C118 +
             (C14743 - C14742 + C14745 - C14744 + C14747 - C14746 + C14749 -
              C14748) *
                 C31966) *
                C14629 +
            ((C14750 - C14751 + C14752 - C14753 + C14754 - C14755 + C14756 -
              C14757) *
                 C118 +
             (C14758 - C14759 + C14760 - C14761 + C14762 - C14763 + C14764 -
              C14765) *
                 C31966) *
                C32013) *
               C530 +
           (((C15271 - C15270 + C15273 - C15272 + C15275 - C15274 + C15277 -
              C15276) *
                 C118 +
             (C15279 - C15278 + C15281 - C15280 + C15283 - C15282 + C15285 -
              C15284) *
                 C31966) *
                C14629 +
            ((C32279 * C1059 - C14631 * C1050 + C32272 * C1060 -
              C14632 * C1051 + C32259 * C1061 - C14633 * C1052 +
              C32242 * C1407 - C14634 * C1406) *
                 C118 +
             (C32279 * C1077 - C14631 * C1062 + C32272 * C1078 -
              C14632 * C1063 + C32259 * C1079 - C14633 * C1064 +
              C32242 * C1409 - C14634 * C1408) *
                 C31966) *
                C32013) *
               C531) *
              C441) *
         C31899) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C15383 * C126 - C15389 * C119 + C31872 * C127 - C15390 * C120) *
                 C1705 +
             (C15383 * C140 - C15389 * C131 + C31872 * C141 - C15390 * C132) *
                 C32274 +
             (C16530 - C16531 + C16532 - C16533) * C1706 +
             (C16534 - C16535 + C16536 - C16537) * C32263 + C16572 * C1707 +
             C16573 * C32241) *
                C14629 +
            ((C15490 - C15491 + C15492 - C15493) * C1705 +
             (C15494 - C15495 + C15496 - C15497) * C32274 + C17200 * C1706 +
             C17201 * C32263 + C16570 * C1707 + C16571 * C32241) *
                C32013) *
               C530 +
           (((C16531 - C16530 + C16533 - C16532) * C1705 +
             (C16535 - C16534 + C16537 - C16536) * C32274 +
             (C16539 - C16538 + C16541 - C16540) * C1706 +
             (C16543 - C16542 + C16545 - C16544) * C32263 +
             (C16550 - C16551 + C16552 - C16553) * C1707 +
             (C16554 - C16555 + C16556 - C16557) * C32241) *
                C14629 +
            (C17202 * C1705 + C17203 * C32274 + C17204 * C1706 +
             C17205 * C32263 + (C16558 - C16559 + C16560 - C16561) * C1707 +
             (C16562 - C16563 + C16564 - C16565) * C32241) *
                C32013) *
               C531) *
              C440 +
          ((((C15491 - C15490 + C15493 - C15492) * C1705 +
             (C15495 - C15494 + C15497 - C15496) * C32274 + C17202 * C1706 +
             C17203 * C32263 + C17204 * C1707 + C17205 * C32241) *
                C14629 +
            ((C15499 - C15498 + C15501 - C15500) * C1705 +
             (C15503 - C15502 + C15505 - C15504) * C32274 +
             (C16060 - C16061 + C16062 - C16063) * C1706 +
             (C16064 - C16065 + C16066 - C16067) * C32263 +
             (C16376 - C16377 + C16378 - C16379) * C1707 +
             (C16380 - C16381 + C16382 - C16383) * C32241) *
                C32013) *
               C530 +
           ((C17200 * C1705 + C17201 * C32274 + C16570 * C1706 +
             C16571 * C32263 + (C16559 - C16558 + C16561 - C16560) * C1707 +
             (C16563 - C16562 + C16565 - C16564) * C32241) *
                C14629 +
            ((C16061 - C16060 + C16063 - C16062) * C1705 +
             (C16065 - C16064 + C16067 - C16066) * C32274 +
             (C16377 - C16376 + C16379 - C16378) * C1706 +
             (C16381 - C16380 + C16383 - C16382) * C32263 +
             (C15383 * C6810 - C15389 * C6807 + C31872 * C7156 -
              C15390 * C7155) *
                 C1707 +
             (C15383 * C6816 - C15389 * C6811 + C31872 * C7158 -
              C15390 * C7157) *
                 C32241) *
                C32013) *
               C531) *
              C441) *
         C31899) /
            (p * q * std::sqrt(p + q));
    d2ee[12] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C32279 * C126 - C14631 * C119 + C32272 * C127 - C14632 * C120 +
                 C32259 * C128 - C14633 * C121 + C32242 * C129 -
                 C14634 * C122) *
                    C118 +
                (C32279 * C140 - C14631 * C131 + C32272 * C141 - C14632 * C132 +
                 C32259 * C142 - C14633 * C133 + C32242 * C143 -
                 C14634 * C134) *
                    C31966) *
                   C14629 +
               ((C32279 * C223 - C14631 * C213 + C32272 * C224 - C14632 * C214 +
                 C32259 * C225 - C14633 * C215 + C32242 * C226 -
                 C14634 * C216) *
                    C118 +
                (C32279 * C243 - C14631 * C228 + C32272 * C244 - C14632 * C229 +
                 C32259 * C245 - C14633 * C230 + C32242 * C246 -
                 C14634 * C231) *
                    C31966) *
                   C32013) *
                  C31925 * C31911 * C110 +
              (((C14631 * C120 - C32279 * C127 + C14632 * C121 - C32272 * C128 +
                 C14633 * C122 - C32259 * C129 + C14634 * C123 -
                 C32242 * C130) *
                    C118 +
                (C14631 * C132 - C32279 * C141 + C14632 * C133 - C32272 * C142 +
                 C14633 * C134 - C32259 * C143 + C14634 * C135 -
                 C32242 * C144) *
                    C31966) *
                   C14629 +
               ((C14631 * C214 - C32279 * C224 + C14632 * C215 - C32272 * C225 +
                 C14633 * C216 - C32259 * C226 + C14634 * C217 -
                 C32242 * C227) *
                    C118 +
                (C14631 * C229 - C32279 * C244 + C14632 * C230 - C32272 * C245 +
                 C14633 * C231 - C32259 * C246 + C14634 * C232 -
                 C32242 * C247) *
                    C31966) *
                   C32013) *
                  C31925 * C31911 * C111 +
              (((C32279 * C128 - C14631 * C121 + C32272 * C129 - C14632 * C122 +
                 C32259 * C130 - C14633 * C123 + C32242 * C136 -
                 C14634 * C124) *
                    C118 +
                (C32279 * C142 - C14631 * C133 + C32272 * C143 - C14632 * C134 +
                 C32259 * C144 - C14633 * C135 + C32242 * C145 -
                 C14634 * C137) *
                    C31966) *
                   C14629 +
               ((C32279 * C225 - C14631 * C215 + C32272 * C226 - C14632 * C216 +
                 C32259 * C227 - C14633 * C217 + C32242 * C445 -
                 C14634 * C444) *
                    C118 +
                (C32279 * C245 - C14631 * C230 + C32272 * C246 - C14632 * C231 +
                 C32259 * C247 - C14633 * C232 + C32242 * C447 -
                 C14634 * C446) *
                    C31966) *
                   C32013) *
                  C31925 * C31911 * C112) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C32279 * C126 - C14631 * C119 + C32272 * C127 - C14632 * C120 +
                 C32259 * C128 - C14633 * C121 + C32242 * C129 -
                 C14634 * C122) *
                    C118 +
                (C32279 * C140 - C14631 * C131 + C32272 * C141 - C14632 * C132 +
                 C32259 * C142 - C14633 * C133 + C32242 * C143 -
                 C14634 * C134) *
                    C31966) *
                   C14629 +
               ((C14734 - C14735 + C14736 - C14737 + C14738 - C14739 + C14740 -
                 C14741) *
                    C118 +
                (C14742 - C14743 + C14744 - C14745 + C14746 - C14747 + C14748 -
                 C14749) *
                    C31966) *
                   C32013) *
                  C31925 * C209 +
              (((C14735 - C14734 + C14737 - C14736 + C14739 - C14738 + C14741 -
                 C14740) *
                    C118 +
                (C14743 - C14742 + C14745 - C14744 + C14747 - C14746 + C14749 -
                 C14748) *
                    C31966) *
                   C14629 +
               ((C14750 - C14751 + C14752 - C14753 + C14754 - C14755 + C14756 -
                 C14757) *
                    C118 +
                (C14758 - C14759 + C14760 - C14761 + C14762 - C14763 + C14764 -
                 C14765) *
                    C31966) *
                   C32013) *
                  C31925 * C210 +
              (((C14751 - C14750 + C14753 - C14752 + C14755 - C14754 + C14757 -
                 C14756) *
                    C118 +
                (C14759 - C14758 + C14761 - C14760 + C14763 - C14762 + C14765 -
                 C14764) *
                    C31966) *
                   C14629 +
               ((C32279 * C873 - C14631 * C867 + C32272 * C874 - C14632 * C868 +
                 C32259 * C875 - C14633 * C869 + C32242 * C1233 -
                 C14634 * C1232) *
                    C118 +
                (C32279 * C885 - C14631 * C876 + C32272 * C886 - C14632 * C877 +
                 C32259 * C887 - C14633 * C878 + C32242 * C1235 -
                 C14634 * C1234) *
                    C31966) *
                   C32013) *
                  C31925 * C211) *
             C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C32279 * C126 - C14631 * C119 + C32272 * C127 - C14632 * C120 +
             C32259 * C128 - C14633 * C121 + C32242 * C129 - C14634 * C122) *
                C118 +
            (C32279 * C140 - C14631 * C131 + C32272 * C141 - C14632 * C132 +
             C32259 * C142 - C14633 * C133 + C32242 * C143 - C14634 * C134) *
                C31966) *
               C14629 +
           ((C14734 - C14735 + C14736 - C14737 + C14738 - C14739 + C14740 -
             C14741) *
                C118 +
            (C14742 - C14743 + C14744 - C14745 + C14746 - C14747 + C14748 -
             C14749) *
                C31966) *
               C32013) *
              C315 +
          (((C14631 * C318 - C32279 * C328 + C14632 * C319 - C32272 * C329 +
             C14633 * C320 - C32259 * C330 + C14634 * C321 - C32242 * C331) *
                C118 +
            (C14631 * C333 - C32279 * C348 + C14632 * C334 - C32272 * C349 +
             C14633 * C335 - C32259 * C350 + C14634 * C336 - C32242 * C351) *
                C31966) *
               C14629 +
           ((C14631 * C618 - C32279 * C623 + C14632 * C619 - C32272 * C624 +
             C14633 * C620 - C32259 * C625 + C14634 * C621 - C32242 * C626) *
                C118 +
            (C14631 * C628 - C32279 * C633 + C14632 * C629 - C32272 * C634 +
             C14633 * C630 - C32259 * C635 + C14634 * C631 - C32242 * C636) *
                C31966) *
               C32013) *
              C316 +
          (((C32279 * C338 - C14631 * C323 + C32272 * C339 - C14632 * C324 +
             C32259 * C340 - C14633 * C325 + C32242 * C341 - C14634 * C326) *
                C118 +
            (C32279 * C353 - C14631 * C343 + C32272 * C354 - C14632 * C344 +
             C32259 * C355 - C14633 * C345 + C32242 * C356 - C14634 * C346) *
                C31966) *
               C14629 +
           ((C32279 * C1065 - C14631 * C1053 + C32272 * C1066 - C14632 * C1054 +
             C32259 * C1067 - C14633 * C1055 + C32242 * C2145 -
             C14634 * C2144) *
                C118 +
            (C32279 * C1080 - C14631 * C1068 + C32272 * C1081 - C14632 * C1069 +
             C32259 * C1082 - C14633 * C1070 + C32242 * C2147 -
             C14634 * C2146) *
                C31966) *
               C32013) *
              C317) *
         C31911 * C31899) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C15383 * C126 - C15389 * C119 + C31872 * C127 - C15390 * C120) *
                C118 +
            (C15383 * C140 - C15389 * C131 + C31872 * C141 - C15390 * C132) *
                C31966) *
               C32280 +
           ((C15383 * C223 - C15389 * C213 + C31872 * C224 - C15390 * C214) *
                C118 +
            (C15383 * C243 - C15389 * C228 + C31872 * C244 - C15390 * C229) *
                C31966) *
               C32276 +
           ((C15383 * C233 - C15389 * C218 + C31872 * C234 - C15390 * C219) *
                C118 +
            (C15383 * C248 - C15389 * C238 + C31872 * C249 - C15390 * C239) *
                C31966) *
               C32266 +
           ((C15383 * C873 - C15389 * C867 + C31872 * C874 - C15390 * C868) *
                C118 +
            (C15383 * C885 - C15389 * C876 + C31872 * C886 - C15390 * C877) *
                C31966) *
               C32248) *
              C31925 * C31911 * C110 +
          (((C15389 * C120 - C15383 * C127 + C15390 * C121 - C31872 * C128) *
                C118 +
            (C15389 * C132 - C15383 * C141 + C15390 * C133 - C31872 * C142) *
                C31966) *
               C32280 +
           ((C15389 * C214 - C15383 * C224 + C15390 * C215 - C31872 * C225) *
                C118 +
            (C15389 * C229 - C15383 * C244 + C15390 * C230 - C31872 * C245) *
                C31966) *
               C32276 +
           ((C15389 * C219 - C15383 * C234 + C15390 * C220 - C31872 * C235) *
                C118 +
            (C15389 * C239 - C15383 * C249 + C15390 * C240 - C31872 * C250) *
                C31966) *
               C32266 +
           ((C15389 * C868 - C15383 * C874 + C15390 * C869 - C31872 * C875) *
                C118 +
            (C15389 * C877 - C15383 * C886 + C15390 * C878 - C31872 * C887) *
                C31966) *
               C32248) *
              C31925 * C31911 * C111 +
          (((C15383 * C128 - C15389 * C121 + C31872 * C129 - C15390 * C122) *
                C118 +
            (C15383 * C142 - C15389 * C133 + C31872 * C143 - C15390 * C134) *
                C31966) *
               C32280 +
           ((C15383 * C225 - C15389 * C215 + C31872 * C226 - C15390 * C216) *
                C118 +
            (C15383 * C245 - C15389 * C230 + C31872 * C246 - C15390 * C231) *
                C31966) *
               C32276 +
           ((C15383 * C235 - C15389 * C220 + C31872 * C236 - C15390 * C221) *
                C118 +
            (C15383 * C250 - C15389 * C240 + C31872 * C251 - C15390 * C241) *
                C31966) *
               C32266 +
           ((C15383 * C875 - C15389 * C869 + C31872 * C1233 - C15390 * C1232) *
                C118 +
            (C15383 * C887 - C15389 * C878 + C31872 * C1235 - C15390 * C1234) *
                C31966) *
               C32248) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C15383 * C126 - C15389 * C119 + C31872 * C127 - C15390 * C120) *
                C118 +
            (C15383 * C140 - C15389 * C131 + C31872 * C141 - C15390 * C132) *
                C31966) *
               C32280 +
           ((C15490 - C15491 + C15492 - C15493) * C118 +
            (C15494 - C15495 + C15496 - C15497) * C31966) *
               C32276 +
           C15538 * C32266 + C15539 * C32248) *
              C31925 * C209 +
          (((C15491 - C15490 + C15493 - C15492) * C118 +
            (C15495 - C15494 + C15497 - C15496) * C31966) *
               C32280 +
           ((C15499 - C15498 + C15501 - C15500) * C118 +
            (C15503 - C15502 + C15505 - C15504) * C31966) *
               C32276 +
           ((C15507 - C15506 + C15509 - C15508) * C118 +
            (C15511 - C15510 + C15513 - C15512) * C31966) *
               C32266 +
           ((C15514 - C15515 + C15516 - C15517) * C118 +
            (C15518 - C15519 + C15520 - C15521) * C31966) *
               C32248) *
              C31925 * C210 +
          (C15538 * C32280 + C15539 * C32276 +
           ((C15515 - C15514 + C15517 - C15516) * C118 +
            (C15519 - C15518 + C15521 - C15520) * C31966) *
               C32266 +
           ((C15383 * C6045 - C15389 * C6043 + C31872 * C6243 -
             C15390 * C6242) *
                C118 +
            (C15383 * C6049 - C15389 * C6046 + C31872 * C6245 -
             C15390 * C6244) *
                C31966) *
               C32248) *
              C31925 * C211) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15383 * C126 - C15389 * C119 + C31872 * C127 - C15390 * C120) *
                C118 +
            (C15383 * C140 - C15389 * C131 + C31872 * C141 - C15390 * C132) *
                C31966) *
               C32280 +
           ((C15490 - C15491 + C15492 - C15493) * C118 +
            (C15494 - C15495 + C15496 - C15497) * C31966) *
               C32276 +
           C15538 * C32266 + C15539 * C32248) *
              C315 +
          (((C15389 * C318 - C15383 * C328 + C15390 * C319 - C31872 * C329) *
                C118 +
            (C15389 * C333 - C15383 * C348 + C15390 * C334 - C31872 * C349) *
                C31966) *
               C32280 +
           ((C15389 * C618 - C15383 * C623 + C15390 * C619 - C31872 * C624) *
                C118 +
            (C15389 * C628 - C15383 * C633 + C15390 * C629 - C31872 * C634) *
                C31966) *
               C32276 +
           ((C15389 * C1050 - C15383 * C1059 + C15390 * C1051 -
             C31872 * C1060) *
                C118 +
            (C15389 * C1062 - C15383 * C1077 + C15390 * C1063 -
             C31872 * C1078) *
                C31966) *
               C32266 +
           ((C15389 * C1556 - C15383 * C1559 + C15390 * C1557 -
             C31872 * C1560) *
                C118 +
            (C15389 * C1562 - C15383 * C1565 + C15390 * C1563 -
             C31872 * C1566) *
                C31966) *
               C32248) *
              C316 +
          (((C15383 * C338 - C15389 * C323 + C31872 * C339 - C15390 * C324) *
                C118 +
            (C15383 * C353 - C15389 * C343 + C31872 * C354 - C15390 * C344) *
                C31966) *
               C32280 +
           ((C15383 * C1065 - C15389 * C1053 + C31872 * C1066 -
             C15390 * C1054) *
                C118 +
            (C15383 * C1080 - C15389 * C1068 + C31872 * C1081 -
             C15390 * C1069) *
                C31966) *
               C32276 +
           ((C15383 * C1071 - C15389 * C1056 + C31872 * C1072 -
             C15390 * C1057) *
                C118 +
            (C15383 * C1083 - C15389 * C1074 + C31872 * C1084 -
             C15390 * C1075) *
                C31966) *
               C32266 +
           ((C15383 * C6153 - C15389 * C6149 + C31872 * C6990 -
             C15390 * C6989) *
                C118 +
            (C15383 * C6158 - C15389 * C6154 + C31872 * C6992 -
             C15390 * C6991) *
                C31966) *
               C32248) *
              C317) *
         C31911 * C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15383 * C126 - C15389 * C119 + C31872 * C127 - C15390 * C120) *
                C1705 +
            (C15383 * C140 - C15389 * C131 + C31872 * C141 - C15390 * C132) *
                C32274 +
            (C15383 * C328 - C15389 * C318 + C31872 * C329 - C15390 * C319) *
                C1706 +
            (C15383 * C348 - C15389 * C333 + C31872 * C349 - C15390 * C334) *
                C32263 +
            (C15383 * C338 - C15389 * C323 + C31872 * C339 - C15390 * C324) *
                C1707 +
            (C15383 * C353 - C15389 * C343 + C31872 * C354 - C15390 * C344) *
                C32241) *
               C14629 +
           ((C15490 - C15491 + C15492 - C15493) * C1705 +
            (C15494 - C15495 + C15496 - C15497) * C32274 +
            (C16053 - C16052 + C16055 - C16054) * C1706 +
            (C16057 - C16056 + C16059 - C16058) * C32263 +
            (C15383 * C1065 - C15389 * C1053 + C31872 * C1066 -
             C15390 * C1054) *
                C1707 +
            (C15383 * C1080 - C15389 * C1068 + C31872 * C1081 -
             C15390 * C1069) *
                C32241) *
               C32013) *
              C31925 * C31911 * C110 +
          (((C15389 * C120 - C15383 * C127 + C15390 * C121 - C31872 * C128) *
                C1705 +
            (C15389 * C132 - C15383 * C141 + C15390 * C133 - C31872 * C142) *
                C32274 +
            (C15389 * C319 - C15383 * C329 + C15390 * C320 - C31872 * C330) *
                C1706 +
            (C15389 * C334 - C15383 * C349 + C15390 * C335 - C31872 * C350) *
                C32263 +
            (C15389 * C324 - C15383 * C339 + C15390 * C325 - C31872 * C340) *
                C1707 +
            (C15389 * C344 - C15383 * C354 + C15390 * C345 - C31872 * C355) *
                C32241) *
               C14629 +
           ((C15768 - C15769 + C15770 - C15771) * C1705 +
            (C15772 - C15773 + C15774 - C15775) * C32274 +
            (C15389 * C619 - C15383 * C624 + C15390 * C620 - C31872 * C625) *
                C1706 +
            (C15389 * C629 - C15383 * C634 + C15390 * C630 - C31872 * C635) *
                C32263 +
            (C15389 * C1054 - C15383 * C1066 + C15390 * C1055 -
             C31872 * C1067) *
                C1707 +
            (C15389 * C1069 - C15383 * C1081 + C15390 * C1070 -
             C31872 * C1082) *
                C32241) *
               C32013) *
              C31925 * C31911 * C111 +
          (((C15383 * C128 - C15389 * C121 + C31872 * C129 - C15390 * C122) *
                C1705 +
            (C15383 * C142 - C15389 * C133 + C31872 * C143 - C15390 * C134) *
                C32274 +
            (C15383 * C330 - C15389 * C320 + C31872 * C331 - C15390 * C321) *
                C1706 +
            (C15383 * C350 - C15389 * C335 + C31872 * C351 - C15390 * C336) *
                C32263 +
            (C15383 * C340 - C15389 * C325 + C31872 * C341 - C15390 * C326) *
                C1707 +
            (C15383 * C355 - C15389 * C345 + C31872 * C356 - C15390 * C346) *
                C32241) *
               C14629 +
           ((C15383 * C225 - C15389 * C215 + C31872 * C226 - C15390 * C216) *
                C1705 +
            (C15383 * C245 - C15389 * C230 + C31872 * C246 - C15390 * C231) *
                C32274 +
            (C15383 * C625 - C15389 * C620 + C31872 * C626 - C15390 * C621) *
                C1706 +
            (C15383 * C635 - C15389 * C630 + C31872 * C636 - C15390 * C631) *
                C32263 +
            (C15383 * C1067 - C15389 * C1055 + C31872 * C2145 -
             C15390 * C2144) *
                C1707 +
            (C15383 * C1082 - C15389 * C1070 + C31872 * C2147 -
             C15390 * C2146) *
                C32241) *
               C32013) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15383 * C126 - C15389 * C119 + C31872 * C127 - C15390 * C120) *
                C1705 +
            (C15383 * C140 - C15389 * C131 + C31872 * C141 - C15390 * C132) *
                C32274 +
            (C15383 * C328 - C15389 * C318 + C31872 * C329 - C15390 * C319) *
                C1706 +
            (C15383 * C348 - C15389 * C333 + C31872 * C349 - C15390 * C334) *
                C32263 +
            (C15383 * C338 - C15389 * C323 + C31872 * C339 - C15390 * C324) *
                C1707 +
            (C15383 * C353 - C15389 * C343 + C31872 * C354 - C15390 * C344) *
                C32241) *
               C14629 +
           ((C15490 - C15491 + C15492 - C15493) * C1705 +
            (C15494 - C15495 + C15496 - C15497) * C32274 +
            (C16053 - C16052 + C16055 - C16054) * C1706 +
            (C16057 - C16056 + C16059 - C16058) * C32263 +
            (C16368 - C16369 + C16370 - C16371) * C1707 +
            (C16372 - C16373 + C16374 - C16375) * C32241) *
               C32013) *
              C31925 * C209 +
          (((C15491 - C15490 + C15493 - C15492) * C1705 +
            (C15495 - C15494 + C15497 - C15496) * C32274 +
            (C16052 - C16053 + C16054 - C16055) * C1706 +
            (C16056 - C16057 + C16058 - C16059) * C32263 +
            (C16369 - C16368 + C16371 - C16370) * C1707 +
            (C16373 - C16372 + C16375 - C16374) * C32241) *
               C14629 +
           ((C15499 - C15498 + C15501 - C15500) * C1705 +
            (C15503 - C15502 + C15505 - C15504) * C32274 +
            (C16060 - C16061 + C16062 - C16063) * C1706 +
            (C16064 - C16065 + C16066 - C16067) * C32263 +
            (C16376 - C16377 + C16378 - C16379) * C1707 +
            (C16380 - C16381 + C16382 - C16383) * C32241) *
               C32013) *
              C31925 * C210 +
          ((C15530 * C1705 + C15531 * C32274 +
            (C16061 - C16060 + C16063 - C16062) * C1706 +
            (C16065 - C16064 + C16067 - C16066) * C32263 +
            (C16377 - C16376 + C16379 - C16378) * C1707 +
            (C16381 - C16380 + C16383 - C16382) * C32241) *
               C14629 +
           (C15532 * C1705 + C15533 * C32274 +
            (C16069 - C16068 + C16071 - C16070) * C1706 +
            (C16073 - C16072 + C16075 - C16074) * C32263 +
            (C15383 * C6153 - C15389 * C6149 + C31872 * C6990 -
             C15390 * C6989) *
                C1707 +
            (C15383 * C6158 - C15389 * C6154 + C31872 * C6992 -
             C15390 * C6991) *
                C32241) *
               C32013) *
              C31925 * C211) *
         C31899) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C15383 * C126 - C15389 * C119 + C31872 * C127 - C15390 * C120) *
                C1705 +
            (C15383 * C140 - C15389 * C131 + C31872 * C141 - C15390 * C132) *
                C32274 +
            (C16530 - C16531 + C16532 - C16533) * C1706 +
            (C16534 - C16535 + C16536 - C16537) * C32263 + C16572 * C1707 +
            C16573 * C32241) *
               C14629 +
           ((C15490 - C15491 + C15492 - C15493) * C1705 +
            (C15494 - C15495 + C15496 - C15497) * C32274 +
            (C16053 - C16052 + C16055 - C16054) * C1706 +
            (C16057 - C16056 + C16059 - C16058) * C32263 + C16570 * C1707 +
            C16571 * C32241) *
               C32013) *
              C315 +
          (((C16531 - C16530 + C16533 - C16532) * C1705 +
            (C16535 - C16534 + C16537 - C16536) * C32274 +
            (C16539 - C16538 + C16541 - C16540) * C1706 +
            (C16543 - C16542 + C16545 - C16544) * C32263 +
            (C16550 - C16551 + C16552 - C16553) * C1707 +
            (C16554 - C16555 + C16556 - C16557) * C32241) *
               C14629 +
           ((C16052 - C16053 + C16054 - C16055) * C1705 +
            (C16056 - C16057 + C16058 - C16059) * C32274 +
            (C16369 - C16368 + C16371 - C16370) * C1706 +
            (C16373 - C16372 + C16375 - C16374) * C32263 +
            (C16558 - C16559 + C16560 - C16561) * C1707 +
            (C16562 - C16563 + C16564 - C16565) * C32241) *
               C32013) *
              C316 +
          ((C16572 * C1705 + C16573 * C32274 +
            (C16551 - C16550 + C16553 - C16552) * C1706 +
            (C16555 - C16554 + C16557 - C16556) * C32263 +
            (C15383 * C1940 - C15389 * C1931 + C31872 * C1941 -
             C15390 * C1932) *
                C1707 +
            (C15383 * C1949 - C15389 * C1943 + C31872 * C1950 -
             C15390 * C1944) *
                C32241) *
               C14629 +
           (C16570 * C1705 + C16571 * C32274 +
            (C16559 - C16558 + C16561 - C16560) * C1706 +
            (C16563 - C16562 + C16565 - C16564) * C32263 +
            (C15383 * C6812 - C15389 * C6808 + C31872 * C11864 -
             C15390 * C11863) *
                C1707 +
            (C15383 * C6817 - C15389 * C6813 + C31872 * C11866 -
             C15390 * C11865) *
                C32241) *
               C32013) *
              C317) *
         C31911 * C31899) /
            (p * q * std::sqrt(p + q));
    d2ee[13] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C15383 * C126 - C15389 * C119 + C31872 * C127 - C15390 * C120) *
                 C118 +
             (C15383 * C140 - C15389 * C131 + C31872 * C141 - C15390 * C132) *
                 C31966) *
                C32280 +
            ((C15490 - C15491 + C15492 - C15493) * C118 +
             (C15494 - C15495 + C15496 - C15497) * C31966) *
                C32276 +
            C15538 * C32266 + C15539 * C32248) *
               C530 +
           (((C15389 * C318 - C15383 * C328 + C15390 * C319 - C31872 * C329) *
                 C118 +
             (C15389 * C333 - C15383 * C348 + C15390 * C334 - C31872 * C349) *
                 C31966) *
                C32280 +
            ((C15389 * C618 - C15383 * C623 + C15390 * C619 - C31872 * C624) *
                 C118 +
             (C15389 * C628 - C15383 * C633 + C15390 * C629 - C31872 * C634) *
                 C31966) *
                C32276 +
            ((C15389 * C1050 - C15383 * C1059 + C15390 * C1051 -
              C31872 * C1060) *
                 C118 +
             (C15389 * C1062 - C15383 * C1077 + C15390 * C1063 -
              C31872 * C1078) *
                 C31966) *
                C32266 +
            ((C15389 * C1556 - C15383 * C1559 + C15390 * C1557 -
              C31872 * C1560) *
                 C118 +
             (C15389 * C1562 - C15383 * C1565 + C15390 * C1563 -
              C31872 * C1566) *
                 C31966) *
                C32248) *
               C531) *
              C31911 * C442 +
          ((((C15389 * C120 - C15383 * C127 + C15390 * C121 - C31872 * C128) *
                 C118 +
             (C15389 * C132 - C15383 * C141 + C15390 * C133 - C31872 * C142) *
                 C31966) *
                C32280 +
            ((C15768 - C15769 + C15770 - C15771) * C118 +
             (C15772 - C15773 + C15774 - C15775) * C31966) *
                C32276 +
            ((C15776 - C15777 + C15778 - C15779) * C118 +
             (C15780 - C15781 + C15782 - C15783) * C31966) *
                C32266 +
            ((C15784 - C15785 + C15786 - C15787) * C118 +
             (C15788 - C15789 + C15790 - C15791) * C31966) *
                C32248) *
               C530 +
           (((C15383 * C329 - C15389 * C319 + C31872 * C330 - C15390 * C320) *
                 C118 +
             (C15383 * C349 - C15389 * C334 + C31872 * C350 - C15390 * C335) *
                 C31966) *
                C32280 +
            ((C15383 * C624 - C15389 * C619 + C31872 * C625 - C15390 * C620) *
                 C118 +
             (C15383 * C634 - C15389 * C629 + C31872 * C635 - C15390 * C630) *
                 C31966) *
                C32276 +
            ((C15383 * C1060 - C15389 * C1051 + C31872 * C1061 -
              C15390 * C1052) *
                 C118 +
             (C15383 * C1078 - C15389 * C1063 + C31872 * C1079 -
              C15390 * C1064) *
                 C31966) *
                C32266 +
            ((C15383 * C1560 - C15389 * C1557 + C31872 * C1561 -
              C15390 * C1558) *
                 C118 +
             (C15383 * C1566 - C15389 * C1563 + C31872 * C1567 -
              C15390 * C1564) *
                 C31966) *
                C32248) *
               C531) *
              C31911 * C443)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C32279 * C126 - C14631 * C119 + C32272 * C127 - C14632 * C120 +
              C32259 * C128 - C14633 * C121 + C32242 * C129 - C14634 * C122) *
                 C118 +
             (C32279 * C140 - C14631 * C131 + C32272 * C141 - C14632 * C132 +
              C32259 * C142 - C14633 * C133 + C32242 * C143 - C14634 * C134) *
                 C31966) *
                C14629 +
            ((C14734 - C14735 + C14736 - C14737 + C14738 - C14739 + C14740 -
              C14741) *
                 C118 +
             (C14742 - C14743 + C14744 - C14745 + C14746 - C14747 + C14748 -
              C14749) *
                 C31966) *
                C32013) *
               C530 +
           (((C14631 * C318 - C32279 * C328 + C14632 * C319 - C32272 * C329 +
              C14633 * C320 - C32259 * C330 + C14634 * C321 - C32242 * C331) *
                 C118 +
             (C14631 * C333 - C32279 * C348 + C14632 * C334 - C32272 * C349 +
              C14633 * C335 - C32259 * C350 + C14634 * C336 - C32242 * C351) *
                 C31966) *
                C14629 +
            ((C14631 * C618 - C32279 * C623 + C14632 * C619 - C32272 * C624 +
              C14633 * C620 - C32259 * C625 + C14634 * C621 - C32242 * C626) *
                 C118 +
             (C14631 * C628 - C32279 * C633 + C14632 * C629 - C32272 * C634 +
              C14633 * C630 - C32259 * C635 + C14634 * C631 - C32242 * C636) *
                 C31966) *
                C32013) *
               C531) *
              C31911 * C442 +
          ((((C14631 * C120 - C32279 * C127 + C14632 * C121 - C32272 * C128 +
              C14633 * C122 - C32259 * C129 + C14634 * C123 - C32242 * C130) *
                 C118 +
             (C14631 * C132 - C32279 * C141 + C14632 * C133 - C32272 * C142 +
              C14633 * C134 - C32259 * C143 + C14634 * C135 - C32242 * C144) *
                 C31966) *
                C14629 +
            ((C14994 - C14995 + C14996 - C14997 + C14998 - C14999 + C15000 -
              C15001) *
                 C118 +
             (C15002 - C15003 + C15004 - C15005 + C15006 - C15007 + C15008 -
              C15009) *
                 C31966) *
                C32013) *
               C530 +
           (((C32279 * C329 - C14631 * C319 + C32272 * C330 - C14632 * C320 +
              C32259 * C331 - C14633 * C321 + C32242 * C332 - C14634 * C322) *
                 C118 +
             (C32279 * C349 - C14631 * C334 + C32272 * C350 - C14632 * C335 +
              C32259 * C351 - C14633 * C336 + C32242 * C352 - C14634 * C337) *
                 C31966) *
                C14629 +
            ((C32279 * C624 - C14631 * C619 + C32272 * C625 - C14632 * C620 +
              C32259 * C626 - C14633 * C621 + C32242 * C627 - C14634 * C622) *
                 C118 +
             (C32279 * C634 - C14631 * C629 + C32272 * C635 - C14632 * C630 +
              C32259 * C636 - C14633 * C631 + C32242 * C637 - C14634 * C632) *
                 C31966) *
                C32013) *
               C531) *
              C31911 * C443)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C15383 * C126 - C15389 * C119 + C31872 * C127 - C15390 * C120) *
                 C1705 +
             (C15383 * C140 - C15389 * C131 + C31872 * C141 - C15390 * C132) *
                 C32274 +
             (C16530 - C16531 + C16532 - C16533) * C1706 +
             (C16534 - C16535 + C16536 - C16537) * C32263 + C16572 * C1707 +
             C16573 * C32241) *
                C14629 +
            ((C15490 - C15491 + C15492 - C15493) * C1705 +
             (C15494 - C15495 + C15496 - C15497) * C32274 +
             (C16053 - C16052 + C16055 - C16054) * C1706 +
             (C16057 - C16056 + C16059 - C16058) * C32263 + C16570 * C1707 +
             C16571 * C32241) *
                C32013) *
               C530 +
           (((C16531 - C16530 + C16533 - C16532) * C1705 +
             (C16535 - C16534 + C16537 - C16536) * C32274 +
             (C16539 - C16538 + C16541 - C16540) * C1706 +
             (C16543 - C16542 + C16545 - C16544) * C32263 +
             (C16550 - C16551 + C16552 - C16553) * C1707 +
             (C16554 - C16555 + C16556 - C16557) * C32241) *
                C14629 +
            ((C16052 - C16053 + C16054 - C16055) * C1705 +
             (C16056 - C16057 + C16058 - C16059) * C32274 +
             (C16369 - C16368 + C16371 - C16370) * C1706 +
             (C16373 - C16372 + C16375 - C16374) * C32263 +
             (C16558 - C16559 + C16560 - C16561) * C1707 +
             (C16562 - C16563 + C16564 - C16565) * C32241) *
                C32013) *
               C531) *
              C31911 * C442 +
          ((((C15389 * C120 - C15383 * C127 + C15390 * C121 - C31872 * C128) *
                 C1705 +
             (C15389 * C132 - C15383 * C141 + C15390 * C133 - C31872 * C142) *
                 C32274 +
             (C16978 - C16979 + C16980 - C16981) * C1706 +
             (C16982 - C16983 + C16984 - C16985) * C32263 +
             (C16986 - C16987 + C16988 - C16989) * C1707 +
             (C16990 - C16991 + C16992 - C16993) * C32241) *
                C14629 +
            ((C15768 - C15769 + C15770 - C15771) * C1705 +
             (C15772 - C15773 + C15774 - C15775) * C32274 +
             (C16768 - C16769 + C16770 - C16771) * C1706 +
             (C16772 - C16773 + C16774 - C16775) * C32263 +
             (C16776 - C16777 + C16778 - C16779) * C1707 +
             (C16780 - C16781 + C16782 - C16783) * C32241) *
                C32013) *
               C530 +
           (((C16979 - C16978 + C16981 - C16980) * C1705 +
             (C16983 - C16982 + C16985 - C16984) * C32274 +
             (C16987 - C16986 + C16989 - C16988) * C1706 +
             (C16991 - C16990 + C16993 - C16992) * C32263 +
             (C15383 * C1935 - C15389 * C1929 + C31872 * C1936 -
              C15390 * C1930) *
                 C1707 +
             (C15383 * C1947 - C15389 * C1938 + C31872 * C1948 -
              C15390 * C1939) *
                 C32241) *
                C14629 +
            ((C16769 - C16768 + C16771 - C16770) * C1705 +
             (C16773 - C16772 + C16775 - C16774) * C32274 +
             (C16777 - C16776 + C16779 - C16778) * C1706 +
             (C16781 - C16780 + C16783 - C16782) * C32263 +
             (C15383 * C2472 - C15389 * C2469 + C31872 * C2473 -
              C15390 * C2470) *
                 C1707 +
             (C15383 * C2478 - C15389 * C2475 + C31872 * C2479 -
              C15390 * C2476) *
                 C32241) *
                C32013) *
               C531) *
              C31911 * C443)) /
            (p * q * std::sqrt(p + q));
    d2ee[14] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C32279 * C126 - C14631 * C119 + C32272 * C127 - C14632 * C120 +
             C32259 * C128 - C14633 * C121 + C32242 * C129 - C14634 * C122) *
                C118 +
            (C32279 * C140 - C14631 * C131 + C32272 * C141 - C14632 * C132 +
             C32259 * C142 - C14633 * C133 + C32242 * C143 - C14634 * C134) *
                C31966) *
               C14629 +
           ((C14734 - C14735 + C14736 - C14737 + C14738 - C14739 + C14740 -
             C14741) *
                C118 +
            (C14742 - C14743 + C14744 - C14745 + C14746 - C14747 + C14748 -
             C14749) *
                C31966) *
               C32013) *
              C31925 * C209 +
          (((C14735 - C14734 + C14737 - C14736 + C14739 - C14738 + C14741 -
             C14740) *
                C118 +
            (C14743 - C14742 + C14745 - C14744 + C14747 - C14746 + C14749 -
             C14748) *
                C31966) *
               C14629 +
           ((C14750 - C14751 + C14752 - C14753 + C14754 - C14755 + C14756 -
             C14757) *
                C118 +
            (C14758 - C14759 + C14760 - C14761 + C14762 - C14763 + C14764 -
             C14765) *
                C31966) *
               C32013) *
              C31925 * C210 +
          (((C14751 - C14750 + C14753 - C14752 + C14755 - C14754 + C14757 -
             C14756) *
                C118 +
            (C14759 - C14758 + C14761 - C14760 + C14763 - C14762 + C14765 -
             C14764) *
                C31966) *
               C14629 +
           ((C32279 * C873 - C14631 * C867 + C32272 * C874 - C14632 * C868 +
             C32259 * C875 - C14633 * C869 + C32242 * C1233 - C14634 * C1232) *
                C118 +
            (C32279 * C885 - C14631 * C876 + C32272 * C886 - C14632 * C877 +
             C32259 * C887 - C14633 * C878 + C32242 * C1235 - C14634 * C1234) *
                C31966) *
               C32013) *
              C31925 * C211) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C32279 * C126 - C14631 * C119 + C32272 * C127 - C14632 * C120 +
             C32259 * C128 - C14633 * C121 + C32242 * C129 - C14634 * C122) *
                C118 +
            (C32279 * C140 - C14631 * C131 + C32272 * C141 - C14632 * C132 +
             C32259 * C142 - C14633 * C133 + C32242 * C143 - C14634 * C134) *
                C31966) *
               C14629 +
           ((C32279 * C223 - C14631 * C213 + C32272 * C224 - C14632 * C214 +
             C32259 * C225 - C14633 * C215 + C32242 * C226 - C14634 * C216) *
                C118 +
            (C32279 * C243 - C14631 * C228 + C32272 * C244 - C14632 * C229 +
             C32259 * C245 - C14633 * C230 + C32242 * C246 - C14634 * C231) *
                C31966) *
               C32013) *
              C31925 * C31911 * C110 +
          (((C14631 * C120 - C32279 * C127 + C14632 * C121 - C32272 * C128 +
             C14633 * C122 - C32259 * C129 + C14634 * C123 - C32242 * C130) *
                C118 +
            (C14631 * C132 - C32279 * C141 + C14632 * C133 - C32272 * C142 +
             C14633 * C134 - C32259 * C143 + C14634 * C135 - C32242 * C144) *
                C31966) *
               C14629 +
           ((C14631 * C214 - C32279 * C224 + C14632 * C215 - C32272 * C225 +
             C14633 * C216 - C32259 * C226 + C14634 * C217 - C32242 * C227) *
                C118 +
            (C14631 * C229 - C32279 * C244 + C14632 * C230 - C32272 * C245 +
             C14633 * C231 - C32259 * C246 + C14634 * C232 - C32242 * C247) *
                C31966) *
               C32013) *
              C31925 * C31911 * C111 +
          (((C32279 * C128 - C14631 * C121 + C32272 * C129 - C14632 * C122 +
             C32259 * C130 - C14633 * C123 + C32242 * C136 - C14634 * C124) *
                C118 +
            (C32279 * C142 - C14631 * C133 + C32272 * C143 - C14632 * C134 +
             C32259 * C144 - C14633 * C135 + C32242 * C145 - C14634 * C137) *
                C31966) *
               C14629 +
           ((C32279 * C225 - C14631 * C215 + C32272 * C226 - C14632 * C216 +
             C32259 * C227 - C14633 * C217 + C32242 * C445 - C14634 * C444) *
                C118 +
            (C32279 * C245 - C14631 * C230 + C32272 * C246 - C14632 * C231 +
             C32259 * C247 - C14633 * C232 + C32242 * C447 - C14634 * C446) *
                C31966) *
               C32013) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C15383 * C126 - C15389 * C119 + C31872 * C127 - C15390 * C120) *
                C118 +
            (C15383 * C140 - C15389 * C131 + C31872 * C141 - C15390 * C132) *
                C31966) *
               C32280 +
           ((C15383 * C223 - C15389 * C213 + C31872 * C224 - C15390 * C214) *
                C118 +
            (C15383 * C243 - C15389 * C228 + C31872 * C244 - C15390 * C229) *
                C31966) *
               C32276 +
           ((C15383 * C233 - C15389 * C218 + C31872 * C234 - C15390 * C219) *
                C118 +
            (C15383 * C248 - C15389 * C238 + C31872 * C249 - C15390 * C239) *
                C31966) *
               C32266 +
           ((C15383 * C873 - C15389 * C867 + C31872 * C874 - C15390 * C868) *
                C118 +
            (C15383 * C885 - C15389 * C876 + C31872 * C886 - C15390 * C877) *
                C31966) *
               C32248) *
              C31925 * C31911 * C110 +
          (((C15389 * C120 - C15383 * C127 + C15390 * C121 - C31872 * C128) *
                C118 +
            (C15389 * C132 - C15383 * C141 + C15390 * C133 - C31872 * C142) *
                C31966) *
               C32280 +
           ((C15389 * C214 - C15383 * C224 + C15390 * C215 - C31872 * C225) *
                C118 +
            (C15389 * C229 - C15383 * C244 + C15390 * C230 - C31872 * C245) *
                C31966) *
               C32276 +
           ((C15389 * C219 - C15383 * C234 + C15390 * C220 - C31872 * C235) *
                C118 +
            (C15389 * C239 - C15383 * C249 + C15390 * C240 - C31872 * C250) *
                C31966) *
               C32266 +
           ((C15389 * C868 - C15383 * C874 + C15390 * C869 - C31872 * C875) *
                C118 +
            (C15389 * C877 - C15383 * C886 + C15390 * C878 - C31872 * C887) *
                C31966) *
               C32248) *
              C31925 * C31911 * C111 +
          (((C15383 * C128 - C15389 * C121 + C31872 * C129 - C15390 * C122) *
                C118 +
            (C15383 * C142 - C15389 * C133 + C31872 * C143 - C15390 * C134) *
                C31966) *
               C32280 +
           ((C15383 * C225 - C15389 * C215 + C31872 * C226 - C15390 * C216) *
                C118 +
            (C15383 * C245 - C15389 * C230 + C31872 * C246 - C15390 * C231) *
                C31966) *
               C32276 +
           ((C15383 * C235 - C15389 * C220 + C31872 * C236 - C15390 * C221) *
                C118 +
            (C15383 * C250 - C15389 * C240 + C31872 * C251 - C15390 * C241) *
                C31966) *
               C32266 +
           ((C15383 * C875 - C15389 * C869 + C31872 * C1233 - C15390 * C1232) *
                C118 +
            (C15383 * C887 - C15389 * C878 + C31872 * C1235 - C15390 * C1234) *
                C31966) *
               C32248) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C15383 * C126 - C15389 * C119 + C31872 * C127 - C15390 * C120) *
                C118 +
            (C15383 * C140 - C15389 * C131 + C31872 * C141 - C15390 * C132) *
                C31966) *
               C32280 +
           ((C15490 - C15491 + C15492 - C15493) * C118 +
            (C15494 - C15495 + C15496 - C15497) * C31966) *
               C32276 +
           C15538 * C32266 + C15539 * C32248) *
              C31925 * C209 +
          (((C15491 - C15490 + C15493 - C15492) * C118 +
            (C15495 - C15494 + C15497 - C15496) * C31966) *
               C32280 +
           ((C15499 - C15498 + C15501 - C15500) * C118 +
            (C15503 - C15502 + C15505 - C15504) * C31966) *
               C32276 +
           ((C15507 - C15506 + C15509 - C15508) * C118 +
            (C15511 - C15510 + C15513 - C15512) * C31966) *
               C32266 +
           ((C15514 - C15515 + C15516 - C15517) * C118 +
            (C15518 - C15519 + C15520 - C15521) * C31966) *
               C32248) *
              C31925 * C210 +
          (C15538 * C32280 + C15539 * C32276 +
           ((C15515 - C15514 + C15517 - C15516) * C118 +
            (C15519 - C15518 + C15521 - C15520) * C31966) *
               C32266 +
           ((C15383 * C6045 - C15389 * C6043 + C31872 * C6243 -
             C15390 * C6242) *
                C118 +
            (C15383 * C6049 - C15389 * C6046 + C31872 * C6245 -
             C15390 * C6244) *
                C31966) *
               C32248) *
              C31925 * C211) *
         C31899) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C15383 * C126 - C15389 * C119 + C31872 * C127 - C15390 * C120) *
                C1705 +
            (C15383 * C140 - C15389 * C131 + C31872 * C141 - C15390 * C132) *
                C32274 +
            (C15383 * C328 - C15389 * C318 + C31872 * C329 - C15390 * C319) *
                C1706 +
            (C15383 * C348 - C15389 * C333 + C31872 * C349 - C15390 * C334) *
                C32263 +
            (C15383 * C338 - C15389 * C323 + C31872 * C339 - C15390 * C324) *
                C1707 +
            (C15383 * C353 - C15389 * C343 + C31872 * C354 - C15390 * C344) *
                C32241) *
               C14629 +
           ((C15490 - C15491 + C15492 - C15493) * C1705 +
            (C15494 - C15495 + C15496 - C15497) * C32274 +
            (C16053 - C16052 + C16055 - C16054) * C1706 +
            (C16057 - C16056 + C16059 - C16058) * C32263 +
            (C15383 * C1065 - C15389 * C1053 + C31872 * C1066 -
             C15390 * C1054) *
                C1707 +
            (C15383 * C1080 - C15389 * C1068 + C31872 * C1081 -
             C15390 * C1069) *
                C32241) *
               C32013) *
              C31925 * C31911 * C110 +
          (((C15389 * C120 - C15383 * C127 + C15390 * C121 - C31872 * C128) *
                C1705 +
            (C15389 * C132 - C15383 * C141 + C15390 * C133 - C31872 * C142) *
                C32274 +
            (C15389 * C319 - C15383 * C329 + C15390 * C320 - C31872 * C330) *
                C1706 +
            (C15389 * C334 - C15383 * C349 + C15390 * C335 - C31872 * C350) *
                C32263 +
            (C15389 * C324 - C15383 * C339 + C15390 * C325 - C31872 * C340) *
                C1707 +
            (C15389 * C344 - C15383 * C354 + C15390 * C345 - C31872 * C355) *
                C32241) *
               C14629 +
           ((C15768 - C15769 + C15770 - C15771) * C1705 +
            (C15772 - C15773 + C15774 - C15775) * C32274 +
            (C15389 * C619 - C15383 * C624 + C15390 * C620 - C31872 * C625) *
                C1706 +
            (C15389 * C629 - C15383 * C634 + C15390 * C630 - C31872 * C635) *
                C32263 +
            (C15389 * C1054 - C15383 * C1066 + C15390 * C1055 -
             C31872 * C1067) *
                C1707 +
            (C15389 * C1069 - C15383 * C1081 + C15390 * C1070 -
             C31872 * C1082) *
                C32241) *
               C32013) *
              C31925 * C31911 * C111 +
          (((C15383 * C128 - C15389 * C121 + C31872 * C129 - C15390 * C122) *
                C1705 +
            (C15383 * C142 - C15389 * C133 + C31872 * C143 - C15390 * C134) *
                C32274 +
            (C15383 * C330 - C15389 * C320 + C31872 * C331 - C15390 * C321) *
                C1706 +
            (C15383 * C350 - C15389 * C335 + C31872 * C351 - C15390 * C336) *
                C32263 +
            (C15383 * C340 - C15389 * C325 + C31872 * C341 - C15390 * C326) *
                C1707 +
            (C15383 * C355 - C15389 * C345 + C31872 * C356 - C15390 * C346) *
                C32241) *
               C14629 +
           ((C15383 * C225 - C15389 * C215 + C31872 * C226 - C15390 * C216) *
                C1705 +
            (C15383 * C245 - C15389 * C230 + C31872 * C246 - C15390 * C231) *
                C32274 +
            (C15383 * C625 - C15389 * C620 + C31872 * C626 - C15390 * C621) *
                C1706 +
            (C15383 * C635 - C15389 * C630 + C31872 * C636 - C15390 * C631) *
                C32263 +
            (C15383 * C1067 - C15389 * C1055 + C31872 * C2145 -
             C15390 * C2144) *
                C1707 +
            (C15383 * C1082 - C15389 * C1070 + C31872 * C2147 -
             C15390 * C2146) *
                C32241) *
               C32013) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C15383 * C126 - C15389 * C119 + C31872 * C127 - C15390 * C120) *
                C1705 +
            (C15383 * C140 - C15389 * C131 + C31872 * C141 - C15390 * C132) *
                C32274 +
            (C15383 * C328 - C15389 * C318 + C31872 * C329 - C15390 * C319) *
                C1706 +
            (C15383 * C348 - C15389 * C333 + C31872 * C349 - C15390 * C334) *
                C32263 +
            (C15383 * C338 - C15389 * C323 + C31872 * C339 - C15390 * C324) *
                C1707 +
            (C15383 * C353 - C15389 * C343 + C31872 * C354 - C15390 * C344) *
                C32241) *
               C14629 +
           ((C15490 - C15491 + C15492 - C15493) * C1705 +
            (C15494 - C15495 + C15496 - C15497) * C32274 +
            (C16053 - C16052 + C16055 - C16054) * C1706 +
            (C16057 - C16056 + C16059 - C16058) * C32263 +
            (C16368 - C16369 + C16370 - C16371) * C1707 +
            (C16372 - C16373 + C16374 - C16375) * C32241) *
               C32013) *
              C31925 * C209 +
          (((C15491 - C15490 + C15493 - C15492) * C1705 +
            (C15495 - C15494 + C15497 - C15496) * C32274 +
            (C16052 - C16053 + C16054 - C16055) * C1706 +
            (C16056 - C16057 + C16058 - C16059) * C32263 +
            (C16369 - C16368 + C16371 - C16370) * C1707 +
            (C16373 - C16372 + C16375 - C16374) * C32241) *
               C14629 +
           ((C15499 - C15498 + C15501 - C15500) * C1705 +
            (C15503 - C15502 + C15505 - C15504) * C32274 +
            (C16060 - C16061 + C16062 - C16063) * C1706 +
            (C16064 - C16065 + C16066 - C16067) * C32263 +
            (C16376 - C16377 + C16378 - C16379) * C1707 +
            (C16380 - C16381 + C16382 - C16383) * C32241) *
               C32013) *
              C31925 * C210 +
          ((C15530 * C1705 + C15531 * C32274 +
            (C16061 - C16060 + C16063 - C16062) * C1706 +
            (C16065 - C16064 + C16067 - C16066) * C32263 +
            (C16377 - C16376 + C16379 - C16378) * C1707 +
            (C16381 - C16380 + C16383 - C16382) * C32241) *
               C14629 +
           (C15532 * C1705 + C15533 * C32274 +
            (C16069 - C16068 + C16071 - C16070) * C1706 +
            (C16073 - C16072 + C16075 - C16074) * C32263 +
            (C15383 * C6153 - C15389 * C6149 + C31872 * C6990 -
             C15390 * C6989) *
                C1707 +
            (C15383 * C6158 - C15389 * C6154 + C31872 * C6992 -
             C15390 * C6991) *
                C32241) *
               C32013) *
              C31925 * C211) *
         C31899) /
            (p * q * std::sqrt(p + q));
    d2ee[15] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C31867 * C126 - C30883 * C119 + C31875 * C127 - C30879 * C120 +
              C17317 * C128 - C30889 * C121) *
                 C3350 +
             (C31867 * C140 - C30883 * C131 + C31875 * C141 - C30879 * C132 +
              C17317 * C142 - C30889 * C133) *
                 C32208 +
             (C18518 - C18519 + C18520 - C18521 + C18522 - C18523) * C3351 +
             (C18524 - C18525 + C18526 - C18527 + C18528 - C18529) * C32053) *
                C14629 +
            ((C17435 - C17436 + C17437 - C17438 + C17439 - C17440) * C3350 +
             (C17441 - C17442 + C17443 - C17444 + C17445 - C17446) * C32208 +
             (C18057 - C18056 + C18059 - C18058 + C18061 - C18060) * C3351 +
             (C18063 - C18062 + C18065 - C18064 + C18067 - C18066) * C32053) *
                C32013) *
               C31925 * C440 +
           (((C17436 - C17435 + C17438 - C17437 + C17440 - C17439) * C3350 +
             (C17442 - C17441 + C17444 - C17443 + C17446 - C17445) * C32208 +
             (C18056 - C18057 + C18058 - C18059 + C18060 - C18061) * C3351 +
             (C18062 - C18063 + C18064 - C18065 + C18066 - C18067) * C32053) *
                C14629 +
            ((C17448 - C17447 + C17450 - C17449 + C17452 - C17451) * C3350 +
             (C17454 - C17453 + C17456 - C17455 + C17458 - C17457) * C32208 +
             (C18068 - C18069 + C18070 - C18071 + C18072 - C18073) * C3351 +
             (C18074 - C18075 + C18076 - C18077 + C18078 - C18079) * C32053) *
                C32013) *
               C31925 * C441) *
              C442 +
          ((((C30883 * C120 - C31867 * C127 + C30879 * C121 - C31875 * C128 +
              C30889 * C122 - C17317 * C129) *
                 C3350 +
             (C30883 * C132 - C31867 * C141 + C30879 * C133 - C31875 * C142 +
              C30889 * C134 - C17317 * C143) *
                 C32208 +
             (C30883 * C319 - C31867 * C329 + C30879 * C320 - C31875 * C330 +
              C30889 * C321 - C17317 * C331) *
                 C3351 +
             (C30883 * C334 - C31867 * C349 + C30879 * C335 - C31875 * C350 +
              C30889 * C336 - C17317 * C351) *
                 C32053) *
                C14629 +
            ((C17740 - C17741 + C17742 - C17743 + C17744 - C17745) * C3350 +
             (C17746 - C17747 + C17748 - C17749 + C17750 - C17751) * C32208 +
             (C18748 - C18749 + C18750 - C18751 + C18752 - C18753) * C3351 +
             (C18754 - C18755 + C18756 - C18757 + C18758 - C18759) * C32053) *
                C32013) *
               C31925 * C440 +
           (((C17741 - C17740 + C17743 - C17742 + C17745 - C17744) * C3350 +
             (C17747 - C17746 + C17749 - C17748 + C17751 - C17750) * C32208 +
             (C18749 - C18748 + C18751 - C18750 + C18753 - C18752) * C3351 +
             (C18755 - C18754 + C18757 - C18756 + C18759 - C18758) * C32053) *
                C14629 +
            ((C17753 - C17752 + C17755 - C17754 + C17757 - C17756) * C3350 +
             (C17759 - C17758 + C17761 - C17760 + C17763 - C17762) * C32208 +
             (C31867 * C1060 - C30883 * C1051 + C31875 * C1061 -
              C30879 * C1052 + C17317 * C1407 - C30889 * C1406) *
                 C3351 +
             (C31867 * C1078 - C30883 * C1063 + C31875 * C1079 -
              C30879 * C1064 + C17317 * C1409 - C30889 * C1408) *
                 C32053) *
                C32013) *
               C31925 * C441) *
              C443)) /
        (p * q * std::sqrt(p + q));
    d2ee[16] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C31867 * C126 - C30883 * C119 + C31875 * C127 - C30879 * C120 +
              C17317 * C128 - C30889 * C121) *
                 C3350 +
             (C31867 * C140 - C30883 * C131 + C31875 * C141 - C30879 * C132 +
              C17317 * C142 - C30889 * C133) *
                 C32208 +
             (C18518 - C18519 + C18520 - C18521 + C18522 - C18523) * C3351 +
             (C18524 - C18525 + C18526 - C18527 + C18528 - C18529) * C32053) *
                C14629 +
            ((C17435 - C17436 + C17437 - C17438 + C17439 - C17440) * C3350 +
             (C17441 - C17442 + C17443 - C17444 + C17445 - C17446) * C32208 +
             C19176 * C3351 + C19177 * C32053) *
                C32013) *
               C530 +
           (((C18519 - C18518 + C18521 - C18520 + C18523 - C18522) * C3350 +
             (C18525 - C18524 + C18527 - C18526 + C18529 - C18528) * C32208 +
             (C18530 - C18531 + C18532 - C18533 + C18534 - C18535) * C3351 +
             (C18536 - C18537 + C18538 - C18539 + C18540 - C18541) * C32053) *
                C14629 +
            (C19178 * C3350 + C19179 * C32208 +
             (C18542 - C18543 + C18544 - C18545 + C18546 - C18547) * C3351 +
             (C18548 - C18549 + C18550 - C18551 + C18552 - C18553) * C32053) *
                C32013) *
               C531) *
              C440 +
          ((((C17436 - C17435 + C17438 - C17437 + C17440 - C17439) * C3350 +
             (C17442 - C17441 + C17444 - C17443 + C17446 - C17445) * C32208 +
             C19178 * C3351 + C19179 * C32053) *
                C14629 +
            ((C17448 - C17447 + C17450 - C17449 + C17452 - C17451) * C3350 +
             (C17454 - C17453 + C17456 - C17455 + C17458 - C17457) * C32208 +
             (C18068 - C18069 + C18070 - C18071 + C18072 - C18073) * C3351 +
             (C18074 - C18075 + C18076 - C18077 + C18078 - C18079) * C32053) *
                C32013) *
               C530 +
           ((C19176 * C3350 + C19177 * C32208 +
             (C18543 - C18542 + C18545 - C18544 + C18547 - C18546) * C3351 +
             (C18549 - C18548 + C18551 - C18550 + C18553 - C18552) * C32053) *
                C14629 +
            ((C18069 - C18068 + C18071 - C18070 + C18073 - C18072) * C3350 +
             (C18075 - C18074 + C18077 - C18076 + C18079 - C18078) * C32208 +
             (C31867 * C1071 - C30883 * C1056 + C31875 * C1072 -
              C30879 * C1057 + C17317 * C1073 - C30889 * C1058) *
                 C3351 +
             (C31867 * C1083 - C30883 * C1074 + C31875 * C1084 -
              C30879 * C1075 + C17317 * C1085 - C30889 * C1076) *
                 C32053) *
                C32013) *
               C531) *
              C441) *
         C31899) /
        (p * q * std::sqrt(p + q));
    d2ee[17] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31867 * C126 - C30883 * C119 + C31875 * C127 - C30879 * C120 +
             C17317 * C128 - C30889 * C121) *
                C3350 +
            (C31867 * C140 - C30883 * C131 + C31875 * C141 - C30879 * C132 +
             C17317 * C142 - C30889 * C133) *
                C32208 +
            (C31867 * C328 - C30883 * C318 + C31875 * C329 - C30879 * C319 +
             C17317 * C330 - C30889 * C320) *
                C3351 +
            (C31867 * C348 - C30883 * C333 + C31875 * C349 - C30879 * C334 +
             C17317 * C350 - C30889 * C335) *
                C32053) *
               C14629 +
           ((C17435 - C17436 + C17437 - C17438 + C17439 - C17440) * C3350 +
            (C17441 - C17442 + C17443 - C17444 + C17445 - C17446) * C32208 +
            (C18057 - C18056 + C18059 - C18058 + C18061 - C18060) * C3351 +
            (C18063 - C18062 + C18065 - C18064 + C18067 - C18066) * C32053) *
               C32013) *
              C31925 * C209 +
          (((C17436 - C17435 + C17438 - C17437 + C17440 - C17439) * C3350 +
            (C17442 - C17441 + C17444 - C17443 + C17446 - C17445) * C32208 +
            (C18056 - C18057 + C18058 - C18059 + C18060 - C18061) * C3351 +
            (C18062 - C18063 + C18064 - C18065 + C18066 - C18067) * C32053) *
               C14629 +
           ((C17448 - C17447 + C17450 - C17449 + C17452 - C17451) * C3350 +
            (C17454 - C17453 + C17456 - C17455 + C17458 - C17457) * C32208 +
            (C18068 - C18069 + C18070 - C18071 + C18072 - C18073) * C3351 +
            (C18074 - C18075 + C18076 - C18077 + C18078 - C18079) * C32053) *
               C32013) *
              C31925 * C210 +
          ((C17479 * C3350 + C17480 * C32208 +
            (C18069 - C18068 + C18071 - C18070 + C18073 - C18072) * C3351 +
            (C18075 - C18074 + C18077 - C18076 + C18079 - C18078) * C32053) *
               C14629 +
           ((C17460 - C17459 + C17462 - C17461 + C17464 - C17463) * C3350 +
            (C17466 - C17465 + C17468 - C17467 + C17470 - C17469) * C32208 +
            (C31867 * C1559 - C30883 * C1556 + C31875 * C1560 - C30879 * C1557 +
             C17317 * C1561 - C30889 * C1558) *
                C3351 +
            (C31867 * C1565 - C30883 * C1562 + C31875 * C1566 - C30879 * C1563 +
             C17317 * C1567 - C30889 * C1564) *
                C32053) *
               C32013) *
              C31925 * C211) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31867 * C126 - C30883 * C119 + C31875 * C127 - C30879 * C120 +
             C17317 * C128 - C30889 * C121) *
                C3350 +
            (C31867 * C140 - C30883 * C131 + C31875 * C141 - C30879 * C132 +
             C17317 * C142 - C30889 * C133) *
                C32208 +
            (C31867 * C328 - C30883 * C318 + C31875 * C329 - C30879 * C319 +
             C17317 * C330 - C30889 * C320) *
                C3351 +
            (C31867 * C348 - C30883 * C333 + C31875 * C349 - C30879 * C334 +
             C17317 * C350 - C30889 * C335) *
                C32053) *
               C14629 +
           ((C17435 - C17436 + C17437 - C17438 + C17439 - C17440) * C3350 +
            (C17441 - C17442 + C17443 - C17444 + C17445 - C17446) * C32208 +
            (C18057 - C18056 + C18059 - C18058 + C18061 - C18060) * C3351 +
            (C18063 - C18062 + C18065 - C18064 + C18067 - C18066) * C32053) *
               C32013) *
              C31925 * C31911 * C110 +
          (((C30883 * C120 - C31867 * C127 + C30879 * C121 - C31875 * C128 +
             C30889 * C122 - C17317 * C129) *
                C3350 +
            (C30883 * C132 - C31867 * C141 + C30879 * C133 - C31875 * C142 +
             C30889 * C134 - C17317 * C143) *
                C32208 +
            (C30883 * C319 - C31867 * C329 + C30879 * C320 - C31875 * C330 +
             C30889 * C321 - C17317 * C331) *
                C3351 +
            (C30883 * C334 - C31867 * C349 + C30879 * C335 - C31875 * C350 +
             C30889 * C336 - C17317 * C351) *
                C32053) *
               C14629 +
           ((C17740 - C17741 + C17742 - C17743 + C17744 - C17745) * C3350 +
            (C17746 - C17747 + C17748 - C17749 + C17750 - C17751) * C32208 +
            (C30883 * C619 - C31867 * C624 + C30879 * C620 - C31875 * C625 +
             C30889 * C621 - C17317 * C626) *
                C3351 +
            (C30883 * C629 - C31867 * C634 + C30879 * C630 - C31875 * C635 +
             C30889 * C631 - C17317 * C636) *
                C32053) *
               C32013) *
              C31925 * C31911 * C111 +
          (((C31867 * C128 - C30883 * C121 + C31875 * C129 - C30879 * C122 +
             C17317 * C130 - C30889 * C123) *
                C3350 +
            (C31867 * C142 - C30883 * C133 + C31875 * C143 - C30879 * C134 +
             C17317 * C144 - C30889 * C135) *
                C32208 +
            (C31867 * C330 - C30883 * C320 + C31875 * C331 - C30879 * C321 +
             C17317 * C332 - C30889 * C322) *
                C3351 +
            (C31867 * C350 - C30883 * C335 + C31875 * C351 - C30879 * C336 +
             C17317 * C352 - C30889 * C337) *
                C32053) *
               C14629 +
           ((C31867 * C225 - C30883 * C215 + C31875 * C226 - C30879 * C216 +
             C17317 * C227 - C30889 * C217) *
                C3350 +
            (C31867 * C245 - C30883 * C230 + C31875 * C246 - C30879 * C231 +
             C17317 * C247 - C30889 * C232) *
                C32208 +
            (C31867 * C625 - C30883 * C620 + C31875 * C626 - C30879 * C621 +
             C17317 * C627 - C30889 * C622) *
                C3351 +
            (C31867 * C635 - C30883 * C630 + C31875 * C636 - C30879 * C631 +
             C17317 * C637 - C30889 * C632) *
                C32053) *
               C32013) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C31867 * C126 - C30883 * C119 + C31875 * C127 - C30879 * C120 +
             C17317 * C128 - C30889 * C121) *
                C3350 +
            (C31867 * C140 - C30883 * C131 + C31875 * C141 - C30879 * C132 +
             C17317 * C142 - C30889 * C133) *
                C32208 +
            (C18518 - C18519 + C18520 - C18521 + C18522 - C18523) * C3351 +
            (C18524 - C18525 + C18526 - C18527 + C18528 - C18529) * C32053) *
               C14629 +
           ((C17435 - C17436 + C17437 - C17438 + C17439 - C17440) * C3350 +
            (C17441 - C17442 + C17443 - C17444 + C17445 - C17446) * C32208 +
            (C18057 - C18056 + C18059 - C18058 + C18061 - C18060) * C3351 +
            (C18063 - C18062 + C18065 - C18064 + C18067 - C18066) * C32053) *
               C32013) *
              C315 +
          (((C18519 - C18518 + C18521 - C18520 + C18523 - C18522) * C3350 +
            (C18525 - C18524 + C18527 - C18526 + C18529 - C18528) * C32208 +
            (C18530 - C18531 + C18532 - C18533 + C18534 - C18535) * C3351 +
            (C18536 - C18537 + C18538 - C18539 + C18540 - C18541) * C32053) *
               C14629 +
           ((C18056 - C18057 + C18058 - C18059 + C18060 - C18061) * C3350 +
            (C18062 - C18063 + C18064 - C18065 + C18066 - C18067) * C32208 +
            (C18542 - C18543 + C18544 - C18545 + C18546 - C18547) * C3351 +
            (C18548 - C18549 + C18550 - C18551 + C18552 - C18553) * C32053) *
               C32013) *
              C316 +
          (((C18531 - C18530 + C18533 - C18532 + C18535 - C18534) * C3350 +
            (C18537 - C18536 + C18539 - C18538 + C18541 - C18540) * C32208 +
            (C31867 * C1934 - C30883 * C1928 + C31875 * C1935 - C30879 * C1929 +
             C17317 * C1936 - C30889 * C1930) *
                C3351 +
            (C31867 * C1946 - C30883 * C1937 + C31875 * C1947 - C30879 * C1938 +
             C17317 * C1948 - C30889 * C1939) *
                C32053) *
               C14629 +
           ((C18543 - C18542 + C18545 - C18544 + C18547 - C18546) * C3350 +
            (C18549 - C18548 + C18551 - C18550 + C18553 - C18552) * C32208 +
            (C31867 * C2471 - C30883 * C2468 + C31875 * C2472 - C30879 * C2469 +
             C17317 * C2473 - C30889 * C2470) *
                C3351 +
            (C31867 * C2477 - C30883 * C2474 + C31875 * C2478 - C30879 * C2475 +
             C17317 * C2479 - C30889 * C2476) *
                C32053) *
               C32013) *
              C317) *
         C31911 * C31899) /
            (p * q * std::sqrt(p + q));
    d2ee[18] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C31867 * C126 - C30883 * C119 + C31875 * C127 - C30879 * C120 +
              C17317 * C128 - C30889 * C121) *
                 C3350 +
             (C31867 * C140 - C30883 * C131 + C31875 * C141 - C30879 * C132 +
              C17317 * C142 - C30889 * C133) *
                 C32208 +
             (C18518 - C18519 + C18520 - C18521 + C18522 - C18523) * C3351 +
             (C18524 - C18525 + C18526 - C18527 + C18528 - C18529) * C32053) *
                C14629 +
            ((C17435 - C17436 + C17437 - C17438 + C17439 - C17440) * C3350 +
             (C17441 - C17442 + C17443 - C17444 + C17445 - C17446) * C32208 +
             (C18057 - C18056 + C18059 - C18058 + C18061 - C18060) * C3351 +
             (C18063 - C18062 + C18065 - C18064 + C18067 - C18066) * C32053) *
                C32013) *
               C530 +
           (((C18519 - C18518 + C18521 - C18520 + C18523 - C18522) * C3350 +
             (C18525 - C18524 + C18527 - C18526 + C18529 - C18528) * C32208 +
             (C18530 - C18531 + C18532 - C18533 + C18534 - C18535) * C3351 +
             (C18536 - C18537 + C18538 - C18539 + C18540 - C18541) * C32053) *
                C14629 +
            ((C18056 - C18057 + C18058 - C18059 + C18060 - C18061) * C3350 +
             (C18062 - C18063 + C18064 - C18065 + C18066 - C18067) * C32208 +
             (C18542 - C18543 + C18544 - C18545 + C18546 - C18547) * C3351 +
             (C18548 - C18549 + C18550 - C18551 + C18552 - C18553) * C32053) *
                C32013) *
               C531) *
              C31911 * C442 +
          ((((C30883 * C120 - C31867 * C127 + C30879 * C121 - C31875 * C128 +
              C30889 * C122 - C17317 * C129) *
                 C3350 +
             (C30883 * C132 - C31867 * C141 + C30879 * C133 - C31875 * C142 +
              C30889 * C134 - C17317 * C143) *
                 C32208 +
             (C18954 - C18955 + C18956 - C18957 + C18958 - C18959) * C3351 +
             (C18960 - C18961 + C18962 - C18963 + C18964 - C18965) * C32053) *
                C14629 +
            ((C17740 - C17741 + C17742 - C17743 + C17744 - C17745) * C3350 +
             (C17746 - C17747 + C17748 - C17749 + C17750 - C17751) * C32208 +
             (C18748 - C18749 + C18750 - C18751 + C18752 - C18753) * C3351 +
             (C18754 - C18755 + C18756 - C18757 + C18758 - C18759) * C32053) *
                C32013) *
               C530 +
           (((C18955 - C18954 + C18957 - C18956 + C18959 - C18958) * C3350 +
             (C18961 - C18960 + C18963 - C18962 + C18965 - C18964) * C32208 +
             (C31867 * C339 - C30883 * C324 + C31875 * C340 - C30879 * C325 +
              C17317 * C341 - C30889 * C326) *
                 C3351 +
             (C31867 * C354 - C30883 * C344 + C31875 * C355 - C30879 * C345 +
              C17317 * C356 - C30889 * C346) *
                 C32053) *
                C14629 +
            ((C18749 - C18748 + C18751 - C18750 + C18753 - C18752) * C3350 +
             (C18755 - C18754 + C18757 - C18756 + C18759 - C18758) * C32208 +
             (C31867 * C1066 - C30883 * C1054 + C31875 * C1067 -
              C30879 * C1055 + C17317 * C2145 - C30889 * C2144) *
                 C3351 +
             (C31867 * C1081 - C30883 * C1069 + C31875 * C1082 -
              C30879 * C1070 + C17317 * C2147 - C30889 * C2146) *
                 C32053) *
                C32013) *
               C531) *
              C31911 * C443)) /
        (p * q * std::sqrt(p + q));
    d2ee[19] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31867 * C126 - C30883 * C119 + C31875 * C127 - C30879 * C120 +
             C17317 * C128 - C30889 * C121) *
                C3350 +
            (C31867 * C140 - C30883 * C131 + C31875 * C141 - C30879 * C132 +
             C17317 * C142 - C30889 * C133) *
                C32208 +
            (C31867 * C328 - C30883 * C318 + C31875 * C329 - C30879 * C319 +
             C17317 * C330 - C30889 * C320) *
                C3351 +
            (C31867 * C348 - C30883 * C333 + C31875 * C349 - C30879 * C334 +
             C17317 * C350 - C30889 * C335) *
                C32053) *
               C14629 +
           ((C17435 - C17436 + C17437 - C17438 + C17439 - C17440) * C3350 +
            (C17441 - C17442 + C17443 - C17444 + C17445 - C17446) * C32208 +
            (C18057 - C18056 + C18059 - C18058 + C18061 - C18060) * C3351 +
            (C18063 - C18062 + C18065 - C18064 + C18067 - C18066) * C32053) *
               C32013) *
              C31925 * C31911 * C110 +
          (((C30883 * C120 - C31867 * C127 + C30879 * C121 - C31875 * C128 +
             C30889 * C122 - C17317 * C129) *
                C3350 +
            (C30883 * C132 - C31867 * C141 + C30879 * C133 - C31875 * C142 +
             C30889 * C134 - C17317 * C143) *
                C32208 +
            (C30883 * C319 - C31867 * C329 + C30879 * C320 - C31875 * C330 +
             C30889 * C321 - C17317 * C331) *
                C3351 +
            (C30883 * C334 - C31867 * C349 + C30879 * C335 - C31875 * C350 +
             C30889 * C336 - C17317 * C351) *
                C32053) *
               C14629 +
           ((C17740 - C17741 + C17742 - C17743 + C17744 - C17745) * C3350 +
            (C17746 - C17747 + C17748 - C17749 + C17750 - C17751) * C32208 +
            (C30883 * C619 - C31867 * C624 + C30879 * C620 - C31875 * C625 +
             C30889 * C621 - C17317 * C626) *
                C3351 +
            (C30883 * C629 - C31867 * C634 + C30879 * C630 - C31875 * C635 +
             C30889 * C631 - C17317 * C636) *
                C32053) *
               C32013) *
              C31925 * C31911 * C111 +
          (((C31867 * C128 - C30883 * C121 + C31875 * C129 - C30879 * C122 +
             C17317 * C130 - C30889 * C123) *
                C3350 +
            (C31867 * C142 - C30883 * C133 + C31875 * C143 - C30879 * C134 +
             C17317 * C144 - C30889 * C135) *
                C32208 +
            (C31867 * C330 - C30883 * C320 + C31875 * C331 - C30879 * C321 +
             C17317 * C332 - C30889 * C322) *
                C3351 +
            (C31867 * C350 - C30883 * C335 + C31875 * C351 - C30879 * C336 +
             C17317 * C352 - C30889 * C337) *
                C32053) *
               C14629 +
           ((C31867 * C225 - C30883 * C215 + C31875 * C226 - C30879 * C216 +
             C17317 * C227 - C30889 * C217) *
                C3350 +
            (C31867 * C245 - C30883 * C230 + C31875 * C246 - C30879 * C231 +
             C17317 * C247 - C30889 * C232) *
                C32208 +
            (C31867 * C625 - C30883 * C620 + C31875 * C626 - C30879 * C621 +
             C17317 * C627 - C30889 * C622) *
                C3351 +
            (C31867 * C635 - C30883 * C630 + C31875 * C636 - C30879 * C631 +
             C17317 * C637 - C30889 * C632) *
                C32053) *
               C32013) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31867 * C126 - C30883 * C119 + C31875 * C127 - C30879 * C120 +
             C17317 * C128 - C30889 * C121) *
                C3350 +
            (C31867 * C140 - C30883 * C131 + C31875 * C141 - C30879 * C132 +
             C17317 * C142 - C30889 * C133) *
                C32208 +
            (C31867 * C328 - C30883 * C318 + C31875 * C329 - C30879 * C319 +
             C17317 * C330 - C30889 * C320) *
                C3351 +
            (C31867 * C348 - C30883 * C333 + C31875 * C349 - C30879 * C334 +
             C17317 * C350 - C30889 * C335) *
                C32053) *
               C14629 +
           ((C17435 - C17436 + C17437 - C17438 + C17439 - C17440) * C3350 +
            (C17441 - C17442 + C17443 - C17444 + C17445 - C17446) * C32208 +
            (C18057 - C18056 + C18059 - C18058 + C18061 - C18060) * C3351 +
            (C18063 - C18062 + C18065 - C18064 + C18067 - C18066) * C32053) *
               C32013) *
              C31925 * C209 +
          (((C17436 - C17435 + C17438 - C17437 + C17440 - C17439) * C3350 +
            (C17442 - C17441 + C17444 - C17443 + C17446 - C17445) * C32208 +
            (C18056 - C18057 + C18058 - C18059 + C18060 - C18061) * C3351 +
            (C18062 - C18063 + C18064 - C18065 + C18066 - C18067) * C32053) *
               C14629 +
           ((C17448 - C17447 + C17450 - C17449 + C17452 - C17451) * C3350 +
            (C17454 - C17453 + C17456 - C17455 + C17458 - C17457) * C32208 +
            (C18068 - C18069 + C18070 - C18071 + C18072 - C18073) * C3351 +
            (C18074 - C18075 + C18076 - C18077 + C18078 - C18079) * C32053) *
               C32013) *
              C31925 * C210 +
          ((C17479 * C3350 + C17480 * C32208 +
            (C18069 - C18068 + C18071 - C18070 + C18073 - C18072) * C3351 +
            (C18075 - C18074 + C18077 - C18076 + C18079 - C18078) * C32053) *
               C14629 +
           ((C17460 - C17459 + C17462 - C17461 + C17464 - C17463) * C3350 +
            (C17466 - C17465 + C17468 - C17467 + C17470 - C17469) * C32208 +
            (C31867 * C1559 - C30883 * C1556 + C31875 * C1560 - C30879 * C1557 +
             C17317 * C1561 - C30889 * C1558) *
                C3351 +
            (C31867 * C1565 - C30883 * C1562 + C31875 * C1566 - C30879 * C1563 +
             C17317 * C1567 - C30889 * C1564) *
                C32053) *
               C32013) *
              C31925 * C211) *
         C31899) /
            (p * q * std::sqrt(p + q));
    d2ee[20] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C32279 * C126 - C14631 * C119 + C32272 * C127 - C14632 * C120 +
              C32259 * C128 - C14633 * C121 + C32242 * C129 - C14634 * C122) *
                 C118 +
             (C32279 * C140 - C14631 * C131 + C32272 * C141 - C14632 * C132 +
              C32259 * C142 - C14633 * C133 + C32242 * C143 - C14634 * C134) *
                 C31966) *
                C14629 +
            ((C14734 - C14735 + C14736 - C14737 + C14738 - C14739 + C14740 -
              C14741) *
                 C118 +
             (C14742 - C14743 + C14744 - C14745 + C14746 - C14747 + C14748 -
              C14749) *
                 C31966) *
                C32013) *
               C31925 * C440 +
           (((C14735 - C14734 + C14737 - C14736 + C14739 - C14738 + C14741 -
              C14740) *
                 C118 +
             (C14743 - C14742 + C14745 - C14744 + C14747 - C14746 + C14749 -
              C14748) *
                 C31966) *
                C14629 +
            ((C14750 - C14751 + C14752 - C14753 + C14754 - C14755 + C14756 -
              C14757) *
                 C118 +
             (C14758 - C14759 + C14760 - C14761 + C14762 - C14763 + C14764 -
              C14765) *
                 C31966) *
                C32013) *
               C31925 * C441) *
              C442 +
          ((((C14631 * C120 - C32279 * C127 + C14632 * C121 - C32272 * C128 +
              C14633 * C122 - C32259 * C129 + C14634 * C123 - C32242 * C130) *
                 C118 +
             (C14631 * C132 - C32279 * C141 + C14632 * C133 - C32272 * C142 +
              C14633 * C134 - C32259 * C143 + C14634 * C135 - C32242 * C144) *
                 C31966) *
                C14629 +
            ((C14994 - C14995 + C14996 - C14997 + C14998 - C14999 + C15000 -
              C15001) *
                 C118 +
             (C15002 - C15003 + C15004 - C15005 + C15006 - C15007 + C15008 -
              C15009) *
                 C31966) *
                C32013) *
               C31925 * C440 +
           (((C14995 - C14994 + C14997 - C14996 + C14999 - C14998 + C15001 -
              C15000) *
                 C118 +
             (C15003 - C15002 + C15005 - C15004 + C15007 - C15006 + C15009 -
              C15008) *
                 C31966) *
                C14629 +
            ((C32279 * C234 - C14631 * C219 + C32272 * C235 - C14632 * C220 +
              C32259 * C236 - C14633 * C221 + C32242 * C237 - C14634 * C222) *
                 C118 +
             (C32279 * C249 - C14631 * C239 + C32272 * C250 - C14632 * C240 +
              C32259 * C251 - C14633 * C241 + C32242 * C252 - C14634 * C242) *
                 C31966) *
                C32013) *
               C31925 * C441) *
              C443)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C15383 * C126 - C15389 * C119 + C31872 * C127 - C15390 * C120) *
                 C118 +
             (C15383 * C140 - C15389 * C131 + C31872 * C141 - C15390 * C132) *
                 C31966) *
                C32280 +
            ((C15490 - C15491 + C15492 - C15493) * C118 +
             (C15494 - C15495 + C15496 - C15497) * C31966) *
                C32276 +
            C15538 * C32266 + C15539 * C32248) *
               C31925 * C440 +
           (((C15491 - C15490 + C15493 - C15492) * C118 +
             (C15495 - C15494 + C15497 - C15496) * C31966) *
                C32280 +
            ((C15499 - C15498 + C15501 - C15500) * C118 +
             (C15503 - C15502 + C15505 - C15504) * C31966) *
                C32276 +
            ((C15507 - C15506 + C15509 - C15508) * C118 +
             (C15511 - C15510 + C15513 - C15512) * C31966) *
                C32266 +
            ((C15514 - C15515 + C15516 - C15517) * C118 +
             (C15518 - C15519 + C15520 - C15521) * C31966) *
                C32248) *
               C31925 * C441) *
              C442 +
          ((((C15389 * C120 - C15383 * C127 + C15390 * C121 - C31872 * C128) *
                 C118 +
             (C15389 * C132 - C15383 * C141 + C15390 * C133 - C31872 * C142) *
                 C31966) *
                C32280 +
            ((C15768 - C15769 + C15770 - C15771) * C118 +
             (C15772 - C15773 + C15774 - C15775) * C31966) *
                C32276 +
            ((C15776 - C15777 + C15778 - C15779) * C118 +
             (C15780 - C15781 + C15782 - C15783) * C31966) *
                C32266 +
            ((C15784 - C15785 + C15786 - C15787) * C118 +
             (C15788 - C15789 + C15790 - C15791) * C31966) *
                C32248) *
               C31925 * C440 +
           (((C15769 - C15768 + C15771 - C15770) * C118 +
             (C15773 - C15772 + C15775 - C15774) * C31966) *
                C32280 +
            ((C15777 - C15776 + C15779 - C15778) * C118 +
             (C15781 - C15780 + C15783 - C15782) * C31966) *
                C32276 +
            ((C15785 - C15784 + C15787 - C15786) * C118 +
             (C15789 - C15788 + C15791 - C15790) * C31966) *
                C32266 +
            ((C15383 * C880 - C15389 * C871 + C31872 * C881 - C15390 * C872) *
                 C118 +
             (C15383 * C889 - C15389 * C883 + C31872 * C890 - C15390 * C884) *
                 C31966) *
                C32248) *
               C31925 * C441) *
              C443)) /
            (p * q * std::sqrt(p + q));
    d2ee[21] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C32279 * C126 - C14631 * C119 + C32272 * C127 - C14632 * C120 +
              C32259 * C128 - C14633 * C121 + C32242 * C129 - C14634 * C122) *
                 C118 +
             (C32279 * C140 - C14631 * C131 + C32272 * C141 - C14632 * C132 +
              C32259 * C142 - C14633 * C133 + C32242 * C143 - C14634 * C134) *
                 C31966) *
                C14629 +
            ((C14734 - C14735 + C14736 - C14737 + C14738 - C14739 + C14740 -
              C14741) *
                 C118 +
             (C14742 - C14743 + C14744 - C14745 + C14746 - C14747 + C14748 -
              C14749) *
                 C31966) *
                C32013) *
               C530 +
           (((C14631 * C318 - C32279 * C328 + C14632 * C319 - C32272 * C329 +
              C14633 * C320 - C32259 * C330 + C14634 * C321 - C32242 * C331) *
                 C118 +
             (C14631 * C333 - C32279 * C348 + C14632 * C334 - C32272 * C349 +
              C14633 * C335 - C32259 * C350 + C14634 * C336 - C32242 * C351) *
                 C31966) *
                C14629 +
            ((C15270 - C15271 + C15272 - C15273 + C15274 - C15275 + C15276 -
              C15277) *
                 C118 +
             (C15278 - C15279 + C15280 - C15281 + C15282 - C15283 + C15284 -
              C15285) *
                 C31966) *
                C32013) *
               C531) *
              C440 +
          ((((C14735 - C14734 + C14737 - C14736 + C14739 - C14738 + C14741 -
              C14740) *
                 C118 +
             (C14743 - C14742 + C14745 - C14744 + C14747 - C14746 + C14749 -
              C14748) *
                 C31966) *
                C14629 +
            ((C14750 - C14751 + C14752 - C14753 + C14754 - C14755 + C14756 -
              C14757) *
                 C118 +
             (C14758 - C14759 + C14760 - C14761 + C14762 - C14763 + C14764 -
              C14765) *
                 C31966) *
                C32013) *
               C530 +
           (((C15271 - C15270 + C15273 - C15272 + C15275 - C15274 + C15277 -
              C15276) *
                 C118 +
             (C15279 - C15278 + C15281 - C15280 + C15283 - C15282 + C15285 -
              C15284) *
                 C31966) *
                C14629 +
            ((C32279 * C1059 - C14631 * C1050 + C32272 * C1060 -
              C14632 * C1051 + C32259 * C1061 - C14633 * C1052 +
              C32242 * C1407 - C14634 * C1406) *
                 C118 +
             (C32279 * C1077 - C14631 * C1062 + C32272 * C1078 -
              C14632 * C1063 + C32259 * C1079 - C14633 * C1064 +
              C32242 * C1409 - C14634 * C1408) *
                 C31966) *
                C32013) *
               C531) *
              C441) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C15383 * C126 - C15389 * C119 + C31872 * C127 - C15390 * C120) *
                 C118 +
             (C15383 * C140 - C15389 * C131 + C31872 * C141 - C15390 * C132) *
                 C31966) *
                C32280 +
            ((C15490 - C15491 + C15492 - C15493) * C118 +
             (C15494 - C15495 + C15496 - C15497) * C31966) *
                C32276 +
            C15538 * C32266 + C15539 * C32248) *
               C530 +
           (((C15389 * C318 - C15383 * C328 + C15390 * C319 - C31872 * C329) *
                 C118 +
             (C15389 * C333 - C15383 * C348 + C15390 * C334 - C31872 * C349) *
                 C31966) *
                C32280 +
            ((C16052 - C16053 + C16054 - C16055) * C118 +
             (C16056 - C16057 + C16058 - C16059) * C31966) *
                C32276 +
            ((C16060 - C16061 + C16062 - C16063) * C118 +
             (C16064 - C16065 + C16066 - C16067) * C31966) *
                C32266 +
            ((C16068 - C16069 + C16070 - C16071) * C118 +
             (C16072 - C16073 + C16074 - C16075) * C31966) *
                C32248) *
               C531) *
              C440 +
          ((((C15491 - C15490 + C15493 - C15492) * C118 +
             (C15495 - C15494 + C15497 - C15496) * C31966) *
                C32280 +
            ((C15499 - C15498 + C15501 - C15500) * C118 +
             (C15503 - C15502 + C15505 - C15504) * C31966) *
                C32276 +
            ((C15507 - C15506 + C15509 - C15508) * C118 +
             (C15511 - C15510 + C15513 - C15512) * C31966) *
                C32266 +
            ((C15514 - C15515 + C15516 - C15517) * C118 +
             (C15518 - C15519 + C15520 - C15521) * C31966) *
                C32248) *
               C530 +
           (((C16053 - C16052 + C16055 - C16054) * C118 +
             (C16057 - C16056 + C16059 - C16058) * C31966) *
                C32280 +
            ((C16061 - C16060 + C16063 - C16062) * C118 +
             (C16065 - C16064 + C16067 - C16066) * C31966) *
                C32276 +
            ((C16069 - C16068 + C16071 - C16070) * C118 +
             (C16073 - C16072 + C16075 - C16074) * C31966) *
                C32266 +
            ((C15383 * C6151 - C15389 * C6148 + C31872 * C6345 -
              C15390 * C6344) *
                 C118 +
             (C15383 * C6157 - C15389 * C6152 + C31872 * C6347 -
              C15390 * C6346) *
                 C31966) *
                C32248) *
               C531) *
              C441) *
         C31899) /
            (p * q * std::sqrt(p + q));
    d2ee[22] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C32279 * C126 - C14631 * C119 + C32272 * C127 - C14632 * C120 +
             C32259 * C128 - C14633 * C121 + C32242 * C129 - C14634 * C122) *
                C118 +
            (C32279 * C140 - C14631 * C131 + C32272 * C141 - C14632 * C132 +
             C32259 * C142 - C14633 * C133 + C32242 * C143 - C14634 * C134) *
                C31966) *
               C14629 +
           ((C14734 - C14735 + C14736 - C14737 + C14738 - C14739 + C14740 -
             C14741) *
                C118 +
            (C14742 - C14743 + C14744 - C14745 + C14746 - C14747 + C14748 -
             C14749) *
                C31966) *
               C32013) *
              C31925 * C209 +
          (((C14735 - C14734 + C14737 - C14736 + C14739 - C14738 + C14741 -
             C14740) *
                C118 +
            (C14743 - C14742 + C14745 - C14744 + C14747 - C14746 + C14749 -
             C14748) *
                C31966) *
               C14629 +
           ((C14750 - C14751 + C14752 - C14753 + C14754 - C14755 + C14756 -
             C14757) *
                C118 +
            (C14758 - C14759 + C14760 - C14761 + C14762 - C14763 + C14764 -
             C14765) *
                C31966) *
               C32013) *
              C31925 * C210 +
          (((C14751 - C14750 + C14753 - C14752 + C14755 - C14754 + C14757 -
             C14756) *
                C118 +
            (C14759 - C14758 + C14761 - C14760 + C14763 - C14762 + C14765 -
             C14764) *
                C31966) *
               C14629 +
           ((C32279 * C873 - C14631 * C867 + C32272 * C874 - C14632 * C868 +
             C32259 * C875 - C14633 * C869 + C32242 * C1233 - C14634 * C1232) *
                C118 +
            (C32279 * C885 - C14631 * C876 + C32272 * C886 - C14632 * C877 +
             C32259 * C887 - C14633 * C878 + C32242 * C1235 - C14634 * C1234) *
                C31966) *
               C32013) *
              C31925 * C211) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C32279 * C126 - C14631 * C119 + C32272 * C127 - C14632 * C120 +
             C32259 * C128 - C14633 * C121 + C32242 * C129 - C14634 * C122) *
                C118 +
            (C32279 * C140 - C14631 * C131 + C32272 * C141 - C14632 * C132 +
             C32259 * C142 - C14633 * C133 + C32242 * C143 - C14634 * C134) *
                C31966) *
               C14629 +
           ((C32279 * C223 - C14631 * C213 + C32272 * C224 - C14632 * C214 +
             C32259 * C225 - C14633 * C215 + C32242 * C226 - C14634 * C216) *
                C118 +
            (C32279 * C243 - C14631 * C228 + C32272 * C244 - C14632 * C229 +
             C32259 * C245 - C14633 * C230 + C32242 * C246 - C14634 * C231) *
                C31966) *
               C32013) *
              C31925 * C31911 * C110 +
          (((C14631 * C120 - C32279 * C127 + C14632 * C121 - C32272 * C128 +
             C14633 * C122 - C32259 * C129 + C14634 * C123 - C32242 * C130) *
                C118 +
            (C14631 * C132 - C32279 * C141 + C14632 * C133 - C32272 * C142 +
             C14633 * C134 - C32259 * C143 + C14634 * C135 - C32242 * C144) *
                C31966) *
               C14629 +
           ((C14631 * C214 - C32279 * C224 + C14632 * C215 - C32272 * C225 +
             C14633 * C216 - C32259 * C226 + C14634 * C217 - C32242 * C227) *
                C118 +
            (C14631 * C229 - C32279 * C244 + C14632 * C230 - C32272 * C245 +
             C14633 * C231 - C32259 * C246 + C14634 * C232 - C32242 * C247) *
                C31966) *
               C32013) *
              C31925 * C31911 * C111 +
          (((C32279 * C128 - C14631 * C121 + C32272 * C129 - C14632 * C122 +
             C32259 * C130 - C14633 * C123 + C32242 * C136 - C14634 * C124) *
                C118 +
            (C32279 * C142 - C14631 * C133 + C32272 * C143 - C14632 * C134 +
             C32259 * C144 - C14633 * C135 + C32242 * C145 - C14634 * C137) *
                C31966) *
               C14629 +
           ((C32279 * C225 - C14631 * C215 + C32272 * C226 - C14632 * C216 +
             C32259 * C227 - C14633 * C217 + C32242 * C445 - C14634 * C444) *
                C118 +
            (C32279 * C245 - C14631 * C230 + C32272 * C246 - C14632 * C231 +
             C32259 * C247 - C14633 * C232 + C32242 * C447 - C14634 * C446) *
                C31966) *
               C32013) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C32279 * C126 - C14631 * C119 + C32272 * C127 - C14632 * C120 +
             C32259 * C128 - C14633 * C121 + C32242 * C129 - C14634 * C122) *
                C118 +
            (C32279 * C140 - C14631 * C131 + C32272 * C141 - C14632 * C132 +
             C32259 * C142 - C14633 * C133 + C32242 * C143 - C14634 * C134) *
                C31966) *
               C14629 +
           ((C14734 - C14735 + C14736 - C14737 + C14738 - C14739 + C14740 -
             C14741) *
                C118 +
            (C14742 - C14743 + C14744 - C14745 + C14746 - C14747 + C14748 -
             C14749) *
                C31966) *
               C32013) *
              C315 +
          (((C14631 * C318 - C32279 * C328 + C14632 * C319 - C32272 * C329 +
             C14633 * C320 - C32259 * C330 + C14634 * C321 - C32242 * C331) *
                C118 +
            (C14631 * C333 - C32279 * C348 + C14632 * C334 - C32272 * C349 +
             C14633 * C335 - C32259 * C350 + C14634 * C336 - C32242 * C351) *
                C31966) *
               C14629 +
           ((C14631 * C618 - C32279 * C623 + C14632 * C619 - C32272 * C624 +
             C14633 * C620 - C32259 * C625 + C14634 * C621 - C32242 * C626) *
                C118 +
            (C14631 * C628 - C32279 * C633 + C14632 * C629 - C32272 * C634 +
             C14633 * C630 - C32259 * C635 + C14634 * C631 - C32242 * C636) *
                C31966) *
               C32013) *
              C316 +
          (((C32279 * C338 - C14631 * C323 + C32272 * C339 - C14632 * C324 +
             C32259 * C340 - C14633 * C325 + C32242 * C341 - C14634 * C326) *
                C118 +
            (C32279 * C353 - C14631 * C343 + C32272 * C354 - C14632 * C344 +
             C32259 * C355 - C14633 * C345 + C32242 * C356 - C14634 * C346) *
                C31966) *
               C14629 +
           ((C32279 * C1065 - C14631 * C1053 + C32272 * C1066 - C14632 * C1054 +
             C32259 * C1067 - C14633 * C1055 + C32242 * C2145 -
             C14634 * C2144) *
                C118 +
            (C32279 * C1080 - C14631 * C1068 + C32272 * C1081 - C14632 * C1069 +
             C32259 * C1082 - C14633 * C1070 + C32242 * C2147 -
             C14634 * C2146) *
                C31966) *
               C32013) *
              C317) *
         C31911 * C31899) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C15383 * C126 - C15389 * C119 + C31872 * C127 - C15390 * C120) *
                C118 +
            (C15383 * C140 - C15389 * C131 + C31872 * C141 - C15390 * C132) *
                C31966) *
               C32280 +
           ((C15383 * C223 - C15389 * C213 + C31872 * C224 - C15390 * C214) *
                C118 +
            (C15383 * C243 - C15389 * C228 + C31872 * C244 - C15390 * C229) *
                C31966) *
               C32276 +
           ((C15383 * C233 - C15389 * C218 + C31872 * C234 - C15390 * C219) *
                C118 +
            (C15383 * C248 - C15389 * C238 + C31872 * C249 - C15390 * C239) *
                C31966) *
               C32266 +
           ((C15383 * C873 - C15389 * C867 + C31872 * C874 - C15390 * C868) *
                C118 +
            (C15383 * C885 - C15389 * C876 + C31872 * C886 - C15390 * C877) *
                C31966) *
               C32248) *
              C31925 * C31911 * C110 +
          (((C15389 * C120 - C15383 * C127 + C15390 * C121 - C31872 * C128) *
                C118 +
            (C15389 * C132 - C15383 * C141 + C15390 * C133 - C31872 * C142) *
                C31966) *
               C32280 +
           ((C15389 * C214 - C15383 * C224 + C15390 * C215 - C31872 * C225) *
                C118 +
            (C15389 * C229 - C15383 * C244 + C15390 * C230 - C31872 * C245) *
                C31966) *
               C32276 +
           ((C15389 * C219 - C15383 * C234 + C15390 * C220 - C31872 * C235) *
                C118 +
            (C15389 * C239 - C15383 * C249 + C15390 * C240 - C31872 * C250) *
                C31966) *
               C32266 +
           ((C15389 * C868 - C15383 * C874 + C15390 * C869 - C31872 * C875) *
                C118 +
            (C15389 * C877 - C15383 * C886 + C15390 * C878 - C31872 * C887) *
                C31966) *
               C32248) *
              C31925 * C31911 * C111 +
          (((C15383 * C128 - C15389 * C121 + C31872 * C129 - C15390 * C122) *
                C118 +
            (C15383 * C142 - C15389 * C133 + C31872 * C143 - C15390 * C134) *
                C31966) *
               C32280 +
           ((C15383 * C225 - C15389 * C215 + C31872 * C226 - C15390 * C216) *
                C118 +
            (C15383 * C245 - C15389 * C230 + C31872 * C246 - C15390 * C231) *
                C31966) *
               C32276 +
           ((C15383 * C235 - C15389 * C220 + C31872 * C236 - C15390 * C221) *
                C118 +
            (C15383 * C250 - C15389 * C240 + C31872 * C251 - C15390 * C241) *
                C31966) *
               C32266 +
           ((C15383 * C875 - C15389 * C869 + C31872 * C1233 - C15390 * C1232) *
                C118 +
            (C15383 * C887 - C15389 * C878 + C31872 * C1235 - C15390 * C1234) *
                C31966) *
               C32248) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C15383 * C126 - C15389 * C119 + C31872 * C127 - C15390 * C120) *
                C118 +
            (C15383 * C140 - C15389 * C131 + C31872 * C141 - C15390 * C132) *
                C31966) *
               C32280 +
           ((C15490 - C15491 + C15492 - C15493) * C118 +
            (C15494 - C15495 + C15496 - C15497) * C31966) *
               C32276 +
           C15538 * C32266 + C15539 * C32248) *
              C31925 * C209 +
          (((C15491 - C15490 + C15493 - C15492) * C118 +
            (C15495 - C15494 + C15497 - C15496) * C31966) *
               C32280 +
           ((C15499 - C15498 + C15501 - C15500) * C118 +
            (C15503 - C15502 + C15505 - C15504) * C31966) *
               C32276 +
           ((C15507 - C15506 + C15509 - C15508) * C118 +
            (C15511 - C15510 + C15513 - C15512) * C31966) *
               C32266 +
           ((C15514 - C15515 + C15516 - C15517) * C118 +
            (C15518 - C15519 + C15520 - C15521) * C31966) *
               C32248) *
              C31925 * C210 +
          (C15538 * C32280 + C15539 * C32276 +
           ((C15515 - C15514 + C15517 - C15516) * C118 +
            (C15519 - C15518 + C15521 - C15520) * C31966) *
               C32266 +
           ((C15383 * C6045 - C15389 * C6043 + C31872 * C6243 -
             C15390 * C6242) *
                C118 +
            (C15383 * C6049 - C15389 * C6046 + C31872 * C6245 -
             C15390 * C6244) *
                C31966) *
               C32248) *
              C31925 * C211) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C15383 * C126 - C15389 * C119 + C31872 * C127 - C15390 * C120) *
                C118 +
            (C15383 * C140 - C15389 * C131 + C31872 * C141 - C15390 * C132) *
                C31966) *
               C32280 +
           ((C15490 - C15491 + C15492 - C15493) * C118 +
            (C15494 - C15495 + C15496 - C15497) * C31966) *
               C32276 +
           C15538 * C32266 + C15539 * C32248) *
              C315 +
          (((C15389 * C318 - C15383 * C328 + C15390 * C319 - C31872 * C329) *
                C118 +
            (C15389 * C333 - C15383 * C348 + C15390 * C334 - C31872 * C349) *
                C31966) *
               C32280 +
           ((C15389 * C618 - C15383 * C623 + C15390 * C619 - C31872 * C624) *
                C118 +
            (C15389 * C628 - C15383 * C633 + C15390 * C629 - C31872 * C634) *
                C31966) *
               C32276 +
           ((C15389 * C1050 - C15383 * C1059 + C15390 * C1051 -
             C31872 * C1060) *
                C118 +
            (C15389 * C1062 - C15383 * C1077 + C15390 * C1063 -
             C31872 * C1078) *
                C31966) *
               C32266 +
           ((C15389 * C1556 - C15383 * C1559 + C15390 * C1557 -
             C31872 * C1560) *
                C118 +
            (C15389 * C1562 - C15383 * C1565 + C15390 * C1563 -
             C31872 * C1566) *
                C31966) *
               C32248) *
              C316 +
          (((C15383 * C338 - C15389 * C323 + C31872 * C339 - C15390 * C324) *
                C118 +
            (C15383 * C353 - C15389 * C343 + C31872 * C354 - C15390 * C344) *
                C31966) *
               C32280 +
           ((C15383 * C1065 - C15389 * C1053 + C31872 * C1066 -
             C15390 * C1054) *
                C118 +
            (C15383 * C1080 - C15389 * C1068 + C31872 * C1081 -
             C15390 * C1069) *
                C31966) *
               C32276 +
           ((C15383 * C1071 - C15389 * C1056 + C31872 * C1072 -
             C15390 * C1057) *
                C118 +
            (C15383 * C1083 - C15389 * C1074 + C31872 * C1084 -
             C15390 * C1075) *
                C31966) *
               C32266 +
           ((C15383 * C6153 - C15389 * C6149 + C31872 * C6990 -
             C15390 * C6989) *
                C118 +
            (C15383 * C6158 - C15389 * C6154 + C31872 * C6992 -
             C15390 * C6991) *
                C31966) *
               C32248) *
              C317) *
         C31911 * C31899) /
            (p * q * std::sqrt(p + q));
    d2ee[23] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C32279 * C126 - C14631 * C119 + C32272 * C127 - C14632 * C120 +
              C32259 * C128 - C14633 * C121 + C32242 * C129 - C14634 * C122) *
                 C118 +
             (C32279 * C140 - C14631 * C131 + C32272 * C141 - C14632 * C132 +
              C32259 * C142 - C14633 * C133 + C32242 * C143 - C14634 * C134) *
                 C31966) *
                C14629 +
            ((C14734 - C14735 + C14736 - C14737 + C14738 - C14739 + C14740 -
              C14741) *
                 C118 +
             (C14742 - C14743 + C14744 - C14745 + C14746 - C14747 + C14748 -
              C14749) *
                 C31966) *
                C32013) *
               C530 +
           (((C14631 * C318 - C32279 * C328 + C14632 * C319 - C32272 * C329 +
              C14633 * C320 - C32259 * C330 + C14634 * C321 - C32242 * C331) *
                 C118 +
             (C14631 * C333 - C32279 * C348 + C14632 * C334 - C32272 * C349 +
              C14633 * C335 - C32259 * C350 + C14634 * C336 - C32242 * C351) *
                 C31966) *
                C14629 +
            ((C14631 * C618 - C32279 * C623 + C14632 * C619 - C32272 * C624 +
              C14633 * C620 - C32259 * C625 + C14634 * C621 - C32242 * C626) *
                 C118 +
             (C14631 * C628 - C32279 * C633 + C14632 * C629 - C32272 * C634 +
              C14633 * C630 - C32259 * C635 + C14634 * C631 - C32242 * C636) *
                 C31966) *
                C32013) *
               C531) *
              C31911 * C442 +
          ((((C14631 * C120 - C32279 * C127 + C14632 * C121 - C32272 * C128 +
              C14633 * C122 - C32259 * C129 + C14634 * C123 - C32242 * C130) *
                 C118 +
             (C14631 * C132 - C32279 * C141 + C14632 * C133 - C32272 * C142 +
              C14633 * C134 - C32259 * C143 + C14634 * C135 - C32242 * C144) *
                 C31966) *
                C14629 +
            ((C14994 - C14995 + C14996 - C14997 + C14998 - C14999 + C15000 -
              C15001) *
                 C118 +
             (C15002 - C15003 + C15004 - C15005 + C15006 - C15007 + C15008 -
              C15009) *
                 C31966) *
                C32013) *
               C530 +
           (((C32279 * C329 - C14631 * C319 + C32272 * C330 - C14632 * C320 +
              C32259 * C331 - C14633 * C321 + C32242 * C332 - C14634 * C322) *
                 C118 +
             (C32279 * C349 - C14631 * C334 + C32272 * C350 - C14632 * C335 +
              C32259 * C351 - C14633 * C336 + C32242 * C352 - C14634 * C337) *
                 C31966) *
                C14629 +
            ((C32279 * C624 - C14631 * C619 + C32272 * C625 - C14632 * C620 +
              C32259 * C626 - C14633 * C621 + C32242 * C627 - C14634 * C622) *
                 C118 +
             (C32279 * C634 - C14631 * C629 + C32272 * C635 - C14632 * C630 +
              C32259 * C636 - C14633 * C631 + C32242 * C637 - C14634 * C632) *
                 C31966) *
                C32013) *
               C531) *
              C31911 * C443)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C15383 * C126 - C15389 * C119 + C31872 * C127 - C15390 * C120) *
                 C118 +
             (C15383 * C140 - C15389 * C131 + C31872 * C141 - C15390 * C132) *
                 C31966) *
                C32280 +
            ((C15490 - C15491 + C15492 - C15493) * C118 +
             (C15494 - C15495 + C15496 - C15497) * C31966) *
                C32276 +
            C15538 * C32266 + C15539 * C32248) *
               C530 +
           (((C15389 * C318 - C15383 * C328 + C15390 * C319 - C31872 * C329) *
                 C118 +
             (C15389 * C333 - C15383 * C348 + C15390 * C334 - C31872 * C349) *
                 C31966) *
                C32280 +
            ((C15389 * C618 - C15383 * C623 + C15390 * C619 - C31872 * C624) *
                 C118 +
             (C15389 * C628 - C15383 * C633 + C15390 * C629 - C31872 * C634) *
                 C31966) *
                C32276 +
            ((C15389 * C1050 - C15383 * C1059 + C15390 * C1051 -
              C31872 * C1060) *
                 C118 +
             (C15389 * C1062 - C15383 * C1077 + C15390 * C1063 -
              C31872 * C1078) *
                 C31966) *
                C32266 +
            ((C15389 * C1556 - C15383 * C1559 + C15390 * C1557 -
              C31872 * C1560) *
                 C118 +
             (C15389 * C1562 - C15383 * C1565 + C15390 * C1563 -
              C31872 * C1566) *
                 C31966) *
                C32248) *
               C531) *
              C31911 * C442 +
          ((((C15389 * C120 - C15383 * C127 + C15390 * C121 - C31872 * C128) *
                 C118 +
             (C15389 * C132 - C15383 * C141 + C15390 * C133 - C31872 * C142) *
                 C31966) *
                C32280 +
            ((C15768 - C15769 + C15770 - C15771) * C118 +
             (C15772 - C15773 + C15774 - C15775) * C31966) *
                C32276 +
            ((C15776 - C15777 + C15778 - C15779) * C118 +
             (C15780 - C15781 + C15782 - C15783) * C31966) *
                C32266 +
            ((C15784 - C15785 + C15786 - C15787) * C118 +
             (C15788 - C15789 + C15790 - C15791) * C31966) *
                C32248) *
               C530 +
           (((C15383 * C329 - C15389 * C319 + C31872 * C330 - C15390 * C320) *
                 C118 +
             (C15383 * C349 - C15389 * C334 + C31872 * C350 - C15390 * C335) *
                 C31966) *
                C32280 +
            ((C15383 * C624 - C15389 * C619 + C31872 * C625 - C15390 * C620) *
                 C118 +
             (C15383 * C634 - C15389 * C629 + C31872 * C635 - C15390 * C630) *
                 C31966) *
                C32276 +
            ((C15383 * C1060 - C15389 * C1051 + C31872 * C1061 -
              C15390 * C1052) *
                 C118 +
             (C15383 * C1078 - C15389 * C1063 + C31872 * C1079 -
              C15390 * C1064) *
                 C31966) *
                C32266 +
            ((C15383 * C1560 - C15389 * C1557 + C31872 * C1561 -
              C15390 * C1558) *
                 C118 +
             (C15383 * C1566 - C15389 * C1563 + C31872 * C1567 -
              C15390 * C1564) *
                 C31966) *
                C32248) *
               C531) *
              C31911 * C443)) /
            (p * q * std::sqrt(p + q));
    d2ee[24] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C32279 * C126 - C14631 * C119 + C32272 * C127 - C14632 * C120 +
             C32259 * C128 - C14633 * C121 + C32242 * C129 - C14634 * C122) *
                C118 +
            (C32279 * C140 - C14631 * C131 + C32272 * C141 - C14632 * C132 +
             C32259 * C142 - C14633 * C133 + C32242 * C143 - C14634 * C134) *
                C31966) *
               C14629 +
           ((C32279 * C223 - C14631 * C213 + C32272 * C224 - C14632 * C214 +
             C32259 * C225 - C14633 * C215 + C32242 * C226 - C14634 * C216) *
                C118 +
            (C32279 * C243 - C14631 * C228 + C32272 * C244 - C14632 * C229 +
             C32259 * C245 - C14633 * C230 + C32242 * C246 - C14634 * C231) *
                C31966) *
               C32013) *
              C31925 * C31911 * C110 +
          (((C14631 * C120 - C32279 * C127 + C14632 * C121 - C32272 * C128 +
             C14633 * C122 - C32259 * C129 + C14634 * C123 - C32242 * C130) *
                C118 +
            (C14631 * C132 - C32279 * C141 + C14632 * C133 - C32272 * C142 +
             C14633 * C134 - C32259 * C143 + C14634 * C135 - C32242 * C144) *
                C31966) *
               C14629 +
           ((C14631 * C214 - C32279 * C224 + C14632 * C215 - C32272 * C225 +
             C14633 * C216 - C32259 * C226 + C14634 * C217 - C32242 * C227) *
                C118 +
            (C14631 * C229 - C32279 * C244 + C14632 * C230 - C32272 * C245 +
             C14633 * C231 - C32259 * C246 + C14634 * C232 - C32242 * C247) *
                C31966) *
               C32013) *
              C31925 * C31911 * C111 +
          (((C32279 * C128 - C14631 * C121 + C32272 * C129 - C14632 * C122 +
             C32259 * C130 - C14633 * C123 + C32242 * C136 - C14634 * C124) *
                C118 +
            (C32279 * C142 - C14631 * C133 + C32272 * C143 - C14632 * C134 +
             C32259 * C144 - C14633 * C135 + C32242 * C145 - C14634 * C137) *
                C31966) *
               C14629 +
           ((C32279 * C225 - C14631 * C215 + C32272 * C226 - C14632 * C216 +
             C32259 * C227 - C14633 * C217 + C32242 * C445 - C14634 * C444) *
                C118 +
            (C32279 * C245 - C14631 * C230 + C32272 * C246 - C14632 * C231 +
             C32259 * C247 - C14633 * C232 + C32242 * C447 - C14634 * C446) *
                C31966) *
               C32013) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C32279 * C126 - C14631 * C119 + C32272 * C127 - C14632 * C120 +
             C32259 * C128 - C14633 * C121 + C32242 * C129 - C14634 * C122) *
                C118 +
            (C32279 * C140 - C14631 * C131 + C32272 * C141 - C14632 * C132 +
             C32259 * C142 - C14633 * C133 + C32242 * C143 - C14634 * C134) *
                C31966) *
               C14629 +
           ((C14734 - C14735 + C14736 - C14737 + C14738 - C14739 + C14740 -
             C14741) *
                C118 +
            (C14742 - C14743 + C14744 - C14745 + C14746 - C14747 + C14748 -
             C14749) *
                C31966) *
               C32013) *
              C31925 * C209 +
          (((C14735 - C14734 + C14737 - C14736 + C14739 - C14738 + C14741 -
             C14740) *
                C118 +
            (C14743 - C14742 + C14745 - C14744 + C14747 - C14746 + C14749 -
             C14748) *
                C31966) *
               C14629 +
           ((C14750 - C14751 + C14752 - C14753 + C14754 - C14755 + C14756 -
             C14757) *
                C118 +
            (C14758 - C14759 + C14760 - C14761 + C14762 - C14763 + C14764 -
             C14765) *
                C31966) *
               C32013) *
              C31925 * C210 +
          (((C14751 - C14750 + C14753 - C14752 + C14755 - C14754 + C14757 -
             C14756) *
                C118 +
            (C14759 - C14758 + C14761 - C14760 + C14763 - C14762 + C14765 -
             C14764) *
                C31966) *
               C14629 +
           ((C32279 * C873 - C14631 * C867 + C32272 * C874 - C14632 * C868 +
             C32259 * C875 - C14633 * C869 + C32242 * C1233 - C14634 * C1232) *
                C118 +
            (C32279 * C885 - C14631 * C876 + C32272 * C886 - C14632 * C877 +
             C32259 * C887 - C14633 * C878 + C32242 * C1235 - C14634 * C1234) *
                C31966) *
               C32013) *
              C31925 * C211) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C15383 * C126 - C15389 * C119 + C31872 * C127 - C15390 * C120) *
                C118 +
            (C15383 * C140 - C15389 * C131 + C31872 * C141 - C15390 * C132) *
                C31966) *
               C32280 +
           ((C15383 * C223 - C15389 * C213 + C31872 * C224 - C15390 * C214) *
                C118 +
            (C15383 * C243 - C15389 * C228 + C31872 * C244 - C15390 * C229) *
                C31966) *
               C32276 +
           ((C15383 * C233 - C15389 * C218 + C31872 * C234 - C15390 * C219) *
                C118 +
            (C15383 * C248 - C15389 * C238 + C31872 * C249 - C15390 * C239) *
                C31966) *
               C32266 +
           ((C15383 * C873 - C15389 * C867 + C31872 * C874 - C15390 * C868) *
                C118 +
            (C15383 * C885 - C15389 * C876 + C31872 * C886 - C15390 * C877) *
                C31966) *
               C32248) *
              C31925 * C31911 * C110 +
          (((C15389 * C120 - C15383 * C127 + C15390 * C121 - C31872 * C128) *
                C118 +
            (C15389 * C132 - C15383 * C141 + C15390 * C133 - C31872 * C142) *
                C31966) *
               C32280 +
           ((C15389 * C214 - C15383 * C224 + C15390 * C215 - C31872 * C225) *
                C118 +
            (C15389 * C229 - C15383 * C244 + C15390 * C230 - C31872 * C245) *
                C31966) *
               C32276 +
           ((C15389 * C219 - C15383 * C234 + C15390 * C220 - C31872 * C235) *
                C118 +
            (C15389 * C239 - C15383 * C249 + C15390 * C240 - C31872 * C250) *
                C31966) *
               C32266 +
           ((C15389 * C868 - C15383 * C874 + C15390 * C869 - C31872 * C875) *
                C118 +
            (C15389 * C877 - C15383 * C886 + C15390 * C878 - C31872 * C887) *
                C31966) *
               C32248) *
              C31925 * C31911 * C111 +
          (((C15383 * C128 - C15389 * C121 + C31872 * C129 - C15390 * C122) *
                C118 +
            (C15383 * C142 - C15389 * C133 + C31872 * C143 - C15390 * C134) *
                C31966) *
               C32280 +
           ((C15383 * C225 - C15389 * C215 + C31872 * C226 - C15390 * C216) *
                C118 +
            (C15383 * C245 - C15389 * C230 + C31872 * C246 - C15390 * C231) *
                C31966) *
               C32276 +
           ((C15383 * C235 - C15389 * C220 + C31872 * C236 - C15390 * C221) *
                C118 +
            (C15383 * C250 - C15389 * C240 + C31872 * C251 - C15390 * C241) *
                C31966) *
               C32266 +
           ((C15383 * C875 - C15389 * C869 + C31872 * C1233 - C15390 * C1232) *
                C118 +
            (C15383 * C887 - C15389 * C878 + C31872 * C1235 - C15390 * C1234) *
                C31966) *
               C32248) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C15383 * C126 - C15389 * C119 + C31872 * C127 - C15390 * C120) *
                C118 +
            (C15383 * C140 - C15389 * C131 + C31872 * C141 - C15390 * C132) *
                C31966) *
               C32280 +
           ((C15490 - C15491 + C15492 - C15493) * C118 +
            (C15494 - C15495 + C15496 - C15497) * C31966) *
               C32276 +
           C15538 * C32266 + C15539 * C32248) *
              C31925 * C209 +
          (((C15491 - C15490 + C15493 - C15492) * C118 +
            (C15495 - C15494 + C15497 - C15496) * C31966) *
               C32280 +
           ((C15499 - C15498 + C15501 - C15500) * C118 +
            (C15503 - C15502 + C15505 - C15504) * C31966) *
               C32276 +
           ((C15507 - C15506 + C15509 - C15508) * C118 +
            (C15511 - C15510 + C15513 - C15512) * C31966) *
               C32266 +
           ((C15514 - C15515 + C15516 - C15517) * C118 +
            (C15518 - C15519 + C15520 - C15521) * C31966) *
               C32248) *
              C31925 * C210 +
          (C15538 * C32280 + C15539 * C32276 +
           ((C15515 - C15514 + C15517 - C15516) * C118 +
            (C15519 - C15518 + C15521 - C15520) * C31966) *
               C32266 +
           ((C15383 * C6045 - C15389 * C6043 + C31872 * C6243 -
             C15390 * C6242) *
                C118 +
            (C15383 * C6049 - C15389 * C6046 + C31872 * C6245 -
             C15390 * C6244) *
                C31966) *
               C32248) *
              C31925 * C211) *
         C31899) /
            (p * q * std::sqrt(p + q));
    d2ee[25] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C32188 * C126 - C30873 * C119 + C31872 * C127 - C30854 * C120) *
                 C20326 +
             (C32188 * C140 - C30873 * C131 + C31872 * C141 - C30854 * C132) *
                 C20324 +
             (C8569 - C8570 + C8571 - C8572) * C20327 +
             (C8573 - C8574 + C8575 - C8576) * C32053) *
                C32009 +
            ((C7532 - C7533 + C7534 - C7535) * C20326 +
             (C7536 - C7537 + C7538 - C7539) * C20324 + C9219 * C20327 +
             C9220 * C32053) *
                C32016 +
            C28284 * C17320) *
               C31925 * C440 +
           (((C7533 - C7532 + C7535 - C7534) * C20326 +
             (C7537 - C7536 + C7539 - C7538) * C20324 + C9221 * C20327 +
             C9222 * C32053) *
                C32009 +
            ((C7541 - C7540 + C7543 - C7542) * C20326 +
             (C7545 - C7544 + C7547 - C7546) * C20324 + C9223 * C20327 +
             C9224 * C32053) *
                C32016 +
            ((C7549 - C7548 + C7551 - C7550) * C20326 +
             (C7553 - C7552 + C7555 - C7554) * C20324 +
             (C8110 - C8111 + C8112 - C8113) * C20327 +
             (C8114 - C8115 + C8116 - C8117) * C32053) *
                C17320) *
               C31925 * C441) *
              C442 +
          ((((C30873 * C120 - C32188 * C127 + C30854 * C121 - C31872 * C128) *
                 C20326 +
             (C30873 * C132 - C32188 * C141 + C30854 * C133 - C31872 * C142) *
                 C20324 +
             (C9005 - C9006 + C9007 - C9008) * C20327 +
             (C9009 - C9010 + C9011 - C9012) * C32053) *
                C32009 +
            ((C7810 - C7811 + C7812 - C7813) * C20326 +
             (C7814 - C7815 + C7816 - C7817) * C20324 +
             (C8795 - C8796 + C8797 - C8798) * C20327 +
             (C8799 - C8800 + C8801 - C8802) * C32053) *
                C32016 +
            ((C7818 - C7819 + C7820 - C7821) * C20326 +
             (C7822 - C7823 + C7824 - C7825) * C20324 +
             (C8803 - C8804 + C8805 - C8806) * C20327 +
             (C8807 - C8808 + C8809 - C8810) * C32053) *
                C17320) *
               C31925 * C440 +
           (((C7811 - C7810 + C7813 - C7812) * C20326 +
             (C7815 - C7814 + C7817 - C7816) * C20324 +
             (C8796 - C8795 + C8798 - C8797) * C20327 +
             (C8800 - C8799 + C8802 - C8801) * C32053) *
                C32009 +
            ((C7819 - C7818 + C7821 - C7820) * C20326 +
             (C7823 - C7822 + C7825 - C7824) * C20324 +
             (C8804 - C8803 + C8806 - C8805) * C20327 +
             (C8808 - C8807 + C8810 - C8809) * C32053) *
                C32016 +
            ((C7827 - C7826 + C7829 - C7828) * C20326 +
             (C7831 - C7830 + C7833 - C7832) * C20324 +
             (C32188 * C1560 - C30873 * C1557 + C31872 * C1561 -
              C30854 * C1558) *
                 C20327 +
             (C32188 * C1566 - C30873 * C1563 + C31872 * C1567 -
              C30854 * C1564) *
                 C32053) *
                C17320) *
               C31925 * C441) *
              C443)) /
        (p * q * std::sqrt(p + q));
    d2ee[26] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C32188 * C126 - C30873 * C119 + C31872 * C127 - C30854 * C120) *
                 C20326 +
             (C32188 * C140 - C30873 * C131 + C31872 * C141 - C30854 * C132) *
                 C20324 +
             (C8569 - C8570 + C8571 - C8572) * C20327 +
             (C8573 - C8574 + C8575 - C8576) * C32053) *
                C32009 +
            ((C7532 - C7533 + C7534 - C7535) * C20326 +
             (C7536 - C7537 + C7538 - C7539) * C20324 + C9219 * C20327 +
             C9220 * C32053) *
                C32016 +
            C28284 * C17320) *
               C530 +
           (((C8570 - C8569 + C8572 - C8571) * C20326 +
             (C8574 - C8573 + C8576 - C8575) * C20324 +
             (C8577 - C8578 + C8579 - C8580) * C20327 +
             (C8581 - C8582 + C8583 - C8584) * C32053) *
                C32009 +
            (C9221 * C20326 + C9222 * C20324 + C13120 * C20327 +
             C13121 * C32053) *
                C32016 +
            (C9223 * C20326 + C9224 * C20324 +
             (C8593 - C8594 + C8595 - C8596) * C20327 +
             (C8597 - C8598 + C8599 - C8600) * C32053) *
                C17320) *
               C531) *
              C440 +
          ((((C7533 - C7532 + C7535 - C7534) * C20326 +
             (C7537 - C7536 + C7539 - C7538) * C20324 + C9221 * C20327 +
             C9222 * C32053) *
                C32009 +
            ((C7541 - C7540 + C7543 - C7542) * C20326 +
             (C7545 - C7544 + C7547 - C7546) * C20324 + C9223 * C20327 +
             C9224 * C32053) *
                C32016 +
            ((C7549 - C7548 + C7551 - C7550) * C20326 +
             (C7553 - C7552 + C7555 - C7554) * C20324 +
             (C8110 - C8111 + C8112 - C8113) * C20327 +
             (C8114 - C8115 + C8116 - C8117) * C32053) *
                C17320) *
               C530 +
           ((C9219 * C20326 + C9220 * C20324 + C12516 * C20327 +
             C12517 * C32053) *
                C32009 +
            (C8417 * C20326 + C8418 * C20324 +
             (C8594 - C8593 + C8596 - C8595) * C20327 +
             (C8598 - C8597 + C8600 - C8599) * C32053) *
                C32016 +
            ((C8111 - C8110 + C8113 - C8112) * C20326 +
             (C8115 - C8114 + C8117 - C8116) * C20324 +
             (C32188 * C6153 - C30873 * C6149 + C31872 * C6990 -
              C30854 * C6989) *
                 C20327 +
             (C32188 * C6158 - C30873 * C6154 + C31872 * C6992 -
              C30854 * C6991) *
                 C32053) *
                C17320) *
               C531) *
              C441) *
         C31899) /
        (p * q * std::sqrt(p + q));
    d2ee[27] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C32188 * C126 - C30873 * C119 + C31872 * C127 - C30854 * C120) *
                C20326 +
            (C32188 * C140 - C30873 * C131 + C31872 * C141 - C30854 * C132) *
                C20324 +
            (C8569 - C8570 + C8571 - C8572) * C20327 +
            (C8573 - C8574 + C8575 - C8576) * C32053) *
               C32009 +
           ((C7532 - C7533 + C7534 - C7535) * C20326 +
            (C7536 - C7537 + C7538 - C7539) * C20324 + C9219 * C20327 +
            C9220 * C32053) *
               C32016 +
           C28284 * C17320) *
              C31925 * C209 +
          (((C7533 - C7532 + C7535 - C7534) * C20326 +
            (C7537 - C7536 + C7539 - C7538) * C20324 + C9221 * C20327 +
            C9222 * C32053) *
               C32009 +
           ((C7541 - C7540 + C7543 - C7542) * C20326 +
            (C7545 - C7544 + C7547 - C7546) * C20324 + C9223 * C20327 +
            C9224 * C32053) *
               C32016 +
           ((C7549 - C7548 + C7551 - C7550) * C20326 +
            (C7553 - C7552 + C7555 - C7554) * C20324 +
            (C8110 - C8111 + C8112 - C8113) * C20327 +
            (C8114 - C8115 + C8116 - C8117) * C32053) *
               C17320) *
              C31925 * C210 +
          (C28284 * C32009 +
           (C7574 * C20326 + C7575 * C20324 +
            (C8111 - C8110 + C8113 - C8112) * C20327 +
            (C8115 - C8114 + C8117 - C8116) * C32053) *
               C32016 +
           ((C7557 - C7556 + C7559 - C7558) * C20326 +
            (C7561 - C7560 + C7563 - C7562) * C20324 +
            (C32188 * C6151 - C30873 * C6148 + C31872 * C6345 -
             C30854 * C6344) *
                C20327 +
            (C32188 * C6157 - C30873 * C6152 + C31872 * C6347 -
             C30854 * C6346) *
                C32053) *
               C17320) *
              C31925 * C211) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C32188 * C126 - C30873 * C119 + C31872 * C127 - C30854 * C120) *
                C20326 +
            (C32188 * C140 - C30873 * C131 + C31872 * C141 - C30854 * C132) *
                C20324 +
            (C8569 - C8570 + C8571 - C8572) * C20327 +
            (C8573 - C8574 + C8575 - C8576) * C32053) *
               C32009 +
           ((C7532 - C7533 + C7534 - C7535) * C20326 +
            (C7536 - C7537 + C7538 - C7539) * C20324 + C9219 * C20327 +
            C9220 * C32053) *
               C32016 +
           (C7572 * C20326 + C7573 * C20324 + C8417 * C20327 + C8418 * C32053) *
               C17320) *
              C31925 * C31911 * C110 +
          (((C30873 * C120 - C32188 * C127 + C30854 * C121 - C31872 * C128) *
                C20326 +
            (C30873 * C132 - C32188 * C141 + C30854 * C133 - C31872 * C142) *
                C20324 +
            (C9005 - C9006 + C9007 - C9008) * C20327 +
            (C9009 - C9010 + C9011 - C9012) * C32053) *
               C32009 +
           ((C7810 - C7811 + C7812 - C7813) * C20326 +
            (C7814 - C7815 + C7816 - C7817) * C20324 +
            (C8795 - C8796 + C8797 - C8798) * C20327 +
            (C8799 - C8800 + C8801 - C8802) * C32053) *
               C32016 +
           ((C7818 - C7819 + C7820 - C7821) * C20326 +
            (C7822 - C7823 + C7824 - C7825) * C20324 +
            (C8803 - C8804 + C8805 - C8806) * C20327 +
            (C8807 - C8808 + C8809 - C8810) * C32053) *
               C17320) *
              C31925 * C31911 * C111 +
          (((C32188 * C128 - C30873 * C121 + C31872 * C129 - C30854 * C122) *
                C20326 +
            (C32188 * C142 - C30873 * C133 + C31872 * C143 - C30854 * C134) *
                C20324 +
            (C32188 * C330 - C30873 * C320 + C31872 * C331 - C30854 * C321) *
                C20327 +
            (C32188 * C350 - C30873 * C335 + C31872 * C351 - C30854 * C336) *
                C32053) *
               C32009 +
           ((C32188 * C225 - C30873 * C215 + C31872 * C226 - C30854 * C216) *
                C20326 +
            (C32188 * C245 - C30873 * C230 + C31872 * C246 - C30854 * C231) *
                C20324 +
            (C32188 * C625 - C30873 * C620 + C31872 * C626 - C30854 * C621) *
                C20327 +
            (C32188 * C635 - C30873 * C630 + C31872 * C636 - C30854 * C631) *
                C32053) *
               C32016 +
           ((C32188 * C235 - C30873 * C220 + C31872 * C236 - C30854 * C221) *
                C20326 +
            (C32188 * C250 - C30873 * C240 + C31872 * C251 - C30854 * C241) *
                C20324 +
            (C32188 * C1061 - C30873 * C1052 + C31872 * C1407 -
             C30854 * C1406) *
                C20327 +
            (C32188 * C1079 - C30873 * C1064 + C31872 * C1409 -
             C30854 * C1408) *
                C32053) *
               C17320) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C32188 * C126 - C30873 * C119 + C31872 * C127 - C30854 * C120) *
                C20326 +
            (C32188 * C140 - C30873 * C131 + C31872 * C141 - C30854 * C132) *
                C20324 +
            (C8569 - C8570 + C8571 - C8572) * C20327 +
            (C8573 - C8574 + C8575 - C8576) * C32053) *
               C32009 +
           ((C7532 - C7533 + C7534 - C7535) * C20326 +
            (C7536 - C7537 + C7538 - C7539) * C20324 + C9219 * C20327 +
            C9220 * C32053) *
               C32016 +
           C28284 * C17320) *
              C315 +
          (((C8570 - C8569 + C8572 - C8571) * C20326 +
            (C8574 - C8573 + C8576 - C8575) * C20324 +
            (C8577 - C8578 + C8579 - C8580) * C20327 +
            (C8581 - C8582 + C8583 - C8584) * C32053) *
               C32009 +
           (C9221 * C20326 + C9222 * C20324 + C13120 * C20327 +
            C13121 * C32053) *
               C32016 +
           (C9223 * C20326 + C9224 * C20324 +
            (C8593 - C8594 + C8595 - C8596) * C20327 +
            (C8597 - C8598 + C8599 - C8600) * C32053) *
               C17320) *
              C316 +
          ((C12514 * C20326 + C12515 * C20324 + C13436 * C20327 +
            C13437 * C32053) *
               C32009 +
           (C12516 * C20326 + C12517 * C20324 +
            (C12507 - C12506 + C12509 - C12508) * C20327 +
            (C12511 - C12510 + C12513 - C12512) * C32053) *
               C32016 +
           ((C8594 - C8593 + C8596 - C8595) * C20326 +
            (C8598 - C8597 + C8600 - C8599) * C20324 +
            (C32188 * C6810 - C30873 * C6807 + C31872 * C7156 -
             C30854 * C7155) *
                C20327 +
            (C32188 * C6816 - C30873 * C6811 + C31872 * C7158 -
             C30854 * C7157) *
                C32053) *
               C17320) *
              C317) *
         C31911 * C31899) /
            (p * q * std::sqrt(p + q));
    d2ee[28] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C32188 * C126 - C30873 * C119 + C31872 * C127 - C30854 * C120) *
                 C20326 +
             (C32188 * C140 - C30873 * C131 + C31872 * C141 - C30854 * C132) *
                 C20324 +
             (C8569 - C8570 + C8571 - C8572) * C20327 +
             (C8573 - C8574 + C8575 - C8576) * C32053) *
                C32009 +
            ((C7532 - C7533 + C7534 - C7535) * C20326 +
             (C7536 - C7537 + C7538 - C7539) * C20324 + C9219 * C20327 +
             C9220 * C32053) *
                C32016 +
            C28284 * C17320) *
               C530 +
           (((C8570 - C8569 + C8572 - C8571) * C20326 +
             (C8574 - C8573 + C8576 - C8575) * C20324 +
             (C8577 - C8578 + C8579 - C8580) * C20327 +
             (C8581 - C8582 + C8583 - C8584) * C32053) *
                C32009 +
            (C9221 * C20326 + C9222 * C20324 + C13120 * C20327 +
             C13121 * C32053) *
                C32016 +
            (C9223 * C20326 + C9224 * C20324 +
             (C8593 - C8594 + C8595 - C8596) * C20327 +
             (C8597 - C8598 + C8599 - C8600) * C32053) *
                C17320) *
               C531) *
              C31911 * C442 +
          ((((C30873 * C120 - C32188 * C127 + C30854 * C121 - C31872 * C128) *
                 C20326 +
             (C30873 * C132 - C32188 * C141 + C30854 * C133 - C31872 * C142) *
                 C20324 +
             (C9005 - C9006 + C9007 - C9008) * C20327 +
             (C9009 - C9010 + C9011 - C9012) * C32053) *
                C32009 +
            ((C7810 - C7811 + C7812 - C7813) * C20326 +
             (C7814 - C7815 + C7816 - C7817) * C20324 +
             (C8795 - C8796 + C8797 - C8798) * C20327 +
             (C8799 - C8800 + C8801 - C8802) * C32053) *
                C32016 +
            ((C7818 - C7819 + C7820 - C7821) * C20326 +
             (C7822 - C7823 + C7824 - C7825) * C20324 +
             (C8803 - C8804 + C8805 - C8806) * C20327 +
             (C8807 - C8808 + C8809 - C8810) * C32053) *
                C17320) *
               C530 +
           (((C9006 - C9005 + C9008 - C9007) * C20326 +
             (C9010 - C9009 + C9012 - C9011) * C20324 +
             (C12915 - C12914 + C12917 - C12916) * C20327 +
             (C12919 - C12918 + C12921 - C12920) * C32053) *
                C32009 +
            ((C8796 - C8795 + C8798 - C8797) * C20326 +
             (C8800 - C8799 + C8802 - C8801) * C20324 +
             (C12713 - C12712 + C12715 - C12714) * C20327 +
             (C12717 - C12716 + C12719 - C12718) * C32053) *
                C32016 +
            ((C8804 - C8803 + C8806 - C8805) * C20326 +
             (C8808 - C8807 + C8810 - C8809) * C20324 +
             (C32188 * C1072 - C30873 * C1057 + C31872 * C1073 -
              C30854 * C1058) *
                 C20327 +
             (C32188 * C1084 - C30873 * C1075 + C31872 * C1085 -
              C30854 * C1076) *
                 C32053) *
                C17320) *
               C531) *
              C31911 * C443)) /
        (p * q * std::sqrt(p + q));
    d2ee[29] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C32188 * C126 - C30873 * C119 + C31872 * C127 - C30854 * C120) *
                C20326 +
            (C32188 * C140 - C30873 * C131 + C31872 * C141 - C30854 * C132) *
                C20324 +
            (C8569 - C8570 + C8571 - C8572) * C20327 +
            (C8573 - C8574 + C8575 - C8576) * C32053) *
               C32009 +
           ((C7532 - C7533 + C7534 - C7535) * C20326 +
            (C7536 - C7537 + C7538 - C7539) * C20324 + C9219 * C20327 +
            C9220 * C32053) *
               C32016 +
           (C7572 * C20326 + C7573 * C20324 + C8417 * C20327 + C8418 * C32053) *
               C17320) *
              C31925 * C31911 * C110 +
          (((C30873 * C120 - C32188 * C127 + C30854 * C121 - C31872 * C128) *
                C20326 +
            (C30873 * C132 - C32188 * C141 + C30854 * C133 - C31872 * C142) *
                C20324 +
            (C9005 - C9006 + C9007 - C9008) * C20327 +
            (C9009 - C9010 + C9011 - C9012) * C32053) *
               C32009 +
           ((C7810 - C7811 + C7812 - C7813) * C20326 +
            (C7814 - C7815 + C7816 - C7817) * C20324 +
            (C8795 - C8796 + C8797 - C8798) * C20327 +
            (C8799 - C8800 + C8801 - C8802) * C32053) *
               C32016 +
           ((C7818 - C7819 + C7820 - C7821) * C20326 +
            (C7822 - C7823 + C7824 - C7825) * C20324 +
            (C8803 - C8804 + C8805 - C8806) * C20327 +
            (C8807 - C8808 + C8809 - C8810) * C32053) *
               C17320) *
              C31925 * C31911 * C111 +
          (((C32188 * C128 - C30873 * C121 + C31872 * C129 - C30854 * C122) *
                C20326 +
            (C32188 * C142 - C30873 * C133 + C31872 * C143 - C30854 * C134) *
                C20324 +
            (C32188 * C330 - C30873 * C320 + C31872 * C331 - C30854 * C321) *
                C20327 +
            (C32188 * C350 - C30873 * C335 + C31872 * C351 - C30854 * C336) *
                C32053) *
               C32009 +
           ((C32188 * C225 - C30873 * C215 + C31872 * C226 - C30854 * C216) *
                C20326 +
            (C32188 * C245 - C30873 * C230 + C31872 * C246 - C30854 * C231) *
                C20324 +
            (C32188 * C625 - C30873 * C620 + C31872 * C626 - C30854 * C621) *
                C20327 +
            (C32188 * C635 - C30873 * C630 + C31872 * C636 - C30854 * C631) *
                C32053) *
               C32016 +
           ((C32188 * C235 - C30873 * C220 + C31872 * C236 - C30854 * C221) *
                C20326 +
            (C32188 * C250 - C30873 * C240 + C31872 * C251 - C30854 * C241) *
                C20324 +
            (C32188 * C1061 - C30873 * C1052 + C31872 * C1407 -
             C30854 * C1406) *
                C20327 +
            (C32188 * C1079 - C30873 * C1064 + C31872 * C1409 -
             C30854 * C1408) *
                C32053) *
               C17320) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C32188 * C126 - C30873 * C119 + C31872 * C127 - C30854 * C120) *
                C20326 +
            (C32188 * C140 - C30873 * C131 + C31872 * C141 - C30854 * C132) *
                C20324 +
            (C8569 - C8570 + C8571 - C8572) * C20327 +
            (C8573 - C8574 + C8575 - C8576) * C32053) *
               C32009 +
           ((C7532 - C7533 + C7534 - C7535) * C20326 +
            (C7536 - C7537 + C7538 - C7539) * C20324 + C9219 * C20327 +
            C9220 * C32053) *
               C32016 +
           C28284 * C17320) *
              C31925 * C209 +
          (((C7533 - C7532 + C7535 - C7534) * C20326 +
            (C7537 - C7536 + C7539 - C7538) * C20324 + C9221 * C20327 +
            C9222 * C32053) *
               C32009 +
           ((C7541 - C7540 + C7543 - C7542) * C20326 +
            (C7545 - C7544 + C7547 - C7546) * C20324 + C9223 * C20327 +
            C9224 * C32053) *
               C32016 +
           ((C7549 - C7548 + C7551 - C7550) * C20326 +
            (C7553 - C7552 + C7555 - C7554) * C20324 +
            (C8110 - C8111 + C8112 - C8113) * C20327 +
            (C8114 - C8115 + C8116 - C8117) * C32053) *
               C17320) *
              C31925 * C210 +
          (C28284 * C32009 +
           (C7574 * C20326 + C7575 * C20324 +
            (C8111 - C8110 + C8113 - C8112) * C20327 +
            (C8115 - C8114 + C8117 - C8116) * C32053) *
               C32016 +
           ((C7557 - C7556 + C7559 - C7558) * C20326 +
            (C7561 - C7560 + C7563 - C7562) * C20324 +
            (C32188 * C6151 - C30873 * C6148 + C31872 * C6345 -
             C30854 * C6344) *
                C20327 +
            (C32188 * C6157 - C30873 * C6152 + C31872 * C6347 -
             C30854 * C6346) *
                C32053) *
               C17320) *
              C31925 * C211) *
         C31899) /
            (p * q * std::sqrt(p + q));
    d2ee[30] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 (((((C31862 * C126 - C5980 * C119) * C31010 +
                     (C31862 * C140 - C5980 * C131) * C32049 +
                     (C6820 - C6821) * C31002 + (C6822 - C6823) * C32056 +
                     C6842 * C31016 + C6843 * C23835) *
                        C32009 +
                    ((C6052 - C6053) * C31010 + (C6054 - C6055) * C32049 +
                     C7318 * C31002 + C7319 * C32056 + C6828 * C31016 +
                     C6829 * C23835) *
                        C32016 +
                    C30263 * C17320) *
                       C31925 * C440 +
                   (((C6053 - C6052) * C31010 + (C6055 - C6054) * C32049 +
                     C7320 * C31002 + C7321 * C32056 + C7322 * C31016 +
                     C7323 * C23835) *
                        C32009 +
                    ((C6057 - C6056) * C31010 + (C6059 - C6058) * C32049 +
                     C7324 * C31002 + C7325 * C32056 + C7326 * C31016 +
                     C7327 * C23835) *
                        C32016 +
                    ((C6061 - C6060) * C31010 + (C6063 - C6062) * C32049 +
                     C9929 * C31002 + C9930 * C32056 +
                     (C6683 - C6684) * C31016 + (C6685 - C6686) * C23835) *
                        C17320) *
                       C31925 * C441) *
                      C442 +
                  ((((C5980 * C120 - C31862 * C127) * C31010 +
                     (C5980 * C132 - C31862 * C141) * C32049 +
                     (C7160 - C7161) * C31002 + (C7162 - C7163) * C32056 +
                     (C7164 - C7165) * C31016 + (C7166 - C7167) * C23835) *
                        C32009 +
                    ((C6247 - C6248) * C31010 + (C6249 - C6250) * C32049 +
                     (C6994 - C6995) * C31002 + (C6996 - C6997) * C32056 +
                     (C6998 - C6999) * C31016 + (C7000 - C7001) * C23835) *
                        C32016 +
                    ((C6251 - C6252) * C31010 + (C6253 - C6254) * C32049 +
                     (C7002 - C7003) * C31002 + (C7004 - C7005) * C32056 +
                     (C7006 - C7007) * C31016 + (C7008 - C7009) * C23835) *
                        C17320) *
                       C31925 * C440 +
                   (((C6248 - C6247) * C31010 + (C6250 - C6249) * C32049 +
                     (C6995 - C6994) * C31002 + (C6997 - C6996) * C32056 +
                     (C6999 - C6998) * C31016 + (C7001 - C7000) * C23835) *
                        C32009 +
                    ((C6252 - C6251) * C31010 + (C6254 - C6253) * C32049 +
                     (C7003 - C7002) * C31002 + (C7005 - C7004) * C32056 +
                     (C7007 - C7006) * C31016 + (C7009 - C7008) * C23835) *
                        C32016 +
                    ((C6256 - C6255) * C31010 + (C6258 - C6257) * C32049 +
                     (C9666 - C9665) * C31002 + (C9668 - C9667) * C32056 +
                     (C31862 * C6990 - C5980 * C6989) * C31016 +
                     (C31862 * C6992 - C5980 * C6991) * C23835) *
                        C17320) *
                       C31925 * C441) *
                      C443)) /
                (p * q * std::sqrt(p + q));
    d2ee[31] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C31862 * C126 - C5980 * C119) * C31010 +
             (C31862 * C140 - C5980 * C131) * C32049 +
             (C6820 - C6821) * C31002 + (C6822 - C6823) * C32056 +
             C6842 * C31016 + C6843 * C23835) *
                C32009 +
            ((C6052 - C6053) * C31010 + (C6054 - C6055) * C32049 +
             C7318 * C31002 + C7319 * C32056 + C6828 * C31016 +
             C6829 * C23835) *
                C32016 +
            C30263 * C17320) *
               C530 +
           (((C6821 - C6820) * C31010 + (C6823 - C6822) * C32049 +
             (C6825 - C6824) * C31002 + (C6827 - C6826) * C32056 +
             (C6830 - C6831) * C31016 + (C6832 - C6833) * C23835) *
                C32009 +
            (C7320 * C31010 + C7321 * C32049 + C7322 * C31002 + C7323 * C32056 +
             C14526 * C31016 + C14527 * C23835) *
                C32016 +
            (C7324 * C31010 + C7325 * C32049 + C7326 * C31002 + C7327 * C32056 +
             (C6838 - C6839) * C31016 + (C6840 - C6841) * C23835) *
                C17320) *
               C531) *
              C440 +
          ((((C6053 - C6052) * C31010 + (C6055 - C6054) * C32049 +
             C7320 * C31002 + C7321 * C32056 + C7322 * C31016 +
             C7323 * C23835) *
                C32009 +
            ((C6057 - C6056) * C31010 + (C6059 - C6058) * C32049 +
             C7324 * C31002 + C7325 * C32056 + C7326 * C31016 +
             C7327 * C23835) *
                C32016 +
            ((C6061 - C6060) * C31010 + (C6063 - C6062) * C32049 +
             C9929 * C31002 + C9930 * C32056 + (C6683 - C6684) * C31016 +
             (C6685 - C6686) * C23835) *
                C17320) *
               C530 +
           ((C7318 * C31010 + C7319 * C32049 + C6828 * C31002 + C6829 * C32056 +
             C14130 * C31016 + C14131 * C23835) *
                C32009 +
            (C6677 * C31010 + C6678 * C32049 + C6690 * C31002 + C6691 * C32056 +
             (C6839 - C6838) * C31016 + (C6841 - C6840) * C23835) *
                C32016 +
            (C9427 * C31010 + C9428 * C32049 + (C6684 - C6683) * C31002 +
             (C6686 - C6685) * C32056 +
             (C31862 * C7314 - C5980 * C7313) * C31016 +
             (C31862 * C7316 - C5980 * C7315) * C23835) *
                C17320) *
               C531) *
              C441) *
         C31899) /
        (p * q * std::sqrt(p + q));
    d2ee[32] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31862 * C126 - C5980 * C119) * C31010 +
            (C31862 * C140 - C5980 * C131) * C32049 + (C6820 - C6821) * C31002 +
            (C6822 - C6823) * C32056 + C6842 * C31016 + C6843 * C23835) *
               C32009 +
           ((C6052 - C6053) * C31010 + (C6054 - C6055) * C32049 +
            C7318 * C31002 + C7319 * C32056 + C6828 * C31016 + C6829 * C23835) *
               C32016 +
           C30263 * C17320) *
              C31925 * C209 +
          (((C6053 - C6052) * C31010 + (C6055 - C6054) * C32049 +
            C7320 * C31002 + C7321 * C32056 + C7322 * C31016 + C7323 * C23835) *
               C32009 +
           ((C6057 - C6056) * C31010 + (C6059 - C6058) * C32049 +
            C7324 * C31002 + C7325 * C32056 + C7326 * C31016 + C7327 * C23835) *
               C32016 +
           ((C6061 - C6060) * C31010 + (C6063 - C6062) * C32049 +
            C9929 * C31002 + C9930 * C32056 + (C6683 - C6684) * C31016 +
            (C6685 - C6686) * C23835) *
               C17320) *
              C31925 * C210 +
          (C30263 * C32009 +
           (C6074 * C31010 + C6075 * C32049 + C9427 * C31002 + C9428 * C32056 +
            (C6684 - C6683) * C31016 + (C6686 - C6685) * C23835) *
               C32016 +
           (C6076 * C31010 + C6077 * C32049 + (C6448 - C6447) * C31002 +
            (C6450 - C6449) * C32056 +
            (C31862 * C6155 - C5980 * C6150) * C31016 +
            (C31862 * C6159 - C5980 * C6156) * C23835) *
               C17320) *
              C31925 * C211) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31862 * C126 - C5980 * C119) * C31010 +
            (C31862 * C140 - C5980 * C131) * C32049 + (C6820 - C6821) * C31002 +
            (C6822 - C6823) * C32056 + C6842 * C31016 + C6843 * C23835) *
               C32009 +
           ((C6052 - C6053) * C31010 + (C6054 - C6055) * C32049 +
            C7318 * C31002 + C7319 * C32056 + C6828 * C31016 + C6829 * C23835) *
               C32016 +
           (C6072 * C31010 + C6073 * C32049 + C6677 * C31002 + C6678 * C32056 +
            C6690 * C31016 + C6691 * C23835) *
               C17320) *
              C31925 * C31911 * C110 +
          (((C5980 * C120 - C31862 * C127) * C31010 +
            (C5980 * C132 - C31862 * C141) * C32049 + (C7160 - C7161) * C31002 +
            (C7162 - C7163) * C32056 + (C7164 - C7165) * C31016 +
            (C7166 - C7167) * C23835) *
               C32009 +
           ((C6247 - C6248) * C31010 + (C6249 - C6250) * C32049 +
            (C6994 - C6995) * C31002 + (C6996 - C6997) * C32056 +
            (C6998 - C6999) * C31016 + (C7000 - C7001) * C23835) *
               C32016 +
           ((C6251 - C6252) * C31010 + (C6253 - C6254) * C32049 +
            (C7002 - C7003) * C31002 + (C7004 - C7005) * C32056 +
            (C7006 - C7007) * C31016 + (C7008 - C7009) * C23835) *
               C17320) *
              C31925 * C31911 * C111 +
          (((C31862 * C128 - C5980 * C121) * C31010 +
            (C31862 * C142 - C5980 * C133) * C32049 +
            (C31862 * C330 - C5980 * C320) * C31002 +
            (C31862 * C350 - C5980 * C335) * C32056 +
            (C31862 * C340 - C5980 * C325) * C31016 +
            (C31862 * C355 - C5980 * C345) * C23835) *
               C32009 +
           ((C31862 * C225 - C5980 * C215) * C31010 +
            (C31862 * C245 - C5980 * C230) * C32049 +
            (C31862 * C625 - C5980 * C620) * C31002 +
            (C31862 * C635 - C5980 * C630) * C32056 +
            (C31862 * C1067 - C5980 * C1055) * C31016 +
            (C31862 * C1082 - C5980 * C1070) * C23835) *
               C32016 +
           ((C31862 * C235 - C5980 * C220) * C31010 +
            (C31862 * C250 - C5980 * C240) * C32049 +
            (C31862 * C1061 - C5980 * C1052) * C31002 +
            (C31862 * C1079 - C5980 * C1064) * C32056 +
            (C31862 * C1073 - C5980 * C1058) * C31016 +
            (C31862 * C1085 - C5980 * C1076) * C23835) *
               C17320) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C31862 * C126 - C5980 * C119) * C31010 +
            (C31862 * C140 - C5980 * C131) * C32049 + (C6820 - C6821) * C31002 +
            (C6822 - C6823) * C32056 + C6842 * C31016 + C6843 * C23835) *
               C32009 +
           ((C6052 - C6053) * C31010 + (C6054 - C6055) * C32049 +
            C7318 * C31002 + C7319 * C32056 + C6828 * C31016 + C6829 * C23835) *
               C32016 +
           C30263 * C17320) *
              C315 +
          (((C6821 - C6820) * C31010 + (C6823 - C6822) * C32049 +
            (C6825 - C6824) * C31002 + (C6827 - C6826) * C32056 +
            (C6830 - C6831) * C31016 + (C6832 - C6833) * C23835) *
               C32009 +
           (C7320 * C31010 + C7321 * C32049 + C7322 * C31002 + C7323 * C32056 +
            C14526 * C31016 + C14527 * C23835) *
               C32016 +
           (C7324 * C31010 + C7325 * C32049 + C7326 * C31002 + C7327 * C32056 +
            (C6838 - C6839) * C31016 + (C6840 - C6841) * C23835) *
               C17320) *
              C316 +
          ((C6842 * C31010 + C6843 * C32049 + C11770 * C31002 +
            C11771 * C32056 + C11780 * C31016 + C11781 * C23835) *
               C32009 +
           (C6828 * C31010 + C6829 * C32049 + C14130 * C31002 +
            C14131 * C32056 + (C12049 - C12048) * C31016 +
            (C12051 - C12050) * C23835) *
               C32016 +
           (C6690 * C31010 + C6691 * C32049 + (C6839 - C6838) * C31002 +
            (C6841 - C6840) * C32056 +
            (C31862 * C6814 - C5980 * C6809) * C31016 +
            (C31862 * C6818 - C5980 * C6815) * C23835) *
               C17320) *
              C317) *
         C31911 * C31899) /
            (p * q * std::sqrt(p + q));
    d2ee[33] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C31862 * C126 - C5980 * C119) * C31010 +
             (C31862 * C140 - C5980 * C131) * C32049 +
             (C6820 - C6821) * C31002 + (C6822 - C6823) * C32056 +
             C6842 * C31016 + C6843 * C23835) *
                C32009 +
            ((C6052 - C6053) * C31010 + (C6054 - C6055) * C32049 +
             C7318 * C31002 + C7319 * C32056 + C6828 * C31016 +
             C6829 * C23835) *
                C32016 +
            C30263 * C17320) *
               C530 +
           (((C6821 - C6820) * C31010 + (C6823 - C6822) * C32049 +
             (C6825 - C6824) * C31002 + (C6827 - C6826) * C32056 +
             (C6830 - C6831) * C31016 + (C6832 - C6833) * C23835) *
                C32009 +
            (C7320 * C31010 + C7321 * C32049 + C7322 * C31002 + C7323 * C32056 +
             C14526 * C31016 + C14527 * C23835) *
                C32016 +
            (C7324 * C31010 + C7325 * C32049 + C7326 * C31002 + C7327 * C32056 +
             (C6838 - C6839) * C31016 + (C6840 - C6841) * C23835) *
                C17320) *
               C531) *
              C31911 * C442 +
          ((((C5980 * C120 - C31862 * C127) * C31010 +
             (C5980 * C132 - C31862 * C141) * C32049 +
             (C7160 - C7161) * C31002 + (C7162 - C7163) * C32056 +
             (C7164 - C7165) * C31016 + (C7166 - C7167) * C23835) *
                C32009 +
            ((C6247 - C6248) * C31010 + (C6249 - C6250) * C32049 +
             (C6994 - C6995) * C31002 + (C6996 - C6997) * C32056 +
             (C6998 - C6999) * C31016 + (C7000 - C7001) * C23835) *
                C32016 +
            ((C6251 - C6252) * C31010 + (C6253 - C6254) * C32049 +
             (C7002 - C7003) * C31002 + (C7004 - C7005) * C32056 +
             (C7006 - C7007) * C31016 + (C7008 - C7009) * C23835) *
                C17320) *
               C530 +
           (((C7161 - C7160) * C31010 + (C7163 - C7162) * C32049 +
             (C7165 - C7164) * C31002 + (C7167 - C7166) * C32056 +
             (C11955 - C11954) * C31016 + (C11957 - C11956) * C23835) *
                C32009 +
            ((C6995 - C6994) * C31010 + (C6997 - C6996) * C32049 +
             (C6999 - C6998) * C31002 + (C7001 - C7000) * C32056 +
             (C14263 - C14262) * C31016 + (C14265 - C14264) * C23835) *
                C32016 +
            ((C7003 - C7002) * C31010 + (C7005 - C7004) * C32049 +
             (C7007 - C7006) * C31002 + (C7009 - C7008) * C32056 +
             (C31862 * C7156 - C5980 * C7155) * C31016 +
             (C31862 * C7158 - C5980 * C7157) * C23835) *
                C17320) *
               C531) *
              C31911 * C443)) /
        (p * q * std::sqrt(p + q));
    d2ee[34] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31862 * C126 - C5980 * C119) * C31010 +
            (C31862 * C140 - C5980 * C131) * C32049 + (C6820 - C6821) * C31002 +
            (C6822 - C6823) * C32056 + C6842 * C31016 + C6843 * C23835) *
               C32009 +
           ((C6052 - C6053) * C31010 + (C6054 - C6055) * C32049 +
            C7318 * C31002 + C7319 * C32056 + C6828 * C31016 + C6829 * C23835) *
               C32016 +
           (C6072 * C31010 + C6073 * C32049 + C6677 * C31002 + C6678 * C32056 +
            C6690 * C31016 + C6691 * C23835) *
               C17320) *
              C31925 * C31911 * C110 +
          (((C5980 * C120 - C31862 * C127) * C31010 +
            (C5980 * C132 - C31862 * C141) * C32049 + (C7160 - C7161) * C31002 +
            (C7162 - C7163) * C32056 + (C7164 - C7165) * C31016 +
            (C7166 - C7167) * C23835) *
               C32009 +
           ((C6247 - C6248) * C31010 + (C6249 - C6250) * C32049 +
            (C6994 - C6995) * C31002 + (C6996 - C6997) * C32056 +
            (C6998 - C6999) * C31016 + (C7000 - C7001) * C23835) *
               C32016 +
           ((C6251 - C6252) * C31010 + (C6253 - C6254) * C32049 +
            (C7002 - C7003) * C31002 + (C7004 - C7005) * C32056 +
            (C7006 - C7007) * C31016 + (C7008 - C7009) * C23835) *
               C17320) *
              C31925 * C31911 * C111 +
          (((C31862 * C128 - C5980 * C121) * C31010 +
            (C31862 * C142 - C5980 * C133) * C32049 +
            (C31862 * C330 - C5980 * C320) * C31002 +
            (C31862 * C350 - C5980 * C335) * C32056 +
            (C31862 * C340 - C5980 * C325) * C31016 +
            (C31862 * C355 - C5980 * C345) * C23835) *
               C32009 +
           ((C31862 * C225 - C5980 * C215) * C31010 +
            (C31862 * C245 - C5980 * C230) * C32049 +
            (C31862 * C625 - C5980 * C620) * C31002 +
            (C31862 * C635 - C5980 * C630) * C32056 +
            (C31862 * C1067 - C5980 * C1055) * C31016 +
            (C31862 * C1082 - C5980 * C1070) * C23835) *
               C32016 +
           ((C31862 * C235 - C5980 * C220) * C31010 +
            (C31862 * C250 - C5980 * C240) * C32049 +
            (C31862 * C1061 - C5980 * C1052) * C31002 +
            (C31862 * C1079 - C5980 * C1064) * C32056 +
            (C31862 * C1073 - C5980 * C1058) * C31016 +
            (C31862 * C1085 - C5980 * C1076) * C23835) *
               C17320) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31862 * C126 - C5980 * C119) * C31010 +
            (C31862 * C140 - C5980 * C131) * C32049 + (C6820 - C6821) * C31002 +
            (C6822 - C6823) * C32056 + C6842 * C31016 + C6843 * C23835) *
               C32009 +
           ((C6052 - C6053) * C31010 + (C6054 - C6055) * C32049 +
            C7318 * C31002 + C7319 * C32056 + C6828 * C31016 + C6829 * C23835) *
               C32016 +
           C30263 * C17320) *
              C31925 * C209 +
          (((C6053 - C6052) * C31010 + (C6055 - C6054) * C32049 +
            C7320 * C31002 + C7321 * C32056 + C7322 * C31016 + C7323 * C23835) *
               C32009 +
           ((C6057 - C6056) * C31010 + (C6059 - C6058) * C32049 +
            C7324 * C31002 + C7325 * C32056 + C7326 * C31016 + C7327 * C23835) *
               C32016 +
           ((C6061 - C6060) * C31010 + (C6063 - C6062) * C32049 +
            C9929 * C31002 + C9930 * C32056 + (C6683 - C6684) * C31016 +
            (C6685 - C6686) * C23835) *
               C17320) *
              C31925 * C210 +
          (C30263 * C32009 +
           (C6074 * C31010 + C6075 * C32049 + C9427 * C31002 + C9428 * C32056 +
            (C6684 - C6683) * C31016 + (C6686 - C6685) * C23835) *
               C32016 +
           (C6076 * C31010 + C6077 * C32049 + (C6448 - C6447) * C31002 +
            (C6450 - C6449) * C32056 +
            (C31862 * C6155 - C5980 * C6150) * C31016 +
            (C31862 * C6159 - C5980 * C6156) * C23835) *
               C17320) *
              C31925 * C211) *
         C31899) /
            (p * q * std::sqrt(p + q));
    d2ee[35] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31862 * C126 - C5980 * C119) * C20326 +
             (C31862 * C140 - C5980 * C131) * C20324 +
             (C6820 - C6821) * C20327 + (C6822 - C6823) * C32053) *
                C32280 +
            ((C6052 - C6053) * C20326 + (C6054 - C6055) * C20324 +
             C7318 * C20327 + C7319 * C32053) *
                C32276 +
            C26812 * C32266 + C26813 * C32248) *
               C31925 * C440 +
           (((C6053 - C6052) * C20326 + (C6055 - C6054) * C20324 +
             C7320 * C20327 + C7321 * C32053) *
                C32280 +
            ((C6057 - C6056) * C20326 + (C6059 - C6058) * C20324 +
             C7324 * C20327 + C7325 * C32053) *
                C32276 +
            ((C6061 - C6060) * C20326 + (C6063 - C6062) * C20324 +
             C9929 * C20327 + C9930 * C32053) *
                C32266 +
            ((C6065 - C6064) * C20326 + (C6067 - C6066) * C20324 +
             (C6447 - C6448) * C20327 + (C6449 - C6450) * C32053) *
                C32248) *
               C31925 * C441) *
              C442 +
          ((((C5980 * C120 - C31862 * C127) * C20326 +
             (C5980 * C132 - C31862 * C141) * C20324 +
             (C7160 - C7161) * C20327 + (C7162 - C7163) * C32053) *
                C32280 +
            ((C6247 - C6248) * C20326 + (C6249 - C6250) * C20324 +
             (C6994 - C6995) * C20327 + (C6996 - C6997) * C32053) *
                C32276 +
            ((C6251 - C6252) * C20326 + (C6253 - C6254) * C20324 +
             (C7002 - C7003) * C20327 + (C7004 - C7005) * C32053) *
                C32266 +
            ((C6255 - C6256) * C20326 + (C6257 - C6258) * C20324 +
             (C9665 - C9666) * C20327 + (C9667 - C9668) * C32053) *
                C32248) *
               C31925 * C440 +
           (((C6248 - C6247) * C20326 + (C6250 - C6249) * C20324 +
             (C6995 - C6994) * C20327 + (C6997 - C6996) * C32053) *
                C32280 +
            ((C6252 - C6251) * C20326 + (C6254 - C6253) * C20324 +
             (C7003 - C7002) * C20327 + (C7005 - C7004) * C32053) *
                C32276 +
            ((C6256 - C6255) * C20326 + (C6258 - C6257) * C20324 +
             (C9666 - C9665) * C20327 + (C9668 - C9667) * C32053) *
                C32266 +
            ((C6260 - C6259) * C20326 + (C6262 - C6261) * C20324 +
             (C31862 * C6345 - C5980 * C6344) * C20327 +
             (C31862 * C6347 - C5980 * C6346) * C32053) *
                C32248) *
               C31925 * C441) *
              C443)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C32270 * C126 - C5154 * C119 + C32257 * C127 - C5155 * C120 +
              C32227 * C128 - C5156 * C121) *
                 C20326 +
             (C32270 * C140 - C5154 * C131 + C32257 * C141 - C5155 * C132 +
              C32227 * C142 - C5156 * C133) *
                 C20324 +
             (C10267 - C10268 + C10269 - C10270 + C10271 - C10272) * C20327 +
             (C10273 - C10274 + C10275 - C10276 + C10277 - C10278) * C32053) *
                C14629 +
            ((C5268 - C5269 + C5270 - C5271 + C5272 - C5273) * C20326 +
             (C5274 - C5275 + C5276 - C5277 + C5278 - C5279) * C20324 +
             (C5890 - C5889 + C5892 - C5891 + C5894 - C5893) * C20327 +
             (C5896 - C5895 + C5898 - C5897 + C5900 - C5899) * C32053) *
                C32013) *
               C31925 * C440 +
           (((C5269 - C5268 + C5271 - C5270 + C5273 - C5272) * C20326 +
             (C5275 - C5274 + C5277 - C5276 + C5279 - C5278) * C20324 +
             (C5889 - C5890 + C5891 - C5892 + C5893 - C5894) * C20327 +
             (C5895 - C5896 + C5897 - C5898 + C5899 - C5900) * C32053) *
                C14629 +
            ((C5281 - C5280 + C5283 - C5282 + C5285 - C5284) * C20326 +
             (C5287 - C5286 + C5289 - C5288 + C5291 - C5290) * C20324 +
             (C5901 - C5902 + C5903 - C5904 + C5905 - C5906) * C20327 +
             (C5907 - C5908 + C5909 - C5910 + C5911 - C5912) * C32053) *
                C32013) *
               C31925 * C441) *
              C442 +
          ((((C5154 * C120 - C32270 * C127 + C5155 * C121 - C32257 * C128 +
              C5156 * C122 - C32227 * C129) *
                 C20326 +
             (C5154 * C132 - C32270 * C141 + C5155 * C133 - C32257 * C142 +
              C5156 * C134 - C32227 * C143) *
                 C20324 +
             (C10605 - C10606 + C10607 - C10608 + C10609 - C10610) * C20327 +
             (C10611 - C10612 + C10613 - C10614 + C10615 - C10616) * C32053) *
                C14629 +
            ((C5573 - C5574 + C5575 - C5576 + C5577 - C5578) * C20326 +
             (C5579 - C5580 + C5581 - C5582 + C5583 - C5584) * C20324 +
             (C26184 - C26185 + C26186 - C26187 + C26188 - C26189) * C20327 +
             (C26190 - C26191 + C26192 - C26193 + C26194 - C26195) * C32053) *
                C32013) *
               C31925 * C440 +
           (((C5574 - C5573 + C5576 - C5575 + C5578 - C5577) * C20326 +
             (C5580 - C5579 + C5582 - C5581 + C5584 - C5583) * C20324 +
             (C26185 - C26184 + C26187 - C26186 + C26189 - C26188) * C20327 +
             (C26191 - C26190 + C26193 - C26192 + C26195 - C26194) * C32053) *
                C14629 +
            ((C5586 - C5585 + C5588 - C5587 + C5590 - C5589) * C20326 +
             (C5592 - C5591 + C5594 - C5593 + C5596 - C5595) * C20324 +
             (C32270 * C1060 - C5154 * C1051 + C32257 * C1061 - C5155 * C1052 +
              C32227 * C1407 - C5156 * C1406) *
                 C20327 +
             (C32270 * C1078 - C5154 * C1063 + C32257 * C1079 - C5155 * C1064 +
              C32227 * C1409 - C5156 * C1408) *
                 C32053) *
                C32013) *
               C31925 * C441) *
              C443)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31862 * C126 - C5980 * C119) * C22091 +
             (C31862 * C140 - C5980 * C131) * C32281 +
             (C6820 - C6821) * C22092 + (C6822 - C6823) * C32278 +
             C6842 * C22093 + C6843 * C32269 + C11770 * C22094 +
             C11771 * C32254) *
                C14629 +
            ((C6052 - C6053) * C22091 + (C6054 - C6055) * C32281 +
             C7318 * C22092 + C7319 * C32278 + C6828 * C22093 + C6829 * C32269 +
             C14130 * C22094 + C14131 * C32254) *
                C32013) *
               C31925 * C440 +
           (((C6053 - C6052) * C22091 + (C6055 - C6054) * C32281 +
             C7320 * C22092 + C7321 * C32278 + C7322 * C22093 + C7323 * C32269 +
             C14526 * C22094 + C14527 * C32254) *
                C14629 +
            ((C6057 - C6056) * C22091 + (C6059 - C6058) * C32281 +
             C7324 * C22092 + C7325 * C32278 + C7326 * C22093 + C7327 * C32269 +
             (C6838 - C6839) * C22094 + (C6840 - C6841) * C32254) *
                C32013) *
               C31925 * C441) *
              C442 +
          ((((C5980 * C120 - C31862 * C127) * C22091 +
             (C5980 * C132 - C31862 * C141) * C32281 +
             (C7160 - C7161) * C22092 + (C7162 - C7163) * C32278 +
             (C7164 - C7165) * C22093 + (C7166 - C7167) * C32269 +
             (C11954 - C11955) * C22094 + (C11956 - C11957) * C32254) *
                C14629 +
            ((C6247 - C6248) * C22091 + (C6249 - C6250) * C32281 +
             (C6994 - C6995) * C22092 + (C6996 - C6997) * C32278 +
             (C6998 - C6999) * C22093 + (C7000 - C7001) * C32269 +
             (C14262 - C14263) * C22094 + (C14264 - C14265) * C32254) *
                C32013) *
               C31925 * C440 +
           (((C6248 - C6247) * C22091 + (C6250 - C6249) * C32281 +
             (C6995 - C6994) * C22092 + (C6997 - C6996) * C32278 +
             (C6999 - C6998) * C22093 + (C7001 - C7000) * C32269 +
             (C14263 - C14262) * C22094 + (C14265 - C14264) * C32254) *
                C14629 +
            ((C6252 - C6251) * C22091 + (C6254 - C6253) * C32281 +
             (C7003 - C7002) * C22092 + (C7005 - C7004) * C32278 +
             (C7007 - C7006) * C22093 + (C7009 - C7008) * C32269 +
             (C31862 * C7156 - C5980 * C7155) * C22094 +
             (C31862 * C7158 - C5980 * C7157) * C32254) *
                C32013) *
               C31925 * C441) *
              C443)) /
            (p * q * std::sqrt(p + q));
    d2ee[36] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31862 * C126 - C5980 * C119) * C20326 +
             (C31862 * C140 - C5980 * C131) * C20324 +
             (C6820 - C6821) * C20327 + (C6822 - C6823) * C32053) *
                C32280 +
            ((C6052 - C6053) * C20326 + (C6054 - C6055) * C20324 +
             C7318 * C20327 + C7319 * C32053) *
                C32276 +
            C26812 * C32266 + C26813 * C32248) *
               C530 +
           (((C6821 - C6820) * C20326 + (C6823 - C6822) * C20324 +
             (C6825 - C6824) * C20327 + (C6827 - C6826) * C32053) *
                C32280 +
            (C7320 * C20326 + C7321 * C20324 + C7322 * C20327 +
             C7323 * C32053) *
                C32276 +
            (C7324 * C20326 + C7325 * C20324 + C7326 * C20327 +
             C7327 * C32053) *
                C32266 +
            (C9929 * C20326 + C9930 * C20324 + (C6683 - C6684) * C20327 +
             (C6685 - C6686) * C32053) *
                C32248) *
               C531) *
              C440 +
          ((((C6053 - C6052) * C20326 + (C6055 - C6054) * C20324 +
             C7320 * C20327 + C7321 * C32053) *
                C32280 +
            ((C6057 - C6056) * C20326 + (C6059 - C6058) * C20324 +
             C7324 * C20327 + C7325 * C32053) *
                C32276 +
            ((C6061 - C6060) * C20326 + (C6063 - C6062) * C20324 +
             C9929 * C20327 + C9930 * C32053) *
                C32266 +
            ((C6065 - C6064) * C20326 + (C6067 - C6066) * C20324 +
             (C6447 - C6448) * C20327 + (C6449 - C6450) * C32053) *
                C32248) *
               C530 +
           ((C7318 * C20326 + C7319 * C20324 + C6828 * C20327 +
             C6829 * C32053) *
                C32280 +
            (C6677 * C20326 + C6678 * C20324 + C6690 * C20327 +
             C6691 * C32053) *
                C32276 +
            (C9427 * C20326 + C9428 * C20324 + (C6684 - C6683) * C20327 +
             (C6686 - C6685) * C32053) *
                C32266 +
            ((C6448 - C6447) * C20326 + (C6450 - C6449) * C20324 +
             (C31862 * C6155 - C5980 * C6150) * C20327 +
             (C31862 * C6159 - C5980 * C6156) * C32053) *
                C32248) *
               C531) *
              C441) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C32270 * C126 - C5154 * C119 + C32257 * C127 - C5155 * C120 +
              C32227 * C128 - C5156 * C121) *
                 C20326 +
             (C32270 * C140 - C5154 * C131 + C32257 * C141 - C5155 * C132 +
              C32227 * C142 - C5156 * C133) *
                 C20324 +
             (C10267 - C10268 + C10269 - C10270 + C10271 - C10272) * C20327 +
             (C10273 - C10274 + C10275 - C10276 + C10277 - C10278) * C32053) *
                C14629 +
            ((C5268 - C5269 + C5270 - C5271 + C5272 - C5273) * C20326 +
             (C5274 - C5275 + C5276 - C5277 + C5278 - C5279) * C20324 +
             C26600 * C20327 + C26601 * C32053) *
                C32013) *
               C530 +
           (((C10268 - C10267 + C10270 - C10269 + C10272 - C10271) * C20326 +
             (C10274 - C10273 + C10276 - C10275 + C10278 - C10277) * C20324 +
             (C10280 - C10279 + C10282 - C10281 + C10284 - C10283) * C20327 +
             (C10286 - C10285 + C10288 - C10287 + C10290 - C10289) * C32053) *
                C14629 +
            (C26602 * C20326 + C26603 * C20324 +
             (C10775 - C10776 + C10777 - C10778 + C10779 - C10780) * C20327 +
             (C10781 - C10782 + C10783 - C10784 + C10785 - C10786) * C32053) *
                C32013) *
               C531) *
              C440 +
          ((((C5269 - C5268 + C5271 - C5270 + C5273 - C5272) * C20326 +
             (C5275 - C5274 + C5277 - C5276 + C5279 - C5278) * C20324 +
             C26602 * C20327 + C26603 * C32053) *
                C14629 +
            ((C5281 - C5280 + C5283 - C5282 + C5285 - C5284) * C20326 +
             (C5287 - C5286 + C5289 - C5288 + C5291 - C5290) * C20324 +
             (C5901 - C5902 + C5903 - C5904 + C5905 - C5906) * C20327 +
             (C5907 - C5908 + C5909 - C5910 + C5911 - C5912) * C32053) *
                C32013) *
               C530 +
           ((C26600 * C20326 + C26601 * C20324 +
             (C10776 - C10775 + C10778 - C10777 + C10780 - C10779) * C20327 +
             (C10782 - C10781 + C10784 - C10783 + C10786 - C10785) * C32053) *
                C14629 +
            ((C5902 - C5901 + C5904 - C5903 + C5906 - C5905) * C20326 +
             (C5908 - C5907 + C5910 - C5909 + C5912 - C5911) * C20324 +
             (C32270 * C1071 - C5154 * C1056 + C32257 * C1072 - C5155 * C1057 +
              C32227 * C1073 - C5156 * C1058) *
                 C20327 +
             (C32270 * C1083 - C5154 * C1074 + C32257 * C1084 - C5155 * C1075 +
              C32227 * C1085 - C5156 * C1076) *
                 C32053) *
                C32013) *
               C531) *
              C441) *
         C31899) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31862 * C126 - C5980 * C119) * C22091 +
             (C31862 * C140 - C5980 * C131) * C32281 +
             (C6820 - C6821) * C22092 + (C6822 - C6823) * C32278 +
             C6842 * C22093 + C6843 * C32269 + C11770 * C22094 +
             C11771 * C32254) *
                C14629 +
            ((C6052 - C6053) * C22091 + (C6054 - C6055) * C32281 +
             C7318 * C22092 + C7319 * C32278 + C6828 * C22093 + C6829 * C32269 +
             C14130 * C22094 + C14131 * C32254) *
                C32013) *
               C530 +
           (((C6821 - C6820) * C22091 + (C6823 - C6822) * C32281 +
             (C6825 - C6824) * C22092 + (C6827 - C6826) * C32278 +
             (C6830 - C6831) * C22093 + (C6832 - C6833) * C32269 +
             (C11773 - C11772) * C22094 + (C11775 - C11774) * C32254) *
                C14629 +
            (C7320 * C22091 + C7321 * C32281 + C7322 * C22092 + C7323 * C32278 +
             C14526 * C22093 + C14527 * C32269 + (C12048 - C12049) * C22094 +
             (C12050 - C12051) * C32254) *
                C32013) *
               C531) *
              C440 +
          ((((C6053 - C6052) * C22091 + (C6055 - C6054) * C32281 +
             C7320 * C22092 + C7321 * C32278 + C7322 * C22093 + C7323 * C32269 +
             C14526 * C22094 + C14527 * C32254) *
                C14629 +
            ((C6057 - C6056) * C22091 + (C6059 - C6058) * C32281 +
             C7324 * C22092 + C7325 * C32278 + C7326 * C22093 + C7327 * C32269 +
             (C6838 - C6839) * C22094 + (C6840 - C6841) * C32254) *
                C32013) *
               C530 +
           ((C7318 * C22091 + C7319 * C32281 + C6828 * C22092 + C6829 * C32278 +
             C14130 * C22093 + C14131 * C32269 + (C12049 - C12048) * C22094 +
             (C12051 - C12050) * C32254) *
                C14629 +
            (C6677 * C22091 + C6678 * C32281 + C6690 * C22092 + C6691 * C32278 +
             (C6839 - C6838) * C22093 + (C6841 - C6840) * C32269 +
             (C31862 * C6814 - C5980 * C6809) * C22094 +
             (C31862 * C6818 - C5980 * C6815) * C32254) *
                C32013) *
               C531) *
              C441) *
         C31899) /
            (p * q * std::sqrt(p + q));
    d2ee[37] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C32270 * C126 - C5154 * C119 + C32257 * C127 - C5155 * C120 +
                 C32227 * C128 - C5156 * C121) *
                    C20326 +
                (C32270 * C140 - C5154 * C131 + C32257 * C141 - C5155 * C132 +
                 C32227 * C142 - C5156 * C133) *
                    C20324 +
                (C10267 - C10268 + C10269 - C10270 + C10271 - C10272) * C20327 +
                (C10273 - C10274 + C10275 - C10276 + C10277 - C10278) *
                    C32053) *
                   C14629 +
               ((C5268 - C5269 + C5270 - C5271 + C5272 - C5273) * C20326 +
                (C5274 - C5275 + C5276 - C5277 + C5278 - C5279) * C20324 +
                (C5890 - C5889 + C5892 - C5891 + C5894 - C5893) * C20327 +
                (C5896 - C5895 + C5898 - C5897 + C5900 - C5899) * C32053) *
                   C32013) *
                  C31925 * C31911 * C110 +
              (((C5154 * C120 - C32270 * C127 + C5155 * C121 - C32257 * C128 +
                 C5156 * C122 - C32227 * C129) *
                    C20326 +
                (C5154 * C132 - C32270 * C141 + C5155 * C133 - C32257 * C142 +
                 C5156 * C134 - C32227 * C143) *
                    C20324 +
                (C10605 - C10606 + C10607 - C10608 + C10609 - C10610) * C20327 +
                (C10611 - C10612 + C10613 - C10614 + C10615 - C10616) *
                    C32053) *
                   C14629 +
               ((C5573 - C5574 + C5575 - C5576 + C5577 - C5578) * C20326 +
                (C5579 - C5580 + C5581 - C5582 + C5583 - C5584) * C20324 +
                (C5154 * C619 - C32270 * C624 + C5155 * C620 - C32257 * C625 +
                 C5156 * C621 - C32227 * C626) *
                    C20327 +
                (C5154 * C629 - C32270 * C634 + C5155 * C630 - C32257 * C635 +
                 C5156 * C631 - C32227 * C636) *
                    C32053) *
                   C32013) *
                  C31925 * C31911 * C111 +
              (((C32270 * C128 - C5154 * C121 + C32257 * C129 - C5155 * C122 +
                 C32227 * C130 - C5156 * C123) *
                    C20326 +
                (C32270 * C142 - C5154 * C133 + C32257 * C143 - C5155 * C134 +
                 C32227 * C144 - C5156 * C135) *
                    C20324 +
                (C32270 * C330 - C5154 * C320 + C32257 * C331 - C5155 * C321 +
                 C32227 * C332 - C5156 * C322) *
                    C20327 +
                (C32270 * C350 - C5154 * C335 + C32257 * C351 - C5155 * C336 +
                 C32227 * C352 - C5156 * C337) *
                    C32053) *
                   C14629 +
               ((C32270 * C225 - C5154 * C215 + C32257 * C226 - C5155 * C216 +
                 C32227 * C227 - C5156 * C217) *
                    C20326 +
                (C32270 * C245 - C5154 * C230 + C32257 * C246 - C5155 * C231 +
                 C32227 * C247 - C5156 * C232) *
                    C20324 +
                (C32270 * C625 - C5154 * C620 + C32257 * C626 - C5155 * C621 +
                 C32227 * C627 - C5156 * C622) *
                    C20327 +
                (C32270 * C635 - C5154 * C630 + C32257 * C636 - C5155 * C631 +
                 C32227 * C637 - C5156 * C632) *
                    C32053) *
                   C32013) *
                  C31925 * C31911 * C112) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C32270 * C126 - C5154 * C119 + C32257 * C127 - C5155 * C120 +
                 C32227 * C128 - C5156 * C121) *
                    C20326 +
                (C32270 * C140 - C5154 * C131 + C32257 * C141 - C5155 * C132 +
                 C32227 * C142 - C5156 * C133) *
                    C20324 +
                (C10267 - C10268 + C10269 - C10270 + C10271 - C10272) * C20327 +
                (C10273 - C10274 + C10275 - C10276 + C10277 - C10278) *
                    C32053) *
                   C14629 +
               ((C5268 - C5269 + C5270 - C5271 + C5272 - C5273) * C20326 +
                (C5274 - C5275 + C5276 - C5277 + C5278 - C5279) * C20324 +
                (C5890 - C5889 + C5892 - C5891 + C5894 - C5893) * C20327 +
                (C5896 - C5895 + C5898 - C5897 + C5900 - C5899) * C32053) *
                   C32013) *
                  C31925 * C209 +
              (((C5269 - C5268 + C5271 - C5270 + C5273 - C5272) * C20326 +
                (C5275 - C5274 + C5277 - C5276 + C5279 - C5278) * C20324 +
                (C5889 - C5890 + C5891 - C5892 + C5893 - C5894) * C20327 +
                (C5895 - C5896 + C5897 - C5898 + C5899 - C5900) * C32053) *
                   C14629 +
               ((C5281 - C5280 + C5283 - C5282 + C5285 - C5284) * C20326 +
                (C5287 - C5286 + C5289 - C5288 + C5291 - C5290) * C20324 +
                (C5901 - C5902 + C5903 - C5904 + C5905 - C5906) * C20327 +
                (C5907 - C5908 + C5909 - C5910 + C5911 - C5912) * C32053) *
                   C32013) *
                  C31925 * C210 +
              ((C5312 * C20326 + C5313 * C20324 +
                (C5902 - C5901 + C5904 - C5903 + C5906 - C5905) * C20327 +
                (C5908 - C5907 + C5910 - C5909 + C5912 - C5911) * C32053) *
                   C14629 +
               ((C5293 - C5292 + C5295 - C5294 + C5297 - C5296) * C20326 +
                (C5299 - C5298 + C5301 - C5300 + C5303 - C5302) * C20324 +
                (C32270 * C1559 - C5154 * C1556 + C32257 * C1560 -
                 C5155 * C1557 + C32227 * C1561 - C5156 * C1558) *
                    C20327 +
                (C32270 * C1565 - C5154 * C1562 + C32257 * C1566 -
                 C5155 * C1563 + C32227 * C1567 - C5156 * C1564) *
                    C32053) *
                   C32013) *
                  C31925 * C211) *
             C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C32270 * C126 - C5154 * C119 + C32257 * C127 - C5155 * C120 +
             C32227 * C128 - C5156 * C121) *
                C20326 +
            (C32270 * C140 - C5154 * C131 + C32257 * C141 - C5155 * C132 +
             C32227 * C142 - C5156 * C133) *
                C20324 +
            (C10267 - C10268 + C10269 - C10270 + C10271 - C10272) * C20327 +
            (C10273 - C10274 + C10275 - C10276 + C10277 - C10278) * C32053) *
               C14629 +
           ((C5268 - C5269 + C5270 - C5271 + C5272 - C5273) * C20326 +
            (C5274 - C5275 + C5276 - C5277 + C5278 - C5279) * C20324 +
            (C5890 - C5889 + C5892 - C5891 + C5894 - C5893) * C20327 +
            (C5896 - C5895 + C5898 - C5897 + C5900 - C5899) * C32053) *
               C32013) *
              C315 +
          (((C10268 - C10267 + C10270 - C10269 + C10272 - C10271) * C20326 +
            (C10274 - C10273 + C10276 - C10275 + C10278 - C10277) * C20324 +
            (C10280 - C10279 + C10282 - C10281 + C10284 - C10283) * C20327 +
            (C10286 - C10285 + C10288 - C10287 + C10290 - C10289) * C32053) *
               C14629 +
           ((C5889 - C5890 + C5891 - C5892 + C5893 - C5894) * C20326 +
            (C5895 - C5896 + C5897 - C5898 + C5899 - C5900) * C20324 +
            (C10775 - C10776 + C10777 - C10778 + C10779 - C10780) * C20327 +
            (C10781 - C10782 + C10783 - C10784 + C10785 - C10786) * C32053) *
               C32013) *
              C316 +
          ((C10311 * C20326 + C10312 * C20324 +
            (C10292 - C10291 + C10294 - C10293 + C10296 - C10295) * C20327 +
            (C10298 - C10297 + C10300 - C10299 + C10302 - C10301) * C32053) *
               C14629 +
           ((C10776 - C10775 + C10778 - C10777 + C10780 - C10779) * C20326 +
            (C10782 - C10781 + C10784 - C10783 + C10786 - C10785) * C20324 +
            (C32270 * C2471 - C5154 * C2468 + C32257 * C2472 - C5155 * C2469 +
             C32227 * C2473 - C5156 * C2470) *
                C20327 +
            (C32270 * C2477 - C5154 * C2474 + C32257 * C2478 - C5155 * C2475 +
             C32227 * C2479 - C5156 * C2476) *
                C32053) *
               C32013) *
              C317) *
         C31911 * C31899) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C31862 * C126 - C5980 * C119) * C20326 +
            (C31862 * C140 - C5980 * C131) * C20324 + (C6820 - C6821) * C20327 +
            (C6822 - C6823) * C32053) *
               C32280 +
           ((C6052 - C6053) * C20326 + (C6054 - C6055) * C20324 +
            C7318 * C20327 + C7319 * C32053) *
               C32276 +
           (C6072 * C20326 + C6073 * C20324 + C6677 * C20327 + C6678 * C32053) *
               C32266 +
           (C6074 * C20326 + C6075 * C20324 + C9427 * C20327 + C9428 * C32053) *
               C32248) *
              C31925 * C31911 * C110 +
          (((C5980 * C120 - C31862 * C127) * C20326 +
            (C5980 * C132 - C31862 * C141) * C20324 + (C7160 - C7161) * C20327 +
            (C7162 - C7163) * C32053) *
               C32280 +
           ((C6247 - C6248) * C20326 + (C6249 - C6250) * C20324 +
            (C6994 - C6995) * C20327 + (C6996 - C6997) * C32053) *
               C32276 +
           ((C6251 - C6252) * C20326 + (C6253 - C6254) * C20324 +
            (C7002 - C7003) * C20327 + (C7004 - C7005) * C32053) *
               C32266 +
           ((C6255 - C6256) * C20326 + (C6257 - C6258) * C20324 +
            (C9665 - C9666) * C20327 + (C9667 - C9668) * C32053) *
               C32248) *
              C31925 * C31911 * C111 +
          (((C31862 * C128 - C5980 * C121) * C20326 +
            (C31862 * C142 - C5980 * C133) * C20324 +
            (C31862 * C330 - C5980 * C320) * C20327 +
            (C31862 * C350 - C5980 * C335) * C32053) *
               C32280 +
           ((C31862 * C225 - C5980 * C215) * C20326 +
            (C31862 * C245 - C5980 * C230) * C20324 +
            (C31862 * C625 - C5980 * C620) * C20327 +
            (C31862 * C635 - C5980 * C630) * C32053) *
               C32276 +
           ((C31862 * C235 - C5980 * C220) * C20326 +
            (C31862 * C250 - C5980 * C240) * C20324 +
            (C31862 * C1061 - C5980 * C1052) * C20327 +
            (C31862 * C1079 - C5980 * C1064) * C32053) *
               C32266 +
           ((C31862 * C875 - C5980 * C869) * C20326 +
            (C31862 * C887 - C5980 * C878) * C20324 +
            (C31862 * C1561 - C5980 * C1558) * C20327 +
            (C31862 * C1567 - C5980 * C1564) * C32053) *
               C32248) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C31862 * C126 - C5980 * C119) * C20326 +
            (C31862 * C140 - C5980 * C131) * C20324 + (C6820 - C6821) * C20327 +
            (C6822 - C6823) * C32053) *
               C32280 +
           ((C6052 - C6053) * C20326 + (C6054 - C6055) * C20324 +
            C7318 * C20327 + C7319 * C32053) *
               C32276 +
           C26812 * C32266 + C26813 * C32248) *
              C31925 * C209 +
          (((C6053 - C6052) * C20326 + (C6055 - C6054) * C20324 +
            C7320 * C20327 + C7321 * C32053) *
               C32280 +
           ((C6057 - C6056) * C20326 + (C6059 - C6058) * C20324 +
            C7324 * C20327 + C7325 * C32053) *
               C32276 +
           ((C6061 - C6060) * C20326 + (C6063 - C6062) * C20324 +
            C9929 * C20327 + C9930 * C32053) *
               C32266 +
           ((C6065 - C6064) * C20326 + (C6067 - C6066) * C20324 +
            (C6447 - C6448) * C20327 + (C6449 - C6450) * C32053) *
               C32248) *
              C31925 * C210 +
          (C26812 * C32280 + C26813 * C32276 +
           (C6076 * C20326 + C6077 * C20324 + (C6448 - C6447) * C20327 +
            (C6450 - C6449) * C32053) *
               C32266 +
           ((C6069 - C6068) * C20326 + (C6071 - C6070) * C20324 +
            (C31862 * C6431 - C5980 * C6430) * C20327 +
            (C31862 * C6433 - C5980 * C6432) * C32053) *
               C32248) *
              C31925 * C211) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31862 * C126 - C5980 * C119) * C20326 +
            (C31862 * C140 - C5980 * C131) * C20324 + (C6820 - C6821) * C20327 +
            (C6822 - C6823) * C32053) *
               C32280 +
           ((C6052 - C6053) * C20326 + (C6054 - C6055) * C20324 +
            C7318 * C20327 + C7319 * C32053) *
               C32276 +
           C26812 * C32266 + C26813 * C32248) *
              C315 +
          (((C6821 - C6820) * C20326 + (C6823 - C6822) * C20324 +
            (C6825 - C6824) * C20327 + (C6827 - C6826) * C32053) *
               C32280 +
           (C7320 * C20326 + C7321 * C20324 + C7322 * C20327 + C7323 * C32053) *
               C32276 +
           (C7324 * C20326 + C7325 * C20324 + C7326 * C20327 + C7327 * C32053) *
               C32266 +
           (C9929 * C20326 + C9930 * C20324 + (C6683 - C6684) * C20327 +
            (C6685 - C6686) * C32053) *
               C32248) *
              C316 +
          ((C6842 * C20326 + C6843 * C20324 + C11770 * C20327 +
            C11771 * C32053) *
               C32280 +
           (C6828 * C20326 + C6829 * C20324 + C14130 * C20327 +
            C14131 * C32053) *
               C32276 +
           (C6690 * C20326 + C6691 * C20324 + (C6839 - C6838) * C20327 +
            (C6841 - C6840) * C32053) *
               C32266 +
           ((C6684 - C6683) * C20326 + (C6686 - C6685) * C20324 +
            (C31862 * C7314 - C5980 * C7313) * C20327 +
            (C31862 * C7316 - C5980 * C7315) * C32053) *
               C32248) *
              C317) *
         C31911 * C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31862 * C126 - C5980 * C119) * C22091 +
            (C31862 * C140 - C5980 * C131) * C32281 + (C6820 - C6821) * C22092 +
            (C6822 - C6823) * C32278 + C6842 * C22093 + C6843 * C32269 +
            C11770 * C22094 + C11771 * C32254) *
               C14629 +
           ((C6052 - C6053) * C22091 + (C6054 - C6055) * C32281 +
            C7318 * C22092 + C7319 * C32278 + C6828 * C22093 + C6829 * C32269 +
            C14130 * C22094 + C14131 * C32254) *
               C32013) *
              C31925 * C31911 * C110 +
          (((C5980 * C120 - C31862 * C127) * C22091 +
            (C5980 * C132 - C31862 * C141) * C32281 + (C7160 - C7161) * C22092 +
            (C7162 - C7163) * C32278 + (C7164 - C7165) * C22093 +
            (C7166 - C7167) * C32269 + (C11954 - C11955) * C22094 +
            (C11956 - C11957) * C32254) *
               C14629 +
           ((C6247 - C6248) * C22091 + (C6249 - C6250) * C32281 +
            (C6994 - C6995) * C22092 + (C6996 - C6997) * C32278 +
            (C6998 - C6999) * C22093 + (C7000 - C7001) * C32269 +
            (C14262 - C14263) * C22094 + (C14264 - C14265) * C32254) *
               C32013) *
              C31925 * C31911 * C111 +
          (((C31862 * C128 - C5980 * C121) * C22091 +
            (C31862 * C142 - C5980 * C133) * C32281 +
            (C31862 * C330 - C5980 * C320) * C22092 +
            (C31862 * C350 - C5980 * C335) * C32278 +
            (C31862 * C340 - C5980 * C325) * C22093 +
            (C31862 * C355 - C5980 * C345) * C32269 +
            (C31862 * C1936 - C5980 * C1930) * C22094 +
            (C31862 * C1948 - C5980 * C1939) * C32254) *
               C14629 +
           ((C31862 * C225 - C5980 * C215) * C22091 +
            (C31862 * C245 - C5980 * C230) * C32281 +
            (C31862 * C625 - C5980 * C620) * C22092 +
            (C31862 * C635 - C5980 * C630) * C32278 +
            (C31862 * C1067 - C5980 * C1055) * C22093 +
            (C31862 * C1082 - C5980 * C1070) * C32269 +
            (C31862 * C2473 - C5980 * C2470) * C22094 +
            (C31862 * C2479 - C5980 * C2476) * C32254) *
               C32013) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31862 * C126 - C5980 * C119) * C22091 +
            (C31862 * C140 - C5980 * C131) * C32281 + (C6820 - C6821) * C22092 +
            (C6822 - C6823) * C32278 + C6842 * C22093 + C6843 * C32269 +
            C11770 * C22094 + C11771 * C32254) *
               C14629 +
           ((C6052 - C6053) * C22091 + (C6054 - C6055) * C32281 +
            C7318 * C22092 + C7319 * C32278 + C6828 * C22093 + C6829 * C32269 +
            C14130 * C22094 + C14131 * C32254) *
               C32013) *
              C31925 * C209 +
          (((C6053 - C6052) * C22091 + (C6055 - C6054) * C32281 +
            C7320 * C22092 + C7321 * C32278 + C7322 * C22093 + C7323 * C32269 +
            C14526 * C22094 + C14527 * C32254) *
               C14629 +
           ((C6057 - C6056) * C22091 + (C6059 - C6058) * C32281 +
            C7324 * C22092 + C7325 * C32278 + C7326 * C22093 + C7327 * C32269 +
            (C6838 - C6839) * C22094 + (C6840 - C6841) * C32254) *
               C32013) *
              C31925 * C210 +
          ((C6072 * C22091 + C6073 * C32281 + C6677 * C22092 + C6678 * C32278 +
            C6690 * C22093 + C6691 * C32269 + (C6839 - C6838) * C22094 +
            (C6841 - C6840) * C32254) *
               C14629 +
           (C6074 * C22091 + C6075 * C32281 + C9427 * C22092 + C9428 * C32278 +
            (C6684 - C6683) * C22093 + (C6686 - C6685) * C32269 +
            (C31862 * C7314 - C5980 * C7313) * C22094 +
            (C31862 * C7316 - C5980 * C7315) * C32254) *
               C32013) *
              C31925 * C211) *
         C31899) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C31862 * C126 - C5980 * C119) * C22091 +
            (C31862 * C140 - C5980 * C131) * C32281 + (C6820 - C6821) * C22092 +
            (C6822 - C6823) * C32278 + C6842 * C22093 + C6843 * C32269 +
            C11770 * C22094 + C11771 * C32254) *
               C14629 +
           ((C6052 - C6053) * C22091 + (C6054 - C6055) * C32281 +
            C7318 * C22092 + C7319 * C32278 + C6828 * C22093 + C6829 * C32269 +
            C14130 * C22094 + C14131 * C32254) *
               C32013) *
              C315 +
          (((C6821 - C6820) * C22091 + (C6823 - C6822) * C32281 +
            (C6825 - C6824) * C22092 + (C6827 - C6826) * C32278 +
            (C6830 - C6831) * C22093 + (C6832 - C6833) * C32269 +
            (C11773 - C11772) * C22094 + (C11775 - C11774) * C32254) *
               C14629 +
           (C7320 * C22091 + C7321 * C32281 + C7322 * C22092 + C7323 * C32278 +
            C14526 * C22093 + C14527 * C32269 + (C12048 - C12049) * C22094 +
            (C12050 - C12051) * C32254) *
               C32013) *
              C316 +
          ((C6842 * C22091 + C6843 * C32281 + C11770 * C22092 +
            C11771 * C32278 + C11780 * C22093 + C11781 * C32269 +
            (C11777 - C11776) * C22094 + (C11779 - C11778) * C32254) *
               C14629 +
           (C6828 * C22091 + C6829 * C32281 + C14130 * C22092 +
            C14131 * C32278 + (C12049 - C12048) * C22093 +
            (C12051 - C12050) * C32269 +
            (C31862 * C12044 - C5980 * C12043) * C22094 +
            (C31862 * C12046 - C5980 * C12045) * C32254) *
               C32013) *
              C317) *
         C31911 * C31899) /
            (p * q * std::sqrt(p + q));
    d2ee[38] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31862 * C126 - C5980 * C119) * C20326 +
             (C31862 * C140 - C5980 * C131) * C20324 +
             (C6820 - C6821) * C20327 + (C6822 - C6823) * C32053) *
                C32280 +
            ((C6052 - C6053) * C20326 + (C6054 - C6055) * C20324 +
             C7318 * C20327 + C7319 * C32053) *
                C32276 +
            C26812 * C32266 + C26813 * C32248) *
               C530 +
           (((C6821 - C6820) * C20326 + (C6823 - C6822) * C20324 +
             (C6825 - C6824) * C20327 + (C6827 - C6826) * C32053) *
                C32280 +
            (C7320 * C20326 + C7321 * C20324 + C7322 * C20327 +
             C7323 * C32053) *
                C32276 +
            (C7324 * C20326 + C7325 * C20324 + C7326 * C20327 +
             C7327 * C32053) *
                C32266 +
            (C9929 * C20326 + C9930 * C20324 + (C6683 - C6684) * C20327 +
             (C6685 - C6686) * C32053) *
                C32248) *
               C531) *
              C31911 * C442 +
          ((((C5980 * C120 - C31862 * C127) * C20326 +
             (C5980 * C132 - C31862 * C141) * C20324 +
             (C7160 - C7161) * C20327 + (C7162 - C7163) * C32053) *
                C32280 +
            ((C6247 - C6248) * C20326 + (C6249 - C6250) * C20324 +
             (C6994 - C6995) * C20327 + (C6996 - C6997) * C32053) *
                C32276 +
            ((C6251 - C6252) * C20326 + (C6253 - C6254) * C20324 +
             (C7002 - C7003) * C20327 + (C7004 - C7005) * C32053) *
                C32266 +
            ((C6255 - C6256) * C20326 + (C6257 - C6258) * C20324 +
             (C9665 - C9666) * C20327 + (C9667 - C9668) * C32053) *
                C32248) *
               C530 +
           (((C7161 - C7160) * C20326 + (C7163 - C7162) * C20324 +
             (C7165 - C7164) * C20327 + (C7167 - C7166) * C32053) *
                C32280 +
            ((C6995 - C6994) * C20326 + (C6997 - C6996) * C20324 +
             (C6999 - C6998) * C20327 + (C7001 - C7000) * C32053) *
                C32276 +
            ((C7003 - C7002) * C20326 + (C7005 - C7004) * C20324 +
             (C7007 - C7006) * C20327 + (C7009 - C7008) * C32053) *
                C32266 +
            ((C9666 - C9665) * C20326 + (C9668 - C9667) * C20324 +
             (C31862 * C6990 - C5980 * C6989) * C20327 +
             (C31862 * C6992 - C5980 * C6991) * C32053) *
                C32248) *
               C531) *
              C31911 * C443)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C32270 * C126 - C5154 * C119 + C32257 * C127 - C5155 * C120 +
              C32227 * C128 - C5156 * C121) *
                 C20326 +
             (C32270 * C140 - C5154 * C131 + C32257 * C141 - C5155 * C132 +
              C32227 * C142 - C5156 * C133) *
                 C20324 +
             (C10267 - C10268 + C10269 - C10270 + C10271 - C10272) * C20327 +
             (C10273 - C10274 + C10275 - C10276 + C10277 - C10278) * C32053) *
                C14629 +
            ((C5268 - C5269 + C5270 - C5271 + C5272 - C5273) * C20326 +
             (C5274 - C5275 + C5276 - C5277 + C5278 - C5279) * C20324 +
             (C5890 - C5889 + C5892 - C5891 + C5894 - C5893) * C20327 +
             (C5896 - C5895 + C5898 - C5897 + C5900 - C5899) * C32053) *
                C32013) *
               C530 +
           (((C10268 - C10267 + C10270 - C10269 + C10272 - C10271) * C20326 +
             (C10274 - C10273 + C10276 - C10275 + C10278 - C10277) * C20324 +
             (C10280 - C10279 + C10282 - C10281 + C10284 - C10283) * C20327 +
             (C10286 - C10285 + C10288 - C10287 + C10290 - C10289) * C32053) *
                C14629 +
            ((C5889 - C5890 + C5891 - C5892 + C5893 - C5894) * C20326 +
             (C5895 - C5896 + C5897 - C5898 + C5899 - C5900) * C20324 +
             (C10775 - C10776 + C10777 - C10778 + C10779 - C10780) * C20327 +
             (C10781 - C10782 + C10783 - C10784 + C10785 - C10786) * C32053) *
                C32013) *
               C531) *
              C31911 * C442 +
          ((((C5154 * C120 - C32270 * C127 + C5155 * C121 - C32257 * C128 +
              C5156 * C122 - C32227 * C129) *
                 C20326 +
             (C5154 * C132 - C32270 * C141 + C5155 * C133 - C32257 * C142 +
              C5156 * C134 - C32227 * C143) *
                 C20324 +
             (C10605 - C10606 + C10607 - C10608 + C10609 - C10610) * C20327 +
             (C10611 - C10612 + C10613 - C10614 + C10615 - C10616) * C32053) *
                C14629 +
            ((C5573 - C5574 + C5575 - C5576 + C5577 - C5578) * C20326 +
             (C5579 - C5580 + C5581 - C5582 + C5583 - C5584) * C20324 +
             (C26184 - C26185 + C26186 - C26187 + C26188 - C26189) * C20327 +
             (C26190 - C26191 + C26192 - C26193 + C26194 - C26195) * C32053) *
                C32013) *
               C530 +
           (((C10606 - C10605 + C10608 - C10607 + C10610 - C10609) * C20326 +
             (C10612 - C10611 + C10614 - C10613 + C10616 - C10615) * C20324 +
             (C10618 - C10617 + C10620 - C10619 + C10622 - C10621) * C20327 +
             (C10624 - C10623 + C10626 - C10625 + C10628 - C10627) * C32053) *
                C14629 +
            ((C26185 - C26184 + C26187 - C26186 + C26189 - C26188) * C20326 +
             (C26191 - C26190 + C26193 - C26192 + C26195 - C26194) * C20324 +
             (C32270 * C1066 - C5154 * C1054 + C32257 * C1067 - C5155 * C1055 +
              C32227 * C2145 - C5156 * C2144) *
                 C20327 +
             (C32270 * C1081 - C5154 * C1069 + C32257 * C1082 - C5155 * C1070 +
              C32227 * C2147 - C5156 * C2146) *
                 C32053) *
                C32013) *
               C531) *
              C31911 * C443)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31862 * C126 - C5980 * C119) * C22091 +
             (C31862 * C140 - C5980 * C131) * C32281 +
             (C6820 - C6821) * C22092 + (C6822 - C6823) * C32278 +
             C6842 * C22093 + C6843 * C32269 + C11770 * C22094 +
             C11771 * C32254) *
                C14629 +
            ((C6052 - C6053) * C22091 + (C6054 - C6055) * C32281 +
             C7318 * C22092 + C7319 * C32278 + C6828 * C22093 + C6829 * C32269 +
             C14130 * C22094 + C14131 * C32254) *
                C32013) *
               C530 +
           (((C6821 - C6820) * C22091 + (C6823 - C6822) * C32281 +
             (C6825 - C6824) * C22092 + (C6827 - C6826) * C32278 +
             (C6830 - C6831) * C22093 + (C6832 - C6833) * C32269 +
             (C11773 - C11772) * C22094 + (C11775 - C11774) * C32254) *
                C14629 +
            (C7320 * C22091 + C7321 * C32281 + C7322 * C22092 + C7323 * C32278 +
             C14526 * C22093 + C14527 * C32269 + (C12048 - C12049) * C22094 +
             (C12050 - C12051) * C32254) *
                C32013) *
               C531) *
              C31911 * C442 +
          ((((C5980 * C120 - C31862 * C127) * C22091 +
             (C5980 * C132 - C31862 * C141) * C32281 +
             (C7160 - C7161) * C22092 + (C7162 - C7163) * C32278 +
             (C7164 - C7165) * C22093 + (C7166 - C7167) * C32269 +
             (C11954 - C11955) * C22094 + (C11956 - C11957) * C32254) *
                C14629 +
            ((C6247 - C6248) * C22091 + (C6249 - C6250) * C32281 +
             (C6994 - C6995) * C22092 + (C6996 - C6997) * C32278 +
             (C6998 - C6999) * C22093 + (C7000 - C7001) * C32269 +
             (C14262 - C14263) * C22094 + (C14264 - C14265) * C32254) *
                C32013) *
               C530 +
           (((C7161 - C7160) * C22091 + (C7163 - C7162) * C32281 +
             (C7165 - C7164) * C22092 + (C7167 - C7166) * C32278 +
             (C11955 - C11954) * C22093 + (C11957 - C11956) * C32269 +
             (C11959 - C11958) * C22094 + (C11961 - C11960) * C32254) *
                C14629 +
            ((C6995 - C6994) * C22091 + (C6997 - C6996) * C32281 +
             (C6999 - C6998) * C22092 + (C7001 - C7000) * C32278 +
             (C14263 - C14262) * C22093 + (C14265 - C14264) * C32269 +
             (C31862 * C11864 - C5980 * C11863) * C22094 +
             (C31862 * C11866 - C5980 * C11865) * C32254) *
                C32013) *
               C531) *
              C31911 * C443)) /
            (p * q * std::sqrt(p + q));
    d2ee[39] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C32270 * C126 - C5154 * C119 + C32257 * C127 - C5155 * C120 +
             C32227 * C128 - C5156 * C121) *
                C20326 +
            (C32270 * C140 - C5154 * C131 + C32257 * C141 - C5155 * C132 +
             C32227 * C142 - C5156 * C133) *
                C20324 +
            (C10267 - C10268 + C10269 - C10270 + C10271 - C10272) * C20327 +
            (C10273 - C10274 + C10275 - C10276 + C10277 - C10278) * C32053) *
               C14629 +
           ((C5268 - C5269 + C5270 - C5271 + C5272 - C5273) * C20326 +
            (C5274 - C5275 + C5276 - C5277 + C5278 - C5279) * C20324 +
            (C5890 - C5889 + C5892 - C5891 + C5894 - C5893) * C20327 +
            (C5896 - C5895 + C5898 - C5897 + C5900 - C5899) * C32053) *
               C32013) *
              C31925 * C209 +
          (((C5269 - C5268 + C5271 - C5270 + C5273 - C5272) * C20326 +
            (C5275 - C5274 + C5277 - C5276 + C5279 - C5278) * C20324 +
            (C5889 - C5890 + C5891 - C5892 + C5893 - C5894) * C20327 +
            (C5895 - C5896 + C5897 - C5898 + C5899 - C5900) * C32053) *
               C14629 +
           ((C5281 - C5280 + C5283 - C5282 + C5285 - C5284) * C20326 +
            (C5287 - C5286 + C5289 - C5288 + C5291 - C5290) * C20324 +
            (C5901 - C5902 + C5903 - C5904 + C5905 - C5906) * C20327 +
            (C5907 - C5908 + C5909 - C5910 + C5911 - C5912) * C32053) *
               C32013) *
              C31925 * C210 +
          ((C5312 * C20326 + C5313 * C20324 +
            (C5902 - C5901 + C5904 - C5903 + C5906 - C5905) * C20327 +
            (C5908 - C5907 + C5910 - C5909 + C5912 - C5911) * C32053) *
               C14629 +
           ((C5293 - C5292 + C5295 - C5294 + C5297 - C5296) * C20326 +
            (C5299 - C5298 + C5301 - C5300 + C5303 - C5302) * C20324 +
            (C32270 * C1559 - C5154 * C1556 + C32257 * C1560 - C5155 * C1557 +
             C32227 * C1561 - C5156 * C1558) *
                C20327 +
            (C32270 * C1565 - C5154 * C1562 + C32257 * C1566 - C5155 * C1563 +
             C32227 * C1567 - C5156 * C1564) *
                C32053) *
               C32013) *
              C31925 * C211) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C32270 * C126 - C5154 * C119 + C32257 * C127 - C5155 * C120 +
             C32227 * C128 - C5156 * C121) *
                C20326 +
            (C32270 * C140 - C5154 * C131 + C32257 * C141 - C5155 * C132 +
             C32227 * C142 - C5156 * C133) *
                C20324 +
            (C10267 - C10268 + C10269 - C10270 + C10271 - C10272) * C20327 +
            (C10273 - C10274 + C10275 - C10276 + C10277 - C10278) * C32053) *
               C14629 +
           ((C5268 - C5269 + C5270 - C5271 + C5272 - C5273) * C20326 +
            (C5274 - C5275 + C5276 - C5277 + C5278 - C5279) * C20324 +
            (C5890 - C5889 + C5892 - C5891 + C5894 - C5893) * C20327 +
            (C5896 - C5895 + C5898 - C5897 + C5900 - C5899) * C32053) *
               C32013) *
              C31925 * C31911 * C110 +
          (((C5154 * C120 - C32270 * C127 + C5155 * C121 - C32257 * C128 +
             C5156 * C122 - C32227 * C129) *
                C20326 +
            (C5154 * C132 - C32270 * C141 + C5155 * C133 - C32257 * C142 +
             C5156 * C134 - C32227 * C143) *
                C20324 +
            (C10605 - C10606 + C10607 - C10608 + C10609 - C10610) * C20327 +
            (C10611 - C10612 + C10613 - C10614 + C10615 - C10616) * C32053) *
               C14629 +
           ((C5573 - C5574 + C5575 - C5576 + C5577 - C5578) * C20326 +
            (C5579 - C5580 + C5581 - C5582 + C5583 - C5584) * C20324 +
            (C5154 * C619 - C32270 * C624 + C5155 * C620 - C32257 * C625 +
             C5156 * C621 - C32227 * C626) *
                C20327 +
            (C5154 * C629 - C32270 * C634 + C5155 * C630 - C32257 * C635 +
             C5156 * C631 - C32227 * C636) *
                C32053) *
               C32013) *
              C31925 * C31911 * C111 +
          (((C32270 * C128 - C5154 * C121 + C32257 * C129 - C5155 * C122 +
             C32227 * C130 - C5156 * C123) *
                C20326 +
            (C32270 * C142 - C5154 * C133 + C32257 * C143 - C5155 * C134 +
             C32227 * C144 - C5156 * C135) *
                C20324 +
            (C32270 * C330 - C5154 * C320 + C32257 * C331 - C5155 * C321 +
             C32227 * C332 - C5156 * C322) *
                C20327 +
            (C32270 * C350 - C5154 * C335 + C32257 * C351 - C5155 * C336 +
             C32227 * C352 - C5156 * C337) *
                C32053) *
               C14629 +
           ((C32270 * C225 - C5154 * C215 + C32257 * C226 - C5155 * C216 +
             C32227 * C227 - C5156 * C217) *
                C20326 +
            (C32270 * C245 - C5154 * C230 + C32257 * C246 - C5155 * C231 +
             C32227 * C247 - C5156 * C232) *
                C20324 +
            (C32270 * C625 - C5154 * C620 + C32257 * C626 - C5155 * C621 +
             C32227 * C627 - C5156 * C622) *
                C20327 +
            (C32270 * C635 - C5154 * C630 + C32257 * C636 - C5155 * C631 +
             C32227 * C637 - C5156 * C632) *
                C32053) *
               C32013) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31862 * C126 - C5980 * C119) * C20326 +
            (C31862 * C140 - C5980 * C131) * C20324 + (C6820 - C6821) * C20327 +
            (C6822 - C6823) * C32053) *
               C32280 +
           ((C6052 - C6053) * C20326 + (C6054 - C6055) * C20324 +
            C7318 * C20327 + C7319 * C32053) *
               C32276 +
           (C6072 * C20326 + C6073 * C20324 + C6677 * C20327 + C6678 * C32053) *
               C32266 +
           (C6074 * C20326 + C6075 * C20324 + C9427 * C20327 + C9428 * C32053) *
               C32248) *
              C31925 * C31911 * C110 +
          (((C5980 * C120 - C31862 * C127) * C20326 +
            (C5980 * C132 - C31862 * C141) * C20324 + (C7160 - C7161) * C20327 +
            (C7162 - C7163) * C32053) *
               C32280 +
           ((C6247 - C6248) * C20326 + (C6249 - C6250) * C20324 +
            (C6994 - C6995) * C20327 + (C6996 - C6997) * C32053) *
               C32276 +
           ((C6251 - C6252) * C20326 + (C6253 - C6254) * C20324 +
            (C7002 - C7003) * C20327 + (C7004 - C7005) * C32053) *
               C32266 +
           ((C6255 - C6256) * C20326 + (C6257 - C6258) * C20324 +
            (C9665 - C9666) * C20327 + (C9667 - C9668) * C32053) *
               C32248) *
              C31925 * C31911 * C111 +
          (((C31862 * C128 - C5980 * C121) * C20326 +
            (C31862 * C142 - C5980 * C133) * C20324 +
            (C31862 * C330 - C5980 * C320) * C20327 +
            (C31862 * C350 - C5980 * C335) * C32053) *
               C32280 +
           ((C31862 * C225 - C5980 * C215) * C20326 +
            (C31862 * C245 - C5980 * C230) * C20324 +
            (C31862 * C625 - C5980 * C620) * C20327 +
            (C31862 * C635 - C5980 * C630) * C32053) *
               C32276 +
           ((C31862 * C235 - C5980 * C220) * C20326 +
            (C31862 * C250 - C5980 * C240) * C20324 +
            (C31862 * C1061 - C5980 * C1052) * C20327 +
            (C31862 * C1079 - C5980 * C1064) * C32053) *
               C32266 +
           ((C31862 * C875 - C5980 * C869) * C20326 +
            (C31862 * C887 - C5980 * C878) * C20324 +
            (C31862 * C1561 - C5980 * C1558) * C20327 +
            (C31862 * C1567 - C5980 * C1564) * C32053) *
               C32248) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31862 * C126 - C5980 * C119) * C20326 +
            (C31862 * C140 - C5980 * C131) * C20324 + (C6820 - C6821) * C20327 +
            (C6822 - C6823) * C32053) *
               C32280 +
           ((C6052 - C6053) * C20326 + (C6054 - C6055) * C20324 +
            C7318 * C20327 + C7319 * C32053) *
               C32276 +
           C26812 * C32266 + C26813 * C32248) *
              C31925 * C209 +
          (((C6053 - C6052) * C20326 + (C6055 - C6054) * C20324 +
            C7320 * C20327 + C7321 * C32053) *
               C32280 +
           ((C6057 - C6056) * C20326 + (C6059 - C6058) * C20324 +
            C7324 * C20327 + C7325 * C32053) *
               C32276 +
           ((C6061 - C6060) * C20326 + (C6063 - C6062) * C20324 +
            C9929 * C20327 + C9930 * C32053) *
               C32266 +
           ((C6065 - C6064) * C20326 + (C6067 - C6066) * C20324 +
            (C6447 - C6448) * C20327 + (C6449 - C6450) * C32053) *
               C32248) *
              C31925 * C210 +
          (C26812 * C32280 + C26813 * C32276 +
           (C6076 * C20326 + C6077 * C20324 + (C6448 - C6447) * C20327 +
            (C6450 - C6449) * C32053) *
               C32266 +
           ((C6069 - C6068) * C20326 + (C6071 - C6070) * C20324 +
            (C31862 * C6431 - C5980 * C6430) * C20327 +
            (C31862 * C6433 - C5980 * C6432) * C32053) *
               C32248) *
              C31925 * C211) *
         C31899) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31862 * C126 - C5980 * C119) * C22091 +
            (C31862 * C140 - C5980 * C131) * C32281 + (C6820 - C6821) * C22092 +
            (C6822 - C6823) * C32278 + C6842 * C22093 + C6843 * C32269 +
            C11770 * C22094 + C11771 * C32254) *
               C14629 +
           ((C6052 - C6053) * C22091 + (C6054 - C6055) * C32281 +
            C7318 * C22092 + C7319 * C32278 + C6828 * C22093 + C6829 * C32269 +
            C14130 * C22094 + C14131 * C32254) *
               C32013) *
              C31925 * C31911 * C110 +
          (((C5980 * C120 - C31862 * C127) * C22091 +
            (C5980 * C132 - C31862 * C141) * C32281 + (C7160 - C7161) * C22092 +
            (C7162 - C7163) * C32278 + (C7164 - C7165) * C22093 +
            (C7166 - C7167) * C32269 + (C11954 - C11955) * C22094 +
            (C11956 - C11957) * C32254) *
               C14629 +
           ((C6247 - C6248) * C22091 + (C6249 - C6250) * C32281 +
            (C6994 - C6995) * C22092 + (C6996 - C6997) * C32278 +
            (C6998 - C6999) * C22093 + (C7000 - C7001) * C32269 +
            (C14262 - C14263) * C22094 + (C14264 - C14265) * C32254) *
               C32013) *
              C31925 * C31911 * C111 +
          (((C31862 * C128 - C5980 * C121) * C22091 +
            (C31862 * C142 - C5980 * C133) * C32281 +
            (C31862 * C330 - C5980 * C320) * C22092 +
            (C31862 * C350 - C5980 * C335) * C32278 +
            (C31862 * C340 - C5980 * C325) * C22093 +
            (C31862 * C355 - C5980 * C345) * C32269 +
            (C31862 * C1936 - C5980 * C1930) * C22094 +
            (C31862 * C1948 - C5980 * C1939) * C32254) *
               C14629 +
           ((C31862 * C225 - C5980 * C215) * C22091 +
            (C31862 * C245 - C5980 * C230) * C32281 +
            (C31862 * C625 - C5980 * C620) * C22092 +
            (C31862 * C635 - C5980 * C630) * C32278 +
            (C31862 * C1067 - C5980 * C1055) * C22093 +
            (C31862 * C1082 - C5980 * C1070) * C32269 +
            (C31862 * C2473 - C5980 * C2470) * C22094 +
            (C31862 * C2479 - C5980 * C2476) * C32254) *
               C32013) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31862 * C126 - C5980 * C119) * C22091 +
            (C31862 * C140 - C5980 * C131) * C32281 + (C6820 - C6821) * C22092 +
            (C6822 - C6823) * C32278 + C6842 * C22093 + C6843 * C32269 +
            C11770 * C22094 + C11771 * C32254) *
               C14629 +
           ((C6052 - C6053) * C22091 + (C6054 - C6055) * C32281 +
            C7318 * C22092 + C7319 * C32278 + C6828 * C22093 + C6829 * C32269 +
            C14130 * C22094 + C14131 * C32254) *
               C32013) *
              C31925 * C209 +
          (((C6053 - C6052) * C22091 + (C6055 - C6054) * C32281 +
            C7320 * C22092 + C7321 * C32278 + C7322 * C22093 + C7323 * C32269 +
            C14526 * C22094 + C14527 * C32254) *
               C14629 +
           ((C6057 - C6056) * C22091 + (C6059 - C6058) * C32281 +
            C7324 * C22092 + C7325 * C32278 + C7326 * C22093 + C7327 * C32269 +
            (C6838 - C6839) * C22094 + (C6840 - C6841) * C32254) *
               C32013) *
              C31925 * C210 +
          ((C6072 * C22091 + C6073 * C32281 + C6677 * C22092 + C6678 * C32278 +
            C6690 * C22093 + C6691 * C32269 + (C6839 - C6838) * C22094 +
            (C6841 - C6840) * C32254) *
               C14629 +
           (C6074 * C22091 + C6075 * C32281 + C9427 * C22092 + C9428 * C32278 +
            (C6684 - C6683) * C22093 + (C6686 - C6685) * C32269 +
            (C31862 * C7314 - C5980 * C7313) * C22094 +
            (C31862 * C7316 - C5980 * C7315) * C32254) *
               C32013) *
              C31925 * C211) *
         C31899) /
            (p * q * std::sqrt(p + q));
    d2ee[40] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C32188 * C126 - C30873 * C119 + C31872 * C127 - C30854 * C120) *
                 C31010 +
             (C32188 * C140 - C30873 * C131 + C31872 * C141 - C30854 * C132) *
                 C32049 +
             (C8569 - C8570 + C8571 - C8572) * C31002 +
             (C8573 - C8574 + C8575 - C8576) * C32056 + C12514 * C31016 +
             C12515 * C23835) *
                C14629 +
            ((C7532 - C7533 + C7534 - C7535) * C31010 +
             (C7536 - C7537 + C7538 - C7539) * C32049 + C9219 * C31002 +
             C9220 * C32056 + C12516 * C31016 + C12517 * C23835) *
                C32013) *
               C31925 * C440 +
           (((C7533 - C7532 + C7535 - C7534) * C31010 +
             (C7537 - C7536 + C7539 - C7538) * C32049 + C9221 * C31002 +
             C9222 * C32056 + C13120 * C31016 + C13121 * C23835) *
                C14629 +
            ((C7541 - C7540 + C7543 - C7542) * C31010 +
             (C7545 - C7544 + C7547 - C7546) * C32049 + C9223 * C31002 +
             C9224 * C32056 + (C8593 - C8594 + C8595 - C8596) * C31016 +
             (C8597 - C8598 + C8599 - C8600) * C23835) *
                C32013) *
               C31925 * C441) *
              C442 +
          ((((C30873 * C120 - C32188 * C127 + C30854 * C121 - C31872 * C128) *
                 C31010 +
             (C30873 * C132 - C32188 * C141 + C30854 * C133 - C31872 * C142) *
                 C32049 +
             (C9005 - C9006 + C9007 - C9008) * C31002 +
             (C9009 - C9010 + C9011 - C9012) * C32056 +
             (C12914 - C12915 + C12916 - C12917) * C31016 +
             (C12918 - C12919 + C12920 - C12921) * C23835) *
                C14629 +
            ((C7810 - C7811 + C7812 - C7813) * C31010 +
             (C7814 - C7815 + C7816 - C7817) * C32049 +
             (C8795 - C8796 + C8797 - C8798) * C31002 +
             (C8799 - C8800 + C8801 - C8802) * C32056 +
             (C12712 - C12713 + C12714 - C12715) * C31016 +
             (C12716 - C12717 + C12718 - C12719) * C23835) *
                C32013) *
               C31925 * C440 +
           (((C7811 - C7810 + C7813 - C7812) * C31010 +
             (C7815 - C7814 + C7817 - C7816) * C32049 +
             (C8796 - C8795 + C8798 - C8797) * C31002 +
             (C8800 - C8799 + C8802 - C8801) * C32056 +
             (C12713 - C12712 + C12715 - C12714) * C31016 +
             (C12717 - C12716 + C12719 - C12718) * C23835) *
                C14629 +
            ((C7819 - C7818 + C7821 - C7820) * C31010 +
             (C7823 - C7822 + C7825 - C7824) * C32049 +
             (C8804 - C8803 + C8806 - C8805) * C31002 +
             (C8808 - C8807 + C8810 - C8809) * C32056 +
             (C32188 * C1072 - C30873 * C1057 + C31872 * C1073 -
              C30854 * C1058) *
                 C31016 +
             (C32188 * C1084 - C30873 * C1075 + C31872 * C1085 -
              C30854 * C1076) *
                 C23835) *
                C32013) *
               C31925 * C441) *
              C443)) /
        (p * q * std::sqrt(p + q));
    d2ee[41] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C32188 * C126 - C30873 * C119 + C31872 * C127 - C30854 * C120) *
                 C31010 +
             (C32188 * C140 - C30873 * C131 + C31872 * C141 - C30854 * C132) *
                 C32049 +
             (C8569 - C8570 + C8571 - C8572) * C31002 +
             (C8573 - C8574 + C8575 - C8576) * C32056 + C12514 * C31016 +
             C12515 * C23835) *
                C14629 +
            ((C7532 - C7533 + C7534 - C7535) * C31010 +
             (C7536 - C7537 + C7538 - C7539) * C32049 + C9219 * C31002 +
             C9220 * C32056 + C12516 * C31016 + C12517 * C23835) *
                C32013) *
               C530 +
           (((C8570 - C8569 + C8572 - C8571) * C31010 +
             (C8574 - C8573 + C8576 - C8575) * C32049 +
             (C8577 - C8578 + C8579 - C8580) * C31002 +
             (C8581 - C8582 + C8583 - C8584) * C32056 +
             (C12498 - C12499 + C12500 - C12501) * C31016 +
             (C12502 - C12503 + C12504 - C12505) * C23835) *
                C14629 +
            (C9221 * C31010 + C9222 * C32049 + C13120 * C31002 +
             C13121 * C32056 + (C12506 - C12507 + C12508 - C12509) * C31016 +
             (C12510 - C12511 + C12512 - C12513) * C23835) *
                C32013) *
               C531) *
              C440 +
          ((((C7533 - C7532 + C7535 - C7534) * C31010 +
             (C7537 - C7536 + C7539 - C7538) * C32049 + C9221 * C31002 +
             C9222 * C32056 + C13120 * C31016 + C13121 * C23835) *
                C14629 +
            ((C7541 - C7540 + C7543 - C7542) * C31010 +
             (C7545 - C7544 + C7547 - C7546) * C32049 + C9223 * C31002 +
             C9224 * C32056 + (C8593 - C8594 + C8595 - C8596) * C31016 +
             (C8597 - C8598 + C8599 - C8600) * C23835) *
                C32013) *
               C530 +
           ((C9219 * C31010 + C9220 * C32049 + C12516 * C31002 +
             C12517 * C32056 + (C12507 - C12506 + C12509 - C12508) * C31016 +
             (C12511 - C12510 + C12513 - C12512) * C23835) *
                C14629 +
            (C8417 * C31010 + C8418 * C32049 +
             (C8594 - C8593 + C8596 - C8595) * C31002 +
             (C8598 - C8597 + C8600 - C8599) * C32056 +
             (C32188 * C6810 - C30873 * C6807 + C31872 * C7156 -
              C30854 * C7155) *
                 C31016 +
             (C32188 * C6816 - C30873 * C6811 + C31872 * C7158 -
              C30854 * C7157) *
                 C23835) *
                C32013) *
               C531) *
              C441) *
         C31899) /
        (p * q * std::sqrt(p + q));
    d2ee[42] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C32188 * C126 - C30873 * C119 + C31872 * C127 - C30854 * C120) *
                C31010 +
            (C32188 * C140 - C30873 * C131 + C31872 * C141 - C30854 * C132) *
                C32049 +
            (C8569 - C8570 + C8571 - C8572) * C31002 +
            (C8573 - C8574 + C8575 - C8576) * C32056 + C12514 * C31016 +
            C12515 * C23835) *
               C14629 +
           ((C7532 - C7533 + C7534 - C7535) * C31010 +
            (C7536 - C7537 + C7538 - C7539) * C32049 + C9219 * C31002 +
            C9220 * C32056 + C12516 * C31016 + C12517 * C23835) *
               C32013) *
              C31925 * C209 +
          (((C7533 - C7532 + C7535 - C7534) * C31010 +
            (C7537 - C7536 + C7539 - C7538) * C32049 + C9221 * C31002 +
            C9222 * C32056 + C13120 * C31016 + C13121 * C23835) *
               C14629 +
           ((C7541 - C7540 + C7543 - C7542) * C31010 +
            (C7545 - C7544 + C7547 - C7546) * C32049 + C9223 * C31002 +
            C9224 * C32056 + (C8593 - C8594 + C8595 - C8596) * C31016 +
            (C8597 - C8598 + C8599 - C8600) * C23835) *
               C32013) *
              C31925 * C210 +
          ((C7572 * C31010 + C7573 * C32049 + C8417 * C31002 + C8418 * C32056 +
            (C8594 - C8593 + C8596 - C8595) * C31016 +
            (C8598 - C8597 + C8600 - C8599) * C23835) *
               C14629 +
           (C7574 * C31010 + C7575 * C32049 +
            (C8111 - C8110 + C8113 - C8112) * C31002 +
            (C8115 - C8114 + C8117 - C8116) * C32056 +
            (C32188 * C6153 - C30873 * C6149 + C31872 * C6990 -
             C30854 * C6989) *
                C31016 +
            (C32188 * C6158 - C30873 * C6154 + C31872 * C6992 -
             C30854 * C6991) *
                C23835) *
               C32013) *
              C31925 * C211) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C32188 * C126 - C30873 * C119 + C31872 * C127 - C30854 * C120) *
                C31010 +
            (C32188 * C140 - C30873 * C131 + C31872 * C141 - C30854 * C132) *
                C32049 +
            (C8569 - C8570 + C8571 - C8572) * C31002 +
            (C8573 - C8574 + C8575 - C8576) * C32056 + C12514 * C31016 +
            C12515 * C23835) *
               C14629 +
           ((C7532 - C7533 + C7534 - C7535) * C31010 +
            (C7536 - C7537 + C7538 - C7539) * C32049 + C9219 * C31002 +
            C9220 * C32056 + C12516 * C31016 + C12517 * C23835) *
               C32013) *
              C31925 * C31911 * C110 +
          (((C30873 * C120 - C32188 * C127 + C30854 * C121 - C31872 * C128) *
                C31010 +
            (C30873 * C132 - C32188 * C141 + C30854 * C133 - C31872 * C142) *
                C32049 +
            (C9005 - C9006 + C9007 - C9008) * C31002 +
            (C9009 - C9010 + C9011 - C9012) * C32056 +
            (C12914 - C12915 + C12916 - C12917) * C31016 +
            (C12918 - C12919 + C12920 - C12921) * C23835) *
               C14629 +
           ((C7810 - C7811 + C7812 - C7813) * C31010 +
            (C7814 - C7815 + C7816 - C7817) * C32049 +
            (C8795 - C8796 + C8797 - C8798) * C31002 +
            (C8799 - C8800 + C8801 - C8802) * C32056 +
            (C12712 - C12713 + C12714 - C12715) * C31016 +
            (C12716 - C12717 + C12718 - C12719) * C23835) *
               C32013) *
              C31925 * C31911 * C111 +
          (((C32188 * C128 - C30873 * C121 + C31872 * C129 - C30854 * C122) *
                C31010 +
            (C32188 * C142 - C30873 * C133 + C31872 * C143 - C30854 * C134) *
                C32049 +
            (C32188 * C330 - C30873 * C320 + C31872 * C331 - C30854 * C321) *
                C31002 +
            (C32188 * C350 - C30873 * C335 + C31872 * C351 - C30854 * C336) *
                C32056 +
            (C32188 * C340 - C30873 * C325 + C31872 * C341 - C30854 * C326) *
                C31016 +
            (C32188 * C355 - C30873 * C345 + C31872 * C356 - C30854 * C346) *
                C23835) *
               C14629 +
           ((C32188 * C225 - C30873 * C215 + C31872 * C226 - C30854 * C216) *
                C31010 +
            (C32188 * C245 - C30873 * C230 + C31872 * C246 - C30854 * C231) *
                C32049 +
            (C32188 * C625 - C30873 * C620 + C31872 * C626 - C30854 * C621) *
                C31002 +
            (C32188 * C635 - C30873 * C630 + C31872 * C636 - C30854 * C631) *
                C32056 +
            (C32188 * C1067 - C30873 * C1055 + C31872 * C2145 -
             C30854 * C2144) *
                C31016 +
            (C32188 * C1082 - C30873 * C1070 + C31872 * C2147 -
             C30854 * C2146) *
                C23835) *
               C32013) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C32188 * C126 - C30873 * C119 + C31872 * C127 - C30854 * C120) *
                C31010 +
            (C32188 * C140 - C30873 * C131 + C31872 * C141 - C30854 * C132) *
                C32049 +
            (C8569 - C8570 + C8571 - C8572) * C31002 +
            (C8573 - C8574 + C8575 - C8576) * C32056 + C12514 * C31016 +
            C12515 * C23835) *
               C14629 +
           ((C7532 - C7533 + C7534 - C7535) * C31010 +
            (C7536 - C7537 + C7538 - C7539) * C32049 + C9219 * C31002 +
            C9220 * C32056 + C12516 * C31016 + C12517 * C23835) *
               C32013) *
              C315 +
          (((C8570 - C8569 + C8572 - C8571) * C31010 +
            (C8574 - C8573 + C8576 - C8575) * C32049 +
            (C8577 - C8578 + C8579 - C8580) * C31002 +
            (C8581 - C8582 + C8583 - C8584) * C32056 +
            (C12498 - C12499 + C12500 - C12501) * C31016 +
            (C12502 - C12503 + C12504 - C12505) * C23835) *
               C14629 +
           (C9221 * C31010 + C9222 * C32049 + C13120 * C31002 +
            C13121 * C32056 + (C12506 - C12507 + C12508 - C12509) * C31016 +
            (C12510 - C12511 + C12512 - C12513) * C23835) *
               C32013) *
              C316 +
          ((C12514 * C31010 + C12515 * C32049 + C13436 * C31002 +
            C13437 * C32056 + (C13429 - C13428 + C13431 - C13430) * C31016 +
            (C13433 - C13432 + C13435 - C13434) * C23835) *
               C14629 +
           (C12516 * C31010 + C12517 * C32049 +
            (C12507 - C12506 + C12509 - C12508) * C31002 +
            (C12511 - C12510 + C12513 - C12512) * C32056 +
            (C32188 * C6812 - C30873 * C6808 + C31872 * C11864 -
             C30854 * C11863) *
                C31016 +
            (C32188 * C6817 - C30873 * C6813 + C31872 * C11866 -
             C30854 * C11865) *
                C23835) *
               C32013) *
              C317) *
         C31911 * C31899) /
            (p * q * std::sqrt(p + q));
    d2ee[43] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C32188 * C126 - C30873 * C119 + C31872 * C127 - C30854 * C120) *
                 C31010 +
             (C32188 * C140 - C30873 * C131 + C31872 * C141 - C30854 * C132) *
                 C32049 +
             (C8569 - C8570 + C8571 - C8572) * C31002 +
             (C8573 - C8574 + C8575 - C8576) * C32056 + C12514 * C31016 +
             C12515 * C23835) *
                C14629 +
            ((C7532 - C7533 + C7534 - C7535) * C31010 +
             (C7536 - C7537 + C7538 - C7539) * C32049 + C9219 * C31002 +
             C9220 * C32056 + C12516 * C31016 + C12517 * C23835) *
                C32013) *
               C530 +
           (((C8570 - C8569 + C8572 - C8571) * C31010 +
             (C8574 - C8573 + C8576 - C8575) * C32049 +
             (C8577 - C8578 + C8579 - C8580) * C31002 +
             (C8581 - C8582 + C8583 - C8584) * C32056 +
             (C12498 - C12499 + C12500 - C12501) * C31016 +
             (C12502 - C12503 + C12504 - C12505) * C23835) *
                C14629 +
            (C9221 * C31010 + C9222 * C32049 + C13120 * C31002 +
             C13121 * C32056 + (C12506 - C12507 + C12508 - C12509) * C31016 +
             (C12510 - C12511 + C12512 - C12513) * C23835) *
                C32013) *
               C531) *
              C31911 * C442 +
          ((((C30873 * C120 - C32188 * C127 + C30854 * C121 - C31872 * C128) *
                 C31010 +
             (C30873 * C132 - C32188 * C141 + C30854 * C133 - C31872 * C142) *
                 C32049 +
             (C9005 - C9006 + C9007 - C9008) * C31002 +
             (C9009 - C9010 + C9011 - C9012) * C32056 +
             (C12914 - C12915 + C12916 - C12917) * C31016 +
             (C12918 - C12919 + C12920 - C12921) * C23835) *
                C14629 +
            ((C7810 - C7811 + C7812 - C7813) * C31010 +
             (C7814 - C7815 + C7816 - C7817) * C32049 +
             (C8795 - C8796 + C8797 - C8798) * C31002 +
             (C8799 - C8800 + C8801 - C8802) * C32056 +
             (C12712 - C12713 + C12714 - C12715) * C31016 +
             (C12716 - C12717 + C12718 - C12719) * C23835) *
                C32013) *
               C530 +
           (((C9006 - C9005 + C9008 - C9007) * C31010 +
             (C9010 - C9009 + C9012 - C9011) * C32049 +
             (C12915 - C12914 + C12917 - C12916) * C31002 +
             (C12919 - C12918 + C12921 - C12920) * C32056 +
             (C13699 - C13698 + C13701 - C13700) * C31016 +
             (C13703 - C13702 + C13705 - C13704) * C23835) *
                C14629 +
            ((C8796 - C8795 + C8798 - C8797) * C31010 +
             (C8800 - C8799 + C8802 - C8801) * C32049 +
             (C12713 - C12712 + C12715 - C12714) * C31002 +
             (C12717 - C12716 + C12719 - C12718) * C32056 +
             (C32188 * C2472 - C30873 * C2469 + C31872 * C2473 -
              C30854 * C2470) *
                 C31016 +
             (C32188 * C2478 - C30873 * C2475 + C31872 * C2479 -
              C30854 * C2476) *
                 C23835) *
                C32013) *
               C531) *
              C31911 * C443)) /
        (p * q * std::sqrt(p + q));
    d2ee[44] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C32188 * C126 - C30873 * C119 + C31872 * C127 - C30854 * C120) *
                C31010 +
            (C32188 * C140 - C30873 * C131 + C31872 * C141 - C30854 * C132) *
                C32049 +
            (C8569 - C8570 + C8571 - C8572) * C31002 +
            (C8573 - C8574 + C8575 - C8576) * C32056 + C12514 * C31016 +
            C12515 * C23835) *
               C14629 +
           ((C7532 - C7533 + C7534 - C7535) * C31010 +
            (C7536 - C7537 + C7538 - C7539) * C32049 + C9219 * C31002 +
            C9220 * C32056 + C12516 * C31016 + C12517 * C23835) *
               C32013) *
              C31925 * C31911 * C110 +
          (((C30873 * C120 - C32188 * C127 + C30854 * C121 - C31872 * C128) *
                C31010 +
            (C30873 * C132 - C32188 * C141 + C30854 * C133 - C31872 * C142) *
                C32049 +
            (C9005 - C9006 + C9007 - C9008) * C31002 +
            (C9009 - C9010 + C9011 - C9012) * C32056 +
            (C12914 - C12915 + C12916 - C12917) * C31016 +
            (C12918 - C12919 + C12920 - C12921) * C23835) *
               C14629 +
           ((C7810 - C7811 + C7812 - C7813) * C31010 +
            (C7814 - C7815 + C7816 - C7817) * C32049 +
            (C8795 - C8796 + C8797 - C8798) * C31002 +
            (C8799 - C8800 + C8801 - C8802) * C32056 +
            (C12712 - C12713 + C12714 - C12715) * C31016 +
            (C12716 - C12717 + C12718 - C12719) * C23835) *
               C32013) *
              C31925 * C31911 * C111 +
          (((C32188 * C128 - C30873 * C121 + C31872 * C129 - C30854 * C122) *
                C31010 +
            (C32188 * C142 - C30873 * C133 + C31872 * C143 - C30854 * C134) *
                C32049 +
            (C32188 * C330 - C30873 * C320 + C31872 * C331 - C30854 * C321) *
                C31002 +
            (C32188 * C350 - C30873 * C335 + C31872 * C351 - C30854 * C336) *
                C32056 +
            (C32188 * C340 - C30873 * C325 + C31872 * C341 - C30854 * C326) *
                C31016 +
            (C32188 * C355 - C30873 * C345 + C31872 * C356 - C30854 * C346) *
                C23835) *
               C14629 +
           ((C32188 * C225 - C30873 * C215 + C31872 * C226 - C30854 * C216) *
                C31010 +
            (C32188 * C245 - C30873 * C230 + C31872 * C246 - C30854 * C231) *
                C32049 +
            (C32188 * C625 - C30873 * C620 + C31872 * C626 - C30854 * C621) *
                C31002 +
            (C32188 * C635 - C30873 * C630 + C31872 * C636 - C30854 * C631) *
                C32056 +
            (C32188 * C1067 - C30873 * C1055 + C31872 * C2145 -
             C30854 * C2144) *
                C31016 +
            (C32188 * C1082 - C30873 * C1070 + C31872 * C2147 -
             C30854 * C2146) *
                C23835) *
               C32013) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C32188 * C126 - C30873 * C119 + C31872 * C127 - C30854 * C120) *
                C31010 +
            (C32188 * C140 - C30873 * C131 + C31872 * C141 - C30854 * C132) *
                C32049 +
            (C8569 - C8570 + C8571 - C8572) * C31002 +
            (C8573 - C8574 + C8575 - C8576) * C32056 + C12514 * C31016 +
            C12515 * C23835) *
               C14629 +
           ((C7532 - C7533 + C7534 - C7535) * C31010 +
            (C7536 - C7537 + C7538 - C7539) * C32049 + C9219 * C31002 +
            C9220 * C32056 + C12516 * C31016 + C12517 * C23835) *
               C32013) *
              C31925 * C209 +
          (((C7533 - C7532 + C7535 - C7534) * C31010 +
            (C7537 - C7536 + C7539 - C7538) * C32049 + C9221 * C31002 +
            C9222 * C32056 + C13120 * C31016 + C13121 * C23835) *
               C14629 +
           ((C7541 - C7540 + C7543 - C7542) * C31010 +
            (C7545 - C7544 + C7547 - C7546) * C32049 + C9223 * C31002 +
            C9224 * C32056 + (C8593 - C8594 + C8595 - C8596) * C31016 +
            (C8597 - C8598 + C8599 - C8600) * C23835) *
               C32013) *
              C31925 * C210 +
          ((C7572 * C31010 + C7573 * C32049 + C8417 * C31002 + C8418 * C32056 +
            (C8594 - C8593 + C8596 - C8595) * C31016 +
            (C8598 - C8597 + C8600 - C8599) * C23835) *
               C14629 +
           (C7574 * C31010 + C7575 * C32049 +
            (C8111 - C8110 + C8113 - C8112) * C31002 +
            (C8115 - C8114 + C8117 - C8116) * C32056 +
            (C32188 * C6153 - C30873 * C6149 + C31872 * C6990 -
             C30854 * C6989) *
                C31016 +
            (C32188 * C6158 - C30873 * C6154 + C31872 * C6992 -
             C30854 * C6991) *
                C23835) *
               C32013) *
              C31925 * C211) *
         C31899) /
            (p * q * std::sqrt(p + q));
    d2ee[45] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C32270 * C126 - C5154 * C119 + C32257 * C127 - C5155 * C120 +
              C32227 * C128 - C5156 * C121) *
                 C20326 +
             (C32270 * C140 - C5154 * C131 + C32257 * C141 - C5155 * C132 +
              C32227 * C142 - C5156 * C133) *
                 C20324 +
             (C10267 - C10268 + C10269 - C10270 + C10271 - C10272) * C20327 +
             (C10273 - C10274 + C10275 - C10276 + C10277 - C10278) * C32053) *
                C14629 +
            ((C5268 - C5269 + C5270 - C5271 + C5272 - C5273) * C20326 +
             (C5274 - C5275 + C5276 - C5277 + C5278 - C5279) * C20324 +
             (C5890 - C5889 + C5892 - C5891 + C5894 - C5893) * C20327 +
             (C5896 - C5895 + C5898 - C5897 + C5900 - C5899) * C32053) *
                C32013) *
               C31925 * C440 +
           (((C5269 - C5268 + C5271 - C5270 + C5273 - C5272) * C20326 +
             (C5275 - C5274 + C5277 - C5276 + C5279 - C5278) * C20324 +
             (C5889 - C5890 + C5891 - C5892 + C5893 - C5894) * C20327 +
             (C5895 - C5896 + C5897 - C5898 + C5899 - C5900) * C32053) *
                C14629 +
            ((C5281 - C5280 + C5283 - C5282 + C5285 - C5284) * C20326 +
             (C5287 - C5286 + C5289 - C5288 + C5291 - C5290) * C20324 +
             (C5901 - C5902 + C5903 - C5904 + C5905 - C5906) * C20327 +
             (C5907 - C5908 + C5909 - C5910 + C5911 - C5912) * C32053) *
                C32013) *
               C31925 * C441) *
              C442 +
          ((((C5154 * C120 - C32270 * C127 + C5155 * C121 - C32257 * C128 +
              C5156 * C122 - C32227 * C129) *
                 C20326 +
             (C5154 * C132 - C32270 * C141 + C5155 * C133 - C32257 * C142 +
              C5156 * C134 - C32227 * C143) *
                 C20324 +
             (C10605 - C10606 + C10607 - C10608 + C10609 - C10610) * C20327 +
             (C10611 - C10612 + C10613 - C10614 + C10615 - C10616) * C32053) *
                C14629 +
            ((C5573 - C5574 + C5575 - C5576 + C5577 - C5578) * C20326 +
             (C5579 - C5580 + C5581 - C5582 + C5583 - C5584) * C20324 +
             (C26184 - C26185 + C26186 - C26187 + C26188 - C26189) * C20327 +
             (C26190 - C26191 + C26192 - C26193 + C26194 - C26195) * C32053) *
                C32013) *
               C31925 * C440 +
           (((C5574 - C5573 + C5576 - C5575 + C5578 - C5577) * C20326 +
             (C5580 - C5579 + C5582 - C5581 + C5584 - C5583) * C20324 +
             (C26185 - C26184 + C26187 - C26186 + C26189 - C26188) * C20327 +
             (C26191 - C26190 + C26193 - C26192 + C26195 - C26194) * C32053) *
                C14629 +
            ((C5586 - C5585 + C5588 - C5587 + C5590 - C5589) * C20326 +
             (C5592 - C5591 + C5594 - C5593 + C5596 - C5595) * C20324 +
             (C32270 * C1060 - C5154 * C1051 + C32257 * C1061 - C5155 * C1052 +
              C32227 * C1407 - C5156 * C1406) *
                 C20327 +
             (C32270 * C1078 - C5154 * C1063 + C32257 * C1079 - C5155 * C1064 +
              C32227 * C1409 - C5156 * C1408) *
                 C32053) *
                C32013) *
               C31925 * C441) *
              C443)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31862 * C126 - C5980 * C119) * C20326 +
             (C31862 * C140 - C5980 * C131) * C20324 +
             (C6820 - C6821) * C20327 + (C6822 - C6823) * C32053) *
                C32280 +
            ((C6052 - C6053) * C20326 + (C6054 - C6055) * C20324 +
             C7318 * C20327 + C7319 * C32053) *
                C32276 +
            C26812 * C32266 + C26813 * C32248) *
               C31925 * C440 +
           (((C6053 - C6052) * C20326 + (C6055 - C6054) * C20324 +
             C7320 * C20327 + C7321 * C32053) *
                C32280 +
            ((C6057 - C6056) * C20326 + (C6059 - C6058) * C20324 +
             C7324 * C20327 + C7325 * C32053) *
                C32276 +
            ((C6061 - C6060) * C20326 + (C6063 - C6062) * C20324 +
             C9929 * C20327 + C9930 * C32053) *
                C32266 +
            ((C6065 - C6064) * C20326 + (C6067 - C6066) * C20324 +
             (C6447 - C6448) * C20327 + (C6449 - C6450) * C32053) *
                C32248) *
               C31925 * C441) *
              C442 +
          ((((C5980 * C120 - C31862 * C127) * C20326 +
             (C5980 * C132 - C31862 * C141) * C20324 +
             (C7160 - C7161) * C20327 + (C7162 - C7163) * C32053) *
                C32280 +
            ((C6247 - C6248) * C20326 + (C6249 - C6250) * C20324 +
             (C6994 - C6995) * C20327 + (C6996 - C6997) * C32053) *
                C32276 +
            ((C6251 - C6252) * C20326 + (C6253 - C6254) * C20324 +
             (C7002 - C7003) * C20327 + (C7004 - C7005) * C32053) *
                C32266 +
            ((C6255 - C6256) * C20326 + (C6257 - C6258) * C20324 +
             (C9665 - C9666) * C20327 + (C9667 - C9668) * C32053) *
                C32248) *
               C31925 * C440 +
           (((C6248 - C6247) * C20326 + (C6250 - C6249) * C20324 +
             (C6995 - C6994) * C20327 + (C6997 - C6996) * C32053) *
                C32280 +
            ((C6252 - C6251) * C20326 + (C6254 - C6253) * C20324 +
             (C7003 - C7002) * C20327 + (C7005 - C7004) * C32053) *
                C32276 +
            ((C6256 - C6255) * C20326 + (C6258 - C6257) * C20324 +
             (C9666 - C9665) * C20327 + (C9668 - C9667) * C32053) *
                C32266 +
            ((C6260 - C6259) * C20326 + (C6262 - C6261) * C20324 +
             (C31862 * C6345 - C5980 * C6344) * C20327 +
             (C31862 * C6347 - C5980 * C6346) * C32053) *
                C32248) *
               C31925 * C441) *
              C443)) /
            (p * q * std::sqrt(p + q));
    d2ee[46] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C32270 * C126 - C5154 * C119 + C32257 * C127 - C5155 * C120 +
              C32227 * C128 - C5156 * C121) *
                 C20326 +
             (C32270 * C140 - C5154 * C131 + C32257 * C141 - C5155 * C132 +
              C32227 * C142 - C5156 * C133) *
                 C20324 +
             (C10267 - C10268 + C10269 - C10270 + C10271 - C10272) * C20327 +
             (C10273 - C10274 + C10275 - C10276 + C10277 - C10278) * C32053) *
                C14629 +
            ((C5268 - C5269 + C5270 - C5271 + C5272 - C5273) * C20326 +
             (C5274 - C5275 + C5276 - C5277 + C5278 - C5279) * C20324 +
             C26600 * C20327 + C26601 * C32053) *
                C32013) *
               C530 +
           (((C10268 - C10267 + C10270 - C10269 + C10272 - C10271) * C20326 +
             (C10274 - C10273 + C10276 - C10275 + C10278 - C10277) * C20324 +
             (C10280 - C10279 + C10282 - C10281 + C10284 - C10283) * C20327 +
             (C10286 - C10285 + C10288 - C10287 + C10290 - C10289) * C32053) *
                C14629 +
            (C26602 * C20326 + C26603 * C20324 +
             (C10775 - C10776 + C10777 - C10778 + C10779 - C10780) * C20327 +
             (C10781 - C10782 + C10783 - C10784 + C10785 - C10786) * C32053) *
                C32013) *
               C531) *
              C440 +
          ((((C5269 - C5268 + C5271 - C5270 + C5273 - C5272) * C20326 +
             (C5275 - C5274 + C5277 - C5276 + C5279 - C5278) * C20324 +
             C26602 * C20327 + C26603 * C32053) *
                C14629 +
            ((C5281 - C5280 + C5283 - C5282 + C5285 - C5284) * C20326 +
             (C5287 - C5286 + C5289 - C5288 + C5291 - C5290) * C20324 +
             (C5901 - C5902 + C5903 - C5904 + C5905 - C5906) * C20327 +
             (C5907 - C5908 + C5909 - C5910 + C5911 - C5912) * C32053) *
                C32013) *
               C530 +
           ((C26600 * C20326 + C26601 * C20324 +
             (C10776 - C10775 + C10778 - C10777 + C10780 - C10779) * C20327 +
             (C10782 - C10781 + C10784 - C10783 + C10786 - C10785) * C32053) *
                C14629 +
            ((C5902 - C5901 + C5904 - C5903 + C5906 - C5905) * C20326 +
             (C5908 - C5907 + C5910 - C5909 + C5912 - C5911) * C20324 +
             (C32270 * C1071 - C5154 * C1056 + C32257 * C1072 - C5155 * C1057 +
              C32227 * C1073 - C5156 * C1058) *
                 C20327 +
             (C32270 * C1083 - C5154 * C1074 + C32257 * C1084 - C5155 * C1075 +
              C32227 * C1085 - C5156 * C1076) *
                 C32053) *
                C32013) *
               C531) *
              C441) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31862 * C126 - C5980 * C119) * C20326 +
             (C31862 * C140 - C5980 * C131) * C20324 +
             (C6820 - C6821) * C20327 + (C6822 - C6823) * C32053) *
                C32280 +
            ((C6052 - C6053) * C20326 + (C6054 - C6055) * C20324 +
             C7318 * C20327 + C7319 * C32053) *
                C32276 +
            C26812 * C32266 + C26813 * C32248) *
               C530 +
           (((C6821 - C6820) * C20326 + (C6823 - C6822) * C20324 +
             (C6825 - C6824) * C20327 + (C6827 - C6826) * C32053) *
                C32280 +
            (C7320 * C20326 + C7321 * C20324 + C7322 * C20327 +
             C7323 * C32053) *
                C32276 +
            (C7324 * C20326 + C7325 * C20324 + C7326 * C20327 +
             C7327 * C32053) *
                C32266 +
            (C9929 * C20326 + C9930 * C20324 + (C6683 - C6684) * C20327 +
             (C6685 - C6686) * C32053) *
                C32248) *
               C531) *
              C440 +
          ((((C6053 - C6052) * C20326 + (C6055 - C6054) * C20324 +
             C7320 * C20327 + C7321 * C32053) *
                C32280 +
            ((C6057 - C6056) * C20326 + (C6059 - C6058) * C20324 +
             C7324 * C20327 + C7325 * C32053) *
                C32276 +
            ((C6061 - C6060) * C20326 + (C6063 - C6062) * C20324 +
             C9929 * C20327 + C9930 * C32053) *
                C32266 +
            ((C6065 - C6064) * C20326 + (C6067 - C6066) * C20324 +
             (C6447 - C6448) * C20327 + (C6449 - C6450) * C32053) *
                C32248) *
               C530 +
           ((C7318 * C20326 + C7319 * C20324 + C6828 * C20327 +
             C6829 * C32053) *
                C32280 +
            (C6677 * C20326 + C6678 * C20324 + C6690 * C20327 +
             C6691 * C32053) *
                C32276 +
            (C9427 * C20326 + C9428 * C20324 + (C6684 - C6683) * C20327 +
             (C6686 - C6685) * C32053) *
                C32266 +
            ((C6448 - C6447) * C20326 + (C6450 - C6449) * C20324 +
             (C31862 * C6155 - C5980 * C6150) * C20327 +
             (C31862 * C6159 - C5980 * C6156) * C32053) *
                C32248) *
               C531) *
              C441) *
         C31899) /
            (p * q * std::sqrt(p + q));
    d2ee[47] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C32270 * C126 - C5154 * C119 + C32257 * C127 - C5155 * C120 +
             C32227 * C128 - C5156 * C121) *
                C20326 +
            (C32270 * C140 - C5154 * C131 + C32257 * C141 - C5155 * C132 +
             C32227 * C142 - C5156 * C133) *
                C20324 +
            (C10267 - C10268 + C10269 - C10270 + C10271 - C10272) * C20327 +
            (C10273 - C10274 + C10275 - C10276 + C10277 - C10278) * C32053) *
               C14629 +
           ((C5268 - C5269 + C5270 - C5271 + C5272 - C5273) * C20326 +
            (C5274 - C5275 + C5276 - C5277 + C5278 - C5279) * C20324 +
            (C5890 - C5889 + C5892 - C5891 + C5894 - C5893) * C20327 +
            (C5896 - C5895 + C5898 - C5897 + C5900 - C5899) * C32053) *
               C32013) *
              C31925 * C209 +
          (((C5269 - C5268 + C5271 - C5270 + C5273 - C5272) * C20326 +
            (C5275 - C5274 + C5277 - C5276 + C5279 - C5278) * C20324 +
            (C5889 - C5890 + C5891 - C5892 + C5893 - C5894) * C20327 +
            (C5895 - C5896 + C5897 - C5898 + C5899 - C5900) * C32053) *
               C14629 +
           ((C5281 - C5280 + C5283 - C5282 + C5285 - C5284) * C20326 +
            (C5287 - C5286 + C5289 - C5288 + C5291 - C5290) * C20324 +
            (C5901 - C5902 + C5903 - C5904 + C5905 - C5906) * C20327 +
            (C5907 - C5908 + C5909 - C5910 + C5911 - C5912) * C32053) *
               C32013) *
              C31925 * C210 +
          ((C5312 * C20326 + C5313 * C20324 +
            (C5902 - C5901 + C5904 - C5903 + C5906 - C5905) * C20327 +
            (C5908 - C5907 + C5910 - C5909 + C5912 - C5911) * C32053) *
               C14629 +
           ((C5293 - C5292 + C5295 - C5294 + C5297 - C5296) * C20326 +
            (C5299 - C5298 + C5301 - C5300 + C5303 - C5302) * C20324 +
            (C32270 * C1559 - C5154 * C1556 + C32257 * C1560 - C5155 * C1557 +
             C32227 * C1561 - C5156 * C1558) *
                C20327 +
            (C32270 * C1565 - C5154 * C1562 + C32257 * C1566 - C5155 * C1563 +
             C32227 * C1567 - C5156 * C1564) *
                C32053) *
               C32013) *
              C31925 * C211) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C32270 * C126 - C5154 * C119 + C32257 * C127 - C5155 * C120 +
             C32227 * C128 - C5156 * C121) *
                C20326 +
            (C32270 * C140 - C5154 * C131 + C32257 * C141 - C5155 * C132 +
             C32227 * C142 - C5156 * C133) *
                C20324 +
            (C10267 - C10268 + C10269 - C10270 + C10271 - C10272) * C20327 +
            (C10273 - C10274 + C10275 - C10276 + C10277 - C10278) * C32053) *
               C14629 +
           ((C5268 - C5269 + C5270 - C5271 + C5272 - C5273) * C20326 +
            (C5274 - C5275 + C5276 - C5277 + C5278 - C5279) * C20324 +
            (C5890 - C5889 + C5892 - C5891 + C5894 - C5893) * C20327 +
            (C5896 - C5895 + C5898 - C5897 + C5900 - C5899) * C32053) *
               C32013) *
              C31925 * C31911 * C110 +
          (((C5154 * C120 - C32270 * C127 + C5155 * C121 - C32257 * C128 +
             C5156 * C122 - C32227 * C129) *
                C20326 +
            (C5154 * C132 - C32270 * C141 + C5155 * C133 - C32257 * C142 +
             C5156 * C134 - C32227 * C143) *
                C20324 +
            (C10605 - C10606 + C10607 - C10608 + C10609 - C10610) * C20327 +
            (C10611 - C10612 + C10613 - C10614 + C10615 - C10616) * C32053) *
               C14629 +
           ((C5573 - C5574 + C5575 - C5576 + C5577 - C5578) * C20326 +
            (C5579 - C5580 + C5581 - C5582 + C5583 - C5584) * C20324 +
            (C5154 * C619 - C32270 * C624 + C5155 * C620 - C32257 * C625 +
             C5156 * C621 - C32227 * C626) *
                C20327 +
            (C5154 * C629 - C32270 * C634 + C5155 * C630 - C32257 * C635 +
             C5156 * C631 - C32227 * C636) *
                C32053) *
               C32013) *
              C31925 * C31911 * C111 +
          (((C32270 * C128 - C5154 * C121 + C32257 * C129 - C5155 * C122 +
             C32227 * C130 - C5156 * C123) *
                C20326 +
            (C32270 * C142 - C5154 * C133 + C32257 * C143 - C5155 * C134 +
             C32227 * C144 - C5156 * C135) *
                C20324 +
            (C32270 * C330 - C5154 * C320 + C32257 * C331 - C5155 * C321 +
             C32227 * C332 - C5156 * C322) *
                C20327 +
            (C32270 * C350 - C5154 * C335 + C32257 * C351 - C5155 * C336 +
             C32227 * C352 - C5156 * C337) *
                C32053) *
               C14629 +
           ((C32270 * C225 - C5154 * C215 + C32257 * C226 - C5155 * C216 +
             C32227 * C227 - C5156 * C217) *
                C20326 +
            (C32270 * C245 - C5154 * C230 + C32257 * C246 - C5155 * C231 +
             C32227 * C247 - C5156 * C232) *
                C20324 +
            (C32270 * C625 - C5154 * C620 + C32257 * C626 - C5155 * C621 +
             C32227 * C627 - C5156 * C622) *
                C20327 +
            (C32270 * C635 - C5154 * C630 + C32257 * C636 - C5155 * C631 +
             C32227 * C637 - C5156 * C632) *
                C32053) *
               C32013) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C32270 * C126 - C5154 * C119 + C32257 * C127 - C5155 * C120 +
             C32227 * C128 - C5156 * C121) *
                C20326 +
            (C32270 * C140 - C5154 * C131 + C32257 * C141 - C5155 * C132 +
             C32227 * C142 - C5156 * C133) *
                C20324 +
            (C10267 - C10268 + C10269 - C10270 + C10271 - C10272) * C20327 +
            (C10273 - C10274 + C10275 - C10276 + C10277 - C10278) * C32053) *
               C14629 +
           ((C5268 - C5269 + C5270 - C5271 + C5272 - C5273) * C20326 +
            (C5274 - C5275 + C5276 - C5277 + C5278 - C5279) * C20324 +
            (C5890 - C5889 + C5892 - C5891 + C5894 - C5893) * C20327 +
            (C5896 - C5895 + C5898 - C5897 + C5900 - C5899) * C32053) *
               C32013) *
              C315 +
          (((C10268 - C10267 + C10270 - C10269 + C10272 - C10271) * C20326 +
            (C10274 - C10273 + C10276 - C10275 + C10278 - C10277) * C20324 +
            (C10280 - C10279 + C10282 - C10281 + C10284 - C10283) * C20327 +
            (C10286 - C10285 + C10288 - C10287 + C10290 - C10289) * C32053) *
               C14629 +
           ((C5889 - C5890 + C5891 - C5892 + C5893 - C5894) * C20326 +
            (C5895 - C5896 + C5897 - C5898 + C5899 - C5900) * C20324 +
            (C10775 - C10776 + C10777 - C10778 + C10779 - C10780) * C20327 +
            (C10781 - C10782 + C10783 - C10784 + C10785 - C10786) * C32053) *
               C32013) *
              C316 +
          ((C10311 * C20326 + C10312 * C20324 +
            (C10292 - C10291 + C10294 - C10293 + C10296 - C10295) * C20327 +
            (C10298 - C10297 + C10300 - C10299 + C10302 - C10301) * C32053) *
               C14629 +
           ((C10776 - C10775 + C10778 - C10777 + C10780 - C10779) * C20326 +
            (C10782 - C10781 + C10784 - C10783 + C10786 - C10785) * C20324 +
            (C32270 * C2471 - C5154 * C2468 + C32257 * C2472 - C5155 * C2469 +
             C32227 * C2473 - C5156 * C2470) *
                C20327 +
            (C32270 * C2477 - C5154 * C2474 + C32257 * C2478 - C5155 * C2475 +
             C32227 * C2479 - C5156 * C2476) *
                C32053) *
               C32013) *
              C317) *
         C31911 * C31899) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31862 * C126 - C5980 * C119) * C20326 +
            (C31862 * C140 - C5980 * C131) * C20324 + (C6820 - C6821) * C20327 +
            (C6822 - C6823) * C32053) *
               C32280 +
           ((C6052 - C6053) * C20326 + (C6054 - C6055) * C20324 +
            C7318 * C20327 + C7319 * C32053) *
               C32276 +
           (C6072 * C20326 + C6073 * C20324 + C6677 * C20327 + C6678 * C32053) *
               C32266 +
           (C6074 * C20326 + C6075 * C20324 + C9427 * C20327 + C9428 * C32053) *
               C32248) *
              C31925 * C31911 * C110 +
          (((C5980 * C120 - C31862 * C127) * C20326 +
            (C5980 * C132 - C31862 * C141) * C20324 + (C7160 - C7161) * C20327 +
            (C7162 - C7163) * C32053) *
               C32280 +
           ((C6247 - C6248) * C20326 + (C6249 - C6250) * C20324 +
            (C6994 - C6995) * C20327 + (C6996 - C6997) * C32053) *
               C32276 +
           ((C6251 - C6252) * C20326 + (C6253 - C6254) * C20324 +
            (C7002 - C7003) * C20327 + (C7004 - C7005) * C32053) *
               C32266 +
           ((C6255 - C6256) * C20326 + (C6257 - C6258) * C20324 +
            (C9665 - C9666) * C20327 + (C9667 - C9668) * C32053) *
               C32248) *
              C31925 * C31911 * C111 +
          (((C31862 * C128 - C5980 * C121) * C20326 +
            (C31862 * C142 - C5980 * C133) * C20324 +
            (C31862 * C330 - C5980 * C320) * C20327 +
            (C31862 * C350 - C5980 * C335) * C32053) *
               C32280 +
           ((C31862 * C225 - C5980 * C215) * C20326 +
            (C31862 * C245 - C5980 * C230) * C20324 +
            (C31862 * C625 - C5980 * C620) * C20327 +
            (C31862 * C635 - C5980 * C630) * C32053) *
               C32276 +
           ((C31862 * C235 - C5980 * C220) * C20326 +
            (C31862 * C250 - C5980 * C240) * C20324 +
            (C31862 * C1061 - C5980 * C1052) * C20327 +
            (C31862 * C1079 - C5980 * C1064) * C32053) *
               C32266 +
           ((C31862 * C875 - C5980 * C869) * C20326 +
            (C31862 * C887 - C5980 * C878) * C20324 +
            (C31862 * C1561 - C5980 * C1558) * C20327 +
            (C31862 * C1567 - C5980 * C1564) * C32053) *
               C32248) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31862 * C126 - C5980 * C119) * C20326 +
            (C31862 * C140 - C5980 * C131) * C20324 + (C6820 - C6821) * C20327 +
            (C6822 - C6823) * C32053) *
               C32280 +
           ((C6052 - C6053) * C20326 + (C6054 - C6055) * C20324 +
            C7318 * C20327 + C7319 * C32053) *
               C32276 +
           C26812 * C32266 + C26813 * C32248) *
              C31925 * C209 +
          (((C6053 - C6052) * C20326 + (C6055 - C6054) * C20324 +
            C7320 * C20327 + C7321 * C32053) *
               C32280 +
           ((C6057 - C6056) * C20326 + (C6059 - C6058) * C20324 +
            C7324 * C20327 + C7325 * C32053) *
               C32276 +
           ((C6061 - C6060) * C20326 + (C6063 - C6062) * C20324 +
            C9929 * C20327 + C9930 * C32053) *
               C32266 +
           ((C6065 - C6064) * C20326 + (C6067 - C6066) * C20324 +
            (C6447 - C6448) * C20327 + (C6449 - C6450) * C32053) *
               C32248) *
              C31925 * C210 +
          (C26812 * C32280 + C26813 * C32276 +
           (C6076 * C20326 + C6077 * C20324 + (C6448 - C6447) * C20327 +
            (C6450 - C6449) * C32053) *
               C32266 +
           ((C6069 - C6068) * C20326 + (C6071 - C6070) * C20324 +
            (C31862 * C6431 - C5980 * C6430) * C20327 +
            (C31862 * C6433 - C5980 * C6432) * C32053) *
               C32248) *
              C31925 * C211) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31862 * C126 - C5980 * C119) * C20326 +
            (C31862 * C140 - C5980 * C131) * C20324 + (C6820 - C6821) * C20327 +
            (C6822 - C6823) * C32053) *
               C32280 +
           ((C6052 - C6053) * C20326 + (C6054 - C6055) * C20324 +
            C7318 * C20327 + C7319 * C32053) *
               C32276 +
           C26812 * C32266 + C26813 * C32248) *
              C315 +
          (((C6821 - C6820) * C20326 + (C6823 - C6822) * C20324 +
            (C6825 - C6824) * C20327 + (C6827 - C6826) * C32053) *
               C32280 +
           (C7320 * C20326 + C7321 * C20324 + C7322 * C20327 + C7323 * C32053) *
               C32276 +
           (C7324 * C20326 + C7325 * C20324 + C7326 * C20327 + C7327 * C32053) *
               C32266 +
           (C9929 * C20326 + C9930 * C20324 + (C6683 - C6684) * C20327 +
            (C6685 - C6686) * C32053) *
               C32248) *
              C316 +
          ((C6842 * C20326 + C6843 * C20324 + C11770 * C20327 +
            C11771 * C32053) *
               C32280 +
           (C6828 * C20326 + C6829 * C20324 + C14130 * C20327 +
            C14131 * C32053) *
               C32276 +
           (C6690 * C20326 + C6691 * C20324 + (C6839 - C6838) * C20327 +
            (C6841 - C6840) * C32053) *
               C32266 +
           ((C6684 - C6683) * C20326 + (C6686 - C6685) * C20324 +
            (C31862 * C7314 - C5980 * C7313) * C20327 +
            (C31862 * C7316 - C5980 * C7315) * C32053) *
               C32248) *
              C317) *
         C31911 * C31899) /
            (p * q * std::sqrt(p + q));
    d2ee[48] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C32270 * C126 - C5154 * C119 + C32257 * C127 - C5155 * C120 +
              C32227 * C128 - C5156 * C121) *
                 C20326 +
             (C32270 * C140 - C5154 * C131 + C32257 * C141 - C5155 * C132 +
              C32227 * C142 - C5156 * C133) *
                 C20324 +
             (C10267 - C10268 + C10269 - C10270 + C10271 - C10272) * C20327 +
             (C10273 - C10274 + C10275 - C10276 + C10277 - C10278) * C32053) *
                C14629 +
            ((C5268 - C5269 + C5270 - C5271 + C5272 - C5273) * C20326 +
             (C5274 - C5275 + C5276 - C5277 + C5278 - C5279) * C20324 +
             (C5890 - C5889 + C5892 - C5891 + C5894 - C5893) * C20327 +
             (C5896 - C5895 + C5898 - C5897 + C5900 - C5899) * C32053) *
                C32013) *
               C530 +
           (((C10268 - C10267 + C10270 - C10269 + C10272 - C10271) * C20326 +
             (C10274 - C10273 + C10276 - C10275 + C10278 - C10277) * C20324 +
             (C10280 - C10279 + C10282 - C10281 + C10284 - C10283) * C20327 +
             (C10286 - C10285 + C10288 - C10287 + C10290 - C10289) * C32053) *
                C14629 +
            ((C5889 - C5890 + C5891 - C5892 + C5893 - C5894) * C20326 +
             (C5895 - C5896 + C5897 - C5898 + C5899 - C5900) * C20324 +
             (C10775 - C10776 + C10777 - C10778 + C10779 - C10780) * C20327 +
             (C10781 - C10782 + C10783 - C10784 + C10785 - C10786) * C32053) *
                C32013) *
               C531) *
              C31911 * C442 +
          ((((C5154 * C120 - C32270 * C127 + C5155 * C121 - C32257 * C128 +
              C5156 * C122 - C32227 * C129) *
                 C20326 +
             (C5154 * C132 - C32270 * C141 + C5155 * C133 - C32257 * C142 +
              C5156 * C134 - C32227 * C143) *
                 C20324 +
             (C10605 - C10606 + C10607 - C10608 + C10609 - C10610) * C20327 +
             (C10611 - C10612 + C10613 - C10614 + C10615 - C10616) * C32053) *
                C14629 +
            ((C5573 - C5574 + C5575 - C5576 + C5577 - C5578) * C20326 +
             (C5579 - C5580 + C5581 - C5582 + C5583 - C5584) * C20324 +
             (C26184 - C26185 + C26186 - C26187 + C26188 - C26189) * C20327 +
             (C26190 - C26191 + C26192 - C26193 + C26194 - C26195) * C32053) *
                C32013) *
               C530 +
           (((C10606 - C10605 + C10608 - C10607 + C10610 - C10609) * C20326 +
             (C10612 - C10611 + C10614 - C10613 + C10616 - C10615) * C20324 +
             (C10618 - C10617 + C10620 - C10619 + C10622 - C10621) * C20327 +
             (C10624 - C10623 + C10626 - C10625 + C10628 - C10627) * C32053) *
                C14629 +
            ((C26185 - C26184 + C26187 - C26186 + C26189 - C26188) * C20326 +
             (C26191 - C26190 + C26193 - C26192 + C26195 - C26194) * C20324 +
             (C32270 * C1066 - C5154 * C1054 + C32257 * C1067 - C5155 * C1055 +
              C32227 * C2145 - C5156 * C2144) *
                 C20327 +
             (C32270 * C1081 - C5154 * C1069 + C32257 * C1082 - C5155 * C1070 +
              C32227 * C2147 - C5156 * C2146) *
                 C32053) *
                C32013) *
               C531) *
              C31911 * C443)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31862 * C126 - C5980 * C119) * C20326 +
             (C31862 * C140 - C5980 * C131) * C20324 +
             (C6820 - C6821) * C20327 + (C6822 - C6823) * C32053) *
                C32280 +
            ((C6052 - C6053) * C20326 + (C6054 - C6055) * C20324 +
             C7318 * C20327 + C7319 * C32053) *
                C32276 +
            C26812 * C32266 + C26813 * C32248) *
               C530 +
           (((C6821 - C6820) * C20326 + (C6823 - C6822) * C20324 +
             (C6825 - C6824) * C20327 + (C6827 - C6826) * C32053) *
                C32280 +
            (C7320 * C20326 + C7321 * C20324 + C7322 * C20327 +
             C7323 * C32053) *
                C32276 +
            (C7324 * C20326 + C7325 * C20324 + C7326 * C20327 +
             C7327 * C32053) *
                C32266 +
            (C9929 * C20326 + C9930 * C20324 + (C6683 - C6684) * C20327 +
             (C6685 - C6686) * C32053) *
                C32248) *
               C531) *
              C31911 * C442 +
          ((((C5980 * C120 - C31862 * C127) * C20326 +
             (C5980 * C132 - C31862 * C141) * C20324 +
             (C7160 - C7161) * C20327 + (C7162 - C7163) * C32053) *
                C32280 +
            ((C6247 - C6248) * C20326 + (C6249 - C6250) * C20324 +
             (C6994 - C6995) * C20327 + (C6996 - C6997) * C32053) *
                C32276 +
            ((C6251 - C6252) * C20326 + (C6253 - C6254) * C20324 +
             (C7002 - C7003) * C20327 + (C7004 - C7005) * C32053) *
                C32266 +
            ((C6255 - C6256) * C20326 + (C6257 - C6258) * C20324 +
             (C9665 - C9666) * C20327 + (C9667 - C9668) * C32053) *
                C32248) *
               C530 +
           (((C7161 - C7160) * C20326 + (C7163 - C7162) * C20324 +
             (C7165 - C7164) * C20327 + (C7167 - C7166) * C32053) *
                C32280 +
            ((C6995 - C6994) * C20326 + (C6997 - C6996) * C20324 +
             (C6999 - C6998) * C20327 + (C7001 - C7000) * C32053) *
                C32276 +
            ((C7003 - C7002) * C20326 + (C7005 - C7004) * C20324 +
             (C7007 - C7006) * C20327 + (C7009 - C7008) * C32053) *
                C32266 +
            ((C9666 - C9665) * C20326 + (C9668 - C9667) * C20324 +
             (C31862 * C6990 - C5980 * C6989) * C20327 +
             (C31862 * C6992 - C5980 * C6991) * C32053) *
                C32248) *
               C531) *
              C31911 * C443)) /
            (p * q * std::sqrt(p + q));
    d2ee[49] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C32270 * C126 - C5154 * C119 + C32257 * C127 - C5155 * C120 +
             C32227 * C128 - C5156 * C121) *
                C20326 +
            (C32270 * C140 - C5154 * C131 + C32257 * C141 - C5155 * C132 +
             C32227 * C142 - C5156 * C133) *
                C20324 +
            (C10267 - C10268 + C10269 - C10270 + C10271 - C10272) * C20327 +
            (C10273 - C10274 + C10275 - C10276 + C10277 - C10278) * C32053) *
               C14629 +
           ((C5268 - C5269 + C5270 - C5271 + C5272 - C5273) * C20326 +
            (C5274 - C5275 + C5276 - C5277 + C5278 - C5279) * C20324 +
            (C5890 - C5889 + C5892 - C5891 + C5894 - C5893) * C20327 +
            (C5896 - C5895 + C5898 - C5897 + C5900 - C5899) * C32053) *
               C32013) *
              C31925 * C31911 * C110 +
          (((C5154 * C120 - C32270 * C127 + C5155 * C121 - C32257 * C128 +
             C5156 * C122 - C32227 * C129) *
                C20326 +
            (C5154 * C132 - C32270 * C141 + C5155 * C133 - C32257 * C142 +
             C5156 * C134 - C32227 * C143) *
                C20324 +
            (C10605 - C10606 + C10607 - C10608 + C10609 - C10610) * C20327 +
            (C10611 - C10612 + C10613 - C10614 + C10615 - C10616) * C32053) *
               C14629 +
           ((C5573 - C5574 + C5575 - C5576 + C5577 - C5578) * C20326 +
            (C5579 - C5580 + C5581 - C5582 + C5583 - C5584) * C20324 +
            (C5154 * C619 - C32270 * C624 + C5155 * C620 - C32257 * C625 +
             C5156 * C621 - C32227 * C626) *
                C20327 +
            (C5154 * C629 - C32270 * C634 + C5155 * C630 - C32257 * C635 +
             C5156 * C631 - C32227 * C636) *
                C32053) *
               C32013) *
              C31925 * C31911 * C111 +
          (((C32270 * C128 - C5154 * C121 + C32257 * C129 - C5155 * C122 +
             C32227 * C130 - C5156 * C123) *
                C20326 +
            (C32270 * C142 - C5154 * C133 + C32257 * C143 - C5155 * C134 +
             C32227 * C144 - C5156 * C135) *
                C20324 +
            (C32270 * C330 - C5154 * C320 + C32257 * C331 - C5155 * C321 +
             C32227 * C332 - C5156 * C322) *
                C20327 +
            (C32270 * C350 - C5154 * C335 + C32257 * C351 - C5155 * C336 +
             C32227 * C352 - C5156 * C337) *
                C32053) *
               C14629 +
           ((C32270 * C225 - C5154 * C215 + C32257 * C226 - C5155 * C216 +
             C32227 * C227 - C5156 * C217) *
                C20326 +
            (C32270 * C245 - C5154 * C230 + C32257 * C246 - C5155 * C231 +
             C32227 * C247 - C5156 * C232) *
                C20324 +
            (C32270 * C625 - C5154 * C620 + C32257 * C626 - C5155 * C621 +
             C32227 * C627 - C5156 * C622) *
                C20327 +
            (C32270 * C635 - C5154 * C630 + C32257 * C636 - C5155 * C631 +
             C32227 * C637 - C5156 * C632) *
                C32053) *
               C32013) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C32270 * C126 - C5154 * C119 + C32257 * C127 - C5155 * C120 +
             C32227 * C128 - C5156 * C121) *
                C20326 +
            (C32270 * C140 - C5154 * C131 + C32257 * C141 - C5155 * C132 +
             C32227 * C142 - C5156 * C133) *
                C20324 +
            (C10267 - C10268 + C10269 - C10270 + C10271 - C10272) * C20327 +
            (C10273 - C10274 + C10275 - C10276 + C10277 - C10278) * C32053) *
               C14629 +
           ((C5268 - C5269 + C5270 - C5271 + C5272 - C5273) * C20326 +
            (C5274 - C5275 + C5276 - C5277 + C5278 - C5279) * C20324 +
            (C5890 - C5889 + C5892 - C5891 + C5894 - C5893) * C20327 +
            (C5896 - C5895 + C5898 - C5897 + C5900 - C5899) * C32053) *
               C32013) *
              C31925 * C209 +
          (((C5269 - C5268 + C5271 - C5270 + C5273 - C5272) * C20326 +
            (C5275 - C5274 + C5277 - C5276 + C5279 - C5278) * C20324 +
            (C5889 - C5890 + C5891 - C5892 + C5893 - C5894) * C20327 +
            (C5895 - C5896 + C5897 - C5898 + C5899 - C5900) * C32053) *
               C14629 +
           ((C5281 - C5280 + C5283 - C5282 + C5285 - C5284) * C20326 +
            (C5287 - C5286 + C5289 - C5288 + C5291 - C5290) * C20324 +
            (C5901 - C5902 + C5903 - C5904 + C5905 - C5906) * C20327 +
            (C5907 - C5908 + C5909 - C5910 + C5911 - C5912) * C32053) *
               C32013) *
              C31925 * C210 +
          ((C5312 * C20326 + C5313 * C20324 +
            (C5902 - C5901 + C5904 - C5903 + C5906 - C5905) * C20327 +
            (C5908 - C5907 + C5910 - C5909 + C5912 - C5911) * C32053) *
               C14629 +
           ((C5293 - C5292 + C5295 - C5294 + C5297 - C5296) * C20326 +
            (C5299 - C5298 + C5301 - C5300 + C5303 - C5302) * C20324 +
            (C32270 * C1559 - C5154 * C1556 + C32257 * C1560 - C5155 * C1557 +
             C32227 * C1561 - C5156 * C1558) *
                C20327 +
            (C32270 * C1565 - C5154 * C1562 + C32257 * C1566 - C5155 * C1563 +
             C32227 * C1567 - C5156 * C1564) *
                C32053) *
               C32013) *
              C31925 * C211) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C31862 * C126 - C5980 * C119) * C20326 +
            (C31862 * C140 - C5980 * C131) * C20324 + (C6820 - C6821) * C20327 +
            (C6822 - C6823) * C32053) *
               C32280 +
           ((C6052 - C6053) * C20326 + (C6054 - C6055) * C20324 +
            C7318 * C20327 + C7319 * C32053) *
               C32276 +
           (C6072 * C20326 + C6073 * C20324 + C6677 * C20327 + C6678 * C32053) *
               C32266 +
           (C6074 * C20326 + C6075 * C20324 + C9427 * C20327 + C9428 * C32053) *
               C32248) *
              C31925 * C31911 * C110 +
          (((C5980 * C120 - C31862 * C127) * C20326 +
            (C5980 * C132 - C31862 * C141) * C20324 + (C7160 - C7161) * C20327 +
            (C7162 - C7163) * C32053) *
               C32280 +
           ((C6247 - C6248) * C20326 + (C6249 - C6250) * C20324 +
            (C6994 - C6995) * C20327 + (C6996 - C6997) * C32053) *
               C32276 +
           ((C6251 - C6252) * C20326 + (C6253 - C6254) * C20324 +
            (C7002 - C7003) * C20327 + (C7004 - C7005) * C32053) *
               C32266 +
           ((C6255 - C6256) * C20326 + (C6257 - C6258) * C20324 +
            (C9665 - C9666) * C20327 + (C9667 - C9668) * C32053) *
               C32248) *
              C31925 * C31911 * C111 +
          (((C31862 * C128 - C5980 * C121) * C20326 +
            (C31862 * C142 - C5980 * C133) * C20324 +
            (C31862 * C330 - C5980 * C320) * C20327 +
            (C31862 * C350 - C5980 * C335) * C32053) *
               C32280 +
           ((C31862 * C225 - C5980 * C215) * C20326 +
            (C31862 * C245 - C5980 * C230) * C20324 +
            (C31862 * C625 - C5980 * C620) * C20327 +
            (C31862 * C635 - C5980 * C630) * C32053) *
               C32276 +
           ((C31862 * C235 - C5980 * C220) * C20326 +
            (C31862 * C250 - C5980 * C240) * C20324 +
            (C31862 * C1061 - C5980 * C1052) * C20327 +
            (C31862 * C1079 - C5980 * C1064) * C32053) *
               C32266 +
           ((C31862 * C875 - C5980 * C869) * C20326 +
            (C31862 * C887 - C5980 * C878) * C20324 +
            (C31862 * C1561 - C5980 * C1558) * C20327 +
            (C31862 * C1567 - C5980 * C1564) * C32053) *
               C32248) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C31862 * C126 - C5980 * C119) * C20326 +
            (C31862 * C140 - C5980 * C131) * C20324 + (C6820 - C6821) * C20327 +
            (C6822 - C6823) * C32053) *
               C32280 +
           ((C6052 - C6053) * C20326 + (C6054 - C6055) * C20324 +
            C7318 * C20327 + C7319 * C32053) *
               C32276 +
           C26812 * C32266 + C26813 * C32248) *
              C31925 * C209 +
          (((C6053 - C6052) * C20326 + (C6055 - C6054) * C20324 +
            C7320 * C20327 + C7321 * C32053) *
               C32280 +
           ((C6057 - C6056) * C20326 + (C6059 - C6058) * C20324 +
            C7324 * C20327 + C7325 * C32053) *
               C32276 +
           ((C6061 - C6060) * C20326 + (C6063 - C6062) * C20324 +
            C9929 * C20327 + C9930 * C32053) *
               C32266 +
           ((C6065 - C6064) * C20326 + (C6067 - C6066) * C20324 +
            (C6447 - C6448) * C20327 + (C6449 - C6450) * C32053) *
               C32248) *
              C31925 * C210 +
          (C26812 * C32280 + C26813 * C32276 +
           (C6076 * C20326 + C6077 * C20324 + (C6448 - C6447) * C20327 +
            (C6450 - C6449) * C32053) *
               C32266 +
           ((C6069 - C6068) * C20326 + (C6071 - C6070) * C20324 +
            (C31862 * C6431 - C5980 * C6430) * C20327 +
            (C31862 * C6433 - C5980 * C6432) * C32053) *
               C32248) *
              C31925 * C211) *
         C31899) /
            (p * q * std::sqrt(p + q));
    d2ee[50] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C32188 * C126 - C30873 * C119 + C31872 * C127 - C30854 * C120) *
                 C118 +
             (C32188 * C140 - C30873 * C131 + C31872 * C141 - C30854 * C132) *
                 C31966) *
                C7427 +
            ((C7532 - C7533 + C7534 - C7535) * C118 +
             (C7536 - C7537 + C7538 - C7539) * C31966) *
                C7428 +
            C7580 * C7429 + C7581 * C32248) *
               C31925 * C440 +
           (((C7533 - C7532 + C7535 - C7534) * C118 +
             (C7537 - C7536 + C7539 - C7538) * C31966) *
                C7427 +
            ((C7541 - C7540 + C7543 - C7542) * C118 +
             (C7545 - C7544 + C7547 - C7546) * C31966) *
                C7428 +
            ((C7549 - C7548 + C7551 - C7550) * C118 +
             (C7553 - C7552 + C7555 - C7554) * C31966) *
                C7429 +
            ((C7556 - C7557 + C7558 - C7559) * C118 +
             (C7560 - C7561 + C7562 - C7563) * C31966) *
                C32248) *
               C31925 * C441) *
              C442 +
          ((((C30873 * C120 - C32188 * C127 + C30854 * C121 - C31872 * C128) *
                 C118 +
             (C30873 * C132 - C32188 * C141 + C30854 * C133 - C31872 * C142) *
                 C31966) *
                C7427 +
            ((C7810 - C7811 + C7812 - C7813) * C118 +
             (C7814 - C7815 + C7816 - C7817) * C31966) *
                C7428 +
            ((C7818 - C7819 + C7820 - C7821) * C118 +
             (C7822 - C7823 + C7824 - C7825) * C31966) *
                C7429 +
            ((C7826 - C7827 + C7828 - C7829) * C118 +
             (C7830 - C7831 + C7832 - C7833) * C31966) *
                C32248) *
               C31925 * C440 +
           (((C7811 - C7810 + C7813 - C7812) * C118 +
             (C7815 - C7814 + C7817 - C7816) * C31966) *
                C7427 +
            ((C7819 - C7818 + C7821 - C7820) * C118 +
             (C7823 - C7822 + C7825 - C7824) * C31966) *
                C7428 +
            ((C7827 - C7826 + C7829 - C7828) * C118 +
             (C7831 - C7830 + C7833 - C7832) * C31966) *
                C7429 +
            ((C32188 * C880 - C30873 * C871 + C31872 * C881 - C30854 * C872) *
                 C118 +
             (C32188 * C889 - C30873 * C883 + C31872 * C890 - C30854 * C884) *
                 C31966) *
                C32248) *
               C31925 * C441) *
              C443)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2590 * C126 - C2596 * C119 + C2591 * C127 - C2597 * C120 +
              C2592 * C128 - C2598 * C121 + C32242 * C129 - C2599 * C122) *
                 C118 +
             (C2590 * C140 - C2596 * C131 + C2591 * C141 - C2597 * C132 +
              C2592 * C142 - C2598 * C133 + C32242 * C143 - C2599 * C134) *
                 C31966) *
                C32207 +
            ((C2699 - C2700 + C2701 - C2702 + C2703 - C2704 + C2705 - C2706) *
                 C118 +
             (C2707 - C2708 + C2709 - C2710 + C2711 - C2712 + C2713 - C2714) *
                 C31966) *
                C32013) *
               C31925 * C440 +
           (((C2700 - C2699 + C2702 - C2701 + C2704 - C2703 + C2706 - C2705) *
                 C118 +
             (C2708 - C2707 + C2710 - C2709 + C2712 - C2711 + C2714 - C2713) *
                 C31966) *
                C32207 +
            ((C2715 - C2716 + C2717 - C2718 + C2719 - C2720 + C2721 - C2722) *
                 C118 +
             (C2723 - C2724 + C2725 - C2726 + C2727 - C2728 + C2729 - C2730) *
                 C31966) *
                C32013) *
               C31925 * C441) *
              C442 +
          ((((C2596 * C120 - C2590 * C127 + C2597 * C121 - C2591 * C128 +
              C2598 * C122 - C2592 * C129 + C2599 * C123 - C32242 * C130) *
                 C118 +
             (C2596 * C132 - C2590 * C141 + C2597 * C133 - C2591 * C142 +
              C2598 * C134 - C2592 * C143 + C2599 * C135 - C32242 * C144) *
                 C31966) *
                C32207 +
            ((C2959 - C2960 + C2961 - C2962 + C2963 - C2964 + C2965 - C2966) *
                 C118 +
             (C2967 - C2968 + C2969 - C2970 + C2971 - C2972 + C2973 - C2974) *
                 C31966) *
                C32013) *
               C31925 * C440 +
           (((C2960 - C2959 + C2962 - C2961 + C2964 - C2963 + C2966 - C2965) *
                 C118 +
             (C2968 - C2967 + C2970 - C2969 + C2972 - C2971 + C2974 - C2973) *
                 C31966) *
                C32207 +
            ((C2590 * C234 - C2596 * C219 + C2591 * C235 - C2597 * C220 +
              C2592 * C236 - C2598 * C221 + C32242 * C237 - C2599 * C222) *
                 C118 +
             (C2590 * C249 - C2596 * C239 + C2591 * C250 - C2597 * C240 +
              C2592 * C251 - C2598 * C241 + C32242 * C252 - C2599 * C242) *
                 C31966) *
                C32013) *
               C31925 * C441) *
              C443)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C32188 * C126 - C30873 * C119 + C31872 * C127 - C30854 * C120) *
                 C10043 +
             (C32188 * C140 - C30873 * C131 + C31872 * C141 - C30854 * C132) *
                 C10040 +
             (C8569 - C8570 + C8571 - C8572) * C10044 +
             (C8573 - C8574 + C8575 - C8576) * C10041 + C12514 * C10045 +
             C12515 * C32241) *
                C32207 +
            ((C7532 - C7533 + C7534 - C7535) * C10043 +
             (C7536 - C7537 + C7538 - C7539) * C10040 + C9219 * C10044 +
             C9220 * C10041 + C12516 * C10045 + C12517 * C32241) *
                C32013) *
               C31925 * C440 +
           (((C7533 - C7532 + C7535 - C7534) * C10043 +
             (C7537 - C7536 + C7539 - C7538) * C10040 + C9221 * C10044 +
             C9222 * C10041 + (C8585 - C8586 + C8587 - C8588) * C10045 +
             (C8589 - C8590 + C8591 - C8592) * C32241) *
                C32207 +
            ((C7541 - C7540 + C7543 - C7542) * C10043 +
             (C7545 - C7544 + C7547 - C7546) * C10040 + C9223 * C10044 +
             C9224 * C10041 + (C8593 - C8594 + C8595 - C8596) * C10045 +
             (C8597 - C8598 + C8599 - C8600) * C32241) *
                C32013) *
               C31925 * C441) *
              C442 +
          ((((C30873 * C120 - C32188 * C127 + C30854 * C121 - C31872 * C128) *
                 C10043 +
             (C30873 * C132 - C32188 * C141 + C30854 * C133 - C31872 * C142) *
                 C10040 +
             (C9005 - C9006 + C9007 - C9008) * C10044 +
             (C9009 - C9010 + C9011 - C9012) * C10041 +
             (C30873 * C324 - C32188 * C339 + C30854 * C325 - C31872 * C340) *
                 C10045 +
             (C30873 * C344 - C32188 * C354 + C30854 * C345 - C31872 * C355) *
                 C32241) *
                C32207 +
            ((C7810 - C7811 + C7812 - C7813) * C10043 +
             (C7814 - C7815 + C7816 - C7817) * C10040 +
             (C8795 - C8796 + C8797 - C8798) * C10044 +
             (C8799 - C8800 + C8801 - C8802) * C10041 +
             (C12712 - C12713 + C12714 - C12715) * C10045 +
             (C12716 - C12717 + C12718 - C12719) * C32241) *
                C32013) *
               C31925 * C440 +
           (((C7811 - C7810 + C7813 - C7812) * C10043 +
             (C7815 - C7814 + C7817 - C7816) * C10040 +
             (C8796 - C8795 + C8798 - C8797) * C10044 +
             (C8800 - C8799 + C8802 - C8801) * C10041 +
             (C12713 - C12712 + C12715 - C12714) * C10045 +
             (C12717 - C12716 + C12719 - C12718) * C32241) *
                C32207 +
            ((C7819 - C7818 + C7821 - C7820) * C10043 +
             (C7823 - C7822 + C7825 - C7824) * C10040 +
             (C8804 - C8803 + C8806 - C8805) * C10044 +
             (C8808 - C8807 + C8810 - C8809) * C10041 +
             (C32188 * C1072 - C30873 * C1057 + C31872 * C1073 -
              C30854 * C1058) *
                 C10045 +
             (C32188 * C1084 - C30873 * C1075 + C31872 * C1085 -
              C30854 * C1076) *
                 C32241) *
                C32013) *
               C31925 * C441) *
              C443)) /
            (p * q * std::sqrt(p + q));
    d2ee[51] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C32188 * C126 - C30873 * C119 + C31872 * C127 - C30854 * C120) *
                 C118 +
             (C32188 * C140 - C30873 * C131 + C31872 * C141 - C30854 * C132) *
                 C31966) *
                C7427 +
            ((C7532 - C7533 + C7534 - C7535) * C118 +
             (C7536 - C7537 + C7538 - C7539) * C31966) *
                C7428 +
            C7580 * C7429 + C7581 * C32248) *
               C530 +
           (((C30873 * C318 - C32188 * C328 + C30854 * C319 - C31872 * C329) *
                 C118 +
             (C30873 * C333 - C32188 * C348 + C30854 * C334 - C31872 * C349) *
                 C31966) *
                C7427 +
            ((C8094 - C8095 + C8096 - C8097) * C118 +
             (C8098 - C8099 + C8100 - C8101) * C31966) *
                C7428 +
            ((C8102 - C8103 + C8104 - C8105) * C118 +
             (C8106 - C8107 + C8108 - C8109) * C31966) *
                C7429 +
            ((C8110 - C8111 + C8112 - C8113) * C118 +
             (C8114 - C8115 + C8116 - C8117) * C31966) *
                C32248) *
               C531) *
              C440 +
          ((((C7533 - C7532 + C7535 - C7534) * C118 +
             (C7537 - C7536 + C7539 - C7538) * C31966) *
                C7427 +
            ((C7541 - C7540 + C7543 - C7542) * C118 +
             (C7545 - C7544 + C7547 - C7546) * C31966) *
                C7428 +
            ((C7549 - C7548 + C7551 - C7550) * C118 +
             (C7553 - C7552 + C7555 - C7554) * C31966) *
                C7429 +
            ((C7556 - C7557 + C7558 - C7559) * C118 +
             (C7560 - C7561 + C7562 - C7563) * C31966) *
                C32248) *
               C530 +
           (((C8095 - C8094 + C8097 - C8096) * C118 +
             (C8099 - C8098 + C8101 - C8100) * C31966) *
                C7427 +
            ((C8103 - C8102 + C8105 - C8104) * C118 +
             (C8107 - C8106 + C8109 - C8108) * C31966) *
                C7428 +
            ((C8111 - C8110 + C8113 - C8112) * C118 +
             (C8115 - C8114 + C8117 - C8116) * C31966) *
                C7429 +
            ((C32188 * C6151 - C30873 * C6148 + C31872 * C6345 -
              C30854 * C6344) *
                 C118 +
             (C32188 * C6157 - C30873 * C6152 + C31872 * C6347 -
              C30854 * C6346) *
                 C31966) *
                C32248) *
               C531) *
              C441) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2590 * C126 - C2596 * C119 + C2591 * C127 - C2597 * C120 +
              C2592 * C128 - C2598 * C121 + C32242 * C129 - C2599 * C122) *
                 C118 +
             (C2590 * C140 - C2596 * C131 + C2591 * C141 - C2597 * C132 +
              C2592 * C142 - C2598 * C133 + C32242 * C143 - C2599 * C134) *
                 C31966) *
                C32207 +
            ((C2699 - C2700 + C2701 - C2702 + C2703 - C2704 + C2705 - C2706) *
                 C118 +
             (C2707 - C2708 + C2709 - C2710 + C2711 - C2712 + C2713 - C2714) *
                 C31966) *
                C32013) *
               C530 +
           (((C2596 * C318 - C2590 * C328 + C2597 * C319 - C2591 * C329 +
              C2598 * C320 - C2592 * C330 + C2599 * C321 - C32242 * C331) *
                 C118 +
             (C2596 * C333 - C2590 * C348 + C2597 * C334 - C2591 * C349 +
              C2598 * C335 - C2592 * C350 + C2599 * C336 - C32242 * C351) *
                 C31966) *
                C32207 +
            ((C3235 - C3236 + C3237 - C3238 + C3239 - C3240 + C3241 - C3242) *
                 C118 +
             (C3243 - C3244 + C3245 - C3246 + C3247 - C3248 + C3249 - C3250) *
                 C31966) *
                C32013) *
               C531) *
              C440 +
          ((((C2700 - C2699 + C2702 - C2701 + C2704 - C2703 + C2706 - C2705) *
                 C118 +
             (C2708 - C2707 + C2710 - C2709 + C2712 - C2711 + C2714 - C2713) *
                 C31966) *
                C32207 +
            ((C2715 - C2716 + C2717 - C2718 + C2719 - C2720 + C2721 - C2722) *
                 C118 +
             (C2723 - C2724 + C2725 - C2726 + C2727 - C2728 + C2729 - C2730) *
                 C31966) *
                C32013) *
               C530 +
           (((C3236 - C3235 + C3238 - C3237 + C3240 - C3239 + C3242 - C3241) *
                 C118 +
             (C3244 - C3243 + C3246 - C3245 + C3248 - C3247 + C3250 - C3249) *
                 C31966) *
                C32207 +
            ((C2590 * C1059 - C2596 * C1050 + C2591 * C1060 - C2597 * C1051 +
              C2592 * C1061 - C2598 * C1052 + C32242 * C1407 - C2599 * C1406) *
                 C118 +
             (C2590 * C1077 - C2596 * C1062 + C2591 * C1078 - C2597 * C1063 +
              C2592 * C1079 - C2598 * C1064 + C32242 * C1409 - C2599 * C1408) *
                 C31966) *
                C32013) *
               C531) *
              C441) *
         C31899) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C32188 * C126 - C30873 * C119 + C31872 * C127 - C30854 * C120) *
                 C10043 +
             (C32188 * C140 - C30873 * C131 + C31872 * C141 - C30854 * C132) *
                 C10040 +
             (C8569 - C8570 + C8571 - C8572) * C10044 +
             (C8573 - C8574 + C8575 - C8576) * C10041 + C12514 * C10045 +
             C12515 * C32241) *
                C32207 +
            ((C7532 - C7533 + C7534 - C7535) * C10043 +
             (C7536 - C7537 + C7538 - C7539) * C10040 + C9219 * C10044 +
             C9220 * C10041 + C12516 * C10045 + C12517 * C32241) *
                C32013) *
               C530 +
           (((C8570 - C8569 + C8572 - C8571) * C10043 +
             (C8574 - C8573 + C8576 - C8575) * C10040 +
             (C8577 - C8578 + C8579 - C8580) * C10044 +
             (C8581 - C8582 + C8583 - C8584) * C10041 +
             (C12498 - C12499 + C12500 - C12501) * C10045 +
             (C12502 - C12503 + C12504 - C12505) * C32241) *
                C32207 +
            (C9221 * C10043 + C9222 * C10040 + C13120 * C10044 +
             C13121 * C10041 + (C12506 - C12507 + C12508 - C12509) * C10045 +
             (C12510 - C12511 + C12512 - C12513) * C32241) *
                C32013) *
               C531) *
              C440 +
          ((((C7533 - C7532 + C7535 - C7534) * C10043 +
             (C7537 - C7536 + C7539 - C7538) * C10040 + C9221 * C10044 +
             C9222 * C10041 + C13120 * C10045 + C13121 * C32241) *
                C32207 +
            ((C7541 - C7540 + C7543 - C7542) * C10043 +
             (C7545 - C7544 + C7547 - C7546) * C10040 + C9223 * C10044 +
             C9224 * C10041 + (C8593 - C8594 + C8595 - C8596) * C10045 +
             (C8597 - C8598 + C8599 - C8600) * C32241) *
                C32013) *
               C530 +
           ((C9219 * C10043 + C9220 * C10040 + C12516 * C10044 +
             C12517 * C10041 + (C12507 - C12506 + C12509 - C12508) * C10045 +
             (C12511 - C12510 + C12513 - C12512) * C32241) *
                C32207 +
            (C8417 * C10043 + C8418 * C10040 +
             (C8594 - C8593 + C8596 - C8595) * C10044 +
             (C8598 - C8597 + C8600 - C8599) * C10041 +
             (C32188 * C6810 - C30873 * C6807 + C31872 * C7156 -
              C30854 * C7155) *
                 C10045 +
             (C32188 * C6816 - C30873 * C6811 + C31872 * C7158 -
              C30854 * C7157) *
                 C32241) *
                C32013) *
               C531) *
              C441) *
         C31899) /
            (p * q * std::sqrt(p + q));
    d2ee[52] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C2590 * C126 - C2596 * C119 + C2591 * C127 - C2597 * C120 +
                 C2592 * C128 - C2598 * C121 + C32242 * C129 - C2599 * C122) *
                    C118 +
                (C2590 * C140 - C2596 * C131 + C2591 * C141 - C2597 * C132 +
                 C2592 * C142 - C2598 * C133 + C32242 * C143 - C2599 * C134) *
                    C31966) *
                   C32207 +
               ((C2590 * C223 - C2596 * C213 + C2591 * C224 - C2597 * C214 +
                 C2592 * C225 - C2598 * C215 + C32242 * C226 - C2599 * C216) *
                    C118 +
                (C2590 * C243 - C2596 * C228 + C2591 * C244 - C2597 * C229 +
                 C2592 * C245 - C2598 * C230 + C32242 * C246 - C2599 * C231) *
                    C31966) *
                   C32013) *
                  C31925 * C31911 * C110 +
              (((C2596 * C120 - C2590 * C127 + C2597 * C121 - C2591 * C128 +
                 C2598 * C122 - C2592 * C129 + C2599 * C123 - C32242 * C130) *
                    C118 +
                (C2596 * C132 - C2590 * C141 + C2597 * C133 - C2591 * C142 +
                 C2598 * C134 - C2592 * C143 + C2599 * C135 - C32242 * C144) *
                    C31966) *
                   C32207 +
               ((C2596 * C214 - C2590 * C224 + C2597 * C215 - C2591 * C225 +
                 C2598 * C216 - C2592 * C226 + C2599 * C217 - C32242 * C227) *
                    C118 +
                (C2596 * C229 - C2590 * C244 + C2597 * C230 - C2591 * C245 +
                 C2598 * C231 - C2592 * C246 + C2599 * C232 - C32242 * C247) *
                    C31966) *
                   C32013) *
                  C31925 * C31911 * C111 +
              (((C2590 * C128 - C2596 * C121 + C2591 * C129 - C2597 * C122 +
                 C2592 * C130 - C2598 * C123 + C32242 * C136 - C2599 * C124) *
                    C118 +
                (C2590 * C142 - C2596 * C133 + C2591 * C143 - C2597 * C134 +
                 C2592 * C144 - C2598 * C135 + C32242 * C145 - C2599 * C137) *
                    C31966) *
                   C32207 +
               ((C2590 * C225 - C2596 * C215 + C2591 * C226 - C2597 * C216 +
                 C2592 * C227 - C2598 * C217 + C32242 * C445 - C2599 * C444) *
                    C118 +
                (C2590 * C245 - C2596 * C230 + C2591 * C246 - C2597 * C231 +
                 C2592 * C247 - C2598 * C232 + C32242 * C447 - C2599 * C446) *
                    C31966) *
                   C32013) *
                  C31925 * C31911 * C112) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C2590 * C126 - C2596 * C119 + C2591 * C127 - C2597 * C120 +
                 C2592 * C128 - C2598 * C121 + C32242 * C129 - C2599 * C122) *
                    C118 +
                (C2590 * C140 - C2596 * C131 + C2591 * C141 - C2597 * C132 +
                 C2592 * C142 - C2598 * C133 + C32242 * C143 - C2599 * C134) *
                    C31966) *
                   C32207 +
               ((C2699 - C2700 + C2701 - C2702 + C2703 - C2704 + C2705 -
                 C2706) *
                    C118 +
                (C2707 - C2708 + C2709 - C2710 + C2711 - C2712 + C2713 -
                 C2714) *
                    C31966) *
                   C32013) *
                  C31925 * C209 +
              (((C2700 - C2699 + C2702 - C2701 + C2704 - C2703 + C2706 -
                 C2705) *
                    C118 +
                (C2708 - C2707 + C2710 - C2709 + C2712 - C2711 + C2714 -
                 C2713) *
                    C31966) *
                   C32207 +
               ((C2715 - C2716 + C2717 - C2718 + C2719 - C2720 + C2721 -
                 C2722) *
                    C118 +
                (C2723 - C2724 + C2725 - C2726 + C2727 - C2728 + C2729 -
                 C2730) *
                    C31966) *
                   C32013) *
                  C31925 * C210 +
              (((C2716 - C2715 + C2718 - C2717 + C2720 - C2719 + C2722 -
                 C2721) *
                    C118 +
                (C2724 - C2723 + C2726 - C2725 + C2728 - C2727 + C2730 -
                 C2729) *
                    C31966) *
                   C32207 +
               ((C2590 * C873 - C2596 * C867 + C2591 * C874 - C2597 * C868 +
                 C2592 * C875 - C2598 * C869 + C32242 * C1233 - C2599 * C1232) *
                    C118 +
                (C2590 * C885 - C2596 * C876 + C2591 * C886 - C2597 * C877 +
                 C2592 * C887 - C2598 * C878 + C32242 * C1235 - C2599 * C1234) *
                    C31966) *
                   C32013) *
                  C31925 * C211) *
             C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2590 * C126 - C2596 * C119 + C2591 * C127 - C2597 * C120 +
             C2592 * C128 - C2598 * C121 + C32242 * C129 - C2599 * C122) *
                C118 +
            (C2590 * C140 - C2596 * C131 + C2591 * C141 - C2597 * C132 +
             C2592 * C142 - C2598 * C133 + C32242 * C143 - C2599 * C134) *
                C31966) *
               C32207 +
           ((C2699 - C2700 + C2701 - C2702 + C2703 - C2704 + C2705 - C2706) *
                C118 +
            (C2707 - C2708 + C2709 - C2710 + C2711 - C2712 + C2713 - C2714) *
                C31966) *
               C32013) *
              C315 +
          (((C2596 * C318 - C2590 * C328 + C2597 * C319 - C2591 * C329 +
             C2598 * C320 - C2592 * C330 + C2599 * C321 - C32242 * C331) *
                C118 +
            (C2596 * C333 - C2590 * C348 + C2597 * C334 - C2591 * C349 +
             C2598 * C335 - C2592 * C350 + C2599 * C336 - C32242 * C351) *
                C31966) *
               C32207 +
           ((C2596 * C618 - C2590 * C623 + C2597 * C619 - C2591 * C624 +
             C2598 * C620 - C2592 * C625 + C2599 * C621 - C32242 * C626) *
                C118 +
            (C2596 * C628 - C2590 * C633 + C2597 * C629 - C2591 * C634 +
             C2598 * C630 - C2592 * C635 + C2599 * C631 - C32242 * C636) *
                C31966) *
               C32013) *
              C316 +
          (((C2590 * C338 - C2596 * C323 + C2591 * C339 - C2597 * C324 +
             C2592 * C340 - C2598 * C325 + C32242 * C341 - C2599 * C326) *
                C118 +
            (C2590 * C353 - C2596 * C343 + C2591 * C354 - C2597 * C344 +
             C2592 * C355 - C2598 * C345 + C32242 * C356 - C2599 * C346) *
                C31966) *
               C32207 +
           ((C2590 * C1065 - C2596 * C1053 + C2591 * C1066 - C2597 * C1054 +
             C2592 * C1067 - C2598 * C1055 + C32242 * C2145 - C2599 * C2144) *
                C118 +
            (C2590 * C1080 - C2596 * C1068 + C2591 * C1081 - C2597 * C1069 +
             C2592 * C1082 - C2598 * C1070 + C32242 * C2147 - C2599 * C2146) *
                C31966) *
               C32013) *
              C317) *
         C31911 * C31899) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C32188 * C126 - C30873 * C119 + C31872 * C127 - C30854 * C120) *
                C118 +
            (C32188 * C140 - C30873 * C131 + C31872 * C141 - C30854 * C132) *
                C31966) *
               C7427 +
           ((C32188 * C223 - C30873 * C213 + C31872 * C224 - C30854 * C214) *
                C118 +
            (C32188 * C243 - C30873 * C228 + C31872 * C244 - C30854 * C229) *
                C31966) *
               C7428 +
           ((C32188 * C233 - C30873 * C218 + C31872 * C234 - C30854 * C219) *
                C118 +
            (C32188 * C248 - C30873 * C238 + C31872 * C249 - C30854 * C239) *
                C31966) *
               C7429 +
           ((C32188 * C873 - C30873 * C867 + C31872 * C874 - C30854 * C868) *
                C118 +
            (C32188 * C885 - C30873 * C876 + C31872 * C886 - C30854 * C877) *
                C31966) *
               C32248) *
              C31925 * C31911 * C110 +
          (((C30873 * C120 - C32188 * C127 + C30854 * C121 - C31872 * C128) *
                C118 +
            (C30873 * C132 - C32188 * C141 + C30854 * C133 - C31872 * C142) *
                C31966) *
               C7427 +
           ((C30873 * C214 - C32188 * C224 + C30854 * C215 - C31872 * C225) *
                C118 +
            (C30873 * C229 - C32188 * C244 + C30854 * C230 - C31872 * C245) *
                C31966) *
               C7428 +
           ((C30873 * C219 - C32188 * C234 + C30854 * C220 - C31872 * C235) *
                C118 +
            (C30873 * C239 - C32188 * C249 + C30854 * C240 - C31872 * C250) *
                C31966) *
               C7429 +
           ((C30873 * C868 - C32188 * C874 + C30854 * C869 - C31872 * C875) *
                C118 +
            (C30873 * C877 - C32188 * C886 + C30854 * C878 - C31872 * C887) *
                C31966) *
               C32248) *
              C31925 * C31911 * C111 +
          (((C32188 * C128 - C30873 * C121 + C31872 * C129 - C30854 * C122) *
                C118 +
            (C32188 * C142 - C30873 * C133 + C31872 * C143 - C30854 * C134) *
                C31966) *
               C7427 +
           ((C32188 * C225 - C30873 * C215 + C31872 * C226 - C30854 * C216) *
                C118 +
            (C32188 * C245 - C30873 * C230 + C31872 * C246 - C30854 * C231) *
                C31966) *
               C7428 +
           ((C32188 * C235 - C30873 * C220 + C31872 * C236 - C30854 * C221) *
                C118 +
            (C32188 * C250 - C30873 * C240 + C31872 * C251 - C30854 * C241) *
                C31966) *
               C7429 +
           ((C32188 * C875 - C30873 * C869 + C31872 * C1233 - C30854 * C1232) *
                C118 +
            (C32188 * C887 - C30873 * C878 + C31872 * C1235 - C30854 * C1234) *
                C31966) *
               C32248) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C32188 * C126 - C30873 * C119 + C31872 * C127 - C30854 * C120) *
                C118 +
            (C32188 * C140 - C30873 * C131 + C31872 * C141 - C30854 * C132) *
                C31966) *
               C7427 +
           ((C7532 - C7533 + C7534 - C7535) * C118 +
            (C7536 - C7537 + C7538 - C7539) * C31966) *
               C7428 +
           C7580 * C7429 + C7581 * C32248) *
              C31925 * C209 +
          (((C7533 - C7532 + C7535 - C7534) * C118 +
            (C7537 - C7536 + C7539 - C7538) * C31966) *
               C7427 +
           ((C7541 - C7540 + C7543 - C7542) * C118 +
            (C7545 - C7544 + C7547 - C7546) * C31966) *
               C7428 +
           ((C7549 - C7548 + C7551 - C7550) * C118 +
            (C7553 - C7552 + C7555 - C7554) * C31966) *
               C7429 +
           ((C7556 - C7557 + C7558 - C7559) * C118 +
            (C7560 - C7561 + C7562 - C7563) * C31966) *
               C32248) *
              C31925 * C210 +
          (C7580 * C7427 + C7581 * C7428 +
           ((C7557 - C7556 + C7559 - C7558) * C118 +
            (C7561 - C7560 + C7563 - C7562) * C31966) *
               C7429 +
           ((C32188 * C6045 - C30873 * C6043 + C31872 * C6243 -
             C30854 * C6242) *
                C118 +
            (C32188 * C6049 - C30873 * C6046 + C31872 * C6245 -
             C30854 * C6244) *
                C31966) *
               C32248) *
              C31925 * C211) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C32188 * C126 - C30873 * C119 + C31872 * C127 - C30854 * C120) *
                C118 +
            (C32188 * C140 - C30873 * C131 + C31872 * C141 - C30854 * C132) *
                C31966) *
               C7427 +
           ((C7532 - C7533 + C7534 - C7535) * C118 +
            (C7536 - C7537 + C7538 - C7539) * C31966) *
               C7428 +
           C7580 * C7429 + C7581 * C32248) *
              C315 +
          (((C30873 * C318 - C32188 * C328 + C30854 * C319 - C31872 * C329) *
                C118 +
            (C30873 * C333 - C32188 * C348 + C30854 * C334 - C31872 * C349) *
                C31966) *
               C7427 +
           ((C30873 * C618 - C32188 * C623 + C30854 * C619 - C31872 * C624) *
                C118 +
            (C30873 * C628 - C32188 * C633 + C30854 * C629 - C31872 * C634) *
                C31966) *
               C7428 +
           ((C30873 * C1050 - C32188 * C1059 + C30854 * C1051 -
             C31872 * C1060) *
                C118 +
            (C30873 * C1062 - C32188 * C1077 + C30854 * C1063 -
             C31872 * C1078) *
                C31966) *
               C7429 +
           ((C30873 * C1556 - C32188 * C1559 + C30854 * C1557 -
             C31872 * C1560) *
                C118 +
            (C30873 * C1562 - C32188 * C1565 + C30854 * C1563 -
             C31872 * C1566) *
                C31966) *
               C32248) *
              C316 +
          (((C32188 * C338 - C30873 * C323 + C31872 * C339 - C30854 * C324) *
                C118 +
            (C32188 * C353 - C30873 * C343 + C31872 * C354 - C30854 * C344) *
                C31966) *
               C7427 +
           ((C32188 * C1065 - C30873 * C1053 + C31872 * C1066 -
             C30854 * C1054) *
                C118 +
            (C32188 * C1080 - C30873 * C1068 + C31872 * C1081 -
             C30854 * C1069) *
                C31966) *
               C7428 +
           ((C32188 * C1071 - C30873 * C1056 + C31872 * C1072 -
             C30854 * C1057) *
                C118 +
            (C32188 * C1083 - C30873 * C1074 + C31872 * C1084 -
             C30854 * C1075) *
                C31966) *
               C7429 +
           ((C32188 * C6153 - C30873 * C6149 + C31872 * C6990 -
             C30854 * C6989) *
                C118 +
            (C32188 * C6158 - C30873 * C6154 + C31872 * C6992 -
             C30854 * C6991) *
                C31966) *
               C32248) *
              C317) *
         C31911 * C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C32188 * C126 - C30873 * C119 + C31872 * C127 - C30854 * C120) *
                C10043 +
            (C32188 * C140 - C30873 * C131 + C31872 * C141 - C30854 * C132) *
                C10040 +
            (C8569 - C8570 + C8571 - C8572) * C10044 +
            (C8573 - C8574 + C8575 - C8576) * C10041 +
            (C8578 - C8577 + C8580 - C8579) * C10045 +
            (C8582 - C8581 + C8584 - C8583) * C32241) *
               C32207 +
           ((C7532 - C7533 + C7534 - C7535) * C10043 +
            (C7536 - C7537 + C7538 - C7539) * C10040 + C9219 * C10044 +
            C9220 * C10041 + (C8586 - C8585 + C8588 - C8587) * C10045 +
            (C8590 - C8589 + C8592 - C8591) * C32241) *
               C32013) *
              C31925 * C31911 * C110 +
          (((C30873 * C120 - C32188 * C127 + C30854 * C121 - C31872 * C128) *
                C10043 +
            (C30873 * C132 - C32188 * C141 + C30854 * C133 - C31872 * C142) *
                C10040 +
            (C9005 - C9006 + C9007 - C9008) * C10044 +
            (C9009 - C9010 + C9011 - C9012) * C10041 +
            (C30873 * C324 - C32188 * C339 + C30854 * C325 - C31872 * C340) *
                C10045 +
            (C30873 * C344 - C32188 * C354 + C30854 * C345 - C31872 * C355) *
                C32241) *
               C32207 +
           ((C7810 - C7811 + C7812 - C7813) * C10043 +
            (C7814 - C7815 + C7816 - C7817) * C10040 +
            (C8795 - C8796 + C8797 - C8798) * C10044 +
            (C8799 - C8800 + C8801 - C8802) * C10041 +
            (C30873 * C1054 - C32188 * C1066 + C30854 * C1055 -
             C31872 * C1067) *
                C10045 +
            (C30873 * C1069 - C32188 * C1081 + C30854 * C1070 -
             C31872 * C1082) *
                C32241) *
               C32013) *
              C31925 * C31911 * C111 +
          (((C32188 * C128 - C30873 * C121 + C31872 * C129 - C30854 * C122) *
                C10043 +
            (C32188 * C142 - C30873 * C133 + C31872 * C143 - C30854 * C134) *
                C10040 +
            (C32188 * C330 - C30873 * C320 + C31872 * C331 - C30854 * C321) *
                C10044 +
            (C32188 * C350 - C30873 * C335 + C31872 * C351 - C30854 * C336) *
                C10041 +
            (C32188 * C340 - C30873 * C325 + C31872 * C341 - C30854 * C326) *
                C10045 +
            (C32188 * C355 - C30873 * C345 + C31872 * C356 - C30854 * C346) *
                C32241) *
               C32207 +
           ((C32188 * C225 - C30873 * C215 + C31872 * C226 - C30854 * C216) *
                C10043 +
            (C32188 * C245 - C30873 * C230 + C31872 * C246 - C30854 * C231) *
                C10040 +
            (C32188 * C625 - C30873 * C620 + C31872 * C626 - C30854 * C621) *
                C10044 +
            (C32188 * C635 - C30873 * C630 + C31872 * C636 - C30854 * C631) *
                C10041 +
            (C32188 * C1067 - C30873 * C1055 + C31872 * C2145 -
             C30854 * C2144) *
                C10045 +
            (C32188 * C1082 - C30873 * C1070 + C31872 * C2147 -
             C30854 * C2146) *
                C32241) *
               C32013) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C32188 * C126 - C30873 * C119 + C31872 * C127 - C30854 * C120) *
                C10043 +
            (C32188 * C140 - C30873 * C131 + C31872 * C141 - C30854 * C132) *
                C10040 +
            (C8569 - C8570 + C8571 - C8572) * C10044 +
            (C8573 - C8574 + C8575 - C8576) * C10041 +
            (C8578 - C8577 + C8580 - C8579) * C10045 +
            (C8582 - C8581 + C8584 - C8583) * C32241) *
               C32207 +
           ((C7532 - C7533 + C7534 - C7535) * C10043 +
            (C7536 - C7537 + C7538 - C7539) * C10040 + C9219 * C10044 +
            C9220 * C10041 + (C8586 - C8585 + C8588 - C8587) * C10045 +
            (C8590 - C8589 + C8592 - C8591) * C32241) *
               C32013) *
              C31925 * C209 +
          (((C7533 - C7532 + C7535 - C7534) * C10043 +
            (C7537 - C7536 + C7539 - C7538) * C10040 + C9221 * C10044 +
            C9222 * C10041 + (C8585 - C8586 + C8587 - C8588) * C10045 +
            (C8589 - C8590 + C8591 - C8592) * C32241) *
               C32207 +
           ((C7541 - C7540 + C7543 - C7542) * C10043 +
            (C7545 - C7544 + C7547 - C7546) * C10040 + C9223 * C10044 +
            C9224 * C10041 + (C8593 - C8594 + C8595 - C8596) * C10045 +
            (C8597 - C8598 + C8599 - C8600) * C32241) *
               C32013) *
              C31925 * C210 +
          ((C7572 * C10043 + C7573 * C10040 + C8417 * C10044 + C8418 * C10041 +
            (C8594 - C8593 + C8596 - C8595) * C10045 +
            (C8598 - C8597 + C8600 - C8599) * C32241) *
               C32207 +
           (C7574 * C10043 + C7575 * C10040 +
            (C8111 - C8110 + C8113 - C8112) * C10044 +
            (C8115 - C8114 + C8117 - C8116) * C10041 +
            (C32188 * C6153 - C30873 * C6149 + C31872 * C6990 -
             C30854 * C6989) *
                C10045 +
            (C32188 * C6158 - C30873 * C6154 + C31872 * C6992 -
             C30854 * C6991) *
                C32241) *
               C32013) *
              C31925 * C211) *
         C31899) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C32188 * C126 - C30873 * C119 + C31872 * C127 - C30854 * C120) *
                C10043 +
            (C32188 * C140 - C30873 * C131 + C31872 * C141 - C30854 * C132) *
                C10040 +
            (C8569 - C8570 + C8571 - C8572) * C10044 +
            (C8573 - C8574 + C8575 - C8576) * C10041 + C12514 * C10045 +
            C12515 * C32241) *
               C32207 +
           ((C7532 - C7533 + C7534 - C7535) * C10043 +
            (C7536 - C7537 + C7538 - C7539) * C10040 + C9219 * C10044 +
            C9220 * C10041 + C12516 * C10045 + C12517 * C32241) *
               C32013) *
              C315 +
          (((C8570 - C8569 + C8572 - C8571) * C10043 +
            (C8574 - C8573 + C8576 - C8575) * C10040 +
            (C8577 - C8578 + C8579 - C8580) * C10044 +
            (C8581 - C8582 + C8583 - C8584) * C10041 +
            (C12498 - C12499 + C12500 - C12501) * C10045 +
            (C12502 - C12503 + C12504 - C12505) * C32241) *
               C32207 +
           (C9221 * C10043 + C9222 * C10040 +
            (C8585 - C8586 + C8587 - C8588) * C10044 +
            (C8589 - C8590 + C8591 - C8592) * C10041 +
            (C12506 - C12507 + C12508 - C12509) * C10045 +
            (C12510 - C12511 + C12512 - C12513) * C32241) *
               C32013) *
              C316 +
          ((C12514 * C10043 + C12515 * C10040 +
            (C12499 - C12498 + C12501 - C12500) * C10044 +
            (C12503 - C12502 + C12505 - C12504) * C10041 +
            (C32188 * C1940 - C30873 * C1931 + C31872 * C1941 -
             C30854 * C1932) *
                C10045 +
            (C32188 * C1949 - C30873 * C1943 + C31872 * C1950 -
             C30854 * C1944) *
                C32241) *
               C32207 +
           (C12516 * C10043 + C12517 * C10040 +
            (C12507 - C12506 + C12509 - C12508) * C10044 +
            (C12511 - C12510 + C12513 - C12512) * C10041 +
            (C32188 * C6812 - C30873 * C6808 + C31872 * C11864 -
             C30854 * C11863) *
                C10045 +
            (C32188 * C6817 - C30873 * C6813 + C31872 * C11866 -
             C30854 * C11865) *
                C32241) *
               C32013) *
              C317) *
         C31911 * C31899) /
            (p * q * std::sqrt(p + q));
    d2ee[53] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C32188 * C126 - C30873 * C119 + C31872 * C127 - C30854 * C120) *
                 C118 +
             (C32188 * C140 - C30873 * C131 + C31872 * C141 - C30854 * C132) *
                 C31966) *
                C7427 +
            ((C7532 - C7533 + C7534 - C7535) * C118 +
             (C7536 - C7537 + C7538 - C7539) * C31966) *
                C7428 +
            C7580 * C7429 + C7581 * C32248) *
               C530 +
           (((C30873 * C318 - C32188 * C328 + C30854 * C319 - C31872 * C329) *
                 C118 +
             (C30873 * C333 - C32188 * C348 + C30854 * C334 - C31872 * C349) *
                 C31966) *
                C7427 +
            ((C30873 * C618 - C32188 * C623 + C30854 * C619 - C31872 * C624) *
                 C118 +
             (C30873 * C628 - C32188 * C633 + C30854 * C629 - C31872 * C634) *
                 C31966) *
                C7428 +
            ((C30873 * C1050 - C32188 * C1059 + C30854 * C1051 -
              C31872 * C1060) *
                 C118 +
             (C30873 * C1062 - C32188 * C1077 + C30854 * C1063 -
              C31872 * C1078) *
                 C31966) *
                C7429 +
            ((C30873 * C1556 - C32188 * C1559 + C30854 * C1557 -
              C31872 * C1560) *
                 C118 +
             (C30873 * C1562 - C32188 * C1565 + C30854 * C1563 -
              C31872 * C1566) *
                 C31966) *
                C32248) *
               C531) *
              C31911 * C442 +
          ((((C30873 * C120 - C32188 * C127 + C30854 * C121 - C31872 * C128) *
                 C118 +
             (C30873 * C132 - C32188 * C141 + C30854 * C133 - C31872 * C142) *
                 C31966) *
                C7427 +
            ((C7810 - C7811 + C7812 - C7813) * C118 +
             (C7814 - C7815 + C7816 - C7817) * C31966) *
                C7428 +
            ((C7818 - C7819 + C7820 - C7821) * C118 +
             (C7822 - C7823 + C7824 - C7825) * C31966) *
                C7429 +
            ((C7826 - C7827 + C7828 - C7829) * C118 +
             (C7830 - C7831 + C7832 - C7833) * C31966) *
                C32248) *
               C530 +
           (((C32188 * C329 - C30873 * C319 + C31872 * C330 - C30854 * C320) *
                 C118 +
             (C32188 * C349 - C30873 * C334 + C31872 * C350 - C30854 * C335) *
                 C31966) *
                C7427 +
            ((C32188 * C624 - C30873 * C619 + C31872 * C625 - C30854 * C620) *
                 C118 +
             (C32188 * C634 - C30873 * C629 + C31872 * C635 - C30854 * C630) *
                 C31966) *
                C7428 +
            ((C32188 * C1060 - C30873 * C1051 + C31872 * C1061 -
              C30854 * C1052) *
                 C118 +
             (C32188 * C1078 - C30873 * C1063 + C31872 * C1079 -
              C30854 * C1064) *
                 C31966) *
                C7429 +
            ((C32188 * C1560 - C30873 * C1557 + C31872 * C1561 -
              C30854 * C1558) *
                 C118 +
             (C32188 * C1566 - C30873 * C1563 + C31872 * C1567 -
              C30854 * C1564) *
                 C31966) *
                C32248) *
               C531) *
              C31911 * C443)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C2590 * C126 - C2596 * C119 + C2591 * C127 - C2597 * C120 +
              C2592 * C128 - C2598 * C121 + C32242 * C129 - C2599 * C122) *
                 C118 +
             (C2590 * C140 - C2596 * C131 + C2591 * C141 - C2597 * C132 +
              C2592 * C142 - C2598 * C133 + C32242 * C143 - C2599 * C134) *
                 C31966) *
                C32207 +
            ((C2699 - C2700 + C2701 - C2702 + C2703 - C2704 + C2705 - C2706) *
                 C118 +
             (C2707 - C2708 + C2709 - C2710 + C2711 - C2712 + C2713 - C2714) *
                 C31966) *
                C32013) *
               C530 +
           (((C2596 * C318 - C2590 * C328 + C2597 * C319 - C2591 * C329 +
              C2598 * C320 - C2592 * C330 + C2599 * C321 - C32242 * C331) *
                 C118 +
             (C2596 * C333 - C2590 * C348 + C2597 * C334 - C2591 * C349 +
              C2598 * C335 - C2592 * C350 + C2599 * C336 - C32242 * C351) *
                 C31966) *
                C32207 +
            ((C2596 * C618 - C2590 * C623 + C2597 * C619 - C2591 * C624 +
              C2598 * C620 - C2592 * C625 + C2599 * C621 - C32242 * C626) *
                 C118 +
             (C2596 * C628 - C2590 * C633 + C2597 * C629 - C2591 * C634 +
              C2598 * C630 - C2592 * C635 + C2599 * C631 - C32242 * C636) *
                 C31966) *
                C32013) *
               C531) *
              C31911 * C442 +
          ((((C2596 * C120 - C2590 * C127 + C2597 * C121 - C2591 * C128 +
              C2598 * C122 - C2592 * C129 + C2599 * C123 - C32242 * C130) *
                 C118 +
             (C2596 * C132 - C2590 * C141 + C2597 * C133 - C2591 * C142 +
              C2598 * C134 - C2592 * C143 + C2599 * C135 - C32242 * C144) *
                 C31966) *
                C32207 +
            ((C2959 - C2960 + C2961 - C2962 + C2963 - C2964 + C2965 - C2966) *
                 C118 +
             (C2967 - C2968 + C2969 - C2970 + C2971 - C2972 + C2973 - C2974) *
                 C31966) *
                C32013) *
               C530 +
           (((C2590 * C329 - C2596 * C319 + C2591 * C330 - C2597 * C320 +
              C2592 * C331 - C2598 * C321 + C32242 * C332 - C2599 * C322) *
                 C118 +
             (C2590 * C349 - C2596 * C334 + C2591 * C350 - C2597 * C335 +
              C2592 * C351 - C2598 * C336 + C32242 * C352 - C2599 * C337) *
                 C31966) *
                C32207 +
            ((C2590 * C624 - C2596 * C619 + C2591 * C625 - C2597 * C620 +
              C2592 * C626 - C2598 * C621 + C32242 * C627 - C2599 * C622) *
                 C118 +
             (C2590 * C634 - C2596 * C629 + C2591 * C635 - C2597 * C630 +
              C2592 * C636 - C2598 * C631 + C32242 * C637 - C2599 * C632) *
                 C31966) *
                C32013) *
               C531) *
              C31911 * C443)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C32188 * C126 - C30873 * C119 + C31872 * C127 - C30854 * C120) *
                 C10043 +
             (C32188 * C140 - C30873 * C131 + C31872 * C141 - C30854 * C132) *
                 C10040 +
             (C8569 - C8570 + C8571 - C8572) * C10044 +
             (C8573 - C8574 + C8575 - C8576) * C10041 + C12514 * C10045 +
             C12515 * C32241) *
                C32207 +
            ((C7532 - C7533 + C7534 - C7535) * C10043 +
             (C7536 - C7537 + C7538 - C7539) * C10040 + C9219 * C10044 +
             C9220 * C10041 + C12516 * C10045 + C12517 * C32241) *
                C32013) *
               C530 +
           (((C8570 - C8569 + C8572 - C8571) * C10043 +
             (C8574 - C8573 + C8576 - C8575) * C10040 +
             (C8577 - C8578 + C8579 - C8580) * C10044 +
             (C8581 - C8582 + C8583 - C8584) * C10041 +
             (C12498 - C12499 + C12500 - C12501) * C10045 +
             (C12502 - C12503 + C12504 - C12505) * C32241) *
                C32207 +
            (C9221 * C10043 + C9222 * C10040 +
             (C8585 - C8586 + C8587 - C8588) * C10044 +
             (C8589 - C8590 + C8591 - C8592) * C10041 +
             (C12506 - C12507 + C12508 - C12509) * C10045 +
             (C12510 - C12511 + C12512 - C12513) * C32241) *
                C32013) *
               C531) *
              C31911 * C442 +
          ((((C30873 * C120 - C32188 * C127 + C30854 * C121 - C31872 * C128) *
                 C10043 +
             (C30873 * C132 - C32188 * C141 + C30854 * C133 - C31872 * C142) *
                 C10040 +
             (C9005 - C9006 + C9007 - C9008) * C10044 +
             (C9009 - C9010 + C9011 - C9012) * C10041 +
             (C12914 - C12915 + C12916 - C12917) * C10045 +
             (C12918 - C12919 + C12920 - C12921) * C32241) *
                C32207 +
            ((C7810 - C7811 + C7812 - C7813) * C10043 +
             (C7814 - C7815 + C7816 - C7817) * C10040 +
             (C8795 - C8796 + C8797 - C8798) * C10044 +
             (C8799 - C8800 + C8801 - C8802) * C10041 +
             (C12712 - C12713 + C12714 - C12715) * C10045 +
             (C12716 - C12717 + C12718 - C12719) * C32241) *
                C32013) *
               C530 +
           (((C9006 - C9005 + C9008 - C9007) * C10043 +
             (C9010 - C9009 + C9012 - C9011) * C10040 +
             (C12915 - C12914 + C12917 - C12916) * C10044 +
             (C12919 - C12918 + C12921 - C12920) * C10041 +
             (C32188 * C1935 - C30873 * C1929 + C31872 * C1936 -
              C30854 * C1930) *
                 C10045 +
             (C32188 * C1947 - C30873 * C1938 + C31872 * C1948 -
              C30854 * C1939) *
                 C32241) *
                C32207 +
            ((C8796 - C8795 + C8798 - C8797) * C10043 +
             (C8800 - C8799 + C8802 - C8801) * C10040 +
             (C12713 - C12712 + C12715 - C12714) * C10044 +
             (C12717 - C12716 + C12719 - C12718) * C10041 +
             (C32188 * C2472 - C30873 * C2469 + C31872 * C2473 -
              C30854 * C2470) *
                 C10045 +
             (C32188 * C2478 - C30873 * C2475 + C31872 * C2479 -
              C30854 * C2476) *
                 C32241) *
                C32013) *
               C531) *
              C31911 * C443)) /
            (p * q * std::sqrt(p + q));
    d2ee[54] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2590 * C126 - C2596 * C119 + C2591 * C127 - C2597 * C120 +
             C2592 * C128 - C2598 * C121 + C32242 * C129 - C2599 * C122) *
                C118 +
            (C2590 * C140 - C2596 * C131 + C2591 * C141 - C2597 * C132 +
             C2592 * C142 - C2598 * C133 + C32242 * C143 - C2599 * C134) *
                C31966) *
               C32207 +
           ((C2699 - C2700 + C2701 - C2702 + C2703 - C2704 + C2705 - C2706) *
                C118 +
            (C2707 - C2708 + C2709 - C2710 + C2711 - C2712 + C2713 - C2714) *
                C31966) *
               C32013) *
              C31925 * C209 +
          (((C2700 - C2699 + C2702 - C2701 + C2704 - C2703 + C2706 - C2705) *
                C118 +
            (C2708 - C2707 + C2710 - C2709 + C2712 - C2711 + C2714 - C2713) *
                C31966) *
               C32207 +
           ((C2715 - C2716 + C2717 - C2718 + C2719 - C2720 + C2721 - C2722) *
                C118 +
            (C2723 - C2724 + C2725 - C2726 + C2727 - C2728 + C2729 - C2730) *
                C31966) *
               C32013) *
              C31925 * C210 +
          (((C2716 - C2715 + C2718 - C2717 + C2720 - C2719 + C2722 - C2721) *
                C118 +
            (C2724 - C2723 + C2726 - C2725 + C2728 - C2727 + C2730 - C2729) *
                C31966) *
               C32207 +
           ((C2590 * C873 - C2596 * C867 + C2591 * C874 - C2597 * C868 +
             C2592 * C875 - C2598 * C869 + C32242 * C1233 - C2599 * C1232) *
                C118 +
            (C2590 * C885 - C2596 * C876 + C2591 * C886 - C2597 * C877 +
             C2592 * C887 - C2598 * C878 + C32242 * C1235 - C2599 * C1234) *
                C31966) *
               C32013) *
              C31925 * C211) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2590 * C126 - C2596 * C119 + C2591 * C127 - C2597 * C120 +
             C2592 * C128 - C2598 * C121 + C32242 * C129 - C2599 * C122) *
                C118 +
            (C2590 * C140 - C2596 * C131 + C2591 * C141 - C2597 * C132 +
             C2592 * C142 - C2598 * C133 + C32242 * C143 - C2599 * C134) *
                C31966) *
               C32207 +
           ((C2590 * C223 - C2596 * C213 + C2591 * C224 - C2597 * C214 +
             C2592 * C225 - C2598 * C215 + C32242 * C226 - C2599 * C216) *
                C118 +
            (C2590 * C243 - C2596 * C228 + C2591 * C244 - C2597 * C229 +
             C2592 * C245 - C2598 * C230 + C32242 * C246 - C2599 * C231) *
                C31966) *
               C32013) *
              C31925 * C31911 * C110 +
          (((C2596 * C120 - C2590 * C127 + C2597 * C121 - C2591 * C128 +
             C2598 * C122 - C2592 * C129 + C2599 * C123 - C32242 * C130) *
                C118 +
            (C2596 * C132 - C2590 * C141 + C2597 * C133 - C2591 * C142 +
             C2598 * C134 - C2592 * C143 + C2599 * C135 - C32242 * C144) *
                C31966) *
               C32207 +
           ((C2596 * C214 - C2590 * C224 + C2597 * C215 - C2591 * C225 +
             C2598 * C216 - C2592 * C226 + C2599 * C217 - C32242 * C227) *
                C118 +
            (C2596 * C229 - C2590 * C244 + C2597 * C230 - C2591 * C245 +
             C2598 * C231 - C2592 * C246 + C2599 * C232 - C32242 * C247) *
                C31966) *
               C32013) *
              C31925 * C31911 * C111 +
          (((C2590 * C128 - C2596 * C121 + C2591 * C129 - C2597 * C122 +
             C2592 * C130 - C2598 * C123 + C32242 * C136 - C2599 * C124) *
                C118 +
            (C2590 * C142 - C2596 * C133 + C2591 * C143 - C2597 * C134 +
             C2592 * C144 - C2598 * C135 + C32242 * C145 - C2599 * C137) *
                C31966) *
               C32207 +
           ((C2590 * C225 - C2596 * C215 + C2591 * C226 - C2597 * C216 +
             C2592 * C227 - C2598 * C217 + C32242 * C445 - C2599 * C444) *
                C118 +
            (C2590 * C245 - C2596 * C230 + C2591 * C246 - C2597 * C231 +
             C2592 * C247 - C2598 * C232 + C32242 * C447 - C2599 * C446) *
                C31966) *
               C32013) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C32188 * C126 - C30873 * C119 + C31872 * C127 - C30854 * C120) *
                C118 +
            (C32188 * C140 - C30873 * C131 + C31872 * C141 - C30854 * C132) *
                C31966) *
               C7427 +
           ((C32188 * C223 - C30873 * C213 + C31872 * C224 - C30854 * C214) *
                C118 +
            (C32188 * C243 - C30873 * C228 + C31872 * C244 - C30854 * C229) *
                C31966) *
               C7428 +
           ((C32188 * C233 - C30873 * C218 + C31872 * C234 - C30854 * C219) *
                C118 +
            (C32188 * C248 - C30873 * C238 + C31872 * C249 - C30854 * C239) *
                C31966) *
               C7429 +
           ((C32188 * C873 - C30873 * C867 + C31872 * C874 - C30854 * C868) *
                C118 +
            (C32188 * C885 - C30873 * C876 + C31872 * C886 - C30854 * C877) *
                C31966) *
               C32248) *
              C31925 * C31911 * C110 +
          (((C30873 * C120 - C32188 * C127 + C30854 * C121 - C31872 * C128) *
                C118 +
            (C30873 * C132 - C32188 * C141 + C30854 * C133 - C31872 * C142) *
                C31966) *
               C7427 +
           ((C30873 * C214 - C32188 * C224 + C30854 * C215 - C31872 * C225) *
                C118 +
            (C30873 * C229 - C32188 * C244 + C30854 * C230 - C31872 * C245) *
                C31966) *
               C7428 +
           ((C30873 * C219 - C32188 * C234 + C30854 * C220 - C31872 * C235) *
                C118 +
            (C30873 * C239 - C32188 * C249 + C30854 * C240 - C31872 * C250) *
                C31966) *
               C7429 +
           ((C30873 * C868 - C32188 * C874 + C30854 * C869 - C31872 * C875) *
                C118 +
            (C30873 * C877 - C32188 * C886 + C30854 * C878 - C31872 * C887) *
                C31966) *
               C32248) *
              C31925 * C31911 * C111 +
          (((C32188 * C128 - C30873 * C121 + C31872 * C129 - C30854 * C122) *
                C118 +
            (C32188 * C142 - C30873 * C133 + C31872 * C143 - C30854 * C134) *
                C31966) *
               C7427 +
           ((C32188 * C225 - C30873 * C215 + C31872 * C226 - C30854 * C216) *
                C118 +
            (C32188 * C245 - C30873 * C230 + C31872 * C246 - C30854 * C231) *
                C31966) *
               C7428 +
           ((C32188 * C235 - C30873 * C220 + C31872 * C236 - C30854 * C221) *
                C118 +
            (C32188 * C250 - C30873 * C240 + C31872 * C251 - C30854 * C241) *
                C31966) *
               C7429 +
           ((C32188 * C875 - C30873 * C869 + C31872 * C1233 - C30854 * C1232) *
                C118 +
            (C32188 * C887 - C30873 * C878 + C31872 * C1235 - C30854 * C1234) *
                C31966) *
               C32248) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C32188 * C126 - C30873 * C119 + C31872 * C127 - C30854 * C120) *
                C118 +
            (C32188 * C140 - C30873 * C131 + C31872 * C141 - C30854 * C132) *
                C31966) *
               C7427 +
           ((C7532 - C7533 + C7534 - C7535) * C118 +
            (C7536 - C7537 + C7538 - C7539) * C31966) *
               C7428 +
           C7580 * C7429 + C7581 * C32248) *
              C31925 * C209 +
          (((C7533 - C7532 + C7535 - C7534) * C118 +
            (C7537 - C7536 + C7539 - C7538) * C31966) *
               C7427 +
           ((C7541 - C7540 + C7543 - C7542) * C118 +
            (C7545 - C7544 + C7547 - C7546) * C31966) *
               C7428 +
           ((C7549 - C7548 + C7551 - C7550) * C118 +
            (C7553 - C7552 + C7555 - C7554) * C31966) *
               C7429 +
           ((C7556 - C7557 + C7558 - C7559) * C118 +
            (C7560 - C7561 + C7562 - C7563) * C31966) *
               C32248) *
              C31925 * C210 +
          (C7580 * C7427 + C7581 * C7428 +
           ((C7557 - C7556 + C7559 - C7558) * C118 +
            (C7561 - C7560 + C7563 - C7562) * C31966) *
               C7429 +
           ((C32188 * C6045 - C30873 * C6043 + C31872 * C6243 -
             C30854 * C6242) *
                C118 +
            (C32188 * C6049 - C30873 * C6046 + C31872 * C6245 -
             C30854 * C6244) *
                C31966) *
               C32248) *
              C31925 * C211) *
         C31899) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C32188 * C126 - C30873 * C119 + C31872 * C127 - C30854 * C120) *
                C10043 +
            (C32188 * C140 - C30873 * C131 + C31872 * C141 - C30854 * C132) *
                C10040 +
            (C8569 - C8570 + C8571 - C8572) * C10044 +
            (C8573 - C8574 + C8575 - C8576) * C10041 +
            (C8578 - C8577 + C8580 - C8579) * C10045 +
            (C8582 - C8581 + C8584 - C8583) * C32241) *
               C32207 +
           ((C7532 - C7533 + C7534 - C7535) * C10043 +
            (C7536 - C7537 + C7538 - C7539) * C10040 + C9219 * C10044 +
            C9220 * C10041 + (C8586 - C8585 + C8588 - C8587) * C10045 +
            (C8590 - C8589 + C8592 - C8591) * C32241) *
               C32013) *
              C31925 * C31911 * C110 +
          (((C30873 * C120 - C32188 * C127 + C30854 * C121 - C31872 * C128) *
                C10043 +
            (C30873 * C132 - C32188 * C141 + C30854 * C133 - C31872 * C142) *
                C10040 +
            (C9005 - C9006 + C9007 - C9008) * C10044 +
            (C9009 - C9010 + C9011 - C9012) * C10041 +
            (C30873 * C324 - C32188 * C339 + C30854 * C325 - C31872 * C340) *
                C10045 +
            (C30873 * C344 - C32188 * C354 + C30854 * C345 - C31872 * C355) *
                C32241) *
               C32207 +
           ((C7810 - C7811 + C7812 - C7813) * C10043 +
            (C7814 - C7815 + C7816 - C7817) * C10040 +
            (C8795 - C8796 + C8797 - C8798) * C10044 +
            (C8799 - C8800 + C8801 - C8802) * C10041 +
            (C30873 * C1054 - C32188 * C1066 + C30854 * C1055 -
             C31872 * C1067) *
                C10045 +
            (C30873 * C1069 - C32188 * C1081 + C30854 * C1070 -
             C31872 * C1082) *
                C32241) *
               C32013) *
              C31925 * C31911 * C111 +
          (((C32188 * C128 - C30873 * C121 + C31872 * C129 - C30854 * C122) *
                C10043 +
            (C32188 * C142 - C30873 * C133 + C31872 * C143 - C30854 * C134) *
                C10040 +
            (C32188 * C330 - C30873 * C320 + C31872 * C331 - C30854 * C321) *
                C10044 +
            (C32188 * C350 - C30873 * C335 + C31872 * C351 - C30854 * C336) *
                C10041 +
            (C32188 * C340 - C30873 * C325 + C31872 * C341 - C30854 * C326) *
                C10045 +
            (C32188 * C355 - C30873 * C345 + C31872 * C356 - C30854 * C346) *
                C32241) *
               C32207 +
           ((C32188 * C225 - C30873 * C215 + C31872 * C226 - C30854 * C216) *
                C10043 +
            (C32188 * C245 - C30873 * C230 + C31872 * C246 - C30854 * C231) *
                C10040 +
            (C32188 * C625 - C30873 * C620 + C31872 * C626 - C30854 * C621) *
                C10044 +
            (C32188 * C635 - C30873 * C630 + C31872 * C636 - C30854 * C631) *
                C10041 +
            (C32188 * C1067 - C30873 * C1055 + C31872 * C2145 -
             C30854 * C2144) *
                C10045 +
            (C32188 * C1082 - C30873 * C1070 + C31872 * C2147 -
             C30854 * C2146) *
                C32241) *
               C32013) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C32188 * C126 - C30873 * C119 + C31872 * C127 - C30854 * C120) *
                C10043 +
            (C32188 * C140 - C30873 * C131 + C31872 * C141 - C30854 * C132) *
                C10040 +
            (C8569 - C8570 + C8571 - C8572) * C10044 +
            (C8573 - C8574 + C8575 - C8576) * C10041 +
            (C8578 - C8577 + C8580 - C8579) * C10045 +
            (C8582 - C8581 + C8584 - C8583) * C32241) *
               C32207 +
           ((C7532 - C7533 + C7534 - C7535) * C10043 +
            (C7536 - C7537 + C7538 - C7539) * C10040 + C9219 * C10044 +
            C9220 * C10041 + (C8586 - C8585 + C8588 - C8587) * C10045 +
            (C8590 - C8589 + C8592 - C8591) * C32241) *
               C32013) *
              C31925 * C209 +
          (((C7533 - C7532 + C7535 - C7534) * C10043 +
            (C7537 - C7536 + C7539 - C7538) * C10040 + C9221 * C10044 +
            C9222 * C10041 + (C8585 - C8586 + C8587 - C8588) * C10045 +
            (C8589 - C8590 + C8591 - C8592) * C32241) *
               C32207 +
           ((C7541 - C7540 + C7543 - C7542) * C10043 +
            (C7545 - C7544 + C7547 - C7546) * C10040 + C9223 * C10044 +
            C9224 * C10041 + (C8593 - C8594 + C8595 - C8596) * C10045 +
            (C8597 - C8598 + C8599 - C8600) * C32241) *
               C32013) *
              C31925 * C210 +
          ((C7572 * C10043 + C7573 * C10040 + C8417 * C10044 + C8418 * C10041 +
            (C8594 - C8593 + C8596 - C8595) * C10045 +
            (C8598 - C8597 + C8600 - C8599) * C32241) *
               C32207 +
           (C7574 * C10043 + C7575 * C10040 +
            (C8111 - C8110 + C8113 - C8112) * C10044 +
            (C8115 - C8114 + C8117 - C8116) * C10041 +
            (C32188 * C6153 - C30873 * C6149 + C31872 * C6990 -
             C30854 * C6989) *
                C10045 +
            (C32188 * C6158 - C30873 * C6154 + C31872 * C6992 -
             C30854 * C6991) *
                C32241) *
               C32013) *
              C31925 * C211) *
         C31899) /
            (p * q * std::sqrt(p + q));
    d2ee[55] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31862 * C126 - C5980 * C119) * C3350 +
             (C31862 * C140 - C5980 * C131) * C32208 + (C6820 - C6821) * C3351 +
             (C6822 - C6823) * C32053) *
                C7427 +
            ((C6052 - C6053) * C3350 + (C6054 - C6055) * C32208 +
             C7318 * C3351 + C7319 * C32053) *
                C7428 +
            C9435 * C7429 + C9436 * C32248) *
               C31925 * C440 +
           (((C6053 - C6052) * C3350 + (C6055 - C6054) * C32208 +
             C7320 * C3351 + C7321 * C32053) *
                C7427 +
            ((C6057 - C6056) * C3350 + (C6059 - C6058) * C32208 +
             C7324 * C3351 + C7325 * C32053) *
                C7428 +
            ((C6061 - C6060) * C3350 + (C6063 - C6062) * C32208 +
             (C6443 - C6444) * C3351 + (C6445 - C6446) * C32053) *
                C7429 +
            ((C6065 - C6064) * C3350 + (C6067 - C6066) * C32208 +
             (C6447 - C6448) * C3351 + (C6449 - C6450) * C32053) *
                C32248) *
               C31925 * C441) *
              C442 +
          ((((C5980 * C120 - C31862 * C127) * C3350 +
             (C5980 * C132 - C31862 * C141) * C32208 + (C7160 - C7161) * C3351 +
             (C7162 - C7163) * C32053) *
                C7427 +
            ((C6247 - C6248) * C3350 + (C6249 - C6250) * C32208 +
             (C6994 - C6995) * C3351 + (C6996 - C6997) * C32053) *
                C7428 +
            ((C6251 - C6252) * C3350 + (C6253 - C6254) * C32208 +
             (C7002 - C7003) * C3351 + (C7004 - C7005) * C32053) *
                C7429 +
            ((C6255 - C6256) * C3350 + (C6257 - C6258) * C32208 +
             (C9665 - C9666) * C3351 + (C9667 - C9668) * C32053) *
                C32248) *
               C31925 * C440 +
           (((C6248 - C6247) * C3350 + (C6250 - C6249) * C32208 +
             (C6995 - C6994) * C3351 + (C6997 - C6996) * C32053) *
                C7427 +
            ((C6252 - C6251) * C3350 + (C6254 - C6253) * C32208 +
             (C7003 - C7002) * C3351 + (C7005 - C7004) * C32053) *
                C7428 +
            ((C6256 - C6255) * C3350 + (C6258 - C6257) * C32208 +
             (C9666 - C9665) * C3351 + (C9668 - C9667) * C32053) *
                C7429 +
            ((C6260 - C6259) * C3350 + (C6262 - C6261) * C32208 +
             (C31862 * C6345 - C5980 * C6344) * C3351 +
             (C31862 * C6347 - C5980 * C6346) * C32053) *
                C32248) *
               C31925 * C441) *
              C443)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C748 * C126 - C754 * C119 + C749 * C127 - C755 * C120 +
              C32227 * C128 - C756 * C121) *
                 C3350 +
             (C748 * C140 - C754 * C131 + C749 * C141 - C755 * C132 +
              C32227 * C142 - C756 * C133) *
                 C32208 +
             (C1953 - C1954 + C1955 - C1956 + C1957 - C1958) * C3351 +
             (C1959 - C1960 + C1961 - C1962 + C1963 - C1964) * C32053) *
                C32207 +
            ((C892 - C893 + C894 - C895 + C896 - C897) * C3350 +
             (C898 - C899 + C900 - C901 + C902 - C903) * C32208 +
             (C1570 - C1569 + C1572 - C1571 + C1574 - C1573) * C3351 +
             (C1576 - C1575 + C1578 - C1577 + C1580 - C1579) * C32053) *
                C32013) *
               C31925 * C440 +
           (((C893 - C892 + C895 - C894 + C897 - C896) * C3350 +
             (C899 - C898 + C901 - C900 + C903 - C902) * C32208 +
             (C1569 - C1570 + C1571 - C1572 + C1573 - C1574) * C3351 +
             (C1575 - C1576 + C1577 - C1578 + C1579 - C1580) * C32053) *
                C32207 +
            ((C905 - C904 + C907 - C906 + C909 - C908) * C3350 +
             (C911 - C910 + C913 - C912 + C915 - C914) * C32208 +
             (C1581 - C1582 + C1583 - C1584 + C1585 - C1586) * C3351 +
             (C1587 - C1588 + C1589 - C1590 + C1591 - C1592) * C32053) *
                C32013) *
               C31925 * C441) *
              C442 +
          ((((C754 * C120 - C748 * C127 + C755 * C121 - C749 * C128 +
              C756 * C122 - C32227 * C129) *
                 C3350 +
             (C754 * C132 - C748 * C141 + C755 * C133 - C749 * C142 +
              C756 * C134 - C32227 * C143) *
                 C32208 +
             (C2299 - C2300 + C2301 - C2302 + C2303 - C2304) * C3351 +
             (C2305 - C2306 + C2307 - C2308 + C2309 - C2310) * C32053) *
                C32207 +
            ((C1237 - C1238 + C1239 - C1240 + C1241 - C1242) * C3350 +
             (C1243 - C1244 + C1245 - C1246 + C1247 - C1248) * C32208 +
             (C4619 - C4620 + C4621 - C4622 + C4623 - C4624) * C3351 +
             (C4625 - C4626 + C4627 - C4628 + C4629 - C4630) * C32053) *
                C32013) *
               C31925 * C440 +
           (((C1238 - C1237 + C1240 - C1239 + C1242 - C1241) * C3350 +
             (C1244 - C1243 + C1246 - C1245 + C1248 - C1247) * C32208 +
             (C4620 - C4619 + C4622 - C4621 + C4624 - C4623) * C3351 +
             (C4626 - C4625 + C4628 - C4627 + C4630 - C4629) * C32053) *
                C32207 +
            ((C1250 - C1249 + C1252 - C1251 + C1254 - C1253) * C3350 +
             (C1256 - C1255 + C1258 - C1257 + C1260 - C1259) * C32208 +
             (C748 * C1060 - C754 * C1051 + C749 * C1061 - C755 * C1052 +
              C32227 * C1407 - C756 * C1406) *
                 C3351 +
             (C748 * C1078 - C754 * C1063 + C749 * C1079 - C755 * C1064 +
              C32227 * C1409 - C756 * C1408) *
                 C32053) *
                C32013) *
               C31925 * C441) *
              C443)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31862 * C126 - C5980 * C119) * C13223 +
             (C31862 * C140 - C5980 * C131) * C13219 +
             (C6820 - C6821) * C13224 + (C6822 - C6823) * C13220 +
             C6842 * C13225 + C6843 * C13221 + C11770 * C13226 +
             C11771 * C32254) *
                C32207 +
            ((C6052 - C6053) * C13223 + (C6054 - C6055) * C13219 +
             C7318 * C13224 + C7319 * C13220 + C6828 * C13225 + C6829 * C13221 +
             C14130 * C13226 + C14131 * C32254) *
                C32013) *
               C31925 * C440 +
           (((C6053 - C6052) * C13223 + (C6055 - C6054) * C13219 +
             C7320 * C13224 + C7321 * C13220 + C7322 * C13225 + C7323 * C13221 +
             (C6834 - C6835) * C13226 + (C6836 - C6837) * C32254) *
                C32207 +
            ((C6057 - C6056) * C13223 + (C6059 - C6058) * C13219 +
             C7324 * C13224 + C7325 * C13220 + C7326 * C13225 + C7327 * C13221 +
             (C6838 - C6839) * C13226 + (C6840 - C6841) * C32254) *
                C32013) *
               C31925 * C441) *
              C442 +
          ((((C5980 * C120 - C31862 * C127) * C13223 +
             (C5980 * C132 - C31862 * C141) * C13219 +
             (C7160 - C7161) * C13224 + (C7162 - C7163) * C13220 +
             (C7164 - C7165) * C13225 + (C7166 - C7167) * C13221 +
             (C11954 - C11955) * C13226 + (C11956 - C11957) * C32254) *
                C32207 +
            ((C6247 - C6248) * C13223 + (C6249 - C6250) * C13219 +
             (C6994 - C6995) * C13224 + (C6996 - C6997) * C13220 +
             (C6998 - C6999) * C13225 + (C7000 - C7001) * C13221 +
             (C14262 - C14263) * C13226 + (C14264 - C14265) * C32254) *
                C32013) *
               C31925 * C440 +
           (((C6248 - C6247) * C13223 + (C6250 - C6249) * C13219 +
             (C6995 - C6994) * C13224 + (C6997 - C6996) * C13220 +
             (C6999 - C6998) * C13225 + (C7001 - C7000) * C13221 +
             (C14263 - C14262) * C13226 + (C14265 - C14264) * C32254) *
                C32207 +
            ((C6252 - C6251) * C13223 + (C6254 - C6253) * C13219 +
             (C7003 - C7002) * C13224 + (C7005 - C7004) * C13220 +
             (C7007 - C7006) * C13225 + (C7009 - C7008) * C13221 +
             (C31862 * C7156 - C5980 * C7155) * C13226 +
             (C31862 * C7158 - C5980 * C7157) * C32254) *
                C32013) *
               C31925 * C441) *
              C443)) /
            (p * q * std::sqrt(p + q));
    d2ee[56] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31862 * C126 - C5980 * C119) * C3350 +
             (C31862 * C140 - C5980 * C131) * C32208 + (C6820 - C6821) * C3351 +
             (C6822 - C6823) * C32053) *
                C7427 +
            ((C6052 - C6053) * C3350 + (C6054 - C6055) * C32208 +
             C7318 * C3351 + C7319 * C32053) *
                C7428 +
            C9435 * C7429 + C9436 * C32248) *
               C530 +
           (((C6821 - C6820) * C3350 + (C6823 - C6822) * C32208 +
             (C6825 - C6824) * C3351 + (C6827 - C6826) * C32053) *
                C7427 +
            (C7320 * C3350 + C7321 * C32208 + C7322 * C3351 + C7323 * C32053) *
                C7428 +
            (C7324 * C3350 + C7325 * C32208 + C7326 * C3351 + C7327 * C32053) *
                C7429 +
            (C9929 * C3350 + C9930 * C32208 + (C6683 - C6684) * C3351 +
             (C6685 - C6686) * C32053) *
                C32248) *
               C531) *
              C440 +
          ((((C6053 - C6052) * C3350 + (C6055 - C6054) * C32208 +
             C7320 * C3351 + C7321 * C32053) *
                C7427 +
            ((C6057 - C6056) * C3350 + (C6059 - C6058) * C32208 +
             C7324 * C3351 + C7325 * C32053) *
                C7428 +
            ((C6061 - C6060) * C3350 + (C6063 - C6062) * C32208 +
             C9929 * C3351 + C9930 * C32053) *
                C7429 +
            ((C6065 - C6064) * C3350 + (C6067 - C6066) * C32208 +
             (C6447 - C6448) * C3351 + (C6449 - C6450) * C32053) *
                C32248) *
               C530 +
           ((C7318 * C3350 + C7319 * C32208 + C6828 * C3351 + C6829 * C32053) *
                C7427 +
            (C6677 * C3350 + C6678 * C32208 + C6690 * C3351 + C6691 * C32053) *
                C7428 +
            (C9427 * C3350 + C9428 * C32208 + (C6684 - C6683) * C3351 +
             (C6686 - C6685) * C32053) *
                C7429 +
            ((C6448 - C6447) * C3350 + (C6450 - C6449) * C32208 +
             (C31862 * C6155 - C5980 * C6150) * C3351 +
             (C31862 * C6159 - C5980 * C6156) * C32053) *
                C32248) *
               C531) *
              C441) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C748 * C126 - C754 * C119 + C749 * C127 - C755 * C120 +
              C32227 * C128 - C756 * C121) *
                 C3350 +
             (C748 * C140 - C754 * C131 + C749 * C141 - C755 * C132 +
              C32227 * C142 - C756 * C133) *
                 C32208 +
             (C1953 - C1954 + C1955 - C1956 + C1957 - C1958) * C3351 +
             (C1959 - C1960 + C1961 - C1962 + C1963 - C1964) * C32053) *
                C32207 +
            ((C892 - C893 + C894 - C895 + C896 - C897) * C3350 +
             (C898 - C899 + C900 - C901 + C902 - C903) * C32208 +
             C5035 * C3351 + C5036 * C32053) *
                C32013) *
               C530 +
           (((C1954 - C1953 + C1956 - C1955 + C1958 - C1957) * C3350 +
             (C1960 - C1959 + C1962 - C1961 + C1964 - C1963) * C32208 +
             (C1966 - C1965 + C1968 - C1967 + C1970 - C1969) * C3351 +
             (C1972 - C1971 + C1974 - C1973 + C1976 - C1975) * C32053) *
                C32207 +
            (C5037 * C3350 + C5038 * C32208 +
             (C2481 - C2482 + C2483 - C2484 + C2485 - C2486) * C3351 +
             (C2487 - C2488 + C2489 - C2490 + C2491 - C2492) * C32053) *
                C32013) *
               C531) *
              C440 +
          ((((C893 - C892 + C895 - C894 + C897 - C896) * C3350 +
             (C899 - C898 + C901 - C900 + C903 - C902) * C32208 +
             C5037 * C3351 + C5038 * C32053) *
                C32207 +
            ((C905 - C904 + C907 - C906 + C909 - C908) * C3350 +
             (C911 - C910 + C913 - C912 + C915 - C914) * C32208 +
             (C1581 - C1582 + C1583 - C1584 + C1585 - C1586) * C3351 +
             (C1587 - C1588 + C1589 - C1590 + C1591 - C1592) * C32053) *
                C32013) *
               C530 +
           ((C5035 * C3350 + C5036 * C32208 +
             (C2482 - C2481 + C2484 - C2483 + C2486 - C2485) * C3351 +
             (C2488 - C2487 + C2490 - C2489 + C2492 - C2491) * C32053) *
                C32207 +
            ((C1582 - C1581 + C1584 - C1583 + C1586 - C1585) * C3350 +
             (C1588 - C1587 + C1590 - C1589 + C1592 - C1591) * C32208 +
             (C748 * C1071 - C754 * C1056 + C749 * C1072 - C755 * C1057 +
              C32227 * C1073 - C756 * C1058) *
                 C3351 +
             (C748 * C1083 - C754 * C1074 + C749 * C1084 - C755 * C1075 +
              C32227 * C1085 - C756 * C1076) *
                 C32053) *
                C32013) *
               C531) *
              C441) *
         C31899) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31862 * C126 - C5980 * C119) * C13223 +
             (C31862 * C140 - C5980 * C131) * C13219 +
             (C6820 - C6821) * C13224 + (C6822 - C6823) * C13220 +
             C6842 * C13225 + C6843 * C13221 + C11770 * C13226 +
             C11771 * C32254) *
                C32207 +
            ((C6052 - C6053) * C13223 + (C6054 - C6055) * C13219 +
             C7318 * C13224 + C7319 * C13220 + C6828 * C13225 + C6829 * C13221 +
             C14130 * C13226 + C14131 * C32254) *
                C32013) *
               C530 +
           (((C6821 - C6820) * C13223 + (C6823 - C6822) * C13219 +
             (C6825 - C6824) * C13224 + (C6827 - C6826) * C13220 +
             (C6830 - C6831) * C13225 + (C6832 - C6833) * C13221 +
             (C11773 - C11772) * C13226 + (C11775 - C11774) * C32254) *
                C32207 +
            (C7320 * C13223 + C7321 * C13219 + C7322 * C13224 + C7323 * C13220 +
             C14526 * C13225 + C14527 * C13221 + (C12048 - C12049) * C13226 +
             (C12050 - C12051) * C32254) *
                C32013) *
               C531) *
              C440 +
          ((((C6053 - C6052) * C13223 + (C6055 - C6054) * C13219 +
             C7320 * C13224 + C7321 * C13220 + C7322 * C13225 + C7323 * C13221 +
             C14526 * C13226 + C14527 * C32254) *
                C32207 +
            ((C6057 - C6056) * C13223 + (C6059 - C6058) * C13219 +
             C7324 * C13224 + C7325 * C13220 + C7326 * C13225 + C7327 * C13221 +
             (C6838 - C6839) * C13226 + (C6840 - C6841) * C32254) *
                C32013) *
               C530 +
           ((C7318 * C13223 + C7319 * C13219 + C6828 * C13224 + C6829 * C13220 +
             C14130 * C13225 + C14131 * C13221 + (C12049 - C12048) * C13226 +
             (C12051 - C12050) * C32254) *
                C32207 +
            (C6677 * C13223 + C6678 * C13219 + C6690 * C13224 + C6691 * C13220 +
             (C6839 - C6838) * C13225 + (C6841 - C6840) * C13221 +
             (C31862 * C6814 - C5980 * C6809) * C13226 +
             (C31862 * C6818 - C5980 * C6815) * C32254) *
                C32013) *
               C531) *
              C441) *
         C31899) /
            (p * q * std::sqrt(p + q));
    d2ee[57] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C748 * C126 - C754 * C119 + C749 * C127 - C755 * C120 +
                 C32227 * C128 - C756 * C121) *
                    C3350 +
                (C748 * C140 - C754 * C131 + C749 * C141 - C755 * C132 +
                 C32227 * C142 - C756 * C133) *
                    C32208 +
                (C1953 - C1954 + C1955 - C1956 + C1957 - C1958) * C3351 +
                (C1959 - C1960 + C1961 - C1962 + C1963 - C1964) * C32053) *
                   C32207 +
               ((C892 - C893 + C894 - C895 + C896 - C897) * C3350 +
                (C898 - C899 + C900 - C901 + C902 - C903) * C32208 +
                (C1570 - C1569 + C1572 - C1571 + C1574 - C1573) * C3351 +
                (C1576 - C1575 + C1578 - C1577 + C1580 - C1579) * C32053) *
                   C32013) *
                  C31925 * C31911 * C110 +
              (((C754 * C120 - C748 * C127 + C755 * C121 - C749 * C128 +
                 C756 * C122 - C32227 * C129) *
                    C3350 +
                (C754 * C132 - C748 * C141 + C755 * C133 - C749 * C142 +
                 C756 * C134 - C32227 * C143) *
                    C32208 +
                (C2299 - C2300 + C2301 - C2302 + C2303 - C2304) * C3351 +
                (C2305 - C2306 + C2307 - C2308 + C2309 - C2310) * C32053) *
                   C32207 +
               ((C1237 - C1238 + C1239 - C1240 + C1241 - C1242) * C3350 +
                (C1243 - C1244 + C1245 - C1246 + C1247 - C1248) * C32208 +
                (C754 * C619 - C748 * C624 + C755 * C620 - C749 * C625 +
                 C756 * C621 - C32227 * C626) *
                    C3351 +
                (C754 * C629 - C748 * C634 + C755 * C630 - C749 * C635 +
                 C756 * C631 - C32227 * C636) *
                    C32053) *
                   C32013) *
                  C31925 * C31911 * C111 +
              (((C748 * C128 - C754 * C121 + C749 * C129 - C755 * C122 +
                 C32227 * C130 - C756 * C123) *
                    C3350 +
                (C748 * C142 - C754 * C133 + C749 * C143 - C755 * C134 +
                 C32227 * C144 - C756 * C135) *
                    C32208 +
                (C748 * C330 - C754 * C320 + C749 * C331 - C755 * C321 +
                 C32227 * C332 - C756 * C322) *
                    C3351 +
                (C748 * C350 - C754 * C335 + C749 * C351 - C755 * C336 +
                 C32227 * C352 - C756 * C337) *
                    C32053) *
                   C32207 +
               ((C748 * C225 - C754 * C215 + C749 * C226 - C755 * C216 +
                 C32227 * C227 - C756 * C217) *
                    C3350 +
                (C748 * C245 - C754 * C230 + C749 * C246 - C755 * C231 +
                 C32227 * C247 - C756 * C232) *
                    C32208 +
                (C748 * C625 - C754 * C620 + C749 * C626 - C755 * C621 +
                 C32227 * C627 - C756 * C622) *
                    C3351 +
                (C748 * C635 - C754 * C630 + C749 * C636 - C755 * C631 +
                 C32227 * C637 - C756 * C632) *
                    C32053) *
                   C32013) *
                  C31925 * C31911 * C112) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C748 * C126 - C754 * C119 + C749 * C127 - C755 * C120 +
                 C32227 * C128 - C756 * C121) *
                    C3350 +
                (C748 * C140 - C754 * C131 + C749 * C141 - C755 * C132 +
                 C32227 * C142 - C756 * C133) *
                    C32208 +
                (C1953 - C1954 + C1955 - C1956 + C1957 - C1958) * C3351 +
                (C1959 - C1960 + C1961 - C1962 + C1963 - C1964) * C32053) *
                   C32207 +
               ((C892 - C893 + C894 - C895 + C896 - C897) * C3350 +
                (C898 - C899 + C900 - C901 + C902 - C903) * C32208 +
                (C1570 - C1569 + C1572 - C1571 + C1574 - C1573) * C3351 +
                (C1576 - C1575 + C1578 - C1577 + C1580 - C1579) * C32053) *
                   C32013) *
                  C31925 * C209 +
              (((C893 - C892 + C895 - C894 + C897 - C896) * C3350 +
                (C899 - C898 + C901 - C900 + C903 - C902) * C32208 +
                (C1569 - C1570 + C1571 - C1572 + C1573 - C1574) * C3351 +
                (C1575 - C1576 + C1577 - C1578 + C1579 - C1580) * C32053) *
                   C32207 +
               ((C905 - C904 + C907 - C906 + C909 - C908) * C3350 +
                (C911 - C910 + C913 - C912 + C915 - C914) * C32208 +
                (C1581 - C1582 + C1583 - C1584 + C1585 - C1586) * C3351 +
                (C1587 - C1588 + C1589 - C1590 + C1591 - C1592) * C32053) *
                   C32013) *
                  C31925 * C210 +
              ((C936 * C3350 + C937 * C32208 +
                (C1582 - C1581 + C1584 - C1583 + C1586 - C1585) * C3351 +
                (C1588 - C1587 + C1590 - C1589 + C1592 - C1591) * C32053) *
                   C32207 +
               ((C917 - C916 + C919 - C918 + C921 - C920) * C3350 +
                (C923 - C922 + C925 - C924 + C927 - C926) * C32208 +
                (C748 * C1559 - C754 * C1556 + C749 * C1560 - C755 * C1557 +
                 C32227 * C1561 - C756 * C1558) *
                    C3351 +
                (C748 * C1565 - C754 * C1562 + C749 * C1566 - C755 * C1563 +
                 C32227 * C1567 - C756 * C1564) *
                    C32053) *
                   C32013) *
                  C31925 * C211) *
             C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C748 * C126 - C754 * C119 + C749 * C127 - C755 * C120 +
             C32227 * C128 - C756 * C121) *
                C3350 +
            (C748 * C140 - C754 * C131 + C749 * C141 - C755 * C132 +
             C32227 * C142 - C756 * C133) *
                C32208 +
            (C1953 - C1954 + C1955 - C1956 + C1957 - C1958) * C3351 +
            (C1959 - C1960 + C1961 - C1962 + C1963 - C1964) * C32053) *
               C32207 +
           ((C892 - C893 + C894 - C895 + C896 - C897) * C3350 +
            (C898 - C899 + C900 - C901 + C902 - C903) * C32208 +
            (C1570 - C1569 + C1572 - C1571 + C1574 - C1573) * C3351 +
            (C1576 - C1575 + C1578 - C1577 + C1580 - C1579) * C32053) *
               C32013) *
              C315 +
          (((C1954 - C1953 + C1956 - C1955 + C1958 - C1957) * C3350 +
            (C1960 - C1959 + C1962 - C1961 + C1964 - C1963) * C32208 +
            (C1966 - C1965 + C1968 - C1967 + C1970 - C1969) * C3351 +
            (C1972 - C1971 + C1974 - C1973 + C1976 - C1975) * C32053) *
               C32207 +
           ((C1569 - C1570 + C1571 - C1572 + C1573 - C1574) * C3350 +
            (C1575 - C1576 + C1577 - C1578 + C1579 - C1580) * C32208 +
            (C2481 - C2482 + C2483 - C2484 + C2485 - C2486) * C3351 +
            (C2487 - C2488 + C2489 - C2490 + C2491 - C2492) * C32053) *
               C32013) *
              C316 +
          ((C1997 * C3350 + C1998 * C32208 +
            (C1978 - C1977 + C1980 - C1979 + C1982 - C1981) * C3351 +
            (C1984 - C1983 + C1986 - C1985 + C1988 - C1987) * C32053) *
               C32207 +
           ((C2482 - C2481 + C2484 - C2483 + C2486 - C2485) * C3350 +
            (C2488 - C2487 + C2490 - C2489 + C2492 - C2491) * C32208 +
            (C748 * C2471 - C754 * C2468 + C749 * C2472 - C755 * C2469 +
             C32227 * C2473 - C756 * C2470) *
                C3351 +
            (C748 * C2477 - C754 * C2474 + C749 * C2478 - C755 * C2475 +
             C32227 * C2479 - C756 * C2476) *
                C32053) *
               C32013) *
              C317) *
         C31911 * C31899) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C31862 * C126 - C5980 * C119) * C3350 +
            (C31862 * C140 - C5980 * C131) * C32208 + (C6820 - C6821) * C3351 +
            (C6822 - C6823) * C32053) *
               C7427 +
           ((C6052 - C6053) * C3350 + (C6054 - C6055) * C32208 + C7318 * C3351 +
            C7319 * C32053) *
               C7428 +
           (C6072 * C3350 + C6073 * C32208 + C6677 * C3351 + C6678 * C32053) *
               C7429 +
           (C6074 * C3350 + C6075 * C32208 + (C6444 - C6443) * C3351 +
            (C6446 - C6445) * C32053) *
               C32248) *
              C31925 * C31911 * C110 +
          (((C5980 * C120 - C31862 * C127) * C3350 +
            (C5980 * C132 - C31862 * C141) * C32208 + (C7160 - C7161) * C3351 +
            (C7162 - C7163) * C32053) *
               C7427 +
           ((C6247 - C6248) * C3350 + (C6249 - C6250) * C32208 +
            (C6994 - C6995) * C3351 + (C6996 - C6997) * C32053) *
               C7428 +
           ((C6251 - C6252) * C3350 + (C6253 - C6254) * C32208 +
            (C7002 - C7003) * C3351 + (C7004 - C7005) * C32053) *
               C7429 +
           ((C6255 - C6256) * C3350 + (C6257 - C6258) * C32208 +
            (C5980 * C1557 - C31862 * C1560) * C3351 +
            (C5980 * C1563 - C31862 * C1566) * C32053) *
               C32248) *
              C31925 * C31911 * C111 +
          (((C31862 * C128 - C5980 * C121) * C3350 +
            (C31862 * C142 - C5980 * C133) * C32208 +
            (C31862 * C330 - C5980 * C320) * C3351 +
            (C31862 * C350 - C5980 * C335) * C32053) *
               C7427 +
           ((C31862 * C225 - C5980 * C215) * C3350 +
            (C31862 * C245 - C5980 * C230) * C32208 +
            (C31862 * C625 - C5980 * C620) * C3351 +
            (C31862 * C635 - C5980 * C630) * C32053) *
               C7428 +
           ((C31862 * C235 - C5980 * C220) * C3350 +
            (C31862 * C250 - C5980 * C240) * C32208 +
            (C31862 * C1061 - C5980 * C1052) * C3351 +
            (C31862 * C1079 - C5980 * C1064) * C32053) *
               C7429 +
           ((C31862 * C875 - C5980 * C869) * C3350 +
            (C31862 * C887 - C5980 * C878) * C32208 +
            (C31862 * C1561 - C5980 * C1558) * C3351 +
            (C31862 * C1567 - C5980 * C1564) * C32053) *
               C32248) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C31862 * C126 - C5980 * C119) * C3350 +
            (C31862 * C140 - C5980 * C131) * C32208 + (C6820 - C6821) * C3351 +
            (C6822 - C6823) * C32053) *
               C7427 +
           ((C6052 - C6053) * C3350 + (C6054 - C6055) * C32208 + C7318 * C3351 +
            C7319 * C32053) *
               C7428 +
           C9435 * C7429 + C9436 * C32248) *
              C31925 * C209 +
          (((C6053 - C6052) * C3350 + (C6055 - C6054) * C32208 + C7320 * C3351 +
            C7321 * C32053) *
               C7427 +
           ((C6057 - C6056) * C3350 + (C6059 - C6058) * C32208 + C7324 * C3351 +
            C7325 * C32053) *
               C7428 +
           ((C6061 - C6060) * C3350 + (C6063 - C6062) * C32208 +
            (C6443 - C6444) * C3351 + (C6445 - C6446) * C32053) *
               C7429 +
           ((C6065 - C6064) * C3350 + (C6067 - C6066) * C32208 +
            (C6447 - C6448) * C3351 + (C6449 - C6450) * C32053) *
               C32248) *
              C31925 * C210 +
          (C9435 * C7427 + C9436 * C7428 +
           (C6076 * C3350 + C6077 * C32208 + (C6448 - C6447) * C3351 +
            (C6450 - C6449) * C32053) *
               C7429 +
           ((C6069 - C6068) * C3350 + (C6071 - C6070) * C32208 +
            (C31862 * C6431 - C5980 * C6430) * C3351 +
            (C31862 * C6433 - C5980 * C6432) * C32053) *
               C32248) *
              C31925 * C211) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31862 * C126 - C5980 * C119) * C3350 +
            (C31862 * C140 - C5980 * C131) * C32208 + (C6820 - C6821) * C3351 +
            (C6822 - C6823) * C32053) *
               C7427 +
           ((C6052 - C6053) * C3350 + (C6054 - C6055) * C32208 + C7318 * C3351 +
            C7319 * C32053) *
               C7428 +
           C9435 * C7429 + C9436 * C32248) *
              C315 +
          (((C6821 - C6820) * C3350 + (C6823 - C6822) * C32208 +
            (C6825 - C6824) * C3351 + (C6827 - C6826) * C32053) *
               C7427 +
           (C7320 * C3350 + C7321 * C32208 + C7322 * C3351 + C7323 * C32053) *
               C7428 +
           (C7324 * C3350 + C7325 * C32208 + C7326 * C3351 + C7327 * C32053) *
               C7429 +
           ((C6443 - C6444) * C3350 + (C6445 - C6446) * C32208 +
            (C6683 - C6684) * C3351 + (C6685 - C6686) * C32053) *
               C32248) *
              C316 +
          ((C6842 * C3350 + C6843 * C32208 + (C6831 - C6830) * C3351 +
            (C6833 - C6832) * C32053) *
               C7427 +
           (C6828 * C3350 + C6829 * C32208 + (C6835 - C6834) * C3351 +
            (C6837 - C6836) * C32053) *
               C7428 +
           (C6690 * C3350 + C6691 * C32208 + (C6839 - C6838) * C3351 +
            (C6841 - C6840) * C32053) *
               C7429 +
           ((C6684 - C6683) * C3350 + (C6686 - C6685) * C32208 +
            (C31862 * C7314 - C5980 * C7313) * C3351 +
            (C31862 * C7316 - C5980 * C7315) * C32053) *
               C32248) *
              C317) *
         C31911 * C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31862 * C126 - C5980 * C119) * C13223 +
            (C31862 * C140 - C5980 * C131) * C13219 + (C6820 - C6821) * C13224 +
            (C6822 - C6823) * C13220 + C6842 * C13225 + C6843 * C13221 +
            C11770 * C13226 + C11771 * C32254) *
               C32207 +
           ((C6052 - C6053) * C13223 + (C6054 - C6055) * C13219 +
            C7318 * C13224 + C7319 * C13220 + C6828 * C13225 + C6829 * C13221 +
            (C6835 - C6834) * C13226 + (C6837 - C6836) * C32254) *
               C32013) *
              C31925 * C31911 * C110 +
          (((C5980 * C120 - C31862 * C127) * C13223 +
            (C5980 * C132 - C31862 * C141) * C13219 + (C7160 - C7161) * C13224 +
            (C7162 - C7163) * C13220 + (C7164 - C7165) * C13225 +
            (C7166 - C7167) * C13221 + (C11954 - C11955) * C13226 +
            (C11956 - C11957) * C32254) *
               C32207 +
           ((C6247 - C6248) * C13223 + (C6249 - C6250) * C13219 +
            (C6994 - C6995) * C13224 + (C6996 - C6997) * C13220 +
            (C6998 - C6999) * C13225 + (C7000 - C7001) * C13221 +
            (C5980 * C2469 - C31862 * C2472) * C13226 +
            (C5980 * C2475 - C31862 * C2478) * C32254) *
               C32013) *
              C31925 * C31911 * C111 +
          (((C31862 * C128 - C5980 * C121) * C13223 +
            (C31862 * C142 - C5980 * C133) * C13219 +
            (C31862 * C330 - C5980 * C320) * C13224 +
            (C31862 * C350 - C5980 * C335) * C13220 +
            (C31862 * C340 - C5980 * C325) * C13225 +
            (C31862 * C355 - C5980 * C345) * C13221 +
            (C31862 * C1936 - C5980 * C1930) * C13226 +
            (C31862 * C1948 - C5980 * C1939) * C32254) *
               C32207 +
           ((C31862 * C225 - C5980 * C215) * C13223 +
            (C31862 * C245 - C5980 * C230) * C13219 +
            (C31862 * C625 - C5980 * C620) * C13224 +
            (C31862 * C635 - C5980 * C630) * C13220 +
            (C31862 * C1067 - C5980 * C1055) * C13225 +
            (C31862 * C1082 - C5980 * C1070) * C13221 +
            (C31862 * C2473 - C5980 * C2470) * C13226 +
            (C31862 * C2479 - C5980 * C2476) * C32254) *
               C32013) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31862 * C126 - C5980 * C119) * C13223 +
            (C31862 * C140 - C5980 * C131) * C13219 + (C6820 - C6821) * C13224 +
            (C6822 - C6823) * C13220 + C6842 * C13225 + C6843 * C13221 +
            C11770 * C13226 + C11771 * C32254) *
               C32207 +
           ((C6052 - C6053) * C13223 + (C6054 - C6055) * C13219 +
            C7318 * C13224 + C7319 * C13220 + C6828 * C13225 + C6829 * C13221 +
            (C6835 - C6834) * C13226 + (C6837 - C6836) * C32254) *
               C32013) *
              C31925 * C209 +
          (((C6053 - C6052) * C13223 + (C6055 - C6054) * C13219 +
            C7320 * C13224 + C7321 * C13220 + C7322 * C13225 + C7323 * C13221 +
            (C6834 - C6835) * C13226 + (C6836 - C6837) * C32254) *
               C32207 +
           ((C6057 - C6056) * C13223 + (C6059 - C6058) * C13219 +
            C7324 * C13224 + C7325 * C13220 + C7326 * C13225 + C7327 * C13221 +
            (C6838 - C6839) * C13226 + (C6840 - C6841) * C32254) *
               C32013) *
              C31925 * C210 +
          ((C6072 * C13223 + C6073 * C13219 + C6677 * C13224 + C6678 * C13220 +
            C6690 * C13225 + C6691 * C13221 + (C6839 - C6838) * C13226 +
            (C6841 - C6840) * C32254) *
               C32207 +
           (C6074 * C13223 + C6075 * C13219 + C9427 * C13224 + C9428 * C13220 +
            (C6684 - C6683) * C13225 + (C6686 - C6685) * C13221 +
            (C31862 * C7314 - C5980 * C7313) * C13226 +
            (C31862 * C7316 - C5980 * C7315) * C32254) *
               C32013) *
              C31925 * C211) *
         C31899) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C31862 * C126 - C5980 * C119) * C13223 +
            (C31862 * C140 - C5980 * C131) * C13219 + (C6820 - C6821) * C13224 +
            (C6822 - C6823) * C13220 + C6842 * C13225 + C6843 * C13221 +
            C11770 * C13226 + C11771 * C32254) *
               C32207 +
           ((C6052 - C6053) * C13223 + (C6054 - C6055) * C13219 +
            C7318 * C13224 + C7319 * C13220 + C6828 * C13225 + C6829 * C13221 +
            C14130 * C13226 + C14131 * C32254) *
               C32013) *
              C315 +
          (((C6821 - C6820) * C13223 + (C6823 - C6822) * C13219 +
            (C6825 - C6824) * C13224 + (C6827 - C6826) * C13220 +
            (C6830 - C6831) * C13225 + (C6832 - C6833) * C13221 +
            (C11773 - C11772) * C13226 + (C11775 - C11774) * C32254) *
               C32207 +
           (C7320 * C13223 + C7321 * C13219 + C7322 * C13224 + C7323 * C13220 +
            (C6834 - C6835) * C13225 + (C6836 - C6837) * C13221 +
            (C12048 - C12049) * C13226 + (C12050 - C12051) * C32254) *
               C32013) *
              C316 +
          ((C6842 * C13223 + C6843 * C13219 + C11770 * C13224 +
            C11771 * C13220 + C11780 * C13225 + C11781 * C13221 +
            (C11777 - C11776) * C13226 + (C11779 - C11778) * C32254) *
               C32207 +
           (C6828 * C13223 + C6829 * C13219 + C14130 * C13224 +
            C14131 * C13220 + (C12049 - C12048) * C13225 +
            (C12051 - C12050) * C13221 +
            (C31862 * C12044 - C5980 * C12043) * C13226 +
            (C31862 * C12046 - C5980 * C12045) * C32254) *
               C32013) *
              C317) *
         C31911 * C31899) /
            (p * q * std::sqrt(p + q));
    d2ee[58] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31862 * C126 - C5980 * C119) * C3350 +
             (C31862 * C140 - C5980 * C131) * C32208 + (C6820 - C6821) * C3351 +
             (C6822 - C6823) * C32053) *
                C7427 +
            ((C6052 - C6053) * C3350 + (C6054 - C6055) * C32208 +
             C7318 * C3351 + C7319 * C32053) *
                C7428 +
            C9435 * C7429 + C9436 * C32248) *
               C530 +
           (((C6821 - C6820) * C3350 + (C6823 - C6822) * C32208 +
             (C6825 - C6824) * C3351 + (C6827 - C6826) * C32053) *
                C7427 +
            (C7320 * C3350 + C7321 * C32208 + C7322 * C3351 + C7323 * C32053) *
                C7428 +
            (C7324 * C3350 + C7325 * C32208 + C7326 * C3351 + C7327 * C32053) *
                C7429 +
            ((C6443 - C6444) * C3350 + (C6445 - C6446) * C32208 +
             (C6683 - C6684) * C3351 + (C6685 - C6686) * C32053) *
                C32248) *
               C531) *
              C31911 * C442 +
          ((((C5980 * C120 - C31862 * C127) * C3350 +
             (C5980 * C132 - C31862 * C141) * C32208 + (C7160 - C7161) * C3351 +
             (C7162 - C7163) * C32053) *
                C7427 +
            ((C6247 - C6248) * C3350 + (C6249 - C6250) * C32208 +
             (C6994 - C6995) * C3351 + (C6996 - C6997) * C32053) *
                C7428 +
            ((C6251 - C6252) * C3350 + (C6253 - C6254) * C32208 +
             (C7002 - C7003) * C3351 + (C7004 - C7005) * C32053) *
                C7429 +
            ((C6255 - C6256) * C3350 + (C6257 - C6258) * C32208 +
             (C9665 - C9666) * C3351 + (C9667 - C9668) * C32053) *
                C32248) *
               C530 +
           (((C7161 - C7160) * C3350 + (C7163 - C7162) * C32208 +
             (C7165 - C7164) * C3351 + (C7167 - C7166) * C32053) *
                C7427 +
            ((C6995 - C6994) * C3350 + (C6997 - C6996) * C32208 +
             (C6999 - C6998) * C3351 + (C7001 - C7000) * C32053) *
                C7428 +
            ((C7003 - C7002) * C3350 + (C7005 - C7004) * C32208 +
             (C7007 - C7006) * C3351 + (C7009 - C7008) * C32053) *
                C7429 +
            ((C9666 - C9665) * C3350 + (C9668 - C9667) * C32208 +
             (C31862 * C6990 - C5980 * C6989) * C3351 +
             (C31862 * C6992 - C5980 * C6991) * C32053) *
                C32248) *
               C531) *
              C31911 * C443)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C748 * C126 - C754 * C119 + C749 * C127 - C755 * C120 +
              C32227 * C128 - C756 * C121) *
                 C3350 +
             (C748 * C140 - C754 * C131 + C749 * C141 - C755 * C132 +
              C32227 * C142 - C756 * C133) *
                 C32208 +
             (C1953 - C1954 + C1955 - C1956 + C1957 - C1958) * C3351 +
             (C1959 - C1960 + C1961 - C1962 + C1963 - C1964) * C32053) *
                C32207 +
            ((C892 - C893 + C894 - C895 + C896 - C897) * C3350 +
             (C898 - C899 + C900 - C901 + C902 - C903) * C32208 +
             (C1570 - C1569 + C1572 - C1571 + C1574 - C1573) * C3351 +
             (C1576 - C1575 + C1578 - C1577 + C1580 - C1579) * C32053) *
                C32013) *
               C530 +
           (((C1954 - C1953 + C1956 - C1955 + C1958 - C1957) * C3350 +
             (C1960 - C1959 + C1962 - C1961 + C1964 - C1963) * C32208 +
             (C1966 - C1965 + C1968 - C1967 + C1970 - C1969) * C3351 +
             (C1972 - C1971 + C1974 - C1973 + C1976 - C1975) * C32053) *
                C32207 +
            ((C1569 - C1570 + C1571 - C1572 + C1573 - C1574) * C3350 +
             (C1575 - C1576 + C1577 - C1578 + C1579 - C1580) * C32208 +
             (C2481 - C2482 + C2483 - C2484 + C2485 - C2486) * C3351 +
             (C2487 - C2488 + C2489 - C2490 + C2491 - C2492) * C32053) *
                C32013) *
               C531) *
              C31911 * C442 +
          ((((C754 * C120 - C748 * C127 + C755 * C121 - C749 * C128 +
              C756 * C122 - C32227 * C129) *
                 C3350 +
             (C754 * C132 - C748 * C141 + C755 * C133 - C749 * C142 +
              C756 * C134 - C32227 * C143) *
                 C32208 +
             (C2299 - C2300 + C2301 - C2302 + C2303 - C2304) * C3351 +
             (C2305 - C2306 + C2307 - C2308 + C2309 - C2310) * C32053) *
                C32207 +
            ((C1237 - C1238 + C1239 - C1240 + C1241 - C1242) * C3350 +
             (C1243 - C1244 + C1245 - C1246 + C1247 - C1248) * C32208 +
             (C4619 - C4620 + C4621 - C4622 + C4623 - C4624) * C3351 +
             (C4625 - C4626 + C4627 - C4628 + C4629 - C4630) * C32053) *
                C32013) *
               C530 +
           (((C2300 - C2299 + C2302 - C2301 + C2304 - C2303) * C3350 +
             (C2306 - C2305 + C2308 - C2307 + C2310 - C2309) * C32208 +
             (C2312 - C2311 + C2314 - C2313 + C2316 - C2315) * C3351 +
             (C2318 - C2317 + C2320 - C2319 + C2322 - C2321) * C32053) *
                C32207 +
            ((C4620 - C4619 + C4622 - C4621 + C4624 - C4623) * C3350 +
             (C4626 - C4625 + C4628 - C4627 + C4630 - C4629) * C32208 +
             (C748 * C1066 - C754 * C1054 + C749 * C1067 - C755 * C1055 +
              C32227 * C2145 - C756 * C2144) *
                 C3351 +
             (C748 * C1081 - C754 * C1069 + C749 * C1082 - C755 * C1070 +
              C32227 * C2147 - C756 * C2146) *
                 C32053) *
                C32013) *
               C531) *
              C31911 * C443)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31862 * C126 - C5980 * C119) * C13223 +
             (C31862 * C140 - C5980 * C131) * C13219 +
             (C6820 - C6821) * C13224 + (C6822 - C6823) * C13220 +
             C6842 * C13225 + C6843 * C13221 + C11770 * C13226 +
             C11771 * C32254) *
                C32207 +
            ((C6052 - C6053) * C13223 + (C6054 - C6055) * C13219 +
             C7318 * C13224 + C7319 * C13220 + C6828 * C13225 + C6829 * C13221 +
             C14130 * C13226 + C14131 * C32254) *
                C32013) *
               C530 +
           (((C6821 - C6820) * C13223 + (C6823 - C6822) * C13219 +
             (C6825 - C6824) * C13224 + (C6827 - C6826) * C13220 +
             (C6830 - C6831) * C13225 + (C6832 - C6833) * C13221 +
             (C11773 - C11772) * C13226 + (C11775 - C11774) * C32254) *
                C32207 +
            (C7320 * C13223 + C7321 * C13219 + C7322 * C13224 + C7323 * C13220 +
             (C6834 - C6835) * C13225 + (C6836 - C6837) * C13221 +
             (C12048 - C12049) * C13226 + (C12050 - C12051) * C32254) *
                C32013) *
               C531) *
              C31911 * C442 +
          ((((C5980 * C120 - C31862 * C127) * C13223 +
             (C5980 * C132 - C31862 * C141) * C13219 +
             (C7160 - C7161) * C13224 + (C7162 - C7163) * C13220 +
             (C7164 - C7165) * C13225 + (C7166 - C7167) * C13221 +
             (C11954 - C11955) * C13226 + (C11956 - C11957) * C32254) *
                C32207 +
            ((C6247 - C6248) * C13223 + (C6249 - C6250) * C13219 +
             (C6994 - C6995) * C13224 + (C6996 - C6997) * C13220 +
             (C6998 - C6999) * C13225 + (C7000 - C7001) * C13221 +
             (C14262 - C14263) * C13226 + (C14264 - C14265) * C32254) *
                C32013) *
               C530 +
           (((C7161 - C7160) * C13223 + (C7163 - C7162) * C13219 +
             (C7165 - C7164) * C13224 + (C7167 - C7166) * C13220 +
             (C11955 - C11954) * C13225 + (C11957 - C11956) * C13221 +
             (C11959 - C11958) * C13226 + (C11961 - C11960) * C32254) *
                C32207 +
            ((C6995 - C6994) * C13223 + (C6997 - C6996) * C13219 +
             (C6999 - C6998) * C13224 + (C7001 - C7000) * C13220 +
             (C14263 - C14262) * C13225 + (C14265 - C14264) * C13221 +
             (C31862 * C11864 - C5980 * C11863) * C13226 +
             (C31862 * C11866 - C5980 * C11865) * C32254) *
                C32013) *
               C531) *
              C31911 * C443)) /
            (p * q * std::sqrt(p + q));
    d2ee[59] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C748 * C126 - C754 * C119 + C749 * C127 - C755 * C120 +
             C32227 * C128 - C756 * C121) *
                C3350 +
            (C748 * C140 - C754 * C131 + C749 * C141 - C755 * C132 +
             C32227 * C142 - C756 * C133) *
                C32208 +
            (C1953 - C1954 + C1955 - C1956 + C1957 - C1958) * C3351 +
            (C1959 - C1960 + C1961 - C1962 + C1963 - C1964) * C32053) *
               C32207 +
           ((C892 - C893 + C894 - C895 + C896 - C897) * C3350 +
            (C898 - C899 + C900 - C901 + C902 - C903) * C32208 +
            (C1570 - C1569 + C1572 - C1571 + C1574 - C1573) * C3351 +
            (C1576 - C1575 + C1578 - C1577 + C1580 - C1579) * C32053) *
               C32013) *
              C31925 * C209 +
          (((C893 - C892 + C895 - C894 + C897 - C896) * C3350 +
            (C899 - C898 + C901 - C900 + C903 - C902) * C32208 +
            (C1569 - C1570 + C1571 - C1572 + C1573 - C1574) * C3351 +
            (C1575 - C1576 + C1577 - C1578 + C1579 - C1580) * C32053) *
               C32207 +
           ((C905 - C904 + C907 - C906 + C909 - C908) * C3350 +
            (C911 - C910 + C913 - C912 + C915 - C914) * C32208 +
            (C1581 - C1582 + C1583 - C1584 + C1585 - C1586) * C3351 +
            (C1587 - C1588 + C1589 - C1590 + C1591 - C1592) * C32053) *
               C32013) *
              C31925 * C210 +
          ((C936 * C3350 + C937 * C32208 +
            (C1582 - C1581 + C1584 - C1583 + C1586 - C1585) * C3351 +
            (C1588 - C1587 + C1590 - C1589 + C1592 - C1591) * C32053) *
               C32207 +
           ((C917 - C916 + C919 - C918 + C921 - C920) * C3350 +
            (C923 - C922 + C925 - C924 + C927 - C926) * C32208 +
            (C748 * C1559 - C754 * C1556 + C749 * C1560 - C755 * C1557 +
             C32227 * C1561 - C756 * C1558) *
                C3351 +
            (C748 * C1565 - C754 * C1562 + C749 * C1566 - C755 * C1563 +
             C32227 * C1567 - C756 * C1564) *
                C32053) *
               C32013) *
              C31925 * C211) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C748 * C126 - C754 * C119 + C749 * C127 - C755 * C120 +
             C32227 * C128 - C756 * C121) *
                C3350 +
            (C748 * C140 - C754 * C131 + C749 * C141 - C755 * C132 +
             C32227 * C142 - C756 * C133) *
                C32208 +
            (C1953 - C1954 + C1955 - C1956 + C1957 - C1958) * C3351 +
            (C1959 - C1960 + C1961 - C1962 + C1963 - C1964) * C32053) *
               C32207 +
           ((C892 - C893 + C894 - C895 + C896 - C897) * C3350 +
            (C898 - C899 + C900 - C901 + C902 - C903) * C32208 +
            (C1570 - C1569 + C1572 - C1571 + C1574 - C1573) * C3351 +
            (C1576 - C1575 + C1578 - C1577 + C1580 - C1579) * C32053) *
               C32013) *
              C31925 * C31911 * C110 +
          (((C754 * C120 - C748 * C127 + C755 * C121 - C749 * C128 +
             C756 * C122 - C32227 * C129) *
                C3350 +
            (C754 * C132 - C748 * C141 + C755 * C133 - C749 * C142 +
             C756 * C134 - C32227 * C143) *
                C32208 +
            (C2299 - C2300 + C2301 - C2302 + C2303 - C2304) * C3351 +
            (C2305 - C2306 + C2307 - C2308 + C2309 - C2310) * C32053) *
               C32207 +
           ((C1237 - C1238 + C1239 - C1240 + C1241 - C1242) * C3350 +
            (C1243 - C1244 + C1245 - C1246 + C1247 - C1248) * C32208 +
            (C754 * C619 - C748 * C624 + C755 * C620 - C749 * C625 +
             C756 * C621 - C32227 * C626) *
                C3351 +
            (C754 * C629 - C748 * C634 + C755 * C630 - C749 * C635 +
             C756 * C631 - C32227 * C636) *
                C32053) *
               C32013) *
              C31925 * C31911 * C111 +
          (((C748 * C128 - C754 * C121 + C749 * C129 - C755 * C122 +
             C32227 * C130 - C756 * C123) *
                C3350 +
            (C748 * C142 - C754 * C133 + C749 * C143 - C755 * C134 +
             C32227 * C144 - C756 * C135) *
                C32208 +
            (C748 * C330 - C754 * C320 + C749 * C331 - C755 * C321 +
             C32227 * C332 - C756 * C322) *
                C3351 +
            (C748 * C350 - C754 * C335 + C749 * C351 - C755 * C336 +
             C32227 * C352 - C756 * C337) *
                C32053) *
               C32207 +
           ((C748 * C225 - C754 * C215 + C749 * C226 - C755 * C216 +
             C32227 * C227 - C756 * C217) *
                C3350 +
            (C748 * C245 - C754 * C230 + C749 * C246 - C755 * C231 +
             C32227 * C247 - C756 * C232) *
                C32208 +
            (C748 * C625 - C754 * C620 + C749 * C626 - C755 * C621 +
             C32227 * C627 - C756 * C622) *
                C3351 +
            (C748 * C635 - C754 * C630 + C749 * C636 - C755 * C631 +
             C32227 * C637 - C756 * C632) *
                C32053) *
               C32013) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31862 * C126 - C5980 * C119) * C3350 +
            (C31862 * C140 - C5980 * C131) * C32208 + (C6820 - C6821) * C3351 +
            (C6822 - C6823) * C32053) *
               C7427 +
           ((C6052 - C6053) * C3350 + (C6054 - C6055) * C32208 + C7318 * C3351 +
            C7319 * C32053) *
               C7428 +
           (C6072 * C3350 + C6073 * C32208 + C6677 * C3351 + C6678 * C32053) *
               C7429 +
           (C6074 * C3350 + C6075 * C32208 + (C6444 - C6443) * C3351 +
            (C6446 - C6445) * C32053) *
               C32248) *
              C31925 * C31911 * C110 +
          (((C5980 * C120 - C31862 * C127) * C3350 +
            (C5980 * C132 - C31862 * C141) * C32208 + (C7160 - C7161) * C3351 +
            (C7162 - C7163) * C32053) *
               C7427 +
           ((C6247 - C6248) * C3350 + (C6249 - C6250) * C32208 +
            (C6994 - C6995) * C3351 + (C6996 - C6997) * C32053) *
               C7428 +
           ((C6251 - C6252) * C3350 + (C6253 - C6254) * C32208 +
            (C7002 - C7003) * C3351 + (C7004 - C7005) * C32053) *
               C7429 +
           ((C6255 - C6256) * C3350 + (C6257 - C6258) * C32208 +
            (C5980 * C1557 - C31862 * C1560) * C3351 +
            (C5980 * C1563 - C31862 * C1566) * C32053) *
               C32248) *
              C31925 * C31911 * C111 +
          (((C31862 * C128 - C5980 * C121) * C3350 +
            (C31862 * C142 - C5980 * C133) * C32208 +
            (C31862 * C330 - C5980 * C320) * C3351 +
            (C31862 * C350 - C5980 * C335) * C32053) *
               C7427 +
           ((C31862 * C225 - C5980 * C215) * C3350 +
            (C31862 * C245 - C5980 * C230) * C32208 +
            (C31862 * C625 - C5980 * C620) * C3351 +
            (C31862 * C635 - C5980 * C630) * C32053) *
               C7428 +
           ((C31862 * C235 - C5980 * C220) * C3350 +
            (C31862 * C250 - C5980 * C240) * C32208 +
            (C31862 * C1061 - C5980 * C1052) * C3351 +
            (C31862 * C1079 - C5980 * C1064) * C32053) *
               C7429 +
           ((C31862 * C875 - C5980 * C869) * C3350 +
            (C31862 * C887 - C5980 * C878) * C32208 +
            (C31862 * C1561 - C5980 * C1558) * C3351 +
            (C31862 * C1567 - C5980 * C1564) * C32053) *
               C32248) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31862 * C126 - C5980 * C119) * C3350 +
            (C31862 * C140 - C5980 * C131) * C32208 + (C6820 - C6821) * C3351 +
            (C6822 - C6823) * C32053) *
               C7427 +
           ((C6052 - C6053) * C3350 + (C6054 - C6055) * C32208 + C7318 * C3351 +
            C7319 * C32053) *
               C7428 +
           C9435 * C7429 + C9436 * C32248) *
              C31925 * C209 +
          (((C6053 - C6052) * C3350 + (C6055 - C6054) * C32208 + C7320 * C3351 +
            C7321 * C32053) *
               C7427 +
           ((C6057 - C6056) * C3350 + (C6059 - C6058) * C32208 + C7324 * C3351 +
            C7325 * C32053) *
               C7428 +
           ((C6061 - C6060) * C3350 + (C6063 - C6062) * C32208 +
            (C6443 - C6444) * C3351 + (C6445 - C6446) * C32053) *
               C7429 +
           ((C6065 - C6064) * C3350 + (C6067 - C6066) * C32208 +
            (C6447 - C6448) * C3351 + (C6449 - C6450) * C32053) *
               C32248) *
              C31925 * C210 +
          (C9435 * C7427 + C9436 * C7428 +
           (C6076 * C3350 + C6077 * C32208 + (C6448 - C6447) * C3351 +
            (C6450 - C6449) * C32053) *
               C7429 +
           ((C6069 - C6068) * C3350 + (C6071 - C6070) * C32208 +
            (C31862 * C6431 - C5980 * C6430) * C3351 +
            (C31862 * C6433 - C5980 * C6432) * C32053) *
               C32248) *
              C31925 * C211) *
         C31899) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31862 * C126 - C5980 * C119) * C13223 +
            (C31862 * C140 - C5980 * C131) * C13219 + (C6820 - C6821) * C13224 +
            (C6822 - C6823) * C13220 + C6842 * C13225 + C6843 * C13221 +
            C11770 * C13226 + C11771 * C32254) *
               C32207 +
           ((C6052 - C6053) * C13223 + (C6054 - C6055) * C13219 +
            C7318 * C13224 + C7319 * C13220 + C6828 * C13225 + C6829 * C13221 +
            (C6835 - C6834) * C13226 + (C6837 - C6836) * C32254) *
               C32013) *
              C31925 * C31911 * C110 +
          (((C5980 * C120 - C31862 * C127) * C13223 +
            (C5980 * C132 - C31862 * C141) * C13219 + (C7160 - C7161) * C13224 +
            (C7162 - C7163) * C13220 + (C7164 - C7165) * C13225 +
            (C7166 - C7167) * C13221 + (C11954 - C11955) * C13226 +
            (C11956 - C11957) * C32254) *
               C32207 +
           ((C6247 - C6248) * C13223 + (C6249 - C6250) * C13219 +
            (C6994 - C6995) * C13224 + (C6996 - C6997) * C13220 +
            (C6998 - C6999) * C13225 + (C7000 - C7001) * C13221 +
            (C5980 * C2469 - C31862 * C2472) * C13226 +
            (C5980 * C2475 - C31862 * C2478) * C32254) *
               C32013) *
              C31925 * C31911 * C111 +
          (((C31862 * C128 - C5980 * C121) * C13223 +
            (C31862 * C142 - C5980 * C133) * C13219 +
            (C31862 * C330 - C5980 * C320) * C13224 +
            (C31862 * C350 - C5980 * C335) * C13220 +
            (C31862 * C340 - C5980 * C325) * C13225 +
            (C31862 * C355 - C5980 * C345) * C13221 +
            (C31862 * C1936 - C5980 * C1930) * C13226 +
            (C31862 * C1948 - C5980 * C1939) * C32254) *
               C32207 +
           ((C31862 * C225 - C5980 * C215) * C13223 +
            (C31862 * C245 - C5980 * C230) * C13219 +
            (C31862 * C625 - C5980 * C620) * C13224 +
            (C31862 * C635 - C5980 * C630) * C13220 +
            (C31862 * C1067 - C5980 * C1055) * C13225 +
            (C31862 * C1082 - C5980 * C1070) * C13221 +
            (C31862 * C2473 - C5980 * C2470) * C13226 +
            (C31862 * C2479 - C5980 * C2476) * C32254) *
               C32013) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31862 * C126 - C5980 * C119) * C13223 +
            (C31862 * C140 - C5980 * C131) * C13219 + (C6820 - C6821) * C13224 +
            (C6822 - C6823) * C13220 + C6842 * C13225 + C6843 * C13221 +
            C11770 * C13226 + C11771 * C32254) *
               C32207 +
           ((C6052 - C6053) * C13223 + (C6054 - C6055) * C13219 +
            C7318 * C13224 + C7319 * C13220 + C6828 * C13225 + C6829 * C13221 +
            (C6835 - C6834) * C13226 + (C6837 - C6836) * C32254) *
               C32013) *
              C31925 * C209 +
          (((C6053 - C6052) * C13223 + (C6055 - C6054) * C13219 +
            C7320 * C13224 + C7321 * C13220 + C7322 * C13225 + C7323 * C13221 +
            (C6834 - C6835) * C13226 + (C6836 - C6837) * C32254) *
               C32207 +
           ((C6057 - C6056) * C13223 + (C6059 - C6058) * C13219 +
            C7324 * C13224 + C7325 * C13220 + C7326 * C13225 + C7327 * C13221 +
            (C6838 - C6839) * C13226 + (C6840 - C6841) * C32254) *
               C32013) *
              C31925 * C210 +
          ((C6072 * C13223 + C6073 * C13219 + C6677 * C13224 + C6678 * C13220 +
            C6690 * C13225 + C6691 * C13221 + (C6839 - C6838) * C13226 +
            (C6841 - C6840) * C32254) *
               C32207 +
           (C6074 * C13223 + C6075 * C13219 + C9427 * C13224 + C9428 * C13220 +
            (C6684 - C6683) * C13225 + (C6686 - C6685) * C13221 +
            (C31862 * C7314 - C5980 * C7313) * C13226 +
            (C31862 * C7316 - C5980 * C7315) * C32254) *
               C32013) *
              C31925 * C211) *
         C31899) /
            (p * q * std::sqrt(p + q));
    d2ee[60] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C101 * C126 - C113 * C119 + C102 * C127 - C114 * C120 +
                 C103 * C128 - C115 * C121 + C104 * C129 - C116 * C122 +
                 C105 * C130 - C117 * C123) *
                    C118 +
                (C101 * C140 - C113 * C131 + C102 * C141 - C114 * C132 +
                 C103 * C142 - C115 * C133 + C104 * C143 - C116 * C134 +
                 C105 * C144 - C117 * C135) *
                    C31966) *
                   C31955 * C31925 * C440 +
               ((C113 * C213 - C101 * C223 + C114 * C214 - C102 * C224 +
                 C115 * C215 - C103 * C225 + C116 * C216 - C104 * C226 +
                 C117 * C217 - C105 * C227) *
                    C118 +
                (C113 * C228 - C101 * C243 + C114 * C229 - C102 * C244 +
                 C115 * C230 - C103 * C245 + C116 * C231 - C104 * C246 +
                 C117 * C232 - C105 * C247) *
                    C31966) *
                   C31955 * C31925 * C441) *
                  C442 +
              (((C113 * C120 - C101 * C127 + C114 * C121 - C102 * C128 +
                 C115 * C122 - C103 * C129 + C116 * C123 - C104 * C130 +
                 C117 * C124 - C105 * C136) *
                    C118 +
                (C113 * C132 - C101 * C141 + C114 * C133 - C102 * C142 +
                 C115 * C134 - C103 * C143 + C116 * C135 - C104 * C144 +
                 C117 * C137 - C105 * C145) *
                    C31966) *
                   C31955 * C31925 * C440 +
               ((C101 * C224 - C113 * C214 + C102 * C225 - C114 * C215 +
                 C103 * C226 - C115 * C216 + C104 * C227 - C116 * C217 +
                 C105 * C445 - C117 * C444) *
                    C118 +
                (C101 * C244 - C113 * C229 + C102 * C245 - C114 * C230 +
                 C103 * C246 - C115 * C231 + C104 * C247 - C116 * C232 +
                 C105 * C447 - C117 * C446) *
                    C31966) *
                   C31955 * C31925 * C441) *
                  C443) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C748 * C126 - C754 * C119 + C749 * C127 - C755 * C120 +
                  C32227 * C128 - C756 * C121) *
                     C118 +
                 (C748 * C140 - C754 * C131 + C749 * C141 - C755 * C132 +
                  C32227 * C142 - C756 * C133) *
                     C31966) *
                    C32273 +
                ((C892 - C893 + C894 - C895 + C896 - C897) * C118 +
                 (C898 - C899 + C900 - C901 + C902 - C903) * C31966) *
                    C32261 +
                C940 * C32238) *
                   C31925 * C440 +
               (((C893 - C892 + C895 - C894 + C897 - C896) * C118 +
                 (C899 - C898 + C901 - C900 + C903 - C902) * C31966) *
                    C32273 +
                ((C905 - C904 + C907 - C906 + C909 - C908) * C118 +
                 (C911 - C910 + C913 - C912 + C915 - C914) * C31966) *
                    C32261 +
                ((C916 - C917 + C918 - C919 + C920 - C921) * C118 +
                 (C922 - C923 + C924 - C925 + C926 - C927) * C31966) *
                    C32238) *
                   C31925 * C441) *
                  C442 +
              ((((C754 * C120 - C748 * C127 + C755 * C121 - C749 * C128 +
                  C756 * C122 - C32227 * C129) *
                     C118 +
                 (C754 * C132 - C748 * C141 + C755 * C133 - C749 * C142 +
                  C756 * C134 - C32227 * C143) *
                     C31966) *
                    C32273 +
                ((C1237 - C1238 + C1239 - C1240 + C1241 - C1242) * C118 +
                 (C1243 - C1244 + C1245 - C1246 + C1247 - C1248) * C31966) *
                    C32261 +
                ((C1249 - C1250 + C1251 - C1252 + C1253 - C1254) * C118 +
                 (C1255 - C1256 + C1257 - C1258 + C1259 - C1260) * C31966) *
                    C32238) *
                   C31925 * C440 +
               (((C1238 - C1237 + C1240 - C1239 + C1242 - C1241) * C118 +
                 (C1244 - C1243 + C1246 - C1245 + C1248 - C1247) * C31966) *
                    C32273 +
                ((C1250 - C1249 + C1252 - C1251 + C1254 - C1253) * C118 +
                 (C1256 - C1255 + C1258 - C1257 + C1260 - C1259) * C31966) *
                    C32261 +
                ((C748 * C874 - C754 * C868 + C749 * C875 - C755 * C869 +
                  C32227 * C1233 - C756 * C1232) *
                     C118 +
                 (C748 * C886 - C754 * C877 + C749 * C887 - C755 * C878 +
                  C32227 * C1235 - C756 * C1234) *
                     C31966) *
                    C32238) *
                   C31925 * C441) *
                  C443)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C748 * C126 - C754 * C119 + C749 * C127 - C755 * C120 +
             C32227 * C128 - C756 * C121) *
                C1705 +
            (C748 * C140 - C754 * C131 + C749 * C141 - C755 * C132 +
             C32227 * C142 - C756 * C133) *
                C32274 +
            (C1953 - C1954 + C1955 - C1956 + C1957 - C1958) * C1706 +
            (C1959 - C1960 + C1961 - C1962 + C1963 - C1964) * C32263 +
            C1997 * C1707 + C1998 * C32241) *
               C31955 * C31925 * C440 +
           ((C893 - C892 + C895 - C894 + C897 - C896) * C1705 +
            (C899 - C898 + C901 - C900 + C903 - C902) * C32274 +
            (C1569 - C1570 + C1571 - C1572 + C1573 - C1574) * C1706 +
            (C1575 - C1576 + C1577 - C1578 + C1579 - C1580) * C32263 +
            (C754 * C1053 - C748 * C1065 + C755 * C1054 - C749 * C1066 +
             C756 * C1055 - C32227 * C1067) *
                C1707 +
            (C754 * C1068 - C748 * C1080 + C755 * C1069 - C749 * C1081 +
             C756 * C1070 - C32227 * C1082) *
                C32241) *
               C31955 * C31925 * C441) *
              C442 +
          (((C754 * C120 - C748 * C127 + C755 * C121 - C749 * C128 +
             C756 * C122 - C32227 * C129) *
                C1705 +
            (C754 * C132 - C748 * C141 + C755 * C133 - C749 * C142 +
             C756 * C134 - C32227 * C143) *
                C32274 +
            (C754 * C319 - C748 * C329 + C755 * C320 - C749 * C330 +
             C756 * C321 - C32227 * C331) *
                C1706 +
            (C754 * C334 - C748 * C349 + C755 * C335 - C749 * C350 +
             C756 * C336 - C32227 * C351) *
                C32263 +
            (C754 * C324 - C748 * C339 + C755 * C325 - C749 * C340 +
             C756 * C326 - C32227 * C341) *
                C1707 +
            (C754 * C344 - C748 * C354 + C755 * C345 - C749 * C355 +
             C756 * C346 - C32227 * C356) *
                C32241) *
               C31955 * C31925 * C440 +
           ((C1238 - C1237 + C1240 - C1239 + C1242 - C1241) * C1705 +
            (C1244 - C1243 + C1246 - C1245 + C1248 - C1247) * C32274 +
            (C748 * C624 - C754 * C619 + C749 * C625 - C755 * C620 +
             C32227 * C626 - C756 * C621) *
                C1706 +
            (C748 * C634 - C754 * C629 + C749 * C635 - C755 * C630 +
             C32227 * C636 - C756 * C631) *
                C32263 +
            (C748 * C1066 - C754 * C1054 + C749 * C1067 - C755 * C1055 +
             C32227 * C2145 - C756 * C2144) *
                C1707 +
            (C748 * C1081 - C754 * C1069 + C749 * C1082 - C755 * C1070 +
             C32227 * C2147 - C756 * C2146) *
                C32241) *
               C31955 * C31925 * C441) *
              C443)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C32270 * C126 - C5154 * C119 + C32257 * C127 - C5155 * C120 +
              C32227 * C128 - C5156 * C121) *
                 C118 +
             (C32270 * C140 - C5154 * C131 + C32257 * C141 - C5155 * C132 +
              C32227 * C142 - C5156 * C133) *
                 C31966) *
                C5151 +
            ((C5268 - C5269 + C5270 - C5271 + C5272 - C5273) * C118 +
             (C5274 - C5275 + C5276 - C5277 + C5278 - C5279) * C31966) *
                C5152 +
            C5316 * C32238) *
               C31925 * C440 +
           (((C5269 - C5268 + C5271 - C5270 + C5273 - C5272) * C118 +
             (C5275 - C5274 + C5277 - C5276 + C5279 - C5278) * C31966) *
                C5151 +
            ((C5281 - C5280 + C5283 - C5282 + C5285 - C5284) * C118 +
             (C5287 - C5286 + C5289 - C5288 + C5291 - C5290) * C31966) *
                C5152 +
            ((C5292 - C5293 + C5294 - C5295 + C5296 - C5297) * C118 +
             (C5298 - C5299 + C5300 - C5301 + C5302 - C5303) * C31966) *
                C32238) *
               C31925 * C441) *
              C442 +
          ((((C5154 * C120 - C32270 * C127 + C5155 * C121 - C32257 * C128 +
              C5156 * C122 - C32227 * C129) *
                 C118 +
             (C5154 * C132 - C32270 * C141 + C5155 * C133 - C32257 * C142 +
              C5156 * C134 - C32227 * C143) *
                 C31966) *
                C5151 +
            ((C5573 - C5574 + C5575 - C5576 + C5577 - C5578) * C118 +
             (C5579 - C5580 + C5581 - C5582 + C5583 - C5584) * C31966) *
                C5152 +
            ((C5585 - C5586 + C5587 - C5588 + C5589 - C5590) * C118 +
             (C5591 - C5592 + C5593 - C5594 + C5595 - C5596) * C31966) *
                C32238) *
               C31925 * C440 +
           (((C5574 - C5573 + C5576 - C5575 + C5578 - C5577) * C118 +
             (C5580 - C5579 + C5582 - C5581 + C5584 - C5583) * C31966) *
                C5151 +
            ((C5586 - C5585 + C5588 - C5587 + C5590 - C5589) * C118 +
             (C5592 - C5591 + C5594 - C5593 + C5596 - C5595) * C31966) *
                C5152 +
            ((C32270 * C874 - C5154 * C868 + C32257 * C875 - C5155 * C869 +
              C32227 * C1233 - C5156 * C1232) *
                 C118 +
             (C32270 * C886 - C5154 * C877 + C32257 * C887 - C5155 * C878 +
              C32227 * C1235 - C5156 * C1234) *
                 C31966) *
                C32238) *
               C31925 * C441) *
              C443)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C31862 * C126 - C5980 * C119) * C118 +
             (C31862 * C140 - C5980 * C131) * C31966) *
                C5975 +
            ((C6052 - C6053) * C118 + (C6054 - C6055) * C31966) * C5976 +
            C6084 * C5977 + C6085 * C5978 + C6086 * C5979) *
               C31925 * C440 +
           (((C6053 - C6052) * C118 + (C6055 - C6054) * C31966) * C5975 +
            ((C6057 - C6056) * C118 + (C6059 - C6058) * C31966) * C5976 +
            ((C6061 - C6060) * C118 + (C6063 - C6062) * C31966) * C5977 +
            ((C6065 - C6064) * C118 + (C6067 - C6066) * C31966) * C5978 +
            ((C6068 - C6069) * C118 + (C6070 - C6071) * C31966) * C5979) *
               C31925 * C441) *
              C442 +
          ((((C5980 * C120 - C31862 * C127) * C118 +
             (C5980 * C132 - C31862 * C141) * C31966) *
                C5975 +
            ((C6247 - C6248) * C118 + (C6249 - C6250) * C31966) * C5976 +
            ((C6251 - C6252) * C118 + (C6253 - C6254) * C31966) * C5977 +
            ((C6255 - C6256) * C118 + (C6257 - C6258) * C31966) * C5978 +
            ((C6259 - C6260) * C118 + (C6261 - C6262) * C31966) * C5979) *
               C31925 * C440 +
           (((C6248 - C6247) * C118 + (C6250 - C6249) * C31966) * C5975 +
            ((C6252 - C6251) * C118 + (C6254 - C6253) * C31966) * C5976 +
            ((C6256 - C6255) * C118 + (C6258 - C6257) * C31966) * C5977 +
            ((C6260 - C6259) * C118 + (C6262 - C6261) * C31966) * C5978 +
            ((C31862 * C6243 - C5980 * C6242) * C118 +
             (C31862 * C6245 - C5980 * C6244) * C31966) *
                C5979) *
               C31925 * C441) *
              C443)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31862 * C126 - C5980 * C119) * C1705 +
             (C31862 * C140 - C5980 * C131) * C32274 + (C6820 - C6821) * C1706 +
             (C6822 - C6823) * C32263 + C6842 * C1707 + C6843 * C32241) *
                C5151 +
            ((C6052 - C6053) * C1705 + (C6054 - C6055) * C32274 +
             (C6436 - C6435) * C1706 + (C6438 - C6437) * C32263 +
             C6828 * C1707 + C6829 * C32241) *
                C5152 +
            C6697 * C32238) *
               C31925 * C440 +
           (((C6053 - C6052) * C1705 + (C6055 - C6054) * C32274 +
             (C6435 - C6436) * C1706 + (C6437 - C6438) * C32263 +
             (C6672 - C6671) * C1707 + (C6674 - C6673) * C32241) *
                C5151 +
            ((C6057 - C6056) * C1705 + (C6059 - C6058) * C32274 +
             (C6439 - C6440) * C1706 + (C6441 - C6442) * C32263 +
             (C6680 - C6679) * C1707 + (C6682 - C6681) * C32241) *
                C5152 +
            ((C6061 - C6060) * C1705 + (C6063 - C6062) * C32274 +
             (C6443 - C6444) * C1706 + (C6445 - C6446) * C32263 +
             (C6683 - C6684) * C1707 + (C6685 - C6686) * C32241) *
                C32238) *
               C31925 * C441) *
              C442 +
          ((((C5980 * C120 - C31862 * C127) * C1705 +
             (C5980 * C132 - C31862 * C141) * C32274 +
             (C5980 * C319 - C31862 * C329) * C1706 +
             (C5980 * C334 - C31862 * C349) * C32263 +
             (C5980 * C324 - C31862 * C339) * C1707 +
             (C5980 * C344 - C31862 * C354) * C32241) *
                C5151 +
            ((C6247 - C6248) * C1705 + (C6249 - C6250) * C32274 +
             (C6994 - C6995) * C1706 + (C6996 - C6997) * C32263 +
             (C6998 - C6999) * C1707 + (C7000 - C7001) * C32241) *
                C5152 +
            ((C6251 - C6252) * C1705 + (C6253 - C6254) * C32274 +
             (C7002 - C7003) * C1706 + (C7004 - C7005) * C32263 +
             (C7006 - C7007) * C1707 + (C7008 - C7009) * C32241) *
                C32238) *
               C31925 * C440 +
           (((C6248 - C6247) * C1705 + (C6250 - C6249) * C32274 +
             (C6995 - C6994) * C1706 + (C6997 - C6996) * C32263 +
             (C6999 - C6998) * C1707 + (C7001 - C7000) * C32241) *
                C5151 +
            ((C6252 - C6251) * C1705 + (C6254 - C6253) * C32274 +
             (C7003 - C7002) * C1706 + (C7005 - C7004) * C32263 +
             (C7007 - C7006) * C1707 + (C7009 - C7008) * C32241) *
                C5152 +
            ((C6256 - C6255) * C1705 + (C6258 - C6257) * C32274 +
             (C31862 * C1560 - C5980 * C1557) * C1706 +
             (C31862 * C1566 - C5980 * C1563) * C32263 +
             (C31862 * C6990 - C5980 * C6989) * C1707 +
             (C31862 * C6992 - C5980 * C6991) * C32241) *
                C32238) *
               C31925 * C441) *
              C443)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C32270 * C126 - C5154 * C119 + C32257 * C127 - C5155 * C120 +
             C32227 * C128 - C5156 * C121) *
                C10043 +
            (C32270 * C140 - C5154 * C131 + C32257 * C141 - C5155 * C132 +
             C32227 * C142 - C5156 * C133) *
                C10040 +
            (C10267 - C10268 + C10269 - C10270 + C10271 - C10272) * C10044 +
            (C10273 - C10274 + C10275 - C10276 + C10277 - C10278) * C10041 +
            C10311 * C10045 + C10312 * C32241) *
               C31955 * C31925 * C440 +
           ((C5269 - C5268 + C5271 - C5270 + C5273 - C5272) * C10043 +
            (C5275 - C5274 + C5277 - C5276 + C5279 - C5278) * C10040 +
            (C5889 - C5890 + C5891 - C5892 + C5893 - C5894) * C10044 +
            (C5895 - C5896 + C5897 - C5898 + C5899 - C5900) * C10041 +
            (C5154 * C1053 - C32270 * C1065 + C5155 * C1054 - C32257 * C1066 +
             C5156 * C1055 - C32227 * C1067) *
                C10045 +
            (C5154 * C1068 - C32270 * C1080 + C5155 * C1069 - C32257 * C1081 +
             C5156 * C1070 - C32227 * C1082) *
                C32241) *
               C31955 * C31925 * C441) *
              C442 +
          (((C5154 * C120 - C32270 * C127 + C5155 * C121 - C32257 * C128 +
             C5156 * C122 - C32227 * C129) *
                C10043 +
            (C5154 * C132 - C32270 * C141 + C5155 * C133 - C32257 * C142 +
             C5156 * C134 - C32227 * C143) *
                C10040 +
            (C5154 * C319 - C32270 * C329 + C5155 * C320 - C32257 * C330 +
             C5156 * C321 - C32227 * C331) *
                C10044 +
            (C5154 * C334 - C32270 * C349 + C5155 * C335 - C32257 * C350 +
             C5156 * C336 - C32227 * C351) *
                C10041 +
            (C5154 * C324 - C32270 * C339 + C5155 * C325 - C32257 * C340 +
             C5156 * C326 - C32227 * C341) *
                C10045 +
            (C5154 * C344 - C32270 * C354 + C5155 * C345 - C32257 * C355 +
             C5156 * C346 - C32227 * C356) *
                C32241) *
               C31955 * C31925 * C440 +
           ((C5574 - C5573 + C5576 - C5575 + C5578 - C5577) * C10043 +
            (C5580 - C5579 + C5582 - C5581 + C5584 - C5583) * C10040 +
            (C32270 * C624 - C5154 * C619 + C32257 * C625 - C5155 * C620 +
             C32227 * C626 - C5156 * C621) *
                C10044 +
            (C32270 * C634 - C5154 * C629 + C32257 * C635 - C5155 * C630 +
             C32227 * C636 - C5156 * C631) *
                C10041 +
            (C32270 * C1066 - C5154 * C1054 + C32257 * C1067 - C5155 * C1055 +
             C32227 * C2145 - C5156 * C2144) *
                C10045 +
            (C32270 * C1081 - C5154 * C1069 + C32257 * C1082 - C5155 * C1070 +
             C32227 * C2147 - C5156 * C2146) *
                C32241) *
               C31955 * C31925 * C441) *
              C443)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31862 * C126 - C5980 * C119) * C10043 +
             (C31862 * C140 - C5980 * C131) * C10040 +
             (C6820 - C6821) * C10044 + (C6822 - C6823) * C10041 +
             C6842 * C10045 + C6843 * C32241) *
                C32273 +
            ((C6052 - C6053) * C10043 + (C6054 - C6055) * C10040 +
             C7318 * C10044 + C7319 * C10041 + C6828 * C10045 +
             C6829 * C32241) *
                C32261 +
            C11017 * C32238) *
               C31925 * C440 +
           (((C6053 - C6052) * C10043 + (C6055 - C6054) * C10040 +
             C7320 * C10044 + C7321 * C10041 + C7322 * C10045 +
             C7323 * C32241) *
                C32273 +
            ((C6057 - C6056) * C10043 + (C6059 - C6058) * C10040 +
             C7324 * C10044 + C7325 * C10041 + C7326 * C10045 +
             C7327 * C32241) *
                C32261 +
            ((C6061 - C6060) * C10043 + (C6063 - C6062) * C10040 +
             C9929 * C10044 + C9930 * C10041 + (C6683 - C6684) * C10045 +
             (C6685 - C6686) * C32241) *
                C32238) *
               C31925 * C441) *
              C442 +
          ((((C5980 * C120 - C31862 * C127) * C10043 +
             (C5980 * C132 - C31862 * C141) * C10040 +
             (C7160 - C7161) * C10044 + (C7162 - C7163) * C10041 +
             (C7164 - C7165) * C10045 + (C7166 - C7167) * C32241) *
                C32273 +
            ((C6247 - C6248) * C10043 + (C6249 - C6250) * C10040 +
             (C6994 - C6995) * C10044 + (C6996 - C6997) * C10041 +
             (C6998 - C6999) * C10045 + (C7000 - C7001) * C32241) *
                C32261 +
            ((C6251 - C6252) * C10043 + (C6253 - C6254) * C10040 +
             (C7002 - C7003) * C10044 + (C7004 - C7005) * C10041 +
             (C7006 - C7007) * C10045 + (C7008 - C7009) * C32241) *
                C32238) *
               C31925 * C440 +
           (((C6248 - C6247) * C10043 + (C6250 - C6249) * C10040 +
             (C6995 - C6994) * C10044 + (C6997 - C6996) * C10041 +
             (C6999 - C6998) * C10045 + (C7001 - C7000) * C32241) *
                C32273 +
            ((C6252 - C6251) * C10043 + (C6254 - C6253) * C10040 +
             (C7003 - C7002) * C10044 + (C7005 - C7004) * C10041 +
             (C7007 - C7006) * C10045 + (C7009 - C7008) * C32241) *
                C32261 +
            ((C6256 - C6255) * C10043 + (C6258 - C6257) * C10040 +
             (C9666 - C9665) * C10044 + (C9668 - C9667) * C10041 +
             (C31862 * C6990 - C5980 * C6989) * C10045 +
             (C31862 * C6992 - C5980 * C6991) * C32241) *
                C32238) *
               C31925 * C441) *
              C443)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C31862 * C126 - C5980 * C119) * C11632 +
            (C31862 * C140 - C5980 * C131) * C11627 + (C6820 - C6821) * C11633 +
            (C6822 - C6823) * C11628 + C6842 * C11634 + C6843 * C11629 +
            C11770 * C11635 + C11771 * C11630 + C11780 * C11636 +
            C11781 * C11631) *
               C31955 * C31925 * C440 +
           ((C6053 - C6052) * C11632 + (C6055 - C6054) * C11627 +
            C7320 * C11633 + C7321 * C11628 + C7322 * C11634 + C7323 * C11629 +
            (C6834 - C6835) * C11635 + (C6836 - C6837) * C11630 +
            (C5980 * C6808 - C31862 * C6812) * C11636 +
            (C5980 * C6813 - C31862 * C6817) * C11631) *
               C31955 * C31925 * C441) *
              C442 +
          (((C5980 * C120 - C31862 * C127) * C11632 +
            (C5980 * C132 - C31862 * C141) * C11627 + (C7160 - C7161) * C11633 +
            (C7162 - C7163) * C11628 + (C7164 - C7165) * C11634 +
            (C7166 - C7167) * C11629 +
            (C5980 * C1929 - C31862 * C1935) * C11635 +
            (C5980 * C1938 - C31862 * C1947) * C11630 +
            (C5980 * C1932 - C31862 * C1941) * C11636 +
            (C5980 * C1944 - C31862 * C1950) * C11631) *
               C31955 * C31925 * C440 +
           ((C6248 - C6247) * C11632 + (C6250 - C6249) * C11627 +
            (C6995 - C6994) * C11633 + (C6997 - C6996) * C11628 +
            (C6999 - C6998) * C11634 + (C7001 - C7000) * C11629 +
            (C31862 * C2472 - C5980 * C2469) * C11635 +
            (C31862 * C2478 - C5980 * C2475) * C11630 +
            (C31862 * C11864 - C5980 * C11863) * C11636 +
            (C31862 * C11866 - C5980 * C11865) * C11631) *
               C31955 * C31925 * C441) *
              C443)) /
            (p * q * std::sqrt(p + q));
    d2ee[61] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C101 * C126 - C113 * C119 + C102 * C127 - C114 * C120 +
                 C103 * C128 - C115 * C121 + C104 * C129 - C116 * C122 +
                 C105 * C130 - C117 * C123) *
                    C118 +
                (C101 * C140 - C113 * C131 + C102 * C141 - C114 * C132 +
                 C103 * C142 - C115 * C133 + C104 * C143 - C116 * C134 +
                 C105 * C144 - C117 * C135) *
                    C31966) *
                   C31955 * C530 +
               ((C113 * C318 - C101 * C328 + C114 * C319 - C102 * C329 +
                 C115 * C320 - C103 * C330 + C116 * C321 - C104 * C331 +
                 C117 * C322 - C105 * C332) *
                    C118 +
                (C113 * C333 - C101 * C348 + C114 * C334 - C102 * C349 +
                 C115 * C335 - C103 * C350 + C116 * C336 - C104 * C351 +
                 C117 * C337 - C105 * C352) *
                    C31966) *
                   C31955 * C531) *
                  C440 +
              (((C113 * C213 - C101 * C223 + C114 * C214 - C102 * C224 +
                 C115 * C215 - C103 * C225 + C116 * C216 - C104 * C226 +
                 C117 * C217 - C105 * C227) *
                    C118 +
                (C113 * C228 - C101 * C243 + C114 * C229 - C102 * C244 +
                 C115 * C230 - C103 * C245 + C116 * C231 - C104 * C246 +
                 C117 * C232 - C105 * C247) *
                    C31966) *
                   C31955 * C530 +
               ((C101 * C623 - C113 * C618 + C102 * C624 - C114 * C619 +
                 C103 * C625 - C115 * C620 + C104 * C626 - C116 * C621 +
                 C105 * C627 - C117 * C622) *
                    C118 +
                (C101 * C633 - C113 * C628 + C102 * C634 - C114 * C629 +
                 C103 * C635 - C115 * C630 + C104 * C636 - C116 * C631 +
                 C105 * C637 - C117 * C632) *
                    C31966) *
                   C31955 * C531) *
                  C441) *
             C31899 +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C748 * C126 - C754 * C119 + C749 * C127 - C755 * C120 +
                  C32227 * C128 - C756 * C121) *
                     C118 +
                 (C748 * C140 - C754 * C131 + C749 * C141 - C755 * C132 +
                  C32227 * C142 - C756 * C133) *
                     C31966) *
                    C32273 +
                ((C892 - C893 + C894 - C895 + C896 - C897) * C118 +
                 (C898 - C899 + C900 - C901 + C902 - C903) * C31966) *
                    C32261 +
                C940 * C32238) *
                   C530 +
               (((C754 * C318 - C748 * C328 + C755 * C319 - C749 * C329 +
                  C756 * C320 - C32227 * C330) *
                     C118 +
                 (C754 * C333 - C748 * C348 + C755 * C334 - C749 * C349 +
                  C756 * C335 - C32227 * C350) *
                     C31966) *
                    C32273 +
                ((C1569 - C1570 + C1571 - C1572 + C1573 - C1574) * C118 +
                 (C1575 - C1576 + C1577 - C1578 + C1579 - C1580) * C31966) *
                    C32261 +
                ((C1581 - C1582 + C1583 - C1584 + C1585 - C1586) * C118 +
                 (C1587 - C1588 + C1589 - C1590 + C1591 - C1592) * C31966) *
                    C32238) *
                   C531) *
                  C440 +
              ((((C893 - C892 + C895 - C894 + C897 - C896) * C118 +
                 (C899 - C898 + C901 - C900 + C903 - C902) * C31966) *
                    C32273 +
                ((C905 - C904 + C907 - C906 + C909 - C908) * C118 +
                 (C911 - C910 + C913 - C912 + C915 - C914) * C31966) *
                    C32261 +
                ((C916 - C917 + C918 - C919 + C920 - C921) * C118 +
                 (C922 - C923 + C924 - C925 + C926 - C927) * C31966) *
                    C32238) *
                   C530 +
               (((C1570 - C1569 + C1572 - C1571 + C1574 - C1573) * C118 +
                 (C1576 - C1575 + C1578 - C1577 + C1580 - C1579) * C31966) *
                    C32273 +
                ((C1582 - C1581 + C1584 - C1583 + C1586 - C1585) * C118 +
                 (C1588 - C1587 + C1590 - C1589 + C1592 - C1591) * C31966) *
                    C32261 +
                ((C748 * C1559 - C754 * C1556 + C749 * C1560 - C755 * C1557 +
                  C32227 * C1561 - C756 * C1558) *
                     C118 +
                 (C748 * C1565 - C754 * C1562 + C749 * C1566 - C755 * C1563 +
                  C32227 * C1567 - C756 * C1564) *
                     C31966) *
                    C32238) *
                   C531) *
                  C441) *
             C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C748 * C126 - C754 * C119 + C749 * C127 - C755 * C120 +
             C32227 * C128 - C756 * C121) *
                C1705 +
            (C748 * C140 - C754 * C131 + C749 * C141 - C755 * C132 +
             C32227 * C142 - C756 * C133) *
                C32274 +
            (C1953 - C1954 + C1955 - C1956 + C1957 - C1958) * C1706 +
            (C1959 - C1960 + C1961 - C1962 + C1963 - C1964) * C32263 +
            C1997 * C1707 + C1998 * C32241) *
               C31955 * C530 +
           ((C1954 - C1953 + C1956 - C1955 + C1958 - C1957) * C1705 +
            (C1960 - C1959 + C1962 - C1961 + C1964 - C1963) * C32274 +
            (C1966 - C1965 + C1968 - C1967 + C1970 - C1969) * C1706 +
            (C1972 - C1971 + C1974 - C1973 + C1976 - C1975) * C32263 +
            (C1977 - C1978 + C1979 - C1980 + C1981 - C1982) * C1707 +
            (C1983 - C1984 + C1985 - C1986 + C1987 - C1988) * C32241) *
               C31955 * C531) *
              C440 +
          (((C893 - C892 + C895 - C894 + C897 - C896) * C1705 +
            (C899 - C898 + C901 - C900 + C903 - C902) * C32274 +
            (C1569 - C1570 + C1571 - C1572 + C1573 - C1574) * C1706 +
            (C1575 - C1576 + C1577 - C1578 + C1579 - C1580) * C32263 +
            (C2481 - C2482 + C2483 - C2484 + C2485 - C2486) * C1707 +
            (C2487 - C2488 + C2489 - C2490 + C2491 - C2492) * C32241) *
               C31955 * C530 +
           ((C1570 - C1569 + C1572 - C1571 + C1574 - C1573) * C1705 +
            (C1576 - C1575 + C1578 - C1577 + C1580 - C1579) * C32274 +
            (C2482 - C2481 + C2484 - C2483 + C2486 - C2485) * C1706 +
            (C2488 - C2487 + C2490 - C2489 + C2492 - C2491) * C32263 +
            (C748 * C2471 - C754 * C2468 + C749 * C2472 - C755 * C2469 +
             C32227 * C2473 - C756 * C2470) *
                C1707 +
            (C748 * C2477 - C754 * C2474 + C749 * C2478 - C755 * C2475 +
             C32227 * C2479 - C756 * C2476) *
                C32241) *
               C31955 * C531) *
              C441) *
         C31899) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C32270 * C126 - C5154 * C119 + C32257 * C127 - C5155 * C120 +
              C32227 * C128 - C5156 * C121) *
                 C118 +
             (C32270 * C140 - C5154 * C131 + C32257 * C141 - C5155 * C132 +
              C32227 * C142 - C5156 * C133) *
                 C31966) *
                C5151 +
            ((C5268 - C5269 + C5270 - C5271 + C5272 - C5273) * C118 +
             (C5274 - C5275 + C5276 - C5277 + C5278 - C5279) * C31966) *
                C5152 +
            C5316 * C32238) *
               C530 +
           (((C5154 * C318 - C32270 * C328 + C5155 * C319 - C32257 * C329 +
              C5156 * C320 - C32227 * C330) *
                 C118 +
             (C5154 * C333 - C32270 * C348 + C5155 * C334 - C32257 * C349 +
              C5156 * C335 - C32227 * C350) *
                 C31966) *
                C5151 +
            ((C5889 - C5890 + C5891 - C5892 + C5893 - C5894) * C118 +
             (C5895 - C5896 + C5897 - C5898 + C5899 - C5900) * C31966) *
                C5152 +
            ((C5901 - C5902 + C5903 - C5904 + C5905 - C5906) * C118 +
             (C5907 - C5908 + C5909 - C5910 + C5911 - C5912) * C31966) *
                C32238) *
               C531) *
              C440 +
          ((((C5269 - C5268 + C5271 - C5270 + C5273 - C5272) * C118 +
             (C5275 - C5274 + C5277 - C5276 + C5279 - C5278) * C31966) *
                C5151 +
            ((C5281 - C5280 + C5283 - C5282 + C5285 - C5284) * C118 +
             (C5287 - C5286 + C5289 - C5288 + C5291 - C5290) * C31966) *
                C5152 +
            ((C5292 - C5293 + C5294 - C5295 + C5296 - C5297) * C118 +
             (C5298 - C5299 + C5300 - C5301 + C5302 - C5303) * C31966) *
                C32238) *
               C530 +
           (((C5890 - C5889 + C5892 - C5891 + C5894 - C5893) * C118 +
             (C5896 - C5895 + C5898 - C5897 + C5900 - C5899) * C31966) *
                C5151 +
            ((C5902 - C5901 + C5904 - C5903 + C5906 - C5905) * C118 +
             (C5908 - C5907 + C5910 - C5909 + C5912 - C5911) * C31966) *
                C5152 +
            ((C32270 * C1559 - C5154 * C1556 + C32257 * C1560 - C5155 * C1557 +
              C32227 * C1561 - C5156 * C1558) *
                 C118 +
             (C32270 * C1565 - C5154 * C1562 + C32257 * C1566 - C5155 * C1563 +
              C32227 * C1567 - C5156 * C1564) *
                 C31966) *
                C32238) *
               C531) *
              C441) *
         C31899) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C31862 * C126 - C5980 * C119) * C118 +
             (C31862 * C140 - C5980 * C131) * C31966) *
                C5975 +
            ((C6052 - C6053) * C118 + (C6054 - C6055) * C31966) * C5976 +
            C6084 * C5977 + C6085 * C5978 + C6086 * C5979) *
               C530 +
           (((C5980 * C318 - C31862 * C328) * C118 +
             (C5980 * C333 - C31862 * C348) * C31966) *
                C5975 +
            ((C6435 - C6436) * C118 + (C6437 - C6438) * C31966) * C5976 +
            ((C6439 - C6440) * C118 + (C6441 - C6442) * C31966) * C5977 +
            ((C6443 - C6444) * C118 + (C6445 - C6446) * C31966) * C5978 +
            ((C6447 - C6448) * C118 + (C6449 - C6450) * C31966) * C5979) *
               C531) *
              C440 +
          ((((C6053 - C6052) * C118 + (C6055 - C6054) * C31966) * C5975 +
            ((C6057 - C6056) * C118 + (C6059 - C6058) * C31966) * C5976 +
            ((C6061 - C6060) * C118 + (C6063 - C6062) * C31966) * C5977 +
            ((C6065 - C6064) * C118 + (C6067 - C6066) * C31966) * C5978 +
            ((C6068 - C6069) * C118 + (C6070 - C6071) * C31966) * C5979) *
               C530 +
           (((C6436 - C6435) * C118 + (C6438 - C6437) * C31966) * C5975 +
            ((C6440 - C6439) * C118 + (C6442 - C6441) * C31966) * C5976 +
            ((C6444 - C6443) * C118 + (C6446 - C6445) * C31966) * C5977 +
            ((C6448 - C6447) * C118 + (C6450 - C6449) * C31966) * C5978 +
            ((C31862 * C6431 - C5980 * C6430) * C118 +
             (C31862 * C6433 - C5980 * C6432) * C31966) *
                C5979) *
               C531) *
              C441) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31862 * C126 - C5980 * C119) * C1705 +
             (C31862 * C140 - C5980 * C131) * C32274 + (C6820 - C6821) * C1706 +
             (C6822 - C6823) * C32263 + C6842 * C1707 + C6843 * C32241) *
                C5151 +
            ((C6052 - C6053) * C1705 + (C6054 - C6055) * C32274 +
             C7318 * C1706 + C7319 * C32263 + C6828 * C1707 + C6829 * C32241) *
                C5152 +
            C6697 * C32238) *
               C530 +
           (((C6821 - C6820) * C1705 + (C6823 - C6822) * C32274 +
             (C6825 - C6824) * C1706 + (C6827 - C6826) * C32263 +
             (C6830 - C6831) * C1707 + (C6832 - C6833) * C32241) *
                C5151 +
            (C7320 * C1705 + C7321 * C32274 + C7322 * C1706 + C7323 * C32263 +
             (C6834 - C6835) * C1707 + (C6836 - C6837) * C32241) *
                C5152 +
            (C7324 * C1705 + C7325 * C32274 + C7326 * C1706 + C7327 * C32263 +
             (C6838 - C6839) * C1707 + (C6840 - C6841) * C32241) *
                C32238) *
               C531) *
              C440 +
          ((((C6053 - C6052) * C1705 + (C6055 - C6054) * C32274 +
             C7320 * C1706 + C7321 * C32263 + C7322 * C1707 + C7323 * C32241) *
                C5151 +
            ((C6057 - C6056) * C1705 + (C6059 - C6058) * C32274 +
             C7324 * C1706 + C7325 * C32263 + C7326 * C1707 + C7327 * C32241) *
                C5152 +
            ((C6061 - C6060) * C1705 + (C6063 - C6062) * C32274 +
             (C6443 - C6444) * C1706 + (C6445 - C6446) * C32263 +
             (C6683 - C6684) * C1707 + (C6685 - C6686) * C32241) *
                C32238) *
               C530 +
           ((C7318 * C1705 + C7319 * C32274 + C6828 * C1706 + C6829 * C32263 +
             (C6835 - C6834) * C1707 + (C6837 - C6836) * C32241) *
                C5151 +
            (C6677 * C1705 + C6678 * C32274 + C6690 * C1706 + C6691 * C32263 +
             (C6839 - C6838) * C1707 + (C6841 - C6840) * C32241) *
                C5152 +
            ((C6444 - C6443) * C1705 + (C6446 - C6445) * C32274 +
             (C6684 - C6683) * C1706 + (C6686 - C6685) * C32263 +
             (C31862 * C7314 - C5980 * C7313) * C1707 +
             (C31862 * C7316 - C5980 * C7315) * C32241) *
                C32238) *
               C531) *
              C441) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C32270 * C126 - C5154 * C119 + C32257 * C127 - C5155 * C120 +
             C32227 * C128 - C5156 * C121) *
                C10043 +
            (C32270 * C140 - C5154 * C131 + C32257 * C141 - C5155 * C132 +
             C32227 * C142 - C5156 * C133) *
                C10040 +
            (C10267 - C10268 + C10269 - C10270 + C10271 - C10272) * C10044 +
            (C10273 - C10274 + C10275 - C10276 + C10277 - C10278) * C10041 +
            C10311 * C10045 + C10312 * C32241) *
               C31955 * C530 +
           ((C10268 - C10267 + C10270 - C10269 + C10272 - C10271) * C10043 +
            (C10274 - C10273 + C10276 - C10275 + C10278 - C10277) * C10040 +
            (C10280 - C10279 + C10282 - C10281 + C10284 - C10283) * C10044 +
            (C10286 - C10285 + C10288 - C10287 + C10290 - C10289) * C10041 +
            (C10291 - C10292 + C10293 - C10294 + C10295 - C10296) * C10045 +
            (C10297 - C10298 + C10299 - C10300 + C10301 - C10302) * C32241) *
               C31955 * C531) *
              C440 +
          (((C5269 - C5268 + C5271 - C5270 + C5273 - C5272) * C10043 +
            (C5275 - C5274 + C5277 - C5276 + C5279 - C5278) * C10040 +
            (C5889 - C5890 + C5891 - C5892 + C5893 - C5894) * C10044 +
            (C5895 - C5896 + C5897 - C5898 + C5899 - C5900) * C10041 +
            (C10775 - C10776 + C10777 - C10778 + C10779 - C10780) * C10045 +
            (C10781 - C10782 + C10783 - C10784 + C10785 - C10786) * C32241) *
               C31955 * C530 +
           ((C5890 - C5889 + C5892 - C5891 + C5894 - C5893) * C10043 +
            (C5896 - C5895 + C5898 - C5897 + C5900 - C5899) * C10040 +
            (C10776 - C10775 + C10778 - C10777 + C10780 - C10779) * C10044 +
            (C10782 - C10781 + C10784 - C10783 + C10786 - C10785) * C10041 +
            (C32270 * C2471 - C5154 * C2468 + C32257 * C2472 - C5155 * C2469 +
             C32227 * C2473 - C5156 * C2470) *
                C10045 +
            (C32270 * C2477 - C5154 * C2474 + C32257 * C2478 - C5155 * C2475 +
             C32227 * C2479 - C5156 * C2476) *
                C32241) *
               C31955 * C531) *
              C441) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31862 * C126 - C5980 * C119) * C10043 +
             (C31862 * C140 - C5980 * C131) * C10040 +
             (C6820 - C6821) * C10044 + (C6822 - C6823) * C10041 +
             C6842 * C10045 + C6843 * C32241) *
                C32273 +
            ((C6052 - C6053) * C10043 + (C6054 - C6055) * C10040 +
             C7318 * C10044 + C7319 * C10041 + C6828 * C10045 +
             C6829 * C32241) *
                C32261 +
            C11017 * C32238) *
               C530 +
           (((C6821 - C6820) * C10043 + (C6823 - C6822) * C10040 +
             (C6825 - C6824) * C10044 + (C6827 - C6826) * C10041 +
             (C6830 - C6831) * C10045 + (C6832 - C6833) * C32241) *
                C32273 +
            (C7320 * C10043 + C7321 * C10040 + C7322 * C10044 + C7323 * C10041 +
             (C6834 - C6835) * C10045 + (C6836 - C6837) * C32241) *
                C32261 +
            (C7324 * C10043 + C7325 * C10040 + C7326 * C10044 + C7327 * C10041 +
             (C6838 - C6839) * C10045 + (C6840 - C6841) * C32241) *
                C32238) *
               C531) *
              C440 +
          ((((C6053 - C6052) * C10043 + (C6055 - C6054) * C10040 +
             C7320 * C10044 + C7321 * C10041 + C7322 * C10045 +
             C7323 * C32241) *
                C32273 +
            ((C6057 - C6056) * C10043 + (C6059 - C6058) * C10040 +
             C7324 * C10044 + C7325 * C10041 + C7326 * C10045 +
             C7327 * C32241) *
                C32261 +
            ((C6061 - C6060) * C10043 + (C6063 - C6062) * C10040 +
             C9929 * C10044 + C9930 * C10041 + (C6683 - C6684) * C10045 +
             (C6685 - C6686) * C32241) *
                C32238) *
               C530 +
           ((C7318 * C10043 + C7319 * C10040 + C6828 * C10044 + C6829 * C10041 +
             (C6835 - C6834) * C10045 + (C6837 - C6836) * C32241) *
                C32273 +
            (C6677 * C10043 + C6678 * C10040 + C6690 * C10044 + C6691 * C10041 +
             (C6839 - C6838) * C10045 + (C6841 - C6840) * C32241) *
                C32261 +
            (C9427 * C10043 + C9428 * C10040 + (C6684 - C6683) * C10044 +
             (C6686 - C6685) * C10041 +
             (C31862 * C7314 - C5980 * C7313) * C10045 +
             (C31862 * C7316 - C5980 * C7315) * C32241) *
                C32238) *
               C531) *
              C441) *
         C31899) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C31862 * C126 - C5980 * C119) * C11632 +
            (C31862 * C140 - C5980 * C131) * C11627 + (C6820 - C6821) * C11633 +
            (C6822 - C6823) * C11628 + C6842 * C11634 + C6843 * C11629 +
            C11770 * C11635 + C11771 * C11630 + C11780 * C11636 +
            C11781 * C11631) *
               C31955 * C530 +
           ((C6821 - C6820) * C11632 + (C6823 - C6822) * C11627 +
            (C6825 - C6824) * C11633 + (C6827 - C6826) * C11628 +
            (C6830 - C6831) * C11634 + (C6832 - C6833) * C11629 +
            (C11773 - C11772) * C11635 + (C11775 - C11774) * C11630 +
            (C11776 - C11777) * C11636 + (C11778 - C11779) * C11631) *
               C31955 * C531) *
              C440 +
          (((C6053 - C6052) * C11632 + (C6055 - C6054) * C11627 +
            C7320 * C11633 + C7321 * C11628 + C7322 * C11634 + C7323 * C11629 +
            (C6834 - C6835) * C11635 + (C6836 - C6837) * C11630 +
            (C12048 - C12049) * C11636 + (C12050 - C12051) * C11631) *
               C31955 * C530 +
           (C7318 * C11632 + C7319 * C11627 + C6828 * C11633 + C6829 * C11628 +
            (C6835 - C6834) * C11634 + (C6837 - C6836) * C11629 +
            (C12049 - C12048) * C11635 + (C12051 - C12050) * C11630 +
            (C31862 * C12044 - C5980 * C12043) * C11636 +
            (C31862 * C12046 - C5980 * C12045) * C11631) *
               C31955 * C531) *
              C441) *
         C31899) /
            (p * q * std::sqrt(p + q));
    d2ee[62] +=
        (-0.25 * std::pow(Pi, 2.5) *
             (((C101 * C126 - C113 * C119 + C102 * C127 - C114 * C120 +
                C103 * C128 - C115 * C121 + C104 * C129 - C116 * C122 +
                C105 * C130 - C117 * C123) *
                   C118 +
               (C101 * C140 - C113 * C131 + C102 * C141 - C114 * C132 +
                C103 * C142 - C115 * C133 + C104 * C143 - C116 * C134 +
                C105 * C144 - C117 * C135) *
                   C31966) *
                  C31955 * C31925 * C31911 * C110 +
              ((C113 * C120 - C101 * C127 + C114 * C121 - C102 * C128 +
                C115 * C122 - C103 * C129 + C116 * C123 - C104 * C130 +
                C117 * C124 - C105 * C136) *
                   C118 +
               (C113 * C132 - C101 * C141 + C114 * C133 - C102 * C142 +
                C115 * C134 - C103 * C143 + C116 * C135 - C104 * C144 +
                C117 * C137 - C105 * C145) *
                   C31966) *
                  C31955 * C31925 * C31911 * C111 +
              ((C101 * C128 - C113 * C121 + C102 * C129 - C114 * C122 +
                C103 * C130 - C115 * C123 + C104 * C136 - C116 * C124 +
                C105 * C138 - C117 * C125) *
                   C118 +
               (C101 * C142 - C113 * C133 + C102 * C143 - C114 * C134 +
                C103 * C144 - C115 * C135 + C104 * C145 - C116 * C137 +
                C105 * C146 - C117 * C139) *
                   C31966) *
                  C31955 * C31925 * C31911 * C112) -
         0.25 * std::pow(Pi, 2.5) *
             (((C101 * C126 - C113 * C119 + C102 * C127 - C114 * C120 +
                C103 * C128 - C115 * C121 + C104 * C129 - C116 * C122 +
                C105 * C130 - C117 * C123) *
                   C118 +
               (C101 * C140 - C113 * C131 + C102 * C141 - C114 * C132 +
                C103 * C142 - C115 * C133 + C104 * C143 - C116 * C134 +
                C105 * C144 - C117 * C135) *
                   C31966) *
                  C31955 * C31925 * C209 +
              ((C113 * C213 - C101 * C223 + C114 * C214 - C102 * C224 +
                C115 * C215 - C103 * C225 + C116 * C216 - C104 * C226 +
                C117 * C217 - C105 * C227) *
                   C118 +
               (C113 * C228 - C101 * C243 + C114 * C229 - C102 * C244 +
                C115 * C230 - C103 * C245 + C116 * C231 - C104 * C246 +
                C117 * C232 - C105 * C247) *
                   C31966) *
                  C31955 * C31925 * C210 +
              ((C101 * C233 - C113 * C218 + C102 * C234 - C114 * C219 +
                C103 * C235 - C115 * C220 + C104 * C236 - C116 * C221 +
                C105 * C237 - C117 * C222) *
                   C118 +
               (C101 * C248 - C113 * C238 + C102 * C249 - C114 * C239 +
                C103 * C250 - C115 * C240 + C104 * C251 - C116 * C241 +
                C105 * C252 - C117 * C242) *
                   C31966) *
                  C31955 * C31925 * C211) *
             C31899 +
         0.5 * std::pow(Pi, 2.5) *
             (((C101 * C126 - C113 * C119 + C102 * C127 - C114 * C120 +
                C103 * C128 - C115 * C121 + C104 * C129 - C116 * C122 +
                C105 * C130 - C117 * C123) *
                   C118 +
               (C101 * C140 - C113 * C131 + C102 * C141 - C114 * C132 +
                C103 * C142 - C115 * C133 + C104 * C143 - C116 * C134 +
                C105 * C144 - C117 * C135) *
                   C31966) *
                  C31955 * C315 +
              ((C113 * C318 - C101 * C328 + C114 * C319 - C102 * C329 +
                C115 * C320 - C103 * C330 + C116 * C321 - C104 * C331 +
                C117 * C322 - C105 * C332) *
                   C118 +
               (C113 * C333 - C101 * C348 + C114 * C334 - C102 * C349 +
                C115 * C335 - C103 * C350 + C116 * C336 - C104 * C351 +
                C117 * C337 - C105 * C352) *
                   C31966) *
                  C31955 * C316 +
              ((C101 * C338 - C113 * C323 + C102 * C339 - C114 * C324 +
                C103 * C340 - C115 * C325 + C104 * C341 - C116 * C326 +
                C105 * C342 - C117 * C327) *
                   C118 +
               (C101 * C353 - C113 * C343 + C102 * C354 - C114 * C344 +
                C103 * C355 - C115 * C345 + C104 * C356 - C116 * C346 +
                C105 * C357 - C117 * C347) *
                   C31966) *
                  C31955 * C317) *
             C31911 * C31899 -
         0.25 * std::pow(Pi, 2.5) *
             ((((C748 * C126 - C754 * C119 + C749 * C127 - C755 * C120 +
                 C32227 * C128 - C756 * C121) *
                    C118 +
                (C748 * C140 - C754 * C131 + C749 * C141 - C755 * C132 +
                 C32227 * C142 - C756 * C133) *
                    C31966) *
                   C32273 +
               ((C748 * C223 - C754 * C213 + C749 * C224 - C755 * C214 +
                 C32227 * C225 - C756 * C215) *
                    C118 +
                (C748 * C243 - C754 * C228 + C749 * C244 - C755 * C229 +
                 C32227 * C245 - C756 * C230) *
                    C31966) *
                   C32261 +
               ((C748 * C233 - C754 * C218 + C749 * C234 - C755 * C219 +
                 C32227 * C235 - C756 * C220) *
                    C118 +
                (C748 * C248 - C754 * C238 + C749 * C249 - C755 * C239 +
                 C32227 * C250 - C756 * C240) *
                    C31966) *
                   C32238) *
                  C31925 * C31911 * C110 +
              (((C754 * C120 - C748 * C127 + C755 * C121 - C749 * C128 +
                 C756 * C122 - C32227 * C129) *
                    C118 +
                (C754 * C132 - C748 * C141 + C755 * C133 - C749 * C142 +
                 C756 * C134 - C32227 * C143) *
                    C31966) *
                   C32273 +
               ((C754 * C214 - C748 * C224 + C755 * C215 - C749 * C225 +
                 C756 * C216 - C32227 * C226) *
                    C118 +
                (C754 * C229 - C748 * C244 + C755 * C230 - C749 * C245 +
                 C756 * C231 - C32227 * C246) *
                    C31966) *
                   C32261 +
               ((C754 * C219 - C748 * C234 + C755 * C220 - C749 * C235 +
                 C756 * C221 - C32227 * C236) *
                    C118 +
                (C754 * C239 - C748 * C249 + C755 * C240 - C749 * C250 +
                 C756 * C241 - C32227 * C251) *
                    C31966) *
                   C32238) *
                  C31925 * C31911 * C111 +
              (((C748 * C128 - C754 * C121 + C749 * C129 - C755 * C122 +
                 C32227 * C130 - C756 * C123) *
                    C118 +
                (C748 * C142 - C754 * C133 + C749 * C143 - C755 * C134 +
                 C32227 * C144 - C756 * C135) *
                    C31966) *
                   C32273 +
               ((C748 * C225 - C754 * C215 + C749 * C226 - C755 * C216 +
                 C32227 * C227 - C756 * C217) *
                    C118 +
                (C748 * C245 - C754 * C230 + C749 * C246 - C755 * C231 +
                 C32227 * C247 - C756 * C232) *
                    C31966) *
                   C32261 +
               ((C748 * C235 - C754 * C220 + C749 * C236 - C755 * C221 +
                 C32227 * C237 - C756 * C222) *
                    C118 +
                (C748 * C250 - C754 * C240 + C749 * C251 - C755 * C241 +
                 C32227 * C252 - C756 * C242) *
                    C31966) *
                   C32238) *
                  C31925 * C31911 * C112) -
         0.25 * std::pow(Pi, 2.5) *
             ((((C748 * C126 - C754 * C119 + C749 * C127 - C755 * C120 +
                 C32227 * C128 - C756 * C121) *
                    C118 +
                (C748 * C140 - C754 * C131 + C749 * C141 - C755 * C132 +
                 C32227 * C142 - C756 * C133) *
                    C31966) *
                   C32273 +
               ((C892 - C893 + C894 - C895 + C896 - C897) * C118 +
                (C898 - C899 + C900 - C901 + C902 - C903) * C31966) *
                   C32261 +
               C940 * C32238) *
                  C31925 * C209 +
              (((C893 - C892 + C895 - C894 + C897 - C896) * C118 +
                (C899 - C898 + C901 - C900 + C903 - C902) * C31966) *
                   C32273 +
               ((C905 - C904 + C907 - C906 + C909 - C908) * C118 +
                (C911 - C910 + C913 - C912 + C915 - C914) * C31966) *
                   C32261 +
               ((C916 - C917 + C918 - C919 + C920 - C921) * C118 +
                (C922 - C923 + C924 - C925 + C926 - C927) * C31966) *
                   C32238) *
                  C31925 * C210 +
              (C940 * C32273 +
               ((C917 - C916 + C919 - C918 + C921 - C920) * C118 +
                (C923 - C922 + C925 - C924 + C927 - C926) * C31966) *
                   C32261 +
               ((C748 * C879 - C754 * C870 + C749 * C880 - C755 * C871 +
                 C32227 * C881 - C756 * C872) *
                    C118 +
                (C748 * C888 - C754 * C882 + C749 * C889 - C755 * C883 +
                 C32227 * C890 - C756 * C884) *
                    C31966) *
                   C32238) *
                  C31925 * C211) *
             C31899 +
         0.5 * std::pow(Pi, 2.5) *
             ((((C748 * C126 - C754 * C119 + C749 * C127 - C755 * C120 +
                 C32227 * C128 - C756 * C121) *
                    C118 +
                (C748 * C140 - C754 * C131 + C749 * C141 - C755 * C132 +
                 C32227 * C142 - C756 * C133) *
                    C31966) *
                   C32273 +
               ((C892 - C893 + C894 - C895 + C896 - C897) * C118 +
                (C898 - C899 + C900 - C901 + C902 - C903) * C31966) *
                   C32261 +
               C940 * C32238) *
                  C315 +
              (((C754 * C318 - C748 * C328 + C755 * C319 - C749 * C329 +
                 C756 * C320 - C32227 * C330) *
                    C118 +
                (C754 * C333 - C748 * C348 + C755 * C334 - C749 * C349 +
                 C756 * C335 - C32227 * C350) *
                    C31966) *
                   C32273 +
               ((C754 * C618 - C748 * C623 + C755 * C619 - C749 * C624 +
                 C756 * C620 - C32227 * C625) *
                    C118 +
                (C754 * C628 - C748 * C633 + C755 * C629 - C749 * C634 +
                 C756 * C630 - C32227 * C635) *
                    C31966) *
                   C32261 +
               ((C754 * C1050 - C748 * C1059 + C755 * C1051 - C749 * C1060 +
                 C756 * C1052 - C32227 * C1061) *
                    C118 +
                (C754 * C1062 - C748 * C1077 + C755 * C1063 - C749 * C1078 +
                 C756 * C1064 - C32227 * C1079) *
                    C31966) *
                   C32238) *
                  C316 +
              (((C748 * C338 - C754 * C323 + C749 * C339 - C755 * C324 +
                 C32227 * C340 - C756 * C325) *
                    C118 +
                (C748 * C353 - C754 * C343 + C749 * C354 - C755 * C344 +
                 C32227 * C355 - C756 * C345) *
                    C31966) *
                   C32273 +
               ((C748 * C1065 - C754 * C1053 + C749 * C1066 - C755 * C1054 +
                 C32227 * C1067 - C756 * C1055) *
                    C118 +
                (C748 * C1080 - C754 * C1068 + C749 * C1081 - C755 * C1069 +
                 C32227 * C1082 - C756 * C1070) *
                    C31966) *
                   C32261 +
               ((C748 * C1071 - C754 * C1056 + C749 * C1072 - C755 * C1057 +
                 C32227 * C1073 - C756 * C1058) *
                    C118 +
                (C748 * C1083 - C754 * C1074 + C749 * C1084 - C755 * C1075 +
                 C32227 * C1085 - C756 * C1076) *
                    C31966) *
                   C32238) *
                  C317) *
             C31911 * C31899 +
         0.5 * std::pow(Pi, 2.5) *
             (((C748 * C126 - C754 * C119 + C749 * C127 - C755 * C120 +
                C32227 * C128 - C756 * C121) *
                   C1705 +
               (C748 * C140 - C754 * C131 + C749 * C141 - C755 * C132 +
                C32227 * C142 - C756 * C133) *
                   C32274 +
               (C748 * C328 - C754 * C318 + C749 * C329 - C755 * C319 +
                C32227 * C330 - C756 * C320) *
                   C1706 +
               (C748 * C348 - C754 * C333 + C749 * C349 - C755 * C334 +
                C32227 * C350 - C756 * C335) *
                   C32263 +
               (C748 * C338 - C754 * C323 + C749 * C339 - C755 * C324 +
                C32227 * C340 - C756 * C325) *
                   C1707 +
               (C748 * C353 - C754 * C343 + C749 * C354 - C755 * C344 +
                C32227 * C355 - C756 * C345) *
                   C32241) *
                  C31955 * C31925 * C31911 * C110 +
              ((C754 * C120 - C748 * C127 + C755 * C121 - C749 * C128 +
                C756 * C122 - C32227 * C129) *
                   C1705 +
               (C754 * C132 - C748 * C141 + C755 * C133 - C749 * C142 +
                C756 * C134 - C32227 * C143) *
                   C32274 +
               (C754 * C319 - C748 * C329 + C755 * C320 - C749 * C330 +
                C756 * C321 - C32227 * C331) *
                   C1706 +
               (C754 * C334 - C748 * C349 + C755 * C335 - C749 * C350 +
                C756 * C336 - C32227 * C351) *
                   C32263 +
               (C754 * C324 - C748 * C339 + C755 * C325 - C749 * C340 +
                C756 * C326 - C32227 * C341) *
                   C1707 +
               (C754 * C344 - C748 * C354 + C755 * C345 - C749 * C355 +
                C756 * C346 - C32227 * C356) *
                   C32241) *
                  C31955 * C31925 * C31911 * C111 +
              ((C748 * C128 - C754 * C121 + C749 * C129 - C755 * C122 +
                C32227 * C130 - C756 * C123) *
                   C1705 +
               (C748 * C142 - C754 * C133 + C749 * C143 - C755 * C134 +
                C32227 * C144 - C756 * C135) *
                   C32274 +
               (C748 * C330 - C754 * C320 + C749 * C331 - C755 * C321 +
                C32227 * C332 - C756 * C322) *
                   C1706 +
               (C748 * C350 - C754 * C335 + C749 * C351 - C755 * C336 +
                C32227 * C352 - C756 * C337) *
                   C32263 +
               (C748 * C340 - C754 * C325 + C749 * C341 - C755 * C326 +
                C32227 * C342 - C756 * C327) *
                   C1707 +
               (C748 * C355 - C754 * C345 + C749 * C356 - C755 * C346 +
                C32227 * C357 - C756 * C347) *
                   C32241) *
                  C31955 * C31925 * C31911 * C112) +
         0.5 * std::pow(Pi, 2.5) *
             (((C748 * C126 - C754 * C119 + C749 * C127 - C755 * C120 +
                C32227 * C128 - C756 * C121) *
                   C1705 +
               (C748 * C140 - C754 * C131 + C749 * C141 - C755 * C132 +
                C32227 * C142 - C756 * C133) *
                   C32274 +
               (C748 * C328 - C754 * C318 + C749 * C329 - C755 * C319 +
                C32227 * C330 - C756 * C320) *
                   C1706 +
               (C748 * C348 - C754 * C333 + C749 * C349 - C755 * C334 +
                C32227 * C350 - C756 * C335) *
                   C32263 +
               (C748 * C338 - C754 * C323 + C749 * C339 - C755 * C324 +
                C32227 * C340 - C756 * C325) *
                   C1707 +
               (C748 * C353 - C754 * C343 + C749 * C354 - C755 * C344 +
                C32227 * C355 - C756 * C345) *
                   C32241) *
                  C31955 * C31925 * C209 +
              ((C893 - C892 + C895 - C894 + C897 - C896) * C1705 +
               (C899 - C898 + C901 - C900 + C903 - C902) * C32274 +
               (C1569 - C1570 + C1571 - C1572 + C1573 - C1574) * C1706 +
               (C1575 - C1576 + C1577 - C1578 + C1579 - C1580) * C32263 +
               (C754 * C1053 - C748 * C1065 + C755 * C1054 - C749 * C1066 +
                C756 * C1055 - C32227 * C1067) *
                   C1707 +
               (C754 * C1068 - C748 * C1080 + C755 * C1069 - C749 * C1081 +
                C756 * C1070 - C32227 * C1082) *
                   C32241) *
                  C31955 * C31925 * C210 +
              (C936 * C1705 + C937 * C32274 +
               (C1582 - C1581 + C1584 - C1583 + C1586 - C1585) * C1706 +
               (C1588 - C1587 + C1590 - C1589 + C1592 - C1591) * C32263 +
               (C748 * C1071 - C754 * C1056 + C749 * C1072 - C755 * C1057 +
                C32227 * C1073 - C756 * C1058) *
                   C1707 +
               (C748 * C1083 - C754 * C1074 + C749 * C1084 - C755 * C1075 +
                C32227 * C1085 - C756 * C1076) *
                   C32241) *
                  C31955 * C31925 * C211) *
             C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C748 * C126 - C754 * C119 + C749 * C127 - C755 * C120 +
            C32227 * C128 - C756 * C121) *
               C1705 +
           (C748 * C140 - C754 * C131 + C749 * C141 - C755 * C132 +
            C32227 * C142 - C756 * C133) *
               C32274 +
           (C1953 - C1954 + C1955 - C1956 + C1957 - C1958) * C1706 +
           (C1959 - C1960 + C1961 - C1962 + C1963 - C1964) * C32263 +
           C1997 * C1707 + C1998 * C32241) *
              C31955 * C315 +
          ((C1954 - C1953 + C1956 - C1955 + C1958 - C1957) * C1705 +
           (C1960 - C1959 + C1962 - C1961 + C1964 - C1963) * C32274 +
           (C1966 - C1965 + C1968 - C1967 + C1970 - C1969) * C1706 +
           (C1972 - C1971 + C1974 - C1973 + C1976 - C1975) * C32263 +
           (C1977 - C1978 + C1979 - C1980 + C1981 - C1982) * C1707 +
           (C1983 - C1984 + C1985 - C1986 + C1987 - C1988) * C32241) *
              C31955 * C316 +
          (C1997 * C1705 + C1998 * C32274 +
           (C1978 - C1977 + C1980 - C1979 + C1982 - C1981) * C1706 +
           (C1984 - C1983 + C1986 - C1985 + C1988 - C1987) * C32263 +
           (C748 * C1940 - C754 * C1931 + C749 * C1941 - C755 * C1932 +
            C32227 * C1942 - C756 * C1933) *
               C1707 +
           (C748 * C1949 - C754 * C1943 + C749 * C1950 - C755 * C1944 +
            C32227 * C1951 - C756 * C1945) *
               C32241) *
              C31955 * C317) *
         C31911 * C31899) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C32270 * C126 - C5154 * C119 + C32257 * C127 - C5155 * C120 +
             C32227 * C128 - C5156 * C121) *
                C118 +
            (C32270 * C140 - C5154 * C131 + C32257 * C141 - C5155 * C132 +
             C32227 * C142 - C5156 * C133) *
                C31966) *
               C5151 +
           ((C32270 * C223 - C5154 * C213 + C32257 * C224 - C5155 * C214 +
             C32227 * C225 - C5156 * C215) *
                C118 +
            (C32270 * C243 - C5154 * C228 + C32257 * C244 - C5155 * C229 +
             C32227 * C245 - C5156 * C230) *
                C31966) *
               C5152 +
           ((C32270 * C233 - C5154 * C218 + C32257 * C234 - C5155 * C219 +
             C32227 * C235 - C5156 * C220) *
                C118 +
            (C32270 * C248 - C5154 * C238 + C32257 * C249 - C5155 * C239 +
             C32227 * C250 - C5156 * C240) *
                C31966) *
               C32238) *
              C31925 * C31911 * C110 +
          (((C5154 * C120 - C32270 * C127 + C5155 * C121 - C32257 * C128 +
             C5156 * C122 - C32227 * C129) *
                C118 +
            (C5154 * C132 - C32270 * C141 + C5155 * C133 - C32257 * C142 +
             C5156 * C134 - C32227 * C143) *
                C31966) *
               C5151 +
           ((C5154 * C214 - C32270 * C224 + C5155 * C215 - C32257 * C225 +
             C5156 * C216 - C32227 * C226) *
                C118 +
            (C5154 * C229 - C32270 * C244 + C5155 * C230 - C32257 * C245 +
             C5156 * C231 - C32227 * C246) *
                C31966) *
               C5152 +
           ((C5154 * C219 - C32270 * C234 + C5155 * C220 - C32257 * C235 +
             C5156 * C221 - C32227 * C236) *
                C118 +
            (C5154 * C239 - C32270 * C249 + C5155 * C240 - C32257 * C250 +
             C5156 * C241 - C32227 * C251) *
                C31966) *
               C32238) *
              C31925 * C31911 * C111 +
          (((C32270 * C128 - C5154 * C121 + C32257 * C129 - C5155 * C122 +
             C32227 * C130 - C5156 * C123) *
                C118 +
            (C32270 * C142 - C5154 * C133 + C32257 * C143 - C5155 * C134 +
             C32227 * C144 - C5156 * C135) *
                C31966) *
               C5151 +
           ((C32270 * C225 - C5154 * C215 + C32257 * C226 - C5155 * C216 +
             C32227 * C227 - C5156 * C217) *
                C118 +
            (C32270 * C245 - C5154 * C230 + C32257 * C246 - C5155 * C231 +
             C32227 * C247 - C5156 * C232) *
                C31966) *
               C5152 +
           ((C32270 * C235 - C5154 * C220 + C32257 * C236 - C5155 * C221 +
             C32227 * C237 - C5156 * C222) *
                C118 +
            (C32270 * C250 - C5154 * C240 + C32257 * C251 - C5155 * C241 +
             C32227 * C252 - C5156 * C242) *
                C31966) *
               C32238) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C32270 * C126 - C5154 * C119 + C32257 * C127 - C5155 * C120 +
             C32227 * C128 - C5156 * C121) *
                C118 +
            (C32270 * C140 - C5154 * C131 + C32257 * C141 - C5155 * C132 +
             C32227 * C142 - C5156 * C133) *
                C31966) *
               C5151 +
           ((C5268 - C5269 + C5270 - C5271 + C5272 - C5273) * C118 +
            (C5274 - C5275 + C5276 - C5277 + C5278 - C5279) * C31966) *
               C5152 +
           C5316 * C32238) *
              C31925 * C209 +
          (((C5269 - C5268 + C5271 - C5270 + C5273 - C5272) * C118 +
            (C5275 - C5274 + C5277 - C5276 + C5279 - C5278) * C31966) *
               C5151 +
           ((C5281 - C5280 + C5283 - C5282 + C5285 - C5284) * C118 +
            (C5287 - C5286 + C5289 - C5288 + C5291 - C5290) * C31966) *
               C5152 +
           ((C5292 - C5293 + C5294 - C5295 + C5296 - C5297) * C118 +
            (C5298 - C5299 + C5300 - C5301 + C5302 - C5303) * C31966) *
               C32238) *
              C31925 * C210 +
          (C5316 * C5151 +
           ((C5293 - C5292 + C5295 - C5294 + C5297 - C5296) * C118 +
            (C5299 - C5298 + C5301 - C5300 + C5303 - C5302) * C31966) *
               C5152 +
           ((C32270 * C879 - C5154 * C870 + C32257 * C880 - C5155 * C871 +
             C32227 * C881 - C5156 * C872) *
                C118 +
            (C32270 * C888 - C5154 * C882 + C32257 * C889 - C5155 * C883 +
             C32227 * C890 - C5156 * C884) *
                C31966) *
               C32238) *
              C31925 * C211) *
         C31899) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C32270 * C126 - C5154 * C119 + C32257 * C127 - C5155 * C120 +
             C32227 * C128 - C5156 * C121) *
                C118 +
            (C32270 * C140 - C5154 * C131 + C32257 * C141 - C5155 * C132 +
             C32227 * C142 - C5156 * C133) *
                C31966) *
               C5151 +
           ((C5268 - C5269 + C5270 - C5271 + C5272 - C5273) * C118 +
            (C5274 - C5275 + C5276 - C5277 + C5278 - C5279) * C31966) *
               C5152 +
           C5316 * C32238) *
              C315 +
          (((C5154 * C318 - C32270 * C328 + C5155 * C319 - C32257 * C329 +
             C5156 * C320 - C32227 * C330) *
                C118 +
            (C5154 * C333 - C32270 * C348 + C5155 * C334 - C32257 * C349 +
             C5156 * C335 - C32227 * C350) *
                C31966) *
               C5151 +
           ((C5154 * C618 - C32270 * C623 + C5155 * C619 - C32257 * C624 +
             C5156 * C620 - C32227 * C625) *
                C118 +
            (C5154 * C628 - C32270 * C633 + C5155 * C629 - C32257 * C634 +
             C5156 * C630 - C32227 * C635) *
                C31966) *
               C5152 +
           ((C5154 * C1050 - C32270 * C1059 + C5155 * C1051 - C32257 * C1060 +
             C5156 * C1052 - C32227 * C1061) *
                C118 +
            (C5154 * C1062 - C32270 * C1077 + C5155 * C1063 - C32257 * C1078 +
             C5156 * C1064 - C32227 * C1079) *
                C31966) *
               C32238) *
              C316 +
          (((C32270 * C338 - C5154 * C323 + C32257 * C339 - C5155 * C324 +
             C32227 * C340 - C5156 * C325) *
                C118 +
            (C32270 * C353 - C5154 * C343 + C32257 * C354 - C5155 * C344 +
             C32227 * C355 - C5156 * C345) *
                C31966) *
               C5151 +
           ((C32270 * C1065 - C5154 * C1053 + C32257 * C1066 - C5155 * C1054 +
             C32227 * C1067 - C5156 * C1055) *
                C118 +
            (C32270 * C1080 - C5154 * C1068 + C32257 * C1081 - C5155 * C1069 +
             C32227 * C1082 - C5156 * C1070) *
                C31966) *
               C5152 +
           ((C32270 * C1071 - C5154 * C1056 + C32257 * C1072 - C5155 * C1057 +
             C32227 * C1073 - C5156 * C1058) *
                C118 +
            (C32270 * C1083 - C5154 * C1074 + C32257 * C1084 - C5155 * C1075 +
             C32227 * C1085 - C5156 * C1076) *
                C31966) *
               C32238) *
              C317) *
         C31911 * C31899) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C31862 * C126 - C5980 * C119) * C118 +
            (C31862 * C140 - C5980 * C131) * C31966) *
               C5975 +
           ((C31862 * C223 - C5980 * C213) * C118 +
            (C31862 * C243 - C5980 * C228) * C31966) *
               C5976 +
           ((C31862 * C233 - C5980 * C218) * C118 +
            (C31862 * C248 - C5980 * C238) * C31966) *
               C5977 +
           ((C31862 * C873 - C5980 * C867) * C118 +
            (C31862 * C885 - C5980 * C876) * C31966) *
               C5978 +
           ((C31862 * C879 - C5980 * C870) * C118 +
            (C31862 * C888 - C5980 * C882) * C31966) *
               C5979) *
              C31925 * C31911 * C110 +
          (((C5980 * C120 - C31862 * C127) * C118 +
            (C5980 * C132 - C31862 * C141) * C31966) *
               C5975 +
           ((C5980 * C214 - C31862 * C224) * C118 +
            (C5980 * C229 - C31862 * C244) * C31966) *
               C5976 +
           ((C5980 * C219 - C31862 * C234) * C118 +
            (C5980 * C239 - C31862 * C249) * C31966) *
               C5977 +
           ((C5980 * C868 - C31862 * C874) * C118 +
            (C5980 * C877 - C31862 * C886) * C31966) *
               C5978 +
           ((C5980 * C871 - C31862 * C880) * C118 +
            (C5980 * C883 - C31862 * C889) * C31966) *
               C5979) *
              C31925 * C31911 * C111 +
          (((C31862 * C128 - C5980 * C121) * C118 +
            (C31862 * C142 - C5980 * C133) * C31966) *
               C5975 +
           ((C31862 * C225 - C5980 * C215) * C118 +
            (C31862 * C245 - C5980 * C230) * C31966) *
               C5976 +
           ((C31862 * C235 - C5980 * C220) * C118 +
            (C31862 * C250 - C5980 * C240) * C31966) *
               C5977 +
           ((C31862 * C875 - C5980 * C869) * C118 +
            (C31862 * C887 - C5980 * C878) * C31966) *
               C5978 +
           ((C31862 * C881 - C5980 * C872) * C118 +
            (C31862 * C890 - C5980 * C884) * C31966) *
               C5979) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C31862 * C126 - C5980 * C119) * C118 +
            (C31862 * C140 - C5980 * C131) * C31966) *
               C5975 +
           ((C6052 - C6053) * C118 + (C6054 - C6055) * C31966) * C5976 +
           C6084 * C5977 + C6085 * C5978 + C6086 * C5979) *
              C31925 * C209 +
          (((C6053 - C6052) * C118 + (C6055 - C6054) * C31966) * C5975 +
           ((C6057 - C6056) * C118 + (C6059 - C6058) * C31966) * C5976 +
           ((C6061 - C6060) * C118 + (C6063 - C6062) * C31966) * C5977 +
           ((C6065 - C6064) * C118 + (C6067 - C6066) * C31966) * C5978 +
           ((C6068 - C6069) * C118 + (C6070 - C6071) * C31966) * C5979) *
              C31925 * C210 +
          (C6084 * C5975 + C6085 * C5976 + C6086 * C5977 +
           ((C6069 - C6068) * C118 + (C6071 - C6070) * C31966) * C5978 +
           ((C31862 * C6047 - C5980 * C6044) * C118 +
            (C31862 * C6050 - C5980 * C6048) * C31966) *
               C5979) *
              C31925 * C211) *
         C31899) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C31862 * C126 - C5980 * C119) * C118 +
            (C31862 * C140 - C5980 * C131) * C31966) *
               C5975 +
           ((C6052 - C6053) * C118 + (C6054 - C6055) * C31966) * C5976 +
           C6084 * C5977 + C6085 * C5978 + C6086 * C5979) *
              C315 +
          (((C5980 * C318 - C31862 * C328) * C118 +
            (C5980 * C333 - C31862 * C348) * C31966) *
               C5975 +
           ((C5980 * C618 - C31862 * C623) * C118 +
            (C5980 * C628 - C31862 * C633) * C31966) *
               C5976 +
           ((C5980 * C1050 - C31862 * C1059) * C118 +
            (C5980 * C1062 - C31862 * C1077) * C31966) *
               C5977 +
           ((C5980 * C1556 - C31862 * C1559) * C118 +
            (C5980 * C1562 - C31862 * C1565) * C31966) *
               C5978 +
           ((C5980 * C6148 - C31862 * C6151) * C118 +
            (C5980 * C6152 - C31862 * C6157) * C31966) *
               C5979) *
              C316 +
          (((C31862 * C338 - C5980 * C323) * C118 +
            (C31862 * C353 - C5980 * C343) * C31966) *
               C5975 +
           ((C31862 * C1065 - C5980 * C1053) * C118 +
            (C31862 * C1080 - C5980 * C1068) * C31966) *
               C5976 +
           ((C31862 * C1071 - C5980 * C1056) * C118 +
            (C31862 * C1083 - C5980 * C1074) * C31966) *
               C5977 +
           ((C31862 * C6153 - C5980 * C6149) * C118 +
            (C31862 * C6158 - C5980 * C6154) * C31966) *
               C5978 +
           ((C31862 * C6155 - C5980 * C6150) * C118 +
            (C31862 * C6159 - C5980 * C6156) * C31966) *
               C5979) *
              C317) *
         C31911 * C31899) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C31862 * C126 - C5980 * C119) * C1705 +
            (C31862 * C140 - C5980 * C131) * C32274 +
            (C31862 * C328 - C5980 * C318) * C1706 +
            (C31862 * C348 - C5980 * C333) * C32263 +
            (C31862 * C338 - C5980 * C323) * C1707 +
            (C31862 * C353 - C5980 * C343) * C32241) *
               C5151 +
           ((C6052 - C6053) * C1705 + (C6054 - C6055) * C32274 +
            (C6436 - C6435) * C1706 + (C6438 - C6437) * C32263 +
            (C31862 * C1065 - C5980 * C1053) * C1707 +
            (C31862 * C1080 - C5980 * C1068) * C32241) *
               C5152 +
           (C6072 * C1705 + C6073 * C32274 + (C6440 - C6439) * C1706 +
            (C6442 - C6441) * C32263 +
            (C31862 * C1071 - C5980 * C1056) * C1707 +
            (C31862 * C1083 - C5980 * C1074) * C32241) *
               C32238) *
              C31925 * C31911 * C110 +
          (((C5980 * C120 - C31862 * C127) * C1705 +
            (C5980 * C132 - C31862 * C141) * C32274 +
            (C5980 * C319 - C31862 * C329) * C1706 +
            (C5980 * C334 - C31862 * C349) * C32263 +
            (C5980 * C324 - C31862 * C339) * C1707 +
            (C5980 * C344 - C31862 * C354) * C32241) *
               C5151 +
           ((C6247 - C6248) * C1705 + (C6249 - C6250) * C32274 +
            (C5980 * C619 - C31862 * C624) * C1706 +
            (C5980 * C629 - C31862 * C634) * C32263 +
            (C5980 * C1054 - C31862 * C1066) * C1707 +
            (C5980 * C1069 - C31862 * C1081) * C32241) *
               C5152 +
           ((C6251 - C6252) * C1705 + (C6253 - C6254) * C32274 +
            (C5980 * C1051 - C31862 * C1060) * C1706 +
            (C5980 * C1063 - C31862 * C1078) * C32263 +
            (C5980 * C1057 - C31862 * C1072) * C1707 +
            (C5980 * C1075 - C31862 * C1084) * C32241) *
               C32238) *
              C31925 * C31911 * C111 +
          (((C31862 * C128 - C5980 * C121) * C1705 +
            (C31862 * C142 - C5980 * C133) * C32274 +
            (C31862 * C330 - C5980 * C320) * C1706 +
            (C31862 * C350 - C5980 * C335) * C32263 +
            (C31862 * C340 - C5980 * C325) * C1707 +
            (C31862 * C355 - C5980 * C345) * C32241) *
               C5151 +
           ((C31862 * C225 - C5980 * C215) * C1705 +
            (C31862 * C245 - C5980 * C230) * C32274 +
            (C31862 * C625 - C5980 * C620) * C1706 +
            (C31862 * C635 - C5980 * C630) * C32263 +
            (C31862 * C1067 - C5980 * C1055) * C1707 +
            (C31862 * C1082 - C5980 * C1070) * C32241) *
               C5152 +
           ((C31862 * C235 - C5980 * C220) * C1705 +
            (C31862 * C250 - C5980 * C240) * C32274 +
            (C31862 * C1061 - C5980 * C1052) * C1706 +
            (C31862 * C1079 - C5980 * C1064) * C32263 +
            (C31862 * C1073 - C5980 * C1058) * C1707 +
            (C31862 * C1085 - C5980 * C1076) * C32241) *
               C32238) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C31862 * C126 - C5980 * C119) * C1705 +
            (C31862 * C140 - C5980 * C131) * C32274 +
            (C31862 * C328 - C5980 * C318) * C1706 +
            (C31862 * C348 - C5980 * C333) * C32263 +
            (C31862 * C338 - C5980 * C323) * C1707 +
            (C31862 * C353 - C5980 * C343) * C32241) *
               C5151 +
           ((C6052 - C6053) * C1705 + (C6054 - C6055) * C32274 +
            (C6436 - C6435) * C1706 + (C6438 - C6437) * C32263 +
            (C6671 - C6672) * C1707 + (C6673 - C6674) * C32241) *
               C5152 +
           C6697 * C32238) *
              C31925 * C209 +
          (((C6053 - C6052) * C1705 + (C6055 - C6054) * C32274 +
            (C6435 - C6436) * C1706 + (C6437 - C6438) * C32263 +
            (C6672 - C6671) * C1707 + (C6674 - C6673) * C32241) *
               C5151 +
           ((C6057 - C6056) * C1705 + (C6059 - C6058) * C32274 +
            (C6439 - C6440) * C1706 + (C6441 - C6442) * C32263 +
            (C6680 - C6679) * C1707 + (C6682 - C6681) * C32241) *
               C5152 +
           ((C6061 - C6060) * C1705 + (C6063 - C6062) * C32274 +
            (C6443 - C6444) * C1706 + (C6445 - C6446) * C32263 +
            (C6683 - C6684) * C1707 + (C6685 - C6686) * C32241) *
               C32238) *
              C31925 * C210 +
          (C6697 * C5151 +
           (C6074 * C1705 + C6075 * C32274 + (C6444 - C6443) * C1706 +
            (C6446 - C6445) * C32263 + (C6684 - C6683) * C1707 +
            (C6686 - C6685) * C32241) *
               C5152 +
           (C6076 * C1705 + C6077 * C32274 + (C6448 - C6447) * C1706 +
            (C6450 - C6449) * C32263 +
            (C31862 * C6155 - C5980 * C6150) * C1707 +
            (C31862 * C6159 - C5980 * C6156) * C32241) *
               C32238) *
              C31925 * C211) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C31862 * C126 - C5980 * C119) * C1705 +
            (C31862 * C140 - C5980 * C131) * C32274 + (C6820 - C6821) * C1706 +
            (C6822 - C6823) * C32263 + C6842 * C1707 + C6843 * C32241) *
               C5151 +
           ((C6052 - C6053) * C1705 + (C6054 - C6055) * C32274 +
            (C6436 - C6435) * C1706 + (C6438 - C6437) * C32263 + C6828 * C1707 +
            C6829 * C32241) *
               C5152 +
           C6697 * C32238) *
              C315 +
          (((C6821 - C6820) * C1705 + (C6823 - C6822) * C32274 +
            (C6825 - C6824) * C1706 + (C6827 - C6826) * C32263 +
            (C6830 - C6831) * C1707 + (C6832 - C6833) * C32241) *
               C5151 +
           ((C6435 - C6436) * C1705 + (C6437 - C6438) * C32274 +
            (C6672 - C6671) * C1706 + (C6674 - C6673) * C32263 +
            (C6834 - C6835) * C1707 + (C6836 - C6837) * C32241) *
               C5152 +
           ((C6439 - C6440) * C1705 + (C6441 - C6442) * C32274 +
            (C6680 - C6679) * C1706 + (C6682 - C6681) * C32263 +
            (C6838 - C6839) * C1707 + (C6840 - C6841) * C32241) *
               C32238) *
              C316 +
          ((C6842 * C1705 + C6843 * C32274 + (C6831 - C6830) * C1706 +
            (C6833 - C6832) * C32263 +
            (C31862 * C1940 - C5980 * C1931) * C1707 +
            (C31862 * C1949 - C5980 * C1943) * C32241) *
               C5151 +
           (C6828 * C1705 + C6829 * C32274 + (C6835 - C6834) * C1706 +
            (C6837 - C6836) * C32263 +
            (C31862 * C6812 - C5980 * C6808) * C1707 +
            (C31862 * C6817 - C5980 * C6813) * C32241) *
               C5152 +
           (C6690 * C1705 + C6691 * C32274 + (C6839 - C6838) * C1706 +
            (C6841 - C6840) * C32263 +
            (C31862 * C6814 - C5980 * C6809) * C1707 +
            (C31862 * C6818 - C5980 * C6815) * C32241) *
               C32238) *
              C317) *
         C31911 * C31899) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C32270 * C126 - C5154 * C119 + C32257 * C127 - C5155 * C120 +
            C32227 * C128 - C5156 * C121) *
               C10043 +
           (C32270 * C140 - C5154 * C131 + C32257 * C141 - C5155 * C132 +
            C32227 * C142 - C5156 * C133) *
               C10040 +
           (C32270 * C328 - C5154 * C318 + C32257 * C329 - C5155 * C319 +
            C32227 * C330 - C5156 * C320) *
               C10044 +
           (C32270 * C348 - C5154 * C333 + C32257 * C349 - C5155 * C334 +
            C32227 * C350 - C5156 * C335) *
               C10041 +
           (C32270 * C338 - C5154 * C323 + C32257 * C339 - C5155 * C324 +
            C32227 * C340 - C5156 * C325) *
               C10045 +
           (C32270 * C353 - C5154 * C343 + C32257 * C354 - C5155 * C344 +
            C32227 * C355 - C5156 * C345) *
               C32241) *
              C31955 * C31925 * C31911 * C110 +
          ((C5154 * C120 - C32270 * C127 + C5155 * C121 - C32257 * C128 +
            C5156 * C122 - C32227 * C129) *
               C10043 +
           (C5154 * C132 - C32270 * C141 + C5155 * C133 - C32257 * C142 +
            C5156 * C134 - C32227 * C143) *
               C10040 +
           (C5154 * C319 - C32270 * C329 + C5155 * C320 - C32257 * C330 +
            C5156 * C321 - C32227 * C331) *
               C10044 +
           (C5154 * C334 - C32270 * C349 + C5155 * C335 - C32257 * C350 +
            C5156 * C336 - C32227 * C351) *
               C10041 +
           (C5154 * C324 - C32270 * C339 + C5155 * C325 - C32257 * C340 +
            C5156 * C326 - C32227 * C341) *
               C10045 +
           (C5154 * C344 - C32270 * C354 + C5155 * C345 - C32257 * C355 +
            C5156 * C346 - C32227 * C356) *
               C32241) *
              C31955 * C31925 * C31911 * C111 +
          ((C32270 * C128 - C5154 * C121 + C32257 * C129 - C5155 * C122 +
            C32227 * C130 - C5156 * C123) *
               C10043 +
           (C32270 * C142 - C5154 * C133 + C32257 * C143 - C5155 * C134 +
            C32227 * C144 - C5156 * C135) *
               C10040 +
           (C32270 * C330 - C5154 * C320 + C32257 * C331 - C5155 * C321 +
            C32227 * C332 - C5156 * C322) *
               C10044 +
           (C32270 * C350 - C5154 * C335 + C32257 * C351 - C5155 * C336 +
            C32227 * C352 - C5156 * C337) *
               C10041 +
           (C32270 * C340 - C5154 * C325 + C32257 * C341 - C5155 * C326 +
            C32227 * C342 - C5156 * C327) *
               C10045 +
           (C32270 * C355 - C5154 * C345 + C32257 * C356 - C5155 * C346 +
            C32227 * C357 - C5156 * C347) *
               C32241) *
              C31955 * C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C32270 * C126 - C5154 * C119 + C32257 * C127 - C5155 * C120 +
            C32227 * C128 - C5156 * C121) *
               C10043 +
           (C32270 * C140 - C5154 * C131 + C32257 * C141 - C5155 * C132 +
            C32227 * C142 - C5156 * C133) *
               C10040 +
           (C32270 * C328 - C5154 * C318 + C32257 * C329 - C5155 * C319 +
            C32227 * C330 - C5156 * C320) *
               C10044 +
           (C32270 * C348 - C5154 * C333 + C32257 * C349 - C5155 * C334 +
            C32227 * C350 - C5156 * C335) *
               C10041 +
           (C32270 * C338 - C5154 * C323 + C32257 * C339 - C5155 * C324 +
            C32227 * C340 - C5156 * C325) *
               C10045 +
           (C32270 * C353 - C5154 * C343 + C32257 * C354 - C5155 * C344 +
            C32227 * C355 - C5156 * C345) *
               C32241) *
              C31955 * C31925 * C209 +
          ((C5269 - C5268 + C5271 - C5270 + C5273 - C5272) * C10043 +
           (C5275 - C5274 + C5277 - C5276 + C5279 - C5278) * C10040 +
           (C5889 - C5890 + C5891 - C5892 + C5893 - C5894) * C10044 +
           (C5895 - C5896 + C5897 - C5898 + C5899 - C5900) * C10041 +
           (C5154 * C1053 - C32270 * C1065 + C5155 * C1054 - C32257 * C1066 +
            C5156 * C1055 - C32227 * C1067) *
               C10045 +
           (C5154 * C1068 - C32270 * C1080 + C5155 * C1069 - C32257 * C1081 +
            C5156 * C1070 - C32227 * C1082) *
               C32241) *
              C31955 * C31925 * C210 +
          (C5312 * C10043 + C5313 * C10040 +
           (C5902 - C5901 + C5904 - C5903 + C5906 - C5905) * C10044 +
           (C5908 - C5907 + C5910 - C5909 + C5912 - C5911) * C10041 +
           (C32270 * C1071 - C5154 * C1056 + C32257 * C1072 - C5155 * C1057 +
            C32227 * C1073 - C5156 * C1058) *
               C10045 +
           (C32270 * C1083 - C5154 * C1074 + C32257 * C1084 - C5155 * C1075 +
            C32227 * C1085 - C5156 * C1076) *
               C32241) *
              C31955 * C31925 * C211) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C32270 * C126 - C5154 * C119 + C32257 * C127 - C5155 * C120 +
            C32227 * C128 - C5156 * C121) *
               C10043 +
           (C32270 * C140 - C5154 * C131 + C32257 * C141 - C5155 * C132 +
            C32227 * C142 - C5156 * C133) *
               C10040 +
           (C10267 - C10268 + C10269 - C10270 + C10271 - C10272) * C10044 +
           (C10273 - C10274 + C10275 - C10276 + C10277 - C10278) * C10041 +
           C10311 * C10045 + C10312 * C32241) *
              C31955 * C315 +
          ((C10268 - C10267 + C10270 - C10269 + C10272 - C10271) * C10043 +
           (C10274 - C10273 + C10276 - C10275 + C10278 - C10277) * C10040 +
           (C10280 - C10279 + C10282 - C10281 + C10284 - C10283) * C10044 +
           (C10286 - C10285 + C10288 - C10287 + C10290 - C10289) * C10041 +
           (C10291 - C10292 + C10293 - C10294 + C10295 - C10296) * C10045 +
           (C10297 - C10298 + C10299 - C10300 + C10301 - C10302) * C32241) *
              C31955 * C316 +
          (C10311 * C10043 + C10312 * C10040 +
           (C10292 - C10291 + C10294 - C10293 + C10296 - C10295) * C10044 +
           (C10298 - C10297 + C10300 - C10299 + C10302 - C10301) * C10041 +
           (C32270 * C1940 - C5154 * C1931 + C32257 * C1941 - C5155 * C1932 +
            C32227 * C1942 - C5156 * C1933) *
               C10045 +
           (C32270 * C1949 - C5154 * C1943 + C32257 * C1950 - C5155 * C1944 +
            C32227 * C1951 - C5156 * C1945) *
               C32241) *
              C31955 * C317) *
         C31911 * C31899) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C31862 * C126 - C5980 * C119) * C10043 +
            (C31862 * C140 - C5980 * C131) * C10040 + (C6820 - C6821) * C10044 +
            (C6822 - C6823) * C10041 + C6842 * C10045 + C6843 * C32241) *
               C32273 +
           ((C6052 - C6053) * C10043 + (C6054 - C6055) * C10040 +
            C7318 * C10044 + C7319 * C10041 + C6828 * C10045 + C6829 * C32241) *
               C32261 +
           (C6072 * C10043 + C6073 * C10040 + C6677 * C10044 + C6678 * C10041 +
            C6690 * C10045 + C6691 * C32241) *
               C32238) *
              C31925 * C31911 * C110 +
          (((C5980 * C120 - C31862 * C127) * C10043 +
            (C5980 * C132 - C31862 * C141) * C10040 + (C7160 - C7161) * C10044 +
            (C7162 - C7163) * C10041 + (C7164 - C7165) * C10045 +
            (C7166 - C7167) * C32241) *
               C32273 +
           ((C6247 - C6248) * C10043 + (C6249 - C6250) * C10040 +
            (C6994 - C6995) * C10044 + (C6996 - C6997) * C10041 +
            (C6998 - C6999) * C10045 + (C7000 - C7001) * C32241) *
               C32261 +
           ((C6251 - C6252) * C10043 + (C6253 - C6254) * C10040 +
            (C7002 - C7003) * C10044 + (C7004 - C7005) * C10041 +
            (C7006 - C7007) * C10045 + (C7008 - C7009) * C32241) *
               C32238) *
              C31925 * C31911 * C111 +
          (((C31862 * C128 - C5980 * C121) * C10043 +
            (C31862 * C142 - C5980 * C133) * C10040 +
            (C31862 * C330 - C5980 * C320) * C10044 +
            (C31862 * C350 - C5980 * C335) * C10041 +
            (C31862 * C340 - C5980 * C325) * C10045 +
            (C31862 * C355 - C5980 * C345) * C32241) *
               C32273 +
           ((C31862 * C225 - C5980 * C215) * C10043 +
            (C31862 * C245 - C5980 * C230) * C10040 +
            (C31862 * C625 - C5980 * C620) * C10044 +
            (C31862 * C635 - C5980 * C630) * C10041 +
            (C31862 * C1067 - C5980 * C1055) * C10045 +
            (C31862 * C1082 - C5980 * C1070) * C32241) *
               C32261 +
           ((C31862 * C235 - C5980 * C220) * C10043 +
            (C31862 * C250 - C5980 * C240) * C10040 +
            (C31862 * C1061 - C5980 * C1052) * C10044 +
            (C31862 * C1079 - C5980 * C1064) * C10041 +
            (C31862 * C1073 - C5980 * C1058) * C10045 +
            (C31862 * C1085 - C5980 * C1076) * C32241) *
               C32238) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C31862 * C126 - C5980 * C119) * C10043 +
            (C31862 * C140 - C5980 * C131) * C10040 + (C6820 - C6821) * C10044 +
            (C6822 - C6823) * C10041 + C6842 * C10045 + C6843 * C32241) *
               C32273 +
           ((C6052 - C6053) * C10043 + (C6054 - C6055) * C10040 +
            C7318 * C10044 + C7319 * C10041 + C6828 * C10045 + C6829 * C32241) *
               C32261 +
           C11017 * C32238) *
              C31925 * C209 +
          (((C6053 - C6052) * C10043 + (C6055 - C6054) * C10040 +
            C7320 * C10044 + C7321 * C10041 + C7322 * C10045 + C7323 * C32241) *
               C32273 +
           ((C6057 - C6056) * C10043 + (C6059 - C6058) * C10040 +
            C7324 * C10044 + C7325 * C10041 + C7326 * C10045 + C7327 * C32241) *
               C32261 +
           ((C6061 - C6060) * C10043 + (C6063 - C6062) * C10040 +
            C9929 * C10044 + C9930 * C10041 + (C6683 - C6684) * C10045 +
            (C6685 - C6686) * C32241) *
               C32238) *
              C31925 * C210 +
          (C11017 * C32273 +
           (C6074 * C10043 + C6075 * C10040 + C9427 * C10044 + C9428 * C10041 +
            (C6684 - C6683) * C10045 + (C6686 - C6685) * C32241) *
               C32261 +
           (C6076 * C10043 + C6077 * C10040 + (C6448 - C6447) * C10044 +
            (C6450 - C6449) * C10041 +
            (C31862 * C6155 - C5980 * C6150) * C10045 +
            (C31862 * C6159 - C5980 * C6156) * C32241) *
               C32238) *
              C31925 * C211) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C31862 * C126 - C5980 * C119) * C10043 +
            (C31862 * C140 - C5980 * C131) * C10040 + (C6820 - C6821) * C10044 +
            (C6822 - C6823) * C10041 + C6842 * C10045 + C6843 * C32241) *
               C32273 +
           ((C6052 - C6053) * C10043 + (C6054 - C6055) * C10040 +
            C7318 * C10044 + C7319 * C10041 + C6828 * C10045 + C6829 * C32241) *
               C32261 +
           C11017 * C32238) *
              C315 +
          (((C6821 - C6820) * C10043 + (C6823 - C6822) * C10040 +
            (C6825 - C6824) * C10044 + (C6827 - C6826) * C10041 +
            (C6830 - C6831) * C10045 + (C6832 - C6833) * C32241) *
               C32273 +
           (C7320 * C10043 + C7321 * C10040 + C7322 * C10044 + C7323 * C10041 +
            (C6834 - C6835) * C10045 + (C6836 - C6837) * C32241) *
               C32261 +
           (C7324 * C10043 + C7325 * C10040 + C7326 * C10044 + C7327 * C10041 +
            (C6838 - C6839) * C10045 + (C6840 - C6841) * C32241) *
               C32238) *
              C316 +
          ((C6842 * C10043 + C6843 * C10040 + (C6831 - C6830) * C10044 +
            (C6833 - C6832) * C10041 +
            (C31862 * C1940 - C5980 * C1931) * C10045 +
            (C31862 * C1949 - C5980 * C1943) * C32241) *
               C32273 +
           (C6828 * C10043 + C6829 * C10040 + (C6835 - C6834) * C10044 +
            (C6837 - C6836) * C10041 +
            (C31862 * C6812 - C5980 * C6808) * C10045 +
            (C31862 * C6817 - C5980 * C6813) * C32241) *
               C32261 +
           (C6690 * C10043 + C6691 * C10040 + (C6839 - C6838) * C10044 +
            (C6841 - C6840) * C10041 +
            (C31862 * C6814 - C5980 * C6809) * C10045 +
            (C31862 * C6818 - C5980 * C6815) * C32241) *
               C32238) *
              C317) *
         C31911 * C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C31862 * C126 - C5980 * C119) * C11632 +
           (C31862 * C140 - C5980 * C131) * C11627 + (C6820 - C6821) * C11633 +
           (C6822 - C6823) * C11628 + C6842 * C11634 + C6843 * C11629 +
           (C6831 - C6830) * C11635 + (C6833 - C6832) * C11630 +
           (C31862 * C1940 - C5980 * C1931) * C11636 +
           (C31862 * C1949 - C5980 * C1943) * C11631) *
              C31955 * C31925 * C31911 * C110 +
          ((C5980 * C120 - C31862 * C127) * C11632 +
           (C5980 * C132 - C31862 * C141) * C11627 + (C7160 - C7161) * C11633 +
           (C7162 - C7163) * C11628 + (C7164 - C7165) * C11634 +
           (C7166 - C7167) * C11629 +
           (C5980 * C1929 - C31862 * C1935) * C11635 +
           (C5980 * C1938 - C31862 * C1947) * C11630 +
           (C5980 * C1932 - C31862 * C1941) * C11636 +
           (C5980 * C1944 - C31862 * C1950) * C11631) *
              C31955 * C31925 * C31911 * C111 +
          ((C31862 * C128 - C5980 * C121) * C11632 +
           (C31862 * C142 - C5980 * C133) * C11627 +
           (C31862 * C330 - C5980 * C320) * C11633 +
           (C31862 * C350 - C5980 * C335) * C11628 +
           (C31862 * C340 - C5980 * C325) * C11634 +
           (C31862 * C355 - C5980 * C345) * C11629 +
           (C31862 * C1936 - C5980 * C1930) * C11635 +
           (C31862 * C1948 - C5980 * C1939) * C11630 +
           (C31862 * C1942 - C5980 * C1933) * C11636 +
           (C31862 * C1951 - C5980 * C1945) * C11631) *
              C31955 * C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C31862 * C126 - C5980 * C119) * C11632 +
           (C31862 * C140 - C5980 * C131) * C11627 + (C6820 - C6821) * C11633 +
           (C6822 - C6823) * C11628 + C6842 * C11634 + C6843 * C11629 +
           (C6831 - C6830) * C11635 + (C6833 - C6832) * C11630 +
           (C31862 * C1940 - C5980 * C1931) * C11636 +
           (C31862 * C1949 - C5980 * C1943) * C11631) *
              C31955 * C31925 * C209 +
          ((C6053 - C6052) * C11632 + (C6055 - C6054) * C11627 +
           C7320 * C11633 + C7321 * C11628 + C7322 * C11634 + C7323 * C11629 +
           (C6834 - C6835) * C11635 + (C6836 - C6837) * C11630 +
           (C5980 * C6808 - C31862 * C6812) * C11636 +
           (C5980 * C6813 - C31862 * C6817) * C11631) *
              C31955 * C31925 * C210 +
          (C6072 * C11632 + C6073 * C11627 + C6677 * C11633 + C6678 * C11628 +
           C6690 * C11634 + C6691 * C11629 + (C6839 - C6838) * C11635 +
           (C6841 - C6840) * C11630 +
           (C31862 * C6814 - C5980 * C6809) * C11636 +
           (C31862 * C6818 - C5980 * C6815) * C11631) *
              C31955 * C31925 * C211) *
         C31899) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C31862 * C126 - C5980 * C119) * C11632 +
           (C31862 * C140 - C5980 * C131) * C11627 + (C6820 - C6821) * C11633 +
           (C6822 - C6823) * C11628 + C6842 * C11634 + C6843 * C11629 +
           C11770 * C11635 + C11771 * C11630 + C11780 * C11636 +
           C11781 * C11631) *
              C31955 * C315 +
          ((C6821 - C6820) * C11632 + (C6823 - C6822) * C11627 +
           (C6825 - C6824) * C11633 + (C6827 - C6826) * C11628 +
           (C6830 - C6831) * C11634 + (C6832 - C6833) * C11629 +
           (C11773 - C11772) * C11635 + (C11775 - C11774) * C11630 +
           (C11776 - C11777) * C11636 + (C11778 - C11779) * C11631) *
              C31955 * C316 +
          (C6842 * C11632 + C6843 * C11627 + C11770 * C11633 + C11771 * C11628 +
           C11780 * C11634 + C11781 * C11629 + (C11777 - C11776) * C11635 +
           (C11779 - C11778) * C11630 +
           (C31862 * C11765 - C5980 * C11762) * C11636 +
           (C31862 * C11768 - C5980 * C11766) * C11631) *
              C31955 * C317) *
         C31911 * C31899) /
            (p * q * std::sqrt(p + q));
    d2ee[63] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C101 * C126 - C113 * C119 + C102 * C127 - C114 * C120 +
                 C103 * C128 - C115 * C121 + C104 * C129 - C116 * C122 +
                 C105 * C130 - C117 * C123) *
                    C118 +
                (C101 * C140 - C113 * C131 + C102 * C141 - C114 * C132 +
                 C103 * C142 - C115 * C133 + C104 * C143 - C116 * C134 +
                 C105 * C144 - C117 * C135) *
                    C31966) *
                   C31955 * C530 +
               ((C113 * C318 - C101 * C328 + C114 * C319 - C102 * C329 +
                 C115 * C320 - C103 * C330 + C116 * C321 - C104 * C331 +
                 C117 * C322 - C105 * C332) *
                    C118 +
                (C113 * C333 - C101 * C348 + C114 * C334 - C102 * C349 +
                 C115 * C335 - C103 * C350 + C116 * C336 - C104 * C351 +
                 C117 * C337 - C105 * C352) *
                    C31966) *
                   C31955 * C531) *
                  C31911 * C442 +
              (((C113 * C120 - C101 * C127 + C114 * C121 - C102 * C128 +
                 C115 * C122 - C103 * C129 + C116 * C123 - C104 * C130 +
                 C117 * C124 - C105 * C136) *
                    C118 +
                (C113 * C132 - C101 * C141 + C114 * C133 - C102 * C142 +
                 C115 * C134 - C103 * C143 + C116 * C135 - C104 * C144 +
                 C117 * C137 - C105 * C145) *
                    C31966) *
                   C31955 * C530 +
               ((C101 * C329 - C113 * C319 + C102 * C330 - C114 * C320 +
                 C103 * C331 - C115 * C321 + C104 * C332 - C116 * C322 +
                 C105 * C533 - C117 * C532) *
                    C118 +
                (C101 * C349 - C113 * C334 + C102 * C350 - C114 * C335 +
                 C103 * C351 - C115 * C336 + C104 * C352 - C116 * C337 +
                 C105 * C535 - C117 * C534) *
                    C31966) *
                   C31955 * C531) *
                  C31911 * C443) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C748 * C126 - C754 * C119 + C749 * C127 - C755 * C120 +
                  C32227 * C128 - C756 * C121) *
                     C118 +
                 (C748 * C140 - C754 * C131 + C749 * C141 - C755 * C132 +
                  C32227 * C142 - C756 * C133) *
                     C31966) *
                    C32273 +
                ((C892 - C893 + C894 - C895 + C896 - C897) * C118 +
                 (C898 - C899 + C900 - C901 + C902 - C903) * C31966) *
                    C32261 +
                C940 * C32238) *
                   C530 +
               (((C754 * C318 - C748 * C328 + C755 * C319 - C749 * C329 +
                  C756 * C320 - C32227 * C330) *
                     C118 +
                 (C754 * C333 - C748 * C348 + C755 * C334 - C749 * C349 +
                  C756 * C335 - C32227 * C350) *
                     C31966) *
                    C32273 +
                ((C754 * C618 - C748 * C623 + C755 * C619 - C749 * C624 +
                  C756 * C620 - C32227 * C625) *
                     C118 +
                 (C754 * C628 - C748 * C633 + C755 * C629 - C749 * C634 +
                  C756 * C630 - C32227 * C635) *
                     C31966) *
                    C32261 +
                ((C754 * C1050 - C748 * C1059 + C755 * C1051 - C749 * C1060 +
                  C756 * C1052 - C32227 * C1061) *
                     C118 +
                 (C754 * C1062 - C748 * C1077 + C755 * C1063 - C749 * C1078 +
                  C756 * C1064 - C32227 * C1079) *
                     C31966) *
                    C32238) *
                   C531) *
                  C31911 * C442 +
              ((((C754 * C120 - C748 * C127 + C755 * C121 - C749 * C128 +
                  C756 * C122 - C32227 * C129) *
                     C118 +
                 (C754 * C132 - C748 * C141 + C755 * C133 - C749 * C142 +
                  C756 * C134 - C32227 * C143) *
                     C31966) *
                    C32273 +
                ((C1237 - C1238 + C1239 - C1240 + C1241 - C1242) * C118 +
                 (C1243 - C1244 + C1245 - C1246 + C1247 - C1248) * C31966) *
                    C32261 +
                ((C1249 - C1250 + C1251 - C1252 + C1253 - C1254) * C118 +
                 (C1255 - C1256 + C1257 - C1258 + C1259 - C1260) * C31966) *
                    C32238) *
                   C530 +
               (((C748 * C329 - C754 * C319 + C749 * C330 - C755 * C320 +
                  C32227 * C331 - C756 * C321) *
                     C118 +
                 (C748 * C349 - C754 * C334 + C749 * C350 - C755 * C335 +
                  C32227 * C351 - C756 * C336) *
                     C31966) *
                    C32273 +
                ((C748 * C624 - C754 * C619 + C749 * C625 - C755 * C620 +
                  C32227 * C626 - C756 * C621) *
                     C118 +
                 (C748 * C634 - C754 * C629 + C749 * C635 - C755 * C630 +
                  C32227 * C636 - C756 * C631) *
                     C31966) *
                    C32261 +
                ((C748 * C1060 - C754 * C1051 + C749 * C1061 - C755 * C1052 +
                  C32227 * C1407 - C756 * C1406) *
                     C118 +
                 (C748 * C1078 - C754 * C1063 + C749 * C1079 - C755 * C1064 +
                  C32227 * C1409 - C756 * C1408) *
                     C31966) *
                    C32238) *
                   C531) *
                  C31911 * C443)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C748 * C126 - C754 * C119 + C749 * C127 - C755 * C120 +
             C32227 * C128 - C756 * C121) *
                C1705 +
            (C748 * C140 - C754 * C131 + C749 * C141 - C755 * C132 +
             C32227 * C142 - C756 * C133) *
                C32274 +
            (C1953 - C1954 + C1955 - C1956 + C1957 - C1958) * C1706 +
            (C1959 - C1960 + C1961 - C1962 + C1963 - C1964) * C32263 +
            C1997 * C1707 + C1998 * C32241) *
               C31955 * C530 +
           ((C1954 - C1953 + C1956 - C1955 + C1958 - C1957) * C1705 +
            (C1960 - C1959 + C1962 - C1961 + C1964 - C1963) * C32274 +
            (C1966 - C1965 + C1968 - C1967 + C1970 - C1969) * C1706 +
            (C1972 - C1971 + C1974 - C1973 + C1976 - C1975) * C32263 +
            (C1977 - C1978 + C1979 - C1980 + C1981 - C1982) * C1707 +
            (C1983 - C1984 + C1985 - C1986 + C1987 - C1988) * C32241) *
               C31955 * C531) *
              C31911 * C442 +
          (((C754 * C120 - C748 * C127 + C755 * C121 - C749 * C128 +
             C756 * C122 - C32227 * C129) *
                C1705 +
            (C754 * C132 - C748 * C141 + C755 * C133 - C749 * C142 +
             C756 * C134 - C32227 * C143) *
                C32274 +
            (C2299 - C2300 + C2301 - C2302 + C2303 - C2304) * C1706 +
            (C2305 - C2306 + C2307 - C2308 + C2309 - C2310) * C32263 +
            (C2311 - C2312 + C2313 - C2314 + C2315 - C2316) * C1707 +
            (C2317 - C2318 + C2319 - C2320 + C2321 - C2322) * C32241) *
               C31955 * C530 +
           ((C2300 - C2299 + C2302 - C2301 + C2304 - C2303) * C1705 +
            (C2306 - C2305 + C2308 - C2307 + C2310 - C2309) * C32274 +
            (C2312 - C2311 + C2314 - C2313 + C2316 - C2315) * C1706 +
            (C2318 - C2317 + C2320 - C2319 + C2322 - C2321) * C32263 +
            (C748 * C1935 - C754 * C1929 + C749 * C1936 - C755 * C1930 +
             C32227 * C2295 - C756 * C2294) *
                C1707 +
            (C748 * C1947 - C754 * C1938 + C749 * C1948 - C755 * C1939 +
             C32227 * C2297 - C756 * C2296) *
                C32241) *
               C31955 * C531) *
              C31911 * C443)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C32270 * C126 - C5154 * C119 + C32257 * C127 - C5155 * C120 +
              C32227 * C128 - C5156 * C121) *
                 C118 +
             (C32270 * C140 - C5154 * C131 + C32257 * C141 - C5155 * C132 +
              C32227 * C142 - C5156 * C133) *
                 C31966) *
                C5151 +
            ((C5268 - C5269 + C5270 - C5271 + C5272 - C5273) * C118 +
             (C5274 - C5275 + C5276 - C5277 + C5278 - C5279) * C31966) *
                C5152 +
            C5316 * C32238) *
               C530 +
           (((C5154 * C318 - C32270 * C328 + C5155 * C319 - C32257 * C329 +
              C5156 * C320 - C32227 * C330) *
                 C118 +
             (C5154 * C333 - C32270 * C348 + C5155 * C334 - C32257 * C349 +
              C5156 * C335 - C32227 * C350) *
                 C31966) *
                C5151 +
            ((C5154 * C618 - C32270 * C623 + C5155 * C619 - C32257 * C624 +
              C5156 * C620 - C32227 * C625) *
                 C118 +
             (C5154 * C628 - C32270 * C633 + C5155 * C629 - C32257 * C634 +
              C5156 * C630 - C32227 * C635) *
                 C31966) *
                C5152 +
            ((C5154 * C1050 - C32270 * C1059 + C5155 * C1051 - C32257 * C1060 +
              C5156 * C1052 - C32227 * C1061) *
                 C118 +
             (C5154 * C1062 - C32270 * C1077 + C5155 * C1063 - C32257 * C1078 +
              C5156 * C1064 - C32227 * C1079) *
                 C31966) *
                C32238) *
               C531) *
              C31911 * C442 +
          ((((C5154 * C120 - C32270 * C127 + C5155 * C121 - C32257 * C128 +
              C5156 * C122 - C32227 * C129) *
                 C118 +
             (C5154 * C132 - C32270 * C141 + C5155 * C133 - C32257 * C142 +
              C5156 * C134 - C32227 * C143) *
                 C31966) *
                C5151 +
            ((C5573 - C5574 + C5575 - C5576 + C5577 - C5578) * C118 +
             (C5579 - C5580 + C5581 - C5582 + C5583 - C5584) * C31966) *
                C5152 +
            ((C5585 - C5586 + C5587 - C5588 + C5589 - C5590) * C118 +
             (C5591 - C5592 + C5593 - C5594 + C5595 - C5596) * C31966) *
                C32238) *
               C530 +
           (((C32270 * C329 - C5154 * C319 + C32257 * C330 - C5155 * C320 +
              C32227 * C331 - C5156 * C321) *
                 C118 +
             (C32270 * C349 - C5154 * C334 + C32257 * C350 - C5155 * C335 +
              C32227 * C351 - C5156 * C336) *
                 C31966) *
                C5151 +
            ((C32270 * C624 - C5154 * C619 + C32257 * C625 - C5155 * C620 +
              C32227 * C626 - C5156 * C621) *
                 C118 +
             (C32270 * C634 - C5154 * C629 + C32257 * C635 - C5155 * C630 +
              C32227 * C636 - C5156 * C631) *
                 C31966) *
                C5152 +
            ((C32270 * C1060 - C5154 * C1051 + C32257 * C1061 - C5155 * C1052 +
              C32227 * C1407 - C5156 * C1406) *
                 C118 +
             (C32270 * C1078 - C5154 * C1063 + C32257 * C1079 - C5155 * C1064 +
              C32227 * C1409 - C5156 * C1408) *
                 C31966) *
                C32238) *
               C531) *
              C31911 * C443)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C31862 * C126 - C5980 * C119) * C118 +
             (C31862 * C140 - C5980 * C131) * C31966) *
                C5975 +
            ((C6052 - C6053) * C118 + (C6054 - C6055) * C31966) * C5976 +
            C6084 * C5977 + C6085 * C5978 + C6086 * C5979) *
               C530 +
           (((C5980 * C318 - C31862 * C328) * C118 +
             (C5980 * C333 - C31862 * C348) * C31966) *
                C5975 +
            ((C5980 * C618 - C31862 * C623) * C118 +
             (C5980 * C628 - C31862 * C633) * C31966) *
                C5976 +
            ((C5980 * C1050 - C31862 * C1059) * C118 +
             (C5980 * C1062 - C31862 * C1077) * C31966) *
                C5977 +
            ((C5980 * C1556 - C31862 * C1559) * C118 +
             (C5980 * C1562 - C31862 * C1565) * C31966) *
                C5978 +
            ((C5980 * C6148 - C31862 * C6151) * C118 +
             (C5980 * C6152 - C31862 * C6157) * C31966) *
                C5979) *
               C531) *
              C31911 * C442 +
          ((((C5980 * C120 - C31862 * C127) * C118 +
             (C5980 * C132 - C31862 * C141) * C31966) *
                C5975 +
            ((C6247 - C6248) * C118 + (C6249 - C6250) * C31966) * C5976 +
            ((C6251 - C6252) * C118 + (C6253 - C6254) * C31966) * C5977 +
            ((C6255 - C6256) * C118 + (C6257 - C6258) * C31966) * C5978 +
            ((C6259 - C6260) * C118 + (C6261 - C6262) * C31966) * C5979) *
               C530 +
           (((C31862 * C329 - C5980 * C319) * C118 +
             (C31862 * C349 - C5980 * C334) * C31966) *
                C5975 +
            ((C31862 * C624 - C5980 * C619) * C118 +
             (C31862 * C634 - C5980 * C629) * C31966) *
                C5976 +
            ((C31862 * C1060 - C5980 * C1051) * C118 +
             (C31862 * C1078 - C5980 * C1063) * C31966) *
                C5977 +
            ((C31862 * C1560 - C5980 * C1557) * C118 +
             (C31862 * C1566 - C5980 * C1563) * C31966) *
                C5978 +
            ((C31862 * C6345 - C5980 * C6344) * C118 +
             (C31862 * C6347 - C5980 * C6346) * C31966) *
                C5979) *
               C531) *
              C31911 * C443)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31862 * C126 - C5980 * C119) * C1705 +
             (C31862 * C140 - C5980 * C131) * C32274 + (C6820 - C6821) * C1706 +
             (C6822 - C6823) * C32263 + C6842 * C1707 + C6843 * C32241) *
                C5151 +
            ((C6052 - C6053) * C1705 + (C6054 - C6055) * C32274 +
             (C6436 - C6435) * C1706 + (C6438 - C6437) * C32263 +
             C6828 * C1707 + C6829 * C32241) *
                C5152 +
            C6697 * C32238) *
               C530 +
           (((C6821 - C6820) * C1705 + (C6823 - C6822) * C32274 +
             (C6825 - C6824) * C1706 + (C6827 - C6826) * C32263 +
             (C6830 - C6831) * C1707 + (C6832 - C6833) * C32241) *
                C5151 +
            ((C6435 - C6436) * C1705 + (C6437 - C6438) * C32274 +
             (C6672 - C6671) * C1706 + (C6674 - C6673) * C32263 +
             (C6834 - C6835) * C1707 + (C6836 - C6837) * C32241) *
                C5152 +
            ((C6439 - C6440) * C1705 + (C6441 - C6442) * C32274 +
             (C6680 - C6679) * C1706 + (C6682 - C6681) * C32263 +
             (C6838 - C6839) * C1707 + (C6840 - C6841) * C32241) *
                C32238) *
               C531) *
              C31911 * C442 +
          ((((C5980 * C120 - C31862 * C127) * C1705 +
             (C5980 * C132 - C31862 * C141) * C32274 + (C7160 - C7161) * C1706 +
             (C7162 - C7163) * C32263 + (C7164 - C7165) * C1707 +
             (C7166 - C7167) * C32241) *
                C5151 +
            ((C6247 - C6248) * C1705 + (C6249 - C6250) * C32274 +
             (C6994 - C6995) * C1706 + (C6996 - C6997) * C32263 +
             (C6998 - C6999) * C1707 + (C7000 - C7001) * C32241) *
                C5152 +
            ((C6251 - C6252) * C1705 + (C6253 - C6254) * C32274 +
             (C7002 - C7003) * C1706 + (C7004 - C7005) * C32263 +
             (C7006 - C7007) * C1707 + (C7008 - C7009) * C32241) *
                C32238) *
               C530 +
           (((C7161 - C7160) * C1705 + (C7163 - C7162) * C32274 +
             (C7165 - C7164) * C1706 + (C7167 - C7166) * C32263 +
             (C31862 * C1935 - C5980 * C1929) * C1707 +
             (C31862 * C1947 - C5980 * C1938) * C32241) *
                C5151 +
            ((C6995 - C6994) * C1705 + (C6997 - C6996) * C32274 +
             (C6999 - C6998) * C1706 + (C7001 - C7000) * C32263 +
             (C31862 * C2472 - C5980 * C2469) * C1707 +
             (C31862 * C2478 - C5980 * C2475) * C32241) *
                C5152 +
            ((C7003 - C7002) * C1705 + (C7005 - C7004) * C32274 +
             (C7007 - C7006) * C1706 + (C7009 - C7008) * C32263 +
             (C31862 * C7156 - C5980 * C7155) * C1707 +
             (C31862 * C7158 - C5980 * C7157) * C32241) *
                C32238) *
               C531) *
              C31911 * C443)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C32270 * C126 - C5154 * C119 + C32257 * C127 - C5155 * C120 +
             C32227 * C128 - C5156 * C121) *
                C10043 +
            (C32270 * C140 - C5154 * C131 + C32257 * C141 - C5155 * C132 +
             C32227 * C142 - C5156 * C133) *
                C10040 +
            (C10267 - C10268 + C10269 - C10270 + C10271 - C10272) * C10044 +
            (C10273 - C10274 + C10275 - C10276 + C10277 - C10278) * C10041 +
            C10311 * C10045 + C10312 * C32241) *
               C31955 * C530 +
           ((C10268 - C10267 + C10270 - C10269 + C10272 - C10271) * C10043 +
            (C10274 - C10273 + C10276 - C10275 + C10278 - C10277) * C10040 +
            (C10280 - C10279 + C10282 - C10281 + C10284 - C10283) * C10044 +
            (C10286 - C10285 + C10288 - C10287 + C10290 - C10289) * C10041 +
            (C10291 - C10292 + C10293 - C10294 + C10295 - C10296) * C10045 +
            (C10297 - C10298 + C10299 - C10300 + C10301 - C10302) * C32241) *
               C31955 * C531) *
              C31911 * C442 +
          (((C5154 * C120 - C32270 * C127 + C5155 * C121 - C32257 * C128 +
             C5156 * C122 - C32227 * C129) *
                C10043 +
            (C5154 * C132 - C32270 * C141 + C5155 * C133 - C32257 * C142 +
             C5156 * C134 - C32227 * C143) *
                C10040 +
            (C10605 - C10606 + C10607 - C10608 + C10609 - C10610) * C10044 +
            (C10611 - C10612 + C10613 - C10614 + C10615 - C10616) * C10041 +
            (C10617 - C10618 + C10619 - C10620 + C10621 - C10622) * C10045 +
            (C10623 - C10624 + C10625 - C10626 + C10627 - C10628) * C32241) *
               C31955 * C530 +
           ((C10606 - C10605 + C10608 - C10607 + C10610 - C10609) * C10043 +
            (C10612 - C10611 + C10614 - C10613 + C10616 - C10615) * C10040 +
            (C10618 - C10617 + C10620 - C10619 + C10622 - C10621) * C10044 +
            (C10624 - C10623 + C10626 - C10625 + C10628 - C10627) * C10041 +
            (C32270 * C1935 - C5154 * C1929 + C32257 * C1936 - C5155 * C1930 +
             C32227 * C2295 - C5156 * C2294) *
                C10045 +
            (C32270 * C1947 - C5154 * C1938 + C32257 * C1948 - C5155 * C1939 +
             C32227 * C2297 - C5156 * C2296) *
                C32241) *
               C31955 * C531) *
              C31911 * C443)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31862 * C126 - C5980 * C119) * C10043 +
             (C31862 * C140 - C5980 * C131) * C10040 +
             (C6820 - C6821) * C10044 + (C6822 - C6823) * C10041 +
             C6842 * C10045 + C6843 * C32241) *
                C32273 +
            ((C6052 - C6053) * C10043 + (C6054 - C6055) * C10040 +
             C7318 * C10044 + C7319 * C10041 + C6828 * C10045 +
             C6829 * C32241) *
                C32261 +
            C11017 * C32238) *
               C530 +
           (((C6821 - C6820) * C10043 + (C6823 - C6822) * C10040 +
             (C6825 - C6824) * C10044 + (C6827 - C6826) * C10041 +
             (C6830 - C6831) * C10045 + (C6832 - C6833) * C32241) *
                C32273 +
            (C7320 * C10043 + C7321 * C10040 + C7322 * C10044 + C7323 * C10041 +
             (C6834 - C6835) * C10045 + (C6836 - C6837) * C32241) *
                C32261 +
            (C7324 * C10043 + C7325 * C10040 + C7326 * C10044 + C7327 * C10041 +
             (C6838 - C6839) * C10045 + (C6840 - C6841) * C32241) *
                C32238) *
               C531) *
              C31911 * C442 +
          ((((C5980 * C120 - C31862 * C127) * C10043 +
             (C5980 * C132 - C31862 * C141) * C10040 +
             (C7160 - C7161) * C10044 + (C7162 - C7163) * C10041 +
             (C7164 - C7165) * C10045 + (C7166 - C7167) * C32241) *
                C32273 +
            ((C6247 - C6248) * C10043 + (C6249 - C6250) * C10040 +
             (C6994 - C6995) * C10044 + (C6996 - C6997) * C10041 +
             (C6998 - C6999) * C10045 + (C7000 - C7001) * C32241) *
                C32261 +
            ((C6251 - C6252) * C10043 + (C6253 - C6254) * C10040 +
             (C7002 - C7003) * C10044 + (C7004 - C7005) * C10041 +
             (C7006 - C7007) * C10045 + (C7008 - C7009) * C32241) *
                C32238) *
               C530 +
           (((C7161 - C7160) * C10043 + (C7163 - C7162) * C10040 +
             (C7165 - C7164) * C10044 + (C7167 - C7166) * C10041 +
             (C31862 * C1935 - C5980 * C1929) * C10045 +
             (C31862 * C1947 - C5980 * C1938) * C32241) *
                C32273 +
            ((C6995 - C6994) * C10043 + (C6997 - C6996) * C10040 +
             (C6999 - C6998) * C10044 + (C7001 - C7000) * C10041 +
             (C31862 * C2472 - C5980 * C2469) * C10045 +
             (C31862 * C2478 - C5980 * C2475) * C32241) *
                C32261 +
            ((C7003 - C7002) * C10043 + (C7005 - C7004) * C10040 +
             (C7007 - C7006) * C10044 + (C7009 - C7008) * C10041 +
             (C31862 * C7156 - C5980 * C7155) * C10045 +
             (C31862 * C7158 - C5980 * C7157) * C32241) *
                C32238) *
               C531) *
              C31911 * C443)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C31862 * C126 - C5980 * C119) * C11632 +
            (C31862 * C140 - C5980 * C131) * C11627 + (C6820 - C6821) * C11633 +
            (C6822 - C6823) * C11628 + C6842 * C11634 + C6843 * C11629 +
            C11770 * C11635 + C11771 * C11630 + C11780 * C11636 +
            C11781 * C11631) *
               C31955 * C530 +
           ((C6821 - C6820) * C11632 + (C6823 - C6822) * C11627 +
            (C6825 - C6824) * C11633 + (C6827 - C6826) * C11628 +
            (C6830 - C6831) * C11634 + (C6832 - C6833) * C11629 +
            (C11773 - C11772) * C11635 + (C11775 - C11774) * C11630 +
            (C11776 - C11777) * C11636 + (C11778 - C11779) * C11631) *
               C31955 * C531) *
              C31911 * C442 +
          (((C5980 * C120 - C31862 * C127) * C11632 +
            (C5980 * C132 - C31862 * C141) * C11627 + (C7160 - C7161) * C11633 +
            (C7162 - C7163) * C11628 + (C7164 - C7165) * C11634 +
            (C7166 - C7167) * C11629 + (C11954 - C11955) * C11635 +
            (C11956 - C11957) * C11630 + (C11958 - C11959) * C11636 +
            (C11960 - C11961) * C11631) *
               C31955 * C530 +
           ((C7161 - C7160) * C11632 + (C7163 - C7162) * C11627 +
            (C7165 - C7164) * C11633 + (C7167 - C7166) * C11628 +
            (C11955 - C11954) * C11634 + (C11957 - C11956) * C11629 +
            (C11959 - C11958) * C11635 + (C11961 - C11960) * C11630 +
            (C31862 * C11950 - C5980 * C11949) * C11636 +
            (C31862 * C11952 - C5980 * C11951) * C11631) *
               C31955 * C531) *
              C31911 * C443)) /
            (p * q * std::sqrt(p + q));
    d2ee[64] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C101 * C126 - C113 * C119 + C102 * C127 - C114 * C120 +
            C103 * C128 - C115 * C121 + C104 * C129 - C116 * C122 +
            C105 * C130 - C117 * C123) *
               C118 +
           (C101 * C140 - C113 * C131 + C102 * C141 - C114 * C132 +
            C103 * C142 - C115 * C133 + C104 * C143 - C116 * C134 +
            C105 * C144 - C117 * C135) *
               C31966) *
              C31955 * C31925 * C31911 * C110 +
          ((C113 * C120 - C101 * C127 + C114 * C121 - C102 * C128 +
            C115 * C122 - C103 * C129 + C116 * C123 - C104 * C130 +
            C117 * C124 - C105 * C136) *
               C118 +
           (C113 * C132 - C101 * C141 + C114 * C133 - C102 * C142 +
            C115 * C134 - C103 * C143 + C116 * C135 - C104 * C144 +
            C117 * C137 - C105 * C145) *
               C31966) *
              C31955 * C31925 * C31911 * C111 +
          ((C101 * C128 - C113 * C121 + C102 * C129 - C114 * C122 +
            C103 * C130 - C115 * C123 + C104 * C136 - C116 * C124 +
            C105 * C138 - C117 * C125) *
               C118 +
           (C101 * C142 - C113 * C133 + C102 * C143 - C114 * C134 +
            C103 * C144 - C115 * C135 + C104 * C145 - C116 * C137 +
            C105 * C146 - C117 * C139) *
               C31966) *
              C31955 * C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C101 * C126 - C113 * C119 + C102 * C127 - C114 * C120 +
            C103 * C128 - C115 * C121 + C104 * C129 - C116 * C122 +
            C105 * C130 - C117 * C123) *
               C118 +
           (C101 * C140 - C113 * C131 + C102 * C141 - C114 * C132 +
            C103 * C142 - C115 * C133 + C104 * C143 - C116 * C134 +
            C105 * C144 - C117 * C135) *
               C31966) *
              C31955 * C31925 * C209 +
          ((C113 * C213 - C101 * C223 + C114 * C214 - C102 * C224 +
            C115 * C215 - C103 * C225 + C116 * C216 - C104 * C226 +
            C117 * C217 - C105 * C227) *
               C118 +
           (C113 * C228 - C101 * C243 + C114 * C229 - C102 * C244 +
            C115 * C230 - C103 * C245 + C116 * C231 - C104 * C246 +
            C117 * C232 - C105 * C247) *
               C31966) *
              C31955 * C31925 * C210 +
          ((C101 * C233 - C113 * C218 + C102 * C234 - C114 * C219 +
            C103 * C235 - C115 * C220 + C104 * C236 - C116 * C221 +
            C105 * C237 - C117 * C222) *
               C118 +
           (C101 * C248 - C113 * C238 + C102 * C249 - C114 * C239 +
            C103 * C250 - C115 * C240 + C104 * C251 - C116 * C241 +
            C105 * C252 - C117 * C242) *
               C31966) *
              C31955 * C31925 * C211) *
         C31899) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C748 * C126 - C754 * C119 + C749 * C127 - C755 * C120 +
             C32227 * C128 - C756 * C121) *
                C118 +
            (C748 * C140 - C754 * C131 + C749 * C141 - C755 * C132 +
             C32227 * C142 - C756 * C133) *
                C31966) *
               C32273 +
           ((C748 * C223 - C754 * C213 + C749 * C224 - C755 * C214 +
             C32227 * C225 - C756 * C215) *
                C118 +
            (C748 * C243 - C754 * C228 + C749 * C244 - C755 * C229 +
             C32227 * C245 - C756 * C230) *
                C31966) *
               C32261 +
           ((C748 * C233 - C754 * C218 + C749 * C234 - C755 * C219 +
             C32227 * C235 - C756 * C220) *
                C118 +
            (C748 * C248 - C754 * C238 + C749 * C249 - C755 * C239 +
             C32227 * C250 - C756 * C240) *
                C31966) *
               C32238) *
              C31925 * C31911 * C110 +
          (((C754 * C120 - C748 * C127 + C755 * C121 - C749 * C128 +
             C756 * C122 - C32227 * C129) *
                C118 +
            (C754 * C132 - C748 * C141 + C755 * C133 - C749 * C142 +
             C756 * C134 - C32227 * C143) *
                C31966) *
               C32273 +
           ((C754 * C214 - C748 * C224 + C755 * C215 - C749 * C225 +
             C756 * C216 - C32227 * C226) *
                C118 +
            (C754 * C229 - C748 * C244 + C755 * C230 - C749 * C245 +
             C756 * C231 - C32227 * C246) *
                C31966) *
               C32261 +
           ((C754 * C219 - C748 * C234 + C755 * C220 - C749 * C235 +
             C756 * C221 - C32227 * C236) *
                C118 +
            (C754 * C239 - C748 * C249 + C755 * C240 - C749 * C250 +
             C756 * C241 - C32227 * C251) *
                C31966) *
               C32238) *
              C31925 * C31911 * C111 +
          (((C748 * C128 - C754 * C121 + C749 * C129 - C755 * C122 +
             C32227 * C130 - C756 * C123) *
                C118 +
            (C748 * C142 - C754 * C133 + C749 * C143 - C755 * C134 +
             C32227 * C144 - C756 * C135) *
                C31966) *
               C32273 +
           ((C748 * C225 - C754 * C215 + C749 * C226 - C755 * C216 +
             C32227 * C227 - C756 * C217) *
                C118 +
            (C748 * C245 - C754 * C230 + C749 * C246 - C755 * C231 +
             C32227 * C247 - C756 * C232) *
                C31966) *
               C32261 +
           ((C748 * C235 - C754 * C220 + C749 * C236 - C755 * C221 +
             C32227 * C237 - C756 * C222) *
                C118 +
            (C748 * C250 - C754 * C240 + C749 * C251 - C755 * C241 +
             C32227 * C252 - C756 * C242) *
                C31966) *
               C32238) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C748 * C126 - C754 * C119 + C749 * C127 - C755 * C120 +
             C32227 * C128 - C756 * C121) *
                C118 +
            (C748 * C140 - C754 * C131 + C749 * C141 - C755 * C132 +
             C32227 * C142 - C756 * C133) *
                C31966) *
               C32273 +
           ((C892 - C893 + C894 - C895 + C896 - C897) * C118 +
            (C898 - C899 + C900 - C901 + C902 - C903) * C31966) *
               C32261 +
           C940 * C32238) *
              C31925 * C209 +
          (((C893 - C892 + C895 - C894 + C897 - C896) * C118 +
            (C899 - C898 + C901 - C900 + C903 - C902) * C31966) *
               C32273 +
           ((C905 - C904 + C907 - C906 + C909 - C908) * C118 +
            (C911 - C910 + C913 - C912 + C915 - C914) * C31966) *
               C32261 +
           ((C916 - C917 + C918 - C919 + C920 - C921) * C118 +
            (C922 - C923 + C924 - C925 + C926 - C927) * C31966) *
               C32238) *
              C31925 * C210 +
          (C940 * C32273 +
           ((C917 - C916 + C919 - C918 + C921 - C920) * C118 +
            (C923 - C922 + C925 - C924 + C927 - C926) * C31966) *
               C32261 +
           ((C748 * C879 - C754 * C870 + C749 * C880 - C755 * C871 +
             C32227 * C881 - C756 * C872) *
                C118 +
            (C748 * C888 - C754 * C882 + C749 * C889 - C755 * C883 +
             C32227 * C890 - C756 * C884) *
                C31966) *
               C32238) *
              C31925 * C211) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C748 * C126 - C754 * C119 + C749 * C127 - C755 * C120 +
            C32227 * C128 - C756 * C121) *
               C1705 +
           (C748 * C140 - C754 * C131 + C749 * C141 - C755 * C132 +
            C32227 * C142 - C756 * C133) *
               C32274 +
           (C748 * C328 - C754 * C318 + C749 * C329 - C755 * C319 +
            C32227 * C330 - C756 * C320) *
               C1706 +
           (C748 * C348 - C754 * C333 + C749 * C349 - C755 * C334 +
            C32227 * C350 - C756 * C335) *
               C32263 +
           (C748 * C338 - C754 * C323 + C749 * C339 - C755 * C324 +
            C32227 * C340 - C756 * C325) *
               C1707 +
           (C748 * C353 - C754 * C343 + C749 * C354 - C755 * C344 +
            C32227 * C355 - C756 * C345) *
               C32241) *
              C31955 * C31925 * C31911 * C110 +
          ((C754 * C120 - C748 * C127 + C755 * C121 - C749 * C128 +
            C756 * C122 - C32227 * C129) *
               C1705 +
           (C754 * C132 - C748 * C141 + C755 * C133 - C749 * C142 +
            C756 * C134 - C32227 * C143) *
               C32274 +
           (C754 * C319 - C748 * C329 + C755 * C320 - C749 * C330 +
            C756 * C321 - C32227 * C331) *
               C1706 +
           (C754 * C334 - C748 * C349 + C755 * C335 - C749 * C350 +
            C756 * C336 - C32227 * C351) *
               C32263 +
           (C754 * C324 - C748 * C339 + C755 * C325 - C749 * C340 +
            C756 * C326 - C32227 * C341) *
               C1707 +
           (C754 * C344 - C748 * C354 + C755 * C345 - C749 * C355 +
            C756 * C346 - C32227 * C356) *
               C32241) *
              C31955 * C31925 * C31911 * C111 +
          ((C748 * C128 - C754 * C121 + C749 * C129 - C755 * C122 +
            C32227 * C130 - C756 * C123) *
               C1705 +
           (C748 * C142 - C754 * C133 + C749 * C143 - C755 * C134 +
            C32227 * C144 - C756 * C135) *
               C32274 +
           (C748 * C330 - C754 * C320 + C749 * C331 - C755 * C321 +
            C32227 * C332 - C756 * C322) *
               C1706 +
           (C748 * C350 - C754 * C335 + C749 * C351 - C755 * C336 +
            C32227 * C352 - C756 * C337) *
               C32263 +
           (C748 * C340 - C754 * C325 + C749 * C341 - C755 * C326 +
            C32227 * C342 - C756 * C327) *
               C1707 +
           (C748 * C355 - C754 * C345 + C749 * C356 - C755 * C346 +
            C32227 * C357 - C756 * C347) *
               C32241) *
              C31955 * C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C748 * C126 - C754 * C119 + C749 * C127 - C755 * C120 +
            C32227 * C128 - C756 * C121) *
               C1705 +
           (C748 * C140 - C754 * C131 + C749 * C141 - C755 * C132 +
            C32227 * C142 - C756 * C133) *
               C32274 +
           (C748 * C328 - C754 * C318 + C749 * C329 - C755 * C319 +
            C32227 * C330 - C756 * C320) *
               C1706 +
           (C748 * C348 - C754 * C333 + C749 * C349 - C755 * C334 +
            C32227 * C350 - C756 * C335) *
               C32263 +
           (C748 * C338 - C754 * C323 + C749 * C339 - C755 * C324 +
            C32227 * C340 - C756 * C325) *
               C1707 +
           (C748 * C353 - C754 * C343 + C749 * C354 - C755 * C344 +
            C32227 * C355 - C756 * C345) *
               C32241) *
              C31955 * C31925 * C209 +
          ((C893 - C892 + C895 - C894 + C897 - C896) * C1705 +
           (C899 - C898 + C901 - C900 + C903 - C902) * C32274 +
           (C1569 - C1570 + C1571 - C1572 + C1573 - C1574) * C1706 +
           (C1575 - C1576 + C1577 - C1578 + C1579 - C1580) * C32263 +
           (C754 * C1053 - C748 * C1065 + C755 * C1054 - C749 * C1066 +
            C756 * C1055 - C32227 * C1067) *
               C1707 +
           (C754 * C1068 - C748 * C1080 + C755 * C1069 - C749 * C1081 +
            C756 * C1070 - C32227 * C1082) *
               C32241) *
              C31955 * C31925 * C210 +
          (C936 * C1705 + C937 * C32274 +
           (C1582 - C1581 + C1584 - C1583 + C1586 - C1585) * C1706 +
           (C1588 - C1587 + C1590 - C1589 + C1592 - C1591) * C32263 +
           (C748 * C1071 - C754 * C1056 + C749 * C1072 - C755 * C1057 +
            C32227 * C1073 - C756 * C1058) *
               C1707 +
           (C748 * C1083 - C754 * C1074 + C749 * C1084 - C755 * C1075 +
            C32227 * C1085 - C756 * C1076) *
               C32241) *
              C31955 * C31925 * C211) *
         C31899) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C32270 * C126 - C5154 * C119 + C32257 * C127 - C5155 * C120 +
             C32227 * C128 - C5156 * C121) *
                C118 +
            (C32270 * C140 - C5154 * C131 + C32257 * C141 - C5155 * C132 +
             C32227 * C142 - C5156 * C133) *
                C31966) *
               C5151 +
           ((C32270 * C223 - C5154 * C213 + C32257 * C224 - C5155 * C214 +
             C32227 * C225 - C5156 * C215) *
                C118 +
            (C32270 * C243 - C5154 * C228 + C32257 * C244 - C5155 * C229 +
             C32227 * C245 - C5156 * C230) *
                C31966) *
               C5152 +
           ((C32270 * C233 - C5154 * C218 + C32257 * C234 - C5155 * C219 +
             C32227 * C235 - C5156 * C220) *
                C118 +
            (C32270 * C248 - C5154 * C238 + C32257 * C249 - C5155 * C239 +
             C32227 * C250 - C5156 * C240) *
                C31966) *
               C32238) *
              C31925 * C31911 * C110 +
          (((C5154 * C120 - C32270 * C127 + C5155 * C121 - C32257 * C128 +
             C5156 * C122 - C32227 * C129) *
                C118 +
            (C5154 * C132 - C32270 * C141 + C5155 * C133 - C32257 * C142 +
             C5156 * C134 - C32227 * C143) *
                C31966) *
               C5151 +
           ((C5154 * C214 - C32270 * C224 + C5155 * C215 - C32257 * C225 +
             C5156 * C216 - C32227 * C226) *
                C118 +
            (C5154 * C229 - C32270 * C244 + C5155 * C230 - C32257 * C245 +
             C5156 * C231 - C32227 * C246) *
                C31966) *
               C5152 +
           ((C5154 * C219 - C32270 * C234 + C5155 * C220 - C32257 * C235 +
             C5156 * C221 - C32227 * C236) *
                C118 +
            (C5154 * C239 - C32270 * C249 + C5155 * C240 - C32257 * C250 +
             C5156 * C241 - C32227 * C251) *
                C31966) *
               C32238) *
              C31925 * C31911 * C111 +
          (((C32270 * C128 - C5154 * C121 + C32257 * C129 - C5155 * C122 +
             C32227 * C130 - C5156 * C123) *
                C118 +
            (C32270 * C142 - C5154 * C133 + C32257 * C143 - C5155 * C134 +
             C32227 * C144 - C5156 * C135) *
                C31966) *
               C5151 +
           ((C32270 * C225 - C5154 * C215 + C32257 * C226 - C5155 * C216 +
             C32227 * C227 - C5156 * C217) *
                C118 +
            (C32270 * C245 - C5154 * C230 + C32257 * C246 - C5155 * C231 +
             C32227 * C247 - C5156 * C232) *
                C31966) *
               C5152 +
           ((C32270 * C235 - C5154 * C220 + C32257 * C236 - C5155 * C221 +
             C32227 * C237 - C5156 * C222) *
                C118 +
            (C32270 * C250 - C5154 * C240 + C32257 * C251 - C5155 * C241 +
             C32227 * C252 - C5156 * C242) *
                C31966) *
               C32238) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C32270 * C126 - C5154 * C119 + C32257 * C127 - C5155 * C120 +
             C32227 * C128 - C5156 * C121) *
                C118 +
            (C32270 * C140 - C5154 * C131 + C32257 * C141 - C5155 * C132 +
             C32227 * C142 - C5156 * C133) *
                C31966) *
               C5151 +
           ((C5268 - C5269 + C5270 - C5271 + C5272 - C5273) * C118 +
            (C5274 - C5275 + C5276 - C5277 + C5278 - C5279) * C31966) *
               C5152 +
           C5316 * C32238) *
              C31925 * C209 +
          (((C5269 - C5268 + C5271 - C5270 + C5273 - C5272) * C118 +
            (C5275 - C5274 + C5277 - C5276 + C5279 - C5278) * C31966) *
               C5151 +
           ((C5281 - C5280 + C5283 - C5282 + C5285 - C5284) * C118 +
            (C5287 - C5286 + C5289 - C5288 + C5291 - C5290) * C31966) *
               C5152 +
           ((C5292 - C5293 + C5294 - C5295 + C5296 - C5297) * C118 +
            (C5298 - C5299 + C5300 - C5301 + C5302 - C5303) * C31966) *
               C32238) *
              C31925 * C210 +
          (C5316 * C5151 +
           ((C5293 - C5292 + C5295 - C5294 + C5297 - C5296) * C118 +
            (C5299 - C5298 + C5301 - C5300 + C5303 - C5302) * C31966) *
               C5152 +
           ((C32270 * C879 - C5154 * C870 + C32257 * C880 - C5155 * C871 +
             C32227 * C881 - C5156 * C872) *
                C118 +
            (C32270 * C888 - C5154 * C882 + C32257 * C889 - C5155 * C883 +
             C32227 * C890 - C5156 * C884) *
                C31966) *
               C32238) *
              C31925 * C211) *
         C31899) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C31862 * C126 - C5980 * C119) * C118 +
            (C31862 * C140 - C5980 * C131) * C31966) *
               C5975 +
           ((C31862 * C223 - C5980 * C213) * C118 +
            (C31862 * C243 - C5980 * C228) * C31966) *
               C5976 +
           ((C31862 * C233 - C5980 * C218) * C118 +
            (C31862 * C248 - C5980 * C238) * C31966) *
               C5977 +
           ((C31862 * C873 - C5980 * C867) * C118 +
            (C31862 * C885 - C5980 * C876) * C31966) *
               C5978 +
           ((C31862 * C879 - C5980 * C870) * C118 +
            (C31862 * C888 - C5980 * C882) * C31966) *
               C5979) *
              C31925 * C31911 * C110 +
          (((C5980 * C120 - C31862 * C127) * C118 +
            (C5980 * C132 - C31862 * C141) * C31966) *
               C5975 +
           ((C5980 * C214 - C31862 * C224) * C118 +
            (C5980 * C229 - C31862 * C244) * C31966) *
               C5976 +
           ((C5980 * C219 - C31862 * C234) * C118 +
            (C5980 * C239 - C31862 * C249) * C31966) *
               C5977 +
           ((C5980 * C868 - C31862 * C874) * C118 +
            (C5980 * C877 - C31862 * C886) * C31966) *
               C5978 +
           ((C5980 * C871 - C31862 * C880) * C118 +
            (C5980 * C883 - C31862 * C889) * C31966) *
               C5979) *
              C31925 * C31911 * C111 +
          (((C31862 * C128 - C5980 * C121) * C118 +
            (C31862 * C142 - C5980 * C133) * C31966) *
               C5975 +
           ((C31862 * C225 - C5980 * C215) * C118 +
            (C31862 * C245 - C5980 * C230) * C31966) *
               C5976 +
           ((C31862 * C235 - C5980 * C220) * C118 +
            (C31862 * C250 - C5980 * C240) * C31966) *
               C5977 +
           ((C31862 * C875 - C5980 * C869) * C118 +
            (C31862 * C887 - C5980 * C878) * C31966) *
               C5978 +
           ((C31862 * C881 - C5980 * C872) * C118 +
            (C31862 * C890 - C5980 * C884) * C31966) *
               C5979) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C31862 * C126 - C5980 * C119) * C118 +
            (C31862 * C140 - C5980 * C131) * C31966) *
               C5975 +
           ((C6052 - C6053) * C118 + (C6054 - C6055) * C31966) * C5976 +
           C6084 * C5977 + C6085 * C5978 + C6086 * C5979) *
              C31925 * C209 +
          (((C6053 - C6052) * C118 + (C6055 - C6054) * C31966) * C5975 +
           ((C6057 - C6056) * C118 + (C6059 - C6058) * C31966) * C5976 +
           ((C6061 - C6060) * C118 + (C6063 - C6062) * C31966) * C5977 +
           ((C6065 - C6064) * C118 + (C6067 - C6066) * C31966) * C5978 +
           ((C6068 - C6069) * C118 + (C6070 - C6071) * C31966) * C5979) *
              C31925 * C210 +
          (C6084 * C5975 + C6085 * C5976 + C6086 * C5977 +
           ((C6069 - C6068) * C118 + (C6071 - C6070) * C31966) * C5978 +
           ((C31862 * C6047 - C5980 * C6044) * C118 +
            (C31862 * C6050 - C5980 * C6048) * C31966) *
               C5979) *
              C31925 * C211) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C31862 * C126 - C5980 * C119) * C1705 +
            (C31862 * C140 - C5980 * C131) * C32274 +
            (C31862 * C328 - C5980 * C318) * C1706 +
            (C31862 * C348 - C5980 * C333) * C32263 +
            (C31862 * C338 - C5980 * C323) * C1707 +
            (C31862 * C353 - C5980 * C343) * C32241) *
               C5151 +
           ((C6052 - C6053) * C1705 + (C6054 - C6055) * C32274 +
            (C6436 - C6435) * C1706 + (C6438 - C6437) * C32263 +
            (C31862 * C1065 - C5980 * C1053) * C1707 +
            (C31862 * C1080 - C5980 * C1068) * C32241) *
               C5152 +
           (C6072 * C1705 + C6073 * C32274 + (C6440 - C6439) * C1706 +
            (C6442 - C6441) * C32263 +
            (C31862 * C1071 - C5980 * C1056) * C1707 +
            (C31862 * C1083 - C5980 * C1074) * C32241) *
               C32238) *
              C31925 * C31911 * C110 +
          (((C5980 * C120 - C31862 * C127) * C1705 +
            (C5980 * C132 - C31862 * C141) * C32274 +
            (C5980 * C319 - C31862 * C329) * C1706 +
            (C5980 * C334 - C31862 * C349) * C32263 +
            (C5980 * C324 - C31862 * C339) * C1707 +
            (C5980 * C344 - C31862 * C354) * C32241) *
               C5151 +
           ((C6247 - C6248) * C1705 + (C6249 - C6250) * C32274 +
            (C5980 * C619 - C31862 * C624) * C1706 +
            (C5980 * C629 - C31862 * C634) * C32263 +
            (C5980 * C1054 - C31862 * C1066) * C1707 +
            (C5980 * C1069 - C31862 * C1081) * C32241) *
               C5152 +
           ((C6251 - C6252) * C1705 + (C6253 - C6254) * C32274 +
            (C5980 * C1051 - C31862 * C1060) * C1706 +
            (C5980 * C1063 - C31862 * C1078) * C32263 +
            (C5980 * C1057 - C31862 * C1072) * C1707 +
            (C5980 * C1075 - C31862 * C1084) * C32241) *
               C32238) *
              C31925 * C31911 * C111 +
          (((C31862 * C128 - C5980 * C121) * C1705 +
            (C31862 * C142 - C5980 * C133) * C32274 +
            (C31862 * C330 - C5980 * C320) * C1706 +
            (C31862 * C350 - C5980 * C335) * C32263 +
            (C31862 * C340 - C5980 * C325) * C1707 +
            (C31862 * C355 - C5980 * C345) * C32241) *
               C5151 +
           ((C31862 * C225 - C5980 * C215) * C1705 +
            (C31862 * C245 - C5980 * C230) * C32274 +
            (C31862 * C625 - C5980 * C620) * C1706 +
            (C31862 * C635 - C5980 * C630) * C32263 +
            (C31862 * C1067 - C5980 * C1055) * C1707 +
            (C31862 * C1082 - C5980 * C1070) * C32241) *
               C5152 +
           ((C31862 * C235 - C5980 * C220) * C1705 +
            (C31862 * C250 - C5980 * C240) * C32274 +
            (C31862 * C1061 - C5980 * C1052) * C1706 +
            (C31862 * C1079 - C5980 * C1064) * C32263 +
            (C31862 * C1073 - C5980 * C1058) * C1707 +
            (C31862 * C1085 - C5980 * C1076) * C32241) *
               C32238) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C31862 * C126 - C5980 * C119) * C1705 +
            (C31862 * C140 - C5980 * C131) * C32274 +
            (C31862 * C328 - C5980 * C318) * C1706 +
            (C31862 * C348 - C5980 * C333) * C32263 +
            (C31862 * C338 - C5980 * C323) * C1707 +
            (C31862 * C353 - C5980 * C343) * C32241) *
               C5151 +
           ((C6052 - C6053) * C1705 + (C6054 - C6055) * C32274 +
            (C6436 - C6435) * C1706 + (C6438 - C6437) * C32263 +
            (C6671 - C6672) * C1707 + (C6673 - C6674) * C32241) *
               C5152 +
           C6697 * C32238) *
              C31925 * C209 +
          (((C6053 - C6052) * C1705 + (C6055 - C6054) * C32274 +
            (C6435 - C6436) * C1706 + (C6437 - C6438) * C32263 +
            (C6672 - C6671) * C1707 + (C6674 - C6673) * C32241) *
               C5151 +
           ((C6057 - C6056) * C1705 + (C6059 - C6058) * C32274 +
            (C6439 - C6440) * C1706 + (C6441 - C6442) * C32263 +
            (C6680 - C6679) * C1707 + (C6682 - C6681) * C32241) *
               C5152 +
           ((C6061 - C6060) * C1705 + (C6063 - C6062) * C32274 +
            (C6443 - C6444) * C1706 + (C6445 - C6446) * C32263 +
            (C6683 - C6684) * C1707 + (C6685 - C6686) * C32241) *
               C32238) *
              C31925 * C210 +
          (C6697 * C5151 +
           (C6074 * C1705 + C6075 * C32274 + (C6444 - C6443) * C1706 +
            (C6446 - C6445) * C32263 + (C6684 - C6683) * C1707 +
            (C6686 - C6685) * C32241) *
               C5152 +
           (C6076 * C1705 + C6077 * C32274 + (C6448 - C6447) * C1706 +
            (C6450 - C6449) * C32263 +
            (C31862 * C6155 - C5980 * C6150) * C1707 +
            (C31862 * C6159 - C5980 * C6156) * C32241) *
               C32238) *
              C31925 * C211) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C32270 * C126 - C5154 * C119 + C32257 * C127 - C5155 * C120 +
            C32227 * C128 - C5156 * C121) *
               C10043 +
           (C32270 * C140 - C5154 * C131 + C32257 * C141 - C5155 * C132 +
            C32227 * C142 - C5156 * C133) *
               C10040 +
           (C32270 * C328 - C5154 * C318 + C32257 * C329 - C5155 * C319 +
            C32227 * C330 - C5156 * C320) *
               C10044 +
           (C32270 * C348 - C5154 * C333 + C32257 * C349 - C5155 * C334 +
            C32227 * C350 - C5156 * C335) *
               C10041 +
           (C32270 * C338 - C5154 * C323 + C32257 * C339 - C5155 * C324 +
            C32227 * C340 - C5156 * C325) *
               C10045 +
           (C32270 * C353 - C5154 * C343 + C32257 * C354 - C5155 * C344 +
            C32227 * C355 - C5156 * C345) *
               C32241) *
              C31955 * C31925 * C31911 * C110 +
          ((C5154 * C120 - C32270 * C127 + C5155 * C121 - C32257 * C128 +
            C5156 * C122 - C32227 * C129) *
               C10043 +
           (C5154 * C132 - C32270 * C141 + C5155 * C133 - C32257 * C142 +
            C5156 * C134 - C32227 * C143) *
               C10040 +
           (C5154 * C319 - C32270 * C329 + C5155 * C320 - C32257 * C330 +
            C5156 * C321 - C32227 * C331) *
               C10044 +
           (C5154 * C334 - C32270 * C349 + C5155 * C335 - C32257 * C350 +
            C5156 * C336 - C32227 * C351) *
               C10041 +
           (C5154 * C324 - C32270 * C339 + C5155 * C325 - C32257 * C340 +
            C5156 * C326 - C32227 * C341) *
               C10045 +
           (C5154 * C344 - C32270 * C354 + C5155 * C345 - C32257 * C355 +
            C5156 * C346 - C32227 * C356) *
               C32241) *
              C31955 * C31925 * C31911 * C111 +
          ((C32270 * C128 - C5154 * C121 + C32257 * C129 - C5155 * C122 +
            C32227 * C130 - C5156 * C123) *
               C10043 +
           (C32270 * C142 - C5154 * C133 + C32257 * C143 - C5155 * C134 +
            C32227 * C144 - C5156 * C135) *
               C10040 +
           (C32270 * C330 - C5154 * C320 + C32257 * C331 - C5155 * C321 +
            C32227 * C332 - C5156 * C322) *
               C10044 +
           (C32270 * C350 - C5154 * C335 + C32257 * C351 - C5155 * C336 +
            C32227 * C352 - C5156 * C337) *
               C10041 +
           (C32270 * C340 - C5154 * C325 + C32257 * C341 - C5155 * C326 +
            C32227 * C342 - C5156 * C327) *
               C10045 +
           (C32270 * C355 - C5154 * C345 + C32257 * C356 - C5155 * C346 +
            C32227 * C357 - C5156 * C347) *
               C32241) *
              C31955 * C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C32270 * C126 - C5154 * C119 + C32257 * C127 - C5155 * C120 +
            C32227 * C128 - C5156 * C121) *
               C10043 +
           (C32270 * C140 - C5154 * C131 + C32257 * C141 - C5155 * C132 +
            C32227 * C142 - C5156 * C133) *
               C10040 +
           (C32270 * C328 - C5154 * C318 + C32257 * C329 - C5155 * C319 +
            C32227 * C330 - C5156 * C320) *
               C10044 +
           (C32270 * C348 - C5154 * C333 + C32257 * C349 - C5155 * C334 +
            C32227 * C350 - C5156 * C335) *
               C10041 +
           (C32270 * C338 - C5154 * C323 + C32257 * C339 - C5155 * C324 +
            C32227 * C340 - C5156 * C325) *
               C10045 +
           (C32270 * C353 - C5154 * C343 + C32257 * C354 - C5155 * C344 +
            C32227 * C355 - C5156 * C345) *
               C32241) *
              C31955 * C31925 * C209 +
          ((C5269 - C5268 + C5271 - C5270 + C5273 - C5272) * C10043 +
           (C5275 - C5274 + C5277 - C5276 + C5279 - C5278) * C10040 +
           (C5889 - C5890 + C5891 - C5892 + C5893 - C5894) * C10044 +
           (C5895 - C5896 + C5897 - C5898 + C5899 - C5900) * C10041 +
           (C5154 * C1053 - C32270 * C1065 + C5155 * C1054 - C32257 * C1066 +
            C5156 * C1055 - C32227 * C1067) *
               C10045 +
           (C5154 * C1068 - C32270 * C1080 + C5155 * C1069 - C32257 * C1081 +
            C5156 * C1070 - C32227 * C1082) *
               C32241) *
              C31955 * C31925 * C210 +
          (C5312 * C10043 + C5313 * C10040 +
           (C5902 - C5901 + C5904 - C5903 + C5906 - C5905) * C10044 +
           (C5908 - C5907 + C5910 - C5909 + C5912 - C5911) * C10041 +
           (C32270 * C1071 - C5154 * C1056 + C32257 * C1072 - C5155 * C1057 +
            C32227 * C1073 - C5156 * C1058) *
               C10045 +
           (C32270 * C1083 - C5154 * C1074 + C32257 * C1084 - C5155 * C1075 +
            C32227 * C1085 - C5156 * C1076) *
               C32241) *
              C31955 * C31925 * C211) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C31862 * C126 - C5980 * C119) * C10043 +
            (C31862 * C140 - C5980 * C131) * C10040 + (C6820 - C6821) * C10044 +
            (C6822 - C6823) * C10041 + C6842 * C10045 + C6843 * C32241) *
               C32273 +
           ((C6052 - C6053) * C10043 + (C6054 - C6055) * C10040 +
            C7318 * C10044 + C7319 * C10041 + C6828 * C10045 + C6829 * C32241) *
               C32261 +
           (C6072 * C10043 + C6073 * C10040 + C6677 * C10044 + C6678 * C10041 +
            C6690 * C10045 + C6691 * C32241) *
               C32238) *
              C31925 * C31911 * C110 +
          (((C5980 * C120 - C31862 * C127) * C10043 +
            (C5980 * C132 - C31862 * C141) * C10040 + (C7160 - C7161) * C10044 +
            (C7162 - C7163) * C10041 + (C7164 - C7165) * C10045 +
            (C7166 - C7167) * C32241) *
               C32273 +
           ((C6247 - C6248) * C10043 + (C6249 - C6250) * C10040 +
            (C6994 - C6995) * C10044 + (C6996 - C6997) * C10041 +
            (C6998 - C6999) * C10045 + (C7000 - C7001) * C32241) *
               C32261 +
           ((C6251 - C6252) * C10043 + (C6253 - C6254) * C10040 +
            (C7002 - C7003) * C10044 + (C7004 - C7005) * C10041 +
            (C7006 - C7007) * C10045 + (C7008 - C7009) * C32241) *
               C32238) *
              C31925 * C31911 * C111 +
          (((C31862 * C128 - C5980 * C121) * C10043 +
            (C31862 * C142 - C5980 * C133) * C10040 +
            (C31862 * C330 - C5980 * C320) * C10044 +
            (C31862 * C350 - C5980 * C335) * C10041 +
            (C31862 * C340 - C5980 * C325) * C10045 +
            (C31862 * C355 - C5980 * C345) * C32241) *
               C32273 +
           ((C31862 * C225 - C5980 * C215) * C10043 +
            (C31862 * C245 - C5980 * C230) * C10040 +
            (C31862 * C625 - C5980 * C620) * C10044 +
            (C31862 * C635 - C5980 * C630) * C10041 +
            (C31862 * C1067 - C5980 * C1055) * C10045 +
            (C31862 * C1082 - C5980 * C1070) * C32241) *
               C32261 +
           ((C31862 * C235 - C5980 * C220) * C10043 +
            (C31862 * C250 - C5980 * C240) * C10040 +
            (C31862 * C1061 - C5980 * C1052) * C10044 +
            (C31862 * C1079 - C5980 * C1064) * C10041 +
            (C31862 * C1073 - C5980 * C1058) * C10045 +
            (C31862 * C1085 - C5980 * C1076) * C32241) *
               C32238) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C31862 * C126 - C5980 * C119) * C10043 +
            (C31862 * C140 - C5980 * C131) * C10040 + (C6820 - C6821) * C10044 +
            (C6822 - C6823) * C10041 + C6842 * C10045 + C6843 * C32241) *
               C32273 +
           ((C6052 - C6053) * C10043 + (C6054 - C6055) * C10040 +
            C7318 * C10044 + C7319 * C10041 + C6828 * C10045 + C6829 * C32241) *
               C32261 +
           C11017 * C32238) *
              C31925 * C209 +
          (((C6053 - C6052) * C10043 + (C6055 - C6054) * C10040 +
            C7320 * C10044 + C7321 * C10041 + C7322 * C10045 + C7323 * C32241) *
               C32273 +
           ((C6057 - C6056) * C10043 + (C6059 - C6058) * C10040 +
            C7324 * C10044 + C7325 * C10041 + C7326 * C10045 + C7327 * C32241) *
               C32261 +
           ((C6061 - C6060) * C10043 + (C6063 - C6062) * C10040 +
            C9929 * C10044 + C9930 * C10041 + (C6683 - C6684) * C10045 +
            (C6685 - C6686) * C32241) *
               C32238) *
              C31925 * C210 +
          (C11017 * C32273 +
           (C6074 * C10043 + C6075 * C10040 + C9427 * C10044 + C9428 * C10041 +
            (C6684 - C6683) * C10045 + (C6686 - C6685) * C32241) *
               C32261 +
           (C6076 * C10043 + C6077 * C10040 + (C6448 - C6447) * C10044 +
            (C6450 - C6449) * C10041 +
            (C31862 * C6155 - C5980 * C6150) * C10045 +
            (C31862 * C6159 - C5980 * C6156) * C32241) *
               C32238) *
              C31925 * C211) *
         C31899) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C31862 * C126 - C5980 * C119) * C11632 +
           (C31862 * C140 - C5980 * C131) * C11627 + (C6820 - C6821) * C11633 +
           (C6822 - C6823) * C11628 + C6842 * C11634 + C6843 * C11629 +
           (C6831 - C6830) * C11635 + (C6833 - C6832) * C11630 +
           (C31862 * C1940 - C5980 * C1931) * C11636 +
           (C31862 * C1949 - C5980 * C1943) * C11631) *
              C31955 * C31925 * C31911 * C110 +
          ((C5980 * C120 - C31862 * C127) * C11632 +
           (C5980 * C132 - C31862 * C141) * C11627 + (C7160 - C7161) * C11633 +
           (C7162 - C7163) * C11628 + (C7164 - C7165) * C11634 +
           (C7166 - C7167) * C11629 +
           (C5980 * C1929 - C31862 * C1935) * C11635 +
           (C5980 * C1938 - C31862 * C1947) * C11630 +
           (C5980 * C1932 - C31862 * C1941) * C11636 +
           (C5980 * C1944 - C31862 * C1950) * C11631) *
              C31955 * C31925 * C31911 * C111 +
          ((C31862 * C128 - C5980 * C121) * C11632 +
           (C31862 * C142 - C5980 * C133) * C11627 +
           (C31862 * C330 - C5980 * C320) * C11633 +
           (C31862 * C350 - C5980 * C335) * C11628 +
           (C31862 * C340 - C5980 * C325) * C11634 +
           (C31862 * C355 - C5980 * C345) * C11629 +
           (C31862 * C1936 - C5980 * C1930) * C11635 +
           (C31862 * C1948 - C5980 * C1939) * C11630 +
           (C31862 * C1942 - C5980 * C1933) * C11636 +
           (C31862 * C1951 - C5980 * C1945) * C11631) *
              C31955 * C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C31862 * C126 - C5980 * C119) * C11632 +
           (C31862 * C140 - C5980 * C131) * C11627 + (C6820 - C6821) * C11633 +
           (C6822 - C6823) * C11628 + C6842 * C11634 + C6843 * C11629 +
           (C6831 - C6830) * C11635 + (C6833 - C6832) * C11630 +
           (C31862 * C1940 - C5980 * C1931) * C11636 +
           (C31862 * C1949 - C5980 * C1943) * C11631) *
              C31955 * C31925 * C209 +
          ((C6053 - C6052) * C11632 + (C6055 - C6054) * C11627 +
           C7320 * C11633 + C7321 * C11628 + C7322 * C11634 + C7323 * C11629 +
           (C6834 - C6835) * C11635 + (C6836 - C6837) * C11630 +
           (C5980 * C6808 - C31862 * C6812) * C11636 +
           (C5980 * C6813 - C31862 * C6817) * C11631) *
              C31955 * C31925 * C210 +
          (C6072 * C11632 + C6073 * C11627 + C6677 * C11633 + C6678 * C11628 +
           C6690 * C11634 + C6691 * C11629 + (C6839 - C6838) * C11635 +
           (C6841 - C6840) * C11630 +
           (C31862 * C6814 - C5980 * C6809) * C11636 +
           (C31862 * C6818 - C5980 * C6815) * C11631) *
              C31955 * C31925 * C211) *
         C31899) /
            (p * q * std::sqrt(p + q));
    d2ee[65] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C32188 * C126 - C30873 * C119 + C31872 * C127 - C30854 * C120) *
                 C3350 +
             (C32188 * C140 - C30873 * C131 + C31872 * C141 - C30854 * C132) *
                 C32208 +
             (C8569 - C8570 + C8571 - C8572) * C3351 +
             (C8573 - C8574 + C8575 - C8576) * C32053) *
                C5151 +
            ((C7532 - C7533 + C7534 - C7535) * C3350 +
             (C7536 - C7537 + C7538 - C7539) * C32208 +
             (C8095 - C8094 + C8097 - C8096) * C3351 +
             (C8099 - C8098 + C8101 - C8100) * C32053) *
                C5152 +
            C8422 * C32238) *
               C31925 * C440 +
           (((C7533 - C7532 + C7535 - C7534) * C3350 +
             (C7537 - C7536 + C7539 - C7538) * C32208 +
             (C8094 - C8095 + C8096 - C8097) * C3351 +
             (C8098 - C8099 + C8100 - C8101) * C32053) *
                C5151 +
            ((C7541 - C7540 + C7543 - C7542) * C3350 +
             (C7545 - C7544 + C7547 - C7546) * C32208 +
             (C8102 - C8103 + C8104 - C8105) * C3351 +
             (C8106 - C8107 + C8108 - C8109) * C32053) *
                C5152 +
            ((C7549 - C7548 + C7551 - C7550) * C3350 +
             (C7553 - C7552 + C7555 - C7554) * C32208 +
             (C8110 - C8111 + C8112 - C8113) * C3351 +
             (C8114 - C8115 + C8116 - C8117) * C32053) *
                C32238) *
               C31925 * C441) *
              C442 +
          ((((C30873 * C120 - C32188 * C127 + C30854 * C121 - C31872 * C128) *
                 C3350 +
             (C30873 * C132 - C32188 * C141 + C30854 * C133 - C31872 * C142) *
                 C32208 +
             (C30873 * C319 - C32188 * C329 + C30854 * C320 - C31872 * C330) *
                 C3351 +
             (C30873 * C334 - C32188 * C349 + C30854 * C335 - C31872 * C350) *
                 C32053) *
                C5151 +
            ((C7810 - C7811 + C7812 - C7813) * C3350 +
             (C7814 - C7815 + C7816 - C7817) * C32208 +
             (C8795 - C8796 + C8797 - C8798) * C3351 +
             (C8799 - C8800 + C8801 - C8802) * C32053) *
                C5152 +
            ((C7818 - C7819 + C7820 - C7821) * C3350 +
             (C7822 - C7823 + C7824 - C7825) * C32208 +
             (C8803 - C8804 + C8805 - C8806) * C3351 +
             (C8807 - C8808 + C8809 - C8810) * C32053) *
                C32238) *
               C31925 * C440 +
           (((C7811 - C7810 + C7813 - C7812) * C3350 +
             (C7815 - C7814 + C7817 - C7816) * C32208 +
             (C8796 - C8795 + C8798 - C8797) * C3351 +
             (C8800 - C8799 + C8802 - C8801) * C32053) *
                C5151 +
            ((C7819 - C7818 + C7821 - C7820) * C3350 +
             (C7823 - C7822 + C7825 - C7824) * C32208 +
             (C8804 - C8803 + C8806 - C8805) * C3351 +
             (C8808 - C8807 + C8810 - C8809) * C32053) *
                C5152 +
            ((C7827 - C7826 + C7829 - C7828) * C3350 +
             (C7831 - C7830 + C7833 - C7832) * C32208 +
             (C32188 * C1560 - C30873 * C1557 + C31872 * C1561 -
              C30854 * C1558) *
                 C3351 +
             (C32188 * C1566 - C30873 * C1563 + C31872 * C1567 -
              C30854 * C1564) *
                 C32053) *
                C32238) *
               C31925 * C441) *
              C443)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2590 * C126 - C2596 * C119 + C2591 * C127 - C2597 * C120 +
             C2592 * C128 - C2598 * C121 + C32242 * C129 - C2599 * C122) *
                C3350 +
            (C2590 * C140 - C2596 * C131 + C2591 * C141 - C2597 * C132 +
             C2592 * C142 - C2598 * C133 + C32242 * C143 - C2599 * C134) *
                C32208 +
            (C3549 - C3550 + C3551 - C3552 + C3553 - C3554 + C3555 - C3556) *
                C3351 +
            (C3557 - C3558 + C3559 - C3560 + C3561 - C3562 + C3563 - C3564) *
                C32053) *
               C31955 * C31925 * C440 +
           ((C2700 - C2699 + C2702 - C2701 + C2704 - C2703 + C2706 - C2705) *
                C3350 +
            (C2708 - C2707 + C2710 - C2709 + C2712 - C2711 + C2714 - C2713) *
                C32208 +
            (C3235 - C3236 + C3237 - C3238 + C3239 - C3240 + C3241 - C3242) *
                C3351 +
            (C3243 - C3244 + C3245 - C3246 + C3247 - C3248 + C3249 - C3250) *
                C32053) *
               C31955 * C31925 * C441) *
              C442 +
          (((C2596 * C120 - C2590 * C127 + C2597 * C121 - C2591 * C128 +
             C2598 * C122 - C2592 * C129 + C2599 * C123 - C32242 * C130) *
                C3350 +
            (C2596 * C132 - C2590 * C141 + C2597 * C133 - C2591 * C142 +
             C2598 * C134 - C2592 * C143 + C2599 * C135 - C32242 * C144) *
                C32208 +
            (C2596 * C319 - C2590 * C329 + C2597 * C320 - C2591 * C330 +
             C2598 * C321 - C2592 * C331 + C2599 * C322 - C32242 * C332) *
                C3351 +
            (C2596 * C334 - C2590 * C349 + C2597 * C335 - C2591 * C350 +
             C2598 * C336 - C2592 * C351 + C2599 * C337 - C32242 * C352) *
                C32053) *
               C31955 * C31925 * C440 +
           ((C2960 - C2959 + C2962 - C2961 + C2964 - C2963 + C2966 - C2965) *
                C3350 +
            (C2968 - C2967 + C2970 - C2969 + C2972 - C2971 + C2974 - C2973) *
                C32208 +
            (C2590 * C624 - C2596 * C619 + C2591 * C625 - C2597 * C620 +
             C2592 * C626 - C2598 * C621 + C32242 * C627 - C2599 * C622) *
                C3351 +
            (C2590 * C634 - C2596 * C629 + C2591 * C635 - C2597 * C630 +
             C2592 * C636 - C2598 * C631 + C32242 * C637 - C2599 * C632) *
                C32053) *
               C31955 * C31925 * C441) *
              C443)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C32188 * C126 - C30873 * C119 + C31872 * C127 - C30854 * C120) *
                C13223 +
            (C32188 * C140 - C30873 * C131 + C31872 * C141 - C30854 * C132) *
                C13219 +
            (C8569 - C8570 + C8571 - C8572) * C13224 +
            (C8573 - C8574 + C8575 - C8576) * C13220 + C12514 * C13225 +
            C12515 * C13221 + C13436 * C13226 + C13437 * C32254) *
               C31955 * C31925 * C440 +
           ((C7533 - C7532 + C7535 - C7534) * C13223 +
            (C7537 - C7536 + C7539 - C7538) * C13219 + C9221 * C13224 +
            C9222 * C13220 + C13120 * C13225 + C13121 * C13221 +
            (C12506 - C12507 + C12508 - C12509) * C13226 +
            (C12510 - C12511 + C12512 - C12513) * C32254) *
               C31955 * C31925 * C441) *
              C442 +
          (((C30873 * C120 - C32188 * C127 + C30854 * C121 - C31872 * C128) *
                C13223 +
            (C30873 * C132 - C32188 * C141 + C30854 * C133 - C31872 * C142) *
                C13219 +
            (C9005 - C9006 + C9007 - C9008) * C13224 +
            (C9009 - C9010 + C9011 - C9012) * C13220 +
            (C12914 - C12915 + C12916 - C12917) * C13225 +
            (C12918 - C12919 + C12920 - C12921) * C13221 +
            (C30873 * C1929 - C32188 * C1935 + C30854 * C1930 -
             C31872 * C1936) *
                C13226 +
            (C30873 * C1938 - C32188 * C1947 + C30854 * C1939 -
             C31872 * C1948) *
                C32254) *
               C31955 * C31925 * C440 +
           ((C7811 - C7810 + C7813 - C7812) * C13223 +
            (C7815 - C7814 + C7817 - C7816) * C13219 +
            (C8796 - C8795 + C8798 - C8797) * C13224 +
            (C8800 - C8799 + C8802 - C8801) * C13220 +
            (C12713 - C12712 + C12715 - C12714) * C13225 +
            (C12717 - C12716 + C12719 - C12718) * C13221 +
            (C32188 * C2472 - C30873 * C2469 + C31872 * C2473 -
             C30854 * C2470) *
                C13226 +
            (C32188 * C2478 - C30873 * C2475 + C31872 * C2479 -
             C30854 * C2476) *
                C32254) *
               C31955 * C31925 * C441) *
              C443)) /
            (p * q * std::sqrt(p + q));
    d2ee[66] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C32188 * C126 - C30873 * C119 + C31872 * C127 - C30854 * C120) *
                 C3350 +
             (C32188 * C140 - C30873 * C131 + C31872 * C141 - C30854 * C132) *
                 C32208 +
             (C8569 - C8570 + C8571 - C8572) * C3351 +
             (C8573 - C8574 + C8575 - C8576) * C32053) *
                C5151 +
            ((C7532 - C7533 + C7534 - C7535) * C3350 +
             (C7536 - C7537 + C7538 - C7539) * C32208 + C9219 * C3351 +
             C9220 * C32053) *
                C5152 +
            C8422 * C32238) *
               C530 +
           (((C8570 - C8569 + C8572 - C8571) * C3350 +
             (C8574 - C8573 + C8576 - C8575) * C32208 +
             (C8577 - C8578 + C8579 - C8580) * C3351 +
             (C8581 - C8582 + C8583 - C8584) * C32053) *
                C5151 +
            (C9221 * C3350 + C9222 * C32208 +
             (C8585 - C8586 + C8587 - C8588) * C3351 +
             (C8589 - C8590 + C8591 - C8592) * C32053) *
                C5152 +
            (C9223 * C3350 + C9224 * C32208 +
             (C8593 - C8594 + C8595 - C8596) * C3351 +
             (C8597 - C8598 + C8599 - C8600) * C32053) *
                C32238) *
               C531) *
              C440 +
          ((((C7533 - C7532 + C7535 - C7534) * C3350 +
             (C7537 - C7536 + C7539 - C7538) * C32208 + C9221 * C3351 +
             C9222 * C32053) *
                C5151 +
            ((C7541 - C7540 + C7543 - C7542) * C3350 +
             (C7545 - C7544 + C7547 - C7546) * C32208 + C9223 * C3351 +
             C9224 * C32053) *
                C5152 +
            ((C7549 - C7548 + C7551 - C7550) * C3350 +
             (C7553 - C7552 + C7555 - C7554) * C32208 +
             (C8110 - C8111 + C8112 - C8113) * C3351 +
             (C8114 - C8115 + C8116 - C8117) * C32053) *
                C32238) *
               C530 +
           ((C9219 * C3350 + C9220 * C32208 +
             (C8586 - C8585 + C8588 - C8587) * C3351 +
             (C8590 - C8589 + C8592 - C8591) * C32053) *
                C5151 +
            (C8417 * C3350 + C8418 * C32208 +
             (C8594 - C8593 + C8596 - C8595) * C3351 +
             (C8598 - C8597 + C8600 - C8599) * C32053) *
                C5152 +
            ((C8111 - C8110 + C8113 - C8112) * C3350 +
             (C8115 - C8114 + C8117 - C8116) * C32208 +
             (C32188 * C6153 - C30873 * C6149 + C31872 * C6990 -
              C30854 * C6989) *
                 C3351 +
             (C32188 * C6158 - C30873 * C6154 + C31872 * C6992 -
              C30854 * C6991) *
                 C32053) *
                C32238) *
               C531) *
              C441) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2590 * C126 - C2596 * C119 + C2591 * C127 - C2597 * C120 +
             C2592 * C128 - C2598 * C121 + C32242 * C129 - C2599 * C122) *
                C3350 +
            (C2590 * C140 - C2596 * C131 + C2591 * C141 - C2597 * C132 +
             C2592 * C142 - C2598 * C133 + C32242 * C143 - C2599 * C134) *
                C32208 +
            (C3549 - C3550 + C3551 - C3552 + C3553 - C3554 + C3555 - C3556) *
                C3351 +
            (C3557 - C3558 + C3559 - C3560 + C3561 - C3562 + C3563 - C3564) *
                C32053) *
               C31955 * C530 +
           ((C3550 - C3549 + C3552 - C3551 + C3554 - C3553 + C3556 - C3555) *
                C3350 +
            (C3558 - C3557 + C3560 - C3559 + C3562 - C3561 + C3564 - C3563) *
                C32208 +
            (C3565 - C3566 + C3567 - C3568 + C3569 - C3570 + C3571 - C3572) *
                C3351 +
            (C3573 - C3574 + C3575 - C3576 + C3577 - C3578 + C3579 - C3580) *
                C32053) *
               C31955 * C531) *
              C440 +
          (((C2700 - C2699 + C2702 - C2701 + C2704 - C2703 + C2706 - C2705) *
                C3350 +
            (C2708 - C2707 + C2710 - C2709 + C2712 - C2711 + C2714 - C2713) *
                C32208 +
            (C3235 - C3236 + C3237 - C3238 + C3239 - C3240 + C3241 - C3242) *
                C3351 +
            (C3243 - C3244 + C3245 - C3246 + C3247 - C3248 + C3249 - C3250) *
                C32053) *
               C31955 * C530 +
           ((C3236 - C3235 + C3238 - C3237 + C3240 - C3239 + C3242 - C3241) *
                C3350 +
            (C3244 - C3243 + C3246 - C3245 + C3248 - C3247 + C3250 - C3249) *
                C32208 +
            (C2590 * C1065 - C2596 * C1053 + C2591 * C1066 - C2597 * C1054 +
             C2592 * C1067 - C2598 * C1055 + C32242 * C2145 - C2599 * C2144) *
                C3351 +
            (C2590 * C1080 - C2596 * C1068 + C2591 * C1081 - C2597 * C1069 +
             C2592 * C1082 - C2598 * C1070 + C32242 * C2147 - C2599 * C2146) *
                C32053) *
               C31955 * C531) *
              C441) *
         C31899) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C32188 * C126 - C30873 * C119 + C31872 * C127 - C30854 * C120) *
                C13223 +
            (C32188 * C140 - C30873 * C131 + C31872 * C141 - C30854 * C132) *
                C13219 +
            (C8569 - C8570 + C8571 - C8572) * C13224 +
            (C8573 - C8574 + C8575 - C8576) * C13220 + C12514 * C13225 +
            C12515 * C13221 + C13436 * C13226 + C13437 * C32254) *
               C31955 * C530 +
           ((C8570 - C8569 + C8572 - C8571) * C13223 +
            (C8574 - C8573 + C8576 - C8575) * C13219 +
            (C8577 - C8578 + C8579 - C8580) * C13224 +
            (C8581 - C8582 + C8583 - C8584) * C13220 +
            (C12498 - C12499 + C12500 - C12501) * C13225 +
            (C12502 - C12503 + C12504 - C12505) * C13221 +
            (C13428 - C13429 + C13430 - C13431) * C13226 +
            (C13432 - C13433 + C13434 - C13435) * C32254) *
               C31955 * C531) *
              C440 +
          (((C7533 - C7532 + C7535 - C7534) * C13223 +
            (C7537 - C7536 + C7539 - C7538) * C13219 + C9221 * C13224 +
            C9222 * C13220 + C13120 * C13225 + C13121 * C13221 +
            (C12506 - C12507 + C12508 - C12509) * C13226 +
            (C12510 - C12511 + C12512 - C12513) * C32254) *
               C31955 * C530 +
           (C9219 * C13223 + C9220 * C13219 + C12516 * C13224 +
            C12517 * C13220 + (C12507 - C12506 + C12509 - C12508) * C13225 +
            (C12511 - C12510 + C12513 - C12512) * C13221 +
            (C32188 * C6812 - C30873 * C6808 + C31872 * C11864 -
             C30854 * C11863) *
                C13226 +
            (C32188 * C6817 - C30873 * C6813 + C31872 * C11866 -
             C30854 * C11865) *
                C32254) *
               C31955 * C531) *
              C441) *
         C31899) /
            (p * q * std::sqrt(p + q));
    d2ee[67] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C2590 * C126 - C2596 * C119 + C2591 * C127 - C2597 * C120 +
                C2592 * C128 - C2598 * C121 + C32242 * C129 - C2599 * C122) *
                   C3350 +
               (C2590 * C140 - C2596 * C131 + C2591 * C141 - C2597 * C132 +
                C2592 * C142 - C2598 * C133 + C32242 * C143 - C2599 * C134) *
                   C32208 +
               (C2590 * C328 - C2596 * C318 + C2591 * C329 - C2597 * C319 +
                C2592 * C330 - C2598 * C320 + C32242 * C331 - C2599 * C321) *
                   C3351 +
               (C2590 * C348 - C2596 * C333 + C2591 * C349 - C2597 * C334 +
                C2592 * C350 - C2598 * C335 + C32242 * C351 - C2599 * C336) *
                   C32053) *
                  C31955 * C31925 * C31911 * C110 +
              ((C2596 * C120 - C2590 * C127 + C2597 * C121 - C2591 * C128 +
                C2598 * C122 - C2592 * C129 + C2599 * C123 - C32242 * C130) *
                   C3350 +
               (C2596 * C132 - C2590 * C141 + C2597 * C133 - C2591 * C142 +
                C2598 * C134 - C2592 * C143 + C2599 * C135 - C32242 * C144) *
                   C32208 +
               (C2596 * C319 - C2590 * C329 + C2597 * C320 - C2591 * C330 +
                C2598 * C321 - C2592 * C331 + C2599 * C322 - C32242 * C332) *
                   C3351 +
               (C2596 * C334 - C2590 * C349 + C2597 * C335 - C2591 * C350 +
                C2598 * C336 - C2592 * C351 + C2599 * C337 - C32242 * C352) *
                   C32053) *
                  C31955 * C31925 * C31911 * C111 +
              ((C2590 * C128 - C2596 * C121 + C2591 * C129 - C2597 * C122 +
                C2592 * C130 - C2598 * C123 + C32242 * C136 - C2599 * C124) *
                   C3350 +
               (C2590 * C142 - C2596 * C133 + C2591 * C143 - C2597 * C134 +
                C2592 * C144 - C2598 * C135 + C32242 * C145 - C2599 * C137) *
                   C32208 +
               (C2590 * C330 - C2596 * C320 + C2591 * C331 - C2597 * C321 +
                C2592 * C332 - C2598 * C322 + C32242 * C533 - C2599 * C532) *
                   C3351 +
               (C2590 * C350 - C2596 * C335 + C2591 * C351 - C2597 * C336 +
                C2592 * C352 - C2598 * C337 + C32242 * C535 - C2599 * C534) *
                   C32053) *
                  C31955 * C31925 * C31911 * C112) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C2590 * C126 - C2596 * C119 + C2591 * C127 - C2597 * C120 +
                C2592 * C128 - C2598 * C121 + C32242 * C129 - C2599 * C122) *
                   C3350 +
               (C2590 * C140 - C2596 * C131 + C2591 * C141 - C2597 * C132 +
                C2592 * C142 - C2598 * C133 + C32242 * C143 - C2599 * C134) *
                   C32208 +
               (C2590 * C328 - C2596 * C318 + C2591 * C329 - C2597 * C319 +
                C2592 * C330 - C2598 * C320 + C32242 * C331 - C2599 * C321) *
                   C3351 +
               (C2590 * C348 - C2596 * C333 + C2591 * C349 - C2597 * C334 +
                C2592 * C350 - C2598 * C335 + C32242 * C351 - C2599 * C336) *
                   C32053) *
                  C31955 * C31925 * C209 +
              ((C2700 - C2699 + C2702 - C2701 + C2704 - C2703 + C2706 - C2705) *
                   C3350 +
               (C2708 - C2707 + C2710 - C2709 + C2712 - C2711 + C2714 - C2713) *
                   C32208 +
               (C3235 - C3236 + C3237 - C3238 + C3239 - C3240 + C3241 - C3242) *
                   C3351 +
               (C3243 - C3244 + C3245 - C3246 + C3247 - C3248 + C3249 - C3250) *
                   C32053) *
                  C31955 * C31925 * C210 +
              ((C2716 - C2715 + C2718 - C2717 + C2720 - C2719 + C2722 - C2721) *
                   C3350 +
               (C2724 - C2723 + C2726 - C2725 + C2728 - C2727 + C2730 - C2729) *
                   C32208 +
               (C2590 * C1059 - C2596 * C1050 + C2591 * C1060 - C2597 * C1051 +
                C2592 * C1061 - C2598 * C1052 + C32242 * C1407 -
                C2599 * C1406) *
                   C3351 +
               (C2590 * C1077 - C2596 * C1062 + C2591 * C1078 - C2597 * C1063 +
                C2592 * C1079 - C2598 * C1064 + C32242 * C1409 -
                C2599 * C1408) *
                   C32053) *
                  C31955 * C31925 * C211) *
             C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C2590 * C126 - C2596 * C119 + C2591 * C127 - C2597 * C120 +
            C2592 * C128 - C2598 * C121 + C32242 * C129 - C2599 * C122) *
               C3350 +
           (C2590 * C140 - C2596 * C131 + C2591 * C141 - C2597 * C132 +
            C2592 * C142 - C2598 * C133 + C32242 * C143 - C2599 * C134) *
               C32208 +
           (C3549 - C3550 + C3551 - C3552 + C3553 - C3554 + C3555 - C3556) *
               C3351 +
           (C3557 - C3558 + C3559 - C3560 + C3561 - C3562 + C3563 - C3564) *
               C32053) *
              C31955 * C315 +
          ((C3550 - C3549 + C3552 - C3551 + C3554 - C3553 + C3556 - C3555) *
               C3350 +
           (C3558 - C3557 + C3560 - C3559 + C3562 - C3561 + C3564 - C3563) *
               C32208 +
           (C3565 - C3566 + C3567 - C3568 + C3569 - C3570 + C3571 - C3572) *
               C3351 +
           (C3573 - C3574 + C3575 - C3576 + C3577 - C3578 + C3579 - C3580) *
               C32053) *
              C31955 * C316 +
          ((C3566 - C3565 + C3568 - C3567 + C3570 - C3569 + C3572 - C3571) *
               C3350 +
           (C3574 - C3573 + C3576 - C3575 + C3578 - C3577 + C3580 - C3579) *
               C32208 +
           (C2590 * C1934 - C2596 * C1928 + C2591 * C1935 - C2597 * C1929 +
            C2592 * C1936 - C2598 * C1930 + C32242 * C2295 - C2599 * C2294) *
               C3351 +
           (C2590 * C1946 - C2596 * C1937 + C2591 * C1947 - C2597 * C1938 +
            C2592 * C1948 - C2598 * C1939 + C32242 * C2297 - C2599 * C2296) *
               C32053) *
              C31955 * C317) *
         C31911 * C31899) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C32188 * C126 - C30873 * C119 + C31872 * C127 - C30854 * C120) *
                C3350 +
            (C32188 * C140 - C30873 * C131 + C31872 * C141 - C30854 * C132) *
                C32208 +
            (C32188 * C328 - C30873 * C318 + C31872 * C329 - C30854 * C319) *
                C3351 +
            (C32188 * C348 - C30873 * C333 + C31872 * C349 - C30854 * C334) *
                C32053) *
               C5151 +
           ((C7532 - C7533 + C7534 - C7535) * C3350 +
            (C7536 - C7537 + C7538 - C7539) * C32208 +
            (C8095 - C8094 + C8097 - C8096) * C3351 +
            (C8099 - C8098 + C8101 - C8100) * C32053) *
               C5152 +
           (C7572 * C3350 + C7573 * C32208 +
            (C8103 - C8102 + C8105 - C8104) * C3351 +
            (C8107 - C8106 + C8109 - C8108) * C32053) *
               C32238) *
              C31925 * C31911 * C110 +
          (((C30873 * C120 - C32188 * C127 + C30854 * C121 - C31872 * C128) *
                C3350 +
            (C30873 * C132 - C32188 * C141 + C30854 * C133 - C31872 * C142) *
                C32208 +
            (C30873 * C319 - C32188 * C329 + C30854 * C320 - C31872 * C330) *
                C3351 +
            (C30873 * C334 - C32188 * C349 + C30854 * C335 - C31872 * C350) *
                C32053) *
               C5151 +
           ((C7810 - C7811 + C7812 - C7813) * C3350 +
            (C7814 - C7815 + C7816 - C7817) * C32208 +
            (C30873 * C619 - C32188 * C624 + C30854 * C620 - C31872 * C625) *
                C3351 +
            (C30873 * C629 - C32188 * C634 + C30854 * C630 - C31872 * C635) *
                C32053) *
               C5152 +
           ((C7818 - C7819 + C7820 - C7821) * C3350 +
            (C7822 - C7823 + C7824 - C7825) * C32208 +
            (C30873 * C1051 - C32188 * C1060 + C30854 * C1052 -
             C31872 * C1061) *
                C3351 +
            (C30873 * C1063 - C32188 * C1078 + C30854 * C1064 -
             C31872 * C1079) *
                C32053) *
               C32238) *
              C31925 * C31911 * C111 +
          (((C32188 * C128 - C30873 * C121 + C31872 * C129 - C30854 * C122) *
                C3350 +
            (C32188 * C142 - C30873 * C133 + C31872 * C143 - C30854 * C134) *
                C32208 +
            (C32188 * C330 - C30873 * C320 + C31872 * C331 - C30854 * C321) *
                C3351 +
            (C32188 * C350 - C30873 * C335 + C31872 * C351 - C30854 * C336) *
                C32053) *
               C5151 +
           ((C32188 * C225 - C30873 * C215 + C31872 * C226 - C30854 * C216) *
                C3350 +
            (C32188 * C245 - C30873 * C230 + C31872 * C246 - C30854 * C231) *
                C32208 +
            (C32188 * C625 - C30873 * C620 + C31872 * C626 - C30854 * C621) *
                C3351 +
            (C32188 * C635 - C30873 * C630 + C31872 * C636 - C30854 * C631) *
                C32053) *
               C5152 +
           ((C32188 * C235 - C30873 * C220 + C31872 * C236 - C30854 * C221) *
                C3350 +
            (C32188 * C250 - C30873 * C240 + C31872 * C251 - C30854 * C241) *
                C32208 +
            (C32188 * C1061 - C30873 * C1052 + C31872 * C1407 -
             C30854 * C1406) *
                C3351 +
            (C32188 * C1079 - C30873 * C1064 + C31872 * C1409 -
             C30854 * C1408) *
                C32053) *
               C32238) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C32188 * C126 - C30873 * C119 + C31872 * C127 - C30854 * C120) *
                C3350 +
            (C32188 * C140 - C30873 * C131 + C31872 * C141 - C30854 * C132) *
                C32208 +
            (C32188 * C328 - C30873 * C318 + C31872 * C329 - C30854 * C319) *
                C3351 +
            (C32188 * C348 - C30873 * C333 + C31872 * C349 - C30854 * C334) *
                C32053) *
               C5151 +
           ((C7532 - C7533 + C7534 - C7535) * C3350 +
            (C7536 - C7537 + C7538 - C7539) * C32208 +
            (C8095 - C8094 + C8097 - C8096) * C3351 +
            (C8099 - C8098 + C8101 - C8100) * C32053) *
               C5152 +
           C8422 * C32238) *
              C31925 * C209 +
          (((C7533 - C7532 + C7535 - C7534) * C3350 +
            (C7537 - C7536 + C7539 - C7538) * C32208 +
            (C8094 - C8095 + C8096 - C8097) * C3351 +
            (C8098 - C8099 + C8100 - C8101) * C32053) *
               C5151 +
           ((C7541 - C7540 + C7543 - C7542) * C3350 +
            (C7545 - C7544 + C7547 - C7546) * C32208 +
            (C8102 - C8103 + C8104 - C8105) * C3351 +
            (C8106 - C8107 + C8108 - C8109) * C32053) *
               C5152 +
           ((C7549 - C7548 + C7551 - C7550) * C3350 +
            (C7553 - C7552 + C7555 - C7554) * C32208 +
            (C8110 - C8111 + C8112 - C8113) * C3351 +
            (C8114 - C8115 + C8116 - C8117) * C32053) *
               C32238) *
              C31925 * C210 +
          (C8422 * C5151 +
           (C7574 * C3350 + C7575 * C32208 +
            (C8111 - C8110 + C8113 - C8112) * C3351 +
            (C8115 - C8114 + C8117 - C8116) * C32053) *
               C5152 +
           ((C7557 - C7556 + C7559 - C7558) * C3350 +
            (C7561 - C7560 + C7563 - C7562) * C32208 +
            (C32188 * C6151 - C30873 * C6148 + C31872 * C6345 -
             C30854 * C6344) *
                C3351 +
            (C32188 * C6157 - C30873 * C6152 + C31872 * C6347 -
             C30854 * C6346) *
                C32053) *
               C32238) *
              C31925 * C211) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C32188 * C126 - C30873 * C119 + C31872 * C127 - C30854 * C120) *
                C3350 +
            (C32188 * C140 - C30873 * C131 + C31872 * C141 - C30854 * C132) *
                C32208 +
            (C8569 - C8570 + C8571 - C8572) * C3351 +
            (C8573 - C8574 + C8575 - C8576) * C32053) *
               C5151 +
           ((C7532 - C7533 + C7534 - C7535) * C3350 +
            (C7536 - C7537 + C7538 - C7539) * C32208 +
            (C8095 - C8094 + C8097 - C8096) * C3351 +
            (C8099 - C8098 + C8101 - C8100) * C32053) *
               C5152 +
           C8422 * C32238) *
              C315 +
          (((C8570 - C8569 + C8572 - C8571) * C3350 +
            (C8574 - C8573 + C8576 - C8575) * C32208 +
            (C8577 - C8578 + C8579 - C8580) * C3351 +
            (C8581 - C8582 + C8583 - C8584) * C32053) *
               C5151 +
           ((C8094 - C8095 + C8096 - C8097) * C3350 +
            (C8098 - C8099 + C8100 - C8101) * C32208 +
            (C8585 - C8586 + C8587 - C8588) * C3351 +
            (C8589 - C8590 + C8591 - C8592) * C32053) *
               C5152 +
           ((C8102 - C8103 + C8104 - C8105) * C3350 +
            (C8106 - C8107 + C8108 - C8109) * C32208 +
            (C8593 - C8594 + C8595 - C8596) * C3351 +
            (C8597 - C8598 + C8599 - C8600) * C32053) *
               C32238) *
              C316 +
          (((C8578 - C8577 + C8580 - C8579) * C3350 +
            (C8582 - C8581 + C8584 - C8583) * C32208 +
            (C32188 * C1934 - C30873 * C1928 + C31872 * C1935 -
             C30854 * C1929) *
                C3351 +
            (C32188 * C1946 - C30873 * C1937 + C31872 * C1947 -
             C30854 * C1938) *
                C32053) *
               C5151 +
           ((C8586 - C8585 + C8588 - C8587) * C3350 +
            (C8590 - C8589 + C8592 - C8591) * C32208 +
            (C32188 * C2471 - C30873 * C2468 + C31872 * C2472 -
             C30854 * C2469) *
                C3351 +
            (C32188 * C2477 - C30873 * C2474 + C31872 * C2478 -
             C30854 * C2475) *
                C32053) *
               C5152 +
           ((C8594 - C8593 + C8596 - C8595) * C3350 +
            (C8598 - C8597 + C8600 - C8599) * C32208 +
            (C32188 * C6810 - C30873 * C6807 + C31872 * C7156 -
             C30854 * C7155) *
                C3351 +
            (C32188 * C6816 - C30873 * C6811 + C31872 * C7158 -
             C30854 * C7157) *
                C32053) *
               C32238) *
              C317) *
         C31911 * C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C32188 * C126 - C30873 * C119 + C31872 * C127 - C30854 * C120) *
               C13223 +
           (C32188 * C140 - C30873 * C131 + C31872 * C141 - C30854 * C132) *
               C13219 +
           (C8569 - C8570 + C8571 - C8572) * C13224 +
           (C8573 - C8574 + C8575 - C8576) * C13220 + C12514 * C13225 +
           C12515 * C13221 + (C12499 - C12498 + C12501 - C12500) * C13226 +
           (C12503 - C12502 + C12505 - C12504) * C32254) *
              C31955 * C31925 * C31911 * C110 +
          ((C30873 * C120 - C32188 * C127 + C30854 * C121 - C31872 * C128) *
               C13223 +
           (C30873 * C132 - C32188 * C141 + C30854 * C133 - C31872 * C142) *
               C13219 +
           (C9005 - C9006 + C9007 - C9008) * C13224 +
           (C9009 - C9010 + C9011 - C9012) * C13220 +
           (C12914 - C12915 + C12916 - C12917) * C13225 +
           (C12918 - C12919 + C12920 - C12921) * C13221 +
           (C30873 * C1929 - C32188 * C1935 + C30854 * C1930 - C31872 * C1936) *
               C13226 +
           (C30873 * C1938 - C32188 * C1947 + C30854 * C1939 - C31872 * C1948) *
               C32254) *
              C31955 * C31925 * C31911 * C111 +
          ((C32188 * C128 - C30873 * C121 + C31872 * C129 - C30854 * C122) *
               C13223 +
           (C32188 * C142 - C30873 * C133 + C31872 * C143 - C30854 * C134) *
               C13219 +
           (C32188 * C330 - C30873 * C320 + C31872 * C331 - C30854 * C321) *
               C13224 +
           (C32188 * C350 - C30873 * C335 + C31872 * C351 - C30854 * C336) *
               C13220 +
           (C32188 * C340 - C30873 * C325 + C31872 * C341 - C30854 * C326) *
               C13225 +
           (C32188 * C355 - C30873 * C345 + C31872 * C356 - C30854 * C346) *
               C13221 +
           (C32188 * C1936 - C30873 * C1930 + C31872 * C2295 - C30854 * C2294) *
               C13226 +
           (C32188 * C1948 - C30873 * C1939 + C31872 * C2297 - C30854 * C2296) *
               C32254) *
              C31955 * C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C32188 * C126 - C30873 * C119 + C31872 * C127 - C30854 * C120) *
               C13223 +
           (C32188 * C140 - C30873 * C131 + C31872 * C141 - C30854 * C132) *
               C13219 +
           (C8569 - C8570 + C8571 - C8572) * C13224 +
           (C8573 - C8574 + C8575 - C8576) * C13220 + C12514 * C13225 +
           C12515 * C13221 + (C12499 - C12498 + C12501 - C12500) * C13226 +
           (C12503 - C12502 + C12505 - C12504) * C32254) *
              C31955 * C31925 * C209 +
          ((C7533 - C7532 + C7535 - C7534) * C13223 +
           (C7537 - C7536 + C7539 - C7538) * C13219 + C9221 * C13224 +
           C9222 * C13220 + C13120 * C13225 + C13121 * C13221 +
           (C12506 - C12507 + C12508 - C12509) * C13226 +
           (C12510 - C12511 + C12512 - C12513) * C32254) *
              C31955 * C31925 * C210 +
          (C7572 * C13223 + C7573 * C13219 + C8417 * C13224 + C8418 * C13220 +
           (C8594 - C8593 + C8596 - C8595) * C13225 +
           (C8598 - C8597 + C8600 - C8599) * C13221 +
           (C32188 * C6810 - C30873 * C6807 + C31872 * C7156 - C30854 * C7155) *
               C13226 +
           (C32188 * C6816 - C30873 * C6811 + C31872 * C7158 - C30854 * C7157) *
               C32254) *
              C31955 * C31925 * C211) *
         C31899) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C32188 * C126 - C30873 * C119 + C31872 * C127 - C30854 * C120) *
               C13223 +
           (C32188 * C140 - C30873 * C131 + C31872 * C141 - C30854 * C132) *
               C13219 +
           (C8569 - C8570 + C8571 - C8572) * C13224 +
           (C8573 - C8574 + C8575 - C8576) * C13220 + C12514 * C13225 +
           C12515 * C13221 + C13436 * C13226 + C13437 * C32254) *
              C31955 * C315 +
          ((C8570 - C8569 + C8572 - C8571) * C13223 +
           (C8574 - C8573 + C8576 - C8575) * C13219 +
           (C8577 - C8578 + C8579 - C8580) * C13224 +
           (C8581 - C8582 + C8583 - C8584) * C13220 +
           (C12498 - C12499 + C12500 - C12501) * C13225 +
           (C12502 - C12503 + C12504 - C12505) * C13221 +
           (C13428 - C13429 + C13430 - C13431) * C13226 +
           (C13432 - C13433 + C13434 - C13435) * C32254) *
              C31955 * C316 +
          (C12514 * C13223 + C12515 * C13219 + C13436 * C13224 +
           C13437 * C13220 + (C13429 - C13428 + C13431 - C13430) * C13225 +
           (C13433 - C13432 + C13435 - C13434) * C13221 +
           (C32188 * C11763 - C30873 * C11761 + C31872 * C11950 -
            C30854 * C11949) *
               C13226 +
           (C32188 * C11767 - C30873 * C11764 + C31872 * C11952 -
            C30854 * C11951) *
               C32254) *
              C31955 * C317) *
         C31911 * C31899) /
            (p * q * std::sqrt(p + q));
    d2ee[68] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C32188 * C126 - C30873 * C119 + C31872 * C127 - C30854 * C120) *
                 C3350 +
             (C32188 * C140 - C30873 * C131 + C31872 * C141 - C30854 * C132) *
                 C32208 +
             (C8569 - C8570 + C8571 - C8572) * C3351 +
             (C8573 - C8574 + C8575 - C8576) * C32053) *
                C5151 +
            ((C7532 - C7533 + C7534 - C7535) * C3350 +
             (C7536 - C7537 + C7538 - C7539) * C32208 +
             (C8095 - C8094 + C8097 - C8096) * C3351 +
             (C8099 - C8098 + C8101 - C8100) * C32053) *
                C5152 +
            C8422 * C32238) *
               C530 +
           (((C8570 - C8569 + C8572 - C8571) * C3350 +
             (C8574 - C8573 + C8576 - C8575) * C32208 +
             (C8577 - C8578 + C8579 - C8580) * C3351 +
             (C8581 - C8582 + C8583 - C8584) * C32053) *
                C5151 +
            ((C8094 - C8095 + C8096 - C8097) * C3350 +
             (C8098 - C8099 + C8100 - C8101) * C32208 +
             (C8585 - C8586 + C8587 - C8588) * C3351 +
             (C8589 - C8590 + C8591 - C8592) * C32053) *
                C5152 +
            ((C8102 - C8103 + C8104 - C8105) * C3350 +
             (C8106 - C8107 + C8108 - C8109) * C32208 +
             (C8593 - C8594 + C8595 - C8596) * C3351 +
             (C8597 - C8598 + C8599 - C8600) * C32053) *
                C32238) *
               C531) *
              C31911 * C442 +
          ((((C30873 * C120 - C32188 * C127 + C30854 * C121 - C31872 * C128) *
                 C3350 +
             (C30873 * C132 - C32188 * C141 + C30854 * C133 - C31872 * C142) *
                 C32208 +
             (C9005 - C9006 + C9007 - C9008) * C3351 +
             (C9009 - C9010 + C9011 - C9012) * C32053) *
                C5151 +
            ((C7810 - C7811 + C7812 - C7813) * C3350 +
             (C7814 - C7815 + C7816 - C7817) * C32208 +
             (C8795 - C8796 + C8797 - C8798) * C3351 +
             (C8799 - C8800 + C8801 - C8802) * C32053) *
                C5152 +
            ((C7818 - C7819 + C7820 - C7821) * C3350 +
             (C7822 - C7823 + C7824 - C7825) * C32208 +
             (C8803 - C8804 + C8805 - C8806) * C3351 +
             (C8807 - C8808 + C8809 - C8810) * C32053) *
                C32238) *
               C530 +
           (((C9006 - C9005 + C9008 - C9007) * C3350 +
             (C9010 - C9009 + C9012 - C9011) * C32208 +
             (C32188 * C339 - C30873 * C324 + C31872 * C340 - C30854 * C325) *
                 C3351 +
             (C32188 * C354 - C30873 * C344 + C31872 * C355 - C30854 * C345) *
                 C32053) *
                C5151 +
            ((C8796 - C8795 + C8798 - C8797) * C3350 +
             (C8800 - C8799 + C8802 - C8801) * C32208 +
             (C32188 * C1066 - C30873 * C1054 + C31872 * C1067 -
              C30854 * C1055) *
                 C3351 +
             (C32188 * C1081 - C30873 * C1069 + C31872 * C1082 -
              C30854 * C1070) *
                 C32053) *
                C5152 +
            ((C8804 - C8803 + C8806 - C8805) * C3350 +
             (C8808 - C8807 + C8810 - C8809) * C32208 +
             (C32188 * C1072 - C30873 * C1057 + C31872 * C1073 -
              C30854 * C1058) *
                 C3351 +
             (C32188 * C1084 - C30873 * C1075 + C31872 * C1085 -
              C30854 * C1076) *
                 C32053) *
                C32238) *
               C531) *
              C31911 * C443)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2590 * C126 - C2596 * C119 + C2591 * C127 - C2597 * C120 +
             C2592 * C128 - C2598 * C121 + C32242 * C129 - C2599 * C122) *
                C3350 +
            (C2590 * C140 - C2596 * C131 + C2591 * C141 - C2597 * C132 +
             C2592 * C142 - C2598 * C133 + C32242 * C143 - C2599 * C134) *
                C32208 +
            (C3549 - C3550 + C3551 - C3552 + C3553 - C3554 + C3555 - C3556) *
                C3351 +
            (C3557 - C3558 + C3559 - C3560 + C3561 - C3562 + C3563 - C3564) *
                C32053) *
               C31955 * C530 +
           ((C3550 - C3549 + C3552 - C3551 + C3554 - C3553 + C3556 - C3555) *
                C3350 +
            (C3558 - C3557 + C3560 - C3559 + C3562 - C3561 + C3564 - C3563) *
                C32208 +
            (C3565 - C3566 + C3567 - C3568 + C3569 - C3570 + C3571 - C3572) *
                C3351 +
            (C3573 - C3574 + C3575 - C3576 + C3577 - C3578 + C3579 - C3580) *
                C32053) *
               C31955 * C531) *
              C31911 * C442 +
          (((C2596 * C120 - C2590 * C127 + C2597 * C121 - C2591 * C128 +
             C2598 * C122 - C2592 * C129 + C2599 * C123 - C32242 * C130) *
                C3350 +
            (C2596 * C132 - C2590 * C141 + C2597 * C133 - C2591 * C142 +
             C2598 * C134 - C2592 * C143 + C2599 * C135 - C32242 * C144) *
                C32208 +
            (C3841 - C3842 + C3843 - C3844 + C3845 - C3846 + C3847 - C3848) *
                C3351 +
            (C3849 - C3850 + C3851 - C3852 + C3853 - C3854 + C3855 - C3856) *
                C32053) *
               C31955 * C530 +
           ((C3842 - C3841 + C3844 - C3843 + C3846 - C3845 + C3848 - C3847) *
                C3350 +
            (C3850 - C3849 + C3852 - C3851 + C3854 - C3853 + C3856 - C3855) *
                C32208 +
            (C2590 * C339 - C2596 * C324 + C2591 * C340 - C2597 * C325 +
             C2592 * C341 - C2598 * C326 + C32242 * C342 - C2599 * C327) *
                C3351 +
            (C2590 * C354 - C2596 * C344 + C2591 * C355 - C2597 * C345 +
             C2592 * C356 - C2598 * C346 + C32242 * C357 - C2599 * C347) *
                C32053) *
               C31955 * C531) *
              C31911 * C443)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C32188 * C126 - C30873 * C119 + C31872 * C127 - C30854 * C120) *
                C13223 +
            (C32188 * C140 - C30873 * C131 + C31872 * C141 - C30854 * C132) *
                C13219 +
            (C8569 - C8570 + C8571 - C8572) * C13224 +
            (C8573 - C8574 + C8575 - C8576) * C13220 + C12514 * C13225 +
            C12515 * C13221 + C13436 * C13226 + C13437 * C32254) *
               C31955 * C530 +
           ((C8570 - C8569 + C8572 - C8571) * C13223 +
            (C8574 - C8573 + C8576 - C8575) * C13219 +
            (C8577 - C8578 + C8579 - C8580) * C13224 +
            (C8581 - C8582 + C8583 - C8584) * C13220 +
            (C12498 - C12499 + C12500 - C12501) * C13225 +
            (C12502 - C12503 + C12504 - C12505) * C13221 +
            (C13428 - C13429 + C13430 - C13431) * C13226 +
            (C13432 - C13433 + C13434 - C13435) * C32254) *
               C31955 * C531) *
              C31911 * C442 +
          (((C30873 * C120 - C32188 * C127 + C30854 * C121 - C31872 * C128) *
                C13223 +
            (C30873 * C132 - C32188 * C141 + C30854 * C133 - C31872 * C142) *
                C13219 +
            (C9005 - C9006 + C9007 - C9008) * C13224 +
            (C9009 - C9010 + C9011 - C9012) * C13220 +
            (C12914 - C12915 + C12916 - C12917) * C13225 +
            (C12918 - C12919 + C12920 - C12921) * C13221 +
            (C13698 - C13699 + C13700 - C13701) * C13226 +
            (C13702 - C13703 + C13704 - C13705) * C32254) *
               C31955 * C530 +
           ((C9006 - C9005 + C9008 - C9007) * C13223 +
            (C9010 - C9009 + C9012 - C9011) * C13219 +
            (C12915 - C12914 + C12917 - C12916) * C13224 +
            (C12919 - C12918 + C12921 - C12920) * C13220 +
            (C13699 - C13698 + C13701 - C13700) * C13225 +
            (C13703 - C13702 + C13705 - C13704) * C13221 +
            (C32188 * C1941 - C30873 * C1932 + C31872 * C1942 -
             C30854 * C1933) *
                C13226 +
            (C32188 * C1950 - C30873 * C1944 + C31872 * C1951 -
             C30854 * C1945) *
                C32254) *
               C31955 * C531) *
              C31911 * C443)) /
            (p * q * std::sqrt(p + q));
    d2ee[69] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C2590 * C126 - C2596 * C119 + C2591 * C127 - C2597 * C120 +
            C2592 * C128 - C2598 * C121 + C32242 * C129 - C2599 * C122) *
               C3350 +
           (C2590 * C140 - C2596 * C131 + C2591 * C141 - C2597 * C132 +
            C2592 * C142 - C2598 * C133 + C32242 * C143 - C2599 * C134) *
               C32208 +
           (C2590 * C328 - C2596 * C318 + C2591 * C329 - C2597 * C319 +
            C2592 * C330 - C2598 * C320 + C32242 * C331 - C2599 * C321) *
               C3351 +
           (C2590 * C348 - C2596 * C333 + C2591 * C349 - C2597 * C334 +
            C2592 * C350 - C2598 * C335 + C32242 * C351 - C2599 * C336) *
               C32053) *
              C31955 * C31925 * C209 +
          ((C2700 - C2699 + C2702 - C2701 + C2704 - C2703 + C2706 - C2705) *
               C3350 +
           (C2708 - C2707 + C2710 - C2709 + C2712 - C2711 + C2714 - C2713) *
               C32208 +
           (C3235 - C3236 + C3237 - C3238 + C3239 - C3240 + C3241 - C3242) *
               C3351 +
           (C3243 - C3244 + C3245 - C3246 + C3247 - C3248 + C3249 - C3250) *
               C32053) *
              C31955 * C31925 * C210 +
          ((C2716 - C2715 + C2718 - C2717 + C2720 - C2719 + C2722 - C2721) *
               C3350 +
           (C2724 - C2723 + C2726 - C2725 + C2728 - C2727 + C2730 - C2729) *
               C32208 +
           (C2590 * C1059 - C2596 * C1050 + C2591 * C1060 - C2597 * C1051 +
            C2592 * C1061 - C2598 * C1052 + C32242 * C1407 - C2599 * C1406) *
               C3351 +
           (C2590 * C1077 - C2596 * C1062 + C2591 * C1078 - C2597 * C1063 +
            C2592 * C1079 - C2598 * C1064 + C32242 * C1409 - C2599 * C1408) *
               C32053) *
              C31955 * C31925 * C211) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C2590 * C126 - C2596 * C119 + C2591 * C127 - C2597 * C120 +
            C2592 * C128 - C2598 * C121 + C32242 * C129 - C2599 * C122) *
               C3350 +
           (C2590 * C140 - C2596 * C131 + C2591 * C141 - C2597 * C132 +
            C2592 * C142 - C2598 * C133 + C32242 * C143 - C2599 * C134) *
               C32208 +
           (C2590 * C328 - C2596 * C318 + C2591 * C329 - C2597 * C319 +
            C2592 * C330 - C2598 * C320 + C32242 * C331 - C2599 * C321) *
               C3351 +
           (C2590 * C348 - C2596 * C333 + C2591 * C349 - C2597 * C334 +
            C2592 * C350 - C2598 * C335 + C32242 * C351 - C2599 * C336) *
               C32053) *
              C31955 * C31925 * C31911 * C110 +
          ((C2596 * C120 - C2590 * C127 + C2597 * C121 - C2591 * C128 +
            C2598 * C122 - C2592 * C129 + C2599 * C123 - C32242 * C130) *
               C3350 +
           (C2596 * C132 - C2590 * C141 + C2597 * C133 - C2591 * C142 +
            C2598 * C134 - C2592 * C143 + C2599 * C135 - C32242 * C144) *
               C32208 +
           (C2596 * C319 - C2590 * C329 + C2597 * C320 - C2591 * C330 +
            C2598 * C321 - C2592 * C331 + C2599 * C322 - C32242 * C332) *
               C3351 +
           (C2596 * C334 - C2590 * C349 + C2597 * C335 - C2591 * C350 +
            C2598 * C336 - C2592 * C351 + C2599 * C337 - C32242 * C352) *
               C32053) *
              C31955 * C31925 * C31911 * C111 +
          ((C2590 * C128 - C2596 * C121 + C2591 * C129 - C2597 * C122 +
            C2592 * C130 - C2598 * C123 + C32242 * C136 - C2599 * C124) *
               C3350 +
           (C2590 * C142 - C2596 * C133 + C2591 * C143 - C2597 * C134 +
            C2592 * C144 - C2598 * C135 + C32242 * C145 - C2599 * C137) *
               C32208 +
           (C2590 * C330 - C2596 * C320 + C2591 * C331 - C2597 * C321 +
            C2592 * C332 - C2598 * C322 + C32242 * C533 - C2599 * C532) *
               C3351 +
           (C2590 * C350 - C2596 * C335 + C2591 * C351 - C2597 * C336 +
            C2592 * C352 - C2598 * C337 + C32242 * C535 - C2599 * C534) *
               C32053) *
              C31955 * C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C32188 * C126 - C30873 * C119 + C31872 * C127 - C30854 * C120) *
                C3350 +
            (C32188 * C140 - C30873 * C131 + C31872 * C141 - C30854 * C132) *
                C32208 +
            (C32188 * C328 - C30873 * C318 + C31872 * C329 - C30854 * C319) *
                C3351 +
            (C32188 * C348 - C30873 * C333 + C31872 * C349 - C30854 * C334) *
                C32053) *
               C5151 +
           ((C7532 - C7533 + C7534 - C7535) * C3350 +
            (C7536 - C7537 + C7538 - C7539) * C32208 +
            (C8095 - C8094 + C8097 - C8096) * C3351 +
            (C8099 - C8098 + C8101 - C8100) * C32053) *
               C5152 +
           (C7572 * C3350 + C7573 * C32208 +
            (C8103 - C8102 + C8105 - C8104) * C3351 +
            (C8107 - C8106 + C8109 - C8108) * C32053) *
               C32238) *
              C31925 * C31911 * C110 +
          (((C30873 * C120 - C32188 * C127 + C30854 * C121 - C31872 * C128) *
                C3350 +
            (C30873 * C132 - C32188 * C141 + C30854 * C133 - C31872 * C142) *
                C32208 +
            (C30873 * C319 - C32188 * C329 + C30854 * C320 - C31872 * C330) *
                C3351 +
            (C30873 * C334 - C32188 * C349 + C30854 * C335 - C31872 * C350) *
                C32053) *
               C5151 +
           ((C7810 - C7811 + C7812 - C7813) * C3350 +
            (C7814 - C7815 + C7816 - C7817) * C32208 +
            (C30873 * C619 - C32188 * C624 + C30854 * C620 - C31872 * C625) *
                C3351 +
            (C30873 * C629 - C32188 * C634 + C30854 * C630 - C31872 * C635) *
                C32053) *
               C5152 +
           ((C7818 - C7819 + C7820 - C7821) * C3350 +
            (C7822 - C7823 + C7824 - C7825) * C32208 +
            (C30873 * C1051 - C32188 * C1060 + C30854 * C1052 -
             C31872 * C1061) *
                C3351 +
            (C30873 * C1063 - C32188 * C1078 + C30854 * C1064 -
             C31872 * C1079) *
                C32053) *
               C32238) *
              C31925 * C31911 * C111 +
          (((C32188 * C128 - C30873 * C121 + C31872 * C129 - C30854 * C122) *
                C3350 +
            (C32188 * C142 - C30873 * C133 + C31872 * C143 - C30854 * C134) *
                C32208 +
            (C32188 * C330 - C30873 * C320 + C31872 * C331 - C30854 * C321) *
                C3351 +
            (C32188 * C350 - C30873 * C335 + C31872 * C351 - C30854 * C336) *
                C32053) *
               C5151 +
           ((C32188 * C225 - C30873 * C215 + C31872 * C226 - C30854 * C216) *
                C3350 +
            (C32188 * C245 - C30873 * C230 + C31872 * C246 - C30854 * C231) *
                C32208 +
            (C32188 * C625 - C30873 * C620 + C31872 * C626 - C30854 * C621) *
                C3351 +
            (C32188 * C635 - C30873 * C630 + C31872 * C636 - C30854 * C631) *
                C32053) *
               C5152 +
           ((C32188 * C235 - C30873 * C220 + C31872 * C236 - C30854 * C221) *
                C3350 +
            (C32188 * C250 - C30873 * C240 + C31872 * C251 - C30854 * C241) *
                C32208 +
            (C32188 * C1061 - C30873 * C1052 + C31872 * C1407 -
             C30854 * C1406) *
                C3351 +
            (C32188 * C1079 - C30873 * C1064 + C31872 * C1409 -
             C30854 * C1408) *
                C32053) *
               C32238) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C32188 * C126 - C30873 * C119 + C31872 * C127 - C30854 * C120) *
                C3350 +
            (C32188 * C140 - C30873 * C131 + C31872 * C141 - C30854 * C132) *
                C32208 +
            (C32188 * C328 - C30873 * C318 + C31872 * C329 - C30854 * C319) *
                C3351 +
            (C32188 * C348 - C30873 * C333 + C31872 * C349 - C30854 * C334) *
                C32053) *
               C5151 +
           ((C7532 - C7533 + C7534 - C7535) * C3350 +
            (C7536 - C7537 + C7538 - C7539) * C32208 +
            (C8095 - C8094 + C8097 - C8096) * C3351 +
            (C8099 - C8098 + C8101 - C8100) * C32053) *
               C5152 +
           C8422 * C32238) *
              C31925 * C209 +
          (((C7533 - C7532 + C7535 - C7534) * C3350 +
            (C7537 - C7536 + C7539 - C7538) * C32208 +
            (C8094 - C8095 + C8096 - C8097) * C3351 +
            (C8098 - C8099 + C8100 - C8101) * C32053) *
               C5151 +
           ((C7541 - C7540 + C7543 - C7542) * C3350 +
            (C7545 - C7544 + C7547 - C7546) * C32208 +
            (C8102 - C8103 + C8104 - C8105) * C3351 +
            (C8106 - C8107 + C8108 - C8109) * C32053) *
               C5152 +
           ((C7549 - C7548 + C7551 - C7550) * C3350 +
            (C7553 - C7552 + C7555 - C7554) * C32208 +
            (C8110 - C8111 + C8112 - C8113) * C3351 +
            (C8114 - C8115 + C8116 - C8117) * C32053) *
               C32238) *
              C31925 * C210 +
          (C8422 * C5151 +
           (C7574 * C3350 + C7575 * C32208 +
            (C8111 - C8110 + C8113 - C8112) * C3351 +
            (C8115 - C8114 + C8117 - C8116) * C32053) *
               C5152 +
           ((C7557 - C7556 + C7559 - C7558) * C3350 +
            (C7561 - C7560 + C7563 - C7562) * C32208 +
            (C32188 * C6151 - C30873 * C6148 + C31872 * C6345 -
             C30854 * C6344) *
                C3351 +
            (C32188 * C6157 - C30873 * C6152 + C31872 * C6347 -
             C30854 * C6346) *
                C32053) *
               C32238) *
              C31925 * C211) *
         C31899) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C32188 * C126 - C30873 * C119 + C31872 * C127 - C30854 * C120) *
               C13223 +
           (C32188 * C140 - C30873 * C131 + C31872 * C141 - C30854 * C132) *
               C13219 +
           (C8569 - C8570 + C8571 - C8572) * C13224 +
           (C8573 - C8574 + C8575 - C8576) * C13220 + C12514 * C13225 +
           C12515 * C13221 + (C12499 - C12498 + C12501 - C12500) * C13226 +
           (C12503 - C12502 + C12505 - C12504) * C32254) *
              C31955 * C31925 * C31911 * C110 +
          ((C30873 * C120 - C32188 * C127 + C30854 * C121 - C31872 * C128) *
               C13223 +
           (C30873 * C132 - C32188 * C141 + C30854 * C133 - C31872 * C142) *
               C13219 +
           (C9005 - C9006 + C9007 - C9008) * C13224 +
           (C9009 - C9010 + C9011 - C9012) * C13220 +
           (C12914 - C12915 + C12916 - C12917) * C13225 +
           (C12918 - C12919 + C12920 - C12921) * C13221 +
           (C30873 * C1929 - C32188 * C1935 + C30854 * C1930 - C31872 * C1936) *
               C13226 +
           (C30873 * C1938 - C32188 * C1947 + C30854 * C1939 - C31872 * C1948) *
               C32254) *
              C31955 * C31925 * C31911 * C111 +
          ((C32188 * C128 - C30873 * C121 + C31872 * C129 - C30854 * C122) *
               C13223 +
           (C32188 * C142 - C30873 * C133 + C31872 * C143 - C30854 * C134) *
               C13219 +
           (C32188 * C330 - C30873 * C320 + C31872 * C331 - C30854 * C321) *
               C13224 +
           (C32188 * C350 - C30873 * C335 + C31872 * C351 - C30854 * C336) *
               C13220 +
           (C32188 * C340 - C30873 * C325 + C31872 * C341 - C30854 * C326) *
               C13225 +
           (C32188 * C355 - C30873 * C345 + C31872 * C356 - C30854 * C346) *
               C13221 +
           (C32188 * C1936 - C30873 * C1930 + C31872 * C2295 - C30854 * C2294) *
               C13226 +
           (C32188 * C1948 - C30873 * C1939 + C31872 * C2297 - C30854 * C2296) *
               C32254) *
              C31955 * C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C32188 * C126 - C30873 * C119 + C31872 * C127 - C30854 * C120) *
               C13223 +
           (C32188 * C140 - C30873 * C131 + C31872 * C141 - C30854 * C132) *
               C13219 +
           (C8569 - C8570 + C8571 - C8572) * C13224 +
           (C8573 - C8574 + C8575 - C8576) * C13220 + C12514 * C13225 +
           C12515 * C13221 + (C12499 - C12498 + C12501 - C12500) * C13226 +
           (C12503 - C12502 + C12505 - C12504) * C32254) *
              C31955 * C31925 * C209 +
          ((C7533 - C7532 + C7535 - C7534) * C13223 +
           (C7537 - C7536 + C7539 - C7538) * C13219 + C9221 * C13224 +
           C9222 * C13220 + C13120 * C13225 + C13121 * C13221 +
           (C12506 - C12507 + C12508 - C12509) * C13226 +
           (C12510 - C12511 + C12512 - C12513) * C32254) *
              C31955 * C31925 * C210 +
          (C7572 * C13223 + C7573 * C13219 + C8417 * C13224 + C8418 * C13220 +
           (C8594 - C8593 + C8596 - C8595) * C13225 +
           (C8598 - C8597 + C8600 - C8599) * C13221 +
           (C32188 * C6810 - C30873 * C6807 + C31872 * C7156 - C30854 * C7155) *
               C13226 +
           (C32188 * C6816 - C30873 * C6811 + C31872 * C7158 - C30854 * C7157) *
               C32254) *
              C31955 * C31925 * C211) *
         C31899) /
            (p * q * std::sqrt(p + q));
    d2ee[70] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C748 * C126 - C754 * C119 + C749 * C127 - C755 * C120 +
              C32227 * C128 - C756 * C121) *
                 C118 +
             (C748 * C140 - C754 * C131 + C749 * C141 - C755 * C132 +
              C32227 * C142 - C756 * C133) *
                 C31966) *
                C32273 +
            ((C892 - C893 + C894 - C895 + C896 - C897) * C118 +
             (C898 - C899 + C900 - C901 + C902 - C903) * C31966) *
                C32261 +
            C940 * C32238) *
               C31925 * C440 +
           (((C893 - C892 + C895 - C894 + C897 - C896) * C118 +
             (C899 - C898 + C901 - C900 + C903 - C902) * C31966) *
                C32273 +
            ((C905 - C904 + C907 - C906 + C909 - C908) * C118 +
             (C911 - C910 + C913 - C912 + C915 - C914) * C31966) *
                C32261 +
            ((C916 - C917 + C918 - C919 + C920 - C921) * C118 +
             (C922 - C923 + C924 - C925 + C926 - C927) * C31966) *
                C32238) *
               C31925 * C441) *
              C442 +
          ((((C754 * C120 - C748 * C127 + C755 * C121 - C749 * C128 +
              C756 * C122 - C32227 * C129) *
                 C118 +
             (C754 * C132 - C748 * C141 + C755 * C133 - C749 * C142 +
              C756 * C134 - C32227 * C143) *
                 C31966) *
                C32273 +
            ((C1237 - C1238 + C1239 - C1240 + C1241 - C1242) * C118 +
             (C1243 - C1244 + C1245 - C1246 + C1247 - C1248) * C31966) *
                C32261 +
            ((C1249 - C1250 + C1251 - C1252 + C1253 - C1254) * C118 +
             (C1255 - C1256 + C1257 - C1258 + C1259 - C1260) * C31966) *
                C32238) *
               C31925 * C440 +
           (((C1238 - C1237 + C1240 - C1239 + C1242 - C1241) * C118 +
             (C1244 - C1243 + C1246 - C1245 + C1248 - C1247) * C31966) *
                C32273 +
            ((C1250 - C1249 + C1252 - C1251 + C1254 - C1253) * C118 +
             (C1256 - C1255 + C1258 - C1257 + C1260 - C1259) * C31966) *
                C32261 +
            ((C748 * C874 - C754 * C868 + C749 * C875 - C755 * C869 +
              C32227 * C1233 - C756 * C1232) *
                 C118 +
             (C748 * C886 - C754 * C877 + C749 * C887 - C755 * C878 +
              C32227 * C1235 - C756 * C1234) *
                 C31966) *
                C32238) *
               C31925 * C441) *
              C443)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C101 * C126 - C113 * C119 + C102 * C127 - C114 * C120 +
             C103 * C128 - C115 * C121 + C104 * C129 - C116 * C122 +
             C105 * C130 - C117 * C123) *
                C118 +
            (C101 * C140 - C113 * C131 + C102 * C141 - C114 * C132 +
             C103 * C142 - C115 * C133 + C104 * C143 - C116 * C134 +
             C105 * C144 - C117 * C135) *
                C31966) *
               C31955 * C31925 * C440 +
           ((C113 * C213 - C101 * C223 + C114 * C214 - C102 * C224 +
             C115 * C215 - C103 * C225 + C116 * C216 - C104 * C226 +
             C117 * C217 - C105 * C227) *
                C118 +
            (C113 * C228 - C101 * C243 + C114 * C229 - C102 * C244 +
             C115 * C230 - C103 * C245 + C116 * C231 - C104 * C246 +
             C117 * C232 - C105 * C247) *
                C31966) *
               C31955 * C31925 * C441) *
              C442 +
          (((C113 * C120 - C101 * C127 + C114 * C121 - C102 * C128 +
             C115 * C122 - C103 * C129 + C116 * C123 - C104 * C130 +
             C117 * C124 - C105 * C136) *
                C118 +
            (C113 * C132 - C101 * C141 + C114 * C133 - C102 * C142 +
             C115 * C134 - C103 * C143 + C116 * C135 - C104 * C144 +
             C117 * C137 - C105 * C145) *
                C31966) *
               C31955 * C31925 * C440 +
           ((C101 * C224 - C113 * C214 + C102 * C225 - C114 * C215 +
             C103 * C226 - C115 * C216 + C104 * C227 - C116 * C217 +
             C105 * C445 - C117 * C444) *
                C118 +
            (C101 * C244 - C113 * C229 + C102 * C245 - C114 * C230 +
             C103 * C246 - C115 * C231 + C104 * C247 - C116 * C232 +
             C105 * C447 - C117 * C446) *
                C31966) *
               C31955 * C31925 * C441) *
              C443)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C32270 * C126 - C5154 * C119 + C32257 * C127 - C5155 * C120 +
              C32227 * C128 - C5156 * C121) *
                 C118 +
             (C32270 * C140 - C5154 * C131 + C32257 * C141 - C5155 * C132 +
              C32227 * C142 - C5156 * C133) *
                 C31966) *
                C5151 +
            ((C5268 - C5269 + C5270 - C5271 + C5272 - C5273) * C118 +
             (C5274 - C5275 + C5276 - C5277 + C5278 - C5279) * C31966) *
                C5152 +
            C5316 * C32238) *
               C31925 * C440 +
           (((C5269 - C5268 + C5271 - C5270 + C5273 - C5272) * C118 +
             (C5275 - C5274 + C5277 - C5276 + C5279 - C5278) * C31966) *
                C5151 +
            ((C5281 - C5280 + C5283 - C5282 + C5285 - C5284) * C118 +
             (C5287 - C5286 + C5289 - C5288 + C5291 - C5290) * C31966) *
                C5152 +
            ((C5292 - C5293 + C5294 - C5295 + C5296 - C5297) * C118 +
             (C5298 - C5299 + C5300 - C5301 + C5302 - C5303) * C31966) *
                C32238) *
               C31925 * C441) *
              C442 +
          ((((C5154 * C120 - C32270 * C127 + C5155 * C121 - C32257 * C128 +
              C5156 * C122 - C32227 * C129) *
                 C118 +
             (C5154 * C132 - C32270 * C141 + C5155 * C133 - C32257 * C142 +
              C5156 * C134 - C32227 * C143) *
                 C31966) *
                C5151 +
            ((C5573 - C5574 + C5575 - C5576 + C5577 - C5578) * C118 +
             (C5579 - C5580 + C5581 - C5582 + C5583 - C5584) * C31966) *
                C5152 +
            ((C5585 - C5586 + C5587 - C5588 + C5589 - C5590) * C118 +
             (C5591 - C5592 + C5593 - C5594 + C5595 - C5596) * C31966) *
                C32238) *
               C31925 * C440 +
           (((C5574 - C5573 + C5576 - C5575 + C5578 - C5577) * C118 +
             (C5580 - C5579 + C5582 - C5581 + C5584 - C5583) * C31966) *
                C5151 +
            ((C5586 - C5585 + C5588 - C5587 + C5590 - C5589) * C118 +
             (C5592 - C5591 + C5594 - C5593 + C5596 - C5595) * C31966) *
                C5152 +
            ((C32270 * C874 - C5154 * C868 + C32257 * C875 - C5155 * C869 +
              C32227 * C1233 - C5156 * C1232) *
                 C118 +
             (C32270 * C886 - C5154 * C877 + C32257 * C887 - C5155 * C878 +
              C32227 * C1235 - C5156 * C1234) *
                 C31966) *
                C32238) *
               C31925 * C441) *
              C443)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C31862 * C126 - C5980 * C119) * C118 +
             (C31862 * C140 - C5980 * C131) * C31966) *
                C5975 +
            ((C6052 - C6053) * C118 + (C6054 - C6055) * C31966) * C5976 +
            C6084 * C5977 + C6085 * C5978 + C6086 * C5979) *
               C31925 * C440 +
           (((C6053 - C6052) * C118 + (C6055 - C6054) * C31966) * C5975 +
            ((C6057 - C6056) * C118 + (C6059 - C6058) * C31966) * C5976 +
            ((C6061 - C6060) * C118 + (C6063 - C6062) * C31966) * C5977 +
            ((C6065 - C6064) * C118 + (C6067 - C6066) * C31966) * C5978 +
            ((C6068 - C6069) * C118 + (C6070 - C6071) * C31966) * C5979) *
               C31925 * C441) *
              C442 +
          ((((C5980 * C120 - C31862 * C127) * C118 +
             (C5980 * C132 - C31862 * C141) * C31966) *
                C5975 +
            ((C6247 - C6248) * C118 + (C6249 - C6250) * C31966) * C5976 +
            ((C6251 - C6252) * C118 + (C6253 - C6254) * C31966) * C5977 +
            ((C6255 - C6256) * C118 + (C6257 - C6258) * C31966) * C5978 +
            ((C6259 - C6260) * C118 + (C6261 - C6262) * C31966) * C5979) *
               C31925 * C440 +
           (((C6248 - C6247) * C118 + (C6250 - C6249) * C31966) * C5975 +
            ((C6252 - C6251) * C118 + (C6254 - C6253) * C31966) * C5976 +
            ((C6256 - C6255) * C118 + (C6258 - C6257) * C31966) * C5977 +
            ((C6260 - C6259) * C118 + (C6262 - C6261) * C31966) * C5978 +
            ((C31862 * C6243 - C5980 * C6242) * C118 +
             (C31862 * C6245 - C5980 * C6244) * C31966) *
                C5979) *
               C31925 * C441) *
              C443)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C32270 * C126 - C5154 * C119 + C32257 * C127 - C5155 * C120 +
             C32227 * C128 - C5156 * C121) *
                C10043 +
            (C32270 * C140 - C5154 * C131 + C32257 * C141 - C5155 * C132 +
             C32227 * C142 - C5156 * C133) *
                C10040 +
            (C10267 - C10268 + C10269 - C10270 + C10271 - C10272) * C10044 +
            (C10273 - C10274 + C10275 - C10276 + C10277 - C10278) * C10041 +
            C10311 * C10045 + C10312 * C32241) *
               C31955 * C31925 * C440 +
           ((C5269 - C5268 + C5271 - C5270 + C5273 - C5272) * C10043 +
            (C5275 - C5274 + C5277 - C5276 + C5279 - C5278) * C10040 +
            (C5889 - C5890 + C5891 - C5892 + C5893 - C5894) * C10044 +
            (C5895 - C5896 + C5897 - C5898 + C5899 - C5900) * C10041 +
            (C5154 * C1053 - C32270 * C1065 + C5155 * C1054 - C32257 * C1066 +
             C5156 * C1055 - C32227 * C1067) *
                C10045 +
            (C5154 * C1068 - C32270 * C1080 + C5155 * C1069 - C32257 * C1081 +
             C5156 * C1070 - C32227 * C1082) *
                C32241) *
               C31955 * C31925 * C441) *
              C442 +
          (((C5154 * C120 - C32270 * C127 + C5155 * C121 - C32257 * C128 +
             C5156 * C122 - C32227 * C129) *
                C10043 +
            (C5154 * C132 - C32270 * C141 + C5155 * C133 - C32257 * C142 +
             C5156 * C134 - C32227 * C143) *
                C10040 +
            (C5154 * C319 - C32270 * C329 + C5155 * C320 - C32257 * C330 +
             C5156 * C321 - C32227 * C331) *
                C10044 +
            (C5154 * C334 - C32270 * C349 + C5155 * C335 - C32257 * C350 +
             C5156 * C336 - C32227 * C351) *
                C10041 +
            (C5154 * C324 - C32270 * C339 + C5155 * C325 - C32257 * C340 +
             C5156 * C326 - C32227 * C341) *
                C10045 +
            (C5154 * C344 - C32270 * C354 + C5155 * C345 - C32257 * C355 +
             C5156 * C346 - C32227 * C356) *
                C32241) *
               C31955 * C31925 * C440 +
           ((C5574 - C5573 + C5576 - C5575 + C5578 - C5577) * C10043 +
            (C5580 - C5579 + C5582 - C5581 + C5584 - C5583) * C10040 +
            (C32270 * C624 - C5154 * C619 + C32257 * C625 - C5155 * C620 +
             C32227 * C626 - C5156 * C621) *
                C10044 +
            (C32270 * C634 - C5154 * C629 + C32257 * C635 - C5155 * C630 +
             C32227 * C636 - C5156 * C631) *
                C10041 +
            (C32270 * C1066 - C5154 * C1054 + C32257 * C1067 - C5155 * C1055 +
             C32227 * C2145 - C5156 * C2144) *
                C10045 +
            (C32270 * C1081 - C5154 * C1069 + C32257 * C1082 - C5155 * C1070 +
             C32227 * C2147 - C5156 * C2146) *
                C32241) *
               C31955 * C31925 * C441) *
              C443)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31862 * C126 - C5980 * C119) * C10043 +
             (C31862 * C140 - C5980 * C131) * C10040 +
             (C6820 - C6821) * C10044 + (C6822 - C6823) * C10041 +
             C6842 * C10045 + C6843 * C32241) *
                C32273 +
            ((C6052 - C6053) * C10043 + (C6054 - C6055) * C10040 +
             C7318 * C10044 + C7319 * C10041 + C6828 * C10045 +
             C6829 * C32241) *
                C32261 +
            C11017 * C32238) *
               C31925 * C440 +
           (((C6053 - C6052) * C10043 + (C6055 - C6054) * C10040 +
             C7320 * C10044 + C7321 * C10041 + C7322 * C10045 +
             C7323 * C32241) *
                C32273 +
            ((C6057 - C6056) * C10043 + (C6059 - C6058) * C10040 +
             C7324 * C10044 + C7325 * C10041 + C7326 * C10045 +
             C7327 * C32241) *
                C32261 +
            ((C6061 - C6060) * C10043 + (C6063 - C6062) * C10040 +
             C9929 * C10044 + C9930 * C10041 + (C6683 - C6684) * C10045 +
             (C6685 - C6686) * C32241) *
                C32238) *
               C31925 * C441) *
              C442 +
          ((((C5980 * C120 - C31862 * C127) * C10043 +
             (C5980 * C132 - C31862 * C141) * C10040 +
             (C7160 - C7161) * C10044 + (C7162 - C7163) * C10041 +
             (C7164 - C7165) * C10045 + (C7166 - C7167) * C32241) *
                C32273 +
            ((C6247 - C6248) * C10043 + (C6249 - C6250) * C10040 +
             (C6994 - C6995) * C10044 + (C6996 - C6997) * C10041 +
             (C6998 - C6999) * C10045 + (C7000 - C7001) * C32241) *
                C32261 +
            ((C6251 - C6252) * C10043 + (C6253 - C6254) * C10040 +
             (C7002 - C7003) * C10044 + (C7004 - C7005) * C10041 +
             (C7006 - C7007) * C10045 + (C7008 - C7009) * C32241) *
                C32238) *
               C31925 * C440 +
           (((C6248 - C6247) * C10043 + (C6250 - C6249) * C10040 +
             (C6995 - C6994) * C10044 + (C6997 - C6996) * C10041 +
             (C6999 - C6998) * C10045 + (C7001 - C7000) * C32241) *
                C32273 +
            ((C6252 - C6251) * C10043 + (C6254 - C6253) * C10040 +
             (C7003 - C7002) * C10044 + (C7005 - C7004) * C10041 +
             (C7007 - C7006) * C10045 + (C7009 - C7008) * C32241) *
                C32261 +
            ((C6256 - C6255) * C10043 + (C6258 - C6257) * C10040 +
             (C9666 - C9665) * C10044 + (C9668 - C9667) * C10041 +
             (C31862 * C6990 - C5980 * C6989) * C10045 +
             (C31862 * C6992 - C5980 * C6991) * C32241) *
                C32238) *
               C31925 * C441) *
              C443)) /
            (p * q * std::sqrt(p + q));
    d2ee[71] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C748 * C126 - C754 * C119 + C749 * C127 - C755 * C120 +
              C32227 * C128 - C756 * C121) *
                 C118 +
             (C748 * C140 - C754 * C131 + C749 * C141 - C755 * C132 +
              C32227 * C142 - C756 * C133) *
                 C31966) *
                C32273 +
            ((C892 - C893 + C894 - C895 + C896 - C897) * C118 +
             (C898 - C899 + C900 - C901 + C902 - C903) * C31966) *
                C32261 +
            C940 * C32238) *
               C530 +
           (((C754 * C318 - C748 * C328 + C755 * C319 - C749 * C329 +
              C756 * C320 - C32227 * C330) *
                 C118 +
             (C754 * C333 - C748 * C348 + C755 * C334 - C749 * C349 +
              C756 * C335 - C32227 * C350) *
                 C31966) *
                C32273 +
            ((C1569 - C1570 + C1571 - C1572 + C1573 - C1574) * C118 +
             (C1575 - C1576 + C1577 - C1578 + C1579 - C1580) * C31966) *
                C32261 +
            ((C1581 - C1582 + C1583 - C1584 + C1585 - C1586) * C118 +
             (C1587 - C1588 + C1589 - C1590 + C1591 - C1592) * C31966) *
                C32238) *
               C531) *
              C440 +
          ((((C893 - C892 + C895 - C894 + C897 - C896) * C118 +
             (C899 - C898 + C901 - C900 + C903 - C902) * C31966) *
                C32273 +
            ((C905 - C904 + C907 - C906 + C909 - C908) * C118 +
             (C911 - C910 + C913 - C912 + C915 - C914) * C31966) *
                C32261 +
            ((C916 - C917 + C918 - C919 + C920 - C921) * C118 +
             (C922 - C923 + C924 - C925 + C926 - C927) * C31966) *
                C32238) *
               C530 +
           (((C1570 - C1569 + C1572 - C1571 + C1574 - C1573) * C118 +
             (C1576 - C1575 + C1578 - C1577 + C1580 - C1579) * C31966) *
                C32273 +
            ((C1582 - C1581 + C1584 - C1583 + C1586 - C1585) * C118 +
             (C1588 - C1587 + C1590 - C1589 + C1592 - C1591) * C31966) *
                C32261 +
            ((C748 * C1559 - C754 * C1556 + C749 * C1560 - C755 * C1557 +
              C32227 * C1561 - C756 * C1558) *
                 C118 +
             (C748 * C1565 - C754 * C1562 + C749 * C1566 - C755 * C1563 +
              C32227 * C1567 - C756 * C1564) *
                 C31966) *
                C32238) *
               C531) *
              C441) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C101 * C126 - C113 * C119 + C102 * C127 - C114 * C120 +
             C103 * C128 - C115 * C121 + C104 * C129 - C116 * C122 +
             C105 * C130 - C117 * C123) *
                C118 +
            (C101 * C140 - C113 * C131 + C102 * C141 - C114 * C132 +
             C103 * C142 - C115 * C133 + C104 * C143 - C116 * C134 +
             C105 * C144 - C117 * C135) *
                C31966) *
               C31955 * C530 +
           ((C113 * C318 - C101 * C328 + C114 * C319 - C102 * C329 +
             C115 * C320 - C103 * C330 + C116 * C321 - C104 * C331 +
             C117 * C322 - C105 * C332) *
                C118 +
            (C113 * C333 - C101 * C348 + C114 * C334 - C102 * C349 +
             C115 * C335 - C103 * C350 + C116 * C336 - C104 * C351 +
             C117 * C337 - C105 * C352) *
                C31966) *
               C31955 * C531) *
              C440 +
          (((C113 * C213 - C101 * C223 + C114 * C214 - C102 * C224 +
             C115 * C215 - C103 * C225 + C116 * C216 - C104 * C226 +
             C117 * C217 - C105 * C227) *
                C118 +
            (C113 * C228 - C101 * C243 + C114 * C229 - C102 * C244 +
             C115 * C230 - C103 * C245 + C116 * C231 - C104 * C246 +
             C117 * C232 - C105 * C247) *
                C31966) *
               C31955 * C530 +
           ((C101 * C623 - C113 * C618 + C102 * C624 - C114 * C619 +
             C103 * C625 - C115 * C620 + C104 * C626 - C116 * C621 +
             C105 * C627 - C117 * C622) *
                C118 +
            (C101 * C633 - C113 * C628 + C102 * C634 - C114 * C629 +
             C103 * C635 - C115 * C630 + C104 * C636 - C116 * C631 +
             C105 * C637 - C117 * C632) *
                C31966) *
               C31955 * C531) *
              C441) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C32270 * C126 - C5154 * C119 + C32257 * C127 - C5155 * C120 +
              C32227 * C128 - C5156 * C121) *
                 C118 +
             (C32270 * C140 - C5154 * C131 + C32257 * C141 - C5155 * C132 +
              C32227 * C142 - C5156 * C133) *
                 C31966) *
                C5151 +
            ((C5268 - C5269 + C5270 - C5271 + C5272 - C5273) * C118 +
             (C5274 - C5275 + C5276 - C5277 + C5278 - C5279) * C31966) *
                C5152 +
            C5316 * C32238) *
               C530 +
           (((C5154 * C318 - C32270 * C328 + C5155 * C319 - C32257 * C329 +
              C5156 * C320 - C32227 * C330) *
                 C118 +
             (C5154 * C333 - C32270 * C348 + C5155 * C334 - C32257 * C349 +
              C5156 * C335 - C32227 * C350) *
                 C31966) *
                C5151 +
            ((C5889 - C5890 + C5891 - C5892 + C5893 - C5894) * C118 +
             (C5895 - C5896 + C5897 - C5898 + C5899 - C5900) * C31966) *
                C5152 +
            ((C5901 - C5902 + C5903 - C5904 + C5905 - C5906) * C118 +
             (C5907 - C5908 + C5909 - C5910 + C5911 - C5912) * C31966) *
                C32238) *
               C531) *
              C440 +
          ((((C5269 - C5268 + C5271 - C5270 + C5273 - C5272) * C118 +
             (C5275 - C5274 + C5277 - C5276 + C5279 - C5278) * C31966) *
                C5151 +
            ((C5281 - C5280 + C5283 - C5282 + C5285 - C5284) * C118 +
             (C5287 - C5286 + C5289 - C5288 + C5291 - C5290) * C31966) *
                C5152 +
            ((C5292 - C5293 + C5294 - C5295 + C5296 - C5297) * C118 +
             (C5298 - C5299 + C5300 - C5301 + C5302 - C5303) * C31966) *
                C32238) *
               C530 +
           (((C5890 - C5889 + C5892 - C5891 + C5894 - C5893) * C118 +
             (C5896 - C5895 + C5898 - C5897 + C5900 - C5899) * C31966) *
                C5151 +
            ((C5902 - C5901 + C5904 - C5903 + C5906 - C5905) * C118 +
             (C5908 - C5907 + C5910 - C5909 + C5912 - C5911) * C31966) *
                C5152 +
            ((C32270 * C1559 - C5154 * C1556 + C32257 * C1560 - C5155 * C1557 +
              C32227 * C1561 - C5156 * C1558) *
                 C118 +
             (C32270 * C1565 - C5154 * C1562 + C32257 * C1566 - C5155 * C1563 +
              C32227 * C1567 - C5156 * C1564) *
                 C31966) *
                C32238) *
               C531) *
              C441) *
         C31899) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C31862 * C126 - C5980 * C119) * C118 +
             (C31862 * C140 - C5980 * C131) * C31966) *
                C5975 +
            ((C6052 - C6053) * C118 + (C6054 - C6055) * C31966) * C5976 +
            C6084 * C5977 + C6085 * C5978 + C6086 * C5979) *
               C530 +
           (((C5980 * C318 - C31862 * C328) * C118 +
             (C5980 * C333 - C31862 * C348) * C31966) *
                C5975 +
            ((C6435 - C6436) * C118 + (C6437 - C6438) * C31966) * C5976 +
            ((C6439 - C6440) * C118 + (C6441 - C6442) * C31966) * C5977 +
            ((C6443 - C6444) * C118 + (C6445 - C6446) * C31966) * C5978 +
            ((C6447 - C6448) * C118 + (C6449 - C6450) * C31966) * C5979) *
               C531) *
              C440 +
          ((((C6053 - C6052) * C118 + (C6055 - C6054) * C31966) * C5975 +
            ((C6057 - C6056) * C118 + (C6059 - C6058) * C31966) * C5976 +
            ((C6061 - C6060) * C118 + (C6063 - C6062) * C31966) * C5977 +
            ((C6065 - C6064) * C118 + (C6067 - C6066) * C31966) * C5978 +
            ((C6068 - C6069) * C118 + (C6070 - C6071) * C31966) * C5979) *
               C530 +
           (((C6436 - C6435) * C118 + (C6438 - C6437) * C31966) * C5975 +
            ((C6440 - C6439) * C118 + (C6442 - C6441) * C31966) * C5976 +
            ((C6444 - C6443) * C118 + (C6446 - C6445) * C31966) * C5977 +
            ((C6448 - C6447) * C118 + (C6450 - C6449) * C31966) * C5978 +
            ((C31862 * C6431 - C5980 * C6430) * C118 +
             (C31862 * C6433 - C5980 * C6432) * C31966) *
                C5979) *
               C531) *
              C441) *
         C31899) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C32270 * C126 - C5154 * C119 + C32257 * C127 - C5155 * C120 +
             C32227 * C128 - C5156 * C121) *
                C10043 +
            (C32270 * C140 - C5154 * C131 + C32257 * C141 - C5155 * C132 +
             C32227 * C142 - C5156 * C133) *
                C10040 +
            (C10267 - C10268 + C10269 - C10270 + C10271 - C10272) * C10044 +
            (C10273 - C10274 + C10275 - C10276 + C10277 - C10278) * C10041 +
            C10311 * C10045 + C10312 * C32241) *
               C31955 * C530 +
           ((C10268 - C10267 + C10270 - C10269 + C10272 - C10271) * C10043 +
            (C10274 - C10273 + C10276 - C10275 + C10278 - C10277) * C10040 +
            (C10280 - C10279 + C10282 - C10281 + C10284 - C10283) * C10044 +
            (C10286 - C10285 + C10288 - C10287 + C10290 - C10289) * C10041 +
            (C10291 - C10292 + C10293 - C10294 + C10295 - C10296) * C10045 +
            (C10297 - C10298 + C10299 - C10300 + C10301 - C10302) * C32241) *
               C31955 * C531) *
              C440 +
          (((C5269 - C5268 + C5271 - C5270 + C5273 - C5272) * C10043 +
            (C5275 - C5274 + C5277 - C5276 + C5279 - C5278) * C10040 +
            (C5889 - C5890 + C5891 - C5892 + C5893 - C5894) * C10044 +
            (C5895 - C5896 + C5897 - C5898 + C5899 - C5900) * C10041 +
            (C10775 - C10776 + C10777 - C10778 + C10779 - C10780) * C10045 +
            (C10781 - C10782 + C10783 - C10784 + C10785 - C10786) * C32241) *
               C31955 * C530 +
           ((C5890 - C5889 + C5892 - C5891 + C5894 - C5893) * C10043 +
            (C5896 - C5895 + C5898 - C5897 + C5900 - C5899) * C10040 +
            (C10776 - C10775 + C10778 - C10777 + C10780 - C10779) * C10044 +
            (C10782 - C10781 + C10784 - C10783 + C10786 - C10785) * C10041 +
            (C32270 * C2471 - C5154 * C2468 + C32257 * C2472 - C5155 * C2469 +
             C32227 * C2473 - C5156 * C2470) *
                C10045 +
            (C32270 * C2477 - C5154 * C2474 + C32257 * C2478 - C5155 * C2475 +
             C32227 * C2479 - C5156 * C2476) *
                C32241) *
               C31955 * C531) *
              C441) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31862 * C126 - C5980 * C119) * C10043 +
             (C31862 * C140 - C5980 * C131) * C10040 +
             (C6820 - C6821) * C10044 + (C6822 - C6823) * C10041 +
             C6842 * C10045 + C6843 * C32241) *
                C32273 +
            ((C6052 - C6053) * C10043 + (C6054 - C6055) * C10040 +
             C7318 * C10044 + C7319 * C10041 + C6828 * C10045 +
             C6829 * C32241) *
                C32261 +
            C11017 * C32238) *
               C530 +
           (((C6821 - C6820) * C10043 + (C6823 - C6822) * C10040 +
             (C6825 - C6824) * C10044 + (C6827 - C6826) * C10041 +
             (C6830 - C6831) * C10045 + (C6832 - C6833) * C32241) *
                C32273 +
            (C7320 * C10043 + C7321 * C10040 + C7322 * C10044 + C7323 * C10041 +
             (C6834 - C6835) * C10045 + (C6836 - C6837) * C32241) *
                C32261 +
            (C7324 * C10043 + C7325 * C10040 + C7326 * C10044 + C7327 * C10041 +
             (C6838 - C6839) * C10045 + (C6840 - C6841) * C32241) *
                C32238) *
               C531) *
              C440 +
          ((((C6053 - C6052) * C10043 + (C6055 - C6054) * C10040 +
             C7320 * C10044 + C7321 * C10041 + C7322 * C10045 +
             C7323 * C32241) *
                C32273 +
            ((C6057 - C6056) * C10043 + (C6059 - C6058) * C10040 +
             C7324 * C10044 + C7325 * C10041 + C7326 * C10045 +
             C7327 * C32241) *
                C32261 +
            ((C6061 - C6060) * C10043 + (C6063 - C6062) * C10040 +
             C9929 * C10044 + C9930 * C10041 + (C6683 - C6684) * C10045 +
             (C6685 - C6686) * C32241) *
                C32238) *
               C530 +
           ((C7318 * C10043 + C7319 * C10040 + C6828 * C10044 + C6829 * C10041 +
             (C6835 - C6834) * C10045 + (C6837 - C6836) * C32241) *
                C32273 +
            (C6677 * C10043 + C6678 * C10040 + C6690 * C10044 + C6691 * C10041 +
             (C6839 - C6838) * C10045 + (C6841 - C6840) * C32241) *
                C32261 +
            (C9427 * C10043 + C9428 * C10040 + (C6684 - C6683) * C10044 +
             (C6686 - C6685) * C10041 +
             (C31862 * C7314 - C5980 * C7313) * C10045 +
             (C31862 * C7316 - C5980 * C7315) * C32241) *
                C32238) *
               C531) *
              C441) *
         C31899) /
            (p * q * std::sqrt(p + q));
    d2ee[72] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             (((C101 * C126 - C113 * C119 + C102 * C127 - C114 * C120 +
                C103 * C128 - C115 * C121 + C104 * C129 - C116 * C122 +
                C105 * C130 - C117 * C123) *
                   C118 +
               (C101 * C140 - C113 * C131 + C102 * C141 - C114 * C132 +
                C103 * C142 - C115 * C133 + C104 * C143 - C116 * C134 +
                C105 * C144 - C117 * C135) *
                   C31966) *
                  C31955 * C31925 * C31911 * C110 +
              ((C113 * C120 - C101 * C127 + C114 * C121 - C102 * C128 +
                C115 * C122 - C103 * C129 + C116 * C123 - C104 * C130 +
                C117 * C124 - C105 * C136) *
                   C118 +
               (C113 * C132 - C101 * C141 + C114 * C133 - C102 * C142 +
                C115 * C134 - C103 * C143 + C116 * C135 - C104 * C144 +
                C117 * C137 - C105 * C145) *
                   C31966) *
                  C31955 * C31925 * C31911 * C111 +
              ((C101 * C128 - C113 * C121 + C102 * C129 - C114 * C122 +
                C103 * C130 - C115 * C123 + C104 * C136 - C116 * C124 +
                C105 * C138 - C117 * C125) *
                   C118 +
               (C101 * C142 - C113 * C133 + C102 * C143 - C114 * C134 +
                C103 * C144 - C115 * C135 + C104 * C145 - C116 * C137 +
                C105 * C146 - C117 * C139) *
                   C31966) *
                  C31955 * C31925 * C31911 * C112) +
         std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             (((C101 * C126 - C113 * C119 + C102 * C127 - C114 * C120 +
                C103 * C128 - C115 * C121 + C104 * C129 - C116 * C122 +
                C105 * C130 - C117 * C123) *
                   C118 +
               (C101 * C140 - C113 * C131 + C102 * C141 - C114 * C132 +
                C103 * C142 - C115 * C133 + C104 * C143 - C116 * C134 +
                C105 * C144 - C117 * C135) *
                   C31966) *
                  C31955 * C31925 * C209 +
              ((C113 * C213 - C101 * C223 + C114 * C214 - C102 * C224 +
                C115 * C215 - C103 * C225 + C116 * C216 - C104 * C226 +
                C117 * C217 - C105 * C227) *
                   C118 +
               (C113 * C228 - C101 * C243 + C114 * C229 - C102 * C244 +
                C115 * C230 - C103 * C245 + C116 * C231 - C104 * C246 +
                C117 * C232 - C105 * C247) *
                   C31966) *
                  C31955 * C31925 * C210 +
              ((C101 * C233 - C113 * C218 + C102 * C234 - C114 * C219 +
                C103 * C235 - C115 * C220 + C104 * C236 - C116 * C221 +
                C105 * C237 - C117 * C222) *
                   C118 +
               (C101 * C248 - C113 * C238 + C102 * C249 - C114 * C239 +
                C103 * C250 - C115 * C240 + C104 * C251 - C116 * C241 +
                C105 * C252 - C117 * C242) *
                   C31966) *
                  C31955 * C31925 * C211) *
             C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C101 * C126 - C113 * C119 + C102 * C127 - C114 * C120 +
            C103 * C128 - C115 * C121 + C104 * C129 - C116 * C122 +
            C105 * C130 - C117 * C123) *
               C118 +
           (C101 * C140 - C113 * C131 + C102 * C141 - C114 * C132 +
            C103 * C142 - C115 * C133 + C104 * C143 - C116 * C134 +
            C105 * C144 - C117 * C135) *
               C31966) *
              C31955 * C315 +
          ((C113 * C318 - C101 * C328 + C114 * C319 - C102 * C329 +
            C115 * C320 - C103 * C330 + C116 * C321 - C104 * C331 +
            C117 * C322 - C105 * C332) *
               C118 +
           (C113 * C333 - C101 * C348 + C114 * C334 - C102 * C349 +
            C115 * C335 - C103 * C350 + C116 * C336 - C104 * C351 +
            C117 * C337 - C105 * C352) *
               C31966) *
              C31955 * C316 +
          ((C101 * C338 - C113 * C323 + C102 * C339 - C114 * C324 +
            C103 * C340 - C115 * C325 + C104 * C341 - C116 * C326 +
            C105 * C342 - C117 * C327) *
               C118 +
           (C101 * C353 - C113 * C343 + C102 * C354 - C114 * C344 +
            C103 * C355 - C115 * C345 + C104 * C356 - C116 * C346 +
            C105 * C357 - C117 * C347) *
               C31966) *
              C31955 * C317) *
         C31911 * C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C748 * C126 - C754 * C119 + C749 * C127 - C755 * C120 +
             C32227 * C128 - C756 * C121) *
                C118 +
            (C748 * C140 - C754 * C131 + C749 * C141 - C755 * C132 +
             C32227 * C142 - C756 * C133) *
                C31966) *
               C32273 +
           ((C748 * C223 - C754 * C213 + C749 * C224 - C755 * C214 +
             C32227 * C225 - C756 * C215) *
                C118 +
            (C748 * C243 - C754 * C228 + C749 * C244 - C755 * C229 +
             C32227 * C245 - C756 * C230) *
                C31966) *
               C32261 +
           ((C748 * C233 - C754 * C218 + C749 * C234 - C755 * C219 +
             C32227 * C235 - C756 * C220) *
                C118 +
            (C748 * C248 - C754 * C238 + C749 * C249 - C755 * C239 +
             C32227 * C250 - C756 * C240) *
                C31966) *
               C32238) *
              C31925 * C31911 * C110 +
          (((C754 * C120 - C748 * C127 + C755 * C121 - C749 * C128 +
             C756 * C122 - C32227 * C129) *
                C118 +
            (C754 * C132 - C748 * C141 + C755 * C133 - C749 * C142 +
             C756 * C134 - C32227 * C143) *
                C31966) *
               C32273 +
           ((C754 * C214 - C748 * C224 + C755 * C215 - C749 * C225 +
             C756 * C216 - C32227 * C226) *
                C118 +
            (C754 * C229 - C748 * C244 + C755 * C230 - C749 * C245 +
             C756 * C231 - C32227 * C246) *
                C31966) *
               C32261 +
           ((C754 * C219 - C748 * C234 + C755 * C220 - C749 * C235 +
             C756 * C221 - C32227 * C236) *
                C118 +
            (C754 * C239 - C748 * C249 + C755 * C240 - C749 * C250 +
             C756 * C241 - C32227 * C251) *
                C31966) *
               C32238) *
              C31925 * C31911 * C111 +
          (((C748 * C128 - C754 * C121 + C749 * C129 - C755 * C122 +
             C32227 * C130 - C756 * C123) *
                C118 +
            (C748 * C142 - C754 * C133 + C749 * C143 - C755 * C134 +
             C32227 * C144 - C756 * C135) *
                C31966) *
               C32273 +
           ((C748 * C225 - C754 * C215 + C749 * C226 - C755 * C216 +
             C32227 * C227 - C756 * C217) *
                C118 +
            (C748 * C245 - C754 * C230 + C749 * C246 - C755 * C231 +
             C32227 * C247 - C756 * C232) *
                C31966) *
               C32261 +
           ((C748 * C235 - C754 * C220 + C749 * C236 - C755 * C221 +
             C32227 * C237 - C756 * C222) *
                C118 +
            (C748 * C250 - C754 * C240 + C749 * C251 - C755 * C241 +
             C32227 * C252 - C756 * C242) *
                C31966) *
               C32238) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C748 * C126 - C754 * C119 + C749 * C127 - C755 * C120 +
             C32227 * C128 - C756 * C121) *
                C118 +
            (C748 * C140 - C754 * C131 + C749 * C141 - C755 * C132 +
             C32227 * C142 - C756 * C133) *
                C31966) *
               C32273 +
           ((C892 - C893 + C894 - C895 + C896 - C897) * C118 +
            (C898 - C899 + C900 - C901 + C902 - C903) * C31966) *
               C32261 +
           C940 * C32238) *
              C31925 * C209 +
          (((C893 - C892 + C895 - C894 + C897 - C896) * C118 +
            (C899 - C898 + C901 - C900 + C903 - C902) * C31966) *
               C32273 +
           ((C905 - C904 + C907 - C906 + C909 - C908) * C118 +
            (C911 - C910 + C913 - C912 + C915 - C914) * C31966) *
               C32261 +
           ((C916 - C917 + C918 - C919 + C920 - C921) * C118 +
            (C922 - C923 + C924 - C925 + C926 - C927) * C31966) *
               C32238) *
              C31925 * C210 +
          (C940 * C32273 +
           ((C917 - C916 + C919 - C918 + C921 - C920) * C118 +
            (C923 - C922 + C925 - C924 + C927 - C926) * C31966) *
               C32261 +
           ((C748 * C879 - C754 * C870 + C749 * C880 - C755 * C871 +
             C32227 * C881 - C756 * C872) *
                C118 +
            (C748 * C888 - C754 * C882 + C749 * C889 - C755 * C883 +
             C32227 * C890 - C756 * C884) *
                C31966) *
               C32238) *
              C31925 * C211) *
         C31899) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C748 * C126 - C754 * C119 + C749 * C127 - C755 * C120 +
             C32227 * C128 - C756 * C121) *
                C118 +
            (C748 * C140 - C754 * C131 + C749 * C141 - C755 * C132 +
             C32227 * C142 - C756 * C133) *
                C31966) *
               C32273 +
           ((C892 - C893 + C894 - C895 + C896 - C897) * C118 +
            (C898 - C899 + C900 - C901 + C902 - C903) * C31966) *
               C32261 +
           C940 * C32238) *
              C315 +
          (((C754 * C318 - C748 * C328 + C755 * C319 - C749 * C329 +
             C756 * C320 - C32227 * C330) *
                C118 +
            (C754 * C333 - C748 * C348 + C755 * C334 - C749 * C349 +
             C756 * C335 - C32227 * C350) *
                C31966) *
               C32273 +
           ((C754 * C618 - C748 * C623 + C755 * C619 - C749 * C624 +
             C756 * C620 - C32227 * C625) *
                C118 +
            (C754 * C628 - C748 * C633 + C755 * C629 - C749 * C634 +
             C756 * C630 - C32227 * C635) *
                C31966) *
               C32261 +
           ((C754 * C1050 - C748 * C1059 + C755 * C1051 - C749 * C1060 +
             C756 * C1052 - C32227 * C1061) *
                C118 +
            (C754 * C1062 - C748 * C1077 + C755 * C1063 - C749 * C1078 +
             C756 * C1064 - C32227 * C1079) *
                C31966) *
               C32238) *
              C316 +
          (((C748 * C338 - C754 * C323 + C749 * C339 - C755 * C324 +
             C32227 * C340 - C756 * C325) *
                C118 +
            (C748 * C353 - C754 * C343 + C749 * C354 - C755 * C344 +
             C32227 * C355 - C756 * C345) *
                C31966) *
               C32273 +
           ((C748 * C1065 - C754 * C1053 + C749 * C1066 - C755 * C1054 +
             C32227 * C1067 - C756 * C1055) *
                C118 +
            (C748 * C1080 - C754 * C1068 + C749 * C1081 - C755 * C1069 +
             C32227 * C1082 - C756 * C1070) *
                C31966) *
               C32261 +
           ((C748 * C1071 - C754 * C1056 + C749 * C1072 - C755 * C1057 +
             C32227 * C1073 - C756 * C1058) *
                C118 +
            (C748 * C1083 - C754 * C1074 + C749 * C1084 - C755 * C1075 +
             C32227 * C1085 - C756 * C1076) *
                C31966) *
               C32238) *
              C317) *
         C31911 * C31899) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C32270 * C126 - C5154 * C119 + C32257 * C127 - C5155 * C120 +
             C32227 * C128 - C5156 * C121) *
                C118 +
            (C32270 * C140 - C5154 * C131 + C32257 * C141 - C5155 * C132 +
             C32227 * C142 - C5156 * C133) *
                C31966) *
               C5151 +
           ((C32270 * C223 - C5154 * C213 + C32257 * C224 - C5155 * C214 +
             C32227 * C225 - C5156 * C215) *
                C118 +
            (C32270 * C243 - C5154 * C228 + C32257 * C244 - C5155 * C229 +
             C32227 * C245 - C5156 * C230) *
                C31966) *
               C5152 +
           ((C32270 * C233 - C5154 * C218 + C32257 * C234 - C5155 * C219 +
             C32227 * C235 - C5156 * C220) *
                C118 +
            (C32270 * C248 - C5154 * C238 + C32257 * C249 - C5155 * C239 +
             C32227 * C250 - C5156 * C240) *
                C31966) *
               C32238) *
              C31925 * C31911 * C110 +
          (((C5154 * C120 - C32270 * C127 + C5155 * C121 - C32257 * C128 +
             C5156 * C122 - C32227 * C129) *
                C118 +
            (C5154 * C132 - C32270 * C141 + C5155 * C133 - C32257 * C142 +
             C5156 * C134 - C32227 * C143) *
                C31966) *
               C5151 +
           ((C5154 * C214 - C32270 * C224 + C5155 * C215 - C32257 * C225 +
             C5156 * C216 - C32227 * C226) *
                C118 +
            (C5154 * C229 - C32270 * C244 + C5155 * C230 - C32257 * C245 +
             C5156 * C231 - C32227 * C246) *
                C31966) *
               C5152 +
           ((C5154 * C219 - C32270 * C234 + C5155 * C220 - C32257 * C235 +
             C5156 * C221 - C32227 * C236) *
                C118 +
            (C5154 * C239 - C32270 * C249 + C5155 * C240 - C32257 * C250 +
             C5156 * C241 - C32227 * C251) *
                C31966) *
               C32238) *
              C31925 * C31911 * C111 +
          (((C32270 * C128 - C5154 * C121 + C32257 * C129 - C5155 * C122 +
             C32227 * C130 - C5156 * C123) *
                C118 +
            (C32270 * C142 - C5154 * C133 + C32257 * C143 - C5155 * C134 +
             C32227 * C144 - C5156 * C135) *
                C31966) *
               C5151 +
           ((C32270 * C225 - C5154 * C215 + C32257 * C226 - C5155 * C216 +
             C32227 * C227 - C5156 * C217) *
                C118 +
            (C32270 * C245 - C5154 * C230 + C32257 * C246 - C5155 * C231 +
             C32227 * C247 - C5156 * C232) *
                C31966) *
               C5152 +
           ((C32270 * C235 - C5154 * C220 + C32257 * C236 - C5155 * C221 +
             C32227 * C237 - C5156 * C222) *
                C118 +
            (C32270 * C250 - C5154 * C240 + C32257 * C251 - C5155 * C241 +
             C32227 * C252 - C5156 * C242) *
                C31966) *
               C32238) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C32270 * C126 - C5154 * C119 + C32257 * C127 - C5155 * C120 +
             C32227 * C128 - C5156 * C121) *
                C118 +
            (C32270 * C140 - C5154 * C131 + C32257 * C141 - C5155 * C132 +
             C32227 * C142 - C5156 * C133) *
                C31966) *
               C5151 +
           ((C5268 - C5269 + C5270 - C5271 + C5272 - C5273) * C118 +
            (C5274 - C5275 + C5276 - C5277 + C5278 - C5279) * C31966) *
               C5152 +
           C5316 * C32238) *
              C31925 * C209 +
          (((C5269 - C5268 + C5271 - C5270 + C5273 - C5272) * C118 +
            (C5275 - C5274 + C5277 - C5276 + C5279 - C5278) * C31966) *
               C5151 +
           ((C5281 - C5280 + C5283 - C5282 + C5285 - C5284) * C118 +
            (C5287 - C5286 + C5289 - C5288 + C5291 - C5290) * C31966) *
               C5152 +
           ((C5292 - C5293 + C5294 - C5295 + C5296 - C5297) * C118 +
            (C5298 - C5299 + C5300 - C5301 + C5302 - C5303) * C31966) *
               C32238) *
              C31925 * C210 +
          (C5316 * C5151 +
           ((C5293 - C5292 + C5295 - C5294 + C5297 - C5296) * C118 +
            (C5299 - C5298 + C5301 - C5300 + C5303 - C5302) * C31966) *
               C5152 +
           ((C32270 * C879 - C5154 * C870 + C32257 * C880 - C5155 * C871 +
             C32227 * C881 - C5156 * C872) *
                C118 +
            (C32270 * C888 - C5154 * C882 + C32257 * C889 - C5155 * C883 +
             C32227 * C890 - C5156 * C884) *
                C31966) *
               C32238) *
              C31925 * C211) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C32270 * C126 - C5154 * C119 + C32257 * C127 - C5155 * C120 +
             C32227 * C128 - C5156 * C121) *
                C118 +
            (C32270 * C140 - C5154 * C131 + C32257 * C141 - C5155 * C132 +
             C32227 * C142 - C5156 * C133) *
                C31966) *
               C5151 +
           ((C5268 - C5269 + C5270 - C5271 + C5272 - C5273) * C118 +
            (C5274 - C5275 + C5276 - C5277 + C5278 - C5279) * C31966) *
               C5152 +
           C5316 * C32238) *
              C315 +
          (((C5154 * C318 - C32270 * C328 + C5155 * C319 - C32257 * C329 +
             C5156 * C320 - C32227 * C330) *
                C118 +
            (C5154 * C333 - C32270 * C348 + C5155 * C334 - C32257 * C349 +
             C5156 * C335 - C32227 * C350) *
                C31966) *
               C5151 +
           ((C5154 * C618 - C32270 * C623 + C5155 * C619 - C32257 * C624 +
             C5156 * C620 - C32227 * C625) *
                C118 +
            (C5154 * C628 - C32270 * C633 + C5155 * C629 - C32257 * C634 +
             C5156 * C630 - C32227 * C635) *
                C31966) *
               C5152 +
           ((C5154 * C1050 - C32270 * C1059 + C5155 * C1051 - C32257 * C1060 +
             C5156 * C1052 - C32227 * C1061) *
                C118 +
            (C5154 * C1062 - C32270 * C1077 + C5155 * C1063 - C32257 * C1078 +
             C5156 * C1064 - C32227 * C1079) *
                C31966) *
               C32238) *
              C316 +
          (((C32270 * C338 - C5154 * C323 + C32257 * C339 - C5155 * C324 +
             C32227 * C340 - C5156 * C325) *
                C118 +
            (C32270 * C353 - C5154 * C343 + C32257 * C354 - C5155 * C344 +
             C32227 * C355 - C5156 * C345) *
                C31966) *
               C5151 +
           ((C32270 * C1065 - C5154 * C1053 + C32257 * C1066 - C5155 * C1054 +
             C32227 * C1067 - C5156 * C1055) *
                C118 +
            (C32270 * C1080 - C5154 * C1068 + C32257 * C1081 - C5155 * C1069 +
             C32227 * C1082 - C5156 * C1070) *
                C31966) *
               C5152 +
           ((C32270 * C1071 - C5154 * C1056 + C32257 * C1072 - C5155 * C1057 +
             C32227 * C1073 - C5156 * C1058) *
                C118 +
            (C32270 * C1083 - C5154 * C1074 + C32257 * C1084 - C5155 * C1075 +
             C32227 * C1085 - C5156 * C1076) *
                C31966) *
               C32238) *
              C317) *
         C31911 * C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C31862 * C126 - C5980 * C119) * C118 +
            (C31862 * C140 - C5980 * C131) * C31966) *
               C5975 +
           ((C31862 * C223 - C5980 * C213) * C118 +
            (C31862 * C243 - C5980 * C228) * C31966) *
               C5976 +
           ((C31862 * C233 - C5980 * C218) * C118 +
            (C31862 * C248 - C5980 * C238) * C31966) *
               C5977 +
           ((C31862 * C873 - C5980 * C867) * C118 +
            (C31862 * C885 - C5980 * C876) * C31966) *
               C5978 +
           ((C31862 * C879 - C5980 * C870) * C118 +
            (C31862 * C888 - C5980 * C882) * C31966) *
               C5979) *
              C31925 * C31911 * C110 +
          (((C5980 * C120 - C31862 * C127) * C118 +
            (C5980 * C132 - C31862 * C141) * C31966) *
               C5975 +
           ((C5980 * C214 - C31862 * C224) * C118 +
            (C5980 * C229 - C31862 * C244) * C31966) *
               C5976 +
           ((C5980 * C219 - C31862 * C234) * C118 +
            (C5980 * C239 - C31862 * C249) * C31966) *
               C5977 +
           ((C5980 * C868 - C31862 * C874) * C118 +
            (C5980 * C877 - C31862 * C886) * C31966) *
               C5978 +
           ((C5980 * C871 - C31862 * C880) * C118 +
            (C5980 * C883 - C31862 * C889) * C31966) *
               C5979) *
              C31925 * C31911 * C111 +
          (((C31862 * C128 - C5980 * C121) * C118 +
            (C31862 * C142 - C5980 * C133) * C31966) *
               C5975 +
           ((C31862 * C225 - C5980 * C215) * C118 +
            (C31862 * C245 - C5980 * C230) * C31966) *
               C5976 +
           ((C31862 * C235 - C5980 * C220) * C118 +
            (C31862 * C250 - C5980 * C240) * C31966) *
               C5977 +
           ((C31862 * C875 - C5980 * C869) * C118 +
            (C31862 * C887 - C5980 * C878) * C31966) *
               C5978 +
           ((C31862 * C881 - C5980 * C872) * C118 +
            (C31862 * C890 - C5980 * C884) * C31966) *
               C5979) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C31862 * C126 - C5980 * C119) * C118 +
            (C31862 * C140 - C5980 * C131) * C31966) *
               C5975 +
           ((C6052 - C6053) * C118 + (C6054 - C6055) * C31966) * C5976 +
           C6084 * C5977 + C6085 * C5978 + C6086 * C5979) *
              C31925 * C209 +
          (((C6053 - C6052) * C118 + (C6055 - C6054) * C31966) * C5975 +
           ((C6057 - C6056) * C118 + (C6059 - C6058) * C31966) * C5976 +
           ((C6061 - C6060) * C118 + (C6063 - C6062) * C31966) * C5977 +
           ((C6065 - C6064) * C118 + (C6067 - C6066) * C31966) * C5978 +
           ((C6068 - C6069) * C118 + (C6070 - C6071) * C31966) * C5979) *
              C31925 * C210 +
          (C6084 * C5975 + C6085 * C5976 + C6086 * C5977 +
           ((C6069 - C6068) * C118 + (C6071 - C6070) * C31966) * C5978 +
           ((C31862 * C6047 - C5980 * C6044) * C118 +
            (C31862 * C6050 - C5980 * C6048) * C31966) *
               C5979) *
              C31925 * C211) *
         C31899) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C31862 * C126 - C5980 * C119) * C118 +
            (C31862 * C140 - C5980 * C131) * C31966) *
               C5975 +
           ((C6052 - C6053) * C118 + (C6054 - C6055) * C31966) * C5976 +
           C6084 * C5977 + C6085 * C5978 + C6086 * C5979) *
              C315 +
          (((C5980 * C318 - C31862 * C328) * C118 +
            (C5980 * C333 - C31862 * C348) * C31966) *
               C5975 +
           ((C5980 * C618 - C31862 * C623) * C118 +
            (C5980 * C628 - C31862 * C633) * C31966) *
               C5976 +
           ((C5980 * C1050 - C31862 * C1059) * C118 +
            (C5980 * C1062 - C31862 * C1077) * C31966) *
               C5977 +
           ((C5980 * C1556 - C31862 * C1559) * C118 +
            (C5980 * C1562 - C31862 * C1565) * C31966) *
               C5978 +
           ((C5980 * C6148 - C31862 * C6151) * C118 +
            (C5980 * C6152 - C31862 * C6157) * C31966) *
               C5979) *
              C316 +
          (((C31862 * C338 - C5980 * C323) * C118 +
            (C31862 * C353 - C5980 * C343) * C31966) *
               C5975 +
           ((C31862 * C1065 - C5980 * C1053) * C118 +
            (C31862 * C1080 - C5980 * C1068) * C31966) *
               C5976 +
           ((C31862 * C1071 - C5980 * C1056) * C118 +
            (C31862 * C1083 - C5980 * C1074) * C31966) *
               C5977 +
           ((C31862 * C6153 - C5980 * C6149) * C118 +
            (C31862 * C6158 - C5980 * C6154) * C31966) *
               C5978 +
           ((C31862 * C6155 - C5980 * C6150) * C118 +
            (C31862 * C6159 - C5980 * C6156) * C31966) *
               C5979) *
              C317) *
         C31911 * C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C32270 * C126 - C5154 * C119 + C32257 * C127 - C5155 * C120 +
            C32227 * C128 - C5156 * C121) *
               C10043 +
           (C32270 * C140 - C5154 * C131 + C32257 * C141 - C5155 * C132 +
            C32227 * C142 - C5156 * C133) *
               C10040 +
           (C32270 * C328 - C5154 * C318 + C32257 * C329 - C5155 * C319 +
            C32227 * C330 - C5156 * C320) *
               C10044 +
           (C32270 * C348 - C5154 * C333 + C32257 * C349 - C5155 * C334 +
            C32227 * C350 - C5156 * C335) *
               C10041 +
           (C32270 * C338 - C5154 * C323 + C32257 * C339 - C5155 * C324 +
            C32227 * C340 - C5156 * C325) *
               C10045 +
           (C32270 * C353 - C5154 * C343 + C32257 * C354 - C5155 * C344 +
            C32227 * C355 - C5156 * C345) *
               C32241) *
              C31955 * C31925 * C31911 * C110 +
          ((C5154 * C120 - C32270 * C127 + C5155 * C121 - C32257 * C128 +
            C5156 * C122 - C32227 * C129) *
               C10043 +
           (C5154 * C132 - C32270 * C141 + C5155 * C133 - C32257 * C142 +
            C5156 * C134 - C32227 * C143) *
               C10040 +
           (C5154 * C319 - C32270 * C329 + C5155 * C320 - C32257 * C330 +
            C5156 * C321 - C32227 * C331) *
               C10044 +
           (C5154 * C334 - C32270 * C349 + C5155 * C335 - C32257 * C350 +
            C5156 * C336 - C32227 * C351) *
               C10041 +
           (C5154 * C324 - C32270 * C339 + C5155 * C325 - C32257 * C340 +
            C5156 * C326 - C32227 * C341) *
               C10045 +
           (C5154 * C344 - C32270 * C354 + C5155 * C345 - C32257 * C355 +
            C5156 * C346 - C32227 * C356) *
               C32241) *
              C31955 * C31925 * C31911 * C111 +
          ((C32270 * C128 - C5154 * C121 + C32257 * C129 - C5155 * C122 +
            C32227 * C130 - C5156 * C123) *
               C10043 +
           (C32270 * C142 - C5154 * C133 + C32257 * C143 - C5155 * C134 +
            C32227 * C144 - C5156 * C135) *
               C10040 +
           (C32270 * C330 - C5154 * C320 + C32257 * C331 - C5155 * C321 +
            C32227 * C332 - C5156 * C322) *
               C10044 +
           (C32270 * C350 - C5154 * C335 + C32257 * C351 - C5155 * C336 +
            C32227 * C352 - C5156 * C337) *
               C10041 +
           (C32270 * C340 - C5154 * C325 + C32257 * C341 - C5155 * C326 +
            C32227 * C342 - C5156 * C327) *
               C10045 +
           (C32270 * C355 - C5154 * C345 + C32257 * C356 - C5155 * C346 +
            C32227 * C357 - C5156 * C347) *
               C32241) *
              C31955 * C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C32270 * C126 - C5154 * C119 + C32257 * C127 - C5155 * C120 +
            C32227 * C128 - C5156 * C121) *
               C10043 +
           (C32270 * C140 - C5154 * C131 + C32257 * C141 - C5155 * C132 +
            C32227 * C142 - C5156 * C133) *
               C10040 +
           (C32270 * C328 - C5154 * C318 + C32257 * C329 - C5155 * C319 +
            C32227 * C330 - C5156 * C320) *
               C10044 +
           (C32270 * C348 - C5154 * C333 + C32257 * C349 - C5155 * C334 +
            C32227 * C350 - C5156 * C335) *
               C10041 +
           (C32270 * C338 - C5154 * C323 + C32257 * C339 - C5155 * C324 +
            C32227 * C340 - C5156 * C325) *
               C10045 +
           (C32270 * C353 - C5154 * C343 + C32257 * C354 - C5155 * C344 +
            C32227 * C355 - C5156 * C345) *
               C32241) *
              C31955 * C31925 * C209 +
          ((C5269 - C5268 + C5271 - C5270 + C5273 - C5272) * C10043 +
           (C5275 - C5274 + C5277 - C5276 + C5279 - C5278) * C10040 +
           (C5889 - C5890 + C5891 - C5892 + C5893 - C5894) * C10044 +
           (C5895 - C5896 + C5897 - C5898 + C5899 - C5900) * C10041 +
           (C5154 * C1053 - C32270 * C1065 + C5155 * C1054 - C32257 * C1066 +
            C5156 * C1055 - C32227 * C1067) *
               C10045 +
           (C5154 * C1068 - C32270 * C1080 + C5155 * C1069 - C32257 * C1081 +
            C5156 * C1070 - C32227 * C1082) *
               C32241) *
              C31955 * C31925 * C210 +
          (C5312 * C10043 + C5313 * C10040 +
           (C5902 - C5901 + C5904 - C5903 + C5906 - C5905) * C10044 +
           (C5908 - C5907 + C5910 - C5909 + C5912 - C5911) * C10041 +
           (C32270 * C1071 - C5154 * C1056 + C32257 * C1072 - C5155 * C1057 +
            C32227 * C1073 - C5156 * C1058) *
               C10045 +
           (C32270 * C1083 - C5154 * C1074 + C32257 * C1084 - C5155 * C1075 +
            C32227 * C1085 - C5156 * C1076) *
               C32241) *
              C31955 * C31925 * C211) *
         C31899) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C32270 * C126 - C5154 * C119 + C32257 * C127 - C5155 * C120 +
            C32227 * C128 - C5156 * C121) *
               C10043 +
           (C32270 * C140 - C5154 * C131 + C32257 * C141 - C5155 * C132 +
            C32227 * C142 - C5156 * C133) *
               C10040 +
           (C10267 - C10268 + C10269 - C10270 + C10271 - C10272) * C10044 +
           (C10273 - C10274 + C10275 - C10276 + C10277 - C10278) * C10041 +
           C10311 * C10045 + C10312 * C32241) *
              C31955 * C315 +
          ((C10268 - C10267 + C10270 - C10269 + C10272 - C10271) * C10043 +
           (C10274 - C10273 + C10276 - C10275 + C10278 - C10277) * C10040 +
           (C10280 - C10279 + C10282 - C10281 + C10284 - C10283) * C10044 +
           (C10286 - C10285 + C10288 - C10287 + C10290 - C10289) * C10041 +
           (C10291 - C10292 + C10293 - C10294 + C10295 - C10296) * C10045 +
           (C10297 - C10298 + C10299 - C10300 + C10301 - C10302) * C32241) *
              C31955 * C316 +
          (C10311 * C10043 + C10312 * C10040 +
           (C10292 - C10291 + C10294 - C10293 + C10296 - C10295) * C10044 +
           (C10298 - C10297 + C10300 - C10299 + C10302 - C10301) * C10041 +
           (C32270 * C1940 - C5154 * C1931 + C32257 * C1941 - C5155 * C1932 +
            C32227 * C1942 - C5156 * C1933) *
               C10045 +
           (C32270 * C1949 - C5154 * C1943 + C32257 * C1950 - C5155 * C1944 +
            C32227 * C1951 - C5156 * C1945) *
               C32241) *
              C31955 * C317) *
         C31911 * C31899) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C31862 * C126 - C5980 * C119) * C10043 +
            (C31862 * C140 - C5980 * C131) * C10040 + (C6820 - C6821) * C10044 +
            (C6822 - C6823) * C10041 + C6842 * C10045 + C6843 * C32241) *
               C32273 +
           ((C6052 - C6053) * C10043 + (C6054 - C6055) * C10040 +
            C7318 * C10044 + C7319 * C10041 + C6828 * C10045 + C6829 * C32241) *
               C32261 +
           (C6072 * C10043 + C6073 * C10040 + C6677 * C10044 + C6678 * C10041 +
            C6690 * C10045 + C6691 * C32241) *
               C32238) *
              C31925 * C31911 * C110 +
          (((C5980 * C120 - C31862 * C127) * C10043 +
            (C5980 * C132 - C31862 * C141) * C10040 + (C7160 - C7161) * C10044 +
            (C7162 - C7163) * C10041 + (C7164 - C7165) * C10045 +
            (C7166 - C7167) * C32241) *
               C32273 +
           ((C6247 - C6248) * C10043 + (C6249 - C6250) * C10040 +
            (C6994 - C6995) * C10044 + (C6996 - C6997) * C10041 +
            (C6998 - C6999) * C10045 + (C7000 - C7001) * C32241) *
               C32261 +
           ((C6251 - C6252) * C10043 + (C6253 - C6254) * C10040 +
            (C7002 - C7003) * C10044 + (C7004 - C7005) * C10041 +
            (C7006 - C7007) * C10045 + (C7008 - C7009) * C32241) *
               C32238) *
              C31925 * C31911 * C111 +
          (((C31862 * C128 - C5980 * C121) * C10043 +
            (C31862 * C142 - C5980 * C133) * C10040 +
            (C31862 * C330 - C5980 * C320) * C10044 +
            (C31862 * C350 - C5980 * C335) * C10041 +
            (C31862 * C340 - C5980 * C325) * C10045 +
            (C31862 * C355 - C5980 * C345) * C32241) *
               C32273 +
           ((C31862 * C225 - C5980 * C215) * C10043 +
            (C31862 * C245 - C5980 * C230) * C10040 +
            (C31862 * C625 - C5980 * C620) * C10044 +
            (C31862 * C635 - C5980 * C630) * C10041 +
            (C31862 * C1067 - C5980 * C1055) * C10045 +
            (C31862 * C1082 - C5980 * C1070) * C32241) *
               C32261 +
           ((C31862 * C235 - C5980 * C220) * C10043 +
            (C31862 * C250 - C5980 * C240) * C10040 +
            (C31862 * C1061 - C5980 * C1052) * C10044 +
            (C31862 * C1079 - C5980 * C1064) * C10041 +
            (C31862 * C1073 - C5980 * C1058) * C10045 +
            (C31862 * C1085 - C5980 * C1076) * C32241) *
               C32238) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C31862 * C126 - C5980 * C119) * C10043 +
            (C31862 * C140 - C5980 * C131) * C10040 + (C6820 - C6821) * C10044 +
            (C6822 - C6823) * C10041 + C6842 * C10045 + C6843 * C32241) *
               C32273 +
           ((C6052 - C6053) * C10043 + (C6054 - C6055) * C10040 +
            C7318 * C10044 + C7319 * C10041 + C6828 * C10045 + C6829 * C32241) *
               C32261 +
           C11017 * C32238) *
              C31925 * C209 +
          (((C6053 - C6052) * C10043 + (C6055 - C6054) * C10040 +
            C7320 * C10044 + C7321 * C10041 + C7322 * C10045 + C7323 * C32241) *
               C32273 +
           ((C6057 - C6056) * C10043 + (C6059 - C6058) * C10040 +
            C7324 * C10044 + C7325 * C10041 + C7326 * C10045 + C7327 * C32241) *
               C32261 +
           ((C6061 - C6060) * C10043 + (C6063 - C6062) * C10040 +
            C9929 * C10044 + C9930 * C10041 + (C6683 - C6684) * C10045 +
            (C6685 - C6686) * C32241) *
               C32238) *
              C31925 * C210 +
          (C11017 * C32273 +
           (C6074 * C10043 + C6075 * C10040 + C9427 * C10044 + C9428 * C10041 +
            (C6684 - C6683) * C10045 + (C6686 - C6685) * C32241) *
               C32261 +
           (C6076 * C10043 + C6077 * C10040 + (C6448 - C6447) * C10044 +
            (C6450 - C6449) * C10041 +
            (C31862 * C6155 - C5980 * C6150) * C10045 +
            (C31862 * C6159 - C5980 * C6156) * C32241) *
               C32238) *
              C31925 * C211) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31862 * C126 - C5980 * C119) * C10043 +
            (C31862 * C140 - C5980 * C131) * C10040 + (C6820 - C6821) * C10044 +
            (C6822 - C6823) * C10041 + C6842 * C10045 + C6843 * C32241) *
               C32273 +
           ((C6052 - C6053) * C10043 + (C6054 - C6055) * C10040 +
            C7318 * C10044 + C7319 * C10041 + C6828 * C10045 + C6829 * C32241) *
               C32261 +
           C11017 * C32238) *
              C315 +
          (((C6821 - C6820) * C10043 + (C6823 - C6822) * C10040 +
            (C6825 - C6824) * C10044 + (C6827 - C6826) * C10041 +
            (C6830 - C6831) * C10045 + (C6832 - C6833) * C32241) *
               C32273 +
           (C7320 * C10043 + C7321 * C10040 + C7322 * C10044 + C7323 * C10041 +
            (C6834 - C6835) * C10045 + (C6836 - C6837) * C32241) *
               C32261 +
           (C7324 * C10043 + C7325 * C10040 + C7326 * C10044 + C7327 * C10041 +
            (C6838 - C6839) * C10045 + (C6840 - C6841) * C32241) *
               C32238) *
              C316 +
          ((C6842 * C10043 + C6843 * C10040 + (C6831 - C6830) * C10044 +
            (C6833 - C6832) * C10041 +
            (C31862 * C1940 - C5980 * C1931) * C10045 +
            (C31862 * C1949 - C5980 * C1943) * C32241) *
               C32273 +
           (C6828 * C10043 + C6829 * C10040 + (C6835 - C6834) * C10044 +
            (C6837 - C6836) * C10041 +
            (C31862 * C6812 - C5980 * C6808) * C10045 +
            (C31862 * C6817 - C5980 * C6813) * C32241) *
               C32261 +
           (C6690 * C10043 + C6691 * C10040 + (C6839 - C6838) * C10044 +
            (C6841 - C6840) * C10041 +
            (C31862 * C6814 - C5980 * C6809) * C10045 +
            (C31862 * C6818 - C5980 * C6815) * C32241) *
               C32238) *
              C317) *
         C31911 * C31899) /
            (p * q * std::sqrt(p + q));
    d2ee[73] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C748 * C126 - C754 * C119 + C749 * C127 - C755 * C120 +
              C32227 * C128 - C756 * C121) *
                 C118 +
             (C748 * C140 - C754 * C131 + C749 * C141 - C755 * C132 +
              C32227 * C142 - C756 * C133) *
                 C31966) *
                C32273 +
            ((C892 - C893 + C894 - C895 + C896 - C897) * C118 +
             (C898 - C899 + C900 - C901 + C902 - C903) * C31966) *
                C32261 +
            C940 * C32238) *
               C530 +
           (((C754 * C318 - C748 * C328 + C755 * C319 - C749 * C329 +
              C756 * C320 - C32227 * C330) *
                 C118 +
             (C754 * C333 - C748 * C348 + C755 * C334 - C749 * C349 +
              C756 * C335 - C32227 * C350) *
                 C31966) *
                C32273 +
            ((C754 * C618 - C748 * C623 + C755 * C619 - C749 * C624 +
              C756 * C620 - C32227 * C625) *
                 C118 +
             (C754 * C628 - C748 * C633 + C755 * C629 - C749 * C634 +
              C756 * C630 - C32227 * C635) *
                 C31966) *
                C32261 +
            ((C754 * C1050 - C748 * C1059 + C755 * C1051 - C749 * C1060 +
              C756 * C1052 - C32227 * C1061) *
                 C118 +
             (C754 * C1062 - C748 * C1077 + C755 * C1063 - C749 * C1078 +
              C756 * C1064 - C32227 * C1079) *
                 C31966) *
                C32238) *
               C531) *
              C31911 * C442 +
          ((((C754 * C120 - C748 * C127 + C755 * C121 - C749 * C128 +
              C756 * C122 - C32227 * C129) *
                 C118 +
             (C754 * C132 - C748 * C141 + C755 * C133 - C749 * C142 +
              C756 * C134 - C32227 * C143) *
                 C31966) *
                C32273 +
            ((C1237 - C1238 + C1239 - C1240 + C1241 - C1242) * C118 +
             (C1243 - C1244 + C1245 - C1246 + C1247 - C1248) * C31966) *
                C32261 +
            ((C1249 - C1250 + C1251 - C1252 + C1253 - C1254) * C118 +
             (C1255 - C1256 + C1257 - C1258 + C1259 - C1260) * C31966) *
                C32238) *
               C530 +
           (((C748 * C329 - C754 * C319 + C749 * C330 - C755 * C320 +
              C32227 * C331 - C756 * C321) *
                 C118 +
             (C748 * C349 - C754 * C334 + C749 * C350 - C755 * C335 +
              C32227 * C351 - C756 * C336) *
                 C31966) *
                C32273 +
            ((C748 * C624 - C754 * C619 + C749 * C625 - C755 * C620 +
              C32227 * C626 - C756 * C621) *
                 C118 +
             (C748 * C634 - C754 * C629 + C749 * C635 - C755 * C630 +
              C32227 * C636 - C756 * C631) *
                 C31966) *
                C32261 +
            ((C748 * C1060 - C754 * C1051 + C749 * C1061 - C755 * C1052 +
              C32227 * C1407 - C756 * C1406) *
                 C118 +
             (C748 * C1078 - C754 * C1063 + C749 * C1079 - C755 * C1064 +
              C32227 * C1409 - C756 * C1408) *
                 C31966) *
                C32238) *
               C531) *
              C31911 * C443)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C101 * C126 - C113 * C119 + C102 * C127 - C114 * C120 +
             C103 * C128 - C115 * C121 + C104 * C129 - C116 * C122 +
             C105 * C130 - C117 * C123) *
                C118 +
            (C101 * C140 - C113 * C131 + C102 * C141 - C114 * C132 +
             C103 * C142 - C115 * C133 + C104 * C143 - C116 * C134 +
             C105 * C144 - C117 * C135) *
                C31966) *
               C31955 * C530 +
           ((C113 * C318 - C101 * C328 + C114 * C319 - C102 * C329 +
             C115 * C320 - C103 * C330 + C116 * C321 - C104 * C331 +
             C117 * C322 - C105 * C332) *
                C118 +
            (C113 * C333 - C101 * C348 + C114 * C334 - C102 * C349 +
             C115 * C335 - C103 * C350 + C116 * C336 - C104 * C351 +
             C117 * C337 - C105 * C352) *
                C31966) *
               C31955 * C531) *
              C31911 * C442 +
          (((C113 * C120 - C101 * C127 + C114 * C121 - C102 * C128 +
             C115 * C122 - C103 * C129 + C116 * C123 - C104 * C130 +
             C117 * C124 - C105 * C136) *
                C118 +
            (C113 * C132 - C101 * C141 + C114 * C133 - C102 * C142 +
             C115 * C134 - C103 * C143 + C116 * C135 - C104 * C144 +
             C117 * C137 - C105 * C145) *
                C31966) *
               C31955 * C530 +
           ((C101 * C329 - C113 * C319 + C102 * C330 - C114 * C320 +
             C103 * C331 - C115 * C321 + C104 * C332 - C116 * C322 +
             C105 * C533 - C117 * C532) *
                C118 +
            (C101 * C349 - C113 * C334 + C102 * C350 - C114 * C335 +
             C103 * C351 - C115 * C336 + C104 * C352 - C116 * C337 +
             C105 * C535 - C117 * C534) *
                C31966) *
               C31955 * C531) *
              C31911 * C443)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C32270 * C126 - C5154 * C119 + C32257 * C127 - C5155 * C120 +
              C32227 * C128 - C5156 * C121) *
                 C118 +
             (C32270 * C140 - C5154 * C131 + C32257 * C141 - C5155 * C132 +
              C32227 * C142 - C5156 * C133) *
                 C31966) *
                C5151 +
            ((C5268 - C5269 + C5270 - C5271 + C5272 - C5273) * C118 +
             (C5274 - C5275 + C5276 - C5277 + C5278 - C5279) * C31966) *
                C5152 +
            C5316 * C32238) *
               C530 +
           (((C5154 * C318 - C32270 * C328 + C5155 * C319 - C32257 * C329 +
              C5156 * C320 - C32227 * C330) *
                 C118 +
             (C5154 * C333 - C32270 * C348 + C5155 * C334 - C32257 * C349 +
              C5156 * C335 - C32227 * C350) *
                 C31966) *
                C5151 +
            ((C5154 * C618 - C32270 * C623 + C5155 * C619 - C32257 * C624 +
              C5156 * C620 - C32227 * C625) *
                 C118 +
             (C5154 * C628 - C32270 * C633 + C5155 * C629 - C32257 * C634 +
              C5156 * C630 - C32227 * C635) *
                 C31966) *
                C5152 +
            ((C5154 * C1050 - C32270 * C1059 + C5155 * C1051 - C32257 * C1060 +
              C5156 * C1052 - C32227 * C1061) *
                 C118 +
             (C5154 * C1062 - C32270 * C1077 + C5155 * C1063 - C32257 * C1078 +
              C5156 * C1064 - C32227 * C1079) *
                 C31966) *
                C32238) *
               C531) *
              C31911 * C442 +
          ((((C5154 * C120 - C32270 * C127 + C5155 * C121 - C32257 * C128 +
              C5156 * C122 - C32227 * C129) *
                 C118 +
             (C5154 * C132 - C32270 * C141 + C5155 * C133 - C32257 * C142 +
              C5156 * C134 - C32227 * C143) *
                 C31966) *
                C5151 +
            ((C5573 - C5574 + C5575 - C5576 + C5577 - C5578) * C118 +
             (C5579 - C5580 + C5581 - C5582 + C5583 - C5584) * C31966) *
                C5152 +
            ((C5585 - C5586 + C5587 - C5588 + C5589 - C5590) * C118 +
             (C5591 - C5592 + C5593 - C5594 + C5595 - C5596) * C31966) *
                C32238) *
               C530 +
           (((C32270 * C329 - C5154 * C319 + C32257 * C330 - C5155 * C320 +
              C32227 * C331 - C5156 * C321) *
                 C118 +
             (C32270 * C349 - C5154 * C334 + C32257 * C350 - C5155 * C335 +
              C32227 * C351 - C5156 * C336) *
                 C31966) *
                C5151 +
            ((C32270 * C624 - C5154 * C619 + C32257 * C625 - C5155 * C620 +
              C32227 * C626 - C5156 * C621) *
                 C118 +
             (C32270 * C634 - C5154 * C629 + C32257 * C635 - C5155 * C630 +
              C32227 * C636 - C5156 * C631) *
                 C31966) *
                C5152 +
            ((C32270 * C1060 - C5154 * C1051 + C32257 * C1061 - C5155 * C1052 +
              C32227 * C1407 - C5156 * C1406) *
                 C118 +
             (C32270 * C1078 - C5154 * C1063 + C32257 * C1079 - C5155 * C1064 +
              C32227 * C1409 - C5156 * C1408) *
                 C31966) *
                C32238) *
               C531) *
              C31911 * C443)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C31862 * C126 - C5980 * C119) * C118 +
             (C31862 * C140 - C5980 * C131) * C31966) *
                C5975 +
            ((C6052 - C6053) * C118 + (C6054 - C6055) * C31966) * C5976 +
            C6084 * C5977 + C6085 * C5978 + C6086 * C5979) *
               C530 +
           (((C5980 * C318 - C31862 * C328) * C118 +
             (C5980 * C333 - C31862 * C348) * C31966) *
                C5975 +
            ((C5980 * C618 - C31862 * C623) * C118 +
             (C5980 * C628 - C31862 * C633) * C31966) *
                C5976 +
            ((C5980 * C1050 - C31862 * C1059) * C118 +
             (C5980 * C1062 - C31862 * C1077) * C31966) *
                C5977 +
            ((C5980 * C1556 - C31862 * C1559) * C118 +
             (C5980 * C1562 - C31862 * C1565) * C31966) *
                C5978 +
            ((C5980 * C6148 - C31862 * C6151) * C118 +
             (C5980 * C6152 - C31862 * C6157) * C31966) *
                C5979) *
               C531) *
              C31911 * C442 +
          ((((C5980 * C120 - C31862 * C127) * C118 +
             (C5980 * C132 - C31862 * C141) * C31966) *
                C5975 +
            ((C6247 - C6248) * C118 + (C6249 - C6250) * C31966) * C5976 +
            ((C6251 - C6252) * C118 + (C6253 - C6254) * C31966) * C5977 +
            ((C6255 - C6256) * C118 + (C6257 - C6258) * C31966) * C5978 +
            ((C6259 - C6260) * C118 + (C6261 - C6262) * C31966) * C5979) *
               C530 +
           (((C31862 * C329 - C5980 * C319) * C118 +
             (C31862 * C349 - C5980 * C334) * C31966) *
                C5975 +
            ((C31862 * C624 - C5980 * C619) * C118 +
             (C31862 * C634 - C5980 * C629) * C31966) *
                C5976 +
            ((C31862 * C1060 - C5980 * C1051) * C118 +
             (C31862 * C1078 - C5980 * C1063) * C31966) *
                C5977 +
            ((C31862 * C1560 - C5980 * C1557) * C118 +
             (C31862 * C1566 - C5980 * C1563) * C31966) *
                C5978 +
            ((C31862 * C6345 - C5980 * C6344) * C118 +
             (C31862 * C6347 - C5980 * C6346) * C31966) *
                C5979) *
               C531) *
              C31911 * C443)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C32270 * C126 - C5154 * C119 + C32257 * C127 - C5155 * C120 +
             C32227 * C128 - C5156 * C121) *
                C10043 +
            (C32270 * C140 - C5154 * C131 + C32257 * C141 - C5155 * C132 +
             C32227 * C142 - C5156 * C133) *
                C10040 +
            (C10267 - C10268 + C10269 - C10270 + C10271 - C10272) * C10044 +
            (C10273 - C10274 + C10275 - C10276 + C10277 - C10278) * C10041 +
            C10311 * C10045 + C10312 * C32241) *
               C31955 * C530 +
           ((C10268 - C10267 + C10270 - C10269 + C10272 - C10271) * C10043 +
            (C10274 - C10273 + C10276 - C10275 + C10278 - C10277) * C10040 +
            (C10280 - C10279 + C10282 - C10281 + C10284 - C10283) * C10044 +
            (C10286 - C10285 + C10288 - C10287 + C10290 - C10289) * C10041 +
            (C10291 - C10292 + C10293 - C10294 + C10295 - C10296) * C10045 +
            (C10297 - C10298 + C10299 - C10300 + C10301 - C10302) * C32241) *
               C31955 * C531) *
              C31911 * C442 +
          (((C5154 * C120 - C32270 * C127 + C5155 * C121 - C32257 * C128 +
             C5156 * C122 - C32227 * C129) *
                C10043 +
            (C5154 * C132 - C32270 * C141 + C5155 * C133 - C32257 * C142 +
             C5156 * C134 - C32227 * C143) *
                C10040 +
            (C10605 - C10606 + C10607 - C10608 + C10609 - C10610) * C10044 +
            (C10611 - C10612 + C10613 - C10614 + C10615 - C10616) * C10041 +
            (C10617 - C10618 + C10619 - C10620 + C10621 - C10622) * C10045 +
            (C10623 - C10624 + C10625 - C10626 + C10627 - C10628) * C32241) *
               C31955 * C530 +
           ((C10606 - C10605 + C10608 - C10607 + C10610 - C10609) * C10043 +
            (C10612 - C10611 + C10614 - C10613 + C10616 - C10615) * C10040 +
            (C10618 - C10617 + C10620 - C10619 + C10622 - C10621) * C10044 +
            (C10624 - C10623 + C10626 - C10625 + C10628 - C10627) * C10041 +
            (C32270 * C1935 - C5154 * C1929 + C32257 * C1936 - C5155 * C1930 +
             C32227 * C2295 - C5156 * C2294) *
                C10045 +
            (C32270 * C1947 - C5154 * C1938 + C32257 * C1948 - C5155 * C1939 +
             C32227 * C2297 - C5156 * C2296) *
                C32241) *
               C31955 * C531) *
              C31911 * C443)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31862 * C126 - C5980 * C119) * C10043 +
             (C31862 * C140 - C5980 * C131) * C10040 +
             (C6820 - C6821) * C10044 + (C6822 - C6823) * C10041 +
             C6842 * C10045 + C6843 * C32241) *
                C32273 +
            ((C6052 - C6053) * C10043 + (C6054 - C6055) * C10040 +
             C7318 * C10044 + C7319 * C10041 + C6828 * C10045 +
             C6829 * C32241) *
                C32261 +
            C11017 * C32238) *
               C530 +
           (((C6821 - C6820) * C10043 + (C6823 - C6822) * C10040 +
             (C6825 - C6824) * C10044 + (C6827 - C6826) * C10041 +
             (C6830 - C6831) * C10045 + (C6832 - C6833) * C32241) *
                C32273 +
            (C7320 * C10043 + C7321 * C10040 + C7322 * C10044 + C7323 * C10041 +
             (C6834 - C6835) * C10045 + (C6836 - C6837) * C32241) *
                C32261 +
            (C7324 * C10043 + C7325 * C10040 + C7326 * C10044 + C7327 * C10041 +
             (C6838 - C6839) * C10045 + (C6840 - C6841) * C32241) *
                C32238) *
               C531) *
              C31911 * C442 +
          ((((C5980 * C120 - C31862 * C127) * C10043 +
             (C5980 * C132 - C31862 * C141) * C10040 +
             (C7160 - C7161) * C10044 + (C7162 - C7163) * C10041 +
             (C7164 - C7165) * C10045 + (C7166 - C7167) * C32241) *
                C32273 +
            ((C6247 - C6248) * C10043 + (C6249 - C6250) * C10040 +
             (C6994 - C6995) * C10044 + (C6996 - C6997) * C10041 +
             (C6998 - C6999) * C10045 + (C7000 - C7001) * C32241) *
                C32261 +
            ((C6251 - C6252) * C10043 + (C6253 - C6254) * C10040 +
             (C7002 - C7003) * C10044 + (C7004 - C7005) * C10041 +
             (C7006 - C7007) * C10045 + (C7008 - C7009) * C32241) *
                C32238) *
               C530 +
           (((C7161 - C7160) * C10043 + (C7163 - C7162) * C10040 +
             (C7165 - C7164) * C10044 + (C7167 - C7166) * C10041 +
             (C31862 * C1935 - C5980 * C1929) * C10045 +
             (C31862 * C1947 - C5980 * C1938) * C32241) *
                C32273 +
            ((C6995 - C6994) * C10043 + (C6997 - C6996) * C10040 +
             (C6999 - C6998) * C10044 + (C7001 - C7000) * C10041 +
             (C31862 * C2472 - C5980 * C2469) * C10045 +
             (C31862 * C2478 - C5980 * C2475) * C32241) *
                C32261 +
            ((C7003 - C7002) * C10043 + (C7005 - C7004) * C10040 +
             (C7007 - C7006) * C10044 + (C7009 - C7008) * C10041 +
             (C31862 * C7156 - C5980 * C7155) * C10045 +
             (C31862 * C7158 - C5980 * C7157) * C32241) *
                C32238) *
               C531) *
              C31911 * C443)) /
            (p * q * std::sqrt(p + q));
    d2ee[74] +=
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C101 * C126 - C113 * C119 + C102 * C127 - C114 * C120 +
            C103 * C128 - C115 * C121 + C104 * C129 - C116 * C122 +
            C105 * C130 - C117 * C123) *
               C118 +
           (C101 * C140 - C113 * C131 + C102 * C141 - C114 * C132 +
            C103 * C142 - C115 * C133 + C104 * C143 - C116 * C134 +
            C105 * C144 - C117 * C135) *
               C31966) *
              C31955 * C31925 * C209 +
          ((C113 * C213 - C101 * C223 + C114 * C214 - C102 * C224 +
            C115 * C215 - C103 * C225 + C116 * C216 - C104 * C226 +
            C117 * C217 - C105 * C227) *
               C118 +
           (C113 * C228 - C101 * C243 + C114 * C229 - C102 * C244 +
            C115 * C230 - C103 * C245 + C116 * C231 - C104 * C246 +
            C117 * C232 - C105 * C247) *
               C31966) *
              C31955 * C31925 * C210 +
          ((C101 * C233 - C113 * C218 + C102 * C234 - C114 * C219 +
            C103 * C235 - C115 * C220 + C104 * C236 - C116 * C221 +
            C105 * C237 - C117 * C222) *
               C118 +
           (C101 * C248 - C113 * C238 + C102 * C249 - C114 * C239 +
            C103 * C250 - C115 * C240 + C104 * C251 - C116 * C241 +
            C105 * C252 - C117 * C242) *
               C31966) *
              C31955 * C31925 * C211) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C101 * C126 - C113 * C119 + C102 * C127 - C114 * C120 +
            C103 * C128 - C115 * C121 + C104 * C129 - C116 * C122 +
            C105 * C130 - C117 * C123) *
               C118 +
           (C101 * C140 - C113 * C131 + C102 * C141 - C114 * C132 +
            C103 * C142 - C115 * C133 + C104 * C143 - C116 * C134 +
            C105 * C144 - C117 * C135) *
               C31966) *
              C31955 * C31925 * C31911 * C110 +
          ((C113 * C120 - C101 * C127 + C114 * C121 - C102 * C128 +
            C115 * C122 - C103 * C129 + C116 * C123 - C104 * C130 +
            C117 * C124 - C105 * C136) *
               C118 +
           (C113 * C132 - C101 * C141 + C114 * C133 - C102 * C142 +
            C115 * C134 - C103 * C143 + C116 * C135 - C104 * C144 +
            C117 * C137 - C105 * C145) *
               C31966) *
              C31955 * C31925 * C31911 * C111 +
          ((C101 * C128 - C113 * C121 + C102 * C129 - C114 * C122 +
            C103 * C130 - C115 * C123 + C104 * C136 - C116 * C124 +
            C105 * C138 - C117 * C125) *
               C118 +
           (C101 * C142 - C113 * C133 + C102 * C143 - C114 * C134 +
            C103 * C144 - C115 * C135 + C104 * C145 - C116 * C137 +
            C105 * C146 - C117 * C139) *
               C31966) *
              C31955 * C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C748 * C126 - C754 * C119 + C749 * C127 - C755 * C120 +
             C32227 * C128 - C756 * C121) *
                C118 +
            (C748 * C140 - C754 * C131 + C749 * C141 - C755 * C132 +
             C32227 * C142 - C756 * C133) *
                C31966) *
               C32273 +
           ((C748 * C223 - C754 * C213 + C749 * C224 - C755 * C214 +
             C32227 * C225 - C756 * C215) *
                C118 +
            (C748 * C243 - C754 * C228 + C749 * C244 - C755 * C229 +
             C32227 * C245 - C756 * C230) *
                C31966) *
               C32261 +
           ((C748 * C233 - C754 * C218 + C749 * C234 - C755 * C219 +
             C32227 * C235 - C756 * C220) *
                C118 +
            (C748 * C248 - C754 * C238 + C749 * C249 - C755 * C239 +
             C32227 * C250 - C756 * C240) *
                C31966) *
               C32238) *
              C31925 * C31911 * C110 +
          (((C754 * C120 - C748 * C127 + C755 * C121 - C749 * C128 +
             C756 * C122 - C32227 * C129) *
                C118 +
            (C754 * C132 - C748 * C141 + C755 * C133 - C749 * C142 +
             C756 * C134 - C32227 * C143) *
                C31966) *
               C32273 +
           ((C754 * C214 - C748 * C224 + C755 * C215 - C749 * C225 +
             C756 * C216 - C32227 * C226) *
                C118 +
            (C754 * C229 - C748 * C244 + C755 * C230 - C749 * C245 +
             C756 * C231 - C32227 * C246) *
                C31966) *
               C32261 +
           ((C754 * C219 - C748 * C234 + C755 * C220 - C749 * C235 +
             C756 * C221 - C32227 * C236) *
                C118 +
            (C754 * C239 - C748 * C249 + C755 * C240 - C749 * C250 +
             C756 * C241 - C32227 * C251) *
                C31966) *
               C32238) *
              C31925 * C31911 * C111 +
          (((C748 * C128 - C754 * C121 + C749 * C129 - C755 * C122 +
             C32227 * C130 - C756 * C123) *
                C118 +
            (C748 * C142 - C754 * C133 + C749 * C143 - C755 * C134 +
             C32227 * C144 - C756 * C135) *
                C31966) *
               C32273 +
           ((C748 * C225 - C754 * C215 + C749 * C226 - C755 * C216 +
             C32227 * C227 - C756 * C217) *
                C118 +
            (C748 * C245 - C754 * C230 + C749 * C246 - C755 * C231 +
             C32227 * C247 - C756 * C232) *
                C31966) *
               C32261 +
           ((C748 * C235 - C754 * C220 + C749 * C236 - C755 * C221 +
             C32227 * C237 - C756 * C222) *
                C118 +
            (C748 * C250 - C754 * C240 + C749 * C251 - C755 * C241 +
             C32227 * C252 - C756 * C242) *
                C31966) *
               C32238) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C748 * C126 - C754 * C119 + C749 * C127 - C755 * C120 +
             C32227 * C128 - C756 * C121) *
                C118 +
            (C748 * C140 - C754 * C131 + C749 * C141 - C755 * C132 +
             C32227 * C142 - C756 * C133) *
                C31966) *
               C32273 +
           ((C892 - C893 + C894 - C895 + C896 - C897) * C118 +
            (C898 - C899 + C900 - C901 + C902 - C903) * C31966) *
               C32261 +
           C940 * C32238) *
              C31925 * C209 +
          (((C893 - C892 + C895 - C894 + C897 - C896) * C118 +
            (C899 - C898 + C901 - C900 + C903 - C902) * C31966) *
               C32273 +
           ((C905 - C904 + C907 - C906 + C909 - C908) * C118 +
            (C911 - C910 + C913 - C912 + C915 - C914) * C31966) *
               C32261 +
           ((C916 - C917 + C918 - C919 + C920 - C921) * C118 +
            (C922 - C923 + C924 - C925 + C926 - C927) * C31966) *
               C32238) *
              C31925 * C210 +
          (C940 * C32273 +
           ((C917 - C916 + C919 - C918 + C921 - C920) * C118 +
            (C923 - C922 + C925 - C924 + C927 - C926) * C31966) *
               C32261 +
           ((C748 * C879 - C754 * C870 + C749 * C880 - C755 * C871 +
             C32227 * C881 - C756 * C872) *
                C118 +
            (C748 * C888 - C754 * C882 + C749 * C889 - C755 * C883 +
             C32227 * C890 - C756 * C884) *
                C31966) *
               C32238) *
              C31925 * C211) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C32270 * C126 - C5154 * C119 + C32257 * C127 - C5155 * C120 +
             C32227 * C128 - C5156 * C121) *
                C118 +
            (C32270 * C140 - C5154 * C131 + C32257 * C141 - C5155 * C132 +
             C32227 * C142 - C5156 * C133) *
                C31966) *
               C5151 +
           ((C32270 * C223 - C5154 * C213 + C32257 * C224 - C5155 * C214 +
             C32227 * C225 - C5156 * C215) *
                C118 +
            (C32270 * C243 - C5154 * C228 + C32257 * C244 - C5155 * C229 +
             C32227 * C245 - C5156 * C230) *
                C31966) *
               C5152 +
           ((C32270 * C233 - C5154 * C218 + C32257 * C234 - C5155 * C219 +
             C32227 * C235 - C5156 * C220) *
                C118 +
            (C32270 * C248 - C5154 * C238 + C32257 * C249 - C5155 * C239 +
             C32227 * C250 - C5156 * C240) *
                C31966) *
               C32238) *
              C31925 * C31911 * C110 +
          (((C5154 * C120 - C32270 * C127 + C5155 * C121 - C32257 * C128 +
             C5156 * C122 - C32227 * C129) *
                C118 +
            (C5154 * C132 - C32270 * C141 + C5155 * C133 - C32257 * C142 +
             C5156 * C134 - C32227 * C143) *
                C31966) *
               C5151 +
           ((C5154 * C214 - C32270 * C224 + C5155 * C215 - C32257 * C225 +
             C5156 * C216 - C32227 * C226) *
                C118 +
            (C5154 * C229 - C32270 * C244 + C5155 * C230 - C32257 * C245 +
             C5156 * C231 - C32227 * C246) *
                C31966) *
               C5152 +
           ((C5154 * C219 - C32270 * C234 + C5155 * C220 - C32257 * C235 +
             C5156 * C221 - C32227 * C236) *
                C118 +
            (C5154 * C239 - C32270 * C249 + C5155 * C240 - C32257 * C250 +
             C5156 * C241 - C32227 * C251) *
                C31966) *
               C32238) *
              C31925 * C31911 * C111 +
          (((C32270 * C128 - C5154 * C121 + C32257 * C129 - C5155 * C122 +
             C32227 * C130 - C5156 * C123) *
                C118 +
            (C32270 * C142 - C5154 * C133 + C32257 * C143 - C5155 * C134 +
             C32227 * C144 - C5156 * C135) *
                C31966) *
               C5151 +
           ((C32270 * C225 - C5154 * C215 + C32257 * C226 - C5155 * C216 +
             C32227 * C227 - C5156 * C217) *
                C118 +
            (C32270 * C245 - C5154 * C230 + C32257 * C246 - C5155 * C231 +
             C32227 * C247 - C5156 * C232) *
                C31966) *
               C5152 +
           ((C32270 * C235 - C5154 * C220 + C32257 * C236 - C5155 * C221 +
             C32227 * C237 - C5156 * C222) *
                C118 +
            (C32270 * C250 - C5154 * C240 + C32257 * C251 - C5155 * C241 +
             C32227 * C252 - C5156 * C242) *
                C31966) *
               C32238) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C32270 * C126 - C5154 * C119 + C32257 * C127 - C5155 * C120 +
             C32227 * C128 - C5156 * C121) *
                C118 +
            (C32270 * C140 - C5154 * C131 + C32257 * C141 - C5155 * C132 +
             C32227 * C142 - C5156 * C133) *
                C31966) *
               C5151 +
           ((C5268 - C5269 + C5270 - C5271 + C5272 - C5273) * C118 +
            (C5274 - C5275 + C5276 - C5277 + C5278 - C5279) * C31966) *
               C5152 +
           C5316 * C32238) *
              C31925 * C209 +
          (((C5269 - C5268 + C5271 - C5270 + C5273 - C5272) * C118 +
            (C5275 - C5274 + C5277 - C5276 + C5279 - C5278) * C31966) *
               C5151 +
           ((C5281 - C5280 + C5283 - C5282 + C5285 - C5284) * C118 +
            (C5287 - C5286 + C5289 - C5288 + C5291 - C5290) * C31966) *
               C5152 +
           ((C5292 - C5293 + C5294 - C5295 + C5296 - C5297) * C118 +
            (C5298 - C5299 + C5300 - C5301 + C5302 - C5303) * C31966) *
               C32238) *
              C31925 * C210 +
          (C5316 * C5151 +
           ((C5293 - C5292 + C5295 - C5294 + C5297 - C5296) * C118 +
            (C5299 - C5298 + C5301 - C5300 + C5303 - C5302) * C31966) *
               C5152 +
           ((C32270 * C879 - C5154 * C870 + C32257 * C880 - C5155 * C871 +
             C32227 * C881 - C5156 * C872) *
                C118 +
            (C32270 * C888 - C5154 * C882 + C32257 * C889 - C5155 * C883 +
             C32227 * C890 - C5156 * C884) *
                C31966) *
               C32238) *
              C31925 * C211) *
         C31899) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C31862 * C126 - C5980 * C119) * C118 +
            (C31862 * C140 - C5980 * C131) * C31966) *
               C5975 +
           ((C31862 * C223 - C5980 * C213) * C118 +
            (C31862 * C243 - C5980 * C228) * C31966) *
               C5976 +
           ((C31862 * C233 - C5980 * C218) * C118 +
            (C31862 * C248 - C5980 * C238) * C31966) *
               C5977 +
           ((C31862 * C873 - C5980 * C867) * C118 +
            (C31862 * C885 - C5980 * C876) * C31966) *
               C5978 +
           ((C31862 * C879 - C5980 * C870) * C118 +
            (C31862 * C888 - C5980 * C882) * C31966) *
               C5979) *
              C31925 * C31911 * C110 +
          (((C5980 * C120 - C31862 * C127) * C118 +
            (C5980 * C132 - C31862 * C141) * C31966) *
               C5975 +
           ((C5980 * C214 - C31862 * C224) * C118 +
            (C5980 * C229 - C31862 * C244) * C31966) *
               C5976 +
           ((C5980 * C219 - C31862 * C234) * C118 +
            (C5980 * C239 - C31862 * C249) * C31966) *
               C5977 +
           ((C5980 * C868 - C31862 * C874) * C118 +
            (C5980 * C877 - C31862 * C886) * C31966) *
               C5978 +
           ((C5980 * C871 - C31862 * C880) * C118 +
            (C5980 * C883 - C31862 * C889) * C31966) *
               C5979) *
              C31925 * C31911 * C111 +
          (((C31862 * C128 - C5980 * C121) * C118 +
            (C31862 * C142 - C5980 * C133) * C31966) *
               C5975 +
           ((C31862 * C225 - C5980 * C215) * C118 +
            (C31862 * C245 - C5980 * C230) * C31966) *
               C5976 +
           ((C31862 * C235 - C5980 * C220) * C118 +
            (C31862 * C250 - C5980 * C240) * C31966) *
               C5977 +
           ((C31862 * C875 - C5980 * C869) * C118 +
            (C31862 * C887 - C5980 * C878) * C31966) *
               C5978 +
           ((C31862 * C881 - C5980 * C872) * C118 +
            (C31862 * C890 - C5980 * C884) * C31966) *
               C5979) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C31862 * C126 - C5980 * C119) * C118 +
            (C31862 * C140 - C5980 * C131) * C31966) *
               C5975 +
           ((C6052 - C6053) * C118 + (C6054 - C6055) * C31966) * C5976 +
           C6084 * C5977 + C6085 * C5978 + C6086 * C5979) *
              C31925 * C209 +
          (((C6053 - C6052) * C118 + (C6055 - C6054) * C31966) * C5975 +
           ((C6057 - C6056) * C118 + (C6059 - C6058) * C31966) * C5976 +
           ((C6061 - C6060) * C118 + (C6063 - C6062) * C31966) * C5977 +
           ((C6065 - C6064) * C118 + (C6067 - C6066) * C31966) * C5978 +
           ((C6068 - C6069) * C118 + (C6070 - C6071) * C31966) * C5979) *
              C31925 * C210 +
          (C6084 * C5975 + C6085 * C5976 + C6086 * C5977 +
           ((C6069 - C6068) * C118 + (C6071 - C6070) * C31966) * C5978 +
           ((C31862 * C6047 - C5980 * C6044) * C118 +
            (C31862 * C6050 - C5980 * C6048) * C31966) *
               C5979) *
              C31925 * C211) *
         C31899) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C32270 * C126 - C5154 * C119 + C32257 * C127 - C5155 * C120 +
            C32227 * C128 - C5156 * C121) *
               C10043 +
           (C32270 * C140 - C5154 * C131 + C32257 * C141 - C5155 * C132 +
            C32227 * C142 - C5156 * C133) *
               C10040 +
           (C32270 * C328 - C5154 * C318 + C32257 * C329 - C5155 * C319 +
            C32227 * C330 - C5156 * C320) *
               C10044 +
           (C32270 * C348 - C5154 * C333 + C32257 * C349 - C5155 * C334 +
            C32227 * C350 - C5156 * C335) *
               C10041 +
           (C32270 * C338 - C5154 * C323 + C32257 * C339 - C5155 * C324 +
            C32227 * C340 - C5156 * C325) *
               C10045 +
           (C32270 * C353 - C5154 * C343 + C32257 * C354 - C5155 * C344 +
            C32227 * C355 - C5156 * C345) *
               C32241) *
              C31955 * C31925 * C31911 * C110 +
          ((C5154 * C120 - C32270 * C127 + C5155 * C121 - C32257 * C128 +
            C5156 * C122 - C32227 * C129) *
               C10043 +
           (C5154 * C132 - C32270 * C141 + C5155 * C133 - C32257 * C142 +
            C5156 * C134 - C32227 * C143) *
               C10040 +
           (C5154 * C319 - C32270 * C329 + C5155 * C320 - C32257 * C330 +
            C5156 * C321 - C32227 * C331) *
               C10044 +
           (C5154 * C334 - C32270 * C349 + C5155 * C335 - C32257 * C350 +
            C5156 * C336 - C32227 * C351) *
               C10041 +
           (C5154 * C324 - C32270 * C339 + C5155 * C325 - C32257 * C340 +
            C5156 * C326 - C32227 * C341) *
               C10045 +
           (C5154 * C344 - C32270 * C354 + C5155 * C345 - C32257 * C355 +
            C5156 * C346 - C32227 * C356) *
               C32241) *
              C31955 * C31925 * C31911 * C111 +
          ((C32270 * C128 - C5154 * C121 + C32257 * C129 - C5155 * C122 +
            C32227 * C130 - C5156 * C123) *
               C10043 +
           (C32270 * C142 - C5154 * C133 + C32257 * C143 - C5155 * C134 +
            C32227 * C144 - C5156 * C135) *
               C10040 +
           (C32270 * C330 - C5154 * C320 + C32257 * C331 - C5155 * C321 +
            C32227 * C332 - C5156 * C322) *
               C10044 +
           (C32270 * C350 - C5154 * C335 + C32257 * C351 - C5155 * C336 +
            C32227 * C352 - C5156 * C337) *
               C10041 +
           (C32270 * C340 - C5154 * C325 + C32257 * C341 - C5155 * C326 +
            C32227 * C342 - C5156 * C327) *
               C10045 +
           (C32270 * C355 - C5154 * C345 + C32257 * C356 - C5155 * C346 +
            C32227 * C357 - C5156 * C347) *
               C32241) *
              C31955 * C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C32270 * C126 - C5154 * C119 + C32257 * C127 - C5155 * C120 +
            C32227 * C128 - C5156 * C121) *
               C10043 +
           (C32270 * C140 - C5154 * C131 + C32257 * C141 - C5155 * C132 +
            C32227 * C142 - C5156 * C133) *
               C10040 +
           (C32270 * C328 - C5154 * C318 + C32257 * C329 - C5155 * C319 +
            C32227 * C330 - C5156 * C320) *
               C10044 +
           (C32270 * C348 - C5154 * C333 + C32257 * C349 - C5155 * C334 +
            C32227 * C350 - C5156 * C335) *
               C10041 +
           (C32270 * C338 - C5154 * C323 + C32257 * C339 - C5155 * C324 +
            C32227 * C340 - C5156 * C325) *
               C10045 +
           (C32270 * C353 - C5154 * C343 + C32257 * C354 - C5155 * C344 +
            C32227 * C355 - C5156 * C345) *
               C32241) *
              C31955 * C31925 * C209 +
          ((C5269 - C5268 + C5271 - C5270 + C5273 - C5272) * C10043 +
           (C5275 - C5274 + C5277 - C5276 + C5279 - C5278) * C10040 +
           (C5889 - C5890 + C5891 - C5892 + C5893 - C5894) * C10044 +
           (C5895 - C5896 + C5897 - C5898 + C5899 - C5900) * C10041 +
           (C5154 * C1053 - C32270 * C1065 + C5155 * C1054 - C32257 * C1066 +
            C5156 * C1055 - C32227 * C1067) *
               C10045 +
           (C5154 * C1068 - C32270 * C1080 + C5155 * C1069 - C32257 * C1081 +
            C5156 * C1070 - C32227 * C1082) *
               C32241) *
              C31955 * C31925 * C210 +
          (C5312 * C10043 + C5313 * C10040 +
           (C5902 - C5901 + C5904 - C5903 + C5906 - C5905) * C10044 +
           (C5908 - C5907 + C5910 - C5909 + C5912 - C5911) * C10041 +
           (C32270 * C1071 - C5154 * C1056 + C32257 * C1072 - C5155 * C1057 +
            C32227 * C1073 - C5156 * C1058) *
               C10045 +
           (C32270 * C1083 - C5154 * C1074 + C32257 * C1084 - C5155 * C1075 +
            C32227 * C1085 - C5156 * C1076) *
               C32241) *
              C31955 * C31925 * C211) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31862 * C126 - C5980 * C119) * C10043 +
            (C31862 * C140 - C5980 * C131) * C10040 + (C6820 - C6821) * C10044 +
            (C6822 - C6823) * C10041 + C6842 * C10045 + C6843 * C32241) *
               C32273 +
           ((C6052 - C6053) * C10043 + (C6054 - C6055) * C10040 +
            C7318 * C10044 + C7319 * C10041 + C6828 * C10045 + C6829 * C32241) *
               C32261 +
           (C6072 * C10043 + C6073 * C10040 + C6677 * C10044 + C6678 * C10041 +
            C6690 * C10045 + C6691 * C32241) *
               C32238) *
              C31925 * C31911 * C110 +
          (((C5980 * C120 - C31862 * C127) * C10043 +
            (C5980 * C132 - C31862 * C141) * C10040 + (C7160 - C7161) * C10044 +
            (C7162 - C7163) * C10041 + (C7164 - C7165) * C10045 +
            (C7166 - C7167) * C32241) *
               C32273 +
           ((C6247 - C6248) * C10043 + (C6249 - C6250) * C10040 +
            (C6994 - C6995) * C10044 + (C6996 - C6997) * C10041 +
            (C6998 - C6999) * C10045 + (C7000 - C7001) * C32241) *
               C32261 +
           ((C6251 - C6252) * C10043 + (C6253 - C6254) * C10040 +
            (C7002 - C7003) * C10044 + (C7004 - C7005) * C10041 +
            (C7006 - C7007) * C10045 + (C7008 - C7009) * C32241) *
               C32238) *
              C31925 * C31911 * C111 +
          (((C31862 * C128 - C5980 * C121) * C10043 +
            (C31862 * C142 - C5980 * C133) * C10040 +
            (C31862 * C330 - C5980 * C320) * C10044 +
            (C31862 * C350 - C5980 * C335) * C10041 +
            (C31862 * C340 - C5980 * C325) * C10045 +
            (C31862 * C355 - C5980 * C345) * C32241) *
               C32273 +
           ((C31862 * C225 - C5980 * C215) * C10043 +
            (C31862 * C245 - C5980 * C230) * C10040 +
            (C31862 * C625 - C5980 * C620) * C10044 +
            (C31862 * C635 - C5980 * C630) * C10041 +
            (C31862 * C1067 - C5980 * C1055) * C10045 +
            (C31862 * C1082 - C5980 * C1070) * C32241) *
               C32261 +
           ((C31862 * C235 - C5980 * C220) * C10043 +
            (C31862 * C250 - C5980 * C240) * C10040 +
            (C31862 * C1061 - C5980 * C1052) * C10044 +
            (C31862 * C1079 - C5980 * C1064) * C10041 +
            (C31862 * C1073 - C5980 * C1058) * C10045 +
            (C31862 * C1085 - C5980 * C1076) * C32241) *
               C32238) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31862 * C126 - C5980 * C119) * C10043 +
            (C31862 * C140 - C5980 * C131) * C10040 + (C6820 - C6821) * C10044 +
            (C6822 - C6823) * C10041 + C6842 * C10045 + C6843 * C32241) *
               C32273 +
           ((C6052 - C6053) * C10043 + (C6054 - C6055) * C10040 +
            C7318 * C10044 + C7319 * C10041 + C6828 * C10045 + C6829 * C32241) *
               C32261 +
           C11017 * C32238) *
              C31925 * C209 +
          (((C6053 - C6052) * C10043 + (C6055 - C6054) * C10040 +
            C7320 * C10044 + C7321 * C10041 + C7322 * C10045 + C7323 * C32241) *
               C32273 +
           ((C6057 - C6056) * C10043 + (C6059 - C6058) * C10040 +
            C7324 * C10044 + C7325 * C10041 + C7326 * C10045 + C7327 * C32241) *
               C32261 +
           ((C6061 - C6060) * C10043 + (C6063 - C6062) * C10040 +
            C9929 * C10044 + C9930 * C10041 + (C6683 - C6684) * C10045 +
            (C6685 - C6686) * C32241) *
               C32238) *
              C31925 * C210 +
          (C11017 * C32273 +
           (C6074 * C10043 + C6075 * C10040 + C9427 * C10044 + C9428 * C10041 +
            (C6684 - C6683) * C10045 + (C6686 - C6685) * C32241) *
               C32261 +
           (C6076 * C10043 + C6077 * C10040 + (C6448 - C6447) * C10044 +
            (C6450 - C6449) * C10041 +
            (C31862 * C6155 - C5980 * C6150) * C10045 +
            (C31862 * C6159 - C5980 * C6156) * C32241) *
               C32238) *
              C31925 * C211) *
         C31899) /
            (p * q * std::sqrt(p + q));
    d2ee[75] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C31867 * C126 - C30883 * C119 + C31875 * C127 - C30879 * C120 +
              C17317 * C128 - C30889 * C121) *
                 C20326 +
             (C31867 * C140 - C30883 * C131 + C31875 * C141 - C30879 * C132 +
              C17317 * C142 - C30889 * C133) *
                 C20324 +
             (C18518 - C18519 + C18520 - C18521 + C18522 - C18523) * C20327 +
             (C18524 - C18525 + C18526 - C18527 + C18528 - C18529) * C32053) *
                C32207 +
            ((C17435 - C17436 + C17437 - C17438 + C17439 - C17440) * C20326 +
             (C17441 - C17442 + C17443 - C17444 + C17445 - C17446) * C20324 +
             C19176 * C20327 + C19177 * C32053) *
                C32013) *
               C31925 * C440 +
           (((C17436 - C17435 + C17438 - C17437 + C17440 - C17439) * C20326 +
             (C17442 - C17441 + C17444 - C17443 + C17446 - C17445) * C20324 +
             C19178 * C20327 + C19179 * C32053) *
                C32207 +
            ((C17448 - C17447 + C17450 - C17449 + C17452 - C17451) * C20326 +
             (C17454 - C17453 + C17456 - C17455 + C17458 - C17457) * C20324 +
             (C18068 - C18069 + C18070 - C18071 + C18072 - C18073) * C20327 +
             (C18074 - C18075 + C18076 - C18077 + C18078 - C18079) * C32053) *
                C32013) *
               C31925 * C441) *
              C442 +
          ((((C30883 * C120 - C31867 * C127 + C30879 * C121 - C31875 * C128 +
              C30889 * C122 - C17317 * C129) *
                 C20326 +
             (C30883 * C132 - C31867 * C141 + C30879 * C133 - C31875 * C142 +
              C30889 * C134 - C17317 * C143) *
                 C20324 +
             (C18954 - C18955 + C18956 - C18957 + C18958 - C18959) * C20327 +
             (C18960 - C18961 + C18962 - C18963 + C18964 - C18965) * C32053) *
                C32207 +
            ((C17740 - C17741 + C17742 - C17743 + C17744 - C17745) * C20326 +
             (C17746 - C17747 + C17748 - C17749 + C17750 - C17751) * C20324 +
             (C18748 - C18749 + C18750 - C18751 + C18752 - C18753) * C20327 +
             (C18754 - C18755 + C18756 - C18757 + C18758 - C18759) * C32053) *
                C32013) *
               C31925 * C440 +
           (((C17741 - C17740 + C17743 - C17742 + C17745 - C17744) * C20326 +
             (C17747 - C17746 + C17749 - C17748 + C17751 - C17750) * C20324 +
             (C18749 - C18748 + C18751 - C18750 + C18753 - C18752) * C20327 +
             (C18755 - C18754 + C18757 - C18756 + C18759 - C18758) * C32053) *
                C32207 +
            ((C17753 - C17752 + C17755 - C17754 + C17757 - C17756) * C20326 +
             (C17759 - C17758 + C17761 - C17760 + C17763 - C17762) * C20324 +
             (C31867 * C1060 - C30883 * C1051 + C31875 * C1061 -
              C30879 * C1052 + C17317 * C1407 - C30889 * C1406) *
                 C20327 +
             (C31867 * C1078 - C30883 * C1063 + C31875 * C1079 -
              C30879 * C1064 + C17317 * C1409 - C30889 * C1408) *
                 C32053) *
                C32013) *
               C31925 * C441) *
              C443)) /
        (p * q * std::sqrt(p + q));
    d2ee[76] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C31867 * C126 - C30883 * C119 + C31875 * C127 - C30879 * C120 +
              C17317 * C128 - C30889 * C121) *
                 C20326 +
             (C31867 * C140 - C30883 * C131 + C31875 * C141 - C30879 * C132 +
              C17317 * C142 - C30889 * C133) *
                 C20324 +
             (C18518 - C18519 + C18520 - C18521 + C18522 - C18523) * C20327 +
             (C18524 - C18525 + C18526 - C18527 + C18528 - C18529) * C32053) *
                C32207 +
            ((C17435 - C17436 + C17437 - C17438 + C17439 - C17440) * C20326 +
             (C17441 - C17442 + C17443 - C17444 + C17445 - C17446) * C20324 +
             C19176 * C20327 + C19177 * C32053) *
                C32013) *
               C530 +
           (((C18519 - C18518 + C18521 - C18520 + C18523 - C18522) * C20326 +
             (C18525 - C18524 + C18527 - C18526 + C18529 - C18528) * C20324 +
             (C18530 - C18531 + C18532 - C18533 + C18534 - C18535) * C20327 +
             (C18536 - C18537 + C18538 - C18539 + C18540 - C18541) * C32053) *
                C32207 +
            (C19178 * C20326 + C19179 * C20324 +
             (C18542 - C18543 + C18544 - C18545 + C18546 - C18547) * C20327 +
             (C18548 - C18549 + C18550 - C18551 + C18552 - C18553) * C32053) *
                C32013) *
               C531) *
              C440 +
          ((((C17436 - C17435 + C17438 - C17437 + C17440 - C17439) * C20326 +
             (C17442 - C17441 + C17444 - C17443 + C17446 - C17445) * C20324 +
             C19178 * C20327 + C19179 * C32053) *
                C32207 +
            ((C17448 - C17447 + C17450 - C17449 + C17452 - C17451) * C20326 +
             (C17454 - C17453 + C17456 - C17455 + C17458 - C17457) * C20324 +
             (C18068 - C18069 + C18070 - C18071 + C18072 - C18073) * C20327 +
             (C18074 - C18075 + C18076 - C18077 + C18078 - C18079) * C32053) *
                C32013) *
               C530 +
           ((C19176 * C20326 + C19177 * C20324 +
             (C18543 - C18542 + C18545 - C18544 + C18547 - C18546) * C20327 +
             (C18549 - C18548 + C18551 - C18550 + C18553 - C18552) * C32053) *
                C32207 +
            ((C18069 - C18068 + C18071 - C18070 + C18073 - C18072) * C20326 +
             (C18075 - C18074 + C18077 - C18076 + C18079 - C18078) * C20324 +
             (C31867 * C1071 - C30883 * C1056 + C31875 * C1072 -
              C30879 * C1057 + C17317 * C1073 - C30889 * C1058) *
                 C20327 +
             (C31867 * C1083 - C30883 * C1074 + C31875 * C1084 -
              C30879 * C1075 + C17317 * C1085 - C30889 * C1076) *
                 C32053) *
                C32013) *
               C531) *
              C441) *
         C31899) /
        (p * q * std::sqrt(p + q));
    d2ee[77] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31867 * C126 - C30883 * C119 + C31875 * C127 - C30879 * C120 +
             C17317 * C128 - C30889 * C121) *
                C20326 +
            (C31867 * C140 - C30883 * C131 + C31875 * C141 - C30879 * C132 +
             C17317 * C142 - C30889 * C133) *
                C20324 +
            (C18518 - C18519 + C18520 - C18521 + C18522 - C18523) * C20327 +
            (C18524 - C18525 + C18526 - C18527 + C18528 - C18529) * C32053) *
               C32207 +
           ((C17435 - C17436 + C17437 - C17438 + C17439 - C17440) * C20326 +
            (C17441 - C17442 + C17443 - C17444 + C17445 - C17446) * C20324 +
            C19176 * C20327 + C19177 * C32053) *
               C32013) *
              C31925 * C209 +
          (((C17436 - C17435 + C17438 - C17437 + C17440 - C17439) * C20326 +
            (C17442 - C17441 + C17444 - C17443 + C17446 - C17445) * C20324 +
            C19178 * C20327 + C19179 * C32053) *
               C32207 +
           ((C17448 - C17447 + C17450 - C17449 + C17452 - C17451) * C20326 +
            (C17454 - C17453 + C17456 - C17455 + C17458 - C17457) * C20324 +
            (C18068 - C18069 + C18070 - C18071 + C18072 - C18073) * C20327 +
            (C18074 - C18075 + C18076 - C18077 + C18078 - C18079) * C32053) *
               C32013) *
              C31925 * C210 +
          ((C17479 * C20326 + C17480 * C20324 +
            (C18069 - C18068 + C18071 - C18070 + C18073 - C18072) * C20327 +
            (C18075 - C18074 + C18077 - C18076 + C18079 - C18078) * C32053) *
               C32207 +
           ((C17460 - C17459 + C17462 - C17461 + C17464 - C17463) * C20326 +
            (C17466 - C17465 + C17468 - C17467 + C17470 - C17469) * C20324 +
            (C31867 * C1559 - C30883 * C1556 + C31875 * C1560 - C30879 * C1557 +
             C17317 * C1561 - C30889 * C1558) *
                C20327 +
            (C31867 * C1565 - C30883 * C1562 + C31875 * C1566 - C30879 * C1563 +
             C17317 * C1567 - C30889 * C1564) *
                C32053) *
               C32013) *
              C31925 * C211) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31867 * C126 - C30883 * C119 + C31875 * C127 - C30879 * C120 +
             C17317 * C128 - C30889 * C121) *
                C20326 +
            (C31867 * C140 - C30883 * C131 + C31875 * C141 - C30879 * C132 +
             C17317 * C142 - C30889 * C133) *
                C20324 +
            (C18518 - C18519 + C18520 - C18521 + C18522 - C18523) * C20327 +
            (C18524 - C18525 + C18526 - C18527 + C18528 - C18529) * C32053) *
               C32207 +
           ((C17435 - C17436 + C17437 - C17438 + C17439 - C17440) * C20326 +
            (C17441 - C17442 + C17443 - C17444 + C17445 - C17446) * C20324 +
            C19176 * C20327 + C19177 * C32053) *
               C32013) *
              C31925 * C31911 * C110 +
          (((C30883 * C120 - C31867 * C127 + C30879 * C121 - C31875 * C128 +
             C30889 * C122 - C17317 * C129) *
                C20326 +
            (C30883 * C132 - C31867 * C141 + C30879 * C133 - C31875 * C142 +
             C30889 * C134 - C17317 * C143) *
                C20324 +
            (C18954 - C18955 + C18956 - C18957 + C18958 - C18959) * C20327 +
            (C18960 - C18961 + C18962 - C18963 + C18964 - C18965) * C32053) *
               C32207 +
           ((C17740 - C17741 + C17742 - C17743 + C17744 - C17745) * C20326 +
            (C17746 - C17747 + C17748 - C17749 + C17750 - C17751) * C20324 +
            (C18748 - C18749 + C18750 - C18751 + C18752 - C18753) * C20327 +
            (C18754 - C18755 + C18756 - C18757 + C18758 - C18759) * C32053) *
               C32013) *
              C31925 * C31911 * C111 +
          (((C31867 * C128 - C30883 * C121 + C31875 * C129 - C30879 * C122 +
             C17317 * C130 - C30889 * C123) *
                C20326 +
            (C31867 * C142 - C30883 * C133 + C31875 * C143 - C30879 * C134 +
             C17317 * C144 - C30889 * C135) *
                C20324 +
            (C31867 * C330 - C30883 * C320 + C31875 * C331 - C30879 * C321 +
             C17317 * C332 - C30889 * C322) *
                C20327 +
            (C31867 * C350 - C30883 * C335 + C31875 * C351 - C30879 * C336 +
             C17317 * C352 - C30889 * C337) *
                C32053) *
               C32207 +
           ((C31867 * C225 - C30883 * C215 + C31875 * C226 - C30879 * C216 +
             C17317 * C227 - C30889 * C217) *
                C20326 +
            (C31867 * C245 - C30883 * C230 + C31875 * C246 - C30879 * C231 +
             C17317 * C247 - C30889 * C232) *
                C20324 +
            (C31867 * C625 - C30883 * C620 + C31875 * C626 - C30879 * C621 +
             C17317 * C627 - C30889 * C622) *
                C20327 +
            (C31867 * C635 - C30883 * C630 + C31875 * C636 - C30879 * C631 +
             C17317 * C637 - C30889 * C632) *
                C32053) *
               C32013) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C31867 * C126 - C30883 * C119 + C31875 * C127 - C30879 * C120 +
             C17317 * C128 - C30889 * C121) *
                C20326 +
            (C31867 * C140 - C30883 * C131 + C31875 * C141 - C30879 * C132 +
             C17317 * C142 - C30889 * C133) *
                C20324 +
            (C18518 - C18519 + C18520 - C18521 + C18522 - C18523) * C20327 +
            (C18524 - C18525 + C18526 - C18527 + C18528 - C18529) * C32053) *
               C32207 +
           ((C17435 - C17436 + C17437 - C17438 + C17439 - C17440) * C20326 +
            (C17441 - C17442 + C17443 - C17444 + C17445 - C17446) * C20324 +
            C19176 * C20327 + C19177 * C32053) *
               C32013) *
              C315 +
          (((C18519 - C18518 + C18521 - C18520 + C18523 - C18522) * C20326 +
            (C18525 - C18524 + C18527 - C18526 + C18529 - C18528) * C20324 +
            (C18530 - C18531 + C18532 - C18533 + C18534 - C18535) * C20327 +
            (C18536 - C18537 + C18538 - C18539 + C18540 - C18541) * C32053) *
               C32207 +
           (C19178 * C20326 + C19179 * C20324 +
            (C18542 - C18543 + C18544 - C18545 + C18546 - C18547) * C20327 +
            (C18548 - C18549 + C18550 - C18551 + C18552 - C18553) * C32053) *
               C32013) *
              C316 +
          (((C18531 - C18530 + C18533 - C18532 + C18535 - C18534) * C20326 +
            (C18537 - C18536 + C18539 - C18538 + C18541 - C18540) * C20324 +
            (C31867 * C1934 - C30883 * C1928 + C31875 * C1935 - C30879 * C1929 +
             C17317 * C1936 - C30889 * C1930) *
                C20327 +
            (C31867 * C1946 - C30883 * C1937 + C31875 * C1947 - C30879 * C1938 +
             C17317 * C1948 - C30889 * C1939) *
                C32053) *
               C32207 +
           ((C18543 - C18542 + C18545 - C18544 + C18547 - C18546) * C20326 +
            (C18549 - C18548 + C18551 - C18550 + C18553 - C18552) * C20324 +
            (C31867 * C2471 - C30883 * C2468 + C31875 * C2472 - C30879 * C2469 +
             C17317 * C2473 - C30889 * C2470) *
                C20327 +
            (C31867 * C2477 - C30883 * C2474 + C31875 * C2478 - C30879 * C2475 +
             C17317 * C2479 - C30889 * C2476) *
                C32053) *
               C32013) *
              C317) *
         C31911 * C31899) /
            (p * q * std::sqrt(p + q));
    d2ee[78] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C31867 * C126 - C30883 * C119 + C31875 * C127 - C30879 * C120 +
              C17317 * C128 - C30889 * C121) *
                 C20326 +
             (C31867 * C140 - C30883 * C131 + C31875 * C141 - C30879 * C132 +
              C17317 * C142 - C30889 * C133) *
                 C20324 +
             (C18518 - C18519 + C18520 - C18521 + C18522 - C18523) * C20327 +
             (C18524 - C18525 + C18526 - C18527 + C18528 - C18529) * C32053) *
                C32207 +
            ((C17435 - C17436 + C17437 - C17438 + C17439 - C17440) * C20326 +
             (C17441 - C17442 + C17443 - C17444 + C17445 - C17446) * C20324 +
             C19176 * C20327 + C19177 * C32053) *
                C32013) *
               C530 +
           (((C18519 - C18518 + C18521 - C18520 + C18523 - C18522) * C20326 +
             (C18525 - C18524 + C18527 - C18526 + C18529 - C18528) * C20324 +
             (C18530 - C18531 + C18532 - C18533 + C18534 - C18535) * C20327 +
             (C18536 - C18537 + C18538 - C18539 + C18540 - C18541) * C32053) *
                C32207 +
            (C19178 * C20326 + C19179 * C20324 +
             (C18542 - C18543 + C18544 - C18545 + C18546 - C18547) * C20327 +
             (C18548 - C18549 + C18550 - C18551 + C18552 - C18553) * C32053) *
                C32013) *
               C531) *
              C31911 * C442 +
          ((((C30883 * C120 - C31867 * C127 + C30879 * C121 - C31875 * C128 +
              C30889 * C122 - C17317 * C129) *
                 C20326 +
             (C30883 * C132 - C31867 * C141 + C30879 * C133 - C31875 * C142 +
              C30889 * C134 - C17317 * C143) *
                 C20324 +
             (C18954 - C18955 + C18956 - C18957 + C18958 - C18959) * C20327 +
             (C18960 - C18961 + C18962 - C18963 + C18964 - C18965) * C32053) *
                C32207 +
            ((C17740 - C17741 + C17742 - C17743 + C17744 - C17745) * C20326 +
             (C17746 - C17747 + C17748 - C17749 + C17750 - C17751) * C20324 +
             (C18748 - C18749 + C18750 - C18751 + C18752 - C18753) * C20327 +
             (C18754 - C18755 + C18756 - C18757 + C18758 - C18759) * C32053) *
                C32013) *
               C530 +
           (((C18955 - C18954 + C18957 - C18956 + C18959 - C18958) * C20326 +
             (C18961 - C18960 + C18963 - C18962 + C18965 - C18964) * C20324 +
             (C31867 * C339 - C30883 * C324 + C31875 * C340 - C30879 * C325 +
              C17317 * C341 - C30889 * C326) *
                 C20327 +
             (C31867 * C354 - C30883 * C344 + C31875 * C355 - C30879 * C345 +
              C17317 * C356 - C30889 * C346) *
                 C32053) *
                C32207 +
            ((C18749 - C18748 + C18751 - C18750 + C18753 - C18752) * C20326 +
             (C18755 - C18754 + C18757 - C18756 + C18759 - C18758) * C20324 +
             (C31867 * C1066 - C30883 * C1054 + C31875 * C1067 -
              C30879 * C1055 + C17317 * C2145 - C30889 * C2144) *
                 C20327 +
             (C31867 * C1081 - C30883 * C1069 + C31875 * C1082 -
              C30879 * C1070 + C17317 * C2147 - C30889 * C2146) *
                 C32053) *
                C32013) *
               C531) *
              C31911 * C443)) /
        (p * q * std::sqrt(p + q));
    d2ee[79] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31867 * C126 - C30883 * C119 + C31875 * C127 - C30879 * C120 +
             C17317 * C128 - C30889 * C121) *
                C20326 +
            (C31867 * C140 - C30883 * C131 + C31875 * C141 - C30879 * C132 +
             C17317 * C142 - C30889 * C133) *
                C20324 +
            (C18518 - C18519 + C18520 - C18521 + C18522 - C18523) * C20327 +
            (C18524 - C18525 + C18526 - C18527 + C18528 - C18529) * C32053) *
               C32207 +
           ((C17435 - C17436 + C17437 - C17438 + C17439 - C17440) * C20326 +
            (C17441 - C17442 + C17443 - C17444 + C17445 - C17446) * C20324 +
            C19176 * C20327 + C19177 * C32053) *
               C32013) *
              C31925 * C31911 * C110 +
          (((C30883 * C120 - C31867 * C127 + C30879 * C121 - C31875 * C128 +
             C30889 * C122 - C17317 * C129) *
                C20326 +
            (C30883 * C132 - C31867 * C141 + C30879 * C133 - C31875 * C142 +
             C30889 * C134 - C17317 * C143) *
                C20324 +
            (C18954 - C18955 + C18956 - C18957 + C18958 - C18959) * C20327 +
            (C18960 - C18961 + C18962 - C18963 + C18964 - C18965) * C32053) *
               C32207 +
           ((C17740 - C17741 + C17742 - C17743 + C17744 - C17745) * C20326 +
            (C17746 - C17747 + C17748 - C17749 + C17750 - C17751) * C20324 +
            (C18748 - C18749 + C18750 - C18751 + C18752 - C18753) * C20327 +
            (C18754 - C18755 + C18756 - C18757 + C18758 - C18759) * C32053) *
               C32013) *
              C31925 * C31911 * C111 +
          (((C31867 * C128 - C30883 * C121 + C31875 * C129 - C30879 * C122 +
             C17317 * C130 - C30889 * C123) *
                C20326 +
            (C31867 * C142 - C30883 * C133 + C31875 * C143 - C30879 * C134 +
             C17317 * C144 - C30889 * C135) *
                C20324 +
            (C31867 * C330 - C30883 * C320 + C31875 * C331 - C30879 * C321 +
             C17317 * C332 - C30889 * C322) *
                C20327 +
            (C31867 * C350 - C30883 * C335 + C31875 * C351 - C30879 * C336 +
             C17317 * C352 - C30889 * C337) *
                C32053) *
               C32207 +
           ((C31867 * C225 - C30883 * C215 + C31875 * C226 - C30879 * C216 +
             C17317 * C227 - C30889 * C217) *
                C20326 +
            (C31867 * C245 - C30883 * C230 + C31875 * C246 - C30879 * C231 +
             C17317 * C247 - C30889 * C232) *
                C20324 +
            (C31867 * C625 - C30883 * C620 + C31875 * C626 - C30879 * C621 +
             C17317 * C627 - C30889 * C622) *
                C20327 +
            (C31867 * C635 - C30883 * C630 + C31875 * C636 - C30879 * C631 +
             C17317 * C637 - C30889 * C632) *
                C32053) *
               C32013) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31867 * C126 - C30883 * C119 + C31875 * C127 - C30879 * C120 +
             C17317 * C128 - C30889 * C121) *
                C20326 +
            (C31867 * C140 - C30883 * C131 + C31875 * C141 - C30879 * C132 +
             C17317 * C142 - C30889 * C133) *
                C20324 +
            (C18518 - C18519 + C18520 - C18521 + C18522 - C18523) * C20327 +
            (C18524 - C18525 + C18526 - C18527 + C18528 - C18529) * C32053) *
               C32207 +
           ((C17435 - C17436 + C17437 - C17438 + C17439 - C17440) * C20326 +
            (C17441 - C17442 + C17443 - C17444 + C17445 - C17446) * C20324 +
            C19176 * C20327 + C19177 * C32053) *
               C32013) *
              C31925 * C209 +
          (((C17436 - C17435 + C17438 - C17437 + C17440 - C17439) * C20326 +
            (C17442 - C17441 + C17444 - C17443 + C17446 - C17445) * C20324 +
            C19178 * C20327 + C19179 * C32053) *
               C32207 +
           ((C17448 - C17447 + C17450 - C17449 + C17452 - C17451) * C20326 +
            (C17454 - C17453 + C17456 - C17455 + C17458 - C17457) * C20324 +
            (C18068 - C18069 + C18070 - C18071 + C18072 - C18073) * C20327 +
            (C18074 - C18075 + C18076 - C18077 + C18078 - C18079) * C32053) *
               C32013) *
              C31925 * C210 +
          ((C17479 * C20326 + C17480 * C20324 +
            (C18069 - C18068 + C18071 - C18070 + C18073 - C18072) * C20327 +
            (C18075 - C18074 + C18077 - C18076 + C18079 - C18078) * C32053) *
               C32207 +
           ((C17460 - C17459 + C17462 - C17461 + C17464 - C17463) * C20326 +
            (C17466 - C17465 + C17468 - C17467 + C17470 - C17469) * C20324 +
            (C31867 * C1559 - C30883 * C1556 + C31875 * C1560 - C30879 * C1557 +
             C17317 * C1561 - C30889 * C1558) *
                C20327 +
            (C31867 * C1565 - C30883 * C1562 + C31875 * C1566 - C30879 * C1563 +
             C17317 * C1567 - C30889 * C1564) *
                C32053) *
               C32013) *
              C31925 * C211) *
         C31899) /
            (p * q * std::sqrt(p + q));
    d2ee[80] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C15383 * C126 - C15389 * C119 + C31872 * C127 - C15390 * C120) *
                 C31010 +
             (C15383 * C140 - C15389 * C131 + C31872 * C141 - C15390 * C132) *
                 C32049 +
             (C16530 - C16531 + C16532 - C16533) * C31002 +
             (C16534 - C16535 + C16536 - C16537) * C32056 + C16572 * C31016 +
             C16573 * C23835) *
                C32207 +
            ((C15490 - C15491 + C15492 - C15493) * C31010 +
             (C15494 - C15495 + C15496 - C15497) * C32049 + C17200 * C31002 +
             C17201 * C32056 + C16570 * C31016 + C16571 * C23835) *
                C32013) *
               C31925 * C440 +
           (((C15491 - C15490 + C15493 - C15492) * C31010 +
             (C15495 - C15494 + C15497 - C15496) * C32049 + C17202 * C31002 +
             C17203 * C32056 + C17204 * C31016 + C17205 * C23835) *
                C32207 +
            ((C15499 - C15498 + C15501 - C15500) * C31010 +
             (C15503 - C15502 + C15505 - C15504) * C32049 + C20225 * C31002 +
             C20226 * C32056 + (C16376 - C16377 + C16378 - C16379) * C31016 +
             (C16380 - C16381 + C16382 - C16383) * C23835) *
                C32013) *
               C31925 * C441) *
              C442 +
          ((((C15389 * C120 - C15383 * C127 + C15390 * C121 - C31872 * C128) *
                 C31010 +
             (C15389 * C132 - C15383 * C141 + C15390 * C133 - C31872 * C142) *
                 C32049 +
             (C16978 - C16979 + C16980 - C16981) * C31002 +
             (C16982 - C16983 + C16984 - C16985) * C32056 +
             (C16986 - C16987 + C16988 - C16989) * C31016 +
             (C16990 - C16991 + C16992 - C16993) * C23835) *
                C32207 +
            ((C15768 - C15769 + C15770 - C15771) * C31010 +
             (C15772 - C15773 + C15774 - C15775) * C32049 +
             (C16768 - C16769 + C16770 - C16771) * C31002 +
             (C16772 - C16773 + C16774 - C16775) * C32056 +
             (C16776 - C16777 + C16778 - C16779) * C31016 +
             (C16780 - C16781 + C16782 - C16783) * C23835) *
                C32013) *
               C31925 * C440 +
           (((C15769 - C15768 + C15771 - C15770) * C31010 +
             (C15773 - C15772 + C15775 - C15774) * C32049 +
             (C16769 - C16768 + C16771 - C16770) * C31002 +
             (C16773 - C16772 + C16775 - C16774) * C32056 +
             (C16777 - C16776 + C16779 - C16778) * C31016 +
             (C16781 - C16780 + C16783 - C16782) * C23835) *
                C32207 +
            ((C15777 - C15776 + C15779 - C15778) * C31010 +
             (C15781 - C15780 + C15783 - C15782) * C32049 +
             (C19826 - C19825 + C19828 - C19827) * C31002 +
             (C19830 - C19829 + C19832 - C19831) * C32056 +
             (C15383 * C1072 - C15389 * C1057 + C31872 * C1073 -
              C15390 * C1058) *
                 C31016 +
             (C15383 * C1084 - C15389 * C1075 + C31872 * C1085 -
              C15390 * C1076) *
                 C23835) *
                C32013) *
               C31925 * C441) *
              C443)) /
        (p * q * std::sqrt(p + q));
    d2ee[81] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C15383 * C126 - C15389 * C119 + C31872 * C127 - C15390 * C120) *
                 C31010 +
             (C15383 * C140 - C15389 * C131 + C31872 * C141 - C15390 * C132) *
                 C32049 +
             (C16530 - C16531 + C16532 - C16533) * C31002 +
             (C16534 - C16535 + C16536 - C16537) * C32056 + C16572 * C31016 +
             C16573 * C23835) *
                C32207 +
            ((C15490 - C15491 + C15492 - C15493) * C31010 +
             (C15494 - C15495 + C15496 - C15497) * C32049 + C17200 * C31002 +
             C17201 * C32056 + C16570 * C31016 + C16571 * C23835) *
                C32013) *
               C530 +
           (((C16531 - C16530 + C16533 - C16532) * C31010 +
             (C16535 - C16534 + C16537 - C16536) * C32049 +
             (C16539 - C16538 + C16541 - C16540) * C31002 +
             (C16543 - C16542 + C16545 - C16544) * C32056 +
             (C16550 - C16551 + C16552 - C16553) * C31016 +
             (C16554 - C16555 + C16556 - C16557) * C23835) *
                C32207 +
            (C17202 * C31010 + C17203 * C32049 + C17204 * C31002 +
             C17205 * C32056 + (C16558 - C16559 + C16560 - C16561) * C31016 +
             (C16562 - C16563 + C16564 - C16565) * C23835) *
                C32013) *
               C531) *
              C440 +
          ((((C15491 - C15490 + C15493 - C15492) * C31010 +
             (C15495 - C15494 + C15497 - C15496) * C32049 + C17202 * C31002 +
             C17203 * C32056 + C17204 * C31016 + C17205 * C23835) *
                C32207 +
            ((C15499 - C15498 + C15501 - C15500) * C31010 +
             (C15503 - C15502 + C15505 - C15504) * C32049 + C20225 * C31002 +
             C20226 * C32056 + (C16376 - C16377 + C16378 - C16379) * C31016 +
             (C16380 - C16381 + C16382 - C16383) * C23835) *
                C32013) *
               C530 +
           ((C17200 * C31010 + C17201 * C32049 + C16570 * C31002 +
             C16571 * C32056 + (C16559 - C16558 + C16561 - C16560) * C31016 +
             (C16563 - C16562 + C16565 - C16564) * C23835) *
                C32207 +
            (C19479 * C31010 + C19480 * C32049 +
             (C16377 - C16376 + C16379 - C16378) * C31002 +
             (C16381 - C16380 + C16383 - C16382) * C32056 +
             (C15383 * C6810 - C15389 * C6807 + C31872 * C7156 -
              C15390 * C7155) *
                 C31016 +
             (C15383 * C6816 - C15389 * C6811 + C31872 * C7158 -
              C15390 * C7157) *
                 C23835) *
                C32013) *
               C531) *
              C441) *
         C31899) /
        (p * q * std::sqrt(p + q));
    d2ee[82] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C15383 * C126 - C15389 * C119 + C31872 * C127 - C15390 * C120) *
                C31010 +
            (C15383 * C140 - C15389 * C131 + C31872 * C141 - C15390 * C132) *
                C32049 +
            (C16530 - C16531 + C16532 - C16533) * C31002 +
            (C16534 - C16535 + C16536 - C16537) * C32056 + C16572 * C31016 +
            C16573 * C23835) *
               C32207 +
           ((C15490 - C15491 + C15492 - C15493) * C31010 +
            (C15494 - C15495 + C15496 - C15497) * C32049 + C17200 * C31002 +
            C17201 * C32056 + C16570 * C31016 + C16571 * C23835) *
               C32013) *
              C31925 * C209 +
          (((C15491 - C15490 + C15493 - C15492) * C31010 +
            (C15495 - C15494 + C15497 - C15496) * C32049 + C17202 * C31002 +
            C17203 * C32056 + C17204 * C31016 + C17205 * C23835) *
               C32207 +
           ((C15499 - C15498 + C15501 - C15500) * C31010 +
            (C15503 - C15502 + C15505 - C15504) * C32049 + C20225 * C31002 +
            C20226 * C32056 + (C16376 - C16377 + C16378 - C16379) * C31016 +
            (C16380 - C16381 + C16382 - C16383) * C23835) *
               C32013) *
              C31925 * C210 +
          ((C15530 * C31010 + C15531 * C32049 + C19479 * C31002 +
            C19480 * C32056 + (C16377 - C16376 + C16379 - C16378) * C31016 +
            (C16381 - C16380 + C16383 - C16382) * C23835) *
               C32207 +
           (C15532 * C31010 + C15533 * C32049 +
            (C16069 - C16068 + C16071 - C16070) * C31002 +
            (C16073 - C16072 + C16075 - C16074) * C32056 +
            (C15383 * C6153 - C15389 * C6149 + C31872 * C6990 -
             C15390 * C6989) *
                C31016 +
            (C15383 * C6158 - C15389 * C6154 + C31872 * C6992 -
             C15390 * C6991) *
                C23835) *
               C32013) *
              C31925 * C211) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C15383 * C126 - C15389 * C119 + C31872 * C127 - C15390 * C120) *
                C31010 +
            (C15383 * C140 - C15389 * C131 + C31872 * C141 - C15390 * C132) *
                C32049 +
            (C16530 - C16531 + C16532 - C16533) * C31002 +
            (C16534 - C16535 + C16536 - C16537) * C32056 + C16572 * C31016 +
            C16573 * C23835) *
               C32207 +
           ((C15490 - C15491 + C15492 - C15493) * C31010 +
            (C15494 - C15495 + C15496 - C15497) * C32049 + C17200 * C31002 +
            C17201 * C32056 + C16570 * C31016 + C16571 * C23835) *
               C32013) *
              C31925 * C31911 * C110 +
          (((C15389 * C120 - C15383 * C127 + C15390 * C121 - C31872 * C128) *
                C31010 +
            (C15389 * C132 - C15383 * C141 + C15390 * C133 - C31872 * C142) *
                C32049 +
            (C16978 - C16979 + C16980 - C16981) * C31002 +
            (C16982 - C16983 + C16984 - C16985) * C32056 +
            (C16986 - C16987 + C16988 - C16989) * C31016 +
            (C16990 - C16991 + C16992 - C16993) * C23835) *
               C32207 +
           ((C15768 - C15769 + C15770 - C15771) * C31010 +
            (C15772 - C15773 + C15774 - C15775) * C32049 +
            (C16768 - C16769 + C16770 - C16771) * C31002 +
            (C16772 - C16773 + C16774 - C16775) * C32056 +
            (C16776 - C16777 + C16778 - C16779) * C31016 +
            (C16780 - C16781 + C16782 - C16783) * C23835) *
               C32013) *
              C31925 * C31911 * C111 +
          (((C15383 * C128 - C15389 * C121 + C31872 * C129 - C15390 * C122) *
                C31010 +
            (C15383 * C142 - C15389 * C133 + C31872 * C143 - C15390 * C134) *
                C32049 +
            (C15383 * C330 - C15389 * C320 + C31872 * C331 - C15390 * C321) *
                C31002 +
            (C15383 * C350 - C15389 * C335 + C31872 * C351 - C15390 * C336) *
                C32056 +
            (C15383 * C340 - C15389 * C325 + C31872 * C341 - C15390 * C326) *
                C31016 +
            (C15383 * C355 - C15389 * C345 + C31872 * C356 - C15390 * C346) *
                C23835) *
               C32207 +
           ((C15383 * C225 - C15389 * C215 + C31872 * C226 - C15390 * C216) *
                C31010 +
            (C15383 * C245 - C15389 * C230 + C31872 * C246 - C15390 * C231) *
                C32049 +
            (C15383 * C625 - C15389 * C620 + C31872 * C626 - C15390 * C621) *
                C31002 +
            (C15383 * C635 - C15389 * C630 + C31872 * C636 - C15390 * C631) *
                C32056 +
            (C15383 * C1067 - C15389 * C1055 + C31872 * C2145 -
             C15390 * C2144) *
                C31016 +
            (C15383 * C1082 - C15389 * C1070 + C31872 * C2147 -
             C15390 * C2146) *
                C23835) *
               C32013) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C15383 * C126 - C15389 * C119 + C31872 * C127 - C15390 * C120) *
                C31010 +
            (C15383 * C140 - C15389 * C131 + C31872 * C141 - C15390 * C132) *
                C32049 +
            (C16530 - C16531 + C16532 - C16533) * C31002 +
            (C16534 - C16535 + C16536 - C16537) * C32056 + C16572 * C31016 +
            C16573 * C23835) *
               C32207 +
           ((C15490 - C15491 + C15492 - C15493) * C31010 +
            (C15494 - C15495 + C15496 - C15497) * C32049 + C17200 * C31002 +
            C17201 * C32056 + C16570 * C31016 + C16571 * C23835) *
               C32013) *
              C315 +
          (((C16531 - C16530 + C16533 - C16532) * C31010 +
            (C16535 - C16534 + C16537 - C16536) * C32049 +
            (C16539 - C16538 + C16541 - C16540) * C31002 +
            (C16543 - C16542 + C16545 - C16544) * C32056 +
            (C16550 - C16551 + C16552 - C16553) * C31016 +
            (C16554 - C16555 + C16556 - C16557) * C23835) *
               C32207 +
           (C17202 * C31010 + C17203 * C32049 + C17204 * C31002 +
            C17205 * C32056 + (C16558 - C16559 + C16560 - C16561) * C31016 +
            (C16562 - C16563 + C16564 - C16565) * C23835) *
               C32013) *
              C316 +
          ((C16572 * C31010 + C16573 * C32049 + C22304 * C31002 +
            C22305 * C32056 + (C22297 - C22296 + C22299 - C22298) * C31016 +
            (C22301 - C22300 + C22303 - C22302) * C23835) *
               C32207 +
           (C16570 * C31010 + C16571 * C32049 +
            (C16559 - C16558 + C16561 - C16560) * C31002 +
            (C16563 - C16562 + C16565 - C16564) * C32056 +
            (C15383 * C6812 - C15389 * C6808 + C31872 * C11864 -
             C15390 * C11863) *
                C31016 +
            (C15383 * C6817 - C15389 * C6813 + C31872 * C11866 -
             C15390 * C11865) *
                C23835) *
               C32013) *
              C317) *
         C31911 * C31899) /
            (p * q * std::sqrt(p + q));
    d2ee[83] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C15383 * C126 - C15389 * C119 + C31872 * C127 - C15390 * C120) *
                 C31010 +
             (C15383 * C140 - C15389 * C131 + C31872 * C141 - C15390 * C132) *
                 C32049 +
             (C16530 - C16531 + C16532 - C16533) * C31002 +
             (C16534 - C16535 + C16536 - C16537) * C32056 + C16572 * C31016 +
             C16573 * C23835) *
                C32207 +
            ((C15490 - C15491 + C15492 - C15493) * C31010 +
             (C15494 - C15495 + C15496 - C15497) * C32049 + C17200 * C31002 +
             C17201 * C32056 + C16570 * C31016 + C16571 * C23835) *
                C32013) *
               C530 +
           (((C16531 - C16530 + C16533 - C16532) * C31010 +
             (C16535 - C16534 + C16537 - C16536) * C32049 +
             (C16539 - C16538 + C16541 - C16540) * C31002 +
             (C16543 - C16542 + C16545 - C16544) * C32056 +
             (C16550 - C16551 + C16552 - C16553) * C31016 +
             (C16554 - C16555 + C16556 - C16557) * C23835) *
                C32207 +
            (C17202 * C31010 + C17203 * C32049 + C17204 * C31002 +
             C17205 * C32056 + (C16558 - C16559 + C16560 - C16561) * C31016 +
             (C16562 - C16563 + C16564 - C16565) * C23835) *
                C32013) *
               C531) *
              C31911 * C442 +
          ((((C15389 * C120 - C15383 * C127 + C15390 * C121 - C31872 * C128) *
                 C31010 +
             (C15389 * C132 - C15383 * C141 + C15390 * C133 - C31872 * C142) *
                 C32049 +
             (C16978 - C16979 + C16980 - C16981) * C31002 +
             (C16982 - C16983 + C16984 - C16985) * C32056 +
             (C16986 - C16987 + C16988 - C16989) * C31016 +
             (C16990 - C16991 + C16992 - C16993) * C23835) *
                C32207 +
            ((C15768 - C15769 + C15770 - C15771) * C31010 +
             (C15772 - C15773 + C15774 - C15775) * C32049 +
             (C16768 - C16769 + C16770 - C16771) * C31002 +
             (C16772 - C16773 + C16774 - C16775) * C32056 +
             (C16776 - C16777 + C16778 - C16779) * C31016 +
             (C16780 - C16781 + C16782 - C16783) * C23835) *
                C32013) *
               C530 +
           (((C16979 - C16978 + C16981 - C16980) * C31010 +
             (C16983 - C16982 + C16985 - C16984) * C32049 +
             (C16987 - C16986 + C16989 - C16988) * C31002 +
             (C16991 - C16990 + C16993 - C16992) * C32056 +
             (C22567 - C22566 + C22569 - C22568) * C31016 +
             (C22571 - C22570 + C22573 - C22572) * C23835) *
                C32207 +
            ((C16769 - C16768 + C16771 - C16770) * C31010 +
             (C16773 - C16772 + C16775 - C16774) * C32049 +
             (C16777 - C16776 + C16779 - C16778) * C31002 +
             (C16781 - C16780 + C16783 - C16782) * C32056 +
             (C15383 * C2472 - C15389 * C2469 + C31872 * C2473 -
              C15390 * C2470) *
                 C31016 +
             (C15383 * C2478 - C15389 * C2475 + C31872 * C2479 -
              C15390 * C2476) *
                 C23835) *
                C32013) *
               C531) *
              C31911 * C443)) /
        (p * q * std::sqrt(p + q));
    d2ee[84] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15383 * C126 - C15389 * C119 + C31872 * C127 - C15390 * C120) *
                C31010 +
            (C15383 * C140 - C15389 * C131 + C31872 * C141 - C15390 * C132) *
                C32049 +
            (C16530 - C16531 + C16532 - C16533) * C31002 +
            (C16534 - C16535 + C16536 - C16537) * C32056 + C16572 * C31016 +
            C16573 * C23835) *
               C32207 +
           ((C15490 - C15491 + C15492 - C15493) * C31010 +
            (C15494 - C15495 + C15496 - C15497) * C32049 + C17200 * C31002 +
            C17201 * C32056 + C16570 * C31016 + C16571 * C23835) *
               C32013) *
              C31925 * C31911 * C110 +
          (((C15389 * C120 - C15383 * C127 + C15390 * C121 - C31872 * C128) *
                C31010 +
            (C15389 * C132 - C15383 * C141 + C15390 * C133 - C31872 * C142) *
                C32049 +
            (C16978 - C16979 + C16980 - C16981) * C31002 +
            (C16982 - C16983 + C16984 - C16985) * C32056 +
            (C16986 - C16987 + C16988 - C16989) * C31016 +
            (C16990 - C16991 + C16992 - C16993) * C23835) *
               C32207 +
           ((C15768 - C15769 + C15770 - C15771) * C31010 +
            (C15772 - C15773 + C15774 - C15775) * C32049 +
            (C16768 - C16769 + C16770 - C16771) * C31002 +
            (C16772 - C16773 + C16774 - C16775) * C32056 +
            (C16776 - C16777 + C16778 - C16779) * C31016 +
            (C16780 - C16781 + C16782 - C16783) * C23835) *
               C32013) *
              C31925 * C31911 * C111 +
          (((C15383 * C128 - C15389 * C121 + C31872 * C129 - C15390 * C122) *
                C31010 +
            (C15383 * C142 - C15389 * C133 + C31872 * C143 - C15390 * C134) *
                C32049 +
            (C15383 * C330 - C15389 * C320 + C31872 * C331 - C15390 * C321) *
                C31002 +
            (C15383 * C350 - C15389 * C335 + C31872 * C351 - C15390 * C336) *
                C32056 +
            (C15383 * C340 - C15389 * C325 + C31872 * C341 - C15390 * C326) *
                C31016 +
            (C15383 * C355 - C15389 * C345 + C31872 * C356 - C15390 * C346) *
                C23835) *
               C32207 +
           ((C15383 * C225 - C15389 * C215 + C31872 * C226 - C15390 * C216) *
                C31010 +
            (C15383 * C245 - C15389 * C230 + C31872 * C246 - C15390 * C231) *
                C32049 +
            (C15383 * C625 - C15389 * C620 + C31872 * C626 - C15390 * C621) *
                C31002 +
            (C15383 * C635 - C15389 * C630 + C31872 * C636 - C15390 * C631) *
                C32056 +
            (C15383 * C1067 - C15389 * C1055 + C31872 * C2145 -
             C15390 * C2144) *
                C31016 +
            (C15383 * C1082 - C15389 * C1070 + C31872 * C2147 -
             C15390 * C2146) *
                C23835) *
               C32013) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15383 * C126 - C15389 * C119 + C31872 * C127 - C15390 * C120) *
                C31010 +
            (C15383 * C140 - C15389 * C131 + C31872 * C141 - C15390 * C132) *
                C32049 +
            (C16530 - C16531 + C16532 - C16533) * C31002 +
            (C16534 - C16535 + C16536 - C16537) * C32056 + C16572 * C31016 +
            C16573 * C23835) *
               C32207 +
           ((C15490 - C15491 + C15492 - C15493) * C31010 +
            (C15494 - C15495 + C15496 - C15497) * C32049 + C17200 * C31002 +
            C17201 * C32056 + C16570 * C31016 + C16571 * C23835) *
               C32013) *
              C31925 * C209 +
          (((C15491 - C15490 + C15493 - C15492) * C31010 +
            (C15495 - C15494 + C15497 - C15496) * C32049 + C17202 * C31002 +
            C17203 * C32056 + C17204 * C31016 + C17205 * C23835) *
               C32207 +
           ((C15499 - C15498 + C15501 - C15500) * C31010 +
            (C15503 - C15502 + C15505 - C15504) * C32049 + C20225 * C31002 +
            C20226 * C32056 + (C16376 - C16377 + C16378 - C16379) * C31016 +
            (C16380 - C16381 + C16382 - C16383) * C23835) *
               C32013) *
              C31925 * C210 +
          ((C15530 * C31010 + C15531 * C32049 + C19479 * C31002 +
            C19480 * C32056 + (C16377 - C16376 + C16379 - C16378) * C31016 +
            (C16381 - C16380 + C16383 - C16382) * C23835) *
               C32207 +
           (C15532 * C31010 + C15533 * C32049 +
            (C16069 - C16068 + C16071 - C16070) * C31002 +
            (C16073 - C16072 + C16075 - C16074) * C32056 +
            (C15383 * C6153 - C15389 * C6149 + C31872 * C6990 -
             C15390 * C6989) *
                C31016 +
            (C15383 * C6158 - C15389 * C6154 + C31872 * C6992 -
             C15390 * C6991) *
                C23835) *
               C32013) *
              C31925 * C211) *
         C31899) /
            (p * q * std::sqrt(p + q));
    d2ee[85] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C15383 * C126 - C15389 * C119 + C31872 * C127 - C15390 * C120) *
                 C20326 +
             (C15383 * C140 - C15389 * C131 + C31872 * C141 - C15390 * C132) *
                 C20324 +
             (C16530 - C16531 + C16532 - C16533) * C20327 +
             (C16534 - C16535 + C16536 - C16537) * C32053) *
                C32273 +
            ((C15490 - C15491 + C15492 - C15493) * C20326 +
             (C15494 - C15495 + C15496 - C15497) * C20324 + C17200 * C20327 +
             C17201 * C32053) *
                C32261 +
            C21261 * C32238) *
               C31925 * C440 +
           (((C15491 - C15490 + C15493 - C15492) * C20326 +
             (C15495 - C15494 + C15497 - C15496) * C20324 + C17202 * C20327 +
             C17203 * C32053) *
                C32273 +
            ((C15499 - C15498 + C15501 - C15500) * C20326 +
             (C15503 - C15502 + C15505 - C15504) * C20324 + C20225 * C20327 +
             C20226 * C32053) *
                C32261 +
            ((C15507 - C15506 + C15509 - C15508) * C20326 +
             (C15511 - C15510 + C15513 - C15512) * C20324 +
             (C16068 - C16069 + C16070 - C16071) * C20327 +
             (C16072 - C16073 + C16074 - C16075) * C32053) *
                C32238) *
               C31925 * C441) *
              C442 +
          ((((C15389 * C120 - C15383 * C127 + C15390 * C121 - C31872 * C128) *
                 C20326 +
             (C15389 * C132 - C15383 * C141 + C15390 * C133 - C31872 * C142) *
                 C20324 +
             (C16978 - C16979 + C16980 - C16981) * C20327 +
             (C16982 - C16983 + C16984 - C16985) * C32053) *
                C32273 +
            ((C15768 - C15769 + C15770 - C15771) * C20326 +
             (C15772 - C15773 + C15774 - C15775) * C20324 +
             (C16768 - C16769 + C16770 - C16771) * C20327 +
             (C16772 - C16773 + C16774 - C16775) * C32053) *
                C32261 +
            ((C15776 - C15777 + C15778 - C15779) * C20326 +
             (C15780 - C15781 + C15782 - C15783) * C20324 +
             (C19825 - C19826 + C19827 - C19828) * C20327 +
             (C19829 - C19830 + C19831 - C19832) * C32053) *
                C32238) *
               C31925 * C440 +
           (((C15769 - C15768 + C15771 - C15770) * C20326 +
             (C15773 - C15772 + C15775 - C15774) * C20324 +
             (C16769 - C16768 + C16771 - C16770) * C20327 +
             (C16773 - C16772 + C16775 - C16774) * C32053) *
                C32273 +
            ((C15777 - C15776 + C15779 - C15778) * C20326 +
             (C15781 - C15780 + C15783 - C15782) * C20324 +
             (C19826 - C19825 + C19828 - C19827) * C20327 +
             (C19830 - C19829 + C19832 - C19831) * C32053) *
                C32261 +
            ((C15785 - C15784 + C15787 - C15786) * C20326 +
             (C15789 - C15788 + C15791 - C15790) * C20324 +
             (C15383 * C1560 - C15389 * C1557 + C31872 * C1561 -
              C15390 * C1558) *
                 C20327 +
             (C15383 * C1566 - C15389 * C1563 + C31872 * C1567 -
              C15390 * C1564) *
                 C32053) *
                C32238) *
               C31925 * C441) *
              C443)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C32279 * C126 - C14631 * C119 + C32272 * C127 - C14632 * C120 +
             C32259 * C128 - C14633 * C121 + C32242 * C129 - C14634 * C122) *
                C20326 +
            (C32279 * C140 - C14631 * C131 + C32272 * C141 - C14632 * C132 +
             C32259 * C142 - C14633 * C133 + C32242 * C143 - C14634 * C134) *
                C20324 +
            (C20525 - C20526 + C20527 - C20528 + C20529 - C20530 + C20531 -
             C20532) *
                C20327 +
            (C20533 - C20534 + C20535 - C20536 + C20537 - C20538 + C20539 -
             C20540) *
                C32053) *
               C31955 * C31925 * C440 +
           ((C14735 - C14734 + C14737 - C14736 + C14739 - C14738 + C14741 -
             C14740) *
                C20326 +
            (C14743 - C14742 + C14745 - C14744 + C14747 - C14746 + C14749 -
             C14748) *
                C20324 +
            (C15270 - C15271 + C15272 - C15273 + C15274 - C15275 + C15276 -
             C15277) *
                C20327 +
            (C15278 - C15279 + C15280 - C15281 + C15282 - C15283 + C15284 -
             C15285) *
                C32053) *
               C31955 * C31925 * C441) *
              C442 +
          (((C14631 * C120 - C32279 * C127 + C14632 * C121 - C32272 * C128 +
             C14633 * C122 - C32259 * C129 + C14634 * C123 - C32242 * C130) *
                C20326 +
            (C14631 * C132 - C32279 * C141 + C14632 * C133 - C32272 * C142 +
             C14633 * C134 - C32259 * C143 + C14634 * C135 - C32242 * C144) *
                C20324 +
            (C14631 * C319 - C32279 * C329 + C14632 * C320 - C32272 * C330 +
             C14633 * C321 - C32259 * C331 + C14634 * C322 - C32242 * C332) *
                C20327 +
            (C14631 * C334 - C32279 * C349 + C14632 * C335 - C32272 * C350 +
             C14633 * C336 - C32259 * C351 + C14634 * C337 - C32242 * C352) *
                C32053) *
               C31955 * C31925 * C440 +
           ((C14995 - C14994 + C14997 - C14996 + C14999 - C14998 + C15001 -
             C15000) *
                C20326 +
            (C15003 - C15002 + C15005 - C15004 + C15007 - C15006 + C15009 -
             C15008) *
                C20324 +
            (C32279 * C624 - C14631 * C619 + C32272 * C625 - C14632 * C620 +
             C32259 * C626 - C14633 * C621 + C32242 * C627 - C14634 * C622) *
                C20327 +
            (C32279 * C634 - C14631 * C629 + C32272 * C635 - C14632 * C630 +
             C32259 * C636 - C14633 * C631 + C32242 * C637 - C14634 * C632) *
                C32053) *
               C31955 * C31925 * C441) *
              C443)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C15383 * C126 - C15389 * C119 + C31872 * C127 - C15390 * C120) *
                C22091 +
            (C15383 * C140 - C15389 * C131 + C31872 * C141 - C15390 * C132) *
                C32281 +
            (C16530 - C16531 + C16532 - C16533) * C22092 +
            (C16534 - C16535 + C16536 - C16537) * C32278 + C16572 * C22093 +
            C16573 * C32269 + C22304 * C22094 + C22305 * C32254) *
               C31955 * C31925 * C440 +
           ((C15491 - C15490 + C15493 - C15492) * C22091 +
            (C15495 - C15494 + C15497 - C15496) * C32281 + C17202 * C22092 +
            C17203 * C32278 + C17204 * C22093 + C17205 * C32269 +
            (C16558 - C16559 + C16560 - C16561) * C22094 +
            (C16562 - C16563 + C16564 - C16565) * C32254) *
               C31955 * C31925 * C441) *
              C442 +
          (((C15389 * C120 - C15383 * C127 + C15390 * C121 - C31872 * C128) *
                C22091 +
            (C15389 * C132 - C15383 * C141 + C15390 * C133 - C31872 * C142) *
                C32281 +
            (C16978 - C16979 + C16980 - C16981) * C22092 +
            (C16982 - C16983 + C16984 - C16985) * C32278 +
            (C16986 - C16987 + C16988 - C16989) * C22093 +
            (C16990 - C16991 + C16992 - C16993) * C32269 +
            (C15389 * C1929 - C15383 * C1935 + C15390 * C1930 -
             C31872 * C1936) *
                C22094 +
            (C15389 * C1938 - C15383 * C1947 + C15390 * C1939 -
             C31872 * C1948) *
                C32254) *
               C31955 * C31925 * C440 +
           ((C15769 - C15768 + C15771 - C15770) * C22091 +
            (C15773 - C15772 + C15775 - C15774) * C32281 +
            (C16769 - C16768 + C16771 - C16770) * C22092 +
            (C16773 - C16772 + C16775 - C16774) * C32278 +
            (C16777 - C16776 + C16779 - C16778) * C22093 +
            (C16781 - C16780 + C16783 - C16782) * C32269 +
            (C15383 * C2472 - C15389 * C2469 + C31872 * C2473 -
             C15390 * C2470) *
                C22094 +
            (C15383 * C2478 - C15389 * C2475 + C31872 * C2479 -
             C15390 * C2476) *
                C32254) *
               C31955 * C31925 * C441) *
              C443)) /
            (p * q * std::sqrt(p + q));
    d2ee[86] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C15383 * C126 - C15389 * C119 + C31872 * C127 - C15390 * C120) *
                 C20326 +
             (C15383 * C140 - C15389 * C131 + C31872 * C141 - C15390 * C132) *
                 C20324 +
             (C16530 - C16531 + C16532 - C16533) * C20327 +
             (C16534 - C16535 + C16536 - C16537) * C32053) *
                C32273 +
            ((C15490 - C15491 + C15492 - C15493) * C20326 +
             (C15494 - C15495 + C15496 - C15497) * C20324 + C17200 * C20327 +
             C17201 * C32053) *
                C32261 +
            C21261 * C32238) *
               C530 +
           (((C16531 - C16530 + C16533 - C16532) * C20326 +
             (C16535 - C16534 + C16537 - C16536) * C20324 +
             (C16539 - C16538 + C16541 - C16540) * C20327 +
             (C16543 - C16542 + C16545 - C16544) * C32053) *
                C32273 +
            (C17202 * C20326 + C17203 * C20324 + C17204 * C20327 +
             C17205 * C32053) *
                C32261 +
            (C20225 * C20326 + C20226 * C20324 +
             (C16376 - C16377 + C16378 - C16379) * C20327 +
             (C16380 - C16381 + C16382 - C16383) * C32053) *
                C32238) *
               C531) *
              C440 +
          ((((C15491 - C15490 + C15493 - C15492) * C20326 +
             (C15495 - C15494 + C15497 - C15496) * C20324 + C17202 * C20327 +
             C17203 * C32053) *
                C32273 +
            ((C15499 - C15498 + C15501 - C15500) * C20326 +
             (C15503 - C15502 + C15505 - C15504) * C20324 + C20225 * C20327 +
             C20226 * C32053) *
                C32261 +
            ((C15507 - C15506 + C15509 - C15508) * C20326 +
             (C15511 - C15510 + C15513 - C15512) * C20324 +
             (C16068 - C16069 + C16070 - C16071) * C20327 +
             (C16072 - C16073 + C16074 - C16075) * C32053) *
                C32238) *
               C530 +
           ((C17200 * C20326 + C17201 * C20324 + C16570 * C20327 +
             C16571 * C32053) *
                C32273 +
            (C19479 * C20326 + C19480 * C20324 +
             (C16377 - C16376 + C16379 - C16378) * C20327 +
             (C16381 - C16380 + C16383 - C16382) * C32053) *
                C32261 +
            ((C16069 - C16068 + C16071 - C16070) * C20326 +
             (C16073 - C16072 + C16075 - C16074) * C20324 +
             (C15383 * C6153 - C15389 * C6149 + C31872 * C6990 -
              C15390 * C6989) *
                 C20327 +
             (C15383 * C6158 - C15389 * C6154 + C31872 * C6992 -
              C15390 * C6991) *
                 C32053) *
                C32238) *
               C531) *
              C441) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C32279 * C126 - C14631 * C119 + C32272 * C127 - C14632 * C120 +
             C32259 * C128 - C14633 * C121 + C32242 * C129 - C14634 * C122) *
                C20326 +
            (C32279 * C140 - C14631 * C131 + C32272 * C141 - C14632 * C132 +
             C32259 * C142 - C14633 * C133 + C32242 * C143 - C14634 * C134) *
                C20324 +
            (C20525 - C20526 + C20527 - C20528 + C20529 - C20530 + C20531 -
             C20532) *
                C20327 +
            (C20533 - C20534 + C20535 - C20536 + C20537 - C20538 + C20539 -
             C20540) *
                C32053) *
               C31955 * C530 +
           ((C20526 - C20525 + C20528 - C20527 + C20530 - C20529 + C20532 -
             C20531) *
                C20326 +
            (C20534 - C20533 + C20536 - C20535 + C20538 - C20537 + C20540 -
             C20539) *
                C20324 +
            (C20541 - C20542 + C20543 - C20544 + C20545 - C20546 + C20547 -
             C20548) *
                C20327 +
            (C20549 - C20550 + C20551 - C20552 + C20553 - C20554 + C20555 -
             C20556) *
                C32053) *
               C31955 * C531) *
              C440 +
          (((C14735 - C14734 + C14737 - C14736 + C14739 - C14738 + C14741 -
             C14740) *
                C20326 +
            (C14743 - C14742 + C14745 - C14744 + C14747 - C14746 + C14749 -
             C14748) *
                C20324 +
            (C15270 - C15271 + C15272 - C15273 + C15274 - C15275 + C15276 -
             C15277) *
                C20327 +
            (C15278 - C15279 + C15280 - C15281 + C15282 - C15283 + C15284 -
             C15285) *
                C32053) *
               C31955 * C530 +
           ((C15271 - C15270 + C15273 - C15272 + C15275 - C15274 + C15277 -
             C15276) *
                C20326 +
            (C15279 - C15278 + C15281 - C15280 + C15283 - C15282 + C15285 -
             C15284) *
                C20324 +
            (C32279 * C1065 - C14631 * C1053 + C32272 * C1066 - C14632 * C1054 +
             C32259 * C1067 - C14633 * C1055 + C32242 * C2145 -
             C14634 * C2144) *
                C20327 +
            (C32279 * C1080 - C14631 * C1068 + C32272 * C1081 - C14632 * C1069 +
             C32259 * C1082 - C14633 * C1070 + C32242 * C2147 -
             C14634 * C2146) *
                C32053) *
               C31955 * C531) *
              C441) *
         C31899) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C15383 * C126 - C15389 * C119 + C31872 * C127 - C15390 * C120) *
                C22091 +
            (C15383 * C140 - C15389 * C131 + C31872 * C141 - C15390 * C132) *
                C32281 +
            (C16530 - C16531 + C16532 - C16533) * C22092 +
            (C16534 - C16535 + C16536 - C16537) * C32278 + C16572 * C22093 +
            C16573 * C32269 + C22304 * C22094 + C22305 * C32254) *
               C31955 * C530 +
           ((C16531 - C16530 + C16533 - C16532) * C22091 +
            (C16535 - C16534 + C16537 - C16536) * C32281 +
            (C16539 - C16538 + C16541 - C16540) * C22092 +
            (C16543 - C16542 + C16545 - C16544) * C32278 +
            (C16550 - C16551 + C16552 - C16553) * C22093 +
            (C16554 - C16555 + C16556 - C16557) * C32269 +
            (C22296 - C22297 + C22298 - C22299) * C22094 +
            (C22300 - C22301 + C22302 - C22303) * C32254) *
               C31955 * C531) *
              C440 +
          (((C15491 - C15490 + C15493 - C15492) * C22091 +
            (C15495 - C15494 + C15497 - C15496) * C32281 + C17202 * C22092 +
            C17203 * C32278 + C17204 * C22093 + C17205 * C32269 +
            (C16558 - C16559 + C16560 - C16561) * C22094 +
            (C16562 - C16563 + C16564 - C16565) * C32254) *
               C31955 * C530 +
           (C17200 * C22091 + C17201 * C32281 + C16570 * C22092 +
            C16571 * C32278 + (C16559 - C16558 + C16561 - C16560) * C22093 +
            (C16563 - C16562 + C16565 - C16564) * C32269 +
            (C15383 * C6812 - C15389 * C6808 + C31872 * C11864 -
             C15390 * C11863) *
                C22094 +
            (C15383 * C6817 - C15389 * C6813 + C31872 * C11866 -
             C15390 * C11865) *
                C32254) *
               C31955 * C531) *
              C441) *
         C31899) /
            (p * q * std::sqrt(p + q));
    d2ee[87] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C32279 * C126 - C14631 * C119 + C32272 * C127 - C14632 * C120 +
                C32259 * C128 - C14633 * C121 + C32242 * C129 - C14634 * C122) *
                   C20326 +
               (C32279 * C140 - C14631 * C131 + C32272 * C141 - C14632 * C132 +
                C32259 * C142 - C14633 * C133 + C32242 * C143 - C14634 * C134) *
                   C20324 +
               (C32279 * C328 - C14631 * C318 + C32272 * C329 - C14632 * C319 +
                C32259 * C330 - C14633 * C320 + C32242 * C331 - C14634 * C321) *
                   C20327 +
               (C32279 * C348 - C14631 * C333 + C32272 * C349 - C14632 * C334 +
                C32259 * C350 - C14633 * C335 + C32242 * C351 - C14634 * C336) *
                   C32053) *
                  C31955 * C31925 * C31911 * C110 +
              ((C14631 * C120 - C32279 * C127 + C14632 * C121 - C32272 * C128 +
                C14633 * C122 - C32259 * C129 + C14634 * C123 - C32242 * C130) *
                   C20326 +
               (C14631 * C132 - C32279 * C141 + C14632 * C133 - C32272 * C142 +
                C14633 * C134 - C32259 * C143 + C14634 * C135 - C32242 * C144) *
                   C20324 +
               (C14631 * C319 - C32279 * C329 + C14632 * C320 - C32272 * C330 +
                C14633 * C321 - C32259 * C331 + C14634 * C322 - C32242 * C332) *
                   C20327 +
               (C14631 * C334 - C32279 * C349 + C14632 * C335 - C32272 * C350 +
                C14633 * C336 - C32259 * C351 + C14634 * C337 - C32242 * C352) *
                   C32053) *
                  C31955 * C31925 * C31911 * C111 +
              ((C32279 * C128 - C14631 * C121 + C32272 * C129 - C14632 * C122 +
                C32259 * C130 - C14633 * C123 + C32242 * C136 - C14634 * C124) *
                   C20326 +
               (C32279 * C142 - C14631 * C133 + C32272 * C143 - C14632 * C134 +
                C32259 * C144 - C14633 * C135 + C32242 * C145 - C14634 * C137) *
                   C20324 +
               (C32279 * C330 - C14631 * C320 + C32272 * C331 - C14632 * C321 +
                C32259 * C332 - C14633 * C322 + C32242 * C533 - C14634 * C532) *
                   C20327 +
               (C32279 * C350 - C14631 * C335 + C32272 * C351 - C14632 * C336 +
                C32259 * C352 - C14633 * C337 + C32242 * C535 - C14634 * C534) *
                   C32053) *
                  C31955 * C31925 * C31911 * C112) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C32279 * C126 - C14631 * C119 + C32272 * C127 - C14632 * C120 +
                C32259 * C128 - C14633 * C121 + C32242 * C129 - C14634 * C122) *
                   C20326 +
               (C32279 * C140 - C14631 * C131 + C32272 * C141 - C14632 * C132 +
                C32259 * C142 - C14633 * C133 + C32242 * C143 - C14634 * C134) *
                   C20324 +
               (C32279 * C328 - C14631 * C318 + C32272 * C329 - C14632 * C319 +
                C32259 * C330 - C14633 * C320 + C32242 * C331 - C14634 * C321) *
                   C20327 +
               (C32279 * C348 - C14631 * C333 + C32272 * C349 - C14632 * C334 +
                C32259 * C350 - C14633 * C335 + C32242 * C351 - C14634 * C336) *
                   C32053) *
                  C31955 * C31925 * C209 +
              ((C14735 - C14734 + C14737 - C14736 + C14739 - C14738 + C14741 -
                C14740) *
                   C20326 +
               (C14743 - C14742 + C14745 - C14744 + C14747 - C14746 + C14749 -
                C14748) *
                   C20324 +
               (C15270 - C15271 + C15272 - C15273 + C15274 - C15275 + C15276 -
                C15277) *
                   C20327 +
               (C15278 - C15279 + C15280 - C15281 + C15282 - C15283 + C15284 -
                C15285) *
                   C32053) *
                  C31955 * C31925 * C210 +
              ((C14751 - C14750 + C14753 - C14752 + C14755 - C14754 + C14757 -
                C14756) *
                   C20326 +
               (C14759 - C14758 + C14761 - C14760 + C14763 - C14762 + C14765 -
                C14764) *
                   C20324 +
               (C32279 * C1059 - C14631 * C1050 + C32272 * C1060 -
                C14632 * C1051 + C32259 * C1061 - C14633 * C1052 +
                C32242 * C1407 - C14634 * C1406) *
                   C20327 +
               (C32279 * C1077 - C14631 * C1062 + C32272 * C1078 -
                C14632 * C1063 + C32259 * C1079 - C14633 * C1064 +
                C32242 * C1409 - C14634 * C1408) *
                   C32053) *
                  C31955 * C31925 * C211) *
             C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C32279 * C126 - C14631 * C119 + C32272 * C127 - C14632 * C120 +
            C32259 * C128 - C14633 * C121 + C32242 * C129 - C14634 * C122) *
               C20326 +
           (C32279 * C140 - C14631 * C131 + C32272 * C141 - C14632 * C132 +
            C32259 * C142 - C14633 * C133 + C32242 * C143 - C14634 * C134) *
               C20324 +
           (C20525 - C20526 + C20527 - C20528 + C20529 - C20530 + C20531 -
            C20532) *
               C20327 +
           (C20533 - C20534 + C20535 - C20536 + C20537 - C20538 + C20539 -
            C20540) *
               C32053) *
              C31955 * C315 +
          ((C20526 - C20525 + C20528 - C20527 + C20530 - C20529 + C20532 -
            C20531) *
               C20326 +
           (C20534 - C20533 + C20536 - C20535 + C20538 - C20537 + C20540 -
            C20539) *
               C20324 +
           (C20541 - C20542 + C20543 - C20544 + C20545 - C20546 + C20547 -
            C20548) *
               C20327 +
           (C20549 - C20550 + C20551 - C20552 + C20553 - C20554 + C20555 -
            C20556) *
               C32053) *
              C31955 * C316 +
          ((C20542 - C20541 + C20544 - C20543 + C20546 - C20545 + C20548 -
            C20547) *
               C20326 +
           (C20550 - C20549 + C20552 - C20551 + C20554 - C20553 + C20556 -
            C20555) *
               C20324 +
           (C32279 * C1934 - C14631 * C1928 + C32272 * C1935 - C14632 * C1929 +
            C32259 * C1936 - C14633 * C1930 + C32242 * C2295 - C14634 * C2294) *
               C20327 +
           (C32279 * C1946 - C14631 * C1937 + C32272 * C1947 - C14632 * C1938 +
            C32259 * C1948 - C14633 * C1939 + C32242 * C2297 - C14634 * C2296) *
               C32053) *
              C31955 * C317) *
         C31911 * C31899) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C15383 * C126 - C15389 * C119 + C31872 * C127 - C15390 * C120) *
                C20326 +
            (C15383 * C140 - C15389 * C131 + C31872 * C141 - C15390 * C132) *
                C20324 +
            (C16530 - C16531 + C16532 - C16533) * C20327 +
            (C16534 - C16535 + C16536 - C16537) * C32053) *
               C32273 +
           ((C15490 - C15491 + C15492 - C15493) * C20326 +
            (C15494 - C15495 + C15496 - C15497) * C20324 + C17200 * C20327 +
            C17201 * C32053) *
               C32261 +
           (C15530 * C20326 + C15531 * C20324 + C19479 * C20327 +
            C19480 * C32053) *
               C32238) *
              C31925 * C31911 * C110 +
          (((C15389 * C120 - C15383 * C127 + C15390 * C121 - C31872 * C128) *
                C20326 +
            (C15389 * C132 - C15383 * C141 + C15390 * C133 - C31872 * C142) *
                C20324 +
            (C16978 - C16979 + C16980 - C16981) * C20327 +
            (C16982 - C16983 + C16984 - C16985) * C32053) *
               C32273 +
           ((C15768 - C15769 + C15770 - C15771) * C20326 +
            (C15772 - C15773 + C15774 - C15775) * C20324 +
            (C16768 - C16769 + C16770 - C16771) * C20327 +
            (C16772 - C16773 + C16774 - C16775) * C32053) *
               C32261 +
           ((C15776 - C15777 + C15778 - C15779) * C20326 +
            (C15780 - C15781 + C15782 - C15783) * C20324 +
            (C19825 - C19826 + C19827 - C19828) * C20327 +
            (C19829 - C19830 + C19831 - C19832) * C32053) *
               C32238) *
              C31925 * C31911 * C111 +
          (((C15383 * C128 - C15389 * C121 + C31872 * C129 - C15390 * C122) *
                C20326 +
            (C15383 * C142 - C15389 * C133 + C31872 * C143 - C15390 * C134) *
                C20324 +
            (C15383 * C330 - C15389 * C320 + C31872 * C331 - C15390 * C321) *
                C20327 +
            (C15383 * C350 - C15389 * C335 + C31872 * C351 - C15390 * C336) *
                C32053) *
               C32273 +
           ((C15383 * C225 - C15389 * C215 + C31872 * C226 - C15390 * C216) *
                C20326 +
            (C15383 * C245 - C15389 * C230 + C31872 * C246 - C15390 * C231) *
                C20324 +
            (C15383 * C625 - C15389 * C620 + C31872 * C626 - C15390 * C621) *
                C20327 +
            (C15383 * C635 - C15389 * C630 + C31872 * C636 - C15390 * C631) *
                C32053) *
               C32261 +
           ((C15383 * C235 - C15389 * C220 + C31872 * C236 - C15390 * C221) *
                C20326 +
            (C15383 * C250 - C15389 * C240 + C31872 * C251 - C15390 * C241) *
                C20324 +
            (C15383 * C1061 - C15389 * C1052 + C31872 * C1407 -
             C15390 * C1406) *
                C20327 +
            (C15383 * C1079 - C15389 * C1064 + C31872 * C1409 -
             C15390 * C1408) *
                C32053) *
               C32238) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C15383 * C126 - C15389 * C119 + C31872 * C127 - C15390 * C120) *
                C20326 +
            (C15383 * C140 - C15389 * C131 + C31872 * C141 - C15390 * C132) *
                C20324 +
            (C16530 - C16531 + C16532 - C16533) * C20327 +
            (C16534 - C16535 + C16536 - C16537) * C32053) *
               C32273 +
           ((C15490 - C15491 + C15492 - C15493) * C20326 +
            (C15494 - C15495 + C15496 - C15497) * C20324 + C17200 * C20327 +
            C17201 * C32053) *
               C32261 +
           C21261 * C32238) *
              C31925 * C209 +
          (((C15491 - C15490 + C15493 - C15492) * C20326 +
            (C15495 - C15494 + C15497 - C15496) * C20324 + C17202 * C20327 +
            C17203 * C32053) *
               C32273 +
           ((C15499 - C15498 + C15501 - C15500) * C20326 +
            (C15503 - C15502 + C15505 - C15504) * C20324 + C20225 * C20327 +
            C20226 * C32053) *
               C32261 +
           ((C15507 - C15506 + C15509 - C15508) * C20326 +
            (C15511 - C15510 + C15513 - C15512) * C20324 +
            (C16068 - C16069 + C16070 - C16071) * C20327 +
            (C16072 - C16073 + C16074 - C16075) * C32053) *
               C32238) *
              C31925 * C210 +
          (C21261 * C32273 +
           (C15532 * C20326 + C15533 * C20324 +
            (C16069 - C16068 + C16071 - C16070) * C20327 +
            (C16073 - C16072 + C16075 - C16074) * C32053) *
               C32261 +
           ((C15515 - C15514 + C15517 - C15516) * C20326 +
            (C15519 - C15518 + C15521 - C15520) * C20324 +
            (C15383 * C6151 - C15389 * C6148 + C31872 * C6345 -
             C15390 * C6344) *
                C20327 +
            (C15383 * C6157 - C15389 * C6152 + C31872 * C6347 -
             C15390 * C6346) *
                C32053) *
               C32238) *
              C31925 * C211) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C15383 * C126 - C15389 * C119 + C31872 * C127 - C15390 * C120) *
                C20326 +
            (C15383 * C140 - C15389 * C131 + C31872 * C141 - C15390 * C132) *
                C20324 +
            (C16530 - C16531 + C16532 - C16533) * C20327 +
            (C16534 - C16535 + C16536 - C16537) * C32053) *
               C32273 +
           ((C15490 - C15491 + C15492 - C15493) * C20326 +
            (C15494 - C15495 + C15496 - C15497) * C20324 + C17200 * C20327 +
            C17201 * C32053) *
               C32261 +
           C21261 * C32238) *
              C315 +
          (((C16531 - C16530 + C16533 - C16532) * C20326 +
            (C16535 - C16534 + C16537 - C16536) * C20324 +
            (C16539 - C16538 + C16541 - C16540) * C20327 +
            (C16543 - C16542 + C16545 - C16544) * C32053) *
               C32273 +
           (C17202 * C20326 + C17203 * C20324 + C17204 * C20327 +
            C17205 * C32053) *
               C32261 +
           (C20225 * C20326 + C20226 * C20324 +
            (C16376 - C16377 + C16378 - C16379) * C20327 +
            (C16380 - C16381 + C16382 - C16383) * C32053) *
               C32238) *
              C316 +
          ((C16572 * C20326 + C16573 * C20324 +
            (C16551 - C16550 + C16553 - C16552) * C20327 +
            (C16555 - C16554 + C16557 - C16556) * C32053) *
               C32273 +
           (C16570 * C20326 + C16571 * C20324 +
            (C16559 - C16558 + C16561 - C16560) * C20327 +
            (C16563 - C16562 + C16565 - C16564) * C32053) *
               C32261 +
           ((C16377 - C16376 + C16379 - C16378) * C20326 +
            (C16381 - C16380 + C16383 - C16382) * C20324 +
            (C15383 * C6810 - C15389 * C6807 + C31872 * C7156 -
             C15390 * C7155) *
                C20327 +
            (C15383 * C6816 - C15389 * C6811 + C31872 * C7158 -
             C15390 * C7157) *
                C32053) *
               C32238) *
              C317) *
         C31911 * C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C15383 * C126 - C15389 * C119 + C31872 * C127 - C15390 * C120) *
               C22091 +
           (C15383 * C140 - C15389 * C131 + C31872 * C141 - C15390 * C132) *
               C32281 +
           (C16530 - C16531 + C16532 - C16533) * C22092 +
           (C16534 - C16535 + C16536 - C16537) * C32278 + C16572 * C22093 +
           C16573 * C32269 + (C16551 - C16550 + C16553 - C16552) * C22094 +
           (C16555 - C16554 + C16557 - C16556) * C32254) *
              C31955 * C31925 * C31911 * C110 +
          ((C15389 * C120 - C15383 * C127 + C15390 * C121 - C31872 * C128) *
               C22091 +
           (C15389 * C132 - C15383 * C141 + C15390 * C133 - C31872 * C142) *
               C32281 +
           (C16978 - C16979 + C16980 - C16981) * C22092 +
           (C16982 - C16983 + C16984 - C16985) * C32278 +
           (C16986 - C16987 + C16988 - C16989) * C22093 +
           (C16990 - C16991 + C16992 - C16993) * C32269 +
           (C15389 * C1929 - C15383 * C1935 + C15390 * C1930 - C31872 * C1936) *
               C22094 +
           (C15389 * C1938 - C15383 * C1947 + C15390 * C1939 - C31872 * C1948) *
               C32254) *
              C31955 * C31925 * C31911 * C111 +
          ((C15383 * C128 - C15389 * C121 + C31872 * C129 - C15390 * C122) *
               C22091 +
           (C15383 * C142 - C15389 * C133 + C31872 * C143 - C15390 * C134) *
               C32281 +
           (C15383 * C330 - C15389 * C320 + C31872 * C331 - C15390 * C321) *
               C22092 +
           (C15383 * C350 - C15389 * C335 + C31872 * C351 - C15390 * C336) *
               C32278 +
           (C15383 * C340 - C15389 * C325 + C31872 * C341 - C15390 * C326) *
               C22093 +
           (C15383 * C355 - C15389 * C345 + C31872 * C356 - C15390 * C346) *
               C32269 +
           (C15383 * C1936 - C15389 * C1930 + C31872 * C2295 - C15390 * C2294) *
               C22094 +
           (C15383 * C1948 - C15389 * C1939 + C31872 * C2297 - C15390 * C2296) *
               C32254) *
              C31955 * C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C15383 * C126 - C15389 * C119 + C31872 * C127 - C15390 * C120) *
               C22091 +
           (C15383 * C140 - C15389 * C131 + C31872 * C141 - C15390 * C132) *
               C32281 +
           (C16530 - C16531 + C16532 - C16533) * C22092 +
           (C16534 - C16535 + C16536 - C16537) * C32278 + C16572 * C22093 +
           C16573 * C32269 + (C16551 - C16550 + C16553 - C16552) * C22094 +
           (C16555 - C16554 + C16557 - C16556) * C32254) *
              C31955 * C31925 * C209 +
          ((C15491 - C15490 + C15493 - C15492) * C22091 +
           (C15495 - C15494 + C15497 - C15496) * C32281 + C17202 * C22092 +
           C17203 * C32278 + C17204 * C22093 + C17205 * C32269 +
           (C16558 - C16559 + C16560 - C16561) * C22094 +
           (C16562 - C16563 + C16564 - C16565) * C32254) *
              C31955 * C31925 * C210 +
          (C15530 * C22091 + C15531 * C32281 + C19479 * C22092 +
           C19480 * C32278 + (C16377 - C16376 + C16379 - C16378) * C22093 +
           (C16381 - C16380 + C16383 - C16382) * C32269 +
           (C15383 * C6810 - C15389 * C6807 + C31872 * C7156 - C15390 * C7155) *
               C22094 +
           (C15383 * C6816 - C15389 * C6811 + C31872 * C7158 - C15390 * C7157) *
               C32254) *
              C31955 * C31925 * C211) *
         C31899) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C15383 * C126 - C15389 * C119 + C31872 * C127 - C15390 * C120) *
               C22091 +
           (C15383 * C140 - C15389 * C131 + C31872 * C141 - C15390 * C132) *
               C32281 +
           (C16530 - C16531 + C16532 - C16533) * C22092 +
           (C16534 - C16535 + C16536 - C16537) * C32278 + C16572 * C22093 +
           C16573 * C32269 + C22304 * C22094 + C22305 * C32254) *
              C31955 * C315 +
          ((C16531 - C16530 + C16533 - C16532) * C22091 +
           (C16535 - C16534 + C16537 - C16536) * C32281 +
           (C16539 - C16538 + C16541 - C16540) * C22092 +
           (C16543 - C16542 + C16545 - C16544) * C32278 +
           (C16550 - C16551 + C16552 - C16553) * C22093 +
           (C16554 - C16555 + C16556 - C16557) * C32269 +
           (C22296 - C22297 + C22298 - C22299) * C22094 +
           (C22300 - C22301 + C22302 - C22303) * C32254) *
              C31955 * C316 +
          (C16572 * C22091 + C16573 * C32281 + C22304 * C22092 +
           C22305 * C32278 + (C22297 - C22296 + C22299 - C22298) * C22093 +
           (C22301 - C22300 + C22303 - C22302) * C32269 +
           (C15383 * C11763 - C15389 * C11761 + C31872 * C11950 -
            C15390 * C11949) *
               C22094 +
           (C15383 * C11767 - C15389 * C11764 + C31872 * C11952 -
            C15390 * C11951) *
               C32254) *
              C31955 * C317) *
         C31911 * C31899) /
            (p * q * std::sqrt(p + q));
    d2ee[88] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C15383 * C126 - C15389 * C119 + C31872 * C127 - C15390 * C120) *
                 C20326 +
             (C15383 * C140 - C15389 * C131 + C31872 * C141 - C15390 * C132) *
                 C20324 +
             (C16530 - C16531 + C16532 - C16533) * C20327 +
             (C16534 - C16535 + C16536 - C16537) * C32053) *
                C32273 +
            ((C15490 - C15491 + C15492 - C15493) * C20326 +
             (C15494 - C15495 + C15496 - C15497) * C20324 + C17200 * C20327 +
             C17201 * C32053) *
                C32261 +
            C21261 * C32238) *
               C530 +
           (((C16531 - C16530 + C16533 - C16532) * C20326 +
             (C16535 - C16534 + C16537 - C16536) * C20324 +
             (C16539 - C16538 + C16541 - C16540) * C20327 +
             (C16543 - C16542 + C16545 - C16544) * C32053) *
                C32273 +
            (C17202 * C20326 + C17203 * C20324 + C17204 * C20327 +
             C17205 * C32053) *
                C32261 +
            (C20225 * C20326 + C20226 * C20324 +
             (C16376 - C16377 + C16378 - C16379) * C20327 +
             (C16380 - C16381 + C16382 - C16383) * C32053) *
                C32238) *
               C531) *
              C31911 * C442 +
          ((((C15389 * C120 - C15383 * C127 + C15390 * C121 - C31872 * C128) *
                 C20326 +
             (C15389 * C132 - C15383 * C141 + C15390 * C133 - C31872 * C142) *
                 C20324 +
             (C16978 - C16979 + C16980 - C16981) * C20327 +
             (C16982 - C16983 + C16984 - C16985) * C32053) *
                C32273 +
            ((C15768 - C15769 + C15770 - C15771) * C20326 +
             (C15772 - C15773 + C15774 - C15775) * C20324 +
             (C16768 - C16769 + C16770 - C16771) * C20327 +
             (C16772 - C16773 + C16774 - C16775) * C32053) *
                C32261 +
            ((C15776 - C15777 + C15778 - C15779) * C20326 +
             (C15780 - C15781 + C15782 - C15783) * C20324 +
             (C19825 - C19826 + C19827 - C19828) * C20327 +
             (C19829 - C19830 + C19831 - C19832) * C32053) *
                C32238) *
               C530 +
           (((C16979 - C16978 + C16981 - C16980) * C20326 +
             (C16983 - C16982 + C16985 - C16984) * C20324 +
             (C16987 - C16986 + C16989 - C16988) * C20327 +
             (C16991 - C16990 + C16993 - C16992) * C32053) *
                C32273 +
            ((C16769 - C16768 + C16771 - C16770) * C20326 +
             (C16773 - C16772 + C16775 - C16774) * C20324 +
             (C16777 - C16776 + C16779 - C16778) * C20327 +
             (C16781 - C16780 + C16783 - C16782) * C32053) *
                C32261 +
            ((C19826 - C19825 + C19828 - C19827) * C20326 +
             (C19830 - C19829 + C19832 - C19831) * C20324 +
             (C15383 * C1072 - C15389 * C1057 + C31872 * C1073 -
              C15390 * C1058) *
                 C20327 +
             (C15383 * C1084 - C15389 * C1075 + C31872 * C1085 -
              C15390 * C1076) *
                 C32053) *
                C32238) *
               C531) *
              C31911 * C443)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C32279 * C126 - C14631 * C119 + C32272 * C127 - C14632 * C120 +
             C32259 * C128 - C14633 * C121 + C32242 * C129 - C14634 * C122) *
                C20326 +
            (C32279 * C140 - C14631 * C131 + C32272 * C141 - C14632 * C132 +
             C32259 * C142 - C14633 * C133 + C32242 * C143 - C14634 * C134) *
                C20324 +
            (C20525 - C20526 + C20527 - C20528 + C20529 - C20530 + C20531 -
             C20532) *
                C20327 +
            (C20533 - C20534 + C20535 - C20536 + C20537 - C20538 + C20539 -
             C20540) *
                C32053) *
               C31955 * C530 +
           ((C20526 - C20525 + C20528 - C20527 + C20530 - C20529 + C20532 -
             C20531) *
                C20326 +
            (C20534 - C20533 + C20536 - C20535 + C20538 - C20537 + C20540 -
             C20539) *
                C20324 +
            (C20541 - C20542 + C20543 - C20544 + C20545 - C20546 + C20547 -
             C20548) *
                C20327 +
            (C20549 - C20550 + C20551 - C20552 + C20553 - C20554 + C20555 -
             C20556) *
                C32053) *
               C31955 * C531) *
              C31911 * C442 +
          (((C14631 * C120 - C32279 * C127 + C14632 * C121 - C32272 * C128 +
             C14633 * C122 - C32259 * C129 + C14634 * C123 - C32242 * C130) *
                C20326 +
            (C14631 * C132 - C32279 * C141 + C14632 * C133 - C32272 * C142 +
             C14633 * C134 - C32259 * C143 + C14634 * C135 - C32242 * C144) *
                C20324 +
            (C20817 - C20818 + C20819 - C20820 + C20821 - C20822 + C20823 -
             C20824) *
                C20327 +
            (C20825 - C20826 + C20827 - C20828 + C20829 - C20830 + C20831 -
             C20832) *
                C32053) *
               C31955 * C530 +
           ((C20818 - C20817 + C20820 - C20819 + C20822 - C20821 + C20824 -
             C20823) *
                C20326 +
            (C20826 - C20825 + C20828 - C20827 + C20830 - C20829 + C20832 -
             C20831) *
                C20324 +
            (C32279 * C339 - C14631 * C324 + C32272 * C340 - C14632 * C325 +
             C32259 * C341 - C14633 * C326 + C32242 * C342 - C14634 * C327) *
                C20327 +
            (C32279 * C354 - C14631 * C344 + C32272 * C355 - C14632 * C345 +
             C32259 * C356 - C14633 * C346 + C32242 * C357 - C14634 * C347) *
                C32053) *
               C31955 * C531) *
              C31911 * C443)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C15383 * C126 - C15389 * C119 + C31872 * C127 - C15390 * C120) *
                C22091 +
            (C15383 * C140 - C15389 * C131 + C31872 * C141 - C15390 * C132) *
                C32281 +
            (C16530 - C16531 + C16532 - C16533) * C22092 +
            (C16534 - C16535 + C16536 - C16537) * C32278 + C16572 * C22093 +
            C16573 * C32269 + C22304 * C22094 + C22305 * C32254) *
               C31955 * C530 +
           ((C16531 - C16530 + C16533 - C16532) * C22091 +
            (C16535 - C16534 + C16537 - C16536) * C32281 +
            (C16539 - C16538 + C16541 - C16540) * C22092 +
            (C16543 - C16542 + C16545 - C16544) * C32278 +
            (C16550 - C16551 + C16552 - C16553) * C22093 +
            (C16554 - C16555 + C16556 - C16557) * C32269 +
            (C22296 - C22297 + C22298 - C22299) * C22094 +
            (C22300 - C22301 + C22302 - C22303) * C32254) *
               C31955 * C531) *
              C31911 * C442 +
          (((C15389 * C120 - C15383 * C127 + C15390 * C121 - C31872 * C128) *
                C22091 +
            (C15389 * C132 - C15383 * C141 + C15390 * C133 - C31872 * C142) *
                C32281 +
            (C16978 - C16979 + C16980 - C16981) * C22092 +
            (C16982 - C16983 + C16984 - C16985) * C32278 +
            (C16986 - C16987 + C16988 - C16989) * C22093 +
            (C16990 - C16991 + C16992 - C16993) * C32269 +
            (C22566 - C22567 + C22568 - C22569) * C22094 +
            (C22570 - C22571 + C22572 - C22573) * C32254) *
               C31955 * C530 +
           ((C16979 - C16978 + C16981 - C16980) * C22091 +
            (C16983 - C16982 + C16985 - C16984) * C32281 +
            (C16987 - C16986 + C16989 - C16988) * C22092 +
            (C16991 - C16990 + C16993 - C16992) * C32278 +
            (C22567 - C22566 + C22569 - C22568) * C22093 +
            (C22571 - C22570 + C22573 - C22572) * C32269 +
            (C15383 * C1941 - C15389 * C1932 + C31872 * C1942 -
             C15390 * C1933) *
                C22094 +
            (C15383 * C1950 - C15389 * C1944 + C31872 * C1951 -
             C15390 * C1945) *
                C32254) *
               C31955 * C531) *
              C31911 * C443)) /
            (p * q * std::sqrt(p + q));
    d2ee[89] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C32279 * C126 - C14631 * C119 + C32272 * C127 - C14632 * C120 +
            C32259 * C128 - C14633 * C121 + C32242 * C129 - C14634 * C122) *
               C20326 +
           (C32279 * C140 - C14631 * C131 + C32272 * C141 - C14632 * C132 +
            C32259 * C142 - C14633 * C133 + C32242 * C143 - C14634 * C134) *
               C20324 +
           (C32279 * C328 - C14631 * C318 + C32272 * C329 - C14632 * C319 +
            C32259 * C330 - C14633 * C320 + C32242 * C331 - C14634 * C321) *
               C20327 +
           (C32279 * C348 - C14631 * C333 + C32272 * C349 - C14632 * C334 +
            C32259 * C350 - C14633 * C335 + C32242 * C351 - C14634 * C336) *
               C32053) *
              C31955 * C31925 * C209 +
          ((C14735 - C14734 + C14737 - C14736 + C14739 - C14738 + C14741 -
            C14740) *
               C20326 +
           (C14743 - C14742 + C14745 - C14744 + C14747 - C14746 + C14749 -
            C14748) *
               C20324 +
           (C15270 - C15271 + C15272 - C15273 + C15274 - C15275 + C15276 -
            C15277) *
               C20327 +
           (C15278 - C15279 + C15280 - C15281 + C15282 - C15283 + C15284 -
            C15285) *
               C32053) *
              C31955 * C31925 * C210 +
          ((C14751 - C14750 + C14753 - C14752 + C14755 - C14754 + C14757 -
            C14756) *
               C20326 +
           (C14759 - C14758 + C14761 - C14760 + C14763 - C14762 + C14765 -
            C14764) *
               C20324 +
           (C32279 * C1059 - C14631 * C1050 + C32272 * C1060 - C14632 * C1051 +
            C32259 * C1061 - C14633 * C1052 + C32242 * C1407 - C14634 * C1406) *
               C20327 +
           (C32279 * C1077 - C14631 * C1062 + C32272 * C1078 - C14632 * C1063 +
            C32259 * C1079 - C14633 * C1064 + C32242 * C1409 - C14634 * C1408) *
               C32053) *
              C31955 * C31925 * C211) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C32279 * C126 - C14631 * C119 + C32272 * C127 - C14632 * C120 +
            C32259 * C128 - C14633 * C121 + C32242 * C129 - C14634 * C122) *
               C20326 +
           (C32279 * C140 - C14631 * C131 + C32272 * C141 - C14632 * C132 +
            C32259 * C142 - C14633 * C133 + C32242 * C143 - C14634 * C134) *
               C20324 +
           (C32279 * C328 - C14631 * C318 + C32272 * C329 - C14632 * C319 +
            C32259 * C330 - C14633 * C320 + C32242 * C331 - C14634 * C321) *
               C20327 +
           (C32279 * C348 - C14631 * C333 + C32272 * C349 - C14632 * C334 +
            C32259 * C350 - C14633 * C335 + C32242 * C351 - C14634 * C336) *
               C32053) *
              C31955 * C31925 * C31911 * C110 +
          ((C14631 * C120 - C32279 * C127 + C14632 * C121 - C32272 * C128 +
            C14633 * C122 - C32259 * C129 + C14634 * C123 - C32242 * C130) *
               C20326 +
           (C14631 * C132 - C32279 * C141 + C14632 * C133 - C32272 * C142 +
            C14633 * C134 - C32259 * C143 + C14634 * C135 - C32242 * C144) *
               C20324 +
           (C14631 * C319 - C32279 * C329 + C14632 * C320 - C32272 * C330 +
            C14633 * C321 - C32259 * C331 + C14634 * C322 - C32242 * C332) *
               C20327 +
           (C14631 * C334 - C32279 * C349 + C14632 * C335 - C32272 * C350 +
            C14633 * C336 - C32259 * C351 + C14634 * C337 - C32242 * C352) *
               C32053) *
              C31955 * C31925 * C31911 * C111 +
          ((C32279 * C128 - C14631 * C121 + C32272 * C129 - C14632 * C122 +
            C32259 * C130 - C14633 * C123 + C32242 * C136 - C14634 * C124) *
               C20326 +
           (C32279 * C142 - C14631 * C133 + C32272 * C143 - C14632 * C134 +
            C32259 * C144 - C14633 * C135 + C32242 * C145 - C14634 * C137) *
               C20324 +
           (C32279 * C330 - C14631 * C320 + C32272 * C331 - C14632 * C321 +
            C32259 * C332 - C14633 * C322 + C32242 * C533 - C14634 * C532) *
               C20327 +
           (C32279 * C350 - C14631 * C335 + C32272 * C351 - C14632 * C336 +
            C32259 * C352 - C14633 * C337 + C32242 * C535 - C14634 * C534) *
               C32053) *
              C31955 * C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C15383 * C126 - C15389 * C119 + C31872 * C127 - C15390 * C120) *
                C20326 +
            (C15383 * C140 - C15389 * C131 + C31872 * C141 - C15390 * C132) *
                C20324 +
            (C16530 - C16531 + C16532 - C16533) * C20327 +
            (C16534 - C16535 + C16536 - C16537) * C32053) *
               C32273 +
           ((C15490 - C15491 + C15492 - C15493) * C20326 +
            (C15494 - C15495 + C15496 - C15497) * C20324 + C17200 * C20327 +
            C17201 * C32053) *
               C32261 +
           (C15530 * C20326 + C15531 * C20324 + C19479 * C20327 +
            C19480 * C32053) *
               C32238) *
              C31925 * C31911 * C110 +
          (((C15389 * C120 - C15383 * C127 + C15390 * C121 - C31872 * C128) *
                C20326 +
            (C15389 * C132 - C15383 * C141 + C15390 * C133 - C31872 * C142) *
                C20324 +
            (C16978 - C16979 + C16980 - C16981) * C20327 +
            (C16982 - C16983 + C16984 - C16985) * C32053) *
               C32273 +
           ((C15768 - C15769 + C15770 - C15771) * C20326 +
            (C15772 - C15773 + C15774 - C15775) * C20324 +
            (C16768 - C16769 + C16770 - C16771) * C20327 +
            (C16772 - C16773 + C16774 - C16775) * C32053) *
               C32261 +
           ((C15776 - C15777 + C15778 - C15779) * C20326 +
            (C15780 - C15781 + C15782 - C15783) * C20324 +
            (C19825 - C19826 + C19827 - C19828) * C20327 +
            (C19829 - C19830 + C19831 - C19832) * C32053) *
               C32238) *
              C31925 * C31911 * C111 +
          (((C15383 * C128 - C15389 * C121 + C31872 * C129 - C15390 * C122) *
                C20326 +
            (C15383 * C142 - C15389 * C133 + C31872 * C143 - C15390 * C134) *
                C20324 +
            (C15383 * C330 - C15389 * C320 + C31872 * C331 - C15390 * C321) *
                C20327 +
            (C15383 * C350 - C15389 * C335 + C31872 * C351 - C15390 * C336) *
                C32053) *
               C32273 +
           ((C15383 * C225 - C15389 * C215 + C31872 * C226 - C15390 * C216) *
                C20326 +
            (C15383 * C245 - C15389 * C230 + C31872 * C246 - C15390 * C231) *
                C20324 +
            (C15383 * C625 - C15389 * C620 + C31872 * C626 - C15390 * C621) *
                C20327 +
            (C15383 * C635 - C15389 * C630 + C31872 * C636 - C15390 * C631) *
                C32053) *
               C32261 +
           ((C15383 * C235 - C15389 * C220 + C31872 * C236 - C15390 * C221) *
                C20326 +
            (C15383 * C250 - C15389 * C240 + C31872 * C251 - C15390 * C241) *
                C20324 +
            (C15383 * C1061 - C15389 * C1052 + C31872 * C1407 -
             C15390 * C1406) *
                C20327 +
            (C15383 * C1079 - C15389 * C1064 + C31872 * C1409 -
             C15390 * C1408) *
                C32053) *
               C32238) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C15383 * C126 - C15389 * C119 + C31872 * C127 - C15390 * C120) *
                C20326 +
            (C15383 * C140 - C15389 * C131 + C31872 * C141 - C15390 * C132) *
                C20324 +
            (C16530 - C16531 + C16532 - C16533) * C20327 +
            (C16534 - C16535 + C16536 - C16537) * C32053) *
               C32273 +
           ((C15490 - C15491 + C15492 - C15493) * C20326 +
            (C15494 - C15495 + C15496 - C15497) * C20324 + C17200 * C20327 +
            C17201 * C32053) *
               C32261 +
           C21261 * C32238) *
              C31925 * C209 +
          (((C15491 - C15490 + C15493 - C15492) * C20326 +
            (C15495 - C15494 + C15497 - C15496) * C20324 + C17202 * C20327 +
            C17203 * C32053) *
               C32273 +
           ((C15499 - C15498 + C15501 - C15500) * C20326 +
            (C15503 - C15502 + C15505 - C15504) * C20324 + C20225 * C20327 +
            C20226 * C32053) *
               C32261 +
           ((C15507 - C15506 + C15509 - C15508) * C20326 +
            (C15511 - C15510 + C15513 - C15512) * C20324 +
            (C16068 - C16069 + C16070 - C16071) * C20327 +
            (C16072 - C16073 + C16074 - C16075) * C32053) *
               C32238) *
              C31925 * C210 +
          (C21261 * C32273 +
           (C15532 * C20326 + C15533 * C20324 +
            (C16069 - C16068 + C16071 - C16070) * C20327 +
            (C16073 - C16072 + C16075 - C16074) * C32053) *
               C32261 +
           ((C15515 - C15514 + C15517 - C15516) * C20326 +
            (C15519 - C15518 + C15521 - C15520) * C20324 +
            (C15383 * C6151 - C15389 * C6148 + C31872 * C6345 -
             C15390 * C6344) *
                C20327 +
            (C15383 * C6157 - C15389 * C6152 + C31872 * C6347 -
             C15390 * C6346) *
                C32053) *
               C32238) *
              C31925 * C211) *
         C31899) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C15383 * C126 - C15389 * C119 + C31872 * C127 - C15390 * C120) *
               C22091 +
           (C15383 * C140 - C15389 * C131 + C31872 * C141 - C15390 * C132) *
               C32281 +
           (C16530 - C16531 + C16532 - C16533) * C22092 +
           (C16534 - C16535 + C16536 - C16537) * C32278 + C16572 * C22093 +
           C16573 * C32269 + (C16551 - C16550 + C16553 - C16552) * C22094 +
           (C16555 - C16554 + C16557 - C16556) * C32254) *
              C31955 * C31925 * C31911 * C110 +
          ((C15389 * C120 - C15383 * C127 + C15390 * C121 - C31872 * C128) *
               C22091 +
           (C15389 * C132 - C15383 * C141 + C15390 * C133 - C31872 * C142) *
               C32281 +
           (C16978 - C16979 + C16980 - C16981) * C22092 +
           (C16982 - C16983 + C16984 - C16985) * C32278 +
           (C16986 - C16987 + C16988 - C16989) * C22093 +
           (C16990 - C16991 + C16992 - C16993) * C32269 +
           (C15389 * C1929 - C15383 * C1935 + C15390 * C1930 - C31872 * C1936) *
               C22094 +
           (C15389 * C1938 - C15383 * C1947 + C15390 * C1939 - C31872 * C1948) *
               C32254) *
              C31955 * C31925 * C31911 * C111 +
          ((C15383 * C128 - C15389 * C121 + C31872 * C129 - C15390 * C122) *
               C22091 +
           (C15383 * C142 - C15389 * C133 + C31872 * C143 - C15390 * C134) *
               C32281 +
           (C15383 * C330 - C15389 * C320 + C31872 * C331 - C15390 * C321) *
               C22092 +
           (C15383 * C350 - C15389 * C335 + C31872 * C351 - C15390 * C336) *
               C32278 +
           (C15383 * C340 - C15389 * C325 + C31872 * C341 - C15390 * C326) *
               C22093 +
           (C15383 * C355 - C15389 * C345 + C31872 * C356 - C15390 * C346) *
               C32269 +
           (C15383 * C1936 - C15389 * C1930 + C31872 * C2295 - C15390 * C2294) *
               C22094 +
           (C15383 * C1948 - C15389 * C1939 + C31872 * C2297 - C15390 * C2296) *
               C32254) *
              C31955 * C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C15383 * C126 - C15389 * C119 + C31872 * C127 - C15390 * C120) *
               C22091 +
           (C15383 * C140 - C15389 * C131 + C31872 * C141 - C15390 * C132) *
               C32281 +
           (C16530 - C16531 + C16532 - C16533) * C22092 +
           (C16534 - C16535 + C16536 - C16537) * C32278 + C16572 * C22093 +
           C16573 * C32269 + (C16551 - C16550 + C16553 - C16552) * C22094 +
           (C16555 - C16554 + C16557 - C16556) * C32254) *
              C31955 * C31925 * C209 +
          ((C15491 - C15490 + C15493 - C15492) * C22091 +
           (C15495 - C15494 + C15497 - C15496) * C32281 + C17202 * C22092 +
           C17203 * C32278 + C17204 * C22093 + C17205 * C32269 +
           (C16558 - C16559 + C16560 - C16561) * C22094 +
           (C16562 - C16563 + C16564 - C16565) * C32254) *
              C31955 * C31925 * C210 +
          (C15530 * C22091 + C15531 * C32281 + C19479 * C22092 +
           C19480 * C32278 + (C16377 - C16376 + C16379 - C16378) * C22093 +
           (C16381 - C16380 + C16383 - C16382) * C32269 +
           (C15383 * C6810 - C15389 * C6807 + C31872 * C7156 - C15390 * C7155) *
               C22094 +
           (C15383 * C6816 - C15389 * C6811 + C31872 * C7158 - C15390 * C7157) *
               C32254) *
              C31955 * C31925 * C211) *
         C31899) /
            (p * q * std::sqrt(p + q));
    d2ee[90] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C31867 * C126 - C30883 * C119 + C31875 * C127 - C30879 * C120 +
             C17317 * C128 - C30889 * C121) *
                C31010 +
            (C31867 * C140 - C30883 * C131 + C31875 * C141 - C30879 * C132 +
             C17317 * C142 - C30889 * C133) *
                C32049 +
            (C18518 - C18519 + C18520 - C18521 + C18522 - C18523) * C31002 +
            (C18524 - C18525 + C18526 - C18527 + C18528 - C18529) * C32056 +
            C24080 * C31016 + C24081 * C23835) *
               C31955 * C31925 * C440 +
           ((C17436 - C17435 + C17438 - C17437 + C17440 - C17439) * C31010 +
            (C17442 - C17441 + C17444 - C17443 + C17446 - C17445) * C32049 +
            C19178 * C31002 + C19179 * C32056 +
            (C18542 - C18543 + C18544 - C18545 + C18546 - C18547) * C31016 +
            (C18548 - C18549 + C18550 - C18551 + C18552 - C18553) * C23835) *
               C31955 * C31925 * C441) *
              C442 +
          (((C30883 * C120 - C31867 * C127 + C30879 * C121 - C31875 * C128 +
             C30889 * C122 - C17317 * C129) *
                C31010 +
            (C30883 * C132 - C31867 * C141 + C30879 * C133 - C31875 * C142 +
             C30889 * C134 - C17317 * C143) *
                C32049 +
            (C18954 - C18955 + C18956 - C18957 + C18958 - C18959) * C31002 +
            (C18960 - C18961 + C18962 - C18963 + C18964 - C18965) * C32056 +
            (C30883 * C324 - C31867 * C339 + C30879 * C325 - C31875 * C340 +
             C30889 * C326 - C17317 * C341) *
                C31016 +
            (C30883 * C344 - C31867 * C354 + C30879 * C345 - C31875 * C355 +
             C30889 * C346 - C17317 * C356) *
                C23835) *
               C31955 * C31925 * C440 +
           ((C17741 - C17740 + C17743 - C17742 + C17745 - C17744) * C31010 +
            (C17747 - C17746 + C17749 - C17748 + C17751 - C17750) * C32049 +
            (C18749 - C18748 + C18751 - C18750 + C18753 - C18752) * C31002 +
            (C18755 - C18754 + C18757 - C18756 + C18759 - C18758) * C32056 +
            (C31867 * C1066 - C30883 * C1054 + C31875 * C1067 - C30879 * C1055 +
             C17317 * C2145 - C30889 * C2144) *
                C31016 +
            (C31867 * C1081 - C30883 * C1069 + C31875 * C1082 - C30879 * C1070 +
             C17317 * C2147 - C30889 * C2146) *
                C23835) *
               C31955 * C31925 * C441) *
              C443)) /
        (p * q * std::sqrt(p + q));
    d2ee[91] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C31867 * C126 - C30883 * C119 + C31875 * C127 - C30879 * C120 +
             C17317 * C128 - C30889 * C121) *
                C31010 +
            (C31867 * C140 - C30883 * C131 + C31875 * C141 - C30879 * C132 +
             C17317 * C142 - C30889 * C133) *
                C32049 +
            (C18518 - C18519 + C18520 - C18521 + C18522 - C18523) * C31002 +
            (C18524 - C18525 + C18526 - C18527 + C18528 - C18529) * C32056 +
            C24080 * C31016 + C24081 * C23835) *
               C31955 * C530 +
           ((C18519 - C18518 + C18521 - C18520 + C18523 - C18522) * C31010 +
            (C18525 - C18524 + C18527 - C18526 + C18529 - C18528) * C32049 +
            (C18530 - C18531 + C18532 - C18533 + C18534 - C18535) * C31002 +
            (C18536 - C18537 + C18538 - C18539 + C18540 - C18541) * C32056 +
            (C24066 - C24067 + C24068 - C24069 + C24070 - C24071) * C31016 +
            (C24072 - C24073 + C24074 - C24075 + C24076 - C24077) * C23835) *
               C31955 * C531) *
              C440 +
          (((C17436 - C17435 + C17438 - C17437 + C17440 - C17439) * C31010 +
            (C17442 - C17441 + C17444 - C17443 + C17446 - C17445) * C32049 +
            C19178 * C31002 + C19179 * C32056 +
            (C18542 - C18543 + C18544 - C18545 + C18546 - C18547) * C31016 +
            (C18548 - C18549 + C18550 - C18551 + C18552 - C18553) * C23835) *
               C31955 * C530 +
           (C19176 * C31010 + C19177 * C32049 +
            (C18543 - C18542 + C18545 - C18544 + C18547 - C18546) * C31002 +
            (C18549 - C18548 + C18551 - C18550 + C18553 - C18552) * C32056 +
            (C31867 * C2471 - C30883 * C2468 + C31875 * C2472 - C30879 * C2469 +
             C17317 * C2473 - C30889 * C2470) *
                C31016 +
            (C31867 * C2477 - C30883 * C2474 + C31875 * C2478 - C30879 * C2475 +
             C17317 * C2479 - C30889 * C2476) *
                C23835) *
               C31955 * C531) *
              C441) *
         C31899) /
        (p * q * std::sqrt(p + q));
    d2ee[92] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C31867 * C126 - C30883 * C119 + C31875 * C127 - C30879 * C120 +
            C17317 * C128 - C30889 * C121) *
               C31010 +
           (C31867 * C140 - C30883 * C131 + C31875 * C141 - C30879 * C132 +
            C17317 * C142 - C30889 * C133) *
               C32049 +
           (C18518 - C18519 + C18520 - C18521 + C18522 - C18523) * C31002 +
           (C18524 - C18525 + C18526 - C18527 + C18528 - C18529) * C32056 +
           (C18531 - C18530 + C18533 - C18532 + C18535 - C18534) * C31016 +
           (C18537 - C18536 + C18539 - C18538 + C18541 - C18540) * C23835) *
              C31955 * C31925 * C209 +
          ((C17436 - C17435 + C17438 - C17437 + C17440 - C17439) * C31010 +
           (C17442 - C17441 + C17444 - C17443 + C17446 - C17445) * C32049 +
           C19178 * C31002 + C19179 * C32056 +
           (C18542 - C18543 + C18544 - C18545 + C18546 - C18547) * C31016 +
           (C18548 - C18549 + C18550 - C18551 + C18552 - C18553) * C23835) *
              C31955 * C31925 * C210 +
          (C17479 * C31010 + C17480 * C32049 +
           (C18069 - C18068 + C18071 - C18070 + C18073 - C18072) * C31002 +
           (C18075 - C18074 + C18077 - C18076 + C18079 - C18078) * C32056 +
           (C31867 * C1071 - C30883 * C1056 + C31875 * C1072 - C30879 * C1057 +
            C17317 * C1073 - C30889 * C1058) *
               C31016 +
           (C31867 * C1083 - C30883 * C1074 + C31875 * C1084 - C30879 * C1075 +
            C17317 * C1085 - C30889 * C1076) *
               C23835) *
              C31955 * C31925 * C211) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C31867 * C126 - C30883 * C119 + C31875 * C127 - C30879 * C120 +
            C17317 * C128 - C30889 * C121) *
               C31010 +
           (C31867 * C140 - C30883 * C131 + C31875 * C141 - C30879 * C132 +
            C17317 * C142 - C30889 * C133) *
               C32049 +
           (C18518 - C18519 + C18520 - C18521 + C18522 - C18523) * C31002 +
           (C18524 - C18525 + C18526 - C18527 + C18528 - C18529) * C32056 +
           (C18531 - C18530 + C18533 - C18532 + C18535 - C18534) * C31016 +
           (C18537 - C18536 + C18539 - C18538 + C18541 - C18540) * C23835) *
              C31955 * C31925 * C31911 * C110 +
          ((C30883 * C120 - C31867 * C127 + C30879 * C121 - C31875 * C128 +
            C30889 * C122 - C17317 * C129) *
               C31010 +
           (C30883 * C132 - C31867 * C141 + C30879 * C133 - C31875 * C142 +
            C30889 * C134 - C17317 * C143) *
               C32049 +
           (C18954 - C18955 + C18956 - C18957 + C18958 - C18959) * C31002 +
           (C18960 - C18961 + C18962 - C18963 + C18964 - C18965) * C32056 +
           (C30883 * C324 - C31867 * C339 + C30879 * C325 - C31875 * C340 +
            C30889 * C326 - C17317 * C341) *
               C31016 +
           (C30883 * C344 - C31867 * C354 + C30879 * C345 - C31875 * C355 +
            C30889 * C346 - C17317 * C356) *
               C23835) *
              C31955 * C31925 * C31911 * C111 +
          ((C31867 * C128 - C30883 * C121 + C31875 * C129 - C30879 * C122 +
            C17317 * C130 - C30889 * C123) *
               C31010 +
           (C31867 * C142 - C30883 * C133 + C31875 * C143 - C30879 * C134 +
            C17317 * C144 - C30889 * C135) *
               C32049 +
           (C31867 * C330 - C30883 * C320 + C31875 * C331 - C30879 * C321 +
            C17317 * C332 - C30889 * C322) *
               C31002 +
           (C31867 * C350 - C30883 * C335 + C31875 * C351 - C30879 * C336 +
            C17317 * C352 - C30889 * C337) *
               C32056 +
           (C31867 * C340 - C30883 * C325 + C31875 * C341 - C30879 * C326 +
            C17317 * C342 - C30889 * C327) *
               C31016 +
           (C31867 * C355 - C30883 * C345 + C31875 * C356 - C30879 * C346 +
            C17317 * C357 - C30889 * C347) *
               C23835) *
              C31955 * C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((C31867 * C126 - C30883 * C119 + C31875 * C127 - C30879 * C120 +
            C17317 * C128 - C30889 * C121) *
               C31010 +
           (C31867 * C140 - C30883 * C131 + C31875 * C141 - C30879 * C132 +
            C17317 * C142 - C30889 * C133) *
               C32049 +
           (C18518 - C18519 + C18520 - C18521 + C18522 - C18523) * C31002 +
           (C18524 - C18525 + C18526 - C18527 + C18528 - C18529) * C32056 +
           C24080 * C31016 + C24081 * C23835) *
              C31955 * C315 +
          ((C18519 - C18518 + C18521 - C18520 + C18523 - C18522) * C31010 +
           (C18525 - C18524 + C18527 - C18526 + C18529 - C18528) * C32049 +
           (C18530 - C18531 + C18532 - C18533 + C18534 - C18535) * C31002 +
           (C18536 - C18537 + C18538 - C18539 + C18540 - C18541) * C32056 +
           (C24066 - C24067 + C24068 - C24069 + C24070 - C24071) * C31016 +
           (C24072 - C24073 + C24074 - C24075 + C24076 - C24077) * C23835) *
              C31955 * C316 +
          (C24080 * C31010 + C24081 * C32049 +
           (C24067 - C24066 + C24069 - C24068 + C24071 - C24070) * C31002 +
           (C24073 - C24072 + C24075 - C24074 + C24077 - C24076) * C32056 +
           (C31867 * C1940 - C30883 * C1931 + C31875 * C1941 - C30879 * C1932 +
            C17317 * C1942 - C30889 * C1933) *
               C31016 +
           (C31867 * C1949 - C30883 * C1943 + C31875 * C1950 - C30879 * C1944 +
            C17317 * C1951 - C30889 * C1945) *
               C23835) *
              C31955 * C317) *
         C31911 * C31899) /
            (p * q * std::sqrt(p + q));
    d2ee[93] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C31867 * C126 - C30883 * C119 + C31875 * C127 - C30879 * C120 +
             C17317 * C128 - C30889 * C121) *
                C31010 +
            (C31867 * C140 - C30883 * C131 + C31875 * C141 - C30879 * C132 +
             C17317 * C142 - C30889 * C133) *
                C32049 +
            (C18518 - C18519 + C18520 - C18521 + C18522 - C18523) * C31002 +
            (C18524 - C18525 + C18526 - C18527 + C18528 - C18529) * C32056 +
            C24080 * C31016 + C24081 * C23835) *
               C31955 * C530 +
           ((C18519 - C18518 + C18521 - C18520 + C18523 - C18522) * C31010 +
            (C18525 - C18524 + C18527 - C18526 + C18529 - C18528) * C32049 +
            (C18530 - C18531 + C18532 - C18533 + C18534 - C18535) * C31002 +
            (C18536 - C18537 + C18538 - C18539 + C18540 - C18541) * C32056 +
            (C24066 - C24067 + C24068 - C24069 + C24070 - C24071) * C31016 +
            (C24072 - C24073 + C24074 - C24075 + C24076 - C24077) * C23835) *
               C31955 * C531) *
              C31911 * C442 +
          (((C30883 * C120 - C31867 * C127 + C30879 * C121 - C31875 * C128 +
             C30889 * C122 - C17317 * C129) *
                C31010 +
            (C30883 * C132 - C31867 * C141 + C30879 * C133 - C31875 * C142 +
             C30889 * C134 - C17317 * C143) *
                C32049 +
            (C18954 - C18955 + C18956 - C18957 + C18958 - C18959) * C31002 +
            (C18960 - C18961 + C18962 - C18963 + C18964 - C18965) * C32056 +
            (C24374 - C24375 + C24376 - C24377 + C24378 - C24379) * C31016 +
            (C24380 - C24381 + C24382 - C24383 + C24384 - C24385) * C23835) *
               C31955 * C530 +
           ((C18955 - C18954 + C18957 - C18956 + C18959 - C18958) * C31010 +
            (C18961 - C18960 + C18963 - C18962 + C18965 - C18964) * C32049 +
            (C24375 - C24374 + C24377 - C24376 + C24379 - C24378) * C31002 +
            (C24381 - C24380 + C24383 - C24382 + C24385 - C24384) * C32056 +
            (C31867 * C1935 - C30883 * C1929 + C31875 * C1936 - C30879 * C1930 +
             C17317 * C2295 - C30889 * C2294) *
                C31016 +
            (C31867 * C1947 - C30883 * C1938 + C31875 * C1948 - C30879 * C1939 +
             C17317 * C2297 - C30889 * C2296) *
                C23835) *
               C31955 * C531) *
              C31911 * C443)) /
        (p * q * std::sqrt(p + q));
    d2ee[94] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((C31867 * C126 - C30883 * C119 + C31875 * C127 - C30879 * C120 +
            C17317 * C128 - C30889 * C121) *
               C31010 +
           (C31867 * C140 - C30883 * C131 + C31875 * C141 - C30879 * C132 +
            C17317 * C142 - C30889 * C133) *
               C32049 +
           (C18518 - C18519 + C18520 - C18521 + C18522 - C18523) * C31002 +
           (C18524 - C18525 + C18526 - C18527 + C18528 - C18529) * C32056 +
           (C18531 - C18530 + C18533 - C18532 + C18535 - C18534) * C31016 +
           (C18537 - C18536 + C18539 - C18538 + C18541 - C18540) * C23835) *
              C31955 * C31925 * C31911 * C110 +
          ((C30883 * C120 - C31867 * C127 + C30879 * C121 - C31875 * C128 +
            C30889 * C122 - C17317 * C129) *
               C31010 +
           (C30883 * C132 - C31867 * C141 + C30879 * C133 - C31875 * C142 +
            C30889 * C134 - C17317 * C143) *
               C32049 +
           (C18954 - C18955 + C18956 - C18957 + C18958 - C18959) * C31002 +
           (C18960 - C18961 + C18962 - C18963 + C18964 - C18965) * C32056 +
           (C30883 * C324 - C31867 * C339 + C30879 * C325 - C31875 * C340 +
            C30889 * C326 - C17317 * C341) *
               C31016 +
           (C30883 * C344 - C31867 * C354 + C30879 * C345 - C31875 * C355 +
            C30889 * C346 - C17317 * C356) *
               C23835) *
              C31955 * C31925 * C31911 * C111 +
          ((C31867 * C128 - C30883 * C121 + C31875 * C129 - C30879 * C122 +
            C17317 * C130 - C30889 * C123) *
               C31010 +
           (C31867 * C142 - C30883 * C133 + C31875 * C143 - C30879 * C134 +
            C17317 * C144 - C30889 * C135) *
               C32049 +
           (C31867 * C330 - C30883 * C320 + C31875 * C331 - C30879 * C321 +
            C17317 * C332 - C30889 * C322) *
               C31002 +
           (C31867 * C350 - C30883 * C335 + C31875 * C351 - C30879 * C336 +
            C17317 * C352 - C30889 * C337) *
               C32056 +
           (C31867 * C340 - C30883 * C325 + C31875 * C341 - C30879 * C326 +
            C17317 * C342 - C30889 * C327) *
               C31016 +
           (C31867 * C355 - C30883 * C345 + C31875 * C356 - C30879 * C346 +
            C17317 * C357 - C30889 * C347) *
               C23835) *
              C31955 * C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((C31867 * C126 - C30883 * C119 + C31875 * C127 - C30879 * C120 +
            C17317 * C128 - C30889 * C121) *
               C31010 +
           (C31867 * C140 - C30883 * C131 + C31875 * C141 - C30879 * C132 +
            C17317 * C142 - C30889 * C133) *
               C32049 +
           (C18518 - C18519 + C18520 - C18521 + C18522 - C18523) * C31002 +
           (C18524 - C18525 + C18526 - C18527 + C18528 - C18529) * C32056 +
           (C18531 - C18530 + C18533 - C18532 + C18535 - C18534) * C31016 +
           (C18537 - C18536 + C18539 - C18538 + C18541 - C18540) * C23835) *
              C31955 * C31925 * C209 +
          ((C17436 - C17435 + C17438 - C17437 + C17440 - C17439) * C31010 +
           (C17442 - C17441 + C17444 - C17443 + C17446 - C17445) * C32049 +
           C19178 * C31002 + C19179 * C32056 +
           (C18542 - C18543 + C18544 - C18545 + C18546 - C18547) * C31016 +
           (C18548 - C18549 + C18550 - C18551 + C18552 - C18553) * C23835) *
              C31955 * C31925 * C210 +
          (C17479 * C31010 + C17480 * C32049 +
           (C18069 - C18068 + C18071 - C18070 + C18073 - C18072) * C31002 +
           (C18075 - C18074 + C18077 - C18076 + C18079 - C18078) * C32056 +
           (C31867 * C1071 - C30883 * C1056 + C31875 * C1072 - C30879 * C1057 +
            C17317 * C1073 - C30889 * C1058) *
               C31016 +
           (C31867 * C1083 - C30883 * C1074 + C31875 * C1084 - C30879 * C1075 +
            C17317 * C1085 - C30889 * C1076) *
               C23835) *
              C31955 * C31925 * C211) *
         C31899) /
            (p * q * std::sqrt(p + q));
    d2ee[95] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C32279 * C126 - C14631 * C119 + C32272 * C127 - C14632 * C120 +
             C32259 * C128 - C14633 * C121 + C32242 * C129 - C14634 * C122) *
                C20326 +
            (C32279 * C140 - C14631 * C131 + C32272 * C141 - C14632 * C132 +
             C32259 * C142 - C14633 * C133 + C32242 * C143 - C14634 * C134) *
                C20324 +
            (C20525 - C20526 + C20527 - C20528 + C20529 - C20530 + C20531 -
             C20532) *
                C20327 +
            (C20533 - C20534 + C20535 - C20536 + C20537 - C20538 + C20539 -
             C20540) *
                C32053) *
               C31955 * C31925 * C440 +
           ((C14735 - C14734 + C14737 - C14736 + C14739 - C14738 + C14741 -
             C14740) *
                C20326 +
            (C14743 - C14742 + C14745 - C14744 + C14747 - C14746 + C14749 -
             C14748) *
                C20324 +
            (C15270 - C15271 + C15272 - C15273 + C15274 - C15275 + C15276 -
             C15277) *
                C20327 +
            (C15278 - C15279 + C15280 - C15281 + C15282 - C15283 + C15284 -
             C15285) *
                C32053) *
               C31955 * C31925 * C441) *
              C442 +
          (((C14631 * C120 - C32279 * C127 + C14632 * C121 - C32272 * C128 +
             C14633 * C122 - C32259 * C129 + C14634 * C123 - C32242 * C130) *
                C20326 +
            (C14631 * C132 - C32279 * C141 + C14632 * C133 - C32272 * C142 +
             C14633 * C134 - C32259 * C143 + C14634 * C135 - C32242 * C144) *
                C20324 +
            (C14631 * C319 - C32279 * C329 + C14632 * C320 - C32272 * C330 +
             C14633 * C321 - C32259 * C331 + C14634 * C322 - C32242 * C332) *
                C20327 +
            (C14631 * C334 - C32279 * C349 + C14632 * C335 - C32272 * C350 +
             C14633 * C336 - C32259 * C351 + C14634 * C337 - C32242 * C352) *
                C32053) *
               C31955 * C31925 * C440 +
           ((C14995 - C14994 + C14997 - C14996 + C14999 - C14998 + C15001 -
             C15000) *
                C20326 +
            (C15003 - C15002 + C15005 - C15004 + C15007 - C15006 + C15009 -
             C15008) *
                C20324 +
            (C32279 * C624 - C14631 * C619 + C32272 * C625 - C14632 * C620 +
             C32259 * C626 - C14633 * C621 + C32242 * C627 - C14634 * C622) *
                C20327 +
            (C32279 * C634 - C14631 * C629 + C32272 * C635 - C14632 * C630 +
             C32259 * C636 - C14633 * C631 + C32242 * C637 - C14634 * C632) *
                C32053) *
               C31955 * C31925 * C441) *
              C443)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C15383 * C126 - C15389 * C119 + C31872 * C127 - C15390 * C120) *
                 C20326 +
             (C15383 * C140 - C15389 * C131 + C31872 * C141 - C15390 * C132) *
                 C20324 +
             (C16530 - C16531 + C16532 - C16533) * C20327 +
             (C16534 - C16535 + C16536 - C16537) * C32053) *
                C32273 +
            ((C15490 - C15491 + C15492 - C15493) * C20326 +
             (C15494 - C15495 + C15496 - C15497) * C20324 + C17200 * C20327 +
             C17201 * C32053) *
                C32261 +
            C21261 * C32238) *
               C31925 * C440 +
           (((C15491 - C15490 + C15493 - C15492) * C20326 +
             (C15495 - C15494 + C15497 - C15496) * C20324 + C17202 * C20327 +
             C17203 * C32053) *
                C32273 +
            ((C15499 - C15498 + C15501 - C15500) * C20326 +
             (C15503 - C15502 + C15505 - C15504) * C20324 + C20225 * C20327 +
             C20226 * C32053) *
                C32261 +
            ((C15507 - C15506 + C15509 - C15508) * C20326 +
             (C15511 - C15510 + C15513 - C15512) * C20324 +
             (C16068 - C16069 + C16070 - C16071) * C20327 +
             (C16072 - C16073 + C16074 - C16075) * C32053) *
                C32238) *
               C31925 * C441) *
              C442 +
          ((((C15389 * C120 - C15383 * C127 + C15390 * C121 - C31872 * C128) *
                 C20326 +
             (C15389 * C132 - C15383 * C141 + C15390 * C133 - C31872 * C142) *
                 C20324 +
             (C16978 - C16979 + C16980 - C16981) * C20327 +
             (C16982 - C16983 + C16984 - C16985) * C32053) *
                C32273 +
            ((C15768 - C15769 + C15770 - C15771) * C20326 +
             (C15772 - C15773 + C15774 - C15775) * C20324 +
             (C16768 - C16769 + C16770 - C16771) * C20327 +
             (C16772 - C16773 + C16774 - C16775) * C32053) *
                C32261 +
            ((C15776 - C15777 + C15778 - C15779) * C20326 +
             (C15780 - C15781 + C15782 - C15783) * C20324 +
             (C19825 - C19826 + C19827 - C19828) * C20327 +
             (C19829 - C19830 + C19831 - C19832) * C32053) *
                C32238) *
               C31925 * C440 +
           (((C15769 - C15768 + C15771 - C15770) * C20326 +
             (C15773 - C15772 + C15775 - C15774) * C20324 +
             (C16769 - C16768 + C16771 - C16770) * C20327 +
             (C16773 - C16772 + C16775 - C16774) * C32053) *
                C32273 +
            ((C15777 - C15776 + C15779 - C15778) * C20326 +
             (C15781 - C15780 + C15783 - C15782) * C20324 +
             (C19826 - C19825 + C19828 - C19827) * C20327 +
             (C19830 - C19829 + C19832 - C19831) * C32053) *
                C32261 +
            ((C15785 - C15784 + C15787 - C15786) * C20326 +
             (C15789 - C15788 + C15791 - C15790) * C20324 +
             (C15383 * C1560 - C15389 * C1557 + C31872 * C1561 -
              C15390 * C1558) *
                 C20327 +
             (C15383 * C1566 - C15389 * C1563 + C31872 * C1567 -
              C15390 * C1564) *
                 C32053) *
                C32238) *
               C31925 * C441) *
              C443)) /
            (p * q * std::sqrt(p + q));
    d2ee[96] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C32279 * C126 - C14631 * C119 + C32272 * C127 - C14632 * C120 +
             C32259 * C128 - C14633 * C121 + C32242 * C129 - C14634 * C122) *
                C20326 +
            (C32279 * C140 - C14631 * C131 + C32272 * C141 - C14632 * C132 +
             C32259 * C142 - C14633 * C133 + C32242 * C143 - C14634 * C134) *
                C20324 +
            (C20525 - C20526 + C20527 - C20528 + C20529 - C20530 + C20531 -
             C20532) *
                C20327 +
            (C20533 - C20534 + C20535 - C20536 + C20537 - C20538 + C20539 -
             C20540) *
                C32053) *
               C31955 * C530 +
           ((C20526 - C20525 + C20528 - C20527 + C20530 - C20529 + C20532 -
             C20531) *
                C20326 +
            (C20534 - C20533 + C20536 - C20535 + C20538 - C20537 + C20540 -
             C20539) *
                C20324 +
            (C20541 - C20542 + C20543 - C20544 + C20545 - C20546 + C20547 -
             C20548) *
                C20327 +
            (C20549 - C20550 + C20551 - C20552 + C20553 - C20554 + C20555 -
             C20556) *
                C32053) *
               C31955 * C531) *
              C440 +
          (((C14735 - C14734 + C14737 - C14736 + C14739 - C14738 + C14741 -
             C14740) *
                C20326 +
            (C14743 - C14742 + C14745 - C14744 + C14747 - C14746 + C14749 -
             C14748) *
                C20324 +
            (C15270 - C15271 + C15272 - C15273 + C15274 - C15275 + C15276 -
             C15277) *
                C20327 +
            (C15278 - C15279 + C15280 - C15281 + C15282 - C15283 + C15284 -
             C15285) *
                C32053) *
               C31955 * C530 +
           ((C15271 - C15270 + C15273 - C15272 + C15275 - C15274 + C15277 -
             C15276) *
                C20326 +
            (C15279 - C15278 + C15281 - C15280 + C15283 - C15282 + C15285 -
             C15284) *
                C20324 +
            (C32279 * C1065 - C14631 * C1053 + C32272 * C1066 - C14632 * C1054 +
             C32259 * C1067 - C14633 * C1055 + C32242 * C2145 -
             C14634 * C2144) *
                C20327 +
            (C32279 * C1080 - C14631 * C1068 + C32272 * C1081 - C14632 * C1069 +
             C32259 * C1082 - C14633 * C1070 + C32242 * C2147 -
             C14634 * C2146) *
                C32053) *
               C31955 * C531) *
              C441) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C15383 * C126 - C15389 * C119 + C31872 * C127 - C15390 * C120) *
                 C20326 +
             (C15383 * C140 - C15389 * C131 + C31872 * C141 - C15390 * C132) *
                 C20324 +
             (C16530 - C16531 + C16532 - C16533) * C20327 +
             (C16534 - C16535 + C16536 - C16537) * C32053) *
                C32273 +
            ((C15490 - C15491 + C15492 - C15493) * C20326 +
             (C15494 - C15495 + C15496 - C15497) * C20324 + C17200 * C20327 +
             C17201 * C32053) *
                C32261 +
            C21261 * C32238) *
               C530 +
           (((C16531 - C16530 + C16533 - C16532) * C20326 +
             (C16535 - C16534 + C16537 - C16536) * C20324 +
             (C16539 - C16538 + C16541 - C16540) * C20327 +
             (C16543 - C16542 + C16545 - C16544) * C32053) *
                C32273 +
            (C17202 * C20326 + C17203 * C20324 + C17204 * C20327 +
             C17205 * C32053) *
                C32261 +
            (C20225 * C20326 + C20226 * C20324 +
             (C16376 - C16377 + C16378 - C16379) * C20327 +
             (C16380 - C16381 + C16382 - C16383) * C32053) *
                C32238) *
               C531) *
              C440 +
          ((((C15491 - C15490 + C15493 - C15492) * C20326 +
             (C15495 - C15494 + C15497 - C15496) * C20324 + C17202 * C20327 +
             C17203 * C32053) *
                C32273 +
            ((C15499 - C15498 + C15501 - C15500) * C20326 +
             (C15503 - C15502 + C15505 - C15504) * C20324 + C20225 * C20327 +
             C20226 * C32053) *
                C32261 +
            ((C15507 - C15506 + C15509 - C15508) * C20326 +
             (C15511 - C15510 + C15513 - C15512) * C20324 +
             (C16068 - C16069 + C16070 - C16071) * C20327 +
             (C16072 - C16073 + C16074 - C16075) * C32053) *
                C32238) *
               C530 +
           ((C17200 * C20326 + C17201 * C20324 + C16570 * C20327 +
             C16571 * C32053) *
                C32273 +
            (C19479 * C20326 + C19480 * C20324 +
             (C16377 - C16376 + C16379 - C16378) * C20327 +
             (C16381 - C16380 + C16383 - C16382) * C32053) *
                C32261 +
            ((C16069 - C16068 + C16071 - C16070) * C20326 +
             (C16073 - C16072 + C16075 - C16074) * C20324 +
             (C15383 * C6153 - C15389 * C6149 + C31872 * C6990 -
              C15390 * C6989) *
                 C20327 +
             (C15383 * C6158 - C15389 * C6154 + C31872 * C6992 -
              C15390 * C6991) *
                 C32053) *
                C32238) *
               C531) *
              C441) *
         C31899) /
            (p * q * std::sqrt(p + q));
    d2ee[97] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C32279 * C126 - C14631 * C119 + C32272 * C127 - C14632 * C120 +
            C32259 * C128 - C14633 * C121 + C32242 * C129 - C14634 * C122) *
               C20326 +
           (C32279 * C140 - C14631 * C131 + C32272 * C141 - C14632 * C132 +
            C32259 * C142 - C14633 * C133 + C32242 * C143 - C14634 * C134) *
               C20324 +
           (C32279 * C328 - C14631 * C318 + C32272 * C329 - C14632 * C319 +
            C32259 * C330 - C14633 * C320 + C32242 * C331 - C14634 * C321) *
               C20327 +
           (C32279 * C348 - C14631 * C333 + C32272 * C349 - C14632 * C334 +
            C32259 * C350 - C14633 * C335 + C32242 * C351 - C14634 * C336) *
               C32053) *
              C31955 * C31925 * C209 +
          ((C14735 - C14734 + C14737 - C14736 + C14739 - C14738 + C14741 -
            C14740) *
               C20326 +
           (C14743 - C14742 + C14745 - C14744 + C14747 - C14746 + C14749 -
            C14748) *
               C20324 +
           (C15270 - C15271 + C15272 - C15273 + C15274 - C15275 + C15276 -
            C15277) *
               C20327 +
           (C15278 - C15279 + C15280 - C15281 + C15282 - C15283 + C15284 -
            C15285) *
               C32053) *
              C31955 * C31925 * C210 +
          ((C14751 - C14750 + C14753 - C14752 + C14755 - C14754 + C14757 -
            C14756) *
               C20326 +
           (C14759 - C14758 + C14761 - C14760 + C14763 - C14762 + C14765 -
            C14764) *
               C20324 +
           (C32279 * C1059 - C14631 * C1050 + C32272 * C1060 - C14632 * C1051 +
            C32259 * C1061 - C14633 * C1052 + C32242 * C1407 - C14634 * C1406) *
               C20327 +
           (C32279 * C1077 - C14631 * C1062 + C32272 * C1078 - C14632 * C1063 +
            C32259 * C1079 - C14633 * C1064 + C32242 * C1409 - C14634 * C1408) *
               C32053) *
              C31955 * C31925 * C211) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C32279 * C126 - C14631 * C119 + C32272 * C127 - C14632 * C120 +
            C32259 * C128 - C14633 * C121 + C32242 * C129 - C14634 * C122) *
               C20326 +
           (C32279 * C140 - C14631 * C131 + C32272 * C141 - C14632 * C132 +
            C32259 * C142 - C14633 * C133 + C32242 * C143 - C14634 * C134) *
               C20324 +
           (C32279 * C328 - C14631 * C318 + C32272 * C329 - C14632 * C319 +
            C32259 * C330 - C14633 * C320 + C32242 * C331 - C14634 * C321) *
               C20327 +
           (C32279 * C348 - C14631 * C333 + C32272 * C349 - C14632 * C334 +
            C32259 * C350 - C14633 * C335 + C32242 * C351 - C14634 * C336) *
               C32053) *
              C31955 * C31925 * C31911 * C110 +
          ((C14631 * C120 - C32279 * C127 + C14632 * C121 - C32272 * C128 +
            C14633 * C122 - C32259 * C129 + C14634 * C123 - C32242 * C130) *
               C20326 +
           (C14631 * C132 - C32279 * C141 + C14632 * C133 - C32272 * C142 +
            C14633 * C134 - C32259 * C143 + C14634 * C135 - C32242 * C144) *
               C20324 +
           (C14631 * C319 - C32279 * C329 + C14632 * C320 - C32272 * C330 +
            C14633 * C321 - C32259 * C331 + C14634 * C322 - C32242 * C332) *
               C20327 +
           (C14631 * C334 - C32279 * C349 + C14632 * C335 - C32272 * C350 +
            C14633 * C336 - C32259 * C351 + C14634 * C337 - C32242 * C352) *
               C32053) *
              C31955 * C31925 * C31911 * C111 +
          ((C32279 * C128 - C14631 * C121 + C32272 * C129 - C14632 * C122 +
            C32259 * C130 - C14633 * C123 + C32242 * C136 - C14634 * C124) *
               C20326 +
           (C32279 * C142 - C14631 * C133 + C32272 * C143 - C14632 * C134 +
            C32259 * C144 - C14633 * C135 + C32242 * C145 - C14634 * C137) *
               C20324 +
           (C32279 * C330 - C14631 * C320 + C32272 * C331 - C14632 * C321 +
            C32259 * C332 - C14633 * C322 + C32242 * C533 - C14634 * C532) *
               C20327 +
           (C32279 * C350 - C14631 * C335 + C32272 * C351 - C14632 * C336 +
            C32259 * C352 - C14633 * C337 + C32242 * C535 - C14634 * C534) *
               C32053) *
              C31955 * C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C32279 * C126 - C14631 * C119 + C32272 * C127 - C14632 * C120 +
            C32259 * C128 - C14633 * C121 + C32242 * C129 - C14634 * C122) *
               C20326 +
           (C32279 * C140 - C14631 * C131 + C32272 * C141 - C14632 * C132 +
            C32259 * C142 - C14633 * C133 + C32242 * C143 - C14634 * C134) *
               C20324 +
           (C20525 - C20526 + C20527 - C20528 + C20529 - C20530 + C20531 -
            C20532) *
               C20327 +
           (C20533 - C20534 + C20535 - C20536 + C20537 - C20538 + C20539 -
            C20540) *
               C32053) *
              C31955 * C315 +
          ((C20526 - C20525 + C20528 - C20527 + C20530 - C20529 + C20532 -
            C20531) *
               C20326 +
           (C20534 - C20533 + C20536 - C20535 + C20538 - C20537 + C20540 -
            C20539) *
               C20324 +
           (C20541 - C20542 + C20543 - C20544 + C20545 - C20546 + C20547 -
            C20548) *
               C20327 +
           (C20549 - C20550 + C20551 - C20552 + C20553 - C20554 + C20555 -
            C20556) *
               C32053) *
              C31955 * C316 +
          ((C20542 - C20541 + C20544 - C20543 + C20546 - C20545 + C20548 -
            C20547) *
               C20326 +
           (C20550 - C20549 + C20552 - C20551 + C20554 - C20553 + C20556 -
            C20555) *
               C20324 +
           (C32279 * C1934 - C14631 * C1928 + C32272 * C1935 - C14632 * C1929 +
            C32259 * C1936 - C14633 * C1930 + C32242 * C2295 - C14634 * C2294) *
               C20327 +
           (C32279 * C1946 - C14631 * C1937 + C32272 * C1947 - C14632 * C1938 +
            C32259 * C1948 - C14633 * C1939 + C32242 * C2297 - C14634 * C2296) *
               C32053) *
              C31955 * C317) *
         C31911 * C31899) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C15383 * C126 - C15389 * C119 + C31872 * C127 - C15390 * C120) *
                C20326 +
            (C15383 * C140 - C15389 * C131 + C31872 * C141 - C15390 * C132) *
                C20324 +
            (C16530 - C16531 + C16532 - C16533) * C20327 +
            (C16534 - C16535 + C16536 - C16537) * C32053) *
               C32273 +
           ((C15490 - C15491 + C15492 - C15493) * C20326 +
            (C15494 - C15495 + C15496 - C15497) * C20324 + C17200 * C20327 +
            C17201 * C32053) *
               C32261 +
           (C15530 * C20326 + C15531 * C20324 + C19479 * C20327 +
            C19480 * C32053) *
               C32238) *
              C31925 * C31911 * C110 +
          (((C15389 * C120 - C15383 * C127 + C15390 * C121 - C31872 * C128) *
                C20326 +
            (C15389 * C132 - C15383 * C141 + C15390 * C133 - C31872 * C142) *
                C20324 +
            (C16978 - C16979 + C16980 - C16981) * C20327 +
            (C16982 - C16983 + C16984 - C16985) * C32053) *
               C32273 +
           ((C15768 - C15769 + C15770 - C15771) * C20326 +
            (C15772 - C15773 + C15774 - C15775) * C20324 +
            (C16768 - C16769 + C16770 - C16771) * C20327 +
            (C16772 - C16773 + C16774 - C16775) * C32053) *
               C32261 +
           ((C15776 - C15777 + C15778 - C15779) * C20326 +
            (C15780 - C15781 + C15782 - C15783) * C20324 +
            (C19825 - C19826 + C19827 - C19828) * C20327 +
            (C19829 - C19830 + C19831 - C19832) * C32053) *
               C32238) *
              C31925 * C31911 * C111 +
          (((C15383 * C128 - C15389 * C121 + C31872 * C129 - C15390 * C122) *
                C20326 +
            (C15383 * C142 - C15389 * C133 + C31872 * C143 - C15390 * C134) *
                C20324 +
            (C15383 * C330 - C15389 * C320 + C31872 * C331 - C15390 * C321) *
                C20327 +
            (C15383 * C350 - C15389 * C335 + C31872 * C351 - C15390 * C336) *
                C32053) *
               C32273 +
           ((C15383 * C225 - C15389 * C215 + C31872 * C226 - C15390 * C216) *
                C20326 +
            (C15383 * C245 - C15389 * C230 + C31872 * C246 - C15390 * C231) *
                C20324 +
            (C15383 * C625 - C15389 * C620 + C31872 * C626 - C15390 * C621) *
                C20327 +
            (C15383 * C635 - C15389 * C630 + C31872 * C636 - C15390 * C631) *
                C32053) *
               C32261 +
           ((C15383 * C235 - C15389 * C220 + C31872 * C236 - C15390 * C221) *
                C20326 +
            (C15383 * C250 - C15389 * C240 + C31872 * C251 - C15390 * C241) *
                C20324 +
            (C15383 * C1061 - C15389 * C1052 + C31872 * C1407 -
             C15390 * C1406) *
                C20327 +
            (C15383 * C1079 - C15389 * C1064 + C31872 * C1409 -
             C15390 * C1408) *
                C32053) *
               C32238) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C15383 * C126 - C15389 * C119 + C31872 * C127 - C15390 * C120) *
                C20326 +
            (C15383 * C140 - C15389 * C131 + C31872 * C141 - C15390 * C132) *
                C20324 +
            (C16530 - C16531 + C16532 - C16533) * C20327 +
            (C16534 - C16535 + C16536 - C16537) * C32053) *
               C32273 +
           ((C15490 - C15491 + C15492 - C15493) * C20326 +
            (C15494 - C15495 + C15496 - C15497) * C20324 + C17200 * C20327 +
            C17201 * C32053) *
               C32261 +
           C21261 * C32238) *
              C31925 * C209 +
          (((C15491 - C15490 + C15493 - C15492) * C20326 +
            (C15495 - C15494 + C15497 - C15496) * C20324 + C17202 * C20327 +
            C17203 * C32053) *
               C32273 +
           ((C15499 - C15498 + C15501 - C15500) * C20326 +
            (C15503 - C15502 + C15505 - C15504) * C20324 + C20225 * C20327 +
            C20226 * C32053) *
               C32261 +
           ((C15507 - C15506 + C15509 - C15508) * C20326 +
            (C15511 - C15510 + C15513 - C15512) * C20324 +
            (C16068 - C16069 + C16070 - C16071) * C20327 +
            (C16072 - C16073 + C16074 - C16075) * C32053) *
               C32238) *
              C31925 * C210 +
          (C21261 * C32273 +
           (C15532 * C20326 + C15533 * C20324 +
            (C16069 - C16068 + C16071 - C16070) * C20327 +
            (C16073 - C16072 + C16075 - C16074) * C32053) *
               C32261 +
           ((C15515 - C15514 + C15517 - C15516) * C20326 +
            (C15519 - C15518 + C15521 - C15520) * C20324 +
            (C15383 * C6151 - C15389 * C6148 + C31872 * C6345 -
             C15390 * C6344) *
                C20327 +
            (C15383 * C6157 - C15389 * C6152 + C31872 * C6347 -
             C15390 * C6346) *
                C32053) *
               C32238) *
              C31925 * C211) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C15383 * C126 - C15389 * C119 + C31872 * C127 - C15390 * C120) *
                C20326 +
            (C15383 * C140 - C15389 * C131 + C31872 * C141 - C15390 * C132) *
                C20324 +
            (C16530 - C16531 + C16532 - C16533) * C20327 +
            (C16534 - C16535 + C16536 - C16537) * C32053) *
               C32273 +
           ((C15490 - C15491 + C15492 - C15493) * C20326 +
            (C15494 - C15495 + C15496 - C15497) * C20324 + C17200 * C20327 +
            C17201 * C32053) *
               C32261 +
           C21261 * C32238) *
              C315 +
          (((C16531 - C16530 + C16533 - C16532) * C20326 +
            (C16535 - C16534 + C16537 - C16536) * C20324 +
            (C16539 - C16538 + C16541 - C16540) * C20327 +
            (C16543 - C16542 + C16545 - C16544) * C32053) *
               C32273 +
           (C17202 * C20326 + C17203 * C20324 + C17204 * C20327 +
            C17205 * C32053) *
               C32261 +
           (C20225 * C20326 + C20226 * C20324 +
            (C16376 - C16377 + C16378 - C16379) * C20327 +
            (C16380 - C16381 + C16382 - C16383) * C32053) *
               C32238) *
              C316 +
          ((C16572 * C20326 + C16573 * C20324 +
            (C16551 - C16550 + C16553 - C16552) * C20327 +
            (C16555 - C16554 + C16557 - C16556) * C32053) *
               C32273 +
           (C16570 * C20326 + C16571 * C20324 +
            (C16559 - C16558 + C16561 - C16560) * C20327 +
            (C16563 - C16562 + C16565 - C16564) * C32053) *
               C32261 +
           ((C16377 - C16376 + C16379 - C16378) * C20326 +
            (C16381 - C16380 + C16383 - C16382) * C20324 +
            (C15383 * C6810 - C15389 * C6807 + C31872 * C7156 -
             C15390 * C7155) *
                C20327 +
            (C15383 * C6816 - C15389 * C6811 + C31872 * C7158 -
             C15390 * C7157) *
                C32053) *
               C32238) *
              C317) *
         C31911 * C31899) /
            (p * q * std::sqrt(p + q));
    d2ee[98] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C32279 * C126 - C14631 * C119 + C32272 * C127 - C14632 * C120 +
             C32259 * C128 - C14633 * C121 + C32242 * C129 - C14634 * C122) *
                C20326 +
            (C32279 * C140 - C14631 * C131 + C32272 * C141 - C14632 * C132 +
             C32259 * C142 - C14633 * C133 + C32242 * C143 - C14634 * C134) *
                C20324 +
            (C20525 - C20526 + C20527 - C20528 + C20529 - C20530 + C20531 -
             C20532) *
                C20327 +
            (C20533 - C20534 + C20535 - C20536 + C20537 - C20538 + C20539 -
             C20540) *
                C32053) *
               C31955 * C530 +
           ((C20526 - C20525 + C20528 - C20527 + C20530 - C20529 + C20532 -
             C20531) *
                C20326 +
            (C20534 - C20533 + C20536 - C20535 + C20538 - C20537 + C20540 -
             C20539) *
                C20324 +
            (C20541 - C20542 + C20543 - C20544 + C20545 - C20546 + C20547 -
             C20548) *
                C20327 +
            (C20549 - C20550 + C20551 - C20552 + C20553 - C20554 + C20555 -
             C20556) *
                C32053) *
               C31955 * C531) *
              C31911 * C442 +
          (((C14631 * C120 - C32279 * C127 + C14632 * C121 - C32272 * C128 +
             C14633 * C122 - C32259 * C129 + C14634 * C123 - C32242 * C130) *
                C20326 +
            (C14631 * C132 - C32279 * C141 + C14632 * C133 - C32272 * C142 +
             C14633 * C134 - C32259 * C143 + C14634 * C135 - C32242 * C144) *
                C20324 +
            (C20817 - C20818 + C20819 - C20820 + C20821 - C20822 + C20823 -
             C20824) *
                C20327 +
            (C20825 - C20826 + C20827 - C20828 + C20829 - C20830 + C20831 -
             C20832) *
                C32053) *
               C31955 * C530 +
           ((C20818 - C20817 + C20820 - C20819 + C20822 - C20821 + C20824 -
             C20823) *
                C20326 +
            (C20826 - C20825 + C20828 - C20827 + C20830 - C20829 + C20832 -
             C20831) *
                C20324 +
            (C32279 * C339 - C14631 * C324 + C32272 * C340 - C14632 * C325 +
             C32259 * C341 - C14633 * C326 + C32242 * C342 - C14634 * C327) *
                C20327 +
            (C32279 * C354 - C14631 * C344 + C32272 * C355 - C14632 * C345 +
             C32259 * C356 - C14633 * C346 + C32242 * C357 - C14634 * C347) *
                C32053) *
               C31955 * C531) *
              C31911 * C443)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C15383 * C126 - C15389 * C119 + C31872 * C127 - C15390 * C120) *
                 C20326 +
             (C15383 * C140 - C15389 * C131 + C31872 * C141 - C15390 * C132) *
                 C20324 +
             (C16530 - C16531 + C16532 - C16533) * C20327 +
             (C16534 - C16535 + C16536 - C16537) * C32053) *
                C32273 +
            ((C15490 - C15491 + C15492 - C15493) * C20326 +
             (C15494 - C15495 + C15496 - C15497) * C20324 + C17200 * C20327 +
             C17201 * C32053) *
                C32261 +
            C21261 * C32238) *
               C530 +
           (((C16531 - C16530 + C16533 - C16532) * C20326 +
             (C16535 - C16534 + C16537 - C16536) * C20324 +
             (C16539 - C16538 + C16541 - C16540) * C20327 +
             (C16543 - C16542 + C16545 - C16544) * C32053) *
                C32273 +
            (C17202 * C20326 + C17203 * C20324 + C17204 * C20327 +
             C17205 * C32053) *
                C32261 +
            (C20225 * C20326 + C20226 * C20324 +
             (C16376 - C16377 + C16378 - C16379) * C20327 +
             (C16380 - C16381 + C16382 - C16383) * C32053) *
                C32238) *
               C531) *
              C31911 * C442 +
          ((((C15389 * C120 - C15383 * C127 + C15390 * C121 - C31872 * C128) *
                 C20326 +
             (C15389 * C132 - C15383 * C141 + C15390 * C133 - C31872 * C142) *
                 C20324 +
             (C16978 - C16979 + C16980 - C16981) * C20327 +
             (C16982 - C16983 + C16984 - C16985) * C32053) *
                C32273 +
            ((C15768 - C15769 + C15770 - C15771) * C20326 +
             (C15772 - C15773 + C15774 - C15775) * C20324 +
             (C16768 - C16769 + C16770 - C16771) * C20327 +
             (C16772 - C16773 + C16774 - C16775) * C32053) *
                C32261 +
            ((C15776 - C15777 + C15778 - C15779) * C20326 +
             (C15780 - C15781 + C15782 - C15783) * C20324 +
             (C19825 - C19826 + C19827 - C19828) * C20327 +
             (C19829 - C19830 + C19831 - C19832) * C32053) *
                C32238) *
               C530 +
           (((C16979 - C16978 + C16981 - C16980) * C20326 +
             (C16983 - C16982 + C16985 - C16984) * C20324 +
             (C16987 - C16986 + C16989 - C16988) * C20327 +
             (C16991 - C16990 + C16993 - C16992) * C32053) *
                C32273 +
            ((C16769 - C16768 + C16771 - C16770) * C20326 +
             (C16773 - C16772 + C16775 - C16774) * C20324 +
             (C16777 - C16776 + C16779 - C16778) * C20327 +
             (C16781 - C16780 + C16783 - C16782) * C32053) *
                C32261 +
            ((C19826 - C19825 + C19828 - C19827) * C20326 +
             (C19830 - C19829 + C19832 - C19831) * C20324 +
             (C15383 * C1072 - C15389 * C1057 + C31872 * C1073 -
              C15390 * C1058) *
                 C20327 +
             (C15383 * C1084 - C15389 * C1075 + C31872 * C1085 -
              C15390 * C1076) *
                 C32053) *
                C32238) *
               C531) *
              C31911 * C443)) /
            (p * q * std::sqrt(p + q));
    d2ee[99] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C32279 * C126 - C14631 * C119 + C32272 * C127 - C14632 * C120 +
            C32259 * C128 - C14633 * C121 + C32242 * C129 - C14634 * C122) *
               C20326 +
           (C32279 * C140 - C14631 * C131 + C32272 * C141 - C14632 * C132 +
            C32259 * C142 - C14633 * C133 + C32242 * C143 - C14634 * C134) *
               C20324 +
           (C32279 * C328 - C14631 * C318 + C32272 * C329 - C14632 * C319 +
            C32259 * C330 - C14633 * C320 + C32242 * C331 - C14634 * C321) *
               C20327 +
           (C32279 * C348 - C14631 * C333 + C32272 * C349 - C14632 * C334 +
            C32259 * C350 - C14633 * C335 + C32242 * C351 - C14634 * C336) *
               C32053) *
              C31955 * C31925 * C31911 * C110 +
          ((C14631 * C120 - C32279 * C127 + C14632 * C121 - C32272 * C128 +
            C14633 * C122 - C32259 * C129 + C14634 * C123 - C32242 * C130) *
               C20326 +
           (C14631 * C132 - C32279 * C141 + C14632 * C133 - C32272 * C142 +
            C14633 * C134 - C32259 * C143 + C14634 * C135 - C32242 * C144) *
               C20324 +
           (C14631 * C319 - C32279 * C329 + C14632 * C320 - C32272 * C330 +
            C14633 * C321 - C32259 * C331 + C14634 * C322 - C32242 * C332) *
               C20327 +
           (C14631 * C334 - C32279 * C349 + C14632 * C335 - C32272 * C350 +
            C14633 * C336 - C32259 * C351 + C14634 * C337 - C32242 * C352) *
               C32053) *
              C31955 * C31925 * C31911 * C111 +
          ((C32279 * C128 - C14631 * C121 + C32272 * C129 - C14632 * C122 +
            C32259 * C130 - C14633 * C123 + C32242 * C136 - C14634 * C124) *
               C20326 +
           (C32279 * C142 - C14631 * C133 + C32272 * C143 - C14632 * C134 +
            C32259 * C144 - C14633 * C135 + C32242 * C145 - C14634 * C137) *
               C20324 +
           (C32279 * C330 - C14631 * C320 + C32272 * C331 - C14632 * C321 +
            C32259 * C332 - C14633 * C322 + C32242 * C533 - C14634 * C532) *
               C20327 +
           (C32279 * C350 - C14631 * C335 + C32272 * C351 - C14632 * C336 +
            C32259 * C352 - C14633 * C337 + C32242 * C535 - C14634 * C534) *
               C32053) *
              C31955 * C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C32279 * C126 - C14631 * C119 + C32272 * C127 - C14632 * C120 +
            C32259 * C128 - C14633 * C121 + C32242 * C129 - C14634 * C122) *
               C20326 +
           (C32279 * C140 - C14631 * C131 + C32272 * C141 - C14632 * C132 +
            C32259 * C142 - C14633 * C133 + C32242 * C143 - C14634 * C134) *
               C20324 +
           (C32279 * C328 - C14631 * C318 + C32272 * C329 - C14632 * C319 +
            C32259 * C330 - C14633 * C320 + C32242 * C331 - C14634 * C321) *
               C20327 +
           (C32279 * C348 - C14631 * C333 + C32272 * C349 - C14632 * C334 +
            C32259 * C350 - C14633 * C335 + C32242 * C351 - C14634 * C336) *
               C32053) *
              C31955 * C31925 * C209 +
          ((C14735 - C14734 + C14737 - C14736 + C14739 - C14738 + C14741 -
            C14740) *
               C20326 +
           (C14743 - C14742 + C14745 - C14744 + C14747 - C14746 + C14749 -
            C14748) *
               C20324 +
           (C15270 - C15271 + C15272 - C15273 + C15274 - C15275 + C15276 -
            C15277) *
               C20327 +
           (C15278 - C15279 + C15280 - C15281 + C15282 - C15283 + C15284 -
            C15285) *
               C32053) *
              C31955 * C31925 * C210 +
          ((C14751 - C14750 + C14753 - C14752 + C14755 - C14754 + C14757 -
            C14756) *
               C20326 +
           (C14759 - C14758 + C14761 - C14760 + C14763 - C14762 + C14765 -
            C14764) *
               C20324 +
           (C32279 * C1059 - C14631 * C1050 + C32272 * C1060 - C14632 * C1051 +
            C32259 * C1061 - C14633 * C1052 + C32242 * C1407 - C14634 * C1406) *
               C20327 +
           (C32279 * C1077 - C14631 * C1062 + C32272 * C1078 - C14632 * C1063 +
            C32259 * C1079 - C14633 * C1064 + C32242 * C1409 - C14634 * C1408) *
               C32053) *
              C31955 * C31925 * C211) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C15383 * C126 - C15389 * C119 + C31872 * C127 - C15390 * C120) *
                C20326 +
            (C15383 * C140 - C15389 * C131 + C31872 * C141 - C15390 * C132) *
                C20324 +
            (C16530 - C16531 + C16532 - C16533) * C20327 +
            (C16534 - C16535 + C16536 - C16537) * C32053) *
               C32273 +
           ((C15490 - C15491 + C15492 - C15493) * C20326 +
            (C15494 - C15495 + C15496 - C15497) * C20324 + C17200 * C20327 +
            C17201 * C32053) *
               C32261 +
           (C15530 * C20326 + C15531 * C20324 + C19479 * C20327 +
            C19480 * C32053) *
               C32238) *
              C31925 * C31911 * C110 +
          (((C15389 * C120 - C15383 * C127 + C15390 * C121 - C31872 * C128) *
                C20326 +
            (C15389 * C132 - C15383 * C141 + C15390 * C133 - C31872 * C142) *
                C20324 +
            (C16978 - C16979 + C16980 - C16981) * C20327 +
            (C16982 - C16983 + C16984 - C16985) * C32053) *
               C32273 +
           ((C15768 - C15769 + C15770 - C15771) * C20326 +
            (C15772 - C15773 + C15774 - C15775) * C20324 +
            (C16768 - C16769 + C16770 - C16771) * C20327 +
            (C16772 - C16773 + C16774 - C16775) * C32053) *
               C32261 +
           ((C15776 - C15777 + C15778 - C15779) * C20326 +
            (C15780 - C15781 + C15782 - C15783) * C20324 +
            (C19825 - C19826 + C19827 - C19828) * C20327 +
            (C19829 - C19830 + C19831 - C19832) * C32053) *
               C32238) *
              C31925 * C31911 * C111 +
          (((C15383 * C128 - C15389 * C121 + C31872 * C129 - C15390 * C122) *
                C20326 +
            (C15383 * C142 - C15389 * C133 + C31872 * C143 - C15390 * C134) *
                C20324 +
            (C15383 * C330 - C15389 * C320 + C31872 * C331 - C15390 * C321) *
                C20327 +
            (C15383 * C350 - C15389 * C335 + C31872 * C351 - C15390 * C336) *
                C32053) *
               C32273 +
           ((C15383 * C225 - C15389 * C215 + C31872 * C226 - C15390 * C216) *
                C20326 +
            (C15383 * C245 - C15389 * C230 + C31872 * C246 - C15390 * C231) *
                C20324 +
            (C15383 * C625 - C15389 * C620 + C31872 * C626 - C15390 * C621) *
                C20327 +
            (C15383 * C635 - C15389 * C630 + C31872 * C636 - C15390 * C631) *
                C32053) *
               C32261 +
           ((C15383 * C235 - C15389 * C220 + C31872 * C236 - C15390 * C221) *
                C20326 +
            (C15383 * C250 - C15389 * C240 + C31872 * C251 - C15390 * C241) *
                C20324 +
            (C15383 * C1061 - C15389 * C1052 + C31872 * C1407 -
             C15390 * C1406) *
                C20327 +
            (C15383 * C1079 - C15389 * C1064 + C31872 * C1409 -
             C15390 * C1408) *
                C32053) *
               C32238) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C15383 * C126 - C15389 * C119 + C31872 * C127 - C15390 * C120) *
                C20326 +
            (C15383 * C140 - C15389 * C131 + C31872 * C141 - C15390 * C132) *
                C20324 +
            (C16530 - C16531 + C16532 - C16533) * C20327 +
            (C16534 - C16535 + C16536 - C16537) * C32053) *
               C32273 +
           ((C15490 - C15491 + C15492 - C15493) * C20326 +
            (C15494 - C15495 + C15496 - C15497) * C20324 + C17200 * C20327 +
            C17201 * C32053) *
               C32261 +
           C21261 * C32238) *
              C31925 * C209 +
          (((C15491 - C15490 + C15493 - C15492) * C20326 +
            (C15495 - C15494 + C15497 - C15496) * C20324 + C17202 * C20327 +
            C17203 * C32053) *
               C32273 +
           ((C15499 - C15498 + C15501 - C15500) * C20326 +
            (C15503 - C15502 + C15505 - C15504) * C20324 + C20225 * C20327 +
            C20226 * C32053) *
               C32261 +
           ((C15507 - C15506 + C15509 - C15508) * C20326 +
            (C15511 - C15510 + C15513 - C15512) * C20324 +
            (C16068 - C16069 + C16070 - C16071) * C20327 +
            (C16072 - C16073 + C16074 - C16075) * C32053) *
               C32238) *
              C31925 * C210 +
          (C21261 * C32273 +
           (C15532 * C20326 + C15533 * C20324 +
            (C16069 - C16068 + C16071 - C16070) * C20327 +
            (C16073 - C16072 + C16075 - C16074) * C32053) *
               C32261 +
           ((C15515 - C15514 + C15517 - C15516) * C20326 +
            (C15519 - C15518 + C15521 - C15520) * C20324 +
            (C15383 * C6151 - C15389 * C6148 + C31872 * C6345 -
             C15390 * C6344) *
                C20327 +
            (C15383 * C6157 - C15389 * C6152 + C31872 * C6347 -
             C15390 * C6346) *
                C32053) *
               C32238) *
              C31925 * C211) *
         C31899) /
            (p * q * std::sqrt(p + q));
    d2ee[100] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2590 * C126 - C2596 * C119 + C2591 * C127 - C2597 * C120 +
              C2592 * C128 - C2598 * C121 + C32242 * C129 - C2599 * C122) *
                 C118 +
             (C2590 * C140 - C2596 * C131 + C2591 * C141 - C2597 * C132 +
              C2592 * C142 - C2598 * C133 + C32242 * C143 - C2599 * C134) *
                 C31966) *
                C32207 +
            ((C2699 - C2700 + C2701 - C2702 + C2703 - C2704 + C2705 - C2706) *
                 C118 +
             (C2707 - C2708 + C2709 - C2710 + C2711 - C2712 + C2713 - C2714) *
                 C31966) *
                C32013) *
               C31925 * C440 +
           (((C2700 - C2699 + C2702 - C2701 + C2704 - C2703 + C2706 - C2705) *
                 C118 +
             (C2708 - C2707 + C2710 - C2709 + C2712 - C2711 + C2714 - C2713) *
                 C31966) *
                C32207 +
            ((C2715 - C2716 + C2717 - C2718 + C2719 - C2720 + C2721 - C2722) *
                 C118 +
             (C2723 - C2724 + C2725 - C2726 + C2727 - C2728 + C2729 - C2730) *
                 C31966) *
                C32013) *
               C31925 * C441) *
              C442 +
          ((((C2596 * C120 - C2590 * C127 + C2597 * C121 - C2591 * C128 +
              C2598 * C122 - C2592 * C129 + C2599 * C123 - C32242 * C130) *
                 C118 +
             (C2596 * C132 - C2590 * C141 + C2597 * C133 - C2591 * C142 +
              C2598 * C134 - C2592 * C143 + C2599 * C135 - C32242 * C144) *
                 C31966) *
                C32207 +
            ((C2959 - C2960 + C2961 - C2962 + C2963 - C2964 + C2965 - C2966) *
                 C118 +
             (C2967 - C2968 + C2969 - C2970 + C2971 - C2972 + C2973 - C2974) *
                 C31966) *
                C32013) *
               C31925 * C440 +
           (((C2960 - C2959 + C2962 - C2961 + C2964 - C2963 + C2966 - C2965) *
                 C118 +
             (C2968 - C2967 + C2970 - C2969 + C2972 - C2971 + C2974 - C2973) *
                 C31966) *
                C32207 +
            ((C2590 * C234 - C2596 * C219 + C2591 * C235 - C2597 * C220 +
              C2592 * C236 - C2598 * C221 + C32242 * C237 - C2599 * C222) *
                 C118 +
             (C2590 * C249 - C2596 * C239 + C2591 * C250 - C2597 * C240 +
              C2592 * C251 - C2598 * C241 + C32242 * C252 - C2599 * C242) *
                 C31966) *
                C32013) *
               C31925 * C441) *
              C443)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C32188 * C126 - C30873 * C119 + C31872 * C127 - C30854 * C120) *
                 C118 +
             (C32188 * C140 - C30873 * C131 + C31872 * C141 - C30854 * C132) *
                 C31966) *
                C7427 +
            ((C7532 - C7533 + C7534 - C7535) * C118 +
             (C7536 - C7537 + C7538 - C7539) * C31966) *
                C7428 +
            C7580 * C7429 + C7581 * C32248) *
               C31925 * C440 +
           (((C7533 - C7532 + C7535 - C7534) * C118 +
             (C7537 - C7536 + C7539 - C7538) * C31966) *
                C7427 +
            ((C7541 - C7540 + C7543 - C7542) * C118 +
             (C7545 - C7544 + C7547 - C7546) * C31966) *
                C7428 +
            ((C7549 - C7548 + C7551 - C7550) * C118 +
             (C7553 - C7552 + C7555 - C7554) * C31966) *
                C7429 +
            ((C7556 - C7557 + C7558 - C7559) * C118 +
             (C7560 - C7561 + C7562 - C7563) * C31966) *
                C32248) *
               C31925 * C441) *
              C442 +
          ((((C30873 * C120 - C32188 * C127 + C30854 * C121 - C31872 * C128) *
                 C118 +
             (C30873 * C132 - C32188 * C141 + C30854 * C133 - C31872 * C142) *
                 C31966) *
                C7427 +
            ((C7810 - C7811 + C7812 - C7813) * C118 +
             (C7814 - C7815 + C7816 - C7817) * C31966) *
                C7428 +
            ((C7818 - C7819 + C7820 - C7821) * C118 +
             (C7822 - C7823 + C7824 - C7825) * C31966) *
                C7429 +
            ((C7826 - C7827 + C7828 - C7829) * C118 +
             (C7830 - C7831 + C7832 - C7833) * C31966) *
                C32248) *
               C31925 * C440 +
           (((C7811 - C7810 + C7813 - C7812) * C118 +
             (C7815 - C7814 + C7817 - C7816) * C31966) *
                C7427 +
            ((C7819 - C7818 + C7821 - C7820) * C118 +
             (C7823 - C7822 + C7825 - C7824) * C31966) *
                C7428 +
            ((C7827 - C7826 + C7829 - C7828) * C118 +
             (C7831 - C7830 + C7833 - C7832) * C31966) *
                C7429 +
            ((C32188 * C880 - C30873 * C871 + C31872 * C881 - C30854 * C872) *
                 C118 +
             (C32188 * C889 - C30873 * C883 + C31872 * C890 - C30854 * C884) *
                 C31966) *
                C32248) *
               C31925 * C441) *
              C443)) /
            (p * q * std::sqrt(p + q));
    d2ee[101] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2590 * C126 - C2596 * C119 + C2591 * C127 - C2597 * C120 +
              C2592 * C128 - C2598 * C121 + C32242 * C129 - C2599 * C122) *
                 C118 +
             (C2590 * C140 - C2596 * C131 + C2591 * C141 - C2597 * C132 +
              C2592 * C142 - C2598 * C133 + C32242 * C143 - C2599 * C134) *
                 C31966) *
                C32207 +
            ((C2699 - C2700 + C2701 - C2702 + C2703 - C2704 + C2705 - C2706) *
                 C118 +
             (C2707 - C2708 + C2709 - C2710 + C2711 - C2712 + C2713 - C2714) *
                 C31966) *
                C32013) *
               C530 +
           (((C2596 * C318 - C2590 * C328 + C2597 * C319 - C2591 * C329 +
              C2598 * C320 - C2592 * C330 + C2599 * C321 - C32242 * C331) *
                 C118 +
             (C2596 * C333 - C2590 * C348 + C2597 * C334 - C2591 * C349 +
              C2598 * C335 - C2592 * C350 + C2599 * C336 - C32242 * C351) *
                 C31966) *
                C32207 +
            ((C3235 - C3236 + C3237 - C3238 + C3239 - C3240 + C3241 - C3242) *
                 C118 +
             (C3243 - C3244 + C3245 - C3246 + C3247 - C3248 + C3249 - C3250) *
                 C31966) *
                C32013) *
               C531) *
              C440 +
          ((((C2700 - C2699 + C2702 - C2701 + C2704 - C2703 + C2706 - C2705) *
                 C118 +
             (C2708 - C2707 + C2710 - C2709 + C2712 - C2711 + C2714 - C2713) *
                 C31966) *
                C32207 +
            ((C2715 - C2716 + C2717 - C2718 + C2719 - C2720 + C2721 - C2722) *
                 C118 +
             (C2723 - C2724 + C2725 - C2726 + C2727 - C2728 + C2729 - C2730) *
                 C31966) *
                C32013) *
               C530 +
           (((C3236 - C3235 + C3238 - C3237 + C3240 - C3239 + C3242 - C3241) *
                 C118 +
             (C3244 - C3243 + C3246 - C3245 + C3248 - C3247 + C3250 - C3249) *
                 C31966) *
                C32207 +
            ((C2590 * C1059 - C2596 * C1050 + C2591 * C1060 - C2597 * C1051 +
              C2592 * C1061 - C2598 * C1052 + C32242 * C1407 - C2599 * C1406) *
                 C118 +
             (C2590 * C1077 - C2596 * C1062 + C2591 * C1078 - C2597 * C1063 +
              C2592 * C1079 - C2598 * C1064 + C32242 * C1409 - C2599 * C1408) *
                 C31966) *
                C32013) *
               C531) *
              C441) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C32188 * C126 - C30873 * C119 + C31872 * C127 - C30854 * C120) *
                 C118 +
             (C32188 * C140 - C30873 * C131 + C31872 * C141 - C30854 * C132) *
                 C31966) *
                C7427 +
            ((C7532 - C7533 + C7534 - C7535) * C118 +
             (C7536 - C7537 + C7538 - C7539) * C31966) *
                C7428 +
            C7580 * C7429 + C7581 * C32248) *
               C530 +
           (((C30873 * C318 - C32188 * C328 + C30854 * C319 - C31872 * C329) *
                 C118 +
             (C30873 * C333 - C32188 * C348 + C30854 * C334 - C31872 * C349) *
                 C31966) *
                C7427 +
            ((C8094 - C8095 + C8096 - C8097) * C118 +
             (C8098 - C8099 + C8100 - C8101) * C31966) *
                C7428 +
            ((C8102 - C8103 + C8104 - C8105) * C118 +
             (C8106 - C8107 + C8108 - C8109) * C31966) *
                C7429 +
            ((C8110 - C8111 + C8112 - C8113) * C118 +
             (C8114 - C8115 + C8116 - C8117) * C31966) *
                C32248) *
               C531) *
              C440 +
          ((((C7533 - C7532 + C7535 - C7534) * C118 +
             (C7537 - C7536 + C7539 - C7538) * C31966) *
                C7427 +
            ((C7541 - C7540 + C7543 - C7542) * C118 +
             (C7545 - C7544 + C7547 - C7546) * C31966) *
                C7428 +
            ((C7549 - C7548 + C7551 - C7550) * C118 +
             (C7553 - C7552 + C7555 - C7554) * C31966) *
                C7429 +
            ((C7556 - C7557 + C7558 - C7559) * C118 +
             (C7560 - C7561 + C7562 - C7563) * C31966) *
                C32248) *
               C530 +
           (((C8095 - C8094 + C8097 - C8096) * C118 +
             (C8099 - C8098 + C8101 - C8100) * C31966) *
                C7427 +
            ((C8103 - C8102 + C8105 - C8104) * C118 +
             (C8107 - C8106 + C8109 - C8108) * C31966) *
                C7428 +
            ((C8111 - C8110 + C8113 - C8112) * C118 +
             (C8115 - C8114 + C8117 - C8116) * C31966) *
                C7429 +
            ((C32188 * C6151 - C30873 * C6148 + C31872 * C6345 -
              C30854 * C6344) *
                 C118 +
             (C32188 * C6157 - C30873 * C6152 + C31872 * C6347 -
              C30854 * C6346) *
                 C31966) *
                C32248) *
               C531) *
              C441) *
         C31899) /
            (p * q * std::sqrt(p + q));
    d2ee[102] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2590 * C126 - C2596 * C119 + C2591 * C127 - C2597 * C120 +
             C2592 * C128 - C2598 * C121 + C32242 * C129 - C2599 * C122) *
                C118 +
            (C2590 * C140 - C2596 * C131 + C2591 * C141 - C2597 * C132 +
             C2592 * C142 - C2598 * C133 + C32242 * C143 - C2599 * C134) *
                C31966) *
               C32207 +
           ((C2699 - C2700 + C2701 - C2702 + C2703 - C2704 + C2705 - C2706) *
                C118 +
            (C2707 - C2708 + C2709 - C2710 + C2711 - C2712 + C2713 - C2714) *
                C31966) *
               C32013) *
              C31925 * C209 +
          (((C2700 - C2699 + C2702 - C2701 + C2704 - C2703 + C2706 - C2705) *
                C118 +
            (C2708 - C2707 + C2710 - C2709 + C2712 - C2711 + C2714 - C2713) *
                C31966) *
               C32207 +
           ((C2715 - C2716 + C2717 - C2718 + C2719 - C2720 + C2721 - C2722) *
                C118 +
            (C2723 - C2724 + C2725 - C2726 + C2727 - C2728 + C2729 - C2730) *
                C31966) *
               C32013) *
              C31925 * C210 +
          (((C2716 - C2715 + C2718 - C2717 + C2720 - C2719 + C2722 - C2721) *
                C118 +
            (C2724 - C2723 + C2726 - C2725 + C2728 - C2727 + C2730 - C2729) *
                C31966) *
               C32207 +
           ((C2590 * C873 - C2596 * C867 + C2591 * C874 - C2597 * C868 +
             C2592 * C875 - C2598 * C869 + C32242 * C1233 - C2599 * C1232) *
                C118 +
            (C2590 * C885 - C2596 * C876 + C2591 * C886 - C2597 * C877 +
             C2592 * C887 - C2598 * C878 + C32242 * C1235 - C2599 * C1234) *
                C31966) *
               C32013) *
              C31925 * C211) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C2590 * C126 - C2596 * C119 + C2591 * C127 - C2597 * C120 +
             C2592 * C128 - C2598 * C121 + C32242 * C129 - C2599 * C122) *
                C118 +
            (C2590 * C140 - C2596 * C131 + C2591 * C141 - C2597 * C132 +
             C2592 * C142 - C2598 * C133 + C32242 * C143 - C2599 * C134) *
                C31966) *
               C32207 +
           ((C2590 * C223 - C2596 * C213 + C2591 * C224 - C2597 * C214 +
             C2592 * C225 - C2598 * C215 + C32242 * C226 - C2599 * C216) *
                C118 +
            (C2590 * C243 - C2596 * C228 + C2591 * C244 - C2597 * C229 +
             C2592 * C245 - C2598 * C230 + C32242 * C246 - C2599 * C231) *
                C31966) *
               C32013) *
              C31925 * C31911 * C110 +
          (((C2596 * C120 - C2590 * C127 + C2597 * C121 - C2591 * C128 +
             C2598 * C122 - C2592 * C129 + C2599 * C123 - C32242 * C130) *
                C118 +
            (C2596 * C132 - C2590 * C141 + C2597 * C133 - C2591 * C142 +
             C2598 * C134 - C2592 * C143 + C2599 * C135 - C32242 * C144) *
                C31966) *
               C32207 +
           ((C2596 * C214 - C2590 * C224 + C2597 * C215 - C2591 * C225 +
             C2598 * C216 - C2592 * C226 + C2599 * C217 - C32242 * C227) *
                C118 +
            (C2596 * C229 - C2590 * C244 + C2597 * C230 - C2591 * C245 +
             C2598 * C231 - C2592 * C246 + C2599 * C232 - C32242 * C247) *
                C31966) *
               C32013) *
              C31925 * C31911 * C111 +
          (((C2590 * C128 - C2596 * C121 + C2591 * C129 - C2597 * C122 +
             C2592 * C130 - C2598 * C123 + C32242 * C136 - C2599 * C124) *
                C118 +
            (C2590 * C142 - C2596 * C133 + C2591 * C143 - C2597 * C134 +
             C2592 * C144 - C2598 * C135 + C32242 * C145 - C2599 * C137) *
                C31966) *
               C32207 +
           ((C2590 * C225 - C2596 * C215 + C2591 * C226 - C2597 * C216 +
             C2592 * C227 - C2598 * C217 + C32242 * C445 - C2599 * C444) *
                C118 +
            (C2590 * C245 - C2596 * C230 + C2591 * C246 - C2597 * C231 +
             C2592 * C247 - C2598 * C232 + C32242 * C447 - C2599 * C446) *
                C31966) *
               C32013) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C2590 * C126 - C2596 * C119 + C2591 * C127 - C2597 * C120 +
             C2592 * C128 - C2598 * C121 + C32242 * C129 - C2599 * C122) *
                C118 +
            (C2590 * C140 - C2596 * C131 + C2591 * C141 - C2597 * C132 +
             C2592 * C142 - C2598 * C133 + C32242 * C143 - C2599 * C134) *
                C31966) *
               C32207 +
           ((C2699 - C2700 + C2701 - C2702 + C2703 - C2704 + C2705 - C2706) *
                C118 +
            (C2707 - C2708 + C2709 - C2710 + C2711 - C2712 + C2713 - C2714) *
                C31966) *
               C32013) *
              C315 +
          (((C2596 * C318 - C2590 * C328 + C2597 * C319 - C2591 * C329 +
             C2598 * C320 - C2592 * C330 + C2599 * C321 - C32242 * C331) *
                C118 +
            (C2596 * C333 - C2590 * C348 + C2597 * C334 - C2591 * C349 +
             C2598 * C335 - C2592 * C350 + C2599 * C336 - C32242 * C351) *
                C31966) *
               C32207 +
           ((C2596 * C618 - C2590 * C623 + C2597 * C619 - C2591 * C624 +
             C2598 * C620 - C2592 * C625 + C2599 * C621 - C32242 * C626) *
                C118 +
            (C2596 * C628 - C2590 * C633 + C2597 * C629 - C2591 * C634 +
             C2598 * C630 - C2592 * C635 + C2599 * C631 - C32242 * C636) *
                C31966) *
               C32013) *
              C316 +
          (((C2590 * C338 - C2596 * C323 + C2591 * C339 - C2597 * C324 +
             C2592 * C340 - C2598 * C325 + C32242 * C341 - C2599 * C326) *
                C118 +
            (C2590 * C353 - C2596 * C343 + C2591 * C354 - C2597 * C344 +
             C2592 * C355 - C2598 * C345 + C32242 * C356 - C2599 * C346) *
                C31966) *
               C32207 +
           ((C2590 * C1065 - C2596 * C1053 + C2591 * C1066 - C2597 * C1054 +
             C2592 * C1067 - C2598 * C1055 + C32242 * C2145 - C2599 * C2144) *
                C118 +
            (C2590 * C1080 - C2596 * C1068 + C2591 * C1081 - C2597 * C1069 +
             C2592 * C1082 - C2598 * C1070 + C32242 * C2147 - C2599 * C2146) *
                C31966) *
               C32013) *
              C317) *
         C31911 * C31899) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C32188 * C126 - C30873 * C119 + C31872 * C127 - C30854 * C120) *
                C118 +
            (C32188 * C140 - C30873 * C131 + C31872 * C141 - C30854 * C132) *
                C31966) *
               C7427 +
           ((C32188 * C223 - C30873 * C213 + C31872 * C224 - C30854 * C214) *
                C118 +
            (C32188 * C243 - C30873 * C228 + C31872 * C244 - C30854 * C229) *
                C31966) *
               C7428 +
           ((C32188 * C233 - C30873 * C218 + C31872 * C234 - C30854 * C219) *
                C118 +
            (C32188 * C248 - C30873 * C238 + C31872 * C249 - C30854 * C239) *
                C31966) *
               C7429 +
           ((C32188 * C873 - C30873 * C867 + C31872 * C874 - C30854 * C868) *
                C118 +
            (C32188 * C885 - C30873 * C876 + C31872 * C886 - C30854 * C877) *
                C31966) *
               C32248) *
              C31925 * C31911 * C110 +
          (((C30873 * C120 - C32188 * C127 + C30854 * C121 - C31872 * C128) *
                C118 +
            (C30873 * C132 - C32188 * C141 + C30854 * C133 - C31872 * C142) *
                C31966) *
               C7427 +
           ((C30873 * C214 - C32188 * C224 + C30854 * C215 - C31872 * C225) *
                C118 +
            (C30873 * C229 - C32188 * C244 + C30854 * C230 - C31872 * C245) *
                C31966) *
               C7428 +
           ((C30873 * C219 - C32188 * C234 + C30854 * C220 - C31872 * C235) *
                C118 +
            (C30873 * C239 - C32188 * C249 + C30854 * C240 - C31872 * C250) *
                C31966) *
               C7429 +
           ((C30873 * C868 - C32188 * C874 + C30854 * C869 - C31872 * C875) *
                C118 +
            (C30873 * C877 - C32188 * C886 + C30854 * C878 - C31872 * C887) *
                C31966) *
               C32248) *
              C31925 * C31911 * C111 +
          (((C32188 * C128 - C30873 * C121 + C31872 * C129 - C30854 * C122) *
                C118 +
            (C32188 * C142 - C30873 * C133 + C31872 * C143 - C30854 * C134) *
                C31966) *
               C7427 +
           ((C32188 * C225 - C30873 * C215 + C31872 * C226 - C30854 * C216) *
                C118 +
            (C32188 * C245 - C30873 * C230 + C31872 * C246 - C30854 * C231) *
                C31966) *
               C7428 +
           ((C32188 * C235 - C30873 * C220 + C31872 * C236 - C30854 * C221) *
                C118 +
            (C32188 * C250 - C30873 * C240 + C31872 * C251 - C30854 * C241) *
                C31966) *
               C7429 +
           ((C32188 * C875 - C30873 * C869 + C31872 * C1233 - C30854 * C1232) *
                C118 +
            (C32188 * C887 - C30873 * C878 + C31872 * C1235 - C30854 * C1234) *
                C31966) *
               C32248) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C32188 * C126 - C30873 * C119 + C31872 * C127 - C30854 * C120) *
                C118 +
            (C32188 * C140 - C30873 * C131 + C31872 * C141 - C30854 * C132) *
                C31966) *
               C7427 +
           ((C7532 - C7533 + C7534 - C7535) * C118 +
            (C7536 - C7537 + C7538 - C7539) * C31966) *
               C7428 +
           C7580 * C7429 + C7581 * C32248) *
              C31925 * C209 +
          (((C7533 - C7532 + C7535 - C7534) * C118 +
            (C7537 - C7536 + C7539 - C7538) * C31966) *
               C7427 +
           ((C7541 - C7540 + C7543 - C7542) * C118 +
            (C7545 - C7544 + C7547 - C7546) * C31966) *
               C7428 +
           ((C7549 - C7548 + C7551 - C7550) * C118 +
            (C7553 - C7552 + C7555 - C7554) * C31966) *
               C7429 +
           ((C7556 - C7557 + C7558 - C7559) * C118 +
            (C7560 - C7561 + C7562 - C7563) * C31966) *
               C32248) *
              C31925 * C210 +
          (C7580 * C7427 + C7581 * C7428 +
           ((C7557 - C7556 + C7559 - C7558) * C118 +
            (C7561 - C7560 + C7563 - C7562) * C31966) *
               C7429 +
           ((C32188 * C6045 - C30873 * C6043 + C31872 * C6243 -
             C30854 * C6242) *
                C118 +
            (C32188 * C6049 - C30873 * C6046 + C31872 * C6245 -
             C30854 * C6244) *
                C31966) *
               C32248) *
              C31925 * C211) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C32188 * C126 - C30873 * C119 + C31872 * C127 - C30854 * C120) *
                C118 +
            (C32188 * C140 - C30873 * C131 + C31872 * C141 - C30854 * C132) *
                C31966) *
               C7427 +
           ((C7532 - C7533 + C7534 - C7535) * C118 +
            (C7536 - C7537 + C7538 - C7539) * C31966) *
               C7428 +
           C7580 * C7429 + C7581 * C32248) *
              C315 +
          (((C30873 * C318 - C32188 * C328 + C30854 * C319 - C31872 * C329) *
                C118 +
            (C30873 * C333 - C32188 * C348 + C30854 * C334 - C31872 * C349) *
                C31966) *
               C7427 +
           ((C30873 * C618 - C32188 * C623 + C30854 * C619 - C31872 * C624) *
                C118 +
            (C30873 * C628 - C32188 * C633 + C30854 * C629 - C31872 * C634) *
                C31966) *
               C7428 +
           ((C30873 * C1050 - C32188 * C1059 + C30854 * C1051 -
             C31872 * C1060) *
                C118 +
            (C30873 * C1062 - C32188 * C1077 + C30854 * C1063 -
             C31872 * C1078) *
                C31966) *
               C7429 +
           ((C30873 * C1556 - C32188 * C1559 + C30854 * C1557 -
             C31872 * C1560) *
                C118 +
            (C30873 * C1562 - C32188 * C1565 + C30854 * C1563 -
             C31872 * C1566) *
                C31966) *
               C32248) *
              C316 +
          (((C32188 * C338 - C30873 * C323 + C31872 * C339 - C30854 * C324) *
                C118 +
            (C32188 * C353 - C30873 * C343 + C31872 * C354 - C30854 * C344) *
                C31966) *
               C7427 +
           ((C32188 * C1065 - C30873 * C1053 + C31872 * C1066 -
             C30854 * C1054) *
                C118 +
            (C32188 * C1080 - C30873 * C1068 + C31872 * C1081 -
             C30854 * C1069) *
                C31966) *
               C7428 +
           ((C32188 * C1071 - C30873 * C1056 + C31872 * C1072 -
             C30854 * C1057) *
                C118 +
            (C32188 * C1083 - C30873 * C1074 + C31872 * C1084 -
             C30854 * C1075) *
                C31966) *
               C7429 +
           ((C32188 * C6153 - C30873 * C6149 + C31872 * C6990 -
             C30854 * C6989) *
                C118 +
            (C32188 * C6158 - C30873 * C6154 + C31872 * C6992 -
             C30854 * C6991) *
                C31966) *
               C32248) *
              C317) *
         C31911 * C31899) /
            (p * q * std::sqrt(p + q));
    d2ee[103] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C2590 * C126 - C2596 * C119 + C2591 * C127 - C2597 * C120 +
              C2592 * C128 - C2598 * C121 + C32242 * C129 - C2599 * C122) *
                 C118 +
             (C2590 * C140 - C2596 * C131 + C2591 * C141 - C2597 * C132 +
              C2592 * C142 - C2598 * C133 + C32242 * C143 - C2599 * C134) *
                 C31966) *
                C32207 +
            ((C2699 - C2700 + C2701 - C2702 + C2703 - C2704 + C2705 - C2706) *
                 C118 +
             (C2707 - C2708 + C2709 - C2710 + C2711 - C2712 + C2713 - C2714) *
                 C31966) *
                C32013) *
               C530 +
           (((C2596 * C318 - C2590 * C328 + C2597 * C319 - C2591 * C329 +
              C2598 * C320 - C2592 * C330 + C2599 * C321 - C32242 * C331) *
                 C118 +
             (C2596 * C333 - C2590 * C348 + C2597 * C334 - C2591 * C349 +
              C2598 * C335 - C2592 * C350 + C2599 * C336 - C32242 * C351) *
                 C31966) *
                C32207 +
            ((C2596 * C618 - C2590 * C623 + C2597 * C619 - C2591 * C624 +
              C2598 * C620 - C2592 * C625 + C2599 * C621 - C32242 * C626) *
                 C118 +
             (C2596 * C628 - C2590 * C633 + C2597 * C629 - C2591 * C634 +
              C2598 * C630 - C2592 * C635 + C2599 * C631 - C32242 * C636) *
                 C31966) *
                C32013) *
               C531) *
              C31911 * C442 +
          ((((C2596 * C120 - C2590 * C127 + C2597 * C121 - C2591 * C128 +
              C2598 * C122 - C2592 * C129 + C2599 * C123 - C32242 * C130) *
                 C118 +
             (C2596 * C132 - C2590 * C141 + C2597 * C133 - C2591 * C142 +
              C2598 * C134 - C2592 * C143 + C2599 * C135 - C32242 * C144) *
                 C31966) *
                C32207 +
            ((C2959 - C2960 + C2961 - C2962 + C2963 - C2964 + C2965 - C2966) *
                 C118 +
             (C2967 - C2968 + C2969 - C2970 + C2971 - C2972 + C2973 - C2974) *
                 C31966) *
                C32013) *
               C530 +
           (((C2590 * C329 - C2596 * C319 + C2591 * C330 - C2597 * C320 +
              C2592 * C331 - C2598 * C321 + C32242 * C332 - C2599 * C322) *
                 C118 +
             (C2590 * C349 - C2596 * C334 + C2591 * C350 - C2597 * C335 +
              C2592 * C351 - C2598 * C336 + C32242 * C352 - C2599 * C337) *
                 C31966) *
                C32207 +
            ((C2590 * C624 - C2596 * C619 + C2591 * C625 - C2597 * C620 +
              C2592 * C626 - C2598 * C621 + C32242 * C627 - C2599 * C622) *
                 C118 +
             (C2590 * C634 - C2596 * C629 + C2591 * C635 - C2597 * C630 +
              C2592 * C636 - C2598 * C631 + C32242 * C637 - C2599 * C632) *
                 C31966) *
                C32013) *
               C531) *
              C31911 * C443)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C32188 * C126 - C30873 * C119 + C31872 * C127 - C30854 * C120) *
                 C118 +
             (C32188 * C140 - C30873 * C131 + C31872 * C141 - C30854 * C132) *
                 C31966) *
                C7427 +
            ((C7532 - C7533 + C7534 - C7535) * C118 +
             (C7536 - C7537 + C7538 - C7539) * C31966) *
                C7428 +
            C7580 * C7429 + C7581 * C32248) *
               C530 +
           (((C30873 * C318 - C32188 * C328 + C30854 * C319 - C31872 * C329) *
                 C118 +
             (C30873 * C333 - C32188 * C348 + C30854 * C334 - C31872 * C349) *
                 C31966) *
                C7427 +
            ((C30873 * C618 - C32188 * C623 + C30854 * C619 - C31872 * C624) *
                 C118 +
             (C30873 * C628 - C32188 * C633 + C30854 * C629 - C31872 * C634) *
                 C31966) *
                C7428 +
            ((C30873 * C1050 - C32188 * C1059 + C30854 * C1051 -
              C31872 * C1060) *
                 C118 +
             (C30873 * C1062 - C32188 * C1077 + C30854 * C1063 -
              C31872 * C1078) *
                 C31966) *
                C7429 +
            ((C30873 * C1556 - C32188 * C1559 + C30854 * C1557 -
              C31872 * C1560) *
                 C118 +
             (C30873 * C1562 - C32188 * C1565 + C30854 * C1563 -
              C31872 * C1566) *
                 C31966) *
                C32248) *
               C531) *
              C31911 * C442 +
          ((((C30873 * C120 - C32188 * C127 + C30854 * C121 - C31872 * C128) *
                 C118 +
             (C30873 * C132 - C32188 * C141 + C30854 * C133 - C31872 * C142) *
                 C31966) *
                C7427 +
            ((C7810 - C7811 + C7812 - C7813) * C118 +
             (C7814 - C7815 + C7816 - C7817) * C31966) *
                C7428 +
            ((C7818 - C7819 + C7820 - C7821) * C118 +
             (C7822 - C7823 + C7824 - C7825) * C31966) *
                C7429 +
            ((C7826 - C7827 + C7828 - C7829) * C118 +
             (C7830 - C7831 + C7832 - C7833) * C31966) *
                C32248) *
               C530 +
           (((C32188 * C329 - C30873 * C319 + C31872 * C330 - C30854 * C320) *
                 C118 +
             (C32188 * C349 - C30873 * C334 + C31872 * C350 - C30854 * C335) *
                 C31966) *
                C7427 +
            ((C32188 * C624 - C30873 * C619 + C31872 * C625 - C30854 * C620) *
                 C118 +
             (C32188 * C634 - C30873 * C629 + C31872 * C635 - C30854 * C630) *
                 C31966) *
                C7428 +
            ((C32188 * C1060 - C30873 * C1051 + C31872 * C1061 -
              C30854 * C1052) *
                 C118 +
             (C32188 * C1078 - C30873 * C1063 + C31872 * C1079 -
              C30854 * C1064) *
                 C31966) *
                C7429 +
            ((C32188 * C1560 - C30873 * C1557 + C31872 * C1561 -
              C30854 * C1558) *
                 C118 +
             (C32188 * C1566 - C30873 * C1563 + C31872 * C1567 -
              C30854 * C1564) *
                 C31966) *
                C32248) *
               C531) *
              C31911 * C443)) /
            (p * q * std::sqrt(p + q));
    d2ee[104] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C2590 * C126 - C2596 * C119 + C2591 * C127 - C2597 * C120 +
             C2592 * C128 - C2598 * C121 + C32242 * C129 - C2599 * C122) *
                C118 +
            (C2590 * C140 - C2596 * C131 + C2591 * C141 - C2597 * C132 +
             C2592 * C142 - C2598 * C133 + C32242 * C143 - C2599 * C134) *
                C31966) *
               C32207 +
           ((C2590 * C223 - C2596 * C213 + C2591 * C224 - C2597 * C214 +
             C2592 * C225 - C2598 * C215 + C32242 * C226 - C2599 * C216) *
                C118 +
            (C2590 * C243 - C2596 * C228 + C2591 * C244 - C2597 * C229 +
             C2592 * C245 - C2598 * C230 + C32242 * C246 - C2599 * C231) *
                C31966) *
               C32013) *
              C31925 * C31911 * C110 +
          (((C2596 * C120 - C2590 * C127 + C2597 * C121 - C2591 * C128 +
             C2598 * C122 - C2592 * C129 + C2599 * C123 - C32242 * C130) *
                C118 +
            (C2596 * C132 - C2590 * C141 + C2597 * C133 - C2591 * C142 +
             C2598 * C134 - C2592 * C143 + C2599 * C135 - C32242 * C144) *
                C31966) *
               C32207 +
           ((C2596 * C214 - C2590 * C224 + C2597 * C215 - C2591 * C225 +
             C2598 * C216 - C2592 * C226 + C2599 * C217 - C32242 * C227) *
                C118 +
            (C2596 * C229 - C2590 * C244 + C2597 * C230 - C2591 * C245 +
             C2598 * C231 - C2592 * C246 + C2599 * C232 - C32242 * C247) *
                C31966) *
               C32013) *
              C31925 * C31911 * C111 +
          (((C2590 * C128 - C2596 * C121 + C2591 * C129 - C2597 * C122 +
             C2592 * C130 - C2598 * C123 + C32242 * C136 - C2599 * C124) *
                C118 +
            (C2590 * C142 - C2596 * C133 + C2591 * C143 - C2597 * C134 +
             C2592 * C144 - C2598 * C135 + C32242 * C145 - C2599 * C137) *
                C31966) *
               C32207 +
           ((C2590 * C225 - C2596 * C215 + C2591 * C226 - C2597 * C216 +
             C2592 * C227 - C2598 * C217 + C32242 * C445 - C2599 * C444) *
                C118 +
            (C2590 * C245 - C2596 * C230 + C2591 * C246 - C2597 * C231 +
             C2592 * C247 - C2598 * C232 + C32242 * C447 - C2599 * C446) *
                C31966) *
               C32013) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C2590 * C126 - C2596 * C119 + C2591 * C127 - C2597 * C120 +
             C2592 * C128 - C2598 * C121 + C32242 * C129 - C2599 * C122) *
                C118 +
            (C2590 * C140 - C2596 * C131 + C2591 * C141 - C2597 * C132 +
             C2592 * C142 - C2598 * C133 + C32242 * C143 - C2599 * C134) *
                C31966) *
               C32207 +
           ((C2699 - C2700 + C2701 - C2702 + C2703 - C2704 + C2705 - C2706) *
                C118 +
            (C2707 - C2708 + C2709 - C2710 + C2711 - C2712 + C2713 - C2714) *
                C31966) *
               C32013) *
              C31925 * C209 +
          (((C2700 - C2699 + C2702 - C2701 + C2704 - C2703 + C2706 - C2705) *
                C118 +
            (C2708 - C2707 + C2710 - C2709 + C2712 - C2711 + C2714 - C2713) *
                C31966) *
               C32207 +
           ((C2715 - C2716 + C2717 - C2718 + C2719 - C2720 + C2721 - C2722) *
                C118 +
            (C2723 - C2724 + C2725 - C2726 + C2727 - C2728 + C2729 - C2730) *
                C31966) *
               C32013) *
              C31925 * C210 +
          (((C2716 - C2715 + C2718 - C2717 + C2720 - C2719 + C2722 - C2721) *
                C118 +
            (C2724 - C2723 + C2726 - C2725 + C2728 - C2727 + C2730 - C2729) *
                C31966) *
               C32207 +
           ((C2590 * C873 - C2596 * C867 + C2591 * C874 - C2597 * C868 +
             C2592 * C875 - C2598 * C869 + C32242 * C1233 - C2599 * C1232) *
                C118 +
            (C2590 * C885 - C2596 * C876 + C2591 * C886 - C2597 * C877 +
             C2592 * C887 - C2598 * C878 + C32242 * C1235 - C2599 * C1234) *
                C31966) *
               C32013) *
              C31925 * C211) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C32188 * C126 - C30873 * C119 + C31872 * C127 - C30854 * C120) *
                C118 +
            (C32188 * C140 - C30873 * C131 + C31872 * C141 - C30854 * C132) *
                C31966) *
               C7427 +
           ((C32188 * C223 - C30873 * C213 + C31872 * C224 - C30854 * C214) *
                C118 +
            (C32188 * C243 - C30873 * C228 + C31872 * C244 - C30854 * C229) *
                C31966) *
               C7428 +
           ((C32188 * C233 - C30873 * C218 + C31872 * C234 - C30854 * C219) *
                C118 +
            (C32188 * C248 - C30873 * C238 + C31872 * C249 - C30854 * C239) *
                C31966) *
               C7429 +
           ((C32188 * C873 - C30873 * C867 + C31872 * C874 - C30854 * C868) *
                C118 +
            (C32188 * C885 - C30873 * C876 + C31872 * C886 - C30854 * C877) *
                C31966) *
               C32248) *
              C31925 * C31911 * C110 +
          (((C30873 * C120 - C32188 * C127 + C30854 * C121 - C31872 * C128) *
                C118 +
            (C30873 * C132 - C32188 * C141 + C30854 * C133 - C31872 * C142) *
                C31966) *
               C7427 +
           ((C30873 * C214 - C32188 * C224 + C30854 * C215 - C31872 * C225) *
                C118 +
            (C30873 * C229 - C32188 * C244 + C30854 * C230 - C31872 * C245) *
                C31966) *
               C7428 +
           ((C30873 * C219 - C32188 * C234 + C30854 * C220 - C31872 * C235) *
                C118 +
            (C30873 * C239 - C32188 * C249 + C30854 * C240 - C31872 * C250) *
                C31966) *
               C7429 +
           ((C30873 * C868 - C32188 * C874 + C30854 * C869 - C31872 * C875) *
                C118 +
            (C30873 * C877 - C32188 * C886 + C30854 * C878 - C31872 * C887) *
                C31966) *
               C32248) *
              C31925 * C31911 * C111 +
          (((C32188 * C128 - C30873 * C121 + C31872 * C129 - C30854 * C122) *
                C118 +
            (C32188 * C142 - C30873 * C133 + C31872 * C143 - C30854 * C134) *
                C31966) *
               C7427 +
           ((C32188 * C225 - C30873 * C215 + C31872 * C226 - C30854 * C216) *
                C118 +
            (C32188 * C245 - C30873 * C230 + C31872 * C246 - C30854 * C231) *
                C31966) *
               C7428 +
           ((C32188 * C235 - C30873 * C220 + C31872 * C236 - C30854 * C221) *
                C118 +
            (C32188 * C250 - C30873 * C240 + C31872 * C251 - C30854 * C241) *
                C31966) *
               C7429 +
           ((C32188 * C875 - C30873 * C869 + C31872 * C1233 - C30854 * C1232) *
                C118 +
            (C32188 * C887 - C30873 * C878 + C31872 * C1235 - C30854 * C1234) *
                C31966) *
               C32248) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C32188 * C126 - C30873 * C119 + C31872 * C127 - C30854 * C120) *
                C118 +
            (C32188 * C140 - C30873 * C131 + C31872 * C141 - C30854 * C132) *
                C31966) *
               C7427 +
           ((C7532 - C7533 + C7534 - C7535) * C118 +
            (C7536 - C7537 + C7538 - C7539) * C31966) *
               C7428 +
           C7580 * C7429 + C7581 * C32248) *
              C31925 * C209 +
          (((C7533 - C7532 + C7535 - C7534) * C118 +
            (C7537 - C7536 + C7539 - C7538) * C31966) *
               C7427 +
           ((C7541 - C7540 + C7543 - C7542) * C118 +
            (C7545 - C7544 + C7547 - C7546) * C31966) *
               C7428 +
           ((C7549 - C7548 + C7551 - C7550) * C118 +
            (C7553 - C7552 + C7555 - C7554) * C31966) *
               C7429 +
           ((C7556 - C7557 + C7558 - C7559) * C118 +
            (C7560 - C7561 + C7562 - C7563) * C31966) *
               C32248) *
              C31925 * C210 +
          (C7580 * C7427 + C7581 * C7428 +
           ((C7557 - C7556 + C7559 - C7558) * C118 +
            (C7561 - C7560 + C7563 - C7562) * C31966) *
               C7429 +
           ((C32188 * C6045 - C30873 * C6043 + C31872 * C6243 -
             C30854 * C6242) *
                C118 +
            (C32188 * C6049 - C30873 * C6046 + C31872 * C6245 -
             C30854 * C6244) *
                C31966) *
               C32248) *
              C31925 * C211) *
         C31899) /
            (p * q * std::sqrt(p + q));
    d2ee[105] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C748 * C126 - C754 * C119 + C749 * C127 - C755 * C120 +
              C32227 * C128 - C756 * C121) *
                 C3350 +
             (C748 * C140 - C754 * C131 + C749 * C141 - C755 * C132 +
              C32227 * C142 - C756 * C133) *
                 C32208 +
             (C1953 - C1954 + C1955 - C1956 + C1957 - C1958) * C3351 +
             (C1959 - C1960 + C1961 - C1962 + C1963 - C1964) * C32053) *
                C32207 +
            ((C892 - C893 + C894 - C895 + C896 - C897) * C3350 +
             (C898 - C899 + C900 - C901 + C902 - C903) * C32208 +
             (C1570 - C1569 + C1572 - C1571 + C1574 - C1573) * C3351 +
             (C1576 - C1575 + C1578 - C1577 + C1580 - C1579) * C32053) *
                C32013) *
               C31925 * C440 +
           (((C893 - C892 + C895 - C894 + C897 - C896) * C3350 +
             (C899 - C898 + C901 - C900 + C903 - C902) * C32208 +
             (C1569 - C1570 + C1571 - C1572 + C1573 - C1574) * C3351 +
             (C1575 - C1576 + C1577 - C1578 + C1579 - C1580) * C32053) *
                C32207 +
            ((C905 - C904 + C907 - C906 + C909 - C908) * C3350 +
             (C911 - C910 + C913 - C912 + C915 - C914) * C32208 +
             (C1581 - C1582 + C1583 - C1584 + C1585 - C1586) * C3351 +
             (C1587 - C1588 + C1589 - C1590 + C1591 - C1592) * C32053) *
                C32013) *
               C31925 * C441) *
              C442 +
          ((((C754 * C120 - C748 * C127 + C755 * C121 - C749 * C128 +
              C756 * C122 - C32227 * C129) *
                 C3350 +
             (C754 * C132 - C748 * C141 + C755 * C133 - C749 * C142 +
              C756 * C134 - C32227 * C143) *
                 C32208 +
             (C2299 - C2300 + C2301 - C2302 + C2303 - C2304) * C3351 +
             (C2305 - C2306 + C2307 - C2308 + C2309 - C2310) * C32053) *
                C32207 +
            ((C1237 - C1238 + C1239 - C1240 + C1241 - C1242) * C3350 +
             (C1243 - C1244 + C1245 - C1246 + C1247 - C1248) * C32208 +
             (C4619 - C4620 + C4621 - C4622 + C4623 - C4624) * C3351 +
             (C4625 - C4626 + C4627 - C4628 + C4629 - C4630) * C32053) *
                C32013) *
               C31925 * C440 +
           (((C1238 - C1237 + C1240 - C1239 + C1242 - C1241) * C3350 +
             (C1244 - C1243 + C1246 - C1245 + C1248 - C1247) * C32208 +
             (C4620 - C4619 + C4622 - C4621 + C4624 - C4623) * C3351 +
             (C4626 - C4625 + C4628 - C4627 + C4630 - C4629) * C32053) *
                C32207 +
            ((C1250 - C1249 + C1252 - C1251 + C1254 - C1253) * C3350 +
             (C1256 - C1255 + C1258 - C1257 + C1260 - C1259) * C32208 +
             (C748 * C1060 - C754 * C1051 + C749 * C1061 - C755 * C1052 +
              C32227 * C1407 - C756 * C1406) *
                 C3351 +
             (C748 * C1078 - C754 * C1063 + C749 * C1079 - C755 * C1064 +
              C32227 * C1409 - C756 * C1408) *
                 C32053) *
                C32013) *
               C31925 * C441) *
              C443)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31862 * C126 - C5980 * C119) * C3350 +
             (C31862 * C140 - C5980 * C131) * C32208 + (C6820 - C6821) * C3351 +
             (C6822 - C6823) * C32053) *
                C7427 +
            ((C6052 - C6053) * C3350 + (C6054 - C6055) * C32208 +
             C7318 * C3351 + C7319 * C32053) *
                C7428 +
            C9435 * C7429 + C9436 * C32248) *
               C31925 * C440 +
           (((C6053 - C6052) * C3350 + (C6055 - C6054) * C32208 +
             C7320 * C3351 + C7321 * C32053) *
                C7427 +
            ((C6057 - C6056) * C3350 + (C6059 - C6058) * C32208 +
             C7324 * C3351 + C7325 * C32053) *
                C7428 +
            ((C6061 - C6060) * C3350 + (C6063 - C6062) * C32208 +
             (C6443 - C6444) * C3351 + (C6445 - C6446) * C32053) *
                C7429 +
            ((C6065 - C6064) * C3350 + (C6067 - C6066) * C32208 +
             (C6447 - C6448) * C3351 + (C6449 - C6450) * C32053) *
                C32248) *
               C31925 * C441) *
              C442 +
          ((((C5980 * C120 - C31862 * C127) * C3350 +
             (C5980 * C132 - C31862 * C141) * C32208 + (C7160 - C7161) * C3351 +
             (C7162 - C7163) * C32053) *
                C7427 +
            ((C6247 - C6248) * C3350 + (C6249 - C6250) * C32208 +
             (C6994 - C6995) * C3351 + (C6996 - C6997) * C32053) *
                C7428 +
            ((C6251 - C6252) * C3350 + (C6253 - C6254) * C32208 +
             (C7002 - C7003) * C3351 + (C7004 - C7005) * C32053) *
                C7429 +
            ((C6255 - C6256) * C3350 + (C6257 - C6258) * C32208 +
             (C9665 - C9666) * C3351 + (C9667 - C9668) * C32053) *
                C32248) *
               C31925 * C440 +
           (((C6248 - C6247) * C3350 + (C6250 - C6249) * C32208 +
             (C6995 - C6994) * C3351 + (C6997 - C6996) * C32053) *
                C7427 +
            ((C6252 - C6251) * C3350 + (C6254 - C6253) * C32208 +
             (C7003 - C7002) * C3351 + (C7005 - C7004) * C32053) *
                C7428 +
            ((C6256 - C6255) * C3350 + (C6258 - C6257) * C32208 +
             (C9666 - C9665) * C3351 + (C9668 - C9667) * C32053) *
                C7429 +
            ((C6260 - C6259) * C3350 + (C6262 - C6261) * C32208 +
             (C31862 * C6345 - C5980 * C6344) * C3351 +
             (C31862 * C6347 - C5980 * C6346) * C32053) *
                C32248) *
               C31925 * C441) *
              C443)) /
            (p * q * std::sqrt(p + q));
    d2ee[106] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C748 * C126 - C754 * C119 + C749 * C127 - C755 * C120 +
              C32227 * C128 - C756 * C121) *
                 C3350 +
             (C748 * C140 - C754 * C131 + C749 * C141 - C755 * C132 +
              C32227 * C142 - C756 * C133) *
                 C32208 +
             (C1953 - C1954 + C1955 - C1956 + C1957 - C1958) * C3351 +
             (C1959 - C1960 + C1961 - C1962 + C1963 - C1964) * C32053) *
                C32207 +
            ((C892 - C893 + C894 - C895 + C896 - C897) * C3350 +
             (C898 - C899 + C900 - C901 + C902 - C903) * C32208 +
             C5035 * C3351 + C5036 * C32053) *
                C32013) *
               C530 +
           (((C1954 - C1953 + C1956 - C1955 + C1958 - C1957) * C3350 +
             (C1960 - C1959 + C1962 - C1961 + C1964 - C1963) * C32208 +
             (C1966 - C1965 + C1968 - C1967 + C1970 - C1969) * C3351 +
             (C1972 - C1971 + C1974 - C1973 + C1976 - C1975) * C32053) *
                C32207 +
            (C5037 * C3350 + C5038 * C32208 +
             (C2481 - C2482 + C2483 - C2484 + C2485 - C2486) * C3351 +
             (C2487 - C2488 + C2489 - C2490 + C2491 - C2492) * C32053) *
                C32013) *
               C531) *
              C440 +
          ((((C893 - C892 + C895 - C894 + C897 - C896) * C3350 +
             (C899 - C898 + C901 - C900 + C903 - C902) * C32208 +
             C5037 * C3351 + C5038 * C32053) *
                C32207 +
            ((C905 - C904 + C907 - C906 + C909 - C908) * C3350 +
             (C911 - C910 + C913 - C912 + C915 - C914) * C32208 +
             (C1581 - C1582 + C1583 - C1584 + C1585 - C1586) * C3351 +
             (C1587 - C1588 + C1589 - C1590 + C1591 - C1592) * C32053) *
                C32013) *
               C530 +
           ((C5035 * C3350 + C5036 * C32208 +
             (C2482 - C2481 + C2484 - C2483 + C2486 - C2485) * C3351 +
             (C2488 - C2487 + C2490 - C2489 + C2492 - C2491) * C32053) *
                C32207 +
            ((C1582 - C1581 + C1584 - C1583 + C1586 - C1585) * C3350 +
             (C1588 - C1587 + C1590 - C1589 + C1592 - C1591) * C32208 +
             (C748 * C1071 - C754 * C1056 + C749 * C1072 - C755 * C1057 +
              C32227 * C1073 - C756 * C1058) *
                 C3351 +
             (C748 * C1083 - C754 * C1074 + C749 * C1084 - C755 * C1075 +
              C32227 * C1085 - C756 * C1076) *
                 C32053) *
                C32013) *
               C531) *
              C441) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31862 * C126 - C5980 * C119) * C3350 +
             (C31862 * C140 - C5980 * C131) * C32208 + (C6820 - C6821) * C3351 +
             (C6822 - C6823) * C32053) *
                C7427 +
            ((C6052 - C6053) * C3350 + (C6054 - C6055) * C32208 +
             C7318 * C3351 + C7319 * C32053) *
                C7428 +
            C9435 * C7429 + C9436 * C32248) *
               C530 +
           (((C6821 - C6820) * C3350 + (C6823 - C6822) * C32208 +
             (C6825 - C6824) * C3351 + (C6827 - C6826) * C32053) *
                C7427 +
            (C7320 * C3350 + C7321 * C32208 + C7322 * C3351 + C7323 * C32053) *
                C7428 +
            (C7324 * C3350 + C7325 * C32208 + C7326 * C3351 + C7327 * C32053) *
                C7429 +
            (C9929 * C3350 + C9930 * C32208 + (C6683 - C6684) * C3351 +
             (C6685 - C6686) * C32053) *
                C32248) *
               C531) *
              C440 +
          ((((C6053 - C6052) * C3350 + (C6055 - C6054) * C32208 +
             C7320 * C3351 + C7321 * C32053) *
                C7427 +
            ((C6057 - C6056) * C3350 + (C6059 - C6058) * C32208 +
             C7324 * C3351 + C7325 * C32053) *
                C7428 +
            ((C6061 - C6060) * C3350 + (C6063 - C6062) * C32208 +
             C9929 * C3351 + C9930 * C32053) *
                C7429 +
            ((C6065 - C6064) * C3350 + (C6067 - C6066) * C32208 +
             (C6447 - C6448) * C3351 + (C6449 - C6450) * C32053) *
                C32248) *
               C530 +
           ((C7318 * C3350 + C7319 * C32208 + C6828 * C3351 + C6829 * C32053) *
                C7427 +
            (C6677 * C3350 + C6678 * C32208 + C6690 * C3351 + C6691 * C32053) *
                C7428 +
            (C9427 * C3350 + C9428 * C32208 + (C6684 - C6683) * C3351 +
             (C6686 - C6685) * C32053) *
                C7429 +
            ((C6448 - C6447) * C3350 + (C6450 - C6449) * C32208 +
             (C31862 * C6155 - C5980 * C6150) * C3351 +
             (C31862 * C6159 - C5980 * C6156) * C32053) *
                C32248) *
               C531) *
              C441) *
         C31899) /
            (p * q * std::sqrt(p + q));
    d2ee[107] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C748 * C126 - C754 * C119 + C749 * C127 - C755 * C120 +
             C32227 * C128 - C756 * C121) *
                C3350 +
            (C748 * C140 - C754 * C131 + C749 * C141 - C755 * C132 +
             C32227 * C142 - C756 * C133) *
                C32208 +
            (C1953 - C1954 + C1955 - C1956 + C1957 - C1958) * C3351 +
            (C1959 - C1960 + C1961 - C1962 + C1963 - C1964) * C32053) *
               C32207 +
           ((C892 - C893 + C894 - C895 + C896 - C897) * C3350 +
            (C898 - C899 + C900 - C901 + C902 - C903) * C32208 +
            (C1570 - C1569 + C1572 - C1571 + C1574 - C1573) * C3351 +
            (C1576 - C1575 + C1578 - C1577 + C1580 - C1579) * C32053) *
               C32013) *
              C31925 * C209 +
          (((C893 - C892 + C895 - C894 + C897 - C896) * C3350 +
            (C899 - C898 + C901 - C900 + C903 - C902) * C32208 +
            (C1569 - C1570 + C1571 - C1572 + C1573 - C1574) * C3351 +
            (C1575 - C1576 + C1577 - C1578 + C1579 - C1580) * C32053) *
               C32207 +
           ((C905 - C904 + C907 - C906 + C909 - C908) * C3350 +
            (C911 - C910 + C913 - C912 + C915 - C914) * C32208 +
            (C1581 - C1582 + C1583 - C1584 + C1585 - C1586) * C3351 +
            (C1587 - C1588 + C1589 - C1590 + C1591 - C1592) * C32053) *
               C32013) *
              C31925 * C210 +
          ((C936 * C3350 + C937 * C32208 +
            (C1582 - C1581 + C1584 - C1583 + C1586 - C1585) * C3351 +
            (C1588 - C1587 + C1590 - C1589 + C1592 - C1591) * C32053) *
               C32207 +
           ((C917 - C916 + C919 - C918 + C921 - C920) * C3350 +
            (C923 - C922 + C925 - C924 + C927 - C926) * C32208 +
            (C748 * C1559 - C754 * C1556 + C749 * C1560 - C755 * C1557 +
             C32227 * C1561 - C756 * C1558) *
                C3351 +
            (C748 * C1565 - C754 * C1562 + C749 * C1566 - C755 * C1563 +
             C32227 * C1567 - C756 * C1564) *
                C32053) *
               C32013) *
              C31925 * C211) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C748 * C126 - C754 * C119 + C749 * C127 - C755 * C120 +
             C32227 * C128 - C756 * C121) *
                C3350 +
            (C748 * C140 - C754 * C131 + C749 * C141 - C755 * C132 +
             C32227 * C142 - C756 * C133) *
                C32208 +
            (C1953 - C1954 + C1955 - C1956 + C1957 - C1958) * C3351 +
            (C1959 - C1960 + C1961 - C1962 + C1963 - C1964) * C32053) *
               C32207 +
           ((C892 - C893 + C894 - C895 + C896 - C897) * C3350 +
            (C898 - C899 + C900 - C901 + C902 - C903) * C32208 +
            (C1570 - C1569 + C1572 - C1571 + C1574 - C1573) * C3351 +
            (C1576 - C1575 + C1578 - C1577 + C1580 - C1579) * C32053) *
               C32013) *
              C31925 * C31911 * C110 +
          (((C754 * C120 - C748 * C127 + C755 * C121 - C749 * C128 +
             C756 * C122 - C32227 * C129) *
                C3350 +
            (C754 * C132 - C748 * C141 + C755 * C133 - C749 * C142 +
             C756 * C134 - C32227 * C143) *
                C32208 +
            (C2299 - C2300 + C2301 - C2302 + C2303 - C2304) * C3351 +
            (C2305 - C2306 + C2307 - C2308 + C2309 - C2310) * C32053) *
               C32207 +
           ((C1237 - C1238 + C1239 - C1240 + C1241 - C1242) * C3350 +
            (C1243 - C1244 + C1245 - C1246 + C1247 - C1248) * C32208 +
            (C754 * C619 - C748 * C624 + C755 * C620 - C749 * C625 +
             C756 * C621 - C32227 * C626) *
                C3351 +
            (C754 * C629 - C748 * C634 + C755 * C630 - C749 * C635 +
             C756 * C631 - C32227 * C636) *
                C32053) *
               C32013) *
              C31925 * C31911 * C111 +
          (((C748 * C128 - C754 * C121 + C749 * C129 - C755 * C122 +
             C32227 * C130 - C756 * C123) *
                C3350 +
            (C748 * C142 - C754 * C133 + C749 * C143 - C755 * C134 +
             C32227 * C144 - C756 * C135) *
                C32208 +
            (C748 * C330 - C754 * C320 + C749 * C331 - C755 * C321 +
             C32227 * C332 - C756 * C322) *
                C3351 +
            (C748 * C350 - C754 * C335 + C749 * C351 - C755 * C336 +
             C32227 * C352 - C756 * C337) *
                C32053) *
               C32207 +
           ((C748 * C225 - C754 * C215 + C749 * C226 - C755 * C216 +
             C32227 * C227 - C756 * C217) *
                C3350 +
            (C748 * C245 - C754 * C230 + C749 * C246 - C755 * C231 +
             C32227 * C247 - C756 * C232) *
                C32208 +
            (C748 * C625 - C754 * C620 + C749 * C626 - C755 * C621 +
             C32227 * C627 - C756 * C622) *
                C3351 +
            (C748 * C635 - C754 * C630 + C749 * C636 - C755 * C631 +
             C32227 * C637 - C756 * C632) *
                C32053) *
               C32013) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C748 * C126 - C754 * C119 + C749 * C127 - C755 * C120 +
             C32227 * C128 - C756 * C121) *
                C3350 +
            (C748 * C140 - C754 * C131 + C749 * C141 - C755 * C132 +
             C32227 * C142 - C756 * C133) *
                C32208 +
            (C1953 - C1954 + C1955 - C1956 + C1957 - C1958) * C3351 +
            (C1959 - C1960 + C1961 - C1962 + C1963 - C1964) * C32053) *
               C32207 +
           ((C892 - C893 + C894 - C895 + C896 - C897) * C3350 +
            (C898 - C899 + C900 - C901 + C902 - C903) * C32208 +
            (C1570 - C1569 + C1572 - C1571 + C1574 - C1573) * C3351 +
            (C1576 - C1575 + C1578 - C1577 + C1580 - C1579) * C32053) *
               C32013) *
              C315 +
          (((C1954 - C1953 + C1956 - C1955 + C1958 - C1957) * C3350 +
            (C1960 - C1959 + C1962 - C1961 + C1964 - C1963) * C32208 +
            (C1966 - C1965 + C1968 - C1967 + C1970 - C1969) * C3351 +
            (C1972 - C1971 + C1974 - C1973 + C1976 - C1975) * C32053) *
               C32207 +
           ((C1569 - C1570 + C1571 - C1572 + C1573 - C1574) * C3350 +
            (C1575 - C1576 + C1577 - C1578 + C1579 - C1580) * C32208 +
            (C2481 - C2482 + C2483 - C2484 + C2485 - C2486) * C3351 +
            (C2487 - C2488 + C2489 - C2490 + C2491 - C2492) * C32053) *
               C32013) *
              C316 +
          ((C1997 * C3350 + C1998 * C32208 +
            (C1978 - C1977 + C1980 - C1979 + C1982 - C1981) * C3351 +
            (C1984 - C1983 + C1986 - C1985 + C1988 - C1987) * C32053) *
               C32207 +
           ((C2482 - C2481 + C2484 - C2483 + C2486 - C2485) * C3350 +
            (C2488 - C2487 + C2490 - C2489 + C2492 - C2491) * C32208 +
            (C748 * C2471 - C754 * C2468 + C749 * C2472 - C755 * C2469 +
             C32227 * C2473 - C756 * C2470) *
                C3351 +
            (C748 * C2477 - C754 * C2474 + C749 * C2478 - C755 * C2475 +
             C32227 * C2479 - C756 * C2476) *
                C32053) *
               C32013) *
              C317) *
         C31911 * C31899) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31862 * C126 - C5980 * C119) * C3350 +
            (C31862 * C140 - C5980 * C131) * C32208 + (C6820 - C6821) * C3351 +
            (C6822 - C6823) * C32053) *
               C7427 +
           ((C6052 - C6053) * C3350 + (C6054 - C6055) * C32208 + C7318 * C3351 +
            C7319 * C32053) *
               C7428 +
           (C6072 * C3350 + C6073 * C32208 + C6677 * C3351 + C6678 * C32053) *
               C7429 +
           (C6074 * C3350 + C6075 * C32208 + (C6444 - C6443) * C3351 +
            (C6446 - C6445) * C32053) *
               C32248) *
              C31925 * C31911 * C110 +
          (((C5980 * C120 - C31862 * C127) * C3350 +
            (C5980 * C132 - C31862 * C141) * C32208 + (C7160 - C7161) * C3351 +
            (C7162 - C7163) * C32053) *
               C7427 +
           ((C6247 - C6248) * C3350 + (C6249 - C6250) * C32208 +
            (C6994 - C6995) * C3351 + (C6996 - C6997) * C32053) *
               C7428 +
           ((C6251 - C6252) * C3350 + (C6253 - C6254) * C32208 +
            (C7002 - C7003) * C3351 + (C7004 - C7005) * C32053) *
               C7429 +
           ((C6255 - C6256) * C3350 + (C6257 - C6258) * C32208 +
            (C5980 * C1557 - C31862 * C1560) * C3351 +
            (C5980 * C1563 - C31862 * C1566) * C32053) *
               C32248) *
              C31925 * C31911 * C111 +
          (((C31862 * C128 - C5980 * C121) * C3350 +
            (C31862 * C142 - C5980 * C133) * C32208 +
            (C31862 * C330 - C5980 * C320) * C3351 +
            (C31862 * C350 - C5980 * C335) * C32053) *
               C7427 +
           ((C31862 * C225 - C5980 * C215) * C3350 +
            (C31862 * C245 - C5980 * C230) * C32208 +
            (C31862 * C625 - C5980 * C620) * C3351 +
            (C31862 * C635 - C5980 * C630) * C32053) *
               C7428 +
           ((C31862 * C235 - C5980 * C220) * C3350 +
            (C31862 * C250 - C5980 * C240) * C32208 +
            (C31862 * C1061 - C5980 * C1052) * C3351 +
            (C31862 * C1079 - C5980 * C1064) * C32053) *
               C7429 +
           ((C31862 * C875 - C5980 * C869) * C3350 +
            (C31862 * C887 - C5980 * C878) * C32208 +
            (C31862 * C1561 - C5980 * C1558) * C3351 +
            (C31862 * C1567 - C5980 * C1564) * C32053) *
               C32248) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31862 * C126 - C5980 * C119) * C3350 +
            (C31862 * C140 - C5980 * C131) * C32208 + (C6820 - C6821) * C3351 +
            (C6822 - C6823) * C32053) *
               C7427 +
           ((C6052 - C6053) * C3350 + (C6054 - C6055) * C32208 + C7318 * C3351 +
            C7319 * C32053) *
               C7428 +
           C9435 * C7429 + C9436 * C32248) *
              C31925 * C209 +
          (((C6053 - C6052) * C3350 + (C6055 - C6054) * C32208 + C7320 * C3351 +
            C7321 * C32053) *
               C7427 +
           ((C6057 - C6056) * C3350 + (C6059 - C6058) * C32208 + C7324 * C3351 +
            C7325 * C32053) *
               C7428 +
           ((C6061 - C6060) * C3350 + (C6063 - C6062) * C32208 +
            (C6443 - C6444) * C3351 + (C6445 - C6446) * C32053) *
               C7429 +
           ((C6065 - C6064) * C3350 + (C6067 - C6066) * C32208 +
            (C6447 - C6448) * C3351 + (C6449 - C6450) * C32053) *
               C32248) *
              C31925 * C210 +
          (C9435 * C7427 + C9436 * C7428 +
           (C6076 * C3350 + C6077 * C32208 + (C6448 - C6447) * C3351 +
            (C6450 - C6449) * C32053) *
               C7429 +
           ((C6069 - C6068) * C3350 + (C6071 - C6070) * C32208 +
            (C31862 * C6431 - C5980 * C6430) * C3351 +
            (C31862 * C6433 - C5980 * C6432) * C32053) *
               C32248) *
              C31925 * C211) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31862 * C126 - C5980 * C119) * C3350 +
            (C31862 * C140 - C5980 * C131) * C32208 + (C6820 - C6821) * C3351 +
            (C6822 - C6823) * C32053) *
               C7427 +
           ((C6052 - C6053) * C3350 + (C6054 - C6055) * C32208 + C7318 * C3351 +
            C7319 * C32053) *
               C7428 +
           C9435 * C7429 + C9436 * C32248) *
              C315 +
          (((C6821 - C6820) * C3350 + (C6823 - C6822) * C32208 +
            (C6825 - C6824) * C3351 + (C6827 - C6826) * C32053) *
               C7427 +
           (C7320 * C3350 + C7321 * C32208 + C7322 * C3351 + C7323 * C32053) *
               C7428 +
           (C7324 * C3350 + C7325 * C32208 + C7326 * C3351 + C7327 * C32053) *
               C7429 +
           ((C6443 - C6444) * C3350 + (C6445 - C6446) * C32208 +
            (C6683 - C6684) * C3351 + (C6685 - C6686) * C32053) *
               C32248) *
              C316 +
          ((C6842 * C3350 + C6843 * C32208 + (C6831 - C6830) * C3351 +
            (C6833 - C6832) * C32053) *
               C7427 +
           (C6828 * C3350 + C6829 * C32208 + (C6835 - C6834) * C3351 +
            (C6837 - C6836) * C32053) *
               C7428 +
           (C6690 * C3350 + C6691 * C32208 + (C6839 - C6838) * C3351 +
            (C6841 - C6840) * C32053) *
               C7429 +
           ((C6684 - C6683) * C3350 + (C6686 - C6685) * C32208 +
            (C31862 * C7314 - C5980 * C7313) * C3351 +
            (C31862 * C7316 - C5980 * C7315) * C32053) *
               C32248) *
              C317) *
         C31911 * C31899) /
            (p * q * std::sqrt(p + q));
    d2ee[108] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C748 * C126 - C754 * C119 + C749 * C127 - C755 * C120 +
              C32227 * C128 - C756 * C121) *
                 C3350 +
             (C748 * C140 - C754 * C131 + C749 * C141 - C755 * C132 +
              C32227 * C142 - C756 * C133) *
                 C32208 +
             (C1953 - C1954 + C1955 - C1956 + C1957 - C1958) * C3351 +
             (C1959 - C1960 + C1961 - C1962 + C1963 - C1964) * C32053) *
                C32207 +
            ((C892 - C893 + C894 - C895 + C896 - C897) * C3350 +
             (C898 - C899 + C900 - C901 + C902 - C903) * C32208 +
             (C1570 - C1569 + C1572 - C1571 + C1574 - C1573) * C3351 +
             (C1576 - C1575 + C1578 - C1577 + C1580 - C1579) * C32053) *
                C32013) *
               C530 +
           (((C1954 - C1953 + C1956 - C1955 + C1958 - C1957) * C3350 +
             (C1960 - C1959 + C1962 - C1961 + C1964 - C1963) * C32208 +
             (C1966 - C1965 + C1968 - C1967 + C1970 - C1969) * C3351 +
             (C1972 - C1971 + C1974 - C1973 + C1976 - C1975) * C32053) *
                C32207 +
            ((C1569 - C1570 + C1571 - C1572 + C1573 - C1574) * C3350 +
             (C1575 - C1576 + C1577 - C1578 + C1579 - C1580) * C32208 +
             (C2481 - C2482 + C2483 - C2484 + C2485 - C2486) * C3351 +
             (C2487 - C2488 + C2489 - C2490 + C2491 - C2492) * C32053) *
                C32013) *
               C531) *
              C31911 * C442 +
          ((((C754 * C120 - C748 * C127 + C755 * C121 - C749 * C128 +
              C756 * C122 - C32227 * C129) *
                 C3350 +
             (C754 * C132 - C748 * C141 + C755 * C133 - C749 * C142 +
              C756 * C134 - C32227 * C143) *
                 C32208 +
             (C2299 - C2300 + C2301 - C2302 + C2303 - C2304) * C3351 +
             (C2305 - C2306 + C2307 - C2308 + C2309 - C2310) * C32053) *
                C32207 +
            ((C1237 - C1238 + C1239 - C1240 + C1241 - C1242) * C3350 +
             (C1243 - C1244 + C1245 - C1246 + C1247 - C1248) * C32208 +
             (C4619 - C4620 + C4621 - C4622 + C4623 - C4624) * C3351 +
             (C4625 - C4626 + C4627 - C4628 + C4629 - C4630) * C32053) *
                C32013) *
               C530 +
           (((C2300 - C2299 + C2302 - C2301 + C2304 - C2303) * C3350 +
             (C2306 - C2305 + C2308 - C2307 + C2310 - C2309) * C32208 +
             (C2312 - C2311 + C2314 - C2313 + C2316 - C2315) * C3351 +
             (C2318 - C2317 + C2320 - C2319 + C2322 - C2321) * C32053) *
                C32207 +
            ((C4620 - C4619 + C4622 - C4621 + C4624 - C4623) * C3350 +
             (C4626 - C4625 + C4628 - C4627 + C4630 - C4629) * C32208 +
             (C748 * C1066 - C754 * C1054 + C749 * C1067 - C755 * C1055 +
              C32227 * C2145 - C756 * C2144) *
                 C3351 +
             (C748 * C1081 - C754 * C1069 + C749 * C1082 - C755 * C1070 +
              C32227 * C2147 - C756 * C2146) *
                 C32053) *
                C32013) *
               C531) *
              C31911 * C443)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31862 * C126 - C5980 * C119) * C3350 +
             (C31862 * C140 - C5980 * C131) * C32208 + (C6820 - C6821) * C3351 +
             (C6822 - C6823) * C32053) *
                C7427 +
            ((C6052 - C6053) * C3350 + (C6054 - C6055) * C32208 +
             C7318 * C3351 + C7319 * C32053) *
                C7428 +
            C9435 * C7429 + C9436 * C32248) *
               C530 +
           (((C6821 - C6820) * C3350 + (C6823 - C6822) * C32208 +
             (C6825 - C6824) * C3351 + (C6827 - C6826) * C32053) *
                C7427 +
            (C7320 * C3350 + C7321 * C32208 + C7322 * C3351 + C7323 * C32053) *
                C7428 +
            (C7324 * C3350 + C7325 * C32208 + C7326 * C3351 + C7327 * C32053) *
                C7429 +
            ((C6443 - C6444) * C3350 + (C6445 - C6446) * C32208 +
             (C6683 - C6684) * C3351 + (C6685 - C6686) * C32053) *
                C32248) *
               C531) *
              C31911 * C442 +
          ((((C5980 * C120 - C31862 * C127) * C3350 +
             (C5980 * C132 - C31862 * C141) * C32208 + (C7160 - C7161) * C3351 +
             (C7162 - C7163) * C32053) *
                C7427 +
            ((C6247 - C6248) * C3350 + (C6249 - C6250) * C32208 +
             (C6994 - C6995) * C3351 + (C6996 - C6997) * C32053) *
                C7428 +
            ((C6251 - C6252) * C3350 + (C6253 - C6254) * C32208 +
             (C7002 - C7003) * C3351 + (C7004 - C7005) * C32053) *
                C7429 +
            ((C6255 - C6256) * C3350 + (C6257 - C6258) * C32208 +
             (C9665 - C9666) * C3351 + (C9667 - C9668) * C32053) *
                C32248) *
               C530 +
           (((C7161 - C7160) * C3350 + (C7163 - C7162) * C32208 +
             (C7165 - C7164) * C3351 + (C7167 - C7166) * C32053) *
                C7427 +
            ((C6995 - C6994) * C3350 + (C6997 - C6996) * C32208 +
             (C6999 - C6998) * C3351 + (C7001 - C7000) * C32053) *
                C7428 +
            ((C7003 - C7002) * C3350 + (C7005 - C7004) * C32208 +
             (C7007 - C7006) * C3351 + (C7009 - C7008) * C32053) *
                C7429 +
            ((C9666 - C9665) * C3350 + (C9668 - C9667) * C32208 +
             (C31862 * C6990 - C5980 * C6989) * C3351 +
             (C31862 * C6992 - C5980 * C6991) * C32053) *
                C32248) *
               C531) *
              C31911 * C443)) /
            (p * q * std::sqrt(p + q));
    d2ee[109] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C748 * C126 - C754 * C119 + C749 * C127 - C755 * C120 +
             C32227 * C128 - C756 * C121) *
                C3350 +
            (C748 * C140 - C754 * C131 + C749 * C141 - C755 * C132 +
             C32227 * C142 - C756 * C133) *
                C32208 +
            (C1953 - C1954 + C1955 - C1956 + C1957 - C1958) * C3351 +
            (C1959 - C1960 + C1961 - C1962 + C1963 - C1964) * C32053) *
               C32207 +
           ((C892 - C893 + C894 - C895 + C896 - C897) * C3350 +
            (C898 - C899 + C900 - C901 + C902 - C903) * C32208 +
            (C1570 - C1569 + C1572 - C1571 + C1574 - C1573) * C3351 +
            (C1576 - C1575 + C1578 - C1577 + C1580 - C1579) * C32053) *
               C32013) *
              C31925 * C31911 * C110 +
          (((C754 * C120 - C748 * C127 + C755 * C121 - C749 * C128 +
             C756 * C122 - C32227 * C129) *
                C3350 +
            (C754 * C132 - C748 * C141 + C755 * C133 - C749 * C142 +
             C756 * C134 - C32227 * C143) *
                C32208 +
            (C2299 - C2300 + C2301 - C2302 + C2303 - C2304) * C3351 +
            (C2305 - C2306 + C2307 - C2308 + C2309 - C2310) * C32053) *
               C32207 +
           ((C1237 - C1238 + C1239 - C1240 + C1241 - C1242) * C3350 +
            (C1243 - C1244 + C1245 - C1246 + C1247 - C1248) * C32208 +
            (C754 * C619 - C748 * C624 + C755 * C620 - C749 * C625 +
             C756 * C621 - C32227 * C626) *
                C3351 +
            (C754 * C629 - C748 * C634 + C755 * C630 - C749 * C635 +
             C756 * C631 - C32227 * C636) *
                C32053) *
               C32013) *
              C31925 * C31911 * C111 +
          (((C748 * C128 - C754 * C121 + C749 * C129 - C755 * C122 +
             C32227 * C130 - C756 * C123) *
                C3350 +
            (C748 * C142 - C754 * C133 + C749 * C143 - C755 * C134 +
             C32227 * C144 - C756 * C135) *
                C32208 +
            (C748 * C330 - C754 * C320 + C749 * C331 - C755 * C321 +
             C32227 * C332 - C756 * C322) *
                C3351 +
            (C748 * C350 - C754 * C335 + C749 * C351 - C755 * C336 +
             C32227 * C352 - C756 * C337) *
                C32053) *
               C32207 +
           ((C748 * C225 - C754 * C215 + C749 * C226 - C755 * C216 +
             C32227 * C227 - C756 * C217) *
                C3350 +
            (C748 * C245 - C754 * C230 + C749 * C246 - C755 * C231 +
             C32227 * C247 - C756 * C232) *
                C32208 +
            (C748 * C625 - C754 * C620 + C749 * C626 - C755 * C621 +
             C32227 * C627 - C756 * C622) *
                C3351 +
            (C748 * C635 - C754 * C630 + C749 * C636 - C755 * C631 +
             C32227 * C637 - C756 * C632) *
                C32053) *
               C32013) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C748 * C126 - C754 * C119 + C749 * C127 - C755 * C120 +
             C32227 * C128 - C756 * C121) *
                C3350 +
            (C748 * C140 - C754 * C131 + C749 * C141 - C755 * C132 +
             C32227 * C142 - C756 * C133) *
                C32208 +
            (C1953 - C1954 + C1955 - C1956 + C1957 - C1958) * C3351 +
            (C1959 - C1960 + C1961 - C1962 + C1963 - C1964) * C32053) *
               C32207 +
           ((C892 - C893 + C894 - C895 + C896 - C897) * C3350 +
            (C898 - C899 + C900 - C901 + C902 - C903) * C32208 +
            (C1570 - C1569 + C1572 - C1571 + C1574 - C1573) * C3351 +
            (C1576 - C1575 + C1578 - C1577 + C1580 - C1579) * C32053) *
               C32013) *
              C31925 * C209 +
          (((C893 - C892 + C895 - C894 + C897 - C896) * C3350 +
            (C899 - C898 + C901 - C900 + C903 - C902) * C32208 +
            (C1569 - C1570 + C1571 - C1572 + C1573 - C1574) * C3351 +
            (C1575 - C1576 + C1577 - C1578 + C1579 - C1580) * C32053) *
               C32207 +
           ((C905 - C904 + C907 - C906 + C909 - C908) * C3350 +
            (C911 - C910 + C913 - C912 + C915 - C914) * C32208 +
            (C1581 - C1582 + C1583 - C1584 + C1585 - C1586) * C3351 +
            (C1587 - C1588 + C1589 - C1590 + C1591 - C1592) * C32053) *
               C32013) *
              C31925 * C210 +
          ((C936 * C3350 + C937 * C32208 +
            (C1582 - C1581 + C1584 - C1583 + C1586 - C1585) * C3351 +
            (C1588 - C1587 + C1590 - C1589 + C1592 - C1591) * C32053) *
               C32207 +
           ((C917 - C916 + C919 - C918 + C921 - C920) * C3350 +
            (C923 - C922 + C925 - C924 + C927 - C926) * C32208 +
            (C748 * C1559 - C754 * C1556 + C749 * C1560 - C755 * C1557 +
             C32227 * C1561 - C756 * C1558) *
                C3351 +
            (C748 * C1565 - C754 * C1562 + C749 * C1566 - C755 * C1563 +
             C32227 * C1567 - C756 * C1564) *
                C32053) *
               C32013) *
              C31925 * C211) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C31862 * C126 - C5980 * C119) * C3350 +
            (C31862 * C140 - C5980 * C131) * C32208 + (C6820 - C6821) * C3351 +
            (C6822 - C6823) * C32053) *
               C7427 +
           ((C6052 - C6053) * C3350 + (C6054 - C6055) * C32208 + C7318 * C3351 +
            C7319 * C32053) *
               C7428 +
           (C6072 * C3350 + C6073 * C32208 + C6677 * C3351 + C6678 * C32053) *
               C7429 +
           (C6074 * C3350 + C6075 * C32208 + (C6444 - C6443) * C3351 +
            (C6446 - C6445) * C32053) *
               C32248) *
              C31925 * C31911 * C110 +
          (((C5980 * C120 - C31862 * C127) * C3350 +
            (C5980 * C132 - C31862 * C141) * C32208 + (C7160 - C7161) * C3351 +
            (C7162 - C7163) * C32053) *
               C7427 +
           ((C6247 - C6248) * C3350 + (C6249 - C6250) * C32208 +
            (C6994 - C6995) * C3351 + (C6996 - C6997) * C32053) *
               C7428 +
           ((C6251 - C6252) * C3350 + (C6253 - C6254) * C32208 +
            (C7002 - C7003) * C3351 + (C7004 - C7005) * C32053) *
               C7429 +
           ((C6255 - C6256) * C3350 + (C6257 - C6258) * C32208 +
            (C5980 * C1557 - C31862 * C1560) * C3351 +
            (C5980 * C1563 - C31862 * C1566) * C32053) *
               C32248) *
              C31925 * C31911 * C111 +
          (((C31862 * C128 - C5980 * C121) * C3350 +
            (C31862 * C142 - C5980 * C133) * C32208 +
            (C31862 * C330 - C5980 * C320) * C3351 +
            (C31862 * C350 - C5980 * C335) * C32053) *
               C7427 +
           ((C31862 * C225 - C5980 * C215) * C3350 +
            (C31862 * C245 - C5980 * C230) * C32208 +
            (C31862 * C625 - C5980 * C620) * C3351 +
            (C31862 * C635 - C5980 * C630) * C32053) *
               C7428 +
           ((C31862 * C235 - C5980 * C220) * C3350 +
            (C31862 * C250 - C5980 * C240) * C32208 +
            (C31862 * C1061 - C5980 * C1052) * C3351 +
            (C31862 * C1079 - C5980 * C1064) * C32053) *
               C7429 +
           ((C31862 * C875 - C5980 * C869) * C3350 +
            (C31862 * C887 - C5980 * C878) * C32208 +
            (C31862 * C1561 - C5980 * C1558) * C3351 +
            (C31862 * C1567 - C5980 * C1564) * C32053) *
               C32248) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C31862 * C126 - C5980 * C119) * C3350 +
            (C31862 * C140 - C5980 * C131) * C32208 + (C6820 - C6821) * C3351 +
            (C6822 - C6823) * C32053) *
               C7427 +
           ((C6052 - C6053) * C3350 + (C6054 - C6055) * C32208 + C7318 * C3351 +
            C7319 * C32053) *
               C7428 +
           C9435 * C7429 + C9436 * C32248) *
              C31925 * C209 +
          (((C6053 - C6052) * C3350 + (C6055 - C6054) * C32208 + C7320 * C3351 +
            C7321 * C32053) *
               C7427 +
           ((C6057 - C6056) * C3350 + (C6059 - C6058) * C32208 + C7324 * C3351 +
            C7325 * C32053) *
               C7428 +
           ((C6061 - C6060) * C3350 + (C6063 - C6062) * C32208 +
            (C6443 - C6444) * C3351 + (C6445 - C6446) * C32053) *
               C7429 +
           ((C6065 - C6064) * C3350 + (C6067 - C6066) * C32208 +
            (C6447 - C6448) * C3351 + (C6449 - C6450) * C32053) *
               C32248) *
              C31925 * C210 +
          (C9435 * C7427 + C9436 * C7428 +
           (C6076 * C3350 + C6077 * C32208 + (C6448 - C6447) * C3351 +
            (C6450 - C6449) * C32053) *
               C7429 +
           ((C6069 - C6068) * C3350 + (C6071 - C6070) * C32208 +
            (C31862 * C6431 - C5980 * C6430) * C3351 +
            (C31862 * C6433 - C5980 * C6432) * C32053) *
               C32248) *
              C31925 * C211) *
         C31899) /
            (p * q * std::sqrt(p + q));
    d2ee[110] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C748 * C126 - C754 * C119 + C749 * C127 - C755 * C120 +
              C32227 * C128 - C756 * C121) *
                 C118 +
             (C748 * C140 - C754 * C131 + C749 * C141 - C755 * C132 +
              C32227 * C142 - C756 * C133) *
                 C31966) *
                C32273 +
            ((C892 - C893 + C894 - C895 + C896 - C897) * C118 +
             (C898 - C899 + C900 - C901 + C902 - C903) * C31966) *
                C32261 +
            C940 * C32238) *
               C31925 * C440 +
           (((C893 - C892 + C895 - C894 + C897 - C896) * C118 +
             (C899 - C898 + C901 - C900 + C903 - C902) * C31966) *
                C32273 +
            ((C905 - C904 + C907 - C906 + C909 - C908) * C118 +
             (C911 - C910 + C913 - C912 + C915 - C914) * C31966) *
                C32261 +
            ((C916 - C917 + C918 - C919 + C920 - C921) * C118 +
             (C922 - C923 + C924 - C925 + C926 - C927) * C31966) *
                C32238) *
               C31925 * C441) *
              C442 +
          ((((C754 * C120 - C748 * C127 + C755 * C121 - C749 * C128 +
              C756 * C122 - C32227 * C129) *
                 C118 +
             (C754 * C132 - C748 * C141 + C755 * C133 - C749 * C142 +
              C756 * C134 - C32227 * C143) *
                 C31966) *
                C32273 +
            ((C1237 - C1238 + C1239 - C1240 + C1241 - C1242) * C118 +
             (C1243 - C1244 + C1245 - C1246 + C1247 - C1248) * C31966) *
                C32261 +
            ((C1249 - C1250 + C1251 - C1252 + C1253 - C1254) * C118 +
             (C1255 - C1256 + C1257 - C1258 + C1259 - C1260) * C31966) *
                C32238) *
               C31925 * C440 +
           (((C1238 - C1237 + C1240 - C1239 + C1242 - C1241) * C118 +
             (C1244 - C1243 + C1246 - C1245 + C1248 - C1247) * C31966) *
                C32273 +
            ((C1250 - C1249 + C1252 - C1251 + C1254 - C1253) * C118 +
             (C1256 - C1255 + C1258 - C1257 + C1260 - C1259) * C31966) *
                C32261 +
            ((C748 * C874 - C754 * C868 + C749 * C875 - C755 * C869 +
              C32227 * C1233 - C756 * C1232) *
                 C118 +
             (C748 * C886 - C754 * C877 + C749 * C887 - C755 * C878 +
              C32227 * C1235 - C756 * C1234) *
                 C31966) *
                C32238) *
               C31925 * C441) *
              C443)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C101 * C126 - C113 * C119 + C102 * C127 - C114 * C120 +
             C103 * C128 - C115 * C121 + C104 * C129 - C116 * C122 +
             C105 * C130 - C117 * C123) *
                C118 +
            (C101 * C140 - C113 * C131 + C102 * C141 - C114 * C132 +
             C103 * C142 - C115 * C133 + C104 * C143 - C116 * C134 +
             C105 * C144 - C117 * C135) *
                C31966) *
               C31955 * C31925 * C440 +
           ((C113 * C213 - C101 * C223 + C114 * C214 - C102 * C224 +
             C115 * C215 - C103 * C225 + C116 * C216 - C104 * C226 +
             C117 * C217 - C105 * C227) *
                C118 +
            (C113 * C228 - C101 * C243 + C114 * C229 - C102 * C244 +
             C115 * C230 - C103 * C245 + C116 * C231 - C104 * C246 +
             C117 * C232 - C105 * C247) *
                C31966) *
               C31955 * C31925 * C441) *
              C442 +
          (((C113 * C120 - C101 * C127 + C114 * C121 - C102 * C128 +
             C115 * C122 - C103 * C129 + C116 * C123 - C104 * C130 +
             C117 * C124 - C105 * C136) *
                C118 +
            (C113 * C132 - C101 * C141 + C114 * C133 - C102 * C142 +
             C115 * C134 - C103 * C143 + C116 * C135 - C104 * C144 +
             C117 * C137 - C105 * C145) *
                C31966) *
               C31955 * C31925 * C440 +
           ((C101 * C224 - C113 * C214 + C102 * C225 - C114 * C215 +
             C103 * C226 - C115 * C216 + C104 * C227 - C116 * C217 +
             C105 * C445 - C117 * C444) *
                C118 +
            (C101 * C244 - C113 * C229 + C102 * C245 - C114 * C230 +
             C103 * C246 - C115 * C231 + C104 * C247 - C116 * C232 +
             C105 * C447 - C117 * C446) *
                C31966) *
               C31955 * C31925 * C441) *
              C443)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C748 * C126 - C754 * C119 + C749 * C127 - C755 * C120 +
             C32227 * C128 - C756 * C121) *
                C1705 +
            (C748 * C140 - C754 * C131 + C749 * C141 - C755 * C132 +
             C32227 * C142 - C756 * C133) *
                C32274 +
            (C1953 - C1954 + C1955 - C1956 + C1957 - C1958) * C1706 +
            (C1959 - C1960 + C1961 - C1962 + C1963 - C1964) * C32263 +
            C1997 * C1707 + C1998 * C32241) *
               C31955 * C31925 * C440 +
           ((C893 - C892 + C895 - C894 + C897 - C896) * C1705 +
            (C899 - C898 + C901 - C900 + C903 - C902) * C32274 +
            (C1569 - C1570 + C1571 - C1572 + C1573 - C1574) * C1706 +
            (C1575 - C1576 + C1577 - C1578 + C1579 - C1580) * C32263 +
            (C754 * C1053 - C748 * C1065 + C755 * C1054 - C749 * C1066 +
             C756 * C1055 - C32227 * C1067) *
                C1707 +
            (C754 * C1068 - C748 * C1080 + C755 * C1069 - C749 * C1081 +
             C756 * C1070 - C32227 * C1082) *
                C32241) *
               C31955 * C31925 * C441) *
              C442 +
          (((C754 * C120 - C748 * C127 + C755 * C121 - C749 * C128 +
             C756 * C122 - C32227 * C129) *
                C1705 +
            (C754 * C132 - C748 * C141 + C755 * C133 - C749 * C142 +
             C756 * C134 - C32227 * C143) *
                C32274 +
            (C754 * C319 - C748 * C329 + C755 * C320 - C749 * C330 +
             C756 * C321 - C32227 * C331) *
                C1706 +
            (C754 * C334 - C748 * C349 + C755 * C335 - C749 * C350 +
             C756 * C336 - C32227 * C351) *
                C32263 +
            (C754 * C324 - C748 * C339 + C755 * C325 - C749 * C340 +
             C756 * C326 - C32227 * C341) *
                C1707 +
            (C754 * C344 - C748 * C354 + C755 * C345 - C749 * C355 +
             C756 * C346 - C32227 * C356) *
                C32241) *
               C31955 * C31925 * C440 +
           ((C1238 - C1237 + C1240 - C1239 + C1242 - C1241) * C1705 +
            (C1244 - C1243 + C1246 - C1245 + C1248 - C1247) * C32274 +
            (C748 * C624 - C754 * C619 + C749 * C625 - C755 * C620 +
             C32227 * C626 - C756 * C621) *
                C1706 +
            (C748 * C634 - C754 * C629 + C749 * C635 - C755 * C630 +
             C32227 * C636 - C756 * C631) *
                C32263 +
            (C748 * C1066 - C754 * C1054 + C749 * C1067 - C755 * C1055 +
             C32227 * C2145 - C756 * C2144) *
                C1707 +
            (C748 * C1081 - C754 * C1069 + C749 * C1082 - C755 * C1070 +
             C32227 * C2147 - C756 * C2146) *
                C32241) *
               C31955 * C31925 * C441) *
              C443)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C32270 * C126 - C5154 * C119 + C32257 * C127 - C5155 * C120 +
              C32227 * C128 - C5156 * C121) *
                 C118 +
             (C32270 * C140 - C5154 * C131 + C32257 * C141 - C5155 * C132 +
              C32227 * C142 - C5156 * C133) *
                 C31966) *
                C5151 +
            ((C5268 - C5269 + C5270 - C5271 + C5272 - C5273) * C118 +
             (C5274 - C5275 + C5276 - C5277 + C5278 - C5279) * C31966) *
                C5152 +
            C5316 * C32238) *
               C31925 * C440 +
           (((C5269 - C5268 + C5271 - C5270 + C5273 - C5272) * C118 +
             (C5275 - C5274 + C5277 - C5276 + C5279 - C5278) * C31966) *
                C5151 +
            ((C5281 - C5280 + C5283 - C5282 + C5285 - C5284) * C118 +
             (C5287 - C5286 + C5289 - C5288 + C5291 - C5290) * C31966) *
                C5152 +
            ((C5292 - C5293 + C5294 - C5295 + C5296 - C5297) * C118 +
             (C5298 - C5299 + C5300 - C5301 + C5302 - C5303) * C31966) *
                C32238) *
               C31925 * C441) *
              C442 +
          ((((C5154 * C120 - C32270 * C127 + C5155 * C121 - C32257 * C128 +
              C5156 * C122 - C32227 * C129) *
                 C118 +
             (C5154 * C132 - C32270 * C141 + C5155 * C133 - C32257 * C142 +
              C5156 * C134 - C32227 * C143) *
                 C31966) *
                C5151 +
            ((C5573 - C5574 + C5575 - C5576 + C5577 - C5578) * C118 +
             (C5579 - C5580 + C5581 - C5582 + C5583 - C5584) * C31966) *
                C5152 +
            ((C5585 - C5586 + C5587 - C5588 + C5589 - C5590) * C118 +
             (C5591 - C5592 + C5593 - C5594 + C5595 - C5596) * C31966) *
                C32238) *
               C31925 * C440 +
           (((C5574 - C5573 + C5576 - C5575 + C5578 - C5577) * C118 +
             (C5580 - C5579 + C5582 - C5581 + C5584 - C5583) * C31966) *
                C5151 +
            ((C5586 - C5585 + C5588 - C5587 + C5590 - C5589) * C118 +
             (C5592 - C5591 + C5594 - C5593 + C5596 - C5595) * C31966) *
                C5152 +
            ((C32270 * C874 - C5154 * C868 + C32257 * C875 - C5155 * C869 +
              C32227 * C1233 - C5156 * C1232) *
                 C118 +
             (C32270 * C886 - C5154 * C877 + C32257 * C887 - C5155 * C878 +
              C32227 * C1235 - C5156 * C1234) *
                 C31966) *
                C32238) *
               C31925 * C441) *
              C443)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C31862 * C126 - C5980 * C119) * C118 +
             (C31862 * C140 - C5980 * C131) * C31966) *
                C5975 +
            ((C6052 - C6053) * C118 + (C6054 - C6055) * C31966) * C5976 +
            C6084 * C5977 + C6085 * C5978 + C6086 * C5979) *
               C31925 * C440 +
           (((C6053 - C6052) * C118 + (C6055 - C6054) * C31966) * C5975 +
            ((C6057 - C6056) * C118 + (C6059 - C6058) * C31966) * C5976 +
            ((C6061 - C6060) * C118 + (C6063 - C6062) * C31966) * C5977 +
            ((C6065 - C6064) * C118 + (C6067 - C6066) * C31966) * C5978 +
            ((C6068 - C6069) * C118 + (C6070 - C6071) * C31966) * C5979) *
               C31925 * C441) *
              C442 +
          ((((C5980 * C120 - C31862 * C127) * C118 +
             (C5980 * C132 - C31862 * C141) * C31966) *
                C5975 +
            ((C6247 - C6248) * C118 + (C6249 - C6250) * C31966) * C5976 +
            ((C6251 - C6252) * C118 + (C6253 - C6254) * C31966) * C5977 +
            ((C6255 - C6256) * C118 + (C6257 - C6258) * C31966) * C5978 +
            ((C6259 - C6260) * C118 + (C6261 - C6262) * C31966) * C5979) *
               C31925 * C440 +
           (((C6248 - C6247) * C118 + (C6250 - C6249) * C31966) * C5975 +
            ((C6252 - C6251) * C118 + (C6254 - C6253) * C31966) * C5976 +
            ((C6256 - C6255) * C118 + (C6258 - C6257) * C31966) * C5977 +
            ((C6260 - C6259) * C118 + (C6262 - C6261) * C31966) * C5978 +
            ((C31862 * C6243 - C5980 * C6242) * C118 +
             (C31862 * C6245 - C5980 * C6244) * C31966) *
                C5979) *
               C31925 * C441) *
              C443)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31862 * C126 - C5980 * C119) * C1705 +
             (C31862 * C140 - C5980 * C131) * C32274 + (C6820 - C6821) * C1706 +
             (C6822 - C6823) * C32263 + C6842 * C1707 + C6843 * C32241) *
                C5151 +
            ((C6052 - C6053) * C1705 + (C6054 - C6055) * C32274 +
             (C6436 - C6435) * C1706 + (C6438 - C6437) * C32263 +
             C6828 * C1707 + C6829 * C32241) *
                C5152 +
            C6697 * C32238) *
               C31925 * C440 +
           (((C6053 - C6052) * C1705 + (C6055 - C6054) * C32274 +
             (C6435 - C6436) * C1706 + (C6437 - C6438) * C32263 +
             (C6672 - C6671) * C1707 + (C6674 - C6673) * C32241) *
                C5151 +
            ((C6057 - C6056) * C1705 + (C6059 - C6058) * C32274 +
             (C6439 - C6440) * C1706 + (C6441 - C6442) * C32263 +
             (C6680 - C6679) * C1707 + (C6682 - C6681) * C32241) *
                C5152 +
            ((C6061 - C6060) * C1705 + (C6063 - C6062) * C32274 +
             (C6443 - C6444) * C1706 + (C6445 - C6446) * C32263 +
             (C6683 - C6684) * C1707 + (C6685 - C6686) * C32241) *
                C32238) *
               C31925 * C441) *
              C442 +
          ((((C5980 * C120 - C31862 * C127) * C1705 +
             (C5980 * C132 - C31862 * C141) * C32274 +
             (C5980 * C319 - C31862 * C329) * C1706 +
             (C5980 * C334 - C31862 * C349) * C32263 +
             (C5980 * C324 - C31862 * C339) * C1707 +
             (C5980 * C344 - C31862 * C354) * C32241) *
                C5151 +
            ((C6247 - C6248) * C1705 + (C6249 - C6250) * C32274 +
             (C6994 - C6995) * C1706 + (C6996 - C6997) * C32263 +
             (C6998 - C6999) * C1707 + (C7000 - C7001) * C32241) *
                C5152 +
            ((C6251 - C6252) * C1705 + (C6253 - C6254) * C32274 +
             (C7002 - C7003) * C1706 + (C7004 - C7005) * C32263 +
             (C7006 - C7007) * C1707 + (C7008 - C7009) * C32241) *
                C32238) *
               C31925 * C440 +
           (((C6248 - C6247) * C1705 + (C6250 - C6249) * C32274 +
             (C6995 - C6994) * C1706 + (C6997 - C6996) * C32263 +
             (C6999 - C6998) * C1707 + (C7001 - C7000) * C32241) *
                C5151 +
            ((C6252 - C6251) * C1705 + (C6254 - C6253) * C32274 +
             (C7003 - C7002) * C1706 + (C7005 - C7004) * C32263 +
             (C7007 - C7006) * C1707 + (C7009 - C7008) * C32241) *
                C5152 +
            ((C6256 - C6255) * C1705 + (C6258 - C6257) * C32274 +
             (C31862 * C1560 - C5980 * C1557) * C1706 +
             (C31862 * C1566 - C5980 * C1563) * C32263 +
             (C31862 * C6990 - C5980 * C6989) * C1707 +
             (C31862 * C6992 - C5980 * C6991) * C32241) *
                C32238) *
               C31925 * C441) *
              C443)) /
            (p * q * std::sqrt(p + q));
    d2ee[111] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C748 * C126 - C754 * C119 + C749 * C127 - C755 * C120 +
              C32227 * C128 - C756 * C121) *
                 C118 +
             (C748 * C140 - C754 * C131 + C749 * C141 - C755 * C132 +
              C32227 * C142 - C756 * C133) *
                 C31966) *
                C32273 +
            ((C892 - C893 + C894 - C895 + C896 - C897) * C118 +
             (C898 - C899 + C900 - C901 + C902 - C903) * C31966) *
                C32261 +
            C940 * C32238) *
               C530 +
           (((C754 * C318 - C748 * C328 + C755 * C319 - C749 * C329 +
              C756 * C320 - C32227 * C330) *
                 C118 +
             (C754 * C333 - C748 * C348 + C755 * C334 - C749 * C349 +
              C756 * C335 - C32227 * C350) *
                 C31966) *
                C32273 +
            ((C1569 - C1570 + C1571 - C1572 + C1573 - C1574) * C118 +
             (C1575 - C1576 + C1577 - C1578 + C1579 - C1580) * C31966) *
                C32261 +
            ((C1581 - C1582 + C1583 - C1584 + C1585 - C1586) * C118 +
             (C1587 - C1588 + C1589 - C1590 + C1591 - C1592) * C31966) *
                C32238) *
               C531) *
              C440 +
          ((((C893 - C892 + C895 - C894 + C897 - C896) * C118 +
             (C899 - C898 + C901 - C900 + C903 - C902) * C31966) *
                C32273 +
            ((C905 - C904 + C907 - C906 + C909 - C908) * C118 +
             (C911 - C910 + C913 - C912 + C915 - C914) * C31966) *
                C32261 +
            ((C916 - C917 + C918 - C919 + C920 - C921) * C118 +
             (C922 - C923 + C924 - C925 + C926 - C927) * C31966) *
                C32238) *
               C530 +
           (((C1570 - C1569 + C1572 - C1571 + C1574 - C1573) * C118 +
             (C1576 - C1575 + C1578 - C1577 + C1580 - C1579) * C31966) *
                C32273 +
            ((C1582 - C1581 + C1584 - C1583 + C1586 - C1585) * C118 +
             (C1588 - C1587 + C1590 - C1589 + C1592 - C1591) * C31966) *
                C32261 +
            ((C748 * C1559 - C754 * C1556 + C749 * C1560 - C755 * C1557 +
              C32227 * C1561 - C756 * C1558) *
                 C118 +
             (C748 * C1565 - C754 * C1562 + C749 * C1566 - C755 * C1563 +
              C32227 * C1567 - C756 * C1564) *
                 C31966) *
                C32238) *
               C531) *
              C441) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C101 * C126 - C113 * C119 + C102 * C127 - C114 * C120 +
             C103 * C128 - C115 * C121 + C104 * C129 - C116 * C122 +
             C105 * C130 - C117 * C123) *
                C118 +
            (C101 * C140 - C113 * C131 + C102 * C141 - C114 * C132 +
             C103 * C142 - C115 * C133 + C104 * C143 - C116 * C134 +
             C105 * C144 - C117 * C135) *
                C31966) *
               C31955 * C530 +
           ((C113 * C318 - C101 * C328 + C114 * C319 - C102 * C329 +
             C115 * C320 - C103 * C330 + C116 * C321 - C104 * C331 +
             C117 * C322 - C105 * C332) *
                C118 +
            (C113 * C333 - C101 * C348 + C114 * C334 - C102 * C349 +
             C115 * C335 - C103 * C350 + C116 * C336 - C104 * C351 +
             C117 * C337 - C105 * C352) *
                C31966) *
               C31955 * C531) *
              C440 +
          (((C113 * C213 - C101 * C223 + C114 * C214 - C102 * C224 +
             C115 * C215 - C103 * C225 + C116 * C216 - C104 * C226 +
             C117 * C217 - C105 * C227) *
                C118 +
            (C113 * C228 - C101 * C243 + C114 * C229 - C102 * C244 +
             C115 * C230 - C103 * C245 + C116 * C231 - C104 * C246 +
             C117 * C232 - C105 * C247) *
                C31966) *
               C31955 * C530 +
           ((C101 * C623 - C113 * C618 + C102 * C624 - C114 * C619 +
             C103 * C625 - C115 * C620 + C104 * C626 - C116 * C621 +
             C105 * C627 - C117 * C622) *
                C118 +
            (C101 * C633 - C113 * C628 + C102 * C634 - C114 * C629 +
             C103 * C635 - C115 * C630 + C104 * C636 - C116 * C631 +
             C105 * C637 - C117 * C632) *
                C31966) *
               C31955 * C531) *
              C441) *
         C31899) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C748 * C126 - C754 * C119 + C749 * C127 - C755 * C120 +
             C32227 * C128 - C756 * C121) *
                C1705 +
            (C748 * C140 - C754 * C131 + C749 * C141 - C755 * C132 +
             C32227 * C142 - C756 * C133) *
                C32274 +
            (C1953 - C1954 + C1955 - C1956 + C1957 - C1958) * C1706 +
            (C1959 - C1960 + C1961 - C1962 + C1963 - C1964) * C32263 +
            C1997 * C1707 + C1998 * C32241) *
               C31955 * C530 +
           ((C1954 - C1953 + C1956 - C1955 + C1958 - C1957) * C1705 +
            (C1960 - C1959 + C1962 - C1961 + C1964 - C1963) * C32274 +
            (C1966 - C1965 + C1968 - C1967 + C1970 - C1969) * C1706 +
            (C1972 - C1971 + C1974 - C1973 + C1976 - C1975) * C32263 +
            (C1977 - C1978 + C1979 - C1980 + C1981 - C1982) * C1707 +
            (C1983 - C1984 + C1985 - C1986 + C1987 - C1988) * C32241) *
               C31955 * C531) *
              C440 +
          (((C893 - C892 + C895 - C894 + C897 - C896) * C1705 +
            (C899 - C898 + C901 - C900 + C903 - C902) * C32274 +
            (C1569 - C1570 + C1571 - C1572 + C1573 - C1574) * C1706 +
            (C1575 - C1576 + C1577 - C1578 + C1579 - C1580) * C32263 +
            (C2481 - C2482 + C2483 - C2484 + C2485 - C2486) * C1707 +
            (C2487 - C2488 + C2489 - C2490 + C2491 - C2492) * C32241) *
               C31955 * C530 +
           ((C1570 - C1569 + C1572 - C1571 + C1574 - C1573) * C1705 +
            (C1576 - C1575 + C1578 - C1577 + C1580 - C1579) * C32274 +
            (C2482 - C2481 + C2484 - C2483 + C2486 - C2485) * C1706 +
            (C2488 - C2487 + C2490 - C2489 + C2492 - C2491) * C32263 +
            (C748 * C2471 - C754 * C2468 + C749 * C2472 - C755 * C2469 +
             C32227 * C2473 - C756 * C2470) *
                C1707 +
            (C748 * C2477 - C754 * C2474 + C749 * C2478 - C755 * C2475 +
             C32227 * C2479 - C756 * C2476) *
                C32241) *
               C31955 * C531) *
              C441) *
         C31899) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C32270 * C126 - C5154 * C119 + C32257 * C127 - C5155 * C120 +
              C32227 * C128 - C5156 * C121) *
                 C118 +
             (C32270 * C140 - C5154 * C131 + C32257 * C141 - C5155 * C132 +
              C32227 * C142 - C5156 * C133) *
                 C31966) *
                C5151 +
            ((C5268 - C5269 + C5270 - C5271 + C5272 - C5273) * C118 +
             (C5274 - C5275 + C5276 - C5277 + C5278 - C5279) * C31966) *
                C5152 +
            C5316 * C32238) *
               C530 +
           (((C5154 * C318 - C32270 * C328 + C5155 * C319 - C32257 * C329 +
              C5156 * C320 - C32227 * C330) *
                 C118 +
             (C5154 * C333 - C32270 * C348 + C5155 * C334 - C32257 * C349 +
              C5156 * C335 - C32227 * C350) *
                 C31966) *
                C5151 +
            ((C5889 - C5890 + C5891 - C5892 + C5893 - C5894) * C118 +
             (C5895 - C5896 + C5897 - C5898 + C5899 - C5900) * C31966) *
                C5152 +
            ((C5901 - C5902 + C5903 - C5904 + C5905 - C5906) * C118 +
             (C5907 - C5908 + C5909 - C5910 + C5911 - C5912) * C31966) *
                C32238) *
               C531) *
              C440 +
          ((((C5269 - C5268 + C5271 - C5270 + C5273 - C5272) * C118 +
             (C5275 - C5274 + C5277 - C5276 + C5279 - C5278) * C31966) *
                C5151 +
            ((C5281 - C5280 + C5283 - C5282 + C5285 - C5284) * C118 +
             (C5287 - C5286 + C5289 - C5288 + C5291 - C5290) * C31966) *
                C5152 +
            ((C5292 - C5293 + C5294 - C5295 + C5296 - C5297) * C118 +
             (C5298 - C5299 + C5300 - C5301 + C5302 - C5303) * C31966) *
                C32238) *
               C530 +
           (((C5890 - C5889 + C5892 - C5891 + C5894 - C5893) * C118 +
             (C5896 - C5895 + C5898 - C5897 + C5900 - C5899) * C31966) *
                C5151 +
            ((C5902 - C5901 + C5904 - C5903 + C5906 - C5905) * C118 +
             (C5908 - C5907 + C5910 - C5909 + C5912 - C5911) * C31966) *
                C5152 +
            ((C32270 * C1559 - C5154 * C1556 + C32257 * C1560 - C5155 * C1557 +
              C32227 * C1561 - C5156 * C1558) *
                 C118 +
             (C32270 * C1565 - C5154 * C1562 + C32257 * C1566 - C5155 * C1563 +
              C32227 * C1567 - C5156 * C1564) *
                 C31966) *
                C32238) *
               C531) *
              C441) *
         C31899) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C31862 * C126 - C5980 * C119) * C118 +
             (C31862 * C140 - C5980 * C131) * C31966) *
                C5975 +
            ((C6052 - C6053) * C118 + (C6054 - C6055) * C31966) * C5976 +
            C6084 * C5977 + C6085 * C5978 + C6086 * C5979) *
               C530 +
           (((C5980 * C318 - C31862 * C328) * C118 +
             (C5980 * C333 - C31862 * C348) * C31966) *
                C5975 +
            ((C6435 - C6436) * C118 + (C6437 - C6438) * C31966) * C5976 +
            ((C6439 - C6440) * C118 + (C6441 - C6442) * C31966) * C5977 +
            ((C6443 - C6444) * C118 + (C6445 - C6446) * C31966) * C5978 +
            ((C6447 - C6448) * C118 + (C6449 - C6450) * C31966) * C5979) *
               C531) *
              C440 +
          ((((C6053 - C6052) * C118 + (C6055 - C6054) * C31966) * C5975 +
            ((C6057 - C6056) * C118 + (C6059 - C6058) * C31966) * C5976 +
            ((C6061 - C6060) * C118 + (C6063 - C6062) * C31966) * C5977 +
            ((C6065 - C6064) * C118 + (C6067 - C6066) * C31966) * C5978 +
            ((C6068 - C6069) * C118 + (C6070 - C6071) * C31966) * C5979) *
               C530 +
           (((C6436 - C6435) * C118 + (C6438 - C6437) * C31966) * C5975 +
            ((C6440 - C6439) * C118 + (C6442 - C6441) * C31966) * C5976 +
            ((C6444 - C6443) * C118 + (C6446 - C6445) * C31966) * C5977 +
            ((C6448 - C6447) * C118 + (C6450 - C6449) * C31966) * C5978 +
            ((C31862 * C6431 - C5980 * C6430) * C118 +
             (C31862 * C6433 - C5980 * C6432) * C31966) *
                C5979) *
               C531) *
              C441) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31862 * C126 - C5980 * C119) * C1705 +
             (C31862 * C140 - C5980 * C131) * C32274 + (C6820 - C6821) * C1706 +
             (C6822 - C6823) * C32263 + C6842 * C1707 + C6843 * C32241) *
                C5151 +
            ((C6052 - C6053) * C1705 + (C6054 - C6055) * C32274 +
             C7318 * C1706 + C7319 * C32263 + C6828 * C1707 + C6829 * C32241) *
                C5152 +
            C6697 * C32238) *
               C530 +
           (((C6821 - C6820) * C1705 + (C6823 - C6822) * C32274 +
             (C6825 - C6824) * C1706 + (C6827 - C6826) * C32263 +
             (C6830 - C6831) * C1707 + (C6832 - C6833) * C32241) *
                C5151 +
            (C7320 * C1705 + C7321 * C32274 + C7322 * C1706 + C7323 * C32263 +
             (C6834 - C6835) * C1707 + (C6836 - C6837) * C32241) *
                C5152 +
            (C7324 * C1705 + C7325 * C32274 + C7326 * C1706 + C7327 * C32263 +
             (C6838 - C6839) * C1707 + (C6840 - C6841) * C32241) *
                C32238) *
               C531) *
              C440 +
          ((((C6053 - C6052) * C1705 + (C6055 - C6054) * C32274 +
             C7320 * C1706 + C7321 * C32263 + C7322 * C1707 + C7323 * C32241) *
                C5151 +
            ((C6057 - C6056) * C1705 + (C6059 - C6058) * C32274 +
             C7324 * C1706 + C7325 * C32263 + C7326 * C1707 + C7327 * C32241) *
                C5152 +
            ((C6061 - C6060) * C1705 + (C6063 - C6062) * C32274 +
             (C6443 - C6444) * C1706 + (C6445 - C6446) * C32263 +
             (C6683 - C6684) * C1707 + (C6685 - C6686) * C32241) *
                C32238) *
               C530 +
           ((C7318 * C1705 + C7319 * C32274 + C6828 * C1706 + C6829 * C32263 +
             (C6835 - C6834) * C1707 + (C6837 - C6836) * C32241) *
                C5151 +
            (C6677 * C1705 + C6678 * C32274 + C6690 * C1706 + C6691 * C32263 +
             (C6839 - C6838) * C1707 + (C6841 - C6840) * C32241) *
                C5152 +
            ((C6444 - C6443) * C1705 + (C6446 - C6445) * C32274 +
             (C6684 - C6683) * C1706 + (C6686 - C6685) * C32263 +
             (C31862 * C7314 - C5980 * C7313) * C1707 +
             (C31862 * C7316 - C5980 * C7315) * C32241) *
                C32238) *
               C531) *
              C441) *
         C31899) /
            (p * q * std::sqrt(p + q));
    d2ee[112] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             (((C101 * C126 - C113 * C119 + C102 * C127 - C114 * C120 +
                C103 * C128 - C115 * C121 + C104 * C129 - C116 * C122 +
                C105 * C130 - C117 * C123) *
                   C118 +
               (C101 * C140 - C113 * C131 + C102 * C141 - C114 * C132 +
                C103 * C142 - C115 * C133 + C104 * C143 - C116 * C134 +
                C105 * C144 - C117 * C135) *
                   C31966) *
                  C31955 * C31925 * C31911 * C110 +
              ((C113 * C120 - C101 * C127 + C114 * C121 - C102 * C128 +
                C115 * C122 - C103 * C129 + C116 * C123 - C104 * C130 +
                C117 * C124 - C105 * C136) *
                   C118 +
               (C113 * C132 - C101 * C141 + C114 * C133 - C102 * C142 +
                C115 * C134 - C103 * C143 + C116 * C135 - C104 * C144 +
                C117 * C137 - C105 * C145) *
                   C31966) *
                  C31955 * C31925 * C31911 * C111 +
              ((C101 * C128 - C113 * C121 + C102 * C129 - C114 * C122 +
                C103 * C130 - C115 * C123 + C104 * C136 - C116 * C124 +
                C105 * C138 - C117 * C125) *
                   C118 +
               (C101 * C142 - C113 * C133 + C102 * C143 - C114 * C134 +
                C103 * C144 - C115 * C135 + C104 * C145 - C116 * C137 +
                C105 * C146 - C117 * C139) *
                   C31966) *
                  C31955 * C31925 * C31911 * C112) +
         std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             (((C101 * C126 - C113 * C119 + C102 * C127 - C114 * C120 +
                C103 * C128 - C115 * C121 + C104 * C129 - C116 * C122 +
                C105 * C130 - C117 * C123) *
                   C118 +
               (C101 * C140 - C113 * C131 + C102 * C141 - C114 * C132 +
                C103 * C142 - C115 * C133 + C104 * C143 - C116 * C134 +
                C105 * C144 - C117 * C135) *
                   C31966) *
                  C31955 * C31925 * C209 +
              ((C113 * C213 - C101 * C223 + C114 * C214 - C102 * C224 +
                C115 * C215 - C103 * C225 + C116 * C216 - C104 * C226 +
                C117 * C217 - C105 * C227) *
                   C118 +
               (C113 * C228 - C101 * C243 + C114 * C229 - C102 * C244 +
                C115 * C230 - C103 * C245 + C116 * C231 - C104 * C246 +
                C117 * C232 - C105 * C247) *
                   C31966) *
                  C31955 * C31925 * C210 +
              ((C101 * C233 - C113 * C218 + C102 * C234 - C114 * C219 +
                C103 * C235 - C115 * C220 + C104 * C236 - C116 * C221 +
                C105 * C237 - C117 * C222) *
                   C118 +
               (C101 * C248 - C113 * C238 + C102 * C249 - C114 * C239 +
                C103 * C250 - C115 * C240 + C104 * C251 - C116 * C241 +
                C105 * C252 - C117 * C242) *
                   C31966) *
                  C31955 * C31925 * C211) *
             C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C101 * C126 - C113 * C119 + C102 * C127 - C114 * C120 +
            C103 * C128 - C115 * C121 + C104 * C129 - C116 * C122 +
            C105 * C130 - C117 * C123) *
               C118 +
           (C101 * C140 - C113 * C131 + C102 * C141 - C114 * C132 +
            C103 * C142 - C115 * C133 + C104 * C143 - C116 * C134 +
            C105 * C144 - C117 * C135) *
               C31966) *
              C31955 * C315 +
          ((C113 * C318 - C101 * C328 + C114 * C319 - C102 * C329 +
            C115 * C320 - C103 * C330 + C116 * C321 - C104 * C331 +
            C117 * C322 - C105 * C332) *
               C118 +
           (C113 * C333 - C101 * C348 + C114 * C334 - C102 * C349 +
            C115 * C335 - C103 * C350 + C116 * C336 - C104 * C351 +
            C117 * C337 - C105 * C352) *
               C31966) *
              C31955 * C316 +
          ((C101 * C338 - C113 * C323 + C102 * C339 - C114 * C324 +
            C103 * C340 - C115 * C325 + C104 * C341 - C116 * C326 +
            C105 * C342 - C117 * C327) *
               C118 +
           (C101 * C353 - C113 * C343 + C102 * C354 - C114 * C344 +
            C103 * C355 - C115 * C345 + C104 * C356 - C116 * C346 +
            C105 * C357 - C117 * C347) *
               C31966) *
              C31955 * C317) *
         C31911 * C31899) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C748 * C126 - C754 * C119 + C749 * C127 - C755 * C120 +
             C32227 * C128 - C756 * C121) *
                C118 +
            (C748 * C140 - C754 * C131 + C749 * C141 - C755 * C132 +
             C32227 * C142 - C756 * C133) *
                C31966) *
               C32273 +
           ((C748 * C223 - C754 * C213 + C749 * C224 - C755 * C214 +
             C32227 * C225 - C756 * C215) *
                C118 +
            (C748 * C243 - C754 * C228 + C749 * C244 - C755 * C229 +
             C32227 * C245 - C756 * C230) *
                C31966) *
               C32261 +
           ((C748 * C233 - C754 * C218 + C749 * C234 - C755 * C219 +
             C32227 * C235 - C756 * C220) *
                C118 +
            (C748 * C248 - C754 * C238 + C749 * C249 - C755 * C239 +
             C32227 * C250 - C756 * C240) *
                C31966) *
               C32238) *
              C31925 * C31911 * C110 +
          (((C754 * C120 - C748 * C127 + C755 * C121 - C749 * C128 +
             C756 * C122 - C32227 * C129) *
                C118 +
            (C754 * C132 - C748 * C141 + C755 * C133 - C749 * C142 +
             C756 * C134 - C32227 * C143) *
                C31966) *
               C32273 +
           ((C754 * C214 - C748 * C224 + C755 * C215 - C749 * C225 +
             C756 * C216 - C32227 * C226) *
                C118 +
            (C754 * C229 - C748 * C244 + C755 * C230 - C749 * C245 +
             C756 * C231 - C32227 * C246) *
                C31966) *
               C32261 +
           ((C754 * C219 - C748 * C234 + C755 * C220 - C749 * C235 +
             C756 * C221 - C32227 * C236) *
                C118 +
            (C754 * C239 - C748 * C249 + C755 * C240 - C749 * C250 +
             C756 * C241 - C32227 * C251) *
                C31966) *
               C32238) *
              C31925 * C31911 * C111 +
          (((C748 * C128 - C754 * C121 + C749 * C129 - C755 * C122 +
             C32227 * C130 - C756 * C123) *
                C118 +
            (C748 * C142 - C754 * C133 + C749 * C143 - C755 * C134 +
             C32227 * C144 - C756 * C135) *
                C31966) *
               C32273 +
           ((C748 * C225 - C754 * C215 + C749 * C226 - C755 * C216 +
             C32227 * C227 - C756 * C217) *
                C118 +
            (C748 * C245 - C754 * C230 + C749 * C246 - C755 * C231 +
             C32227 * C247 - C756 * C232) *
                C31966) *
               C32261 +
           ((C748 * C235 - C754 * C220 + C749 * C236 - C755 * C221 +
             C32227 * C237 - C756 * C222) *
                C118 +
            (C748 * C250 - C754 * C240 + C749 * C251 - C755 * C241 +
             C32227 * C252 - C756 * C242) *
                C31966) *
               C32238) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C748 * C126 - C754 * C119 + C749 * C127 - C755 * C120 +
             C32227 * C128 - C756 * C121) *
                C118 +
            (C748 * C140 - C754 * C131 + C749 * C141 - C755 * C132 +
             C32227 * C142 - C756 * C133) *
                C31966) *
               C32273 +
           ((C892 - C893 + C894 - C895 + C896 - C897) * C118 +
            (C898 - C899 + C900 - C901 + C902 - C903) * C31966) *
               C32261 +
           C940 * C32238) *
              C31925 * C209 +
          (((C893 - C892 + C895 - C894 + C897 - C896) * C118 +
            (C899 - C898 + C901 - C900 + C903 - C902) * C31966) *
               C32273 +
           ((C905 - C904 + C907 - C906 + C909 - C908) * C118 +
            (C911 - C910 + C913 - C912 + C915 - C914) * C31966) *
               C32261 +
           ((C916 - C917 + C918 - C919 + C920 - C921) * C118 +
            (C922 - C923 + C924 - C925 + C926 - C927) * C31966) *
               C32238) *
              C31925 * C210 +
          (C940 * C32273 +
           ((C917 - C916 + C919 - C918 + C921 - C920) * C118 +
            (C923 - C922 + C925 - C924 + C927 - C926) * C31966) *
               C32261 +
           ((C748 * C879 - C754 * C870 + C749 * C880 - C755 * C871 +
             C32227 * C881 - C756 * C872) *
                C118 +
            (C748 * C888 - C754 * C882 + C749 * C889 - C755 * C883 +
             C32227 * C890 - C756 * C884) *
                C31966) *
               C32238) *
              C31925 * C211) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C748 * C126 - C754 * C119 + C749 * C127 - C755 * C120 +
             C32227 * C128 - C756 * C121) *
                C118 +
            (C748 * C140 - C754 * C131 + C749 * C141 - C755 * C132 +
             C32227 * C142 - C756 * C133) *
                C31966) *
               C32273 +
           ((C892 - C893 + C894 - C895 + C896 - C897) * C118 +
            (C898 - C899 + C900 - C901 + C902 - C903) * C31966) *
               C32261 +
           C940 * C32238) *
              C315 +
          (((C754 * C318 - C748 * C328 + C755 * C319 - C749 * C329 +
             C756 * C320 - C32227 * C330) *
                C118 +
            (C754 * C333 - C748 * C348 + C755 * C334 - C749 * C349 +
             C756 * C335 - C32227 * C350) *
                C31966) *
               C32273 +
           ((C754 * C618 - C748 * C623 + C755 * C619 - C749 * C624 +
             C756 * C620 - C32227 * C625) *
                C118 +
            (C754 * C628 - C748 * C633 + C755 * C629 - C749 * C634 +
             C756 * C630 - C32227 * C635) *
                C31966) *
               C32261 +
           ((C754 * C1050 - C748 * C1059 + C755 * C1051 - C749 * C1060 +
             C756 * C1052 - C32227 * C1061) *
                C118 +
            (C754 * C1062 - C748 * C1077 + C755 * C1063 - C749 * C1078 +
             C756 * C1064 - C32227 * C1079) *
                C31966) *
               C32238) *
              C316 +
          (((C748 * C338 - C754 * C323 + C749 * C339 - C755 * C324 +
             C32227 * C340 - C756 * C325) *
                C118 +
            (C748 * C353 - C754 * C343 + C749 * C354 - C755 * C344 +
             C32227 * C355 - C756 * C345) *
                C31966) *
               C32273 +
           ((C748 * C1065 - C754 * C1053 + C749 * C1066 - C755 * C1054 +
             C32227 * C1067 - C756 * C1055) *
                C118 +
            (C748 * C1080 - C754 * C1068 + C749 * C1081 - C755 * C1069 +
             C32227 * C1082 - C756 * C1070) *
                C31966) *
               C32261 +
           ((C748 * C1071 - C754 * C1056 + C749 * C1072 - C755 * C1057 +
             C32227 * C1073 - C756 * C1058) *
                C118 +
            (C748 * C1083 - C754 * C1074 + C749 * C1084 - C755 * C1075 +
             C32227 * C1085 - C756 * C1076) *
                C31966) *
               C32238) *
              C317) *
         C31911 * C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C748 * C126 - C754 * C119 + C749 * C127 - C755 * C120 +
            C32227 * C128 - C756 * C121) *
               C1705 +
           (C748 * C140 - C754 * C131 + C749 * C141 - C755 * C132 +
            C32227 * C142 - C756 * C133) *
               C32274 +
           (C748 * C328 - C754 * C318 + C749 * C329 - C755 * C319 +
            C32227 * C330 - C756 * C320) *
               C1706 +
           (C748 * C348 - C754 * C333 + C749 * C349 - C755 * C334 +
            C32227 * C350 - C756 * C335) *
               C32263 +
           (C748 * C338 - C754 * C323 + C749 * C339 - C755 * C324 +
            C32227 * C340 - C756 * C325) *
               C1707 +
           (C748 * C353 - C754 * C343 + C749 * C354 - C755 * C344 +
            C32227 * C355 - C756 * C345) *
               C32241) *
              C31955 * C31925 * C31911 * C110 +
          ((C754 * C120 - C748 * C127 + C755 * C121 - C749 * C128 +
            C756 * C122 - C32227 * C129) *
               C1705 +
           (C754 * C132 - C748 * C141 + C755 * C133 - C749 * C142 +
            C756 * C134 - C32227 * C143) *
               C32274 +
           (C754 * C319 - C748 * C329 + C755 * C320 - C749 * C330 +
            C756 * C321 - C32227 * C331) *
               C1706 +
           (C754 * C334 - C748 * C349 + C755 * C335 - C749 * C350 +
            C756 * C336 - C32227 * C351) *
               C32263 +
           (C754 * C324 - C748 * C339 + C755 * C325 - C749 * C340 +
            C756 * C326 - C32227 * C341) *
               C1707 +
           (C754 * C344 - C748 * C354 + C755 * C345 - C749 * C355 +
            C756 * C346 - C32227 * C356) *
               C32241) *
              C31955 * C31925 * C31911 * C111 +
          ((C748 * C128 - C754 * C121 + C749 * C129 - C755 * C122 +
            C32227 * C130 - C756 * C123) *
               C1705 +
           (C748 * C142 - C754 * C133 + C749 * C143 - C755 * C134 +
            C32227 * C144 - C756 * C135) *
               C32274 +
           (C748 * C330 - C754 * C320 + C749 * C331 - C755 * C321 +
            C32227 * C332 - C756 * C322) *
               C1706 +
           (C748 * C350 - C754 * C335 + C749 * C351 - C755 * C336 +
            C32227 * C352 - C756 * C337) *
               C32263 +
           (C748 * C340 - C754 * C325 + C749 * C341 - C755 * C326 +
            C32227 * C342 - C756 * C327) *
               C1707 +
           (C748 * C355 - C754 * C345 + C749 * C356 - C755 * C346 +
            C32227 * C357 - C756 * C347) *
               C32241) *
              C31955 * C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C748 * C126 - C754 * C119 + C749 * C127 - C755 * C120 +
            C32227 * C128 - C756 * C121) *
               C1705 +
           (C748 * C140 - C754 * C131 + C749 * C141 - C755 * C132 +
            C32227 * C142 - C756 * C133) *
               C32274 +
           (C748 * C328 - C754 * C318 + C749 * C329 - C755 * C319 +
            C32227 * C330 - C756 * C320) *
               C1706 +
           (C748 * C348 - C754 * C333 + C749 * C349 - C755 * C334 +
            C32227 * C350 - C756 * C335) *
               C32263 +
           (C748 * C338 - C754 * C323 + C749 * C339 - C755 * C324 +
            C32227 * C340 - C756 * C325) *
               C1707 +
           (C748 * C353 - C754 * C343 + C749 * C354 - C755 * C344 +
            C32227 * C355 - C756 * C345) *
               C32241) *
              C31955 * C31925 * C209 +
          ((C893 - C892 + C895 - C894 + C897 - C896) * C1705 +
           (C899 - C898 + C901 - C900 + C903 - C902) * C32274 +
           (C1569 - C1570 + C1571 - C1572 + C1573 - C1574) * C1706 +
           (C1575 - C1576 + C1577 - C1578 + C1579 - C1580) * C32263 +
           (C754 * C1053 - C748 * C1065 + C755 * C1054 - C749 * C1066 +
            C756 * C1055 - C32227 * C1067) *
               C1707 +
           (C754 * C1068 - C748 * C1080 + C755 * C1069 - C749 * C1081 +
            C756 * C1070 - C32227 * C1082) *
               C32241) *
              C31955 * C31925 * C210 +
          (C936 * C1705 + C937 * C32274 +
           (C1582 - C1581 + C1584 - C1583 + C1586 - C1585) * C1706 +
           (C1588 - C1587 + C1590 - C1589 + C1592 - C1591) * C32263 +
           (C748 * C1071 - C754 * C1056 + C749 * C1072 - C755 * C1057 +
            C32227 * C1073 - C756 * C1058) *
               C1707 +
           (C748 * C1083 - C754 * C1074 + C749 * C1084 - C755 * C1075 +
            C32227 * C1085 - C756 * C1076) *
               C32241) *
              C31955 * C31925 * C211) *
         C31899) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C748 * C126 - C754 * C119 + C749 * C127 - C755 * C120 +
            C32227 * C128 - C756 * C121) *
               C1705 +
           (C748 * C140 - C754 * C131 + C749 * C141 - C755 * C132 +
            C32227 * C142 - C756 * C133) *
               C32274 +
           (C1953 - C1954 + C1955 - C1956 + C1957 - C1958) * C1706 +
           (C1959 - C1960 + C1961 - C1962 + C1963 - C1964) * C32263 +
           C1997 * C1707 + C1998 * C32241) *
              C31955 * C315 +
          ((C1954 - C1953 + C1956 - C1955 + C1958 - C1957) * C1705 +
           (C1960 - C1959 + C1962 - C1961 + C1964 - C1963) * C32274 +
           (C1966 - C1965 + C1968 - C1967 + C1970 - C1969) * C1706 +
           (C1972 - C1971 + C1974 - C1973 + C1976 - C1975) * C32263 +
           (C1977 - C1978 + C1979 - C1980 + C1981 - C1982) * C1707 +
           (C1983 - C1984 + C1985 - C1986 + C1987 - C1988) * C32241) *
              C31955 * C316 +
          (C1997 * C1705 + C1998 * C32274 +
           (C1978 - C1977 + C1980 - C1979 + C1982 - C1981) * C1706 +
           (C1984 - C1983 + C1986 - C1985 + C1988 - C1987) * C32263 +
           (C748 * C1940 - C754 * C1931 + C749 * C1941 - C755 * C1932 +
            C32227 * C1942 - C756 * C1933) *
               C1707 +
           (C748 * C1949 - C754 * C1943 + C749 * C1950 - C755 * C1944 +
            C32227 * C1951 - C756 * C1945) *
               C32241) *
              C31955 * C317) *
         C31911 * C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C32270 * C126 - C5154 * C119 + C32257 * C127 - C5155 * C120 +
             C32227 * C128 - C5156 * C121) *
                C118 +
            (C32270 * C140 - C5154 * C131 + C32257 * C141 - C5155 * C132 +
             C32227 * C142 - C5156 * C133) *
                C31966) *
               C5151 +
           ((C32270 * C223 - C5154 * C213 + C32257 * C224 - C5155 * C214 +
             C32227 * C225 - C5156 * C215) *
                C118 +
            (C32270 * C243 - C5154 * C228 + C32257 * C244 - C5155 * C229 +
             C32227 * C245 - C5156 * C230) *
                C31966) *
               C5152 +
           ((C32270 * C233 - C5154 * C218 + C32257 * C234 - C5155 * C219 +
             C32227 * C235 - C5156 * C220) *
                C118 +
            (C32270 * C248 - C5154 * C238 + C32257 * C249 - C5155 * C239 +
             C32227 * C250 - C5156 * C240) *
                C31966) *
               C32238) *
              C31925 * C31911 * C110 +
          (((C5154 * C120 - C32270 * C127 + C5155 * C121 - C32257 * C128 +
             C5156 * C122 - C32227 * C129) *
                C118 +
            (C5154 * C132 - C32270 * C141 + C5155 * C133 - C32257 * C142 +
             C5156 * C134 - C32227 * C143) *
                C31966) *
               C5151 +
           ((C5154 * C214 - C32270 * C224 + C5155 * C215 - C32257 * C225 +
             C5156 * C216 - C32227 * C226) *
                C118 +
            (C5154 * C229 - C32270 * C244 + C5155 * C230 - C32257 * C245 +
             C5156 * C231 - C32227 * C246) *
                C31966) *
               C5152 +
           ((C5154 * C219 - C32270 * C234 + C5155 * C220 - C32257 * C235 +
             C5156 * C221 - C32227 * C236) *
                C118 +
            (C5154 * C239 - C32270 * C249 + C5155 * C240 - C32257 * C250 +
             C5156 * C241 - C32227 * C251) *
                C31966) *
               C32238) *
              C31925 * C31911 * C111 +
          (((C32270 * C128 - C5154 * C121 + C32257 * C129 - C5155 * C122 +
             C32227 * C130 - C5156 * C123) *
                C118 +
            (C32270 * C142 - C5154 * C133 + C32257 * C143 - C5155 * C134 +
             C32227 * C144 - C5156 * C135) *
                C31966) *
               C5151 +
           ((C32270 * C225 - C5154 * C215 + C32257 * C226 - C5155 * C216 +
             C32227 * C227 - C5156 * C217) *
                C118 +
            (C32270 * C245 - C5154 * C230 + C32257 * C246 - C5155 * C231 +
             C32227 * C247 - C5156 * C232) *
                C31966) *
               C5152 +
           ((C32270 * C235 - C5154 * C220 + C32257 * C236 - C5155 * C221 +
             C32227 * C237 - C5156 * C222) *
                C118 +
            (C32270 * C250 - C5154 * C240 + C32257 * C251 - C5155 * C241 +
             C32227 * C252 - C5156 * C242) *
                C31966) *
               C32238) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C32270 * C126 - C5154 * C119 + C32257 * C127 - C5155 * C120 +
             C32227 * C128 - C5156 * C121) *
                C118 +
            (C32270 * C140 - C5154 * C131 + C32257 * C141 - C5155 * C132 +
             C32227 * C142 - C5156 * C133) *
                C31966) *
               C5151 +
           ((C5268 - C5269 + C5270 - C5271 + C5272 - C5273) * C118 +
            (C5274 - C5275 + C5276 - C5277 + C5278 - C5279) * C31966) *
               C5152 +
           C5316 * C32238) *
              C31925 * C209 +
          (((C5269 - C5268 + C5271 - C5270 + C5273 - C5272) * C118 +
            (C5275 - C5274 + C5277 - C5276 + C5279 - C5278) * C31966) *
               C5151 +
           ((C5281 - C5280 + C5283 - C5282 + C5285 - C5284) * C118 +
            (C5287 - C5286 + C5289 - C5288 + C5291 - C5290) * C31966) *
               C5152 +
           ((C5292 - C5293 + C5294 - C5295 + C5296 - C5297) * C118 +
            (C5298 - C5299 + C5300 - C5301 + C5302 - C5303) * C31966) *
               C32238) *
              C31925 * C210 +
          (C5316 * C5151 +
           ((C5293 - C5292 + C5295 - C5294 + C5297 - C5296) * C118 +
            (C5299 - C5298 + C5301 - C5300 + C5303 - C5302) * C31966) *
               C5152 +
           ((C32270 * C879 - C5154 * C870 + C32257 * C880 - C5155 * C871 +
             C32227 * C881 - C5156 * C872) *
                C118 +
            (C32270 * C888 - C5154 * C882 + C32257 * C889 - C5155 * C883 +
             C32227 * C890 - C5156 * C884) *
                C31966) *
               C32238) *
              C31925 * C211) *
         C31899) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C32270 * C126 - C5154 * C119 + C32257 * C127 - C5155 * C120 +
             C32227 * C128 - C5156 * C121) *
                C118 +
            (C32270 * C140 - C5154 * C131 + C32257 * C141 - C5155 * C132 +
             C32227 * C142 - C5156 * C133) *
                C31966) *
               C5151 +
           ((C5268 - C5269 + C5270 - C5271 + C5272 - C5273) * C118 +
            (C5274 - C5275 + C5276 - C5277 + C5278 - C5279) * C31966) *
               C5152 +
           C5316 * C32238) *
              C315 +
          (((C5154 * C318 - C32270 * C328 + C5155 * C319 - C32257 * C329 +
             C5156 * C320 - C32227 * C330) *
                C118 +
            (C5154 * C333 - C32270 * C348 + C5155 * C334 - C32257 * C349 +
             C5156 * C335 - C32227 * C350) *
                C31966) *
               C5151 +
           ((C5154 * C618 - C32270 * C623 + C5155 * C619 - C32257 * C624 +
             C5156 * C620 - C32227 * C625) *
                C118 +
            (C5154 * C628 - C32270 * C633 + C5155 * C629 - C32257 * C634 +
             C5156 * C630 - C32227 * C635) *
                C31966) *
               C5152 +
           ((C5154 * C1050 - C32270 * C1059 + C5155 * C1051 - C32257 * C1060 +
             C5156 * C1052 - C32227 * C1061) *
                C118 +
            (C5154 * C1062 - C32270 * C1077 + C5155 * C1063 - C32257 * C1078 +
             C5156 * C1064 - C32227 * C1079) *
                C31966) *
               C32238) *
              C316 +
          (((C32270 * C338 - C5154 * C323 + C32257 * C339 - C5155 * C324 +
             C32227 * C340 - C5156 * C325) *
                C118 +
            (C32270 * C353 - C5154 * C343 + C32257 * C354 - C5155 * C344 +
             C32227 * C355 - C5156 * C345) *
                C31966) *
               C5151 +
           ((C32270 * C1065 - C5154 * C1053 + C32257 * C1066 - C5155 * C1054 +
             C32227 * C1067 - C5156 * C1055) *
                C118 +
            (C32270 * C1080 - C5154 * C1068 + C32257 * C1081 - C5155 * C1069 +
             C32227 * C1082 - C5156 * C1070) *
                C31966) *
               C5152 +
           ((C32270 * C1071 - C5154 * C1056 + C32257 * C1072 - C5155 * C1057 +
             C32227 * C1073 - C5156 * C1058) *
                C118 +
            (C32270 * C1083 - C5154 * C1074 + C32257 * C1084 - C5155 * C1075 +
             C32227 * C1085 - C5156 * C1076) *
                C31966) *
               C32238) *
              C317) *
         C31911 * C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C31862 * C126 - C5980 * C119) * C118 +
            (C31862 * C140 - C5980 * C131) * C31966) *
               C5975 +
           ((C31862 * C223 - C5980 * C213) * C118 +
            (C31862 * C243 - C5980 * C228) * C31966) *
               C5976 +
           ((C31862 * C233 - C5980 * C218) * C118 +
            (C31862 * C248 - C5980 * C238) * C31966) *
               C5977 +
           ((C31862 * C873 - C5980 * C867) * C118 +
            (C31862 * C885 - C5980 * C876) * C31966) *
               C5978 +
           ((C31862 * C879 - C5980 * C870) * C118 +
            (C31862 * C888 - C5980 * C882) * C31966) *
               C5979) *
              C31925 * C31911 * C110 +
          (((C5980 * C120 - C31862 * C127) * C118 +
            (C5980 * C132 - C31862 * C141) * C31966) *
               C5975 +
           ((C5980 * C214 - C31862 * C224) * C118 +
            (C5980 * C229 - C31862 * C244) * C31966) *
               C5976 +
           ((C5980 * C219 - C31862 * C234) * C118 +
            (C5980 * C239 - C31862 * C249) * C31966) *
               C5977 +
           ((C5980 * C868 - C31862 * C874) * C118 +
            (C5980 * C877 - C31862 * C886) * C31966) *
               C5978 +
           ((C5980 * C871 - C31862 * C880) * C118 +
            (C5980 * C883 - C31862 * C889) * C31966) *
               C5979) *
              C31925 * C31911 * C111 +
          (((C31862 * C128 - C5980 * C121) * C118 +
            (C31862 * C142 - C5980 * C133) * C31966) *
               C5975 +
           ((C31862 * C225 - C5980 * C215) * C118 +
            (C31862 * C245 - C5980 * C230) * C31966) *
               C5976 +
           ((C31862 * C235 - C5980 * C220) * C118 +
            (C31862 * C250 - C5980 * C240) * C31966) *
               C5977 +
           ((C31862 * C875 - C5980 * C869) * C118 +
            (C31862 * C887 - C5980 * C878) * C31966) *
               C5978 +
           ((C31862 * C881 - C5980 * C872) * C118 +
            (C31862 * C890 - C5980 * C884) * C31966) *
               C5979) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C31862 * C126 - C5980 * C119) * C118 +
            (C31862 * C140 - C5980 * C131) * C31966) *
               C5975 +
           ((C6052 - C6053) * C118 + (C6054 - C6055) * C31966) * C5976 +
           C6084 * C5977 + C6085 * C5978 + C6086 * C5979) *
              C31925 * C209 +
          (((C6053 - C6052) * C118 + (C6055 - C6054) * C31966) * C5975 +
           ((C6057 - C6056) * C118 + (C6059 - C6058) * C31966) * C5976 +
           ((C6061 - C6060) * C118 + (C6063 - C6062) * C31966) * C5977 +
           ((C6065 - C6064) * C118 + (C6067 - C6066) * C31966) * C5978 +
           ((C6068 - C6069) * C118 + (C6070 - C6071) * C31966) * C5979) *
              C31925 * C210 +
          (C6084 * C5975 + C6085 * C5976 + C6086 * C5977 +
           ((C6069 - C6068) * C118 + (C6071 - C6070) * C31966) * C5978 +
           ((C31862 * C6047 - C5980 * C6044) * C118 +
            (C31862 * C6050 - C5980 * C6048) * C31966) *
               C5979) *
              C31925 * C211) *
         C31899) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C31862 * C126 - C5980 * C119) * C118 +
            (C31862 * C140 - C5980 * C131) * C31966) *
               C5975 +
           ((C6052 - C6053) * C118 + (C6054 - C6055) * C31966) * C5976 +
           C6084 * C5977 + C6085 * C5978 + C6086 * C5979) *
              C315 +
          (((C5980 * C318 - C31862 * C328) * C118 +
            (C5980 * C333 - C31862 * C348) * C31966) *
               C5975 +
           ((C5980 * C618 - C31862 * C623) * C118 +
            (C5980 * C628 - C31862 * C633) * C31966) *
               C5976 +
           ((C5980 * C1050 - C31862 * C1059) * C118 +
            (C5980 * C1062 - C31862 * C1077) * C31966) *
               C5977 +
           ((C5980 * C1556 - C31862 * C1559) * C118 +
            (C5980 * C1562 - C31862 * C1565) * C31966) *
               C5978 +
           ((C5980 * C6148 - C31862 * C6151) * C118 +
            (C5980 * C6152 - C31862 * C6157) * C31966) *
               C5979) *
              C316 +
          (((C31862 * C338 - C5980 * C323) * C118 +
            (C31862 * C353 - C5980 * C343) * C31966) *
               C5975 +
           ((C31862 * C1065 - C5980 * C1053) * C118 +
            (C31862 * C1080 - C5980 * C1068) * C31966) *
               C5976 +
           ((C31862 * C1071 - C5980 * C1056) * C118 +
            (C31862 * C1083 - C5980 * C1074) * C31966) *
               C5977 +
           ((C31862 * C6153 - C5980 * C6149) * C118 +
            (C31862 * C6158 - C5980 * C6154) * C31966) *
               C5978 +
           ((C31862 * C6155 - C5980 * C6150) * C118 +
            (C31862 * C6159 - C5980 * C6156) * C31966) *
               C5979) *
              C317) *
         C31911 * C31899) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C31862 * C126 - C5980 * C119) * C1705 +
            (C31862 * C140 - C5980 * C131) * C32274 +
            (C31862 * C328 - C5980 * C318) * C1706 +
            (C31862 * C348 - C5980 * C333) * C32263 +
            (C31862 * C338 - C5980 * C323) * C1707 +
            (C31862 * C353 - C5980 * C343) * C32241) *
               C5151 +
           ((C6052 - C6053) * C1705 + (C6054 - C6055) * C32274 +
            (C6436 - C6435) * C1706 + (C6438 - C6437) * C32263 +
            (C31862 * C1065 - C5980 * C1053) * C1707 +
            (C31862 * C1080 - C5980 * C1068) * C32241) *
               C5152 +
           (C6072 * C1705 + C6073 * C32274 + (C6440 - C6439) * C1706 +
            (C6442 - C6441) * C32263 +
            (C31862 * C1071 - C5980 * C1056) * C1707 +
            (C31862 * C1083 - C5980 * C1074) * C32241) *
               C32238) *
              C31925 * C31911 * C110 +
          (((C5980 * C120 - C31862 * C127) * C1705 +
            (C5980 * C132 - C31862 * C141) * C32274 +
            (C5980 * C319 - C31862 * C329) * C1706 +
            (C5980 * C334 - C31862 * C349) * C32263 +
            (C5980 * C324 - C31862 * C339) * C1707 +
            (C5980 * C344 - C31862 * C354) * C32241) *
               C5151 +
           ((C6247 - C6248) * C1705 + (C6249 - C6250) * C32274 +
            (C5980 * C619 - C31862 * C624) * C1706 +
            (C5980 * C629 - C31862 * C634) * C32263 +
            (C5980 * C1054 - C31862 * C1066) * C1707 +
            (C5980 * C1069 - C31862 * C1081) * C32241) *
               C5152 +
           ((C6251 - C6252) * C1705 + (C6253 - C6254) * C32274 +
            (C5980 * C1051 - C31862 * C1060) * C1706 +
            (C5980 * C1063 - C31862 * C1078) * C32263 +
            (C5980 * C1057 - C31862 * C1072) * C1707 +
            (C5980 * C1075 - C31862 * C1084) * C32241) *
               C32238) *
              C31925 * C31911 * C111 +
          (((C31862 * C128 - C5980 * C121) * C1705 +
            (C31862 * C142 - C5980 * C133) * C32274 +
            (C31862 * C330 - C5980 * C320) * C1706 +
            (C31862 * C350 - C5980 * C335) * C32263 +
            (C31862 * C340 - C5980 * C325) * C1707 +
            (C31862 * C355 - C5980 * C345) * C32241) *
               C5151 +
           ((C31862 * C225 - C5980 * C215) * C1705 +
            (C31862 * C245 - C5980 * C230) * C32274 +
            (C31862 * C625 - C5980 * C620) * C1706 +
            (C31862 * C635 - C5980 * C630) * C32263 +
            (C31862 * C1067 - C5980 * C1055) * C1707 +
            (C31862 * C1082 - C5980 * C1070) * C32241) *
               C5152 +
           ((C31862 * C235 - C5980 * C220) * C1705 +
            (C31862 * C250 - C5980 * C240) * C32274 +
            (C31862 * C1061 - C5980 * C1052) * C1706 +
            (C31862 * C1079 - C5980 * C1064) * C32263 +
            (C31862 * C1073 - C5980 * C1058) * C1707 +
            (C31862 * C1085 - C5980 * C1076) * C32241) *
               C32238) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C31862 * C126 - C5980 * C119) * C1705 +
            (C31862 * C140 - C5980 * C131) * C32274 +
            (C31862 * C328 - C5980 * C318) * C1706 +
            (C31862 * C348 - C5980 * C333) * C32263 +
            (C31862 * C338 - C5980 * C323) * C1707 +
            (C31862 * C353 - C5980 * C343) * C32241) *
               C5151 +
           ((C6052 - C6053) * C1705 + (C6054 - C6055) * C32274 +
            (C6436 - C6435) * C1706 + (C6438 - C6437) * C32263 +
            (C6671 - C6672) * C1707 + (C6673 - C6674) * C32241) *
               C5152 +
           C6697 * C32238) *
              C31925 * C209 +
          (((C6053 - C6052) * C1705 + (C6055 - C6054) * C32274 +
            (C6435 - C6436) * C1706 + (C6437 - C6438) * C32263 +
            (C6672 - C6671) * C1707 + (C6674 - C6673) * C32241) *
               C5151 +
           ((C6057 - C6056) * C1705 + (C6059 - C6058) * C32274 +
            (C6439 - C6440) * C1706 + (C6441 - C6442) * C32263 +
            (C6680 - C6679) * C1707 + (C6682 - C6681) * C32241) *
               C5152 +
           ((C6061 - C6060) * C1705 + (C6063 - C6062) * C32274 +
            (C6443 - C6444) * C1706 + (C6445 - C6446) * C32263 +
            (C6683 - C6684) * C1707 + (C6685 - C6686) * C32241) *
               C32238) *
              C31925 * C210 +
          (C6697 * C5151 +
           (C6074 * C1705 + C6075 * C32274 + (C6444 - C6443) * C1706 +
            (C6446 - C6445) * C32263 + (C6684 - C6683) * C1707 +
            (C6686 - C6685) * C32241) *
               C5152 +
           (C6076 * C1705 + C6077 * C32274 + (C6448 - C6447) * C1706 +
            (C6450 - C6449) * C32263 +
            (C31862 * C6155 - C5980 * C6150) * C1707 +
            (C31862 * C6159 - C5980 * C6156) * C32241) *
               C32238) *
              C31925 * C211) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31862 * C126 - C5980 * C119) * C1705 +
            (C31862 * C140 - C5980 * C131) * C32274 + (C6820 - C6821) * C1706 +
            (C6822 - C6823) * C32263 + C6842 * C1707 + C6843 * C32241) *
               C5151 +
           ((C6052 - C6053) * C1705 + (C6054 - C6055) * C32274 +
            (C6436 - C6435) * C1706 + (C6438 - C6437) * C32263 + C6828 * C1707 +
            C6829 * C32241) *
               C5152 +
           C6697 * C32238) *
              C315 +
          (((C6821 - C6820) * C1705 + (C6823 - C6822) * C32274 +
            (C6825 - C6824) * C1706 + (C6827 - C6826) * C32263 +
            (C6830 - C6831) * C1707 + (C6832 - C6833) * C32241) *
               C5151 +
           ((C6435 - C6436) * C1705 + (C6437 - C6438) * C32274 +
            (C6672 - C6671) * C1706 + (C6674 - C6673) * C32263 +
            (C6834 - C6835) * C1707 + (C6836 - C6837) * C32241) *
               C5152 +
           ((C6439 - C6440) * C1705 + (C6441 - C6442) * C32274 +
            (C6680 - C6679) * C1706 + (C6682 - C6681) * C32263 +
            (C6838 - C6839) * C1707 + (C6840 - C6841) * C32241) *
               C32238) *
              C316 +
          ((C6842 * C1705 + C6843 * C32274 + (C6831 - C6830) * C1706 +
            (C6833 - C6832) * C32263 +
            (C31862 * C1940 - C5980 * C1931) * C1707 +
            (C31862 * C1949 - C5980 * C1943) * C32241) *
               C5151 +
           (C6828 * C1705 + C6829 * C32274 + (C6835 - C6834) * C1706 +
            (C6837 - C6836) * C32263 +
            (C31862 * C6812 - C5980 * C6808) * C1707 +
            (C31862 * C6817 - C5980 * C6813) * C32241) *
               C5152 +
           (C6690 * C1705 + C6691 * C32274 + (C6839 - C6838) * C1706 +
            (C6841 - C6840) * C32263 +
            (C31862 * C6814 - C5980 * C6809) * C1707 +
            (C31862 * C6818 - C5980 * C6815) * C32241) *
               C32238) *
              C317) *
         C31911 * C31899) /
            (p * q * std::sqrt(p + q));
    d2ee[113] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C748 * C126 - C754 * C119 + C749 * C127 - C755 * C120 +
              C32227 * C128 - C756 * C121) *
                 C118 +
             (C748 * C140 - C754 * C131 + C749 * C141 - C755 * C132 +
              C32227 * C142 - C756 * C133) *
                 C31966) *
                C32273 +
            ((C892 - C893 + C894 - C895 + C896 - C897) * C118 +
             (C898 - C899 + C900 - C901 + C902 - C903) * C31966) *
                C32261 +
            C940 * C32238) *
               C530 +
           (((C754 * C318 - C748 * C328 + C755 * C319 - C749 * C329 +
              C756 * C320 - C32227 * C330) *
                 C118 +
             (C754 * C333 - C748 * C348 + C755 * C334 - C749 * C349 +
              C756 * C335 - C32227 * C350) *
                 C31966) *
                C32273 +
            ((C754 * C618 - C748 * C623 + C755 * C619 - C749 * C624 +
              C756 * C620 - C32227 * C625) *
                 C118 +
             (C754 * C628 - C748 * C633 + C755 * C629 - C749 * C634 +
              C756 * C630 - C32227 * C635) *
                 C31966) *
                C32261 +
            ((C754 * C1050 - C748 * C1059 + C755 * C1051 - C749 * C1060 +
              C756 * C1052 - C32227 * C1061) *
                 C118 +
             (C754 * C1062 - C748 * C1077 + C755 * C1063 - C749 * C1078 +
              C756 * C1064 - C32227 * C1079) *
                 C31966) *
                C32238) *
               C531) *
              C31911 * C442 +
          ((((C754 * C120 - C748 * C127 + C755 * C121 - C749 * C128 +
              C756 * C122 - C32227 * C129) *
                 C118 +
             (C754 * C132 - C748 * C141 + C755 * C133 - C749 * C142 +
              C756 * C134 - C32227 * C143) *
                 C31966) *
                C32273 +
            ((C1237 - C1238 + C1239 - C1240 + C1241 - C1242) * C118 +
             (C1243 - C1244 + C1245 - C1246 + C1247 - C1248) * C31966) *
                C32261 +
            ((C1249 - C1250 + C1251 - C1252 + C1253 - C1254) * C118 +
             (C1255 - C1256 + C1257 - C1258 + C1259 - C1260) * C31966) *
                C32238) *
               C530 +
           (((C748 * C329 - C754 * C319 + C749 * C330 - C755 * C320 +
              C32227 * C331 - C756 * C321) *
                 C118 +
             (C748 * C349 - C754 * C334 + C749 * C350 - C755 * C335 +
              C32227 * C351 - C756 * C336) *
                 C31966) *
                C32273 +
            ((C748 * C624 - C754 * C619 + C749 * C625 - C755 * C620 +
              C32227 * C626 - C756 * C621) *
                 C118 +
             (C748 * C634 - C754 * C629 + C749 * C635 - C755 * C630 +
              C32227 * C636 - C756 * C631) *
                 C31966) *
                C32261 +
            ((C748 * C1060 - C754 * C1051 + C749 * C1061 - C755 * C1052 +
              C32227 * C1407 - C756 * C1406) *
                 C118 +
             (C748 * C1078 - C754 * C1063 + C749 * C1079 - C755 * C1064 +
              C32227 * C1409 - C756 * C1408) *
                 C31966) *
                C32238) *
               C531) *
              C31911 * C443)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C101 * C126 - C113 * C119 + C102 * C127 - C114 * C120 +
             C103 * C128 - C115 * C121 + C104 * C129 - C116 * C122 +
             C105 * C130 - C117 * C123) *
                C118 +
            (C101 * C140 - C113 * C131 + C102 * C141 - C114 * C132 +
             C103 * C142 - C115 * C133 + C104 * C143 - C116 * C134 +
             C105 * C144 - C117 * C135) *
                C31966) *
               C31955 * C530 +
           ((C113 * C318 - C101 * C328 + C114 * C319 - C102 * C329 +
             C115 * C320 - C103 * C330 + C116 * C321 - C104 * C331 +
             C117 * C322 - C105 * C332) *
                C118 +
            (C113 * C333 - C101 * C348 + C114 * C334 - C102 * C349 +
             C115 * C335 - C103 * C350 + C116 * C336 - C104 * C351 +
             C117 * C337 - C105 * C352) *
                C31966) *
               C31955 * C531) *
              C31911 * C442 +
          (((C113 * C120 - C101 * C127 + C114 * C121 - C102 * C128 +
             C115 * C122 - C103 * C129 + C116 * C123 - C104 * C130 +
             C117 * C124 - C105 * C136) *
                C118 +
            (C113 * C132 - C101 * C141 + C114 * C133 - C102 * C142 +
             C115 * C134 - C103 * C143 + C116 * C135 - C104 * C144 +
             C117 * C137 - C105 * C145) *
                C31966) *
               C31955 * C530 +
           ((C101 * C329 - C113 * C319 + C102 * C330 - C114 * C320 +
             C103 * C331 - C115 * C321 + C104 * C332 - C116 * C322 +
             C105 * C533 - C117 * C532) *
                C118 +
            (C101 * C349 - C113 * C334 + C102 * C350 - C114 * C335 +
             C103 * C351 - C115 * C336 + C104 * C352 - C116 * C337 +
             C105 * C535 - C117 * C534) *
                C31966) *
               C31955 * C531) *
              C31911 * C443)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C748 * C126 - C754 * C119 + C749 * C127 - C755 * C120 +
             C32227 * C128 - C756 * C121) *
                C1705 +
            (C748 * C140 - C754 * C131 + C749 * C141 - C755 * C132 +
             C32227 * C142 - C756 * C133) *
                C32274 +
            (C1953 - C1954 + C1955 - C1956 + C1957 - C1958) * C1706 +
            (C1959 - C1960 + C1961 - C1962 + C1963 - C1964) * C32263 +
            C1997 * C1707 + C1998 * C32241) *
               C31955 * C530 +
           ((C1954 - C1953 + C1956 - C1955 + C1958 - C1957) * C1705 +
            (C1960 - C1959 + C1962 - C1961 + C1964 - C1963) * C32274 +
            (C1966 - C1965 + C1968 - C1967 + C1970 - C1969) * C1706 +
            (C1972 - C1971 + C1974 - C1973 + C1976 - C1975) * C32263 +
            (C1977 - C1978 + C1979 - C1980 + C1981 - C1982) * C1707 +
            (C1983 - C1984 + C1985 - C1986 + C1987 - C1988) * C32241) *
               C31955 * C531) *
              C31911 * C442 +
          (((C754 * C120 - C748 * C127 + C755 * C121 - C749 * C128 +
             C756 * C122 - C32227 * C129) *
                C1705 +
            (C754 * C132 - C748 * C141 + C755 * C133 - C749 * C142 +
             C756 * C134 - C32227 * C143) *
                C32274 +
            (C2299 - C2300 + C2301 - C2302 + C2303 - C2304) * C1706 +
            (C2305 - C2306 + C2307 - C2308 + C2309 - C2310) * C32263 +
            (C2311 - C2312 + C2313 - C2314 + C2315 - C2316) * C1707 +
            (C2317 - C2318 + C2319 - C2320 + C2321 - C2322) * C32241) *
               C31955 * C530 +
           ((C2300 - C2299 + C2302 - C2301 + C2304 - C2303) * C1705 +
            (C2306 - C2305 + C2308 - C2307 + C2310 - C2309) * C32274 +
            (C2312 - C2311 + C2314 - C2313 + C2316 - C2315) * C1706 +
            (C2318 - C2317 + C2320 - C2319 + C2322 - C2321) * C32263 +
            (C748 * C1935 - C754 * C1929 + C749 * C1936 - C755 * C1930 +
             C32227 * C2295 - C756 * C2294) *
                C1707 +
            (C748 * C1947 - C754 * C1938 + C749 * C1948 - C755 * C1939 +
             C32227 * C2297 - C756 * C2296) *
                C32241) *
               C31955 * C531) *
              C31911 * C443)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C32270 * C126 - C5154 * C119 + C32257 * C127 - C5155 * C120 +
              C32227 * C128 - C5156 * C121) *
                 C118 +
             (C32270 * C140 - C5154 * C131 + C32257 * C141 - C5155 * C132 +
              C32227 * C142 - C5156 * C133) *
                 C31966) *
                C5151 +
            ((C5268 - C5269 + C5270 - C5271 + C5272 - C5273) * C118 +
             (C5274 - C5275 + C5276 - C5277 + C5278 - C5279) * C31966) *
                C5152 +
            C5316 * C32238) *
               C530 +
           (((C5154 * C318 - C32270 * C328 + C5155 * C319 - C32257 * C329 +
              C5156 * C320 - C32227 * C330) *
                 C118 +
             (C5154 * C333 - C32270 * C348 + C5155 * C334 - C32257 * C349 +
              C5156 * C335 - C32227 * C350) *
                 C31966) *
                C5151 +
            ((C5154 * C618 - C32270 * C623 + C5155 * C619 - C32257 * C624 +
              C5156 * C620 - C32227 * C625) *
                 C118 +
             (C5154 * C628 - C32270 * C633 + C5155 * C629 - C32257 * C634 +
              C5156 * C630 - C32227 * C635) *
                 C31966) *
                C5152 +
            ((C5154 * C1050 - C32270 * C1059 + C5155 * C1051 - C32257 * C1060 +
              C5156 * C1052 - C32227 * C1061) *
                 C118 +
             (C5154 * C1062 - C32270 * C1077 + C5155 * C1063 - C32257 * C1078 +
              C5156 * C1064 - C32227 * C1079) *
                 C31966) *
                C32238) *
               C531) *
              C31911 * C442 +
          ((((C5154 * C120 - C32270 * C127 + C5155 * C121 - C32257 * C128 +
              C5156 * C122 - C32227 * C129) *
                 C118 +
             (C5154 * C132 - C32270 * C141 + C5155 * C133 - C32257 * C142 +
              C5156 * C134 - C32227 * C143) *
                 C31966) *
                C5151 +
            ((C5573 - C5574 + C5575 - C5576 + C5577 - C5578) * C118 +
             (C5579 - C5580 + C5581 - C5582 + C5583 - C5584) * C31966) *
                C5152 +
            ((C5585 - C5586 + C5587 - C5588 + C5589 - C5590) * C118 +
             (C5591 - C5592 + C5593 - C5594 + C5595 - C5596) * C31966) *
                C32238) *
               C530 +
           (((C32270 * C329 - C5154 * C319 + C32257 * C330 - C5155 * C320 +
              C32227 * C331 - C5156 * C321) *
                 C118 +
             (C32270 * C349 - C5154 * C334 + C32257 * C350 - C5155 * C335 +
              C32227 * C351 - C5156 * C336) *
                 C31966) *
                C5151 +
            ((C32270 * C624 - C5154 * C619 + C32257 * C625 - C5155 * C620 +
              C32227 * C626 - C5156 * C621) *
                 C118 +
             (C32270 * C634 - C5154 * C629 + C32257 * C635 - C5155 * C630 +
              C32227 * C636 - C5156 * C631) *
                 C31966) *
                C5152 +
            ((C32270 * C1060 - C5154 * C1051 + C32257 * C1061 - C5155 * C1052 +
              C32227 * C1407 - C5156 * C1406) *
                 C118 +
             (C32270 * C1078 - C5154 * C1063 + C32257 * C1079 - C5155 * C1064 +
              C32227 * C1409 - C5156 * C1408) *
                 C31966) *
                C32238) *
               C531) *
              C31911 * C443)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C31862 * C126 - C5980 * C119) * C118 +
             (C31862 * C140 - C5980 * C131) * C31966) *
                C5975 +
            ((C6052 - C6053) * C118 + (C6054 - C6055) * C31966) * C5976 +
            C6084 * C5977 + C6085 * C5978 + C6086 * C5979) *
               C530 +
           (((C5980 * C318 - C31862 * C328) * C118 +
             (C5980 * C333 - C31862 * C348) * C31966) *
                C5975 +
            ((C5980 * C618 - C31862 * C623) * C118 +
             (C5980 * C628 - C31862 * C633) * C31966) *
                C5976 +
            ((C5980 * C1050 - C31862 * C1059) * C118 +
             (C5980 * C1062 - C31862 * C1077) * C31966) *
                C5977 +
            ((C5980 * C1556 - C31862 * C1559) * C118 +
             (C5980 * C1562 - C31862 * C1565) * C31966) *
                C5978 +
            ((C5980 * C6148 - C31862 * C6151) * C118 +
             (C5980 * C6152 - C31862 * C6157) * C31966) *
                C5979) *
               C531) *
              C31911 * C442 +
          ((((C5980 * C120 - C31862 * C127) * C118 +
             (C5980 * C132 - C31862 * C141) * C31966) *
                C5975 +
            ((C6247 - C6248) * C118 + (C6249 - C6250) * C31966) * C5976 +
            ((C6251 - C6252) * C118 + (C6253 - C6254) * C31966) * C5977 +
            ((C6255 - C6256) * C118 + (C6257 - C6258) * C31966) * C5978 +
            ((C6259 - C6260) * C118 + (C6261 - C6262) * C31966) * C5979) *
               C530 +
           (((C31862 * C329 - C5980 * C319) * C118 +
             (C31862 * C349 - C5980 * C334) * C31966) *
                C5975 +
            ((C31862 * C624 - C5980 * C619) * C118 +
             (C31862 * C634 - C5980 * C629) * C31966) *
                C5976 +
            ((C31862 * C1060 - C5980 * C1051) * C118 +
             (C31862 * C1078 - C5980 * C1063) * C31966) *
                C5977 +
            ((C31862 * C1560 - C5980 * C1557) * C118 +
             (C31862 * C1566 - C5980 * C1563) * C31966) *
                C5978 +
            ((C31862 * C6345 - C5980 * C6344) * C118 +
             (C31862 * C6347 - C5980 * C6346) * C31966) *
                C5979) *
               C531) *
              C31911 * C443)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31862 * C126 - C5980 * C119) * C1705 +
             (C31862 * C140 - C5980 * C131) * C32274 + (C6820 - C6821) * C1706 +
             (C6822 - C6823) * C32263 + C6842 * C1707 + C6843 * C32241) *
                C5151 +
            ((C6052 - C6053) * C1705 + (C6054 - C6055) * C32274 +
             (C6436 - C6435) * C1706 + (C6438 - C6437) * C32263 +
             C6828 * C1707 + C6829 * C32241) *
                C5152 +
            C6697 * C32238) *
               C530 +
           (((C6821 - C6820) * C1705 + (C6823 - C6822) * C32274 +
             (C6825 - C6824) * C1706 + (C6827 - C6826) * C32263 +
             (C6830 - C6831) * C1707 + (C6832 - C6833) * C32241) *
                C5151 +
            ((C6435 - C6436) * C1705 + (C6437 - C6438) * C32274 +
             (C6672 - C6671) * C1706 + (C6674 - C6673) * C32263 +
             (C6834 - C6835) * C1707 + (C6836 - C6837) * C32241) *
                C5152 +
            ((C6439 - C6440) * C1705 + (C6441 - C6442) * C32274 +
             (C6680 - C6679) * C1706 + (C6682 - C6681) * C32263 +
             (C6838 - C6839) * C1707 + (C6840 - C6841) * C32241) *
                C32238) *
               C531) *
              C31911 * C442 +
          ((((C5980 * C120 - C31862 * C127) * C1705 +
             (C5980 * C132 - C31862 * C141) * C32274 + (C7160 - C7161) * C1706 +
             (C7162 - C7163) * C32263 + (C7164 - C7165) * C1707 +
             (C7166 - C7167) * C32241) *
                C5151 +
            ((C6247 - C6248) * C1705 + (C6249 - C6250) * C32274 +
             (C6994 - C6995) * C1706 + (C6996 - C6997) * C32263 +
             (C6998 - C6999) * C1707 + (C7000 - C7001) * C32241) *
                C5152 +
            ((C6251 - C6252) * C1705 + (C6253 - C6254) * C32274 +
             (C7002 - C7003) * C1706 + (C7004 - C7005) * C32263 +
             (C7006 - C7007) * C1707 + (C7008 - C7009) * C32241) *
                C32238) *
               C530 +
           (((C7161 - C7160) * C1705 + (C7163 - C7162) * C32274 +
             (C7165 - C7164) * C1706 + (C7167 - C7166) * C32263 +
             (C31862 * C1935 - C5980 * C1929) * C1707 +
             (C31862 * C1947 - C5980 * C1938) * C32241) *
                C5151 +
            ((C6995 - C6994) * C1705 + (C6997 - C6996) * C32274 +
             (C6999 - C6998) * C1706 + (C7001 - C7000) * C32263 +
             (C31862 * C2472 - C5980 * C2469) * C1707 +
             (C31862 * C2478 - C5980 * C2475) * C32241) *
                C5152 +
            ((C7003 - C7002) * C1705 + (C7005 - C7004) * C32274 +
             (C7007 - C7006) * C1706 + (C7009 - C7008) * C32263 +
             (C31862 * C7156 - C5980 * C7155) * C1707 +
             (C31862 * C7158 - C5980 * C7157) * C32241) *
                C32238) *
               C531) *
              C31911 * C443)) /
            (p * q * std::sqrt(p + q));
    d2ee[114] +=
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C101 * C126 - C113 * C119 + C102 * C127 - C114 * C120 +
            C103 * C128 - C115 * C121 + C104 * C129 - C116 * C122 +
            C105 * C130 - C117 * C123) *
               C118 +
           (C101 * C140 - C113 * C131 + C102 * C141 - C114 * C132 +
            C103 * C142 - C115 * C133 + C104 * C143 - C116 * C134 +
            C105 * C144 - C117 * C135) *
               C31966) *
              C31955 * C31925 * C209 +
          ((C113 * C213 - C101 * C223 + C114 * C214 - C102 * C224 +
            C115 * C215 - C103 * C225 + C116 * C216 - C104 * C226 +
            C117 * C217 - C105 * C227) *
               C118 +
           (C113 * C228 - C101 * C243 + C114 * C229 - C102 * C244 +
            C115 * C230 - C103 * C245 + C116 * C231 - C104 * C246 +
            C117 * C232 - C105 * C247) *
               C31966) *
              C31955 * C31925 * C210 +
          ((C101 * C233 - C113 * C218 + C102 * C234 - C114 * C219 +
            C103 * C235 - C115 * C220 + C104 * C236 - C116 * C221 +
            C105 * C237 - C117 * C222) *
               C118 +
           (C101 * C248 - C113 * C238 + C102 * C249 - C114 * C239 +
            C103 * C250 - C115 * C240 + C104 * C251 - C116 * C241 +
            C105 * C252 - C117 * C242) *
               C31966) *
              C31955 * C31925 * C211) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C101 * C126 - C113 * C119 + C102 * C127 - C114 * C120 +
            C103 * C128 - C115 * C121 + C104 * C129 - C116 * C122 +
            C105 * C130 - C117 * C123) *
               C118 +
           (C101 * C140 - C113 * C131 + C102 * C141 - C114 * C132 +
            C103 * C142 - C115 * C133 + C104 * C143 - C116 * C134 +
            C105 * C144 - C117 * C135) *
               C31966) *
              C31955 * C31925 * C31911 * C110 +
          ((C113 * C120 - C101 * C127 + C114 * C121 - C102 * C128 +
            C115 * C122 - C103 * C129 + C116 * C123 - C104 * C130 +
            C117 * C124 - C105 * C136) *
               C118 +
           (C113 * C132 - C101 * C141 + C114 * C133 - C102 * C142 +
            C115 * C134 - C103 * C143 + C116 * C135 - C104 * C144 +
            C117 * C137 - C105 * C145) *
               C31966) *
              C31955 * C31925 * C31911 * C111 +
          ((C101 * C128 - C113 * C121 + C102 * C129 - C114 * C122 +
            C103 * C130 - C115 * C123 + C104 * C136 - C116 * C124 +
            C105 * C138 - C117 * C125) *
               C118 +
           (C101 * C142 - C113 * C133 + C102 * C143 - C114 * C134 +
            C103 * C144 - C115 * C135 + C104 * C145 - C116 * C137 +
            C105 * C146 - C117 * C139) *
               C31966) *
              C31955 * C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C748 * C126 - C754 * C119 + C749 * C127 - C755 * C120 +
             C32227 * C128 - C756 * C121) *
                C118 +
            (C748 * C140 - C754 * C131 + C749 * C141 - C755 * C132 +
             C32227 * C142 - C756 * C133) *
                C31966) *
               C32273 +
           ((C748 * C223 - C754 * C213 + C749 * C224 - C755 * C214 +
             C32227 * C225 - C756 * C215) *
                C118 +
            (C748 * C243 - C754 * C228 + C749 * C244 - C755 * C229 +
             C32227 * C245 - C756 * C230) *
                C31966) *
               C32261 +
           ((C748 * C233 - C754 * C218 + C749 * C234 - C755 * C219 +
             C32227 * C235 - C756 * C220) *
                C118 +
            (C748 * C248 - C754 * C238 + C749 * C249 - C755 * C239 +
             C32227 * C250 - C756 * C240) *
                C31966) *
               C32238) *
              C31925 * C31911 * C110 +
          (((C754 * C120 - C748 * C127 + C755 * C121 - C749 * C128 +
             C756 * C122 - C32227 * C129) *
                C118 +
            (C754 * C132 - C748 * C141 + C755 * C133 - C749 * C142 +
             C756 * C134 - C32227 * C143) *
                C31966) *
               C32273 +
           ((C754 * C214 - C748 * C224 + C755 * C215 - C749 * C225 +
             C756 * C216 - C32227 * C226) *
                C118 +
            (C754 * C229 - C748 * C244 + C755 * C230 - C749 * C245 +
             C756 * C231 - C32227 * C246) *
                C31966) *
               C32261 +
           ((C754 * C219 - C748 * C234 + C755 * C220 - C749 * C235 +
             C756 * C221 - C32227 * C236) *
                C118 +
            (C754 * C239 - C748 * C249 + C755 * C240 - C749 * C250 +
             C756 * C241 - C32227 * C251) *
                C31966) *
               C32238) *
              C31925 * C31911 * C111 +
          (((C748 * C128 - C754 * C121 + C749 * C129 - C755 * C122 +
             C32227 * C130 - C756 * C123) *
                C118 +
            (C748 * C142 - C754 * C133 + C749 * C143 - C755 * C134 +
             C32227 * C144 - C756 * C135) *
                C31966) *
               C32273 +
           ((C748 * C225 - C754 * C215 + C749 * C226 - C755 * C216 +
             C32227 * C227 - C756 * C217) *
                C118 +
            (C748 * C245 - C754 * C230 + C749 * C246 - C755 * C231 +
             C32227 * C247 - C756 * C232) *
                C31966) *
               C32261 +
           ((C748 * C235 - C754 * C220 + C749 * C236 - C755 * C221 +
             C32227 * C237 - C756 * C222) *
                C118 +
            (C748 * C250 - C754 * C240 + C749 * C251 - C755 * C241 +
             C32227 * C252 - C756 * C242) *
                C31966) *
               C32238) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C748 * C126 - C754 * C119 + C749 * C127 - C755 * C120 +
             C32227 * C128 - C756 * C121) *
                C118 +
            (C748 * C140 - C754 * C131 + C749 * C141 - C755 * C132 +
             C32227 * C142 - C756 * C133) *
                C31966) *
               C32273 +
           ((C892 - C893 + C894 - C895 + C896 - C897) * C118 +
            (C898 - C899 + C900 - C901 + C902 - C903) * C31966) *
               C32261 +
           C940 * C32238) *
              C31925 * C209 +
          (((C893 - C892 + C895 - C894 + C897 - C896) * C118 +
            (C899 - C898 + C901 - C900 + C903 - C902) * C31966) *
               C32273 +
           ((C905 - C904 + C907 - C906 + C909 - C908) * C118 +
            (C911 - C910 + C913 - C912 + C915 - C914) * C31966) *
               C32261 +
           ((C916 - C917 + C918 - C919 + C920 - C921) * C118 +
            (C922 - C923 + C924 - C925 + C926 - C927) * C31966) *
               C32238) *
              C31925 * C210 +
          (C940 * C32273 +
           ((C917 - C916 + C919 - C918 + C921 - C920) * C118 +
            (C923 - C922 + C925 - C924 + C927 - C926) * C31966) *
               C32261 +
           ((C748 * C879 - C754 * C870 + C749 * C880 - C755 * C871 +
             C32227 * C881 - C756 * C872) *
                C118 +
            (C748 * C888 - C754 * C882 + C749 * C889 - C755 * C883 +
             C32227 * C890 - C756 * C884) *
                C31966) *
               C32238) *
              C31925 * C211) *
         C31899) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C748 * C126 - C754 * C119 + C749 * C127 - C755 * C120 +
            C32227 * C128 - C756 * C121) *
               C1705 +
           (C748 * C140 - C754 * C131 + C749 * C141 - C755 * C132 +
            C32227 * C142 - C756 * C133) *
               C32274 +
           (C748 * C328 - C754 * C318 + C749 * C329 - C755 * C319 +
            C32227 * C330 - C756 * C320) *
               C1706 +
           (C748 * C348 - C754 * C333 + C749 * C349 - C755 * C334 +
            C32227 * C350 - C756 * C335) *
               C32263 +
           (C748 * C338 - C754 * C323 + C749 * C339 - C755 * C324 +
            C32227 * C340 - C756 * C325) *
               C1707 +
           (C748 * C353 - C754 * C343 + C749 * C354 - C755 * C344 +
            C32227 * C355 - C756 * C345) *
               C32241) *
              C31955 * C31925 * C31911 * C110 +
          ((C754 * C120 - C748 * C127 + C755 * C121 - C749 * C128 +
            C756 * C122 - C32227 * C129) *
               C1705 +
           (C754 * C132 - C748 * C141 + C755 * C133 - C749 * C142 +
            C756 * C134 - C32227 * C143) *
               C32274 +
           (C754 * C319 - C748 * C329 + C755 * C320 - C749 * C330 +
            C756 * C321 - C32227 * C331) *
               C1706 +
           (C754 * C334 - C748 * C349 + C755 * C335 - C749 * C350 +
            C756 * C336 - C32227 * C351) *
               C32263 +
           (C754 * C324 - C748 * C339 + C755 * C325 - C749 * C340 +
            C756 * C326 - C32227 * C341) *
               C1707 +
           (C754 * C344 - C748 * C354 + C755 * C345 - C749 * C355 +
            C756 * C346 - C32227 * C356) *
               C32241) *
              C31955 * C31925 * C31911 * C111 +
          ((C748 * C128 - C754 * C121 + C749 * C129 - C755 * C122 +
            C32227 * C130 - C756 * C123) *
               C1705 +
           (C748 * C142 - C754 * C133 + C749 * C143 - C755 * C134 +
            C32227 * C144 - C756 * C135) *
               C32274 +
           (C748 * C330 - C754 * C320 + C749 * C331 - C755 * C321 +
            C32227 * C332 - C756 * C322) *
               C1706 +
           (C748 * C350 - C754 * C335 + C749 * C351 - C755 * C336 +
            C32227 * C352 - C756 * C337) *
               C32263 +
           (C748 * C340 - C754 * C325 + C749 * C341 - C755 * C326 +
            C32227 * C342 - C756 * C327) *
               C1707 +
           (C748 * C355 - C754 * C345 + C749 * C356 - C755 * C346 +
            C32227 * C357 - C756 * C347) *
               C32241) *
              C31955 * C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C748 * C126 - C754 * C119 + C749 * C127 - C755 * C120 +
            C32227 * C128 - C756 * C121) *
               C1705 +
           (C748 * C140 - C754 * C131 + C749 * C141 - C755 * C132 +
            C32227 * C142 - C756 * C133) *
               C32274 +
           (C748 * C328 - C754 * C318 + C749 * C329 - C755 * C319 +
            C32227 * C330 - C756 * C320) *
               C1706 +
           (C748 * C348 - C754 * C333 + C749 * C349 - C755 * C334 +
            C32227 * C350 - C756 * C335) *
               C32263 +
           (C748 * C338 - C754 * C323 + C749 * C339 - C755 * C324 +
            C32227 * C340 - C756 * C325) *
               C1707 +
           (C748 * C353 - C754 * C343 + C749 * C354 - C755 * C344 +
            C32227 * C355 - C756 * C345) *
               C32241) *
              C31955 * C31925 * C209 +
          ((C893 - C892 + C895 - C894 + C897 - C896) * C1705 +
           (C899 - C898 + C901 - C900 + C903 - C902) * C32274 +
           (C1569 - C1570 + C1571 - C1572 + C1573 - C1574) * C1706 +
           (C1575 - C1576 + C1577 - C1578 + C1579 - C1580) * C32263 +
           (C754 * C1053 - C748 * C1065 + C755 * C1054 - C749 * C1066 +
            C756 * C1055 - C32227 * C1067) *
               C1707 +
           (C754 * C1068 - C748 * C1080 + C755 * C1069 - C749 * C1081 +
            C756 * C1070 - C32227 * C1082) *
               C32241) *
              C31955 * C31925 * C210 +
          (C936 * C1705 + C937 * C32274 +
           (C1582 - C1581 + C1584 - C1583 + C1586 - C1585) * C1706 +
           (C1588 - C1587 + C1590 - C1589 + C1592 - C1591) * C32263 +
           (C748 * C1071 - C754 * C1056 + C749 * C1072 - C755 * C1057 +
            C32227 * C1073 - C756 * C1058) *
               C1707 +
           (C748 * C1083 - C754 * C1074 + C749 * C1084 - C755 * C1075 +
            C32227 * C1085 - C756 * C1076) *
               C32241) *
              C31955 * C31925 * C211) *
         C31899) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C32270 * C126 - C5154 * C119 + C32257 * C127 - C5155 * C120 +
             C32227 * C128 - C5156 * C121) *
                C118 +
            (C32270 * C140 - C5154 * C131 + C32257 * C141 - C5155 * C132 +
             C32227 * C142 - C5156 * C133) *
                C31966) *
               C5151 +
           ((C32270 * C223 - C5154 * C213 + C32257 * C224 - C5155 * C214 +
             C32227 * C225 - C5156 * C215) *
                C118 +
            (C32270 * C243 - C5154 * C228 + C32257 * C244 - C5155 * C229 +
             C32227 * C245 - C5156 * C230) *
                C31966) *
               C5152 +
           ((C32270 * C233 - C5154 * C218 + C32257 * C234 - C5155 * C219 +
             C32227 * C235 - C5156 * C220) *
                C118 +
            (C32270 * C248 - C5154 * C238 + C32257 * C249 - C5155 * C239 +
             C32227 * C250 - C5156 * C240) *
                C31966) *
               C32238) *
              C31925 * C31911 * C110 +
          (((C5154 * C120 - C32270 * C127 + C5155 * C121 - C32257 * C128 +
             C5156 * C122 - C32227 * C129) *
                C118 +
            (C5154 * C132 - C32270 * C141 + C5155 * C133 - C32257 * C142 +
             C5156 * C134 - C32227 * C143) *
                C31966) *
               C5151 +
           ((C5154 * C214 - C32270 * C224 + C5155 * C215 - C32257 * C225 +
             C5156 * C216 - C32227 * C226) *
                C118 +
            (C5154 * C229 - C32270 * C244 + C5155 * C230 - C32257 * C245 +
             C5156 * C231 - C32227 * C246) *
                C31966) *
               C5152 +
           ((C5154 * C219 - C32270 * C234 + C5155 * C220 - C32257 * C235 +
             C5156 * C221 - C32227 * C236) *
                C118 +
            (C5154 * C239 - C32270 * C249 + C5155 * C240 - C32257 * C250 +
             C5156 * C241 - C32227 * C251) *
                C31966) *
               C32238) *
              C31925 * C31911 * C111 +
          (((C32270 * C128 - C5154 * C121 + C32257 * C129 - C5155 * C122 +
             C32227 * C130 - C5156 * C123) *
                C118 +
            (C32270 * C142 - C5154 * C133 + C32257 * C143 - C5155 * C134 +
             C32227 * C144 - C5156 * C135) *
                C31966) *
               C5151 +
           ((C32270 * C225 - C5154 * C215 + C32257 * C226 - C5155 * C216 +
             C32227 * C227 - C5156 * C217) *
                C118 +
            (C32270 * C245 - C5154 * C230 + C32257 * C246 - C5155 * C231 +
             C32227 * C247 - C5156 * C232) *
                C31966) *
               C5152 +
           ((C32270 * C235 - C5154 * C220 + C32257 * C236 - C5155 * C221 +
             C32227 * C237 - C5156 * C222) *
                C118 +
            (C32270 * C250 - C5154 * C240 + C32257 * C251 - C5155 * C241 +
             C32227 * C252 - C5156 * C242) *
                C31966) *
               C32238) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C32270 * C126 - C5154 * C119 + C32257 * C127 - C5155 * C120 +
             C32227 * C128 - C5156 * C121) *
                C118 +
            (C32270 * C140 - C5154 * C131 + C32257 * C141 - C5155 * C132 +
             C32227 * C142 - C5156 * C133) *
                C31966) *
               C5151 +
           ((C5268 - C5269 + C5270 - C5271 + C5272 - C5273) * C118 +
            (C5274 - C5275 + C5276 - C5277 + C5278 - C5279) * C31966) *
               C5152 +
           C5316 * C32238) *
              C31925 * C209 +
          (((C5269 - C5268 + C5271 - C5270 + C5273 - C5272) * C118 +
            (C5275 - C5274 + C5277 - C5276 + C5279 - C5278) * C31966) *
               C5151 +
           ((C5281 - C5280 + C5283 - C5282 + C5285 - C5284) * C118 +
            (C5287 - C5286 + C5289 - C5288 + C5291 - C5290) * C31966) *
               C5152 +
           ((C5292 - C5293 + C5294 - C5295 + C5296 - C5297) * C118 +
            (C5298 - C5299 + C5300 - C5301 + C5302 - C5303) * C31966) *
               C32238) *
              C31925 * C210 +
          (C5316 * C5151 +
           ((C5293 - C5292 + C5295 - C5294 + C5297 - C5296) * C118 +
            (C5299 - C5298 + C5301 - C5300 + C5303 - C5302) * C31966) *
               C5152 +
           ((C32270 * C879 - C5154 * C870 + C32257 * C880 - C5155 * C871 +
             C32227 * C881 - C5156 * C872) *
                C118 +
            (C32270 * C888 - C5154 * C882 + C32257 * C889 - C5155 * C883 +
             C32227 * C890 - C5156 * C884) *
                C31966) *
               C32238) *
              C31925 * C211) *
         C31899) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C31862 * C126 - C5980 * C119) * C118 +
            (C31862 * C140 - C5980 * C131) * C31966) *
               C5975 +
           ((C31862 * C223 - C5980 * C213) * C118 +
            (C31862 * C243 - C5980 * C228) * C31966) *
               C5976 +
           ((C31862 * C233 - C5980 * C218) * C118 +
            (C31862 * C248 - C5980 * C238) * C31966) *
               C5977 +
           ((C31862 * C873 - C5980 * C867) * C118 +
            (C31862 * C885 - C5980 * C876) * C31966) *
               C5978 +
           ((C31862 * C879 - C5980 * C870) * C118 +
            (C31862 * C888 - C5980 * C882) * C31966) *
               C5979) *
              C31925 * C31911 * C110 +
          (((C5980 * C120 - C31862 * C127) * C118 +
            (C5980 * C132 - C31862 * C141) * C31966) *
               C5975 +
           ((C5980 * C214 - C31862 * C224) * C118 +
            (C5980 * C229 - C31862 * C244) * C31966) *
               C5976 +
           ((C5980 * C219 - C31862 * C234) * C118 +
            (C5980 * C239 - C31862 * C249) * C31966) *
               C5977 +
           ((C5980 * C868 - C31862 * C874) * C118 +
            (C5980 * C877 - C31862 * C886) * C31966) *
               C5978 +
           ((C5980 * C871 - C31862 * C880) * C118 +
            (C5980 * C883 - C31862 * C889) * C31966) *
               C5979) *
              C31925 * C31911 * C111 +
          (((C31862 * C128 - C5980 * C121) * C118 +
            (C31862 * C142 - C5980 * C133) * C31966) *
               C5975 +
           ((C31862 * C225 - C5980 * C215) * C118 +
            (C31862 * C245 - C5980 * C230) * C31966) *
               C5976 +
           ((C31862 * C235 - C5980 * C220) * C118 +
            (C31862 * C250 - C5980 * C240) * C31966) *
               C5977 +
           ((C31862 * C875 - C5980 * C869) * C118 +
            (C31862 * C887 - C5980 * C878) * C31966) *
               C5978 +
           ((C31862 * C881 - C5980 * C872) * C118 +
            (C31862 * C890 - C5980 * C884) * C31966) *
               C5979) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C31862 * C126 - C5980 * C119) * C118 +
            (C31862 * C140 - C5980 * C131) * C31966) *
               C5975 +
           ((C6052 - C6053) * C118 + (C6054 - C6055) * C31966) * C5976 +
           C6084 * C5977 + C6085 * C5978 + C6086 * C5979) *
              C31925 * C209 +
          (((C6053 - C6052) * C118 + (C6055 - C6054) * C31966) * C5975 +
           ((C6057 - C6056) * C118 + (C6059 - C6058) * C31966) * C5976 +
           ((C6061 - C6060) * C118 + (C6063 - C6062) * C31966) * C5977 +
           ((C6065 - C6064) * C118 + (C6067 - C6066) * C31966) * C5978 +
           ((C6068 - C6069) * C118 + (C6070 - C6071) * C31966) * C5979) *
              C31925 * C210 +
          (C6084 * C5975 + C6085 * C5976 + C6086 * C5977 +
           ((C6069 - C6068) * C118 + (C6071 - C6070) * C31966) * C5978 +
           ((C31862 * C6047 - C5980 * C6044) * C118 +
            (C31862 * C6050 - C5980 * C6048) * C31966) *
               C5979) *
              C31925 * C211) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31862 * C126 - C5980 * C119) * C1705 +
            (C31862 * C140 - C5980 * C131) * C32274 +
            (C31862 * C328 - C5980 * C318) * C1706 +
            (C31862 * C348 - C5980 * C333) * C32263 +
            (C31862 * C338 - C5980 * C323) * C1707 +
            (C31862 * C353 - C5980 * C343) * C32241) *
               C5151 +
           ((C6052 - C6053) * C1705 + (C6054 - C6055) * C32274 +
            (C6436 - C6435) * C1706 + (C6438 - C6437) * C32263 +
            (C31862 * C1065 - C5980 * C1053) * C1707 +
            (C31862 * C1080 - C5980 * C1068) * C32241) *
               C5152 +
           (C6072 * C1705 + C6073 * C32274 + (C6440 - C6439) * C1706 +
            (C6442 - C6441) * C32263 +
            (C31862 * C1071 - C5980 * C1056) * C1707 +
            (C31862 * C1083 - C5980 * C1074) * C32241) *
               C32238) *
              C31925 * C31911 * C110 +
          (((C5980 * C120 - C31862 * C127) * C1705 +
            (C5980 * C132 - C31862 * C141) * C32274 +
            (C5980 * C319 - C31862 * C329) * C1706 +
            (C5980 * C334 - C31862 * C349) * C32263 +
            (C5980 * C324 - C31862 * C339) * C1707 +
            (C5980 * C344 - C31862 * C354) * C32241) *
               C5151 +
           ((C6247 - C6248) * C1705 + (C6249 - C6250) * C32274 +
            (C5980 * C619 - C31862 * C624) * C1706 +
            (C5980 * C629 - C31862 * C634) * C32263 +
            (C5980 * C1054 - C31862 * C1066) * C1707 +
            (C5980 * C1069 - C31862 * C1081) * C32241) *
               C5152 +
           ((C6251 - C6252) * C1705 + (C6253 - C6254) * C32274 +
            (C5980 * C1051 - C31862 * C1060) * C1706 +
            (C5980 * C1063 - C31862 * C1078) * C32263 +
            (C5980 * C1057 - C31862 * C1072) * C1707 +
            (C5980 * C1075 - C31862 * C1084) * C32241) *
               C32238) *
              C31925 * C31911 * C111 +
          (((C31862 * C128 - C5980 * C121) * C1705 +
            (C31862 * C142 - C5980 * C133) * C32274 +
            (C31862 * C330 - C5980 * C320) * C1706 +
            (C31862 * C350 - C5980 * C335) * C32263 +
            (C31862 * C340 - C5980 * C325) * C1707 +
            (C31862 * C355 - C5980 * C345) * C32241) *
               C5151 +
           ((C31862 * C225 - C5980 * C215) * C1705 +
            (C31862 * C245 - C5980 * C230) * C32274 +
            (C31862 * C625 - C5980 * C620) * C1706 +
            (C31862 * C635 - C5980 * C630) * C32263 +
            (C31862 * C1067 - C5980 * C1055) * C1707 +
            (C31862 * C1082 - C5980 * C1070) * C32241) *
               C5152 +
           ((C31862 * C235 - C5980 * C220) * C1705 +
            (C31862 * C250 - C5980 * C240) * C32274 +
            (C31862 * C1061 - C5980 * C1052) * C1706 +
            (C31862 * C1079 - C5980 * C1064) * C32263 +
            (C31862 * C1073 - C5980 * C1058) * C1707 +
            (C31862 * C1085 - C5980 * C1076) * C32241) *
               C32238) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31862 * C126 - C5980 * C119) * C1705 +
            (C31862 * C140 - C5980 * C131) * C32274 +
            (C31862 * C328 - C5980 * C318) * C1706 +
            (C31862 * C348 - C5980 * C333) * C32263 +
            (C31862 * C338 - C5980 * C323) * C1707 +
            (C31862 * C353 - C5980 * C343) * C32241) *
               C5151 +
           ((C6052 - C6053) * C1705 + (C6054 - C6055) * C32274 +
            (C6436 - C6435) * C1706 + (C6438 - C6437) * C32263 +
            (C6671 - C6672) * C1707 + (C6673 - C6674) * C32241) *
               C5152 +
           C6697 * C32238) *
              C31925 * C209 +
          (((C6053 - C6052) * C1705 + (C6055 - C6054) * C32274 +
            (C6435 - C6436) * C1706 + (C6437 - C6438) * C32263 +
            (C6672 - C6671) * C1707 + (C6674 - C6673) * C32241) *
               C5151 +
           ((C6057 - C6056) * C1705 + (C6059 - C6058) * C32274 +
            (C6439 - C6440) * C1706 + (C6441 - C6442) * C32263 +
            (C6680 - C6679) * C1707 + (C6682 - C6681) * C32241) *
               C5152 +
           ((C6061 - C6060) * C1705 + (C6063 - C6062) * C32274 +
            (C6443 - C6444) * C1706 + (C6445 - C6446) * C32263 +
            (C6683 - C6684) * C1707 + (C6685 - C6686) * C32241) *
               C32238) *
              C31925 * C210 +
          (C6697 * C5151 +
           (C6074 * C1705 + C6075 * C32274 + (C6444 - C6443) * C1706 +
            (C6446 - C6445) * C32263 + (C6684 - C6683) * C1707 +
            (C6686 - C6685) * C32241) *
               C5152 +
           (C6076 * C1705 + C6077 * C32274 + (C6448 - C6447) * C1706 +
            (C6450 - C6449) * C32263 +
            (C31862 * C6155 - C5980 * C6150) * C1707 +
            (C31862 * C6159 - C5980 * C6156) * C32241) *
               C32238) *
              C31925 * C211) *
         C31899) /
            (p * q * std::sqrt(p + q));
    d2ee[115] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2590 * C126 - C2596 * C119 + C2591 * C127 - C2597 * C120 +
             C2592 * C128 - C2598 * C121 + C32242 * C129 - C2599 * C122) *
                C3350 +
            (C2590 * C140 - C2596 * C131 + C2591 * C141 - C2597 * C132 +
             C2592 * C142 - C2598 * C133 + C32242 * C143 - C2599 * C134) *
                C32208 +
            (C3549 - C3550 + C3551 - C3552 + C3553 - C3554 + C3555 - C3556) *
                C3351 +
            (C3557 - C3558 + C3559 - C3560 + C3561 - C3562 + C3563 - C3564) *
                C32053) *
               C31955 * C31925 * C440 +
           ((C2700 - C2699 + C2702 - C2701 + C2704 - C2703 + C2706 - C2705) *
                C3350 +
            (C2708 - C2707 + C2710 - C2709 + C2712 - C2711 + C2714 - C2713) *
                C32208 +
            (C3235 - C3236 + C3237 - C3238 + C3239 - C3240 + C3241 - C3242) *
                C3351 +
            (C3243 - C3244 + C3245 - C3246 + C3247 - C3248 + C3249 - C3250) *
                C32053) *
               C31955 * C31925 * C441) *
              C442 +
          (((C2596 * C120 - C2590 * C127 + C2597 * C121 - C2591 * C128 +
             C2598 * C122 - C2592 * C129 + C2599 * C123 - C32242 * C130) *
                C3350 +
            (C2596 * C132 - C2590 * C141 + C2597 * C133 - C2591 * C142 +
             C2598 * C134 - C2592 * C143 + C2599 * C135 - C32242 * C144) *
                C32208 +
            (C2596 * C319 - C2590 * C329 + C2597 * C320 - C2591 * C330 +
             C2598 * C321 - C2592 * C331 + C2599 * C322 - C32242 * C332) *
                C3351 +
            (C2596 * C334 - C2590 * C349 + C2597 * C335 - C2591 * C350 +
             C2598 * C336 - C2592 * C351 + C2599 * C337 - C32242 * C352) *
                C32053) *
               C31955 * C31925 * C440 +
           ((C2960 - C2959 + C2962 - C2961 + C2964 - C2963 + C2966 - C2965) *
                C3350 +
            (C2968 - C2967 + C2970 - C2969 + C2972 - C2971 + C2974 - C2973) *
                C32208 +
            (C2590 * C624 - C2596 * C619 + C2591 * C625 - C2597 * C620 +
             C2592 * C626 - C2598 * C621 + C32242 * C627 - C2599 * C622) *
                C3351 +
            (C2590 * C634 - C2596 * C629 + C2591 * C635 - C2597 * C630 +
             C2592 * C636 - C2598 * C631 + C32242 * C637 - C2599 * C632) *
                C32053) *
               C31955 * C31925 * C441) *
              C443)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C32188 * C126 - C30873 * C119 + C31872 * C127 - C30854 * C120) *
                 C3350 +
             (C32188 * C140 - C30873 * C131 + C31872 * C141 - C30854 * C132) *
                 C32208 +
             (C8569 - C8570 + C8571 - C8572) * C3351 +
             (C8573 - C8574 + C8575 - C8576) * C32053) *
                C5151 +
            ((C7532 - C7533 + C7534 - C7535) * C3350 +
             (C7536 - C7537 + C7538 - C7539) * C32208 +
             (C8095 - C8094 + C8097 - C8096) * C3351 +
             (C8099 - C8098 + C8101 - C8100) * C32053) *
                C5152 +
            C8422 * C32238) *
               C31925 * C440 +
           (((C7533 - C7532 + C7535 - C7534) * C3350 +
             (C7537 - C7536 + C7539 - C7538) * C32208 +
             (C8094 - C8095 + C8096 - C8097) * C3351 +
             (C8098 - C8099 + C8100 - C8101) * C32053) *
                C5151 +
            ((C7541 - C7540 + C7543 - C7542) * C3350 +
             (C7545 - C7544 + C7547 - C7546) * C32208 +
             (C8102 - C8103 + C8104 - C8105) * C3351 +
             (C8106 - C8107 + C8108 - C8109) * C32053) *
                C5152 +
            ((C7549 - C7548 + C7551 - C7550) * C3350 +
             (C7553 - C7552 + C7555 - C7554) * C32208 +
             (C8110 - C8111 + C8112 - C8113) * C3351 +
             (C8114 - C8115 + C8116 - C8117) * C32053) *
                C32238) *
               C31925 * C441) *
              C442 +
          ((((C30873 * C120 - C32188 * C127 + C30854 * C121 - C31872 * C128) *
                 C3350 +
             (C30873 * C132 - C32188 * C141 + C30854 * C133 - C31872 * C142) *
                 C32208 +
             (C30873 * C319 - C32188 * C329 + C30854 * C320 - C31872 * C330) *
                 C3351 +
             (C30873 * C334 - C32188 * C349 + C30854 * C335 - C31872 * C350) *
                 C32053) *
                C5151 +
            ((C7810 - C7811 + C7812 - C7813) * C3350 +
             (C7814 - C7815 + C7816 - C7817) * C32208 +
             (C8795 - C8796 + C8797 - C8798) * C3351 +
             (C8799 - C8800 + C8801 - C8802) * C32053) *
                C5152 +
            ((C7818 - C7819 + C7820 - C7821) * C3350 +
             (C7822 - C7823 + C7824 - C7825) * C32208 +
             (C8803 - C8804 + C8805 - C8806) * C3351 +
             (C8807 - C8808 + C8809 - C8810) * C32053) *
                C32238) *
               C31925 * C440 +
           (((C7811 - C7810 + C7813 - C7812) * C3350 +
             (C7815 - C7814 + C7817 - C7816) * C32208 +
             (C8796 - C8795 + C8798 - C8797) * C3351 +
             (C8800 - C8799 + C8802 - C8801) * C32053) *
                C5151 +
            ((C7819 - C7818 + C7821 - C7820) * C3350 +
             (C7823 - C7822 + C7825 - C7824) * C32208 +
             (C8804 - C8803 + C8806 - C8805) * C3351 +
             (C8808 - C8807 + C8810 - C8809) * C32053) *
                C5152 +
            ((C7827 - C7826 + C7829 - C7828) * C3350 +
             (C7831 - C7830 + C7833 - C7832) * C32208 +
             (C32188 * C1560 - C30873 * C1557 + C31872 * C1561 -
              C30854 * C1558) *
                 C3351 +
             (C32188 * C1566 - C30873 * C1563 + C31872 * C1567 -
              C30854 * C1564) *
                 C32053) *
                C32238) *
               C31925 * C441) *
              C443)) /
            (p * q * std::sqrt(p + q));
    d2ee[116] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2590 * C126 - C2596 * C119 + C2591 * C127 - C2597 * C120 +
             C2592 * C128 - C2598 * C121 + C32242 * C129 - C2599 * C122) *
                C3350 +
            (C2590 * C140 - C2596 * C131 + C2591 * C141 - C2597 * C132 +
             C2592 * C142 - C2598 * C133 + C32242 * C143 - C2599 * C134) *
                C32208 +
            (C3549 - C3550 + C3551 - C3552 + C3553 - C3554 + C3555 - C3556) *
                C3351 +
            (C3557 - C3558 + C3559 - C3560 + C3561 - C3562 + C3563 - C3564) *
                C32053) *
               C31955 * C530 +
           ((C3550 - C3549 + C3552 - C3551 + C3554 - C3553 + C3556 - C3555) *
                C3350 +
            (C3558 - C3557 + C3560 - C3559 + C3562 - C3561 + C3564 - C3563) *
                C32208 +
            (C3565 - C3566 + C3567 - C3568 + C3569 - C3570 + C3571 - C3572) *
                C3351 +
            (C3573 - C3574 + C3575 - C3576 + C3577 - C3578 + C3579 - C3580) *
                C32053) *
               C31955 * C531) *
              C440 +
          (((C2700 - C2699 + C2702 - C2701 + C2704 - C2703 + C2706 - C2705) *
                C3350 +
            (C2708 - C2707 + C2710 - C2709 + C2712 - C2711 + C2714 - C2713) *
                C32208 +
            (C3235 - C3236 + C3237 - C3238 + C3239 - C3240 + C3241 - C3242) *
                C3351 +
            (C3243 - C3244 + C3245 - C3246 + C3247 - C3248 + C3249 - C3250) *
                C32053) *
               C31955 * C530 +
           ((C3236 - C3235 + C3238 - C3237 + C3240 - C3239 + C3242 - C3241) *
                C3350 +
            (C3244 - C3243 + C3246 - C3245 + C3248 - C3247 + C3250 - C3249) *
                C32208 +
            (C2590 * C1065 - C2596 * C1053 + C2591 * C1066 - C2597 * C1054 +
             C2592 * C1067 - C2598 * C1055 + C32242 * C2145 - C2599 * C2144) *
                C3351 +
            (C2590 * C1080 - C2596 * C1068 + C2591 * C1081 - C2597 * C1069 +
             C2592 * C1082 - C2598 * C1070 + C32242 * C2147 - C2599 * C2146) *
                C32053) *
               C31955 * C531) *
              C441) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C32188 * C126 - C30873 * C119 + C31872 * C127 - C30854 * C120) *
                 C3350 +
             (C32188 * C140 - C30873 * C131 + C31872 * C141 - C30854 * C132) *
                 C32208 +
             (C8569 - C8570 + C8571 - C8572) * C3351 +
             (C8573 - C8574 + C8575 - C8576) * C32053) *
                C5151 +
            ((C7532 - C7533 + C7534 - C7535) * C3350 +
             (C7536 - C7537 + C7538 - C7539) * C32208 + C9219 * C3351 +
             C9220 * C32053) *
                C5152 +
            C8422 * C32238) *
               C530 +
           (((C8570 - C8569 + C8572 - C8571) * C3350 +
             (C8574 - C8573 + C8576 - C8575) * C32208 +
             (C8577 - C8578 + C8579 - C8580) * C3351 +
             (C8581 - C8582 + C8583 - C8584) * C32053) *
                C5151 +
            (C9221 * C3350 + C9222 * C32208 +
             (C8585 - C8586 + C8587 - C8588) * C3351 +
             (C8589 - C8590 + C8591 - C8592) * C32053) *
                C5152 +
            (C9223 * C3350 + C9224 * C32208 +
             (C8593 - C8594 + C8595 - C8596) * C3351 +
             (C8597 - C8598 + C8599 - C8600) * C32053) *
                C32238) *
               C531) *
              C440 +
          ((((C7533 - C7532 + C7535 - C7534) * C3350 +
             (C7537 - C7536 + C7539 - C7538) * C32208 + C9221 * C3351 +
             C9222 * C32053) *
                C5151 +
            ((C7541 - C7540 + C7543 - C7542) * C3350 +
             (C7545 - C7544 + C7547 - C7546) * C32208 + C9223 * C3351 +
             C9224 * C32053) *
                C5152 +
            ((C7549 - C7548 + C7551 - C7550) * C3350 +
             (C7553 - C7552 + C7555 - C7554) * C32208 +
             (C8110 - C8111 + C8112 - C8113) * C3351 +
             (C8114 - C8115 + C8116 - C8117) * C32053) *
                C32238) *
               C530 +
           ((C9219 * C3350 + C9220 * C32208 +
             (C8586 - C8585 + C8588 - C8587) * C3351 +
             (C8590 - C8589 + C8592 - C8591) * C32053) *
                C5151 +
            (C8417 * C3350 + C8418 * C32208 +
             (C8594 - C8593 + C8596 - C8595) * C3351 +
             (C8598 - C8597 + C8600 - C8599) * C32053) *
                C5152 +
            ((C8111 - C8110 + C8113 - C8112) * C3350 +
             (C8115 - C8114 + C8117 - C8116) * C32208 +
             (C32188 * C6153 - C30873 * C6149 + C31872 * C6990 -
              C30854 * C6989) *
                 C3351 +
             (C32188 * C6158 - C30873 * C6154 + C31872 * C6992 -
              C30854 * C6991) *
                 C32053) *
                C32238) *
               C531) *
              C441) *
         C31899) /
            (p * q * std::sqrt(p + q));
    d2ee[117] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C2590 * C126 - C2596 * C119 + C2591 * C127 - C2597 * C120 +
            C2592 * C128 - C2598 * C121 + C32242 * C129 - C2599 * C122) *
               C3350 +
           (C2590 * C140 - C2596 * C131 + C2591 * C141 - C2597 * C132 +
            C2592 * C142 - C2598 * C133 + C32242 * C143 - C2599 * C134) *
               C32208 +
           (C2590 * C328 - C2596 * C318 + C2591 * C329 - C2597 * C319 +
            C2592 * C330 - C2598 * C320 + C32242 * C331 - C2599 * C321) *
               C3351 +
           (C2590 * C348 - C2596 * C333 + C2591 * C349 - C2597 * C334 +
            C2592 * C350 - C2598 * C335 + C32242 * C351 - C2599 * C336) *
               C32053) *
              C31955 * C31925 * C209 +
          ((C2700 - C2699 + C2702 - C2701 + C2704 - C2703 + C2706 - C2705) *
               C3350 +
           (C2708 - C2707 + C2710 - C2709 + C2712 - C2711 + C2714 - C2713) *
               C32208 +
           (C3235 - C3236 + C3237 - C3238 + C3239 - C3240 + C3241 - C3242) *
               C3351 +
           (C3243 - C3244 + C3245 - C3246 + C3247 - C3248 + C3249 - C3250) *
               C32053) *
              C31955 * C31925 * C210 +
          ((C2716 - C2715 + C2718 - C2717 + C2720 - C2719 + C2722 - C2721) *
               C3350 +
           (C2724 - C2723 + C2726 - C2725 + C2728 - C2727 + C2730 - C2729) *
               C32208 +
           (C2590 * C1059 - C2596 * C1050 + C2591 * C1060 - C2597 * C1051 +
            C2592 * C1061 - C2598 * C1052 + C32242 * C1407 - C2599 * C1406) *
               C3351 +
           (C2590 * C1077 - C2596 * C1062 + C2591 * C1078 - C2597 * C1063 +
            C2592 * C1079 - C2598 * C1064 + C32242 * C1409 - C2599 * C1408) *
               C32053) *
              C31955 * C31925 * C211) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C2590 * C126 - C2596 * C119 + C2591 * C127 - C2597 * C120 +
            C2592 * C128 - C2598 * C121 + C32242 * C129 - C2599 * C122) *
               C3350 +
           (C2590 * C140 - C2596 * C131 + C2591 * C141 - C2597 * C132 +
            C2592 * C142 - C2598 * C133 + C32242 * C143 - C2599 * C134) *
               C32208 +
           (C2590 * C328 - C2596 * C318 + C2591 * C329 - C2597 * C319 +
            C2592 * C330 - C2598 * C320 + C32242 * C331 - C2599 * C321) *
               C3351 +
           (C2590 * C348 - C2596 * C333 + C2591 * C349 - C2597 * C334 +
            C2592 * C350 - C2598 * C335 + C32242 * C351 - C2599 * C336) *
               C32053) *
              C31955 * C31925 * C31911 * C110 +
          ((C2596 * C120 - C2590 * C127 + C2597 * C121 - C2591 * C128 +
            C2598 * C122 - C2592 * C129 + C2599 * C123 - C32242 * C130) *
               C3350 +
           (C2596 * C132 - C2590 * C141 + C2597 * C133 - C2591 * C142 +
            C2598 * C134 - C2592 * C143 + C2599 * C135 - C32242 * C144) *
               C32208 +
           (C2596 * C319 - C2590 * C329 + C2597 * C320 - C2591 * C330 +
            C2598 * C321 - C2592 * C331 + C2599 * C322 - C32242 * C332) *
               C3351 +
           (C2596 * C334 - C2590 * C349 + C2597 * C335 - C2591 * C350 +
            C2598 * C336 - C2592 * C351 + C2599 * C337 - C32242 * C352) *
               C32053) *
              C31955 * C31925 * C31911 * C111 +
          ((C2590 * C128 - C2596 * C121 + C2591 * C129 - C2597 * C122 +
            C2592 * C130 - C2598 * C123 + C32242 * C136 - C2599 * C124) *
               C3350 +
           (C2590 * C142 - C2596 * C133 + C2591 * C143 - C2597 * C134 +
            C2592 * C144 - C2598 * C135 + C32242 * C145 - C2599 * C137) *
               C32208 +
           (C2590 * C330 - C2596 * C320 + C2591 * C331 - C2597 * C321 +
            C2592 * C332 - C2598 * C322 + C32242 * C533 - C2599 * C532) *
               C3351 +
           (C2590 * C350 - C2596 * C335 + C2591 * C351 - C2597 * C336 +
            C2592 * C352 - C2598 * C337 + C32242 * C535 - C2599 * C534) *
               C32053) *
              C31955 * C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C2590 * C126 - C2596 * C119 + C2591 * C127 - C2597 * C120 +
            C2592 * C128 - C2598 * C121 + C32242 * C129 - C2599 * C122) *
               C3350 +
           (C2590 * C140 - C2596 * C131 + C2591 * C141 - C2597 * C132 +
            C2592 * C142 - C2598 * C133 + C32242 * C143 - C2599 * C134) *
               C32208 +
           (C3549 - C3550 + C3551 - C3552 + C3553 - C3554 + C3555 - C3556) *
               C3351 +
           (C3557 - C3558 + C3559 - C3560 + C3561 - C3562 + C3563 - C3564) *
               C32053) *
              C31955 * C315 +
          ((C3550 - C3549 + C3552 - C3551 + C3554 - C3553 + C3556 - C3555) *
               C3350 +
           (C3558 - C3557 + C3560 - C3559 + C3562 - C3561 + C3564 - C3563) *
               C32208 +
           (C3565 - C3566 + C3567 - C3568 + C3569 - C3570 + C3571 - C3572) *
               C3351 +
           (C3573 - C3574 + C3575 - C3576 + C3577 - C3578 + C3579 - C3580) *
               C32053) *
              C31955 * C316 +
          ((C3566 - C3565 + C3568 - C3567 + C3570 - C3569 + C3572 - C3571) *
               C3350 +
           (C3574 - C3573 + C3576 - C3575 + C3578 - C3577 + C3580 - C3579) *
               C32208 +
           (C2590 * C1934 - C2596 * C1928 + C2591 * C1935 - C2597 * C1929 +
            C2592 * C1936 - C2598 * C1930 + C32242 * C2295 - C2599 * C2294) *
               C3351 +
           (C2590 * C1946 - C2596 * C1937 + C2591 * C1947 - C2597 * C1938 +
            C2592 * C1948 - C2598 * C1939 + C32242 * C2297 - C2599 * C2296) *
               C32053) *
              C31955 * C317) *
         C31911 * C31899) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C32188 * C126 - C30873 * C119 + C31872 * C127 - C30854 * C120) *
                C3350 +
            (C32188 * C140 - C30873 * C131 + C31872 * C141 - C30854 * C132) *
                C32208 +
            (C32188 * C328 - C30873 * C318 + C31872 * C329 - C30854 * C319) *
                C3351 +
            (C32188 * C348 - C30873 * C333 + C31872 * C349 - C30854 * C334) *
                C32053) *
               C5151 +
           ((C7532 - C7533 + C7534 - C7535) * C3350 +
            (C7536 - C7537 + C7538 - C7539) * C32208 +
            (C8095 - C8094 + C8097 - C8096) * C3351 +
            (C8099 - C8098 + C8101 - C8100) * C32053) *
               C5152 +
           (C7572 * C3350 + C7573 * C32208 +
            (C8103 - C8102 + C8105 - C8104) * C3351 +
            (C8107 - C8106 + C8109 - C8108) * C32053) *
               C32238) *
              C31925 * C31911 * C110 +
          (((C30873 * C120 - C32188 * C127 + C30854 * C121 - C31872 * C128) *
                C3350 +
            (C30873 * C132 - C32188 * C141 + C30854 * C133 - C31872 * C142) *
                C32208 +
            (C30873 * C319 - C32188 * C329 + C30854 * C320 - C31872 * C330) *
                C3351 +
            (C30873 * C334 - C32188 * C349 + C30854 * C335 - C31872 * C350) *
                C32053) *
               C5151 +
           ((C7810 - C7811 + C7812 - C7813) * C3350 +
            (C7814 - C7815 + C7816 - C7817) * C32208 +
            (C30873 * C619 - C32188 * C624 + C30854 * C620 - C31872 * C625) *
                C3351 +
            (C30873 * C629 - C32188 * C634 + C30854 * C630 - C31872 * C635) *
                C32053) *
               C5152 +
           ((C7818 - C7819 + C7820 - C7821) * C3350 +
            (C7822 - C7823 + C7824 - C7825) * C32208 +
            (C30873 * C1051 - C32188 * C1060 + C30854 * C1052 -
             C31872 * C1061) *
                C3351 +
            (C30873 * C1063 - C32188 * C1078 + C30854 * C1064 -
             C31872 * C1079) *
                C32053) *
               C32238) *
              C31925 * C31911 * C111 +
          (((C32188 * C128 - C30873 * C121 + C31872 * C129 - C30854 * C122) *
                C3350 +
            (C32188 * C142 - C30873 * C133 + C31872 * C143 - C30854 * C134) *
                C32208 +
            (C32188 * C330 - C30873 * C320 + C31872 * C331 - C30854 * C321) *
                C3351 +
            (C32188 * C350 - C30873 * C335 + C31872 * C351 - C30854 * C336) *
                C32053) *
               C5151 +
           ((C32188 * C225 - C30873 * C215 + C31872 * C226 - C30854 * C216) *
                C3350 +
            (C32188 * C245 - C30873 * C230 + C31872 * C246 - C30854 * C231) *
                C32208 +
            (C32188 * C625 - C30873 * C620 + C31872 * C626 - C30854 * C621) *
                C3351 +
            (C32188 * C635 - C30873 * C630 + C31872 * C636 - C30854 * C631) *
                C32053) *
               C5152 +
           ((C32188 * C235 - C30873 * C220 + C31872 * C236 - C30854 * C221) *
                C3350 +
            (C32188 * C250 - C30873 * C240 + C31872 * C251 - C30854 * C241) *
                C32208 +
            (C32188 * C1061 - C30873 * C1052 + C31872 * C1407 -
             C30854 * C1406) *
                C3351 +
            (C32188 * C1079 - C30873 * C1064 + C31872 * C1409 -
             C30854 * C1408) *
                C32053) *
               C32238) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C32188 * C126 - C30873 * C119 + C31872 * C127 - C30854 * C120) *
                C3350 +
            (C32188 * C140 - C30873 * C131 + C31872 * C141 - C30854 * C132) *
                C32208 +
            (C32188 * C328 - C30873 * C318 + C31872 * C329 - C30854 * C319) *
                C3351 +
            (C32188 * C348 - C30873 * C333 + C31872 * C349 - C30854 * C334) *
                C32053) *
               C5151 +
           ((C7532 - C7533 + C7534 - C7535) * C3350 +
            (C7536 - C7537 + C7538 - C7539) * C32208 +
            (C8095 - C8094 + C8097 - C8096) * C3351 +
            (C8099 - C8098 + C8101 - C8100) * C32053) *
               C5152 +
           C8422 * C32238) *
              C31925 * C209 +
          (((C7533 - C7532 + C7535 - C7534) * C3350 +
            (C7537 - C7536 + C7539 - C7538) * C32208 +
            (C8094 - C8095 + C8096 - C8097) * C3351 +
            (C8098 - C8099 + C8100 - C8101) * C32053) *
               C5151 +
           ((C7541 - C7540 + C7543 - C7542) * C3350 +
            (C7545 - C7544 + C7547 - C7546) * C32208 +
            (C8102 - C8103 + C8104 - C8105) * C3351 +
            (C8106 - C8107 + C8108 - C8109) * C32053) *
               C5152 +
           ((C7549 - C7548 + C7551 - C7550) * C3350 +
            (C7553 - C7552 + C7555 - C7554) * C32208 +
            (C8110 - C8111 + C8112 - C8113) * C3351 +
            (C8114 - C8115 + C8116 - C8117) * C32053) *
               C32238) *
              C31925 * C210 +
          (C8422 * C5151 +
           (C7574 * C3350 + C7575 * C32208 +
            (C8111 - C8110 + C8113 - C8112) * C3351 +
            (C8115 - C8114 + C8117 - C8116) * C32053) *
               C5152 +
           ((C7557 - C7556 + C7559 - C7558) * C3350 +
            (C7561 - C7560 + C7563 - C7562) * C32208 +
            (C32188 * C6151 - C30873 * C6148 + C31872 * C6345 -
             C30854 * C6344) *
                C3351 +
            (C32188 * C6157 - C30873 * C6152 + C31872 * C6347 -
             C30854 * C6346) *
                C32053) *
               C32238) *
              C31925 * C211) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C32188 * C126 - C30873 * C119 + C31872 * C127 - C30854 * C120) *
                C3350 +
            (C32188 * C140 - C30873 * C131 + C31872 * C141 - C30854 * C132) *
                C32208 +
            (C8569 - C8570 + C8571 - C8572) * C3351 +
            (C8573 - C8574 + C8575 - C8576) * C32053) *
               C5151 +
           ((C7532 - C7533 + C7534 - C7535) * C3350 +
            (C7536 - C7537 + C7538 - C7539) * C32208 +
            (C8095 - C8094 + C8097 - C8096) * C3351 +
            (C8099 - C8098 + C8101 - C8100) * C32053) *
               C5152 +
           C8422 * C32238) *
              C315 +
          (((C8570 - C8569 + C8572 - C8571) * C3350 +
            (C8574 - C8573 + C8576 - C8575) * C32208 +
            (C8577 - C8578 + C8579 - C8580) * C3351 +
            (C8581 - C8582 + C8583 - C8584) * C32053) *
               C5151 +
           ((C8094 - C8095 + C8096 - C8097) * C3350 +
            (C8098 - C8099 + C8100 - C8101) * C32208 +
            (C8585 - C8586 + C8587 - C8588) * C3351 +
            (C8589 - C8590 + C8591 - C8592) * C32053) *
               C5152 +
           ((C8102 - C8103 + C8104 - C8105) * C3350 +
            (C8106 - C8107 + C8108 - C8109) * C32208 +
            (C8593 - C8594 + C8595 - C8596) * C3351 +
            (C8597 - C8598 + C8599 - C8600) * C32053) *
               C32238) *
              C316 +
          (((C8578 - C8577 + C8580 - C8579) * C3350 +
            (C8582 - C8581 + C8584 - C8583) * C32208 +
            (C32188 * C1934 - C30873 * C1928 + C31872 * C1935 -
             C30854 * C1929) *
                C3351 +
            (C32188 * C1946 - C30873 * C1937 + C31872 * C1947 -
             C30854 * C1938) *
                C32053) *
               C5151 +
           ((C8586 - C8585 + C8588 - C8587) * C3350 +
            (C8590 - C8589 + C8592 - C8591) * C32208 +
            (C32188 * C2471 - C30873 * C2468 + C31872 * C2472 -
             C30854 * C2469) *
                C3351 +
            (C32188 * C2477 - C30873 * C2474 + C31872 * C2478 -
             C30854 * C2475) *
                C32053) *
               C5152 +
           ((C8594 - C8593 + C8596 - C8595) * C3350 +
            (C8598 - C8597 + C8600 - C8599) * C32208 +
            (C32188 * C6810 - C30873 * C6807 + C31872 * C7156 -
             C30854 * C7155) *
                C3351 +
            (C32188 * C6816 - C30873 * C6811 + C31872 * C7158 -
             C30854 * C7157) *
                C32053) *
               C32238) *
              C317) *
         C31911 * C31899) /
            (p * q * std::sqrt(p + q));
    d2ee[118] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C2590 * C126 - C2596 * C119 + C2591 * C127 - C2597 * C120 +
             C2592 * C128 - C2598 * C121 + C32242 * C129 - C2599 * C122) *
                C3350 +
            (C2590 * C140 - C2596 * C131 + C2591 * C141 - C2597 * C132 +
             C2592 * C142 - C2598 * C133 + C32242 * C143 - C2599 * C134) *
                C32208 +
            (C3549 - C3550 + C3551 - C3552 + C3553 - C3554 + C3555 - C3556) *
                C3351 +
            (C3557 - C3558 + C3559 - C3560 + C3561 - C3562 + C3563 - C3564) *
                C32053) *
               C31955 * C530 +
           ((C3550 - C3549 + C3552 - C3551 + C3554 - C3553 + C3556 - C3555) *
                C3350 +
            (C3558 - C3557 + C3560 - C3559 + C3562 - C3561 + C3564 - C3563) *
                C32208 +
            (C3565 - C3566 + C3567 - C3568 + C3569 - C3570 + C3571 - C3572) *
                C3351 +
            (C3573 - C3574 + C3575 - C3576 + C3577 - C3578 + C3579 - C3580) *
                C32053) *
               C31955 * C531) *
              C31911 * C442 +
          (((C2596 * C120 - C2590 * C127 + C2597 * C121 - C2591 * C128 +
             C2598 * C122 - C2592 * C129 + C2599 * C123 - C32242 * C130) *
                C3350 +
            (C2596 * C132 - C2590 * C141 + C2597 * C133 - C2591 * C142 +
             C2598 * C134 - C2592 * C143 + C2599 * C135 - C32242 * C144) *
                C32208 +
            (C3841 - C3842 + C3843 - C3844 + C3845 - C3846 + C3847 - C3848) *
                C3351 +
            (C3849 - C3850 + C3851 - C3852 + C3853 - C3854 + C3855 - C3856) *
                C32053) *
               C31955 * C530 +
           ((C3842 - C3841 + C3844 - C3843 + C3846 - C3845 + C3848 - C3847) *
                C3350 +
            (C3850 - C3849 + C3852 - C3851 + C3854 - C3853 + C3856 - C3855) *
                C32208 +
            (C2590 * C339 - C2596 * C324 + C2591 * C340 - C2597 * C325 +
             C2592 * C341 - C2598 * C326 + C32242 * C342 - C2599 * C327) *
                C3351 +
            (C2590 * C354 - C2596 * C344 + C2591 * C355 - C2597 * C345 +
             C2592 * C356 - C2598 * C346 + C32242 * C357 - C2599 * C347) *
                C32053) *
               C31955 * C531) *
              C31911 * C443)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C32188 * C126 - C30873 * C119 + C31872 * C127 - C30854 * C120) *
                 C3350 +
             (C32188 * C140 - C30873 * C131 + C31872 * C141 - C30854 * C132) *
                 C32208 +
             (C8569 - C8570 + C8571 - C8572) * C3351 +
             (C8573 - C8574 + C8575 - C8576) * C32053) *
                C5151 +
            ((C7532 - C7533 + C7534 - C7535) * C3350 +
             (C7536 - C7537 + C7538 - C7539) * C32208 +
             (C8095 - C8094 + C8097 - C8096) * C3351 +
             (C8099 - C8098 + C8101 - C8100) * C32053) *
                C5152 +
            C8422 * C32238) *
               C530 +
           (((C8570 - C8569 + C8572 - C8571) * C3350 +
             (C8574 - C8573 + C8576 - C8575) * C32208 +
             (C8577 - C8578 + C8579 - C8580) * C3351 +
             (C8581 - C8582 + C8583 - C8584) * C32053) *
                C5151 +
            ((C8094 - C8095 + C8096 - C8097) * C3350 +
             (C8098 - C8099 + C8100 - C8101) * C32208 +
             (C8585 - C8586 + C8587 - C8588) * C3351 +
             (C8589 - C8590 + C8591 - C8592) * C32053) *
                C5152 +
            ((C8102 - C8103 + C8104 - C8105) * C3350 +
             (C8106 - C8107 + C8108 - C8109) * C32208 +
             (C8593 - C8594 + C8595 - C8596) * C3351 +
             (C8597 - C8598 + C8599 - C8600) * C32053) *
                C32238) *
               C531) *
              C31911 * C442 +
          ((((C30873 * C120 - C32188 * C127 + C30854 * C121 - C31872 * C128) *
                 C3350 +
             (C30873 * C132 - C32188 * C141 + C30854 * C133 - C31872 * C142) *
                 C32208 +
             (C9005 - C9006 + C9007 - C9008) * C3351 +
             (C9009 - C9010 + C9011 - C9012) * C32053) *
                C5151 +
            ((C7810 - C7811 + C7812 - C7813) * C3350 +
             (C7814 - C7815 + C7816 - C7817) * C32208 +
             (C8795 - C8796 + C8797 - C8798) * C3351 +
             (C8799 - C8800 + C8801 - C8802) * C32053) *
                C5152 +
            ((C7818 - C7819 + C7820 - C7821) * C3350 +
             (C7822 - C7823 + C7824 - C7825) * C32208 +
             (C8803 - C8804 + C8805 - C8806) * C3351 +
             (C8807 - C8808 + C8809 - C8810) * C32053) *
                C32238) *
               C530 +
           (((C9006 - C9005 + C9008 - C9007) * C3350 +
             (C9010 - C9009 + C9012 - C9011) * C32208 +
             (C32188 * C339 - C30873 * C324 + C31872 * C340 - C30854 * C325) *
                 C3351 +
             (C32188 * C354 - C30873 * C344 + C31872 * C355 - C30854 * C345) *
                 C32053) *
                C5151 +
            ((C8796 - C8795 + C8798 - C8797) * C3350 +
             (C8800 - C8799 + C8802 - C8801) * C32208 +
             (C32188 * C1066 - C30873 * C1054 + C31872 * C1067 -
              C30854 * C1055) *
                 C3351 +
             (C32188 * C1081 - C30873 * C1069 + C31872 * C1082 -
              C30854 * C1070) *
                 C32053) *
                C5152 +
            ((C8804 - C8803 + C8806 - C8805) * C3350 +
             (C8808 - C8807 + C8810 - C8809) * C32208 +
             (C32188 * C1072 - C30873 * C1057 + C31872 * C1073 -
              C30854 * C1058) *
                 C3351 +
             (C32188 * C1084 - C30873 * C1075 + C31872 * C1085 -
              C30854 * C1076) *
                 C32053) *
                C32238) *
               C531) *
              C31911 * C443)) /
            (p * q * std::sqrt(p + q));
    d2ee[119] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C2590 * C126 - C2596 * C119 + C2591 * C127 - C2597 * C120 +
            C2592 * C128 - C2598 * C121 + C32242 * C129 - C2599 * C122) *
               C3350 +
           (C2590 * C140 - C2596 * C131 + C2591 * C141 - C2597 * C132 +
            C2592 * C142 - C2598 * C133 + C32242 * C143 - C2599 * C134) *
               C32208 +
           (C2590 * C328 - C2596 * C318 + C2591 * C329 - C2597 * C319 +
            C2592 * C330 - C2598 * C320 + C32242 * C331 - C2599 * C321) *
               C3351 +
           (C2590 * C348 - C2596 * C333 + C2591 * C349 - C2597 * C334 +
            C2592 * C350 - C2598 * C335 + C32242 * C351 - C2599 * C336) *
               C32053) *
              C31955 * C31925 * C31911 * C110 +
          ((C2596 * C120 - C2590 * C127 + C2597 * C121 - C2591 * C128 +
            C2598 * C122 - C2592 * C129 + C2599 * C123 - C32242 * C130) *
               C3350 +
           (C2596 * C132 - C2590 * C141 + C2597 * C133 - C2591 * C142 +
            C2598 * C134 - C2592 * C143 + C2599 * C135 - C32242 * C144) *
               C32208 +
           (C2596 * C319 - C2590 * C329 + C2597 * C320 - C2591 * C330 +
            C2598 * C321 - C2592 * C331 + C2599 * C322 - C32242 * C332) *
               C3351 +
           (C2596 * C334 - C2590 * C349 + C2597 * C335 - C2591 * C350 +
            C2598 * C336 - C2592 * C351 + C2599 * C337 - C32242 * C352) *
               C32053) *
              C31955 * C31925 * C31911 * C111 +
          ((C2590 * C128 - C2596 * C121 + C2591 * C129 - C2597 * C122 +
            C2592 * C130 - C2598 * C123 + C32242 * C136 - C2599 * C124) *
               C3350 +
           (C2590 * C142 - C2596 * C133 + C2591 * C143 - C2597 * C134 +
            C2592 * C144 - C2598 * C135 + C32242 * C145 - C2599 * C137) *
               C32208 +
           (C2590 * C330 - C2596 * C320 + C2591 * C331 - C2597 * C321 +
            C2592 * C332 - C2598 * C322 + C32242 * C533 - C2599 * C532) *
               C3351 +
           (C2590 * C350 - C2596 * C335 + C2591 * C351 - C2597 * C336 +
            C2592 * C352 - C2598 * C337 + C32242 * C535 - C2599 * C534) *
               C32053) *
              C31955 * C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C2590 * C126 - C2596 * C119 + C2591 * C127 - C2597 * C120 +
            C2592 * C128 - C2598 * C121 + C32242 * C129 - C2599 * C122) *
               C3350 +
           (C2590 * C140 - C2596 * C131 + C2591 * C141 - C2597 * C132 +
            C2592 * C142 - C2598 * C133 + C32242 * C143 - C2599 * C134) *
               C32208 +
           (C2590 * C328 - C2596 * C318 + C2591 * C329 - C2597 * C319 +
            C2592 * C330 - C2598 * C320 + C32242 * C331 - C2599 * C321) *
               C3351 +
           (C2590 * C348 - C2596 * C333 + C2591 * C349 - C2597 * C334 +
            C2592 * C350 - C2598 * C335 + C32242 * C351 - C2599 * C336) *
               C32053) *
              C31955 * C31925 * C209 +
          ((C2700 - C2699 + C2702 - C2701 + C2704 - C2703 + C2706 - C2705) *
               C3350 +
           (C2708 - C2707 + C2710 - C2709 + C2712 - C2711 + C2714 - C2713) *
               C32208 +
           (C3235 - C3236 + C3237 - C3238 + C3239 - C3240 + C3241 - C3242) *
               C3351 +
           (C3243 - C3244 + C3245 - C3246 + C3247 - C3248 + C3249 - C3250) *
               C32053) *
              C31955 * C31925 * C210 +
          ((C2716 - C2715 + C2718 - C2717 + C2720 - C2719 + C2722 - C2721) *
               C3350 +
           (C2724 - C2723 + C2726 - C2725 + C2728 - C2727 + C2730 - C2729) *
               C32208 +
           (C2590 * C1059 - C2596 * C1050 + C2591 * C1060 - C2597 * C1051 +
            C2592 * C1061 - C2598 * C1052 + C32242 * C1407 - C2599 * C1406) *
               C3351 +
           (C2590 * C1077 - C2596 * C1062 + C2591 * C1078 - C2597 * C1063 +
            C2592 * C1079 - C2598 * C1064 + C32242 * C1409 - C2599 * C1408) *
               C32053) *
              C31955 * C31925 * C211) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C32188 * C126 - C30873 * C119 + C31872 * C127 - C30854 * C120) *
                C3350 +
            (C32188 * C140 - C30873 * C131 + C31872 * C141 - C30854 * C132) *
                C32208 +
            (C32188 * C328 - C30873 * C318 + C31872 * C329 - C30854 * C319) *
                C3351 +
            (C32188 * C348 - C30873 * C333 + C31872 * C349 - C30854 * C334) *
                C32053) *
               C5151 +
           ((C7532 - C7533 + C7534 - C7535) * C3350 +
            (C7536 - C7537 + C7538 - C7539) * C32208 +
            (C8095 - C8094 + C8097 - C8096) * C3351 +
            (C8099 - C8098 + C8101 - C8100) * C32053) *
               C5152 +
           (C7572 * C3350 + C7573 * C32208 +
            (C8103 - C8102 + C8105 - C8104) * C3351 +
            (C8107 - C8106 + C8109 - C8108) * C32053) *
               C32238) *
              C31925 * C31911 * C110 +
          (((C30873 * C120 - C32188 * C127 + C30854 * C121 - C31872 * C128) *
                C3350 +
            (C30873 * C132 - C32188 * C141 + C30854 * C133 - C31872 * C142) *
                C32208 +
            (C30873 * C319 - C32188 * C329 + C30854 * C320 - C31872 * C330) *
                C3351 +
            (C30873 * C334 - C32188 * C349 + C30854 * C335 - C31872 * C350) *
                C32053) *
               C5151 +
           ((C7810 - C7811 + C7812 - C7813) * C3350 +
            (C7814 - C7815 + C7816 - C7817) * C32208 +
            (C30873 * C619 - C32188 * C624 + C30854 * C620 - C31872 * C625) *
                C3351 +
            (C30873 * C629 - C32188 * C634 + C30854 * C630 - C31872 * C635) *
                C32053) *
               C5152 +
           ((C7818 - C7819 + C7820 - C7821) * C3350 +
            (C7822 - C7823 + C7824 - C7825) * C32208 +
            (C30873 * C1051 - C32188 * C1060 + C30854 * C1052 -
             C31872 * C1061) *
                C3351 +
            (C30873 * C1063 - C32188 * C1078 + C30854 * C1064 -
             C31872 * C1079) *
                C32053) *
               C32238) *
              C31925 * C31911 * C111 +
          (((C32188 * C128 - C30873 * C121 + C31872 * C129 - C30854 * C122) *
                C3350 +
            (C32188 * C142 - C30873 * C133 + C31872 * C143 - C30854 * C134) *
                C32208 +
            (C32188 * C330 - C30873 * C320 + C31872 * C331 - C30854 * C321) *
                C3351 +
            (C32188 * C350 - C30873 * C335 + C31872 * C351 - C30854 * C336) *
                C32053) *
               C5151 +
           ((C32188 * C225 - C30873 * C215 + C31872 * C226 - C30854 * C216) *
                C3350 +
            (C32188 * C245 - C30873 * C230 + C31872 * C246 - C30854 * C231) *
                C32208 +
            (C32188 * C625 - C30873 * C620 + C31872 * C626 - C30854 * C621) *
                C3351 +
            (C32188 * C635 - C30873 * C630 + C31872 * C636 - C30854 * C631) *
                C32053) *
               C5152 +
           ((C32188 * C235 - C30873 * C220 + C31872 * C236 - C30854 * C221) *
                C3350 +
            (C32188 * C250 - C30873 * C240 + C31872 * C251 - C30854 * C241) *
                C32208 +
            (C32188 * C1061 - C30873 * C1052 + C31872 * C1407 -
             C30854 * C1406) *
                C3351 +
            (C32188 * C1079 - C30873 * C1064 + C31872 * C1409 -
             C30854 * C1408) *
                C32053) *
               C32238) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C32188 * C126 - C30873 * C119 + C31872 * C127 - C30854 * C120) *
                C3350 +
            (C32188 * C140 - C30873 * C131 + C31872 * C141 - C30854 * C132) *
                C32208 +
            (C32188 * C328 - C30873 * C318 + C31872 * C329 - C30854 * C319) *
                C3351 +
            (C32188 * C348 - C30873 * C333 + C31872 * C349 - C30854 * C334) *
                C32053) *
               C5151 +
           ((C7532 - C7533 + C7534 - C7535) * C3350 +
            (C7536 - C7537 + C7538 - C7539) * C32208 +
            (C8095 - C8094 + C8097 - C8096) * C3351 +
            (C8099 - C8098 + C8101 - C8100) * C32053) *
               C5152 +
           C8422 * C32238) *
              C31925 * C209 +
          (((C7533 - C7532 + C7535 - C7534) * C3350 +
            (C7537 - C7536 + C7539 - C7538) * C32208 +
            (C8094 - C8095 + C8096 - C8097) * C3351 +
            (C8098 - C8099 + C8100 - C8101) * C32053) *
               C5151 +
           ((C7541 - C7540 + C7543 - C7542) * C3350 +
            (C7545 - C7544 + C7547 - C7546) * C32208 +
            (C8102 - C8103 + C8104 - C8105) * C3351 +
            (C8106 - C8107 + C8108 - C8109) * C32053) *
               C5152 +
           ((C7549 - C7548 + C7551 - C7550) * C3350 +
            (C7553 - C7552 + C7555 - C7554) * C32208 +
            (C8110 - C8111 + C8112 - C8113) * C3351 +
            (C8114 - C8115 + C8116 - C8117) * C32053) *
               C32238) *
              C31925 * C210 +
          (C8422 * C5151 +
           (C7574 * C3350 + C7575 * C32208 +
            (C8111 - C8110 + C8113 - C8112) * C3351 +
            (C8115 - C8114 + C8117 - C8116) * C32053) *
               C5152 +
           ((C7557 - C7556 + C7559 - C7558) * C3350 +
            (C7561 - C7560 + C7563 - C7562) * C32208 +
            (C32188 * C6151 - C30873 * C6148 + C31872 * C6345 -
             C30854 * C6344) *
                C3351 +
            (C32188 * C6157 - C30873 * C6152 + C31872 * C6347 -
             C30854 * C6346) *
                C32053) *
               C32238) *
              C31925 * C211) *
         C31899) /
            (p * q * std::sqrt(p + q));
    d2ee[120] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C101 * C126 - C113 * C119 + C102 * C127 - C114 * C120 +
             C103 * C128 - C115 * C121 + C104 * C129 - C116 * C122 +
             C105 * C130 - C117 * C123) *
                C118 +
            (C101 * C140 - C113 * C131 + C102 * C141 - C114 * C132 +
             C103 * C142 - C115 * C133 + C104 * C143 - C116 * C134 +
             C105 * C144 - C117 * C135) *
                C31966) *
               C31955 * C31925 * C440 +
           ((C113 * C213 - C101 * C223 + C114 * C214 - C102 * C224 +
             C115 * C215 - C103 * C225 + C116 * C216 - C104 * C226 +
             C117 * C217 - C105 * C227) *
                C118 +
            (C113 * C228 - C101 * C243 + C114 * C229 - C102 * C244 +
             C115 * C230 - C103 * C245 + C116 * C231 - C104 * C246 +
             C117 * C232 - C105 * C247) *
                C31966) *
               C31955 * C31925 * C441) *
              C442 +
          (((C113 * C120 - C101 * C127 + C114 * C121 - C102 * C128 +
             C115 * C122 - C103 * C129 + C116 * C123 - C104 * C130 +
             C117 * C124 - C105 * C136) *
                C118 +
            (C113 * C132 - C101 * C141 + C114 * C133 - C102 * C142 +
             C115 * C134 - C103 * C143 + C116 * C135 - C104 * C144 +
             C117 * C137 - C105 * C145) *
                C31966) *
               C31955 * C31925 * C440 +
           ((C101 * C224 - C113 * C214 + C102 * C225 - C114 * C215 +
             C103 * C226 - C115 * C216 + C104 * C227 - C116 * C217 +
             C105 * C445 - C117 * C444) *
                C118 +
            (C101 * C244 - C113 * C229 + C102 * C245 - C114 * C230 +
             C103 * C246 - C115 * C231 + C104 * C247 - C116 * C232 +
             C105 * C447 - C117 * C446) *
                C31966) *
               C31955 * C31925 * C441) *
              C443)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C748 * C126 - C754 * C119 + C749 * C127 - C755 * C120 +
              C32227 * C128 - C756 * C121) *
                 C118 +
             (C748 * C140 - C754 * C131 + C749 * C141 - C755 * C132 +
              C32227 * C142 - C756 * C133) *
                 C31966) *
                C32273 +
            ((C892 - C893 + C894 - C895 + C896 - C897) * C118 +
             (C898 - C899 + C900 - C901 + C902 - C903) * C31966) *
                C32261 +
            C940 * C32238) *
               C31925 * C440 +
           (((C893 - C892 + C895 - C894 + C897 - C896) * C118 +
             (C899 - C898 + C901 - C900 + C903 - C902) * C31966) *
                C32273 +
            ((C905 - C904 + C907 - C906 + C909 - C908) * C118 +
             (C911 - C910 + C913 - C912 + C915 - C914) * C31966) *
                C32261 +
            ((C916 - C917 + C918 - C919 + C920 - C921) * C118 +
             (C922 - C923 + C924 - C925 + C926 - C927) * C31966) *
                C32238) *
               C31925 * C441) *
              C442 +
          ((((C754 * C120 - C748 * C127 + C755 * C121 - C749 * C128 +
              C756 * C122 - C32227 * C129) *
                 C118 +
             (C754 * C132 - C748 * C141 + C755 * C133 - C749 * C142 +
              C756 * C134 - C32227 * C143) *
                 C31966) *
                C32273 +
            ((C1237 - C1238 + C1239 - C1240 + C1241 - C1242) * C118 +
             (C1243 - C1244 + C1245 - C1246 + C1247 - C1248) * C31966) *
                C32261 +
            ((C1249 - C1250 + C1251 - C1252 + C1253 - C1254) * C118 +
             (C1255 - C1256 + C1257 - C1258 + C1259 - C1260) * C31966) *
                C32238) *
               C31925 * C440 +
           (((C1238 - C1237 + C1240 - C1239 + C1242 - C1241) * C118 +
             (C1244 - C1243 + C1246 - C1245 + C1248 - C1247) * C31966) *
                C32273 +
            ((C1250 - C1249 + C1252 - C1251 + C1254 - C1253) * C118 +
             (C1256 - C1255 + C1258 - C1257 + C1260 - C1259) * C31966) *
                C32261 +
            ((C748 * C874 - C754 * C868 + C749 * C875 - C755 * C869 +
              C32227 * C1233 - C756 * C1232) *
                 C118 +
             (C748 * C886 - C754 * C877 + C749 * C887 - C755 * C878 +
              C32227 * C1235 - C756 * C1234) *
                 C31966) *
                C32238) *
               C31925 * C441) *
              C443)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C32270 * C126 - C5154 * C119 + C32257 * C127 - C5155 * C120 +
              C32227 * C128 - C5156 * C121) *
                 C118 +
             (C32270 * C140 - C5154 * C131 + C32257 * C141 - C5155 * C132 +
              C32227 * C142 - C5156 * C133) *
                 C31966) *
                C5151 +
            ((C5268 - C5269 + C5270 - C5271 + C5272 - C5273) * C118 +
             (C5274 - C5275 + C5276 - C5277 + C5278 - C5279) * C31966) *
                C5152 +
            C5316 * C32238) *
               C31925 * C440 +
           (((C5269 - C5268 + C5271 - C5270 + C5273 - C5272) * C118 +
             (C5275 - C5274 + C5277 - C5276 + C5279 - C5278) * C31966) *
                C5151 +
            ((C5281 - C5280 + C5283 - C5282 + C5285 - C5284) * C118 +
             (C5287 - C5286 + C5289 - C5288 + C5291 - C5290) * C31966) *
                C5152 +
            ((C5292 - C5293 + C5294 - C5295 + C5296 - C5297) * C118 +
             (C5298 - C5299 + C5300 - C5301 + C5302 - C5303) * C31966) *
                C32238) *
               C31925 * C441) *
              C442 +
          ((((C5154 * C120 - C32270 * C127 + C5155 * C121 - C32257 * C128 +
              C5156 * C122 - C32227 * C129) *
                 C118 +
             (C5154 * C132 - C32270 * C141 + C5155 * C133 - C32257 * C142 +
              C5156 * C134 - C32227 * C143) *
                 C31966) *
                C5151 +
            ((C5573 - C5574 + C5575 - C5576 + C5577 - C5578) * C118 +
             (C5579 - C5580 + C5581 - C5582 + C5583 - C5584) * C31966) *
                C5152 +
            ((C5585 - C5586 + C5587 - C5588 + C5589 - C5590) * C118 +
             (C5591 - C5592 + C5593 - C5594 + C5595 - C5596) * C31966) *
                C32238) *
               C31925 * C440 +
           (((C5574 - C5573 + C5576 - C5575 + C5578 - C5577) * C118 +
             (C5580 - C5579 + C5582 - C5581 + C5584 - C5583) * C31966) *
                C5151 +
            ((C5586 - C5585 + C5588 - C5587 + C5590 - C5589) * C118 +
             (C5592 - C5591 + C5594 - C5593 + C5596 - C5595) * C31966) *
                C5152 +
            ((C32270 * C874 - C5154 * C868 + C32257 * C875 - C5155 * C869 +
              C32227 * C1233 - C5156 * C1232) *
                 C118 +
             (C32270 * C886 - C5154 * C877 + C32257 * C887 - C5155 * C878 +
              C32227 * C1235 - C5156 * C1234) *
                 C31966) *
                C32238) *
               C31925 * C441) *
              C443)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C31862 * C126 - C5980 * C119) * C118 +
             (C31862 * C140 - C5980 * C131) * C31966) *
                C5975 +
            ((C6052 - C6053) * C118 + (C6054 - C6055) * C31966) * C5976 +
            C6084 * C5977 + C6085 * C5978 + C6086 * C5979) *
               C31925 * C440 +
           (((C6053 - C6052) * C118 + (C6055 - C6054) * C31966) * C5975 +
            ((C6057 - C6056) * C118 + (C6059 - C6058) * C31966) * C5976 +
            ((C6061 - C6060) * C118 + (C6063 - C6062) * C31966) * C5977 +
            ((C6065 - C6064) * C118 + (C6067 - C6066) * C31966) * C5978 +
            ((C6068 - C6069) * C118 + (C6070 - C6071) * C31966) * C5979) *
               C31925 * C441) *
              C442 +
          ((((C5980 * C120 - C31862 * C127) * C118 +
             (C5980 * C132 - C31862 * C141) * C31966) *
                C5975 +
            ((C6247 - C6248) * C118 + (C6249 - C6250) * C31966) * C5976 +
            ((C6251 - C6252) * C118 + (C6253 - C6254) * C31966) * C5977 +
            ((C6255 - C6256) * C118 + (C6257 - C6258) * C31966) * C5978 +
            ((C6259 - C6260) * C118 + (C6261 - C6262) * C31966) * C5979) *
               C31925 * C440 +
           (((C6248 - C6247) * C118 + (C6250 - C6249) * C31966) * C5975 +
            ((C6252 - C6251) * C118 + (C6254 - C6253) * C31966) * C5976 +
            ((C6256 - C6255) * C118 + (C6258 - C6257) * C31966) * C5977 +
            ((C6260 - C6259) * C118 + (C6262 - C6261) * C31966) * C5978 +
            ((C31862 * C6243 - C5980 * C6242) * C118 +
             (C31862 * C6245 - C5980 * C6244) * C31966) *
                C5979) *
               C31925 * C441) *
              C443)) /
            (p * q * std::sqrt(p + q));
    d2ee[121] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C101 * C126 - C113 * C119 + C102 * C127 - C114 * C120 +
             C103 * C128 - C115 * C121 + C104 * C129 - C116 * C122 +
             C105 * C130 - C117 * C123) *
                C118 +
            (C101 * C140 - C113 * C131 + C102 * C141 - C114 * C132 +
             C103 * C142 - C115 * C133 + C104 * C143 - C116 * C134 +
             C105 * C144 - C117 * C135) *
                C31966) *
               C31955 * C530 +
           ((C113 * C318 - C101 * C328 + C114 * C319 - C102 * C329 +
             C115 * C320 - C103 * C330 + C116 * C321 - C104 * C331 +
             C117 * C322 - C105 * C332) *
                C118 +
            (C113 * C333 - C101 * C348 + C114 * C334 - C102 * C349 +
             C115 * C335 - C103 * C350 + C116 * C336 - C104 * C351 +
             C117 * C337 - C105 * C352) *
                C31966) *
               C31955 * C531) *
              C440 +
          (((C113 * C213 - C101 * C223 + C114 * C214 - C102 * C224 +
             C115 * C215 - C103 * C225 + C116 * C216 - C104 * C226 +
             C117 * C217 - C105 * C227) *
                C118 +
            (C113 * C228 - C101 * C243 + C114 * C229 - C102 * C244 +
             C115 * C230 - C103 * C245 + C116 * C231 - C104 * C246 +
             C117 * C232 - C105 * C247) *
                C31966) *
               C31955 * C530 +
           ((C101 * C623 - C113 * C618 + C102 * C624 - C114 * C619 +
             C103 * C625 - C115 * C620 + C104 * C626 - C116 * C621 +
             C105 * C627 - C117 * C622) *
                C118 +
            (C101 * C633 - C113 * C628 + C102 * C634 - C114 * C629 +
             C103 * C635 - C115 * C630 + C104 * C636 - C116 * C631 +
             C105 * C637 - C117 * C632) *
                C31966) *
               C31955 * C531) *
              C441) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C748 * C126 - C754 * C119 + C749 * C127 - C755 * C120 +
              C32227 * C128 - C756 * C121) *
                 C118 +
             (C748 * C140 - C754 * C131 + C749 * C141 - C755 * C132 +
              C32227 * C142 - C756 * C133) *
                 C31966) *
                C32273 +
            ((C892 - C893 + C894 - C895 + C896 - C897) * C118 +
             (C898 - C899 + C900 - C901 + C902 - C903) * C31966) *
                C32261 +
            C940 * C32238) *
               C530 +
           (((C754 * C318 - C748 * C328 + C755 * C319 - C749 * C329 +
              C756 * C320 - C32227 * C330) *
                 C118 +
             (C754 * C333 - C748 * C348 + C755 * C334 - C749 * C349 +
              C756 * C335 - C32227 * C350) *
                 C31966) *
                C32273 +
            ((C1569 - C1570 + C1571 - C1572 + C1573 - C1574) * C118 +
             (C1575 - C1576 + C1577 - C1578 + C1579 - C1580) * C31966) *
                C32261 +
            ((C1581 - C1582 + C1583 - C1584 + C1585 - C1586) * C118 +
             (C1587 - C1588 + C1589 - C1590 + C1591 - C1592) * C31966) *
                C32238) *
               C531) *
              C440 +
          ((((C893 - C892 + C895 - C894 + C897 - C896) * C118 +
             (C899 - C898 + C901 - C900 + C903 - C902) * C31966) *
                C32273 +
            ((C905 - C904 + C907 - C906 + C909 - C908) * C118 +
             (C911 - C910 + C913 - C912 + C915 - C914) * C31966) *
                C32261 +
            ((C916 - C917 + C918 - C919 + C920 - C921) * C118 +
             (C922 - C923 + C924 - C925 + C926 - C927) * C31966) *
                C32238) *
               C530 +
           (((C1570 - C1569 + C1572 - C1571 + C1574 - C1573) * C118 +
             (C1576 - C1575 + C1578 - C1577 + C1580 - C1579) * C31966) *
                C32273 +
            ((C1582 - C1581 + C1584 - C1583 + C1586 - C1585) * C118 +
             (C1588 - C1587 + C1590 - C1589 + C1592 - C1591) * C31966) *
                C32261 +
            ((C748 * C1559 - C754 * C1556 + C749 * C1560 - C755 * C1557 +
              C32227 * C1561 - C756 * C1558) *
                 C118 +
             (C748 * C1565 - C754 * C1562 + C749 * C1566 - C755 * C1563 +
              C32227 * C1567 - C756 * C1564) *
                 C31966) *
                C32238) *
               C531) *
              C441) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C32270 * C126 - C5154 * C119 + C32257 * C127 - C5155 * C120 +
              C32227 * C128 - C5156 * C121) *
                 C118 +
             (C32270 * C140 - C5154 * C131 + C32257 * C141 - C5155 * C132 +
              C32227 * C142 - C5156 * C133) *
                 C31966) *
                C5151 +
            ((C5268 - C5269 + C5270 - C5271 + C5272 - C5273) * C118 +
             (C5274 - C5275 + C5276 - C5277 + C5278 - C5279) * C31966) *
                C5152 +
            C5316 * C32238) *
               C530 +
           (((C5154 * C318 - C32270 * C328 + C5155 * C319 - C32257 * C329 +
              C5156 * C320 - C32227 * C330) *
                 C118 +
             (C5154 * C333 - C32270 * C348 + C5155 * C334 - C32257 * C349 +
              C5156 * C335 - C32227 * C350) *
                 C31966) *
                C5151 +
            ((C5889 - C5890 + C5891 - C5892 + C5893 - C5894) * C118 +
             (C5895 - C5896 + C5897 - C5898 + C5899 - C5900) * C31966) *
                C5152 +
            ((C5901 - C5902 + C5903 - C5904 + C5905 - C5906) * C118 +
             (C5907 - C5908 + C5909 - C5910 + C5911 - C5912) * C31966) *
                C32238) *
               C531) *
              C440 +
          ((((C5269 - C5268 + C5271 - C5270 + C5273 - C5272) * C118 +
             (C5275 - C5274 + C5277 - C5276 + C5279 - C5278) * C31966) *
                C5151 +
            ((C5281 - C5280 + C5283 - C5282 + C5285 - C5284) * C118 +
             (C5287 - C5286 + C5289 - C5288 + C5291 - C5290) * C31966) *
                C5152 +
            ((C5292 - C5293 + C5294 - C5295 + C5296 - C5297) * C118 +
             (C5298 - C5299 + C5300 - C5301 + C5302 - C5303) * C31966) *
                C32238) *
               C530 +
           (((C5890 - C5889 + C5892 - C5891 + C5894 - C5893) * C118 +
             (C5896 - C5895 + C5898 - C5897 + C5900 - C5899) * C31966) *
                C5151 +
            ((C5902 - C5901 + C5904 - C5903 + C5906 - C5905) * C118 +
             (C5908 - C5907 + C5910 - C5909 + C5912 - C5911) * C31966) *
                C5152 +
            ((C32270 * C1559 - C5154 * C1556 + C32257 * C1560 - C5155 * C1557 +
              C32227 * C1561 - C5156 * C1558) *
                 C118 +
             (C32270 * C1565 - C5154 * C1562 + C32257 * C1566 - C5155 * C1563 +
              C32227 * C1567 - C5156 * C1564) *
                 C31966) *
                C32238) *
               C531) *
              C441) *
         C31899) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C31862 * C126 - C5980 * C119) * C118 +
             (C31862 * C140 - C5980 * C131) * C31966) *
                C5975 +
            ((C6052 - C6053) * C118 + (C6054 - C6055) * C31966) * C5976 +
            C6084 * C5977 + C6085 * C5978 + C6086 * C5979) *
               C530 +
           (((C5980 * C318 - C31862 * C328) * C118 +
             (C5980 * C333 - C31862 * C348) * C31966) *
                C5975 +
            ((C6435 - C6436) * C118 + (C6437 - C6438) * C31966) * C5976 +
            ((C6439 - C6440) * C118 + (C6441 - C6442) * C31966) * C5977 +
            ((C6443 - C6444) * C118 + (C6445 - C6446) * C31966) * C5978 +
            ((C6447 - C6448) * C118 + (C6449 - C6450) * C31966) * C5979) *
               C531) *
              C440 +
          ((((C6053 - C6052) * C118 + (C6055 - C6054) * C31966) * C5975 +
            ((C6057 - C6056) * C118 + (C6059 - C6058) * C31966) * C5976 +
            ((C6061 - C6060) * C118 + (C6063 - C6062) * C31966) * C5977 +
            ((C6065 - C6064) * C118 + (C6067 - C6066) * C31966) * C5978 +
            ((C6068 - C6069) * C118 + (C6070 - C6071) * C31966) * C5979) *
               C530 +
           (((C6436 - C6435) * C118 + (C6438 - C6437) * C31966) * C5975 +
            ((C6440 - C6439) * C118 + (C6442 - C6441) * C31966) * C5976 +
            ((C6444 - C6443) * C118 + (C6446 - C6445) * C31966) * C5977 +
            ((C6448 - C6447) * C118 + (C6450 - C6449) * C31966) * C5978 +
            ((C31862 * C6431 - C5980 * C6430) * C118 +
             (C31862 * C6433 - C5980 * C6432) * C31966) *
                C5979) *
               C531) *
              C441) *
         C31899) /
            (p * q * std::sqrt(p + q));
    d2ee[122] +=
        (-std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C101 * C126 - C113 * C119 + C102 * C127 - C114 * C120 +
            C103 * C128 - C115 * C121 + C104 * C129 - C116 * C122 +
            C105 * C130 - C117 * C123) *
               C118 +
           (C101 * C140 - C113 * C131 + C102 * C141 - C114 * C132 +
            C103 * C142 - C115 * C133 + C104 * C143 - C116 * C134 +
            C105 * C144 - C117 * C135) *
               C31966) *
              C31955 * C31925 * C209 +
          ((C113 * C213 - C101 * C223 + C114 * C214 - C102 * C224 +
            C115 * C215 - C103 * C225 + C116 * C216 - C104 * C226 +
            C117 * C217 - C105 * C227) *
               C118 +
           (C113 * C228 - C101 * C243 + C114 * C229 - C102 * C244 +
            C115 * C230 - C103 * C245 + C116 * C231 - C104 * C246 +
            C117 * C232 - C105 * C247) *
               C31966) *
              C31955 * C31925 * C210 +
          ((C101 * C233 - C113 * C218 + C102 * C234 - C114 * C219 +
            C103 * C235 - C115 * C220 + C104 * C236 - C116 * C221 +
            C105 * C237 - C117 * C222) *
               C118 +
           (C101 * C248 - C113 * C238 + C102 * C249 - C114 * C239 +
            C103 * C250 - C115 * C240 + C104 * C251 - C116 * C241 +
            C105 * C252 - C117 * C242) *
               C31966) *
              C31955 * C31925 * C211) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C101 * C126 - C113 * C119 + C102 * C127 - C114 * C120 +
            C103 * C128 - C115 * C121 + C104 * C129 - C116 * C122 +
            C105 * C130 - C117 * C123) *
               C118 +
           (C101 * C140 - C113 * C131 + C102 * C141 - C114 * C132 +
            C103 * C142 - C115 * C133 + C104 * C143 - C116 * C134 +
            C105 * C144 - C117 * C135) *
               C31966) *
              C31955 * C31925 * C31911 * C110 +
          ((C113 * C120 - C101 * C127 + C114 * C121 - C102 * C128 +
            C115 * C122 - C103 * C129 + C116 * C123 - C104 * C130 +
            C117 * C124 - C105 * C136) *
               C118 +
           (C113 * C132 - C101 * C141 + C114 * C133 - C102 * C142 +
            C115 * C134 - C103 * C143 + C116 * C135 - C104 * C144 +
            C117 * C137 - C105 * C145) *
               C31966) *
              C31955 * C31925 * C31911 * C111 +
          ((C101 * C128 - C113 * C121 + C102 * C129 - C114 * C122 +
            C103 * C130 - C115 * C123 + C104 * C136 - C116 * C124 +
            C105 * C138 - C117 * C125) *
               C118 +
           (C101 * C142 - C113 * C133 + C102 * C143 - C114 * C134 +
            C103 * C144 - C115 * C135 + C104 * C145 - C116 * C137 +
            C105 * C146 - C117 * C139) *
               C31966) *
              C31955 * C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C101 * C126 - C113 * C119 + C102 * C127 - C114 * C120 +
            C103 * C128 - C115 * C121 + C104 * C129 - C116 * C122 +
            C105 * C130 - C117 * C123) *
               C118 +
           (C101 * C140 - C113 * C131 + C102 * C141 - C114 * C132 +
            C103 * C142 - C115 * C133 + C104 * C143 - C116 * C134 +
            C105 * C144 - C117 * C135) *
               C31966) *
              C31955 * C315 +
          ((C113 * C318 - C101 * C328 + C114 * C319 - C102 * C329 +
            C115 * C320 - C103 * C330 + C116 * C321 - C104 * C331 +
            C117 * C322 - C105 * C332) *
               C118 +
           (C113 * C333 - C101 * C348 + C114 * C334 - C102 * C349 +
            C115 * C335 - C103 * C350 + C116 * C336 - C104 * C351 +
            C117 * C337 - C105 * C352) *
               C31966) *
              C31955 * C316 +
          ((C101 * C338 - C113 * C323 + C102 * C339 - C114 * C324 +
            C103 * C340 - C115 * C325 + C104 * C341 - C116 * C326 +
            C105 * C342 - C117 * C327) *
               C118 +
           (C101 * C353 - C113 * C343 + C102 * C354 - C114 * C344 +
            C103 * C355 - C115 * C345 + C104 * C356 - C116 * C346 +
            C105 * C357 - C117 * C347) *
               C31966) *
              C31955 * C317) *
         C31911 * C31899) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C748 * C126 - C754 * C119 + C749 * C127 - C755 * C120 +
             C32227 * C128 - C756 * C121) *
                C118 +
            (C748 * C140 - C754 * C131 + C749 * C141 - C755 * C132 +
             C32227 * C142 - C756 * C133) *
                C31966) *
               C32273 +
           ((C748 * C223 - C754 * C213 + C749 * C224 - C755 * C214 +
             C32227 * C225 - C756 * C215) *
                C118 +
            (C748 * C243 - C754 * C228 + C749 * C244 - C755 * C229 +
             C32227 * C245 - C756 * C230) *
                C31966) *
               C32261 +
           ((C748 * C233 - C754 * C218 + C749 * C234 - C755 * C219 +
             C32227 * C235 - C756 * C220) *
                C118 +
            (C748 * C248 - C754 * C238 + C749 * C249 - C755 * C239 +
             C32227 * C250 - C756 * C240) *
                C31966) *
               C32238) *
              C31925 * C31911 * C110 +
          (((C754 * C120 - C748 * C127 + C755 * C121 - C749 * C128 +
             C756 * C122 - C32227 * C129) *
                C118 +
            (C754 * C132 - C748 * C141 + C755 * C133 - C749 * C142 +
             C756 * C134 - C32227 * C143) *
                C31966) *
               C32273 +
           ((C754 * C214 - C748 * C224 + C755 * C215 - C749 * C225 +
             C756 * C216 - C32227 * C226) *
                C118 +
            (C754 * C229 - C748 * C244 + C755 * C230 - C749 * C245 +
             C756 * C231 - C32227 * C246) *
                C31966) *
               C32261 +
           ((C754 * C219 - C748 * C234 + C755 * C220 - C749 * C235 +
             C756 * C221 - C32227 * C236) *
                C118 +
            (C754 * C239 - C748 * C249 + C755 * C240 - C749 * C250 +
             C756 * C241 - C32227 * C251) *
                C31966) *
               C32238) *
              C31925 * C31911 * C111 +
          (((C748 * C128 - C754 * C121 + C749 * C129 - C755 * C122 +
             C32227 * C130 - C756 * C123) *
                C118 +
            (C748 * C142 - C754 * C133 + C749 * C143 - C755 * C134 +
             C32227 * C144 - C756 * C135) *
                C31966) *
               C32273 +
           ((C748 * C225 - C754 * C215 + C749 * C226 - C755 * C216 +
             C32227 * C227 - C756 * C217) *
                C118 +
            (C748 * C245 - C754 * C230 + C749 * C246 - C755 * C231 +
             C32227 * C247 - C756 * C232) *
                C31966) *
               C32261 +
           ((C748 * C235 - C754 * C220 + C749 * C236 - C755 * C221 +
             C32227 * C237 - C756 * C222) *
                C118 +
            (C748 * C250 - C754 * C240 + C749 * C251 - C755 * C241 +
             C32227 * C252 - C756 * C242) *
                C31966) *
               C32238) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C748 * C126 - C754 * C119 + C749 * C127 - C755 * C120 +
             C32227 * C128 - C756 * C121) *
                C118 +
            (C748 * C140 - C754 * C131 + C749 * C141 - C755 * C132 +
             C32227 * C142 - C756 * C133) *
                C31966) *
               C32273 +
           ((C892 - C893 + C894 - C895 + C896 - C897) * C118 +
            (C898 - C899 + C900 - C901 + C902 - C903) * C31966) *
               C32261 +
           C940 * C32238) *
              C31925 * C209 +
          (((C893 - C892 + C895 - C894 + C897 - C896) * C118 +
            (C899 - C898 + C901 - C900 + C903 - C902) * C31966) *
               C32273 +
           ((C905 - C904 + C907 - C906 + C909 - C908) * C118 +
            (C911 - C910 + C913 - C912 + C915 - C914) * C31966) *
               C32261 +
           ((C916 - C917 + C918 - C919 + C920 - C921) * C118 +
            (C922 - C923 + C924 - C925 + C926 - C927) * C31966) *
               C32238) *
              C31925 * C210 +
          (C940 * C32273 +
           ((C917 - C916 + C919 - C918 + C921 - C920) * C118 +
            (C923 - C922 + C925 - C924 + C927 - C926) * C31966) *
               C32261 +
           ((C748 * C879 - C754 * C870 + C749 * C880 - C755 * C871 +
             C32227 * C881 - C756 * C872) *
                C118 +
            (C748 * C888 - C754 * C882 + C749 * C889 - C755 * C883 +
             C32227 * C890 - C756 * C884) *
                C31966) *
               C32238) *
              C31925 * C211) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C748 * C126 - C754 * C119 + C749 * C127 - C755 * C120 +
             C32227 * C128 - C756 * C121) *
                C118 +
            (C748 * C140 - C754 * C131 + C749 * C141 - C755 * C132 +
             C32227 * C142 - C756 * C133) *
                C31966) *
               C32273 +
           ((C892 - C893 + C894 - C895 + C896 - C897) * C118 +
            (C898 - C899 + C900 - C901 + C902 - C903) * C31966) *
               C32261 +
           C940 * C32238) *
              C315 +
          (((C754 * C318 - C748 * C328 + C755 * C319 - C749 * C329 +
             C756 * C320 - C32227 * C330) *
                C118 +
            (C754 * C333 - C748 * C348 + C755 * C334 - C749 * C349 +
             C756 * C335 - C32227 * C350) *
                C31966) *
               C32273 +
           ((C754 * C618 - C748 * C623 + C755 * C619 - C749 * C624 +
             C756 * C620 - C32227 * C625) *
                C118 +
            (C754 * C628 - C748 * C633 + C755 * C629 - C749 * C634 +
             C756 * C630 - C32227 * C635) *
                C31966) *
               C32261 +
           ((C754 * C1050 - C748 * C1059 + C755 * C1051 - C749 * C1060 +
             C756 * C1052 - C32227 * C1061) *
                C118 +
            (C754 * C1062 - C748 * C1077 + C755 * C1063 - C749 * C1078 +
             C756 * C1064 - C32227 * C1079) *
                C31966) *
               C32238) *
              C316 +
          (((C748 * C338 - C754 * C323 + C749 * C339 - C755 * C324 +
             C32227 * C340 - C756 * C325) *
                C118 +
            (C748 * C353 - C754 * C343 + C749 * C354 - C755 * C344 +
             C32227 * C355 - C756 * C345) *
                C31966) *
               C32273 +
           ((C748 * C1065 - C754 * C1053 + C749 * C1066 - C755 * C1054 +
             C32227 * C1067 - C756 * C1055) *
                C118 +
            (C748 * C1080 - C754 * C1068 + C749 * C1081 - C755 * C1069 +
             C32227 * C1082 - C756 * C1070) *
                C31966) *
               C32261 +
           ((C748 * C1071 - C754 * C1056 + C749 * C1072 - C755 * C1057 +
             C32227 * C1073 - C756 * C1058) *
                C118 +
            (C748 * C1083 - C754 * C1074 + C749 * C1084 - C755 * C1075 +
             C32227 * C1085 - C756 * C1076) *
                C31966) *
               C32238) *
              C317) *
         C31911 * C31899) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C32270 * C126 - C5154 * C119 + C32257 * C127 - C5155 * C120 +
             C32227 * C128 - C5156 * C121) *
                C118 +
            (C32270 * C140 - C5154 * C131 + C32257 * C141 - C5155 * C132 +
             C32227 * C142 - C5156 * C133) *
                C31966) *
               C5151 +
           ((C32270 * C223 - C5154 * C213 + C32257 * C224 - C5155 * C214 +
             C32227 * C225 - C5156 * C215) *
                C118 +
            (C32270 * C243 - C5154 * C228 + C32257 * C244 - C5155 * C229 +
             C32227 * C245 - C5156 * C230) *
                C31966) *
               C5152 +
           ((C32270 * C233 - C5154 * C218 + C32257 * C234 - C5155 * C219 +
             C32227 * C235 - C5156 * C220) *
                C118 +
            (C32270 * C248 - C5154 * C238 + C32257 * C249 - C5155 * C239 +
             C32227 * C250 - C5156 * C240) *
                C31966) *
               C32238) *
              C31925 * C31911 * C110 +
          (((C5154 * C120 - C32270 * C127 + C5155 * C121 - C32257 * C128 +
             C5156 * C122 - C32227 * C129) *
                C118 +
            (C5154 * C132 - C32270 * C141 + C5155 * C133 - C32257 * C142 +
             C5156 * C134 - C32227 * C143) *
                C31966) *
               C5151 +
           ((C5154 * C214 - C32270 * C224 + C5155 * C215 - C32257 * C225 +
             C5156 * C216 - C32227 * C226) *
                C118 +
            (C5154 * C229 - C32270 * C244 + C5155 * C230 - C32257 * C245 +
             C5156 * C231 - C32227 * C246) *
                C31966) *
               C5152 +
           ((C5154 * C219 - C32270 * C234 + C5155 * C220 - C32257 * C235 +
             C5156 * C221 - C32227 * C236) *
                C118 +
            (C5154 * C239 - C32270 * C249 + C5155 * C240 - C32257 * C250 +
             C5156 * C241 - C32227 * C251) *
                C31966) *
               C32238) *
              C31925 * C31911 * C111 +
          (((C32270 * C128 - C5154 * C121 + C32257 * C129 - C5155 * C122 +
             C32227 * C130 - C5156 * C123) *
                C118 +
            (C32270 * C142 - C5154 * C133 + C32257 * C143 - C5155 * C134 +
             C32227 * C144 - C5156 * C135) *
                C31966) *
               C5151 +
           ((C32270 * C225 - C5154 * C215 + C32257 * C226 - C5155 * C216 +
             C32227 * C227 - C5156 * C217) *
                C118 +
            (C32270 * C245 - C5154 * C230 + C32257 * C246 - C5155 * C231 +
             C32227 * C247 - C5156 * C232) *
                C31966) *
               C5152 +
           ((C32270 * C235 - C5154 * C220 + C32257 * C236 - C5155 * C221 +
             C32227 * C237 - C5156 * C222) *
                C118 +
            (C32270 * C250 - C5154 * C240 + C32257 * C251 - C5155 * C241 +
             C32227 * C252 - C5156 * C242) *
                C31966) *
               C32238) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C32270 * C126 - C5154 * C119 + C32257 * C127 - C5155 * C120 +
             C32227 * C128 - C5156 * C121) *
                C118 +
            (C32270 * C140 - C5154 * C131 + C32257 * C141 - C5155 * C132 +
             C32227 * C142 - C5156 * C133) *
                C31966) *
               C5151 +
           ((C5268 - C5269 + C5270 - C5271 + C5272 - C5273) * C118 +
            (C5274 - C5275 + C5276 - C5277 + C5278 - C5279) * C31966) *
               C5152 +
           C5316 * C32238) *
              C31925 * C209 +
          (((C5269 - C5268 + C5271 - C5270 + C5273 - C5272) * C118 +
            (C5275 - C5274 + C5277 - C5276 + C5279 - C5278) * C31966) *
               C5151 +
           ((C5281 - C5280 + C5283 - C5282 + C5285 - C5284) * C118 +
            (C5287 - C5286 + C5289 - C5288 + C5291 - C5290) * C31966) *
               C5152 +
           ((C5292 - C5293 + C5294 - C5295 + C5296 - C5297) * C118 +
            (C5298 - C5299 + C5300 - C5301 + C5302 - C5303) * C31966) *
               C32238) *
              C31925 * C210 +
          (C5316 * C5151 +
           ((C5293 - C5292 + C5295 - C5294 + C5297 - C5296) * C118 +
            (C5299 - C5298 + C5301 - C5300 + C5303 - C5302) * C31966) *
               C5152 +
           ((C32270 * C879 - C5154 * C870 + C32257 * C880 - C5155 * C871 +
             C32227 * C881 - C5156 * C872) *
                C118 +
            (C32270 * C888 - C5154 * C882 + C32257 * C889 - C5155 * C883 +
             C32227 * C890 - C5156 * C884) *
                C31966) *
               C32238) *
              C31925 * C211) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C32270 * C126 - C5154 * C119 + C32257 * C127 - C5155 * C120 +
             C32227 * C128 - C5156 * C121) *
                C118 +
            (C32270 * C140 - C5154 * C131 + C32257 * C141 - C5155 * C132 +
             C32227 * C142 - C5156 * C133) *
                C31966) *
               C5151 +
           ((C5268 - C5269 + C5270 - C5271 + C5272 - C5273) * C118 +
            (C5274 - C5275 + C5276 - C5277 + C5278 - C5279) * C31966) *
               C5152 +
           C5316 * C32238) *
              C315 +
          (((C5154 * C318 - C32270 * C328 + C5155 * C319 - C32257 * C329 +
             C5156 * C320 - C32227 * C330) *
                C118 +
            (C5154 * C333 - C32270 * C348 + C5155 * C334 - C32257 * C349 +
             C5156 * C335 - C32227 * C350) *
                C31966) *
               C5151 +
           ((C5154 * C618 - C32270 * C623 + C5155 * C619 - C32257 * C624 +
             C5156 * C620 - C32227 * C625) *
                C118 +
            (C5154 * C628 - C32270 * C633 + C5155 * C629 - C32257 * C634 +
             C5156 * C630 - C32227 * C635) *
                C31966) *
               C5152 +
           ((C5154 * C1050 - C32270 * C1059 + C5155 * C1051 - C32257 * C1060 +
             C5156 * C1052 - C32227 * C1061) *
                C118 +
            (C5154 * C1062 - C32270 * C1077 + C5155 * C1063 - C32257 * C1078 +
             C5156 * C1064 - C32227 * C1079) *
                C31966) *
               C32238) *
              C316 +
          (((C32270 * C338 - C5154 * C323 + C32257 * C339 - C5155 * C324 +
             C32227 * C340 - C5156 * C325) *
                C118 +
            (C32270 * C353 - C5154 * C343 + C32257 * C354 - C5155 * C344 +
             C32227 * C355 - C5156 * C345) *
                C31966) *
               C5151 +
           ((C32270 * C1065 - C5154 * C1053 + C32257 * C1066 - C5155 * C1054 +
             C32227 * C1067 - C5156 * C1055) *
                C118 +
            (C32270 * C1080 - C5154 * C1068 + C32257 * C1081 - C5155 * C1069 +
             C32227 * C1082 - C5156 * C1070) *
                C31966) *
               C5152 +
           ((C32270 * C1071 - C5154 * C1056 + C32257 * C1072 - C5155 * C1057 +
             C32227 * C1073 - C5156 * C1058) *
                C118 +
            (C32270 * C1083 - C5154 * C1074 + C32257 * C1084 - C5155 * C1075 +
             C32227 * C1085 - C5156 * C1076) *
                C31966) *
               C32238) *
              C317) *
         C31911 * C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C31862 * C126 - C5980 * C119) * C118 +
            (C31862 * C140 - C5980 * C131) * C31966) *
               C5975 +
           ((C31862 * C223 - C5980 * C213) * C118 +
            (C31862 * C243 - C5980 * C228) * C31966) *
               C5976 +
           ((C31862 * C233 - C5980 * C218) * C118 +
            (C31862 * C248 - C5980 * C238) * C31966) *
               C5977 +
           ((C31862 * C873 - C5980 * C867) * C118 +
            (C31862 * C885 - C5980 * C876) * C31966) *
               C5978 +
           ((C31862 * C879 - C5980 * C870) * C118 +
            (C31862 * C888 - C5980 * C882) * C31966) *
               C5979) *
              C31925 * C31911 * C110 +
          (((C5980 * C120 - C31862 * C127) * C118 +
            (C5980 * C132 - C31862 * C141) * C31966) *
               C5975 +
           ((C5980 * C214 - C31862 * C224) * C118 +
            (C5980 * C229 - C31862 * C244) * C31966) *
               C5976 +
           ((C5980 * C219 - C31862 * C234) * C118 +
            (C5980 * C239 - C31862 * C249) * C31966) *
               C5977 +
           ((C5980 * C868 - C31862 * C874) * C118 +
            (C5980 * C877 - C31862 * C886) * C31966) *
               C5978 +
           ((C5980 * C871 - C31862 * C880) * C118 +
            (C5980 * C883 - C31862 * C889) * C31966) *
               C5979) *
              C31925 * C31911 * C111 +
          (((C31862 * C128 - C5980 * C121) * C118 +
            (C31862 * C142 - C5980 * C133) * C31966) *
               C5975 +
           ((C31862 * C225 - C5980 * C215) * C118 +
            (C31862 * C245 - C5980 * C230) * C31966) *
               C5976 +
           ((C31862 * C235 - C5980 * C220) * C118 +
            (C31862 * C250 - C5980 * C240) * C31966) *
               C5977 +
           ((C31862 * C875 - C5980 * C869) * C118 +
            (C31862 * C887 - C5980 * C878) * C31966) *
               C5978 +
           ((C31862 * C881 - C5980 * C872) * C118 +
            (C31862 * C890 - C5980 * C884) * C31966) *
               C5979) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C31862 * C126 - C5980 * C119) * C118 +
            (C31862 * C140 - C5980 * C131) * C31966) *
               C5975 +
           ((C6052 - C6053) * C118 + (C6054 - C6055) * C31966) * C5976 +
           C6084 * C5977 + C6085 * C5978 + C6086 * C5979) *
              C31925 * C209 +
          (((C6053 - C6052) * C118 + (C6055 - C6054) * C31966) * C5975 +
           ((C6057 - C6056) * C118 + (C6059 - C6058) * C31966) * C5976 +
           ((C6061 - C6060) * C118 + (C6063 - C6062) * C31966) * C5977 +
           ((C6065 - C6064) * C118 + (C6067 - C6066) * C31966) * C5978 +
           ((C6068 - C6069) * C118 + (C6070 - C6071) * C31966) * C5979) *
              C31925 * C210 +
          (C6084 * C5975 + C6085 * C5976 + C6086 * C5977 +
           ((C6069 - C6068) * C118 + (C6071 - C6070) * C31966) * C5978 +
           ((C31862 * C6047 - C5980 * C6044) * C118 +
            (C31862 * C6050 - C5980 * C6048) * C31966) *
               C5979) *
              C31925 * C211) *
         C31899) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31862 * C126 - C5980 * C119) * C118 +
            (C31862 * C140 - C5980 * C131) * C31966) *
               C5975 +
           ((C6052 - C6053) * C118 + (C6054 - C6055) * C31966) * C5976 +
           C6084 * C5977 + C6085 * C5978 + C6086 * C5979) *
              C315 +
          (((C5980 * C318 - C31862 * C328) * C118 +
            (C5980 * C333 - C31862 * C348) * C31966) *
               C5975 +
           ((C5980 * C618 - C31862 * C623) * C118 +
            (C5980 * C628 - C31862 * C633) * C31966) *
               C5976 +
           ((C5980 * C1050 - C31862 * C1059) * C118 +
            (C5980 * C1062 - C31862 * C1077) * C31966) *
               C5977 +
           ((C5980 * C1556 - C31862 * C1559) * C118 +
            (C5980 * C1562 - C31862 * C1565) * C31966) *
               C5978 +
           ((C5980 * C6148 - C31862 * C6151) * C118 +
            (C5980 * C6152 - C31862 * C6157) * C31966) *
               C5979) *
              C316 +
          (((C31862 * C338 - C5980 * C323) * C118 +
            (C31862 * C353 - C5980 * C343) * C31966) *
               C5975 +
           ((C31862 * C1065 - C5980 * C1053) * C118 +
            (C31862 * C1080 - C5980 * C1068) * C31966) *
               C5976 +
           ((C31862 * C1071 - C5980 * C1056) * C118 +
            (C31862 * C1083 - C5980 * C1074) * C31966) *
               C5977 +
           ((C31862 * C6153 - C5980 * C6149) * C118 +
            (C31862 * C6158 - C5980 * C6154) * C31966) *
               C5978 +
           ((C31862 * C6155 - C5980 * C6150) * C118 +
            (C31862 * C6159 - C5980 * C6156) * C31966) *
               C5979) *
              C317) *
         C31911 * C31899) /
            (p * q * std::sqrt(p + q));
    d2ee[123] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C101 * C126 - C113 * C119 + C102 * C127 - C114 * C120 +
             C103 * C128 - C115 * C121 + C104 * C129 - C116 * C122 +
             C105 * C130 - C117 * C123) *
                C118 +
            (C101 * C140 - C113 * C131 + C102 * C141 - C114 * C132 +
             C103 * C142 - C115 * C133 + C104 * C143 - C116 * C134 +
             C105 * C144 - C117 * C135) *
                C31966) *
               C31955 * C530 +
           ((C113 * C318 - C101 * C328 + C114 * C319 - C102 * C329 +
             C115 * C320 - C103 * C330 + C116 * C321 - C104 * C331 +
             C117 * C322 - C105 * C332) *
                C118 +
            (C113 * C333 - C101 * C348 + C114 * C334 - C102 * C349 +
             C115 * C335 - C103 * C350 + C116 * C336 - C104 * C351 +
             C117 * C337 - C105 * C352) *
                C31966) *
               C31955 * C531) *
              C31911 * C442 +
          (((C113 * C120 - C101 * C127 + C114 * C121 - C102 * C128 +
             C115 * C122 - C103 * C129 + C116 * C123 - C104 * C130 +
             C117 * C124 - C105 * C136) *
                C118 +
            (C113 * C132 - C101 * C141 + C114 * C133 - C102 * C142 +
             C115 * C134 - C103 * C143 + C116 * C135 - C104 * C144 +
             C117 * C137 - C105 * C145) *
                C31966) *
               C31955 * C530 +
           ((C101 * C329 - C113 * C319 + C102 * C330 - C114 * C320 +
             C103 * C331 - C115 * C321 + C104 * C332 - C116 * C322 +
             C105 * C533 - C117 * C532) *
                C118 +
            (C101 * C349 - C113 * C334 + C102 * C350 - C114 * C335 +
             C103 * C351 - C115 * C336 + C104 * C352 - C116 * C337 +
             C105 * C535 - C117 * C534) *
                C31966) *
               C31955 * C531) *
              C31911 * C443)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C748 * C126 - C754 * C119 + C749 * C127 - C755 * C120 +
              C32227 * C128 - C756 * C121) *
                 C118 +
             (C748 * C140 - C754 * C131 + C749 * C141 - C755 * C132 +
              C32227 * C142 - C756 * C133) *
                 C31966) *
                C32273 +
            ((C892 - C893 + C894 - C895 + C896 - C897) * C118 +
             (C898 - C899 + C900 - C901 + C902 - C903) * C31966) *
                C32261 +
            C940 * C32238) *
               C530 +
           (((C754 * C318 - C748 * C328 + C755 * C319 - C749 * C329 +
              C756 * C320 - C32227 * C330) *
                 C118 +
             (C754 * C333 - C748 * C348 + C755 * C334 - C749 * C349 +
              C756 * C335 - C32227 * C350) *
                 C31966) *
                C32273 +
            ((C754 * C618 - C748 * C623 + C755 * C619 - C749 * C624 +
              C756 * C620 - C32227 * C625) *
                 C118 +
             (C754 * C628 - C748 * C633 + C755 * C629 - C749 * C634 +
              C756 * C630 - C32227 * C635) *
                 C31966) *
                C32261 +
            ((C754 * C1050 - C748 * C1059 + C755 * C1051 - C749 * C1060 +
              C756 * C1052 - C32227 * C1061) *
                 C118 +
             (C754 * C1062 - C748 * C1077 + C755 * C1063 - C749 * C1078 +
              C756 * C1064 - C32227 * C1079) *
                 C31966) *
                C32238) *
               C531) *
              C31911 * C442 +
          ((((C754 * C120 - C748 * C127 + C755 * C121 - C749 * C128 +
              C756 * C122 - C32227 * C129) *
                 C118 +
             (C754 * C132 - C748 * C141 + C755 * C133 - C749 * C142 +
              C756 * C134 - C32227 * C143) *
                 C31966) *
                C32273 +
            ((C1237 - C1238 + C1239 - C1240 + C1241 - C1242) * C118 +
             (C1243 - C1244 + C1245 - C1246 + C1247 - C1248) * C31966) *
                C32261 +
            ((C1249 - C1250 + C1251 - C1252 + C1253 - C1254) * C118 +
             (C1255 - C1256 + C1257 - C1258 + C1259 - C1260) * C31966) *
                C32238) *
               C530 +
           (((C748 * C329 - C754 * C319 + C749 * C330 - C755 * C320 +
              C32227 * C331 - C756 * C321) *
                 C118 +
             (C748 * C349 - C754 * C334 + C749 * C350 - C755 * C335 +
              C32227 * C351 - C756 * C336) *
                 C31966) *
                C32273 +
            ((C748 * C624 - C754 * C619 + C749 * C625 - C755 * C620 +
              C32227 * C626 - C756 * C621) *
                 C118 +
             (C748 * C634 - C754 * C629 + C749 * C635 - C755 * C630 +
              C32227 * C636 - C756 * C631) *
                 C31966) *
                C32261 +
            ((C748 * C1060 - C754 * C1051 + C749 * C1061 - C755 * C1052 +
              C32227 * C1407 - C756 * C1406) *
                 C118 +
             (C748 * C1078 - C754 * C1063 + C749 * C1079 - C755 * C1064 +
              C32227 * C1409 - C756 * C1408) *
                 C31966) *
                C32238) *
               C531) *
              C31911 * C443)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C32270 * C126 - C5154 * C119 + C32257 * C127 - C5155 * C120 +
              C32227 * C128 - C5156 * C121) *
                 C118 +
             (C32270 * C140 - C5154 * C131 + C32257 * C141 - C5155 * C132 +
              C32227 * C142 - C5156 * C133) *
                 C31966) *
                C5151 +
            ((C5268 - C5269 + C5270 - C5271 + C5272 - C5273) * C118 +
             (C5274 - C5275 + C5276 - C5277 + C5278 - C5279) * C31966) *
                C5152 +
            C5316 * C32238) *
               C530 +
           (((C5154 * C318 - C32270 * C328 + C5155 * C319 - C32257 * C329 +
              C5156 * C320 - C32227 * C330) *
                 C118 +
             (C5154 * C333 - C32270 * C348 + C5155 * C334 - C32257 * C349 +
              C5156 * C335 - C32227 * C350) *
                 C31966) *
                C5151 +
            ((C5154 * C618 - C32270 * C623 + C5155 * C619 - C32257 * C624 +
              C5156 * C620 - C32227 * C625) *
                 C118 +
             (C5154 * C628 - C32270 * C633 + C5155 * C629 - C32257 * C634 +
              C5156 * C630 - C32227 * C635) *
                 C31966) *
                C5152 +
            ((C5154 * C1050 - C32270 * C1059 + C5155 * C1051 - C32257 * C1060 +
              C5156 * C1052 - C32227 * C1061) *
                 C118 +
             (C5154 * C1062 - C32270 * C1077 + C5155 * C1063 - C32257 * C1078 +
              C5156 * C1064 - C32227 * C1079) *
                 C31966) *
                C32238) *
               C531) *
              C31911 * C442 +
          ((((C5154 * C120 - C32270 * C127 + C5155 * C121 - C32257 * C128 +
              C5156 * C122 - C32227 * C129) *
                 C118 +
             (C5154 * C132 - C32270 * C141 + C5155 * C133 - C32257 * C142 +
              C5156 * C134 - C32227 * C143) *
                 C31966) *
                C5151 +
            ((C5573 - C5574 + C5575 - C5576 + C5577 - C5578) * C118 +
             (C5579 - C5580 + C5581 - C5582 + C5583 - C5584) * C31966) *
                C5152 +
            ((C5585 - C5586 + C5587 - C5588 + C5589 - C5590) * C118 +
             (C5591 - C5592 + C5593 - C5594 + C5595 - C5596) * C31966) *
                C32238) *
               C530 +
           (((C32270 * C329 - C5154 * C319 + C32257 * C330 - C5155 * C320 +
              C32227 * C331 - C5156 * C321) *
                 C118 +
             (C32270 * C349 - C5154 * C334 + C32257 * C350 - C5155 * C335 +
              C32227 * C351 - C5156 * C336) *
                 C31966) *
                C5151 +
            ((C32270 * C624 - C5154 * C619 + C32257 * C625 - C5155 * C620 +
              C32227 * C626 - C5156 * C621) *
                 C118 +
             (C32270 * C634 - C5154 * C629 + C32257 * C635 - C5155 * C630 +
              C32227 * C636 - C5156 * C631) *
                 C31966) *
                C5152 +
            ((C32270 * C1060 - C5154 * C1051 + C32257 * C1061 - C5155 * C1052 +
              C32227 * C1407 - C5156 * C1406) *
                 C118 +
             (C32270 * C1078 - C5154 * C1063 + C32257 * C1079 - C5155 * C1064 +
              C32227 * C1409 - C5156 * C1408) *
                 C31966) *
                C32238) *
               C531) *
              C31911 * C443)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C31862 * C126 - C5980 * C119) * C118 +
             (C31862 * C140 - C5980 * C131) * C31966) *
                C5975 +
            ((C6052 - C6053) * C118 + (C6054 - C6055) * C31966) * C5976 +
            C6084 * C5977 + C6085 * C5978 + C6086 * C5979) *
               C530 +
           (((C5980 * C318 - C31862 * C328) * C118 +
             (C5980 * C333 - C31862 * C348) * C31966) *
                C5975 +
            ((C5980 * C618 - C31862 * C623) * C118 +
             (C5980 * C628 - C31862 * C633) * C31966) *
                C5976 +
            ((C5980 * C1050 - C31862 * C1059) * C118 +
             (C5980 * C1062 - C31862 * C1077) * C31966) *
                C5977 +
            ((C5980 * C1556 - C31862 * C1559) * C118 +
             (C5980 * C1562 - C31862 * C1565) * C31966) *
                C5978 +
            ((C5980 * C6148 - C31862 * C6151) * C118 +
             (C5980 * C6152 - C31862 * C6157) * C31966) *
                C5979) *
               C531) *
              C31911 * C442 +
          ((((C5980 * C120 - C31862 * C127) * C118 +
             (C5980 * C132 - C31862 * C141) * C31966) *
                C5975 +
            ((C6247 - C6248) * C118 + (C6249 - C6250) * C31966) * C5976 +
            ((C6251 - C6252) * C118 + (C6253 - C6254) * C31966) * C5977 +
            ((C6255 - C6256) * C118 + (C6257 - C6258) * C31966) * C5978 +
            ((C6259 - C6260) * C118 + (C6261 - C6262) * C31966) * C5979) *
               C530 +
           (((C31862 * C329 - C5980 * C319) * C118 +
             (C31862 * C349 - C5980 * C334) * C31966) *
                C5975 +
            ((C31862 * C624 - C5980 * C619) * C118 +
             (C31862 * C634 - C5980 * C629) * C31966) *
                C5976 +
            ((C31862 * C1060 - C5980 * C1051) * C118 +
             (C31862 * C1078 - C5980 * C1063) * C31966) *
                C5977 +
            ((C31862 * C1560 - C5980 * C1557) * C118 +
             (C31862 * C1566 - C5980 * C1563) * C31966) *
                C5978 +
            ((C31862 * C6345 - C5980 * C6344) * C118 +
             (C31862 * C6347 - C5980 * C6346) * C31966) *
                C5979) *
               C531) *
              C31911 * C443)) /
            (p * q * std::sqrt(p + q));
    d2ee[124] +=
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C101 * C126 - C113 * C119 + C102 * C127 - C114 * C120 +
            C103 * C128 - C115 * C121 + C104 * C129 - C116 * C122 +
            C105 * C130 - C117 * C123) *
               C118 +
           (C101 * C140 - C113 * C131 + C102 * C141 - C114 * C132 +
            C103 * C142 - C115 * C133 + C104 * C143 - C116 * C134 +
            C105 * C144 - C117 * C135) *
               C31966) *
              C31955 * C31925 * C31911 * C110 +
          ((C113 * C120 - C101 * C127 + C114 * C121 - C102 * C128 +
            C115 * C122 - C103 * C129 + C116 * C123 - C104 * C130 +
            C117 * C124 - C105 * C136) *
               C118 +
           (C113 * C132 - C101 * C141 + C114 * C133 - C102 * C142 +
            C115 * C134 - C103 * C143 + C116 * C135 - C104 * C144 +
            C117 * C137 - C105 * C145) *
               C31966) *
              C31955 * C31925 * C31911 * C111 +
          ((C101 * C128 - C113 * C121 + C102 * C129 - C114 * C122 +
            C103 * C130 - C115 * C123 + C104 * C136 - C116 * C124 +
            C105 * C138 - C117 * C125) *
               C118 +
           (C101 * C142 - C113 * C133 + C102 * C143 - C114 * C134 +
            C103 * C144 - C115 * C135 + C104 * C145 - C116 * C137 +
            C105 * C146 - C117 * C139) *
               C31966) *
              C31955 * C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C101 * C126 - C113 * C119 + C102 * C127 - C114 * C120 +
            C103 * C128 - C115 * C121 + C104 * C129 - C116 * C122 +
            C105 * C130 - C117 * C123) *
               C118 +
           (C101 * C140 - C113 * C131 + C102 * C141 - C114 * C132 +
            C103 * C142 - C115 * C133 + C104 * C143 - C116 * C134 +
            C105 * C144 - C117 * C135) *
               C31966) *
              C31955 * C31925 * C209 +
          ((C113 * C213 - C101 * C223 + C114 * C214 - C102 * C224 +
            C115 * C215 - C103 * C225 + C116 * C216 - C104 * C226 +
            C117 * C217 - C105 * C227) *
               C118 +
           (C113 * C228 - C101 * C243 + C114 * C229 - C102 * C244 +
            C115 * C230 - C103 * C245 + C116 * C231 - C104 * C246 +
            C117 * C232 - C105 * C247) *
               C31966) *
              C31955 * C31925 * C210 +
          ((C101 * C233 - C113 * C218 + C102 * C234 - C114 * C219 +
            C103 * C235 - C115 * C220 + C104 * C236 - C116 * C221 +
            C105 * C237 - C117 * C222) *
               C118 +
           (C101 * C248 - C113 * C238 + C102 * C249 - C114 * C239 +
            C103 * C250 - C115 * C240 + C104 * C251 - C116 * C241 +
            C105 * C252 - C117 * C242) *
               C31966) *
              C31955 * C31925 * C211) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C748 * C126 - C754 * C119 + C749 * C127 - C755 * C120 +
             C32227 * C128 - C756 * C121) *
                C118 +
            (C748 * C140 - C754 * C131 + C749 * C141 - C755 * C132 +
             C32227 * C142 - C756 * C133) *
                C31966) *
               C32273 +
           ((C748 * C223 - C754 * C213 + C749 * C224 - C755 * C214 +
             C32227 * C225 - C756 * C215) *
                C118 +
            (C748 * C243 - C754 * C228 + C749 * C244 - C755 * C229 +
             C32227 * C245 - C756 * C230) *
                C31966) *
               C32261 +
           ((C748 * C233 - C754 * C218 + C749 * C234 - C755 * C219 +
             C32227 * C235 - C756 * C220) *
                C118 +
            (C748 * C248 - C754 * C238 + C749 * C249 - C755 * C239 +
             C32227 * C250 - C756 * C240) *
                C31966) *
               C32238) *
              C31925 * C31911 * C110 +
          (((C754 * C120 - C748 * C127 + C755 * C121 - C749 * C128 +
             C756 * C122 - C32227 * C129) *
                C118 +
            (C754 * C132 - C748 * C141 + C755 * C133 - C749 * C142 +
             C756 * C134 - C32227 * C143) *
                C31966) *
               C32273 +
           ((C754 * C214 - C748 * C224 + C755 * C215 - C749 * C225 +
             C756 * C216 - C32227 * C226) *
                C118 +
            (C754 * C229 - C748 * C244 + C755 * C230 - C749 * C245 +
             C756 * C231 - C32227 * C246) *
                C31966) *
               C32261 +
           ((C754 * C219 - C748 * C234 + C755 * C220 - C749 * C235 +
             C756 * C221 - C32227 * C236) *
                C118 +
            (C754 * C239 - C748 * C249 + C755 * C240 - C749 * C250 +
             C756 * C241 - C32227 * C251) *
                C31966) *
               C32238) *
              C31925 * C31911 * C111 +
          (((C748 * C128 - C754 * C121 + C749 * C129 - C755 * C122 +
             C32227 * C130 - C756 * C123) *
                C118 +
            (C748 * C142 - C754 * C133 + C749 * C143 - C755 * C134 +
             C32227 * C144 - C756 * C135) *
                C31966) *
               C32273 +
           ((C748 * C225 - C754 * C215 + C749 * C226 - C755 * C216 +
             C32227 * C227 - C756 * C217) *
                C118 +
            (C748 * C245 - C754 * C230 + C749 * C246 - C755 * C231 +
             C32227 * C247 - C756 * C232) *
                C31966) *
               C32261 +
           ((C748 * C235 - C754 * C220 + C749 * C236 - C755 * C221 +
             C32227 * C237 - C756 * C222) *
                C118 +
            (C748 * C250 - C754 * C240 + C749 * C251 - C755 * C241 +
             C32227 * C252 - C756 * C242) *
                C31966) *
               C32238) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C748 * C126 - C754 * C119 + C749 * C127 - C755 * C120 +
             C32227 * C128 - C756 * C121) *
                C118 +
            (C748 * C140 - C754 * C131 + C749 * C141 - C755 * C132 +
             C32227 * C142 - C756 * C133) *
                C31966) *
               C32273 +
           ((C892 - C893 + C894 - C895 + C896 - C897) * C118 +
            (C898 - C899 + C900 - C901 + C902 - C903) * C31966) *
               C32261 +
           C940 * C32238) *
              C31925 * C209 +
          (((C893 - C892 + C895 - C894 + C897 - C896) * C118 +
            (C899 - C898 + C901 - C900 + C903 - C902) * C31966) *
               C32273 +
           ((C905 - C904 + C907 - C906 + C909 - C908) * C118 +
            (C911 - C910 + C913 - C912 + C915 - C914) * C31966) *
               C32261 +
           ((C916 - C917 + C918 - C919 + C920 - C921) * C118 +
            (C922 - C923 + C924 - C925 + C926 - C927) * C31966) *
               C32238) *
              C31925 * C210 +
          (C940 * C32273 +
           ((C917 - C916 + C919 - C918 + C921 - C920) * C118 +
            (C923 - C922 + C925 - C924 + C927 - C926) * C31966) *
               C32261 +
           ((C748 * C879 - C754 * C870 + C749 * C880 - C755 * C871 +
             C32227 * C881 - C756 * C872) *
                C118 +
            (C748 * C888 - C754 * C882 + C749 * C889 - C755 * C883 +
             C32227 * C890 - C756 * C884) *
                C31966) *
               C32238) *
              C31925 * C211) *
         C31899) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C32270 * C126 - C5154 * C119 + C32257 * C127 - C5155 * C120 +
             C32227 * C128 - C5156 * C121) *
                C118 +
            (C32270 * C140 - C5154 * C131 + C32257 * C141 - C5155 * C132 +
             C32227 * C142 - C5156 * C133) *
                C31966) *
               C5151 +
           ((C32270 * C223 - C5154 * C213 + C32257 * C224 - C5155 * C214 +
             C32227 * C225 - C5156 * C215) *
                C118 +
            (C32270 * C243 - C5154 * C228 + C32257 * C244 - C5155 * C229 +
             C32227 * C245 - C5156 * C230) *
                C31966) *
               C5152 +
           ((C32270 * C233 - C5154 * C218 + C32257 * C234 - C5155 * C219 +
             C32227 * C235 - C5156 * C220) *
                C118 +
            (C32270 * C248 - C5154 * C238 + C32257 * C249 - C5155 * C239 +
             C32227 * C250 - C5156 * C240) *
                C31966) *
               C32238) *
              C31925 * C31911 * C110 +
          (((C5154 * C120 - C32270 * C127 + C5155 * C121 - C32257 * C128 +
             C5156 * C122 - C32227 * C129) *
                C118 +
            (C5154 * C132 - C32270 * C141 + C5155 * C133 - C32257 * C142 +
             C5156 * C134 - C32227 * C143) *
                C31966) *
               C5151 +
           ((C5154 * C214 - C32270 * C224 + C5155 * C215 - C32257 * C225 +
             C5156 * C216 - C32227 * C226) *
                C118 +
            (C5154 * C229 - C32270 * C244 + C5155 * C230 - C32257 * C245 +
             C5156 * C231 - C32227 * C246) *
                C31966) *
               C5152 +
           ((C5154 * C219 - C32270 * C234 + C5155 * C220 - C32257 * C235 +
             C5156 * C221 - C32227 * C236) *
                C118 +
            (C5154 * C239 - C32270 * C249 + C5155 * C240 - C32257 * C250 +
             C5156 * C241 - C32227 * C251) *
                C31966) *
               C32238) *
              C31925 * C31911 * C111 +
          (((C32270 * C128 - C5154 * C121 + C32257 * C129 - C5155 * C122 +
             C32227 * C130 - C5156 * C123) *
                C118 +
            (C32270 * C142 - C5154 * C133 + C32257 * C143 - C5155 * C134 +
             C32227 * C144 - C5156 * C135) *
                C31966) *
               C5151 +
           ((C32270 * C225 - C5154 * C215 + C32257 * C226 - C5155 * C216 +
             C32227 * C227 - C5156 * C217) *
                C118 +
            (C32270 * C245 - C5154 * C230 + C32257 * C246 - C5155 * C231 +
             C32227 * C247 - C5156 * C232) *
                C31966) *
               C5152 +
           ((C32270 * C235 - C5154 * C220 + C32257 * C236 - C5155 * C221 +
             C32227 * C237 - C5156 * C222) *
                C118 +
            (C32270 * C250 - C5154 * C240 + C32257 * C251 - C5155 * C241 +
             C32227 * C252 - C5156 * C242) *
                C31966) *
               C32238) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C32270 * C126 - C5154 * C119 + C32257 * C127 - C5155 * C120 +
             C32227 * C128 - C5156 * C121) *
                C118 +
            (C32270 * C140 - C5154 * C131 + C32257 * C141 - C5155 * C132 +
             C32227 * C142 - C5156 * C133) *
                C31966) *
               C5151 +
           ((C5268 - C5269 + C5270 - C5271 + C5272 - C5273) * C118 +
            (C5274 - C5275 + C5276 - C5277 + C5278 - C5279) * C31966) *
               C5152 +
           C5316 * C32238) *
              C31925 * C209 +
          (((C5269 - C5268 + C5271 - C5270 + C5273 - C5272) * C118 +
            (C5275 - C5274 + C5277 - C5276 + C5279 - C5278) * C31966) *
               C5151 +
           ((C5281 - C5280 + C5283 - C5282 + C5285 - C5284) * C118 +
            (C5287 - C5286 + C5289 - C5288 + C5291 - C5290) * C31966) *
               C5152 +
           ((C5292 - C5293 + C5294 - C5295 + C5296 - C5297) * C118 +
            (C5298 - C5299 + C5300 - C5301 + C5302 - C5303) * C31966) *
               C32238) *
              C31925 * C210 +
          (C5316 * C5151 +
           ((C5293 - C5292 + C5295 - C5294 + C5297 - C5296) * C118 +
            (C5299 - C5298 + C5301 - C5300 + C5303 - C5302) * C31966) *
               C5152 +
           ((C32270 * C879 - C5154 * C870 + C32257 * C880 - C5155 * C871 +
             C32227 * C881 - C5156 * C872) *
                C118 +
            (C32270 * C888 - C5154 * C882 + C32257 * C889 - C5155 * C883 +
             C32227 * C890 - C5156 * C884) *
                C31966) *
               C32238) *
              C31925 * C211) *
         C31899) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C31862 * C126 - C5980 * C119) * C118 +
            (C31862 * C140 - C5980 * C131) * C31966) *
               C5975 +
           ((C31862 * C223 - C5980 * C213) * C118 +
            (C31862 * C243 - C5980 * C228) * C31966) *
               C5976 +
           ((C31862 * C233 - C5980 * C218) * C118 +
            (C31862 * C248 - C5980 * C238) * C31966) *
               C5977 +
           ((C31862 * C873 - C5980 * C867) * C118 +
            (C31862 * C885 - C5980 * C876) * C31966) *
               C5978 +
           ((C31862 * C879 - C5980 * C870) * C118 +
            (C31862 * C888 - C5980 * C882) * C31966) *
               C5979) *
              C31925 * C31911 * C110 +
          (((C5980 * C120 - C31862 * C127) * C118 +
            (C5980 * C132 - C31862 * C141) * C31966) *
               C5975 +
           ((C5980 * C214 - C31862 * C224) * C118 +
            (C5980 * C229 - C31862 * C244) * C31966) *
               C5976 +
           ((C5980 * C219 - C31862 * C234) * C118 +
            (C5980 * C239 - C31862 * C249) * C31966) *
               C5977 +
           ((C5980 * C868 - C31862 * C874) * C118 +
            (C5980 * C877 - C31862 * C886) * C31966) *
               C5978 +
           ((C5980 * C871 - C31862 * C880) * C118 +
            (C5980 * C883 - C31862 * C889) * C31966) *
               C5979) *
              C31925 * C31911 * C111 +
          (((C31862 * C128 - C5980 * C121) * C118 +
            (C31862 * C142 - C5980 * C133) * C31966) *
               C5975 +
           ((C31862 * C225 - C5980 * C215) * C118 +
            (C31862 * C245 - C5980 * C230) * C31966) *
               C5976 +
           ((C31862 * C235 - C5980 * C220) * C118 +
            (C31862 * C250 - C5980 * C240) * C31966) *
               C5977 +
           ((C31862 * C875 - C5980 * C869) * C118 +
            (C31862 * C887 - C5980 * C878) * C31966) *
               C5978 +
           ((C31862 * C881 - C5980 * C872) * C118 +
            (C31862 * C890 - C5980 * C884) * C31966) *
               C5979) *
              C31925 * C31911 * C112)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C31862 * C126 - C5980 * C119) * C118 +
            (C31862 * C140 - C5980 * C131) * C31966) *
               C5975 +
           ((C6052 - C6053) * C118 + (C6054 - C6055) * C31966) * C5976 +
           C6084 * C5977 + C6085 * C5978 + C6086 * C5979) *
              C31925 * C209 +
          (((C6053 - C6052) * C118 + (C6055 - C6054) * C31966) * C5975 +
           ((C6057 - C6056) * C118 + (C6059 - C6058) * C31966) * C5976 +
           ((C6061 - C6060) * C118 + (C6063 - C6062) * C31966) * C5977 +
           ((C6065 - C6064) * C118 + (C6067 - C6066) * C31966) * C5978 +
           ((C6068 - C6069) * C118 + (C6070 - C6071) * C31966) * C5979) *
              C31925 * C210 +
          (C6084 * C5975 + C6085 * C5976 + C6086 * C5977 +
           ((C6069 - C6068) * C118 + (C6071 - C6070) * C31966) * C5978 +
           ((C31862 * C6047 - C5980 * C6044) * C118 +
            (C31862 * C6050 - C5980 * C6048) * C31966) *
               C5979) *
              C31925 * C211) *
         C31899) /
            (p * q * std::sqrt(p + q));
}
