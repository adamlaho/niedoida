/* This Source Code Form is subject to the terms of the Mozilla Public
 * License, v. 2.0. If a copy of the MPL was not distributed with this
 * file, You can obtain one at http://mozilla.org/MPL/2.0/. */

#include "gto_d2_kit/d2_ee_dpdd_AA_xx.hpp"
#include <cmath>
/*

*/
#pragma GCC optimize("O0")
namespace {
    const double Pi = M_PI;
}
#pragma GCC optimize("O0")

void second_derivative_ee_2122_11_11(const double ae,
                                     const double xA,
                                     const double yA,
                                     const double zA,
                                     const double be,
                                     const double xB,
                                     const double yB,
                                     const double zB,
                                     const double ce,
                                     const double xC,
                                     const double yC,
                                     const double zC,
                                     const double de,
                                     const double xD,
                                     const double yD,
                                     const double zD,
                                     const double* const bs,
                                     double* const d2ee)
{
    const double p = ae + be;
    const double q = ce + de;
    const double xP = (ae * xA + be * xB) / p;
    const double yP = (ae * yA + be * yB) / p;
    const double zP = (ae * zA + be * zB) / p;
    const double xQ = (ce * xC + de * xD) / q;
    const double yQ = (ce * yC + de * yD) / q;
    const double zQ = (ce * zC + de * zD) / q;
    const double C150509 = 0 * ae;
    const double C150508 = ae * be;
    const double C150507 = 0 * be;
    const double C150506 = xA - xB;
    const double C150505 = ae + be;
    const double C150504 = 0 * be;
    const double C150610 = p + q;
    const double C150609 = p * q;
    const double C150615 = xP - xQ;
    const double C150614 = bs[2];
    const double C150622 = std::pow(ae, 2);
    const double C150620 = bs[3];
    const double C150633 = bs[4];
    const double C150654 = bs[5];
    const double C150687 = bs[6];
    const double C150733 = bs[7];
    const double C150793 = bs[8];
    const double C150861 = yP - yQ;
    const double C150964 = zP - zQ;
    const double C142 = bs[0];
    const double C151814 = ce + de;
    const double C151813 = ce * de;
    const double C151812 = xC - xD;
    const double C151846 = yC - yD;
    const double C151864 = zC - zD;
    const double C152036 = yA - yB;
    const double C152041 = zA - zB;
    const double C150515 = 2 * C150508;
    const double C150512 = -2 * C150507;
    const double C150514 = C150508 * C150506;
    const double C150513 = C150506 * C150507;
    const double C151787 = C150506 * be;
    const double C151786 = C150506 * ae;
    const double C151785 = std::pow(C150506, 2);
    const double C150516 = C150509 / C150505;
    const double C150511 = 2 * C150505;
    const double C150510 = std::pow(C150505, 2);
    const double C150611 = 2 * C150609;
    const double C150623 = C150615 * ae;
    const double C150619 = std::pow(C150615, 2);
    const double C150874 = std::pow(C150861, 2);
    const double C150977 = std::pow(C150964, 2);
    const double C151818 = 2 * C151814;
    const double C151817 = std::pow(C151814, 2);
    const double C151819 = C151812 * de;
    const double C151816 = C151812 * ce;
    const double C151815 = std::pow(C151812, 2);
    const double C151847 = std::pow(C151846, 2);
    const double C151906 = C151846 * de;
    const double C151904 = C151846 * ce;
    const double C151865 = std::pow(C151864, 2);
    const double C151948 = C151864 * de;
    const double C151946 = C151864 * ce;
    const double C152050 = std::pow(C152036, 2);
    const double C152064 = C152036 * be;
    const double C152063 = C152036 * ae;
    const double C152076 = std::pow(C152041, 2);
    const double C152088 = C152041 * be;
    const double C152087 = C152041 * ae;
    const double C150518 = ae * C150512;
    const double C150519 = C150513 / C150505;
    const double C151788 = C151785 * C150508;
    const double C151795 = std::pow(C150511, -1);
    const double C152186 = std::pow(C150511, -2);
    const double C150520 = 2 * C150510;
    const double C150517 = C150510 * C150511;
    const double C152155 = 4 * C150510;
    const double C150613 = C150611 / C150610;
    const double C158 =
        ((std::pow(xP - xQ, 2) * bs[2] * std::pow(C150611 / C150610, 2) -
          (bs[1] * C150611) / C150610) *
         std::pow(ae, 2)) /
        C150510;
    const double C143 = -(C150615 * bs[1] * C150611) / C150610;
    const double C341 = -(C150861 * bs[1] * C150611) / C150610;
    const double C550 = -(C150964 * bs[1] * C150611) / C150610;
    const double C150625 = C150620 * C150623;
    const double C150636 = C150633 * C150623;
    const double C150659 = C150654 * C150623;
    const double C150695 = C150687 * C150623;
    const double C150744 = C150733 * C150623;
    const double C150807 = C150793 * C150623;
    const double C150 = (-(bs[1] * C150623 * C150611) / C150610) / C150505;
    const double C150635 = C150619 * C150633;
    const double C150658 = C150619 * C150654;
    const double C150694 = C150619 * C150687;
    const double C150743 = C150619 * C150733;
    const double C150806 = C150619 * C150793;
    const double C151831 = std::pow(C151818, -1);
    const double C152163 = std::pow(C151818, -2);
    const double C151832 = 2 * C151817;
    const double C152167 = C151817 * C151818;
    const double C152166 = 4 * C151817;
    const double C152156 = std::pow(C151816, 2);
    const double C151820 = C151815 * C151813;
    const double C151848 = C151847 * C151813;
    const double C152168 = std::pow(C151904, 2);
    const double C151866 = C151865 * C151813;
    const double C152170 = std::pow(C151946, 2);
    const double C152051 = C152050 * C150508;
    const double C152077 = C152076 * C150508;
    const double C150522 = 0 - C150519;
    const double C151789 = C151788 / C150505;
    const double C150526 = C150507 / C150520;
    const double C150523 = C150504 / C150520;
    const double C150616 = std::pow(C150613, 2);
    const double C150621 = -C150613;
    const double C150634 = std::pow(C150613, 4);
    const double C150688 = std::pow(C150613, 6);
    const double C150794 = std::pow(C150613, 8);
    const double C152211 = 4 * C152167;
    const double C152210 = C151814 * C152166;
    const double C151821 = C151820 / C151814;
    const double C151849 = C151848 / C151814;
    const double C151867 = C151866 / C151814;
    const double C152052 = C152051 / C150505;
    const double C152078 = C152077 / C150505;
    const double C150528 = C150522 * ae;
    const double C151790 = -C151789;
    const double C150618 = C150614 * C150616;
    const double C159 = (2 * ae * C150616 * C150614 * C150615 * ae +
                         C150615 *
                             (C150614 * C150616 + std::pow(C150615, 2) * bs[3] *
                                                      std::pow(-C150613, 3)) *
                             std::pow(ae, 2)) /
                        C150510;
    const double C151 = (C150615 * C150616 * C150614 * C150623) / C150505 -
                        (ae * bs[1] * C150611) / (C150610 * C150505);
    const double C353 = (C150861 * C150616 * C150614 * C150623) / C150505;
    const double C562 = (C150964 * C150616 * C150614 * C150623) / C150505;
    const double C150624 = std::pow(C150621, 3);
    const double C150655 = std::pow(C150621, 5);
    const double C150734 = std::pow(C150621, 7);
    const double C150640 = C150634 * C150636;
    const double C150639 = C150635 * C150634;
    const double C150653 = C150633 * C150634;
    const double C150700 = C150688 * C150695;
    const double C150699 = C150694 * C150688;
    const double C150732 = C150687 * C150688;
    const double C150814 = C150794 * C150807;
    const double C150813 = C150806 * C150794;
    const double C151822 = -C151821;
    const double C151850 = -C151849;
    const double C151868 = -C151867;
    const double C152053 = -C152052;
    const double C152079 = -C152078;
    const double C150532 = C150528 / C150505;
    const double C151791 = std::exp(C151790);
    const double C150626 = C150618 * ae;
    const double C144 = C150618 * C150619 - (bs[1] * C150611) / C150610;
    const double C340 = C150861 * C150615 * C150618;
    const double C342 = C150618 * C150874 - (bs[1] * C150611) / C150610;
    const double C549 = C150964 * C150615 * C150618;
    const double C551 = C150618 * C150977 - (bs[1] * C150611) / C150610;
    const double C1083 = C150964 * C150861 * C150618;
    const double C150627 = C150624 * C150625;
    const double C150632 = C150620 * C150624;
    const double C365 =
        (C150861 * (C150618 + C150619 * C150620 * C150624) * C150622) / C150510;
    const double C574 =
        (C150964 * (C150618 + C150619 * C150620 * C150624) * C150622) / C150510;
    const double C150664 = C150655 * C150659;
    const double C150663 = C150658 * C150655;
    const double C150686 = C150654 * C150655;
    const double C150750 = C150734 * C150744;
    const double C150749 = C150743 * C150734;
    const double C150792 = C150733 * C150734;
    const double C150643 = C150615 * C150640;
    const double C150652 = ae * C150640;
    const double C151523 = C150861 * C150640;
    const double C150662 = C150653 * C150619;
    const double C150661 = C150615 * C150653;
    const double C150660 = C150653 * ae;
    const double C151675 = C150653 * C150874;
    const double C151690 = C150861 * C150653;
    const double C151699 = C150653 * C150977;
    const double C151748 = C150964 * C150653;
    const double C150704 = C150615 * C150700;
    const double C150731 = ae * C150700;
    const double C150902 = C150700 * C150874;
    const double C150921 = C150861 * C150700;
    const double C151005 = C150700 * C150977;
    const double C151024 = C150964 * C150700;
    const double C150747 = C150732 * C150619;
    const double C150746 = C150615 * C150732;
    const double C150745 = C150732 * ae;
    const double C151730 = C150732 * C150874;
    const double C151767 = C150861 * C150732;
    const double C151776 = C150732 * C150977;
    const double C150818 = C150615 * C150814;
    const double C151823 = std::exp(C151822);
    const double C151851 = std::exp(C151850);
    const double C151869 = std::exp(C151868);
    const double C152054 = std::exp(C152053);
    const double C152080 = std::exp(C152079);
    const double C150534 = C150532 - C150523;
    const double C150521 = C150514 * C151791;
    const double C151792 = C151791 * C151786;
    const double C151796 = C151795 * C151791;
    const double C152151 = C151791 / C150511;
    const double C152150 = C151791 * C151787;
    const double C6086 = C152186 * C151791;
    const double C150628 = C150615 * C150627;
    const double C354 =
        (C150616 * C150614 * C150623 + C150627 * C150874) / C150505;
    const double C563 =
        (C150616 * C150614 * C150623 + C150627 * C150977) / C150505;
    const double C1089 = (C150964 * C150861 * C150627) / C150505;
    const double C1364 =
        (2 * C150861 * C150627 + C150861 * (C150627 + C150640 * C150874)) /
        C150505;
    const double C1546 =
        (C150861 * C150627 + C150861 * C150640 * C150977) / C150505;
    const double C1550 = (C150964 * (C150627 + C150640 * C150874)) / C150505;
    const double C2462 =
        (2 * C150964 * C150627 + C150964 * (C150627 + C150640 * C150977)) /
        C150505;
    const double C150638 = C150615 * C150632;
    const double C150637 = C150632 * ae;
    const double C150642 = C150632 + C150639;
    const double C151667 = C150861 * C150632;
    const double C145 =
        2 * C150615 * C150618 + C150615 * (C150618 + C150632 * C150619);
    const double C339 = C150861 * (C150618 + C150632 * C150619);
    const double C548 = C150964 * (C150618 + C150632 * C150619);
    const double C1356 =
        2 * C150861 * C150618 + C150861 * (C150618 + C150632 * C150874);
    const double C1357 = 3 * (C150618 + C150632 * C150874) +
                         C150861 * (2 * C150861 * C150632 +
                                    C150861 * (C150632 + C150653 * C150874));
    const double C1534 = C150861 * C150618 + C150861 * C150632 * C150977;
    const double C1538 = C150964 * (C150618 + C150632 * C150874);
    const double C1539 =
        C150618 + C150632 * C150874 + (C150632 + C150653 * C150874) * C150977;
    const double C2053 = C150964 * (2 * C150861 * C150632 +
                                    C150861 * (C150632 + C150653 * C150874));
    const double C2454 =
        2 * C150964 * C150618 + C150964 * (C150618 + C150632 * C150977);
    const double C2455 = 3 * (C150618 + C150632 * C150977) +
                         C150964 * (2 * C150964 * C150632 +
                                    C150964 * (C150632 + C150653 * C150977));
    const double C31798 = C151791 * C365;
    const double C37915 = C151791 * C574;
    const double C150668 = C150615 * C150664;
    const double C150685 = ae * C150664;
    const double C150889 = C150861 * C150664;
    const double C150992 = C150964 * C150664;
    const double C151528 = C150664 * C150874;
    const double C151545 = C150664 * C150977;
    const double C1365 = (3 * (C150627 + C150640 * C150874) +
                          C150861 * (2 * C150861 * C150640 +
                                     C150861 * (C150640 + C150664 * C150874))) /
                         C150505;
    const double C1551 = (C150627 + C150640 * C150874 +
                          (C150640 + C150664 * C150874) * C150977) /
                         C150505;
    const double C2057 = (C150964 * (2 * C150861 * C150640 +
                                     C150861 * (C150640 + C150664 * C150874))) /
                         C150505;
    const double C2463 = (3 * (C150627 + C150640 * C150977) +
                          C150964 * (2 * C150964 * C150640 +
                                     C150964 * (C150640 + C150664 * C150977))) /
                         C150505;
    const double C150667 = C150653 + C150663;
    const double C150698 = C150686 * C150619;
    const double C150697 = C150615 * C150686;
    const double C150696 = C150686 * ae;
    const double C150703 = C150686 + C150699;
    const double C151709 = C150686 * C150874;
    const double C151729 = C150861 * C150686;
    const double C151749 = C150686 * C150977;
    const double C151775 = C150964 * C150686;
    const double C150754 = C150615 * C150750;
    const double C150791 = ae * C150750;
    const double C150940 = C150750 * C150874;
    const double C151043 = C150750 * C150977;
    const double C151069 = C150861 * C150750;
    const double C151095 = C150964 * C150750;
    const double C150753 = C150732 + C150749;
    const double C150810 = C150792 * C150619;
    const double C150809 = C150615 * C150792;
    const double C150808 = C150792 * ae;
    const double C150817 = C150792 + C150813;
    const double C150657 = 2 * C150652;
    const double C150666 = C150632 + C150662;
    const double C150665 = C150661 * ae;
    const double C150691 = 2 * C150661;
    const double C151669 = C150861 * C150661;
    const double C151676 = C150632 + C151675;
    const double C151708 = 2 * C151690;
    const double C151700 = C150632 + C151699;
    const double C151750 = 2 * C151748;
    const double C150742 = 2 * C150731;
    const double C150907 = C150664 + C150902;
    const double C150928 = ae * C150921;
    const double C151130 = C150964 * C150921;
    const double C151250 = 2 * C150921;
    const double C151571 = C150921 * C150977;
    const double C151010 = C150664 + C151005;
    const double C151031 = ae * C151024;
    const double C151353 = 2 * C151024;
    const double C150752 = C150686 + C150747;
    const double C150751 = C150746 * ae;
    const double C150799 = 2 * C150746;
    const double C151715 = C150746 * C150874;
    const double C151756 = C150746 * C150977;
    const double C151762 = C150861 * C150746;
    const double C151732 = C150686 + C151730;
    const double C151769 = C151767 * C150977;
    const double C151778 = C150686 + C151776;
    const double C151825 = C151823 * C151816;
    const double C151824 = C151823 / C151818;
    const double C151834 = C151831 * C151823;
    const double C152159 = C151823 * C151819;
    const double C152208 = C152163 * C151823;
    const double C152202 = C151823 * C152156;
    const double C151905 = C151851 / C151818;
    const double C151907 = C151851 * C151904;
    const double C151914 = C151831 * C151851;
    const double C152174 = C151851 * C151906;
    const double C152214 = C152163 * C151851;
    const double C152212 = C151851 * C152168;
    const double C151947 = C151869 / C151818;
    const double C151949 = C151869 * C151946;
    const double C151956 = C151831 * C151869;
    const double C152180 = C151869 * C151948;
    const double C152217 = C152163 * C151869;
    const double C152215 = C151869 * C152170;
    const double C152065 = C152054 * C152063;
    const double C152068 = C151795 * C152054;
    const double C152190 = C152054 * C152064;
    const double C152189 = C152054 / C150511;
    const double C23042 = C152186 * C152054;
    const double C152089 = C152080 * C152087;
    const double C152092 = C151795 * C152080;
    const double C152195 = C152080 * C152088;
    const double C152194 = C152080 / C150511;
    const double C45772 = C152186 * C152080;
    const double C150527 = C150521 / C150510;
    const double C150525 = 2 * C150521;
    const double C150524 = -4 * C150521;
    const double C152153 = C151792 / C150520;
    const double C152152 = C151792 * C151787;
    const double C152149 = C151792 / C150505;
    const double C151799 = C151796 * C151787;
    const double C124 = C151796 / C152155;
    const double C67856 = C151796 / C150511;
    const double C6084 = (C151791 * std::pow(C151787, 2)) / C150510 + C152151;
    const double C152199 = C152150 / C150505;
    const double C6085 = (-2 * C151795 * C152150) / C150505;
    const double C150629 = C150628 + C150626;
    const double C150641 = C150638 * ae;
    const double C343 = C150615 * C150618 + C150638 * C150874;
    const double C552 = C150615 * C150618 + C150638 * C150977;
    const double C1084 = C150964 * C150861 * C150638;
    const double C1355 =
        2 * C150861 * C150638 + C150861 * (C150638 + C150661 * C150874);
    const double C1533 = C150861 * C150638 + C150861 * C150661 * C150977;
    const double C1537 = C150964 * (C150638 + C150661 * C150874);
    const double C2453 =
        2 * C150964 * C150638 + C150964 * (C150638 + C150661 * C150977);
    const double C150645 = C150643 + C150637;
    const double C150644 = C150642 * C150622;
    const double C2955 = 2 * C150964 * C151667 +
                         C150964 * (C151667 + C150861 * C150653 * C150977);
    const double C9426 =
        3 * (C151667 + C151690 * C150977) +
        C150964 * (2 * C150964 * C151690 +
                   C150964 * (C151690 + C150861 * C150686 * C150977));
    const double C150671 = C150668 + C150660;
    const double C150693 = 2 * C150685;
    const double C150894 = ae * C150889;
    const double C151550 = 2 * C150889;
    const double C2959 =
        (2 * C150964 * C151523 + C150964 * (C151523 + C150889 * C150977)) /
        C150505;
    const double C9429 = (3 * (C151523 + C150889 * C150977) +
                          C150964 * (2 * C150964 * C150889 +
                                     C150964 * (C150889 + C150921 * C150977))) /
                         C150505;
    const double C150997 = ae * C150992;
    const double C151577 = 2 * C150992;
    const double C151529 = C150640 + C151528;
    const double C151546 = C150640 + C151545;
    const double C150670 = C150667 * C150622;
    const double C150702 = C150653 + C150698;
    const double C150701 = C150697 * ae;
    const double C150738 = 2 * C150697;
    const double C151678 = C150697 * C150874;
    const double C151692 = C150861 * C150697;
    const double C151702 = C150697 * C150977;
    const double C151755 = C150964 * C150697;
    const double C1358 = 3 * (C150638 + C150661 * C150874) +
                         C150861 * (2 * C150861 * C150661 +
                                    C150861 * (C150661 + C150697 * C150874));
    const double C1540 =
        C150638 + C150661 * C150874 + (C150661 + C150697 * C150874) * C150977;
    const double C2054 = C150964 * (2 * C150861 * C150661 +
                                    C150861 * (C150661 + C150697 * C150874));
    const double C2456 = 3 * (C150638 + C150661 * C150977) +
                         C150964 * (2 * C150964 * C150661 +
                                    C150964 * (C150661 + C150697 * C150977));
    const double C150708 = C150704 + C150696;
    const double C150707 = C150703 * C150622;
    const double C151710 = C150653 + C151709;
    const double C151731 = 2 * C151729;
    const double C151742 = C151729 * C150977;
    const double C151766 = C150964 * C151729;
    const double C151751 = C150653 + C151749;
    const double C151777 = 2 * C151775;
    const double C150758 = C150754 + C150745;
    const double C150805 = 2 * C150791;
    const double C150947 = C150700 + C150940;
    const double C151050 = C150700 + C151043;
    const double C151078 = ae * C151069;
    const double C151144 = C150964 * C151069;
    const double C151335 = C151069 * C150977;
    const double C151104 = ae * C151095;
    const double C150757 = C150753 * C150622;
    const double C150816 = C150732 + C150810;
    const double C150815 = C150809 * ae;
    const double C150822 = C150818 + C150808;
    const double C150821 = C150817 * C150622;
    const double C150669 = C150666 * ae;
    const double C146 = 3 * (C150618 + C150632 * C150619) +
                        C150615 * (2 * C150638 + C150615 * C150666);
    const double C338 = C150861 * (2 * C150638 + C150615 * C150666);
    const double C344 = C150618 + C150632 * C150619 + C150666 * C150874;
    const double C547 = C150964 * (2 * C150638 + C150615 * C150666);
    const double C553 = C150618 + C150632 * C150619 + C150666 * C150977;
    const double C1085 = C150964 * C150861 * C150666;
    const double C2956 = 2 * C150964 * C151669 +
                         C150964 * (C151669 + C150861 * C150697 * C150977);
    const double C7801 =
        4 * (2 * C151667 + C150861 * C151676) +
        C150861 *
            (3 * C151676 + C150861 * (2 * C150861 * C150653 +
                                      C150861 * (C150653 + C150686 * C150874)));
    const double C8064 =
        2 * C151667 + C150861 * C151676 +
        (2 * C150861 * C150653 + C150861 * (C150653 + C150686 * C150874)) *
            C150977;
    const double C8841 =
        C150964 *
        (3 * C151676 + C150861 * (2 * C150861 * C150653 +
                                  C150861 * (C150653 + C150686 * C150874)));
    const double C10149 =
        2 * C150964 * C151676 +
        C150964 * (C151676 + (C150653 + C150686 * C150874) * C150977);
    const double C17750 =
        4 * (2 * C150964 * C150632 + C150964 * C151700) +
        C150964 *
            (3 * C151700 + C150964 * (2 * C150964 * C150653 +
                                      C150964 * (C150653 + C150686 * C150977)));
    const double C150912 = ae * C150907;
    const double C151551 = C150861 * C150907;
    const double C151563 = 3 * C150907;
    const double C150934 = 2 * C150928;
    const double C151135 = ae * C151130;
    const double C151583 = 2 * C151130;
    const double C151572 = C150889 + C151571;
    const double C151015 = ae * C151010;
    const double C151578 = C150964 * C151010;
    const double C151587 = 3 * C151010;
    const double C151037 = 2 * C151031;
    const double C150756 = C150615 * C150752;
    const double C150755 = C150752 * ae;
    const double C150800 = 3 * C150752;
    const double C151681 = C150752 * C150874;
    const double C151694 = C150861 * C150752;
    const double C151705 = C150752 * C150977;
    const double C151716 = C150697 + C151715;
    const double C151758 = C150697 + C151756;
    const double C151763 = C151762 * C150977;
    const double C151733 = C150861 * C151732;
    const double C151745 = C151732 * C150977;
    const double C151770 = C151729 + C151769;
    const double C151779 = C150964 * C151778;
    const double C151826 = C151825 * C151819;
    const double C151833 = C151825 / C151832;
    const double C152160 = C151831 * C151825;
    const double C152158 = C151825 / C151814;
    const double C335 = (C151823 * std::pow(C151819, 2)) / C151817 + C151824;
    const double C151835 = C151834 * C151819;
    const double C152164 = C151816 * C151834;
    const double C152162 = 2 * C151834;
    const double C152218 = C151834 / C152166;
    const double C133 = C151834 / C152211;
    const double C3588 = C151834 / C151818;
    const double C152204 = C152159 / C151814;
    const double C336 = (-2 * C151831 * C152159) / C151814;
    const double C152238 = C152202 / C151817;
    const double C1259 = (C151851 * std::pow(C151906, 2)) / C151817 + C151905;
    const double C151908 = C151907 * C151906;
    const double C151913 = C151907 / C151832;
    const double C152172 = C151907 / C151814;
    const double C152169 = C151831 * C151907;
    const double C151915 = C151914 * C151906;
    const double C152178 = C151904 * C151914;
    const double C152177 = 2 * C151914;
    const double C152224 = C151914 / C152166;
    const double C1351 = C151914 / C152211;
    const double C3585 = C151914 / C151818;
    const double C152220 = C152174 / C151814;
    const double C1260 = (-2 * C151831 * C152174) / C151814;
    const double C152243 = C152212 / C151817;
    const double C2215 = (C151869 * std::pow(C151948, 2)) / C151817 + C151947;
    const double C151950 = C151949 * C151948;
    const double C151955 = C151949 / C151832;
    const double C152173 = C151949 / C151814;
    const double C152171 = C151831 * C151949;
    const double C151957 = C151956 * C151948;
    const double C152184 = C151946 * C151956;
    const double C152183 = 2 * C151956;
    const double C152230 = C151956 / C152166;
    const double C2450 = C151956 / C152211;
    const double C4779 = C151956 / C151818;
    const double C152226 = C152180 / C151814;
    const double C2216 = (-2 * C151831 * C152180) / C151814;
    const double C152245 = C152215 / C151817;
    const double C152192 = C152065 / C150520;
    const double C152191 = C152065 * C152064;
    const double C152187 = C152065 / C150505;
    const double C152071 = C152068 * C152064;
    const double C31627 = C152068 / C152155;
    const double C76455 = C152068 / C150511;
    const double C152231 = C152190 / C150505;
    const double C23041 = (-2 * C151795 * C152190) / C150505;
    const double C23040 = (C152054 * std::pow(C152064, 2)) / C150510 + C152189;
    const double C152197 = C152089 / C150520;
    const double C152196 = C152089 * C152088;
    const double C152188 = C152089 / C150505;
    const double C152095 = C152092 * C152088;
    const double C62337 = C152092 / C152155;
    const double C115175 = C152092 / C150511;
    const double C152234 = C152195 / C150505;
    const double C45771 = (-2 * C151795 * C152195) / C150505;
    const double C45770 = (C152080 * std::pow(C152088, 2)) / C150510 + C152194;
    const double C150531 = C150516 - C150527;
    const double C150530 = C150506 * C150525;
    const double C6094 =
        ((-C150525 / C150505) / C150511 - (0 * be) / C150505) / C150511 -
        (0 * be) / C150505;
    const double C31629 = -C150525 / C150505;
    const double C76459 = (-C150525 / C150505) / C150511 - (0 * be) / C150505;
    const double C150529 = C150524 / C150505;
    const double C152200 = C152152 / C150510;
    const double C23297 = C152149 * C365;
    const double C46217 = C152149 * C574;
    const double C152154 = C151799 / C150505;
    const double C6345 = C6084 * C365;
    const double C15169 = C6084 * C574;
    const double C76451 = -C152199;
    const double C150630 = ae * C150629;
    const double C152 = (C150616 * C150614 * C150623 + C150615 * C150629 +
                         C150615 * C150618 * ae) /
                        C150505;
    const double C352 = (C150861 * C150629) / C150505;
    const double C561 = (C150964 * C150629) / C150505;
    const double C150647 = ae * C150645;
    const double C150646 = C150615 * C150645;
    const double C150656 = 2 * C150645;
    const double C150868 = C150861 * C150645;
    const double C150971 = C150964 * C150645;
    const double C355 = (C150629 + C150645 * C150874) / C150505;
    const double C564 = (C150629 + C150645 * C150977) / C150505;
    const double C364 =
        (2 * ae * C150861 * C150627 + C150615 * C150861 * C150644) / C150510;
    const double C366 = ((C150618 + C150619 * C150620 * C150624) * C150622 +
                         C150644 * std::pow(C150861, 2)) /
                        C150510;
    const double C573 =
        (2 * ae * C150964 * C150627 + C150615 * C150964 * C150644) / C150510;
    const double C575 = ((C150618 + C150619 * C150620 * C150624) * C150622 +
                         C150644 * std::pow(C150964, 2)) /
                        C150510;
    const double C1095 = (C150964 * C150861 * C150644) / C150510;
    const double C150674 = ae * C150671;
    const double C150673 = C150615 * C150671;
    const double C150690 = 2 * C150671;
    const double C150864 = C150861 * C150671;
    const double C150876 = C150671 * C150874;
    const double C150967 = C150964 * C150671;
    const double C150979 = C150671 * C150977;
    const double C150899 = 2 * C150894;
    const double C151002 = 2 * C150997;
    const double C7804 =
        (4 * (2 * C151523 + C150861 * C151529) +
         C150861 *
             (3 * C151529 + C150861 * (2 * C150889 + C150861 * C150907))) /
        C150505;
    const double C8067 = (2 * C151523 + C150861 * C151529 +
                          (2 * C150889 + C150861 * C150907) * C150977) /
                         C150505;
    const double C8844 =
        (C150964 *
         (3 * C151529 + C150861 * (2 * C150889 + C150861 * C150907))) /
        C150505;
    const double C10152 =
        (2 * C150964 * C151529 + C150964 * (C151529 + C150907 * C150977)) /
        C150505;
    const double C17753 =
        (4 * (2 * C150964 * C150640 + C150964 * C151546) +
         C150964 *
             (3 * C151546 + C150964 * (2 * C150992 + C150964 * C151010))) /
        C150505;
    const double C150672 = C150615 * C150670;
    const double C150862 = C150861 * C150670;
    const double C150965 = C150964 * C150670;
    const double C367 = (2 * ae * (C150627 + C150640 * C150874) +
                         C150615 * (C150644 + C150670 * C150874)) /
                        C150510;
    const double C576 = (2 * ae * (C150627 + C150640 * C150977) +
                         C150615 * (C150644 + C150670 * C150977)) /
                        C150510;
    const double C1372 =
        (2 * C150861 * C150644 + C150861 * (C150644 + C150670 * C150874)) /
        C150510;
    const double C1562 = (C150964 * (C150644 + C150670 * C150874)) / C150510;
    const double C2470 =
        (2 * C150964 * C150644 + C150964 * (C150644 + C150670 * C150977)) /
        C150510;
    const double C150706 = C150615 * C150702;
    const double C150705 = C150702 * ae;
    const double C150739 = 3 * C150702;
    const double C151671 = C150861 * C150702;
    const double C1354 =
        2 * C150861 * C150666 + C150861 * (C150666 + C150702 * C150874);
    const double C1359 = 3 * (C150666 + C150702 * C150874) +
                         C150861 * (2 * C150861 * C150702 +
                                    C150861 * (C150702 + C150752 * C150874));
    const double C1532 = C150861 * C150666 + C150861 * C150702 * C150977;
    const double C1536 = C150964 * (C150666 + C150702 * C150874);
    const double C1541 =
        C150666 + C150702 * C150874 + (C150702 + C150752 * C150874) * C150977;
    const double C2055 = C150964 * (2 * C150861 * C150702 +
                                    C150861 * (C150702 + C150752 * C150874));
    const double C2452 =
        2 * C150964 * C150666 + C150964 * (C150666 + C150702 * C150977);
    const double C2457 = 3 * (C150666 + C150702 * C150977) +
                         C150964 * (2 * C150964 * C150702 +
                                    C150964 * (C150702 + C150752 * C150977));
    const double C151679 = C150661 + C151678;
    const double C151714 = 2 * C151692;
    const double C9427 =
        3 * (C151669 + C151692 * C150977) +
        C150964 * (2 * C150964 * C151692 +
                   C150964 * (C151692 + C150861 * C150746 * C150977));
    const double C151703 = C150661 + C151702;
    const double C151757 = 2 * C151755;
    const double C150713 = ae * C150708;
    const double C150711 = C150615 * C150708;
    const double C150737 = 2 * C150708;
    const double C150882 = C150708 * C150874;
    const double C150893 = C150861 * C150708;
    const double C150985 = C150708 * C150977;
    const double C150996 = C150964 * C150708;
    const double C150710 = C150615 * C150707;
    const double C150880 = C150707 * C150874;
    const double C150890 = C150861 * C150707;
    const double C150983 = C150707 * C150977;
    const double C150993 = C150964 * C150707;
    const double C151711 = C150861 * C151710;
    const double C151728 = 3 * C151710;
    const double C26361 =
        3 * (C151676 + C151710 * C150977) +
        C150964 *
            (2 * C150964 * C151710 +
             C150964 * (C151710 + (C150686 + C150732 * C150874) * C150977));
    const double C151743 = C151690 + C151742;
    const double C151768 = 2 * C151766;
    const double C151752 = C150964 * C151751;
    const double C151774 = 3 * C151751;
    const double C150764 = ae * C150758;
    const double C150761 = C150615 * C150758;
    const double C150798 = 2 * C150758;
    const double C150906 = C150758 * C150874;
    const double C150926 = C150861 * C150758;
    const double C151009 = C150758 * C150977;
    const double C151029 = C150964 * C150758;
    const double C150953 = ae * C150947;
    const double C151251 = C150861 * C150947;
    const double C151264 = C150964 * C150947;
    const double C151574 = C150947 * C150977;
    const double C26363 =
        (3 * (C151529 + C150907 * C150977) +
         C150964 * (2 * C150964 * C150907 +
                    C150964 * (C150907 + C150947 * C150977))) /
        C150505;
    const double C151056 = ae * C151050;
    const double C151354 = C150964 * C151050;
    const double C151086 = 2 * C151078;
    const double C151151 = ae * C151144;
    const double C151340 = C150921 + C151335;
    const double C151112 = 2 * C151104;
    const double C150760 = C150615 * C150757;
    const double C150903 = C150757 * C150874;
    const double C150922 = C150861 * C150757;
    const double C151006 = C150757 * C150977;
    const double C151025 = C150964 * C150757;
    const double C150820 = C150615 * C150816;
    const double C150819 = C150816 * ae;
    const double C150828 = ae * C150822;
    const double C150825 = C150615 * C150822;
    const double C150945 = C150822 * C150874;
    const double C151048 = C150822 * C150977;
    const double C151075 = C150861 * C150822;
    const double C151101 = C150964 * C150822;
    const double C150824 = C150615 * C150821;
    const double C150941 = C150821 * C150874;
    const double C151044 = C150821 * C150977;
    const double C151070 = C150861 * C150821;
    const double C151096 = C150964 * C150821;
    const double C150917 = 2 * C150912;
    const double C151552 = C151550 + C151551;
    const double C151140 = 2 * C151135;
    const double C151020 = 2 * C151015;
    const double C151579 = C151577 + C151578;
    const double C150759 = C150738 + C150756;
    const double C151682 = C150702 + C151681;
    const double C151706 = C150702 + C151705;
    const double C151717 = C150861 * C151716;
    const double C151759 = C150964 * C151758;
    const double C151764 = C151692 + C151763;
    const double C151734 = C151731 + C151733;
    const double C151746 = C151710 + C151745;
    const double C151771 = C150964 * C151770;
    const double C151780 = C151777 + C151779;
    const double C151827 = C151826 / C151817;
    const double C152205 = 2 * C152160;
    const double C151836 = C151835 / C151814;
    const double C152209 = C152164 / C151832;
    const double C152239 = C152158 - C152204;
    const double C3241 = -C152204;
    const double C152255 = C152238 + C151824;
    const double C151909 = C151908 / C151817;
    const double C152213 = 2 * C152169;
    const double C151916 = C151915 / C151814;
    const double C152223 = C152178 / C151832;
    const double C152247 = C152172 - C152220;
    const double C3101 = -C152220;
    const double C152258 = C152243 + C151905;
    const double C151951 = C151950 / C151817;
    const double C152216 = 2 * C152171;
    const double C151958 = C151957 / C151814;
    const double C152229 = C152184 / C151832;
    const double C152250 = C152173 - C152226;
    const double C4107 = -C152226;
    const double C152259 = C152245 + C151947;
    const double C152232 = C152191 / C150510;
    const double C152193 = C152071 / C150505;
    const double C67857 = -C152231;
    const double C152235 = C152196 / C150510;
    const double C152198 = C152095 / C150505;
    const double C96046 = -C152234;
    const double C23049 = C150531 * C151;
    const double C141 =
        (C150531 / C150511 - (0 * be) / C150505) / C150511 - (0 * be) / C150505;
    const double C67864 = C150531 / C150511 - (0 * be) / C150505;
    const double C150533 = C150530 / C150505;
    const double C31638 = C31629 * C151;
    const double C31634 = C31629 * C1364;
    const double C31633 = C31629 * C354;
    const double C31632 = C31629 * C353;
    const double C31631 = C31629 * C150;
    const double C31804 = C31629 * C1365;
    const double C32027 = C31629 * C1551;
    const double C32026 = C31629 * C1546;
    const double C32025 = C31629 * C563;
    const double C32024 = C31629 * C562;
    const double C32023 = C31629 * C1089;
    const double C32022 = C31629 * C1550;
    const double C32021 = C31629 * C2057;
    const double C33866 = C31629 * C9429;
    const double C33865 = C31629 * C2463;
    const double C33864 = C31629 * C2462;
    const double C33863 = C31629 * C2959;
    const double C76462 = C76459 * C151;
    const double C152237 = C152151 - C152200;
    const double C152201 = C152153 - C152154;
    const double C76710 = C76451 * C365;
    const double C85672 = C76451 * C574;
    const double C160 =
        ((C150618 + C150619 * C150620 * C150624) * C150622 + C150630 + C150630 +
         C150615 *
             (2 * ae * C150627 +
              C150615 *
                  (C150620 * C150624 + C150619 * bs[4] * std::pow(C150613, 4)) *
                  C150622)) /
        C150510;
    const double C6098 = C6094 * C152;
    const double C23058 = C150531 * C152;
    const double C31639 = C31629 * C152;
    const double C76471 = C76459 * C152;
    const double C23051 = C150531 * C352;
    const double C31637 = C31629 * C352;
    const double C76464 = C76459 * C352;
    const double C23626 = C150531 * C561;
    const double C32029 = C31629 * C561;
    const double C77039 = C76459 * C561;
    const double C150648 = C150627 + C150646;
    const double C150869 = ae * C150868;
    const double C1090 = (C150964 * C150868) / C150505;
    const double C150972 = ae * C150971;
    const double C23053 = C150531 * C355;
    const double C31636 = C31629 * C355;
    const double C76466 = C76459 * C355;
    const double C23629 = C150531 * C564;
    const double C32036 = C31629 * C564;
    const double C77042 = C76459 * C564;
    const double C6363 = C6084 * C364;
    const double C6347 = C6085 * C364;
    const double C23313 = C152149 * C364;
    const double C23299 = C151796 * C364;
    const double C31808 = C151791 * C364;
    const double C76726 = C76451 * C364;
    const double C76712 = C151796 * C364;
    const double C6358 = C6084 * C366;
    const double C23301 = C152149 * C366;
    const double C31800 = C151791 * C366;
    const double C76714 = C76451 * C366;
    const double C15181 = C6084 * C573;
    const double C15171 = C6085 * C573;
    const double C37919 = C151791 * C573;
    const double C46229 = C152149 * C573;
    const double C46219 = C151796 * C573;
    const double C85680 = C76451 * C573;
    const double C85674 = C151796 * C573;
    const double C15179 = C6084 * C575;
    const double C37917 = C151791 * C575;
    const double C46221 = C152149 * C575;
    const double C85678 = C76451 * C575;
    const double C7413 = C6084 * C1095;
    const double C24371 = C152149 * C1095;
    const double C32527 = C151791 * C1095;
    const double C77784 = C76451 * C1095;
    const double C150684 = C150670 + C150674;
    const double C150676 = C150640 + C150673;
    const double C150866 = ae * C150864;
    const double C151121 = C150964 * C150864;
    const double C151174 = 2 * C150864;
    const double C1545 = (C150868 + C150864 * C150977) / C150505;
    const double C150877 = C150645 + C150876;
    const double C150969 = ae * C150967;
    const double C151300 = 2 * C150967;
    const double C150980 = C150645 + C150979;
    const double C31806 = C31629 * C7804;
    const double C32028 = C31629 * C8067;
    const double C32528 = C31629 * C8844;
    const double C33862 = C31629 * C10152;
    const double C40502 = C31629 * C17753;
    const double C150675 = C150657 + C150672;
    const double C1096 =
        (2 * ae * C150964 * C150861 * C150640 + C150615 * C150964 * C150862) /
        C150510;
    const double C1558 = (C150861 * C150644 + C150862 * C150977) / C150510;
    const double C6370 = C6084 * C367;
    const double C6355 = C6085 * C367;
    const double C23317 = C152149 * C367;
    const double C23303 = C151796 * C367;
    const double C31810 = C151791 * C367;
    const double C76730 = C76451 * C367;
    const double C76716 = C151796 * C367;
    const double C15187 = C6084 * C576;
    const double C15177 = C6085 * C576;
    const double C37921 = C151791 * C576;
    const double C46233 = C152149 * C576;
    const double C46223 = C151796 * C576;
    const double C85684 = C76451 * C576;
    const double C85676 = C151796 * C576;
    const double C7812 = C6084 * C1372;
    const double C23309 = C152149 * C1372;
    const double C31802 = C151791 * C1372;
    const double C76722 = C76451 * C1372;
    const double C8081 = C6084 * C1562;
    const double C24367 = C152149 * C1562;
    const double C32525 = C151791 * C1562;
    const double C77780 = C76451 * C1562;
    const double C17761 = C6084 * C2470;
    const double C40495 = C151791 * C2470;
    const double C46227 = C152149 * C2470;
    const double C89070 = C76451 * C2470;
    const double C150709 = C150691 + C150706;
    const double C2957 = 2 * C150964 * C151671 +
                         C150964 * (C151671 + C150861 * C150752 * C150977);
    const double C9428 =
        3 * (C151671 + C151694 * C150977) +
        C150964 * (2 * C150964 * C151694 +
                   C150964 * (C151694 + C150861 * C150816 * C150977));
    const double C7802 =
        4 * (2 * C151669 + C150861 * C151679) +
        C150861 *
            (3 * C151679 + C150861 * (2 * C150861 * C150697 +
                                      C150861 * (C150697 + C150746 * C150874)));
    const double C8065 =
        2 * C151669 + C150861 * C151679 +
        (2 * C150861 * C150697 + C150861 * (C150697 + C150746 * C150874)) *
            C150977;
    const double C8842 =
        C150964 *
        (3 * C151679 + C150861 * (2 * C150861 * C150697 +
                                  C150861 * (C150697 + C150746 * C150874)));
    const double C10150 =
        2 * C150964 * C151679 +
        C150964 * (C151679 + (C150697 + C150746 * C150874) * C150977);
    const double C26362 =
        3 * (C151679 + C151716 * C150977) +
        C150964 *
            (2 * C150964 * C151716 +
             C150964 * (C151716 + (C150746 + C150809 * C150874) * C150977));
    const double C17751 =
        4 * (2 * C150964 * C150661 + C150964 * C151703) +
        C150964 *
            (3 * C151703 + C150964 * (2 * C150964 * C150697 +
                                      C150964 * (C150697 + C150746 * C150977)));
    const double C150730 = C150707 + C150713;
    const double C150715 = C150664 + C150711;
    const double C150885 = C150671 + C150882;
    const double C150898 = ae * C150893;
    const double C151126 = C150964 * C150893;
    const double C151166 = 2 * C150893;
    const double C151218 = C150893 * C150977;
    const double C150988 = C150671 + C150985;
    const double C151001 = ae * C150996;
    const double C151292 = 2 * C150996;
    const double C150714 = C150693 + C150710;
    const double C150883 = C150670 + C150880;
    const double C150895 = C150615 * C150890;
    const double C151124 = C150964 * C150890;
    const double C151162 = 2 * C150890;
    const double C1557 = (2 * ae * (C150861 * C150640 + C150889 * C150977) +
                          C150615 * (C150862 + C150890 * C150977)) /
                         C150510;
    const double C2963 =
        (2 * C150964 * C150862 + C150964 * (C150862 + C150890 * C150977)) /
        C150510;
    const double C150986 = C150670 + C150983;
    const double C150998 = C150615 * C150993;
    const double C151288 = 2 * C150993;
    const double C151712 = C151708 + C151711;
    const double C40487 =
        4 * (2 * C150964 * C151690 + C150964 * C151743) +
        C150964 *
            (3 * C151743 +
             C150964 * (2 * C150964 * C151729 +
                        C150964 * (C151729 + C150861 * C150732 * C150977)));
    const double C151753 = C151750 + C151752;
    const double C150790 = C150757 + C150764;
    const double C150766 = C150700 + C150761;
    const double C150911 = C150708 + C150906;
    const double C150933 = ae * C150926;
    const double C151134 = C150964 * C150926;
    const double C151195 = 2 * C150926;
    const double C151211 = C150926 * C150977;
    const double C151014 = C150708 + C151009;
    const double C151036 = ae * C151029;
    const double C151321 = 2 * C151029;
    const double C150959 = 2 * C150953;
    const double C151257 = C151250 + C151251;
    const double C151269 = ae * C151264;
    const double C151575 = C150907 + C151574;
    const double C33867 = C31629 * C26363;
    const double C151062 = 2 * C151056;
    const double C151360 = C151353 + C151354;
    const double C151157 = 2 * C151151;
    const double C151345 = ae * C151340;
    const double C151584 = C150964 * C151340;
    const double C40489 =
        (4 * (2 * C150964 * C150889 + C150964 * C151572) +
         C150964 *
             (3 * C151572 + C150964 * (2 * C151130 + C150964 * C151340))) /
        C150505;
    const double C150765 = C150742 + C150760;
    const double C150908 = C150707 + C150903;
    const double C150929 = C150615 * C150922;
    const double C151131 = C150964 * C150922;
    const double C151189 = 2 * C150922;
    const double C151209 = C150922 * C150977;
    const double C151011 = C150707 + C151006;
    const double C151032 = C150615 * C151025;
    const double C151315 = 2 * C151025;
    const double C150823 = C150799 + C150820;
    const double C150830 = C150750 + C150825;
    const double C150952 = C150758 + C150945;
    const double C151055 = C150758 + C151048;
    const double C151084 = ae * C151075;
    const double C151149 = C150964 * C151075;
    const double C151339 = C151075 * C150977;
    const double C151110 = ae * C151101;
    const double C150829 = C150805 + C150824;
    const double C150948 = C150757 + C150941;
    const double C151051 = C150757 + C151044;
    const double C151079 = C150615 * C151070;
    const double C151145 = C150964 * C151070;
    const double C151336 = C151070 * C150977;
    const double C151105 = C150615 * C151096;
    const double C150763 = C150615 * C150759;
    const double C150762 = C150759 * ae;
    const double C150801 = 4 * C150759;
    const double C151673 = C150861 * C150759;
    const double C7803 =
        4 * (2 * C151671 + C150861 * C151682) +
        C150861 *
            (3 * C151682 + C150861 * (2 * C150861 * C150752 +
                                      C150861 * (C150752 + C150816 * C150874)));
    const double C8066 =
        2 * C151671 + C150861 * C151682 +
        (2 * C150861 * C150752 + C150861 * (C150752 + C150816 * C150874)) *
            C150977;
    const double C8843 =
        C150964 *
        (3 * C151682 + C150861 * (2 * C150861 * C150752 +
                                  C150861 * (C150752 + C150816 * C150874)));
    const double C10151 =
        2 * C150964 * C151682 +
        C150964 * (C151682 + (C150752 + C150816 * C150874) * C150977);
    const double C17752 =
        4 * (2 * C150964 * C150702 + C150964 * C151706) +
        C150964 *
            (3 * C151706 + C150964 * (2 * C150964 * C150752 +
                                      C150964 * (C150752 + C150816 * C150977)));
    const double C151718 = C151714 + C151717;
    const double C151760 = C151757 + C151759;
    const double C49559 =
        4 * (2 * C150964 * C151692 + C150964 * C151764) +
        C150964 *
            (3 * C151764 +
             C150964 * (2 * C150964 * C151762 +
                        C150964 * (C151762 + C150861 * C150809 * C150977)));
    const double C151735 = C150861 * C151734;
    const double C40488 =
        4 * (2 * C150964 * C151710 + C150964 * C151746) +
        C150964 *
            (3 * C151746 +
             C150964 * (2 * C150964 * C151732 +
                        C150964 * (C151732 +
                                   (C150732 + C150792 * C150874) * C150977)));
    const double C151772 = C151768 + C151771;
    const double C151781 = C150964 * C151780;
    const double C151828 = C151824 - C151827;
    const double C152240 = C152205 / C151814;
    const double C151837 = C151833 - C151836;
    const double C152256 = C152239 / C151818;
    const double C151910 = C151905 - C151909;
    const double C152244 = C152213 / C151814;
    const double C151917 = C151913 - C151916;
    const double C152260 = C152247 / C151818;
    const double C151952 = C151947 - C151951;
    const double C152246 = C152216 / C151814;
    const double C151959 = C151955 - C151958;
    const double C152262 = C152250 / C151818;
    const double C152253 = C152189 - C152232;
    const double C152233 = C152192 - C152193;
    const double C152254 = C152194 - C152235;
    const double C152236 = C152197 - C152198;
    const double C67868 = C67864 * C152;
    const double C150535 = C151791 - C150533;
    const double C68140 = C152237 * C367;
    const double C68133 = C152237 * C364;
    const double C68128 = C152237 * C366;
    const double C68115 = C152237 * C365;
    const double C69183 = C152237 * C1095;
    const double C69573 = C152237 * C1372;
    const double C69833 = C152237 * C1562;
    const double C96507 = C152237 * C576;
    const double C96501 = C152237 * C573;
    const double C96499 = C152237 * C575;
    const double C96489 = C152237 * C574;
    const double C99072 = C152237 * C2470;
    const double C121 =
        (C152149 - C152199) / C150511 - (C152237 * C151787) / C150505;
    const double C68125 = C152201 * C367;
    const double C68117 = C152201 * C364;
    const double C96497 = C152201 * C576;
    const double C96491 = C152201 * C573;
    const double C122 =
        (2 * C151796 + C152237) / C150511 - (C152201 * C151787) / C150505;
    const double C123 = C152201 / C150511 - C151799 / C150520;
    const double C150649 = C150648 + C150641;
    const double C363 =
        (C150861 * C150644 + C150869 + C150869 +
         C150615 * (2 * ae * C150861 * C150640 + C150615 * C150862)) /
        C150510;
    const double C23624 = C150531 * C1090;
    const double C32030 = C31629 * C1090;
    const double C77037 = C76459 * C1090;
    const double C572 =
        (C150964 * C150644 + C150972 + C150972 +
         C150615 * (2 * ae * C150964 * C150640 + C150615 * C150965)) /
        C150510;
    const double C150692 = C150684 + C150674;
    const double C150677 = C150676 + C150665;
    const double C151122 = ae * C151121;
    const double C23631 = C150531 * C1545;
    const double C32035 = C31629 * C1545;
    const double C77044 = C76459 * C1545;
    const double C150878 = ae * C150877;
    const double C1363 = (2 * C150868 + C150861 * C150877) / C150505;
    const double C1549 = (C150964 * C150877) / C150505;
    const double C150981 = ae * C150980;
    const double C2461 = (2 * C150971 + C150964 * C150980) / C150505;
    const double C7418 = C6084 * C1096;
    const double C7411 = C6085 * C1096;
    const double C24375 = C152149 * C1096;
    const double C24369 = C151796 * C1096;
    const double C32530 = C151791 * C1096;
    const double C69188 = C152237 * C1096;
    const double C69181 = C152201 * C1096;
    const double C77788 = C76451 * C1096;
    const double C77782 = C151796 * C1096;
    const double C8075 = C6084 * C1558;
    const double C25030 = C152149 * C1558;
    const double C32974 = C151791 * C1558;
    const double C69827 = C152237 * C1558;
    const double C78431 = C76451 * C1558;
    const double C150712 = C150709 * ae;
    const double C147 = 4 * (2 * C150638 + C150615 * C150666) +
                        C150615 * (3 * C150666 + C150615 * C150709);
    const double C345 = 2 * C150638 + C150615 * C150666 + C150709 * C150874;
    const double C346 = C150861 * (3 * C150666 + C150615 * C150709);
    const double C554 = 2 * C150638 + C150615 * C150666 + C150709 * C150977;
    const double C555 = C150964 * (3 * C150666 + C150615 * C150709);
    const double C1086 = C150964 * C150861 * C150709;
    const double C1353 =
        2 * C150861 * C150709 + C150861 * (C150709 + C150759 * C150874);
    const double C1531 = C150861 * C150709 + C150861 * C150759 * C150977;
    const double C1535 = C150964 * (C150709 + C150759 * C150874);
    const double C2451 =
        2 * C150964 * C150709 + C150964 * (C150709 + C150759 * C150977);
    const double C150741 = C150730 + C150713;
    const double C150717 = C150715 + C150701;
    const double C150887 = ae * C150885;
    const double C151175 = C150861 * C150885;
    const double C151183 = 3 * C150885;
    const double C151230 = C150964 * C150885;
    const double C1552 = (C150877 + C150885 * C150977) / C150505;
    const double C150920 = C150890 + C150898;
    const double C151128 = ae * C151126;
    const double C151369 = 2 * C151126;
    const double C151219 = C150864 + C151218;
    const double C150990 = ae * C150988;
    const double C151301 = C150964 * C150988;
    const double C151309 = 3 * C150988;
    const double C151023 = C150993 + C151001;
    const double C150716 = C150615 * C150714;
    const double C150729 = 2 * C150714;
    const double C1371 =
        (2 * ae *
             (2 * C150861 * C150640 + C150861 * (C150640 + C150664 * C150874)) +
         C150615 * (2 * C150862 + C150861 * C150883)) /
        C150510;
    const double C1373 = (3 * (C150644 + C150670 * C150874) +
                          C150861 * (2 * C150862 + C150861 * C150883)) /
                         C150510;
    const double C1561 = (2 * ae * C150964 * (C150640 + C150664 * C150874) +
                          C150615 * C150964 * C150883) /
                         C150510;
    const double C1563 =
        (C150644 + C150670 * C150874 + C150883 * C150977) / C150510;
    const double C2061 =
        (C150964 * (2 * C150862 + C150861 * C150883)) / C150510;
    const double C150900 = C150899 + C150895;
    const double C8077 = C6085 * C1557;
    const double C9743 = C6084 * C1557;
    const double C25032 = C151796 * C1557;
    const double C26677 = C152149 * C1557;
    const double C34068 = C151791 * C1557;
    const double C69829 = C152201 * C1557;
    const double C71477 = C152237 * C1557;
    const double C78433 = C151796 * C1557;
    const double C80066 = C76451 * C1557;
    const double C10164 = C6084 * C2963;
    const double C27099 = C152149 * C2963;
    const double C34354 = C151791 * C2963;
    const double C71889 = C152237 * C2963;
    const double C80482 = C76451 * C2963;
    const double C2469 =
        (2 * ae *
             (2 * C150964 * C150640 + C150964 * (C150640 + C150664 * C150977)) +
         C150615 * (2 * C150965 + C150964 * C150986)) /
        C150510;
    const double C2471 = (3 * (C150644 + C150670 * C150977) +
                          C150964 * (2 * C150965 + C150964 * C150986)) /
                         C150510;
    const double C151003 = C151002 + C150998;
    const double C24769 =
        5 * (3 * C151676 + C150861 * C151712) +
        C150861 *
            (4 * C151712 +
             C150861 * (3 * C151710 +
                        C150861 * (2 * C150861 * C150686 +
                                   C150861 * (C150686 + C150732 * C150874))));
    const double C25021 =
        3 * C151676 + C150861 * C151712 +
        (3 * C151710 + C150861 * (2 * C150861 * C150686 +
                                  C150861 * (C150686 + C150732 * C150874))) *
            C150977;
    const double C25783 =
        C150964 *
        (4 * C151712 +
         C150861 * (3 * C151710 +
                    C150861 * (2 * C150861 * C150686 +
                               C150861 * (C150686 + C150732 * C150874))));
    const double C27085 =
        2 * C150964 * C151712 +
        C150964 * (C151712 + (2 * C150861 * C150686 +
                              C150861 * (C150686 + C150732 * C150874)) *
                                 C150977);
    const double C33857 =
        3 * (C151712 + C151734 * C150977) +
        C150964 *
            (2 * C150964 * C151734 +
             C150964 * (C151734 + (2 * C150861 * C150732 +
                                   C150861 * (C150732 + C150792 * C150874)) *
                                      C150977));
    const double C48823 =
        5 * (3 * C151700 + C150964 * C151753) +
        C150964 *
            (4 * C151753 +
             C150964 * (3 * C151751 +
                        C150964 * (2 * C150964 * C150686 +
                                   C150964 * (C150686 + C150732 * C150977))));
    const double C150804 = C150790 + C150764;
    const double C150769 = C150766 + C150751;
    const double C150916 = ae * C150911;
    const double C151167 = C150861 * C150911;
    const double C151194 = 3 * C150911;
    const double C151226 = C150964 * C150911;
    const double C151237 = C150911 * C150977;
    const double C151068 = C150922 + C150933;
    const double C151139 = ae * C151134;
    const double C151378 = 2 * C151134;
    const double C151214 = C150893 + C151211;
    const double C151019 = ae * C151014;
    const double C151293 = C150964 * C151014;
    const double C151320 = 3 * C151014;
    const double C151094 = C151025 + C151036;
    const double C151259 = ae * C151257;
    const double C151564 = C150861 * C151257;
    const double C24771 =
        (5 * (3 * C151529 + C150861 * C151552) +
         C150861 *
             (4 * C151552 + C150861 * (3 * C150907 + C150861 * C151257))) /
        C150505;
    const double C25023 = (3 * C151529 + C150861 * C151552 +
                           (3 * C150907 + C150861 * C151257) * C150977) /
                          C150505;
    const double C25785 =
        (C150964 *
         (4 * C151552 + C150861 * (3 * C150907 + C150861 * C151257))) /
        C150505;
    const double C27087 =
        (2 * C150964 * C151552 + C150964 * (C151552 + C151257 * C150977)) /
        C150505;
    const double C33858 =
        (3 * (C151552 + C151257 * C150977) +
         C150964 *
             (2 * C150964 * C151257 +
              C150964 * (C151257 + (2 * C151069 +
                                    C150861 * (C150750 + C150814 * C150874)) *
                                       C150977))) /
        C150505;
    const double C151274 = 2 * C151269;
    const double C40490 =
        (4 * (2 * C150964 * C150907 + C150964 * C151575) +
         C150964 *
             (3 * C151575 +
              C150964 * (2 * C151264 +
                         C150964 * (C150947 + (C150750 + C150814 * C150874) *
                                                  C150977)))) /
        C150505;
    const double C151362 = ae * C151360;
    const double C151588 = C150964 * C151360;
    const double C48825 =
        (5 * (3 * C151546 + C150964 * C151579) +
         C150964 *
             (4 * C151579 + C150964 * (3 * C151010 + C150964 * C151360))) /
        C150505;
    const double C151350 = 2 * C151345;
    const double C151585 = C151583 + C151584;
    const double C40503 = C31629 * C40489;
    const double C150768 = C150615 * C150765;
    const double C150789 = 2 * C150765;
    const double C150913 = C150615 * C150908;
    const double C151163 = C150861 * C150908;
    const double C151188 = 3 * C150908;
    const double C151224 = C150964 * C150908;
    const double C1564 =
        (2 * ae * (C150640 + C150664 * C150874 + C150907 * C150977) +
         C150615 * (C150883 + C150908 * C150977)) /
        C150510;
    const double C10155 =
        (2 * C150964 * C150883 + C150964 * (C150883 + C150908 * C150977)) /
        C150510;
    const double C150935 = C150934 + C150929;
    const double C151136 = C150615 * C151131;
    const double C151374 = 2 * C151131;
    const double C151212 = C150890 + C151209;
    const double C151016 = C150615 * C151011;
    const double C151289 = C150964 * C151011;
    const double C151314 = 3 * C151011;
    const double C151038 = C151037 + C151032;
    const double C150827 = C150615 * C150823;
    const double C150826 = C150823 * ae;
    const double C1360 = 3 * (C150709 + C150759 * C150874) +
                         C150861 * (2 * C150861 * C150759 +
                                    C150861 * (C150759 + C150823 * C150874));
    const double C1542 =
        C150709 + C150759 * C150874 + (C150759 + C150823 * C150874) * C150977;
    const double C2056 = C150964 * (2 * C150861 * C150759 +
                                    C150861 * (C150759 + C150823 * C150874));
    const double C2458 = 3 * (C150709 + C150759 * C150977) +
                         C150964 * (2 * C150964 * C150759 +
                                    C150964 * (C150759 + C150823 * C150977));
    const double C150833 = C150830 + C150815;
    const double C150958 = ae * C150952;
    const double C151196 = C150861 * C150952;
    const double C151243 = C150952 * C150977;
    const double C151268 = C150964 * C150952;
    const double C151061 = ae * C151055;
    const double C151322 = C150964 * C151055;
    const double C151156 = ae * C151149;
    const double C151344 = C150926 + C151339;
    const double C150832 = C150615 * C150829;
    const double C150954 = C150615 * C150948;
    const double C151190 = C150861 * C150948;
    const double C151241 = C150948 * C150977;
    const double C151265 = C150964 * C150948;
    const double C151057 = C150615 * C151051;
    const double C151316 = C150964 * C151051;
    const double C151087 = C151086 + C151079;
    const double C151152 = C150615 * C151145;
    const double C151341 = C150922 + C151336;
    const double C151113 = C151112 + C151105;
    const double C150767 = C150739 + C150763;
    const double C2958 = 2 * C150964 * C151673 +
                         C150964 * (C151673 + C150861 * C150823 * C150977);
    const double C24770 =
        5 * (3 * C151679 + C150861 * C151718) +
        C150861 *
            (4 * C151718 +
             C150861 * (3 * C151716 +
                        C150861 * (2 * C150861 * C150746 +
                                   C150861 * (C150746 + C150809 * C150874))));
    const double C25022 =
        3 * C151679 + C150861 * C151718 +
        (3 * C151716 + C150861 * (2 * C150861 * C150746 +
                                  C150861 * (C150746 + C150809 * C150874))) *
            C150977;
    const double C25784 =
        C150964 *
        (4 * C151718 +
         C150861 * (3 * C151716 +
                    C150861 * (2 * C150861 * C150746 +
                               C150861 * (C150746 + C150809 * C150874))));
    const double C27086 =
        2 * C150964 * C151718 +
        C150964 * (C151718 + (2 * C150861 * C150746 +
                              C150861 * (C150746 + C150809 * C150874)) *
                                 C150977);
    const double C48824 =
        5 * (3 * C151703 + C150964 * C151760) +
        C150964 *
            (4 * C151760 +
             C150964 * (3 * C151758 +
                        C150964 * (2 * C150964 * C150746 +
                                   C150964 * (C150746 + C150809 * C150977))));
    const double C151736 = C151728 + C151735;
    const double C57113 =
        5 * (3 * C151743 + C150964 * C151772) +
        C150964 *
            (4 * C151772 +
             C150964 * (3 * C151770 +
                        C150964 * (2 * C150964 * C151767 +
                                   C150964 * (C151767 +
                                              C150861 * C150792 * C150977))));
    const double C151782 = C151774 + C151781;
    const double C152157 = C151828 * C151816;
    const double C152207 = C152162 + C151828;
    const double C152165 = C151837 / C151818;
    const double C152161 = C151837 * C151816;
    const double C739 = C152256 - (C151828 * C151819) / C151814;
    const double C152175 = C151910 * C151904;
    const double C152222 = C152177 + C151910;
    const double C152179 = C151917 / C151818;
    const double C152176 = C151917 * C151904;
    const double C1709 = C152260 - (C151910 * C151906) / C151814;
    const double C152181 = C151952 * C151946;
    const double C152228 = C152183 + C151952;
    const double C152185 = C151959 / C151818;
    const double C152182 = C151959 * C151946;
    const double C2814 = C152262 - (C151952 * C151948) / C151814;
    const double C31624 =
        (C152187 - C152231) / C150511 - (C152253 * C152064) / C150505;
    const double C31625 =
        (2 * C152068 + C152253) / C150511 - (C152233 * C152064) / C150505;
    const double C31626 = C152233 / C150511 - C152071 / C150520;
    const double C62334 =
        (C152188 - C152234) / C150511 - (C152254 * C152088) / C150505;
    const double C62335 =
        (2 * C152092 + C152254) / C150511 - (C152236 * C152088) / C150505;
    const double C62336 = C152236 / C150511 - C152095 / C150520;
    const double C150537 = C150535 * ae;
    const double C150536 = C150535 * C150515;
    const double C6090 =
        ((-C150504 / C150505) / C150511 - (C150522 * be) / C150505) / C150511 -
        ((C150506 *
              ((-C150507 / C150505) / C150511 - (C150535 * be) / C150505) +
          C76451) *
         be) /
            C150505 +
        (-C150525 / C150505) / C150511 - (0 * be) / C150505;
    const double C6092 =
        ((-C150507 / C150505) / C150511 - (C150535 * be) / C150505) / C150511 -
        ((C150506 * ((-C150525 / C150505) / C150511 - (0 * be) / C150505) +
          C151796) *
         be) /
            C150505;
    const double C76457 =
        (-C150507 / C150505) / C150511 - (C150535 * be) / C150505;
    const double C150650 = ae * C150649;
    const double C153 =
        (2 * C150629 + C150615 * C150649 + (C150618 + C150632 * C150619) * ae) /
        C150505;
    const double C351 = (C150861 * C150649) / C150505;
    const double C560 = (C150964 * C150649) / C150505;
    const double C6381 = C6084 * C363;
    const double C6365 = C6085 * C363;
    const double C6349 = C6086 * C363;
    const double C23329 = C152149 * C363;
    const double C23315 = C151796 * C363;
    const double C31818 = C151791 * C363;
    const double C68151 = C152237 * C363;
    const double C68135 = C152201 * C363;
    const double C68119 = C67856 * C363;
    const double C76742 = C76451 * C363;
    const double C76728 = C151796 * C363;
    const double C15193 = C6084 * C572;
    const double C15183 = C6085 * C572;
    const double C15173 = C6086 * C572;
    const double C37923 = C151791 * C572;
    const double C46243 = C152149 * C572;
    const double C46231 = C151796 * C572;
    const double C85688 = C76451 * C572;
    const double C85682 = C151796 * C572;
    const double C96513 = C152237 * C572;
    const double C96503 = C152201 * C572;
    const double C96493 = C67856 * C572;
    const double C150679 = ae * C150677;
    const double C150678 = C150615 * C150677;
    const double C150689 = 3 * C150677;
    const double C150863 = C150861 * C150677;
    const double C150966 = C150964 * C150677;
    const double C356 = (C150649 + C150677 * C150874) / C150505;
    const double C565 = (C150649 + C150677 * C150977) / C150505;
    const double C1097 =
        (C150964 * C150862 + C151122 + C151122 +
         C150615 * (2 * ae * C150964 * C150889 + C150615 * C150964 * C150890)) /
        C150510;
    const double C368 = (C150644 + C150670 * C150874 + C150878 + C150878 +
                         C150615 * (2 * ae * (C150640 + C150664 * C150874) +
                                    C150615 * (C150670 + C150707 * C150874))) /
                        C150510;
    const double C23305 = C150531 * C1363;
    const double C31635 = C31629 * C1363;
    const double C76718 = C76459 * C1363;
    const double C23622 = C150531 * C1549;
    const double C32031 = C31629 * C1549;
    const double C77035 = C76459 * C1549;
    const double C577 = (C150644 + C150670 * C150977 + C150981 + C150981 +
                         C150615 * (2 * ae * (C150640 + C150664 * C150977) +
                                    C150615 * (C150670 + C150707 * C150977))) /
                        C150510;
    const double C26372 = C150531 * C2461;
    const double C34212 = C31629 * C2461;
    const double C79761 = C76459 * C2461;
    const double C150720 = ae * C150717;
    const double C150719 = C150615 * C150717;
    const double C150736 = 3 * C150717;
    const double C150881 = C150717 * C150874;
    const double C150892 = C150861 * C150717;
    const double C150984 = C150717 * C150977;
    const double C150995 = C150964 * C150717;
    const double C151176 = C151174 + C151175;
    const double C151231 = ae * C151230;
    const double C23633 = C150531 * C1552;
    const double C32034 = C31629 * C1552;
    const double C77046 = C76459 * C1552;
    const double C150927 = C150920 + C150898;
    const double C151220 = ae * C151219;
    const double C2960 = (2 * C151121 + C150964 * C151219) / C150505;
    const double C151302 = C151300 + C151301;
    const double C151030 = C151023 + C151001;
    const double C150718 = C150692 + C150716;
    const double C7814 = C6085 * C1371;
    const double C8327 = C6084 * C1371;
    const double C23322 = C152149 * C1371;
    const double C23306 = C151796 * C1371;
    const double C31812 = C151791 * C1371;
    const double C69575 = C152201 * C1371;
    const double C70079 = C152237 * C1371;
    const double C76735 = C76451 * C1371;
    const double C76719 = C151796 * C1371;
    const double C7825 = C6084 * C1373;
    const double C24778 = C152149 * C1373;
    const double C31805 = C151791 * C1373;
    const double C69586 = C152237 * C1373;
    const double C78185 = C76451 * C1373;
    const double C8083 = C6085 * C1561;
    const double C8635 = C6084 * C1561;
    const double C24379 = C152149 * C1561;
    const double C24365 = C151796 * C1561;
    const double C32532 = C151791 * C1561;
    const double C69835 = C152201 * C1561;
    const double C70387 = C152237 * C1561;
    const double C77792 = C76451 * C1561;
    const double C77778 = C151796 * C1561;
    const double C8094 = C6084 * C1563;
    const double C25034 = C152149 * C1563;
    const double C32976 = C151791 * C1563;
    const double C69846 = C152237 * C1563;
    const double C78435 = C76451 * C1563;
    const double C8856 = C6084 * C2061;
    const double C25038 = C152149 * C2061;
    const double C32523 = C151791 * C2061;
    const double C70599 = C152237 * C2061;
    const double C78439 = C76451 * C2061;
    const double C17763 = C6085 * C2469;
    const double C18282 = C6084 * C2469;
    const double C41016 = C151791 * C2469;
    const double C46237 = C152149 * C2469;
    const double C46225 = C151796 * C2469;
    const double C89072 = C151796 * C2469;
    const double C89762 = C76451 * C2469;
    const double C99074 = C152201 * C2469;
    const double C99593 = C152237 * C2469;
    const double C17771 = C6084 * C2471;
    const double C40501 = C151791 * C2471;
    const double C48832 = C152149 * C2471;
    const double C89080 = C76451 * C2471;
    const double C99082 = C152237 * C2471;
    const double C150773 = ae * C150769;
    const double C150772 = C150615 * C150769;
    const double C150797 = 3 * C150769;
    const double C150905 = C150769 * C150874;
    const double C150925 = C150861 * C150769;
    const double C151008 = C150769 * C150977;
    const double C151028 = C150964 * C150769;
    const double C150939 = C150908 + C150916;
    const double C151170 = C151166 + C151167;
    const double C151228 = ae * C151226;
    const double C151413 = 2 * C151226;
    const double C151238 = C150885 + C151237;
    const double C151077 = C151068 + C150933;
    const double C151143 = C151131 + C151139;
    const double C151216 = ae * C151214;
    const double C151370 = C150964 * C151214;
    const double C151406 = 3 * C151214;
    const double C151042 = C151011 + C151019;
    const double C151296 = C151292 + C151293;
    const double C151103 = C151094 + C151036;
    const double C151261 = 2 * C151259;
    const double C151565 = C151563 + C151564;
    const double C32813 = C31629 * C24771;
    const double C32982 = C31629 * C25023;
    const double C32984 = C31629 * C25785;
    const double C33861 = C31629 * C27087;
    const double C33868 = C31629 * C33858;
    const double C40504 = C31629 * C40490;
    const double C151364 = 2 * C151362;
    const double C151589 = C151587 + C151588;
    const double C57121 = C31629 * C48825;
    const double C57114 =
        (5 * (3 * C151572 + C150964 * C151585) +
         C150964 *
             (4 * C151585 +
              C150964 * (3 * C151340 +
                         C150964 * (2 * C151144 +
                                    C150964 * (C151069 + C150861 * C150814 *
                                                             C150977))))) /
        C150505;
    const double C150771 = C150741 + C150768;
    const double C150918 = C150917 + C150913;
    const double C151168 = C151162 + C151163;
    const double C8091 = C6085 * C1564;
    const double C25036 = C151796 * C1564;
    const double C26673 = C152149 * C1564;
    const double C34066 = C151791 * C1564;
    const double C69843 = C152201 * C1564;
    const double C78437 = C151796 * C1564;
    const double C80062 = C76451 * C1564;
    const double C27095 = C152149 * C10155;
    const double C34352 = C151791 * C10155;
    const double C80478 = C76451 * C10155;
    const double C150936 = C150615 * C150935;
    const double C151067 = 2 * C150935;
    const double C151141 = C151140 + C151136;
    const double C2964 =
        (2 * ae *
             (2 * C150964 * C150889 + C150964 * (C150889 + C150921 * C150977)) +
         C150615 * (2 * C151124 + C150964 * C151212)) /
        C150510;
    const double C9432 = (3 * (C150862 + C150890 * C150977) +
                          C150964 * (2 * C151124 + C150964 * C151212)) /
                         C150510;
    const double C151021 = C151020 + C151016;
    const double C151294 = C151288 + C151289;
    const double C151039 = C150615 * C151038;
    const double C151093 = 2 * C151038;
    const double C150831 = C150800 + C150827;
    const double C150839 = ae * C150833;
    const double C150837 = C150615 * C150833;
    const double C150944 = C150833 * C150874;
    const double C151047 = C150833 * C150977;
    const double C151074 = C150861 * C150833;
    const double C151100 = C150964 * C150833;
    const double C151199 = C151195 + C151196;
    const double C151246 = C150911 + C151243;
    const double C151273 = ae * C151268;
    const double C151325 = C151321 + C151322;
    const double C151349 = ae * C151344;
    const double C151379 = C150964 * C151344;
    const double C150836 = C150804 + C150832;
    const double C150960 = C150959 + C150954;
    const double C151197 = C151189 + C151190;
    const double C151244 = C150908 + C151241;
    const double C151270 = C150615 * C151265;
    const double C151063 = C151062 + C151057;
    const double C151323 = C151315 + C151316;
    const double C151088 = C150615 * C151087;
    const double C151158 = C151157 + C151152;
    const double C151346 = C150615 * C151341;
    const double C151375 = C150964 * C151341;
    const double C151114 = C150615 * C151113;
    const double C150770 = C150767 * ae;
    const double C148 = 5 * (3 * C150666 + C150615 * C150709) +
                        C150615 * (4 * C150709 + C150615 * C150767);
    const double C347 = 3 * C150666 + C150615 * C150709 + C150767 * C150874;
    const double C348 = C150861 * (4 * C150709 + C150615 * C150767);
    const double C556 = 3 * C150666 + C150615 * C150709 + C150767 * C150977;
    const double C557 = C150964 * (4 * C150709 + C150615 * C150767);
    const double C1087 = C150964 * C150861 * C150767;
    const double C32806 =
        6 * (4 * C151712 + C150861 * C151736) +
        C150861 *
            (5 * C151736 +
             C150861 * (4 * C151734 +
                        C150861 * (3 * C151732 +
                                   C150861 * (2 * C150861 * C150732 +
                                              C150861 * (C150732 +
                                                         C150792 * C150874)))));
    const double C32969 =
        4 * C151712 + C150861 * C151736 +
        (4 * C151734 +
         C150861 * (3 * C151732 +
                    C150861 * (2 * C150861 * C150732 +
                               C150861 * (C150732 + C150792 * C150874)))) *
            C150977;
    const double C33473 =
        C150964 *
        (5 * C151736 +
         C150861 *
             (4 * C151734 +
              C150861 * (3 * C151732 +
                         C150861 * (2 * C150861 * C150732 +
                                    C150861 * (C150732 + C150792 * C150874)))));
    const double C34345 =
        2 * C150964 * C151736 +
        C150964 *
            (C151736 + (3 * C151732 +
                        C150861 * (2 * C150861 * C150732 +
                                   C150861 * (C150732 + C150792 * C150874))) *
                           C150977);
    const double C64299 =
        6 * (4 * C151753 + C150964 * C151782) +
        C150964 *
            (5 * C151782 +
             C150964 * (4 * C151780 +
                        C150964 * (3 * C151778 +
                                   C150964 * (2 * C150964 * C150732 +
                                              C150964 * (C150732 +
                                                         C150792 * C150977)))));
    const double C152203 = C152157 / C151814;
    const double C152241 = C152207 / C151818;
    const double C152242 = C152209 + C152165;
    const double C741 = C152165 - C151835 / C151832;
    const double C152206 = C152161 / C151814;
    const double C152219 = C152175 / C151814;
    const double C152248 = C152222 / C151818;
    const double C152249 = C152223 + C152179;
    const double C1711 = C152179 - C151915 / C151832;
    const double C152221 = C152176 / C151814;
    const double C152225 = C152181 / C151814;
    const double C152251 = C152228 / C151818;
    const double C152252 = C152229 + C152185;
    const double C2816 = C152185 - C151957 / C151832;
    const double C152227 = C152182 / C151814;
    const double C150539 = C150537 / C150505;
    const double C150538 = C150506 * C150536;
    const double C140 = (-C150536 / C150505) / (4 * C150517);
    const double C6093 = (-C150536 / C150505) / (4 * C150510);
    const double C23045 = (-C150536 / C150505) / C150511;
    const double C31628 = -C150536 / C150505;
    const double C67863 = (-C150536 / C150505) / (4 * C150510);
    const double C76458 = (-C150536 / C150505) / C150511;
    const double C6108 = C6090 * C152;
    const double C6107 = C6090 * C151;
    const double C6104 = C6090 * C352;
    const double C6099 = C6090 * C353;
    const double C6096 = C6090 * C150;
    const double C6379 = C6090 * C1363;
    const double C6369 = C6090 * C355;
    const double C6359 = C6090 * C1364;
    const double C6357 = C6090 * C354;
    const double C6693 = C6090 * C564;
    const double C6690 = C6090 * C1545;
    const double C6685 = C6090 * C1090;
    const double C6682 = C6090 * C561;
    const double C6679 = C6090 * C1546;
    const double C6676 = C6090 * C563;
    const double C6675 = C6090 * C562;
    const double C6672 = C6090 * C1089;
    const double C7425 = C6090 * C1549;
    const double C7414 = C6090 * C1550;
    const double C7826 = C6090 * C7804;
    const double C7824 = C6090 * C1365;
    const double C8098 = C6090 * C8067;
    const double C8097 = C6090 * C2057;
    const double C8093 = C6090 * C1551;
    const double C8857 = C6090 * C8844;
    const double C9445 = C6090 * C9429;
    const double C9442 = C6090 * C2463;
    const double C9441 = C6090 * C2462;
    const double C9438 = C6090 * C2959;
    const double C9744 = C6090 * C1552;
    const double C9950 = C6090 * C2461;
    const double C10165 = C6090 * C10152;
    const double C17772 = C6090 * C17753;
    const double C6106 = C6092 * C152;
    const double C6100 = C6092 * C352;
    const double C6097 = C6092 * C151;
    const double C6360 = C6092 * C1363;
    const double C6354 = C6092 * C355;
    const double C6680 = C6092 * C1545;
    const double C6677 = C6092 * C564;
    const double C6674 = C6092 * C561;
    const double C6671 = C6092 * C1090;
    const double C7415 = C6092 * C1549;
    const double C8090 = C6092 * C1552;
    const double C9440 = C6092 * C2461;
    const double C76473 = C76457 * C152;
    const double C76472 = C76457 * C151;
    const double C76470 = C76457 * C352;
    const double C76468 = C76457 * C355;
    const double C76465 = C76457 * C354;
    const double C76463 = C76457 * C353;
    const double C76461 = C76457 * C150;
    const double C76734 = C76457 * C1363;
    const double C76723 = C76457 * C1365;
    const double C76721 = C76457 * C1364;
    const double C77058 = C76457 * C564;
    const double C77056 = C76457 * C1545;
    const double C77054 = C76457 * C1552;
    const double C77051 = C76457 * C1549;
    const double C77049 = C76457 * C1090;
    const double C77047 = C76457 * C561;
    const double C77045 = C76457 * C1551;
    const double C77043 = C76457 * C1546;
    const double C77041 = C76457 * C563;
    const double C77040 = C76457 * C562;
    const double C77038 = C76457 * C1089;
    const double C77036 = C76457 * C1550;
    const double C77785 = C76457 * C2057;
    const double C78194 = C76457 * C24771;
    const double C78192 = C76457 * C7804;
    const double C78450 = C76457 * C25023;
    const double C78449 = C76457 * C8844;
    const double C78446 = C76457 * C8067;
    const double C79190 = C76457 * C25785;
    const double C79767 = C76457 * C26363;
    const double C79765 = C76457 * C9429;
    const double C79763 = C76457 * C2463;
    const double C79762 = C76457 * C2462;
    const double C79760 = C76457 * C2959;
    const double C79758 = C76457 * C10152;
    const double C80275 = C76457 * C2461;
    const double C80483 = C76457 * C27087;
    const double C89083 = C76457 * C40489;
    const double C89081 = C76457 * C17753;
    const double C118120 = C76457 * C48825;
    const double C161 =
        (2 * (2 * ae * C150627 + C150615 * C150644) + C150650 + C150650 +
         C150615 * (C150644 + C150647 + C150647 +
                    C150615 * (2 * ae * C150640 +
                               C150615 *
                                   (C150633 * C150634 +
                                    C150619 * bs[5] * std::pow(C150621, 5)) *
                                   C150622))) /
        C150510;
    const double C170 = C141 * C153;
    const double C6119 = C6090 * C153;
    const double C6109 = C6092 * C153;
    const double C6105 = C6094 * C153;
    const double C23061 = C150531 * C153;
    const double C31646 = C31629 * C153;
    const double C67875 = C67864 * C153;
    const double C76484 = C76457 * C153;
    const double C76474 = C76459 * C153;
    const double C6111 = C6090 * C351;
    const double C6103 = C6092 * C351;
    const double C6101 = C6094 * C351;
    const double C23056 = C150531 * C351;
    const double C31640 = C31629 * C351;
    const double C67871 = C67864 * C351;
    const double C76475 = C76457 * C351;
    const double C76469 = C76459 * C351;
    const double C6699 = C6090 * C560;
    const double C6683 = C6092 * C560;
    const double C6673 = C6094 * C560;
    const double C23635 = C150531 * C560;
    const double C32040 = C31629 * C560;
    const double C68443 = C67864 * C560;
    const double C77064 = C76457 * C560;
    const double C77048 = C76459 * C560;
    const double C150680 = C150656 + C150678;
    const double C150865 = ae * C150863;
    const double C1091 = (C150964 * C150863) / C150505;
    const double C150968 = ae * C150966;
    const double C6393 = C6090 * C356;
    const double C6372 = C6092 * C356;
    const double C6351 = C6094 * C356;
    const double C23054 = C150531 * C356;
    const double C31641 = C31629 * C356;
    const double C68121 = C67864 * C356;
    const double C76477 = C76457 * C356;
    const double C76467 = C76459 * C356;
    const double C6700 = C6090 * C565;
    const double C6692 = C6092 * C565;
    const double C6678 = C6094 * C565;
    const double C23644 = C150531 * C565;
    const double C32041 = C31629 * C565;
    const double C68448 = C67864 * C565;
    const double C77065 = C76457 * C565;
    const double C77057 = C76459 * C565;
    const double C7431 = C6084 * C1097;
    const double C7420 = C6085 * C1097;
    const double C7409 = C6086 * C1097;
    const double C24391 = C152149 * C1097;
    const double C24377 = C151796 * C1097;
    const double C32541 = C151791 * C1097;
    const double C69201 = C152237 * C1097;
    const double C69190 = C152201 * C1097;
    const double C69179 = C67856 * C1097;
    const double C77804 = C76451 * C1097;
    const double C77790 = C151796 * C1097;
    const double C6394 = C6084 * C368;
    const double C6373 = C6085 * C368;
    const double C6352 = C6086 * C368;
    const double C23333 = C152149 * C368;
    const double C23319 = C151796 * C368;
    const double C31820 = C151791 * C368;
    const double C68164 = C152237 * C368;
    const double C68143 = C152201 * C368;
    const double C68122 = C67856 * C368;
    const double C76746 = C76451 * C368;
    const double C76732 = C151796 * C368;
    const double C15203 = C6084 * C577;
    const double C15189 = C6085 * C577;
    const double C15175 = C6086 * C577;
    const double C37929 = C151791 * C577;
    const double C46247 = C152149 * C577;
    const double C46235 = C151796 * C577;
    const double C85698 = C76451 * C577;
    const double C85686 = C151796 * C577;
    const double C96523 = C152237 * C577;
    const double C96509 = C152201 * C577;
    const double C96495 = C67856 * C577;
    const double C150740 = C150729 + C150720;
    const double C150721 = C150690 + C150719;
    const double C150884 = C150677 + C150881;
    const double C150897 = ae * C150892;
    const double C151125 = C150964 * C150892;
    const double C151164 = 2 * C150892;
    const double C1544 = (C150863 + C150892 * C150977) / C150505;
    const double C150987 = C150677 + C150984;
    const double C151000 = ae * C150995;
    const double C151290 = 2 * C150995;
    const double C151177 = ae * C151176;
    const double C1366 = (3 * C150877 + C150861 * C151176) / C150505;
    const double C2058 = (C150964 * C151176) / C150505;
    const double C1560 =
        (C150964 * C150883 + C151231 + C151231 +
         C150615 * (2 * ae * C150964 * C150907 + C150615 * C151224)) /
        C150510;
    const double C1556 = (C150862 + C150890 * C150977 + C151220 + C151220 +
                          C150615 * (2 * ae * (C150889 + C150921 * C150977) +
                                     C150615 * C151212)) /
                         C150510;
    const double C9437 = C6092 * C2960;
    const double C9953 = C6090 * C2960;
    const double C26370 = C150531 * C2960;
    const double C34213 = C31629 * C2960;
    const double C79759 = C76459 * C2960;
    const double C80277 = C76457 * C2960;
    const double C151303 = ae * C151302;
    const double C2464 = (3 * C150980 + C150964 * C151302) / C150505;
    const double C150803 = C150789 + C150773;
    const double C150775 = C150737 + C150772;
    const double C150910 = C150717 + C150905;
    const double C150932 = ae * C150925;
    const double C151133 = C150964 * C150925;
    const double C151192 = 2 * C150925;
    const double C151210 = C150925 * C150977;
    const double C151013 = C150717 + C151008;
    const double C151035 = ae * C151028;
    const double C151318 = 2 * C151028;
    const double C150946 = C150939 + C150916;
    const double C151172 = ae * C151170;
    const double C151184 = C150861 * C151170;
    const double C151279 = C150964 * C151170;
    const double C151388 = 4 * C151170;
    const double C8068 = (C151176 + C151170 * C150977) / C150505;
    const double C151239 = ae * C151238;
    const double C10153 = (2 * C151230 + C150964 * C151238) / C150505;
    const double C151150 = C151143 + C151139;
    const double C151371 = C151369 + C151370;
    const double C151049 = C151042 + C151019;
    const double C151298 = ae * C151296;
    const double C151310 = C150964 * C151296;
    const double C151420 = 4 * C151296;
    const double C32807 =
        (6 * (4 * C151552 + C150861 * C151565) +
         C150861 *
             (5 * C151565 +
              C150861 *
                  (4 * C151257 +
                   C150861 * (3 * C150947 +
                              C150861 * (2 * C151069 +
                                         C150861 * (C150750 +
                                                    C150814 * C150874)))))) /
        C150505;
    const double C32970 =
        (4 * C151552 + C150861 * C151565 +
         (4 * C151257 +
          C150861 * (3 * C150947 +
                     C150861 * (2 * C151069 +
                                C150861 * (C150750 + C150814 * C150874)))) *
             C150977) /
        C150505;
    const double C33474 =
        (C150964 *
         (5 * C151565 +
          C150861 * (4 * C151257 +
                     C150861 * (3 * C150947 +
                                C150861 * (2 * C151069 +
                                           C150861 * (C150750 +
                                                      C150814 * C150874)))))) /
        C150505;
    const double C34346 =
        (2 * C150964 * C151565 +
         C150964 *
             (C151565 + (3 * C150947 +
                         C150861 * (2 * C151069 +
                                    C150861 * (C150750 + C150814 * C150874))) *
                            C150977)) /
        C150505;
    const double C64300 =
        (6 * (4 * C151579 + C150964 * C151589) +
         C150964 *
             (5 * C151589 +
              C150964 *
                  (4 * C151360 +
                   C150964 * (3 * C151050 +
                              C150964 * (2 * C151095 +
                                         C150964 * (C150750 +
                                                    C150814 * C150977)))))) /
        C150505;
    const double C57122 = C31629 * C57114;
    const double C150774 = C150615 * C150771;
    const double C150788 = 3 * C150771;
    const double C1374 = (2 * ae *
                              (3 * (C150640 + C150664 * C150874) +
                               C150861 * (2 * C150889 + C150861 * C150907)) +
                          C150615 * (3 * C150883 + C150861 * C151168)) /
                         C150510;
    const double C2062 = (2 * ae * C150964 * (2 * C150889 + C150861 * C150907) +
                          C150615 * C150964 * C151168) /
                         C150510;
    const double C7807 = (4 * (2 * C150862 + C150861 * C150883) +
                          C150861 * (3 * C150883 + C150861 * C151168)) /
                         C150510;
    const double C8070 =
        (2 * C150862 + C150861 * C150883 + C151168 * C150977) / C150510;
    const double C8847 =
        (C150964 * (3 * C150883 + C150861 * C151168)) / C150510;
    const double C150937 = C150927 + C150936;
    const double C10162 = C6085 * C2964;
    const double C27097 = C151796 * C2964;
    const double C40811 = C151791 * C2964;
    const double C49150 = C152149 * C2964;
    const double C71887 = C152201 * C2964;
    const double C80480 = C151796 * C2964;
    const double C89493 = C76451 * C2964;
    const double C40499 = C151791 * C9432;
    const double C49567 = C152149 * C9432;
    const double C89076 = C76451 * C9432;
    const double C2472 = (2 * ae *
                              (3 * (C150640 + C150664 * C150977) +
                               C150964 * (2 * C150992 + C150964 * C151010)) +
                          C150615 * (3 * C150986 + C150964 * C151294)) /
                         C150510;
    const double C17756 = (4 * (2 * C150965 + C150964 * C150986) +
                           C150964 * (3 * C150986 + C150964 * C151294)) /
                          C150510;
    const double C151040 = C151030 + C151039;
    const double C150835 = C150615 * C150831;
    const double C150834 = C150831 * ae;
    const double C1715 =
        2 * C150861 * C150767 + C150861 * (C150767 + C150831 * C150874);
    const double C1916 = C150964 * (C150767 + C150831 * C150874);
    const double C2677 = C150861 * C150767 + C150861 * C150831 * C150977;
    const double C2818 =
        2 * C150964 * C150767 + C150964 * (C150767 + C150831 * C150977);
    const double C150841 = C150798 + C150837;
    const double C150951 = C150769 + C150944;
    const double C151054 = C150769 + C151047;
    const double C151083 = ae * C151074;
    const double C151148 = C150964 * C151074;
    const double C151338 = C151074 * C150977;
    const double C151109 = ae * C151100;
    const double C151202 = C150861 * C151199;
    const double C151256 = ae * C151199;
    const double C151284 = C150964 * C151199;
    const double C151395 = C151199 * C150977;
    const double C151248 = ae * C151246;
    const double C151414 = C150964 * C151246;
    const double C151328 = C150964 * C151325;
    const double C151359 = ae * C151325;
    const double C151382 = C151378 + C151379;
    const double C150840 = C150615 * C150836;
    const double C150961 = C150615 * C150960;
    const double C151200 = C150861 * C151197;
    const double C151252 = C150615 * C151197;
    const double C151282 = C150964 * C151197;
    const double C8071 =
        (2 * ae * (2 * C150889 + C150861 * C150907 + C151257 * C150977) +
         C150615 * (C151168 + C151197 * C150977)) /
        C150510;
    const double C25788 =
        (2 * ae * C150964 *
             (4 * C151257 +
              C150861 * (3 * C150947 +
                         C150861 * (2 * C151069 +
                                    C150861 * (C150750 + C150814 * C150874)))) +
         C150615 * C150964 *
             (4 * C151197 +
              C150861 *
                  (3 * C150948 +
                   C150861 * (2 * C151070 +
                              C150861 * (C150821 + (C150793 * C150794 +
                                                    C150619 * bs[9] *
                                                        std::pow(C150621, 9)) *
                                                       C150622 * C150874))))) /
        C150510;
    const double C27089 =
        (2 * C150964 * C151168 + C150964 * (C151168 + C151197 * C150977)) /
        C150510;
    const double C10156 =
        (2 * ae *
             (2 * C150964 * C150907 + C150964 * (C150907 + C150947 * C150977)) +
         C150615 * (2 * C151224 + C150964 * C151244)) /
        C150510;
    const double C26365 = (3 * (C150883 + C150908 * C150977) +
                           C150964 * (2 * C151224 + C150964 * C151244)) /
                          C150510;
    const double C26366 =
        (2 * ae *
             (3 * (C150907 + C150947 * C150977) +
              C150964 * (2 * C151264 +
                         C150964 * (C150947 +
                                    (C150750 + C150814 * C150874) * C150977))) +
         C150615 *
             (3 * C151244 +
              C150964 *
                  (2 * C151265 +
                   C150964 * (C150948 + (C150821 + (C150793 * C150794 +
                                                    C150619 * bs[9] *
                                                        std::pow(C150621, 9)) *
                                                       C150622 * C150874) *
                                            C150977)))) /
        C150510;
    const double C40492 =
        (4 * (2 * C151224 + C150964 * C151244) +
         C150964 *
             (3 * C151244 +
              C150964 *
                  (2 * C151265 +
                   C150964 * (C150948 + (C150821 + (C150793 * C150794 +
                                                    C150619 * bs[9] *
                                                        std::pow(C150621, 9)) *
                                                       C150622 * C150874) *
                                            C150977)))) /
        C150510;
    const double C151275 = C151274 + C151270;
    const double C151064 = C150615 * C151063;
    const double C151326 = C150964 * C151323;
    const double C151355 = C150615 * C151323;
    const double C151089 = C151077 + C151088;
    const double C151159 = C150615 * C151158;
    const double C151351 = C151350 + C151346;
    const double C151380 = C151374 + C151375;
    const double C151115 = C151103 + C151114;
    const double C152264 = C152203 + C152256;
    const double C740 = C152241 - (C151837 * C151819) / C151814;
    const double C132 = C152242 / C151818 - C151835 / C152210;
    const double C152257 = C152206 + C152241;
    const double C152265 = C152219 + C152260;
    const double C1710 = C152248 - (C151917 * C151906) / C151814;
    const double C1350 = C152249 / C151818 - C151915 / C152210;
    const double C152261 = C152221 + C152248;
    const double C152266 = C152225 + C152262;
    const double C2815 = C152251 - (C151959 * C151948) / C151814;
    const double C2449 = C152252 / C151818 - C151957 / C152210;
    const double C152263 = C152227 + C152251;
    const double C150541 = C150539 - C150526;
    const double C150540 = C150538 / C150505;
    const double C6386 = C6093 * C347;
    const double C6384 = C6093 * C346;
    const double C6374 = C6093 * C345;
    const double C6366 = C6093 * C338;
    const double C6350 = C6093 * C344;
    const double C6348 = C6093 * C339;
    const double C6904 = C6093 * C348;
    const double C7426 = C6093 * C1087;
    const double C7421 = C6093 * C1086;
    const double C7408 = C6093 * C1085;
    const double C7817 = C6093 * C1359;
    const double C7815 = C6093 * C1354;
    const double C8086 = C6093 * C1541;
    const double C8084 = C6093 * C1536;
    const double C8078 = C6093 * C1532;
    const double C8322 = C6093 * C1353;
    const double C8630 = C6093 * C1535;
    const double C8851 = C6093 * C2055;
    const double C9738 = C6093 * C1531;
    const double C10159 = C6093 * C2957;
    const double C15198 = C6093 * C556;
    const double C15196 = C6093 * C555;
    const double C15190 = C6093 * C554;
    const double C15184 = C6093 * C547;
    const double C15174 = C6093 * C553;
    const double C15172 = C6093 * C548;
    const double C15653 = C6093 * C557;
    const double C17766 = C6093 * C2457;
    const double C17764 = C6093 * C2452;
    const double C18277 = C6093 * C2451;
    const double C23336 = C23045 * C1353;
    const double C23334 = C23045 * C345;
    const double C23330 = C23045 * C338;
    const double C23323 = C23045 * C1354;
    const double C23318 = C23045 * C344;
    const double C23314 = C23045 * C339;
    const double C23304 = C23045 * C1355;
    const double C23302 = C23045 * C343;
    const double C23298 = C23045 * C340;
    const double C23858 = C23045 * C347;
    const double C23854 = C23045 * C346;
    const double C24388 = C23045 * C1086;
    const double C24384 = C23045 * C1535;
    const double C24380 = C23045 * C1536;
    const double C24376 = C23045 * C1085;
    const double C24368 = C23045 * C1084;
    const double C24364 = C23045 * C1537;
    const double C24781 = C23045 * C7802;
    const double C24779 = C23045 * C1358;
    const double C25041 = C23045 * C8065;
    const double C25039 = C23045 * C2054;
    const double C25035 = C23045 * C1540;
    const double C25031 = C23045 * C1533;
    const double C25273 = C23045 * C1359;
    const double C25577 = C23045 * C2055;
    const double C25791 = C23045 * C8842;
    const double C26674 = C23045 * C1532;
    const double C26670 = C23045 * C1541;
    const double C27096 = C23045 * C2956;
    const double C27092 = C23045 * C10150;
    const double C46250 = C23045 * C2451;
    const double C46248 = C23045 * C554;
    const double C46244 = C23045 * C547;
    const double C46238 = C23045 * C2452;
    const double C46234 = C23045 * C553;
    const double C46230 = C23045 * C548;
    const double C46224 = C23045 * C2453;
    const double C46222 = C23045 * C552;
    const double C46218 = C23045 * C549;
    const double C46711 = C23045 * C556;
    const double C46707 = C23045 * C555;
    const double C47019 = C23045 * C1531;
    const double C48835 = C23045 * C17751;
    const double C48833 = C23045 * C2456;
    const double C49147 = C23045 * C2957;
    const double C49354 = C23045 * C2457;
    const double C49564 = C23045 * C9427;
    const double C124251 = C23045 * C1087;
    const double C31823 = C31628 * C1359;
    const double C31821 = C31628 * C1354;
    const double C31819 = C31628 * C344;
    const double C31817 = C31628 * C339;
    const double C31813 = C31628 * C1358;
    const double C31811 = C31628 * C1355;
    const double C31809 = C31628 * C343;
    const double C31807 = C31628 * C340;
    const double C31803 = C31628 * C1357;
    const double C31801 = C31628 * C1356;
    const double C31799 = C31628 * C342;
    const double C31797 = C31628 * C341;
    const double C32179 = C31628 * C1353;
    const double C32177 = C31628 * C345;
    const double C32175 = C31628 * C338;
    const double C32540 = C31628 * C1085;
    const double C32538 = C31628 * C1536;
    const double C32536 = C31628 * C2055;
    const double C32533 = C31628 * C2054;
    const double C32531 = C31628 * C1537;
    const double C32529 = C31628 * C1084;
    const double C32526 = C31628 * C1083;
    const double C32524 = C31628 * C1538;
    const double C32522 = C31628 * C2053;
    const double C32812 = C31628 * C24769;
    const double C32810 = C31628 * C7801;
    const double C32981 = C31628 * C25021;
    const double C32979 = C31628 * C8841;
    const double C32977 = C31628 * C8064;
    const double C32975 = C31628 * C1539;
    const double C32973 = C31628 * C1534;
    const double C33136 = C31628 * C7802;
    const double C33337 = C31628 * C8842;
    const double C33477 = C31628 * C25783;
    const double C34067 = C31628 * C1533;
    const double C34065 = C31628 * C1540;
    const double C34063 = C31628 * C8065;
    const double C34353 = C31628 * C2955;
    const double C34351 = C31628 * C10149;
    const double C34349 = C31628 * C27085;
    const double C37928 = C31628 * C553;
    const double C37926 = C31628 * C1532;
    const double C37924 = C31628 * C1541;
    const double C37922 = C31628 * C548;
    const double C37920 = C31628 * C552;
    const double C37918 = C31628 * C549;
    const double C37916 = C31628 * C551;
    const double C37914 = C31628 * C550;
    const double C38155 = C31628 * C1535;
    const double C38152 = C31628 * C1086;
    const double C38359 = C31628 * C547;
    const double C40500 = C31628 * C2455;
    const double C40498 = C31628 * C9426;
    const double C40496 = C31628 * C26361;
    const double C40494 = C31628 * C2454;
    const double C40810 = C31628 * C2956;
    const double C40807 = C31628 * C10150;
    const double C41015 = C31628 * C2453;
    const double C54584 = C31628 * C2452;
    const double C54582 = C31628 * C2957;
    const double C54790 = C31628 * C1531;
    const double C54990 = C31628 * C554;
    const double C57119 = C31628 * C17750;
    const double C57117 = C31628 * C40487;
    const double C57419 = C31628 * C9427;
    const double C57621 = C31628 * C2456;
    const double C62632 = C31628 * C2457;
    const double C62898 = C31628 * C2451;
    const double C64303 = C31628 * C48823;
    const double C64633 = C31628 * C17751;
    const double C68156 = C67863 * C347;
    const double C68154 = C67863 * C346;
    const double C68144 = C67863 * C345;
    const double C68136 = C67863 * C338;
    const double C68120 = C67863 * C344;
    const double C68118 = C67863 * C339;
    const double C68674 = C67863 * C348;
    const double C69196 = C67863 * C1087;
    const double C69191 = C67863 * C1086;
    const double C69178 = C67863 * C1085;
    const double C69578 = C67863 * C1359;
    const double C69576 = C67863 * C1354;
    const double C69838 = C67863 * C1541;
    const double C69836 = C67863 * C1536;
    const double C69830 = C67863 * C1532;
    const double C70074 = C67863 * C1353;
    const double C70382 = C67863 * C1535;
    const double C70594 = C67863 * C2055;
    const double C71472 = C67863 * C1531;
    const double C71884 = C67863 * C2957;
    const double C96518 = C67863 * C556;
    const double C96516 = C67863 * C555;
    const double C96510 = C67863 * C554;
    const double C96504 = C67863 * C547;
    const double C96494 = C67863 * C553;
    const double C96492 = C67863 * C548;
    const double C96973 = C67863 * C557;
    const double C99077 = C67863 * C2457;
    const double C99075 = C67863 * C2452;
    const double C99588 = C67863 * C2451;
    const double C76749 = C76458 * C1353;
    const double C76747 = C76458 * C345;
    const double C76743 = C76458 * C338;
    const double C76736 = C76458 * C1354;
    const double C76731 = C76458 * C344;
    const double C76727 = C76458 * C339;
    const double C76717 = C76458 * C1355;
    const double C76715 = C76458 * C343;
    const double C76711 = C76458 * C340;
    const double C77271 = C76458 * C347;
    const double C77267 = C76458 * C346;
    const double C77801 = C76458 * C1086;
    const double C77797 = C76458 * C1535;
    const double C77793 = C76458 * C1536;
    const double C77789 = C76458 * C1085;
    const double C77781 = C76458 * C1084;
    const double C77777 = C76458 * C1537;
    const double C78188 = C76458 * C7802;
    const double C78186 = C76458 * C1358;
    const double C78442 = C76458 * C8065;
    const double C78440 = C76458 * C2054;
    const double C78436 = C76458 * C1540;
    const double C78432 = C76458 * C1533;
    const double C78674 = C76458 * C1359;
    const double C78978 = C76458 * C2055;
    const double C79186 = C76458 * C8842;
    const double C80063 = C76458 * C1532;
    const double C80059 = C76458 * C1541;
    const double C80479 = C76458 * C2956;
    const double C80475 = C76458 * C10150;
    const double C85695 = C76458 * C554;
    const double C85691 = C76458 * C1531;
    const double C85689 = C76458 * C547;
    const double C85685 = C76458 * C553;
    const double C85681 = C76458 * C548;
    const double C85675 = C76458 * C552;
    const double C85673 = C76458 * C549;
    const double C86005 = C76458 * C1087;
    const double C86273 = C76458 * C555;
    const double C89077 = C76458 * C2456;
    const double C89073 = C76458 * C9427;
    const double C89071 = C76458 * C2453;
    const double C89490 = C76458 * C2957;
    const double C89759 = C76458 * C2452;
    const double C115618 = C76458 * C2451;
    const double C116020 = C76458 * C556;
    const double C118116 = C76458 * C17751;
    const double C118613 = C76458 * C2457;
    const double C150681 = C150680 + C150669;
    const double C362 = (2 * (2 * ae * C150861 * C150640 + C150615 * C150862) +
                         C150865 + C150865 +
                         C150615 * (C150862 + C150866 + C150866 +
                                    C150615 * (2 * ae * C150861 * C150664 +
                                               C150615 * C150861 * C150707))) /
                        C150510;
    const double C6696 = C6090 * C1091;
    const double C6686 = C6092 * C1091;
    const double C6670 = C6094 * C1091;
    const double C23637 = C150531 * C1091;
    const double C32039 = C31629 * C1091;
    const double C68440 = C67864 * C1091;
    const double C77062 = C76457 * C1091;
    const double C77050 = C76459 * C1091;
    const double C571 = (2 * (2 * ae * C150964 * C150640 + C150615 * C150965) +
                         C150968 + C150968 +
                         C150615 * (C150965 + C150969 + C150969 +
                                    C150615 * (2 * ae * C150964 * C150664 +
                                               C150615 * C150964 * C150707))) /
                        C150510;
    const double C150748 = C150740 + C150720;
    const double C150722 = C150721 + C150705;
    const double C150886 = ae * C150884;
    const double C1362 = (2 * C150863 + C150861 * C150884) / C150505;
    const double C1548 = (C150964 * C150884) / C150505;
    const double C151127 = ae * C151125;
    const double C6703 = C6090 * C1544;
    const double C6689 = C6092 * C1544;
    const double C6681 = C6094 * C1544;
    const double C23642 = C150531 * C1544;
    const double C32042 = C31629 * C1544;
    const double C68451 = C67864 * C1544;
    const double C77067 = C76457 * C1544;
    const double C77055 = C76459 * C1544;
    const double C150989 = ae * C150987;
    const double C2460 = (2 * C150966 + C150964 * C150987) / C150505;
    const double C1370 =
        (2 * C150862 + C150861 * C150883 + C151177 + C151177 +
         C150615 *
             (2 * ae * (2 * C150889 + C150861 * C150907) + C150615 * C151168)) /
        C150510;
    const double C7821 = C6092 * C1366;
    const double C8328 = C6090 * C1366;
    const double C23311 = C150531 * C1366;
    const double C31814 = C31629 * C1366;
    const double C76740 = C76457 * C1366;
    const double C76724 = C76459 * C1366;
    const double C8096 = C6092 * C2058;
    const double C8636 = C6090 * C2058;
    const double C24373 = C150531 * C2058;
    const double C32032 = C31629 * C2058;
    const double C77796 = C76457 * C2058;
    const double C77786 = C76459 * C2058;
    const double C8085 = C6086 * C1560;
    const double C8633 = C6085 * C1560;
    const double C24387 = C152149 * C1560;
    const double C24381 = C151796 * C1560;
    const double C32539 = C151791 * C1560;
    const double C69837 = C67856 * C1560;
    const double C70385 = C152201 * C1560;
    const double C77800 = C76451 * C1560;
    const double C77794 = C151796 * C1560;
    const double C8079 = C6086 * C1556;
    const double C9741 = C6085 * C1556;
    const double C26675 = C151796 * C1556;
    const double C37927 = C151791 * C1556;
    const double C47018 = C152149 * C1556;
    const double C69831 = C67856 * C1556;
    const double C71475 = C152201 * C1556;
    const double C80064 = C151796 * C1556;
    const double C85694 = C76451 * C1556;
    const double C2468 =
        (2 * C150965 + C150964 * C150986 + C151303 + C151303 +
         C150615 *
             (2 * ae * (2 * C150992 + C150964 * C151010) + C150615 * C151294)) /
        C150510;
    const double C9443 = C6092 * C2464;
    const double C18283 = C6090 * C2464;
    const double C26375 = C150531 * C2464;
    const double C41017 = C31629 * C2464;
    const double C79764 = C76459 * C2464;
    const double C89763 = C76457 * C2464;
    const double C150812 = C150803 + C150773;
    const double C150777 = C150775 + C150755;
    const double C150915 = ae * C150910;
    const double C151165 = C150861 * C150910;
    const double C151191 = 3 * C150910;
    const double C151225 = C150964 * C150910;
    const double C1553 = (C150884 + C150910 * C150977) / C150505;
    const double C151076 = C151067 + C150932;
    const double C151138 = ae * C151133;
    const double C151376 = 2 * C151133;
    const double C151213 = C150892 + C151210;
    const double C151018 = ae * C151013;
    const double C151291 = C150964 * C151013;
    const double C151317 = 3 * C151013;
    const double C151102 = C151093 + C151035;
    const double C151185 = C151183 + C151184;
    const double C151280 = ae * C151279;
    const double C8099 = C6092 * C8068;
    const double C25042 = C150531 * C8068;
    const double C32033 = C31629 * C8068;
    const double C78443 = C76459 * C8068;
    const double C80067 = C76457 * C8068;
    const double C1565 = (C150883 + C150908 * C150977 + C151239 + C151239 +
                          C150615 * (2 * ae * (C150907 + C150947 * C150977) +
                                     C150615 * (C150908 + C150948 * C150977))) /
                         C150510;
    const double C10166 = C6092 * C10153;
    const double C26368 = C150531 * C10153;
    const double C34214 = C31629 * C10153;
    const double C79757 = C76459 * C10153;
    const double C80279 = C76457 * C10153;
    const double C151372 = ae * C151371;
    const double C9430 = (3 * C151219 + C150964 * C151371) / C150505;
    const double C151311 = C151309 + C151310;
    const double C32815 = C31629 * C32807;
    const double C32985 = C31629 * C32970;
    const double C33479 = C31629 * C33474;
    const double C34355 = C31629 * C34346;
    const double C64305 = C31629 * C64300;
    const double C7822 = C6085 * C1374;
    const double C24780 = C151796 * C1374;
    const double C25276 = C152149 * C1374;
    const double C31815 = C151791 * C1374;
    const double C69583 = C152201 * C1374;
    const double C78187 = C151796 * C1374;
    const double C78677 = C76451 * C1374;
    const double C8854 = C6085 * C2062;
    const double C25040 = C151796 * C2062;
    const double C25580 = C152149 * C2062;
    const double C32534 = C151791 * C2062;
    const double C70597 = C152201 * C2062;
    const double C78441 = C151796 * C2062;
    const double C78981 = C76451 * C2062;
    const double C24786 = C152149 * C7807;
    const double C32811 = C151791 * C7807;
    const double C78193 = C76451 * C7807;
    const double C25046 = C152149 * C8070;
    const double C32978 = C151791 * C8070;
    const double C78447 = C76451 * C8070;
    const double C25794 = C152149 * C8847;
    const double C32980 = C151791 * C8847;
    const double C79189 = C76451 * C8847;
    const double C17769 = C6085 * C2472;
    const double C48834 = C151796 * C2472;
    const double C49357 = C152149 * C2472;
    const double C57622 = C151791 * C2472;
    const double C89078 = C151796 * C2472;
    const double C99080 = C152201 * C2472;
    const double C118616 = C76451 * C2472;
    const double C48840 = C152149 * C17756;
    const double C57120 = C151791 * C17756;
    const double C118119 = C76451 * C17756;
    const double C150838 = C150801 + C150835;
    const double C150844 = C150841 + C150819;
    const double C150957 = ae * C150951;
    const double C151193 = C150861 * C150951;
    const double C151242 = C150951 * C150977;
    const double C151267 = C150964 * C150951;
    const double C151060 = ae * C151054;
    const double C151319 = C150964 * C151054;
    const double C151155 = ae * C151148;
    const double C151343 = C150925 + C151338;
    const double C151205 = C151194 + C151202;
    const double C151286 = ae * C151284;
    const double C151396 = C151170 + C151395;
    const double C151415 = C151413 + C151414;
    const double C151331 = C151320 + C151328;
    const double C151384 = ae * C151382;
    const double C151407 = C150964 * C151382;
    const double C150962 = C150946 + C150961;
    const double C151203 = C151188 + C151200;
    const double C151262 = C151261 + C151252;
    const double C27090 =
        (2 * ae *
             (2 * C150964 * C151257 +
              C150964 * (C151257 + (2 * C151069 +
                                    C150861 * (C150750 + C150814 * C150874)) *
                                       C150977)) +
         C150615 *
             (2 * C151282 +
              C150964 * (C151197 +
                         (2 * C151070 +
                          C150861 * (C150821 +
                                     (C150793 * C150794 +
                                      C150619 * bs[9] * std::pow(C150621, 9)) *
                                         C150622 * C150874)) *
                             C150977))) /
        C150510;
    const double C33859 =
        (3 * (C151168 + C151197 * C150977) +
         C150964 *
             (2 * C151282 +
              C150964 * (C151197 +
                         (2 * C151070 +
                          C150861 * (C150821 +
                                     (C150793 * C150794 +
                                      C150619 * bs[9] * std::pow(C150621, 9)) *
                                         C150622 * C150874)) *
                             C150977))) /
        C150510;
    const double C25043 = C151796 * C8071;
    const double C34064 = C151791 * C8071;
    const double C78444 = C151796 * C8071;
    const double C34350 = C151791 * C27089;
    const double C27093 = C151796 * C10156;
    const double C40808 = C151791 * C10156;
    const double C80476 = C151796 * C10156;
    const double C40497 = C151791 * C26365;
    const double C151065 = C151049 + C151064;
    const double C151329 = C151314 + C151326;
    const double C151365 = C151364 + C151355;
    const double C151090 = C150615 * C151089;
    const double C151160 = C151150 + C151159;
    const double C9433 = (2 * ae *
                              (3 * (C150889 + C150921 * C150977) +
                               C150964 * (2 * C151130 + C150964 * C151340)) +
                          C150615 * (3 * C151212 + C150964 * C151380)) /
                         C150510;
    const double C40491 = (4 * (2 * C151124 + C150964 * C151212) +
                           C150964 * (3 * C151212 + C150964 * C151380)) /
                          C150510;
    const double C49561 =
        (2 * ae *
             (4 * (2 * C151130 + C150964 * C151340) +
              C150964 * (3 * C151340 +
                         C150964 * (2 * C151144 +
                                    C150964 * (C151069 +
                                               C150861 * C150814 * C150977)))) +
         C150615 *
             (4 * C151380 +
              C150964 * (3 * C151341 +
                         C150964 * (2 * C151145 +
                                    C150964 * (C151070 +
                                               C150861 *
                                                   (C150793 * C150794 +
                                                    C150619 * bs[9] *
                                                        std::pow(C150621, 9)) *
                                                   C150622 * C150977))))) /
        C150510;
    const double C57115 =
        (5 * (3 * C151212 + C150964 * C151380) +
         C150964 *
             (4 * C151380 +
              C150964 * (3 * C151341 +
                         C150964 * (2 * C151145 +
                                    C150964 * (C151070 +
                                               C150861 *
                                                   (C150793 * C150794 +
                                                    C150619 * bs[9] *
                                                        std::pow(C150621, 9)) *
                                                   C150622 * C150977))))) /
        C150510;
    const double C151116 = C150615 * C151115;
    const double C129 =
        (C152255 + 2 * C151828) / C151818 - (C152264 * C151819) / C151814;
    const double C130 = (C152240 + 2 * C151837 + C152264) / C151818 -
                        (C152257 * C151819) / C151814;
    const double C131 = (C152208 + C151834 / C151814 + C152257) / C151818 -
                        (C152242 * C151819) / C151814;
    const double C1347 =
        (C152258 + 2 * C151910) / C151818 - (C152265 * C151906) / C151814;
    const double C1348 = (C152244 + 2 * C151917 + C152265) / C151818 -
                         (C152261 * C151906) / C151814;
    const double C1349 = (C152214 + C151914 / C151814 + C152261) / C151818 -
                         (C152249 * C151906) / C151814;
    const double C2446 =
        (C152259 + 2 * C151952) / C151818 - (C152266 * C151948) / C151814;
    const double C2447 = (C152246 + 2 * C151959 + C152266) / C151818 -
                         (C152263 * C151948) / C151814;
    const double C2448 = (C152217 + C151956 / C151814 + C152263) / C151818 -
                         (C152252 * C151948) / C151814;
    const double C23071 = C150541 * C153;
    const double C23064 = C150541 * C356;
    const double C23062 = C150541 * C351;
    const double C23060 = C150541 * C152;
    const double C23059 = C150541 * C151;
    const double C23057 = C150541 * C352;
    const double C23055 = C150541 * C355;
    const double C23052 = C150541 * C354;
    const double C23050 = C150541 * C353;
    const double C23048 = C150541 * C150;
    const double C23327 = C150541 * C1366;
    const double C23321 = C150541 * C1363;
    const double C23310 = C150541 * C1365;
    const double C23308 = C150541 * C1364;
    const double C23654 = C150541 * C1544;
    const double C23652 = C150541 * C565;
    const double C23651 = C150541 * C560;
    const double C23649 = C150541 * C1091;
    const double C23645 = C150541 * C564;
    const double C23643 = C150541 * C1545;
    const double C23641 = C150541 * C1552;
    const double C23638 = C150541 * C1549;
    const double C23636 = C150541 * C1090;
    const double C23634 = C150541 * C561;
    const double C23632 = C150541 * C1551;
    const double C23630 = C150541 * C1546;
    const double C23628 = C150541 * C563;
    const double C23627 = C150541 * C562;
    const double C23625 = C150541 * C1089;
    const double C23623 = C150541 * C1550;
    const double C24383 = C150541 * C2058;
    const double C24372 = C150541 * C2057;
    const double C24787 = C150541 * C24771;
    const double C24785 = C150541 * C7804;
    const double C25049 = C150541 * C25023;
    const double C25048 = C150541 * C8844;
    const double C25045 = C150541 * C8067;
    const double C25795 = C150541 * C25785;
    const double C26378 = C150541 * C26363;
    const double C26376 = C150541 * C9429;
    const double C26374 = C150541 * C2463;
    const double C26373 = C150541 * C2462;
    const double C26371 = C150541 * C2959;
    const double C26369 = C150541 * C10152;
    const double C26678 = C150541 * C8068;
    const double C26890 = C150541 * C10153;
    const double C26888 = C150541 * C2960;
    const double C26886 = C150541 * C2461;
    const double C27100 = C150541 * C27087;
    const double C46241 = C150541 * C2464;
    const double C48841 = C150541 * C48825;
    const double C48839 = C150541 * C17753;
    const double C49568 = C150541 * C40489;
    const double C135 =
        ((((0 - (C150506 * C150504) / C150505) * ae) / C150505 -
          (0 * be) / C150520 + C150507 / C150505) /
             C150511 -
         ((C150506 * C150534 + 0) * be) / C150505) /
            C150511 -
        ((C150506 * (C150534 / C150511 -
                     ((C150506 * C150541 + C152149) * be) / C150505 + C150531) +
          C152237) *
         be) /
            C150505 +
        C150541 / C150511 - ((C150506 * C150531 + C151796) * be) / C150505;
    const double C137 =
        (C150534 / C150511 - ((C150506 * C150541 + C152149) * be) / C150505 +
         C150531) /
            C150511 -
        ((C150506 * (C150541 / C150511 -
                     ((C150506 * C150531 + C151796) * be) / C150505) +
          C152201) *
         be) /
            C150505 +
        2 * (C150531 / C150511 - (0 * be) / C150505);
    const double C139 =
        (C150541 / C150511 - ((C150506 * C150531 + C151796) * be) / C150505) /
            C150511 -
        ((C150506 * (C150531 / C150511 - (0 * be) / C150505) + C67856) * be) /
            C150505;
    const double C67860 = C150534 / C150511 -
                          ((C150506 * C150541 + C152149) * be) / C150505 +
                          C150531;
    const double C67862 =
        C150541 / C150511 - ((C150506 * C150531 + C151796) * be) / C150505;
    const double C150542 = C150529 - C150540;
    const double C6401 = C6350 + C6351;
    const double C6400 = C6348 + C6101;
    const double C15210 = C15174 + C6678;
    const double C15209 = C15172 + C6673;
    const double C23353 = C23318 + C23054;
    const double C23351 = C23314 + C23056;
    const double C23348 = C23304 + C23305;
    const double C23347 = C23302 + C23053;
    const double C23345 = C23298 + C23051;
    const double C24396 = C24368 + C23624;
    const double C24394 = C24364 + C23622;
    const double C25055 = C25035 + C23633;
    const double C25053 = C25031 + C23631;
    const double C27104 = C27096 + C26370;
    const double C46267 = C46234 + C23644;
    const double C46265 = C46230 + C23635;
    const double C46262 = C46224 + C26372;
    const double C46261 = C46222 + C23629;
    const double C46259 = C46218 + C23626;
    const double C31836 = C31819 + C31641;
    const double C31835 = C31817 + C31640;
    const double C31833 = C31811 + C31635;
    const double C31832 = C31809 + C31636;
    const double C31831 = C31807 + C31637;
    const double C31830 = C31803 + C31804;
    const double C31829 = C31801 + C31634;
    const double C31828 = C31799 + C31633;
    const double C31827 = C31797 + C31632;
    const double C32547 = C32531 + C32031;
    const double C32546 = C32529 + C32030;
    const double C32545 = C32526 + C32023;
    const double C32544 = C32524 + C32022;
    const double C32543 = C32522 + C32021;
    const double C32817 = C32812 + C32813;
    const double C32816 = C32810 + C31806;
    const double C32990 = C32981 + C32982;
    const double C32989 = C32979 + C32528;
    const double C32988 = C32977 + C32028;
    const double C32987 = C32975 + C32027;
    const double C32986 = C32973 + C32026;
    const double C33480 = C33477 + C32984;
    const double C34072 = C34067 + C32035;
    const double C34071 = C34065 + C32034;
    const double C34358 = C34353 + C33863;
    const double C34357 = C34351 + C33862;
    const double C34356 = C34349 + C33861;
    const double C37940 = C37928 + C32041;
    const double C37937 = C37922 + C32040;
    const double C37936 = C37920 + C32036;
    const double C37935 = C37918 + C32029;
    const double C37934 = C37916 + C32025;
    const double C37933 = C37914 + C32024;
    const double C40508 = C40500 + C33865;
    const double C40507 = C40498 + C33866;
    const double C40506 = C40496 + C33867;
    const double C40505 = C40494 + C33864;
    const double C40814 = C40810 + C34213;
    const double C41020 = C41015 + C34212;
    const double C57124 = C57119 + C40502;
    const double C57123 = C57117 + C40503;
    const double C64306 = C64303 + C57121;
    const double C68171 = C68120 + C68121;
    const double C68170 = C68118 + C67871;
    const double C96530 = C96494 + C68448;
    const double C96529 = C96492 + C68443;
    const double C76766 = C76731 + C76467;
    const double C76764 = C76727 + C76469;
    const double C76761 = C76717 + C76718;
    const double C76760 = C76715 + C76466;
    const double C76758 = C76711 + C76464;
    const double C77809 = C77781 + C77037;
    const double C77807 = C77777 + C77035;
    const double C78456 = C78436 + C77046;
    const double C78454 = C78432 + C77044;
    const double C80487 = C80479 + C79759;
    const double C85710 = C85685 + C77057;
    const double C85708 = C85681 + C77048;
    const double C85705 = C85675 + C77042;
    const double C85704 = C85673 + C77039;
    const double C89086 = C89071 + C79761;
    const double C150682 = ae * C150681;
    const double C154 = (3 * C150649 + C150615 * C150681 +
                         (2 * C150638 + C150615 * C150666) * ae) /
                        C150505;
    const double C350 = (C150861 * C150681) / C150505;
    const double C559 = (C150964 * C150681) / C150505;
    const double C6383 = C6085 * C362;
    const double C6367 = C6086 * C362;
    const double C6901 = C6084 * C362;
    const double C23331 = C151796 * C362;
    const double C23853 = C152149 * C362;
    const double C32176 = C151791 * C362;
    const double C68153 = C152201 * C362;
    const double C68137 = C67856 * C362;
    const double C68671 = C152237 * C362;
    const double C76744 = C151796 * C362;
    const double C77266 = C76451 * C362;
    const double C7435 = C7408 + C6670;
    const double C24399 = C24376 + C23637;
    const double C32551 = C32540 + C32039;
    const double C69205 = C69178 + C68440;
    const double C77812 = C77789 + C77050;
    const double C15195 = C6085 * C571;
    const double C15185 = C6086 * C571;
    const double C15650 = C6084 * C571;
    const double C38360 = C151791 * C571;
    const double C46245 = C151796 * C571;
    const double C46706 = C152149 * C571;
    const double C85690 = C151796 * C571;
    const double C86272 = C76451 * C571;
    const double C96515 = C152201 * C571;
    const double C96505 = C67856 * C571;
    const double C96970 = C152237 * C571;
    const double C150776 = C150748 + C150774;
    const double C150724 = ae * C150722;
    const double C150723 = C150615 * C150722;
    const double C150735 = 4 * C150722;
    const double C150891 = C150861 * C150722;
    const double C150994 = C150964 * C150722;
    const double C357 = (C150681 + C150722 * C150874) / C150505;
    const double C566 = (C150681 + C150722 * C150977) / C150505;
    const double C369 =
        (2 * (2 * ae * (C150640 + C150664 * C150874) + C150615 * C150883) +
         C150886 + C150886 +
         C150615 * (C150883 + C150887 + C150887 +
                    C150615 * (2 * ae * (C150664 + C150700 * C150874) +
                               C150615 * (C150707 + C150757 * C150874)))) /
        C150510;
    const double C6395 = C6090 * C1362;
    const double C6378 = C6092 * C1362;
    const double C6361 = C6094 * C1362;
    const double C23340 = C150541 * C1362;
    const double C23324 = C150531 * C1362;
    const double C31642 = C31629 * C1362;
    const double C68131 = C67864 * C1362;
    const double C76753 = C76457 * C1362;
    const double C76737 = C76459 * C1362;
    const double C7432 = C6090 * C1548;
    const double C7424 = C6092 * C1548;
    const double C7416 = C6094 * C1548;
    const double C23647 = C150541 * C1548;
    const double C23639 = C150531 * C1548;
    const double C32038 = C31629 * C1548;
    const double C69186 = C67864 * C1548;
    const double C77060 = C76457 * C1548;
    const double C77052 = C76459 * C1548;
    const double C1098 = (2 * (2 * ae * C150964 * C150889 + C150615 * C151124) +
                          C151127 + C151127 +
                          C150615 * (C151124 + C151128 + C151128 +
                                     C150615 * (2 * ae * C150964 * C150921 +
                                                C150615 * C150964 * C150922))) /
                         C150510;
    const double C8103 = C8078 + C6681;
    const double C26682 = C26674 + C23642;
    const double C37939 = C37926 + C32042;
    const double C69855 = C69830 + C68451;
    const double C80071 = C80063 + C77055;
    const double C578 =
        (2 * (2 * ae * (C150640 + C150664 * C150977) + C150615 * C150986) +
         C150989 + C150989 +
         C150615 * (C150986 + C150990 + C150990 +
                    C150615 * (2 * ae * (C150664 + C150700 * C150977) +
                               C150615 * (C150707 + C150757 * C150977)))) /
        C150510;
    const double C9439 = C6094 * C2460;
    const double C9951 = C6092 * C2460;
    const double C15204 = C6090 * C2460;
    const double C26887 = C150531 * C2460;
    const double C37930 = C31629 * C2460;
    const double C46254 = C150541 * C2460;
    const double C71173 = C67864 * C2460;
    const double C80276 = C76459 * C2460;
    const double C85699 = C76457 * C2460;
    const double C7816 = C6086 * C1370;
    const double C8325 = C6085 * C1370;
    const double C23341 = C152149 * C1370;
    const double C23325 = C151796 * C1370;
    const double C31822 = C151791 * C1370;
    const double C69577 = C67856 * C1370;
    const double C70077 = C152201 * C1370;
    const double C76754 = C76451 * C1370;
    const double C76738 = C151796 * C1370;
    const double C24791 = C24779 + C23311;
    const double C31834 = C31813 + C31814;
    const double C78198 = C78186 + C76724;
    const double C25057 = C25039 + C24373;
    const double C32548 = C32533 + C32032;
    const double C78458 = C78440 + C77786;
    const double C17765 = C6086 * C2468;
    const double C18280 = C6085 * C2468;
    const double C46255 = C152149 * C2468;
    const double C46239 = C151796 * C2468;
    const double C54585 = C151791 * C2468;
    const double C89760 = C151796 * C2468;
    const double C99076 = C67856 * C2468;
    const double C99591 = C152201 * C2468;
    const double C115621 = C76451 * C2468;
    const double C48844 = C48833 + C26375;
    const double C57625 = C57621 + C41017;
    const double C89089 = C89077 + C79764;
    const double C150843 = C150812 + C150840;
    const double C150779 = ae * C150777;
    const double C150778 = C150615 * C150777;
    const double C150796 = 4 * C150777;
    const double C150904 = C150777 * C150874;
    const double C150924 = C150861 * C150777;
    const double C151007 = C150777 * C150977;
    const double C151027 = C150964 * C150777;
    const double C151169 = C151164 + C151165;
    const double C151227 = ae * C151225;
    const double C8087 = C6094 * C1553;
    const double C9745 = C6092 * C1553;
    const double C23656 = C150541 * C1553;
    const double C23640 = C150531 * C1553;
    const double C32043 = C31629 * C1553;
    const double C69839 = C67864 * C1553;
    const double C77069 = C76457 * C1553;
    const double C77053 = C76459 * C1553;
    const double C151085 = C151076 + C150932;
    const double C151215 = ae * C151213;
    const double C2961 = (2 * C151125 + C150964 * C151213) / C150505;
    const double C151295 = C151290 + C151291;
    const double C151111 = C151102 + C151035;
    const double C151186 = ae * C151185;
    const double C7805 = (4 * C151176 + C150861 * C151185) / C150505;
    const double C8845 = (C150964 * C151185) / C150505;
    const double C2063 =
        (C150964 * C151168 + C151280 + C151280 +
         C150615 * (2 * ae * C150964 * C151257 + C150615 * C150964 * C151197)) /
        C150510;
    const double C25058 = C25041 + C25042;
    const double C34070 = C34063 + C32033;
    const double C78459 = C78442 + C78443;
    const double C8088 = C6086 * C1565;
    const double C26671 = C151796 * C1565;
    const double C37925 = C151791 * C1565;
    const double C69840 = C67856 * C1565;
    const double C80060 = C151796 * C1565;
    const double C27102 = C27092 + C26368;
    const double C40813 = C40807 + C34214;
    const double C80485 = C80475 + C79757;
    const double C2965 =
        (2 * C151124 + C150964 * C151212 + C151372 + C151372 +
         C150615 * (2 * ae * (2 * C151130 + C150964 * C151340) +
                    C150615 * (2 * C151131 + C150964 * C151341))) /
        C150510;
    const double C9446 = C6092 * C9430;
    const double C26377 = C150531 * C9430;
    const double C41018 = C31629 * C9430;
    const double C49151 = C150541 * C9430;
    const double C79766 = C76459 * C9430;
    const double C89765 = C76457 * C9430;
    const double C151312 = ae * C151311;
    const double C17754 = (4 * C151302 + C150964 * C151311) / C150505;
    const double C150842 = C150838 * ae;
    const double C149 = 6 * (4 * C150709 + C150615 * C150767) +
                        C150615 * (5 * C150767 + C150615 * C150838);
    const double C349 = 4 * C150709 + C150615 * C150767 + C150838 * C150874;
    const double C558 = 4 * C150709 + C150615 * C150767 + C150838 * C150977;
    const double C743 = C150861 * (5 * C150767 + C150615 * C150838);
    const double C882 = C150964 * (5 * C150767 + C150615 * C150838);
    const double C1088 = C150964 * C150861 * C150838;
    const double C150847 = ae * C150844;
    const double C150846 = C150615 * C150844;
    const double C150943 = C150844 * C150874;
    const double C151046 = C150844 * C150977;
    const double C151073 = C150861 * C150844;
    const double C151099 = C150964 * C150844;
    const double C151198 = C151192 + C151193;
    const double C151245 = C150910 + C151242;
    const double C151272 = ae * C151267;
    const double C151324 = C151318 + C151319;
    const double C151348 = ae * C151343;
    const double C151377 = C150964 * C151343;
    const double C151207 = ae * C151205;
    const double C151389 = C150861 * C151205;
    const double C151401 = C150964 * C151205;
    const double C25024 = (C151185 + C151205 * C150977) / C150505;
    const double C151397 = ae * C151396;
    const double C27088 = (2 * C151279 + C150964 * C151396) / C150505;
    const double C151416 = ae * C151415;
    const double C26364 = (3 * C151238 + C150964 * C151415) / C150505;
    const double C151333 = ae * C151331;
    const double C151421 = C150964 * C151331;
    const double C151408 = C151406 + C151407;
    const double C7808 = (2 * ae *
                              (4 * (2 * C150889 + C150861 * C150907) +
                               C150861 * (3 * C150907 + C150861 * C151257)) +
                          C150615 * (4 * C151168 + C150861 * C151203)) /
                         C150510;
    const double C8848 = (2 * ae * C150964 * (3 * C150907 + C150861 * C151257) +
                          C150615 * C150964 * C151203) /
                         C150510;
    const double C24773 = (5 * (3 * C150883 + C150861 * C151168) +
                           C150861 * (4 * C151168 + C150861 * C151203)) /
                          C150510;
    const double C24774 =
        (2 * ae *
             (5 * (3 * C150907 + C150861 * C151257) +
              C150861 *
                  (4 * C151257 +
                   C150861 *
                       (3 * C150947 +
                        C150861 * (2 * C151069 +
                                   C150861 * (C150750 + C150814 * C150874))))) +
         C150615 *
             (5 * C151203 +
              C150861 *
                  (4 * C151197 +
                   C150861 *
                       (3 * C150948 +
                        C150861 *
                            (2 * C151070 +
                             C150861 * (C150821 + (C150793 * C150794 +
                                                   C150619 * bs[9] *
                                                       std::pow(C150621, 9)) *
                                                      C150622 * C150874)))))) /
        C150510;
    const double C25025 =
        (3 * C150883 + C150861 * C151168 + C151203 * C150977) / C150510;
    const double C25026 =
        (2 * ae *
             (3 * C150907 + C150861 * C151257 +
              (3 * C150947 +
               C150861 *
                   (2 * C151069 + C150861 * (C150750 + C150814 * C150874))) *
                  C150977) +
         C150615 *
             (C151203 +
              (3 * C150948 +
               C150861 * (2 * C151070 +
                          C150861 * (C150821 +
                                     (C150793 * C150794 +
                                      C150619 * bs[9] * std::pow(C150621, 9)) *
                                         C150622 * C150874))) *
                  C150977)) /
        C150510;
    const double C25787 =
        (C150964 * (4 * C151168 + C150861 * C151203)) / C150510;
    const double C32808 =
        (6 * (4 * C151168 + C150861 * C151203) +
         C150861 *
             (5 * C151203 +
              C150861 *
                  (4 * C151197 +
                   C150861 *
                       (3 * C150948 +
                        C150861 *
                            (2 * C151070 +
                             C150861 * (C150821 + (C150793 * C150794 +
                                                   C150619 * bs[9] *
                                                       std::pow(C150621, 9)) *
                                                      C150622 * C150874)))))) /
        C150510;
    const double C32971 =
        (4 * C151168 + C150861 * C151203 +
         (4 * C151197 +
          C150861 *
              (3 * C150948 +
               C150861 * (2 * C151070 +
                          C150861 * (C150821 +
                                     (C150793 * C150794 +
                                      C150619 * bs[9] * std::pow(C150621, 9)) *
                                         C150622 * C150874)))) *
             C150977) /
        C150510;
    const double C33475 =
        (C150964 *
         (5 * C151203 +
          C150861 *
              (4 * C151197 +
               C150861 * (3 * C150948 +
                          C150861 * (2 * C151070 +
                                     C150861 * (C150821 +
                                                (C150793 * C150794 +
                                                 C150619 * bs[9] *
                                                     std::pow(C150621, 9)) *
                                                    C150622 * C150874)))))) /
        C150510;
    const double C34347 =
        (2 * C150964 * C151203 +
         C150964 *
             (C151203 +
              (3 * C150948 +
               C150861 * (2 * C151070 +
                          C150861 * (C150821 +
                                     (C150793 * C150794 +
                                      C150619 * bs[9] * std::pow(C150621, 9)) *
                                         C150622 * C150874))) *
                  C150977)) /
        C150510;
    const double C17757 = (2 * ae *
                               (4 * (2 * C150992 + C150964 * C151010) +
                                C150964 * (3 * C151010 + C150964 * C151360)) +
                           C150615 * (4 * C151294 + C150964 * C151329)) /
                          C150510;
    const double C48827 = (5 * (3 * C150986 + C150964 * C151294) +
                           C150964 * (4 * C151294 + C150964 * C151329)) /
                          C150510;
    const double C48828 =
        (2 * ae *
             (5 * (3 * C151010 + C150964 * C151360) +
              C150964 *
                  (4 * C151360 +
                   C150964 *
                       (3 * C151050 +
                        C150964 * (2 * C151095 +
                                   C150964 * (C150750 + C150814 * C150977))))) +
         C150615 *
             (5 * C151329 +
              C150964 *
                  (4 * C151323 +
                   C150964 *
                       (3 * C151051 +
                        C150964 *
                            (2 * C151096 +
                             C150964 * (C150821 + (C150793 * C150794 +
                                                   C150619 * bs[9] *
                                                       std::pow(C150621, 9)) *
                                                      C150622 * C150977)))))) /
        C150510;
    const double C64301 =
        (6 * (4 * C151294 + C150964 * C151329) +
         C150964 *
             (5 * C151329 +
              C150964 *
                  (4 * C151323 +
                   C150964 *
                       (3 * C151051 +
                        C150964 *
                            (2 * C151096 +
                             C150964 * (C150821 + (C150793 * C150794 +
                                                   C150619 * bs[9] *
                                                       std::pow(C150621, 9)) *
                                                      C150622 * C150977)))))) /
        C150510;
    const double C49565 = C151796 * C9433;
    const double C57420 = C151791 * C9433;
    const double C89074 = C151796 * C9433;
    const double C57118 = C151791 * C40491;
    const double C182 = C135 * C153;
    const double C175 = C135 * C152;
    const double C174 = C135 * C151;
    const double C167 = C135 * C150;
    const double C395 = C135 * C356;
    const double C394 = C135 * C351;
    const double C390 = C135 * C355;
    const double C383 = C135 * C352;
    const double C379 = C135 * C354;
    const double C378 = C135 * C353;
    const double C604 = C135 * C565;
    const double C603 = C135 * C560;
    const double C599 = C135 * C564;
    const double C592 = C135 * C561;
    const double C588 = C135 * C563;
    const double C587 = C135 * C562;
    const double C1110 = C135 * C1091;
    const double C1109 = C135 * C1090;
    const double C1102 = C135 * C1089;
    const double C1382 = C135 * C1365;
    const double C1381 = C135 * C1364;
    const double C1576 = C135 * C1551;
    const double C1575 = C135 * C1550;
    const double C1571 = C135 * C1546;
    const double C1719 = C135 * C1363;
    const double C1920 = C135 * C1549;
    const double C2066 = C135 * C2057;
    const double C2480 = C135 * C2463;
    const double C2479 = C135 * C2462;
    const double C2681 = C135 * C1545;
    const double C2822 = C135 * C2461;
    const double C2968 = C135 * C2959;
    const double C176 = C137 * C153;
    const double C173 = C137 * C152;
    const double C168 = C137 * C151;
    const double C389 = C137 * C356;
    const double C384 = C137 * C351;
    const double C380 = C137 * C355;
    const double C377 = C137 * C352;
    const double C598 = C137 * C565;
    const double C593 = C137 * C560;
    const double C589 = C137 * C564;
    const double C586 = C137 * C561;
    const double C1108 = C137 * C1091;
    const double C1103 = C137 * C1090;
    const double C1383 = C137 * C1366;
    const double C1380 = C137 * C1363;
    const double C1577 = C137 * C1552;
    const double C1574 = C137 * C1549;
    const double C1570 = C137 * C1545;
    const double C1720 = C137 * C1362;
    const double C1921 = C137 * C1548;
    const double C2067 = C137 * C2058;
    const double C2481 = C137 * C2464;
    const double C2478 = C137 * C2461;
    const double C2682 = C137 * C1544;
    const double C2823 = C137 * C2460;
    const double C2969 = C137 * C2960;
    const double C172 = C139 * C153;
    const double C169 = C139 * C152;
    const double C381 = C139 * C356;
    const double C376 = C139 * C351;
    const double C590 = C139 * C565;
    const double C585 = C139 * C560;
    const double C1104 = C139 * C1091;
    const double C1379 = C139 * C1362;
    const double C1578 = C139 * C1553;
    const double C1573 = C139 * C1548;
    const double C1569 = C139 * C1544;
    const double C2477 = C139 * C2460;
    const double C67889 = C67860 * C153;
    const double C67881 = C67860 * C351;
    const double C67878 = C67860 * C152;
    const double C67877 = C67860 * C151;
    const double C67874 = C67860 * C352;
    const double C67869 = C67860 * C353;
    const double C67866 = C67860 * C150;
    const double C68165 = C67860 * C1362;
    const double C68163 = C67860 * C356;
    const double C68149 = C67860 * C1363;
    const double C68139 = C67860 * C355;
    const double C68129 = C67860 * C1364;
    const double C68127 = C67860 * C354;
    const double C68473 = C67860 * C1544;
    const double C68470 = C67860 * C565;
    const double C68469 = C67860 * C560;
    const double C68466 = C67860 * C1091;
    const double C68463 = C67860 * C564;
    const double C68460 = C67860 * C1545;
    const double C68455 = C67860 * C1090;
    const double C68452 = C67860 * C561;
    const double C68449 = C67860 * C1546;
    const double C68446 = C67860 * C563;
    const double C68445 = C67860 * C562;
    const double C68442 = C67860 * C1089;
    const double C69202 = C67860 * C1548;
    const double C69195 = C67860 * C1549;
    const double C69184 = C67860 * C1550;
    const double C69587 = C67860 * C7804;
    const double C69585 = C67860 * C1365;
    const double C69850 = C67860 * C8067;
    const double C69849 = C67860 * C2057;
    const double C69845 = C67860 * C1551;
    const double C70080 = C67860 * C1366;
    const double C70388 = C67860 * C2058;
    const double C70600 = C67860 * C8844;
    const double C71179 = C67860 * C9429;
    const double C71176 = C67860 * C2463;
    const double C71175 = C67860 * C2462;
    const double C71172 = C67860 * C2959;
    const double C71478 = C67860 * C1552;
    const double C71687 = C67860 * C2960;
    const double C71684 = C67860 * C2461;
    const double C71890 = C67860 * C10152;
    const double C96524 = C67860 * C2460;
    const double C99083 = C67860 * C17753;
    const double C99594 = C67860 * C2464;
    const double C67879 = C67862 * C153;
    const double C67876 = C67862 * C152;
    const double C67873 = C67862 * C351;
    const double C67870 = C67862 * C352;
    const double C67867 = C67862 * C151;
    const double C68148 = C67862 * C1362;
    const double C68142 = C67862 * C356;
    const double C68130 = C67862 * C1363;
    const double C68124 = C67862 * C355;
    const double C68462 = C67862 * C565;
    const double C68459 = C67862 * C1544;
    const double C68456 = C67862 * C1091;
    const double C68453 = C67862 * C560;
    const double C68450 = C67862 * C1545;
    const double C68447 = C67862 * C564;
    const double C68444 = C67862 * C561;
    const double C68441 = C67862 * C1090;
    const double C69194 = C67862 * C1548;
    const double C69185 = C67862 * C1549;
    const double C69582 = C67862 * C1366;
    const double C69851 = C67862 * C8068;
    const double C69848 = C67862 * C2058;
    const double C69842 = C67862 * C1552;
    const double C71180 = C67862 * C9430;
    const double C71177 = C67862 * C2464;
    const double C71174 = C67862 * C2461;
    const double C71171 = C67862 * C2960;
    const double C71479 = C67862 * C1553;
    const double C71685 = C67862 * C2460;
    const double C71891 = C67862 * C10153;
    const double C150543 = C150542 * ae;
    const double C6089 =
        (-(be * C150512) / C150510) / C150511 -
        ((2 * ((-C150507 / C150505) / C150511 - (C150535 * be) / C150505) -
          (C150506 * C150542 * be) / C150505) *
         be) /
            C150505 -
        C150536 / C150520;
    const double C6091 =
        (-(C150542 * be) / C150505) / C150511 -
        ((2 * ((-C150525 / C150505) / C150511 - (0 * be) / C150505) -
          C150538 / C150520) *
         be) /
            C150505;
    const double C76456 = -(C150542 * be) / C150505;
    const double C6419 = C6401 + C6351;
    const double C6418 = C6400 + C6101;
    const double C15228 = C15210 + C6678;
    const double C15227 = C15209 + C6673;
    const double C23371 = C23353 + C23054;
    const double C23369 = C23351 + C23056;
    const double C23366 = C23348 + C23305;
    const double C23365 = C23347 + C23053;
    const double C23363 = C23345 + C23051;
    const double C24408 = C24396 + C23624;
    const double C24406 = C24394 + C23622;
    const double C25063 = C25055 + C23633;
    const double C25061 = C25053 + C23631;
    const double C27108 = C27104 + C26370;
    const double C46285 = C46267 + C23644;
    const double C46283 = C46265 + C23635;
    const double C46280 = C46262 + C26372;
    const double C46279 = C46261 + C23629;
    const double C46277 = C46259 + C23626;
    const double C31848 = C31836 + C31641;
    const double C31847 = C31835 + C31640;
    const double C31845 = C31833 + C31635;
    const double C31844 = C31832 + C31636;
    const double C31843 = C31831 + C31637;
    const double C31842 = C31830 + C31804;
    const double C31841 = C31829 + C31634;
    const double C31840 = C31828 + C31633;
    const double C31839 = C31827 + C31632;
    const double C32556 = C32547 + C32031;
    const double C32555 = C32546 + C32030;
    const double C32554 = C32545 + C32023;
    const double C32553 = C32544 + C32022;
    const double C32552 = C32543 + C32021;
    const double C32819 = C32817 + C32813;
    const double C32818 = C32816 + C31806;
    const double C32995 = C32990 + C32982;
    const double C32994 = C32989 + C32528;
    const double C32993 = C32988 + C32028;
    const double C32992 = C32987 + C32027;
    const double C32991 = C32986 + C32026;
    const double C33481 = C33480 + C32984;
    const double C34075 = C34072 + C32035;
    const double C34074 = C34071 + C32034;
    const double C34361 = C34358 + C33863;
    const double C34360 = C34357 + C33862;
    const double C34359 = C34356 + C33861;
    const double C37948 = C37940 + C32041;
    const double C37945 = C37937 + C32040;
    const double C37944 = C37936 + C32036;
    const double C37943 = C37935 + C32029;
    const double C37942 = C37934 + C32025;
    const double C37941 = C37933 + C32024;
    const double C40512 = C40508 + C33865;
    const double C40511 = C40507 + C33866;
    const double C40510 = C40506 + C33867;
    const double C40509 = C40505 + C33864;
    const double C40816 = C40814 + C34213;
    const double C41021 = C41020 + C34212;
    const double C57126 = C57124 + C40502;
    const double C57125 = C57123 + C40503;
    const double C64307 = C64306 + C57121;
    const double C68189 = C68171 + C68121;
    const double C68188 = C68170 + C67871;
    const double C96548 = C96530 + C68448;
    const double C96547 = C96529 + C68443;
    const double C76784 = C76766 + C76467;
    const double C76782 = C76764 + C76469;
    const double C76779 = C76761 + C76718;
    const double C76778 = C76760 + C76466;
    const double C76776 = C76758 + C76464;
    const double C77821 = C77809 + C77037;
    const double C77819 = C77807 + C77035;
    const double C78464 = C78456 + C77046;
    const double C78462 = C78454 + C77044;
    const double C80491 = C80487 + C79759;
    const double C85724 = C85710 + C77057;
    const double C85722 = C85708 + C77048;
    const double C85719 = C85705 + C77042;
    const double C85718 = C85704 + C77039;
    const double C89092 = C89086 + C79761;
    const double C162 =
        (3 * (C150644 + C150647 + C150647 + C150615 * C150675) + C150682 +
         C150682 +
         C150615 * (2 * C150675 + C150679 + C150679 +
                    C150615 * (C150670 + C150674 + C150674 +
                               C150615 * (2 * ae * C150664 +
                                          C150615 *
                                              (C150654 * C150655 +
                                               C150619 * bs[6] *
                                                   std::pow(C150613, 6)) *
                                              C150622)))) /
        C150510;
    const double C183 = C135 * C154;
    const double C181 = C137 * C154;
    const double C177 = C139 * C154;
    const double C171 = C141 * C154;
    const double C6120 = C6090 * C154;
    const double C6118 = C6092 * C154;
    const double C6110 = C6094 * C154;
    const double C23072 = C150541 * C154;
    const double C23070 = C150531 * C154;
    const double C31647 = C31629 * C154;
    const double C67890 = C67860 * C154;
    const double C67888 = C67862 * C154;
    const double C67880 = C67864 * C154;
    const double C76485 = C76457 * C154;
    const double C76483 = C76459 * C154;
    const double C393 = C137 * C350;
    const double C385 = C139 * C350;
    const double C375 = C141 * C350;
    const double C747 = C135 * C350;
    const double C6116 = C6090 * C350;
    const double C6112 = C6092 * C350;
    const double C6102 = C6094 * C350;
    const double C23069 = C150541 * C350;
    const double C23063 = C150531 * C350;
    const double C31645 = C31629 * C350;
    const double C67886 = C67860 * C350;
    const double C67882 = C67862 * C350;
    const double C67872 = C67864 * C350;
    const double C76482 = C76457 * C350;
    const double C76476 = C76459 * C350;
    const double C602 = C137 * C559;
    const double C594 = C139 * C559;
    const double C584 = C141 * C559;
    const double C886 = C135 * C559;
    const double C6698 = C6092 * C559;
    const double C6684 = C6094 * C559;
    const double C7112 = C6090 * C559;
    const double C23650 = C150531 * C559;
    const double C24068 = C150541 * C559;
    const double C32324 = C31629 * C559;
    const double C68468 = C67862 * C559;
    const double C68454 = C67864 * C559;
    const double C68882 = C67860 * C559;
    const double C77063 = C76459 * C559;
    const double C77481 = C76457 * C559;
    const double C7444 = C7435 + C6670;
    const double C24411 = C24399 + C23637;
    const double C32560 = C32551 + C32039;
    const double C69214 = C69205 + C68440;
    const double C77824 = C77812 + C77050;
    const double C150725 = C150689 + C150723;
    const double C150896 = ae * C150891;
    const double C1092 = (C150964 * C150891) / C150505;
    const double C150999 = ae * C150994;
    const double C396 = C137 * C357;
    const double C388 = C139 * C357;
    const double C382 = C141 * C357;
    const double C6390 = C6092 * C357;
    const double C6375 = C6094 * C357;
    const double C6906 = C6090 * C357;
    const double C23067 = C150541 * C357;
    const double C23065 = C150531 * C357;
    const double C31644 = C31629 * C357;
    const double C68160 = C67862 * C357;
    const double C68145 = C67864 * C357;
    const double C68676 = C67860 * C357;
    const double C76480 = C76457 * C357;
    const double C76478 = C76459 * C357;
    const double C605 = C137 * C566;
    const double C597 = C139 * C566;
    const double C591 = C141 * C566;
    const double C6701 = C6092 * C566;
    const double C6691 = C6094 * C566;
    const double C15655 = C6090 * C566;
    const double C23653 = C150531 * C566;
    const double C38361 = C31629 * C566;
    const double C45775 = C150541 * C566;
    const double C68471 = C67862 * C566;
    const double C68461 = C67864 * C566;
    const double C77066 = C76459 * C566;
    const double C86275 = C76457 * C566;
    const double C96975 = C67860 * C566;
    const double C6391 = C6085 * C369;
    const double C6376 = C6086 * C369;
    const double C23335 = C151796 * C369;
    const double C23857 = C152149 * C369;
    const double C32178 = C151791 * C369;
    const double C68161 = C152201 * C369;
    const double C68146 = C67856 * C369;
    const double C76748 = C151796 * C369;
    const double C77270 = C76451 * C369;
    const double C7831 = C7815 + C6361;
    const double C23355 = C23323 + C23324;
    const double C31837 = C31821 + C31642;
    const double C69592 = C69576 + C68131;
    const double C76768 = C76736 + C76737;
    const double C8106 = C8084 + C7416;
    const double C24401 = C24380 + C23639;
    const double C32550 = C32538 + C32038;
    const double C69858 = C69836 + C69186;
    const double C77814 = C77793 + C77052;
    const double C7429 = C6085 * C1098;
    const double C7422 = C6086 * C1098;
    const double C24389 = C151796 * C1098;
    const double C38153 = C151791 * C1098;
    const double C69199 = C152201 * C1098;
    const double C69192 = C67856 * C1098;
    const double C77802 = C151796 * C1098;
    const double C86004 = C76451 * C1098;
    const double C124250 = C152149 * C1098;
    const double C8112 = C8103 + C6681;
    const double C26686 = C26682 + C23642;
    const double C37947 = C37939 + C32042;
    const double C69864 = C69855 + C68451;
    const double C80075 = C80071 + C77055;
    const double C15201 = C6085 * C578;
    const double C15191 = C6086 * C578;
    const double C46249 = C151796 * C578;
    const double C46710 = C152149 * C578;
    const double C54991 = C151791 * C578;
    const double C85696 = C151796 * C578;
    const double C96521 = C152201 * C578;
    const double C96511 = C67856 * C578;
    const double C116019 = C76451 * C578;
    const double C17777 = C17764 + C9439;
    const double C46269 = C46238 + C26887;
    const double C54589 = C54584 + C37930;
    const double C99088 = C99075 + C71173;
    const double C89767 = C89759 + C80276;
    const double C24795 = C24791 + C23311;
    const double C31846 = C31834 + C31814;
    const double C78202 = C78198 + C76724;
    const double C25065 = C25057 + C24373;
    const double C32557 = C32548 + C32032;
    const double C78466 = C78458 + C77786;
    const double C48848 = C48844 + C26375;
    const double C57626 = C57625 + C41017;
    const double C89095 = C89089 + C79764;
    const double C150845 = C150615 * C150843;
    const double C150802 = C150788 + C150779;
    const double C150780 = C150736 + C150778;
    const double C150909 = C150722 + C150904;
    const double C150931 = ae * C150924;
    const double C151132 = C150964 * C150924;
    const double C151253 = 2 * C150924;
    const double C1543 = (C150891 + C150924 * C150977) / C150505;
    const double C151012 = C150722 + C151007;
    const double C151034 = ae * C151027;
    const double C151356 = 2 * C151027;
    const double C151171 = ae * C151169;
    const double C1367 = (3 * C150884 + C150861 * C151169) / C150505;
    const double C2059 = (C150964 * C151169) / C150505;
    const double C1559 = (2 * (2 * ae * C150964 * C150907 + C150615 * C151224) +
                          C151227 + C151227 +
                          C150615 * (C151224 + C151228 + C151228 +
                                     C150615 * (2 * ae * C150964 * C150947 +
                                                C150615 * C150964 * C150948))) /
                         C150510;
    const double C8107 = C8086 + C8087;
    const double C26680 = C26670 + C23640;
    const double C37938 = C37924 + C32043;
    const double C69859 = C69838 + C69839;
    const double C80069 = C80059 + C77053;
    const double C151091 = C151085 + C151090;
    const double C1555 =
        (2 * (2 * ae * (C150889 + C150921 * C150977) + C150615 * C151212) +
         C151215 + C151215 +
         C150615 * (C151212 + C151216 + C151216 +
                    C150615 * (2 * ae * (C150921 + C151069 * C150977) +
                               C150615 * (C150922 + C151070 * C150977)))) /
        C150510;
    const double C2970 = C139 * C2961;
    const double C9436 = C6094 * C2961;
    const double C9954 = C6092 * C2961;
    const double C26889 = C150531 * C2961;
    const double C37931 = C31629 * C2961;
    const double C47021 = C150541 * C2961;
    const double C71170 = C67864 * C2961;
    const double C71688 = C67862 * C2961;
    const double C80278 = C76459 * C2961;
    const double C85701 = C76457 * C2961;
    const double C151297 = ae * C151295;
    const double C2465 = (3 * C150987 + C150964 * C151295) / C150505;
    const double C151117 = C151111 + C151116;
    const double C1375 =
        (3 * C150883 + C150861 * C151168 + C151186 + C151186 +
         C150615 *
             (2 * ae *
                  (3 * C150907 + C150861 * (2 * C150921 + C150861 * C150947)) +
              C150615 * (3 * C150908 +
                         C150861 * (2 * C150922 + C150861 * C150948)))) /
        C150510;
    const double C7827 = C6092 * C7805;
    const double C24782 = C150531 * C7805;
    const double C25277 = C150541 * C7805;
    const double C31816 = C31629 * C7805;
    const double C69588 = C67862 * C7805;
    const double C78189 = C76459 * C7805;
    const double C78678 = C76457 * C7805;
    const double C8858 = C6092 * C8845;
    const double C25047 = C150531 * C8845;
    const double C25581 = C150541 * C8845;
    const double C32535 = C31629 * C8845;
    const double C70601 = C67862 * C8845;
    const double C78448 = C76459 * C8845;
    const double C78982 = C76457 * C8845;
    const double C8852 = C6086 * C2063;
    const double C25578 = C151796 * C2063;
    const double C32537 = C151791 * C2063;
    const double C70595 = C67856 * C2063;
    const double C78979 = C151796 * C2063;
    const double C25066 = C25058 + C25042;
    const double C34073 = C34070 + C32033;
    const double C78467 = C78459 + C78443;
    const double C27106 = C27102 + C26368;
    const double C40815 = C40813 + C34214;
    const double C80489 = C80485 + C79757;
    const double C10160 = C6086 * C2965;
    const double C49148 = C151796 * C2965;
    const double C54583 = C151791 * C2965;
    const double C71885 = C67856 * C2965;
    const double C89491 = C151796 * C2965;
    const double C49570 = C49564 + C26377;
    const double C57423 = C57419 + C41018;
    const double C89087 = C89073 + C79766;
    const double C2473 =
        (3 * C150986 + C150964 * C151294 + C151312 + C151312 +
         C150615 *
             (2 * ae *
                  (3 * C151010 + C150964 * (2 * C151024 + C150964 * C151050)) +
              C150615 * (3 * C151011 +
                         C150964 * (2 * C151025 + C150964 * C151051)))) /
        C150510;
    const double C17773 = C6092 * C17754;
    const double C48836 = C150531 * C17754;
    const double C49358 = C150541 * C17754;
    const double C57623 = C31629 * C17754;
    const double C89082 = C76459 * C17754;
    const double C99084 = C67862 * C17754;
    const double C118617 = C76457 * C17754;
    const double C150849 = C150797 + C150846;
    const double C150950 = C150777 + C150943;
    const double C151053 = C150777 + C151046;
    const double C151082 = ae * C151073;
    const double C151147 = C150964 * C151073;
    const double C151337 = C151073 * C150977;
    const double C151108 = ae * C151099;
    const double C151201 = C150861 * C151198;
    const double C151255 = ae * C151198;
    const double C151283 = C150964 * C151198;
    const double C8069 = (C151169 + C151198 * C150977) / C150505;
    const double C151247 = ae * C151245;
    const double C10154 = (2 * C151225 + C150964 * C151245) / C150505;
    const double C151327 = C150964 * C151324;
    const double C151358 = ae * C151324;
    const double C151381 = C151376 + C151377;
    const double C151390 = C151388 + C151389;
    const double C151402 = ae * C151401;
    const double C25050 = C150531 * C25024;
    const double C34069 = C31629 * C25024;
    const double C78451 = C76459 * C25024;
    const double C8072 =
        (C151168 + C151197 * C150977 + C151397 + C151397 +
         C150615 *
             (2 * ae *
                  (C151257 +
                   (2 * C151069 + C150861 * (C150750 + C150814 * C150874)) *
                       C150977) +
              C150615 * (C151197 +
                         (2 * C151070 +
                          C150861 * (C150821 +
                                     (C150793 * C150794 +
                                      C150619 * bs[9] * std::pow(C150621, 9)) *
                                         C150622 * C150874)) *
                             C150977))) /
        C150510;
    const double C27101 = C150531 * C27088;
    const double C34215 = C31629 * C27088;
    const double C80484 = C76459 * C27088;
    const double C10157 =
        (2 * C151224 + C150964 * C151244 + C151416 + C151416 +
         C150615 *
             (2 * ae *
                  (2 * C151264 +
                   C150964 *
                       (C150947 + (C150750 + C150814 * C150874) * C150977)) +
              C150615 *
                  (2 * C151265 +
                   C150964 * (C150948 + (C150821 + (C150793 * C150794 +
                                                    C150619 * bs[9] *
                                                        std::pow(C150621, 9)) *
                                                       C150622 * C150874) *
                                            C150977)))) /
        C150510;
    const double C26379 = C150531 * C26364;
    const double C41019 = C31629 * C26364;
    const double C79768 = C76459 * C26364;
    const double C151422 = C151420 + C151421;
    const double C151409 = ae * C151408;
    const double C49560 = (4 * C151371 + C150964 * C151408) / C150505;
    const double C24783 = C151796 * C7808;
    const double C33137 = C151791 * C7808;
    const double C78190 = C151796 * C7808;
    const double C25792 = C151796 * C8848;
    const double C33338 = C151791 * C8848;
    const double C79187 = C151796 * C8848;
    const double C32814 = C151791 * C24773;
    const double C32983 = C151791 * C25025;
    const double C33478 = C151791 * C25787;
    const double C48837 = C151796 * C17757;
    const double C64634 = C151791 * C17757;
    const double C118117 = C151796 * C17757;
    const double C64304 = C151791 * C48827;
    const double C134 =
        ((ae * -2 * C150504) / C150517 -
         (((C150506 * C150518) / C150510 + 2 * C150534) * be) / C150505) /
            C150511 -
        ((C150506 *
              (C150518 / C150517 -
               (((C150506 * C150543) / C150505 + 2 * C150541) * be) / C150505 -
               C150536 / C150520) +
          2 * (C150534 / C150511 -
               ((C150506 * C150541 + C152149) * be) / C150505 + C150531)) *
         be) /
            C150505 +
        C150543 / C150520 - ((2 * C150531 - C150538 / C150520) * be) / C150505;
    const double C136 =
        (C150518 / C150517 -
         (((C150506 * C150543) / C150505 + 2 * C150541) * be) / C150505 -
         C150536 / C150520) /
            C150511 -
        ((C150506 * (C150543 / C150520 -
                     ((2 * C150531 - C150538 / C150520) * be) / C150505) +
          2 * (C150541 / C150511 -
               ((C150506 * C150531 + C151796) * be) / C150505)) *
         be) /
            C150505 +
        (-2 * C150536) / (C150505 * 4 * C150510);
    const double C138 = (C150543 / C150520 -
                         ((2 * C150531 - C150538 / C150520) * be) / C150505) /
                            C150511 -
                        ((2 * (C150531 / C150511 - (0 * be) / C150505) -
                          C150538 / (C150505 * 4 * C150510)) *
                         be) /
                            C150505;
    const double C23043 = C150543 / C150505;
    const double C67859 =
        C150518 / C150517 -
        (((C150506 * C150543) / C150505 + 2 * C150541) * be) / C150505 -
        C150536 / C150520;
    const double C67861 =
        C150543 / C150520 - ((2 * C150531 - C150538 / C150520) * be) / C150505;
    const double C6392 = C6089 * C344;
    const double C6380 = C6089 * C339;
    const double C6368 = C6089 * C343;
    const double C6362 = C6089 * C340;
    const double C6356 = C6089 * C342;
    const double C6344 = C6089 * C341;
    const double C6900 = C6089 * C338;
    const double C7430 = C6089 * C1085;
    const double C7417 = C6089 * C1084;
    const double C7412 = C6089 * C1083;
    const double C7823 = C6089 * C1357;
    const double C7811 = C6089 * C1356;
    const double C8092 = C6089 * C1539;
    const double C8080 = C6089 * C1538;
    const double C8074 = C6089 * C1534;
    const double C8326 = C6089 * C1355;
    const double C8634 = C6089 * C1537;
    const double C8855 = C6089 * C2053;
    const double C9742 = C6089 * C1533;
    const double C10163 = C6089 * C2955;
    const double C15202 = C6089 * C553;
    const double C15192 = C6089 * C548;
    const double C15186 = C6089 * C552;
    const double C15180 = C6089 * C549;
    const double C15178 = C6089 * C551;
    const double C15168 = C6089 * C550;
    const double C15649 = C6089 * C547;
    const double C17770 = C6089 * C2455;
    const double C17760 = C6089 * C2454;
    const double C18281 = C6089 * C2453;
    const double C6389 = C6091 * C345;
    const double C6382 = C6091 * C338;
    const double C6371 = C6091 * C344;
    const double C6364 = C6091 * C339;
    const double C6353 = C6091 * C343;
    const double C6346 = C6091 * C340;
    const double C6902 = C6091 * C346;
    const double C7428 = C6091 * C1086;
    const double C7419 = C6091 * C1085;
    const double C7410 = C6091 * C1084;
    const double C7820 = C6091 * C1358;
    const double C7813 = C6091 * C1355;
    const double C8089 = C6091 * C1540;
    const double C8082 = C6091 * C1537;
    const double C8076 = C6091 * C1533;
    const double C8324 = C6091 * C1354;
    const double C8632 = C6091 * C1536;
    const double C8853 = C6091 * C2054;
    const double C9740 = C6091 * C1532;
    const double C10161 = C6091 * C2956;
    const double C15200 = C6091 * C554;
    const double C15194 = C6091 * C547;
    const double C15188 = C6091 * C553;
    const double C15182 = C6091 * C548;
    const double C15176 = C6091 * C552;
    const double C15170 = C6091 * C549;
    const double C15651 = C6091 * C555;
    const double C17768 = C6091 * C2456;
    const double C17762 = C6091 * C2453;
    const double C18279 = C6091 * C2452;
    const double C76752 = C76456 * C1354;
    const double C76745 = C76456 * C344;
    const double C76741 = C76456 * C339;
    const double C76733 = C76456 * C1355;
    const double C76729 = C76456 * C343;
    const double C76725 = C76456 * C340;
    const double C76720 = C76456 * C1356;
    const double C76713 = C76456 * C342;
    const double C76709 = C76456 * C341;
    const double C77269 = C76456 * C345;
    const double C77265 = C76456 * C338;
    const double C77803 = C76456 * C1085;
    const double C77799 = C76456 * C1536;
    const double C77791 = C76456 * C1537;
    const double C77787 = C76456 * C1084;
    const double C77783 = C76456 * C1083;
    const double C77779 = C76456 * C1538;
    const double C78191 = C76456 * C7801;
    const double C78184 = C76456 * C1357;
    const double C78445 = C76456 * C8064;
    const double C78438 = C76456 * C2053;
    const double C78434 = C76456 * C1539;
    const double C78430 = C76456 * C1534;
    const double C78676 = C76456 * C1358;
    const double C78980 = C76456 * C2054;
    const double C79188 = C76456 * C8841;
    const double C80065 = C76456 * C1533;
    const double C80061 = C76456 * C1540;
    const double C80481 = C76456 * C2955;
    const double C80477 = C76456 * C10149;
    const double C85697 = C76456 * C553;
    const double C85693 = C76456 * C1532;
    const double C85687 = C76456 * C548;
    const double C85683 = C76456 * C552;
    const double C85679 = C76456 * C549;
    const double C85677 = C76456 * C551;
    const double C85671 = C76456 * C550;
    const double C86003 = C76456 * C1086;
    const double C86271 = C76456 * C547;
    const double C89079 = C76456 * C2455;
    const double C89075 = C76456 * C9426;
    const double C89069 = C76456 * C2454;
    const double C89492 = C76456 * C2956;
    const double C89761 = C76456 * C2453;
    const double C115620 = C76456 * C2452;
    const double C116018 = C76456 * C554;
    const double C118118 = C76456 * C17750;
    const double C118615 = C76456 * C2456;
    const double C6437 = C6419 + C6352;
    const double C6436 = C6418 + C6349;
    const double C15246 = C15228 + C15175;
    const double C15245 = C15227 + C15173;
    const double C23389 = C23371 + C23319;
    const double C23387 = C23369 + C23315;
    const double C23384 = C23366 + C23306;
    const double C23383 = C23365 + C23303;
    const double C23381 = C23363 + C23299;
    const double C24420 = C24408 + C24369;
    const double C24418 = C24406 + C24365;
    const double C25071 = C25063 + C25036;
    const double C25069 = C25061 + C25032;
    const double C27112 = C27108 + C27097;
    const double C46303 = C46285 + C46235;
    const double C46301 = C46283 + C46231;
    const double C46298 = C46280 + C46225;
    const double C46297 = C46279 + C46223;
    const double C46295 = C46277 + C46219;
    const double C31860 = C31848 + C31820;
    const double C31859 = C31847 + C31818;
    const double C31857 = C31845 + C31812;
    const double C31856 = C31844 + C31810;
    const double C31855 = C31843 + C31808;
    const double C31854 = C31842 + C31805;
    const double C31853 = C31841 + C31802;
    const double C31852 = C31840 + C31800;
    const double C31851 = C31839 + C31798;
    const double C32565 = C32556 + C32532;
    const double C32564 = C32555 + C32530;
    const double C32563 = C32554 + C32527;
    const double C32562 = C32553 + C32525;
    const double C32561 = C32552 + C32523;
    const double C32820 = C32818 + C32811;
    const double C32999 = C32994 + C32980;
    const double C32998 = C32993 + C32978;
    const double C32997 = C32992 + C32976;
    const double C32996 = C32991 + C32974;
    const double C34078 = C34075 + C34068;
    const double C34077 = C34074 + C34066;
    const double C34364 = C34361 + C34354;
    const double C34363 = C34360 + C34352;
    const double C34362 = C34359 + C34350;
    const double C37956 = C37948 + C37929;
    const double C37953 = C37945 + C37923;
    const double C37952 = C37944 + C37921;
    const double C37951 = C37943 + C37919;
    const double C37950 = C37942 + C37917;
    const double C37949 = C37941 + C37915;
    const double C40516 = C40512 + C40501;
    const double C40515 = C40511 + C40499;
    const double C40514 = C40510 + C40497;
    const double C40513 = C40509 + C40495;
    const double C40818 = C40816 + C40811;
    const double C41022 = C41021 + C41016;
    const double C57128 = C57126 + C57120;
    const double C57127 = C57125 + C57118;
    const double C68207 = C68189 + C68122;
    const double C68206 = C68188 + C68119;
    const double C96566 = C96548 + C96495;
    const double C96565 = C96547 + C96493;
    const double C76802 = C76784 + C76732;
    const double C76800 = C76782 + C76728;
    const double C76797 = C76779 + C76719;
    const double C76796 = C76778 + C76716;
    const double C76794 = C76776 + C76712;
    const double C77833 = C77821 + C77782;
    const double C77831 = C77819 + C77778;
    const double C78472 = C78464 + C78437;
    const double C78470 = C78462 + C78433;
    const double C80495 = C80491 + C80480;
    const double C85738 = C85724 + C85686;
    const double C85736 = C85722 + C85682;
    const double C85733 = C85719 + C85676;
    const double C85732 = C85718 + C85674;
    const double C89098 = C89092 + C89072;
    const double C6406 = C6366 + C6102;
    const double C23357 = C23330 + C23063;
    const double C32182 = C32175 + C31645;
    const double C68176 = C68136 + C67872;
    const double C76770 = C76743 + C76476;
    const double C15215 = C15184 + C6684;
    const double C46271 = C46244 + C23650;
    const double C38364 = C38359 + C32324;
    const double C96535 = C96504 + C68454;
    const double C85712 = C85689 + C77063;
    const double C7453 = C7444 + C7409;
    const double C24423 = C24411 + C24377;
    const double C32569 = C32560 + C32541;
    const double C69223 = C69214 + C69179;
    const double C77836 = C77824 + C77790;
    const double C150726 = C150725 + C150712;
    const double C370 =
        (3 * (C150862 + C150866 + C150866 + C150615 * C150900) + C150896 +
         C150896 +
         C150615 * (2 * C150900 + C150897 + C150897 +
                    C150615 * (C150890 + C150898 + C150898 +
                               C150615 * (2 * ae * C150861 * C150700 +
                                          C150615 * C150861 * C150757)))) /
        C150510;
    const double C1111 = C137 * C1092;
    const double C1107 = C139 * C1092;
    const double C1105 = C141 * C1092;
    const double C6695 = C6092 * C1092;
    const double C6687 = C6094 * C1092;
    const double C7115 = C6090 * C1092;
    const double C23648 = C150531 * C1092;
    const double C24070 = C150541 * C1092;
    const double C32325 = C31629 * C1092;
    const double C68465 = C67862 * C1092;
    const double C68457 = C67864 * C1092;
    const double C68885 = C67860 * C1092;
    const double C77061 = C76459 * C1092;
    const double C77483 = C76457 * C1092;
    const double C579 =
        (3 * (C150965 + C150969 + C150969 + C150615 * C151003) + C150999 +
         C150999 +
         C150615 * (2 * C151003 + C151000 + C151000 +
                    C150615 * (C150993 + C151001 + C151001 +
                               C150615 * (2 * ae * C150964 * C150700 +
                                          C150615 * C150964 * C150757)))) /
        C150510;
    const double C6409 = C6374 + C6375;
    const double C23359 = C23334 + C23065;
    const double C32183 = C32177 + C31644;
    const double C68179 = C68144 + C68145;
    const double C76772 = C76747 + C76478;
    const double C15218 = C15190 + C6691;
    const double C46273 = C46248 + C23653;
    const double C54994 = C54990 + C38361;
    const double C96538 = C96510 + C68461;
    const double C85715 = C85695 + C77066;
    const double C7837 = C7831 + C6361;
    const double C23373 = C23355 + C23324;
    const double C31849 = C31837 + C31642;
    const double C69598 = C69592 + C68131;
    const double C76786 = C76768 + C76737;
    const double C8115 = C8106 + C7416;
    const double C24413 = C24401 + C23639;
    const double C32559 = C32550 + C32038;
    const double C69867 = C69858 + C69186;
    const double C77826 = C77814 + C77052;
    const double C8121 = C8112 + C8079;
    const double C26690 = C26686 + C26675;
    const double C37955 = C37947 + C37927;
    const double C69873 = C69864 + C69831;
    const double C80079 = C80075 + C80064;
    const double C17783 = C17777 + C9439;
    const double C46287 = C46269 + C26887;
    const double C54591 = C54589 + C37930;
    const double C99094 = C99088 + C71173;
    const double C89769 = C89767 + C80276;
    const double C24799 = C24795 + C24780;
    const double C31858 = C31846 + C31815;
    const double C78206 = C78202 + C78187;
    const double C25073 = C25065 + C25040;
    const double C32566 = C32557 + C32534;
    const double C78474 = C78466 + C78441;
    const double C48852 = C48848 + C48834;
    const double C57627 = C57626 + C57622;
    const double C89101 = C89095 + C89078;
    const double C150811 = C150802 + C150779;
    const double C150781 = C150780 + C150762;
    const double C150914 = ae * C150909;
    const double C1361 = (2 * C150891 + C150861 * C150909) / C150505;
    const double C1547 = (C150964 * C150909) / C150505;
    const double C151137 = ae * C151132;
    const double C1568 = C141 * C1543;
    const double C2683 = C139 * C1543;
    const double C6704 = C6092 * C1543;
    const double C6688 = C6094 * C1543;
    const double C23655 = C150531 * C1543;
    const double C38362 = C31629 * C1543;
    const double C46509 = C150541 * C1543;
    const double C68474 = C67862 * C1543;
    const double C68458 = C67864 * C1543;
    const double C77068 = C76459 * C1543;
    const double C86277 = C76457 * C1543;
    const double C151017 = ae * C151012;
    const double C2459 = (2 * C150994 + C150964 * C151012) / C150505;
    const double C1369 =
        (2 * (2 * ae * (2 * C150889 + C150861 * C150907) + C150615 * C151168) +
         C151171 + C151171 +
         C150615 * (C151168 + C151172 + C151172 +
                    C150615 * (2 * ae * (2 * C150921 + C150861 * C150947) +
                               C150615 * (2 * C150922 + C150861 * C150948)))) /
        C150510;
    const double C1384 = C139 * C1367;
    const double C7818 = C6094 * C1367;
    const double C8329 = C6092 * C1367;
    const double C23342 = C150541 * C1367;
    const double C23326 = C150531 * C1367;
    const double C31824 = C31629 * C1367;
    const double C69579 = C67864 * C1367;
    const double C70081 = C67862 * C1367;
    const double C76755 = C76457 * C1367;
    const double C76739 = C76459 * C1367;
    const double C2068 = C139 * C2059;
    const double C8095 = C6094 * C2059;
    const double C8637 = C6092 * C2059;
    const double C24392 = C150541 * C2059;
    const double C24382 = C150531 * C2059;
    const double C32037 = C31629 * C2059;
    const double C69847 = C67864 * C2059;
    const double C70389 = C67862 * C2059;
    const double C77805 = C76457 * C2059;
    const double C77795 = C76459 * C2059;
    const double C8631 = C6086 * C1559;
    const double C24385 = C151796 * C1559;
    const double C38156 = C151791 * C1559;
    const double C70383 = C67856 * C1559;
    const double C77798 = C151796 * C1559;
    const double C8116 = C8107 + C8087;
    const double C26684 = C26680 + C23640;
    const double C37946 = C37938 + C32043;
    const double C69868 = C69859 + C69839;
    const double C80073 = C80069 + C77053;
    const double C9739 = C6086 * C1555;
    const double C47020 = C151796 * C1555;
    const double C54791 = C151791 * C1555;
    const double C71473 = C67856 * C1555;
    const double C85692 = C151796 * C1555;
    const double C10168 = C10159 + C9436;
    const double C49153 = C49147 + C26889;
    const double C54588 = C54582 + C37931;
    const double C71893 = C71884 + C71170;
    const double C89495 = C89490 + C80278;
    const double C2467 =
        (2 * (2 * ae * (2 * C150992 + C150964 * C151010) + C150615 * C151294) +
         C151297 + C151297 +
         C150615 * (C151294 + C151298 + C151298 +
                    C150615 * (2 * ae * (2 * C151024 + C150964 * C151050) +
                               C150615 * (2 * C151025 + C150964 * C151051)))) /
        C150510;
    const double C2482 = C139 * C2465;
    const double C9444 = C6094 * C2465;
    const double C18284 = C6092 * C2465;
    const double C46256 = C150541 * C2465;
    const double C46240 = C150531 * C2465;
    const double C54586 = C31629 * C2465;
    const double C71178 = C67864 * C2465;
    const double C89764 = C76459 * C2465;
    const double C99595 = C67862 * C2465;
    const double C115622 = C76457 * C2465;
    const double C7819 = C6086 * C1375;
    const double C25274 = C151796 * C1375;
    const double C31825 = C151791 * C1375;
    const double C69580 = C67856 * C1375;
    const double C78675 = C151796 * C1375;
    const double C24792 = C24781 + C24782;
    const double C33139 = C33136 + C31816;
    const double C78199 = C78188 + C78189;
    const double C25798 = C25791 + C25047;
    const double C33340 = C33337 + C32535;
    const double C79193 = C79186 + C78448;
    const double C25074 = C25066 + C25043;
    const double C34076 = C34073 + C34064;
    const double C78475 = C78467 + C78444;
    const double C27110 = C27106 + C27093;
    const double C40817 = C40815 + C40808;
    const double C80493 = C80489 + C80476;
    const double C49572 = C49570 + C26377;
    const double C57424 = C57423 + C41018;
    const double C89093 = C89087 + C79766;
    const double C17767 = C6086 * C2473;
    const double C49355 = C151796 * C2473;
    const double C62633 = C151791 * C2473;
    const double C99078 = C67856 * C2473;
    const double C118614 = C151796 * C2473;
    const double C48845 = C48835 + C48836;
    const double C64636 = C64633 + C57623;
    const double C118122 = C118116 + C89082;
    const double C150850 = C150849 + C150826;
    const double C150956 = ae * C150950;
    const double C151254 = C150861 * C150950;
    const double C151266 = C150964 * C150950;
    const double C1554 = (C150909 + C150950 * C150977) / C150505;
    const double C151059 = ae * C151053;
    const double C151357 = C150964 * C151053;
    const double C151154 = ae * C151147;
    const double C151342 = C150924 + C151337;
    const double C151204 = C151191 + C151201;
    const double C151285 = ae * C151283;
    const double C8100 = C6094 * C8069;
    const double C26679 = C150531 * C8069;
    const double C32044 = C31629 * C8069;
    const double C69852 = C67864 * C8069;
    const double C80068 = C76459 * C8069;
    const double C1566 =
        (2 * (2 * ae * (C150907 + C150947 * C150977) + C150615 * C151244) +
         C151247 + C151247 +
         C150615 *
             (C151244 + C151248 + C151248 +
              C150615 *
                  (2 * ae *
                       (C150947 + (C150750 + C150814 * C150874) * C150977) +
                   C150615 * (C150948 + (C150821 + (C150793 * C150794 +
                                                    C150619 * bs[9] *
                                                        std::pow(C150621, 9)) *
                                                       C150622 * C150874) *
                                            C150977)))) /
        C150510;
    const double C10167 = C6094 * C10154;
    const double C26891 = C150531 * C10154;
    const double C37932 = C31629 * C10154;
    const double C71892 = C67864 * C10154;
    const double C80280 = C76459 * C10154;
    const double C151330 = C151317 + C151327;
    const double C151383 = ae * C151381;
    const double C9431 = (3 * C151213 + C150964 * C151381) / C150505;
    const double C151391 = ae * C151390;
    const double C24772 = (5 * C151185 + C150861 * C151390) / C150505;
    const double C25786 = (C150964 * C151390) / C150505;
    const double C8849 =
        (C150964 * C151203 + C151402 + C151402 +
         C150615 *
             (2 * ae * C150964 *
                  (3 * C150947 +
                   C150861 * (2 * C151069 +
                              C150861 * (C150750 + C150814 * C150874))) +
              C150615 * C150964 *
                  (3 * C150948 +
                   C150861 * (2 * C151070 +
                              C150861 * (C150821 + (C150793 * C150794 +
                                                    C150619 * bs[9] *
                                                        std::pow(C150621, 9)) *
                                                       C150622 * C150874))))) /
        C150510;
    const double C151423 = ae * C151422;
    const double C48826 = (5 * C151311 + C150964 * C151422) / C150505;
    const double C9434 =
        (3 * C151212 + C150964 * C151380 + C151409 + C151409 +
         C150615 *
             (2 * ae *
                  (3 * C151340 +
                   C150964 *
                       (2 * C151144 +
                        C150964 * (C151069 + C150861 * C150814 * C150977))) +
              C150615 * (3 * C151341 +
                         C150964 * (2 * C151145 +
                                    C150964 * (C151070 +
                                               C150861 *
                                                   (C150793 * C150794 +
                                                    C150619 * bs[9] *
                                                        std::pow(C150621, 9)) *
                                                   C150622 * C150977))))) /
        C150510;
    const double C49569 = C150531 * C49560;
    const double C57624 = C31629 * C49560;
    const double C89084 = C76459 * C49560;
    const double C32821 = C32819 + C32814;
    const double C33000 = C32995 + C32983;
    const double C33482 = C33481 + C33478;
    const double C64308 = C64307 + C64304;
    const double C23339 = C23043 * C1354;
    const double C23332 = C23043 * C344;
    const double C23328 = C23043 * C339;
    const double C23320 = C23043 * C1355;
    const double C23316 = C23043 * C343;
    const double C23312 = C23043 * C340;
    const double C23307 = C23043 * C1356;
    const double C23300 = C23043 * C342;
    const double C23296 = C23043 * C341;
    const double C23856 = C23043 * C345;
    const double C23852 = C23043 * C338;
    const double C24390 = C23043 * C1085;
    const double C24386 = C23043 * C1536;
    const double C24378 = C23043 * C1537;
    const double C24374 = C23043 * C1084;
    const double C24370 = C23043 * C1083;
    const double C24366 = C23043 * C1538;
    const double C24784 = C23043 * C7801;
    const double C24777 = C23043 * C1357;
    const double C25044 = C23043 * C8064;
    const double C25037 = C23043 * C2053;
    const double C25033 = C23043 * C1539;
    const double C25029 = C23043 * C1534;
    const double C25275 = C23043 * C1358;
    const double C25579 = C23043 * C2054;
    const double C25793 = C23043 * C8841;
    const double C26676 = C23043 * C1533;
    const double C26672 = C23043 * C1540;
    const double C27098 = C23043 * C2955;
    const double C27094 = C23043 * C10149;
    const double C46253 = C23043 * C2452;
    const double C46246 = C23043 * C553;
    const double C46242 = C23043 * C548;
    const double C46236 = C23043 * C2453;
    const double C46232 = C23043 * C552;
    const double C46228 = C23043 * C549;
    const double C46226 = C23043 * C2454;
    const double C46220 = C23043 * C551;
    const double C46216 = C23043 * C550;
    const double C46709 = C23043 * C554;
    const double C46705 = C23043 * C547;
    const double C47017 = C23043 * C1532;
    const double C48838 = C23043 * C17750;
    const double C48831 = C23043 * C2455;
    const double C49149 = C23043 * C2956;
    const double C49356 = C23043 * C2456;
    const double C49566 = C23043 * C9426;
    const double C124249 = C23043 * C1086;
    const double C68162 = C67859 * C344;
    const double C68150 = C67859 * C339;
    const double C68138 = C67859 * C343;
    const double C68132 = C67859 * C340;
    const double C68126 = C67859 * C342;
    const double C68114 = C67859 * C341;
    const double C68670 = C67859 * C338;
    const double C69200 = C67859 * C1085;
    const double C69187 = C67859 * C1084;
    const double C69182 = C67859 * C1083;
    const double C69584 = C67859 * C1357;
    const double C69572 = C67859 * C1356;
    const double C69844 = C67859 * C1539;
    const double C69832 = C67859 * C1538;
    const double C69826 = C67859 * C1534;
    const double C70078 = C67859 * C1355;
    const double C70386 = C67859 * C1537;
    const double C70598 = C67859 * C2053;
    const double C71476 = C67859 * C1533;
    const double C71888 = C67859 * C2955;
    const double C96522 = C67859 * C553;
    const double C96512 = C67859 * C548;
    const double C96506 = C67859 * C552;
    const double C96500 = C67859 * C549;
    const double C96498 = C67859 * C551;
    const double C96488 = C67859 * C550;
    const double C96969 = C67859 * C547;
    const double C99081 = C67859 * C2455;
    const double C99071 = C67859 * C2454;
    const double C99592 = C67859 * C2453;
    const double C68159 = C67861 * C345;
    const double C68152 = C67861 * C338;
    const double C68141 = C67861 * C344;
    const double C68134 = C67861 * C339;
    const double C68123 = C67861 * C343;
    const double C68116 = C67861 * C340;
    const double C68672 = C67861 * C346;
    const double C69198 = C67861 * C1086;
    const double C69189 = C67861 * C1085;
    const double C69180 = C67861 * C1084;
    const double C69581 = C67861 * C1358;
    const double C69574 = C67861 * C1355;
    const double C69841 = C67861 * C1540;
    const double C69834 = C67861 * C1537;
    const double C69828 = C67861 * C1533;
    const double C70076 = C67861 * C1354;
    const double C70384 = C67861 * C1536;
    const double C70596 = C67861 * C2054;
    const double C71474 = C67861 * C1532;
    const double C71886 = C67861 * C2956;
    const double C96520 = C67861 * C554;
    const double C96514 = C67861 * C547;
    const double C96508 = C67861 * C553;
    const double C96502 = C67861 * C548;
    const double C96496 = C67861 * C552;
    const double C96490 = C67861 * C549;
    const double C96971 = C67861 * C555;
    const double C99079 = C67861 * C2456;
    const double C99073 = C67861 * C2453;
    const double C99590 = C67861 * C2452;
    const double C6415 = C6392 + C6393;
    const double C6410 = C6380 + C6111;
    const double C6407 = C6368 + C6369;
    const double C6404 = C6362 + C6104;
    const double C6403 = C6356 + C6357;
    const double C6398 = C6344 + C6099;
    const double C6909 = C6900 + C6116;
    const double C7443 = C7430 + C6696;
    const double C7438 = C7417 + C6685;
    const double C7437 = C7412 + C6672;
    const double C7834 = C7823 + C7824;
    const double C7829 = C7811 + C6359;
    const double C8109 = C8092 + C8093;
    const double C8104 = C8080 + C7414;
    const double C8101 = C8074 + C6679;
    const double C8333 = C8326 + C6379;
    const double C8641 = C8634 + C7425;
    const double C8862 = C8855 + C8097;
    const double C9749 = C9742 + C6690;
    const double C10170 = C10163 + C9438;
    const double C15224 = C15202 + C6700;
    const double C15219 = C15192 + C6699;
    const double C15216 = C15186 + C6693;
    const double C15213 = C15180 + C6682;
    const double C15212 = C15178 + C6676;
    const double C15207 = C15168 + C6675;
    const double C15658 = C15649 + C7112;
    const double C17780 = C17770 + C9442;
    const double C17775 = C17760 + C9441;
    const double C18288 = C18281 + C9950;
    const double C6414 = C6389 + C6390;
    const double C6411 = C6382 + C6112;
    const double C6408 = C6371 + C6372;
    const double C6405 = C6364 + C6103;
    const double C6402 = C6353 + C6354;
    const double C6399 = C6346 + C6100;
    const double C7439 = C7419 + C6686;
    const double C7436 = C7410 + C6671;
    const double C7833 = C7820 + C7821;
    const double C7830 = C7813 + C6360;
    const double C8108 = C8089 + C8090;
    const double C8105 = C8082 + C7415;
    const double C8102 = C8076 + C6680;
    const double C8332 = C8324 + C6378;
    const double C8640 = C8632 + C7424;
    const double C8861 = C8853 + C8096;
    const double C9748 = C9740 + C6689;
    const double C10169 = C10161 + C9437;
    const double C15223 = C15200 + C6701;
    const double C15220 = C15194 + C6698;
    const double C15217 = C15188 + C6692;
    const double C15214 = C15182 + C6683;
    const double C15211 = C15176 + C6677;
    const double C15208 = C15170 + C6674;
    const double C17779 = C17768 + C9443;
    const double C17776 = C17762 + C9440;
    const double C18287 = C18279 + C9951;
    const double C76774 = C76752 + C76753;
    const double C76771 = C76745 + C76477;
    const double C76769 = C76741 + C76475;
    const double C76767 = C76733 + C76734;
    const double C76765 = C76729 + C76468;
    const double C76763 = C76725 + C76470;
    const double C76762 = C76720 + C76721;
    const double C76759 = C76713 + C76465;
    const double C76757 = C76709 + C76463;
    const double C77277 = C77269 + C76480;
    const double C77275 = C77265 + C76482;
    const double C77818 = C77803 + C77062;
    const double C77816 = C77799 + C77060;
    const double C77813 = C77791 + C77051;
    const double C77811 = C77787 + C77049;
    const double C77810 = C77783 + C77038;
    const double C77808 = C77779 + C77036;
    const double C78200 = C78191 + C78192;
    const double C78197 = C78184 + C76723;
    const double C78460 = C78445 + C78446;
    const double C78457 = C78438 + C77785;
    const double C78455 = C78434 + C77045;
    const double C78453 = C78430 + C77043;
    const double C78682 = C78676 + C76740;
    const double C78986 = C78980 + C77796;
    const double C79194 = C79188 + C78449;
    const double C80072 = C80065 + C77056;
    const double C80070 = C80061 + C77054;
    const double C80488 = C80481 + C79760;
    const double C80486 = C80477 + C79758;
    const double C85716 = C85697 + C77065;
    const double C85714 = C85693 + C77067;
    const double C85711 = C85687 + C77064;
    const double C85709 = C85683 + C77058;
    const double C85707 = C85679 + C77047;
    const double C85706 = C85677 + C77041;
    const double C85703 = C85671 + C77040;
    const double C86279 = C86271 + C77481;
    const double C89090 = C89079 + C79763;
    const double C89088 = C89075 + C79765;
    const double C89085 = C89069 + C79762;
    const double C89496 = C89492 + C80277;
    const double C89768 = C89761 + C80275;
    const double C115625 = C115620 + C85699;
    const double C116024 = C116018 + C86275;
    const double C118123 = C118118 + C89081;
    const double C118620 = C118615 + C89763;
    const double C31872 = C31860 * C152080;
    const double C37689 = C31860 * C152188;
    const double C54363 = C31860 * C45770;
    const double C134450 = C31860 * C96046;
    const double C142659 = C31860 * C152254;
    const double C31871 = C31859 * C152080;
    const double C37687 = C31859 * C152188;
    const double C54358 = C31859 * C45770;
    const double C134448 = C31859 * C96046;
    const double C142654 = C31859 * C152254;
    const double C31869 = C31857 * C152080;
    const double C37685 = C31857 * C152188;
    const double C56065 = C31857 * C45770;
    const double C134446 = C31857 * C96046;
    const double C144337 = C31857 * C152254;
    const double C31868 = C31856 * C152080;
    const double C37683 = C31856 * C152188;
    const double C54355 = C31856 * C45770;
    const double C134444 = C31856 * C96046;
    const double C142651 = C31856 * C152254;
    const double C31867 = C31855 * C152080;
    const double C37681 = C31855 * C152188;
    const double C54352 = C31855 * C45770;
    const double C134442 = C31855 * C96046;
    const double C142648 = C31855 * C152254;
    const double C31866 = C31854 * C152080;
    const double C39010 = C31854 * C152188;
    const double C55641 = C31854 * C45770;
    const double C135710 = C31854 * C96046;
    const double C143913 = C31854 * C152254;
    const double C31865 = C31853 * C152080;
    const double C37680 = C31853 * C152188;
    const double C55636 = C31853 * C45770;
    const double C134441 = C31853 * C96046;
    const double C143908 = C31853 * C152254;
    const double C31864 = C31852 * C152080;
    const double C37677 = C31852 * C152188;
    const double C54351 = C31852 * C45770;
    const double C134438 = C31852 * C96046;
    const double C142647 = C31852 * C152254;
    const double C31863 = C31851 * C152080;
    const double C37675 = C31851 * C152188;
    const double C54346 = C31851 * C45770;
    const double C134436 = C31851 * C96046;
    const double C142642 = C31851 * C152254;
    const double C32574 = C32565 * C152080;
    const double C37684 = C32565 * C152092;
    const double C38663 = C32565 * C152188;
    const double C54356 = C32565 * C45771;
    const double C56358 = C32565 * C45770;
    const double C134445 = C32565 * C152092;
    const double C135363 = C32565 * C96046;
    const double C142652 = C32565 * C152236;
    const double C144630 = C32565 * C152254;
    const double C32573 = C32564 * C152080;
    const double C37682 = C32564 * C152092;
    const double C38661 = C32564 * C152188;
    const double C54353 = C32564 * C45771;
    const double C55290 = C32564 * C45770;
    const double C134443 = C32564 * C152092;
    const double C135361 = C32564 * C96046;
    const double C142649 = C32564 * C152236;
    const double C143562 = C32564 * C152254;
    const double C32572 = C32563 * C152080;
    const double C37676 = C32563 * C152092;
    const double C38660 = C32563 * C152188;
    const double C54347 = C32563 * C45771;
    const double C55289 = C32563 * C45770;
    const double C134437 = C32563 * C152092;
    const double C135360 = C32563 * C96046;
    const double C142643 = C32563 * C152236;
    const double C143561 = C32563 * C152254;
    const double C32571 = C32562 * C152080;
    const double C37678 = C32562 * C152092;
    const double C38658 = C32562 * C152188;
    const double C54350 = C32562 * C45771;
    const double C55863 = C32562 * C45770;
    const double C134439 = C32562 * C152092;
    const double C135358 = C32562 * C96046;
    const double C142646 = C32562 * C152236;
    const double C144135 = C32562 * C152254;
    const double C32570 = C32561 * C152080;
    const double C37679 = C32561 * C152092;
    const double C39238 = C32561 * C152188;
    const double C55637 = C32561 * C45771;
    const double C56555 = C32561 * C45770;
    const double C134440 = C32561 * C152092;
    const double C135938 = C32561 * C96046;
    const double C143909 = C32561 * C152236;
    const double C144827 = C32561 * C152254;
    const double C32822 = C32820 * C152080;
    const double C39013 = C32820 * C152188;
    const double C135713 = C32820 * C96046;
    const double C33004 = C32999 * C152080;
    const double C39011 = C32999 * C152092;
    const double C39929 = C32999 * C152188;
    const double C55640 = C32999 * C45771;
    const double C135711 = C32999 * C152092;
    const double C136629 = C32999 * C96046;
    const double C143912 = C32999 * C152236;
    const double C33003 = C32998 * C152080;
    const double C39241 = C32998 * C152188;
    const double C39239 = C32998 * C152092;
    const double C55638 = C32998 * C45772;
    const double C56554 = C32998 * C45771;
    const double C135941 = C32998 * C96046;
    const double C135939 = C32998 * C152092;
    const double C143910 = C32998 * C115175;
    const double C144826 = C32998 * C152236;
    const double C33002 = C32997 * C152080;
    const double C38657 = C32997 * C152092;
    const double C39236 = C32997 * C152188;
    const double C54349 = C32997 * C45772;
    const double C55868 = C32997 * C45770;
    const double C55864 = C32997 * C45771;
    const double C135357 = C32997 * C152092;
    const double C135936 = C32997 * C96046;
    const double C142645 = C32997 * C115175;
    const double C144140 = C32997 * C152254;
    const double C144136 = C32997 * C152236;
    const double C33001 = C32996 * C152080;
    const double C38659 = C32996 * C152092;
    const double C39234 = C32996 * C152188;
    const double C54348 = C32996 * C45772;
    const double C55288 = C32996 * C45771;
    const double C55860 = C32996 * C45770;
    const double C135359 = C32996 * C152092;
    const double C135934 = C32996 * C96046;
    const double C142644 = C32996 * C115175;
    const double C143560 = C32996 * C152236;
    const double C144132 = C32996 * C152254;
    const double C34081 = C34078 * C152080;
    const double C38662 = C34078 * C152092;
    const double C40812 = C34078 * C152188;
    const double C54354 = C34078 * C45772;
    const double C55291 = C34078 * C45771;
    const double C57422 = C34078 * C45770;
    const double C135362 = C34078 * C152092;
    const double C137481 = C34078 * C96046;
    const double C142650 = C34078 * C115175;
    const double C143563 = C34078 * C152236;
    const double C145678 = C34078 * C152254;
    const double C34080 = C34077 * C152080;
    const double C38664 = C34077 * C152092;
    const double C40809 = C34077 * C152188;
    const double C54357 = C34077 * C45772;
    const double C56357 = C34077 * C45771;
    const double C135364 = C34077 * C152092;
    const double C137479 = C34077 * C96046;
    const double C142653 = C34077 * C115175;
    const double C144629 = C34077 * C152236;
    const double C34367 = C34364 * C152080;
    const double C39235 = C34364 * C152092;
    const double C41220 = C34364 * C152188;
    const double C55287 = C34364 * C45772;
    const double C55861 = C34364 * C45771;
    const double C57824 = C34364 * C45770;
    const double C135935 = C34364 * C152092;
    const double C137873 = C34364 * C96046;
    const double C143559 = C34364 * C115175;
    const double C144133 = C34364 * C152236;
    const double C146069 = C34364 * C152254;
    const double C34366 = C34363 * C152080;
    const double C39237 = C34363 * C152092;
    const double C41218 = C34363 * C152188;
    const double C55867 = C34363 * C45771;
    const double C55865 = C34363 * C45772;
    const double C135937 = C34363 * C152092;
    const double C137871 = C34363 * C96046;
    const double C144139 = C34363 * C152236;
    const double C144137 = C34363 * C115175;
    const double C34365 = C34362 * C152080;
    const double C39240 = C34362 * C152092;
    const double C56553 = C34362 * C45772;
    const double C135940 = C34362 * C152092;
    const double C144825 = C34362 * C115175;
    const double C41219 = C40515 * C152092;
    const double C55862 = C40515 * C45772;
    const double C57823 = C40515 * C45771;
    const double C137872 = C40515 * C152092;
    const double C144134 = C40515 * C115175;
    const double C146068 = C40515 * C152236;
    const double C41217 = C40514 * C152092;
    const double C55866 = C40514 * C45772;
    const double C137870 = C40514 * C152092;
    const double C144138 = C40514 * C115175;
    const double C40820 = C40818 * C152092;
    const double C55292 = C40818 * C45772;
    const double C57421 = C40818 * C45771;
    const double C137480 = C40818 * C152092;
    const double C143564 = C40818 * C115175;
    const double C145677 = C40818 * C152236;
    const double C57822 = C57127 * C45772;
    const double C146067 = C57127 * C115175;
    const double C6424 = C6406 + C6102;
    const double C23375 = C23357 + C23063;
    const double C32185 = C32182 + C31645;
    const double C68194 = C68176 + C67872;
    const double C76788 = C76770 + C76476;
    const double C15233 = C15215 + C6684;
    const double C46289 = C46271 + C23650;
    const double C38365 = C38364 + C32324;
    const double C96553 = C96535 + C68454;
    const double C85726 = C85712 + C77063;
    const double C32578 = C32569 * C152080;
    const double C37688 = C32569 * C152092;
    const double C38668 = C32569 * C152188;
    const double C54359 = C32569 * C45771;
    const double C55295 = C32569 * C45770;
    const double C134449 = C32569 * C152092;
    const double C135368 = C32569 * C96046;
    const double C142655 = C32569 * C152236;
    const double C143567 = C32569 * C152254;
    const double C150727 = ae * C150726;
    const double C155 = (4 * C150681 + C150615 * C150726 +
                         (3 * C150666 + C150615 * C150709) * ae) /
                        C150505;
    const double C358 = (C150861 * C150726) / C150505;
    const double C567 = (C150964 * C150726) / C150505;
    const double C6385 = C6086 * C370;
    const double C6903 = C6085 * C370;
    const double C23855 = C151796 * C370;
    const double C68155 = C67856 * C370;
    const double C68673 = C152201 * C370;
    const double C77268 = C151796 * C370;
    const double C7442 = C7428 + C6695;
    const double C7440 = C7421 + C6687;
    const double C24404 = C24388 + C23648;
    const double C38157 = C38152 + C32325;
    const double C69210 = C69191 + C68457;
    const double C77817 = C77801 + C77061;
    const double C86007 = C86003 + C77483;
    const double C15197 = C6086 * C579;
    const double C15652 = C6085 * C579;
    const double C46708 = C151796 * C579;
    const double C86274 = C151796 * C579;
    const double C96517 = C67856 * C579;
    const double C96972 = C152201 * C579;
    const double C6427 = C6409 + C6375;
    const double C23377 = C23359 + C23065;
    const double C32186 = C32183 + C31644;
    const double C68197 = C68179 + C68145;
    const double C76790 = C76772 + C76478;
    const double C15236 = C15218 + C6691;
    const double C46291 = C46273 + C23653;
    const double C54995 = C54994 + C38361;
    const double C96556 = C96538 + C68461;
    const double C85729 = C85715 + C77066;
    const double C7843 = C7837 + C7816;
    const double C23391 = C23373 + C23325;
    const double C31861 = C31849 + C31822;
    const double C69604 = C69598 + C69577;
    const double C76804 = C76786 + C76738;
    const double C8124 = C8115 + C8085;
    const double C24425 = C24413 + C24381;
    const double C32568 = C32559 + C32539;
    const double C69876 = C69867 + C69837;
    const double C77838 = C77826 + C77794;
    const double C38667 = C37955 * C152092;
    const double C54360 = C37955 * C45772;
    const double C55294 = C37955 * C45771;
    const double C135367 = C37955 * C152092;
    const double C142656 = C37955 * C115175;
    const double C143566 = C37955 * C152236;
    const double C17789 = C17783 + C17765;
    const double C46305 = C46287 + C46239;
    const double C54593 = C54591 + C54585;
    const double C99100 = C99094 + C99076;
    const double C89771 = C89769 + C89760;
    const double C31870 = C31858 * C152080;
    const double C39439 = C31858 * C152188;
    const double C136139 = C31858 * C96046;
    const double C32575 = C32566 * C152080;
    const double C37686 = C32566 * C152092;
    const double C39732 = C32566 * C152188;
    const double C56064 = C32566 * C45771;
    const double C134447 = C32566 * C152092;
    const double C136432 = C32566 * C96046;
    const double C144336 = C32566 * C152236;
    const double C150848 = C150811 + C150845;
    const double C150783 = ae * C150781;
    const double C150782 = C150615 * C150781;
    const double C150795 = 5 * C150781;
    const double C150923 = C150861 * C150781;
    const double C151026 = C150964 * C150781;
    const double C359 = (C150726 + C150781 * C150874) / C150505;
    const double C568 = (C150726 + C150781 * C150977) / C150505;
    const double C371 =
        (3 * (C150883 + C150887 + C150887 + C150615 * C150918) + C150914 +
         C150914 +
         C150615 *
             (2 * C150918 + C150915 + C150915 +
              C150615 *
                  (C150908 + C150916 + C150916 +
                   C150615 * (2 * ae * (C150700 + C150750 * C150874) +
                              C150615 * (C150757 + C150821 * C150874))))) /
        C150510;
    const double C1378 = C141 * C1361;
    const double C1721 = C139 * C1361;
    const double C6396 = C6092 * C1361;
    const double C6377 = C6094 * C1361;
    const double C23337 = C150531 * C1361;
    const double C23860 = C150541 * C1361;
    const double C31643 = C31629 * C1361;
    const double C68166 = C67862 * C1361;
    const double C68147 = C67864 * C1361;
    const double C76750 = C76459 * C1361;
    const double C77273 = C76457 * C1361;
    const double C1572 = C141 * C1547;
    const double C1922 = C139 * C1547;
    const double C7433 = C6092 * C1547;
    const double C7423 = C6094 * C1547;
    const double C23646 = C150531 * C1547;
    const double C24072 = C150541 * C1547;
    const double C32326 = C31629 * C1547;
    const double C69203 = C67862 * C1547;
    const double C69193 = C67864 * C1547;
    const double C77059 = C76459 * C1547;
    const double C77485 = C76457 * C1547;
    const double C1099 =
        (3 * (C151124 + C151128 + C151128 + C150615 * C151141) + C151137 +
         C151137 +
         C150615 * (2 * C151141 + C151138 + C151138 +
                    C150615 * (C151131 + C151139 + C151139 +
                               C150615 * (2 * ae * C150964 * C151069 +
                                          C150615 * C150964 * C151070)))) /
        C150510;
    const double C9747 = C9738 + C6688;
    const double C47024 = C47019 + C23655;
    const double C54792 = C54790 + C38362;
    const double C71481 = C71472 + C68458;
    const double C85713 = C85691 + C77068;
    const double C580 =
        (3 * (C150986 + C150990 + C150990 + C150615 * C151021) + C151017 +
         C151017 +
         C150615 *
             (2 * C151021 + C151018 + C151018 +
              C150615 *
                  (C151011 + C151019 + C151019 +
                   C150615 * (2 * ae * (C150700 + C150750 * C150977) +
                              C150615 * (C150757 + C150821 * C150977))))) /
        C150510;
    const double C2476 = C141 * C2459;
    const double C2824 = C139 * C2459;
    const double C9952 = C6094 * C2459;
    const double C15205 = C6092 * C2459;
    const double C46251 = C150531 * C2459;
    const double C46713 = C150541 * C2459;
    const double C54992 = C31629 * C2459;
    const double C71686 = C67864 * C2459;
    const double C85700 = C76459 * C2459;
    const double C96525 = C67862 * C2459;
    const double C116022 = C76457 * C2459;
    const double C8323 = C6086 * C1369;
    const double C23338 = C151796 * C1369;
    const double C32180 = C151791 * C1369;
    const double C70075 = C67856 * C1369;
    const double C76751 = C151796 * C1369;
    const double C7832 = C7817 + C7818;
    const double C25280 = C25273 + C23326;
    const double C31838 = C31823 + C31824;
    const double C69593 = C69578 + C69579;
    const double C78681 = C78674 + C76739;
    const double C8860 = C8851 + C8095;
    const double C25584 = C25577 + C24382;
    const double C32549 = C32536 + C32037;
    const double C70603 = C70594 + C69847;
    const double C78985 = C78978 + C77795;
    const double C8125 = C8116 + C8088;
    const double C26688 = C26684 + C26671;
    const double C37954 = C37946 + C37925;
    const double C69877 = C69868 + C69840;
    const double C80077 = C80073 + C80060;
    const double C10171 = C10168 + C9436;
    const double C49155 = C49153 + C26889;
    const double C54590 = C54588 + C37931;
    const double C71896 = C71893 + C71170;
    const double C89497 = C89495 + C80278;
    const double C18278 = C6086 * C2467;
    const double C46252 = C151796 * C2467;
    const double C62899 = C151791 * C2467;
    const double C99589 = C67856 * C2467;
    const double C115619 = C151796 * C2467;
    const double C17778 = C17766 + C9444;
    const double C49360 = C49354 + C46240;
    const double C62635 = C62632 + C54586;
    const double C99089 = C99077 + C71178;
    const double C118619 = C118613 + C89764;
    const double C24796 = C24792 + C24782;
    const double C33140 = C33139 + C31816;
    const double C78203 = C78199 + C78189;
    const double C25800 = C25798 + C25047;
    const double C33341 = C33340 + C32535;
    const double C79195 = C79193 + C78448;
    const double C34079 = C34076 * C152080;
    const double C39731 = C34076 * C152092;
    const double C56063 = C34076 * C45772;
    const double C136431 = C34076 * C152092;
    const double C144335 = C34076 * C115175;
    const double C40819 = C40817 * C152092;
    const double C56356 = C40817 * C45772;
    const double C137478 = C40817 * C152092;
    const double C144628 = C40817 * C115175;
    const double C49574 = C49572 + C49565;
    const double C57425 = C57424 + C57420;
    const double C89099 = C89093 + C89074;
    const double C48849 = C48845 + C48836;
    const double C64637 = C64636 + C57623;
    const double C118124 = C118122 + C89082;
    const double C150852 = ae * C150850;
    const double C150851 = C150615 * C150850;
    const double C150942 = C150850 * C150874;
    const double C151045 = C150850 * C150977;
    const double C151072 = C150861 * C150850;
    const double C151098 = C150964 * C150850;
    const double C151258 = C151253 + C151254;
    const double C151271 = ae * C151266;
    const double C1579 = C141 * C1554;
    const double C9746 = C6094 * C1554;
    const double C23657 = C150531 * C1554;
    const double C38363 = C31629 * C1554;
    const double C71480 = C67864 * C1554;
    const double C77070 = C76459 * C1554;
    const double C151361 = C151356 + C151357;
    const double C151347 = ae * C151342;
    const double C2962 = (2 * C151132 + C150964 * C151342) / C150505;
    const double C151206 = ae * C151204;
    const double C7806 = (4 * C151169 + C150861 * C151204) / C150505;
    const double C8846 = (C150964 * C151204) / C150505;
    const double C2064 =
        (2 * (2 * ae * C150964 * C151257 + C150615 * C151282) + C151285 +
         C151285 +
         C150615 *
             (C151282 + C151286 + C151286 +
              C150615 *
                  (2 * ae * C150964 *
                       (2 * C151069 + C150861 * (C150750 + C150814 * C150874)) +
                   C150615 * C150964 *
                       (2 * C151070 +
                        C150861 * (C150821 +
                                   (C150793 * C150794 +
                                    C150619 * bs[9] * std::pow(C150621, 9)) *
                                       C150622 * C150874))))) /
        C150510;
    const double C151332 = ae * C151330;
    const double C17755 = (4 * C151295 + C150964 * C151330) / C150505;
    const double C2966 =
        (2 * (2 * ae * (2 * C151130 + C150964 * C151340) + C150615 * C151380) +
         C151383 + C151383 +
         C150615 *
             (C151380 + C151384 + C151384 +
              C150615 *
                  (2 * ae *
                       (2 * C151144 +
                        C150964 * (C151069 + C150861 * C150814 * C150977)) +
                   C150615 *
                       (2 * C151145 +
                        C150964 * (C151070 + C150861 *
                                                 (C150793 * C150794 +
                                                  C150619 * bs[9] *
                                                      std::pow(C150621, 9)) *
                                                 C150622 * C150977))))) /
        C150510;
    const double C9447 = C6094 * C9431;
    const double C49152 = C150531 * C9431;
    const double C54587 = C31629 * C9431;
    const double C71181 = C67864 * C9431;
    const double C89766 = C76459 * C9431;
    const double C7809 =
        (4 * C151168 + C150861 * C151203 + C151391 + C151391 +
         C150615 *
             (2 * ae *
                  (4 * C151257 +
                   C150861 *
                       (3 * C150947 +
                        C150861 * (2 * C151069 +
                                   C150861 * (C150750 + C150814 * C150874)))) +
              C150615 *
                  (4 * C151197 +
                   C150861 *
                       (3 * C150948 +
                        C150861 *
                            (2 * C151070 +
                             C150861 * (C150821 + (C150793 * C150794 +
                                                   C150619 * bs[9] *
                                                       std::pow(C150621, 9)) *
                                                      C150622 * C150874)))))) /
        C150510;
    const double C24788 = C150531 * C24772;
    const double C33138 = C31629 * C24772;
    const double C78195 = C76459 * C24772;
    const double C25796 = C150531 * C25786;
    const double C33339 = C31629 * C25786;
    const double C79191 = C76459 * C25786;
    const double C17758 =
        (4 * C151294 + C150964 * C151329 + C151423 + C151423 +
         C150615 *
             (2 * ae *
                  (4 * C151360 +
                   C150964 *
                       (3 * C151050 +
                        C150964 * (2 * C151095 +
                                   C150964 * (C150750 + C150814 * C150977)))) +
              C150615 *
                  (4 * C151323 +
                   C150964 *
                       (3 * C151051 +
                        C150964 *
                            (2 * C151096 +
                             C150964 * (C150821 + (C150793 * C150794 +
                                                   C150619 * bs[9] *
                                                       std::pow(C150621, 9)) *
                                                      C150622 * C150977)))))) /
        C150510;
    const double C48842 = C150531 * C48826;
    const double C64635 = C31629 * C48826;
    const double C118121 = C76459 * C48826;
    const double C32823 = C32821 * C152080;
    const double C33005 = C33000 * C152080;
    const double C39928 = C33000 * C152092;
    const double C55639 = C33000 * C45772;
    const double C136628 = C33000 * C152092;
    const double C143911 = C33000 * C115175;
    const double C33483 = C33482 * C152080;
    const double C39012 = C33482 * C152092;
    const double C135712 = C33482 * C152092;
    const double C23361 = C23339 + C23340;
    const double C23358 = C23332 + C23064;
    const double C23356 = C23328 + C23062;
    const double C23354 = C23320 + C23321;
    const double C23352 = C23316 + C23055;
    const double C23350 = C23312 + C23057;
    const double C23349 = C23307 + C23308;
    const double C23346 = C23300 + C23052;
    const double C23344 = C23296 + C23050;
    const double C23864 = C23856 + C23067;
    const double C23862 = C23852 + C23069;
    const double C24405 = C24390 + C23649;
    const double C24403 = C24386 + C23647;
    const double C24400 = C24378 + C23638;
    const double C24398 = C24374 + C23636;
    const double C24397 = C24370 + C23625;
    const double C24395 = C24366 + C23623;
    const double C24793 = C24784 + C24785;
    const double C24790 = C24777 + C23310;
    const double C25059 = C25044 + C25045;
    const double C25056 = C25037 + C24372;
    const double C25054 = C25033 + C23632;
    const double C25052 = C25029 + C23630;
    const double C25281 = C25275 + C23327;
    const double C25585 = C25579 + C24383;
    const double C25799 = C25793 + C25048;
    const double C26683 = C26676 + C23643;
    const double C26681 = C26672 + C23641;
    const double C27105 = C27098 + C26371;
    const double C27103 = C27094 + C26369;
    const double C46275 = C46253 + C46254;
    const double C46272 = C46246 + C23652;
    const double C46270 = C46242 + C23651;
    const double C46268 = C46236 + C26886;
    const double C46266 = C46232 + C23645;
    const double C46264 = C46228 + C23634;
    const double C46263 = C46226 + C26373;
    const double C46260 = C46220 + C23628;
    const double C46258 = C46216 + C23627;
    const double C46717 = C46709 + C45775;
    const double C46715 = C46705 + C24068;
    const double C47023 = C47017 + C23654;
    const double C48846 = C48838 + C48839;
    const double C48843 = C48831 + C26374;
    const double C49154 = C49149 + C26888;
    const double C49361 = C49356 + C46241;
    const double C49571 = C49566 + C26376;
    const double C124253 = C124249 + C24070;
    const double C68185 = C68162 + C68163;
    const double C68180 = C68150 + C67881;
    const double C68177 = C68138 + C68139;
    const double C68174 = C68132 + C67874;
    const double C68173 = C68126 + C68127;
    const double C68168 = C68114 + C67869;
    const double C68679 = C68670 + C67886;
    const double C69213 = C69200 + C68466;
    const double C69208 = C69187 + C68455;
    const double C69207 = C69182 + C68442;
    const double C69595 = C69584 + C69585;
    const double C69590 = C69572 + C68129;
    const double C69861 = C69844 + C69845;
    const double C69856 = C69832 + C69184;
    const double C69853 = C69826 + C68449;
    const double C70085 = C70078 + C68149;
    const double C70393 = C70386 + C69195;
    const double C70605 = C70598 + C69849;
    const double C71483 = C71476 + C68460;
    const double C71895 = C71888 + C71172;
    const double C96544 = C96522 + C68470;
    const double C96539 = C96512 + C68469;
    const double C96536 = C96506 + C68463;
    const double C96533 = C96500 + C68452;
    const double C96532 = C96498 + C68446;
    const double C96527 = C96488 + C68445;
    const double C96978 = C96969 + C68882;
    const double C99091 = C99081 + C71176;
    const double C99086 = C99071 + C71175;
    const double C99599 = C99592 + C71684;
    const double C68184 = C68159 + C68160;
    const double C68181 = C68152 + C67882;
    const double C68178 = C68141 + C68142;
    const double C68175 = C68134 + C67873;
    const double C68172 = C68123 + C68124;
    const double C68169 = C68116 + C67870;
    const double C69212 = C69198 + C68465;
    const double C69209 = C69189 + C68456;
    const double C69206 = C69180 + C68441;
    const double C69594 = C69581 + C69582;
    const double C69591 = C69574 + C68130;
    const double C69860 = C69841 + C69842;
    const double C69857 = C69834 + C69185;
    const double C69854 = C69828 + C68450;
    const double C70084 = C70076 + C68148;
    const double C70392 = C70384 + C69194;
    const double C70604 = C70596 + C69848;
    const double C71482 = C71474 + C68459;
    const double C71894 = C71886 + C71171;
    const double C96543 = C96520 + C68471;
    const double C96540 = C96514 + C68468;
    const double C96537 = C96508 + C68462;
    const double C96534 = C96502 + C68453;
    const double C96531 = C96496 + C68447;
    const double C96528 = C96490 + C68444;
    const double C99090 = C99079 + C71177;
    const double C99087 = C99073 + C71174;
    const double C99598 = C99590 + C71685;
    const double C6433 = C6415 + C6393;
    const double C6428 = C6410 + C6111;
    const double C6425 = C6407 + C6369;
    const double C6422 = C6404 + C6104;
    const double C6421 = C6403 + C6357;
    const double C6416 = C6398 + C6099;
    const double C6912 = C6909 + C6116;
    const double C7452 = C7443 + C6696;
    const double C7447 = C7438 + C6685;
    const double C7446 = C7437 + C6672;
    const double C7840 = C7834 + C7824;
    const double C7835 = C7829 + C6359;
    const double C8118 = C8109 + C8093;
    const double C8113 = C8104 + C7414;
    const double C8110 = C8101 + C6679;
    const double C8336 = C8333 + C6379;
    const double C8644 = C8641 + C7425;
    const double C8865 = C8862 + C8097;
    const double C9752 = C9749 + C6690;
    const double C10173 = C10170 + C9438;
    const double C15242 = C15224 + C6700;
    const double C15237 = C15219 + C6699;
    const double C15234 = C15216 + C6693;
    const double C15231 = C15213 + C6682;
    const double C15230 = C15212 + C6676;
    const double C15225 = C15207 + C6675;
    const double C15661 = C15658 + C7112;
    const double C17786 = C17780 + C9442;
    const double C17781 = C17775 + C9441;
    const double C18291 = C18288 + C9950;
    const double C6432 = C6414 + C6390;
    const double C6429 = C6411 + C6112;
    const double C6426 = C6408 + C6372;
    const double C6423 = C6405 + C6103;
    const double C6420 = C6402 + C6354;
    const double C6417 = C6399 + C6100;
    const double C7448 = C7439 + C6686;
    const double C7445 = C7436 + C6671;
    const double C7839 = C7833 + C7821;
    const double C7836 = C7830 + C6360;
    const double C8117 = C8108 + C8090;
    const double C8114 = C8105 + C7415;
    const double C8111 = C8102 + C6680;
    const double C8335 = C8332 + C6378;
    const double C8643 = C8640 + C7424;
    const double C8864 = C8861 + C8096;
    const double C9751 = C9748 + C6689;
    const double C10172 = C10169 + C9437;
    const double C15241 = C15223 + C6701;
    const double C15238 = C15220 + C6698;
    const double C15235 = C15217 + C6692;
    const double C15232 = C15214 + C6683;
    const double C15229 = C15211 + C6677;
    const double C15226 = C15208 + C6674;
    const double C17785 = C17779 + C9443;
    const double C17782 = C17776 + C9440;
    const double C18290 = C18287 + C9951;
    const double C76792 = C76774 + C76753;
    const double C76789 = C76771 + C76477;
    const double C76787 = C76769 + C76475;
    const double C76785 = C76767 + C76734;
    const double C76783 = C76765 + C76468;
    const double C76781 = C76763 + C76470;
    const double C76780 = C76762 + C76721;
    const double C76777 = C76759 + C76465;
    const double C76775 = C76757 + C76463;
    const double C77281 = C77277 + C76480;
    const double C77279 = C77275 + C76482;
    const double C77830 = C77818 + C77062;
    const double C77828 = C77816 + C77060;
    const double C77825 = C77813 + C77051;
    const double C77823 = C77811 + C77049;
    const double C77822 = C77810 + C77038;
    const double C77820 = C77808 + C77036;
    const double C78204 = C78200 + C78192;
    const double C78201 = C78197 + C76723;
    const double C78468 = C78460 + C78446;
    const double C78465 = C78457 + C77785;
    const double C78463 = C78455 + C77045;
    const double C78461 = C78453 + C77043;
    const double C78684 = C78682 + C76740;
    const double C78988 = C78986 + C77796;
    const double C79196 = C79194 + C78449;
    const double C80076 = C80072 + C77056;
    const double C80074 = C80070 + C77054;
    const double C80492 = C80488 + C79760;
    const double C80490 = C80486 + C79758;
    const double C85730 = C85716 + C77065;
    const double C85728 = C85714 + C77067;
    const double C85725 = C85711 + C77064;
    const double C85723 = C85709 + C77058;
    const double C85721 = C85707 + C77047;
    const double C85720 = C85706 + C77041;
    const double C85717 = C85703 + C77040;
    const double C86281 = C86279 + C77481;
    const double C89096 = C89090 + C79763;
    const double C89094 = C89088 + C79765;
    const double C89091 = C89085 + C79762;
    const double C89498 = C89496 + C80277;
    const double C89770 = C89768 + C80275;
    const double C115627 = C115625 + C85699;
    const double C116026 = C116024 + C86275;
    const double C118125 = C118123 + C89081;
    const double C118622 = C118620 + C89763;
    const double C37694 = C37684 + C37683;
    const double C134455 = C134445 + C134444;
    const double C37693 = C37677 + C37678;
    const double C134454 = C134438 + C134439;
    const double C39009 = C37679 + C37680;
    const double C135709 = C134440 + C134441;
    const double C39014 = C39010 + C39011;
    const double C135714 = C135710 + C135711;
    const double C39927 = C39238 + C39239;
    const double C136627 = C135938 + C135939;
    const double C39233 = C38657 + C38658;
    const double C135933 = C135357 + C135358;
    const double C39730 = C38663 + C38664;
    const double C136430 = C135363 + C135364;
    const double C39242 = C39236 + C39237;
    const double C135942 = C135936 + C135937;
    const double C6442 = C6424 + C6367;
    const double C23393 = C23375 + C23331;
    const double C32188 = C32185 + C32176;
    const double C68212 = C68194 + C68137;
    const double C76806 = C76788 + C76744;
    const double C15251 = C15233 + C15185;
    const double C46307 = C46289 + C46245;
    const double C38366 = C38365 + C38360;
    const double C96571 = C96553 + C96505;
    const double C85740 = C85726 + C85690;
    const double C163 =
        (4 * (2 * C150675 + C150679 + C150679 + C150615 * C150718) + C150727 +
         C150727 +
         C150615 *
             (3 * C150718 + C150724 + C150724 +
              C150615 * (2 * C150714 + C150720 + C150720 +
                         C150615 * (C150707 + C150713 + C150713 +
                                    C150615 * (2 * ae * C150700 +
                                               C150615 *
                                                   (C150687 * C150688 +
                                                    C150619 * bs[7] *
                                                        std::pow(C150621, 7)) *
                                                   C150622))))) /
        C150510;
    const double C184 = C137 * C155;
    const double C180 = C139 * C155;
    const double C178 = C141 * C155;
    const double C6121 = C6092 * C155;
    const double C6117 = C6094 * C155;
    const double C23073 = C150531 * C155;
    const double C67891 = C67862 * C155;
    const double C67887 = C67864 * C155;
    const double C76486 = C76459 * C155;
    const double C392 = C139 * C358;
    const double C386 = C141 * C358;
    const double C748 = C137 * C358;
    const double C6123 = C6090 * C358;
    const double C6115 = C6092 * C358;
    const double C6113 = C6094 * C358;
    const double C23074 = C150541 * C358;
    const double C23068 = C150531 * C358;
    const double C31648 = C31629 * C358;
    const double C67893 = C67860 * C358;
    const double C67885 = C67862 * C358;
    const double C67883 = C67864 * C358;
    const double C76487 = C76457 * C358;
    const double C76481 = C76459 * C358;
    const double C601 = C139 * C567;
    const double C595 = C141 * C567;
    const double C887 = C137 * C567;
    const double C6697 = C6094 * C567;
    const double C7113 = C6092 * C567;
    const double C14729 = C6090 * C567;
    const double C24069 = C150531 * C567;
    const double C37454 = C31629 * C567;
    const double C45776 = C150541 * C567;
    const double C68467 = C67864 * C567;
    const double C68883 = C67862 * C567;
    const double C77482 = C76459 * C567;
    const double C85087 = C76457 * C567;
    const double C96049 = C67860 * C567;
    const double C7451 = C7442 + C6695;
    const double C7449 = C7440 + C6687;
    const double C24416 = C24404 + C23648;
    const double C38159 = C38157 + C32325;
    const double C69219 = C69210 + C68457;
    const double C77829 = C77817 + C77061;
    const double C86009 = C86007 + C77483;
    const double C6445 = C6427 + C6376;
    const double C23395 = C23377 + C23335;
    const double C32189 = C32186 + C32178;
    const double C68215 = C68197 + C68146;
    const double C76808 = C76790 + C76748;
    const double C15254 = C15236 + C15191;
    const double C46309 = C46291 + C46249;
    const double C54996 = C54995 + C54991;
    const double C96574 = C96556 + C96511;
    const double C85743 = C85729 + C85696;
    const double C31873 = C31861 * C152080;
    const double C37692 = C31861 * C152188;
    const double C134453 = C31861 * C96046;
    const double C32577 = C32568 * C152080;
    const double C37690 = C32568 * C152092;
    const double C38666 = C32568 * C152188;
    const double C54362 = C32568 * C45771;
    const double C134451 = C32568 * C152092;
    const double C135366 = C32568 * C96046;
    const double C142658 = C32568 * C152236;
    const double C39437 = C37685 + C37686;
    const double C136137 = C134446 + C134447;
    const double C150784 = C150735 + C150782;
    const double C150930 = ae * C150923;
    const double C1093 = (C150964 * C150923) / C150505;
    const double C151033 = ae * C151026;
    const double C397 = C139 * C359;
    const double C387 = C141 * C359;
    const double C6387 = C6094 * C359;
    const double C6907 = C6092 * C359;
    const double C23076 = C150541 * C359;
    const double C23066 = C150531 * C359;
    const double C31649 = C31629 * C359;
    const double C68157 = C67864 * C359;
    const double C68677 = C67862 * C359;
    const double C76489 = C76457 * C359;
    const double C76479 = C76459 * C359;
    const double C606 = C139 * C568;
    const double C596 = C141 * C568;
    const double C6702 = C6094 * C568;
    const double C15656 = C6092 * C568;
    const double C45778 = C150541 * C568;
    const double C45774 = C150531 * C568;
    const double C54126 = C31629 * C568;
    const double C68472 = C67864 * C568;
    const double C86276 = C76459 * C568;
    const double C96976 = C67862 * C568;
    const double C115177 = C76457 * C568;
    const double C6388 = C6086 * C371;
    const double C23859 = C151796 * C371;
    const double C68158 = C67856 * C371;
    const double C77272 = C151796 * C371;
    const double C8331 = C8322 + C6377;
    const double C23360 = C23336 + C23337;
    const double C32184 = C32179 + C31643;
    const double C70083 = C70074 + C68147;
    const double C76773 = C76749 + C76750;
    const double C8639 = C8630 + C7423;
    const double C24402 = C24384 + C23646;
    const double C38158 = C38155 + C32326;
    const double C70391 = C70382 + C69193;
    const double C77815 = C77797 + C77059;
    const double C7427 = C6086 * C1099;
    const double C69197 = C67856 * C1099;
    const double C86006 = C151796 * C1099;
    const double C124252 = C151796 * C1099;
    const double C9750 = C9747 + C6688;
    const double C47026 = C47024 + C23655;
    const double C54793 = C54792 + C38362;
    const double C71484 = C71481 + C68458;
    const double C85727 = C85713 + C77068;
    const double C15199 = C6086 * C580;
    const double C46712 = C151796 * C580;
    const double C96519 = C67856 * C580;
    const double C116021 = C151796 * C580;
    const double C18286 = C18277 + C9952;
    const double C46274 = C46250 + C46251;
    const double C62901 = C62898 + C54992;
    const double C99597 = C99588 + C71686;
    const double C115624 = C115618 + C85700;
    const double C7838 = C7832 + C7818;
    const double C25282 = C25280 + C23326;
    const double C31850 = C31838 + C31824;
    const double C69599 = C69593 + C69579;
    const double C78683 = C78681 + C76739;
    const double C8863 = C8860 + C8095;
    const double C25586 = C25584 + C24382;
    const double C32558 = C32549 + C32037;
    const double C70606 = C70603 + C69847;
    const double C78987 = C78985 + C77795;
    const double C38665 = C37954 * C152092;
    const double C54361 = C37954 * C45772;
    const double C135365 = C37954 * C152092;
    const double C142657 = C37954 * C115175;
    const double C10174 = C10171 + C10160;
    const double C49157 = C49155 + C49148;
    const double C54592 = C54590 + C54583;
    const double C71899 = C71896 + C71885;
    const double C89499 = C89497 + C89491;
    const double C17784 = C17778 + C9444;
    const double C49362 = C49360 + C46240;
    const double C62636 = C62635 + C54586;
    const double C99095 = C99089 + C71178;
    const double C118621 = C118619 + C89764;
    const double C24800 = C24796 + C24783;
    const double C33141 = C33140 + C33137;
    const double C78207 = C78203 + C78190;
    const double C25802 = C25800 + C25792;
    const double C33342 = C33341 + C33338;
    const double C79197 = C79195 + C79187;
    const double C57426 = C57425 * C45772;
    const double C145676 = C57425 * C115175;
    const double C48853 = C48849 + C48837;
    const double C64638 = C64637 + C64634;
    const double C118126 = C118124 + C118117;
    const double C150853 = C150796 + C150851;
    const double C150949 = C150781 + C150942;
    const double C151052 = C150781 + C151045;
    const double C151081 = ae * C151072;
    const double C151146 = C150964 * C151072;
    const double C2678 = (C150923 + C151072 * C150977) / C150505;
    const double C151107 = ae * C151098;
    const double C151260 = ae * C151258;
    const double C1368 = (3 * C150909 + C150861 * C151258) / C150505;
    const double C2060 = (C150964 * C151258) / C150505;
    const double C1918 =
        (3 * (C151224 + C151228 + C151228 + C150615 * C151275) + C151271 +
         C151271 +
         C150615 *
             (2 * C151275 + C151272 + C151272 +
              C150615 *
                  (C151265 + C151273 + C151273 +
                   C150615 * (2 * ae * C150964 * (C150750 + C150814 * C150874) +
                              C150615 * C150964 *
                                  (C150821 +
                                   (C150793 * C150794 +
                                    C150619 * bs[9] * std::pow(C150621, 9)) *
                                       C150622 * C150874))))) /
        C150510;
    const double C151363 = ae * C151361;
    const double C2466 = (3 * C151012 + C150964 * C151361) / C150505;
    const double C2679 =
        (3 * (C151212 + C151216 + C151216 + C150615 * C151351) + C151347 +
         C151347 +
         C150615 *
             (2 * C151351 + C151348 + C151348 +
              C150615 *
                  (C151341 + C151349 + C151349 +
                   C150615 *
                       (2 * ae * (C151069 + C150861 * C150814 * C150977) +
                        C150615 * (C151070 + C150861 *
                                                 (C150793 * C150794 +
                                                  C150619 * bs[9] *
                                                      std::pow(C150621, 9)) *
                                                 C150622 * C150977))))) /
        C150510;
    const double C2971 = C141 * C2962;
    const double C9955 = C6094 * C2962;
    const double C47022 = C150531 * C2962;
    const double C54993 = C31629 * C2962;
    const double C71689 = C67864 * C2962;
    const double C85702 = C76459 * C2962;
    const double C1376 =
        (2 * (2 * ae *
                  (3 * C150907 + C150861 * (2 * C150921 + C150861 * C150947)) +
              C150615 * C151203) +
         C151206 + C151206 +
         C150615 *
             (C151203 + C151207 + C151207 +
              C150615 *
                  (2 * ae *
                       (3 * C150947 +
                        C150861 * (2 * C151069 +
                                   C150861 * (C150750 + C150814 * C150874))) +
                   C150615 *
                       (3 * C150948 +
                        C150861 *
                            (2 * C151070 +
                             C150861 * (C150821 + (C150793 * C150794 +
                                                   C150619 * bs[9] *
                                                       std::pow(C150621, 9)) *
                                                      C150622 * C150874)))))) /
        C150510;
    const double C7828 = C6094 * C7806;
    const double C25278 = C150531 * C7806;
    const double C31826 = C31629 * C7806;
    const double C69589 = C67864 * C7806;
    const double C78679 = C76459 * C7806;
    const double C8859 = C6094 * C8846;
    const double C25582 = C150531 * C8846;
    const double C32542 = C31629 * C8846;
    const double C70602 = C67864 * C8846;
    const double C78983 = C76459 * C8846;
    const double C2474 =
        (2 * (2 * ae *
                  (3 * C151010 + C150964 * (2 * C151024 + C150964 * C151050)) +
              C150615 * C151329) +
         C151332 + C151332 +
         C150615 *
             (C151329 + C151333 + C151333 +
              C150615 *
                  (2 * ae *
                       (3 * C151050 +
                        C150964 * (2 * C151095 +
                                   C150964 * (C150750 + C150814 * C150977))) +
                   C150615 *
                       (3 * C151051 +
                        C150964 *
                            (2 * C151096 +
                             C150964 * (C150821 + (C150793 * C150794 +
                                                   C150619 * bs[9] *
                                                       std::pow(C150621, 9)) *
                                                      C150622 * C150977)))))) /
        C150510;
    const double C17774 = C6094 * C17755;
    const double C49359 = C150531 * C17755;
    const double C62634 = C31629 * C17755;
    const double C99085 = C67864 * C17755;
    const double C118618 = C76459 * C17755;
    const double C23379 = C23361 + C23340;
    const double C23376 = C23358 + C23064;
    const double C23374 = C23356 + C23062;
    const double C23372 = C23354 + C23321;
    const double C23370 = C23352 + C23055;
    const double C23368 = C23350 + C23057;
    const double C23367 = C23349 + C23308;
    const double C23364 = C23346 + C23052;
    const double C23362 = C23344 + C23050;
    const double C23868 = C23864 + C23067;
    const double C23866 = C23862 + C23069;
    const double C24417 = C24405 + C23649;
    const double C24415 = C24403 + C23647;
    const double C24412 = C24400 + C23638;
    const double C24410 = C24398 + C23636;
    const double C24409 = C24397 + C23625;
    const double C24407 = C24395 + C23623;
    const double C24797 = C24793 + C24785;
    const double C24794 = C24790 + C23310;
    const double C25067 = C25059 + C25045;
    const double C25064 = C25056 + C24372;
    const double C25062 = C25054 + C23632;
    const double C25060 = C25052 + C23630;
    const double C25283 = C25281 + C23327;
    const double C25587 = C25585 + C24383;
    const double C25801 = C25799 + C25048;
    const double C26687 = C26683 + C23643;
    const double C26685 = C26681 + C23641;
    const double C27109 = C27105 + C26371;
    const double C27107 = C27103 + C26369;
    const double C46293 = C46275 + C46254;
    const double C46290 = C46272 + C23652;
    const double C46288 = C46270 + C23651;
    const double C46286 = C46268 + C26886;
    const double C46284 = C46266 + C23645;
    const double C46282 = C46264 + C23634;
    const double C46281 = C46263 + C26373;
    const double C46278 = C46260 + C23628;
    const double C46276 = C46258 + C23627;
    const double C46721 = C46717 + C45775;
    const double C46719 = C46715 + C24068;
    const double C47025 = C47023 + C23654;
    const double C48850 = C48846 + C48839;
    const double C48847 = C48843 + C26374;
    const double C49156 = C49154 + C26888;
    const double C49363 = C49361 + C46241;
    const double C49573 = C49571 + C26376;
    const double C124255 = C124253 + C24070;
    const double C68203 = C68185 + C68163;
    const double C68198 = C68180 + C67881;
    const double C68195 = C68177 + C68139;
    const double C68192 = C68174 + C67874;
    const double C68191 = C68173 + C68127;
    const double C68186 = C68168 + C67869;
    const double C68682 = C68679 + C67886;
    const double C69222 = C69213 + C68466;
    const double C69217 = C69208 + C68455;
    const double C69216 = C69207 + C68442;
    const double C69601 = C69595 + C69585;
    const double C69596 = C69590 + C68129;
    const double C69870 = C69861 + C69845;
    const double C69865 = C69856 + C69184;
    const double C69862 = C69853 + C68449;
    const double C70088 = C70085 + C68149;
    const double C70396 = C70393 + C69195;
    const double C70608 = C70605 + C69849;
    const double C71486 = C71483 + C68460;
    const double C71898 = C71895 + C71172;
    const double C96562 = C96544 + C68470;
    const double C96557 = C96539 + C68469;
    const double C96554 = C96536 + C68463;
    const double C96551 = C96533 + C68452;
    const double C96550 = C96532 + C68446;
    const double C96545 = C96527 + C68445;
    const double C96981 = C96978 + C68882;
    const double C99097 = C99091 + C71176;
    const double C99092 = C99086 + C71175;
    const double C99602 = C99599 + C71684;
    const double C68202 = C68184 + C68160;
    const double C68199 = C68181 + C67882;
    const double C68196 = C68178 + C68142;
    const double C68193 = C68175 + C67873;
    const double C68190 = C68172 + C68124;
    const double C68187 = C68169 + C67870;
    const double C69221 = C69212 + C68465;
    const double C69218 = C69209 + C68456;
    const double C69215 = C69206 + C68441;
    const double C69600 = C69594 + C69582;
    const double C69597 = C69591 + C68130;
    const double C69869 = C69860 + C69842;
    const double C69866 = C69857 + C69185;
    const double C69863 = C69854 + C68450;
    const double C70087 = C70084 + C68148;
    const double C70395 = C70392 + C69194;
    const double C70607 = C70604 + C69848;
    const double C71485 = C71482 + C68459;
    const double C71897 = C71894 + C71171;
    const double C96561 = C96543 + C68471;
    const double C96558 = C96540 + C68468;
    const double C96555 = C96537 + C68462;
    const double C96552 = C96534 + C68453;
    const double C96549 = C96531 + C68447;
    const double C96546 = C96528 + C68444;
    const double C99096 = C99090 + C71177;
    const double C99093 = C99087 + C71174;
    const double C99601 = C99598 + C71685;
    const double C6451 = C6433 + C6394;
    const double C6446 = C6428 + C6381;
    const double C6443 = C6425 + C6370;
    const double C6440 = C6422 + C6363;
    const double C6439 = C6421 + C6358;
    const double C6434 = C6416 + C6345;
    const double C6915 = C6912 + C6901;
    const double C7461 = C7452 + C7431;
    const double C7456 = C7447 + C7418;
    const double C7455 = C7446 + C7413;
    const double C7846 = C7840 + C7825;
    const double C7841 = C7835 + C7812;
    const double C8127 = C8118 + C8094;
    const double C8122 = C8113 + C8081;
    const double C8119 = C8110 + C8075;
    const double C8339 = C8336 + C8327;
    const double C8647 = C8644 + C8635;
    const double C8868 = C8865 + C8856;
    const double C9755 = C9752 + C9743;
    const double C10176 = C10173 + C10164;
    const double C15260 = C15242 + C15203;
    const double C15255 = C15237 + C15193;
    const double C15252 = C15234 + C15187;
    const double C15249 = C15231 + C15181;
    const double C15248 = C15230 + C15179;
    const double C15243 = C15225 + C15169;
    const double C15664 = C15661 + C15650;
    const double C17792 = C17786 + C17771;
    const double C17787 = C17781 + C17761;
    const double C18294 = C18291 + C18282;
    const double C6450 = C6432 + C6391;
    const double C6447 = C6429 + C6383;
    const double C6444 = C6426 + C6373;
    const double C6441 = C6423 + C6365;
    const double C6438 = C6420 + C6355;
    const double C6435 = C6417 + C6347;
    const double C7457 = C7448 + C7420;
    const double C7454 = C7445 + C7411;
    const double C7845 = C7839 + C7822;
    const double C7842 = C7836 + C7814;
    const double C8126 = C8117 + C8091;
    const double C8123 = C8114 + C8083;
    const double C8120 = C8111 + C8077;
    const double C8338 = C8335 + C8325;
    const double C8646 = C8643 + C8633;
    const double C8867 = C8864 + C8854;
    const double C9754 = C9751 + C9741;
    const double C10175 = C10172 + C10162;
    const double C15259 = C15241 + C15201;
    const double C15256 = C15238 + C15195;
    const double C15253 = C15235 + C15189;
    const double C15250 = C15232 + C15183;
    const double C15247 = C15229 + C15177;
    const double C15244 = C15226 + C15171;
    const double C17791 = C17785 + C17769;
    const double C17788 = C17782 + C17763;
    const double C18293 = C18290 + C18280;
    const double C76810 = C76792 + C76754;
    const double C76807 = C76789 + C76746;
    const double C76805 = C76787 + C76742;
    const double C76803 = C76785 + C76735;
    const double C76801 = C76783 + C76730;
    const double C76799 = C76781 + C76726;
    const double C76798 = C76780 + C76722;
    const double C76795 = C76777 + C76714;
    const double C76793 = C76775 + C76710;
    const double C77285 = C77281 + C77270;
    const double C77283 = C77279 + C77266;
    const double C77842 = C77830 + C77804;
    const double C77840 = C77828 + C77800;
    const double C77837 = C77825 + C77792;
    const double C77835 = C77823 + C77788;
    const double C77834 = C77822 + C77784;
    const double C77832 = C77820 + C77780;
    const double C78208 = C78204 + C78193;
    const double C78205 = C78201 + C78185;
    const double C78476 = C78468 + C78447;
    const double C78473 = C78465 + C78439;
    const double C78471 = C78463 + C78435;
    const double C78469 = C78461 + C78431;
    const double C78686 = C78684 + C78677;
    const double C78990 = C78988 + C78981;
    const double C79198 = C79196 + C79189;
    const double C80080 = C80076 + C80066;
    const double C80078 = C80074 + C80062;
    const double C80496 = C80492 + C80482;
    const double C80494 = C80490 + C80478;
    const double C85744 = C85730 + C85698;
    const double C85742 = C85728 + C85694;
    const double C85739 = C85725 + C85688;
    const double C85737 = C85723 + C85684;
    const double C85735 = C85721 + C85680;
    const double C85734 = C85720 + C85678;
    const double C85731 = C85717 + C85672;
    const double C86283 = C86281 + C86272;
    const double C89102 = C89096 + C89080;
    const double C89100 = C89094 + C89076;
    const double C89097 = C89091 + C89070;
    const double C89500 = C89498 + C89493;
    const double C89772 = C89770 + C89762;
    const double C115629 = C115627 + C115621;
    const double C116028 = C116026 + C116019;
    const double C118127 = C118125 + C118119;
    const double C118624 = C118622 + C118616;
    const double C32191 = C32188 * C152080;
    const double C38151 = C32188 * C152188;
    const double C54788 = C32188 * C45770;
    const double C134869 = C32188 * C96046;
    const double C143072 = C32188 * C152254;
    const double C6910 = C6902 + C6115;
    const double C6412 = C6384 + C6113;
    const double C23863 = C23854 + C23068;
    const double C68680 = C68672 + C67885;
    const double C68182 = C68154 + C67883;
    const double C77276 = C77267 + C76481;
    const double C15221 = C15196 + C6697;
    const double C15659 = C15651 + C7113;
    const double C46716 = C46707 + C24069;
    const double C96541 = C96516 + C68467;
    const double C96979 = C96971 + C68883;
    const double C86280 = C86273 + C77482;
    const double C7460 = C7451 + C7429;
    const double C7458 = C7449 + C7422;
    const double C24428 = C24416 + C24389;
    const double C38161 = C38159 + C38153;
    const double C69228 = C69219 + C69192;
    const double C77841 = C77829 + C77802;
    const double C86011 = C86009 + C86004;
    const double C32192 = C32189 * C152080;
    const double C38154 = C32189 * C152188;
    const double C134871 = C32189 * C96046;
    const double C37695 = C37689 + C37690;
    const double C134456 = C134450 + C134451;
    const double C150785 = C150784 + C150770;
    const double C372 =
        (4 * (2 * C150900 + C150897 + C150897 + C150615 * C150937) + C150930 +
         C150930 +
         C150615 *
             (3 * C150937 + C150931 + C150931 +
              C150615 *
                  (2 * C150935 + C150932 + C150932 +
                   C150615 * (C150922 + C150933 + C150933 +
                              C150615 * (2 * ae * C150861 * C150750 +
                                         C150615 * C150861 * C150821))))) /
        C150510;
    const double C1112 = C139 * C1093;
    const double C1106 = C141 * C1093;
    const double C6694 = C6094 * C1093;
    const double C7116 = C6092 * C1093;
    const double C24071 = C150531 * C1093;
    const double C37455 = C31629 * C1093;
    const double C68464 = C67864 * C1093;
    const double C68886 = C67862 * C1093;
    const double C77484 = C76459 * C1093;
    const double C85089 = C76457 * C1093;
    const double C123409 = C150541 * C1093;
    const double C581 =
        (4 * (2 * C151003 + C151000 + C151000 + C150615 * C151040) + C151033 +
         C151033 +
         C150615 *
             (3 * C151040 + C151034 + C151034 +
              C150615 *
                  (2 * C151038 + C151035 + C151035 +
                   C150615 * (C151025 + C151036 + C151036 +
                              C150615 * (2 * ae * C150964 * C150750 +
                                         C150615 * C150964 * C150821))))) /
        C150510;
    const double C6413 = C6386 + C6387;
    const double C23865 = C23858 + C23066;
    const double C68183 = C68156 + C68157;
    const double C77278 = C77271 + C76479;
    const double C15222 = C15198 + C6702;
    const double C46718 = C46711 + C45774;
    const double C96542 = C96518 + C68472;
    const double C116025 = C116020 + C86276;
    const double C8334 = C8331 + C6377;
    const double C23378 = C23360 + C23337;
    const double C32187 = C32184 + C31643;
    const double C70086 = C70083 + C68147;
    const double C76791 = C76773 + C76750;
    const double C8642 = C8639 + C7423;
    const double C24414 = C24402 + C23646;
    const double C38160 = C38158 + C32326;
    const double C70394 = C70391 + C69193;
    const double C77827 = C77815 + C77059;
    const double C9753 = C9750 + C9739;
    const double C47028 = C47026 + C47020;
    const double C54794 = C54793 + C54791;
    const double C71487 = C71484 + C71473;
    const double C85741 = C85727 + C85692;
    const double C18289 = C18286 + C9952;
    const double C46292 = C46274 + C46251;
    const double C62902 = C62901 + C54992;
    const double C99600 = C99597 + C71686;
    const double C115626 = C115624 + C85700;
    const double C7844 = C7838 + C7819;
    const double C25284 = C25282 + C25274;
    const double C31862 = C31850 + C31825;
    const double C69605 = C69599 + C69580;
    const double C78685 = C78683 + C78675;
    const double C8866 = C8863 + C8852;
    const double C25588 = C25586 + C25578;
    const double C32567 = C32558 + C32537;
    const double C70609 = C70606 + C70595;
    const double C78989 = C78987 + C78979;
    const double C55293 = C54592 * C45772;
    const double C143565 = C54592 * C115175;
    const double C17790 = C17784 + C17767;
    const double C49364 = C49362 + C49355;
    const double C62637 = C62636 + C62633;
    const double C99101 = C99095 + C99078;
    const double C118623 = C118621 + C118614;
    const double C33142 = C33141 * C152080;
    const double C33343 = C33342 * C152080;
    const double C39438 = C33342 * C152092;
    const double C136138 = C33342 * C152092;
    const double C150854 = C150853 + C150834;
    const double C150955 = ae * C150949;
    const double C1716 = (2 * C150923 + C150861 * C150949) / C150505;
    const double C1917 = (C150964 * C150949) / C150505;
    const double C151058 = ae * C151052;
    const double C2819 = (2 * C151026 + C150964 * C151052) / C150505;
    const double C151153 = ae * C151146;
    const double C2684 = C141 * C2678;
    const double C6705 = C6094 * C2678;
    const double C46510 = C150531 * C2678;
    const double C54127 = C31629 * C2678;
    const double C68475 = C67864 * C2678;
    const double C86278 = C76459 * C2678;
    const double C1717 =
        (3 * (C151168 + C151172 + C151172 + C150615 * C151262) + C151260 +
         C151260 +
         C150615 *
             (2 * C151262 + C151255 + C151255 +
              C150615 *
                  (C151197 + C151256 + C151256 +
                   C150615 *
                       (2 * ae *
                            (2 * C151069 +
                             C150861 * (C150750 + C150814 * C150874)) +
                        C150615 *
                            (2 * C151070 +
                             C150861 * (C150821 + (C150793 * C150794 +
                                                   C150619 * bs[9] *
                                                       std::pow(C150621, 9)) *
                                                      C150622 * C150874)))))) /
        C150510;
    const double C1385 = C141 * C1368;
    const double C8330 = C6094 * C1368;
    const double C23343 = C150531 * C1368;
    const double C32181 = C31629 * C1368;
    const double C70082 = C67864 * C1368;
    const double C76756 = C76459 * C1368;
    const double C2069 = C141 * C2060;
    const double C8638 = C6094 * C2060;
    const double C24393 = C150531 * C2060;
    const double C32327 = C31629 * C2060;
    const double C70390 = C67864 * C2060;
    const double C77806 = C76459 * C2060;
    const double C2820 =
        (3 * (C151294 + C151298 + C151298 + C150615 * C151365) + C151363 +
         C151363 +
         C150615 *
             (2 * C151365 + C151358 + C151358 +
              C150615 *
                  (C151323 + C151359 + C151359 +
                   C150615 *
                       (2 * ae *
                            (2 * C151095 +
                             C150964 * (C150750 + C150814 * C150977)) +
                        C150615 *
                            (2 * C151096 +
                             C150964 * (C150821 + (C150793 * C150794 +
                                                   C150619 * bs[9] *
                                                       std::pow(C150621, 9)) *
                                                      C150622 * C150977)))))) /
        C150510;
    const double C2483 = C141 * C2466;
    const double C18285 = C6094 * C2466;
    const double C46257 = C150531 * C2466;
    const double C62900 = C31629 * C2466;
    const double C99596 = C67864 * C2466;
    const double C115623 = C76459 * C2466;
    const double C23397 = C23379 + C23341;
    const double C23394 = C23376 + C23333;
    const double C23392 = C23374 + C23329;
    const double C23390 = C23372 + C23322;
    const double C23388 = C23370 + C23317;
    const double C23386 = C23368 + C23313;
    const double C23385 = C23367 + C23309;
    const double C23382 = C23364 + C23301;
    const double C23380 = C23362 + C23297;
    const double C23872 = C23868 + C23857;
    const double C23870 = C23866 + C23853;
    const double C24429 = C24417 + C24391;
    const double C24427 = C24415 + C24387;
    const double C24424 = C24412 + C24379;
    const double C24422 = C24410 + C24375;
    const double C24421 = C24409 + C24371;
    const double C24419 = C24407 + C24367;
    const double C24801 = C24797 + C24786;
    const double C24798 = C24794 + C24778;
    const double C25075 = C25067 + C25046;
    const double C25072 = C25064 + C25038;
    const double C25070 = C25062 + C25034;
    const double C25068 = C25060 + C25030;
    const double C25285 = C25283 + C25276;
    const double C25589 = C25587 + C25580;
    const double C25803 = C25801 + C25794;
    const double C26691 = C26687 + C26677;
    const double C26689 = C26685 + C26673;
    const double C27113 = C27109 + C27099;
    const double C27111 = C27107 + C27095;
    const double C46311 = C46293 + C46255;
    const double C46308 = C46290 + C46247;
    const double C46306 = C46288 + C46243;
    const double C46304 = C46286 + C46237;
    const double C46302 = C46284 + C46233;
    const double C46300 = C46282 + C46229;
    const double C46299 = C46281 + C46227;
    const double C46296 = C46278 + C46221;
    const double C46294 = C46276 + C46217;
    const double C46725 = C46721 + C46710;
    const double C46723 = C46719 + C46706;
    const double C47027 = C47025 + C47018;
    const double C48854 = C48850 + C48840;
    const double C48851 = C48847 + C48832;
    const double C49158 = C49156 + C49150;
    const double C49365 = C49363 + C49357;
    const double C49575 = C49573 + C49567;
    const double C124257 = C124255 + C124250;
    const double C68221 = C68203 + C68164;
    const double C68216 = C68198 + C68151;
    const double C68213 = C68195 + C68140;
    const double C68210 = C68192 + C68133;
    const double C68209 = C68191 + C68128;
    const double C68204 = C68186 + C68115;
    const double C68685 = C68682 + C68671;
    const double C69231 = C69222 + C69201;
    const double C69226 = C69217 + C69188;
    const double C69225 = C69216 + C69183;
    const double C69607 = C69601 + C69586;
    const double C69602 = C69596 + C69573;
    const double C69879 = C69870 + C69846;
    const double C69874 = C69865 + C69833;
    const double C69871 = C69862 + C69827;
    const double C70091 = C70088 + C70079;
    const double C70399 = C70396 + C70387;
    const double C70611 = C70608 + C70599;
    const double C71489 = C71486 + C71477;
    const double C71901 = C71898 + C71889;
    const double C96580 = C96562 + C96523;
    const double C96575 = C96557 + C96513;
    const double C96572 = C96554 + C96507;
    const double C96569 = C96551 + C96501;
    const double C96568 = C96550 + C96499;
    const double C96563 = C96545 + C96489;
    const double C96984 = C96981 + C96970;
    const double C99103 = C99097 + C99082;
    const double C99098 = C99092 + C99072;
    const double C99605 = C99602 + C99593;
    const double C68220 = C68202 + C68161;
    const double C68217 = C68199 + C68153;
    const double C68214 = C68196 + C68143;
    const double C68211 = C68193 + C68135;
    const double C68208 = C68190 + C68125;
    const double C68205 = C68187 + C68117;
    const double C69230 = C69221 + C69199;
    const double C69227 = C69218 + C69190;
    const double C69224 = C69215 + C69181;
    const double C69606 = C69600 + C69583;
    const double C69603 = C69597 + C69575;
    const double C69878 = C69869 + C69843;
    const double C69875 = C69866 + C69835;
    const double C69872 = C69863 + C69829;
    const double C70090 = C70087 + C70077;
    const double C70398 = C70395 + C70385;
    const double C70610 = C70607 + C70597;
    const double C71488 = C71485 + C71475;
    const double C71900 = C71897 + C71887;
    const double C96579 = C96561 + C96521;
    const double C96576 = C96558 + C96515;
    const double C96573 = C96555 + C96509;
    const double C96570 = C96552 + C96503;
    const double C96567 = C96549 + C96497;
    const double C96564 = C96546 + C96491;
    const double C99102 = C99096 + C99080;
    const double C99099 = C99093 + C99074;
    const double C99604 = C99601 + C99591;
    const double C76813 = C76807 + C76808;
    const double C78673 = C76803 + C76804;
    const double C76812 = C76802 + C76801;
    const double C78183 = C76797 + C76798;
    const double C76811 = C76795 + C76796;
    const double C78977 = C77837 + C77838;
    const double C88067 = C77838 + C77837;
    const double C86674 = C77836 + C77835;
    const double C86673 = C77835 + C77836;
    const double C86672 = C77833 + C77834;
    const double C86671 = C77834 + C77833;
    const double C78429 = C77831 + C77832;
    const double C87421 = C77832 + C77831;
    const double C78209 = C78205 + C78206;
    const double C79185 = C78473 + C78474;
    const double C88326 = C78474 + C78473;
    const double C78477 = C78471 + C78472;
    const double C87422 = C78472 + C78471;
    const double C87420 = C78469 + C78470;
    const double C87419 = C78470 + C78469;
    const double C89494 = C80079 + C80080;
    const double C89489 = C80080 + C80079;
    const double C90032 = C80495 + C80496;
    const double C90031 = C80496 + C80495;
    const double C115617 = C85744 + C85743;
    const double C115616 = C85738 + C85737;
    const double C115615 = C85734 + C85733;
    const double C118115 = C89102 + C89101;
    const double C118114 = C89098 + C89097;
    const double C118612 = C89772 + C89771;
    const double C6913 = C6910 + C6115;
    const double C6430 = C6412 + C6113;
    const double C23867 = C23863 + C23068;
    const double C68683 = C68680 + C67885;
    const double C68200 = C68182 + C67883;
    const double C77280 = C77276 + C76481;
    const double C15239 = C15221 + C6697;
    const double C15662 = C15659 + C7113;
    const double C46720 = C46716 + C24069;
    const double C96559 = C96541 + C68467;
    const double C96982 = C96979 + C68883;
    const double C86282 = C86280 + C77482;
    const double C38163 = C38161 * C152092;
    const double C54789 = C38161 * C45771;
    const double C134870 = C38161 * C152092;
    const double C143073 = C38161 * C152236;
    const double C86676 = C77841 + C77842;
    const double C86675 = C77842 + C77841;
    const double C150786 = ae * C150785;
    const double C156 = (5 * C150726 + C150615 * C150785 +
                         (4 * C150709 + C150615 * C150767) * ae) /
                        C150505;
    const double C360 = (C150861 * C150785) / C150505;
    const double C569 = (C150964 * C150785) / C150505;
    const double C6905 = C6086 * C372;
    const double C68675 = C67856 * C372;
    const double C7441 = C7426 + C6694;
    const double C124254 = C124251 + C24071;
    const double C69211 = C69196 + C68464;
    const double C86008 = C86005 + C77484;
    const double C15654 = C6086 * C581;
    const double C96974 = C67856 * C581;
    const double C6431 = C6413 + C6387;
    const double C23869 = C23865 + C23066;
    const double C68201 = C68183 + C68157;
    const double C77282 = C77278 + C76479;
    const double C15240 = C15222 + C6702;
    const double C46722 = C46718 + C45774;
    const double C96560 = C96542 + C68472;
    const double C116027 = C116025 + C86276;
    const double C8337 = C8334 + C8323;
    const double C23396 = C23378 + C23338;
    const double C32190 = C32187 + C32180;
    const double C70089 = C70086 + C70075;
    const double C76809 = C76791 + C76751;
    const double C8645 = C8642 + C8631;
    const double C24426 = C24414 + C24385;
    const double C38162 = C38160 + C38156;
    const double C70397 = C70394 + C70383;
    const double C77839 = C77827 + C77798;
    const double C54795 = C54794 * C45772;
    const double C143074 = C54794 * C115175;
    const double C18292 = C18289 + C18278;
    const double C46310 = C46292 + C46252;
    const double C62903 = C62902 + C62899;
    const double C99603 = C99600 + C99589;
    const double C115628 = C115626 + C115619;
    const double C31874 = C31862 * C152080;
    const double C32576 = C32567 * C152080;
    const double C37691 = C32567 * C152092;
    const double C134452 = C32567 * C152092;
    const double C150856 = ae * C150854;
    const double C150855 = C150615 * C150854;
    const double C151071 = C150861 * C150854;
    const double C151097 = C150964 * C150854;
    const double C361 = (C150785 + C150854 * C150874) / C150505;
    const double C570 = (C150785 + C150854 * C150977) / C150505;
    const double C373 =
        (4 * (2 * C150918 + C150915 + C150915 + C150615 * C150962) + C150955 +
         C150955 +
         C150615 *
             (3 * C150962 + C150956 + C150956 +
              C150615 *
                  (2 * C150960 + C150957 + C150957 +
                   C150615 *
                       (C150948 + C150958 + C150958 +
                        C150615 *
                            (2 * ae * (C150750 + C150814 * C150874) +
                             C150615 * (C150821 + (C150793 * C150794 +
                                                   C150619 * bs[9] *
                                                       std::pow(C150621, 9)) *
                                                      C150622 * C150874)))))) /
        C150510;
    const double C1722 = C141 * C1716;
    const double C6397 = C6094 * C1716;
    const double C23861 = C150531 * C1716;
    const double C31650 = C31629 * C1716;
    const double C68167 = C67864 * C1716;
    const double C77274 = C76459 * C1716;
    const double C1923 = C141 * C1917;
    const double C7434 = C6094 * C1917;
    const double C24073 = C150531 * C1917;
    const double C37456 = C31629 * C1917;
    const double C69204 = C67864 * C1917;
    const double C77486 = C76459 * C1917;
    const double C582 =
        (4 * (2 * C151021 + C151018 + C151018 + C150615 * C151065) + C151058 +
         C151058 +
         C150615 *
             (3 * C151065 + C151059 + C151059 +
              C150615 *
                  (2 * C151063 + C151060 + C151060 +
                   C150615 *
                       (C151051 + C151061 + C151061 +
                        C150615 *
                            (2 * ae * (C150750 + C150814 * C150977) +
                             C150615 * (C150821 + (C150793 * C150794 +
                                                   C150619 * bs[9] *
                                                       std::pow(C150621, 9)) *
                                                      C150622 * C150977)))))) /
        C150510;
    const double C2825 = C141 * C2819;
    const double C15206 = C6094 * C2819;
    const double C46714 = C150531 * C2819;
    const double C62339 = C31629 * C2819;
    const double C96526 = C67864 * C2819;
    const double C116023 = C76459 * C2819;
    const double C1100 =
        (4 * (2 * C151141 + C151138 + C151138 + C150615 * C151160) + C151153 +
         C151153 +
         C150615 *
             (3 * C151160 + C151154 + C151154 +
              C150615 *
                  (2 * C151158 + C151155 + C151155 +
                   C150615 * (C151145 + C151156 + C151156 +
                              C150615 * (2 * ae * C150964 * C150861 * C150814 +
                                         C150615 * C150964 * C150861 *
                                             (C150793 * C150794 +
                                              C150619 * bs[9] *
                                                  std::pow(C150621, 9)) *
                                             C150622))))) /
        C150510;
    const double C23400 = C23394 + C23395;
    const double C25272 = C23390 + C23391;
    const double C23399 = C23389 + C23388;
    const double C24776 = C23384 + C23385;
    const double C23398 = C23382 + C23383;
    const double C124908 = C24428 + C24429;
    const double C124907 = C24429 + C24428;
    const double C25576 = C24424 + C24425;
    const double C126298 = C24425 + C24424;
    const double C124906 = C24423 + C24422;
    const double C124905 = C24422 + C24423;
    const double C124904 = C24420 + C24421;
    const double C124903 = C24421 + C24420;
    const double C25028 = C24418 + C24419;
    const double C125652 = C24419 + C24418;
    const double C24802 = C24798 + C24799;
    const double C25790 = C25072 + C25073;
    const double C126557 = C25073 + C25072;
    const double C25076 = C25070 + C25071;
    const double C125653 = C25071 + C25070;
    const double C47587 = C25069 + C25068;
    const double C125651 = C25068 + C25069;
    const double C49146 = C26691 + C26690;
    const double C127686 = C26690 + C26691;
    const double C49563 = C27113 + C27112;
    const double C128203 = C27112 + C27113;
    const double C46314 = C46308 + C46309;
    const double C49353 = C46304 + C46305;
    const double C46313 = C46303 + C46302;
    const double C48830 = C46298 + C46299;
    const double C46312 = C46296 + C46297;
    const double C48855 = C48851 + C48852;
    const double C76816 = C76813 * C152080;
    const double C78680 = C78673 * C152080;
    const double C76815 = C76812 * C152080;
    const double C78196 = C78183 * C152080;
    const double C76814 = C76811 * C152080;
    const double C78984 = C78977 * C152080;
    const double C78452 = C78429 * C152080;
    const double C78210 = C78209 * C152080;
    const double C79192 = C79185 * C152080;
    const double C78478 = C78477 * C152080;
    const double C6916 = C6913 + C6903;
    const double C6448 = C6430 + C6385;
    const double C23871 = C23867 + C23855;
    const double C68686 = C68683 + C68673;
    const double C68218 = C68200 + C68155;
    const double C77284 = C77280 + C77268;
    const double C15257 = C15239 + C15197;
    const double C15665 = C15662 + C15652;
    const double C46724 = C46720 + C46708;
    const double C96577 = C96559 + C96517;
    const double C96985 = C96982 + C96972;
    const double C86284 = C86282 + C86274;
    const double C164 =
        (5 * (3 * C150718 + C150724 + C150724 + C150615 * C150776) + C150786 +
         C150786 +
         C150615 *
             (4 * C150776 + C150783 + C150783 +
              C150615 *
                  (3 * C150771 + C150779 + C150779 +
                   C150615 *
                       (2 * C150765 + C150773 + C150773 +
                        C150615 * (C150757 + C150764 + C150764 +
                                   C150615 * (2 * ae * C150750 +
                                              C150615 *
                                                  (C150733 * C150734 +
                                                   C150619 * bs[8] *
                                                       std::pow(C150613, 8)) *
                                                  C150622)))))) /
        C150510;
    const double C185 = C139 * C156;
    const double C179 = C141 * C156;
    const double C6122 = C6094 * C156;
    const double C67892 = C67864 * C156;
    const double C391 = C141 * C360;
    const double C749 = C139 * C360;
    const double C6124 = C6092 * C360;
    const double C6114 = C6094 * C360;
    const double C23075 = C150531 * C360;
    const double C67894 = C67862 * C360;
    const double C67884 = C67864 * C360;
    const double C76488 = C76459 * C360;
    const double C600 = C141 * C569;
    const double C888 = C139 * C569;
    const double C7114 = C6094 * C569;
    const double C14730 = C6092 * C569;
    const double C45777 = C150531 * C569;
    const double C68884 = C67864 * C569;
    const double C85088 = C76459 * C569;
    const double C96050 = C67862 * C569;
    const double C7450 = C7441 + C6694;
    const double C124256 = C124254 + C24071;
    const double C69220 = C69211 + C68464;
    const double C86010 = C86008 + C77484;
    const double C6449 = C6431 + C6388;
    const double C23873 = C23869 + C23859;
    const double C68219 = C68201 + C68158;
    const double C77286 = C77282 + C77272;
    const double C15258 = C15240 + C15199;
    const double C46726 = C46722 + C46712;
    const double C96578 = C96560 + C96519;
    const double C116029 = C116027 + C116021;
    const double C32193 = C32190 * C152080;
    const double C38164 = C38162 * C152092;
    const double C134872 = C38162 * C152092;
    const double C150857 = C150795 + C150855;
    const double C151080 = ae * C151071;
    const double C1094 = (C150964 * C151071) / C150505;
    const double C151106 = ae * C151097;
    const double C398 = C141 * C361;
    const double C6908 = C6094 * C361;
    const double C23077 = C150531 * C361;
    const double C68678 = C67864 * C361;
    const double C76490 = C76459 * C361;
    const double C607 = C141 * C570;
    const double C15657 = C6094 * C570;
    const double C45779 = C150531 * C570;
    const double C96977 = C67864 * C570;
    const double C115178 = C76459 * C570;
    const double C23403 = C23400 * C152080;
    const double C25279 = C25272 * C152080;
    const double C23402 = C23399 * C152080;
    const double C24789 = C24776 * C152080;
    const double C23401 = C23398 * C152080;
    const double C25583 = C25576 * C152080;
    const double C25051 = C25028 * C152080;
    const double C24803 = C24802 * C152080;
    const double C25797 = C25790 * C152080;
    const double C25077 = C25076 * C152080;
    const double C6911 = C6904 + C6114;
    const double C68681 = C68674 + C67884;
    const double C15660 = C15653 + C7114;
    const double C96980 = C96973 + C68884;
    const double C7459 = C7450 + C7427;
    const double C124258 = C124256 + C124252;
    const double C69229 = C69220 + C69197;
    const double C86012 = C86010 + C86006;
    const double C150858 = C150857 + C150842;
    const double C745 =
        (5 * (3 * C150937 + C150931 + C150931 + C150615 * C151091) + C151080 +
         C151080 +
         C150615 *
             (4 * C151091 + C151081 + C151081 +
              C150615 *
                  (3 * C151089 + C151082 + C151082 +
                   C150615 *
                       (2 * C151087 + C151083 + C151083 +
                        C150615 * (C151070 + C151084 + C151084 +
                                   C150615 * (2 * ae * C150861 * C150814 +
                                              C150615 * C150861 *
                                                  (C150793 * C150794 +
                                                   C150619 * bs[9] *
                                                       std::pow(C150621, 9)) *
                                                  C150622)))))) /
        C150510;
    const double C1113 = C141 * C1094;
    const double C7117 = C6094 * C1094;
    const double C68887 = C67864 * C1094;
    const double C85090 = C76459 * C1094;
    const double C123410 = C150531 * C1094;
    const double C884 =
        (5 * (3 * C151040 + C151034 + C151034 + C150615 * C151117) + C151106 +
         C151106 +
         C150615 *
             (4 * C151117 + C151107 + C151107 +
              C150615 *
                  (3 * C151115 + C151108 + C151108 +
                   C150615 *
                       (2 * C151113 + C151109 + C151109 +
                        C150615 * (C151096 + C151110 + C151110 +
                                   C150615 * (2 * ae * C150964 * C150814 +
                                              C150615 * C150964 *
                                                  (C150793 * C150794 +
                                                   C150619 * bs[9] *
                                                       std::pow(C150621, 9)) *
                                                  C150622)))))) /
        C150510;
    const double C6914 = C6911 + C6114;
    const double C68684 = C68681 + C67884;
    const double C15663 = C15660 + C7114;
    const double C96983 = C96980 + C68884;
    const double C150859 = ae * C150858;
    const double C157 = (6 * C150785 + C150615 * C150858 +
                         (5 * C150767 + C150615 * C150838) * ae) /
                        C150505;
    const double C744 = (C150861 * C150858) / C150505;
    const double C883 = (C150964 * C150858) / C150505;
    const double C6917 = C6914 + C6905;
    const double C68687 = C68684 + C68675;
    const double C15666 = C15663 + C15654;
    const double C96986 = C96983 + C96974;
    const double C165 =
        (6 * (4 * C150776 + C150783 + C150783 + C150615 * C150848) + C150859 +
         C150859 +
         C150615 *
             (5 * C150848 + C150856 + C150856 +
              C150615 *
                  (4 * C150843 + C150852 + C150852 +
                   C150615 *
                       (3 * C150836 + C150847 + C150847 +
                        C150615 *
                            (2 * C150829 + C150839 + C150839 +
                             C150615 *
                                 (C150821 + C150828 + C150828 +
                                  C150615 * (2 * ae * C150814 +
                                             C150615 *
                                                 (C150793 * C150794 +
                                                  C150619 * bs[9] *
                                                      std::pow(C150621, 9)) *
                                                 C150622))))))) /
        C150510;
    const double C186 = C141 * C157;
    const double C750 = C141 * C744;
    const double C6125 = C6094 * C744;
    const double C67895 = C67864 * C744;
    const double C889 = C141 * C883;
    const double C14731 = C6094 * C883;
    const double C96051 = C67864 * C883;
    d2ee[0] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                ((((C67859 * C142 + C67866 + C67866 + C152237 * C158 +
                    C67861 * C143 + C67867 + C67867 + C152201 * C159 +
                    C67863 * C144 + C67868 + C67868 + C67856 * C160) *
                       C152080 * C67857 +
                   (C68204 + C68205 + C68206) * C152080 * C152068) *
                      C151869 * C151910 -
                  ((C68207 + C68208 + C68209) * C152080 * C152068 +
                   (C68206 + C68205 + C68204) * C152080 * C67857) *
                      C151869 * C151917 +
                  ((C68209 + C68208 + C68207) * C152080 * C67857 +
                   (C69602 + C69603 + C69604) * C152080 * C152068) *
                      C151869 * C3585) *
                     C151828 +
                 (((C68210 + C68211 + C68212) * C152080 * C67857 +
                   (C68213 + C68214 + C68215) * C152080 * C152068) *
                      C151869 * C151917 -
                  ((C68212 + C68211 + C68210) * C152080 * C152068 +
                   (C67863 * C145 + C67875 + C67875 + C67856 * C161 +
                    C67861 * C144 + C67876 + C67876 + C152201 * C160 +
                    C67859 * C143 + C67877 + C67877 + C152237 * C159) *
                       C152080 * C67857) *
                      C151869 * C151910 -
                  ((C70089 + C70090 + C70091) * C152080 * C152068 +
                   (C68215 + C68214 + C68213) * C152080 * C67857) *
                      C151869 * C3585) *
                     C151837 +
                 (((C67859 * C144 + C67878 + C67878 + C152237 * C160 +
                    C67861 * C145 + C67879 + C67879 + C152201 * C161 +
                    C67863 * C146 + C67880 + C67880 + C67856 * C162) *
                       C152080 * C67857 +
                   (C68216 + C68217 + C68218) * C152080 * C152068) *
                      C151869 * C151910 -
                  ((C68219 + C68220 + C68221) * C152080 * C152068 +
                   (C68218 + C68217 + C68216) * C152080 * C67857) *
                      C151869 * C151917 +
                  ((C68221 + C68220 + C68219) * C152080 * C67857 +
                   (C67859 * C1354 + C68165 + C68165 + C152237 * C1370 +
                    C67861 * C1353 + C68166 + C68166 + C152201 * C1369 +
                    C67863 * C1715 + C68167 + C68167 + C67856 * C1717) *
                       C152080 * C152068) *
                      C151869 * C3585) *
                     C3588)) /
               (p * q * std::sqrt(p + q));
    d2ee[1] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                (((((C67859 * C142 + C67866 + C67866 + C152237 * C158 +
                     C67861 * C143 + C67867 + C67867 + C152201 * C159 +
                     C67863 * C144 + C67868 + C67868 + C67856 * C160) *
                        C152080 * C67857 +
                    (C68204 + C68205 + C68206) * C152080 * C152068) *
                       C152173 -
                   ((C69223 + C69224 + C69225) * C152080 * C152068 +
                    (C67863 * C548 + C68443 + C68443 + C67856 * C572 +
                     C67861 * C549 + C68444 + C68444 + C152201 * C573 +
                     C67859 * C550 + C68445 + C68445 + C152237 * C574) *
                        C152080 * C67857) *
                       C151956) *
                      C151910 +
                  (((C69225 + C69224 + C69223) * C152080 * C67857 +
                    (C69874 + C69875 + C69876) * C152080 * C152068) *
                       C151956 -
                   ((C68207 + C68208 + C68209) * C152080 * C152068 +
                    (C68206 + C68205 + C68204) * C152080 * C67857) *
                       C152173) *
                      C151917 +
                  (((C68209 + C68208 + C68207) * C152080 * C67857 +
                    (C69602 + C69603 + C69604) * C152080 * C152068) *
                       C152173 -
                   ((C70609 + C70610 + C70611) * C152080 * C152068 +
                    (C69876 + C69875 + C69874) * C152080 * C67857) *
                       C151956) *
                      C3585) *
                     C3241 +
                 ((((C67859 * C549 + C68452 + C68452 + C152237 * C573 +
                     C67861 * C548 + C68453 + C68453 + C152201 * C572 +
                     C67863 * C547 + C68454 + C68454 + C67856 * C571) *
                        C152080 * C67857 +
                    (C69226 + C69227 + C69228) * C152080 * C152068) *
                       C151956 -
                   ((C68212 + C68211 + C68210) * C152080 * C152068 +
                    (C67863 * C145 + C67875 + C67875 + C67856 * C161 +
                     C67861 * C144 + C67876 + C67876 + C152201 * C160 +
                     C67859 * C143 + C67877 + C67877 + C152237 * C159) *
                        C152080 * C67857) *
                       C152173) *
                      C151910 +
                  (((C68210 + C68211 + C68212) * C152080 * C67857 +
                    (C68213 + C68214 + C68215) * C152080 * C152068) *
                       C152173 -
                   ((C70397 + C70398 + C70399) * C152080 * C152068 +
                    (C69228 + C69227 + C69226) * C152080 * C67857) *
                       C151956) *
                      C151917 +
                  (((C70399 + C70398 + C70397) * C152080 * C67857 +
                    (C67859 * C2054 + C70388 + C70388 + C152237 * C2062 +
                     C67861 * C2055 + C70389 + C70389 + C152201 * C2063 +
                     C67863 * C2056 + C70390 + C70390 + C67856 * C2064) *
                        C152080 * C152068) *
                       C151956 -
                   ((C70089 + C70090 + C70091) * C152080 * C152068 +
                    (C68215 + C68214 + C68213) * C152080 * C67857) *
                       C152173) *
                      C3585) *
                     C151834)) /
               (p * q * std::sqrt(p + q));
    d2ee[2] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                ((((C67859 * C142 + C67866 + C67866 + C152237 * C158 +
                    C67861 * C143 + C67867 + C67867 + C152201 * C159 +
                    C67863 * C144 + C67868 + C67868 + C67856 * C160) *
                       C152080 * C67857 +
                   (C68204 + C68205 + C68206) * C152080 * C152068) *
                      C151869 * C152265 -
                  ((C68207 + C68208 + C68209) * C152080 * C152068 +
                   (C68206 + C68205 + C68204) * C152080 * C67857) *
                      C151869 * C152261 +
                  ((C68209 + C68208 + C68207) * C152080 * C67857 +
                   (C69602 + C69603 + C69604) * C152080 * C152068) *
                      C151869 * C152249 -
                  ((C69605 + C69606 + C69607) * C152080 * C152068 +
                   (C69604 + C69603 + C69602) * C152080 * C67857) *
                      C151869 * C152224) *
                     C3241 +
                 (((C68210 + C68211 + C68212) * C152080 * C67857 +
                   (C68213 + C68214 + C68215) * C152080 * C152068) *
                      C151869 * C152261 -
                  ((C68212 + C68211 + C68210) * C152080 * C152068 +
                   (C67863 * C145 + C67875 + C67875 + C67856 * C161 +
                    C67861 * C144 + C67876 + C67876 + C152201 * C160 +
                    C67859 * C143 + C67877 + C67877 + C152237 * C159) *
                       C152080 * C67857) *
                      C151869 * C152265 -
                  ((C70089 + C70090 + C70091) * C152080 * C152068 +
                   (C68215 + C68214 + C68213) * C152080 * C67857) *
                      C151869 * C152249 +
                  ((C70091 + C70090 + C70089) * C152080 * C67857 +
                   (C67859 * C1358 + C70080 + C70080 + C152237 * C1374 +
                    C67861 * C1359 + C70081 + C70081 + C152201 * C1375 +
                    C67863 * C1360 + C70082 + C70082 + C67856 * C1376) *
                       C152080 * C152068) *
                      C151869 * C152224) *
                     C151834)) /
                   (p * q * std::sqrt(p + q)) -
               (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                ((((C67859 * C142 + C67866 + C67866 + C152237 * C158 +
                    C67861 * C143 + C67867 + C67867 + C152201 * C159 +
                    C67863 * C144 + C67868 + C67868 + C67856 * C160) *
                       C152080 * C67857 +
                   (C68204 + C68205 + C68206) * C152080 * C152068) *
                      C151869 * C3101 -
                  ((C68207 + C68208 + C68209) * C152080 * C152068 +
                   (C68206 + C68205 + C68204) * C152080 * C67857) *
                      C151869 * C151914) *
                     C152264 +
                 (((C68210 + C68211 + C68212) * C152080 * C67857 +
                   (C68213 + C68214 + C68215) * C152080 * C152068) *
                      C151869 * C151914 -
                  ((C68212 + C68211 + C68210) * C152080 * C152068 +
                   (C67863 * C145 + C67875 + C67875 + C67856 * C161 +
                    C67861 * C144 + C67876 + C67876 + C152201 * C160 +
                    C67859 * C143 + C67877 + C67877 + C152237 * C159) *
                       C152080 * C67857) *
                      C151869 * C3101) *
                     C152257 +
                 (((C67859 * C144 + C67878 + C67878 + C152237 * C160 +
                    C67861 * C145 + C67879 + C67879 + C152201 * C161 +
                    C67863 * C146 + C67880 + C67880 + C67856 * C162) *
                       C152080 * C67857 +
                   (C68216 + C68217 + C68218) * C152080 * C152068) *
                      C151869 * C3101 -
                  ((C68219 + C68220 + C68221) * C152080 * C152068 +
                   (C68218 + C68217 + C68216) * C152080 * C67857) *
                      C151869 * C151914) *
                     C152242 +
                 (((C68685 + C68686 + C68687) * C152080 * C67857 +
                   (C67859 * C345 + C68676 + C68676 + C152237 * C369 +
                    C67861 * C347 + C68677 + C68677 + C152201 * C371 +
                    C67863 * C349 + C68678 + C68678 + C67856 * C373) *
                       C152080 * C152068) *
                      C151869 * C151914 -
                  ((C68687 + C68686 + C68685) * C152080 * C152068 +
                   (C67863 * C147 + C67887 + C67887 + C67856 * C163 +
                    C67861 * C146 + C67888 + C67888 + C152201 * C162 +
                    C67859 * C145 + C67889 + C67889 + C152237 * C161) *
                       C152080 * C67857) *
                      C151869 * C3101) *
                     C152218)) /
                   (p * q * std::sqrt(p + q)) +
               (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                (((((C67859 * C142 + C67866 + C67866 + C152237 * C158 +
                     C67861 * C143 + C67867 + C67867 + C152201 * C159 +
                     C67863 * C144 + C67868 + C67868 + C67856 * C160) *
                        C152080 * C67857 +
                    (C68204 + C68205 + C68206) * C152080 * C152068) *
                       C152259 -
                   ((C69223 + C69224 + C69225) * C152080 * C152068 +
                    (C67863 * C548 + C68443 + C68443 + C67856 * C572 +
                     C67861 * C549 + C68444 + C68444 + C152201 * C573 +
                     C67859 * C550 + C68445 + C68445 + C152237 * C574) *
                        C152080 * C67857) *
                       C152246 +
                   ((C67859 * C551 + C68446 + C68446 + C152237 * C575 +
                     C67861 * C552 + C68447 + C68447 + C152201 * C576 +
                     C67863 * C553 + C68448 + C68448 + C67856 * C577) *
                        C152080 * C67857 +
                    (C69871 + C69872 + C69873) * C152080 * C152068) *
                       C152217) *
                      C3101 +
                  (((C69225 + C69224 + C69223) * C152080 * C67857 +
                    (C69874 + C69875 + C69876) * C152080 * C152068) *
                       C152246 -
                   ((C68207 + C68208 + C68209) * C152080 * C152068 +
                    (C68206 + C68205 + C68204) * C152080 * C67857) *
                       C152259 -
                   ((C69877 + C69878 + C69879) * C152080 * C152068 +
                    (C69873 + C69872 + C69871) * C152080 * C67857) *
                       C152217) *
                      C151914) *
                     C3241 +
                 ((((C67859 * C549 + C68452 + C68452 + C152237 * C573 +
                     C67861 * C548 + C68453 + C68453 + C152201 * C572 +
                     C67863 * C547 + C68454 + C68454 + C67856 * C571) *
                        C152080 * C67857 +
                    (C69226 + C69227 + C69228) * C152080 * C152068) *
                       C152246 -
                   ((C68212 + C68211 + C68210) * C152080 * C152068 +
                    (C67863 * C145 + C67875 + C67875 + C67856 * C161 +
                     C67861 * C144 + C67876 + C67876 + C152201 * C160 +
                     C67859 * C143 + C67877 + C67877 + C152237 * C159) *
                        C152080 * C67857) *
                       C152259 -
                   ((C71487 + C71488 + C71489) * C152080 * C152068 +
                    (C67863 * C554 + C68461 + C68461 + C67856 * C578 +
                     C67861 * C553 + C68462 + C68462 + C152201 * C577 +
                     C67859 * C552 + C68463 + C68463 + C152237 * C576) *
                        C152080 * C67857) *
                       C152217) *
                      C3101 +
                  (((C68210 + C68211 + C68212) * C152080 * C67857 +
                    (C68213 + C68214 + C68215) * C152080 * C152068) *
                       C152259 -
                   ((C70397 + C70398 + C70399) * C152080 * C152068 +
                    (C69228 + C69227 + C69226) * C152080 * C67857) *
                       C152246 +
                   ((C71489 + C71488 + C71487) * C152080 * C67857 +
                    (C67859 * C1540 + C71478 + C71478 + C152237 * C1564 +
                     C67861 * C1541 + C71479 + C71479 + C152201 * C1565 +
                     C67863 * C1542 + C71480 + C71480 + C67856 * C1566) *
                        C152080 * C152068) *
                       C152217) *
                      C151914) *
                     C151834)) /
                   (p * q * std::sqrt(p + q));
    d2ee[3] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                (((((C67859 * C142 + C67866 + C67866 + C152237 * C158 +
                     C67861 * C143 + C67867 + C67867 + C152201 * C159 +
                     C67863 * C144 + C67868 + C67868 + C67856 * C160) *
                        C152080 * C67857 +
                    (C68204 + C68205 + C68206) * C152080 * C152068) *
                       C152173 -
                   ((C69223 + C69224 + C69225) * C152080 * C152068 +
                    (C67863 * C548 + C68443 + C68443 + C67856 * C572 +
                     C67861 * C549 + C68444 + C68444 + C152201 * C573 +
                     C67859 * C550 + C68445 + C68445 + C152237 * C574) *
                        C152080 * C67857) *
                       C151956) *
                      C3101 +
                  (((C69225 + C69224 + C69223) * C152080 * C67857 +
                    (C69874 + C69875 + C69876) * C152080 * C152068) *
                       C151956 -
                   ((C68207 + C68208 + C68209) * C152080 * C152068 +
                    (C68206 + C68205 + C68204) * C152080 * C67857) *
                       C152173) *
                      C151914) *
                     C151828 +
                 ((((C67859 * C549 + C68452 + C68452 + C152237 * C573 +
                     C67861 * C548 + C68453 + C68453 + C152201 * C572 +
                     C67863 * C547 + C68454 + C68454 + C67856 * C571) *
                        C152080 * C67857 +
                    (C69226 + C69227 + C69228) * C152080 * C152068) *
                       C151956 -
                   ((C68212 + C68211 + C68210) * C152080 * C152068 +
                    (C67863 * C145 + C67875 + C67875 + C67856 * C161 +
                     C67861 * C144 + C67876 + C67876 + C152201 * C160 +
                     C67859 * C143 + C67877 + C67877 + C152237 * C159) *
                        C152080 * C67857) *
                       C152173) *
                      C3101 +
                  (((C68210 + C68211 + C68212) * C152080 * C67857 +
                    (C68213 + C68214 + C68215) * C152080 * C152068) *
                       C152173 -
                   ((C70397 + C70398 + C70399) * C152080 * C152068 +
                    (C69228 + C69227 + C69226) * C152080 * C67857) *
                       C151956) *
                      C151914) *
                     C151837 +
                 ((((C67859 * C144 + C67878 + C67878 + C152237 * C160 +
                     C67861 * C145 + C67879 + C67879 + C152201 * C161 +
                     C67863 * C146 + C67880 + C67880 + C67856 * C162) *
                        C152080 * C67857 +
                    (C68216 + C68217 + C68218) * C152080 * C152068) *
                       C152173 -
                   ((C69229 + C69230 + C69231) * C152080 * C152068 +
                    (C67863 * C555 + C68467 + C68467 + C67856 * C579 +
                     C67861 * C547 + C68468 + C68468 + C152201 * C571 +
                     C67859 * C548 + C68469 + C68469 + C152237 * C572) *
                        C152080 * C67857) *
                       C151956) *
                      C3101 +
                  (((C69231 + C69230 + C69229) * C152080 * C67857 +
                    (C67859 * C1536 + C69202 + C69202 + C152237 * C1560 +
                     C67861 * C1535 + C69203 + C69203 + C152201 * C1559 +
                     C67863 * C1916 + C69204 + C69204 + C67856 * C1918) *
                        C152080 * C152068) *
                       C151956 -
                   ((C68219 + C68220 + C68221) * C152080 * C152068 +
                    (C68218 + C68217 + C68216) * C152080 * C67857) *
                       C152173) *
                      C151914) *
                     C3588)) /
               (p * q * std::sqrt(p + q));
    d2ee[4] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                ((((C67859 * C142 + C67866 + C67866 + C152237 * C158 +
                    C67861 * C143 + C67867 + C67867 + C152201 * C159 +
                    C67863 * C144 + C67868 + C67868 + C67856 * C160) *
                       C152080 * C67857 +
                   (C68204 + C68205 + C68206) * C152080 * C152068) *
                      C151869 * C3101 -
                  ((C68207 + C68208 + C68209) * C152080 * C152068 +
                   (C68206 + C68205 + C68204) * C152080 * C67857) *
                      C151869 * C151914) *
                     C152264 +
                 (((C68210 + C68211 + C68212) * C152080 * C67857 +
                   (C68213 + C68214 + C68215) * C152080 * C152068) *
                      C151869 * C151914 -
                  ((C68212 + C68211 + C68210) * C152080 * C152068 +
                   (C67863 * C145 + C67875 + C67875 + C67856 * C161 +
                    C67861 * C144 + C67876 + C67876 + C152201 * C160 +
                    C67859 * C143 + C67877 + C67877 + C152237 * C159) *
                       C152080 * C67857) *
                      C151869 * C3101) *
                     C152257 +
                 (((C67859 * C144 + C67878 + C67878 + C152237 * C160 +
                    C67861 * C145 + C67879 + C67879 + C152201 * C161 +
                    C67863 * C146 + C67880 + C67880 + C67856 * C162) *
                       C152080 * C67857 +
                   (C68216 + C68217 + C68218) * C152080 * C152068) *
                      C151869 * C3101 -
                  ((C68219 + C68220 + C68221) * C152080 * C152068 +
                   (C68218 + C68217 + C68216) * C152080 * C67857) *
                      C151869 * C151914) *
                     C152242 +
                 (((C68685 + C68686 + C68687) * C152080 * C67857 +
                   (C67859 * C345 + C68676 + C68676 + C152237 * C369 +
                    C67861 * C347 + C68677 + C68677 + C152201 * C371 +
                    C67863 * C349 + C68678 + C68678 + C67856 * C373) *
                       C152080 * C152068) *
                      C151869 * C151914 -
                  ((C68687 + C68686 + C68685) * C152080 * C152068 +
                   (C67863 * C147 + C67887 + C67887 + C67856 * C163 +
                    C67861 * C146 + C67888 + C67888 + C152201 * C162 +
                    C67859 * C145 + C67889 + C67889 + C152237 * C161) *
                       C152080 * C67857) *
                      C151869 * C3101) *
                     C152218)) /
                   (p * q * std::sqrt(p + q)) -
               (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                ((((C67859 * C142 + C67866 + C67866 + C152237 * C158 +
                    C67861 * C143 + C67867 + C67867 + C152201 * C159 +
                    C67863 * C144 + C67868 + C67868 + C67856 * C160) *
                       C152080 * C67857 +
                   (C68204 + C68205 + C68206) * C152080 * C152068) *
                      C151869 * C152265 -
                  ((C68207 + C68208 + C68209) * C152080 * C152068 +
                   (C68206 + C68205 + C68204) * C152080 * C67857) *
                      C151869 * C152261 +
                  ((C68209 + C68208 + C68207) * C152080 * C67857 +
                   (C69602 + C69603 + C69604) * C152080 * C152068) *
                      C151869 * C152249 -
                  ((C69605 + C69606 + C69607) * C152080 * C152068 +
                   (C69604 + C69603 + C69602) * C152080 * C67857) *
                      C151869 * C152224) *
                     C3241 +
                 (((C68210 + C68211 + C68212) * C152080 * C67857 +
                   (C68213 + C68214 + C68215) * C152080 * C152068) *
                      C151869 * C152261 -
                  ((C68212 + C68211 + C68210) * C152080 * C152068 +
                   (C67863 * C145 + C67875 + C67875 + C67856 * C161 +
                    C67861 * C144 + C67876 + C67876 + C152201 * C160 +
                    C67859 * C143 + C67877 + C67877 + C152237 * C159) *
                       C152080 * C67857) *
                      C151869 * C152265 -
                  ((C70089 + C70090 + C70091) * C152080 * C152068 +
                   (C68215 + C68214 + C68213) * C152080 * C67857) *
                      C151869 * C152249 +
                  ((C70091 + C70090 + C70089) * C152080 * C67857 +
                   (C67859 * C1358 + C70080 + C70080 + C152237 * C1374 +
                    C67861 * C1359 + C70081 + C70081 + C152201 * C1375 +
                    C67863 * C1360 + C70082 + C70082 + C67856 * C1376) *
                       C152080 * C152068) *
                      C151869 * C152224) *
                     C151834)) /
                   (p * q * std::sqrt(p + q));
    d2ee[5] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                (((((C67859 * C142 + C67866 + C67866 + C152237 * C158 +
                     C67861 * C143 + C67867 + C67867 + C152201 * C159 +
                     C67863 * C144 + C67868 + C67868 + C67856 * C160) *
                        C152080 * C67857 +
                    (C68204 + C68205 + C68206) * C152080 * C152068) *
                       C4107 -
                   ((C69223 + C69224 + C69225) * C152080 * C152068 +
                    (C67863 * C548 + C68443 + C68443 + C67856 * C572 +
                     C67861 * C549 + C68444 + C68444 + C152201 * C573 +
                     C67859 * C550 + C68445 + C68445 + C152237 * C574) *
                        C152080 * C67857) *
                       C151956) *
                      C151910 +
                  (((C69225 + C69224 + C69223) * C152080 * C67857 +
                    (C69874 + C69875 + C69876) * C152080 * C152068) *
                       C151956 -
                   ((C68207 + C68208 + C68209) * C152080 * C152068 +
                    (C68206 + C68205 + C68204) * C152080 * C67857) *
                       C4107) *
                      C151917 +
                  (((C68209 + C68208 + C68207) * C152080 * C67857 +
                    (C69602 + C69603 + C69604) * C152080 * C152068) *
                       C4107 -
                   ((C70609 + C70610 + C70611) * C152080 * C152068 +
                    (C69876 + C69875 + C69874) * C152080 * C67857) *
                       C151956) *
                      C3585) *
                     C152158 +
                 ((((C67859 * C549 + C68452 + C68452 + C152237 * C573 +
                     C67861 * C548 + C68453 + C68453 + C152201 * C572 +
                     C67863 * C547 + C68454 + C68454 + C67856 * C571) *
                        C152080 * C67857 +
                    (C69226 + C69227 + C69228) * C152080 * C152068) *
                       C151956 -
                   ((C68212 + C68211 + C68210) * C152080 * C152068 +
                    (C67863 * C145 + C67875 + C67875 + C67856 * C161 +
                     C67861 * C144 + C67876 + C67876 + C152201 * C160 +
                     C67859 * C143 + C67877 + C67877 + C152237 * C159) *
                        C152080 * C67857) *
                       C4107) *
                      C151910 +
                  (((C68210 + C68211 + C68212) * C152080 * C67857 +
                    (C68213 + C68214 + C68215) * C152080 * C152068) *
                       C4107 -
                   ((C70397 + C70398 + C70399) * C152080 * C152068 +
                    (C69228 + C69227 + C69226) * C152080 * C67857) *
                       C151956) *
                      C151917 +
                  (((C70399 + C70398 + C70397) * C152080 * C67857 +
                    (C67859 * C2054 + C70388 + C70388 + C152237 * C2062 +
                     C67861 * C2055 + C70389 + C70389 + C152201 * C2063 +
                     C67863 * C2056 + C70390 + C70390 + C67856 * C2064) *
                        C152080 * C152068) *
                       C151956 -
                   ((C70089 + C70090 + C70091) * C152080 * C152068 +
                    (C68215 + C68214 + C68213) * C152080 * C67857) *
                       C4107) *
                      C3585) *
                     C151834)) /
               (p * q * std::sqrt(p + q));
    d2ee[6] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                ((((C67859 * C142 + C67866 + C67866 + C152237 * C158 +
                    C67861 * C143 + C67867 + C67867 + C152201 * C159 +
                    C67863 * C144 + C67868 + C67868 + C67856 * C160) *
                       C152080 * C67857 +
                   (C68204 + C68205 + C68206) * C152080 * C152068) *
                      C151952 -
                  ((C69223 + C69224 + C69225) * C152080 * C152068 +
                   (C67863 * C548 + C68443 + C68443 + C67856 * C572 +
                    C67861 * C549 + C68444 + C68444 + C152201 * C573 +
                    C67859 * C550 + C68445 + C68445 + C152237 * C574) *
                       C152080 * C67857) *
                      C151959 +
                  ((C67859 * C551 + C68446 + C68446 + C152237 * C575 +
                    C67861 * C552 + C68447 + C68447 + C152201 * C576 +
                    C67863 * C553 + C68448 + C68448 + C67856 * C577) *
                       C152080 * C67857 +
                   (C69871 + C69872 + C69873) * C152080 * C152068) *
                      C4779) *
                     C151910 +
                 (((C69225 + C69224 + C69223) * C152080 * C67857 +
                   (C69874 + C69875 + C69876) * C152080 * C152068) *
                      C151959 -
                  ((C68207 + C68208 + C68209) * C152080 * C152068 +
                   (C68206 + C68205 + C68204) * C152080 * C67857) *
                      C151952 -
                  ((C69877 + C69878 + C69879) * C152080 * C152068 +
                   (C69873 + C69872 + C69871) * C152080 * C67857) *
                      C4779) *
                     C151917 +
                 (((C68209 + C68208 + C68207) * C152080 * C67857 +
                   (C69602 + C69603 + C69604) * C152080 * C152068) *
                      C151952 -
                  ((C70609 + C70610 + C70611) * C152080 * C152068 +
                   (C69876 + C69875 + C69874) * C152080 * C67857) *
                      C151959 +
                  ((C69879 + C69878 + C69877) * C152080 * C67857 +
                   (C67859 * C8064 + C69850 + C69850 + C152237 * C8070 +
                    C67861 * C8065 + C69851 + C69851 + C152201 * C8071 +
                    C67863 * C8066 + C69852 + C69852 + C67856 * C8072) *
                       C152080 * C152068) *
                      C4779) *
                     C3585) *
                C151823) /
               (p * q * std::sqrt(p + q));
    d2ee[7] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                ((((C67859 * C142 + C67866 + C67866 + C152237 * C158 +
                    C67861 * C143 + C67867 + C67867 + C152201 * C159 +
                    C67863 * C144 + C67868 + C67868 + C67856 * C160) *
                       C152080 * C67857 +
                   (C68204 + C68205 + C68206) * C152080 * C152068) *
                      C4107 -
                  ((C69223 + C69224 + C69225) * C152080 * C152068 +
                   (C67863 * C548 + C68443 + C68443 + C67856 * C572 +
                    C67861 * C549 + C68444 + C68444 + C152201 * C573 +
                    C67859 * C550 + C68445 + C68445 + C152237 * C574) *
                       C152080 * C67857) *
                      C151956) *
                     C152265 +
                 (((C69225 + C69224 + C69223) * C152080 * C67857 +
                   (C69874 + C69875 + C69876) * C152080 * C152068) *
                      C151956 -
                  ((C68207 + C68208 + C68209) * C152080 * C152068 +
                   (C68206 + C68205 + C68204) * C152080 * C67857) *
                      C4107) *
                     C152261 +
                 (((C68209 + C68208 + C68207) * C152080 * C67857 +
                   (C69602 + C69603 + C69604) * C152080 * C152068) *
                      C4107 -
                  ((C70609 + C70610 + C70611) * C152080 * C152068 +
                   (C69876 + C69875 + C69874) * C152080 * C67857) *
                      C151956) *
                     C152249 +
                 (((C70611 + C70610 + C70609) * C152080 * C67857 +
                   (C67859 * C8841 + C70600 + C70600 + C152237 * C8847 +
                    C67861 * C8842 + C70601 + C70601 + C152201 * C8848 +
                    C67863 * C8843 + C70602 + C70602 + C67856 * C8849) *
                       C152080 * C152068) *
                      C151956 -
                  ((C69605 + C69606 + C69607) * C152080 * C152068 +
                   (C69604 + C69603 + C69602) * C152080 * C67857) *
                      C4107) *
                     C152224) *
                C151823) /
                   (p * q * std::sqrt(p + q)) -
               (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                (((((C67859 * C142 + C67866 + C67866 + C152237 * C158 +
                     C67861 * C143 + C67867 + C67867 + C152201 * C159 +
                     C67863 * C144 + C67868 + C67868 + C67856 * C160) *
                        C152080 * C67857 +
                    (C68204 + C68205 + C68206) * C152080 * C152068) *
                       C4107 -
                   ((C69223 + C69224 + C69225) * C152080 * C152068 +
                    (C67863 * C548 + C68443 + C68443 + C67856 * C572 +
                     C67861 * C549 + C68444 + C68444 + C152201 * C573 +
                     C67859 * C550 + C68445 + C68445 + C152237 * C574) *
                        C152080 * C67857) *
                       C151956) *
                      C3101 +
                  (((C69225 + C69224 + C69223) * C152080 * C67857 +
                    (C69874 + C69875 + C69876) * C152080 * C152068) *
                       C151956 -
                   ((C68207 + C68208 + C68209) * C152080 * C152068 +
                    (C68206 + C68205 + C68204) * C152080 * C67857) *
                       C4107) *
                      C151914) *
                     C152255 +
                 ((((C67859 * C549 + C68452 + C68452 + C152237 * C573 +
                     C67861 * C548 + C68453 + C68453 + C152201 * C572 +
                     C67863 * C547 + C68454 + C68454 + C67856 * C571) *
                        C152080 * C67857 +
                    (C69226 + C69227 + C69228) * C152080 * C152068) *
                       C151956 -
                   ((C68212 + C68211 + C68210) * C152080 * C152068 +
                    (C67863 * C145 + C67875 + C67875 + C67856 * C161 +
                     C67861 * C144 + C67876 + C67876 + C152201 * C160 +
                     C67859 * C143 + C67877 + C67877 + C152237 * C159) *
                        C152080 * C67857) *
                       C4107) *
                      C3101 +
                  (((C68210 + C68211 + C68212) * C152080 * C67857 +
                    (C68213 + C68214 + C68215) * C152080 * C152068) *
                       C4107 -
                   ((C70397 + C70398 + C70399) * C152080 * C152068 +
                    (C69228 + C69227 + C69226) * C152080 * C67857) *
                       C151956) *
                      C151914) *
                     C152240 +
                 ((((C67859 * C144 + C67878 + C67878 + C152237 * C160 +
                     C67861 * C145 + C67879 + C67879 + C152201 * C161 +
                     C67863 * C146 + C67880 + C67880 + C67856 * C162) *
                        C152080 * C67857 +
                    (C68216 + C68217 + C68218) * C152080 * C152068) *
                       C4107 -
                   ((C69229 + C69230 + C69231) * C152080 * C152068 +
                    (C67863 * C555 + C68467 + C68467 + C67856 * C579 +
                     C67861 * C547 + C68468 + C68468 + C152201 * C571 +
                     C67859 * C548 + C68469 + C68469 + C152237 * C572) *
                        C152080 * C67857) *
                       C151956) *
                      C3101 +
                  (((C69231 + C69230 + C69229) * C152080 * C67857 +
                    (C67859 * C1536 + C69202 + C69202 + C152237 * C1560 +
                     C67861 * C1535 + C69203 + C69203 + C152201 * C1559 +
                     C67863 * C1916 + C69204 + C69204 + C67856 * C1918) *
                        C152080 * C152068) *
                       C151956 -
                   ((C68219 + C68220 + C68221) * C152080 * C152068 +
                    (C68218 + C68217 + C68216) * C152080 * C67857) *
                       C4107) *
                      C151914) *
                     C152208)) /
                   (p * q * std::sqrt(p + q)) +
               (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                ((((C67859 * C142 + C67866 + C67866 + C152237 * C158 +
                    C67861 * C143 + C67867 + C67867 + C152201 * C159 +
                    C67863 * C144 + C67868 + C67868 + C67856 * C160) *
                       C152080 * C67857 +
                   (C68204 + C68205 + C68206) * C152080 * C152068) *
                      C152266 -
                  ((C69223 + C69224 + C69225) * C152080 * C152068 +
                   (C67863 * C548 + C68443 + C68443 + C67856 * C572 +
                    C67861 * C549 + C68444 + C68444 + C152201 * C573 +
                    C67859 * C550 + C68445 + C68445 + C152237 * C574) *
                       C152080 * C67857) *
                      C152263 +
                  ((C67859 * C551 + C68446 + C68446 + C152237 * C575 +
                    C67861 * C552 + C68447 + C68447 + C152201 * C576 +
                    C67863 * C553 + C68448 + C68448 + C67856 * C577) *
                       C152080 * C67857 +
                   (C69871 + C69872 + C69873) * C152080 * C152068) *
                      C152252 -
                  ((C71899 + C71900 + C71901) * C152080 * C152068 +
                   (C67863 * C2452 + C71173 + C71173 + C67856 * C2468 +
                    C67861 * C2453 + C71174 + C71174 + C152201 * C2469 +
                    C67859 * C2454 + C71175 + C71175 + C152237 * C2470) *
                       C152080 * C67857) *
                      C152230) *
                     C3101 +
                 (((C69225 + C69224 + C69223) * C152080 * C67857 +
                   (C69874 + C69875 + C69876) * C152080 * C152068) *
                      C152263 -
                  ((C68207 + C68208 + C68209) * C152080 * C152068 +
                   (C68206 + C68205 + C68204) * C152080 * C67857) *
                      C152266 -
                  ((C69877 + C69878 + C69879) * C152080 * C152068 +
                   (C69873 + C69872 + C69871) * C152080 * C67857) *
                      C152252 +
                  ((C71901 + C71900 + C71899) * C152080 * C67857 +
                   (C67859 * C10149 + C71890 + C71890 + C152237 * C10155 +
                    C67861 * C10150 + C71891 + C71891 + C152201 * C10156 +
                    C67863 * C10151 + C71892 + C71892 + C67856 * C10157) *
                       C152080 * C152068) *
                      C152230) *
                     C151914) *
                C151823) /
                   (p * q * std::sqrt(p + q));
    d2ee[8] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                (((((C67859 * C142 + C67866 + C67866 + C152237 * C158 +
                     C67861 * C143 + C67867 + C67867 + C152201 * C159 +
                     C67863 * C144 + C67868 + C67868 + C67856 * C160) *
                        C152080 * C67857 +
                    (C68204 + C68205 + C68206) * C152080 * C152068) *
                       C151952 -
                   ((C69223 + C69224 + C69225) * C152080 * C152068 +
                    (C67863 * C548 + C68443 + C68443 + C67856 * C572 +
                     C67861 * C549 + C68444 + C68444 + C152201 * C573 +
                     C67859 * C550 + C68445 + C68445 + C152237 * C574) *
                        C152080 * C67857) *
                       C151959 +
                   ((C67859 * C551 + C68446 + C68446 + C152237 * C575 +
                     C67861 * C552 + C68447 + C68447 + C152201 * C576 +
                     C67863 * C553 + C68448 + C68448 + C67856 * C577) *
                        C152080 * C67857 +
                    (C69871 + C69872 + C69873) * C152080 * C152068) *
                       C4779) *
                      C3101 +
                  (((C69225 + C69224 + C69223) * C152080 * C67857 +
                    (C69874 + C69875 + C69876) * C152080 * C152068) *
                       C151959 -
                   ((C68207 + C68208 + C68209) * C152080 * C152068 +
                    (C68206 + C68205 + C68204) * C152080 * C67857) *
                       C151952 -
                   ((C69877 + C69878 + C69879) * C152080 * C152068 +
                    (C69873 + C69872 + C69871) * C152080 * C67857) *
                       C4779) *
                      C151914) *
                     C152158 +
                 ((((C67859 * C549 + C68452 + C68452 + C152237 * C573 +
                     C67861 * C548 + C68453 + C68453 + C152201 * C572 +
                     C67863 * C547 + C68454 + C68454 + C67856 * C571) *
                        C152080 * C67857 +
                    (C69226 + C69227 + C69228) * C152080 * C152068) *
                       C151959 -
                   ((C68212 + C68211 + C68210) * C152080 * C152068 +
                    (C67863 * C145 + C67875 + C67875 + C67856 * C161 +
                     C67861 * C144 + C67876 + C67876 + C152201 * C160 +
                     C67859 * C143 + C67877 + C67877 + C152237 * C159) *
                        C152080 * C67857) *
                       C151952 -
                   ((C71487 + C71488 + C71489) * C152080 * C152068 +
                    (C67863 * C554 + C68461 + C68461 + C67856 * C578 +
                     C67861 * C553 + C68462 + C68462 + C152201 * C577 +
                     C67859 * C552 + C68463 + C68463 + C152237 * C576) *
                        C152080 * C67857) *
                       C4779) *
                      C3101 +
                  (((C68210 + C68211 + C68212) * C152080 * C67857 +
                    (C68213 + C68214 + C68215) * C152080 * C152068) *
                       C151952 -
                   ((C70397 + C70398 + C70399) * C152080 * C152068 +
                    (C69228 + C69227 + C69226) * C152080 * C67857) *
                       C151959 +
                   ((C71489 + C71488 + C71487) * C152080 * C67857 +
                    (C67859 * C1540 + C71478 + C71478 + C152237 * C1564 +
                     C67861 * C1541 + C71479 + C71479 + C152201 * C1565 +
                     C67863 * C1542 + C71480 + C71480 + C67856 * C1566) *
                        C152080 * C152068) *
                       C4779) *
                      C151914) *
                     C151834)) /
               (p * q * std::sqrt(p + q));
    d2ee[9] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                (((((C67859 * C142 + C67866 + C67866 + C152237 * C158 +
                     C67861 * C143 + C67867 + C67867 + C152201 * C159 +
                     C67863 * C144 + C67868 + C67868 + C67856 * C160) *
                        C152080 * C67857 +
                    (C68204 + C68205 + C68206) * C152080 * C152068) *
                       C4107 -
                   ((C69223 + C69224 + C69225) * C152080 * C152068 +
                    (C67863 * C548 + C68443 + C68443 + C67856 * C572 +
                     C67861 * C549 + C68444 + C68444 + C152201 * C573 +
                     C67859 * C550 + C68445 + C68445 + C152237 * C574) *
                        C152080 * C67857) *
                       C151956) *
                      C3101 +
                  (((C69225 + C69224 + C69223) * C152080 * C67857 +
                    (C69874 + C69875 + C69876) * C152080 * C152068) *
                       C151956 -
                   ((C68207 + C68208 + C68209) * C152080 * C152068 +
                    (C68206 + C68205 + C68204) * C152080 * C67857) *
                       C4107) *
                      C151914) *
                     C152255 +
                 ((((C67859 * C549 + C68452 + C68452 + C152237 * C573 +
                     C67861 * C548 + C68453 + C68453 + C152201 * C572 +
                     C67863 * C547 + C68454 + C68454 + C67856 * C571) *
                        C152080 * C67857 +
                    (C69226 + C69227 + C69228) * C152080 * C152068) *
                       C151956 -
                   ((C68212 + C68211 + C68210) * C152080 * C152068 +
                    (C67863 * C145 + C67875 + C67875 + C67856 * C161 +
                     C67861 * C144 + C67876 + C67876 + C152201 * C160 +
                     C67859 * C143 + C67877 + C67877 + C152237 * C159) *
                        C152080 * C67857) *
                       C4107) *
                      C3101 +
                  (((C68210 + C68211 + C68212) * C152080 * C67857 +
                    (C68213 + C68214 + C68215) * C152080 * C152068) *
                       C4107 -
                   ((C70397 + C70398 + C70399) * C152080 * C152068 +
                    (C69228 + C69227 + C69226) * C152080 * C67857) *
                       C151956) *
                      C151914) *
                     C152240 +
                 ((((C67859 * C144 + C67878 + C67878 + C152237 * C160 +
                     C67861 * C145 + C67879 + C67879 + C152201 * C161 +
                     C67863 * C146 + C67880 + C67880 + C67856 * C162) *
                        C152080 * C67857 +
                    (C68216 + C68217 + C68218) * C152080 * C152068) *
                       C4107 -
                   ((C69229 + C69230 + C69231) * C152080 * C152068 +
                    (C67863 * C555 + C68467 + C68467 + C67856 * C579 +
                     C67861 * C547 + C68468 + C68468 + C152201 * C571 +
                     C67859 * C548 + C68469 + C68469 + C152237 * C572) *
                        C152080 * C67857) *
                       C151956) *
                      C3101 +
                  (((C69231 + C69230 + C69229) * C152080 * C67857 +
                    (C67859 * C1536 + C69202 + C69202 + C152237 * C1560 +
                     C67861 * C1535 + C69203 + C69203 + C152201 * C1559 +
                     C67863 * C1916 + C69204 + C69204 + C67856 * C1918) *
                        C152080 * C152068) *
                       C151956 -
                   ((C68219 + C68220 + C68221) * C152080 * C152068 +
                    (C68218 + C68217 + C68216) * C152080 * C67857) *
                       C4107) *
                      C151914) *
                     C152208)) /
                   (p * q * std::sqrt(p + q)) -
               (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                ((((C67859 * C142 + C67866 + C67866 + C152237 * C158 +
                    C67861 * C143 + C67867 + C67867 + C152201 * C159 +
                    C67863 * C144 + C67868 + C67868 + C67856 * C160) *
                       C152080 * C67857 +
                   (C68204 + C68205 + C68206) * C152080 * C152068) *
                      C4107 -
                  ((C69223 + C69224 + C69225) * C152080 * C152068 +
                   (C67863 * C548 + C68443 + C68443 + C67856 * C572 +
                    C67861 * C549 + C68444 + C68444 + C152201 * C573 +
                    C67859 * C550 + C68445 + C68445 + C152237 * C574) *
                       C152080 * C67857) *
                      C151956) *
                     C152265 +
                 (((C69225 + C69224 + C69223) * C152080 * C67857 +
                   (C69874 + C69875 + C69876) * C152080 * C152068) *
                      C151956 -
                  ((C68207 + C68208 + C68209) * C152080 * C152068 +
                   (C68206 + C68205 + C68204) * C152080 * C67857) *
                      C4107) *
                     C152261 +
                 (((C68209 + C68208 + C68207) * C152080 * C67857 +
                   (C69602 + C69603 + C69604) * C152080 * C152068) *
                      C4107 -
                  ((C70609 + C70610 + C70611) * C152080 * C152068 +
                   (C69876 + C69875 + C69874) * C152080 * C67857) *
                      C151956) *
                     C152249 +
                 (((C70611 + C70610 + C70609) * C152080 * C67857 +
                   (C67859 * C8841 + C70600 + C70600 + C152237 * C8847 +
                    C67861 * C8842 + C70601 + C70601 + C152201 * C8848 +
                    C67863 * C8843 + C70602 + C70602 + C67856 * C8849) *
                       C152080 * C152068) *
                      C151956 -
                  ((C69605 + C69606 + C69607) * C152080 * C152068 +
                   (C69604 + C69603 + C69602) * C152080 * C67857) *
                      C4107) *
                     C152224) *
                C151823) /
                   (p * q * std::sqrt(p + q));
    d2ee[10] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C67859 * C142 + C67866 + C67866 + C152237 * C158 +
                     C67861 * C143 + C67867 + C67867 + C152201 * C159 +
                     C67863 * C144 + C67868 + C67868 + C67856 * C160) *
                        C152080 * C67857 +
                    (C68204 + C68205 + C68206) * C152080 * C152068) *
                       C151869 * C1709 -
                   ((C68207 + C68208 + C68209) * C152080 * C152068 +
                    (C68206 + C68205 + C68204) * C152080 * C67857) *
                       C151869 * C1710 +
                   ((C68209 + C68208 + C68207) * C152080 * C67857 +
                    (C69602 + C69603 + C69604) * C152080 * C152068) *
                       C151869 * C1711 -
                   ((C69605 + C69606 + C69607) * C152080 * C152068 +
                    (C69604 + C69603 + C69602) * C152080 * C67857) *
                       C151869 * C152224) *
                      C152158 +
                  (((C68210 + C68211 + C68212) * C152080 * C67857 +
                    (C68213 + C68214 + C68215) * C152080 * C152068) *
                       C151869 * C1710 -
                   ((C68212 + C68211 + C68210) * C152080 * C152068 +
                    (C67863 * C145 + C67875 + C67875 + C67856 * C161 +
                     C67861 * C144 + C67876 + C67876 + C152201 * C160 +
                     C67859 * C143 + C67877 + C67877 + C152237 * C159) *
                        C152080 * C67857) *
                       C151869 * C1709 -
                   ((C70089 + C70090 + C70091) * C152080 * C152068 +
                    (C68215 + C68214 + C68213) * C152080 * C67857) *
                       C151869 * C1711 +
                   ((C70091 + C70090 + C70089) * C152080 * C67857 +
                    (C67859 * C1358 + C70080 + C70080 + C152237 * C1374 +
                     C67861 * C1359 + C70081 + C70081 + C152201 * C1375 +
                     C67863 * C1360 + C70082 + C70082 + C67856 * C1376) *
                        C152080 * C152068) *
                       C151869 * C152224) *
                      C151834)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C67859 * C142 + C67866 + C67866 + C152237 * C158 +
                     C67861 * C143 + C67867 + C67867 + C152201 * C159 +
                     C67863 * C144 + C67868 + C67868 + C67856 * C160) *
                        C152080 * C67857 +
                    (C68204 + C68205 + C68206) * C152080 * C152068) *
                       C151869 * C152172 -
                   ((C68207 + C68208 + C68209) * C152080 * C152068 +
                    (C68206 + C68205 + C68204) * C152080 * C67857) *
                       C151869 * C151914) *
                      C739 +
                  (((C68210 + C68211 + C68212) * C152080 * C67857 +
                    (C68213 + C68214 + C68215) * C152080 * C152068) *
                       C151869 * C151914 -
                   ((C68212 + C68211 + C68210) * C152080 * C152068 +
                    (C67863 * C145 + C67875 + C67875 + C67856 * C161 +
                     C67861 * C144 + C67876 + C67876 + C152201 * C160 +
                     C67859 * C143 + C67877 + C67877 + C152237 * C159) *
                        C152080 * C67857) *
                       C151869 * C152172) *
                      C740 +
                  (((C67859 * C144 + C67878 + C67878 + C152237 * C160 +
                     C67861 * C145 + C67879 + C67879 + C152201 * C161 +
                     C67863 * C146 + C67880 + C67880 + C67856 * C162) *
                        C152080 * C67857 +
                    (C68216 + C68217 + C68218) * C152080 * C152068) *
                       C151869 * C152172 -
                   ((C68219 + C68220 + C68221) * C152080 * C152068 +
                    (C68218 + C68217 + C68216) * C152080 * C67857) *
                       C151869 * C151914) *
                      C741 +
                  (((C68685 + C68686 + C68687) * C152080 * C67857 +
                    (C67859 * C345 + C68676 + C68676 + C152237 * C369 +
                     C67861 * C347 + C68677 + C68677 + C152201 * C371 +
                     C67863 * C349 + C68678 + C68678 + C67856 * C373) *
                        C152080 * C152068) *
                       C151869 * C151914 -
                   ((C68687 + C68686 + C68685) * C152080 * C152068 +
                    (C67863 * C147 + C67887 + C67887 + C67856 * C163 +
                     C67861 * C146 + C67888 + C67888 + C152201 * C162 +
                     C67859 * C145 + C67889 + C67889 + C152237 * C161) *
                        C152080 * C67857) *
                       C151869 * C152172) *
                      C152218)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C67859 * C142 + C67866 + C67866 + C152237 * C158 +
                      C67861 * C143 + C67867 + C67867 + C152201 * C159 +
                      C67863 * C144 + C67868 + C67868 + C67856 * C160) *
                         C152080 * C67857 +
                     (C68204 + C68205 + C68206) * C152080 * C152068) *
                        C2215 -
                    ((C69223 + C69224 + C69225) * C152080 * C152068 +
                     (C67863 * C548 + C68443 + C68443 + C67856 * C572 +
                      C67861 * C549 + C68444 + C68444 + C152201 * C573 +
                      C67859 * C550 + C68445 + C68445 + C152237 * C574) *
                         C152080 * C67857) *
                        C2216 +
                    ((C67859 * C551 + C68446 + C68446 + C152237 * C575 +
                      C67861 * C552 + C68447 + C68447 + C152201 * C576 +
                      C67863 * C553 + C68448 + C68448 + C67856 * C577) *
                         C152080 * C67857 +
                     (C69871 + C69872 + C69873) * C152080 * C152068) *
                        C152217) *
                       C152172 +
                   (((C69225 + C69224 + C69223) * C152080 * C67857 +
                     (C69874 + C69875 + C69876) * C152080 * C152068) *
                        C2216 -
                    ((C68207 + C68208 + C68209) * C152080 * C152068 +
                     (C68206 + C68205 + C68204) * C152080 * C67857) *
                        C2215 -
                    ((C69877 + C69878 + C69879) * C152080 * C152068 +
                     (C69873 + C69872 + C69871) * C152080 * C67857) *
                        C152217) *
                       C151914) *
                      C152158 +
                  ((((C67859 * C549 + C68452 + C68452 + C152237 * C573 +
                      C67861 * C548 + C68453 + C68453 + C152201 * C572 +
                      C67863 * C547 + C68454 + C68454 + C67856 * C571) *
                         C152080 * C67857 +
                     (C69226 + C69227 + C69228) * C152080 * C152068) *
                        C2216 -
                    ((C68212 + C68211 + C68210) * C152080 * C152068 +
                     (C67863 * C145 + C67875 + C67875 + C67856 * C161 +
                      C67861 * C144 + C67876 + C67876 + C152201 * C160 +
                      C67859 * C143 + C67877 + C67877 + C152237 * C159) *
                         C152080 * C67857) *
                        C2215 -
                    ((C71487 + C71488 + C71489) * C152080 * C152068 +
                     (C67863 * C554 + C68461 + C68461 + C67856 * C578 +
                      C67861 * C553 + C68462 + C68462 + C152201 * C577 +
                      C67859 * C552 + C68463 + C68463 + C152237 * C576) *
                         C152080 * C67857) *
                        C152217) *
                       C152172 +
                   (((C68210 + C68211 + C68212) * C152080 * C67857 +
                     (C68213 + C68214 + C68215) * C152080 * C152068) *
                        C2215 -
                    ((C70397 + C70398 + C70399) * C152080 * C152068 +
                     (C69228 + C69227 + C69226) * C152080 * C67857) *
                        C2216 +
                    ((C71489 + C71488 + C71487) * C152080 * C67857 +
                     (C67859 * C1540 + C71478 + C71478 + C152237 * C1564 +
                      C67861 * C1541 + C71479 + C71479 + C152201 * C1565 +
                      C67863 * C1542 + C71480 + C71480 + C67856 * C1566) *
                         C152080 * C152068) *
                        C152217) *
                       C151914) *
                      C151834)) /
                    (p * q * std::sqrt(p + q));
    d2ee[11] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C67859 * C142 + C67866 + C67866 + C152237 * C158 +
                     C67861 * C143 + C67867 + C67867 + C152201 * C159 +
                     C67863 * C144 + C67868 + C67868 + C67856 * C160) *
                        C152080 * C67857 +
                    (C68204 + C68205 + C68206) * C152080 * C152068) *
                       C152173 -
                   ((C69223 + C69224 + C69225) * C152080 * C152068 +
                    (C67863 * C548 + C68443 + C68443 + C67856 * C572 +
                     C67861 * C549 + C68444 + C68444 + C152201 * C573 +
                     C67859 * C550 + C68445 + C68445 + C152237 * C574) *
                        C152080 * C67857) *
                       C151956) *
                      C1709 +
                  (((C69225 + C69224 + C69223) * C152080 * C67857 +
                    (C69874 + C69875 + C69876) * C152080 * C152068) *
                       C151956 -
                   ((C68207 + C68208 + C68209) * C152080 * C152068 +
                    (C68206 + C68205 + C68204) * C152080 * C67857) *
                       C152173) *
                      C1710 +
                  (((C68209 + C68208 + C68207) * C152080 * C67857 +
                    (C69602 + C69603 + C69604) * C152080 * C152068) *
                       C152173 -
                   ((C70609 + C70610 + C70611) * C152080 * C152068 +
                    (C69876 + C69875 + C69874) * C152080 * C67857) *
                       C151956) *
                      C1711 +
                  (((C70611 + C70610 + C70609) * C152080 * C67857 +
                    (C67859 * C8841 + C70600 + C70600 + C152237 * C8847 +
                     C67861 * C8842 + C70601 + C70601 + C152201 * C8848 +
                     C67863 * C8843 + C70602 + C70602 + C67856 * C8849) *
                        C152080 * C152068) *
                       C151956 -
                   ((C69605 + C69606 + C69607) * C152080 * C152068 +
                    (C69604 + C69603 + C69602) * C152080 * C67857) *
                       C152173) *
                      C152224) *
                 C151823) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C67859 * C142 + C67866 + C67866 + C152237 * C158 +
                      C67861 * C143 + C67867 + C67867 + C152201 * C159 +
                      C67863 * C144 + C67868 + C67868 + C67856 * C160) *
                         C152080 * C67857 +
                     (C68204 + C68205 + C68206) * C152080 * C152068) *
                        C152173 -
                    ((C69223 + C69224 + C69225) * C152080 * C152068 +
                     (C67863 * C548 + C68443 + C68443 + C67856 * C572 +
                      C67861 * C549 + C68444 + C68444 + C152201 * C573 +
                      C67859 * C550 + C68445 + C68445 + C152237 * C574) *
                         C152080 * C67857) *
                        C151956) *
                       C152172 +
                   (((C69225 + C69224 + C69223) * C152080 * C67857 +
                     (C67859 * C1538 + C69184 + C69184 + C152237 * C1562 +
                      C67861 * C1537 + C69185 + C69185 + C152201 * C1561 +
                      C67863 * C1536 + C69186 + C69186 + C67856 * C1560) *
                         C152080 * C152068) *
                        C151956 -
                    ((C68207 + C68208 + C68209) * C152080 * C152068 +
                     (C68206 + C68205 + C68204) * C152080 * C67857) *
                        C152173) *
                       C151914) *
                      C335 +
                  ((((C67859 * C549 + C68452 + C68452 + C152237 * C573 +
                      C67861 * C548 + C68453 + C68453 + C152201 * C572 +
                      C67863 * C547 + C68454 + C68454 + C67856 * C571) *
                         C152080 * C67857 +
                     (C69226 + C69227 + C69228) * C152080 * C152068) *
                        C151956 -
                    ((C68212 + C68211 + C68210) * C152080 * C152068 +
                     (C67863 * C145 + C67875 + C67875 + C67856 * C161 +
                      C67861 * C144 + C67876 + C67876 + C152201 * C160 +
                      C67859 * C143 + C67877 + C67877 + C152237 * C159) *
                         C152080 * C67857) *
                        C152173) *
                       C152172 +
                   (((C68210 + C68211 + C68212) * C152080 * C67857 +
                     (C68213 + C68214 + C68215) * C152080 * C152068) *
                        C152173 -
                    ((C67863 * C1535 + C69193 + C69193 + C67856 * C1559 +
                      C67861 * C1536 + C69194 + C69194 + C152201 * C1560 +
                      C67859 * C1537 + C69195 + C69195 + C152237 * C1561) *
                         C152080 * C152068 +
                     (C69228 + C69227 + C69226) * C152080 * C67857) *
                        C151956) *
                       C151914) *
                      C336 +
                  ((((C67859 * C144 + C67878 + C67878 + C152237 * C160 +
                      C67861 * C145 + C67879 + C67879 + C152201 * C161 +
                      C67863 * C146 + C67880 + C67880 + C67856 * C162) *
                         C152080 * C67857 +
                     (C68216 + C68217 + C68218) * C152080 * C152068) *
                        C152173 -
                    ((C69229 + C69230 + C69231) * C152080 * C152068 +
                     (C67863 * C555 + C68467 + C68467 + C67856 * C579 +
                      C67861 * C547 + C68468 + C68468 + C152201 * C571 +
                      C67859 * C548 + C68469 + C68469 + C152237 * C572) *
                         C152080 * C67857) *
                        C151956) *
                       C152172 +
                   (((C69231 + C69230 + C69229) * C152080 * C67857 +
                     (C67859 * C1536 + C69202 + C69202 + C152237 * C1560 +
                      C67861 * C1535 + C69203 + C69203 + C152201 * C1559 +
                      C67863 * C1916 + C69204 + C69204 + C67856 * C1918) *
                         C152080 * C152068) *
                        C151956 -
                    ((C68219 + C68220 + C68221) * C152080 * C152068 +
                     (C68218 + C68217 + C68216) * C152080 * C67857) *
                        C152173) *
                       C151914) *
                      C152208)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C67859 * C142 + C67866 + C67866 + C152237 * C158 +
                     C67861 * C143 + C67867 + C67867 + C152201 * C159 +
                     C67863 * C144 + C67868 + C67868 + C67856 * C160) *
                        C152080 * C67857 +
                    (C68204 + C68205 + C68206) * C152080 * C152068) *
                       C2814 -
                   ((C69223 + C69224 + C69225) * C152080 * C152068 +
                    (C67863 * C548 + C68443 + C68443 + C67856 * C572 +
                     C67861 * C549 + C68444 + C68444 + C152201 * C573 +
                     C67859 * C550 + C68445 + C68445 + C152237 * C574) *
                        C152080 * C67857) *
                       C2815 +
                   ((C67859 * C551 + C68446 + C68446 + C152237 * C575 +
                     C67861 * C552 + C68447 + C68447 + C152201 * C576 +
                     C67863 * C553 + C68448 + C68448 + C67856 * C577) *
                        C152080 * C67857 +
                    (C69871 + C69872 + C69873) * C152080 * C152068) *
                       C2816 -
                   ((C71899 + C71900 + C71901) * C152080 * C152068 +
                    (C67863 * C2452 + C71173 + C71173 + C67856 * C2468 +
                     C67861 * C2453 + C71174 + C71174 + C152201 * C2469 +
                     C67859 * C2454 + C71175 + C71175 + C152237 * C2470) *
                        C152080 * C67857) *
                       C152230) *
                      C152172 +
                  (((C69225 + C69224 + C69223) * C152080 * C67857 +
                    (C69874 + C69875 + C69876) * C152080 * C152068) *
                       C2815 -
                   ((C68207 + C68208 + C68209) * C152080 * C152068 +
                    (C68206 + C68205 + C68204) * C152080 * C67857) *
                       C2814 -
                   ((C69877 + C69878 + C69879) * C152080 * C152068 +
                    (C69873 + C69872 + C69871) * C152080 * C67857) *
                       C2816 +
                   ((C71901 + C71900 + C71899) * C152080 * C67857 +
                    (C67859 * C10149 + C71890 + C71890 + C152237 * C10155 +
                     C67861 * C10150 + C71891 + C71891 + C152201 * C10156 +
                     C67863 * C10151 + C71892 + C71892 + C67856 * C10157) *
                        C152080 * C152068) *
                       C152230) *
                      C151914) *
                 C151823) /
                    (p * q * std::sqrt(p + q));
    d2ee[12] += (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                     (((C67859 * C142 + C67866 + C67866 + C152237 * C158 +
                        C67861 * C143 + C67867 + C67867 + C152201 * C159 +
                        C67863 * C144 + C67868 + C67868 + C67856 * C160) *
                           C152080 * C67857 +
                       (C67859 * C341 + C67869 + C67869 + C152237 * C365 +
                        C67861 * C340 + C67870 + C67870 + C152201 * C364 +
                        C67863 * C339 + C67871 + C67871 + C67856 * C363) *
                           C152080 * C152068) *
                          C151869 * C151851 * C129 -
                      ((C67863 * C338 + C67872 + C67872 + C67856 * C362 +
                        C67861 * C339 + C67873 + C67873 + C152201 * C363 +
                        C67859 * C340 + C67874 + C67874 + C152237 * C364) *
                           C152080 * C152068 +
                       (C67863 * C145 + C67875 + C67875 + C67856 * C161 +
                        C67861 * C144 + C67876 + C67876 + C152201 * C160 +
                        C67859 * C143 + C67877 + C67877 + C152237 * C159) *
                           C152080 * C67857) *
                          C151869 * C151851 * C130 +
                      ((C67859 * C144 + C67878 + C67878 + C152237 * C160 +
                        C67861 * C145 + C67879 + C67879 + C152201 * C161 +
                        C67863 * C146 + C67880 + C67880 + C67856 * C162) *
                           C152080 * C67857 +
                       (C67859 * C339 + C67881 + C67881 + C152237 * C363 +
                        C67861 * C338 + C67882 + C67882 + C152201 * C362 +
                        C67863 * C346 + C67883 + C67883 + C67856 * C370) *
                           C152080 * C152068) *
                          C151869 * C151851 * C131 -
                      ((C67863 * C348 + C67884 + C67884 + C67856 * C372 +
                        C67861 * C346 + C67885 + C67885 + C152201 * C370 +
                        C67859 * C338 + C67886 + C67886 + C152237 * C362) *
                           C152080 * C152068 +
                       (C67863 * C147 + C67887 + C67887 + C67856 * C163 +
                        C67861 * C146 + C67888 + C67888 + C152201 * C162 +
                        C67859 * C145 + C67889 + C67889 + C152237 * C161) *
                           C152080 * C67857) *
                          C151869 * C151851 * C132 +
                      ((C67859 * C146 + C67890 + C67890 + C152237 * C162 +
                        C67861 * C147 + C67891 + C67891 + C152201 * C163 +
                        C67863 * C148 + C67892 + C67892 + C67856 * C164) *
                           C152080 * C67857 +
                       (C67859 * C346 + C67893 + C67893 + C152237 * C370 +
                        C67861 * C348 + C67894 + C67894 + C152201 * C372 +
                        C67863 * C743 + C67895 + C67895 + C67856 * C745) *
                           C152080 * C152068) *
                          C151869 * C151851 * C133) +
                 std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                     ((((C67859 * C142 + C67866 + C67866 + C152237 * C158 +
                         C67861 * C143 + C67867 + C67867 + C152201 * C159 +
                         C67863 * C144 + C67868 + C67868 + C67856 * C160) *
                            C152080 * C67857 +
                        (C68204 + C68205 + C68206) * C152080 * C152068) *
                           C151869 * C152258 -
                       ((C68207 + C68208 + C68209) * C152080 * C152068 +
                        (C68206 + C68205 + C68204) * C152080 * C67857) *
                           C151869 * C152244 +
                       ((C68209 + C68208 + C68207) * C152080 * C67857 +
                        (C67859 * C1356 + C68129 + C68129 + C152237 * C1372 +
                         C67861 * C1355 + C68130 + C68130 + C152201 * C1371 +
                         C67863 * C1354 + C68131 + C68131 + C67856 * C1370) *
                            C152080 * C152068) *
                           C151869 * C152214) *
                          C335 +
                      (((C68210 + C68211 + C68212) * C152080 * C67857 +
                        (C68213 + C68214 + C68215) * C152080 * C152068) *
                           C151869 * C152244 -
                       ((C68212 + C68211 + C68210) * C152080 * C152068 +
                        (C67863 * C145 + C67875 + C67875 + C67856 * C161 +
                         C67861 * C144 + C67876 + C67876 + C152201 * C160 +
                         C67859 * C143 + C67877 + C67877 + C152237 * C159) *
                            C152080 * C67857) *
                           C151869 * C152258 -
                       ((C67863 * C1353 + C68147 + C68147 + C67856 * C1369 +
                         C67861 * C1354 + C68148 + C68148 + C152201 * C1370 +
                         C67859 * C1355 + C68149 + C68149 + C152237 * C1371) *
                            C152080 * C152068 +
                        (C68215 + C68214 + C68213) * C152080 * C67857) *
                           C151869 * C152214) *
                          C336 +
                      (((C67859 * C144 + C67878 + C67878 + C152237 * C160 +
                         C67861 * C145 + C67879 + C67879 + C152201 * C161 +
                         C67863 * C146 + C67880 + C67880 + C67856 * C162) *
                            C152080 * C67857 +
                        (C68216 + C68217 + C68218) * C152080 * C152068) *
                           C151869 * C152258 -
                       ((C68219 + C68220 + C68221) * C152080 * C152068 +
                        (C68218 + C68217 + C68216) * C152080 * C67857) *
                           C151869 * C152244 +
                       ((C68221 + C68220 + C68219) * C152080 * C67857 +
                        (C67859 * C1354 + C68165 + C68165 + C152237 * C1370 +
                         C67861 * C1353 + C68166 + C68166 + C152201 * C1369 +
                         C67863 * C1715 + C68167 + C68167 + C67856 * C1717) *
                            C152080 * C152068) *
                           C151869 * C152214) *
                          C152208)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C67859 * C142 + C67866 + C67866 + C152237 * C158 +
                     C67861 * C143 + C67867 + C67867 + C152201 * C159 +
                     C67863 * C144 + C67868 + C67868 + C67856 * C160) *
                        C152080 * C67857 +
                    (C68204 + C68205 + C68206) * C152080 * C152068) *
                       C152259 -
                   ((C67863 * C1085 + C68440 + C68440 + C67856 * C1097 +
                     C67861 * C1084 + C68441 + C68441 + C152201 * C1096 +
                     C67859 * C1083 + C68442 + C68442 + C152237 * C1095) *
                        C152080 * C152068 +
                    (C67863 * C548 + C68443 + C68443 + C67856 * C572 +
                     C67861 * C549 + C68444 + C68444 + C152201 * C573 +
                     C67859 * C550 + C68445 + C68445 + C152237 * C574) *
                        C152080 * C67857) *
                       C152246 +
                   ((C67859 * C551 + C68446 + C68446 + C152237 * C575 +
                     C67861 * C552 + C68447 + C68447 + C152201 * C576 +
                     C67863 * C553 + C68448 + C68448 + C67856 * C577) *
                        C152080 * C67857 +
                    (C67859 * C1534 + C68449 + C68449 + C152237 * C1558 +
                     C67861 * C1533 + C68450 + C68450 + C152201 * C1557 +
                     C67863 * C1532 + C68451 + C68451 + C67856 * C1556) *
                        C152080 * C152068) *
                       C152217) *
                      C151851 * C335 +
                  (((C67859 * C549 + C68452 + C68452 + C152237 * C573 +
                     C67861 * C548 + C68453 + C68453 + C152201 * C572 +
                     C67863 * C547 + C68454 + C68454 + C67856 * C571) *
                        C152080 * C67857 +
                    (C67859 * C1084 + C68455 + C68455 + C152237 * C1096 +
                     C67861 * C1085 + C68456 + C68456 + C152201 * C1097 +
                     C67863 * C1086 + C68457 + C68457 + C67856 * C1098) *
                        C152080 * C152068) *
                       C152246 -
                   ((C68212 + C68211 + C68210) * C152080 * C152068 +
                    (C67863 * C145 + C67875 + C67875 + C67856 * C161 +
                     C67861 * C144 + C67876 + C67876 + C152201 * C160 +
                     C67859 * C143 + C67877 + C67877 + C152237 * C159) *
                        C152080 * C67857) *
                       C152259 -
                   ((C67863 * C1531 + C68458 + C68458 + C67856 * C1555 +
                     C67861 * C1532 + C68459 + C68459 + C152201 * C1556 +
                     C67859 * C1533 + C68460 + C68460 + C152237 * C1557) *
                        C152080 * C152068 +
                    (C67863 * C554 + C68461 + C68461 + C67856 * C578 +
                     C67861 * C553 + C68462 + C68462 + C152201 * C577 +
                     C67859 * C552 + C68463 + C68463 + C152237 * C576) *
                        C152080 * C67857) *
                       C152217) *
                      C151851 * C336 +
                  (((C67859 * C144 + C67878 + C67878 + C152237 * C160 +
                     C67861 * C145 + C67879 + C67879 + C152201 * C161 +
                     C67863 * C146 + C67880 + C67880 + C67856 * C162) *
                        C152080 * C67857 +
                    (C68216 + C68217 + C68218) * C152080 * C152068) *
                       C152259 -
                   ((C67863 * C1087 + C68464 + C68464 + C67856 * C1099 +
                     C67861 * C1086 + C68465 + C68465 + C152201 * C1098 +
                     C67859 * C1085 + C68466 + C68466 + C152237 * C1097) *
                        C152080 * C152068 +
                    (C67863 * C555 + C68467 + C68467 + C67856 * C579 +
                     C67861 * C547 + C68468 + C68468 + C152201 * C571 +
                     C67859 * C548 + C68469 + C68469 + C152237 * C572) *
                        C152080 * C67857) *
                       C152246 +
                   ((C67859 * C553 + C68470 + C68470 + C152237 * C577 +
                     C67861 * C554 + C68471 + C68471 + C152201 * C578 +
                     C67863 * C556 + C68472 + C68472 + C67856 * C580) *
                        C152080 * C67857 +
                    (C67859 * C1532 + C68473 + C68473 + C152237 * C1556 +
                     C67861 * C1531 + C68474 + C68474 + C152201 * C1555 +
                     C67863 * C2677 + C68475 + C68475 + C67856 * C2679) *
                        C152080 * C152068) *
                       C152217) *
                      C151851 * C152208)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                 ((((C67859 * C142 + C67866 + C67866 + C152237 * C158 +
                     C67861 * C143 + C67867 + C67867 + C152201 * C159 +
                     C67863 * C144 + C67868 + C67868 + C67856 * C160) *
                        C152080 * C67857 +
                    (C68204 + C68205 + C68206) * C152080 * C152068) *
                       C151869 * C1259 -
                   ((C68207 + C68208 + C68209) * C152080 * C152068 +
                    (C68206 + C68205 + C68204) * C152080 * C67857) *
                       C151869 * C1260 +
                   ((C68209 + C68208 + C68207) * C152080 * C67857 +
                    (C67859 * C1356 + C68129 + C68129 + C152237 * C1372 +
                     C67861 * C1355 + C68130 + C68130 + C152201 * C1371 +
                     C67863 * C1354 + C68131 + C68131 + C67856 * C1370) *
                        C152080 * C152068) *
                       C151869 * C152214) *
                      C152255 +
                  (((C68210 + C68211 + C68212) * C152080 * C67857 +
                    (C68213 + C68214 + C68215) * C152080 * C152068) *
                       C151869 * C1260 -
                   ((C68212 + C68211 + C68210) * C152080 * C152068 +
                    (C67863 * C145 + C67875 + C67875 + C67856 * C161 +
                     C67861 * C144 + C67876 + C67876 + C152201 * C160 +
                     C67859 * C143 + C67877 + C67877 + C152237 * C159) *
                        C152080 * C67857) *
                       C151869 * C1259 -
                   ((C67863 * C1353 + C68147 + C68147 + C67856 * C1369 +
                     C67861 * C1354 + C68148 + C68148 + C152201 * C1370 +
                     C67859 * C1355 + C68149 + C68149 + C152237 * C1371) *
                        C152080 * C152068 +
                    (C68215 + C68214 + C68213) * C152080 * C67857) *
                       C151869 * C152214) *
                      C152240 +
                  (((C67859 * C144 + C67878 + C67878 + C152237 * C160 +
                     C67861 * C145 + C67879 + C67879 + C152201 * C161 +
                     C67863 * C146 + C67880 + C67880 + C67856 * C162) *
                        C152080 * C67857 +
                    (C68216 + C68217 + C68218) * C152080 * C152068) *
                       C151869 * C1259 -
                   ((C68219 + C68220 + C68221) * C152080 * C152068 +
                    (C68218 + C68217 + C68216) * C152080 * C67857) *
                       C151869 * C1260 +
                   ((C68221 + C68220 + C68219) * C152080 * C67857 +
                    (C67859 * C1354 + C68165 + C68165 + C152237 * C1370 +
                     C67861 * C1353 + C68166 + C68166 + C152201 * C1369 +
                     C67863 * C1715 + C68167 + C68167 + C67856 * C1717) *
                        C152080 * C152068) *
                       C151869 * C152214) *
                      C152208)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                 (((C67859 * C142 + C67866 + C67866 + C152237 * C158 +
                    C67861 * C143 + C67867 + C67867 + C152201 * C159 +
                    C67863 * C144 + C67868 + C67868 + C67856 * C160) *
                       C152080 * C67857 +
                   (C68204 + C68205 + C68206) * C152080 * C152068) *
                      C151869 * C1347 -
                  ((C68207 + C68208 + C68209) * C152080 * C152068 +
                   (C68206 + C68205 + C68204) * C152080 * C67857) *
                      C151869 * C1348 +
                  ((C68209 + C68208 + C68207) * C152080 * C67857 +
                   (C69602 + C69603 + C69604) * C152080 * C152068) *
                      C151869 * C1349 -
                  ((C69605 + C69606 + C69607) * C152080 * C152068 +
                   (C69604 + C69603 + C69602) * C152080 * C67857) *
                      C151869 * C1350 +
                  ((C69607 + C69606 + C69605) * C152080 * C67857 +
                   (C67859 * C7801 + C69587 + C69587 + C152237 * C7807 +
                    C67861 * C7802 + C69588 + C69588 + C152201 * C7808 +
                    C67863 * C7803 + C69589 + C69589 + C67856 * C7809) *
                       C152080 * C152068) *
                      C151869 * C1351) *
                 C151823) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C67859 * C142 + C67866 + C67866 + C152237 * C158 +
                     C67861 * C143 + C67867 + C67867 + C152201 * C159 +
                     C67863 * C144 + C67868 + C67868 + C67856 * C160) *
                        C152080 * C67857 +
                    (C68204 + C68205 + C68206) * C152080 * C152068) *
                       C152259 -
                   ((C69223 + C69224 + C69225) * C152080 * C152068 +
                    (C67863 * C548 + C68443 + C68443 + C67856 * C572 +
                     C67861 * C549 + C68444 + C68444 + C152201 * C573 +
                     C67859 * C550 + C68445 + C68445 + C152237 * C574) *
                        C152080 * C67857) *
                       C152246 +
                   ((C67859 * C551 + C68446 + C68446 + C152237 * C575 +
                     C67861 * C552 + C68447 + C68447 + C152201 * C576 +
                     C67863 * C553 + C68448 + C68448 + C67856 * C577) *
                        C152080 * C67857 +
                    (C69871 + C69872 + C69873) * C152080 * C152068) *
                       C152217) *
                      C1259 +
                  (((C69225 + C69224 + C69223) * C152080 * C67857 +
                    (C69874 + C69875 + C69876) * C152080 * C152068) *
                       C152246 -
                   ((C68207 + C68208 + C68209) * C152080 * C152068 +
                    (C68206 + C68205 + C68204) * C152080 * C67857) *
                       C152259 -
                   ((C69877 + C69878 + C69879) * C152080 * C152068 +
                    (C69873 + C69872 + C69871) * C152080 * C67857) *
                       C152217) *
                      C1260 +
                  (((C68209 + C68208 + C68207) * C152080 * C67857 +
                    (C69602 + C69603 + C69604) * C152080 * C152068) *
                       C152259 -
                   ((C67863 * C2055 + C69847 + C69847 + C67856 * C2063 +
                     C67861 * C2054 + C69848 + C69848 + C152201 * C2062 +
                     C67859 * C2053 + C69849 + C69849 + C152237 * C2061) *
                        C152080 * C152068 +
                    (C69876 + C69875 + C69874) * C152080 * C67857) *
                       C152246 +
                   ((C69879 + C69878 + C69877) * C152080 * C67857 +
                    (C67859 * C8064 + C69850 + C69850 + C152237 * C8070 +
                     C67861 * C8065 + C69851 + C69851 + C152201 * C8071 +
                     C67863 * C8066 + C69852 + C69852 + C67856 * C8072) *
                        C152080 * C152068) *
                       C152217) *
                      C152214) *
                 C151823) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C67859 * C142 + C67866 + C67866 + C152237 * C158 +
                     C67861 * C143 + C67867 + C67867 + C152201 * C159 +
                     C67863 * C144 + C67868 + C67868 + C67856 * C160) *
                        C152080 * C67857 +
                    (C68204 + C68205 + C68206) * C152080 * C152068) *
                       C2215 -
                   ((C69223 + C69224 + C69225) * C152080 * C152068 +
                    (C67863 * C548 + C68443 + C68443 + C67856 * C572 +
                     C67861 * C549 + C68444 + C68444 + C152201 * C573 +
                     C67859 * C550 + C68445 + C68445 + C152237 * C574) *
                        C152080 * C67857) *
                       C2216 +
                   ((C67859 * C551 + C68446 + C68446 + C152237 * C575 +
                     C67861 * C552 + C68447 + C68447 + C152201 * C576 +
                     C67863 * C553 + C68448 + C68448 + C67856 * C577) *
                        C152080 * C67857 +
                    (C69871 + C69872 + C69873) * C152080 * C152068) *
                       C152217) *
                      C151851 * C152255 +
                  (((C67859 * C549 + C68452 + C68452 + C152237 * C573 +
                     C67861 * C548 + C68453 + C68453 + C152201 * C572 +
                     C67863 * C547 + C68454 + C68454 + C67856 * C571) *
                        C152080 * C67857 +
                    (C69226 + C69227 + C69228) * C152080 * C152068) *
                       C2216 -
                   ((C68212 + C68211 + C68210) * C152080 * C152068 +
                    (C67863 * C145 + C67875 + C67875 + C67856 * C161 +
                     C67861 * C144 + C67876 + C67876 + C152201 * C160 +
                     C67859 * C143 + C67877 + C67877 + C152237 * C159) *
                        C152080 * C67857) *
                       C2215 -
                   ((C67863 * C1531 + C68458 + C68458 + C67856 * C1555 +
                     C67861 * C1532 + C68459 + C68459 + C152201 * C1556 +
                     C67859 * C1533 + C68460 + C68460 + C152237 * C1557) *
                        C152080 * C152068 +
                    (C67863 * C554 + C68461 + C68461 + C67856 * C578 +
                     C67861 * C553 + C68462 + C68462 + C152201 * C577 +
                     C67859 * C552 + C68463 + C68463 + C152237 * C576) *
                        C152080 * C67857) *
                       C152217) *
                      C151851 * C152240 +
                  (((C67859 * C144 + C67878 + C67878 + C152237 * C160 +
                     C67861 * C145 + C67879 + C67879 + C152201 * C161 +
                     C67863 * C146 + C67880 + C67880 + C67856 * C162) *
                        C152080 * C67857 +
                    (C68216 + C68217 + C68218) * C152080 * C152068) *
                       C2215 -
                   ((C69229 + C69230 + C69231) * C152080 * C152068 +
                    (C67863 * C555 + C68467 + C68467 + C67856 * C579 +
                     C67861 * C547 + C68468 + C68468 + C152201 * C571 +
                     C67859 * C548 + C68469 + C68469 + C152237 * C572) *
                        C152080 * C67857) *
                       C2216 +
                   ((C67859 * C553 + C68470 + C68470 + C152237 * C577 +
                     C67861 * C554 + C68471 + C68471 + C152201 * C578 +
                     C67863 * C556 + C68472 + C68472 + C67856 * C580) *
                        C152080 * C67857 +
                    (C67859 * C1532 + C68473 + C68473 + C152237 * C1556 +
                     C67861 * C1531 + C68474 + C68474 + C152201 * C1555 +
                     C67863 * C2677 + C68475 + C68475 + C67856 * C2679) *
                        C152080 * C152068) *
                       C152217) *
                      C151851 * C152208)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C67859 * C142 + C67866 + C67866 + C152237 * C158 +
                     C67861 * C143 + C67867 + C67867 + C152201 * C159 +
                     C67863 * C144 + C67868 + C67868 + C67856 * C160) *
                        C152080 * C67857 +
                    (C68204 + C68205 + C68206) * C152080 * C152068) *
                       C2215 -
                   ((C69223 + C69224 + C69225) * C152080 * C152068 +
                    (C67863 * C548 + C68443 + C68443 + C67856 * C572 +
                     C67861 * C549 + C68444 + C68444 + C152201 * C573 +
                     C67859 * C550 + C68445 + C68445 + C152237 * C574) *
                        C152080 * C67857) *
                       C2216 +
                   ((C67859 * C551 + C68446 + C68446 + C152237 * C575 +
                     C67861 * C552 + C68447 + C68447 + C152201 * C576 +
                     C67863 * C553 + C68448 + C68448 + C67856 * C577) *
                        C152080 * C67857 +
                    (C69871 + C69872 + C69873) * C152080 * C152068) *
                       C152217) *
                      C152258 +
                  (((C69225 + C69224 + C69223) * C152080 * C67857 +
                    (C69874 + C69875 + C69876) * C152080 * C152068) *
                       C2216 -
                   ((C68207 + C68208 + C68209) * C152080 * C152068 +
                    (C68206 + C68205 + C68204) * C152080 * C67857) *
                       C2215 -
                   ((C69877 + C69878 + C69879) * C152080 * C152068 +
                    (C69873 + C69872 + C69871) * C152080 * C67857) *
                       C152217) *
                      C152244 +
                  (((C68209 + C68208 + C68207) * C152080 * C67857 +
                    (C69602 + C69603 + C69604) * C152080 * C152068) *
                       C2215 -
                   ((C70609 + C70610 + C70611) * C152080 * C152068 +
                    (C69876 + C69875 + C69874) * C152080 * C67857) *
                       C2216 +
                   ((C69879 + C69878 + C69877) * C152080 * C67857 +
                    (C67859 * C8064 + C69850 + C69850 + C152237 * C8070 +
                     C67861 * C8065 + C69851 + C69851 + C152201 * C8071 +
                     C67863 * C8066 + C69852 + C69852 + C67856 * C8072) *
                        C152080 * C152068) *
                       C152217) *
                      C152214) *
                 C151823) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                 (((C67859 * C142 + C67866 + C67866 + C152237 * C158 +
                    C67861 * C143 + C67867 + C67867 + C152201 * C159 +
                    C67863 * C144 + C67868 + C67868 + C67856 * C160) *
                       C152080 * C67857 +
                   (C68204 + C68205 + C68206) * C152080 * C152068) *
                      C2446 -
                  ((C69223 + C69224 + C69225) * C152080 * C152068 +
                   (C67863 * C548 + C68443 + C68443 + C67856 * C572 +
                    C67861 * C549 + C68444 + C68444 + C152201 * C573 +
                    C67859 * C550 + C68445 + C68445 + C152237 * C574) *
                       C152080 * C67857) *
                      C2447 +
                  ((C67859 * C551 + C68446 + C68446 + C152237 * C575 +
                    C67861 * C552 + C68447 + C68447 + C152201 * C576 +
                    C67863 * C553 + C68448 + C68448 + C67856 * C577) *
                       C152080 * C67857 +
                   (C69871 + C69872 + C69873) * C152080 * C152068) *
                      C2448 -
                  ((C67863 * C2957 + C71170 + C71170 + C67856 * C2965 +
                    C67861 * C2956 + C71171 + C71171 + C152201 * C2964 +
                    C67859 * C2955 + C71172 + C71172 + C152237 * C2963) *
                       C152080 * C152068 +
                   (C67863 * C2452 + C71173 + C71173 + C67856 * C2468 +
                    C67861 * C2453 + C71174 + C71174 + C152201 * C2469 +
                    C67859 * C2454 + C71175 + C71175 + C152237 * C2470) *
                       C152080 * C67857) *
                      C2449 +
                  ((C67859 * C2455 + C71176 + C71176 + C152237 * C2471 +
                    C67861 * C2456 + C71177 + C71177 + C152201 * C2472 +
                    C67863 * C2457 + C71178 + C71178 + C67856 * C2473) *
                       C152080 * C67857 +
                   (C67859 * C9426 + C71179 + C71179 + C152237 * C9432 +
                    C67861 * C9427 + C71180 + C71180 + C152201 * C9433 +
                    C67863 * C9428 + C71181 + C71181 + C67856 * C9434) *
                       C152080 * C152068) *
                      C2450) *
                 C151851 * C151823) /
                    (p * q * std::sqrt(p + q));
    d2ee[13] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C67859 * C142 + C67866 + C67866 + C152237 * C158 +
                      C67861 * C143 + C67867 + C67867 + C152201 * C159 +
                      C67863 * C144 + C67868 + C67868 + C67856 * C160) *
                         C152080 * C67857 +
                     (C68204 + C68205 + C68206) * C152080 * C152068) *
                        C152173 -
                    ((C69223 + C69224 + C69225) * C152080 * C152068 +
                     (C67863 * C548 + C68443 + C68443 + C67856 * C572 +
                      C67861 * C549 + C68444 + C68444 + C152201 * C573 +
                      C67859 * C550 + C68445 + C68445 + C152237 * C574) *
                         C152080 * C67857) *
                        C151956) *
                       C1259 +
                   (((C69225 + C69224 + C69223) * C152080 * C67857 +
                     (C69874 + C69875 + C69876) * C152080 * C152068) *
                        C151956 -
                    ((C68207 + C68208 + C68209) * C152080 * C152068 +
                     (C68206 + C68205 + C68204) * C152080 * C67857) *
                        C152173) *
                       C1260 +
                   (((C68209 + C68208 + C68207) * C152080 * C67857 +
                     (C69602 + C69603 + C69604) * C152080 * C152068) *
                        C152173 -
                    ((C67863 * C2055 + C69847 + C69847 + C67856 * C2063 +
                      C67861 * C2054 + C69848 + C69848 + C152201 * C2062 +
                      C67859 * C2053 + C69849 + C69849 + C152237 * C2061) *
                         C152080 * C152068 +
                     (C69876 + C69875 + C69874) * C152080 * C67857) *
                        C151956) *
                       C152214) *
                      C152158 +
                  ((((C67859 * C549 + C68452 + C68452 + C152237 * C573 +
                      C67861 * C548 + C68453 + C68453 + C152201 * C572 +
                      C67863 * C547 + C68454 + C68454 + C67856 * C571) *
                         C152080 * C67857 +
                     (C69226 + C69227 + C69228) * C152080 * C152068) *
                        C151956 -
                    ((C68212 + C68211 + C68210) * C152080 * C152068 +
                     (C67863 * C145 + C67875 + C67875 + C67856 * C161 +
                      C67861 * C144 + C67876 + C67876 + C152201 * C160 +
                      C67859 * C143 + C67877 + C67877 + C152237 * C159) *
                         C152080 * C67857) *
                        C152173) *
                       C1259 +
                   (((C68210 + C68211 + C68212) * C152080 * C67857 +
                     (C68213 + C68214 + C68215) * C152080 * C152068) *
                        C152173 -
                    ((C70397 + C70398 + C70399) * C152080 * C152068 +
                     (C69228 + C69227 + C69226) * C152080 * C67857) *
                        C151956) *
                       C1260 +
                   (((C70399 + C70398 + C70397) * C152080 * C67857 +
                     (C67859 * C2054 + C70388 + C70388 + C152237 * C2062 +
                      C67861 * C2055 + C70389 + C70389 + C152201 * C2063 +
                      C67863 * C2056 + C70390 + C70390 + C67856 * C2064) *
                         C152080 * C152068) *
                        C151956 -
                    ((C70089 + C70090 + C70091) * C152080 * C152068 +
                     (C68215 + C68214 + C68213) * C152080 * C67857) *
                        C152173) *
                       C152214) *
                      C151834)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C67859 * C142 + C67866 + C67866 + C152237 * C158 +
                     C67861 * C143 + C67867 + C67867 + C152201 * C159 +
                     C67863 * C144 + C67868 + C67868 + C67856 * C160) *
                        C152080 * C67857 +
                    (C68204 + C68205 + C68206) * C152080 * C152068) *
                       C152173 -
                   ((C67863 * C1085 + C68440 + C68440 + C67856 * C1097 +
                     C67861 * C1084 + C68441 + C68441 + C152201 * C1096 +
                     C67859 * C1083 + C68442 + C68442 + C152237 * C1095) *
                        C152080 * C152068 +
                    (C67863 * C548 + C68443 + C68443 + C67856 * C572 +
                     C67861 * C549 + C68444 + C68444 + C152201 * C573 +
                     C67859 * C550 + C68445 + C68445 + C152237 * C574) *
                        C152080 * C67857) *
                       C151956) *
                      C151851 * C739 +
                  (((C67859 * C549 + C68452 + C68452 + C152237 * C573 +
                     C67861 * C548 + C68453 + C68453 + C152201 * C572 +
                     C67863 * C547 + C68454 + C68454 + C67856 * C571) *
                        C152080 * C67857 +
                    (C67859 * C1084 + C68455 + C68455 + C152237 * C1096 +
                     C67861 * C1085 + C68456 + C68456 + C152201 * C1097 +
                     C67863 * C1086 + C68457 + C68457 + C67856 * C1098) *
                        C152080 * C152068) *
                       C151956 -
                   ((C68212 + C68211 + C68210) * C152080 * C152068 +
                    (C67863 * C145 + C67875 + C67875 + C67856 * C161 +
                     C67861 * C144 + C67876 + C67876 + C152201 * C160 +
                     C67859 * C143 + C67877 + C67877 + C152237 * C159) *
                        C152080 * C67857) *
                       C152173) *
                      C151851 * C740 +
                  (((C67859 * C144 + C67878 + C67878 + C152237 * C160 +
                     C67861 * C145 + C67879 + C67879 + C152201 * C161 +
                     C67863 * C146 + C67880 + C67880 + C67856 * C162) *
                        C152080 * C67857 +
                    (C68216 + C68217 + C68218) * C152080 * C152068) *
                       C152173 -
                   ((C67863 * C1087 + C68464 + C68464 + C67856 * C1099 +
                     C67861 * C1086 + C68465 + C68465 + C152201 * C1098 +
                     C67859 * C1085 + C68466 + C68466 + C152237 * C1097) *
                        C152080 * C152068 +
                    (C67863 * C555 + C68467 + C68467 + C67856 * C579 +
                     C67861 * C547 + C68468 + C68468 + C152201 * C571 +
                     C67859 * C548 + C68469 + C68469 + C152237 * C572) *
                        C152080 * C67857) *
                       C151956) *
                      C151851 * C741 +
                  (((C67859 * C547 + C68882 + C68882 + C152237 * C571 +
                     C67861 * C555 + C68883 + C68883 + C152201 * C579 +
                     C67863 * C557 + C68884 + C68884 + C67856 * C581) *
                        C152080 * C67857 +
                    (C67859 * C1086 + C68885 + C68885 + C152237 * C1098 +
                     C67861 * C1087 + C68886 + C68886 + C152201 * C1099 +
                     C67863 * C1088 + C68887 + C68887 + C67856 * C1100) *
                        C152080 * C152068) *
                       C151956 -
                   ((C68687 + C68686 + C68685) * C152080 * C152068 +
                    (C67863 * C147 + C67887 + C67887 + C67856 * C163 +
                     C67861 * C146 + C67888 + C67888 + C152201 * C162 +
                     C67859 * C145 + C67889 + C67889 + C152237 * C161) *
                        C152080 * C67857) *
                       C152173) *
                      C151851 * C152218)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C67859 * C142 + C67866 + C67866 + C152237 * C158 +
                     C67861 * C143 + C67867 + C67867 + C152201 * C159 +
                     C67863 * C144 + C67868 + C67868 + C67856 * C160) *
                        C152080 * C67857 +
                    (C68204 + C68205 + C68206) * C152080 * C152068) *
                       C2814 -
                   ((C69223 + C69224 + C69225) * C152080 * C152068 +
                    (C67863 * C548 + C68443 + C68443 + C67856 * C572 +
                     C67861 * C549 + C68444 + C68444 + C152201 * C573 +
                     C67859 * C550 + C68445 + C68445 + C152237 * C574) *
                        C152080 * C67857) *
                       C2815 +
                   ((C67859 * C551 + C68446 + C68446 + C152237 * C575 +
                     C67861 * C552 + C68447 + C68447 + C152201 * C576 +
                     C67863 * C553 + C68448 + C68448 + C67856 * C577) *
                        C152080 * C67857 +
                    (C69871 + C69872 + C69873) * C152080 * C152068) *
                       C2816 -
                   ((C67863 * C2957 + C71170 + C71170 + C67856 * C2965 +
                     C67861 * C2956 + C71171 + C71171 + C152201 * C2964 +
                     C67859 * C2955 + C71172 + C71172 + C152237 * C2963) *
                        C152080 * C152068 +
                    (C67863 * C2452 + C71173 + C71173 + C67856 * C2468 +
                     C67861 * C2453 + C71174 + C71174 + C152201 * C2469 +
                     C67859 * C2454 + C71175 + C71175 + C152237 * C2470) *
                        C152080 * C67857) *
                       C152230) *
                      C151851 * C152158 +
                  (((C67859 * C549 + C68452 + C68452 + C152237 * C573 +
                     C67861 * C548 + C68453 + C68453 + C152201 * C572 +
                     C67863 * C547 + C68454 + C68454 + C67856 * C571) *
                        C152080 * C67857 +
                    (C69226 + C69227 + C69228) * C152080 * C152068) *
                       C2815 -
                   ((C68212 + C68211 + C68210) * C152080 * C152068 +
                    (C67863 * C145 + C67875 + C67875 + C67856 * C161 +
                     C67861 * C144 + C67876 + C67876 + C152201 * C160 +
                     C67859 * C143 + C67877 + C67877 + C152237 * C159) *
                        C152080 * C67857) *
                       C2814 -
                   ((C71487 + C71488 + C71489) * C152080 * C152068 +
                    (C67863 * C554 + C68461 + C68461 + C67856 * C578 +
                     C67861 * C553 + C68462 + C68462 + C152201 * C577 +
                     C67859 * C552 + C68463 + C68463 + C152237 * C576) *
                        C152080 * C67857) *
                       C2816 +
                   ((C67859 * C2453 + C71684 + C71684 + C152237 * C2469 +
                     C67861 * C2452 + C71685 + C71685 + C152201 * C2468 +
                     C67863 * C2451 + C71686 + C71686 + C67856 * C2467) *
                        C152080 * C67857 +
                    (C67859 * C2956 + C71687 + C71687 + C152237 * C2964 +
                     C67861 * C2957 + C71688 + C71688 + C152201 * C2965 +
                     C67863 * C2958 + C71689 + C71689 + C67856 * C2966) *
                        C152080 * C152068) *
                       C152230) *
                      C151851 * C151834)) /
                    (p * q * std::sqrt(p + q));
    d2ee[14] += (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 ((((C67859 * C142 + C67866 + C67866 + C152237 * C158 +
                     C67861 * C143 + C67867 + C67867 + C152201 * C159 +
                     C67863 * C144 + C67868 + C67868 + C67856 * C160) *
                        C152080 * C67857 +
                    (C68204 + C68205 + C68206) * C152080 * C152068) *
                       C151869 * C152258 -
                   ((C68207 + C68208 + C68209) * C152080 * C152068 +
                    (C68206 + C68205 + C68204) * C152080 * C67857) *
                       C151869 * C152244 +
                   ((C68209 + C68208 + C68207) * C152080 * C67857 +
                    (C67859 * C1356 + C68129 + C68129 + C152237 * C1372 +
                     C67861 * C1355 + C68130 + C68130 + C152201 * C1371 +
                     C67863 * C1354 + C68131 + C68131 + C67856 * C1370) *
                        C152080 * C152068) *
                       C151869 * C152214) *
                      C335 +
                  (((C68210 + C68211 + C68212) * C152080 * C67857 +
                    (C68213 + C68214 + C68215) * C152080 * C152068) *
                       C151869 * C152244 -
                   ((C68212 + C68211 + C68210) * C152080 * C152068 +
                    (C67863 * C145 + C67875 + C67875 + C67856 * C161 +
                     C67861 * C144 + C67876 + C67876 + C152201 * C160 +
                     C67859 * C143 + C67877 + C67877 + C152237 * C159) *
                        C152080 * C67857) *
                       C151869 * C152258 -
                   ((C67863 * C1353 + C68147 + C68147 + C67856 * C1369 +
                     C67861 * C1354 + C68148 + C68148 + C152201 * C1370 +
                     C67859 * C1355 + C68149 + C68149 + C152237 * C1371) *
                        C152080 * C152068 +
                    (C68215 + C68214 + C68213) * C152080 * C67857) *
                       C151869 * C152214) *
                      C336 +
                  (((C67859 * C144 + C67878 + C67878 + C152237 * C160 +
                     C67861 * C145 + C67879 + C67879 + C152201 * C161 +
                     C67863 * C146 + C67880 + C67880 + C67856 * C162) *
                        C152080 * C67857 +
                    (C68216 + C68217 + C68218) * C152080 * C152068) *
                       C151869 * C152258 -
                   ((C68219 + C68220 + C68221) * C152080 * C152068 +
                    (C68218 + C68217 + C68216) * C152080 * C67857) *
                       C151869 * C152244 +
                   ((C68221 + C68220 + C68219) * C152080 * C67857 +
                    (C67859 * C1354 + C68165 + C68165 + C152237 * C1370 +
                     C67861 * C1353 + C68166 + C68166 + C152201 * C1369 +
                     C67863 * C1715 + C68167 + C68167 + C67856 * C1717) *
                        C152080 * C152068) *
                       C151869 * C152214) *
                      C152208)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 (((C67859 * C142 + C67866 + C67866 + C152237 * C158 +
                    C67861 * C143 + C67867 + C67867 + C152201 * C159 +
                    C67863 * C144 + C67868 + C67868 + C67856 * C160) *
                       C152080 * C67857 +
                   (C67859 * C341 + C67869 + C67869 + C152237 * C365 +
                    C67861 * C340 + C67870 + C67870 + C152201 * C364 +
                    C67863 * C339 + C67871 + C67871 + C67856 * C363) *
                       C152080 * C152068) *
                      C151869 * C151851 * C129 -
                  ((C67863 * C338 + C67872 + C67872 + C67856 * C362 +
                    C67861 * C339 + C67873 + C67873 + C152201 * C363 +
                    C67859 * C340 + C67874 + C67874 + C152237 * C364) *
                       C152080 * C152068 +
                   (C67863 * C145 + C67875 + C67875 + C67856 * C161 +
                    C67861 * C144 + C67876 + C67876 + C152201 * C160 +
                    C67859 * C143 + C67877 + C67877 + C152237 * C159) *
                       C152080 * C67857) *
                      C151869 * C151851 * C130 +
                  ((C67859 * C144 + C67878 + C67878 + C152237 * C160 +
                    C67861 * C145 + C67879 + C67879 + C152201 * C161 +
                    C67863 * C146 + C67880 + C67880 + C67856 * C162) *
                       C152080 * C67857 +
                   (C67859 * C339 + C67881 + C67881 + C152237 * C363 +
                    C67861 * C338 + C67882 + C67882 + C152201 * C362 +
                    C67863 * C346 + C67883 + C67883 + C67856 * C370) *
                       C152080 * C152068) *
                      C151869 * C151851 * C131 -
                  ((C67863 * C348 + C67884 + C67884 + C67856 * C372 +
                    C67861 * C346 + C67885 + C67885 + C152201 * C370 +
                    C67859 * C338 + C67886 + C67886 + C152237 * C362) *
                       C152080 * C152068 +
                   (C67863 * C147 + C67887 + C67887 + C67856 * C163 +
                    C67861 * C146 + C67888 + C67888 + C152201 * C162 +
                    C67859 * C145 + C67889 + C67889 + C152237 * C161) *
                       C152080 * C67857) *
                      C151869 * C151851 * C132 +
                  ((C67859 * C146 + C67890 + C67890 + C152237 * C162 +
                    C67861 * C147 + C67891 + C67891 + C152201 * C163 +
                    C67863 * C148 + C67892 + C67892 + C67856 * C164) *
                       C152080 * C67857 +
                   (C67859 * C346 + C67893 + C67893 + C152237 * C370 +
                    C67861 * C348 + C67894 + C67894 + C152201 * C372 +
                    C67863 * C743 + C67895 + C67895 + C67856 * C745) *
                       C152080 * C152068) *
                      C151869 * C151851 * C133)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 ((((C67859 * C142 + C67866 + C67866 + C152237 * C158 +
                     C67861 * C143 + C67867 + C67867 + C152201 * C159 +
                     C67863 * C144 + C67868 + C67868 + C67856 * C160) *
                        C152080 * C67857 +
                    (C68204 + C68205 + C68206) * C152080 * C152068) *
                       C151869 * C1259 -
                   ((C68207 + C68208 + C68209) * C152080 * C152068 +
                    (C68206 + C68205 + C68204) * C152080 * C67857) *
                       C151869 * C1260 +
                   ((C68209 + C68208 + C68207) * C152080 * C67857 +
                    (C67859 * C1356 + C68129 + C68129 + C152237 * C1372 +
                     C67861 * C1355 + C68130 + C68130 + C152201 * C1371 +
                     C67863 * C1354 + C68131 + C68131 + C67856 * C1370) *
                        C152080 * C152068) *
                       C151869 * C152214) *
                      C152255 +
                  (((C68210 + C68211 + C68212) * C152080 * C67857 +
                    (C68213 + C68214 + C68215) * C152080 * C152068) *
                       C151869 * C1260 -
                   ((C68212 + C68211 + C68210) * C152080 * C152068 +
                    (C67863 * C145 + C67875 + C67875 + C67856 * C161 +
                     C67861 * C144 + C67876 + C67876 + C152201 * C160 +
                     C67859 * C143 + C67877 + C67877 + C152237 * C159) *
                        C152080 * C67857) *
                       C151869 * C1259 -
                   ((C67863 * C1353 + C68147 + C68147 + C67856 * C1369 +
                     C67861 * C1354 + C68148 + C68148 + C152201 * C1370 +
                     C67859 * C1355 + C68149 + C68149 + C152237 * C1371) *
                        C152080 * C152068 +
                    (C68215 + C68214 + C68213) * C152080 * C67857) *
                       C151869 * C152214) *
                      C152240 +
                  (((C67859 * C144 + C67878 + C67878 + C152237 * C160 +
                     C67861 * C145 + C67879 + C67879 + C152201 * C161 +
                     C67863 * C146 + C67880 + C67880 + C67856 * C162) *
                        C152080 * C67857 +
                    (C68216 + C68217 + C68218) * C152080 * C152068) *
                       C151869 * C1259 -
                   ((C68219 + C68220 + C68221) * C152080 * C152068 +
                    (C68218 + C68217 + C68216) * C152080 * C67857) *
                       C151869 * C1260 +
                   ((C68221 + C68220 + C68219) * C152080 * C67857 +
                    (C67859 * C1354 + C68165 + C68165 + C152237 * C1370 +
                     C67861 * C1353 + C68166 + C68166 + C152201 * C1369 +
                     C67863 * C1715 + C68167 + C68167 + C67856 * C1717) *
                        C152080 * C152068) *
                       C151869 * C152214) *
                      C152208)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 (((C67859 * C142 + C67866 + C67866 + C152237 * C158 +
                    C67861 * C143 + C67867 + C67867 + C152201 * C159 +
                    C67863 * C144 + C67868 + C67868 + C67856 * C160) *
                       C152080 * C67857 +
                   (C68204 + C68205 + C68206) * C152080 * C152068) *
                      C151869 * C1347 -
                  ((C68207 + C68208 + C68209) * C152080 * C152068 +
                   (C68206 + C68205 + C68204) * C152080 * C67857) *
                      C151869 * C1348 +
                  ((C68209 + C68208 + C68207) * C152080 * C67857 +
                   (C69602 + C69603 + C69604) * C152080 * C152068) *
                      C151869 * C1349 -
                  ((C69605 + C69606 + C69607) * C152080 * C152068 +
                   (C69604 + C69603 + C69602) * C152080 * C67857) *
                      C151869 * C1350 +
                  ((C69607 + C69606 + C69605) * C152080 * C67857 +
                   (C67859 * C7801 + C69587 + C69587 + C152237 * C7807 +
                    C67861 * C7802 + C69588 + C69588 + C152201 * C7808 +
                    C67863 * C7803 + C69589 + C69589 + C67856 * C7809) *
                       C152080 * C152068) *
                      C151869 * C1351) *
                 C151823) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C67859 * C142 + C67866 + C67866 + C152237 * C158 +
                     C67861 * C143 + C67867 + C67867 + C152201 * C159 +
                     C67863 * C144 + C67868 + C67868 + C67856 * C160) *
                        C152080 * C67857 +
                    (C68204 + C68205 + C68206) * C152080 * C152068) *
                       C2215 -
                   ((C69223 + C69224 + C69225) * C152080 * C152068 +
                    (C67863 * C548 + C68443 + C68443 + C67856 * C572 +
                     C67861 * C549 + C68444 + C68444 + C152201 * C573 +
                     C67859 * C550 + C68445 + C68445 + C152237 * C574) *
                        C152080 * C67857) *
                       C2216 +
                   ((C67859 * C551 + C68446 + C68446 + C152237 * C575 +
                     C67861 * C552 + C68447 + C68447 + C152201 * C576 +
                     C67863 * C553 + C68448 + C68448 + C67856 * C577) *
                        C152080 * C67857 +
                    (C69871 + C69872 + C69873) * C152080 * C152068) *
                       C152217) *
                      C151851 * C152255 +
                  (((C67859 * C549 + C68452 + C68452 + C152237 * C573 +
                     C67861 * C548 + C68453 + C68453 + C152201 * C572 +
                     C67863 * C547 + C68454 + C68454 + C67856 * C571) *
                        C152080 * C67857 +
                    (C69226 + C69227 + C69228) * C152080 * C152068) *
                       C2216 -
                   ((C68212 + C68211 + C68210) * C152080 * C152068 +
                    (C67863 * C145 + C67875 + C67875 + C67856 * C161 +
                     C67861 * C144 + C67876 + C67876 + C152201 * C160 +
                     C67859 * C143 + C67877 + C67877 + C152237 * C159) *
                        C152080 * C67857) *
                       C2215 -
                   ((C67863 * C1531 + C68458 + C68458 + C67856 * C1555 +
                     C67861 * C1532 + C68459 + C68459 + C152201 * C1556 +
                     C67859 * C1533 + C68460 + C68460 + C152237 * C1557) *
                        C152080 * C152068 +
                    (C67863 * C554 + C68461 + C68461 + C67856 * C578 +
                     C67861 * C553 + C68462 + C68462 + C152201 * C577 +
                     C67859 * C552 + C68463 + C68463 + C152237 * C576) *
                        C152080 * C67857) *
                       C152217) *
                      C151851 * C152240 +
                  (((C67859 * C144 + C67878 + C67878 + C152237 * C160 +
                     C67861 * C145 + C67879 + C67879 + C152201 * C161 +
                     C67863 * C146 + C67880 + C67880 + C67856 * C162) *
                        C152080 * C67857 +
                    (C68216 + C68217 + C68218) * C152080 * C152068) *
                       C2215 -
                   ((C69229 + C69230 + C69231) * C152080 * C152068 +
                    (C67863 * C555 + C68467 + C68467 + C67856 * C579 +
                     C67861 * C547 + C68468 + C68468 + C152201 * C571 +
                     C67859 * C548 + C68469 + C68469 + C152237 * C572) *
                        C152080 * C67857) *
                       C2216 +
                   ((C67859 * C553 + C68470 + C68470 + C152237 * C577 +
                     C67861 * C554 + C68471 + C68471 + C152201 * C578 +
                     C67863 * C556 + C68472 + C68472 + C67856 * C580) *
                        C152080 * C67857 +
                    (C67859 * C1532 + C68473 + C68473 + C152237 * C1556 +
                     C67861 * C1531 + C68474 + C68474 + C152201 * C1555 +
                     C67863 * C2677 + C68475 + C68475 + C67856 * C2679) *
                        C152080 * C152068) *
                       C152217) *
                      C151851 * C152208)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C67859 * C142 + C67866 + C67866 + C152237 * C158 +
                     C67861 * C143 + C67867 + C67867 + C152201 * C159 +
                     C67863 * C144 + C67868 + C67868 + C67856 * C160) *
                        C152080 * C67857 +
                    (C68204 + C68205 + C68206) * C152080 * C152068) *
                       C2215 -
                   ((C69223 + C69224 + C69225) * C152080 * C152068 +
                    (C67863 * C548 + C68443 + C68443 + C67856 * C572 +
                     C67861 * C549 + C68444 + C68444 + C152201 * C573 +
                     C67859 * C550 + C68445 + C68445 + C152237 * C574) *
                        C152080 * C67857) *
                       C2216 +
                   ((C67859 * C551 + C68446 + C68446 + C152237 * C575 +
                     C67861 * C552 + C68447 + C68447 + C152201 * C576 +
                     C67863 * C553 + C68448 + C68448 + C67856 * C577) *
                        C152080 * C67857 +
                    (C69871 + C69872 + C69873) * C152080 * C152068) *
                       C152217) *
                      C152258 +
                  (((C69225 + C69224 + C69223) * C152080 * C67857 +
                    (C69874 + C69875 + C69876) * C152080 * C152068) *
                       C2216 -
                   ((C68207 + C68208 + C68209) * C152080 * C152068 +
                    (C68206 + C68205 + C68204) * C152080 * C67857) *
                       C2215 -
                   ((C69877 + C69878 + C69879) * C152080 * C152068 +
                    (C69873 + C69872 + C69871) * C152080 * C67857) *
                       C152217) *
                      C152244 +
                  (((C68209 + C68208 + C68207) * C152080 * C67857 +
                    (C69602 + C69603 + C69604) * C152080 * C152068) *
                       C2215 -
                   ((C70609 + C70610 + C70611) * C152080 * C152068 +
                    (C69876 + C69875 + C69874) * C152080 * C67857) *
                       C2216 +
                   ((C69879 + C69878 + C69877) * C152080 * C67857 +
                    (C67859 * C8064 + C69850 + C69850 + C152237 * C8070 +
                     C67861 * C8065 + C69851 + C69851 + C152201 * C8071 +
                     C67863 * C8066 + C69852 + C69852 + C67856 * C8072) *
                        C152080 * C152068) *
                       C152217) *
                      C152214) *
                 C151823) /
                    (p * q * std::sqrt(p + q));
    d2ee[15] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 (((((C67859 * C142 + C67866 + C67866 + C152237 * C158 +
                      C67861 * C143 + C67867 + C67867 + C152201 * C159 +
                      C67863 * C144 + C67868 + C67868 + C67856 * C160) *
                         C152080 * C67857 +
                     (C68204 + C68205 + C68206) * C152080 * C152068) *
                        C4107 -
                    ((C69223 + C69224 + C69225) * C152080 * C152068 +
                     (C67863 * C548 + C68443 + C68443 + C67856 * C572 +
                      C67861 * C549 + C68444 + C68444 + C152201 * C573 +
                      C67859 * C550 + C68445 + C68445 + C152237 * C574) *
                         C152080 * C67857) *
                        C151956) *
                       C152172 +
                   (((C69225 + C69224 + C69223) * C152080 * C67857 +
                     (C69874 + C69875 + C69876) * C152080 * C152068) *
                        C151956 -
                    ((C68207 + C68208 + C68209) * C152080 * C152068 +
                     (C68206 + C68205 + C68204) * C152080 * C67857) *
                        C4107) *
                       C151914) *
                      C151828 +
                  ((((C67859 * C549 + C68452 + C68452 + C152237 * C573 +
                      C67861 * C548 + C68453 + C68453 + C152201 * C572 +
                      C67863 * C547 + C68454 + C68454 + C67856 * C571) *
                         C152080 * C67857 +
                     (C69226 + C69227 + C69228) * C152080 * C152068) *
                        C151956 -
                    ((C68212 + C68211 + C68210) * C152080 * C152068 +
                     (C67863 * C145 + C67875 + C67875 + C67856 * C161 +
                      C67861 * C144 + C67876 + C67876 + C152201 * C160 +
                      C67859 * C143 + C67877 + C67877 + C152237 * C159) *
                         C152080 * C67857) *
                        C4107) *
                       C152172 +
                   (((C68210 + C68211 + C68212) * C152080 * C67857 +
                     (C68213 + C68214 + C68215) * C152080 * C152068) *
                        C4107 -
                    ((C70397 + C70398 + C70399) * C152080 * C152068 +
                     (C69228 + C69227 + C69226) * C152080 * C67857) *
                        C151956) *
                       C151914) *
                      C151837 +
                  ((((C67859 * C144 + C67878 + C67878 + C152237 * C160 +
                      C67861 * C145 + C67879 + C67879 + C152201 * C161 +
                      C67863 * C146 + C67880 + C67880 + C67856 * C162) *
                         C152080 * C67857 +
                     (C68216 + C68217 + C68218) * C152080 * C152068) *
                        C4107 -
                    ((C69229 + C69230 + C69231) * C152080 * C152068 +
                     (C67863 * C555 + C68467 + C68467 + C67856 * C579 +
                      C67861 * C547 + C68468 + C68468 + C152201 * C571 +
                      C67859 * C548 + C68469 + C68469 + C152237 * C572) *
                         C152080 * C67857) *
                        C151956) *
                       C152172 +
                   (((C69231 + C69230 + C69229) * C152080 * C67857 +
                     (C67859 * C1536 + C69202 + C69202 + C152237 * C1560 +
                      C67861 * C1535 + C69203 + C69203 + C152201 * C1559 +
                      C67863 * C1916 + C69204 + C69204 + C67856 * C1918) *
                         C152080 * C152068) *
                        C151956 -
                    ((C68219 + C68220 + C68221) * C152080 * C152068 +
                     (C68218 + C68217 + C68216) * C152080 * C67857) *
                        C4107) *
                       C151914) *
                      C3588)) /
                (p * q * std::sqrt(p + q));
    d2ee[16] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 (((((C67859 * C142 + C67866 + C67866 + C152237 * C158 +
                      C67861 * C143 + C67867 + C67867 + C152201 * C159 +
                      C67863 * C144 + C67868 + C67868 + C67856 * C160) *
                         C152080 * C67857 +
                     (C68204 + C68205 + C68206) * C152080 * C152068) *
                        C151952 -
                    ((C69223 + C69224 + C69225) * C152080 * C152068 +
                     (C67863 * C548 + C68443 + C68443 + C67856 * C572 +
                      C67861 * C549 + C68444 + C68444 + C152201 * C573 +
                      C67859 * C550 + C68445 + C68445 + C152237 * C574) *
                         C152080 * C67857) *
                        C151959 +
                    ((C67859 * C551 + C68446 + C68446 + C152237 * C575 +
                      C67861 * C552 + C68447 + C68447 + C152201 * C576 +
                      C67863 * C553 + C68448 + C68448 + C67856 * C577) *
                         C152080 * C67857 +
                     (C69871 + C69872 + C69873) * C152080 * C152068) *
                        C4779) *
                       C152172 +
                   (((C69225 + C69224 + C69223) * C152080 * C67857 +
                     (C69874 + C69875 + C69876) * C152080 * C152068) *
                        C151959 -
                    ((C68207 + C68208 + C68209) * C152080 * C152068 +
                     (C68206 + C68205 + C68204) * C152080 * C67857) *
                        C151952 -
                    ((C69877 + C69878 + C69879) * C152080 * C152068 +
                     (C69873 + C69872 + C69871) * C152080 * C67857) *
                        C4779) *
                       C151914) *
                      C3241 +
                  ((((C67859 * C549 + C68452 + C68452 + C152237 * C573 +
                      C67861 * C548 + C68453 + C68453 + C152201 * C572 +
                      C67863 * C547 + C68454 + C68454 + C67856 * C571) *
                         C152080 * C67857 +
                     (C69226 + C69227 + C69228) * C152080 * C152068) *
                        C151959 -
                    ((C68212 + C68211 + C68210) * C152080 * C152068 +
                     (C67863 * C145 + C67875 + C67875 + C67856 * C161 +
                      C67861 * C144 + C67876 + C67876 + C152201 * C160 +
                      C67859 * C143 + C67877 + C67877 + C152237 * C159) *
                         C152080 * C67857) *
                        C151952 -
                    ((C71487 + C71488 + C71489) * C152080 * C152068 +
                     (C67863 * C554 + C68461 + C68461 + C67856 * C578 +
                      C67861 * C553 + C68462 + C68462 + C152201 * C577 +
                      C67859 * C552 + C68463 + C68463 + C152237 * C576) *
                         C152080 * C67857) *
                        C4779) *
                       C152172 +
                   (((C68210 + C68211 + C68212) * C152080 * C67857 +
                     (C68213 + C68214 + C68215) * C152080 * C152068) *
                        C151952 -
                    ((C70397 + C70398 + C70399) * C152080 * C152068 +
                     (C69228 + C69227 + C69226) * C152080 * C67857) *
                        C151959 +
                    ((C71489 + C71488 + C71487) * C152080 * C67857 +
                     (C67859 * C1540 + C71478 + C71478 + C152237 * C1564 +
                      C67861 * C1541 + C71479 + C71479 + C152201 * C1565 +
                      C67863 * C1542 + C71480 + C71480 + C67856 * C1566) *
                         C152080 * C152068) *
                        C4779) *
                       C151914) *
                      C151834)) /
                (p * q * std::sqrt(p + q));
    d2ee[17] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C67859 * C142 + C67866 + C67866 + C152237 * C158 +
                      C67861 * C143 + C67867 + C67867 + C152201 * C159 +
                      C67863 * C144 + C67868 + C67868 + C67856 * C160) *
                         C152080 * C67857 +
                     (C68204 + C68205 + C68206) * C152080 * C152068) *
                        C4107 -
                    ((C69223 + C69224 + C69225) * C152080 * C152068 +
                     (C67863 * C548 + C68443 + C68443 + C67856 * C572 +
                      C67861 * C549 + C68444 + C68444 + C152201 * C573 +
                      C67859 * C550 + C68445 + C68445 + C152237 * C574) *
                         C152080 * C67857) *
                        C151956) *
                       C152258 +
                   (((C69225 + C69224 + C69223) * C152080 * C67857 +
                     (C69874 + C69875 + C69876) * C152080 * C152068) *
                        C151956 -
                    ((C68207 + C68208 + C68209) * C152080 * C152068 +
                     (C68206 + C68205 + C68204) * C152080 * C67857) *
                        C4107) *
                       C152244 +
                   (((C68209 + C68208 + C68207) * C152080 * C67857 +
                     (C69602 + C69603 + C69604) * C152080 * C152068) *
                        C4107 -
                    ((C70609 + C70610 + C70611) * C152080 * C152068 +
                     (C69876 + C69875 + C69874) * C152080 * C67857) *
                        C151956) *
                       C152214) *
                      C3241 +
                  ((((C67859 * C549 + C68452 + C68452 + C152237 * C573 +
                      C67861 * C548 + C68453 + C68453 + C152201 * C572 +
                      C67863 * C547 + C68454 + C68454 + C67856 * C571) *
                         C152080 * C67857 +
                     (C69226 + C69227 + C69228) * C152080 * C152068) *
                        C151956 -
                    ((C68212 + C68211 + C68210) * C152080 * C152068 +
                     (C67863 * C145 + C67875 + C67875 + C67856 * C161 +
                      C67861 * C144 + C67876 + C67876 + C152201 * C160 +
                      C67859 * C143 + C67877 + C67877 + C152237 * C159) *
                         C152080 * C67857) *
                        C4107) *
                       C152258 +
                   (((C68210 + C68211 + C68212) * C152080 * C67857 +
                     (C68213 + C68214 + C68215) * C152080 * C152068) *
                        C4107 -
                    ((C70397 + C70398 + C70399) * C152080 * C152068 +
                     (C69228 + C69227 + C69226) * C152080 * C67857) *
                        C151956) *
                       C152244 +
                   (((C70399 + C70398 + C70397) * C152080 * C67857 +
                     (C67859 * C2054 + C70388 + C70388 + C152237 * C2062 +
                      C67861 * C2055 + C70389 + C70389 + C152201 * C2063 +
                      C67863 * C2056 + C70390 + C70390 + C67856 * C2064) *
                         C152080 * C152068) *
                        C151956 -
                    ((C70089 + C70090 + C70091) * C152080 * C152068 +
                     (C68215 + C68214 + C68213) * C152080 * C67857) *
                        C4107) *
                       C152214) *
                      C151834)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C67859 * C142 + C67866 + C67866 + C152237 * C158 +
                     C67861 * C143 + C67867 + C67867 + C152201 * C159 +
                     C67863 * C144 + C67868 + C67868 + C67856 * C160) *
                        C152080 * C67857 +
                    (C68204 + C68205 + C68206) * C152080 * C152068) *
                       C4107 -
                   ((C69223 + C69224 + C69225) * C152080 * C152068 +
                    (C67863 * C548 + C68443 + C68443 + C67856 * C572 +
                     C67861 * C549 + C68444 + C68444 + C152201 * C573 +
                     C67859 * C550 + C68445 + C68445 + C152237 * C574) *
                        C152080 * C67857) *
                       C151956) *
                      C151851 * C152264 +
                  (((C67859 * C549 + C68452 + C68452 + C152237 * C573 +
                     C67861 * C548 + C68453 + C68453 + C152201 * C572 +
                     C67863 * C547 + C68454 + C68454 + C67856 * C571) *
                        C152080 * C67857 +
                    (C69226 + C69227 + C69228) * C152080 * C152068) *
                       C151956 -
                   ((C68212 + C68211 + C68210) * C152080 * C152068 +
                    (C67863 * C145 + C67875 + C67875 + C67856 * C161 +
                     C67861 * C144 + C67876 + C67876 + C152201 * C160 +
                     C67859 * C143 + C67877 + C67877 + C152237 * C159) *
                        C152080 * C67857) *
                       C4107) *
                      C151851 * C152257 +
                  (((C67859 * C144 + C67878 + C67878 + C152237 * C160 +
                     C67861 * C145 + C67879 + C67879 + C152201 * C161 +
                     C67863 * C146 + C67880 + C67880 + C67856 * C162) *
                        C152080 * C67857 +
                    (C68216 + C68217 + C68218) * C152080 * C152068) *
                       C4107 -
                   ((C69229 + C69230 + C69231) * C152080 * C152068 +
                    (C67863 * C555 + C68467 + C68467 + C67856 * C579 +
                     C67861 * C547 + C68468 + C68468 + C152201 * C571 +
                     C67859 * C548 + C68469 + C68469 + C152237 * C572) *
                        C152080 * C67857) *
                       C151956) *
                      C151851 * C152242 +
                  (((C67859 * C547 + C68882 + C68882 + C152237 * C571 +
                     C67861 * C555 + C68883 + C68883 + C152201 * C579 +
                     C67863 * C557 + C68884 + C68884 + C67856 * C581) *
                        C152080 * C67857 +
                    (C67859 * C1086 + C68885 + C68885 + C152237 * C1098 +
                     C67861 * C1087 + C68886 + C68886 + C152201 * C1099 +
                     C67863 * C1088 + C68887 + C68887 + C67856 * C1100) *
                        C152080 * C152068) *
                       C151956 -
                   ((C68687 + C68686 + C68685) * C152080 * C152068 +
                    (C67863 * C147 + C67887 + C67887 + C67856 * C163 +
                     C67861 * C146 + C67888 + C67888 + C152201 * C162 +
                     C67859 * C145 + C67889 + C67889 + C152237 * C161) *
                        C152080 * C67857) *
                       C4107) *
                      C151851 * C152218)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C67859 * C142 + C67866 + C67866 + C152237 * C158 +
                     C67861 * C143 + C67867 + C67867 + C152201 * C159 +
                     C67863 * C144 + C67868 + C67868 + C67856 * C160) *
                        C152080 * C67857 +
                    (C68204 + C68205 + C68206) * C152080 * C152068) *
                       C152266 -
                   ((C69223 + C69224 + C69225) * C152080 * C152068 +
                    (C67863 * C548 + C68443 + C68443 + C67856 * C572 +
                     C67861 * C549 + C68444 + C68444 + C152201 * C573 +
                     C67859 * C550 + C68445 + C68445 + C152237 * C574) *
                        C152080 * C67857) *
                       C152263 +
                   ((C67859 * C551 + C68446 + C68446 + C152237 * C575 +
                     C67861 * C552 + C68447 + C68447 + C152201 * C576 +
                     C67863 * C553 + C68448 + C68448 + C67856 * C577) *
                        C152080 * C67857 +
                    (C69871 + C69872 + C69873) * C152080 * C152068) *
                       C152252 -
                   ((C71899 + C71900 + C71901) * C152080 * C152068 +
                    (C67863 * C2452 + C71173 + C71173 + C67856 * C2468 +
                     C67861 * C2453 + C71174 + C71174 + C152201 * C2469 +
                     C67859 * C2454 + C71175 + C71175 + C152237 * C2470) *
                        C152080 * C67857) *
                       C152230) *
                      C151851 * C3241 +
                  (((C67859 * C549 + C68452 + C68452 + C152237 * C573 +
                     C67861 * C548 + C68453 + C68453 + C152201 * C572 +
                     C67863 * C547 + C68454 + C68454 + C67856 * C571) *
                        C152080 * C67857 +
                    (C69226 + C69227 + C69228) * C152080 * C152068) *
                       C152263 -
                   ((C68212 + C68211 + C68210) * C152080 * C152068 +
                    (C67863 * C145 + C67875 + C67875 + C67856 * C161 +
                     C67861 * C144 + C67876 + C67876 + C152201 * C160 +
                     C67859 * C143 + C67877 + C67877 + C152237 * C159) *
                        C152080 * C67857) *
                       C152266 -
                   ((C71487 + C71488 + C71489) * C152080 * C152068 +
                    (C67863 * C554 + C68461 + C68461 + C67856 * C578 +
                     C67861 * C553 + C68462 + C68462 + C152201 * C577 +
                     C67859 * C552 + C68463 + C68463 + C152237 * C576) *
                        C152080 * C67857) *
                       C152252 +
                   ((C67859 * C2453 + C71684 + C71684 + C152237 * C2469 +
                     C67861 * C2452 + C71685 + C71685 + C152201 * C2468 +
                     C67863 * C2451 + C71686 + C71686 + C67856 * C2467) *
                        C152080 * C67857 +
                    (C67859 * C2956 + C71687 + C71687 + C152237 * C2964 +
                     C67861 * C2957 + C71688 + C71688 + C152201 * C2965 +
                     C67863 * C2958 + C71689 + C71689 + C67856 * C2966) *
                        C152080 * C152068) *
                       C152230) *
                      C151851 * C151834)) /
                    (p * q * std::sqrt(p + q));
    d2ee[18] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 ((((C67859 * C142 + C67866 + C67866 + C152237 * C158 +
                     C67861 * C143 + C67867 + C67867 + C152201 * C159 +
                     C67863 * C144 + C67868 + C67868 + C67856 * C160) *
                        C152080 * C67857 +
                    (C68204 + C68205 + C68206) * C152080 * C152068) *
                       C151952 -
                   ((C69223 + C69224 + C69225) * C152080 * C152068 +
                    (C67863 * C548 + C68443 + C68443 + C67856 * C572 +
                     C67861 * C549 + C68444 + C68444 + C152201 * C573 +
                     C67859 * C550 + C68445 + C68445 + C152237 * C574) *
                        C152080 * C67857) *
                       C151959 +
                   ((C67859 * C551 + C68446 + C68446 + C152237 * C575 +
                     C67861 * C552 + C68447 + C68447 + C152201 * C576 +
                     C67863 * C553 + C68448 + C68448 + C67856 * C577) *
                        C152080 * C67857 +
                    (C69871 + C69872 + C69873) * C152080 * C152068) *
                       C4779) *
                      C151851 * C151828 +
                  (((C67859 * C549 + C68452 + C68452 + C152237 * C573 +
                     C67861 * C548 + C68453 + C68453 + C152201 * C572 +
                     C67863 * C547 + C68454 + C68454 + C67856 * C571) *
                        C152080 * C67857 +
                    (C69226 + C69227 + C69228) * C152080 * C152068) *
                       C151959 -
                   ((C68212 + C68211 + C68210) * C152080 * C152068 +
                    (C67863 * C145 + C67875 + C67875 + C67856 * C161 +
                     C67861 * C144 + C67876 + C67876 + C152201 * C160 +
                     C67859 * C143 + C67877 + C67877 + C152237 * C159) *
                        C152080 * C67857) *
                       C151952 -
                   ((C71487 + C71488 + C71489) * C152080 * C152068 +
                    (C67863 * C554 + C68461 + C68461 + C67856 * C578 +
                     C67861 * C553 + C68462 + C68462 + C152201 * C577 +
                     C67859 * C552 + C68463 + C68463 + C152237 * C576) *
                        C152080 * C67857) *
                       C4779) *
                      C151851 * C151837 +
                  (((C67859 * C144 + C67878 + C67878 + C152237 * C160 +
                     C67861 * C145 + C67879 + C67879 + C152201 * C161 +
                     C67863 * C146 + C67880 + C67880 + C67856 * C162) *
                        C152080 * C67857 +
                    (C68216 + C68217 + C68218) * C152080 * C152068) *
                       C151952 -
                   ((C69229 + C69230 + C69231) * C152080 * C152068 +
                    (C67863 * C555 + C68467 + C68467 + C67856 * C579 +
                     C67861 * C547 + C68468 + C68468 + C152201 * C571 +
                     C67859 * C548 + C68469 + C68469 + C152237 * C572) *
                        C152080 * C67857) *
                       C151959 +
                   ((C67859 * C553 + C68470 + C68470 + C152237 * C577 +
                     C67861 * C554 + C68471 + C68471 + C152201 * C578 +
                     C67863 * C556 + C68472 + C68472 + C67856 * C580) *
                        C152080 * C67857 +
                    (C67859 * C1532 + C68473 + C68473 + C152237 * C1556 +
                     C67861 * C1531 + C68474 + C68474 + C152201 * C1555 +
                     C67863 * C2677 + C68475 + C68475 + C67856 * C2679) *
                        C152080 * C152068) *
                       C4779) *
                      C151851 * C3588)) /
                (p * q * std::sqrt(p + q));
    d2ee[19] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C67859 * C142 + C67866 + C67866 + C152237 * C158 +
                     C67861 * C143 + C67867 + C67867 + C152201 * C159 +
                     C67863 * C144 + C67868 + C67868 + C67856 * C160) *
                        C152080 * C67857 +
                    (C68204 + C68205 + C68206) * C152080 * C152068) *
                       C4107 -
                   ((C69223 + C69224 + C69225) * C152080 * C152068 +
                    (C67863 * C548 + C68443 + C68443 + C67856 * C572 +
                     C67861 * C549 + C68444 + C68444 + C152201 * C573 +
                     C67859 * C550 + C68445 + C68445 + C152237 * C574) *
                        C152080 * C67857) *
                       C151956) *
                      C151851 * C152264 +
                  (((C67859 * C549 + C68452 + C68452 + C152237 * C573 +
                     C67861 * C548 + C68453 + C68453 + C152201 * C572 +
                     C67863 * C547 + C68454 + C68454 + C67856 * C571) *
                        C152080 * C67857 +
                    (C69226 + C69227 + C69228) * C152080 * C152068) *
                       C151956 -
                   ((C68212 + C68211 + C68210) * C152080 * C152068 +
                    (C67863 * C145 + C67875 + C67875 + C67856 * C161 +
                     C67861 * C144 + C67876 + C67876 + C152201 * C160 +
                     C67859 * C143 + C67877 + C67877 + C152237 * C159) *
                        C152080 * C67857) *
                       C4107) *
                      C151851 * C152257 +
                  (((C67859 * C144 + C67878 + C67878 + C152237 * C160 +
                     C67861 * C145 + C67879 + C67879 + C152201 * C161 +
                     C67863 * C146 + C67880 + C67880 + C67856 * C162) *
                        C152080 * C67857 +
                    (C68216 + C68217 + C68218) * C152080 * C152068) *
                       C4107 -
                   ((C69229 + C69230 + C69231) * C152080 * C152068 +
                    (C67863 * C555 + C68467 + C68467 + C67856 * C579 +
                     C67861 * C547 + C68468 + C68468 + C152201 * C571 +
                     C67859 * C548 + C68469 + C68469 + C152237 * C572) *
                        C152080 * C67857) *
                       C151956) *
                      C151851 * C152242 +
                  (((C67859 * C547 + C68882 + C68882 + C152237 * C571 +
                     C67861 * C555 + C68883 + C68883 + C152201 * C579 +
                     C67863 * C557 + C68884 + C68884 + C67856 * C581) *
                        C152080 * C67857 +
                    (C67859 * C1086 + C68885 + C68885 + C152237 * C1098 +
                     C67861 * C1087 + C68886 + C68886 + C152201 * C1099 +
                     C67863 * C1088 + C68887 + C68887 + C67856 * C1100) *
                        C152080 * C152068) *
                       C151956 -
                   ((C68687 + C68686 + C68685) * C152080 * C152068 +
                    (C67863 * C147 + C67887 + C67887 + C67856 * C163 +
                     C67861 * C146 + C67888 + C67888 + C152201 * C162 +
                     C67859 * C145 + C67889 + C67889 + C152237 * C161) *
                        C152080 * C67857) *
                       C4107) *
                      C151851 * C152218)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C67859 * C142 + C67866 + C67866 + C152237 * C158 +
                      C67861 * C143 + C67867 + C67867 + C152201 * C159 +
                      C67863 * C144 + C67868 + C67868 + C67856 * C160) *
                         C152080 * C67857 +
                     (C68204 + C68205 + C68206) * C152080 * C152068) *
                        C4107 -
                    ((C69223 + C69224 + C69225) * C152080 * C152068 +
                     (C67863 * C548 + C68443 + C68443 + C67856 * C572 +
                      C67861 * C549 + C68444 + C68444 + C152201 * C573 +
                      C67859 * C550 + C68445 + C68445 + C152237 * C574) *
                         C152080 * C67857) *
                        C151956) *
                       C152258 +
                   (((C69225 + C69224 + C69223) * C152080 * C67857 +
                     (C69874 + C69875 + C69876) * C152080 * C152068) *
                        C151956 -
                    ((C68207 + C68208 + C68209) * C152080 * C152068 +
                     (C68206 + C68205 + C68204) * C152080 * C67857) *
                        C4107) *
                       C152244 +
                   (((C68209 + C68208 + C68207) * C152080 * C67857 +
                     (C69602 + C69603 + C69604) * C152080 * C152068) *
                        C4107 -
                    ((C70609 + C70610 + C70611) * C152080 * C152068 +
                     (C69876 + C69875 + C69874) * C152080 * C67857) *
                        C151956) *
                       C152214) *
                      C3241 +
                  ((((C67859 * C549 + C68452 + C68452 + C152237 * C573 +
                      C67861 * C548 + C68453 + C68453 + C152201 * C572 +
                      C67863 * C547 + C68454 + C68454 + C67856 * C571) *
                         C152080 * C67857 +
                     (C69226 + C69227 + C69228) * C152080 * C152068) *
                        C151956 -
                    ((C68212 + C68211 + C68210) * C152080 * C152068 +
                     (C67863 * C145 + C67875 + C67875 + C67856 * C161 +
                      C67861 * C144 + C67876 + C67876 + C152201 * C160 +
                      C67859 * C143 + C67877 + C67877 + C152237 * C159) *
                         C152080 * C67857) *
                        C4107) *
                       C152258 +
                   (((C68210 + C68211 + C68212) * C152080 * C67857 +
                     (C68213 + C68214 + C68215) * C152080 * C152068) *
                        C4107 -
                    ((C70397 + C70398 + C70399) * C152080 * C152068 +
                     (C69228 + C69227 + C69226) * C152080 * C67857) *
                        C151956) *
                       C152244 +
                   (((C70399 + C70398 + C70397) * C152080 * C67857 +
                     (C67859 * C2054 + C70388 + C70388 + C152237 * C2062 +
                      C67861 * C2055 + C70389 + C70389 + C152201 * C2063 +
                      C67863 * C2056 + C70390 + C70390 + C67856 * C2064) *
                         C152080 * C152068) *
                        C151956 -
                    ((C70089 + C70090 + C70091) * C152080 * C152068 +
                     (C68215 + C68214 + C68213) * C152080 * C67857) *
                        C4107) *
                       C152214) *
                      C151834)) /
                    (p * q * std::sqrt(p + q));
    d2ee[20] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C67859 * C142 + C67866 + C67866 + C152237 * C158 +
                     C67861 * C143 + C67867 + C67867 + C152201 * C159 +
                     C67863 * C144 + C67868 + C67868 + C67856 * C160) *
                        C152080 * C67857 +
                    (C68204 + C68205 + C68206) * C152080 * C152068) *
                       C151869 * C152172 -
                   ((C68207 + C68208 + C68209) * C152080 * C152068 +
                    (C68206 + C68205 + C68204) * C152080 * C67857) *
                       C151869 * C151914) *
                      C739 +
                  (((C68210 + C68211 + C68212) * C152080 * C67857 +
                    (C68213 + C68214 + C68215) * C152080 * C152068) *
                       C151869 * C151914 -
                   ((C68212 + C68211 + C68210) * C152080 * C152068 +
                    (C67863 * C145 + C67875 + C67875 + C67856 * C161 +
                     C67861 * C144 + C67876 + C67876 + C152201 * C160 +
                     C67859 * C143 + C67877 + C67877 + C152237 * C159) *
                        C152080 * C67857) *
                       C151869 * C152172) *
                      C740 +
                  (((C67859 * C144 + C67878 + C67878 + C152237 * C160 +
                     C67861 * C145 + C67879 + C67879 + C152201 * C161 +
                     C67863 * C146 + C67880 + C67880 + C67856 * C162) *
                        C152080 * C67857 +
                    (C68216 + C68217 + C68218) * C152080 * C152068) *
                       C151869 * C152172 -
                   ((C68219 + C68220 + C68221) * C152080 * C152068 +
                    (C68218 + C68217 + C68216) * C152080 * C67857) *
                       C151869 * C151914) *
                      C741 +
                  (((C68685 + C68686 + C68687) * C152080 * C67857 +
                    (C67859 * C345 + C68676 + C68676 + C152237 * C369 +
                     C67861 * C347 + C68677 + C68677 + C152201 * C371 +
                     C67863 * C349 + C68678 + C68678 + C67856 * C373) *
                        C152080 * C152068) *
                       C151869 * C151914 -
                   ((C68687 + C68686 + C68685) * C152080 * C152068 +
                    (C67863 * C147 + C67887 + C67887 + C67856 * C163 +
                     C67861 * C146 + C67888 + C67888 + C152201 * C162 +
                     C67859 * C145 + C67889 + C67889 + C152237 * C161) *
                        C152080 * C67857) *
                       C151869 * C152172) *
                      C152218)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C67859 * C142 + C67866 + C67866 + C152237 * C158 +
                     C67861 * C143 + C67867 + C67867 + C152201 * C159 +
                     C67863 * C144 + C67868 + C67868 + C67856 * C160) *
                        C152080 * C67857 +
                    (C68204 + C68205 + C68206) * C152080 * C152068) *
                       C151869 * C1709 -
                   ((C68207 + C68208 + C68209) * C152080 * C152068 +
                    (C68206 + C68205 + C68204) * C152080 * C67857) *
                       C151869 * C1710 +
                   ((C68209 + C68208 + C68207) * C152080 * C67857 +
                    (C69602 + C69603 + C69604) * C152080 * C152068) *
                       C151869 * C1711 -
                   ((C69605 + C69606 + C69607) * C152080 * C152068 +
                    (C69604 + C69603 + C69602) * C152080 * C67857) *
                       C151869 * C152224) *
                      C152158 +
                  (((C68210 + C68211 + C68212) * C152080 * C67857 +
                    (C68213 + C68214 + C68215) * C152080 * C152068) *
                       C151869 * C1710 -
                   ((C68212 + C68211 + C68210) * C152080 * C152068 +
                    (C67863 * C145 + C67875 + C67875 + C67856 * C161 +
                     C67861 * C144 + C67876 + C67876 + C152201 * C160 +
                     C67859 * C143 + C67877 + C67877 + C152237 * C159) *
                        C152080 * C67857) *
                       C151869 * C1709 -
                   ((C70089 + C70090 + C70091) * C152080 * C152068 +
                    (C68215 + C68214 + C68213) * C152080 * C67857) *
                       C151869 * C1711 +
                   ((C70091 + C70090 + C70089) * C152080 * C67857 +
                    (C67859 * C1358 + C70080 + C70080 + C152237 * C1374 +
                     C67861 * C1359 + C70081 + C70081 + C152201 * C1375 +
                     C67863 * C1360 + C70082 + C70082 + C67856 * C1376) *
                        C152080 * C152068) *
                       C151869 * C152224) *
                      C151834)) /
                    (p * q * std::sqrt(p + q));
    d2ee[21] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C67859 * C142 + C67866 + C67866 + C152237 * C158 +
                      C67861 * C143 + C67867 + C67867 + C152201 * C159 +
                      C67863 * C144 + C67868 + C67868 + C67856 * C160) *
                         C152080 * C67857 +
                     (C68204 + C68205 + C68206) * C152080 * C152068) *
                        C152173 -
                    ((C69223 + C69224 + C69225) * C152080 * C152068 +
                     (C67863 * C548 + C68443 + C68443 + C67856 * C572 +
                      C67861 * C549 + C68444 + C68444 + C152201 * C573 +
                      C67859 * C550 + C68445 + C68445 + C152237 * C574) *
                         C152080 * C67857) *
                        C151956) *
                       C152172 +
                   (((C69225 + C69224 + C69223) * C152080 * C67857 +
                     (C67859 * C1538 + C69184 + C69184 + C152237 * C1562 +
                      C67861 * C1537 + C69185 + C69185 + C152201 * C1561 +
                      C67863 * C1536 + C69186 + C69186 + C67856 * C1560) *
                         C152080 * C152068) *
                        C151956 -
                    ((C68207 + C68208 + C68209) * C152080 * C152068 +
                     (C68206 + C68205 + C68204) * C152080 * C67857) *
                        C152173) *
                       C151914) *
                      C335 +
                  ((((C67859 * C549 + C68452 + C68452 + C152237 * C573 +
                      C67861 * C548 + C68453 + C68453 + C152201 * C572 +
                      C67863 * C547 + C68454 + C68454 + C67856 * C571) *
                         C152080 * C67857 +
                     (C69226 + C69227 + C69228) * C152080 * C152068) *
                        C151956 -
                    ((C68212 + C68211 + C68210) * C152080 * C152068 +
                     (C67863 * C145 + C67875 + C67875 + C67856 * C161 +
                      C67861 * C144 + C67876 + C67876 + C152201 * C160 +
                      C67859 * C143 + C67877 + C67877 + C152237 * C159) *
                         C152080 * C67857) *
                        C152173) *
                       C152172 +
                   (((C68210 + C68211 + C68212) * C152080 * C67857 +
                     (C68213 + C68214 + C68215) * C152080 * C152068) *
                        C152173 -
                    ((C67863 * C1535 + C69193 + C69193 + C67856 * C1559 +
                      C67861 * C1536 + C69194 + C69194 + C152201 * C1560 +
                      C67859 * C1537 + C69195 + C69195 + C152237 * C1561) *
                         C152080 * C152068 +
                     (C69228 + C69227 + C69226) * C152080 * C67857) *
                        C151956) *
                       C151914) *
                      C336 +
                  ((((C67859 * C144 + C67878 + C67878 + C152237 * C160 +
                      C67861 * C145 + C67879 + C67879 + C152201 * C161 +
                      C67863 * C146 + C67880 + C67880 + C67856 * C162) *
                         C152080 * C67857 +
                     (C68216 + C68217 + C68218) * C152080 * C152068) *
                        C152173 -
                    ((C69229 + C69230 + C69231) * C152080 * C152068 +
                     (C67863 * C555 + C68467 + C68467 + C67856 * C579 +
                      C67861 * C547 + C68468 + C68468 + C152201 * C571 +
                      C67859 * C548 + C68469 + C68469 + C152237 * C572) *
                         C152080 * C67857) *
                        C151956) *
                       C152172 +
                   (((C69231 + C69230 + C69229) * C152080 * C67857 +
                     (C67859 * C1536 + C69202 + C69202 + C152237 * C1560 +
                      C67861 * C1535 + C69203 + C69203 + C152201 * C1559 +
                      C67863 * C1916 + C69204 + C69204 + C67856 * C1918) *
                         C152080 * C152068) *
                        C151956 -
                    ((C68219 + C68220 + C68221) * C152080 * C152068 +
                     (C68218 + C68217 + C68216) * C152080 * C67857) *
                        C152173) *
                       C151914) *
                      C152208)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C67859 * C142 + C67866 + C67866 + C152237 * C158 +
                     C67861 * C143 + C67867 + C67867 + C152201 * C159 +
                     C67863 * C144 + C67868 + C67868 + C67856 * C160) *
                        C152080 * C67857 +
                    (C68204 + C68205 + C68206) * C152080 * C152068) *
                       C152173 -
                   ((C69223 + C69224 + C69225) * C152080 * C152068 +
                    (C67863 * C548 + C68443 + C68443 + C67856 * C572 +
                     C67861 * C549 + C68444 + C68444 + C152201 * C573 +
                     C67859 * C550 + C68445 + C68445 + C152237 * C574) *
                        C152080 * C67857) *
                       C151956) *
                      C1709 +
                  (((C69225 + C69224 + C69223) * C152080 * C67857 +
                    (C69874 + C69875 + C69876) * C152080 * C152068) *
                       C151956 -
                   ((C68207 + C68208 + C68209) * C152080 * C152068 +
                    (C68206 + C68205 + C68204) * C152080 * C67857) *
                       C152173) *
                      C1710 +
                  (((C68209 + C68208 + C68207) * C152080 * C67857 +
                    (C69602 + C69603 + C69604) * C152080 * C152068) *
                       C152173 -
                   ((C70609 + C70610 + C70611) * C152080 * C152068 +
                    (C69876 + C69875 + C69874) * C152080 * C67857) *
                       C151956) *
                      C1711 +
                  (((C70611 + C70610 + C70609) * C152080 * C67857 +
                    (C67859 * C8841 + C70600 + C70600 + C152237 * C8847 +
                     C67861 * C8842 + C70601 + C70601 + C152201 * C8848 +
                     C67863 * C8843 + C70602 + C70602 + C67856 * C8849) *
                        C152080 * C152068) *
                       C151956 -
                   ((C69605 + C69606 + C69607) * C152080 * C152068 +
                    (C69604 + C69603 + C69602) * C152080 * C67857) *
                       C152173) *
                      C152224) *
                 C151823) /
                    (p * q * std::sqrt(p + q));
    d2ee[22] += (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 ((((C67859 * C142 + C67866 + C67866 + C152237 * C158 +
                     C67861 * C143 + C67867 + C67867 + C152201 * C159 +
                     C67863 * C144 + C67868 + C67868 + C67856 * C160) *
                        C152080 * C67857 +
                    (C68204 + C68205 + C68206) * C152080 * C152068) *
                       C151869 * C152258 -
                   ((C68207 + C68208 + C68209) * C152080 * C152068 +
                    (C68206 + C68205 + C68204) * C152080 * C67857) *
                       C151869 * C152244 +
                   ((C68209 + C68208 + C68207) * C152080 * C67857 +
                    (C67859 * C1356 + C68129 + C68129 + C152237 * C1372 +
                     C67861 * C1355 + C68130 + C68130 + C152201 * C1371 +
                     C67863 * C1354 + C68131 + C68131 + C67856 * C1370) *
                        C152080 * C152068) *
                       C151869 * C152214) *
                      C335 +
                  (((C68210 + C68211 + C68212) * C152080 * C67857 +
                    (C68213 + C68214 + C68215) * C152080 * C152068) *
                       C151869 * C152244 -
                   ((C68212 + C68211 + C68210) * C152080 * C152068 +
                    (C67863 * C145 + C67875 + C67875 + C67856 * C161 +
                     C67861 * C144 + C67876 + C67876 + C152201 * C160 +
                     C67859 * C143 + C67877 + C67877 + C152237 * C159) *
                        C152080 * C67857) *
                       C151869 * C152258 -
                   ((C67863 * C1353 + C68147 + C68147 + C67856 * C1369 +
                     C67861 * C1354 + C68148 + C68148 + C152201 * C1370 +
                     C67859 * C1355 + C68149 + C68149 + C152237 * C1371) *
                        C152080 * C152068 +
                    (C68215 + C68214 + C68213) * C152080 * C67857) *
                       C151869 * C152214) *
                      C336 +
                  (((C67859 * C144 + C67878 + C67878 + C152237 * C160 +
                     C67861 * C145 + C67879 + C67879 + C152201 * C161 +
                     C67863 * C146 + C67880 + C67880 + C67856 * C162) *
                        C152080 * C67857 +
                    (C68216 + C68217 + C68218) * C152080 * C152068) *
                       C151869 * C152258 -
                   ((C68219 + C68220 + C68221) * C152080 * C152068 +
                    (C68218 + C68217 + C68216) * C152080 * C67857) *
                       C151869 * C152244 +
                   ((C68221 + C68220 + C68219) * C152080 * C67857 +
                    (C67859 * C1354 + C68165 + C68165 + C152237 * C1370 +
                     C67861 * C1353 + C68166 + C68166 + C152201 * C1369 +
                     C67863 * C1715 + C68167 + C68167 + C67856 * C1717) *
                        C152080 * C152068) *
                       C151869 * C152214) *
                      C152208)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 (((C67859 * C142 + C67866 + C67866 + C152237 * C158 +
                    C67861 * C143 + C67867 + C67867 + C152201 * C159 +
                    C67863 * C144 + C67868 + C67868 + C67856 * C160) *
                       C152080 * C67857 +
                   (C67859 * C341 + C67869 + C67869 + C152237 * C365 +
                    C67861 * C340 + C67870 + C67870 + C152201 * C364 +
                    C67863 * C339 + C67871 + C67871 + C67856 * C363) *
                       C152080 * C152068) *
                      C151869 * C151851 * C129 -
                  ((C67863 * C338 + C67872 + C67872 + C67856 * C362 +
                    C67861 * C339 + C67873 + C67873 + C152201 * C363 +
                    C67859 * C340 + C67874 + C67874 + C152237 * C364) *
                       C152080 * C152068 +
                   (C67863 * C145 + C67875 + C67875 + C67856 * C161 +
                    C67861 * C144 + C67876 + C67876 + C152201 * C160 +
                    C67859 * C143 + C67877 + C67877 + C152237 * C159) *
                       C152080 * C67857) *
                      C151869 * C151851 * C130 +
                  ((C67859 * C144 + C67878 + C67878 + C152237 * C160 +
                    C67861 * C145 + C67879 + C67879 + C152201 * C161 +
                    C67863 * C146 + C67880 + C67880 + C67856 * C162) *
                       C152080 * C67857 +
                   (C67859 * C339 + C67881 + C67881 + C152237 * C363 +
                    C67861 * C338 + C67882 + C67882 + C152201 * C362 +
                    C67863 * C346 + C67883 + C67883 + C67856 * C370) *
                       C152080 * C152068) *
                      C151869 * C151851 * C131 -
                  ((C67863 * C348 + C67884 + C67884 + C67856 * C372 +
                    C67861 * C346 + C67885 + C67885 + C152201 * C370 +
                    C67859 * C338 + C67886 + C67886 + C152237 * C362) *
                       C152080 * C152068 +
                   (C67863 * C147 + C67887 + C67887 + C67856 * C163 +
                    C67861 * C146 + C67888 + C67888 + C152201 * C162 +
                    C67859 * C145 + C67889 + C67889 + C152237 * C161) *
                       C152080 * C67857) *
                      C151869 * C151851 * C132 +
                  ((C67859 * C146 + C67890 + C67890 + C152237 * C162 +
                    C67861 * C147 + C67891 + C67891 + C152201 * C163 +
                    C67863 * C148 + C67892 + C67892 + C67856 * C164) *
                       C152080 * C67857 +
                   (C67859 * C346 + C67893 + C67893 + C152237 * C370 +
                    C67861 * C348 + C67894 + C67894 + C152201 * C372 +
                    C67863 * C743 + C67895 + C67895 + C67856 * C745) *
                       C152080 * C152068) *
                      C151869 * C151851 * C133)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C67859 * C142 + C67866 + C67866 + C152237 * C158 +
                     C67861 * C143 + C67867 + C67867 + C152201 * C159 +
                     C67863 * C144 + C67868 + C67868 + C67856 * C160) *
                        C152080 * C67857 +
                    (C68204 + C68205 + C68206) * C152080 * C152068) *
                       C152259 -
                   ((C67863 * C1085 + C68440 + C68440 + C67856 * C1097 +
                     C67861 * C1084 + C68441 + C68441 + C152201 * C1096 +
                     C67859 * C1083 + C68442 + C68442 + C152237 * C1095) *
                        C152080 * C152068 +
                    (C67863 * C548 + C68443 + C68443 + C67856 * C572 +
                     C67861 * C549 + C68444 + C68444 + C152201 * C573 +
                     C67859 * C550 + C68445 + C68445 + C152237 * C574) *
                        C152080 * C67857) *
                       C152246 +
                   ((C67859 * C551 + C68446 + C68446 + C152237 * C575 +
                     C67861 * C552 + C68447 + C68447 + C152201 * C576 +
                     C67863 * C553 + C68448 + C68448 + C67856 * C577) *
                        C152080 * C67857 +
                    (C67859 * C1534 + C68449 + C68449 + C152237 * C1558 +
                     C67861 * C1533 + C68450 + C68450 + C152201 * C1557 +
                     C67863 * C1532 + C68451 + C68451 + C67856 * C1556) *
                        C152080 * C152068) *
                       C152217) *
                      C151851 * C335 +
                  (((C67859 * C549 + C68452 + C68452 + C152237 * C573 +
                     C67861 * C548 + C68453 + C68453 + C152201 * C572 +
                     C67863 * C547 + C68454 + C68454 + C67856 * C571) *
                        C152080 * C67857 +
                    (C67859 * C1084 + C68455 + C68455 + C152237 * C1096 +
                     C67861 * C1085 + C68456 + C68456 + C152201 * C1097 +
                     C67863 * C1086 + C68457 + C68457 + C67856 * C1098) *
                        C152080 * C152068) *
                       C152246 -
                   ((C68212 + C68211 + C68210) * C152080 * C152068 +
                    (C67863 * C145 + C67875 + C67875 + C67856 * C161 +
                     C67861 * C144 + C67876 + C67876 + C152201 * C160 +
                     C67859 * C143 + C67877 + C67877 + C152237 * C159) *
                        C152080 * C67857) *
                       C152259 -
                   ((C67863 * C1531 + C68458 + C68458 + C67856 * C1555 +
                     C67861 * C1532 + C68459 + C68459 + C152201 * C1556 +
                     C67859 * C1533 + C68460 + C68460 + C152237 * C1557) *
                        C152080 * C152068 +
                    (C67863 * C554 + C68461 + C68461 + C67856 * C578 +
                     C67861 * C553 + C68462 + C68462 + C152201 * C577 +
                     C67859 * C552 + C68463 + C68463 + C152237 * C576) *
                        C152080 * C67857) *
                       C152217) *
                      C151851 * C336 +
                  (((C67859 * C144 + C67878 + C67878 + C152237 * C160 +
                     C67861 * C145 + C67879 + C67879 + C152201 * C161 +
                     C67863 * C146 + C67880 + C67880 + C67856 * C162) *
                        C152080 * C67857 +
                    (C68216 + C68217 + C68218) * C152080 * C152068) *
                       C152259 -
                   ((C67863 * C1087 + C68464 + C68464 + C67856 * C1099 +
                     C67861 * C1086 + C68465 + C68465 + C152201 * C1098 +
                     C67859 * C1085 + C68466 + C68466 + C152237 * C1097) *
                        C152080 * C152068 +
                    (C67863 * C555 + C68467 + C68467 + C67856 * C579 +
                     C67861 * C547 + C68468 + C68468 + C152201 * C571 +
                     C67859 * C548 + C68469 + C68469 + C152237 * C572) *
                        C152080 * C67857) *
                       C152246 +
                   ((C67859 * C553 + C68470 + C68470 + C152237 * C577 +
                     C67861 * C554 + C68471 + C68471 + C152201 * C578 +
                     C67863 * C556 + C68472 + C68472 + C67856 * C580) *
                        C152080 * C67857 +
                    (C67859 * C1532 + C68473 + C68473 + C152237 * C1556 +
                     C67861 * C1531 + C68474 + C68474 + C152201 * C1555 +
                     C67863 * C2677 + C68475 + C68475 + C67856 * C2679) *
                        C152080 * C152068) *
                       C152217) *
                      C151851 * C152208)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 ((((C67859 * C142 + C67866 + C67866 + C152237 * C158 +
                     C67861 * C143 + C67867 + C67867 + C152201 * C159 +
                     C67863 * C144 + C67868 + C67868 + C67856 * C160) *
                        C152080 * C67857 +
                    (C68204 + C68205 + C68206) * C152080 * C152068) *
                       C151869 * C1259 -
                   ((C68207 + C68208 + C68209) * C152080 * C152068 +
                    (C68206 + C68205 + C68204) * C152080 * C67857) *
                       C151869 * C1260 +
                   ((C68209 + C68208 + C68207) * C152080 * C67857 +
                    (C67859 * C1356 + C68129 + C68129 + C152237 * C1372 +
                     C67861 * C1355 + C68130 + C68130 + C152201 * C1371 +
                     C67863 * C1354 + C68131 + C68131 + C67856 * C1370) *
                        C152080 * C152068) *
                       C151869 * C152214) *
                      C152255 +
                  (((C68210 + C68211 + C68212) * C152080 * C67857 +
                    (C68213 + C68214 + C68215) * C152080 * C152068) *
                       C151869 * C1260 -
                   ((C68212 + C68211 + C68210) * C152080 * C152068 +
                    (C67863 * C145 + C67875 + C67875 + C67856 * C161 +
                     C67861 * C144 + C67876 + C67876 + C152201 * C160 +
                     C67859 * C143 + C67877 + C67877 + C152237 * C159) *
                        C152080 * C67857) *
                       C151869 * C1259 -
                   ((C67863 * C1353 + C68147 + C68147 + C67856 * C1369 +
                     C67861 * C1354 + C68148 + C68148 + C152201 * C1370 +
                     C67859 * C1355 + C68149 + C68149 + C152237 * C1371) *
                        C152080 * C152068 +
                    (C68215 + C68214 + C68213) * C152080 * C67857) *
                       C151869 * C152214) *
                      C152240 +
                  (((C67859 * C144 + C67878 + C67878 + C152237 * C160 +
                     C67861 * C145 + C67879 + C67879 + C152201 * C161 +
                     C67863 * C146 + C67880 + C67880 + C67856 * C162) *
                        C152080 * C67857 +
                    (C68216 + C68217 + C68218) * C152080 * C152068) *
                       C151869 * C1259 -
                   ((C68219 + C68220 + C68221) * C152080 * C152068 +
                    (C68218 + C68217 + C68216) * C152080 * C67857) *
                       C151869 * C1260 +
                   ((C68221 + C68220 + C68219) * C152080 * C67857 +
                    (C67859 * C1354 + C68165 + C68165 + C152237 * C1370 +
                     C67861 * C1353 + C68166 + C68166 + C152201 * C1369 +
                     C67863 * C1715 + C68167 + C68167 + C67856 * C1717) *
                        C152080 * C152068) *
                       C151869 * C152214) *
                      C152208)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 (((C67859 * C142 + C67866 + C67866 + C152237 * C158 +
                    C67861 * C143 + C67867 + C67867 + C152201 * C159 +
                    C67863 * C144 + C67868 + C67868 + C67856 * C160) *
                       C152080 * C67857 +
                   (C68204 + C68205 + C68206) * C152080 * C152068) *
                      C151869 * C1347 -
                  ((C68207 + C68208 + C68209) * C152080 * C152068 +
                   (C68206 + C68205 + C68204) * C152080 * C67857) *
                      C151869 * C1348 +
                  ((C68209 + C68208 + C68207) * C152080 * C67857 +
                   (C69602 + C69603 + C69604) * C152080 * C152068) *
                      C151869 * C1349 -
                  ((C69605 + C69606 + C69607) * C152080 * C152068 +
                   (C69604 + C69603 + C69602) * C152080 * C67857) *
                      C151869 * C1350 +
                  ((C69607 + C69606 + C69605) * C152080 * C67857 +
                   (C67859 * C7801 + C69587 + C69587 + C152237 * C7807 +
                    C67861 * C7802 + C69588 + C69588 + C152201 * C7808 +
                    C67863 * C7803 + C69589 + C69589 + C67856 * C7809) *
                       C152080 * C152068) *
                      C151869 * C1351) *
                 C151823) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C67859 * C142 + C67866 + C67866 + C152237 * C158 +
                     C67861 * C143 + C67867 + C67867 + C152201 * C159 +
                     C67863 * C144 + C67868 + C67868 + C67856 * C160) *
                        C152080 * C67857 +
                    (C68204 + C68205 + C68206) * C152080 * C152068) *
                       C152259 -
                   ((C69223 + C69224 + C69225) * C152080 * C152068 +
                    (C67863 * C548 + C68443 + C68443 + C67856 * C572 +
                     C67861 * C549 + C68444 + C68444 + C152201 * C573 +
                     C67859 * C550 + C68445 + C68445 + C152237 * C574) *
                        C152080 * C67857) *
                       C152246 +
                   ((C67859 * C551 + C68446 + C68446 + C152237 * C575 +
                     C67861 * C552 + C68447 + C68447 + C152201 * C576 +
                     C67863 * C553 + C68448 + C68448 + C67856 * C577) *
                        C152080 * C67857 +
                    (C69871 + C69872 + C69873) * C152080 * C152068) *
                       C152217) *
                      C1259 +
                  (((C69225 + C69224 + C69223) * C152080 * C67857 +
                    (C69874 + C69875 + C69876) * C152080 * C152068) *
                       C152246 -
                   ((C68207 + C68208 + C68209) * C152080 * C152068 +
                    (C68206 + C68205 + C68204) * C152080 * C67857) *
                       C152259 -
                   ((C69877 + C69878 + C69879) * C152080 * C152068 +
                    (C69873 + C69872 + C69871) * C152080 * C67857) *
                       C152217) *
                      C1260 +
                  (((C68209 + C68208 + C68207) * C152080 * C67857 +
                    (C69602 + C69603 + C69604) * C152080 * C152068) *
                       C152259 -
                   ((C67863 * C2055 + C69847 + C69847 + C67856 * C2063 +
                     C67861 * C2054 + C69848 + C69848 + C152201 * C2062 +
                     C67859 * C2053 + C69849 + C69849 + C152237 * C2061) *
                        C152080 * C152068 +
                    (C69876 + C69875 + C69874) * C152080 * C67857) *
                       C152246 +
                   ((C69879 + C69878 + C69877) * C152080 * C67857 +
                    (C67859 * C8064 + C69850 + C69850 + C152237 * C8070 +
                     C67861 * C8065 + C69851 + C69851 + C152201 * C8071 +
                     C67863 * C8066 + C69852 + C69852 + C67856 * C8072) *
                        C152080 * C152068) *
                       C152217) *
                      C152214) *
                 C151823) /
                    (p * q * std::sqrt(p + q));
    d2ee[23] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C67859 * C142 + C67866 + C67866 + C152237 * C158 +
                     C67861 * C143 + C67867 + C67867 + C152201 * C159 +
                     C67863 * C144 + C67868 + C67868 + C67856 * C160) *
                        C152080 * C67857 +
                    (C68204 + C68205 + C68206) * C152080 * C152068) *
                       C152173 -
                   ((C67863 * C1085 + C68440 + C68440 + C67856 * C1097 +
                     C67861 * C1084 + C68441 + C68441 + C152201 * C1096 +
                     C67859 * C1083 + C68442 + C68442 + C152237 * C1095) *
                        C152080 * C152068 +
                    (C67863 * C548 + C68443 + C68443 + C67856 * C572 +
                     C67861 * C549 + C68444 + C68444 + C152201 * C573 +
                     C67859 * C550 + C68445 + C68445 + C152237 * C574) *
                        C152080 * C67857) *
                       C151956) *
                      C151851 * C739 +
                  (((C67859 * C549 + C68452 + C68452 + C152237 * C573 +
                     C67861 * C548 + C68453 + C68453 + C152201 * C572 +
                     C67863 * C547 + C68454 + C68454 + C67856 * C571) *
                        C152080 * C67857 +
                    (C67859 * C1084 + C68455 + C68455 + C152237 * C1096 +
                     C67861 * C1085 + C68456 + C68456 + C152201 * C1097 +
                     C67863 * C1086 + C68457 + C68457 + C67856 * C1098) *
                        C152080 * C152068) *
                       C151956 -
                   ((C68212 + C68211 + C68210) * C152080 * C152068 +
                    (C67863 * C145 + C67875 + C67875 + C67856 * C161 +
                     C67861 * C144 + C67876 + C67876 + C152201 * C160 +
                     C67859 * C143 + C67877 + C67877 + C152237 * C159) *
                        C152080 * C67857) *
                       C152173) *
                      C151851 * C740 +
                  (((C67859 * C144 + C67878 + C67878 + C152237 * C160 +
                     C67861 * C145 + C67879 + C67879 + C152201 * C161 +
                     C67863 * C146 + C67880 + C67880 + C67856 * C162) *
                        C152080 * C67857 +
                    (C68216 + C68217 + C68218) * C152080 * C152068) *
                       C152173 -
                   ((C67863 * C1087 + C68464 + C68464 + C67856 * C1099 +
                     C67861 * C1086 + C68465 + C68465 + C152201 * C1098 +
                     C67859 * C1085 + C68466 + C68466 + C152237 * C1097) *
                        C152080 * C152068 +
                    (C67863 * C555 + C68467 + C68467 + C67856 * C579 +
                     C67861 * C547 + C68468 + C68468 + C152201 * C571 +
                     C67859 * C548 + C68469 + C68469 + C152237 * C572) *
                        C152080 * C67857) *
                       C151956) *
                      C151851 * C741 +
                  (((C67859 * C547 + C68882 + C68882 + C152237 * C571 +
                     C67861 * C555 + C68883 + C68883 + C152201 * C579 +
                     C67863 * C557 + C68884 + C68884 + C67856 * C581) *
                        C152080 * C67857 +
                    (C67859 * C1086 + C68885 + C68885 + C152237 * C1098 +
                     C67861 * C1087 + C68886 + C68886 + C152201 * C1099 +
                     C67863 * C1088 + C68887 + C68887 + C67856 * C1100) *
                        C152080 * C152068) *
                       C151956 -
                   ((C68687 + C68686 + C68685) * C152080 * C152068 +
                    (C67863 * C147 + C67887 + C67887 + C67856 * C163 +
                     C67861 * C146 + C67888 + C67888 + C152201 * C162 +
                     C67859 * C145 + C67889 + C67889 + C152237 * C161) *
                        C152080 * C67857) *
                       C152173) *
                      C151851 * C152218)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C67859 * C142 + C67866 + C67866 + C152237 * C158 +
                      C67861 * C143 + C67867 + C67867 + C152201 * C159 +
                      C67863 * C144 + C67868 + C67868 + C67856 * C160) *
                         C152080 * C67857 +
                     (C68204 + C68205 + C68206) * C152080 * C152068) *
                        C152173 -
                    ((C69223 + C69224 + C69225) * C152080 * C152068 +
                     (C67863 * C548 + C68443 + C68443 + C67856 * C572 +
                      C67861 * C549 + C68444 + C68444 + C152201 * C573 +
                      C67859 * C550 + C68445 + C68445 + C152237 * C574) *
                         C152080 * C67857) *
                        C151956) *
                       C1259 +
                   (((C69225 + C69224 + C69223) * C152080 * C67857 +
                     (C69874 + C69875 + C69876) * C152080 * C152068) *
                        C151956 -
                    ((C68207 + C68208 + C68209) * C152080 * C152068 +
                     (C68206 + C68205 + C68204) * C152080 * C67857) *
                        C152173) *
                       C1260 +
                   (((C68209 + C68208 + C68207) * C152080 * C67857 +
                     (C69602 + C69603 + C69604) * C152080 * C152068) *
                        C152173 -
                    ((C67863 * C2055 + C69847 + C69847 + C67856 * C2063 +
                      C67861 * C2054 + C69848 + C69848 + C152201 * C2062 +
                      C67859 * C2053 + C69849 + C69849 + C152237 * C2061) *
                         C152080 * C152068 +
                     (C69876 + C69875 + C69874) * C152080 * C67857) *
                        C151956) *
                       C152214) *
                      C152158 +
                  ((((C67859 * C549 + C68452 + C68452 + C152237 * C573 +
                      C67861 * C548 + C68453 + C68453 + C152201 * C572 +
                      C67863 * C547 + C68454 + C68454 + C67856 * C571) *
                         C152080 * C67857 +
                     (C69226 + C69227 + C69228) * C152080 * C152068) *
                        C151956 -
                    ((C68212 + C68211 + C68210) * C152080 * C152068 +
                     (C67863 * C145 + C67875 + C67875 + C67856 * C161 +
                      C67861 * C144 + C67876 + C67876 + C152201 * C160 +
                      C67859 * C143 + C67877 + C67877 + C152237 * C159) *
                         C152080 * C67857) *
                        C152173) *
                       C1259 +
                   (((C68210 + C68211 + C68212) * C152080 * C67857 +
                     (C68213 + C68214 + C68215) * C152080 * C152068) *
                        C152173 -
                    ((C70397 + C70398 + C70399) * C152080 * C152068 +
                     (C69228 + C69227 + C69226) * C152080 * C67857) *
                        C151956) *
                       C1260 +
                   (((C70399 + C70398 + C70397) * C152080 * C67857 +
                     (C67859 * C2054 + C70388 + C70388 + C152237 * C2062 +
                      C67861 * C2055 + C70389 + C70389 + C152201 * C2063 +
                      C67863 * C2056 + C70390 + C70390 + C67856 * C2064) *
                         C152080 * C152068) *
                        C151956 -
                    ((C70089 + C70090 + C70091) * C152080 * C152068 +
                     (C68215 + C68214 + C68213) * C152080 * C67857) *
                        C152173) *
                       C152214) *
                      C151834)) /
                    (p * q * std::sqrt(p + q));
    d2ee[24] += (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                 (((C67859 * C142 + C67866 + C67866 + C152237 * C158 +
                    C67861 * C143 + C67867 + C67867 + C152201 * C159 +
                    C67863 * C144 + C67868 + C67868 + C67856 * C160) *
                       C152080 * C67857 +
                   (C67859 * C341 + C67869 + C67869 + C152237 * C365 +
                    C67861 * C340 + C67870 + C67870 + C152201 * C364 +
                    C67863 * C339 + C67871 + C67871 + C67856 * C363) *
                       C152080 * C152068) *
                      C151869 * C151851 * C129 -
                  ((C67863 * C338 + C67872 + C67872 + C67856 * C362 +
                    C67861 * C339 + C67873 + C67873 + C152201 * C363 +
                    C67859 * C340 + C67874 + C67874 + C152237 * C364) *
                       C152080 * C152068 +
                   (C67863 * C145 + C67875 + C67875 + C67856 * C161 +
                    C67861 * C144 + C67876 + C67876 + C152201 * C160 +
                    C67859 * C143 + C67877 + C67877 + C152237 * C159) *
                       C152080 * C67857) *
                      C151869 * C151851 * C130 +
                  ((C67859 * C144 + C67878 + C67878 + C152237 * C160 +
                    C67861 * C145 + C67879 + C67879 + C152201 * C161 +
                    C67863 * C146 + C67880 + C67880 + C67856 * C162) *
                       C152080 * C67857 +
                   (C67859 * C339 + C67881 + C67881 + C152237 * C363 +
                    C67861 * C338 + C67882 + C67882 + C152201 * C362 +
                    C67863 * C346 + C67883 + C67883 + C67856 * C370) *
                       C152080 * C152068) *
                      C151869 * C151851 * C131 -
                  ((C67863 * C348 + C67884 + C67884 + C67856 * C372 +
                    C67861 * C346 + C67885 + C67885 + C152201 * C370 +
                    C67859 * C338 + C67886 + C67886 + C152237 * C362) *
                       C152080 * C152068 +
                   (C67863 * C147 + C67887 + C67887 + C67856 * C163 +
                    C67861 * C146 + C67888 + C67888 + C152201 * C162 +
                    C67859 * C145 + C67889 + C67889 + C152237 * C161) *
                       C152080 * C67857) *
                      C151869 * C151851 * C132 +
                  ((C67859 * C146 + C67890 + C67890 + C152237 * C162 +
                    C67861 * C147 + C67891 + C67891 + C152201 * C163 +
                    C67863 * C148 + C67892 + C67892 + C67856 * C164) *
                       C152080 * C67857 +
                   (C67859 * C346 + C67893 + C67893 + C152237 * C370 +
                    C67861 * C348 + C67894 + C67894 + C152201 * C372 +
                    C67863 * C743 + C67895 + C67895 + C67856 * C745) *
                       C152080 * C152068) *
                      C151869 * C151851 * C133)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                 ((((C67859 * C142 + C67866 + C67866 + C152237 * C158 +
                     C67861 * C143 + C67867 + C67867 + C152201 * C159 +
                     C67863 * C144 + C67868 + C67868 + C67856 * C160) *
                        C152080 * C67857 +
                    (C68204 + C68205 + C68206) * C152080 * C152068) *
                       C151869 * C152258 -
                   ((C68207 + C68208 + C68209) * C152080 * C152068 +
                    (C68206 + C68205 + C68204) * C152080 * C67857) *
                       C151869 * C152244 +
                   ((C68209 + C68208 + C68207) * C152080 * C67857 +
                    (C67859 * C1356 + C68129 + C68129 + C152237 * C1372 +
                     C67861 * C1355 + C68130 + C68130 + C152201 * C1371 +
                     C67863 * C1354 + C68131 + C68131 + C67856 * C1370) *
                        C152080 * C152068) *
                       C151869 * C152214) *
                      C335 +
                  (((C68210 + C68211 + C68212) * C152080 * C67857 +
                    (C68213 + C68214 + C68215) * C152080 * C152068) *
                       C151869 * C152244 -
                   ((C68212 + C68211 + C68210) * C152080 * C152068 +
                    (C67863 * C145 + C67875 + C67875 + C67856 * C161 +
                     C67861 * C144 + C67876 + C67876 + C152201 * C160 +
                     C67859 * C143 + C67877 + C67877 + C152237 * C159) *
                        C152080 * C67857) *
                       C151869 * C152258 -
                   ((C67863 * C1353 + C68147 + C68147 + C67856 * C1369 +
                     C67861 * C1354 + C68148 + C68148 + C152201 * C1370 +
                     C67859 * C1355 + C68149 + C68149 + C152237 * C1371) *
                        C152080 * C152068 +
                    (C68215 + C68214 + C68213) * C152080 * C67857) *
                       C151869 * C152214) *
                      C336 +
                  (((C67859 * C144 + C67878 + C67878 + C152237 * C160 +
                     C67861 * C145 + C67879 + C67879 + C152201 * C161 +
                     C67863 * C146 + C67880 + C67880 + C67856 * C162) *
                        C152080 * C67857 +
                    (C68216 + C68217 + C68218) * C152080 * C152068) *
                       C151869 * C152258 -
                   ((C68219 + C68220 + C68221) * C152080 * C152068 +
                    (C68218 + C68217 + C68216) * C152080 * C67857) *
                       C151869 * C152244 +
                   ((C68221 + C68220 + C68219) * C152080 * C67857 +
                    (C67859 * C1354 + C68165 + C68165 + C152237 * C1370 +
                     C67861 * C1353 + C68166 + C68166 + C152201 * C1369 +
                     C67863 * C1715 + C68167 + C68167 + C67856 * C1717) *
                        C152080 * C152068) *
                       C151869 * C152214) *
                      C152208)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                 ((((C67859 * C142 + C67866 + C67866 + C152237 * C158 +
                     C67861 * C143 + C67867 + C67867 + C152201 * C159 +
                     C67863 * C144 + C67868 + C67868 + C67856 * C160) *
                        C152080 * C67857 +
                    (C68204 + C68205 + C68206) * C152080 * C152068) *
                       C151869 * C1259 -
                   ((C68207 + C68208 + C68209) * C152080 * C152068 +
                    (C68206 + C68205 + C68204) * C152080 * C67857) *
                       C151869 * C1260 +
                   ((C68209 + C68208 + C68207) * C152080 * C67857 +
                    (C67859 * C1356 + C68129 + C68129 + C152237 * C1372 +
                     C67861 * C1355 + C68130 + C68130 + C152201 * C1371 +
                     C67863 * C1354 + C68131 + C68131 + C67856 * C1370) *
                        C152080 * C152068) *
                       C151869 * C152214) *
                      C152255 +
                  (((C68210 + C68211 + C68212) * C152080 * C67857 +
                    (C68213 + C68214 + C68215) * C152080 * C152068) *
                       C151869 * C1260 -
                   ((C68212 + C68211 + C68210) * C152080 * C152068 +
                    (C67863 * C145 + C67875 + C67875 + C67856 * C161 +
                     C67861 * C144 + C67876 + C67876 + C152201 * C160 +
                     C67859 * C143 + C67877 + C67877 + C152237 * C159) *
                        C152080 * C67857) *
                       C151869 * C1259 -
                   ((C67863 * C1353 + C68147 + C68147 + C67856 * C1369 +
                     C67861 * C1354 + C68148 + C68148 + C152201 * C1370 +
                     C67859 * C1355 + C68149 + C68149 + C152237 * C1371) *
                        C152080 * C152068 +
                    (C68215 + C68214 + C68213) * C152080 * C67857) *
                       C151869 * C152214) *
                      C152240 +
                  (((C67859 * C144 + C67878 + C67878 + C152237 * C160 +
                     C67861 * C145 + C67879 + C67879 + C152201 * C161 +
                     C67863 * C146 + C67880 + C67880 + C67856 * C162) *
                        C152080 * C67857 +
                    (C68216 + C68217 + C68218) * C152080 * C152068) *
                       C151869 * C1259 -
                   ((C68219 + C68220 + C68221) * C152080 * C152068 +
                    (C68218 + C68217 + C68216) * C152080 * C67857) *
                       C151869 * C1260 +
                   ((C68221 + C68220 + C68219) * C152080 * C67857 +
                    (C67859 * C1354 + C68165 + C68165 + C152237 * C1370 +
                     C67861 * C1353 + C68166 + C68166 + C152201 * C1369 +
                     C67863 * C1715 + C68167 + C68167 + C67856 * C1717) *
                        C152080 * C152068) *
                       C151869 * C152214) *
                      C152208)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                 (((C67859 * C142 + C67866 + C67866 + C152237 * C158 +
                    C67861 * C143 + C67867 + C67867 + C152201 * C159 +
                    C67863 * C144 + C67868 + C67868 + C67856 * C160) *
                       C152080 * C67857 +
                   (C68204 + C68205 + C68206) * C152080 * C152068) *
                      C151869 * C1347 -
                  ((C68207 + C68208 + C68209) * C152080 * C152068 +
                   (C68206 + C68205 + C68204) * C152080 * C67857) *
                      C151869 * C1348 +
                  ((C68209 + C68208 + C68207) * C152080 * C67857 +
                   (C69602 + C69603 + C69604) * C152080 * C152068) *
                      C151869 * C1349 -
                  ((C69605 + C69606 + C69607) * C152080 * C152068 +
                   (C69604 + C69603 + C69602) * C152080 * C67857) *
                      C151869 * C1350 +
                  ((C69607 + C69606 + C69605) * C152080 * C67857 +
                   (C67859 * C7801 + C69587 + C69587 + C152237 * C7807 +
                    C67861 * C7802 + C69588 + C69588 + C152201 * C7808 +
                    C67863 * C7803 + C69589 + C69589 + C67856 * C7809) *
                       C152080 * C152068) *
                      C151869 * C1351) *
                 C151823) /
                    (p * q * std::sqrt(p + q));
    d2ee[25] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 ((((C76456 * C142 + C76461 + C76461 + C76451 * C158 +
                     C76458 * C143 + C76462 + C76462 + C151796 * C159) *
                        C152080 * C152253 +
                    (C76793 + C76794) * C152080 * C152233 + C76814 * C76455) *
                       C151869 * C151910 -
                   (C78196 * C76455 + (C76796 + C76795) * C152080 * C152233 +
                    (C76794 + C76793) * C152080 * C152253) *
                       C151869 * C151917 +
                   (C76814 * C152253 + (C76798 + C76797) * C152080 * C152233 +
                    C78210 * C76455) *
                       C151869 * C3585) *
                      C151828 +
                  (((C76799 + C76800) * C152080 * C152253 +
                    (C76801 + C76802) * C152080 * C152233 + C78680 * C76455) *
                       C151869 * C151917 -
                   (C76815 * C76455 + (C76800 + C76799) * C152080 * C152233 +
                    (C76458 * C144 + C76471 + C76471 + C151796 * C160 +
                     C76456 * C143 + C76472 + C76472 + C76451 * C159) *
                        C152080 * C152253) *
                       C151869 * C151910 -
                   ((C78685 + C78686) * C152080 * C76455 +
                    (C76804 + C76803) * C152080 * C152233 + C76815 * C152253) *
                       C151869 * C3585) *
                      C151837 +
                  (((C76456 * C144 + C76473 + C76473 + C76451 * C160 +
                     C76458 * C145 + C76474 + C76474 + C151796 * C161) *
                        C152080 * C152253 +
                    (C76805 + C76806) * C152080 * C152233 + C76816 * C76455) *
                       C151869 * C151910 -
                   ((C76809 + C76810) * C152080 * C76455 +
                    (C76808 + C76807) * C152080 * C152233 +
                    (C76806 + C76805) * C152080 * C152253) *
                       C151869 * C151917 +
                   (C76816 * C152253 + (C76810 + C76809) * C152080 * C152233 +
                    (C76456 * C1359 + C76755 + C76755 + C76451 * C1375 +
                     C76458 * C1360 + C76756 + C76756 + C151796 * C1376) *
                        C152080 * C76455) *
                       C151869 * C3585) *
                      C3588)) /
                (p * q * std::sqrt(p + q));
    d2ee[26] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 (((((C76456 * C142 + C76461 + C76461 + C76451 * C158 +
                      C76458 * C143 + C76462 + C76462 + C151796 * C159) *
                         C152080 * C152253 +
                     (C76793 + C76794) * C152080 * C152233 + C76814 * C76455) *
                        C152173 -
                    (C78452 * C76455 + (C77833 + C77834) * C152080 * C152233 +
                     (C76458 * C549 + C77039 + C77039 + C151796 * C573 +
                      C76456 * C550 + C77040 + C77040 + C76451 * C574) *
                         C152080 * C152253) *
                        C151956) *
                       C151910 +
                   (((C77834 + C77833) * C152080 * C152253 +
                     (C77832 + C77831) * C152080 * C152233 + C79192 * C76455) *
                        C151956 -
                    (C78196 * C76455 + (C76796 + C76795) * C152080 * C152233 +
                     (C76794 + C76793) * C152080 * C152253) *
                        C152173) *
                       C151917 +
                   ((C76814 * C152253 + (C76798 + C76797) * C152080 * C152233 +
                     C78210 * C76455) *
                        C152173 -
                    ((C79197 + C79198) * C152080 * C76455 +
                     (C78474 + C78473) * C152080 * C152233 + C78452 * C152253) *
                        C151956) *
                       C3585) *
                      C3241 +
                  ((((C76456 * C549 + C77047 + C77047 + C76451 * C573 +
                      C76458 * C548 + C77048 + C77048 + C151796 * C572) *
                         C152080 * C152253 +
                     (C77835 + C77836) * C152080 * C152233 + C78984 * C76455) *
                        C151956 -
                    (C76815 * C76455 + (C76800 + C76799) * C152080 * C152233 +
                     (C76458 * C144 + C76471 + C76471 + C151796 * C160 +
                      C76456 * C143 + C76472 + C76472 + C76451 * C159) *
                         C152080 * C152253) *
                        C152173) *
                       C151910 +
                   (((C76799 + C76800) * C152080 * C152253 +
                     (C76801 + C76802) * C152080 * C152233 + C78680 * C76455) *
                        C152173 -
                    ((C78989 + C78990) * C152080 * C76455 +
                     (C77838 + C77837) * C152080 * C152233 +
                     (C77836 + C77835) * C152080 * C152253) *
                        C151956) *
                       C151917 +
                   ((C78984 * C152253 + (C78990 + C78989) * C152080 * C152233 +
                     (C76456 * C8842 + C78982 + C78982 + C76451 * C8848 +
                      C76458 * C8843 + C78983 + C78983 + C151796 * C8849) *
                         C152080 * C76455) *
                        C151956 -
                    ((C78685 + C78686) * C152080 * C76455 +
                     (C76804 + C76803) * C152080 * C152233 + C76815 * C152253) *
                        C152173) *
                       C3585) *
                      C151834)) /
                (p * q * std::sqrt(p + q));
    d2ee[27] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C76456 * C142 + C76461 + C76461 + C76451 * C158 +
                     C76458 * C143 + C76462 + C76462 + C151796 * C159) *
                        C152080 * C152253 +
                    (C76793 + C76794) * C152080 * C152233 + C76814 * C76455) *
                       C151869 * C152265 -
                   (C78196 * C76455 + (C76796 + C76795) * C152080 * C152233 +
                    (C76794 + C76793) * C152080 * C152253) *
                       C151869 * C152261 +
                   (C76814 * C152253 + (C76798 + C76797) * C152080 * C152233 +
                    C78210 * C76455) *
                       C151869 * C152249 -
                   ((C78207 + C78208) * C152080 * C76455 +
                    (C78206 + C78205) * C152080 * C152233 + C78196 * C152253) *
                       C151869 * C152224) *
                      C3241 +
                  (((C76799 + C76800) * C152080 * C152253 +
                    (C76801 + C76802) * C152080 * C152233 + C78680 * C76455) *
                       C151869 * C152261 -
                   (C76815 * C76455 + (C76800 + C76799) * C152080 * C152233 +
                    (C76458 * C144 + C76471 + C76471 + C151796 * C160 +
                     C76456 * C143 + C76472 + C76472 + C76451 * C159) *
                        C152080 * C152253) *
                       C151869 * C152265 -
                   ((C78685 + C78686) * C152080 * C76455 +
                    (C76804 + C76803) * C152080 * C152233 + C76815 * C152253) *
                       C151869 * C152249 +
                   (C78680 * C152253 + (C78686 + C78685) * C152080 * C152233 +
                    (C76456 * C7802 + C78678 + C78678 + C76451 * C7808 +
                     C76458 * C7803 + C78679 + C78679 + C151796 * C7809) *
                        C152080 * C76455) *
                       C151869 * C152224) *
                      C151834)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C76456 * C142 + C76461 + C76461 + C76451 * C158 +
                     C76458 * C143 + C76462 + C76462 + C151796 * C159) *
                        C152080 * C152253 +
                    (C76793 + C76794) * C152080 * C152233 + C76814 * C76455) *
                       C151869 * C3101 -
                   (C78196 * C76455 + (C76796 + C76795) * C152080 * C152233 +
                    (C76794 + C76793) * C152080 * C152253) *
                       C151869 * C151914) *
                      C152264 +
                  (((C76799 + C76800) * C152080 * C152253 +
                    (C76801 + C76802) * C152080 * C152233 + C78680 * C76455) *
                       C151869 * C151914 -
                   (C76815 * C76455 + (C76800 + C76799) * C152080 * C152233 +
                    (C76458 * C144 + C76471 + C76471 + C151796 * C160 +
                     C76456 * C143 + C76472 + C76472 + C76451 * C159) *
                        C152080 * C152253) *
                       C151869 * C3101) *
                      C152257 +
                  (((C76456 * C144 + C76473 + C76473 + C76451 * C160 +
                     C76458 * C145 + C76474 + C76474 + C151796 * C161) *
                        C152080 * C152253 +
                    (C76805 + C76806) * C152080 * C152233 + C76816 * C76455) *
                       C151869 * C3101 -
                   ((C76809 + C76810) * C152080 * C76455 +
                    (C76808 + C76807) * C152080 * C152233 +
                    (C76806 + C76805) * C152080 * C152253) *
                       C151869 * C151914) *
                      C152242 +
                  (((C77283 + C77284) * C152080 * C152253 +
                    (C77285 + C77286) * C152080 * C152233 +
                    (C76456 * C1353 + C77273 + C77273 + C76451 * C1369 +
                     C76458 * C1715 + C77274 + C77274 + C151796 * C1717) *
                        C152080 * C76455) *
                       C151869 * C151914 -
                   ((C77286 + C77285) * C152080 * C76455 +
                    (C77284 + C77283) * C152080 * C152233 +
                    (C76458 * C146 + C76483 + C76483 + C151796 * C162 +
                     C76456 * C145 + C76484 + C76484 + C76451 * C161) *
                        C152080 * C152253) *
                       C151869 * C3101) *
                      C152218)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C76456 * C142 + C76461 + C76461 + C76451 * C158 +
                      C76458 * C143 + C76462 + C76462 + C151796 * C159) *
                         C152080 * C152253 +
                     (C76793 + C76794) * C152080 * C152233 + C76814 * C76455) *
                        C152259 -
                    (C78452 * C76455 + (C77833 + C77834) * C152080 * C152233 +
                     (C76458 * C549 + C77039 + C77039 + C151796 * C573 +
                      C76456 * C550 + C77040 + C77040 + C76451 * C574) *
                         C152080 * C152253) *
                        C152246 +
                    ((C76456 * C551 + C77041 + C77041 + C76451 * C575 +
                      C76458 * C552 + C77042 + C77042 + C151796 * C576) *
                         C152080 * C152253 +
                     (C78469 + C78470) * C152080 * C152233 + C78478 * C76455) *
                        C152217) *
                       C3101 +
                   (((C77834 + C77833) * C152080 * C152253 +
                     (C77832 + C77831) * C152080 * C152233 + C79192 * C76455) *
                        C152246 -
                    (C78196 * C76455 + (C76796 + C76795) * C152080 * C152233 +
                     (C76794 + C76793) * C152080 * C152253) *
                        C152259 -
                    ((C78475 + C78476) * C152080 * C76455 +
                     (C78472 + C78471) * C152080 * C152233 +
                     (C78470 + C78469) * C152080 * C152253) *
                        C152217) *
                       C151914) *
                      C3241 +
                  ((((C76456 * C549 + C77047 + C77047 + C76451 * C573 +
                      C76458 * C548 + C77048 + C77048 + C151796 * C572) *
                         C152080 * C152253 +
                     (C77835 + C77836) * C152080 * C152233 + C78984 * C76455) *
                        C152246 -
                    (C76815 * C76455 + (C76800 + C76799) * C152080 * C152233 +
                     (C76458 * C144 + C76471 + C76471 + C151796 * C160 +
                      C76456 * C143 + C76472 + C76472 + C76451 * C159) *
                         C152080 * C152253) *
                        C152259 -
                    ((C80077 + C80078) * C152080 * C76455 +
                     (C80079 + C80080) * C152080 * C152233 +
                     (C76458 * C553 + C77057 + C77057 + C151796 * C577 +
                      C76456 * C552 + C77058 + C77058 + C76451 * C576) *
                         C152080 * C152253) *
                        C152217) *
                       C3101 +
                   (((C76799 + C76800) * C152080 * C152253 +
                     (C76801 + C76802) * C152080 * C152233 + C78680 * C76455) *
                        C152259 -
                    ((C78989 + C78990) * C152080 * C76455 +
                     (C77838 + C77837) * C152080 * C152233 +
                     (C77836 + C77835) * C152080 * C152253) *
                        C152246 +
                    ((C80080 + C80079) * C152080 * C152253 +
                     (C80078 + C80077) * C152080 * C152233 +
                     (C76456 * C8065 + C80067 + C80067 + C76451 * C8071 +
                      C76458 * C8066 + C80068 + C80068 + C151796 * C8072) *
                         C152080 * C76455) *
                        C152217) *
                       C151914) *
                      C151834)) /
                    (p * q * std::sqrt(p + q));
    d2ee[28] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 (((((C76456 * C142 + C76461 + C76461 + C76451 * C158 +
                      C76458 * C143 + C76462 + C76462 + C151796 * C159) *
                         C152080 * C152253 +
                     (C76793 + C76794) * C152080 * C152233 + C76814 * C76455) *
                        C152173 -
                    (C78452 * C76455 + (C77833 + C77834) * C152080 * C152233 +
                     (C76458 * C549 + C77039 + C77039 + C151796 * C573 +
                      C76456 * C550 + C77040 + C77040 + C76451 * C574) *
                         C152080 * C152253) *
                        C151956) *
                       C3101 +
                   (((C77834 + C77833) * C152080 * C152253 +
                     (C77832 + C77831) * C152080 * C152233 + C79192 * C76455) *
                        C151956 -
                    (C78196 * C76455 + (C76796 + C76795) * C152080 * C152233 +
                     (C76794 + C76793) * C152080 * C152253) *
                        C152173) *
                       C151914) *
                      C151828 +
                  ((((C76456 * C549 + C77047 + C77047 + C76451 * C573 +
                      C76458 * C548 + C77048 + C77048 + C151796 * C572) *
                         C152080 * C152253 +
                     (C77835 + C77836) * C152080 * C152233 + C78984 * C76455) *
                        C151956 -
                    (C76815 * C76455 + (C76800 + C76799) * C152080 * C152233 +
                     (C76458 * C144 + C76471 + C76471 + C151796 * C160 +
                      C76456 * C143 + C76472 + C76472 + C76451 * C159) *
                         C152080 * C152253) *
                        C152173) *
                       C3101 +
                   (((C76799 + C76800) * C152080 * C152253 +
                     (C76801 + C76802) * C152080 * C152233 + C78680 * C76455) *
                        C152173 -
                    ((C78989 + C78990) * C152080 * C76455 +
                     (C77838 + C77837) * C152080 * C152233 +
                     (C77836 + C77835) * C152080 * C152253) *
                        C151956) *
                       C151914) *
                      C151837 +
                  ((((C76456 * C144 + C76473 + C76473 + C76451 * C160 +
                      C76458 * C145 + C76474 + C76474 + C151796 * C161) *
                         C152080 * C152253 +
                     (C76805 + C76806) * C152080 * C152233 + C76816 * C76455) *
                        C152173 -
                    ((C77839 + C77840) * C152080 * C76455 +
                     (C77841 + C77842) * C152080 * C152233 +
                     (C76458 * C547 + C77063 + C77063 + C151796 * C571 +
                      C76456 * C548 + C77064 + C77064 + C76451 * C572) *
                         C152080 * C152253) *
                        C151956) *
                       C3101 +
                   (((C77842 + C77841) * C152080 * C152253 +
                     (C77840 + C77839) * C152080 * C152233 +
                     (C76456 * C2055 + C77805 + C77805 + C76451 * C2063 +
                      C76458 * C2056 + C77806 + C77806 + C151796 * C2064) *
                         C152080 * C76455) *
                        C151956 -
                    ((C76809 + C76810) * C152080 * C76455 +
                     (C76808 + C76807) * C152080 * C152233 +
                     (C76806 + C76805) * C152080 * C152253) *
                        C152173) *
                       C151914) *
                      C3588)) /
                (p * q * std::sqrt(p + q));
    d2ee[29] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C76456 * C142 + C76461 + C76461 + C76451 * C158 +
                     C76458 * C143 + C76462 + C76462 + C151796 * C159) *
                        C152080 * C152253 +
                    (C76793 + C76794) * C152080 * C152233 + C76814 * C76455) *
                       C151869 * C3101 -
                   (C78196 * C76455 + (C76796 + C76795) * C152080 * C152233 +
                    (C76794 + C76793) * C152080 * C152253) *
                       C151869 * C151914) *
                      C152264 +
                  (((C76799 + C76800) * C152080 * C152253 +
                    (C76801 + C76802) * C152080 * C152233 + C78680 * C76455) *
                       C151869 * C151914 -
                   (C76815 * C76455 + (C76800 + C76799) * C152080 * C152233 +
                    (C76458 * C144 + C76471 + C76471 + C151796 * C160 +
                     C76456 * C143 + C76472 + C76472 + C76451 * C159) *
                        C152080 * C152253) *
                       C151869 * C3101) *
                      C152257 +
                  (((C76456 * C144 + C76473 + C76473 + C76451 * C160 +
                     C76458 * C145 + C76474 + C76474 + C151796 * C161) *
                        C152080 * C152253 +
                    (C76805 + C76806) * C152080 * C152233 + C76816 * C76455) *
                       C151869 * C3101 -
                   ((C76809 + C76810) * C152080 * C76455 +
                    (C76808 + C76807) * C152080 * C152233 +
                    (C76806 + C76805) * C152080 * C152253) *
                       C151869 * C151914) *
                      C152242 +
                  (((C77283 + C77284) * C152080 * C152253 +
                    (C77285 + C77286) * C152080 * C152233 +
                    (C76456 * C1353 + C77273 + C77273 + C76451 * C1369 +
                     C76458 * C1715 + C77274 + C77274 + C151796 * C1717) *
                        C152080 * C76455) *
                       C151869 * C151914 -
                   ((C77286 + C77285) * C152080 * C76455 +
                    (C77284 + C77283) * C152080 * C152233 +
                    (C76458 * C146 + C76483 + C76483 + C151796 * C162 +
                     C76456 * C145 + C76484 + C76484 + C76451 * C161) *
                        C152080 * C152253) *
                       C151869 * C3101) *
                      C152218)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C76456 * C142 + C76461 + C76461 + C76451 * C158 +
                     C76458 * C143 + C76462 + C76462 + C151796 * C159) *
                        C152080 * C152253 +
                    (C76793 + C76794) * C152080 * C152233 + C76814 * C76455) *
                       C151869 * C152265 -
                   (C78196 * C76455 + (C76796 + C76795) * C152080 * C152233 +
                    (C76794 + C76793) * C152080 * C152253) *
                       C151869 * C152261 +
                   (C76814 * C152253 + (C76798 + C76797) * C152080 * C152233 +
                    C78210 * C76455) *
                       C151869 * C152249 -
                   ((C78207 + C78208) * C152080 * C76455 +
                    (C78206 + C78205) * C152080 * C152233 + C78196 * C152253) *
                       C151869 * C152224) *
                      C3241 +
                  (((C76799 + C76800) * C152080 * C152253 +
                    (C76801 + C76802) * C152080 * C152233 + C78680 * C76455) *
                       C151869 * C152261 -
                   (C76815 * C76455 + (C76800 + C76799) * C152080 * C152233 +
                    (C76458 * C144 + C76471 + C76471 + C151796 * C160 +
                     C76456 * C143 + C76472 + C76472 + C76451 * C159) *
                        C152080 * C152253) *
                       C151869 * C152265 -
                   ((C78685 + C78686) * C152080 * C76455 +
                    (C76804 + C76803) * C152080 * C152233 + C76815 * C152253) *
                       C151869 * C152249 +
                   (C78680 * C152253 + (C78686 + C78685) * C152080 * C152233 +
                    (C76456 * C7802 + C78678 + C78678 + C76451 * C7808 +
                     C76458 * C7803 + C78679 + C78679 + C151796 * C7809) *
                        C152080 * C76455) *
                       C151869 * C152224) *
                      C151834)) /
                    (p * q * std::sqrt(p + q));
    d2ee[30] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 (((((C76456 * C142 + C76461 + C76461 + C76451 * C158 +
                      C76458 * C143 + C76462 + C76462 + C151796 * C159) *
                         C152080 * C152253 +
                     (C76793 + C76794) * C152080 * C152233 + C76814 * C76455) *
                        C4107 -
                    (C78452 * C76455 + (C77833 + C77834) * C152080 * C152233 +
                     (C76458 * C549 + C77039 + C77039 + C151796 * C573 +
                      C76456 * C550 + C77040 + C77040 + C76451 * C574) *
                         C152080 * C152253) *
                        C151956) *
                       C151910 +
                   (((C77834 + C77833) * C152080 * C152253 +
                     (C77832 + C77831) * C152080 * C152233 + C79192 * C76455) *
                        C151956 -
                    (C78196 * C76455 + (C76796 + C76795) * C152080 * C152233 +
                     (C76794 + C76793) * C152080 * C152253) *
                        C4107) *
                       C151917 +
                   ((C76814 * C152253 + (C76798 + C76797) * C152080 * C152233 +
                     C78210 * C76455) *
                        C4107 -
                    ((C79197 + C79198) * C152080 * C76455 +
                     (C78474 + C78473) * C152080 * C152233 + C78452 * C152253) *
                        C151956) *
                       C3585) *
                      C152158 +
                  ((((C76456 * C549 + C77047 + C77047 + C76451 * C573 +
                      C76458 * C548 + C77048 + C77048 + C151796 * C572) *
                         C152080 * C152253 +
                     (C77835 + C77836) * C152080 * C152233 + C78984 * C76455) *
                        C151956 -
                    (C76815 * C76455 + (C76800 + C76799) * C152080 * C152233 +
                     (C76458 * C144 + C76471 + C76471 + C151796 * C160 +
                      C76456 * C143 + C76472 + C76472 + C76451 * C159) *
                         C152080 * C152253) *
                        C4107) *
                       C151910 +
                   (((C76799 + C76800) * C152080 * C152253 +
                     (C76801 + C76802) * C152080 * C152233 + C78680 * C76455) *
                        C4107 -
                    ((C78989 + C78990) * C152080 * C76455 +
                     (C77838 + C77837) * C152080 * C152233 +
                     (C77836 + C77835) * C152080 * C152253) *
                        C151956) *
                       C151917 +
                   ((C78984 * C152253 + (C78990 + C78989) * C152080 * C152233 +
                     (C76456 * C8842 + C78982 + C78982 + C76451 * C8848 +
                      C76458 * C8843 + C78983 + C78983 + C151796 * C8849) *
                         C152080 * C76455) *
                        C151956 -
                    ((C78685 + C78686) * C152080 * C76455 +
                     (C76804 + C76803) * C152080 * C152233 + C76815 * C152253) *
                        C4107) *
                       C3585) *
                      C151834)) /
                (p * q * std::sqrt(p + q));
    d2ee[31] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 ((((C76456 * C142 + C76461 + C76461 + C76451 * C158 +
                     C76458 * C143 + C76462 + C76462 + C151796 * C159) *
                        C152080 * C152253 +
                    (C76793 + C76794) * C152080 * C152233 + C76814 * C76455) *
                       C151952 -
                   (C78452 * C76455 + (C77833 + C77834) * C152080 * C152233 +
                    (C76458 * C549 + C77039 + C77039 + C151796 * C573 +
                     C76456 * C550 + C77040 + C77040 + C76451 * C574) *
                        C152080 * C152253) *
                       C151959 +
                   ((C76456 * C551 + C77041 + C77041 + C76451 * C575 +
                     C76458 * C552 + C77042 + C77042 + C151796 * C576) *
                        C152080 * C152253 +
                    (C78469 + C78470) * C152080 * C152233 + C78478 * C76455) *
                       C4779) *
                      C151910 +
                  (((C77834 + C77833) * C152080 * C152253 +
                    (C77832 + C77831) * C152080 * C152233 + C79192 * C76455) *
                       C151959 -
                   (C78196 * C76455 + (C76796 + C76795) * C152080 * C152233 +
                    (C76794 + C76793) * C152080 * C152253) *
                       C151952 -
                   ((C78475 + C78476) * C152080 * C76455 +
                    (C78472 + C78471) * C152080 * C152233 +
                    (C78470 + C78469) * C152080 * C152253) *
                       C4779) *
                      C151917 +
                  ((C76814 * C152253 + (C76798 + C76797) * C152080 * C152233 +
                    C78210 * C76455) *
                       C151952 -
                   ((C79197 + C79198) * C152080 * C76455 +
                    (C78474 + C78473) * C152080 * C152233 + C78452 * C152253) *
                       C151959 +
                   (C78478 * C152253 + (C78476 + C78475) * C152080 * C152233 +
                    (C76456 * C25021 + C78450 + C78450 + C76451 * C25025 +
                     C76458 * C25022 + C78451 + C78451 + C151796 * C25026) *
                        C152080 * C76455) *
                       C4779) *
                      C3585) *
                 C151823) /
                (p * q * std::sqrt(p + q));
    d2ee[32] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C76456 * C142 + C76461 + C76461 + C76451 * C158 +
                     C76458 * C143 + C76462 + C76462 + C151796 * C159) *
                        C152080 * C152253 +
                    (C76793 + C76794) * C152080 * C152233 + C76814 * C76455) *
                       C4107 -
                   (C78452 * C76455 + (C77833 + C77834) * C152080 * C152233 +
                    (C76458 * C549 + C77039 + C77039 + C151796 * C573 +
                     C76456 * C550 + C77040 + C77040 + C76451 * C574) *
                        C152080 * C152253) *
                       C151956) *
                      C152265 +
                  (((C77834 + C77833) * C152080 * C152253 +
                    (C77832 + C77831) * C152080 * C152233 + C79192 * C76455) *
                       C151956 -
                   (C78196 * C76455 + (C76796 + C76795) * C152080 * C152233 +
                    (C76794 + C76793) * C152080 * C152253) *
                       C4107) *
                      C152261 +
                  ((C76814 * C152253 + (C76798 + C76797) * C152080 * C152233 +
                    C78210 * C76455) *
                       C4107 -
                   ((C79197 + C79198) * C152080 * C76455 +
                    (C78474 + C78473) * C152080 * C152233 + C78452 * C152253) *
                       C151956) *
                      C152249 +
                  ((C79192 * C152253 + (C79198 + C79197) * C152080 * C152233 +
                    (C76456 * C25783 + C79190 + C79190 + C76451 * C25787 +
                     C76458 * C25784 + C79191 + C79191 + C151796 * C25788) *
                        C152080 * C76455) *
                       C151956 -
                   ((C78207 + C78208) * C152080 * C76455 +
                    (C78206 + C78205) * C152080 * C152233 + C78196 * C152253) *
                       C4107) *
                      C152224) *
                 C151823) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C76456 * C142 + C76461 + C76461 + C76451 * C158 +
                      C76458 * C143 + C76462 + C76462 + C151796 * C159) *
                         C152080 * C152253 +
                     (C76793 + C76794) * C152080 * C152233 + C76814 * C76455) *
                        C4107 -
                    (C78452 * C76455 + (C77833 + C77834) * C152080 * C152233 +
                     (C76458 * C549 + C77039 + C77039 + C151796 * C573 +
                      C76456 * C550 + C77040 + C77040 + C76451 * C574) *
                         C152080 * C152253) *
                        C151956) *
                       C3101 +
                   (((C77834 + C77833) * C152080 * C152253 +
                     (C77832 + C77831) * C152080 * C152233 + C79192 * C76455) *
                        C151956 -
                    (C78196 * C76455 + (C76796 + C76795) * C152080 * C152233 +
                     (C76794 + C76793) * C152080 * C152253) *
                        C4107) *
                       C151914) *
                      C152255 +
                  ((((C76456 * C549 + C77047 + C77047 + C76451 * C573 +
                      C76458 * C548 + C77048 + C77048 + C151796 * C572) *
                         C152080 * C152253 +
                     (C77835 + C77836) * C152080 * C152233 + C78984 * C76455) *
                        C151956 -
                    (C76815 * C76455 + (C76800 + C76799) * C152080 * C152233 +
                     (C76458 * C144 + C76471 + C76471 + C151796 * C160 +
                      C76456 * C143 + C76472 + C76472 + C76451 * C159) *
                         C152080 * C152253) *
                        C4107) *
                       C3101 +
                   (((C76799 + C76800) * C152080 * C152253 +
                     (C76801 + C76802) * C152080 * C152233 + C78680 * C76455) *
                        C4107 -
                    ((C78989 + C78990) * C152080 * C76455 +
                     (C77838 + C77837) * C152080 * C152233 +
                     (C77836 + C77835) * C152080 * C152253) *
                        C151956) *
                       C151914) *
                      C152240 +
                  ((((C76456 * C144 + C76473 + C76473 + C76451 * C160 +
                      C76458 * C145 + C76474 + C76474 + C151796 * C161) *
                         C152080 * C152253 +
                     (C76805 + C76806) * C152080 * C152233 + C76816 * C76455) *
                        C4107 -
                    ((C77839 + C77840) * C152080 * C76455 +
                     (C77841 + C77842) * C152080 * C152233 +
                     (C76458 * C547 + C77063 + C77063 + C151796 * C571 +
                      C76456 * C548 + C77064 + C77064 + C76451 * C572) *
                         C152080 * C152253) *
                        C151956) *
                       C3101 +
                   (((C77842 + C77841) * C152080 * C152253 +
                     (C77840 + C77839) * C152080 * C152233 +
                     (C76456 * C2055 + C77805 + C77805 + C76451 * C2063 +
                      C76458 * C2056 + C77806 + C77806 + C151796 * C2064) *
                         C152080 * C76455) *
                        C151956 -
                    ((C76809 + C76810) * C152080 * C76455 +
                     (C76808 + C76807) * C152080 * C152233 +
                     (C76806 + C76805) * C152080 * C152253) *
                        C4107) *
                       C151914) *
                      C152208)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C76456 * C142 + C76461 + C76461 + C76451 * C158 +
                     C76458 * C143 + C76462 + C76462 + C151796 * C159) *
                        C152080 * C152253 +
                    (C76793 + C76794) * C152080 * C152233 + C76814 * C76455) *
                       C152266 -
                   (C78452 * C76455 + (C77833 + C77834) * C152080 * C152233 +
                    (C76458 * C549 + C77039 + C77039 + C151796 * C573 +
                     C76456 * C550 + C77040 + C77040 + C76451 * C574) *
                        C152080 * C152253) *
                       C152263 +
                   ((C76456 * C551 + C77041 + C77041 + C76451 * C575 +
                     C76458 * C552 + C77042 + C77042 + C151796 * C576) *
                        C152080 * C152253 +
                    (C78469 + C78470) * C152080 * C152233 + C78478 * C76455) *
                       C152252 -
                   ((C80493 + C80494) * C152080 * C76455 +
                    (C80495 + C80496) * C152080 * C152233 +
                    (C76458 * C2453 + C79761 + C79761 + C151796 * C2469 +
                     C76456 * C2454 + C79762 + C79762 + C76451 * C2470) *
                        C152080 * C152253) *
                       C152230) *
                      C3101 +
                  (((C77834 + C77833) * C152080 * C152253 +
                    (C77832 + C77831) * C152080 * C152233 + C79192 * C76455) *
                       C152263 -
                   (C78196 * C76455 + (C76796 + C76795) * C152080 * C152233 +
                    (C76794 + C76793) * C152080 * C152253) *
                       C152266 -
                   ((C78475 + C78476) * C152080 * C76455 +
                    (C78472 + C78471) * C152080 * C152233 +
                    (C78470 + C78469) * C152080 * C152253) *
                       C152252 +
                   ((C80496 + C80495) * C152080 * C152253 +
                    (C80494 + C80493) * C152080 * C152233 +
                    (C76456 * C27085 + C80483 + C80483 + C76451 * C27089 +
                     C76458 * C27086 + C80484 + C80484 + C151796 * C27090) *
                        C152080 * C76455) *
                       C152230) *
                      C151914) *
                 C151823) /
                    (p * q * std::sqrt(p + q));
    d2ee[33] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 (((((C76456 * C142 + C76461 + C76461 + C76451 * C158 +
                      C76458 * C143 + C76462 + C76462 + C151796 * C159) *
                         C152080 * C152253 +
                     (C76793 + C76794) * C152080 * C152233 + C76814 * C76455) *
                        C151952 -
                    (C78452 * C76455 + (C77833 + C77834) * C152080 * C152233 +
                     (C76458 * C549 + C77039 + C77039 + C151796 * C573 +
                      C76456 * C550 + C77040 + C77040 + C76451 * C574) *
                         C152080 * C152253) *
                        C151959 +
                    ((C76456 * C551 + C77041 + C77041 + C76451 * C575 +
                      C76458 * C552 + C77042 + C77042 + C151796 * C576) *
                         C152080 * C152253 +
                     (C78469 + C78470) * C152080 * C152233 + C78478 * C76455) *
                        C4779) *
                       C3101 +
                   (((C77834 + C77833) * C152080 * C152253 +
                     (C77832 + C77831) * C152080 * C152233 + C79192 * C76455) *
                        C151959 -
                    (C78196 * C76455 + (C76796 + C76795) * C152080 * C152233 +
                     (C76794 + C76793) * C152080 * C152253) *
                        C151952 -
                    ((C78475 + C78476) * C152080 * C76455 +
                     (C78472 + C78471) * C152080 * C152233 +
                     (C78470 + C78469) * C152080 * C152253) *
                        C4779) *
                       C151914) *
                      C152158 +
                  ((((C76456 * C549 + C77047 + C77047 + C76451 * C573 +
                      C76458 * C548 + C77048 + C77048 + C151796 * C572) *
                         C152080 * C152253 +
                     (C77835 + C77836) * C152080 * C152233 + C78984 * C76455) *
                        C151959 -
                    (C76815 * C76455 + (C76800 + C76799) * C152080 * C152233 +
                     (C76458 * C144 + C76471 + C76471 + C151796 * C160 +
                      C76456 * C143 + C76472 + C76472 + C76451 * C159) *
                         C152080 * C152253) *
                        C151952 -
                    ((C80077 + C80078) * C152080 * C76455 +
                     (C80079 + C80080) * C152080 * C152233 +
                     (C76458 * C553 + C77057 + C77057 + C151796 * C577 +
                      C76456 * C552 + C77058 + C77058 + C76451 * C576) *
                         C152080 * C152253) *
                        C4779) *
                       C3101 +
                   (((C76799 + C76800) * C152080 * C152253 +
                     (C76801 + C76802) * C152080 * C152233 + C78680 * C76455) *
                        C151952 -
                    ((C78989 + C78990) * C152080 * C76455 +
                     (C77838 + C77837) * C152080 * C152233 +
                     (C77836 + C77835) * C152080 * C152253) *
                        C151959 +
                    ((C80080 + C80079) * C152080 * C152253 +
                     (C80078 + C80077) * C152080 * C152233 +
                     (C76456 * C8065 + C80067 + C80067 + C76451 * C8071 +
                      C76458 * C8066 + C80068 + C80068 + C151796 * C8072) *
                         C152080 * C76455) *
                        C4779) *
                       C151914) *
                      C151834)) /
                (p * q * std::sqrt(p + q));
    d2ee[34] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C76456 * C142 + C76461 + C76461 + C76451 * C158 +
                      C76458 * C143 + C76462 + C76462 + C151796 * C159) *
                         C152080 * C152253 +
                     (C76793 + C76794) * C152080 * C152233 + C76814 * C76455) *
                        C4107 -
                    (C78452 * C76455 + (C77833 + C77834) * C152080 * C152233 +
                     (C76458 * C549 + C77039 + C77039 + C151796 * C573 +
                      C76456 * C550 + C77040 + C77040 + C76451 * C574) *
                         C152080 * C152253) *
                        C151956) *
                       C3101 +
                   (((C77834 + C77833) * C152080 * C152253 +
                     (C77832 + C77831) * C152080 * C152233 + C79192 * C76455) *
                        C151956 -
                    (C78196 * C76455 + (C76796 + C76795) * C152080 * C152233 +
                     (C76794 + C76793) * C152080 * C152253) *
                        C4107) *
                       C151914) *
                      C152255 +
                  ((((C76456 * C549 + C77047 + C77047 + C76451 * C573 +
                      C76458 * C548 + C77048 + C77048 + C151796 * C572) *
                         C152080 * C152253 +
                     (C77835 + C77836) * C152080 * C152233 + C78984 * C76455) *
                        C151956 -
                    (C76815 * C76455 + (C76800 + C76799) * C152080 * C152233 +
                     (C76458 * C144 + C76471 + C76471 + C151796 * C160 +
                      C76456 * C143 + C76472 + C76472 + C76451 * C159) *
                         C152080 * C152253) *
                        C4107) *
                       C3101 +
                   (((C76799 + C76800) * C152080 * C152253 +
                     (C76801 + C76802) * C152080 * C152233 + C78680 * C76455) *
                        C4107 -
                    ((C78989 + C78990) * C152080 * C76455 +
                     (C77838 + C77837) * C152080 * C152233 +
                     (C77836 + C77835) * C152080 * C152253) *
                        C151956) *
                       C151914) *
                      C152240 +
                  ((((C76456 * C144 + C76473 + C76473 + C76451 * C160 +
                      C76458 * C145 + C76474 + C76474 + C151796 * C161) *
                         C152080 * C152253 +
                     (C76805 + C76806) * C152080 * C152233 + C76816 * C76455) *
                        C4107 -
                    ((C77839 + C77840) * C152080 * C76455 +
                     (C77841 + C77842) * C152080 * C152233 +
                     (C76458 * C547 + C77063 + C77063 + C151796 * C571 +
                      C76456 * C548 + C77064 + C77064 + C76451 * C572) *
                         C152080 * C152253) *
                        C151956) *
                       C3101 +
                   (((C77842 + C77841) * C152080 * C152253 +
                     (C77840 + C77839) * C152080 * C152233 +
                     (C76456 * C2055 + C77805 + C77805 + C76451 * C2063 +
                      C76458 * C2056 + C77806 + C77806 + C151796 * C2064) *
                         C152080 * C76455) *
                        C151956 -
                    ((C76809 + C76810) * C152080 * C76455 +
                     (C76808 + C76807) * C152080 * C152233 +
                     (C76806 + C76805) * C152080 * C152253) *
                        C4107) *
                       C151914) *
                      C152208)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C76456 * C142 + C76461 + C76461 + C76451 * C158 +
                     C76458 * C143 + C76462 + C76462 + C151796 * C159) *
                        C152080 * C152253 +
                    (C76793 + C76794) * C152080 * C152233 + C76814 * C76455) *
                       C4107 -
                   (C78452 * C76455 + (C77833 + C77834) * C152080 * C152233 +
                    (C76458 * C549 + C77039 + C77039 + C151796 * C573 +
                     C76456 * C550 + C77040 + C77040 + C76451 * C574) *
                        C152080 * C152253) *
                       C151956) *
                      C152265 +
                  (((C77834 + C77833) * C152080 * C152253 +
                    (C77832 + C77831) * C152080 * C152233 + C79192 * C76455) *
                       C151956 -
                   (C78196 * C76455 + (C76796 + C76795) * C152080 * C152233 +
                    (C76794 + C76793) * C152080 * C152253) *
                       C4107) *
                      C152261 +
                  ((C76814 * C152253 + (C76798 + C76797) * C152080 * C152233 +
                    C78210 * C76455) *
                       C4107 -
                   ((C79197 + C79198) * C152080 * C76455 +
                    (C78474 + C78473) * C152080 * C152233 + C78452 * C152253) *
                       C151956) *
                      C152249 +
                  ((C79192 * C152253 + (C79198 + C79197) * C152080 * C152233 +
                    (C76456 * C25783 + C79190 + C79190 + C76451 * C25787 +
                     C76458 * C25784 + C79191 + C79191 + C151796 * C25788) *
                        C152080 * C76455) *
                       C151956 -
                   ((C78207 + C78208) * C152080 * C76455 +
                    (C78206 + C78205) * C152080 * C152233 + C78196 * C152253) *
                       C4107) *
                      C152224) *
                 C151823) /
                    (p * q * std::sqrt(p + q));
    d2ee[35] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C76456 * C142 + C76461 + C76461 + C76451 * C158 +
                     C76458 * C143 + C76462 + C76462 + C151796 * C159) *
                        C152080 * C152253 +
                    (C76793 + C76794) * C152080 * C152233 + C76814 * C76455) *
                       C151869 * C1709 -
                   (C78196 * C76455 + (C76796 + C76795) * C152080 * C152233 +
                    (C76794 + C76793) * C152080 * C152253) *
                       C151869 * C1710 +
                   (C76814 * C152253 + (C76798 + C76797) * C152080 * C152233 +
                    C78210 * C76455) *
                       C151869 * C1711 -
                   ((C78207 + C78208) * C152080 * C76455 +
                    (C78206 + C78205) * C152080 * C152233 + C78196 * C152253) *
                       C151869 * C152224) *
                      C152158 +
                  (((C76799 + C76800) * C152080 * C152253 +
                    (C76801 + C76802) * C152080 * C152233 + C78680 * C76455) *
                       C151869 * C1710 -
                   (C76815 * C76455 + (C76800 + C76799) * C152080 * C152233 +
                    (C76458 * C144 + C76471 + C76471 + C151796 * C160 +
                     C76456 * C143 + C76472 + C76472 + C76451 * C159) *
                        C152080 * C152253) *
                       C151869 * C1709 -
                   ((C78685 + C78686) * C152080 * C76455 +
                    (C76804 + C76803) * C152080 * C152233 + C76815 * C152253) *
                       C151869 * C1711 +
                   (C78680 * C152253 + (C78686 + C78685) * C152080 * C152233 +
                    (C76456 * C7802 + C78678 + C78678 + C76451 * C7808 +
                     C76458 * C7803 + C78679 + C78679 + C151796 * C7809) *
                        C152080 * C76455) *
                       C151869 * C152224) *
                      C151834)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C76456 * C142 + C76461 + C76461 + C76451 * C158 +
                     C76458 * C143 + C76462 + C76462 + C151796 * C159) *
                        C152080 * C152253 +
                    (C76793 + C76794) * C152080 * C152233 + C76814 * C76455) *
                       C151869 * C152172 -
                   ((C76797 + C76798) * C152080 * C76455 +
                    (C76796 + C76795) * C152080 * C152233 +
                    (C76794 + C76793) * C152080 * C152253) *
                       C151869 * C151914) *
                      C739 +
                  (((C76799 + C76800) * C152080 * C152253 +
                    (C76801 + C76802) * C152080 * C152233 +
                    (C76803 + C76804) * C152080 * C76455) *
                       C151869 * C151914 -
                   (C76815 * C76455 + (C76800 + C76799) * C152080 * C152233 +
                    (C76458 * C144 + C76471 + C76471 + C151796 * C160 +
                     C76456 * C143 + C76472 + C76472 + C76451 * C159) *
                        C152080 * C152253) *
                       C151869 * C152172) *
                      C740 +
                  (((C76456 * C144 + C76473 + C76473 + C76451 * C160 +
                     C76458 * C145 + C76474 + C76474 + C151796 * C161) *
                        C152080 * C152253 +
                    (C76805 + C76806) * C152080 * C152233 + C76816 * C76455) *
                       C151869 * C152172 -
                   ((C76809 + C76810) * C152080 * C76455 +
                    (C76808 + C76807) * C152080 * C152233 +
                    (C76806 + C76805) * C152080 * C152253) *
                       C151869 * C151914) *
                      C741 +
                  (((C77283 + C77284) * C152080 * C152253 +
                    (C77285 + C77286) * C152080 * C152233 +
                    (C76456 * C1353 + C77273 + C77273 + C76451 * C1369 +
                     C76458 * C1715 + C77274 + C77274 + C151796 * C1717) *
                        C152080 * C76455) *
                       C151869 * C151914 -
                   ((C77286 + C77285) * C152080 * C76455 +
                    (C77284 + C77283) * C152080 * C152233 +
                    (C76458 * C146 + C76483 + C76483 + C151796 * C162 +
                     C76456 * C145 + C76484 + C76484 + C76451 * C161) *
                        C152080 * C152253) *
                       C151869 * C152172) *
                      C152218)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 (((((C76456 * C142 + C76461 + C76461 + C76451 * C158 +
                      C76458 * C143 + C76462 + C76462 + C151796 * C159) *
                         C152080 * C152253 +
                     (C76793 + C76794) * C152080 * C152233 + C76814 * C76455) *
                        C2215 -
                    (C78452 * C76455 + (C77833 + C77834) * C152080 * C152233 +
                     (C76458 * C549 + C77039 + C77039 + C151796 * C573 +
                      C76456 * C550 + C77040 + C77040 + C76451 * C574) *
                         C152080 * C152253) *
                        C2216 +
                    ((C76456 * C551 + C77041 + C77041 + C76451 * C575 +
                      C76458 * C552 + C77042 + C77042 + C151796 * C576) *
                         C152080 * C152253 +
                     (C78469 + C78470) * C152080 * C152233 + C78478 * C76455) *
                        C152217) *
                       C152172 +
                   (((C77834 + C77833) * C152080 * C152253 +
                     (C77832 + C77831) * C152080 * C152233 + C79192 * C76455) *
                        C2216 -
                    (C78196 * C76455 + (C76796 + C76795) * C152080 * C152233 +
                     (C76794 + C76793) * C152080 * C152253) *
                        C2215 -
                    ((C78475 + C78476) * C152080 * C76455 +
                     (C78472 + C78471) * C152080 * C152233 +
                     (C78470 + C78469) * C152080 * C152253) *
                        C152217) *
                       C151914) *
                      C152158 +
                  ((((C76456 * C549 + C77047 + C77047 + C76451 * C573 +
                      C76458 * C548 + C77048 + C77048 + C151796 * C572) *
                         C152080 * C152253 +
                     (C77835 + C77836) * C152080 * C152233 + C78984 * C76455) *
                        C2216 -
                    (C76815 * C76455 + (C76800 + C76799) * C152080 * C152233 +
                     (C76458 * C144 + C76471 + C76471 + C151796 * C160 +
                      C76456 * C143 + C76472 + C76472 + C76451 * C159) *
                         C152080 * C152253) *
                        C2215 -
                    ((C80077 + C80078) * C152080 * C76455 +
                     (C80079 + C80080) * C152080 * C152233 +
                     (C76458 * C553 + C77057 + C77057 + C151796 * C577 +
                      C76456 * C552 + C77058 + C77058 + C76451 * C576) *
                         C152080 * C152253) *
                        C152217) *
                       C152172 +
                   (((C76799 + C76800) * C152080 * C152253 +
                     (C76801 + C76802) * C152080 * C152233 + C78680 * C76455) *
                        C2215 -
                    ((C78989 + C78990) * C152080 * C76455 +
                     (C77838 + C77837) * C152080 * C152233 +
                     (C77836 + C77835) * C152080 * C152253) *
                        C2216 +
                    ((C80080 + C80079) * C152080 * C152253 +
                     (C80078 + C80077) * C152080 * C152233 +
                     (C76456 * C8065 + C80067 + C80067 + C76451 * C8071 +
                      C76458 * C8066 + C80068 + C80068 + C151796 * C8072) *
                         C152080 * C76455) *
                        C152217) *
                       C151914) *
                      C151834)) /
                    (p * q * std::sqrt(p + q));
    d2ee[36] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C76456 * C142 + C76461 + C76461 + C76451 * C158 +
                     C76458 * C143 + C76462 + C76462 + C151796 * C159) *
                        C152080 * C152253 +
                    (C76793 + C76794) * C152080 * C152233 + C76814 * C76455) *
                       C152173 -
                   (C78452 * C76455 + (C77833 + C77834) * C152080 * C152233 +
                    (C76458 * C549 + C77039 + C77039 + C151796 * C573 +
                     C76456 * C550 + C77040 + C77040 + C76451 * C574) *
                        C152080 * C152253) *
                       C151956) *
                      C1709 +
                  (((C77834 + C77833) * C152080 * C152253 +
                    (C77832 + C77831) * C152080 * C152233 + C79192 * C76455) *
                       C151956 -
                   (C78196 * C76455 + (C76796 + C76795) * C152080 * C152233 +
                    (C76794 + C76793) * C152080 * C152253) *
                       C152173) *
                      C1710 +
                  ((C76814 * C152253 + (C76798 + C76797) * C152080 * C152233 +
                    C78210 * C76455) *
                       C152173 -
                   ((C79197 + C79198) * C152080 * C76455 +
                    (C78474 + C78473) * C152080 * C152233 + C78452 * C152253) *
                       C151956) *
                      C1711 +
                  ((C79192 * C152253 + (C79198 + C79197) * C152080 * C152233 +
                    (C76456 * C25783 + C79190 + C79190 + C76451 * C25787 +
                     C76458 * C25784 + C79191 + C79191 + C151796 * C25788) *
                        C152080 * C76455) *
                       C151956 -
                   ((C78207 + C78208) * C152080 * C76455 +
                    (C78206 + C78205) * C152080 * C152233 + C78196 * C152253) *
                       C152173) *
                      C152224) *
                 C151823) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C76456 * C142 + C76461 + C76461 + C76451 * C158 +
                      C76458 * C143 + C76462 + C76462 + C151796 * C159) *
                         C152080 * C152253 +
                     (C76793 + C76794) * C152080 * C152233 + C76814 * C76455) *
                        C152173 -
                    ((C77831 + C77832) * C152080 * C76455 +
                     (C77833 + C77834) * C152080 * C152233 +
                     (C76458 * C549 + C77039 + C77039 + C151796 * C573 +
                      C76456 * C550 + C77040 + C77040 + C76451 * C574) *
                         C152080 * C152253) *
                        C151956) *
                       C152172 +
                   (((C77834 + C77833) * C152080 * C152253 +
                     (C77832 + C77831) * C152080 * C152233 +
                     (C76456 * C2053 + C77785 + C77785 + C76451 * C2061 +
                      C76458 * C2054 + C77786 + C77786 + C151796 * C2062) *
                         C152080 * C76455) *
                        C151956 -
                    ((C76797 + C76798) * C152080 * C76455 +
                     (C76796 + C76795) * C152080 * C152233 +
                     (C76794 + C76793) * C152080 * C152253) *
                        C152173) *
                       C151914) *
                      C335 +
                  ((((C76456 * C549 + C77047 + C77047 + C76451 * C573 +
                      C76458 * C548 + C77048 + C77048 + C151796 * C572) *
                         C152080 * C152253 +
                     (C77835 + C77836) * C152080 * C152233 +
                     (C77837 + C77838) * C152080 * C76455) *
                        C151956 -
                    (C76815 * C76455 + (C76800 + C76799) * C152080 * C152233 +
                     (C76458 * C144 + C76471 + C76471 + C151796 * C160 +
                      C76456 * C143 + C76472 + C76472 + C76451 * C159) *
                         C152080 * C152253) *
                        C152173) *
                       C152172 +
                   (((C76799 + C76800) * C152080 * C152253 +
                     (C76801 + C76802) * C152080 * C152233 +
                     (C76803 + C76804) * C152080 * C76455) *
                        C152173 -
                    ((C76458 * C2055 + C77795 + C77795 + C151796 * C2063 +
                      C76456 * C2054 + C77796 + C77796 + C76451 * C2062) *
                         C152080 * C76455 +
                     (C77838 + C77837) * C152080 * C152233 +
                     (C77836 + C77835) * C152080 * C152253) *
                        C151956) *
                       C151914) *
                      C336 +
                  ((((C76456 * C144 + C76473 + C76473 + C76451 * C160 +
                      C76458 * C145 + C76474 + C76474 + C151796 * C161) *
                         C152080 * C152253 +
                     (C76805 + C76806) * C152080 * C152233 + C76816 * C76455) *
                        C152173 -
                    ((C77839 + C77840) * C152080 * C76455 +
                     (C77841 + C77842) * C152080 * C152233 +
                     (C76458 * C547 + C77063 + C77063 + C151796 * C571 +
                      C76456 * C548 + C77064 + C77064 + C76451 * C572) *
                         C152080 * C152253) *
                        C151956) *
                       C152172 +
                   (((C77842 + C77841) * C152080 * C152253 +
                     (C77840 + C77839) * C152080 * C152233 +
                     (C76456 * C2055 + C77805 + C77805 + C76451 * C2063 +
                      C76458 * C2056 + C77806 + C77806 + C151796 * C2064) *
                         C152080 * C76455) *
                        C151956 -
                    ((C76809 + C76810) * C152080 * C76455 +
                     (C76808 + C76807) * C152080 * C152233 +
                     (C76806 + C76805) * C152080 * C152253) *
                        C152173) *
                       C151914) *
                      C152208)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C76456 * C142 + C76461 + C76461 + C76451 * C158 +
                     C76458 * C143 + C76462 + C76462 + C151796 * C159) *
                        C152080 * C152253 +
                    (C76793 + C76794) * C152080 * C152233 + C76814 * C76455) *
                       C2814 -
                   (C78452 * C76455 + (C77833 + C77834) * C152080 * C152233 +
                    (C76458 * C549 + C77039 + C77039 + C151796 * C573 +
                     C76456 * C550 + C77040 + C77040 + C76451 * C574) *
                        C152080 * C152253) *
                       C2815 +
                   ((C76456 * C551 + C77041 + C77041 + C76451 * C575 +
                     C76458 * C552 + C77042 + C77042 + C151796 * C576) *
                        C152080 * C152253 +
                    (C78469 + C78470) * C152080 * C152233 + C78478 * C76455) *
                       C2816 -
                   ((C80493 + C80494) * C152080 * C76455 +
                    (C80495 + C80496) * C152080 * C152233 +
                    (C76458 * C2453 + C79761 + C79761 + C151796 * C2469 +
                     C76456 * C2454 + C79762 + C79762 + C76451 * C2470) *
                        C152080 * C152253) *
                       C152230) *
                      C152172 +
                  (((C77834 + C77833) * C152080 * C152253 +
                    (C77832 + C77831) * C152080 * C152233 + C79192 * C76455) *
                       C2815 -
                   (C78196 * C76455 + (C76796 + C76795) * C152080 * C152233 +
                    (C76794 + C76793) * C152080 * C152253) *
                       C2814 -
                   ((C78475 + C78476) * C152080 * C76455 +
                    (C78472 + C78471) * C152080 * C152233 +
                    (C78470 + C78469) * C152080 * C152253) *
                       C2816 +
                   ((C80496 + C80495) * C152080 * C152253 +
                    (C80494 + C80493) * C152080 * C152233 +
                    (C76456 * C27085 + C80483 + C80483 + C76451 * C27089 +
                     C76458 * C27086 + C80484 + C80484 + C151796 * C27090) *
                        C152080 * C76455) *
                       C152230) *
                      C151914) *
                 C151823) /
                    (p * q * std::sqrt(p + q));
    d2ee[37] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C76456 * C142 + C76461 + C76461 + C76451 * C158 +
                C76458 * C143 + C76462 + C76462 + C151796 * C159) *
                   C152080 * C152253 +
               (C76456 * C341 + C76463 + C76463 + C76451 * C365 +
                C76458 * C340 + C76464 + C76464 + C151796 * C364) *
                   C152080 * C152233 +
               (C76456 * C342 + C76465 + C76465 + C76451 * C366 +
                C76458 * C343 + C76466 + C76466 + C151796 * C367) *
                   C152080 * C76455) *
                  C151869 * C151851 * C129 -
              ((C76458 * C344 + C76467 + C76467 + C151796 * C368 +
                C76456 * C343 + C76468 + C76468 + C76451 * C367) *
                   C152080 * C76455 +
               (C76458 * C339 + C76469 + C76469 + C151796 * C363 +
                C76456 * C340 + C76470 + C76470 + C76451 * C364) *
                   C152080 * C152233 +
               (C76458 * C144 + C76471 + C76471 + C151796 * C160 +
                C76456 * C143 + C76472 + C76472 + C76451 * C159) *
                   C152080 * C152253) *
                  C151869 * C151851 * C130 +
              ((C76456 * C144 + C76473 + C76473 + C76451 * C160 +
                C76458 * C145 + C76474 + C76474 + C151796 * C161) *
                   C152080 * C152253 +
               (C76456 * C339 + C76475 + C76475 + C76451 * C363 +
                C76458 * C338 + C76476 + C76476 + C151796 * C362) *
                   C152080 * C152233 +
               (C76456 * C344 + C76477 + C76477 + C76451 * C368 +
                C76458 * C345 + C76478 + C76478 + C151796 * C369) *
                   C152080 * C76455) *
                  C151869 * C151851 * C131 -
              ((C76458 * C347 + C76479 + C76479 + C151796 * C371 +
                C76456 * C345 + C76480 + C76480 + C76451 * C369) *
                   C152080 * C76455 +
               (C76458 * C346 + C76481 + C76481 + C151796 * C370 +
                C76456 * C338 + C76482 + C76482 + C76451 * C362) *
                   C152080 * C152233 +
               (C76458 * C146 + C76483 + C76483 + C151796 * C162 +
                C76456 * C145 + C76484 + C76484 + C76451 * C161) *
                   C152080 * C152253) *
                  C151869 * C151851 * C132 +
              ((C76456 * C146 + C76485 + C76485 + C76451 * C162 +
                C76458 * C147 + C76486 + C76486 + C151796 * C163) *
                   C152080 * C152253 +
               (C76456 * C346 + C76487 + C76487 + C76451 * C370 +
                C76458 * C348 + C76488 + C76488 + C151796 * C372) *
                   C152080 * C152233 +
               (C76456 * C347 + C76489 + C76489 + C76451 * C371 +
                C76458 * C349 + C76490 + C76490 + C151796 * C373) *
                   C152080 * C76455) *
                  C151869 * C151851 * C133) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C76456 * C142 + C76461 + C76461 + C76451 * C158 +
                 C76458 * C143 + C76462 + C76462 + C151796 * C159) *
                    C152080 * C152253 +
                (C76793 + C76794) * C152080 * C152233 + C76814 * C76455) *
                   C151869 * C152258 -
               ((C76797 + C76798) * C152080 * C76455 +
                (C76796 + C76795) * C152080 * C152233 +
                (C76794 + C76793) * C152080 * C152253) *
                   C151869 * C152244 +
               (C76814 * C152253 + (C76798 + C76797) * C152080 * C152233 +
                (C76456 * C1357 + C76723 + C76723 + C76451 * C1373 +
                 C76458 * C1358 + C76724 + C76724 + C151796 * C1374) *
                    C152080 * C76455) *
                   C151869 * C152214) *
                  C335 +
              (((C76799 + C76800) * C152080 * C152253 +
                (C76801 + C76802) * C152080 * C152233 +
                (C76803 + C76804) * C152080 * C76455) *
                   C151869 * C152244 -
               (C76815 * C76455 + (C76800 + C76799) * C152080 * C152233 +
                (C76458 * C144 + C76471 + C76471 + C151796 * C160 +
                 C76456 * C143 + C76472 + C76472 + C76451 * C159) *
                    C152080 * C152253) *
                   C151869 * C152258 -
               ((C76458 * C1359 + C76739 + C76739 + C151796 * C1375 +
                 C76456 * C1358 + C76740 + C76740 + C76451 * C1374) *
                    C152080 * C76455 +
                (C76804 + C76803) * C152080 * C152233 + C76815 * C152253) *
                   C151869 * C152214) *
                  C336 +
              (((C76456 * C144 + C76473 + C76473 + C76451 * C160 +
                 C76458 * C145 + C76474 + C76474 + C151796 * C161) *
                    C152080 * C152253 +
                (C76805 + C76806) * C152080 * C152233 + C76816 * C76455) *
                   C151869 * C152258 -
               ((C76809 + C76810) * C152080 * C76455 +
                (C76808 + C76807) * C152080 * C152233 +
                (C76806 + C76805) * C152080 * C152253) *
                   C151869 * C152244 +
               (C76816 * C152253 + (C76810 + C76809) * C152080 * C152233 +
                (C76456 * C1359 + C76755 + C76755 + C76451 * C1375 +
                 C76458 * C1360 + C76756 + C76756 + C151796 * C1376) *
                    C152080 * C76455) *
                   C151869 * C152214) *
                  C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
             C76462 + C76462 + C151796 * C159) *
                C152080 * C152253 +
            (C76793 + C76794) * C152080 * C152233 + C76814 * C76455) *
               C152259 -
           ((C76458 * C1537 + C77035 + C77035 + C151796 * C1561 +
             C76456 * C1538 + C77036 + C77036 + C76451 * C1562) *
                C152080 * C76455 +
            (C76458 * C1084 + C77037 + C77037 + C151796 * C1096 +
             C76456 * C1083 + C77038 + C77038 + C76451 * C1095) *
                C152080 * C152233 +
            (C76458 * C549 + C77039 + C77039 + C151796 * C573 + C76456 * C550 +
             C77040 + C77040 + C76451 * C574) *
                C152080 * C152253) *
               C152246 +
           ((C76456 * C551 + C77041 + C77041 + C76451 * C575 + C76458 * C552 +
             C77042 + C77042 + C151796 * C576) *
                C152080 * C152253 +
            (C76456 * C1534 + C77043 + C77043 + C76451 * C1558 +
             C76458 * C1533 + C77044 + C77044 + C151796 * C1557) *
                C152080 * C152233 +
            (C76456 * C1539 + C77045 + C77045 + C76451 * C1563 +
             C76458 * C1540 + C77046 + C77046 + C151796 * C1564) *
                C152080 * C76455) *
               C152217) *
              C151851 * C335 +
          (((C76456 * C549 + C77047 + C77047 + C76451 * C573 + C76458 * C548 +
             C77048 + C77048 + C151796 * C572) *
                C152080 * C152253 +
            (C76456 * C1084 + C77049 + C77049 + C76451 * C1096 +
             C76458 * C1085 + C77050 + C77050 + C151796 * C1097) *
                C152080 * C152233 +
            (C76456 * C1537 + C77051 + C77051 + C76451 * C1561 +
             C76458 * C1536 + C77052 + C77052 + C151796 * C1560) *
                C152080 * C76455) *
               C152246 -
           (C76815 * C76455 + (C76800 + C76799) * C152080 * C152233 +
            (C76458 * C144 + C76471 + C76471 + C151796 * C160 + C76456 * C143 +
             C76472 + C76472 + C76451 * C159) *
                C152080 * C152253) *
               C152259 -
           ((C76458 * C1541 + C77053 + C77053 + C151796 * C1565 +
             C76456 * C1540 + C77054 + C77054 + C76451 * C1564) *
                C152080 * C76455 +
            (C76458 * C1532 + C77055 + C77055 + C151796 * C1556 +
             C76456 * C1533 + C77056 + C77056 + C76451 * C1557) *
                C152080 * C152233 +
            (C76458 * C553 + C77057 + C77057 + C151796 * C577 + C76456 * C552 +
             C77058 + C77058 + C76451 * C576) *
                C152080 * C152253) *
               C152217) *
              C151851 * C336 +
          (((C76456 * C144 + C76473 + C76473 + C76451 * C160 + C76458 * C145 +
             C76474 + C76474 + C151796 * C161) *
                C152080 * C152253 +
            (C76805 + C76806) * C152080 * C152233 + C76816 * C76455) *
               C152259 -
           ((C76458 * C1535 + C77059 + C77059 + C151796 * C1559 +
             C76456 * C1536 + C77060 + C77060 + C76451 * C1560) *
                C152080 * C76455 +
            (C76458 * C1086 + C77061 + C77061 + C151796 * C1098 +
             C76456 * C1085 + C77062 + C77062 + C76451 * C1097) *
                C152080 * C152233 +
            (C76458 * C547 + C77063 + C77063 + C151796 * C571 + C76456 * C548 +
             C77064 + C77064 + C76451 * C572) *
                C152080 * C152253) *
               C152246 +
           ((C76456 * C553 + C77065 + C77065 + C76451 * C577 + C76458 * C554 +
             C77066 + C77066 + C151796 * C578) *
                C152080 * C152253 +
            (C76456 * C1532 + C77067 + C77067 + C76451 * C1556 +
             C76458 * C1531 + C77068 + C77068 + C151796 * C1555) *
                C152080 * C152233 +
            (C76456 * C1541 + C77069 + C77069 + C76451 * C1565 +
             C76458 * C1542 + C77070 + C77070 + C151796 * C1566) *
                C152080 * C76455) *
               C152217) *
              C151851 * C152208)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
             C76462 + C76462 + C151796 * C159) *
                C152080 * C152253 +
            (C76793 + C76794) * C152080 * C152233 + C76814 * C76455) *
               C151869 * C1259 -
           ((C76797 + C76798) * C152080 * C76455 +
            (C76796 + C76795) * C152080 * C152233 +
            (C76794 + C76793) * C152080 * C152253) *
               C151869 * C1260 +
           (C76814 * C152253 + (C76798 + C76797) * C152080 * C152233 +
            (C76456 * C1357 + C76723 + C76723 + C76451 * C1373 +
             C76458 * C1358 + C76724 + C76724 + C151796 * C1374) *
                C152080 * C76455) *
               C151869 * C152214) *
              C152255 +
          (((C76799 + C76800) * C152080 * C152253 +
            (C76801 + C76802) * C152080 * C152233 +
            (C76803 + C76804) * C152080 * C76455) *
               C151869 * C1260 -
           (C76815 * C76455 + (C76800 + C76799) * C152080 * C152233 +
            (C76458 * C144 + C76471 + C76471 + C151796 * C160 + C76456 * C143 +
             C76472 + C76472 + C76451 * C159) *
                C152080 * C152253) *
               C151869 * C1259 -
           ((C76458 * C1359 + C76739 + C76739 + C151796 * C1375 +
             C76456 * C1358 + C76740 + C76740 + C76451 * C1374) *
                C152080 * C76455 +
            (C76804 + C76803) * C152080 * C152233 + C76815 * C152253) *
               C151869 * C152214) *
              C152240 +
          (((C76456 * C144 + C76473 + C76473 + C76451 * C160 + C76458 * C145 +
             C76474 + C76474 + C151796 * C161) *
                C152080 * C152253 +
            (C76805 + C76806) * C152080 * C152233 + C76816 * C76455) *
               C151869 * C1259 -
           ((C76809 + C76810) * C152080 * C76455 +
            (C76808 + C76807) * C152080 * C152233 +
            (C76806 + C76805) * C152080 * C152253) *
               C151869 * C1260 +
           (C76816 * C152253 + (C76810 + C76809) * C152080 * C152233 +
            (C76456 * C1359 + C76755 + C76755 + C76451 * C1375 +
             C76458 * C1360 + C76756 + C76756 + C151796 * C1376) *
                C152080 * C76455) *
               C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
            C76462 + C76462 + C151796 * C159) *
               C152080 * C152253 +
           (C76793 + C76794) * C152080 * C152233 + C76814 * C76455) *
              C151869 * C1347 -
          (C78196 * C76455 + (C76796 + C76795) * C152080 * C152233 +
           (C76794 + C76793) * C152080 * C152253) *
              C151869 * C1348 +
          (C76814 * C152253 + (C76798 + C76797) * C152080 * C152233 +
           C78210 * C76455) *
              C151869 * C1349 -
          ((C78207 + C78208) * C152080 * C76455 +
           (C78206 + C78205) * C152080 * C152233 + C78196 * C152253) *
              C151869 * C1350 +
          (C78210 * C152253 + (C78208 + C78207) * C152080 * C152233 +
           (C76456 * C24769 + C78194 + C78194 + C76451 * C24773 +
            C76458 * C24770 + C78195 + C78195 + C151796 * C24774) *
               C152080 * C76455) *
              C151869 * C1351) *
         C151823) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
             C76462 + C76462 + C151796 * C159) *
                C152080 * C152253 +
            (C76793 + C76794) * C152080 * C152233 + C76814 * C76455) *
               C152259 -
           (C78452 * C76455 + (C77833 + C77834) * C152080 * C152233 +
            (C76458 * C549 + C77039 + C77039 + C151796 * C573 + C76456 * C550 +
             C77040 + C77040 + C76451 * C574) *
                C152080 * C152253) *
               C152246 +
           ((C76456 * C551 + C77041 + C77041 + C76451 * C575 + C76458 * C552 +
             C77042 + C77042 + C151796 * C576) *
                C152080 * C152253 +
            (C78469 + C78470) * C152080 * C152233 + C78478 * C76455) *
               C152217) *
              C1259 +
          (((C77834 + C77833) * C152080 * C152253 +
            (C77832 + C77831) * C152080 * C152233 +
            (C78473 + C78474) * C152080 * C76455) *
               C152246 -
           (C78196 * C76455 + (C76796 + C76795) * C152080 * C152233 +
            (C76794 + C76793) * C152080 * C152253) *
               C152259 -
           ((C78475 + C78476) * C152080 * C76455 +
            (C78472 + C78471) * C152080 * C152233 +
            (C78470 + C78469) * C152080 * C152253) *
               C152217) *
              C1260 +
          ((C76814 * C152253 + (C76798 + C76797) * C152080 * C152233 +
            C78210 * C76455) *
               C152259 -
           ((C76458 * C8842 + C78448 + C78448 + C151796 * C8848 +
             C76456 * C8841 + C78449 + C78449 + C76451 * C8847) *
                C152080 * C76455 +
            (C78474 + C78473) * C152080 * C152233 + C78452 * C152253) *
               C152246 +
           (C78478 * C152253 + (C78476 + C78475) * C152080 * C152233 +
            (C76456 * C25021 + C78450 + C78450 + C76451 * C25025 +
             C76458 * C25022 + C78451 + C78451 + C151796 * C25026) *
                C152080 * C76455) *
               C152217) *
              C152214) *
         C151823) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
             C76462 + C76462 + C151796 * C159) *
                C152080 * C152253 +
            (C76793 + C76794) * C152080 * C152233 + C76814 * C76455) *
               C2215 -
           (C78452 * C76455 + (C77833 + C77834) * C152080 * C152233 +
            (C76458 * C549 + C77039 + C77039 + C151796 * C573 + C76456 * C550 +
             C77040 + C77040 + C76451 * C574) *
                C152080 * C152253) *
               C2216 +
           ((C76456 * C551 + C77041 + C77041 + C76451 * C575 + C76458 * C552 +
             C77042 + C77042 + C151796 * C576) *
                C152080 * C152253 +
            (C78469 + C78470) * C152080 * C152233 + C78478 * C76455) *
               C152217) *
              C151851 * C152255 +
          (((C76456 * C549 + C77047 + C77047 + C76451 * C573 + C76458 * C548 +
             C77048 + C77048 + C151796 * C572) *
                C152080 * C152253 +
            (C77835 + C77836) * C152080 * C152233 + C78984 * C76455) *
               C2216 -
           (C76815 * C76455 + (C76800 + C76799) * C152080 * C152233 +
            (C76458 * C144 + C76471 + C76471 + C151796 * C160 + C76456 * C143 +
             C76472 + C76472 + C76451 * C159) *
                C152080 * C152253) *
               C2215 -
           ((C76458 * C1541 + C77053 + C77053 + C151796 * C1565 +
             C76456 * C1540 + C77054 + C77054 + C76451 * C1564) *
                C152080 * C76455 +
            (C76458 * C1532 + C77055 + C77055 + C151796 * C1556 +
             C76456 * C1533 + C77056 + C77056 + C76451 * C1557) *
                C152080 * C152233 +
            (C76458 * C553 + C77057 + C77057 + C151796 * C577 + C76456 * C552 +
             C77058 + C77058 + C76451 * C576) *
                C152080 * C152253) *
               C152217) *
              C151851 * C152240 +
          (((C76456 * C144 + C76473 + C76473 + C76451 * C160 + C76458 * C145 +
             C76474 + C76474 + C151796 * C161) *
                C152080 * C152253 +
            (C76805 + C76806) * C152080 * C152233 + C76816 * C76455) *
               C2215 -
           ((C77839 + C77840) * C152080 * C76455 +
            (C77841 + C77842) * C152080 * C152233 +
            (C76458 * C547 + C77063 + C77063 + C151796 * C571 + C76456 * C548 +
             C77064 + C77064 + C76451 * C572) *
                C152080 * C152253) *
               C2216 +
           ((C76456 * C553 + C77065 + C77065 + C76451 * C577 + C76458 * C554 +
             C77066 + C77066 + C151796 * C578) *
                C152080 * C152253 +
            (C76456 * C1532 + C77067 + C77067 + C76451 * C1556 +
             C76458 * C1531 + C77068 + C77068 + C151796 * C1555) *
                C152080 * C152233 +
            (C76456 * C1541 + C77069 + C77069 + C76451 * C1565 +
             C76458 * C1542 + C77070 + C77070 + C151796 * C1566) *
                C152080 * C76455) *
               C152217) *
              C151851 * C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
             C76462 + C76462 + C151796 * C159) *
                C152080 * C152253 +
            (C76793 + C76794) * C152080 * C152233 + C76814 * C76455) *
               C2215 -
           (C78452 * C76455 + (C77833 + C77834) * C152080 * C152233 +
            (C76458 * C549 + C77039 + C77039 + C151796 * C573 + C76456 * C550 +
             C77040 + C77040 + C76451 * C574) *
                C152080 * C152253) *
               C2216 +
           ((C76456 * C551 + C77041 + C77041 + C76451 * C575 + C76458 * C552 +
             C77042 + C77042 + C151796 * C576) *
                C152080 * C152253 +
            (C78469 + C78470) * C152080 * C152233 + C78478 * C76455) *
               C152217) *
              C152258 +
          (((C77834 + C77833) * C152080 * C152253 +
            (C77832 + C77831) * C152080 * C152233 + C79192 * C76455) *
               C2216 -
           (C78196 * C76455 + (C76796 + C76795) * C152080 * C152233 +
            (C76794 + C76793) * C152080 * C152253) *
               C2215 -
           ((C78475 + C78476) * C152080 * C76455 +
            (C78472 + C78471) * C152080 * C152233 +
            (C78470 + C78469) * C152080 * C152253) *
               C152217) *
              C152244 +
          ((C76814 * C152253 + (C76798 + C76797) * C152080 * C152233 +
            C78210 * C76455) *
               C2215 -
           ((C79197 + C79198) * C152080 * C76455 +
            (C78474 + C78473) * C152080 * C152233 + C78452 * C152253) *
               C2216 +
           (C78478 * C152253 + (C78476 + C78475) * C152080 * C152233 +
            (C76456 * C25021 + C78450 + C78450 + C76451 * C25025 +
             C76458 * C25022 + C78451 + C78451 + C151796 * C25026) *
                C152080 * C76455) *
               C152217) *
              C152214) *
         C151823) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
            C76462 + C76462 + C151796 * C159) *
               C152080 * C152253 +
           (C76793 + C76794) * C152080 * C152233 + C76814 * C76455) *
              C2446 -
          (C78452 * C76455 + (C77833 + C77834) * C152080 * C152233 +
           (C76458 * C549 + C77039 + C77039 + C151796 * C573 + C76456 * C550 +
            C77040 + C77040 + C76451 * C574) *
               C152080 * C152253) *
              C2447 +
          ((C76456 * C551 + C77041 + C77041 + C76451 * C575 + C76458 * C552 +
            C77042 + C77042 + C151796 * C576) *
               C152080 * C152253 +
           (C78469 + C78470) * C152080 * C152233 + C78478 * C76455) *
              C2448 -
          ((C76458 * C10150 + C79757 + C79757 + C151796 * C10156 +
            C76456 * C10149 + C79758 + C79758 + C76451 * C10155) *
               C152080 * C76455 +
           (C76458 * C2956 + C79759 + C79759 + C151796 * C2964 +
            C76456 * C2955 + C79760 + C79760 + C76451 * C2963) *
               C152080 * C152233 +
           (C76458 * C2453 + C79761 + C79761 + C151796 * C2469 +
            C76456 * C2454 + C79762 + C79762 + C76451 * C2470) *
               C152080 * C152253) *
              C2449 +
          ((C76456 * C2455 + C79763 + C79763 + C76451 * C2471 + C76458 * C2456 +
            C79764 + C79764 + C151796 * C2472) *
               C152080 * C152253 +
           (C76456 * C9426 + C79765 + C79765 + C76451 * C9432 + C76458 * C9427 +
            C79766 + C79766 + C151796 * C9433) *
               C152080 * C152233 +
           (C76456 * C26361 + C79767 + C79767 + C76451 * C26365 +
            C76458 * C26362 + C79768 + C79768 + C151796 * C26366) *
               C152080 * C76455) *
              C2450) *
         C151851 * C151823) /
            (p * q * std::sqrt(p + q));
    d2ee[38] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C76456 * C142 + C76461 + C76461 + C76451 * C158 +
                      C76458 * C143 + C76462 + C76462 + C151796 * C159) *
                         C152080 * C152253 +
                     (C76793 + C76794) * C152080 * C152233 + C76814 * C76455) *
                        C152173 -
                    (C78452 * C76455 + (C77833 + C77834) * C152080 * C152233 +
                     (C76458 * C549 + C77039 + C77039 + C151796 * C573 +
                      C76456 * C550 + C77040 + C77040 + C76451 * C574) *
                         C152080 * C152253) *
                        C151956) *
                       C1259 +
                   (((C77834 + C77833) * C152080 * C152253 +
                     (C77832 + C77831) * C152080 * C152233 +
                     (C78473 + C78474) * C152080 * C76455) *
                        C151956 -
                    (C78196 * C76455 + (C76796 + C76795) * C152080 * C152233 +
                     (C76794 + C76793) * C152080 * C152253) *
                        C152173) *
                       C1260 +
                   ((C76814 * C152253 + (C76798 + C76797) * C152080 * C152233 +
                     C78210 * C76455) *
                        C152173 -
                    ((C76458 * C8842 + C78448 + C78448 + C151796 * C8848 +
                      C76456 * C8841 + C78449 + C78449 + C76451 * C8847) *
                         C152080 * C76455 +
                     (C78474 + C78473) * C152080 * C152233 + C78452 * C152253) *
                        C151956) *
                       C152214) *
                      C152158 +
                  ((((C76456 * C549 + C77047 + C77047 + C76451 * C573 +
                      C76458 * C548 + C77048 + C77048 + C151796 * C572) *
                         C152080 * C152253 +
                     (C77835 + C77836) * C152080 * C152233 + C78984 * C76455) *
                        C151956 -
                    (C76815 * C76455 + (C76800 + C76799) * C152080 * C152233 +
                     (C76458 * C144 + C76471 + C76471 + C151796 * C160 +
                      C76456 * C143 + C76472 + C76472 + C76451 * C159) *
                         C152080 * C152253) *
                        C152173) *
                       C1259 +
                   (((C76799 + C76800) * C152080 * C152253 +
                     (C76801 + C76802) * C152080 * C152233 + C78680 * C76455) *
                        C152173 -
                    ((C78989 + C78990) * C152080 * C76455 +
                     (C77838 + C77837) * C152080 * C152233 +
                     (C77836 + C77835) * C152080 * C152253) *
                        C151956) *
                       C1260 +
                   ((C78984 * C152253 + (C78990 + C78989) * C152080 * C152233 +
                     (C76456 * C8842 + C78982 + C78982 + C76451 * C8848 +
                      C76458 * C8843 + C78983 + C78983 + C151796 * C8849) *
                         C152080 * C76455) *
                        C151956 -
                    ((C78685 + C78686) * C152080 * C76455 +
                     (C76804 + C76803) * C152080 * C152233 + C76815 * C152253) *
                        C152173) *
                       C152214) *
                      C151834)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C76456 * C142 + C76461 + C76461 + C76451 * C158 +
                     C76458 * C143 + C76462 + C76462 + C151796 * C159) *
                        C152080 * C152253 +
                    (C76793 + C76794) * C152080 * C152233 + C76814 * C76455) *
                       C152173 -
                   ((C76458 * C1537 + C77035 + C77035 + C151796 * C1561 +
                     C76456 * C1538 + C77036 + C77036 + C76451 * C1562) *
                        C152080 * C76455 +
                    (C76458 * C1084 + C77037 + C77037 + C151796 * C1096 +
                     C76456 * C1083 + C77038 + C77038 + C76451 * C1095) *
                        C152080 * C152233 +
                    (C76458 * C549 + C77039 + C77039 + C151796 * C573 +
                     C76456 * C550 + C77040 + C77040 + C76451 * C574) *
                        C152080 * C152253) *
                       C151956) *
                      C151851 * C739 +
                  (((C76456 * C549 + C77047 + C77047 + C76451 * C573 +
                     C76458 * C548 + C77048 + C77048 + C151796 * C572) *
                        C152080 * C152253 +
                    (C76456 * C1084 + C77049 + C77049 + C76451 * C1096 +
                     C76458 * C1085 + C77050 + C77050 + C151796 * C1097) *
                        C152080 * C152233 +
                    (C76456 * C1537 + C77051 + C77051 + C76451 * C1561 +
                     C76458 * C1536 + C77052 + C77052 + C151796 * C1560) *
                        C152080 * C76455) *
                       C151956 -
                   (C76815 * C76455 + (C76800 + C76799) * C152080 * C152233 +
                    (C76458 * C144 + C76471 + C76471 + C151796 * C160 +
                     C76456 * C143 + C76472 + C76472 + C76451 * C159) *
                        C152080 * C152253) *
                       C152173) *
                      C151851 * C740 +
                  (((C76456 * C144 + C76473 + C76473 + C76451 * C160 +
                     C76458 * C145 + C76474 + C76474 + C151796 * C161) *
                        C152080 * C152253 +
                    (C76805 + C76806) * C152080 * C152233 + C76816 * C76455) *
                       C152173 -
                   ((C76458 * C1535 + C77059 + C77059 + C151796 * C1559 +
                     C76456 * C1536 + C77060 + C77060 + C76451 * C1560) *
                        C152080 * C76455 +
                    (C76458 * C1086 + C77061 + C77061 + C151796 * C1098 +
                     C76456 * C1085 + C77062 + C77062 + C76451 * C1097) *
                        C152080 * C152233 +
                    (C76458 * C547 + C77063 + C77063 + C151796 * C571 +
                     C76456 * C548 + C77064 + C77064 + C76451 * C572) *
                        C152080 * C152253) *
                       C151956) *
                      C151851 * C741 +
                  (((C76456 * C547 + C77481 + C77481 + C76451 * C571 +
                     C76458 * C555 + C77482 + C77482 + C151796 * C579) *
                        C152080 * C152253 +
                    (C76456 * C1086 + C77483 + C77483 + C76451 * C1098 +
                     C76458 * C1087 + C77484 + C77484 + C151796 * C1099) *
                        C152080 * C152233 +
                    (C76456 * C1535 + C77485 + C77485 + C76451 * C1559 +
                     C76458 * C1916 + C77486 + C77486 + C151796 * C1918) *
                        C152080 * C76455) *
                       C151956 -
                   ((C77286 + C77285) * C152080 * C76455 +
                    (C77284 + C77283) * C152080 * C152233 +
                    (C76458 * C146 + C76483 + C76483 + C151796 * C162 +
                     C76456 * C145 + C76484 + C76484 + C76451 * C161) *
                        C152080 * C152253) *
                       C152173) *
                      C151851 * C152218)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C76456 * C142 + C76461 + C76461 + C76451 * C158 +
                     C76458 * C143 + C76462 + C76462 + C151796 * C159) *
                        C152080 * C152253 +
                    (C76793 + C76794) * C152080 * C152233 + C76814 * C76455) *
                       C2814 -
                   (C78452 * C76455 + (C77833 + C77834) * C152080 * C152233 +
                    (C76458 * C549 + C77039 + C77039 + C151796 * C573 +
                     C76456 * C550 + C77040 + C77040 + C76451 * C574) *
                        C152080 * C152253) *
                       C2815 +
                   ((C76456 * C551 + C77041 + C77041 + C76451 * C575 +
                     C76458 * C552 + C77042 + C77042 + C151796 * C576) *
                        C152080 * C152253 +
                    (C78469 + C78470) * C152080 * C152233 + C78478 * C76455) *
                       C2816 -
                   ((C76458 * C10150 + C79757 + C79757 + C151796 * C10156 +
                     C76456 * C10149 + C79758 + C79758 + C76451 * C10155) *
                        C152080 * C76455 +
                    (C76458 * C2956 + C79759 + C79759 + C151796 * C2964 +
                     C76456 * C2955 + C79760 + C79760 + C76451 * C2963) *
                        C152080 * C152233 +
                    (C76458 * C2453 + C79761 + C79761 + C151796 * C2469 +
                     C76456 * C2454 + C79762 + C79762 + C76451 * C2470) *
                        C152080 * C152253) *
                       C152230) *
                      C151851 * C152158 +
                  (((C76456 * C549 + C77047 + C77047 + C76451 * C573 +
                     C76458 * C548 + C77048 + C77048 + C151796 * C572) *
                        C152080 * C152253 +
                    (C77835 + C77836) * C152080 * C152233 + C78984 * C76455) *
                       C2815 -
                   (C76815 * C76455 + (C76800 + C76799) * C152080 * C152233 +
                    (C76458 * C144 + C76471 + C76471 + C151796 * C160 +
                     C76456 * C143 + C76472 + C76472 + C76451 * C159) *
                        C152080 * C152253) *
                       C2814 -
                   ((C80077 + C80078) * C152080 * C76455 +
                    (C80079 + C80080) * C152080 * C152233 +
                    (C76458 * C553 + C77057 + C77057 + C151796 * C577 +
                     C76456 * C552 + C77058 + C77058 + C76451 * C576) *
                        C152080 * C152253) *
                       C2816 +
                   ((C76456 * C2453 + C80275 + C80275 + C76451 * C2469 +
                     C76458 * C2452 + C80276 + C80276 + C151796 * C2468) *
                        C152080 * C152253 +
                    (C76456 * C2956 + C80277 + C80277 + C76451 * C2964 +
                     C76458 * C2957 + C80278 + C80278 + C151796 * C2965) *
                        C152080 * C152233 +
                    (C76456 * C10150 + C80279 + C80279 + C76451 * C10156 +
                     C76458 * C10151 + C80280 + C80280 + C151796 * C10157) *
                        C152080 * C76455) *
                       C152230) *
                      C151851 * C151834)) /
                    (p * q * std::sqrt(p + q));
    d2ee[39] += (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 ((((C76456 * C142 + C76461 + C76461 + C76451 * C158 +
                     C76458 * C143 + C76462 + C76462 + C151796 * C159) *
                        C152080 * C152253 +
                    (C76793 + C76794) * C152080 * C152233 + C76814 * C76455) *
                       C151869 * C152258 -
                   ((C76797 + C76798) * C152080 * C76455 +
                    (C76796 + C76795) * C152080 * C152233 +
                    (C76794 + C76793) * C152080 * C152253) *
                       C151869 * C152244 +
                   (C76814 * C152253 + (C76798 + C76797) * C152080 * C152233 +
                    (C76456 * C1357 + C76723 + C76723 + C76451 * C1373 +
                     C76458 * C1358 + C76724 + C76724 + C151796 * C1374) *
                        C152080 * C76455) *
                       C151869 * C152214) *
                      C335 +
                  (((C76799 + C76800) * C152080 * C152253 +
                    (C76801 + C76802) * C152080 * C152233 +
                    (C76803 + C76804) * C152080 * C76455) *
                       C151869 * C152244 -
                   (C76815 * C76455 + (C76800 + C76799) * C152080 * C152233 +
                    (C76458 * C144 + C76471 + C76471 + C151796 * C160 +
                     C76456 * C143 + C76472 + C76472 + C76451 * C159) *
                        C152080 * C152253) *
                       C151869 * C152258 -
                   ((C76458 * C1359 + C76739 + C76739 + C151796 * C1375 +
                     C76456 * C1358 + C76740 + C76740 + C76451 * C1374) *
                        C152080 * C76455 +
                    (C76804 + C76803) * C152080 * C152233 + C76815 * C152253) *
                       C151869 * C152214) *
                      C336 +
                  (((C76456 * C144 + C76473 + C76473 + C76451 * C160 +
                     C76458 * C145 + C76474 + C76474 + C151796 * C161) *
                        C152080 * C152253 +
                    (C76805 + C76806) * C152080 * C152233 + C76816 * C76455) *
                       C151869 * C152258 -
                   ((C76809 + C76810) * C152080 * C76455 +
                    (C76808 + C76807) * C152080 * C152233 +
                    (C76806 + C76805) * C152080 * C152253) *
                       C151869 * C152244 +
                   (C76816 * C152253 + (C76810 + C76809) * C152080 * C152233 +
                    (C76456 * C1359 + C76755 + C76755 + C76451 * C1375 +
                     C76458 * C1360 + C76756 + C76756 + C151796 * C1376) *
                        C152080 * C76455) *
                       C151869 * C152214) *
                      C152208)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 (((C76456 * C142 + C76461 + C76461 + C76451 * C158 +
                    C76458 * C143 + C76462 + C76462 + C151796 * C159) *
                       C152080 * C152253 +
                   (C76456 * C341 + C76463 + C76463 + C76451 * C365 +
                    C76458 * C340 + C76464 + C76464 + C151796 * C364) *
                       C152080 * C152233 +
                   (C76456 * C342 + C76465 + C76465 + C76451 * C366 +
                    C76458 * C343 + C76466 + C76466 + C151796 * C367) *
                       C152080 * C76455) *
                      C151869 * C151851 * C129 -
                  ((C76458 * C344 + C76467 + C76467 + C151796 * C368 +
                    C76456 * C343 + C76468 + C76468 + C76451 * C367) *
                       C152080 * C76455 +
                   (C76458 * C339 + C76469 + C76469 + C151796 * C363 +
                    C76456 * C340 + C76470 + C76470 + C76451 * C364) *
                       C152080 * C152233 +
                   (C76458 * C144 + C76471 + C76471 + C151796 * C160 +
                    C76456 * C143 + C76472 + C76472 + C76451 * C159) *
                       C152080 * C152253) *
                      C151869 * C151851 * C130 +
                  ((C76456 * C144 + C76473 + C76473 + C76451 * C160 +
                    C76458 * C145 + C76474 + C76474 + C151796 * C161) *
                       C152080 * C152253 +
                   (C76456 * C339 + C76475 + C76475 + C76451 * C363 +
                    C76458 * C338 + C76476 + C76476 + C151796 * C362) *
                       C152080 * C152233 +
                   (C76456 * C344 + C76477 + C76477 + C76451 * C368 +
                    C76458 * C345 + C76478 + C76478 + C151796 * C369) *
                       C152080 * C76455) *
                      C151869 * C151851 * C131 -
                  ((C76458 * C347 + C76479 + C76479 + C151796 * C371 +
                    C76456 * C345 + C76480 + C76480 + C76451 * C369) *
                       C152080 * C76455 +
                   (C76458 * C346 + C76481 + C76481 + C151796 * C370 +
                    C76456 * C338 + C76482 + C76482 + C76451 * C362) *
                       C152080 * C152233 +
                   (C76458 * C146 + C76483 + C76483 + C151796 * C162 +
                    C76456 * C145 + C76484 + C76484 + C76451 * C161) *
                       C152080 * C152253) *
                      C151869 * C151851 * C132 +
                  ((C76456 * C146 + C76485 + C76485 + C76451 * C162 +
                    C76458 * C147 + C76486 + C76486 + C151796 * C163) *
                       C152080 * C152253 +
                   (C76456 * C346 + C76487 + C76487 + C76451 * C370 +
                    C76458 * C348 + C76488 + C76488 + C151796 * C372) *
                       C152080 * C152233 +
                   (C76456 * C347 + C76489 + C76489 + C76451 * C371 +
                    C76458 * C349 + C76490 + C76490 + C151796 * C373) *
                       C152080 * C76455) *
                      C151869 * C151851 * C133)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 ((((C76456 * C142 + C76461 + C76461 + C76451 * C158 +
                     C76458 * C143 + C76462 + C76462 + C151796 * C159) *
                        C152080 * C152253 +
                    (C76793 + C76794) * C152080 * C152233 + C76814 * C76455) *
                       C151869 * C1259 -
                   ((C76797 + C76798) * C152080 * C76455 +
                    (C76796 + C76795) * C152080 * C152233 +
                    (C76794 + C76793) * C152080 * C152253) *
                       C151869 * C1260 +
                   (C76814 * C152253 + (C76798 + C76797) * C152080 * C152233 +
                    (C76456 * C1357 + C76723 + C76723 + C76451 * C1373 +
                     C76458 * C1358 + C76724 + C76724 + C151796 * C1374) *
                        C152080 * C76455) *
                       C151869 * C152214) *
                      C152255 +
                  (((C76799 + C76800) * C152080 * C152253 +
                    (C76801 + C76802) * C152080 * C152233 +
                    (C76803 + C76804) * C152080 * C76455) *
                       C151869 * C1260 -
                   (C76815 * C76455 + (C76800 + C76799) * C152080 * C152233 +
                    (C76458 * C144 + C76471 + C76471 + C151796 * C160 +
                     C76456 * C143 + C76472 + C76472 + C76451 * C159) *
                        C152080 * C152253) *
                       C151869 * C1259 -
                   ((C76458 * C1359 + C76739 + C76739 + C151796 * C1375 +
                     C76456 * C1358 + C76740 + C76740 + C76451 * C1374) *
                        C152080 * C76455 +
                    (C76804 + C76803) * C152080 * C152233 + C76815 * C152253) *
                       C151869 * C152214) *
                      C152240 +
                  (((C76456 * C144 + C76473 + C76473 + C76451 * C160 +
                     C76458 * C145 + C76474 + C76474 + C151796 * C161) *
                        C152080 * C152253 +
                    (C76805 + C76806) * C152080 * C152233 + C76816 * C76455) *
                       C151869 * C1259 -
                   ((C76809 + C76810) * C152080 * C76455 +
                    (C76808 + C76807) * C152080 * C152233 +
                    (C76806 + C76805) * C152080 * C152253) *
                       C151869 * C1260 +
                   (C76816 * C152253 + (C76810 + C76809) * C152080 * C152233 +
                    (C76456 * C1359 + C76755 + C76755 + C76451 * C1375 +
                     C76458 * C1360 + C76756 + C76756 + C151796 * C1376) *
                        C152080 * C76455) *
                       C151869 * C152214) *
                      C152208)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 (((C76456 * C142 + C76461 + C76461 + C76451 * C158 +
                    C76458 * C143 + C76462 + C76462 + C151796 * C159) *
                       C152080 * C152253 +
                   (C76793 + C76794) * C152080 * C152233 + C76814 * C76455) *
                      C151869 * C1347 -
                  (C78196 * C76455 + (C76796 + C76795) * C152080 * C152233 +
                   (C76794 + C76793) * C152080 * C152253) *
                      C151869 * C1348 +
                  (C76814 * C152253 + (C76798 + C76797) * C152080 * C152233 +
                   C78210 * C76455) *
                      C151869 * C1349 -
                  ((C78207 + C78208) * C152080 * C76455 +
                   (C78206 + C78205) * C152080 * C152233 + C78196 * C152253) *
                      C151869 * C1350 +
                  (C78210 * C152253 + (C78208 + C78207) * C152080 * C152233 +
                   (C76456 * C24769 + C78194 + C78194 + C76451 * C24773 +
                    C76458 * C24770 + C78195 + C78195 + C151796 * C24774) *
                       C152080 * C76455) *
                      C151869 * C1351) *
                 C151823) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C76456 * C142 + C76461 + C76461 + C76451 * C158 +
                     C76458 * C143 + C76462 + C76462 + C151796 * C159) *
                        C152080 * C152253 +
                    (C76793 + C76794) * C152080 * C152233 + C76814 * C76455) *
                       C2215 -
                   (C78452 * C76455 + (C77833 + C77834) * C152080 * C152233 +
                    (C76458 * C549 + C77039 + C77039 + C151796 * C573 +
                     C76456 * C550 + C77040 + C77040 + C76451 * C574) *
                        C152080 * C152253) *
                       C2216 +
                   ((C76456 * C551 + C77041 + C77041 + C76451 * C575 +
                     C76458 * C552 + C77042 + C77042 + C151796 * C576) *
                        C152080 * C152253 +
                    (C78469 + C78470) * C152080 * C152233 + C78478 * C76455) *
                       C152217) *
                      C151851 * C152255 +
                  (((C76456 * C549 + C77047 + C77047 + C76451 * C573 +
                     C76458 * C548 + C77048 + C77048 + C151796 * C572) *
                        C152080 * C152253 +
                    (C77835 + C77836) * C152080 * C152233 + C78984 * C76455) *
                       C2216 -
                   (C76815 * C76455 + (C76800 + C76799) * C152080 * C152233 +
                    (C76458 * C144 + C76471 + C76471 + C151796 * C160 +
                     C76456 * C143 + C76472 + C76472 + C76451 * C159) *
                        C152080 * C152253) *
                       C2215 -
                   ((C76458 * C1541 + C77053 + C77053 + C151796 * C1565 +
                     C76456 * C1540 + C77054 + C77054 + C76451 * C1564) *
                        C152080 * C76455 +
                    (C76458 * C1532 + C77055 + C77055 + C151796 * C1556 +
                     C76456 * C1533 + C77056 + C77056 + C76451 * C1557) *
                        C152080 * C152233 +
                    (C76458 * C553 + C77057 + C77057 + C151796 * C577 +
                     C76456 * C552 + C77058 + C77058 + C76451 * C576) *
                        C152080 * C152253) *
                       C152217) *
                      C151851 * C152240 +
                  (((C76456 * C144 + C76473 + C76473 + C76451 * C160 +
                     C76458 * C145 + C76474 + C76474 + C151796 * C161) *
                        C152080 * C152253 +
                    (C76805 + C76806) * C152080 * C152233 + C76816 * C76455) *
                       C2215 -
                   ((C77839 + C77840) * C152080 * C76455 +
                    (C77841 + C77842) * C152080 * C152233 +
                    (C76458 * C547 + C77063 + C77063 + C151796 * C571 +
                     C76456 * C548 + C77064 + C77064 + C76451 * C572) *
                        C152080 * C152253) *
                       C2216 +
                   ((C76456 * C553 + C77065 + C77065 + C76451 * C577 +
                     C76458 * C554 + C77066 + C77066 + C151796 * C578) *
                        C152080 * C152253 +
                    (C76456 * C1532 + C77067 + C77067 + C76451 * C1556 +
                     C76458 * C1531 + C77068 + C77068 + C151796 * C1555) *
                        C152080 * C152233 +
                    (C76456 * C1541 + C77069 + C77069 + C76451 * C1565 +
                     C76458 * C1542 + C77070 + C77070 + C151796 * C1566) *
                        C152080 * C76455) *
                       C152217) *
                      C151851 * C152208)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C76456 * C142 + C76461 + C76461 + C76451 * C158 +
                     C76458 * C143 + C76462 + C76462 + C151796 * C159) *
                        C152080 * C152253 +
                    (C76793 + C76794) * C152080 * C152233 + C76814 * C76455) *
                       C2215 -
                   (C78452 * C76455 + (C77833 + C77834) * C152080 * C152233 +
                    (C76458 * C549 + C77039 + C77039 + C151796 * C573 +
                     C76456 * C550 + C77040 + C77040 + C76451 * C574) *
                        C152080 * C152253) *
                       C2216 +
                   ((C76456 * C551 + C77041 + C77041 + C76451 * C575 +
                     C76458 * C552 + C77042 + C77042 + C151796 * C576) *
                        C152080 * C152253 +
                    (C78469 + C78470) * C152080 * C152233 + C78478 * C76455) *
                       C152217) *
                      C152258 +
                  (((C77834 + C77833) * C152080 * C152253 +
                    (C77832 + C77831) * C152080 * C152233 + C79192 * C76455) *
                       C2216 -
                   (C78196 * C76455 + (C76796 + C76795) * C152080 * C152233 +
                    (C76794 + C76793) * C152080 * C152253) *
                       C2215 -
                   ((C78475 + C78476) * C152080 * C76455 +
                    (C78472 + C78471) * C152080 * C152233 +
                    (C78470 + C78469) * C152080 * C152253) *
                       C152217) *
                      C152244 +
                  ((C76814 * C152253 + (C76798 + C76797) * C152080 * C152233 +
                    C78210 * C76455) *
                       C2215 -
                   ((C79197 + C79198) * C152080 * C76455 +
                    (C78474 + C78473) * C152080 * C152233 + C78452 * C152253) *
                       C2216 +
                   (C78478 * C152253 + (C78476 + C78475) * C152080 * C152233 +
                    (C76456 * C25021 + C78450 + C78450 + C76451 * C25025 +
                     C76458 * C25022 + C78451 + C78451 + C151796 * C25026) *
                        C152080 * C76455) *
                       C152217) *
                      C152214) *
                 C151823) /
                    (p * q * std::sqrt(p + q));
    d2ee[40] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 (((((C76456 * C142 + C76461 + C76461 + C76451 * C158 +
                      C76458 * C143 + C76462 + C76462 + C151796 * C159) *
                         C152080 * C152253 +
                     (C76793 + C76794) * C152080 * C152233 + C76814 * C76455) *
                        C4107 -
                    (C78452 * C76455 + (C77833 + C77834) * C152080 * C152233 +
                     (C76458 * C549 + C77039 + C77039 + C151796 * C573 +
                      C76456 * C550 + C77040 + C77040 + C76451 * C574) *
                         C152080 * C152253) *
                        C151956) *
                       C152172 +
                   (((C77834 + C77833) * C152080 * C152253 +
                     (C77832 + C77831) * C152080 * C152233 + C79192 * C76455) *
                        C151956 -
                    (C78196 * C76455 + (C76796 + C76795) * C152080 * C152233 +
                     (C76794 + C76793) * C152080 * C152253) *
                        C4107) *
                       C151914) *
                      C151828 +
                  ((((C76456 * C549 + C77047 + C77047 + C76451 * C573 +
                      C76458 * C548 + C77048 + C77048 + C151796 * C572) *
                         C152080 * C152253 +
                     (C77835 + C77836) * C152080 * C152233 + C78984 * C76455) *
                        C151956 -
                    (C76815 * C76455 + (C76800 + C76799) * C152080 * C152233 +
                     (C76458 * C144 + C76471 + C76471 + C151796 * C160 +
                      C76456 * C143 + C76472 + C76472 + C76451 * C159) *
                         C152080 * C152253) *
                        C4107) *
                       C152172 +
                   (((C76799 + C76800) * C152080 * C152253 +
                     (C76801 + C76802) * C152080 * C152233 + C78680 * C76455) *
                        C4107 -
                    ((C78989 + C78990) * C152080 * C76455 +
                     (C77838 + C77837) * C152080 * C152233 +
                     (C77836 + C77835) * C152080 * C152253) *
                        C151956) *
                       C151914) *
                      C151837 +
                  ((((C76456 * C144 + C76473 + C76473 + C76451 * C160 +
                      C76458 * C145 + C76474 + C76474 + C151796 * C161) *
                         C152080 * C152253 +
                     (C76805 + C76806) * C152080 * C152233 + C76816 * C76455) *
                        C4107 -
                    ((C77839 + C77840) * C152080 * C76455 +
                     (C77841 + C77842) * C152080 * C152233 +
                     (C76458 * C547 + C77063 + C77063 + C151796 * C571 +
                      C76456 * C548 + C77064 + C77064 + C76451 * C572) *
                         C152080 * C152253) *
                        C151956) *
                       C152172 +
                   (((C77842 + C77841) * C152080 * C152253 +
                     (C77840 + C77839) * C152080 * C152233 +
                     (C76456 * C2055 + C77805 + C77805 + C76451 * C2063 +
                      C76458 * C2056 + C77806 + C77806 + C151796 * C2064) *
                         C152080 * C76455) *
                        C151956 -
                    ((C76809 + C76810) * C152080 * C76455 +
                     (C76808 + C76807) * C152080 * C152233 +
                     (C76806 + C76805) * C152080 * C152253) *
                        C4107) *
                       C151914) *
                      C3588)) /
                (p * q * std::sqrt(p + q));
    d2ee[41] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 (((((C76456 * C142 + C76461 + C76461 + C76451 * C158 +
                      C76458 * C143 + C76462 + C76462 + C151796 * C159) *
                         C152080 * C152253 +
                     (C76793 + C76794) * C152080 * C152233 + C76814 * C76455) *
                        C151952 -
                    (C78452 * C76455 + (C77833 + C77834) * C152080 * C152233 +
                     (C76458 * C549 + C77039 + C77039 + C151796 * C573 +
                      C76456 * C550 + C77040 + C77040 + C76451 * C574) *
                         C152080 * C152253) *
                        C151959 +
                    ((C76456 * C551 + C77041 + C77041 + C76451 * C575 +
                      C76458 * C552 + C77042 + C77042 + C151796 * C576) *
                         C152080 * C152253 +
                     (C78469 + C78470) * C152080 * C152233 + C78478 * C76455) *
                        C4779) *
                       C152172 +
                   (((C77834 + C77833) * C152080 * C152253 +
                     (C77832 + C77831) * C152080 * C152233 + C79192 * C76455) *
                        C151959 -
                    (C78196 * C76455 + (C76796 + C76795) * C152080 * C152233 +
                     (C76794 + C76793) * C152080 * C152253) *
                        C151952 -
                    ((C78475 + C78476) * C152080 * C76455 +
                     (C78472 + C78471) * C152080 * C152233 +
                     (C78470 + C78469) * C152080 * C152253) *
                        C4779) *
                       C151914) *
                      C3241 +
                  ((((C76456 * C549 + C77047 + C77047 + C76451 * C573 +
                      C76458 * C548 + C77048 + C77048 + C151796 * C572) *
                         C152080 * C152253 +
                     (C77835 + C77836) * C152080 * C152233 + C78984 * C76455) *
                        C151959 -
                    (C76815 * C76455 + (C76800 + C76799) * C152080 * C152233 +
                     (C76458 * C144 + C76471 + C76471 + C151796 * C160 +
                      C76456 * C143 + C76472 + C76472 + C76451 * C159) *
                         C152080 * C152253) *
                        C151952 -
                    ((C80077 + C80078) * C152080 * C76455 +
                     (C80079 + C80080) * C152080 * C152233 +
                     (C76458 * C553 + C77057 + C77057 + C151796 * C577 +
                      C76456 * C552 + C77058 + C77058 + C76451 * C576) *
                         C152080 * C152253) *
                        C4779) *
                       C152172 +
                   (((C76799 + C76800) * C152080 * C152253 +
                     (C76801 + C76802) * C152080 * C152233 + C78680 * C76455) *
                        C151952 -
                    ((C78989 + C78990) * C152080 * C76455 +
                     (C77838 + C77837) * C152080 * C152233 +
                     (C77836 + C77835) * C152080 * C152253) *
                        C151959 +
                    ((C80080 + C80079) * C152080 * C152253 +
                     (C80078 + C80077) * C152080 * C152233 +
                     (C76456 * C8065 + C80067 + C80067 + C76451 * C8071 +
                      C76458 * C8066 + C80068 + C80068 + C151796 * C8072) *
                         C152080 * C76455) *
                        C4779) *
                       C151914) *
                      C151834)) /
                (p * q * std::sqrt(p + q));
    d2ee[42] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 (((((C76456 * C142 + C76461 + C76461 + C76451 * C158 +
                      C76458 * C143 + C76462 + C76462 + C151796 * C159) *
                         C152080 * C152253 +
                     (C76793 + C76794) * C152080 * C152233 + C76814 * C76455) *
                        C4107 -
                    (C78452 * C76455 + (C77833 + C77834) * C152080 * C152233 +
                     (C76458 * C549 + C77039 + C77039 + C151796 * C573 +
                      C76456 * C550 + C77040 + C77040 + C76451 * C574) *
                         C152080 * C152253) *
                        C151956) *
                       C152258 +
                   (((C77834 + C77833) * C152080 * C152253 +
                     (C77832 + C77831) * C152080 * C152233 + C79192 * C76455) *
                        C151956 -
                    (C78196 * C76455 + (C76796 + C76795) * C152080 * C152233 +
                     (C76794 + C76793) * C152080 * C152253) *
                        C4107) *
                       C152244 +
                   ((C76814 * C152253 + (C76798 + C76797) * C152080 * C152233 +
                     C78210 * C76455) *
                        C4107 -
                    ((C79197 + C79198) * C152080 * C76455 +
                     (C78474 + C78473) * C152080 * C152233 + C78452 * C152253) *
                        C151956) *
                       C152214) *
                      C3241 +
                  ((((C76456 * C549 + C77047 + C77047 + C76451 * C573 +
                      C76458 * C548 + C77048 + C77048 + C151796 * C572) *
                         C152080 * C152253 +
                     (C77835 + C77836) * C152080 * C152233 + C78984 * C76455) *
                        C151956 -
                    (C76815 * C76455 + (C76800 + C76799) * C152080 * C152233 +
                     (C76458 * C144 + C76471 + C76471 + C151796 * C160 +
                      C76456 * C143 + C76472 + C76472 + C76451 * C159) *
                         C152080 * C152253) *
                        C4107) *
                       C152258 +
                   (((C76799 + C76800) * C152080 * C152253 +
                     (C76801 + C76802) * C152080 * C152233 + C78680 * C76455) *
                        C4107 -
                    ((C78989 + C78990) * C152080 * C76455 +
                     (C77838 + C77837) * C152080 * C152233 +
                     (C77836 + C77835) * C152080 * C152253) *
                        C151956) *
                       C152244 +
                   ((C78984 * C152253 + (C78990 + C78989) * C152080 * C152233 +
                     (C76456 * C8842 + C78982 + C78982 + C76451 * C8848 +
                      C76458 * C8843 + C78983 + C78983 + C151796 * C8849) *
                         C152080 * C76455) *
                        C151956 -
                    ((C78685 + C78686) * C152080 * C76455 +
                     (C76804 + C76803) * C152080 * C152233 + C76815 * C152253) *
                        C4107) *
                       C152214) *
                      C151834)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C76456 * C142 + C76461 + C76461 + C76451 * C158 +
                     C76458 * C143 + C76462 + C76462 + C151796 * C159) *
                        C152080 * C152253 +
                    (C76793 + C76794) * C152080 * C152233 + C76814 * C76455) *
                       C4107 -
                   (C78452 * C76455 + (C77833 + C77834) * C152080 * C152233 +
                    (C76458 * C549 + C77039 + C77039 + C151796 * C573 +
                     C76456 * C550 + C77040 + C77040 + C76451 * C574) *
                        C152080 * C152253) *
                       C151956) *
                      C151851 * C152264 +
                  (((C76456 * C549 + C77047 + C77047 + C76451 * C573 +
                     C76458 * C548 + C77048 + C77048 + C151796 * C572) *
                        C152080 * C152253 +
                    (C77835 + C77836) * C152080 * C152233 + C78984 * C76455) *
                       C151956 -
                   (C76815 * C76455 + (C76800 + C76799) * C152080 * C152233 +
                    (C76458 * C144 + C76471 + C76471 + C151796 * C160 +
                     C76456 * C143 + C76472 + C76472 + C76451 * C159) *
                        C152080 * C152253) *
                       C4107) *
                      C151851 * C152257 +
                  (((C76456 * C144 + C76473 + C76473 + C76451 * C160 +
                     C76458 * C145 + C76474 + C76474 + C151796 * C161) *
                        C152080 * C152253 +
                    (C76805 + C76806) * C152080 * C152233 + C76816 * C76455) *
                       C4107 -
                   ((C77839 + C77840) * C152080 * C76455 +
                    (C77841 + C77842) * C152080 * C152233 +
                    (C76458 * C547 + C77063 + C77063 + C151796 * C571 +
                     C76456 * C548 + C77064 + C77064 + C76451 * C572) *
                        C152080 * C152253) *
                       C151956) *
                      C151851 * C152242 +
                  (((C76456 * C547 + C77481 + C77481 + C76451 * C571 +
                     C76458 * C555 + C77482 + C77482 + C151796 * C579) *
                        C152080 * C152253 +
                    (C76456 * C1086 + C77483 + C77483 + C76451 * C1098 +
                     C76458 * C1087 + C77484 + C77484 + C151796 * C1099) *
                        C152080 * C152233 +
                    (C76456 * C1535 + C77485 + C77485 + C76451 * C1559 +
                     C76458 * C1916 + C77486 + C77486 + C151796 * C1918) *
                        C152080 * C76455) *
                       C151956 -
                   ((C77286 + C77285) * C152080 * C76455 +
                    (C77284 + C77283) * C152080 * C152233 +
                    (C76458 * C146 + C76483 + C76483 + C151796 * C162 +
                     C76456 * C145 + C76484 + C76484 + C76451 * C161) *
                        C152080 * C152253) *
                       C4107) *
                      C151851 * C152218)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                 ((((C76456 * C142 + C76461 + C76461 + C76451 * C158 +
                     C76458 * C143 + C76462 + C76462 + C151796 * C159) *
                        C152080 * C152253 +
                    (C76793 + C76794) * C152080 * C152233 + C76814 * C76455) *
                       C152266 -
                   (C78452 * C76455 + (C77833 + C77834) * C152080 * C152233 +
                    (C76458 * C549 + C77039 + C77039 + C151796 * C573 +
                     C76456 * C550 + C77040 + C77040 + C76451 * C574) *
                        C152080 * C152253) *
                       C152263 +
                   ((C76456 * C551 + C77041 + C77041 + C76451 * C575 +
                     C76458 * C552 + C77042 + C77042 + C151796 * C576) *
                        C152080 * C152253 +
                    (C78469 + C78470) * C152080 * C152233 + C78478 * C76455) *
                       C152252 -
                   ((C80493 + C80494) * C152080 * C76455 +
                    (C80495 + C80496) * C152080 * C152233 +
                    (C76458 * C2453 + C79761 + C79761 + C151796 * C2469 +
                     C76456 * C2454 + C79762 + C79762 + C76451 * C2470) *
                        C152080 * C152253) *
                       C152230) *
                      C151851 * C3241 +
                  (((C76456 * C549 + C77047 + C77047 + C76451 * C573 +
                     C76458 * C548 + C77048 + C77048 + C151796 * C572) *
                        C152080 * C152253 +
                    (C77835 + C77836) * C152080 * C152233 + C78984 * C76455) *
                       C152263 -
                   (C76815 * C76455 + (C76800 + C76799) * C152080 * C152233 +
                    (C76458 * C144 + C76471 + C76471 + C151796 * C160 +
                     C76456 * C143 + C76472 + C76472 + C76451 * C159) *
                        C152080 * C152253) *
                       C152266 -
                   ((C80077 + C80078) * C152080 * C76455 +
                    (C80079 + C80080) * C152080 * C152233 +
                    (C76458 * C553 + C77057 + C77057 + C151796 * C577 +
                     C76456 * C552 + C77058 + C77058 + C76451 * C576) *
                        C152080 * C152253) *
                       C152252 +
                   ((C76456 * C2453 + C80275 + C80275 + C76451 * C2469 +
                     C76458 * C2452 + C80276 + C80276 + C151796 * C2468) *
                        C152080 * C152253 +
                    (C76456 * C2956 + C80277 + C80277 + C76451 * C2964 +
                     C76458 * C2957 + C80278 + C80278 + C151796 * C2965) *
                        C152080 * C152233 +
                    (C76456 * C10150 + C80279 + C80279 + C76451 * C10156 +
                     C76458 * C10151 + C80280 + C80280 + C151796 * C10157) *
                        C152080 * C76455) *
                       C152230) *
                      C151851 * C151834)) /
                    (p * q * std::sqrt(p + q));
    d2ee[43] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                 ((((C76456 * C142 + C76461 + C76461 + C76451 * C158 +
                     C76458 * C143 + C76462 + C76462 + C151796 * C159) *
                        C152080 * C152253 +
                    (C76793 + C76794) * C152080 * C152233 + C76814 * C76455) *
                       C151952 -
                   (C78452 * C76455 + (C77833 + C77834) * C152080 * C152233 +
                    (C76458 * C549 + C77039 + C77039 + C151796 * C573 +
                     C76456 * C550 + C77040 + C77040 + C76451 * C574) *
                        C152080 * C152253) *
                       C151959 +
                   ((C76456 * C551 + C77041 + C77041 + C76451 * C575 +
                     C76458 * C552 + C77042 + C77042 + C151796 * C576) *
                        C152080 * C152253 +
                    (C78469 + C78470) * C152080 * C152233 + C78478 * C76455) *
                       C4779) *
                      C151851 * C151828 +
                  (((C76456 * C549 + C77047 + C77047 + C76451 * C573 +
                     C76458 * C548 + C77048 + C77048 + C151796 * C572) *
                        C152080 * C152253 +
                    (C77835 + C77836) * C152080 * C152233 + C78984 * C76455) *
                       C151959 -
                   (C76815 * C76455 + (C76800 + C76799) * C152080 * C152233 +
                    (C76458 * C144 + C76471 + C76471 + C151796 * C160 +
                     C76456 * C143 + C76472 + C76472 + C76451 * C159) *
                        C152080 * C152253) *
                       C151952 -
                   ((C80077 + C80078) * C152080 * C76455 +
                    (C80079 + C80080) * C152080 * C152233 +
                    (C76458 * C553 + C77057 + C77057 + C151796 * C577 +
                     C76456 * C552 + C77058 + C77058 + C76451 * C576) *
                        C152080 * C152253) *
                       C4779) *
                      C151851 * C151837 +
                  (((C76456 * C144 + C76473 + C76473 + C76451 * C160 +
                     C76458 * C145 + C76474 + C76474 + C151796 * C161) *
                        C152080 * C152253 +
                    (C76805 + C76806) * C152080 * C152233 + C76816 * C76455) *
                       C151952 -
                   ((C77839 + C77840) * C152080 * C76455 +
                    (C77841 + C77842) * C152080 * C152233 +
                    (C76458 * C547 + C77063 + C77063 + C151796 * C571 +
                     C76456 * C548 + C77064 + C77064 + C76451 * C572) *
                        C152080 * C152253) *
                       C151959 +
                   ((C76456 * C553 + C77065 + C77065 + C76451 * C577 +
                     C76458 * C554 + C77066 + C77066 + C151796 * C578) *
                        C152080 * C152253 +
                    (C76456 * C1532 + C77067 + C77067 + C76451 * C1556 +
                     C76458 * C1531 + C77068 + C77068 + C151796 * C1555) *
                        C152080 * C152233 +
                    (C76456 * C1541 + C77069 + C77069 + C76451 * C1565 +
                     C76458 * C1542 + C77070 + C77070 + C151796 * C1566) *
                        C152080 * C76455) *
                       C4779) *
                      C151851 * C3588)) /
                (p * q * std::sqrt(p + q));
    d2ee[44] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C76456 * C142 + C76461 + C76461 + C76451 * C158 +
                     C76458 * C143 + C76462 + C76462 + C151796 * C159) *
                        C152080 * C152253 +
                    (C76793 + C76794) * C152080 * C152233 + C76814 * C76455) *
                       C4107 -
                   (C78452 * C76455 + (C77833 + C77834) * C152080 * C152233 +
                    (C76458 * C549 + C77039 + C77039 + C151796 * C573 +
                     C76456 * C550 + C77040 + C77040 + C76451 * C574) *
                        C152080 * C152253) *
                       C151956) *
                      C151851 * C152264 +
                  (((C76456 * C549 + C77047 + C77047 + C76451 * C573 +
                     C76458 * C548 + C77048 + C77048 + C151796 * C572) *
                        C152080 * C152253 +
                    (C77835 + C77836) * C152080 * C152233 + C78984 * C76455) *
                       C151956 -
                   (C76815 * C76455 + (C76800 + C76799) * C152080 * C152233 +
                    (C76458 * C144 + C76471 + C76471 + C151796 * C160 +
                     C76456 * C143 + C76472 + C76472 + C76451 * C159) *
                        C152080 * C152253) *
                       C4107) *
                      C151851 * C152257 +
                  (((C76456 * C144 + C76473 + C76473 + C76451 * C160 +
                     C76458 * C145 + C76474 + C76474 + C151796 * C161) *
                        C152080 * C152253 +
                    (C76805 + C76806) * C152080 * C152233 + C76816 * C76455) *
                       C4107 -
                   ((C77839 + C77840) * C152080 * C76455 +
                    (C77841 + C77842) * C152080 * C152233 +
                    (C76458 * C547 + C77063 + C77063 + C151796 * C571 +
                     C76456 * C548 + C77064 + C77064 + C76451 * C572) *
                        C152080 * C152253) *
                       C151956) *
                      C151851 * C152242 +
                  (((C76456 * C547 + C77481 + C77481 + C76451 * C571 +
                     C76458 * C555 + C77482 + C77482 + C151796 * C579) *
                        C152080 * C152253 +
                    (C76456 * C1086 + C77483 + C77483 + C76451 * C1098 +
                     C76458 * C1087 + C77484 + C77484 + C151796 * C1099) *
                        C152080 * C152233 +
                    (C76456 * C1535 + C77485 + C77485 + C76451 * C1559 +
                     C76458 * C1916 + C77486 + C77486 + C151796 * C1918) *
                        C152080 * C76455) *
                       C151956 -
                   ((C77286 + C77285) * C152080 * C76455 +
                    (C77284 + C77283) * C152080 * C152233 +
                    (C76458 * C146 + C76483 + C76483 + C151796 * C162 +
                     C76456 * C145 + C76484 + C76484 + C76451 * C161) *
                        C152080 * C152253) *
                       C4107) *
                      C151851 * C152218)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C76456 * C142 + C76461 + C76461 + C76451 * C158 +
                      C76458 * C143 + C76462 + C76462 + C151796 * C159) *
                         C152080 * C152253 +
                     (C76793 + C76794) * C152080 * C152233 + C76814 * C76455) *
                        C4107 -
                    (C78452 * C76455 + (C77833 + C77834) * C152080 * C152233 +
                     (C76458 * C549 + C77039 + C77039 + C151796 * C573 +
                      C76456 * C550 + C77040 + C77040 + C76451 * C574) *
                         C152080 * C152253) *
                        C151956) *
                       C152258 +
                   (((C77834 + C77833) * C152080 * C152253 +
                     (C77832 + C77831) * C152080 * C152233 + C79192 * C76455) *
                        C151956 -
                    (C78196 * C76455 + (C76796 + C76795) * C152080 * C152233 +
                     (C76794 + C76793) * C152080 * C152253) *
                        C4107) *
                       C152244 +
                   ((C76814 * C152253 + (C76798 + C76797) * C152080 * C152233 +
                     C78210 * C76455) *
                        C4107 -
                    ((C79197 + C79198) * C152080 * C76455 +
                     (C78474 + C78473) * C152080 * C152233 + C78452 * C152253) *
                        C151956) *
                       C152214) *
                      C3241 +
                  ((((C76456 * C549 + C77047 + C77047 + C76451 * C573 +
                      C76458 * C548 + C77048 + C77048 + C151796 * C572) *
                         C152080 * C152253 +
                     (C77835 + C77836) * C152080 * C152233 + C78984 * C76455) *
                        C151956 -
                    (C76815 * C76455 + (C76800 + C76799) * C152080 * C152233 +
                     (C76458 * C144 + C76471 + C76471 + C151796 * C160 +
                      C76456 * C143 + C76472 + C76472 + C76451 * C159) *
                         C152080 * C152253) *
                        C4107) *
                       C152258 +
                   (((C76799 + C76800) * C152080 * C152253 +
                     (C76801 + C76802) * C152080 * C152233 + C78680 * C76455) *
                        C4107 -
                    ((C78989 + C78990) * C152080 * C76455 +
                     (C77838 + C77837) * C152080 * C152233 +
                     (C77836 + C77835) * C152080 * C152253) *
                        C151956) *
                       C152244 +
                   ((C78984 * C152253 + (C78990 + C78989) * C152080 * C152233 +
                     (C76456 * C8842 + C78982 + C78982 + C76451 * C8848 +
                      C76458 * C8843 + C78983 + C78983 + C151796 * C8849) *
                         C152080 * C76455) *
                        C151956 -
                    ((C78685 + C78686) * C152080 * C76455 +
                     (C76804 + C76803) * C152080 * C152233 + C76815 * C152253) *
                        C4107) *
                       C152214) *
                      C151834)) /
                    (p * q * std::sqrt(p + q));
    d2ee[45] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C76456 * C142 + C76461 + C76461 + C76451 * C158 +
                     C76458 * C143 + C76462 + C76462 + C151796 * C159) *
                        C152080 * C152253 +
                    (C76793 + C76794) * C152080 * C152233 + C76814 * C76455) *
                       C151869 * C152172 -
                   ((C76797 + C76798) * C152080 * C76455 +
                    (C76796 + C76795) * C152080 * C152233 +
                    (C76794 + C76793) * C152080 * C152253) *
                       C151869 * C151914) *
                      C739 +
                  (((C76799 + C76800) * C152080 * C152253 +
                    (C76801 + C76802) * C152080 * C152233 +
                    (C76803 + C76804) * C152080 * C76455) *
                       C151869 * C151914 -
                   (C76815 * C76455 + (C76800 + C76799) * C152080 * C152233 +
                    (C76458 * C144 + C76471 + C76471 + C151796 * C160 +
                     C76456 * C143 + C76472 + C76472 + C76451 * C159) *
                        C152080 * C152253) *
                       C151869 * C152172) *
                      C740 +
                  (((C76456 * C144 + C76473 + C76473 + C76451 * C160 +
                     C76458 * C145 + C76474 + C76474 + C151796 * C161) *
                        C152080 * C152253 +
                    (C76805 + C76806) * C152080 * C152233 + C76816 * C76455) *
                       C151869 * C152172 -
                   ((C76809 + C76810) * C152080 * C76455 +
                    (C76808 + C76807) * C152080 * C152233 +
                    (C76806 + C76805) * C152080 * C152253) *
                       C151869 * C151914) *
                      C741 +
                  (((C77283 + C77284) * C152080 * C152253 +
                    (C77285 + C77286) * C152080 * C152233 +
                    (C76456 * C1353 + C77273 + C77273 + C76451 * C1369 +
                     C76458 * C1715 + C77274 + C77274 + C151796 * C1717) *
                        C152080 * C76455) *
                       C151869 * C151914 -
                   ((C77286 + C77285) * C152080 * C76455 +
                    (C77284 + C77283) * C152080 * C152233 +
                    (C76458 * C146 + C76483 + C76483 + C151796 * C162 +
                     C76456 * C145 + C76484 + C76484 + C76451 * C161) *
                        C152080 * C152253) *
                       C151869 * C152172) *
                      C152218)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C76456 * C142 + C76461 + C76461 + C76451 * C158 +
                     C76458 * C143 + C76462 + C76462 + C151796 * C159) *
                        C152080 * C152253 +
                    (C76793 + C76794) * C152080 * C152233 + C76814 * C76455) *
                       C151869 * C1709 -
                   (C78196 * C76455 + (C76796 + C76795) * C152080 * C152233 +
                    (C76794 + C76793) * C152080 * C152253) *
                       C151869 * C1710 +
                   (C76814 * C152253 + (C76798 + C76797) * C152080 * C152233 +
                    C78210 * C76455) *
                       C151869 * C1711 -
                   ((C78207 + C78208) * C152080 * C76455 +
                    (C78206 + C78205) * C152080 * C152233 + C78196 * C152253) *
                       C151869 * C152224) *
                      C152158 +
                  (((C76799 + C76800) * C152080 * C152253 +
                    (C76801 + C76802) * C152080 * C152233 + C78680 * C76455) *
                       C151869 * C1710 -
                   (C76815 * C76455 + (C76800 + C76799) * C152080 * C152233 +
                    (C76458 * C144 + C76471 + C76471 + C151796 * C160 +
                     C76456 * C143 + C76472 + C76472 + C76451 * C159) *
                        C152080 * C152253) *
                       C151869 * C1709 -
                   ((C78685 + C78686) * C152080 * C76455 +
                    (C76804 + C76803) * C152080 * C152233 + C76815 * C152253) *
                       C151869 * C1711 +
                   (C78680 * C152253 + (C78686 + C78685) * C152080 * C152233 +
                    (C76456 * C7802 + C78678 + C78678 + C76451 * C7808 +
                     C76458 * C7803 + C78679 + C78679 + C151796 * C7809) *
                        C152080 * C76455) *
                       C151869 * C152224) *
                      C151834)) /
                    (p * q * std::sqrt(p + q));
    d2ee[46] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C76456 * C142 + C76461 + C76461 + C76451 * C158 +
                      C76458 * C143 + C76462 + C76462 + C151796 * C159) *
                         C152080 * C152253 +
                     (C76793 + C76794) * C152080 * C152233 + C76814 * C76455) *
                        C152173 -
                    ((C77831 + C77832) * C152080 * C76455 +
                     (C77833 + C77834) * C152080 * C152233 +
                     (C76458 * C549 + C77039 + C77039 + C151796 * C573 +
                      C76456 * C550 + C77040 + C77040 + C76451 * C574) *
                         C152080 * C152253) *
                        C151956) *
                       C152172 +
                   (((C77834 + C77833) * C152080 * C152253 +
                     (C77832 + C77831) * C152080 * C152233 +
                     (C76456 * C2053 + C77785 + C77785 + C76451 * C2061 +
                      C76458 * C2054 + C77786 + C77786 + C151796 * C2062) *
                         C152080 * C76455) *
                        C151956 -
                    ((C76797 + C76798) * C152080 * C76455 +
                     (C76796 + C76795) * C152080 * C152233 +
                     (C76794 + C76793) * C152080 * C152253) *
                        C152173) *
                       C151914) *
                      C335 +
                  ((((C76456 * C549 + C77047 + C77047 + C76451 * C573 +
                      C76458 * C548 + C77048 + C77048 + C151796 * C572) *
                         C152080 * C152253 +
                     (C77835 + C77836) * C152080 * C152233 +
                     (C77837 + C77838) * C152080 * C76455) *
                        C151956 -
                    (C76815 * C76455 + (C76800 + C76799) * C152080 * C152233 +
                     (C76458 * C144 + C76471 + C76471 + C151796 * C160 +
                      C76456 * C143 + C76472 + C76472 + C76451 * C159) *
                         C152080 * C152253) *
                        C152173) *
                       C152172 +
                   (((C76799 + C76800) * C152080 * C152253 +
                     (C76801 + C76802) * C152080 * C152233 +
                     (C76803 + C76804) * C152080 * C76455) *
                        C152173 -
                    ((C76458 * C2055 + C77795 + C77795 + C151796 * C2063 +
                      C76456 * C2054 + C77796 + C77796 + C76451 * C2062) *
                         C152080 * C76455 +
                     (C77838 + C77837) * C152080 * C152233 +
                     (C77836 + C77835) * C152080 * C152253) *
                        C151956) *
                       C151914) *
                      C336 +
                  ((((C76456 * C144 + C76473 + C76473 + C76451 * C160 +
                      C76458 * C145 + C76474 + C76474 + C151796 * C161) *
                         C152080 * C152253 +
                     (C76805 + C76806) * C152080 * C152233 + C76816 * C76455) *
                        C152173 -
                    ((C77839 + C77840) * C152080 * C76455 +
                     (C77841 + C77842) * C152080 * C152233 +
                     (C76458 * C547 + C77063 + C77063 + C151796 * C571 +
                      C76456 * C548 + C77064 + C77064 + C76451 * C572) *
                         C152080 * C152253) *
                        C151956) *
                       C152172 +
                   (((C77842 + C77841) * C152080 * C152253 +
                     (C77840 + C77839) * C152080 * C152233 +
                     (C76456 * C2055 + C77805 + C77805 + C76451 * C2063 +
                      C76458 * C2056 + C77806 + C77806 + C151796 * C2064) *
                         C152080 * C76455) *
                        C151956 -
                    ((C76809 + C76810) * C152080 * C76455 +
                     (C76808 + C76807) * C152080 * C152233 +
                     (C76806 + C76805) * C152080 * C152253) *
                        C152173) *
                       C151914) *
                      C152208)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C76456 * C142 + C76461 + C76461 + C76451 * C158 +
                     C76458 * C143 + C76462 + C76462 + C151796 * C159) *
                        C152080 * C152253 +
                    (C76793 + C76794) * C152080 * C152233 + C76814 * C76455) *
                       C152173 -
                   (C78452 * C76455 + (C77833 + C77834) * C152080 * C152233 +
                    (C76458 * C549 + C77039 + C77039 + C151796 * C573 +
                     C76456 * C550 + C77040 + C77040 + C76451 * C574) *
                        C152080 * C152253) *
                       C151956) *
                      C1709 +
                  (((C77834 + C77833) * C152080 * C152253 +
                    (C77832 + C77831) * C152080 * C152233 + C79192 * C76455) *
                       C151956 -
                   (C78196 * C76455 + (C76796 + C76795) * C152080 * C152233 +
                    (C76794 + C76793) * C152080 * C152253) *
                       C152173) *
                      C1710 +
                  ((C76814 * C152253 + (C76798 + C76797) * C152080 * C152233 +
                    C78210 * C76455) *
                       C152173 -
                   ((C79197 + C79198) * C152080 * C76455 +
                    (C78474 + C78473) * C152080 * C152233 + C78452 * C152253) *
                       C151956) *
                      C1711 +
                  ((C79192 * C152253 + (C79198 + C79197) * C152080 * C152233 +
                    (C76456 * C25783 + C79190 + C79190 + C76451 * C25787 +
                     C76458 * C25784 + C79191 + C79191 + C151796 * C25788) *
                        C152080 * C76455) *
                       C151956 -
                   ((C78207 + C78208) * C152080 * C76455 +
                    (C78206 + C78205) * C152080 * C152233 + C78196 * C152253) *
                       C152173) *
                      C152224) *
                 C151823) /
                    (p * q * std::sqrt(p + q));
    d2ee[47] += (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 ((((C76456 * C142 + C76461 + C76461 + C76451 * C158 +
                     C76458 * C143 + C76462 + C76462 + C151796 * C159) *
                        C152080 * C152253 +
                    (C76793 + C76794) * C152080 * C152233 + C76814 * C76455) *
                       C151869 * C152258 -
                   ((C76797 + C76798) * C152080 * C76455 +
                    (C76796 + C76795) * C152080 * C152233 +
                    (C76794 + C76793) * C152080 * C152253) *
                       C151869 * C152244 +
                   (C76814 * C152253 + (C76798 + C76797) * C152080 * C152233 +
                    (C76456 * C1357 + C76723 + C76723 + C76451 * C1373 +
                     C76458 * C1358 + C76724 + C76724 + C151796 * C1374) *
                        C152080 * C76455) *
                       C151869 * C152214) *
                      C335 +
                  (((C76799 + C76800) * C152080 * C152253 +
                    (C76801 + C76802) * C152080 * C152233 +
                    (C76803 + C76804) * C152080 * C76455) *
                       C151869 * C152244 -
                   (C76815 * C76455 + (C76800 + C76799) * C152080 * C152233 +
                    (C76458 * C144 + C76471 + C76471 + C151796 * C160 +
                     C76456 * C143 + C76472 + C76472 + C76451 * C159) *
                        C152080 * C152253) *
                       C151869 * C152258 -
                   ((C76458 * C1359 + C76739 + C76739 + C151796 * C1375 +
                     C76456 * C1358 + C76740 + C76740 + C76451 * C1374) *
                        C152080 * C76455 +
                    (C76804 + C76803) * C152080 * C152233 + C76815 * C152253) *
                       C151869 * C152214) *
                      C336 +
                  (((C76456 * C144 + C76473 + C76473 + C76451 * C160 +
                     C76458 * C145 + C76474 + C76474 + C151796 * C161) *
                        C152080 * C152253 +
                    (C76805 + C76806) * C152080 * C152233 + C76816 * C76455) *
                       C151869 * C152258 -
                   ((C76809 + C76810) * C152080 * C76455 +
                    (C76808 + C76807) * C152080 * C152233 +
                    (C76806 + C76805) * C152080 * C152253) *
                       C151869 * C152244 +
                   (C76816 * C152253 + (C76810 + C76809) * C152080 * C152233 +
                    (C76456 * C1359 + C76755 + C76755 + C76451 * C1375 +
                     C76458 * C1360 + C76756 + C76756 + C151796 * C1376) *
                        C152080 * C76455) *
                       C151869 * C152214) *
                      C152208)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 (((C76456 * C142 + C76461 + C76461 + C76451 * C158 +
                    C76458 * C143 + C76462 + C76462 + C151796 * C159) *
                       C152080 * C152253 +
                   (C76456 * C341 + C76463 + C76463 + C76451 * C365 +
                    C76458 * C340 + C76464 + C76464 + C151796 * C364) *
                       C152080 * C152233 +
                   (C76456 * C342 + C76465 + C76465 + C76451 * C366 +
                    C76458 * C343 + C76466 + C76466 + C151796 * C367) *
                       C152080 * C76455) *
                      C151869 * C151851 * C129 -
                  ((C76458 * C344 + C76467 + C76467 + C151796 * C368 +
                    C76456 * C343 + C76468 + C76468 + C76451 * C367) *
                       C152080 * C76455 +
                   (C76458 * C339 + C76469 + C76469 + C151796 * C363 +
                    C76456 * C340 + C76470 + C76470 + C76451 * C364) *
                       C152080 * C152233 +
                   (C76458 * C144 + C76471 + C76471 + C151796 * C160 +
                    C76456 * C143 + C76472 + C76472 + C76451 * C159) *
                       C152080 * C152253) *
                      C151869 * C151851 * C130 +
                  ((C76456 * C144 + C76473 + C76473 + C76451 * C160 +
                    C76458 * C145 + C76474 + C76474 + C151796 * C161) *
                       C152080 * C152253 +
                   (C76456 * C339 + C76475 + C76475 + C76451 * C363 +
                    C76458 * C338 + C76476 + C76476 + C151796 * C362) *
                       C152080 * C152233 +
                   (C76456 * C344 + C76477 + C76477 + C76451 * C368 +
                    C76458 * C345 + C76478 + C76478 + C151796 * C369) *
                       C152080 * C76455) *
                      C151869 * C151851 * C131 -
                  ((C76458 * C347 + C76479 + C76479 + C151796 * C371 +
                    C76456 * C345 + C76480 + C76480 + C76451 * C369) *
                       C152080 * C76455 +
                   (C76458 * C346 + C76481 + C76481 + C151796 * C370 +
                    C76456 * C338 + C76482 + C76482 + C76451 * C362) *
                       C152080 * C152233 +
                   (C76458 * C146 + C76483 + C76483 + C151796 * C162 +
                    C76456 * C145 + C76484 + C76484 + C76451 * C161) *
                       C152080 * C152253) *
                      C151869 * C151851 * C132 +
                  ((C76456 * C146 + C76485 + C76485 + C76451 * C162 +
                    C76458 * C147 + C76486 + C76486 + C151796 * C163) *
                       C152080 * C152253 +
                   (C76456 * C346 + C76487 + C76487 + C76451 * C370 +
                    C76458 * C348 + C76488 + C76488 + C151796 * C372) *
                       C152080 * C152233 +
                   (C76456 * C347 + C76489 + C76489 + C76451 * C371 +
                    C76458 * C349 + C76490 + C76490 + C151796 * C373) *
                       C152080 * C76455) *
                      C151869 * C151851 * C133)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C76456 * C142 + C76461 + C76461 + C76451 * C158 +
                     C76458 * C143 + C76462 + C76462 + C151796 * C159) *
                        C152080 * C152253 +
                    (C76793 + C76794) * C152080 * C152233 + C76814 * C76455) *
                       C152259 -
                   ((C76458 * C1537 + C77035 + C77035 + C151796 * C1561 +
                     C76456 * C1538 + C77036 + C77036 + C76451 * C1562) *
                        C152080 * C76455 +
                    (C76458 * C1084 + C77037 + C77037 + C151796 * C1096 +
                     C76456 * C1083 + C77038 + C77038 + C76451 * C1095) *
                        C152080 * C152233 +
                    (C76458 * C549 + C77039 + C77039 + C151796 * C573 +
                     C76456 * C550 + C77040 + C77040 + C76451 * C574) *
                        C152080 * C152253) *
                       C152246 +
                   ((C76456 * C551 + C77041 + C77041 + C76451 * C575 +
                     C76458 * C552 + C77042 + C77042 + C151796 * C576) *
                        C152080 * C152253 +
                    (C76456 * C1534 + C77043 + C77043 + C76451 * C1558 +
                     C76458 * C1533 + C77044 + C77044 + C151796 * C1557) *
                        C152080 * C152233 +
                    (C76456 * C1539 + C77045 + C77045 + C76451 * C1563 +
                     C76458 * C1540 + C77046 + C77046 + C151796 * C1564) *
                        C152080 * C76455) *
                       C152217) *
                      C151851 * C335 +
                  (((C76456 * C549 + C77047 + C77047 + C76451 * C573 +
                     C76458 * C548 + C77048 + C77048 + C151796 * C572) *
                        C152080 * C152253 +
                    (C76456 * C1084 + C77049 + C77049 + C76451 * C1096 +
                     C76458 * C1085 + C77050 + C77050 + C151796 * C1097) *
                        C152080 * C152233 +
                    (C76456 * C1537 + C77051 + C77051 + C76451 * C1561 +
                     C76458 * C1536 + C77052 + C77052 + C151796 * C1560) *
                        C152080 * C76455) *
                       C152246 -
                   (C76815 * C76455 + (C76800 + C76799) * C152080 * C152233 +
                    (C76458 * C144 + C76471 + C76471 + C151796 * C160 +
                     C76456 * C143 + C76472 + C76472 + C76451 * C159) *
                        C152080 * C152253) *
                       C152259 -
                   ((C76458 * C1541 + C77053 + C77053 + C151796 * C1565 +
                     C76456 * C1540 + C77054 + C77054 + C76451 * C1564) *
                        C152080 * C76455 +
                    (C76458 * C1532 + C77055 + C77055 + C151796 * C1556 +
                     C76456 * C1533 + C77056 + C77056 + C76451 * C1557) *
                        C152080 * C152233 +
                    (C76458 * C553 + C77057 + C77057 + C151796 * C577 +
                     C76456 * C552 + C77058 + C77058 + C76451 * C576) *
                        C152080 * C152253) *
                       C152217) *
                      C151851 * C336 +
                  (((C76456 * C144 + C76473 + C76473 + C76451 * C160 +
                     C76458 * C145 + C76474 + C76474 + C151796 * C161) *
                        C152080 * C152253 +
                    (C76805 + C76806) * C152080 * C152233 + C76816 * C76455) *
                       C152259 -
                   ((C76458 * C1535 + C77059 + C77059 + C151796 * C1559 +
                     C76456 * C1536 + C77060 + C77060 + C76451 * C1560) *
                        C152080 * C76455 +
                    (C76458 * C1086 + C77061 + C77061 + C151796 * C1098 +
                     C76456 * C1085 + C77062 + C77062 + C76451 * C1097) *
                        C152080 * C152233 +
                    (C76458 * C547 + C77063 + C77063 + C151796 * C571 +
                     C76456 * C548 + C77064 + C77064 + C76451 * C572) *
                        C152080 * C152253) *
                       C152246 +
                   ((C76456 * C553 + C77065 + C77065 + C76451 * C577 +
                     C76458 * C554 + C77066 + C77066 + C151796 * C578) *
                        C152080 * C152253 +
                    (C76456 * C1532 + C77067 + C77067 + C76451 * C1556 +
                     C76458 * C1531 + C77068 + C77068 + C151796 * C1555) *
                        C152080 * C152233 +
                    (C76456 * C1541 + C77069 + C77069 + C76451 * C1565 +
                     C76458 * C1542 + C77070 + C77070 + C151796 * C1566) *
                        C152080 * C76455) *
                       C152217) *
                      C151851 * C152208)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 ((((C76456 * C142 + C76461 + C76461 + C76451 * C158 +
                     C76458 * C143 + C76462 + C76462 + C151796 * C159) *
                        C152080 * C152253 +
                    (C76793 + C76794) * C152080 * C152233 + C76814 * C76455) *
                       C151869 * C1259 -
                   ((C76797 + C76798) * C152080 * C76455 +
                    (C76796 + C76795) * C152080 * C152233 +
                    (C76794 + C76793) * C152080 * C152253) *
                       C151869 * C1260 +
                   (C76814 * C152253 + (C76798 + C76797) * C152080 * C152233 +
                    (C76456 * C1357 + C76723 + C76723 + C76451 * C1373 +
                     C76458 * C1358 + C76724 + C76724 + C151796 * C1374) *
                        C152080 * C76455) *
                       C151869 * C152214) *
                      C152255 +
                  (((C76799 + C76800) * C152080 * C152253 +
                    (C76801 + C76802) * C152080 * C152233 +
                    (C76803 + C76804) * C152080 * C76455) *
                       C151869 * C1260 -
                   (C76815 * C76455 + (C76800 + C76799) * C152080 * C152233 +
                    (C76458 * C144 + C76471 + C76471 + C151796 * C160 +
                     C76456 * C143 + C76472 + C76472 + C76451 * C159) *
                        C152080 * C152253) *
                       C151869 * C1259 -
                   ((C76458 * C1359 + C76739 + C76739 + C151796 * C1375 +
                     C76456 * C1358 + C76740 + C76740 + C76451 * C1374) *
                        C152080 * C76455 +
                    (C76804 + C76803) * C152080 * C152233 + C76815 * C152253) *
                       C151869 * C152214) *
                      C152240 +
                  (((C76456 * C144 + C76473 + C76473 + C76451 * C160 +
                     C76458 * C145 + C76474 + C76474 + C151796 * C161) *
                        C152080 * C152253 +
                    (C76805 + C76806) * C152080 * C152233 + C76816 * C76455) *
                       C151869 * C1259 -
                   ((C76809 + C76810) * C152080 * C76455 +
                    (C76808 + C76807) * C152080 * C152233 +
                    (C76806 + C76805) * C152080 * C152253) *
                       C151869 * C1260 +
                   (C76816 * C152253 + (C76810 + C76809) * C152080 * C152233 +
                    (C76456 * C1359 + C76755 + C76755 + C76451 * C1375 +
                     C76458 * C1360 + C76756 + C76756 + C151796 * C1376) *
                        C152080 * C76455) *
                       C151869 * C152214) *
                      C152208)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                 (((C76456 * C142 + C76461 + C76461 + C76451 * C158 +
                    C76458 * C143 + C76462 + C76462 + C151796 * C159) *
                       C152080 * C152253 +
                   (C76793 + C76794) * C152080 * C152233 + C76814 * C76455) *
                      C151869 * C1347 -
                  (C78196 * C76455 + (C76796 + C76795) * C152080 * C152233 +
                   (C76794 + C76793) * C152080 * C152253) *
                      C151869 * C1348 +
                  (C76814 * C152253 + (C76798 + C76797) * C152080 * C152233 +
                   C78210 * C76455) *
                      C151869 * C1349 -
                  ((C78207 + C78208) * C152080 * C76455 +
                   (C78206 + C78205) * C152080 * C152233 + C78196 * C152253) *
                      C151869 * C1350 +
                  (C78210 * C152253 + (C78208 + C78207) * C152080 * C152233 +
                   (C76456 * C24769 + C78194 + C78194 + C76451 * C24773 +
                    C76458 * C24770 + C78195 + C78195 + C151796 * C24774) *
                       C152080 * C76455) *
                      C151869 * C1351) *
                 C151823) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                 ((((C76456 * C142 + C76461 + C76461 + C76451 * C158 +
                     C76458 * C143 + C76462 + C76462 + C151796 * C159) *
                        C152080 * C152253 +
                    (C76793 + C76794) * C152080 * C152233 + C76814 * C76455) *
                       C152259 -
                   (C78452 * C76455 + (C77833 + C77834) * C152080 * C152233 +
                    (C76458 * C549 + C77039 + C77039 + C151796 * C573 +
                     C76456 * C550 + C77040 + C77040 + C76451 * C574) *
                        C152080 * C152253) *
                       C152246 +
                   ((C76456 * C551 + C77041 + C77041 + C76451 * C575 +
                     C76458 * C552 + C77042 + C77042 + C151796 * C576) *
                        C152080 * C152253 +
                    (C78469 + C78470) * C152080 * C152233 + C78478 * C76455) *
                       C152217) *
                      C1259 +
                  (((C77834 + C77833) * C152080 * C152253 +
                    (C77832 + C77831) * C152080 * C152233 +
                    (C78473 + C78474) * C152080 * C76455) *
                       C152246 -
                   (C78196 * C76455 + (C76796 + C76795) * C152080 * C152233 +
                    (C76794 + C76793) * C152080 * C152253) *
                       C152259 -
                   ((C78475 + C78476) * C152080 * C76455 +
                    (C78472 + C78471) * C152080 * C152233 +
                    (C78470 + C78469) * C152080 * C152253) *
                       C152217) *
                      C1260 +
                  ((C76814 * C152253 + (C76798 + C76797) * C152080 * C152233 +
                    C78210 * C76455) *
                       C152259 -
                   ((C76458 * C8842 + C78448 + C78448 + C151796 * C8848 +
                     C76456 * C8841 + C78449 + C78449 + C76451 * C8847) *
                        C152080 * C76455 +
                    (C78474 + C78473) * C152080 * C152233 + C78452 * C152253) *
                       C152246 +
                   (C78478 * C152253 + (C78476 + C78475) * C152080 * C152233 +
                    (C76456 * C25021 + C78450 + C78450 + C76451 * C25025 +
                     C76458 * C25022 + C78451 + C78451 + C151796 * C25026) *
                        C152080 * C76455) *
                       C152217) *
                      C152214) *
                 C151823) /
                    (p * q * std::sqrt(p + q));
    d2ee[48] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 ((((C76456 * C142 + C76461 + C76461 + C76451 * C158 +
                     C76458 * C143 + C76462 + C76462 + C151796 * C159) *
                        C152080 * C152253 +
                    (C76793 + C76794) * C152080 * C152233 + C76814 * C76455) *
                       C152173 -
                   ((C76458 * C1537 + C77035 + C77035 + C151796 * C1561 +
                     C76456 * C1538 + C77036 + C77036 + C76451 * C1562) *
                        C152080 * C76455 +
                    (C76458 * C1084 + C77037 + C77037 + C151796 * C1096 +
                     C76456 * C1083 + C77038 + C77038 + C76451 * C1095) *
                        C152080 * C152233 +
                    (C76458 * C549 + C77039 + C77039 + C151796 * C573 +
                     C76456 * C550 + C77040 + C77040 + C76451 * C574) *
                        C152080 * C152253) *
                       C151956) *
                      C151851 * C739 +
                  (((C76456 * C549 + C77047 + C77047 + C76451 * C573 +
                     C76458 * C548 + C77048 + C77048 + C151796 * C572) *
                        C152080 * C152253 +
                    (C76456 * C1084 + C77049 + C77049 + C76451 * C1096 +
                     C76458 * C1085 + C77050 + C77050 + C151796 * C1097) *
                        C152080 * C152233 +
                    (C76456 * C1537 + C77051 + C77051 + C76451 * C1561 +
                     C76458 * C1536 + C77052 + C77052 + C151796 * C1560) *
                        C152080 * C76455) *
                       C151956 -
                   (C76815 * C76455 + (C76800 + C76799) * C152080 * C152233 +
                    (C76458 * C144 + C76471 + C76471 + C151796 * C160 +
                     C76456 * C143 + C76472 + C76472 + C76451 * C159) *
                        C152080 * C152253) *
                       C152173) *
                      C151851 * C740 +
                  (((C76456 * C144 + C76473 + C76473 + C76451 * C160 +
                     C76458 * C145 + C76474 + C76474 + C151796 * C161) *
                        C152080 * C152253 +
                    (C76805 + C76806) * C152080 * C152233 + C76816 * C76455) *
                       C152173 -
                   ((C76458 * C1535 + C77059 + C77059 + C151796 * C1559 +
                     C76456 * C1536 + C77060 + C77060 + C76451 * C1560) *
                        C152080 * C76455 +
                    (C76458 * C1086 + C77061 + C77061 + C151796 * C1098 +
                     C76456 * C1085 + C77062 + C77062 + C76451 * C1097) *
                        C152080 * C152233 +
                    (C76458 * C547 + C77063 + C77063 + C151796 * C571 +
                     C76456 * C548 + C77064 + C77064 + C76451 * C572) *
                        C152080 * C152253) *
                       C151956) *
                      C151851 * C741 +
                  (((C76456 * C547 + C77481 + C77481 + C76451 * C571 +
                     C76458 * C555 + C77482 + C77482 + C151796 * C579) *
                        C152080 * C152253 +
                    (C76456 * C1086 + C77483 + C77483 + C76451 * C1098 +
                     C76458 * C1087 + C77484 + C77484 + C151796 * C1099) *
                        C152080 * C152233 +
                    (C76456 * C1535 + C77485 + C77485 + C76451 * C1559 +
                     C76458 * C1916 + C77486 + C77486 + C151796 * C1918) *
                        C152080 * C76455) *
                       C151956 -
                   ((C77286 + C77285) * C152080 * C76455 +
                    (C77284 + C77283) * C152080 * C152233 +
                    (C76458 * C146 + C76483 + C76483 + C151796 * C162 +
                     C76456 * C145 + C76484 + C76484 + C76451 * C161) *
                        C152080 * C152253) *
                       C152173) *
                      C151851 * C152218)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                 (((((C76456 * C142 + C76461 + C76461 + C76451 * C158 +
                      C76458 * C143 + C76462 + C76462 + C151796 * C159) *
                         C152080 * C152253 +
                     (C76793 + C76794) * C152080 * C152233 + C76814 * C76455) *
                        C152173 -
                    (C78452 * C76455 + (C77833 + C77834) * C152080 * C152233 +
                     (C76458 * C549 + C77039 + C77039 + C151796 * C573 +
                      C76456 * C550 + C77040 + C77040 + C76451 * C574) *
                         C152080 * C152253) *
                        C151956) *
                       C1259 +
                   (((C77834 + C77833) * C152080 * C152253 +
                     (C77832 + C77831) * C152080 * C152233 +
                     (C78473 + C78474) * C152080 * C76455) *
                        C151956 -
                    (C78196 * C76455 + (C76796 + C76795) * C152080 * C152233 +
                     (C76794 + C76793) * C152080 * C152253) *
                        C152173) *
                       C1260 +
                   ((C76814 * C152253 + (C76798 + C76797) * C152080 * C152233 +
                     C78210 * C76455) *
                        C152173 -
                    ((C76458 * C8842 + C78448 + C78448 + C151796 * C8848 +
                      C76456 * C8841 + C78449 + C78449 + C76451 * C8847) *
                         C152080 * C76455 +
                     (C78474 + C78473) * C152080 * C152233 + C78452 * C152253) *
                        C151956) *
                       C152214) *
                      C152158 +
                  ((((C76456 * C549 + C77047 + C77047 + C76451 * C573 +
                      C76458 * C548 + C77048 + C77048 + C151796 * C572) *
                         C152080 * C152253 +
                     (C77835 + C77836) * C152080 * C152233 + C78984 * C76455) *
                        C151956 -
                    (C76815 * C76455 + (C76800 + C76799) * C152080 * C152233 +
                     (C76458 * C144 + C76471 + C76471 + C151796 * C160 +
                      C76456 * C143 + C76472 + C76472 + C76451 * C159) *
                         C152080 * C152253) *
                        C152173) *
                       C1259 +
                   (((C76799 + C76800) * C152080 * C152253 +
                     (C76801 + C76802) * C152080 * C152233 + C78680 * C76455) *
                        C152173 -
                    ((C78989 + C78990) * C152080 * C76455 +
                     (C77838 + C77837) * C152080 * C152233 +
                     (C77836 + C77835) * C152080 * C152253) *
                        C151956) *
                       C1260 +
                   ((C78984 * C152253 + (C78990 + C78989) * C152080 * C152233 +
                     (C76456 * C8842 + C78982 + C78982 + C76451 * C8848 +
                      C76458 * C8843 + C78983 + C78983 + C151796 * C8849) *
                         C152080 * C76455) *
                        C151956 -
                    ((C78685 + C78686) * C152080 * C76455 +
                     (C76804 + C76803) * C152080 * C152233 + C76815 * C152253) *
                        C152173) *
                       C152214) *
                      C151834)) /
                    (p * q * std::sqrt(p + q));
    d2ee[49] += (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                 (((C76456 * C142 + C76461 + C76461 + C76451 * C158 +
                    C76458 * C143 + C76462 + C76462 + C151796 * C159) *
                       C152080 * C152253 +
                   (C76456 * C341 + C76463 + C76463 + C76451 * C365 +
                    C76458 * C340 + C76464 + C76464 + C151796 * C364) *
                       C152080 * C152233 +
                   (C76456 * C342 + C76465 + C76465 + C76451 * C366 +
                    C76458 * C343 + C76466 + C76466 + C151796 * C367) *
                       C152080 * C76455) *
                      C151869 * C151851 * C129 -
                  ((C76458 * C344 + C76467 + C76467 + C151796 * C368 +
                    C76456 * C343 + C76468 + C76468 + C76451 * C367) *
                       C152080 * C76455 +
                   (C76458 * C339 + C76469 + C76469 + C151796 * C363 +
                    C76456 * C340 + C76470 + C76470 + C76451 * C364) *
                       C152080 * C152233 +
                   (C76458 * C144 + C76471 + C76471 + C151796 * C160 +
                    C76456 * C143 + C76472 + C76472 + C76451 * C159) *
                       C152080 * C152253) *
                      C151869 * C151851 * C130 +
                  ((C76456 * C144 + C76473 + C76473 + C76451 * C160 +
                    C76458 * C145 + C76474 + C76474 + C151796 * C161) *
                       C152080 * C152253 +
                   (C76456 * C339 + C76475 + C76475 + C76451 * C363 +
                    C76458 * C338 + C76476 + C76476 + C151796 * C362) *
                       C152080 * C152233 +
                   (C76456 * C344 + C76477 + C76477 + C76451 * C368 +
                    C76458 * C345 + C76478 + C76478 + C151796 * C369) *
                       C152080 * C76455) *
                      C151869 * C151851 * C131 -
                  ((C76458 * C347 + C76479 + C76479 + C151796 * C371 +
                    C76456 * C345 + C76480 + C76480 + C76451 * C369) *
                       C152080 * C76455 +
                   (C76458 * C346 + C76481 + C76481 + C151796 * C370 +
                    C76456 * C338 + C76482 + C76482 + C76451 * C362) *
                       C152080 * C152233 +
                   (C76458 * C146 + C76483 + C76483 + C151796 * C162 +
                    C76456 * C145 + C76484 + C76484 + C76451 * C161) *
                       C152080 * C152253) *
                      C151869 * C151851 * C132 +
                  ((C76456 * C146 + C76485 + C76485 + C76451 * C162 +
                    C76458 * C147 + C76486 + C76486 + C151796 * C163) *
                       C152080 * C152253 +
                   (C76456 * C346 + C76487 + C76487 + C76451 * C370 +
                    C76458 * C348 + C76488 + C76488 + C151796 * C372) *
                       C152080 * C152233 +
                   (C76456 * C347 + C76489 + C76489 + C76451 * C371 +
                    C76458 * C349 + C76490 + C76490 + C151796 * C373) *
                       C152080 * C76455) *
                      C151869 * C151851 * C133)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                 ((((C76456 * C142 + C76461 + C76461 + C76451 * C158 +
                     C76458 * C143 + C76462 + C76462 + C151796 * C159) *
                        C152080 * C152253 +
                    (C76793 + C76794) * C152080 * C152233 + C76814 * C76455) *
                       C151869 * C152258 -
                   ((C76797 + C76798) * C152080 * C76455 +
                    (C76796 + C76795) * C152080 * C152233 +
                    (C76794 + C76793) * C152080 * C152253) *
                       C151869 * C152244 +
                   (C76814 * C152253 + (C76798 + C76797) * C152080 * C152233 +
                    (C76456 * C1357 + C76723 + C76723 + C76451 * C1373 +
                     C76458 * C1358 + C76724 + C76724 + C151796 * C1374) *
                        C152080 * C76455) *
                       C151869 * C152214) *
                      C335 +
                  (((C76799 + C76800) * C152080 * C152253 +
                    (C76801 + C76802) * C152080 * C152233 +
                    (C76803 + C76804) * C152080 * C76455) *
                       C151869 * C152244 -
                   (C76815 * C76455 + (C76800 + C76799) * C152080 * C152233 +
                    (C76458 * C144 + C76471 + C76471 + C151796 * C160 +
                     C76456 * C143 + C76472 + C76472 + C76451 * C159) *
                        C152080 * C152253) *
                       C151869 * C152258 -
                   ((C76458 * C1359 + C76739 + C76739 + C151796 * C1375 +
                     C76456 * C1358 + C76740 + C76740 + C76451 * C1374) *
                        C152080 * C76455 +
                    (C76804 + C76803) * C152080 * C152233 + C76815 * C152253) *
                       C151869 * C152214) *
                      C336 +
                  (((C76456 * C144 + C76473 + C76473 + C76451 * C160 +
                     C76458 * C145 + C76474 + C76474 + C151796 * C161) *
                        C152080 * C152253 +
                    (C76805 + C76806) * C152080 * C152233 + C76816 * C76455) *
                       C151869 * C152258 -
                   ((C76809 + C76810) * C152080 * C76455 +
                    (C76808 + C76807) * C152080 * C152233 +
                    (C76806 + C76805) * C152080 * C152253) *
                       C151869 * C152244 +
                   (C76816 * C152253 + (C76810 + C76809) * C152080 * C152233 +
                    (C76456 * C1359 + C76755 + C76755 + C76451 * C1375 +
                     C76458 * C1360 + C76756 + C76756 + C151796 * C1376) *
                        C152080 * C76455) *
                       C151869 * C152214) *
                      C152208)) /
                    (p * q * std::sqrt(p + q)) -
                (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                 ((((C76456 * C142 + C76461 + C76461 + C76451 * C158 +
                     C76458 * C143 + C76462 + C76462 + C151796 * C159) *
                        C152080 * C152253 +
                    (C76793 + C76794) * C152080 * C152233 + C76814 * C76455) *
                       C151869 * C1259 -
                   ((C76797 + C76798) * C152080 * C76455 +
                    (C76796 + C76795) * C152080 * C152233 +
                    (C76794 + C76793) * C152080 * C152253) *
                       C151869 * C1260 +
                   (C76814 * C152253 + (C76798 + C76797) * C152080 * C152233 +
                    (C76456 * C1357 + C76723 + C76723 + C76451 * C1373 +
                     C76458 * C1358 + C76724 + C76724 + C151796 * C1374) *
                        C152080 * C76455) *
                       C151869 * C152214) *
                      C152255 +
                  (((C76799 + C76800) * C152080 * C152253 +
                    (C76801 + C76802) * C152080 * C152233 +
                    (C76803 + C76804) * C152080 * C76455) *
                       C151869 * C1260 -
                   (C76815 * C76455 + (C76800 + C76799) * C152080 * C152233 +
                    (C76458 * C144 + C76471 + C76471 + C151796 * C160 +
                     C76456 * C143 + C76472 + C76472 + C76451 * C159) *
                        C152080 * C152253) *
                       C151869 * C1259 -
                   ((C76458 * C1359 + C76739 + C76739 + C151796 * C1375 +
                     C76456 * C1358 + C76740 + C76740 + C76451 * C1374) *
                        C152080 * C76455 +
                    (C76804 + C76803) * C152080 * C152233 + C76815 * C152253) *
                       C151869 * C152214) *
                      C152240 +
                  (((C76456 * C144 + C76473 + C76473 + C76451 * C160 +
                     C76458 * C145 + C76474 + C76474 + C151796 * C161) *
                        C152080 * C152253 +
                    (C76805 + C76806) * C152080 * C152233 + C76816 * C76455) *
                       C151869 * C1259 -
                   ((C76809 + C76810) * C152080 * C76455 +
                    (C76808 + C76807) * C152080 * C152233 +
                    (C76806 + C76805) * C152080 * C152253) *
                       C151869 * C1260 +
                   (C76816 * C152253 + (C76810 + C76809) * C152080 * C152233 +
                    (C76456 * C1359 + C76755 + C76755 + C76451 * C1375 +
                     C76458 * C1360 + C76756 + C76756 + C151796 * C1376) *
                        C152080 * C76455) *
                       C151869 * C152214) *
                      C152208)) /
                    (p * q * std::sqrt(p + q)) +
                (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                 (((C76456 * C142 + C76461 + C76461 + C76451 * C158 +
                    C76458 * C143 + C76462 + C76462 + C151796 * C159) *
                       C152080 * C152253 +
                   (C76793 + C76794) * C152080 * C152233 + C76814 * C76455) *
                      C151869 * C1347 -
                  (C78196 * C76455 + (C76796 + C76795) * C152080 * C152233 +
                   (C76794 + C76793) * C152080 * C152253) *
                      C151869 * C1348 +
                  (C76814 * C152253 + (C76798 + C76797) * C152080 * C152233 +
                   C78210 * C76455) *
                      C151869 * C1349 -
                  ((C78207 + C78208) * C152080 * C76455 +
                   (C78206 + C78205) * C152080 * C152233 + C78196 * C152253) *
                      C151869 * C1350 +
                  (C78210 * C152253 + (C78208 + C78207) * C152080 * C152233 +
                   (C76456 * C24769 + C78194 + C78194 + C76451 * C24773 +
                    C76458 * C24770 + C78195 + C78195 + C151796 * C24774) *
                       C152080 * C76455) *
                      C151869 * C1351) *
                 C151823) /
                    (p * q * std::sqrt(p + q));
    d2ee[50] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
              C76462 + C76462 + C151796 * C159) *
                 C152188 +
             (C85731 + C85732) * C152092) *
                C67857 +
            ((C76793 + C76794) * C152188 + C86671 * C152092) * C152068) *
               C151869 * C151910 -
           ((C78429 * C152092 + (C76796 + C76795) * C152188) * C152068 +
            (C86672 * C152092 + (C76794 + C76793) * C152188) * C67857) *
               C151869 * C151917 +
           ((C76811 * C152188 + C87421 * C152092) * C67857 +
            ((C76798 + C76797) * C152188 + C79185 * C152092) * C152068) *
               C151869 * C3585) *
              C151828 +
          ((((C76799 + C76800) * C152188 + C86673 * C152092) * C67857 +
            ((C76801 + C76802) * C152188 + C78977 * C152092) * C152068) *
               C151869 * C151917 -
           ((C86674 * C152092 + (C76800 + C76799) * C152188) * C152068 +
            ((C85736 + C85735) * C152092 +
             (C76458 * C144 + C76471 + C76471 + C151796 * C160 + C76456 * C143 +
              C76472 + C76472 + C76451 * C159) *
                 C152188) *
                C67857) *
               C151869 * C151910 -
           (((C78989 + C78990) * C152092 + (C76804 + C76803) * C152188) *
                C152068 +
            (C88067 * C152092 + C76812 * C152188) * C67857) *
               C151869 * C3585) *
              C151837 +
          ((((C76456 * C144 + C76473 + C76473 + C76451 * C160 + C76458 * C145 +
              C76474 + C76474 + C151796 * C161) *
                 C152188 +
             (C85739 + C85740) * C152092) *
                C67857 +
            ((C76805 + C76806) * C152188 + C86675 * C152092) * C152068) *
               C151869 * C151910 -
           (((C77839 + C77840) * C152092 + (C76808 + C76807) * C152188) *
                C152068 +
            (C86676 * C152092 + (C76806 + C76805) * C152188) * C67857) *
               C151869 * C151917 +
           ((C76813 * C152188 + (C77840 + C77839) * C152092) * C67857 +
            ((C76810 + C76809) * C152188 +
             (C76456 * C2055 + C77805 + C77805 + C76451 * C2063 +
              C76458 * C2056 + C77806 + C77806 + C151796 * C2064) *
                 C152092) *
                C152068) *
               C151869 * C3585) *
              C3588)) /
        (p * q * std::sqrt(p + q));
    d2ee[51] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
               C76462 + C76462 + C151796 * C159) *
                  C152188 +
              (C85731 + C85732) * C152092) *
                 C67857 +
             ((C76793 + C76794) * C152188 + C86671 * C152092) * C152068) *
                C152173 -
            ((C87419 * C152092 + C86672 * C152188) * C152068 +
             ((C85733 + C85734) * C152092 + (C85732 + C85731) * C152188) *
                 C67857) *
                C151956) *
               C151910 +
           (((C86671 * C152188 + C87420 * C152092) * C67857 +
             (C87421 * C152188 + C78477 * C152092) * C152068) *
                C151956 -
            ((C78429 * C152092 + (C76796 + C76795) * C152188) * C152068 +
             (C86672 * C152092 + (C76794 + C76793) * C152188) * C67857) *
                C152173) *
               C151917 +
           (((C76811 * C152188 + C87421 * C152092) * C67857 +
             ((C76798 + C76797) * C152188 + C79185 * C152092) * C152068) *
                C152173 -
            (((C78475 + C78476) * C152092 + C88326 * C152188) * C152068 +
             (C87422 * C152092 + C78429 * C152188) * C67857) *
                C151956) *
               C3585) *
              C3241 +
          (((((C85735 + C85736) * C152188 + (C85737 + C85738) * C152092) *
                 C67857 +
             (C86673 * C152188 + C89489 * C152092) * C152068) *
                C151956 -
            ((C86674 * C152092 + (C76800 + C76799) * C152188) * C152068 +
             ((C85736 + C85735) * C152092 +
              (C76458 * C144 + C76471 + C76471 + C151796 * C160 +
               C76456 * C143 + C76472 + C76472 + C76451 * C159) *
                  C152188) *
                 C67857) *
                C152173) *
               C151910 +
           ((((C76799 + C76800) * C152188 + C86673 * C152092) * C67857 +
             ((C76801 + C76802) * C152188 + C78977 * C152092) * C152068) *
                C152173 -
            (((C80077 + C80078) * C152092 + C88067 * C152188) * C152068 +
             (C89494 * C152092 + C86674 * C152188) * C67857) *
                C151956) *
               C151917 +
           (((C78977 * C152188 + (C80078 + C80077) * C152092) * C67857 +
             ((C78990 + C78989) * C152188 +
              (C76456 * C8065 + C80067 + C80067 + C76451 * C8071 +
               C76458 * C8066 + C80068 + C80068 + C151796 * C8072) *
                  C152092) *
                 C152068) *
                C151956 -
            (((C78989 + C78990) * C152092 + (C76804 + C76803) * C152188) *
                 C152068 +
             (C88067 * C152092 + C76812 * C152188) * C67857) *
                C152173) *
               C3585) *
              C151834)) /
        (p * q * std::sqrt(p + q));
    d2ee[52] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
              C76462 + C76462 + C151796 * C159) *
                 C152188 +
             (C85731 + C85732) * C152092) *
                C67857 +
            ((C76793 + C76794) * C152188 + C86671 * C152092) * C152068) *
               C151869 * C152265 -
           ((C78429 * C152092 + (C76796 + C76795) * C152188) * C152068 +
            (C86672 * C152092 + (C76794 + C76793) * C152188) * C67857) *
               C151869 * C152261 +
           ((C76811 * C152188 + C87421 * C152092) * C67857 +
            ((C76798 + C76797) * C152188 + C79185 * C152092) * C152068) *
               C151869 * C152249 -
           (((C79197 + C79198) * C152092 + (C78206 + C78205) * C152188) *
                C152068 +
            (C88326 * C152092 + C78183 * C152188) * C67857) *
               C151869 * C152224) *
              C3241 +
          ((((C76799 + C76800) * C152188 + C86673 * C152092) * C67857 +
            ((C76801 + C76802) * C152188 + C78977 * C152092) * C152068) *
               C151869 * C152261 -
           ((C86674 * C152092 + (C76800 + C76799) * C152188) * C152068 +
            ((C85736 + C85735) * C152092 +
             (C76458 * C144 + C76471 + C76471 + C151796 * C160 + C76456 * C143 +
              C76472 + C76472 + C76451 * C159) *
                 C152188) *
                C67857) *
               C151869 * C152265 -
           (((C78989 + C78990) * C152092 + (C76804 + C76803) * C152188) *
                C152068 +
            (C88067 * C152092 + C76812 * C152188) * C67857) *
               C151869 * C152249 +
           ((C78673 * C152188 + (C78990 + C78989) * C152092) * C67857 +
            ((C78686 + C78685) * C152188 +
             (C76456 * C8842 + C78982 + C78982 + C76451 * C8848 +
              C76458 * C8843 + C78983 + C78983 + C151796 * C8849) *
                 C152092) *
                C152068) *
               C151869 * C152224) *
              C151834)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
              C76462 + C76462 + C151796 * C159) *
                 C152188 +
             (C85731 + C85732) * C152092) *
                C67857 +
            ((C76793 + C76794) * C152188 + C86671 * C152092) * C152068) *
               C151869 * C3101 -
           ((C78429 * C152092 + (C76796 + C76795) * C152188) * C152068 +
            (C86672 * C152092 + (C76794 + C76793) * C152188) * C67857) *
               C151869 * C151914) *
              C152264 +
          ((((C76799 + C76800) * C152188 + C86673 * C152092) * C67857 +
            ((C76801 + C76802) * C152188 + C78977 * C152092) * C152068) *
               C151869 * C151914 -
           ((C86674 * C152092 + (C76800 + C76799) * C152188) * C152068 +
            ((C85736 + C85735) * C152092 +
             (C76458 * C144 + C76471 + C76471 + C151796 * C160 + C76456 * C143 +
              C76472 + C76472 + C76451 * C159) *
                 C152188) *
                C67857) *
               C151869 * C3101) *
              C152257 +
          ((((C76456 * C144 + C76473 + C76473 + C76451 * C160 + C76458 * C145 +
              C76474 + C76474 + C151796 * C161) *
                 C152188 +
             (C85739 + C85740) * C152092) *
                C67857 +
            ((C76805 + C76806) * C152188 + C86675 * C152092) * C152068) *
               C151869 * C3101 -
           (((C77839 + C77840) * C152092 + (C76808 + C76807) * C152188) *
                C152068 +
            (C86676 * C152092 + (C76806 + C76805) * C152188) * C67857) *
               C151869 * C151914) *
              C152242 +
          ((((C77283 + C77284) * C152188 + (C86011 + C86012) * C152092) *
                C67857 +
            ((C77285 + C77286) * C152188 +
             (C76456 * C1535 + C77485 + C77485 + C76451 * C1559 +
              C76458 * C1916 + C77486 + C77486 + C151796 * C1918) *
                 C152092) *
                C152068) *
               C151869 * C151914 -
           (((C86012 + C86011) * C152092 + (C77284 + C77283) * C152188) *
                C152068 +
            ((C86284 + C86283) * C152092 +
             (C76458 * C146 + C76483 + C76483 + C151796 * C162 + C76456 * C145 +
              C76484 + C76484 + C76451 * C161) *
                 C152188) *
                C67857) *
               C151869 * C3101) *
              C152218)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
               C76462 + C76462 + C151796 * C159) *
                  C152188 +
              (C85731 + C85732) * C152092) *
                 C67857 +
             ((C76793 + C76794) * C152188 + C86671 * C152092) * C152068) *
                C152259 -
            ((C87419 * C152092 + C86672 * C152188) * C152068 +
             ((C85733 + C85734) * C152092 + (C85732 + C85731) * C152188) *
                 C67857) *
                C152246 +
            (((C85734 + C85733) * C152188 + (C89097 + C89098) * C152092) *
                 C67857 +
             (C87420 * C152188 + C90031 * C152092) * C152068) *
                C152217) *
               C3101 +
           (((C86671 * C152188 + C87420 * C152092) * C67857 +
             (C87421 * C152188 + C78477 * C152092) * C152068) *
                C152246 -
            ((C78429 * C152092 + (C76796 + C76795) * C152188) * C152068 +
             (C86672 * C152092 + (C76794 + C76793) * C152188) * C67857) *
                C152259 -
            (((C80493 + C80494) * C152092 + C87422 * C152188) * C152068 +
             (C90032 * C152092 + C87419 * C152188) * C67857) *
                C152217) *
               C151914) *
              C3241 +
          (((((C85735 + C85736) * C152188 + (C85737 + C85738) * C152092) *
                 C67857 +
             (C86673 * C152188 + C89489 * C152092) * C152068) *
                C152246 -
            ((C86674 * C152092 + (C76800 + C76799) * C152188) * C152068 +
             ((C85736 + C85735) * C152092 +
              (C76458 * C144 + C76471 + C76471 + C151796 * C160 +
               C76456 * C143 + C76472 + C76472 + C76451 * C159) *
                  C152188) *
                 C67857) *
                C152259 -
            (((C89499 + C89500) * C152092 + C89494 * C152188) * C152068 +
             ((C89771 + C89772) * C152092 + (C85738 + C85737) * C152188) *
                 C67857) *
                C152217) *
               C3101 +
           ((((C76799 + C76800) * C152188 + C86673 * C152092) * C67857 +
             ((C76801 + C76802) * C152188 + C78977 * C152092) * C152068) *
                C152259 -
            (((C80077 + C80078) * C152092 + C88067 * C152188) * C152068 +
             (C89494 * C152092 + C86674 * C152188) * C67857) *
                C152246 +
            ((C89489 * C152188 + (C89500 + C89499) * C152092) * C67857 +
             ((C80078 + C80077) * C152188 +
              (C76456 * C10150 + C80279 + C80279 + C76451 * C10156 +
               C76458 * C10151 + C80280 + C80280 + C151796 * C10157) *
                  C152092) *
                 C152068) *
                C152217) *
               C151914) *
              C151834)) /
            (p * q * std::sqrt(p + q));
    d2ee[53] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
               C76462 + C76462 + C151796 * C159) *
                  C152188 +
              (C85731 + C85732) * C152092) *
                 C67857 +
             ((C76793 + C76794) * C152188 + C86671 * C152092) * C152068) *
                C152173 -
            ((C87419 * C152092 + C86672 * C152188) * C152068 +
             ((C85733 + C85734) * C152092 + (C85732 + C85731) * C152188) *
                 C67857) *
                C151956) *
               C3101 +
           (((C86671 * C152188 + C87420 * C152092) * C67857 +
             (C87421 * C152188 + C78477 * C152092) * C152068) *
                C151956 -
            ((C78429 * C152092 + (C76796 + C76795) * C152188) * C152068 +
             (C86672 * C152092 + (C76794 + C76793) * C152188) * C67857) *
                C152173) *
               C151914) *
              C151828 +
          (((((C85735 + C85736) * C152188 + (C85737 + C85738) * C152092) *
                 C67857 +
             (C86673 * C152188 + C89489 * C152092) * C152068) *
                C151956 -
            ((C86674 * C152092 + (C76800 + C76799) * C152188) * C152068 +
             ((C85736 + C85735) * C152092 +
              (C76458 * C144 + C76471 + C76471 + C151796 * C160 +
               C76456 * C143 + C76472 + C76472 + C76451 * C159) *
                  C152188) *
                 C67857) *
                C152173) *
               C3101 +
           ((((C76799 + C76800) * C152188 + C86673 * C152092) * C67857 +
             ((C76801 + C76802) * C152188 + C78977 * C152092) * C152068) *
                C152173 -
            (((C80077 + C80078) * C152092 + C88067 * C152188) * C152068 +
             (C89494 * C152092 + C86674 * C152188) * C67857) *
                C151956) *
               C151914) *
              C151837 +
          (((((C76456 * C144 + C76473 + C76473 + C76451 * C160 + C76458 * C145 +
               C76474 + C76474 + C151796 * C161) *
                  C152188 +
              (C85739 + C85740) * C152092) *
                 C67857 +
             ((C76805 + C76806) * C152188 + C86675 * C152092) * C152068) *
                C152173 -
            (((C85741 + C85742) * C152092 + C86676 * C152188) * C152068 +
             ((C85743 + C85744) * C152092 + (C85740 + C85739) * C152188) *
                 C67857) *
                C151956) *
               C3101 +
           (((C86675 * C152188 + (C85742 + C85741) * C152092) * C67857 +
             ((C77840 + C77839) * C152188 +
              (C76456 * C1541 + C77069 + C77069 + C76451 * C1565 +
               C76458 * C1542 + C77070 + C77070 + C151796 * C1566) *
                  C152092) *
                 C152068) *
                C151956 -
            (((C77839 + C77840) * C152092 + (C76808 + C76807) * C152188) *
                 C152068 +
             (C86676 * C152092 + (C76806 + C76805) * C152188) * C67857) *
                C152173) *
               C151914) *
              C3588)) /
        (p * q * std::sqrt(p + q));
    d2ee[54] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
              C76462 + C76462 + C151796 * C159) *
                 C152188 +
             (C85731 + C85732) * C152092) *
                C67857 +
            ((C76793 + C76794) * C152188 + C86671 * C152092) * C152068) *
               C151869 * C3101 -
           ((C78429 * C152092 + (C76796 + C76795) * C152188) * C152068 +
            (C86672 * C152092 + (C76794 + C76793) * C152188) * C67857) *
               C151869 * C151914) *
              C152264 +
          ((((C76799 + C76800) * C152188 + C86673 * C152092) * C67857 +
            ((C76801 + C76802) * C152188 + C78977 * C152092) * C152068) *
               C151869 * C151914 -
           ((C86674 * C152092 + (C76800 + C76799) * C152188) * C152068 +
            ((C85736 + C85735) * C152092 +
             (C76458 * C144 + C76471 + C76471 + C151796 * C160 + C76456 * C143 +
              C76472 + C76472 + C76451 * C159) *
                 C152188) *
                C67857) *
               C151869 * C3101) *
              C152257 +
          ((((C76456 * C144 + C76473 + C76473 + C76451 * C160 + C76458 * C145 +
              C76474 + C76474 + C151796 * C161) *
                 C152188 +
             (C85739 + C85740) * C152092) *
                C67857 +
            ((C76805 + C76806) * C152188 + C86675 * C152092) * C152068) *
               C151869 * C3101 -
           (((C77839 + C77840) * C152092 + (C76808 + C76807) * C152188) *
                C152068 +
            (C86676 * C152092 + (C76806 + C76805) * C152188) * C67857) *
               C151869 * C151914) *
              C152242 +
          ((((C77283 + C77284) * C152188 + (C86011 + C86012) * C152092) *
                C67857 +
            ((C77285 + C77286) * C152188 +
             (C76456 * C1535 + C77485 + C77485 + C76451 * C1559 +
              C76458 * C1916 + C77486 + C77486 + C151796 * C1918) *
                 C152092) *
                C152068) *
               C151869 * C151914 -
           (((C86012 + C86011) * C152092 + (C77284 + C77283) * C152188) *
                C152068 +
            ((C86284 + C86283) * C152092 +
             (C76458 * C146 + C76483 + C76483 + C151796 * C162 + C76456 * C145 +
              C76484 + C76484 + C76451 * C161) *
                 C152188) *
                C67857) *
               C151869 * C3101) *
              C152218)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
              C76462 + C76462 + C151796 * C159) *
                 C152188 +
             (C85731 + C85732) * C152092) *
                C67857 +
            ((C76793 + C76794) * C152188 + C86671 * C152092) * C152068) *
               C151869 * C152265 -
           ((C78429 * C152092 + (C76796 + C76795) * C152188) * C152068 +
            (C86672 * C152092 + (C76794 + C76793) * C152188) * C67857) *
               C151869 * C152261 +
           ((C76811 * C152188 + C87421 * C152092) * C67857 +
            ((C76798 + C76797) * C152188 + C79185 * C152092) * C152068) *
               C151869 * C152249 -
           (((C79197 + C79198) * C152092 + (C78206 + C78205) * C152188) *
                C152068 +
            (C88326 * C152092 + C78183 * C152188) * C67857) *
               C151869 * C152224) *
              C3241 +
          ((((C76799 + C76800) * C152188 + C86673 * C152092) * C67857 +
            ((C76801 + C76802) * C152188 + C78977 * C152092) * C152068) *
               C151869 * C152261 -
           ((C86674 * C152092 + (C76800 + C76799) * C152188) * C152068 +
            ((C85736 + C85735) * C152092 +
             (C76458 * C144 + C76471 + C76471 + C151796 * C160 + C76456 * C143 +
              C76472 + C76472 + C76451 * C159) *
                 C152188) *
                C67857) *
               C151869 * C152265 -
           (((C78989 + C78990) * C152092 + (C76804 + C76803) * C152188) *
                C152068 +
            (C88067 * C152092 + C76812 * C152188) * C67857) *
               C151869 * C152249 +
           ((C78673 * C152188 + (C78990 + C78989) * C152092) * C67857 +
            ((C78686 + C78685) * C152188 +
             (C76456 * C8842 + C78982 + C78982 + C76451 * C8848 +
              C76458 * C8843 + C78983 + C78983 + C151796 * C8849) *
                 C152092) *
                C152068) *
               C151869 * C152224) *
              C151834)) /
            (p * q * std::sqrt(p + q));
    d2ee[55] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
               C76462 + C76462 + C151796 * C159) *
                  C152188 +
              (C85731 + C85732) * C152092) *
                 C67857 +
             ((C76793 + C76794) * C152188 + C86671 * C152092) * C152068) *
                C4107 -
            ((C87419 * C152092 + C86672 * C152188) * C152068 +
             ((C85733 + C85734) * C152092 + (C85732 + C85731) * C152188) *
                 C67857) *
                C151956) *
               C151910 +
           (((C86671 * C152188 + C87420 * C152092) * C67857 +
             (C87421 * C152188 + C78477 * C152092) * C152068) *
                C151956 -
            ((C78429 * C152092 + (C76796 + C76795) * C152188) * C152068 +
             (C86672 * C152092 + (C76794 + C76793) * C152188) * C67857) *
                C4107) *
               C151917 +
           (((C76811 * C152188 + C87421 * C152092) * C67857 +
             ((C76798 + C76797) * C152188 + C79185 * C152092) * C152068) *
                C4107 -
            (((C78475 + C78476) * C152092 + C88326 * C152188) * C152068 +
             (C87422 * C152092 + C78429 * C152188) * C67857) *
                C151956) *
               C3585) *
              C152158 +
          (((((C85735 + C85736) * C152188 + (C85737 + C85738) * C152092) *
                 C67857 +
             (C86673 * C152188 + C89489 * C152092) * C152068) *
                C151956 -
            ((C86674 * C152092 + (C76800 + C76799) * C152188) * C152068 +
             ((C85736 + C85735) * C152092 +
              (C76458 * C144 + C76471 + C76471 + C151796 * C160 +
               C76456 * C143 + C76472 + C76472 + C76451 * C159) *
                  C152188) *
                 C67857) *
                C4107) *
               C151910 +
           ((((C76799 + C76800) * C152188 + C86673 * C152092) * C67857 +
             ((C76801 + C76802) * C152188 + C78977 * C152092) * C152068) *
                C4107 -
            (((C80077 + C80078) * C152092 + C88067 * C152188) * C152068 +
             (C89494 * C152092 + C86674 * C152188) * C67857) *
                C151956) *
               C151917 +
           (((C78977 * C152188 + (C80078 + C80077) * C152092) * C67857 +
             ((C78990 + C78989) * C152188 +
              (C76456 * C8065 + C80067 + C80067 + C76451 * C8071 +
               C76458 * C8066 + C80068 + C80068 + C151796 * C8072) *
                  C152092) *
                 C152068) *
                C151956 -
            (((C78989 + C78990) * C152092 + (C76804 + C76803) * C152188) *
                 C152068 +
             (C88067 * C152092 + C76812 * C152188) * C67857) *
                C4107) *
               C3585) *
              C151834)) /
        (p * q * std::sqrt(p + q));
    d2ee[56] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
              C76462 + C76462 + C151796 * C159) *
                 C152188 +
             (C85731 + C85732) * C152092) *
                C67857 +
            ((C76793 + C76794) * C152188 + C86671 * C152092) * C152068) *
               C151952 -
           ((C87419 * C152092 + C86672 * C152188) * C152068 +
            ((C85733 + C85734) * C152092 + (C85732 + C85731) * C152188) *
                C67857) *
               C151959 +
           (((C85734 + C85733) * C152188 + (C89097 + C89098) * C152092) *
                C67857 +
            (C87420 * C152188 + C90031 * C152092) * C152068) *
               C4779) *
              C151910 +
          (((C86671 * C152188 + C87420 * C152092) * C67857 +
            (C87421 * C152188 + C78477 * C152092) * C152068) *
               C151959 -
           ((C78429 * C152092 + (C76796 + C76795) * C152188) * C152068 +
            (C86672 * C152092 + (C76794 + C76793) * C152188) * C67857) *
               C151952 -
           (((C80493 + C80494) * C152092 + C87422 * C152188) * C152068 +
            (C90032 * C152092 + C87419 * C152188) * C67857) *
               C4779) *
              C151917 +
          (((C76811 * C152188 + C87421 * C152092) * C67857 +
            ((C76798 + C76797) * C152188 + C79185 * C152092) * C152068) *
               C151952 -
           (((C78475 + C78476) * C152092 + C88326 * C152188) * C152068 +
            (C87422 * C152092 + C78429 * C152188) * C67857) *
               C151959 +
           ((C78477 * C152188 + (C80494 + C80493) * C152092) * C67857 +
            ((C78476 + C78475) * C152188 +
             (C76456 * C27085 + C80483 + C80483 + C76451 * C27089 +
              C76458 * C27086 + C80484 + C80484 + C151796 * C27090) *
                 C152092) *
                C152068) *
               C4779) *
              C3585) *
         C151823) /
        (p * q * std::sqrt(p + q));
    d2ee[57] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
              C76462 + C76462 + C151796 * C159) *
                 C152188 +
             (C85731 + C85732) * C152092) *
                C67857 +
            ((C76793 + C76794) * C152188 + C86671 * C152092) * C152068) *
               C4107 -
           ((C87419 * C152092 + C86672 * C152188) * C152068 +
            ((C85733 + C85734) * C152092 + (C85732 + C85731) * C152188) *
                C67857) *
               C151956) *
              C152265 +
          (((C86671 * C152188 + C87420 * C152092) * C67857 +
            (C87421 * C152188 + C78477 * C152092) * C152068) *
               C151956 -
           ((C78429 * C152092 + (C76796 + C76795) * C152188) * C152068 +
            (C86672 * C152092 + (C76794 + C76793) * C152188) * C67857) *
               C4107) *
              C152261 +
          (((C76811 * C152188 + C87421 * C152092) * C67857 +
            ((C76798 + C76797) * C152188 + C79185 * C152092) * C152068) *
               C4107 -
           (((C78475 + C78476) * C152092 + C88326 * C152188) * C152068 +
            (C87422 * C152092 + C78429 * C152188) * C67857) *
               C151956) *
              C152249 +
          (((C79185 * C152188 + (C78476 + C78475) * C152092) * C67857 +
            ((C79198 + C79197) * C152188 +
             (C76456 * C25021 + C78450 + C78450 + C76451 * C25025 +
              C76458 * C25022 + C78451 + C78451 + C151796 * C25026) *
                 C152092) *
                C152068) *
               C151956 -
           (((C79197 + C79198) * C152092 + (C78206 + C78205) * C152188) *
                C152068 +
            (C88326 * C152092 + C78183 * C152188) * C67857) *
               C4107) *
              C152224) *
         C151823) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
               C76462 + C76462 + C151796 * C159) *
                  C152188 +
              (C85731 + C85732) * C152092) *
                 C67857 +
             ((C76793 + C76794) * C152188 + C86671 * C152092) * C152068) *
                C4107 -
            ((C87419 * C152092 + C86672 * C152188) * C152068 +
             ((C85733 + C85734) * C152092 + (C85732 + C85731) * C152188) *
                 C67857) *
                C151956) *
               C3101 +
           (((C86671 * C152188 + C87420 * C152092) * C67857 +
             (C87421 * C152188 + C78477 * C152092) * C152068) *
                C151956 -
            ((C78429 * C152092 + (C76796 + C76795) * C152188) * C152068 +
             (C86672 * C152092 + (C76794 + C76793) * C152188) * C67857) *
                C4107) *
               C151914) *
              C152255 +
          (((((C85735 + C85736) * C152188 + (C85737 + C85738) * C152092) *
                 C67857 +
             (C86673 * C152188 + C89489 * C152092) * C152068) *
                C151956 -
            ((C86674 * C152092 + (C76800 + C76799) * C152188) * C152068 +
             ((C85736 + C85735) * C152092 +
              (C76458 * C144 + C76471 + C76471 + C151796 * C160 +
               C76456 * C143 + C76472 + C76472 + C76451 * C159) *
                  C152188) *
                 C67857) *
                C4107) *
               C3101 +
           ((((C76799 + C76800) * C152188 + C86673 * C152092) * C67857 +
             ((C76801 + C76802) * C152188 + C78977 * C152092) * C152068) *
                C4107 -
            (((C80077 + C80078) * C152092 + C88067 * C152188) * C152068 +
             (C89494 * C152092 + C86674 * C152188) * C67857) *
                C151956) *
               C151914) *
              C152240 +
          (((((C76456 * C144 + C76473 + C76473 + C76451 * C160 + C76458 * C145 +
               C76474 + C76474 + C151796 * C161) *
                  C152188 +
              (C85739 + C85740) * C152092) *
                 C67857 +
             ((C76805 + C76806) * C152188 + C86675 * C152092) * C152068) *
                C4107 -
            (((C85741 + C85742) * C152092 + C86676 * C152188) * C152068 +
             ((C85743 + C85744) * C152092 + (C85740 + C85739) * C152188) *
                 C67857) *
                C151956) *
               C3101 +
           (((C86675 * C152188 + (C85742 + C85741) * C152092) * C67857 +
             ((C77840 + C77839) * C152188 +
              (C76456 * C1541 + C77069 + C77069 + C76451 * C1565 +
               C76458 * C1542 + C77070 + C77070 + C151796 * C1566) *
                  C152092) *
                 C152068) *
                C151956 -
            (((C77839 + C77840) * C152092 + (C76808 + C76807) * C152188) *
                 C152068 +
             (C86676 * C152092 + (C76806 + C76805) * C152188) * C67857) *
                C4107) *
               C151914) *
              C152208)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
              C76462 + C76462 + C151796 * C159) *
                 C152188 +
             (C85731 + C85732) * C152092) *
                C67857 +
            ((C76793 + C76794) * C152188 + C86671 * C152092) * C152068) *
               C152266 -
           ((C87419 * C152092 + C86672 * C152188) * C152068 +
            ((C85733 + C85734) * C152092 + (C85732 + C85731) * C152188) *
                C67857) *
               C152263 +
           (((C85734 + C85733) * C152188 + (C89097 + C89098) * C152092) *
                C67857 +
            (C87420 * C152188 + C90031 * C152092) * C152068) *
               C152252 -
           (((C89099 + C89100) * C152092 + C90032 * C152188) * C152068 +
            ((C89101 + C89102) * C152092 + (C89098 + C89097) * C152188) *
                C67857) *
               C152230) *
              C3101 +
          (((C86671 * C152188 + C87420 * C152092) * C67857 +
            (C87421 * C152188 + C78477 * C152092) * C152068) *
               C152263 -
           ((C78429 * C152092 + (C76796 + C76795) * C152188) * C152068 +
            (C86672 * C152092 + (C76794 + C76793) * C152188) * C67857) *
               C152266 -
           (((C80493 + C80494) * C152092 + C87422 * C152188) * C152068 +
            (C90032 * C152092 + C87419 * C152188) * C67857) *
               C152252 +
           ((C90031 * C152188 + (C89100 + C89099) * C152092) * C67857 +
            ((C80494 + C80493) * C152188 +
             (C76456 * C26361 + C79767 + C79767 + C76451 * C26365 +
              C76458 * C26362 + C79768 + C79768 + C151796 * C26366) *
                 C152092) *
                C152068) *
               C152230) *
              C151914) *
         C151823) /
            (p * q * std::sqrt(p + q));
    d2ee[58] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
               C76462 + C76462 + C151796 * C159) *
                  C152188 +
              (C85731 + C85732) * C152092) *
                 C67857 +
             ((C76793 + C76794) * C152188 + C86671 * C152092) * C152068) *
                C151952 -
            ((C87419 * C152092 + C86672 * C152188) * C152068 +
             ((C85733 + C85734) * C152092 + (C85732 + C85731) * C152188) *
                 C67857) *
                C151959 +
            (((C85734 + C85733) * C152188 + (C89097 + C89098) * C152092) *
                 C67857 +
             (C87420 * C152188 + C90031 * C152092) * C152068) *
                C4779) *
               C3101 +
           (((C86671 * C152188 + C87420 * C152092) * C67857 +
             (C87421 * C152188 + C78477 * C152092) * C152068) *
                C151959 -
            ((C78429 * C152092 + (C76796 + C76795) * C152188) * C152068 +
             (C86672 * C152092 + (C76794 + C76793) * C152188) * C67857) *
                C151952 -
            (((C80493 + C80494) * C152092 + C87422 * C152188) * C152068 +
             (C90032 * C152092 + C87419 * C152188) * C67857) *
                C4779) *
               C151914) *
              C152158 +
          (((((C85735 + C85736) * C152188 + (C85737 + C85738) * C152092) *
                 C67857 +
             (C86673 * C152188 + C89489 * C152092) * C152068) *
                C151959 -
            ((C86674 * C152092 + (C76800 + C76799) * C152188) * C152068 +
             ((C85736 + C85735) * C152092 +
              (C76458 * C144 + C76471 + C76471 + C151796 * C160 +
               C76456 * C143 + C76472 + C76472 + C76451 * C159) *
                  C152188) *
                 C67857) *
                C151952 -
            (((C89499 + C89500) * C152092 + C89494 * C152188) * C152068 +
             ((C89771 + C89772) * C152092 + (C85738 + C85737) * C152188) *
                 C67857) *
                C4779) *
               C3101 +
           ((((C76799 + C76800) * C152188 + C86673 * C152092) * C67857 +
             ((C76801 + C76802) * C152188 + C78977 * C152092) * C152068) *
                C151952 -
            (((C80077 + C80078) * C152092 + C88067 * C152188) * C152068 +
             (C89494 * C152092 + C86674 * C152188) * C67857) *
                C151959 +
            ((C89489 * C152188 + (C89500 + C89499) * C152092) * C67857 +
             ((C80078 + C80077) * C152188 +
              (C76456 * C10150 + C80279 + C80279 + C76451 * C10156 +
               C76458 * C10151 + C80280 + C80280 + C151796 * C10157) *
                  C152092) *
                 C152068) *
                C4779) *
               C151914) *
              C151834)) /
        (p * q * std::sqrt(p + q));
    d2ee[59] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
               C76462 + C76462 + C151796 * C159) *
                  C152188 +
              (C85731 + C85732) * C152092) *
                 C67857 +
             ((C76793 + C76794) * C152188 + C86671 * C152092) * C152068) *
                C4107 -
            ((C87419 * C152092 + C86672 * C152188) * C152068 +
             ((C85733 + C85734) * C152092 + (C85732 + C85731) * C152188) *
                 C67857) *
                C151956) *
               C3101 +
           (((C86671 * C152188 + C87420 * C152092) * C67857 +
             (C87421 * C152188 + C78477 * C152092) * C152068) *
                C151956 -
            ((C78429 * C152092 + (C76796 + C76795) * C152188) * C152068 +
             (C86672 * C152092 + (C76794 + C76793) * C152188) * C67857) *
                C4107) *
               C151914) *
              C152255 +
          (((((C85735 + C85736) * C152188 + (C85737 + C85738) * C152092) *
                 C67857 +
             (C86673 * C152188 + C89489 * C152092) * C152068) *
                C151956 -
            ((C86674 * C152092 + (C76800 + C76799) * C152188) * C152068 +
             ((C85736 + C85735) * C152092 +
              (C76458 * C144 + C76471 + C76471 + C151796 * C160 +
               C76456 * C143 + C76472 + C76472 + C76451 * C159) *
                  C152188) *
                 C67857) *
                C4107) *
               C3101 +
           ((((C76799 + C76800) * C152188 + C86673 * C152092) * C67857 +
             ((C76801 + C76802) * C152188 + C78977 * C152092) * C152068) *
                C4107 -
            (((C80077 + C80078) * C152092 + C88067 * C152188) * C152068 +
             (C89494 * C152092 + C86674 * C152188) * C67857) *
                C151956) *
               C151914) *
              C152240 +
          (((((C76456 * C144 + C76473 + C76473 + C76451 * C160 + C76458 * C145 +
               C76474 + C76474 + C151796 * C161) *
                  C152188 +
              (C85739 + C85740) * C152092) *
                 C67857 +
             ((C76805 + C76806) * C152188 + C86675 * C152092) * C152068) *
                C4107 -
            (((C85741 + C85742) * C152092 + C86676 * C152188) * C152068 +
             ((C85743 + C85744) * C152092 + (C85740 + C85739) * C152188) *
                 C67857) *
                C151956) *
               C3101 +
           (((C86675 * C152188 + (C85742 + C85741) * C152092) * C67857 +
             ((C77840 + C77839) * C152188 +
              (C76456 * C1541 + C77069 + C77069 + C76451 * C1565 +
               C76458 * C1542 + C77070 + C77070 + C151796 * C1566) *
                  C152092) *
                 C152068) *
                C151956 -
            (((C77839 + C77840) * C152092 + (C76808 + C76807) * C152188) *
                 C152068 +
             (C86676 * C152092 + (C76806 + C76805) * C152188) * C67857) *
                C4107) *
               C151914) *
              C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
              C76462 + C76462 + C151796 * C159) *
                 C152188 +
             (C85731 + C85732) * C152092) *
                C67857 +
            ((C76793 + C76794) * C152188 + C86671 * C152092) * C152068) *
               C4107 -
           ((C87419 * C152092 + C86672 * C152188) * C152068 +
            ((C85733 + C85734) * C152092 + (C85732 + C85731) * C152188) *
                C67857) *
               C151956) *
              C152265 +
          (((C86671 * C152188 + C87420 * C152092) * C67857 +
            (C87421 * C152188 + C78477 * C152092) * C152068) *
               C151956 -
           ((C78429 * C152092 + (C76796 + C76795) * C152188) * C152068 +
            (C86672 * C152092 + (C76794 + C76793) * C152188) * C67857) *
               C4107) *
              C152261 +
          (((C76811 * C152188 + C87421 * C152092) * C67857 +
            ((C76798 + C76797) * C152188 + C79185 * C152092) * C152068) *
               C4107 -
           (((C78475 + C78476) * C152092 + C88326 * C152188) * C152068 +
            (C87422 * C152092 + C78429 * C152188) * C67857) *
               C151956) *
              C152249 +
          (((C79185 * C152188 + (C78476 + C78475) * C152092) * C67857 +
            ((C79198 + C79197) * C152188 +
             (C76456 * C25021 + C78450 + C78450 + C76451 * C25025 +
              C76458 * C25022 + C78451 + C78451 + C151796 * C25026) *
                 C152092) *
                C152068) *
               C151956 -
           (((C79197 + C79198) * C152092 + (C78206 + C78205) * C152188) *
                C152068 +
            (C88326 * C152092 + C78183 * C152188) * C67857) *
               C4107) *
              C152224) *
         C151823) /
            (p * q * std::sqrt(p + q));
    d2ee[60] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
              C76462 + C76462 + C151796 * C159) *
                 C152188 +
             (C85731 + C85732) * C152092) *
                C67857 +
            ((C76793 + C76794) * C152188 + C86671 * C152092) * C152068) *
               C151869 * C1709 -
           ((C78429 * C152092 + (C76796 + C76795) * C152188) * C152068 +
            (C86672 * C152092 + (C76794 + C76793) * C152188) * C67857) *
               C151869 * C1710 +
           ((C76811 * C152188 + C87421 * C152092) * C67857 +
            ((C76798 + C76797) * C152188 + C79185 * C152092) * C152068) *
               C151869 * C1711 -
           (((C79197 + C79198) * C152092 + (C78206 + C78205) * C152188) *
                C152068 +
            ((C78474 + C78473) * C152092 + C78183 * C152188) * C67857) *
               C151869 * C152224) *
              C152158 +
          ((((C76799 + C76800) * C152188 + C86673 * C152092) * C67857 +
            ((C76801 + C76802) * C152188 + C78977 * C152092) * C152068) *
               C151869 * C1710 -
           ((C86674 * C152092 + (C76800 + C76799) * C152188) * C152068 +
            ((C85736 + C85735) * C152092 +
             (C76458 * C144 + C76471 + C76471 + C151796 * C160 + C76456 * C143 +
              C76472 + C76472 + C76451 * C159) *
                 C152188) *
                C67857) *
               C151869 * C1709 -
           (((C78989 + C78990) * C152092 + (C76804 + C76803) * C152188) *
                C152068 +
            ((C77838 + C77837) * C152092 + C76812 * C152188) * C67857) *
               C151869 * C1711 +
           ((C78673 * C152188 + (C78990 + C78989) * C152092) * C67857 +
            ((C78686 + C78685) * C152188 +
             (C76456 * C8842 + C78982 + C78982 + C76451 * C8848 +
              C76458 * C8843 + C78983 + C78983 + C151796 * C8849) *
                 C152092) *
                C152068) *
               C151869 * C152224) *
              C151834)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
              C76462 + C76462 + C151796 * C159) *
                 C152188 +
             (C85731 + C85732) * C152092) *
                C67857 +
            ((C76793 + C76794) * C152188 + (C77834 + C77833) * C152092) *
                C152068) *
               C151869 * C152172 -
           ((C78429 * C152092 + (C76796 + C76795) * C152188) * C152068 +
            ((C77833 + C77834) * C152092 + (C76794 + C76793) * C152188) *
                C67857) *
               C151869 * C151914) *
              C739 +
          ((((C76799 + C76800) * C152188 + (C77835 + C77836) * C152092) *
                C67857 +
            ((C76801 + C76802) * C152188 + C78977 * C152092) * C152068) *
               C151869 * C151914 -
           (((C77836 + C77835) * C152092 + (C76800 + C76799) * C152188) *
                C152068 +
            ((C85736 + C85735) * C152092 +
             (C76458 * C144 + C76471 + C76471 + C151796 * C160 + C76456 * C143 +
              C76472 + C76472 + C76451 * C159) *
                 C152188) *
                C67857) *
               C151869 * C152172) *
              C740 +
          ((((C76456 * C144 + C76473 + C76473 + C76451 * C160 + C76458 * C145 +
              C76474 + C76474 + C151796 * C161) *
                 C152188 +
             (C85739 + C85740) * C152092) *
                C67857 +
            ((C76805 + C76806) * C152188 + (C77842 + C77841) * C152092) *
                C152068) *
               C151869 * C152172 -
           (((C77839 + C77840) * C152092 + (C76808 + C76807) * C152188) *
                C152068 +
            ((C77841 + C77842) * C152092 + (C76806 + C76805) * C152188) *
                C67857) *
               C151869 * C151914) *
              C741 +
          ((((C77283 + C77284) * C152188 + (C86011 + C86012) * C152092) *
                C67857 +
            ((C77285 + C77286) * C152188 +
             (C76456 * C1535 + C77485 + C77485 + C76451 * C1559 +
              C76458 * C1916 + C77486 + C77486 + C151796 * C1918) *
                 C152092) *
                C152068) *
               C151869 * C151914 -
           (((C86012 + C86011) * C152092 + (C77284 + C77283) * C152188) *
                C152068 +
            ((C76458 * C555 + C77482 + C77482 + C151796 * C579 + C76456 * C547 +
              C77481 + C77481 + C76451 * C571) *
                 C152092 +
             (C76458 * C146 + C76483 + C76483 + C151796 * C162 + C76456 * C145 +
              C76484 + C76484 + C76451 * C161) *
                 C152188) *
                C67857) *
               C151869 * C152172) *
              C152218)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
               C76462 + C76462 + C151796 * C159) *
                  C152188 +
              (C85731 + C85732) * C152092) *
                 C67857 +
             ((C76793 + C76794) * C152188 + C86671 * C152092) * C152068) *
                C2215 -
            ((C87419 * C152092 + C86672 * C152188) * C152068 +
             ((C85733 + C85734) * C152092 + (C85732 + C85731) * C152188) *
                 C67857) *
                C2216 +
            (((C85734 + C85733) * C152188 + (C89097 + C89098) * C152092) *
                 C67857 +
             (C87420 * C152188 + (C80496 + C80495) * C152092) * C152068) *
                C152217) *
               C152172 +
           (((C86671 * C152188 + C87420 * C152092) * C67857 +
             (C87421 * C152188 + C78477 * C152092) * C152068) *
                C2216 -
            ((C78429 * C152092 + (C76796 + C76795) * C152188) * C152068 +
             (C86672 * C152092 + (C76794 + C76793) * C152188) * C67857) *
                C2215 -
            (((C80493 + C80494) * C152092 + C87422 * C152188) * C152068 +
             ((C80495 + C80496) * C152092 + C87419 * C152188) * C67857) *
                C152217) *
               C151914) *
              C152158 +
          (((((C85735 + C85736) * C152188 + (C85737 + C85738) * C152092) *
                 C67857 +
             (C86673 * C152188 + C89489 * C152092) * C152068) *
                C2216 -
            ((C86674 * C152092 + (C76800 + C76799) * C152188) * C152068 +
             ((C85736 + C85735) * C152092 +
              (C76458 * C144 + C76471 + C76471 + C151796 * C160 +
               C76456 * C143 + C76472 + C76472 + C76451 * C159) *
                  C152188) *
                 C67857) *
                C2215 -
            (((C89499 + C89500) * C152092 + C89494 * C152188) * C152068 +
             ((C76458 * C2452 + C80276 + C80276 + C151796 * C2468 +
               C76456 * C2453 + C80275 + C80275 + C76451 * C2469) *
                  C152092 +
              (C85738 + C85737) * C152188) *
                 C67857) *
                C152217) *
               C152172 +
           ((((C76799 + C76800) * C152188 + C86673 * C152092) * C67857 +
             ((C76801 + C76802) * C152188 + C78977 * C152092) * C152068) *
                C2215 -
            (((C80077 + C80078) * C152092 + C88067 * C152188) * C152068 +
             (C89494 * C152092 + C86674 * C152188) * C67857) *
                C2216 +
            ((C89489 * C152188 + (C89500 + C89499) * C152092) * C67857 +
             ((C80078 + C80077) * C152188 +
              (C76456 * C10150 + C80279 + C80279 + C76451 * C10156 +
               C76458 * C10151 + C80280 + C80280 + C151796 * C10157) *
                  C152092) *
                 C152068) *
                C152217) *
               C151914) *
              C151834)) /
            (p * q * std::sqrt(p + q));
    d2ee[61] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
              C76462 + C76462 + C151796 * C159) *
                 C152188 +
             (C85731 + C85732) * C152092) *
                C67857 +
            ((C76793 + C76794) * C152188 + C86671 * C152092) * C152068) *
               C152173 -
           ((C87419 * C152092 + C86672 * C152188) * C152068 +
            ((C85733 + C85734) * C152092 + (C85732 + C85731) * C152188) *
                C67857) *
               C151956) *
              C1709 +
          (((C86671 * C152188 + C87420 * C152092) * C67857 +
            (C87421 * C152188 + C78477 * C152092) * C152068) *
               C151956 -
           ((C78429 * C152092 + (C76796 + C76795) * C152188) * C152068 +
            (C86672 * C152092 + (C76794 + C76793) * C152188) * C67857) *
               C152173) *
              C1710 +
          (((C76811 * C152188 + C87421 * C152092) * C67857 +
            ((C76798 + C76797) * C152188 + C79185 * C152092) * C152068) *
               C152173 -
           (((C78475 + C78476) * C152092 + C88326 * C152188) * C152068 +
            (C87422 * C152092 + C78429 * C152188) * C67857) *
               C151956) *
              C1711 +
          (((C79185 * C152188 + (C78476 + C78475) * C152092) * C67857 +
            ((C79198 + C79197) * C152188 +
             (C76456 * C25021 + C78450 + C78450 + C76451 * C25025 +
              C76458 * C25022 + C78451 + C78451 + C151796 * C25026) *
                 C152092) *
                C152068) *
               C151956 -
           (((C79197 + C79198) * C152092 + (C78206 + C78205) * C152188) *
                C152068 +
            (C88326 * C152092 + C78183 * C152188) * C67857) *
               C152173) *
              C152224) *
         C151823) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
               C76462 + C76462 + C151796 * C159) *
                  C152188 +
              (C85731 + C85732) * C152092) *
                 C67857 +
             ((C76793 + C76794) * C152188 + C86671 * C152092) * C152068) *
                C152173 -
            (((C78470 + C78469) * C152092 + C86672 * C152188) * C152068 +
             ((C85733 + C85734) * C152092 + (C85732 + C85731) * C152188) *
                 C67857) *
                C151956) *
               C152172 +
           (((C86671 * C152188 + (C78469 + C78470) * C152092) * C67857 +
             ((C77832 + C77831) * C152188 + C78477 * C152092) * C152068) *
                C151956 -
            ((C78429 * C152092 + (C76796 + C76795) * C152188) * C152068 +
             (C86672 * C152092 + (C76794 + C76793) * C152188) * C67857) *
                C152173) *
               C151914) *
              C335 +
          (((((C85735 + C85736) * C152188 + (C85737 + C85738) * C152092) *
                 C67857 +
             (C86673 * C152188 + (C80080 + C80079) * C152092) * C152068) *
                C151956 -
            ((C86674 * C152092 + (C76800 + C76799) * C152188) * C152068 +
             ((C85736 + C85735) * C152092 +
              (C76458 * C144 + C76471 + C76471 + C151796 * C160 +
               C76456 * C143 + C76472 + C76472 + C76451 * C159) *
                  C152188) *
                 C67857) *
                C152173) *
               C152172 +
           ((((C76799 + C76800) * C152188 + C86673 * C152092) * C67857 +
             ((C76801 + C76802) * C152188 + C78977 * C152092) * C152068) *
                C152173 -
            (((C80077 + C80078) * C152092 + (C77838 + C77837) * C152188) *
                 C152068 +
             ((C80079 + C80080) * C152092 + C86674 * C152188) * C67857) *
                C151956) *
               C151914) *
              C336 +
          (((((C76456 * C144 + C76473 + C76473 + C76451 * C160 + C76458 * C145 +
               C76474 + C76474 + C151796 * C161) *
                  C152188 +
              (C85739 + C85740) * C152092) *
                 C67857 +
             ((C76805 + C76806) * C152188 + C86675 * C152092) * C152068) *
                C152173 -
            (((C85741 + C85742) * C152092 + C86676 * C152188) * C152068 +
             ((C85743 + C85744) * C152092 + (C85740 + C85739) * C152188) *
                 C67857) *
                C151956) *
               C152172 +
           (((C86675 * C152188 + (C85742 + C85741) * C152092) * C67857 +
             ((C77840 + C77839) * C152188 +
              (C76456 * C1541 + C77069 + C77069 + C76451 * C1565 +
               C76458 * C1542 + C77070 + C77070 + C151796 * C1566) *
                  C152092) *
                 C152068) *
                C151956 -
            (((C77839 + C77840) * C152092 + (C76808 + C76807) * C152188) *
                 C152068 +
             (C86676 * C152092 + (C76806 + C76805) * C152188) * C67857) *
                C152173) *
               C151914) *
              C152208)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
              C76462 + C76462 + C151796 * C159) *
                 C152188 +
             (C85731 + C85732) * C152092) *
                C67857 +
            ((C76793 + C76794) * C152188 + C86671 * C152092) * C152068) *
               C2814 -
           ((C87419 * C152092 + C86672 * C152188) * C152068 +
            ((C85733 + C85734) * C152092 + (C85732 + C85731) * C152188) *
                C67857) *
               C2815 +
           (((C85734 + C85733) * C152188 + (C89097 + C89098) * C152092) *
                C67857 +
            (C87420 * C152188 + C90031 * C152092) * C152068) *
               C2816 -
           (((C89099 + C89100) * C152092 + C90032 * C152188) * C152068 +
            ((C89101 + C89102) * C152092 + (C89098 + C89097) * C152188) *
                C67857) *
               C152230) *
              C152172 +
          (((C86671 * C152188 + C87420 * C152092) * C67857 +
            (C87421 * C152188 + C78477 * C152092) * C152068) *
               C2815 -
           ((C78429 * C152092 + (C76796 + C76795) * C152188) * C152068 +
            (C86672 * C152092 + (C76794 + C76793) * C152188) * C67857) *
               C2814 -
           (((C80493 + C80494) * C152092 + C87422 * C152188) * C152068 +
            (C90032 * C152092 + C87419 * C152188) * C67857) *
               C2816 +
           ((C90031 * C152188 + (C89100 + C89099) * C152092) * C67857 +
            ((C80494 + C80493) * C152188 +
             (C76456 * C26361 + C79767 + C79767 + C76451 * C26365 +
              C76458 * C26362 + C79768 + C79768 + C151796 * C26366) *
                 C152092) *
                C152068) *
               C152230) *
              C151914) *
         C151823) /
            (p * q * std::sqrt(p + q));
    d2ee[62] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C76456 * C142 + C76461 + C76461 + C76451 * C158 +
                 C76458 * C143 + C76462 + C76462 + C151796 * C159) *
                    C152188 +
                (C76456 * C550 + C77040 + C77040 + C76451 * C574 +
                 C76458 * C549 + C77039 + C77039 + C151796 * C573) *
                    C152092) *
                   C67857 +
               ((C76793 + C76794) * C152188 + (C77834 + C77833) * C152092) *
                   C152068) *
                  C151869 * C151851 * C129 -
              (((C77836 + C77835) * C152092 + (C76800 + C76799) * C152188) *
                   C152068 +
               ((C76458 * C548 + C77048 + C77048 + C151796 * C572 +
                 C76456 * C549 + C77047 + C77047 + C76451 * C573) *
                    C152092 +
                (C76458 * C144 + C76471 + C76471 + C151796 * C160 +
                 C76456 * C143 + C76472 + C76472 + C76451 * C159) *
                    C152188) *
                   C67857) *
                  C151869 * C151851 * C130 +
              (((C76456 * C144 + C76473 + C76473 + C76451 * C160 +
                 C76458 * C145 + C76474 + C76474 + C151796 * C161) *
                    C152188 +
                (C76456 * C548 + C77064 + C77064 + C76451 * C572 +
                 C76458 * C547 + C77063 + C77063 + C151796 * C571) *
                    C152092) *
                   C67857 +
               ((C76805 + C76806) * C152188 + (C77842 + C77841) * C152092) *
                   C152068) *
                  C151869 * C151851 * C131 -
              (((C76458 * C1087 + C77484 + C77484 + C151796 * C1099 +
                 C76456 * C1086 + C77483 + C77483 + C76451 * C1098) *
                    C152092 +
                (C77284 + C77283) * C152188) *
                   C152068 +
               ((C76458 * C555 + C77482 + C77482 + C151796 * C579 +
                 C76456 * C547 + C77481 + C77481 + C76451 * C571) *
                    C152092 +
                (C76458 * C146 + C76483 + C76483 + C151796 * C162 +
                 C76456 * C145 + C76484 + C76484 + C76451 * C161) *
                    C152188) *
                   C67857) *
                  C151869 * C151851 * C132 +
              (((C76456 * C146 + C76485 + C76485 + C76451 * C162 +
                 C76458 * C147 + C76486 + C76486 + C151796 * C163) *
                    C152188 +
                (C76456 * C555 + C85087 + C85087 + C76451 * C579 +
                 C76458 * C557 + C85088 + C85088 + C151796 * C581) *
                    C152092) *
                   C67857 +
               ((C76456 * C346 + C76487 + C76487 + C76451 * C370 +
                 C76458 * C348 + C76488 + C76488 + C151796 * C372) *
                    C152188 +
                (C76456 * C1087 + C85089 + C85089 + C76451 * C1099 +
                 C76458 * C1088 + C85090 + C85090 + C151796 * C1100) *
                    C152092) *
                   C152068) *
                  C151869 * C151851 * C133) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C76456 * C142 + C76461 + C76461 + C76451 * C158 +
                  C76458 * C143 + C76462 + C76462 + C151796 * C159) *
                     C152188 +
                 (C76456 * C550 + C77040 + C77040 + C76451 * C574 +
                  C76458 * C549 + C77039 + C77039 + C151796 * C573) *
                     C152092) *
                    C67857 +
                ((C76793 + C76794) * C152188 + (C77834 + C77833) * C152092) *
                    C152068) *
                   C151869 * C152258 -
               ((C78429 * C152092 + (C76796 + C76795) * C152188) * C152068 +
                ((C77833 + C77834) * C152092 + (C76794 + C76793) * C152188) *
                    C67857) *
                   C151869 * C152244 +
               ((C76811 * C152188 + (C77832 + C77831) * C152092) * C67857 +
                ((C76798 + C76797) * C152188 + C79185 * C152092) * C152068) *
                   C151869 * C152214) *
                  C335 +
              ((((C76799 + C76800) * C152188 + (C77835 + C77836) * C152092) *
                    C67857 +
                ((C76801 + C76802) * C152188 + C78977 * C152092) * C152068) *
                   C151869 * C152244 -
               (((C77836 + C77835) * C152092 + (C76800 + C76799) * C152188) *
                    C152068 +
                ((C76458 * C548 + C77048 + C77048 + C151796 * C572 +
                  C76456 * C549 + C77047 + C77047 + C76451 * C573) *
                     C152092 +
                 (C76458 * C144 + C76471 + C76471 + C151796 * C160 +
                  C76456 * C143 + C76472 + C76472 + C76451 * C159) *
                     C152188) *
                    C67857) *
                   C151869 * C152258 -
               (((C78989 + C78990) * C152092 + (C76804 + C76803) * C152188) *
                    C152068 +
                ((C77838 + C77837) * C152092 + C76812 * C152188) * C67857) *
                   C151869 * C152214) *
                  C336 +
              ((((C76456 * C144 + C76473 + C76473 + C76451 * C160 +
                  C76458 * C145 + C76474 + C76474 + C151796 * C161) *
                     C152188 +
                 (C76456 * C548 + C77064 + C77064 + C76451 * C572 +
                  C76458 * C547 + C77063 + C77063 + C151796 * C571) *
                     C152092) *
                    C67857 +
                ((C76805 + C76806) * C152188 + (C77842 + C77841) * C152092) *
                    C152068) *
                   C151869 * C152258 -
               (((C77839 + C77840) * C152092 + (C76808 + C76807) * C152188) *
                    C152068 +
                ((C77841 + C77842) * C152092 + (C76806 + C76805) * C152188) *
                    C67857) *
                   C151869 * C152244 +
               ((C76813 * C152188 + (C77840 + C77839) * C152092) * C67857 +
                ((C76810 + C76809) * C152188 +
                 (C76456 * C2055 + C77805 + C77805 + C76451 * C2063 +
                  C76458 * C2056 + C77806 + C77806 + C151796 * C2064) *
                     C152092) *
                    C152068) *
                   C151869 * C152214) *
                  C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
              C76462 + C76462 + C151796 * C159) *
                 C152188 +
             (C85731 + C85732) * C152092) *
                C67857 +
            ((C76793 + C76794) * C152188 + (C77834 + C77833) * C152092) *
                C152068) *
               C152259 -
           (((C78470 + C78469) * C152092 + (C77833 + C77834) * C152188) *
                C152068 +
            ((C85733 + C85734) * C152092 + (C85732 + C85731) * C152188) *
                C67857) *
               C152246 +
           (((C85734 + C85733) * C152188 +
             (C76456 * C2454 + C79762 + C79762 + C76451 * C2470 +
              C76458 * C2453 + C79761 + C79761 + C151796 * C2469) *
                 C152092) *
                C67857 +
            ((C78469 + C78470) * C152188 + (C80496 + C80495) * C152092) *
                C152068) *
               C152217) *
              C151851 * C335 +
          ((((C85735 + C85736) * C152188 + (C85737 + C85738) * C152092) *
                C67857 +
            ((C77835 + C77836) * C152188 + (C80080 + C80079) * C152092) *
                C152068) *
               C152246 -
           (((C77836 + C77835) * C152092 + (C76800 + C76799) * C152188) *
                C152068 +
            ((C85736 + C85735) * C152092 +
             (C76458 * C144 + C76471 + C76471 + C151796 * C160 + C76456 * C143 +
              C76472 + C76472 + C76451 * C159) *
                 C152188) *
                C67857) *
               C152259 -
           (((C76458 * C2957 + C80278 + C80278 + C151796 * C2965 +
              C76456 * C2956 + C80277 + C80277 + C76451 * C2964) *
                 C152092 +
             (C80079 + C80080) * C152188) *
                C152068 +
            ((C76458 * C2452 + C80276 + C80276 + C151796 * C2468 +
              C76456 * C2453 + C80275 + C80275 + C76451 * C2469) *
                 C152092 +
             (C85738 + C85737) * C152188) *
                C67857) *
               C152217) *
              C151851 * C336 +
          ((((C76456 * C144 + C76473 + C76473 + C76451 * C160 + C76458 * C145 +
              C76474 + C76474 + C151796 * C161) *
                 C152188 +
             (C85739 + C85740) * C152092) *
                C67857 +
            ((C76805 + C76806) * C152188 + (C77842 + C77841) * C152092) *
                C152068) *
               C152259 -
           (((C85741 + C85742) * C152092 + (C77841 + C77842) * C152188) *
                C152068 +
            ((C85743 + C85744) * C152092 + (C85740 + C85739) * C152188) *
                C67857) *
               C152246 +
           (((C85744 + C85743) * C152188 +
             (C76456 * C2452 + C85699 + C85699 + C76451 * C2468 +
              C76458 * C2451 + C85700 + C85700 + C151796 * C2467) *
                 C152092) *
                C67857 +
            ((C85742 + C85741) * C152188 +
             (C76456 * C2957 + C85701 + C85701 + C76451 * C2965 +
              C76458 * C2958 + C85702 + C85702 + C151796 * C2966) *
                 C152092) *
                C152068) *
               C152217) *
              C151851 * C152208)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
              C76462 + C76462 + C151796 * C159) *
                 C152188 +
             (C85731 + C85732) * C152092) *
                C67857 +
            ((C76793 + C76794) * C152188 + C86671 * C152092) * C152068) *
               C151869 * C1259 -
           ((C78429 * C152092 + (C76796 + C76795) * C152188) * C152068 +
            (C86672 * C152092 + (C76794 + C76793) * C152188) * C67857) *
               C151869 * C1260 +
           ((C76811 * C152188 + (C77832 + C77831) * C152092) * C67857 +
            ((C76798 + C76797) * C152188 + C79185 * C152092) * C152068) *
               C151869 * C152214) *
              C152255 +
          ((((C76799 + C76800) * C152188 + C86673 * C152092) * C67857 +
            ((C76801 + C76802) * C152188 + C78977 * C152092) * C152068) *
               C151869 * C1260 -
           ((C86674 * C152092 + (C76800 + C76799) * C152188) * C152068 +
            ((C85736 + C85735) * C152092 +
             (C76458 * C144 + C76471 + C76471 + C151796 * C160 + C76456 * C143 +
              C76472 + C76472 + C76451 * C159) *
                 C152188) *
                C67857) *
               C151869 * C1259 -
           (((C78989 + C78990) * C152092 + (C76804 + C76803) * C152188) *
                C152068 +
            ((C77838 + C77837) * C152092 + C76812 * C152188) * C67857) *
               C151869 * C152214) *
              C152240 +
          ((((C76456 * C144 + C76473 + C76473 + C76451 * C160 + C76458 * C145 +
              C76474 + C76474 + C151796 * C161) *
                 C152188 +
             (C85739 + C85740) * C152092) *
                C67857 +
            ((C76805 + C76806) * C152188 + C86675 * C152092) * C152068) *
               C151869 * C1259 -
           (((C77839 + C77840) * C152092 + (C76808 + C76807) * C152188) *
                C152068 +
            (C86676 * C152092 + (C76806 + C76805) * C152188) * C67857) *
               C151869 * C1260 +
           ((C76813 * C152188 + (C77840 + C77839) * C152092) * C67857 +
            ((C76810 + C76809) * C152188 +
             (C76456 * C2055 + C77805 + C77805 + C76451 * C2063 +
              C76458 * C2056 + C77806 + C77806 + C151796 * C2064) *
                 C152092) *
                C152068) *
               C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
             C76462 + C76462 + C151796 * C159) *
                C152188 +
            (C85731 + C85732) * C152092) *
               C67857 +
           ((C76793 + C76794) * C152188 + C86671 * C152092) * C152068) *
              C151869 * C1347 -
          ((C78429 * C152092 + (C76796 + C76795) * C152188) * C152068 +
           (C86672 * C152092 + (C76794 + C76793) * C152188) * C67857) *
              C151869 * C1348 +
          ((C76811 * C152188 + (C77832 + C77831) * C152092) * C67857 +
           ((C76798 + C76797) * C152188 + C79185 * C152092) * C152068) *
              C151869 * C1349 -
          (((C79197 + C79198) * C152092 + (C78206 + C78205) * C152188) *
               C152068 +
           ((C78474 + C78473) * C152092 + C78183 * C152188) * C67857) *
              C151869 * C1350 +
          ((C78209 * C152188 + (C79198 + C79197) * C152092) * C67857 +
           ((C78208 + C78207) * C152188 +
            (C76456 * C25783 + C79190 + C79190 + C76451 * C25787 +
             C76458 * C25784 + C79191 + C79191 + C151796 * C25788) *
                C152092) *
               C152068) *
              C151869 * C1351) *
         C151823) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
              C76462 + C76462 + C151796 * C159) *
                 C152188 +
             (C85731 + C85732) * C152092) *
                C67857 +
            ((C76793 + C76794) * C152188 + C86671 * C152092) * C152068) *
               C152259 -
           ((C87419 * C152092 + C86672 * C152188) * C152068 +
            ((C85733 + C85734) * C152092 + (C85732 + C85731) * C152188) *
                C67857) *
               C152246 +
           (((C85734 + C85733) * C152188 +
             (C76456 * C2454 + C79762 + C79762 + C76451 * C2470 +
              C76458 * C2453 + C79761 + C79761 + C151796 * C2469) *
                 C152092) *
                C67857 +
            (C87420 * C152188 + (C80496 + C80495) * C152092) * C152068) *
               C152217) *
              C1259 +
          (((C86671 * C152188 + C87420 * C152092) * C67857 +
            (C87421 * C152188 + C78477 * C152092) * C152068) *
               C152246 -
           ((C78429 * C152092 + (C76796 + C76795) * C152188) * C152068 +
            (C86672 * C152092 + (C76794 + C76793) * C152188) * C67857) *
               C152259 -
           (((C80493 + C80494) * C152092 + C87422 * C152188) * C152068 +
            ((C80495 + C80496) * C152092 + C87419 * C152188) * C67857) *
               C152217) *
              C1260 +
          (((C76811 * C152188 + C87421 * C152092) * C67857 +
            ((C76798 + C76797) * C152188 + C79185 * C152092) * C152068) *
               C152259 -
           (((C78475 + C78476) * C152092 + (C78474 + C78473) * C152188) *
                C152068 +
            (C87422 * C152092 + C78429 * C152188) * C67857) *
               C152246 +
           ((C78477 * C152188 + (C80494 + C80493) * C152092) * C67857 +
            ((C78476 + C78475) * C152188 +
             (C76456 * C27085 + C80483 + C80483 + C76451 * C27089 +
              C76458 * C27086 + C80484 + C80484 + C151796 * C27090) *
                 C152092) *
                C152068) *
               C152217) *
              C152214) *
         C151823) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
              C76462 + C76462 + C151796 * C159) *
                 C152188 +
             (C85731 + C85732) * C152092) *
                C67857 +
            ((C76793 + C76794) * C152188 + C86671 * C152092) * C152068) *
               C2215 -
           ((C87419 * C152092 + C86672 * C152188) * C152068 +
            ((C85733 + C85734) * C152092 + (C85732 + C85731) * C152188) *
                C67857) *
               C2216 +
           (((C85734 + C85733) * C152188 +
             (C76456 * C2454 + C79762 + C79762 + C76451 * C2470 +
              C76458 * C2453 + C79761 + C79761 + C151796 * C2469) *
                 C152092) *
                C67857 +
            (C87420 * C152188 + (C80496 + C80495) * C152092) * C152068) *
               C152217) *
              C151851 * C152255 +
          ((((C85735 + C85736) * C152188 + (C85737 + C85738) * C152092) *
                C67857 +
            (C86673 * C152188 + (C80080 + C80079) * C152092) * C152068) *
               C2216 -
           ((C86674 * C152092 + (C76800 + C76799) * C152188) * C152068 +
            ((C85736 + C85735) * C152092 +
             (C76458 * C144 + C76471 + C76471 + C151796 * C160 + C76456 * C143 +
              C76472 + C76472 + C76451 * C159) *
                 C152188) *
                C67857) *
               C2215 -
           (((C76458 * C2957 + C80278 + C80278 + C151796 * C2965 +
              C76456 * C2956 + C80277 + C80277 + C76451 * C2964) *
                 C152092 +
             (C80079 + C80080) * C152188) *
                C152068 +
            ((C76458 * C2452 + C80276 + C80276 + C151796 * C2468 +
              C76456 * C2453 + C80275 + C80275 + C76451 * C2469) *
                 C152092 +
             (C85738 + C85737) * C152188) *
                C67857) *
               C152217) *
              C151851 * C152240 +
          ((((C76456 * C144 + C76473 + C76473 + C76451 * C160 + C76458 * C145 +
              C76474 + C76474 + C151796 * C161) *
                 C152188 +
             (C85739 + C85740) * C152092) *
                C67857 +
            ((C76805 + C76806) * C152188 + C86675 * C152092) * C152068) *
               C2215 -
           (((C85741 + C85742) * C152092 + C86676 * C152188) * C152068 +
            ((C85743 + C85744) * C152092 + (C85740 + C85739) * C152188) *
                C67857) *
               C2216 +
           (((C85744 + C85743) * C152188 +
             (C76456 * C2452 + C85699 + C85699 + C76451 * C2468 +
              C76458 * C2451 + C85700 + C85700 + C151796 * C2467) *
                 C152092) *
                C67857 +
            ((C85742 + C85741) * C152188 +
             (C76456 * C2957 + C85701 + C85701 + C76451 * C2965 +
              C76458 * C2958 + C85702 + C85702 + C151796 * C2966) *
                 C152092) *
                C152068) *
               C152217) *
              C151851 * C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
              C76462 + C76462 + C151796 * C159) *
                 C152188 +
             (C85731 + C85732) * C152092) *
                C67857 +
            ((C76793 + C76794) * C152188 + C86671 * C152092) * C152068) *
               C2215 -
           ((C87419 * C152092 + C86672 * C152188) * C152068 +
            ((C85733 + C85734) * C152092 + (C85732 + C85731) * C152188) *
                C67857) *
               C2216 +
           (((C85734 + C85733) * C152188 +
             (C76456 * C2454 + C79762 + C79762 + C76451 * C2470 +
              C76458 * C2453 + C79761 + C79761 + C151796 * C2469) *
                 C152092) *
                C67857 +
            (C87420 * C152188 + (C80496 + C80495) * C152092) * C152068) *
               C152217) *
              C152258 +
          (((C86671 * C152188 + C87420 * C152092) * C67857 +
            (C87421 * C152188 + C78477 * C152092) * C152068) *
               C2216 -
           ((C78429 * C152092 + (C76796 + C76795) * C152188) * C152068 +
            (C86672 * C152092 + (C76794 + C76793) * C152188) * C67857) *
               C2215 -
           (((C80493 + C80494) * C152092 + C87422 * C152188) * C152068 +
            ((C80495 + C80496) * C152092 + C87419 * C152188) * C67857) *
               C152217) *
              C152244 +
          (((C76811 * C152188 + C87421 * C152092) * C67857 +
            ((C76798 + C76797) * C152188 + C79185 * C152092) * C152068) *
               C2215 -
           (((C78475 + C78476) * C152092 + C88326 * C152188) * C152068 +
            (C87422 * C152092 + C78429 * C152188) * C67857) *
               C2216 +
           ((C78477 * C152188 + (C80494 + C80493) * C152092) * C67857 +
            ((C78476 + C78475) * C152188 +
             (C76456 * C27085 + C80483 + C80483 + C76451 * C27089 +
              C76458 * C27086 + C80484 + C80484 + C151796 * C27090) *
                 C152092) *
                C152068) *
               C152217) *
              C152214) *
         C151823) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
             C76462 + C76462 + C151796 * C159) *
                C152188 +
            (C85731 + C85732) * C152092) *
               C67857 +
           ((C76793 + C76794) * C152188 + C86671 * C152092) * C152068) *
              C2446 -
          ((C87419 * C152092 + C86672 * C152188) * C152068 +
           ((C85733 + C85734) * C152092 + (C85732 + C85731) * C152188) *
               C67857) *
              C2447 +
          (((C85734 + C85733) * C152188 + (C89097 + C89098) * C152092) *
               C67857 +
           (C87420 * C152188 + (C80496 + C80495) * C152092) * C152068) *
              C2448 -
          (((C89099 + C89100) * C152092 + (C80495 + C80496) * C152188) *
               C152068 +
           ((C89101 + C89102) * C152092 + (C89098 + C89097) * C152188) *
               C67857) *
              C2449 +
          (((C89102 + C89101) * C152188 +
            (C76456 * C17750 + C89081 + C89081 + C76451 * C17756 +
             C76458 * C17751 + C89082 + C89082 + C151796 * C17757) *
                C152092) *
               C67857 +
           ((C89100 + C89099) * C152188 +
            (C76456 * C40487 + C89083 + C89083 + C76451 * C40491 +
             C76458 * C49559 + C89084 + C89084 + C151796 * C49561) *
                C152092) *
               C152068) *
              C2450) *
         C151851 * C151823) /
            (p * q * std::sqrt(p + q));
    d2ee[63] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
               C76462 + C76462 + C151796 * C159) *
                  C152188 +
              (C85731 + C85732) * C152092) *
                 C67857 +
             ((C76793 + C76794) * C152188 + C86671 * C152092) * C152068) *
                C152173 -
            ((C87419 * C152092 + C86672 * C152188) * C152068 +
             ((C85733 + C85734) * C152092 + (C85732 + C85731) * C152188) *
                 C67857) *
                C151956) *
               C1259 +
           (((C86671 * C152188 + C87420 * C152092) * C67857 +
             (C87421 * C152188 + C78477 * C152092) * C152068) *
                C151956 -
            ((C78429 * C152092 + (C76796 + C76795) * C152188) * C152068 +
             (C86672 * C152092 + (C76794 + C76793) * C152188) * C67857) *
                C152173) *
               C1260 +
           (((C76811 * C152188 + C87421 * C152092) * C67857 +
             ((C76798 + C76797) * C152188 + C79185 * C152092) * C152068) *
                C152173 -
            (((C78475 + C78476) * C152092 + (C78474 + C78473) * C152188) *
                 C152068 +
             (C87422 * C152092 + C78429 * C152188) * C67857) *
                C151956) *
               C152214) *
              C152158 +
          (((((C85735 + C85736) * C152188 + (C85737 + C85738) * C152092) *
                 C67857 +
             (C86673 * C152188 + (C80080 + C80079) * C152092) * C152068) *
                C151956 -
            ((C86674 * C152092 + (C76800 + C76799) * C152188) * C152068 +
             ((C85736 + C85735) * C152092 +
              (C76458 * C144 + C76471 + C76471 + C151796 * C160 +
               C76456 * C143 + C76472 + C76472 + C76451 * C159) *
                  C152188) *
                 C67857) *
                C152173) *
               C1259 +
           ((((C76799 + C76800) * C152188 + C86673 * C152092) * C67857 +
             ((C76801 + C76802) * C152188 + C78977 * C152092) * C152068) *
                C152173 -
            (((C80077 + C80078) * C152092 + C88067 * C152188) * C152068 +
             ((C80079 + C80080) * C152092 + C86674 * C152188) * C67857) *
                C151956) *
               C1260 +
           (((C78977 * C152188 + (C80078 + C80077) * C152092) * C67857 +
             ((C78990 + C78989) * C152188 +
              (C76456 * C8065 + C80067 + C80067 + C76451 * C8071 +
               C76458 * C8066 + C80068 + C80068 + C151796 * C8072) *
                  C152092) *
                 C152068) *
                C151956 -
            (((C78989 + C78990) * C152092 + (C76804 + C76803) * C152188) *
                 C152068 +
             (C88067 * C152092 + C76812 * C152188) * C67857) *
                C152173) *
               C152214) *
              C151834)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
              C76462 + C76462 + C151796 * C159) *
                 C152188 +
             (C85731 + C85732) * C152092) *
                C67857 +
            ((C76793 + C76794) * C152188 + (C77834 + C77833) * C152092) *
                C152068) *
               C152173 -
           (((C78470 + C78469) * C152092 + (C77833 + C77834) * C152188) *
                C152068 +
            ((C85733 + C85734) * C152092 + (C85732 + C85731) * C152188) *
                C67857) *
               C151956) *
              C151851 * C739 +
          ((((C85735 + C85736) * C152188 + (C85737 + C85738) * C152092) *
                C67857 +
            ((C77835 + C77836) * C152188 + (C80080 + C80079) * C152092) *
                C152068) *
               C151956 -
           (((C77836 + C77835) * C152092 + (C76800 + C76799) * C152188) *
                C152068 +
            ((C85736 + C85735) * C152092 +
             (C76458 * C144 + C76471 + C76471 + C151796 * C160 + C76456 * C143 +
              C76472 + C76472 + C76451 * C159) *
                 C152188) *
                C67857) *
               C152173) *
              C151851 * C740 +
          ((((C76456 * C144 + C76473 + C76473 + C76451 * C160 + C76458 * C145 +
              C76474 + C76474 + C151796 * C161) *
                 C152188 +
             (C85739 + C85740) * C152092) *
                C67857 +
            ((C76805 + C76806) * C152188 + (C77842 + C77841) * C152092) *
                C152068) *
               C152173 -
           (((C85741 + C85742) * C152092 + (C77841 + C77842) * C152188) *
                C152068 +
            ((C85743 + C85744) * C152092 + (C85740 + C85739) * C152188) *
                C67857) *
               C151956) *
              C151851 * C741 +
          ((((C86283 + C86284) * C152188 +
             (C76456 * C554 + C86275 + C86275 + C76451 * C578 + C76458 * C556 +
              C86276 + C86276 + C151796 * C580) *
                 C152092) *
                C67857 +
            ((C86011 + C86012) * C152188 +
             (C76456 * C1531 + C86277 + C86277 + C76451 * C1555 +
              C76458 * C2677 + C86278 + C86278 + C151796 * C2679) *
                 C152092) *
                C152068) *
               C151956 -
           (((C86012 + C86011) * C152092 + (C77284 + C77283) * C152188) *
                C152068 +
            ((C86284 + C86283) * C152092 +
             (C76458 * C146 + C76483 + C76483 + C151796 * C162 + C76456 * C145 +
              C76484 + C76484 + C76451 * C161) *
                 C152188) *
                C67857) *
               C152173) *
              C151851 * C152218)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
              C76462 + C76462 + C151796 * C159) *
                 C152188 +
             (C85731 + C85732) * C152092) *
                C67857 +
            ((C76793 + C76794) * C152188 + C86671 * C152092) * C152068) *
               C2814 -
           ((C87419 * C152092 + C86672 * C152188) * C152068 +
            ((C85733 + C85734) * C152092 + (C85732 + C85731) * C152188) *
                C67857) *
               C2815 +
           (((C85734 + C85733) * C152188 + (C89097 + C89098) * C152092) *
                C67857 +
            (C87420 * C152188 + (C80496 + C80495) * C152092) * C152068) *
               C2816 -
           (((C89099 + C89100) * C152092 + (C80495 + C80496) * C152188) *
                C152068 +
            ((C89101 + C89102) * C152092 + (C89098 + C89097) * C152188) *
                C67857) *
               C152230) *
              C151851 * C152158 +
          ((((C85735 + C85736) * C152188 + (C85737 + C85738) * C152092) *
                C67857 +
            (C86673 * C152188 + C89489 * C152092) * C152068) *
               C2815 -
           ((C86674 * C152092 + (C76800 + C76799) * C152188) * C152068 +
            ((C85736 + C85735) * C152092 +
             (C76458 * C144 + C76471 + C76471 + C151796 * C160 + C76456 * C143 +
              C76472 + C76472 + C76451 * C159) *
                 C152188) *
                C67857) *
               C2814 -
           (((C89499 + C89500) * C152092 + C89494 * C152188) * C152068 +
            ((C89771 + C89772) * C152092 + (C85738 + C85737) * C152188) *
                C67857) *
               C2816 +
           (((C89772 + C89771) * C152188 +
             (C76456 * C2456 + C89763 + C89763 + C76451 * C2472 +
              C76458 * C2457 + C89764 + C89764 + C151796 * C2473) *
                 C152092) *
                C67857 +
            ((C89500 + C89499) * C152188 +
             (C76456 * C9427 + C89765 + C89765 + C76451 * C9433 +
              C76458 * C9428 + C89766 + C89766 + C151796 * C9434) *
                 C152092) *
                C152068) *
               C152230) *
              C151851 * C151834)) /
            (p * q * std::sqrt(p + q));
    d2ee[64] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
              C76462 + C76462 + C151796 * C159) *
                 C152188 +
             (C76456 * C550 + C77040 + C77040 + C76451 * C574 + C76458 * C549 +
              C77039 + C77039 + C151796 * C573) *
                 C152092) *
                C67857 +
            ((C76793 + C76794) * C152188 + (C77834 + C77833) * C152092) *
                C152068) *
               C151869 * C152258 -
           ((C78429 * C152092 + (C76796 + C76795) * C152188) * C152068 +
            ((C77833 + C77834) * C152092 + (C76794 + C76793) * C152188) *
                C67857) *
               C151869 * C152244 +
           ((C76811 * C152188 + (C77832 + C77831) * C152092) * C67857 +
            ((C76798 + C76797) * C152188 + C79185 * C152092) * C152068) *
               C151869 * C152214) *
              C335 +
          ((((C76799 + C76800) * C152188 + (C77835 + C77836) * C152092) *
                C67857 +
            ((C76801 + C76802) * C152188 + C78977 * C152092) * C152068) *
               C151869 * C152244 -
           (((C77836 + C77835) * C152092 + (C76800 + C76799) * C152188) *
                C152068 +
            ((C76458 * C548 + C77048 + C77048 + C151796 * C572 + C76456 * C549 +
              C77047 + C77047 + C76451 * C573) *
                 C152092 +
             (C76458 * C144 + C76471 + C76471 + C151796 * C160 + C76456 * C143 +
              C76472 + C76472 + C76451 * C159) *
                 C152188) *
                C67857) *
               C151869 * C152258 -
           (((C78989 + C78990) * C152092 + (C76804 + C76803) * C152188) *
                C152068 +
            ((C77838 + C77837) * C152092 + C76812 * C152188) * C67857) *
               C151869 * C152214) *
              C336 +
          ((((C76456 * C144 + C76473 + C76473 + C76451 * C160 + C76458 * C145 +
              C76474 + C76474 + C151796 * C161) *
                 C152188 +
             (C76456 * C548 + C77064 + C77064 + C76451 * C572 + C76458 * C547 +
              C77063 + C77063 + C151796 * C571) *
                 C152092) *
                C67857 +
            ((C76805 + C76806) * C152188 + (C77842 + C77841) * C152092) *
                C152068) *
               C151869 * C152258 -
           (((C77839 + C77840) * C152092 + (C76808 + C76807) * C152188) *
                C152068 +
            ((C77841 + C77842) * C152092 + (C76806 + C76805) * C152188) *
                C67857) *
               C151869 * C152244 +
           ((C76813 * C152188 + (C77840 + C77839) * C152092) * C67857 +
            ((C76810 + C76809) * C152188 +
             (C76456 * C2055 + C77805 + C77805 + C76451 * C2063 +
              C76458 * C2056 + C77806 + C77806 + C151796 * C2064) *
                 C152092) *
                C152068) *
               C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
             C76462 + C76462 + C151796 * C159) *
                C152188 +
            (C76456 * C550 + C77040 + C77040 + C76451 * C574 + C76458 * C549 +
             C77039 + C77039 + C151796 * C573) *
                C152092) *
               C67857 +
           ((C76793 + C76794) * C152188 + (C77834 + C77833) * C152092) *
               C152068) *
              C151869 * C151851 * C129 -
          (((C77836 + C77835) * C152092 + (C76800 + C76799) * C152188) *
               C152068 +
           ((C76458 * C548 + C77048 + C77048 + C151796 * C572 + C76456 * C549 +
             C77047 + C77047 + C76451 * C573) *
                C152092 +
            (C76458 * C144 + C76471 + C76471 + C151796 * C160 + C76456 * C143 +
             C76472 + C76472 + C76451 * C159) *
                C152188) *
               C67857) *
              C151869 * C151851 * C130 +
          (((C76456 * C144 + C76473 + C76473 + C76451 * C160 + C76458 * C145 +
             C76474 + C76474 + C151796 * C161) *
                C152188 +
            (C76456 * C548 + C77064 + C77064 + C76451 * C572 + C76458 * C547 +
             C77063 + C77063 + C151796 * C571) *
                C152092) *
               C67857 +
           ((C76805 + C76806) * C152188 + (C77842 + C77841) * C152092) *
               C152068) *
              C151869 * C151851 * C131 -
          (((C76458 * C1087 + C77484 + C77484 + C151796 * C1099 +
             C76456 * C1086 + C77483 + C77483 + C76451 * C1098) *
                C152092 +
            (C77284 + C77283) * C152188) *
               C152068 +
           ((C76458 * C555 + C77482 + C77482 + C151796 * C579 + C76456 * C547 +
             C77481 + C77481 + C76451 * C571) *
                C152092 +
            (C76458 * C146 + C76483 + C76483 + C151796 * C162 + C76456 * C145 +
             C76484 + C76484 + C76451 * C161) *
                C152188) *
               C67857) *
              C151869 * C151851 * C132 +
          (((C76456 * C146 + C76485 + C76485 + C76451 * C162 + C76458 * C147 +
             C76486 + C76486 + C151796 * C163) *
                C152188 +
            (C76456 * C555 + C85087 + C85087 + C76451 * C579 + C76458 * C557 +
             C85088 + C85088 + C151796 * C581) *
                C152092) *
               C67857 +
           ((C76456 * C346 + C76487 + C76487 + C76451 * C370 + C76458 * C348 +
             C76488 + C76488 + C151796 * C372) *
                C152188 +
            (C76456 * C1087 + C85089 + C85089 + C76451 * C1099 +
             C76458 * C1088 + C85090 + C85090 + C151796 * C1100) *
                C152092) *
               C152068) *
              C151869 * C151851 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
              C76462 + C76462 + C151796 * C159) *
                 C152188 +
             (C85731 + C85732) * C152092) *
                C67857 +
            ((C76793 + C76794) * C152188 + C86671 * C152092) * C152068) *
               C151869 * C1259 -
           ((C78429 * C152092 + (C76796 + C76795) * C152188) * C152068 +
            (C86672 * C152092 + (C76794 + C76793) * C152188) * C67857) *
               C151869 * C1260 +
           ((C76811 * C152188 + (C77832 + C77831) * C152092) * C67857 +
            ((C76798 + C76797) * C152188 + C79185 * C152092) * C152068) *
               C151869 * C152214) *
              C152255 +
          ((((C76799 + C76800) * C152188 + C86673 * C152092) * C67857 +
            ((C76801 + C76802) * C152188 + C78977 * C152092) * C152068) *
               C151869 * C1260 -
           ((C86674 * C152092 + (C76800 + C76799) * C152188) * C152068 +
            ((C85736 + C85735) * C152092 +
             (C76458 * C144 + C76471 + C76471 + C151796 * C160 + C76456 * C143 +
              C76472 + C76472 + C76451 * C159) *
                 C152188) *
                C67857) *
               C151869 * C1259 -
           (((C78989 + C78990) * C152092 + (C76804 + C76803) * C152188) *
                C152068 +
            ((C77838 + C77837) * C152092 + C76812 * C152188) * C67857) *
               C151869 * C152214) *
              C152240 +
          ((((C76456 * C144 + C76473 + C76473 + C76451 * C160 + C76458 * C145 +
              C76474 + C76474 + C151796 * C161) *
                 C152188 +
             (C85739 + C85740) * C152092) *
                C67857 +
            ((C76805 + C76806) * C152188 + C86675 * C152092) * C152068) *
               C151869 * C1259 -
           (((C77839 + C77840) * C152092 + (C76808 + C76807) * C152188) *
                C152068 +
            (C86676 * C152092 + (C76806 + C76805) * C152188) * C67857) *
               C151869 * C1260 +
           ((C76813 * C152188 + (C77840 + C77839) * C152092) * C67857 +
            ((C76810 + C76809) * C152188 +
             (C76456 * C2055 + C77805 + C77805 + C76451 * C2063 +
              C76458 * C2056 + C77806 + C77806 + C151796 * C2064) *
                 C152092) *
                C152068) *
               C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
             C76462 + C76462 + C151796 * C159) *
                C152188 +
            (C85731 + C85732) * C152092) *
               C67857 +
           ((C76793 + C76794) * C152188 + C86671 * C152092) * C152068) *
              C151869 * C1347 -
          ((C78429 * C152092 + (C76796 + C76795) * C152188) * C152068 +
           (C86672 * C152092 + (C76794 + C76793) * C152188) * C67857) *
              C151869 * C1348 +
          ((C76811 * C152188 + (C77832 + C77831) * C152092) * C67857 +
           ((C76798 + C76797) * C152188 + C79185 * C152092) * C152068) *
              C151869 * C1349 -
          (((C79197 + C79198) * C152092 + (C78206 + C78205) * C152188) *
               C152068 +
           ((C78474 + C78473) * C152092 + C78183 * C152188) * C67857) *
              C151869 * C1350 +
          ((C78209 * C152188 + (C79198 + C79197) * C152092) * C67857 +
           ((C78208 + C78207) * C152188 +
            (C76456 * C25783 + C79190 + C79190 + C76451 * C25787 +
             C76458 * C25784 + C79191 + C79191 + C151796 * C25788) *
                C152092) *
               C152068) *
              C151869 * C1351) *
         C151823) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
              C76462 + C76462 + C151796 * C159) *
                 C152188 +
             (C85731 + C85732) * C152092) *
                C67857 +
            ((C76793 + C76794) * C152188 + C86671 * C152092) * C152068) *
               C2215 -
           ((C87419 * C152092 + C86672 * C152188) * C152068 +
            ((C85733 + C85734) * C152092 + (C85732 + C85731) * C152188) *
                C67857) *
               C2216 +
           (((C85734 + C85733) * C152188 +
             (C76456 * C2454 + C79762 + C79762 + C76451 * C2470 +
              C76458 * C2453 + C79761 + C79761 + C151796 * C2469) *
                 C152092) *
                C67857 +
            (C87420 * C152188 + (C80496 + C80495) * C152092) * C152068) *
               C152217) *
              C151851 * C152255 +
          ((((C85735 + C85736) * C152188 + (C85737 + C85738) * C152092) *
                C67857 +
            (C86673 * C152188 + (C80080 + C80079) * C152092) * C152068) *
               C2216 -
           ((C86674 * C152092 + (C76800 + C76799) * C152188) * C152068 +
            ((C85736 + C85735) * C152092 +
             (C76458 * C144 + C76471 + C76471 + C151796 * C160 + C76456 * C143 +
              C76472 + C76472 + C76451 * C159) *
                 C152188) *
                C67857) *
               C2215 -
           (((C76458 * C2957 + C80278 + C80278 + C151796 * C2965 +
              C76456 * C2956 + C80277 + C80277 + C76451 * C2964) *
                 C152092 +
             (C80079 + C80080) * C152188) *
                C152068 +
            ((C76458 * C2452 + C80276 + C80276 + C151796 * C2468 +
              C76456 * C2453 + C80275 + C80275 + C76451 * C2469) *
                 C152092 +
             (C85738 + C85737) * C152188) *
                C67857) *
               C152217) *
              C151851 * C152240 +
          ((((C76456 * C144 + C76473 + C76473 + C76451 * C160 + C76458 * C145 +
              C76474 + C76474 + C151796 * C161) *
                 C152188 +
             (C85739 + C85740) * C152092) *
                C67857 +
            ((C76805 + C76806) * C152188 + C86675 * C152092) * C152068) *
               C2215 -
           (((C85741 + C85742) * C152092 + C86676 * C152188) * C152068 +
            ((C85743 + C85744) * C152092 + (C85740 + C85739) * C152188) *
                C67857) *
               C2216 +
           (((C85744 + C85743) * C152188 +
             (C76456 * C2452 + C85699 + C85699 + C76451 * C2468 +
              C76458 * C2451 + C85700 + C85700 + C151796 * C2467) *
                 C152092) *
                C67857 +
            ((C85742 + C85741) * C152188 +
             (C76456 * C2957 + C85701 + C85701 + C76451 * C2965 +
              C76458 * C2958 + C85702 + C85702 + C151796 * C2966) *
                 C152092) *
                C152068) *
               C152217) *
              C151851 * C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
              C76462 + C76462 + C151796 * C159) *
                 C152188 +
             (C85731 + C85732) * C152092) *
                C67857 +
            ((C76793 + C76794) * C152188 + C86671 * C152092) * C152068) *
               C2215 -
           ((C87419 * C152092 + C86672 * C152188) * C152068 +
            ((C85733 + C85734) * C152092 + (C85732 + C85731) * C152188) *
                C67857) *
               C2216 +
           (((C85734 + C85733) * C152188 +
             (C76456 * C2454 + C79762 + C79762 + C76451 * C2470 +
              C76458 * C2453 + C79761 + C79761 + C151796 * C2469) *
                 C152092) *
                C67857 +
            (C87420 * C152188 + (C80496 + C80495) * C152092) * C152068) *
               C152217) *
              C152258 +
          (((C86671 * C152188 + C87420 * C152092) * C67857 +
            (C87421 * C152188 + C78477 * C152092) * C152068) *
               C2216 -
           ((C78429 * C152092 + (C76796 + C76795) * C152188) * C152068 +
            (C86672 * C152092 + (C76794 + C76793) * C152188) * C67857) *
               C2215 -
           (((C80493 + C80494) * C152092 + C87422 * C152188) * C152068 +
            ((C80495 + C80496) * C152092 + C87419 * C152188) * C67857) *
               C152217) *
              C152244 +
          (((C76811 * C152188 + C87421 * C152092) * C67857 +
            ((C76798 + C76797) * C152188 + C79185 * C152092) * C152068) *
               C2215 -
           (((C78475 + C78476) * C152092 + C88326 * C152188) * C152068 +
            (C87422 * C152092 + C78429 * C152188) * C67857) *
               C2216 +
           ((C78477 * C152188 + (C80494 + C80493) * C152092) * C67857 +
            ((C78476 + C78475) * C152188 +
             (C76456 * C27085 + C80483 + C80483 + C76451 * C27089 +
              C76458 * C27086 + C80484 + C80484 + C151796 * C27090) *
                 C152092) *
                C152068) *
               C152217) *
              C152214) *
         C151823) /
            (p * q * std::sqrt(p + q));
    d2ee[65] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
               C76462 + C76462 + C151796 * C159) *
                  C152188 +
              (C85731 + C85732) * C152092) *
                 C67857 +
             ((C76793 + C76794) * C152188 + C86671 * C152092) * C152068) *
                C4107 -
            ((C87419 * C152092 + C86672 * C152188) * C152068 +
             ((C85733 + C85734) * C152092 + (C85732 + C85731) * C152188) *
                 C67857) *
                C151956) *
               C152172 +
           (((C86671 * C152188 + C87420 * C152092) * C67857 +
             (C87421 * C152188 + C78477 * C152092) * C152068) *
                C151956 -
            ((C78429 * C152092 + (C76796 + C76795) * C152188) * C152068 +
             (C86672 * C152092 + (C76794 + C76793) * C152188) * C67857) *
                C4107) *
               C151914) *
              C151828 +
          (((((C85735 + C85736) * C152188 + (C85737 + C85738) * C152092) *
                 C67857 +
             (C86673 * C152188 + C89489 * C152092) * C152068) *
                C151956 -
            ((C86674 * C152092 + (C76800 + C76799) * C152188) * C152068 +
             ((C85736 + C85735) * C152092 +
              (C76458 * C144 + C76471 + C76471 + C151796 * C160 +
               C76456 * C143 + C76472 + C76472 + C76451 * C159) *
                  C152188) *
                 C67857) *
                C4107) *
               C152172 +
           ((((C76799 + C76800) * C152188 + C86673 * C152092) * C67857 +
             ((C76801 + C76802) * C152188 + C78977 * C152092) * C152068) *
                C4107 -
            (((C80077 + C80078) * C152092 + C88067 * C152188) * C152068 +
             (C89494 * C152092 + C86674 * C152188) * C67857) *
                C151956) *
               C151914) *
              C151837 +
          (((((C76456 * C144 + C76473 + C76473 + C76451 * C160 + C76458 * C145 +
               C76474 + C76474 + C151796 * C161) *
                  C152188 +
              (C85739 + C85740) * C152092) *
                 C67857 +
             ((C76805 + C76806) * C152188 + C86675 * C152092) * C152068) *
                C4107 -
            (((C85741 + C85742) * C152092 + C86676 * C152188) * C152068 +
             ((C85743 + C85744) * C152092 + (C85740 + C85739) * C152188) *
                 C67857) *
                C151956) *
               C152172 +
           (((C86675 * C152188 + (C85742 + C85741) * C152092) * C67857 +
             ((C77840 + C77839) * C152188 +
              (C76456 * C1541 + C77069 + C77069 + C76451 * C1565 +
               C76458 * C1542 + C77070 + C77070 + C151796 * C1566) *
                  C152092) *
                 C152068) *
                C151956 -
            (((C77839 + C77840) * C152092 + (C76808 + C76807) * C152188) *
                 C152068 +
             (C86676 * C152092 + (C76806 + C76805) * C152188) * C67857) *
                C4107) *
               C151914) *
              C3588)) /
        (p * q * std::sqrt(p + q));
    d2ee[66] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
               C76462 + C76462 + C151796 * C159) *
                  C152188 +
              (C85731 + C85732) * C152092) *
                 C67857 +
             ((C76793 + C76794) * C152188 + C86671 * C152092) * C152068) *
                C151952 -
            ((C87419 * C152092 + C86672 * C152188) * C152068 +
             ((C85733 + C85734) * C152092 + (C85732 + C85731) * C152188) *
                 C67857) *
                C151959 +
            (((C85734 + C85733) * C152188 + (C89097 + C89098) * C152092) *
                 C67857 +
             (C87420 * C152188 + C90031 * C152092) * C152068) *
                C4779) *
               C152172 +
           (((C86671 * C152188 + C87420 * C152092) * C67857 +
             (C87421 * C152188 + C78477 * C152092) * C152068) *
                C151959 -
            ((C78429 * C152092 + (C76796 + C76795) * C152188) * C152068 +
             (C86672 * C152092 + (C76794 + C76793) * C152188) * C67857) *
                C151952 -
            (((C80493 + C80494) * C152092 + C87422 * C152188) * C152068 +
             (C90032 * C152092 + C87419 * C152188) * C67857) *
                C4779) *
               C151914) *
              C3241 +
          (((((C85735 + C85736) * C152188 + (C85737 + C85738) * C152092) *
                 C67857 +
             (C86673 * C152188 + C89489 * C152092) * C152068) *
                C151959 -
            ((C86674 * C152092 + (C76800 + C76799) * C152188) * C152068 +
             ((C85736 + C85735) * C152092 +
              (C76458 * C144 + C76471 + C76471 + C151796 * C160 +
               C76456 * C143 + C76472 + C76472 + C76451 * C159) *
                  C152188) *
                 C67857) *
                C151952 -
            (((C89499 + C89500) * C152092 + C89494 * C152188) * C152068 +
             ((C89771 + C89772) * C152092 + (C85738 + C85737) * C152188) *
                 C67857) *
                C4779) *
               C152172 +
           ((((C76799 + C76800) * C152188 + C86673 * C152092) * C67857 +
             ((C76801 + C76802) * C152188 + C78977 * C152092) * C152068) *
                C151952 -
            (((C80077 + C80078) * C152092 + C88067 * C152188) * C152068 +
             (C89494 * C152092 + C86674 * C152188) * C67857) *
                C151959 +
            ((C89489 * C152188 + (C89500 + C89499) * C152092) * C67857 +
             ((C80078 + C80077) * C152188 +
              (C76456 * C10150 + C80279 + C80279 + C76451 * C10156 +
               C76458 * C10151 + C80280 + C80280 + C151796 * C10157) *
                  C152092) *
                 C152068) *
                C4779) *
               C151914) *
              C151834)) /
        (p * q * std::sqrt(p + q));
    d2ee[67] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
               C76462 + C76462 + C151796 * C159) *
                  C152188 +
              (C85731 + C85732) * C152092) *
                 C67857 +
             ((C76793 + C76794) * C152188 + C86671 * C152092) * C152068) *
                C4107 -
            ((C87419 * C152092 + C86672 * C152188) * C152068 +
             ((C85733 + C85734) * C152092 + (C85732 + C85731) * C152188) *
                 C67857) *
                C151956) *
               C152258 +
           (((C86671 * C152188 + C87420 * C152092) * C67857 +
             (C87421 * C152188 + C78477 * C152092) * C152068) *
                C151956 -
            ((C78429 * C152092 + (C76796 + C76795) * C152188) * C152068 +
             (C86672 * C152092 + (C76794 + C76793) * C152188) * C67857) *
                C4107) *
               C152244 +
           (((C76811 * C152188 + C87421 * C152092) * C67857 +
             ((C76798 + C76797) * C152188 + C79185 * C152092) * C152068) *
                C4107 -
            (((C78475 + C78476) * C152092 + C88326 * C152188) * C152068 +
             (C87422 * C152092 + C78429 * C152188) * C67857) *
                C151956) *
               C152214) *
              C3241 +
          (((((C85735 + C85736) * C152188 + (C85737 + C85738) * C152092) *
                 C67857 +
             (C86673 * C152188 + C89489 * C152092) * C152068) *
                C151956 -
            ((C86674 * C152092 + (C76800 + C76799) * C152188) * C152068 +
             ((C85736 + C85735) * C152092 +
              (C76458 * C144 + C76471 + C76471 + C151796 * C160 +
               C76456 * C143 + C76472 + C76472 + C76451 * C159) *
                  C152188) *
                 C67857) *
                C4107) *
               C152258 +
           ((((C76799 + C76800) * C152188 + C86673 * C152092) * C67857 +
             ((C76801 + C76802) * C152188 + C78977 * C152092) * C152068) *
                C4107 -
            (((C80077 + C80078) * C152092 + C88067 * C152188) * C152068 +
             (C89494 * C152092 + C86674 * C152188) * C67857) *
                C151956) *
               C152244 +
           (((C78977 * C152188 + (C80078 + C80077) * C152092) * C67857 +
             ((C78990 + C78989) * C152188 +
              (C76456 * C8065 + C80067 + C80067 + C76451 * C8071 +
               C76458 * C8066 + C80068 + C80068 + C151796 * C8072) *
                  C152092) *
                 C152068) *
                C151956 -
            (((C78989 + C78990) * C152092 + (C76804 + C76803) * C152188) *
                 C152068 +
             (C88067 * C152092 + C76812 * C152188) * C67857) *
                C4107) *
               C152214) *
              C151834)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
              C76462 + C76462 + C151796 * C159) *
                 C152188 +
             (C85731 + C85732) * C152092) *
                C67857 +
            ((C76793 + C76794) * C152188 + C86671 * C152092) * C152068) *
               C4107 -
           ((C87419 * C152092 + C86672 * C152188) * C152068 +
            ((C85733 + C85734) * C152092 + (C85732 + C85731) * C152188) *
                C67857) *
               C151956) *
              C151851 * C152264 +
          ((((C85735 + C85736) * C152188 + (C85737 + C85738) * C152092) *
                C67857 +
            (C86673 * C152188 + C89489 * C152092) * C152068) *
               C151956 -
           ((C86674 * C152092 + (C76800 + C76799) * C152188) * C152068 +
            ((C85736 + C85735) * C152092 +
             (C76458 * C144 + C76471 + C76471 + C151796 * C160 + C76456 * C143 +
              C76472 + C76472 + C76451 * C159) *
                 C152188) *
                C67857) *
               C4107) *
              C151851 * C152257 +
          ((((C76456 * C144 + C76473 + C76473 + C76451 * C160 + C76458 * C145 +
              C76474 + C76474 + C151796 * C161) *
                 C152188 +
             (C85739 + C85740) * C152092) *
                C67857 +
            ((C76805 + C76806) * C152188 + C86675 * C152092) * C152068) *
               C4107 -
           (((C85741 + C85742) * C152092 + C86676 * C152188) * C152068 +
            ((C85743 + C85744) * C152092 + (C85740 + C85739) * C152188) *
                C67857) *
               C151956) *
              C151851 * C152242 +
          ((((C86283 + C86284) * C152188 +
             (C76456 * C554 + C86275 + C86275 + C76451 * C578 + C76458 * C556 +
              C86276 + C86276 + C151796 * C580) *
                 C152092) *
                C67857 +
            ((C86011 + C86012) * C152188 +
             (C76456 * C1531 + C86277 + C86277 + C76451 * C1555 +
              C76458 * C2677 + C86278 + C86278 + C151796 * C2679) *
                 C152092) *
                C152068) *
               C151956 -
           (((C86012 + C86011) * C152092 + (C77284 + C77283) * C152188) *
                C152068 +
            ((C86284 + C86283) * C152092 +
             (C76458 * C146 + C76483 + C76483 + C151796 * C162 + C76456 * C145 +
              C76484 + C76484 + C76451 * C161) *
                 C152188) *
                C67857) *
               C4107) *
              C151851 * C152218)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
              C76462 + C76462 + C151796 * C159) *
                 C152188 +
             (C85731 + C85732) * C152092) *
                C67857 +
            ((C76793 + C76794) * C152188 + C86671 * C152092) * C152068) *
               C152266 -
           ((C87419 * C152092 + C86672 * C152188) * C152068 +
            ((C85733 + C85734) * C152092 + (C85732 + C85731) * C152188) *
                C67857) *
               C152263 +
           (((C85734 + C85733) * C152188 + (C89097 + C89098) * C152092) *
                C67857 +
            (C87420 * C152188 + C90031 * C152092) * C152068) *
               C152252 -
           (((C89099 + C89100) * C152092 + C90032 * C152188) * C152068 +
            ((C89101 + C89102) * C152092 + (C89098 + C89097) * C152188) *
                C67857) *
               C152230) *
              C151851 * C3241 +
          ((((C85735 + C85736) * C152188 + (C85737 + C85738) * C152092) *
                C67857 +
            (C86673 * C152188 + C89489 * C152092) * C152068) *
               C152263 -
           ((C86674 * C152092 + (C76800 + C76799) * C152188) * C152068 +
            ((C85736 + C85735) * C152092 +
             (C76458 * C144 + C76471 + C76471 + C151796 * C160 + C76456 * C143 +
              C76472 + C76472 + C76451 * C159) *
                 C152188) *
                C67857) *
               C152266 -
           (((C89499 + C89500) * C152092 + C89494 * C152188) * C152068 +
            ((C89771 + C89772) * C152092 + (C85738 + C85737) * C152188) *
                C67857) *
               C152252 +
           (((C89772 + C89771) * C152188 +
             (C76456 * C2456 + C89763 + C89763 + C76451 * C2472 +
              C76458 * C2457 + C89764 + C89764 + C151796 * C2473) *
                 C152092) *
                C67857 +
            ((C89500 + C89499) * C152188 +
             (C76456 * C9427 + C89765 + C89765 + C76451 * C9433 +
              C76458 * C9428 + C89766 + C89766 + C151796 * C9434) *
                 C152092) *
                C152068) *
               C152230) *
              C151851 * C151834)) /
            (p * q * std::sqrt(p + q));
    d2ee[68] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
              C76462 + C76462 + C151796 * C159) *
                 C152188 +
             (C85731 + C85732) * C152092) *
                C67857 +
            ((C76793 + C76794) * C152188 + C86671 * C152092) * C152068) *
               C151952 -
           ((C87419 * C152092 + C86672 * C152188) * C152068 +
            ((C85733 + C85734) * C152092 + (C85732 + C85731) * C152188) *
                C67857) *
               C151959 +
           (((C85734 + C85733) * C152188 + (C89097 + C89098) * C152092) *
                C67857 +
            (C87420 * C152188 + C90031 * C152092) * C152068) *
               C4779) *
              C151851 * C151828 +
          ((((C85735 + C85736) * C152188 + (C85737 + C85738) * C152092) *
                C67857 +
            (C86673 * C152188 + C89489 * C152092) * C152068) *
               C151959 -
           ((C86674 * C152092 + (C76800 + C76799) * C152188) * C152068 +
            ((C85736 + C85735) * C152092 +
             (C76458 * C144 + C76471 + C76471 + C151796 * C160 + C76456 * C143 +
              C76472 + C76472 + C76451 * C159) *
                 C152188) *
                C67857) *
               C151952 -
           (((C89499 + C89500) * C152092 + C89494 * C152188) * C152068 +
            ((C89771 + C89772) * C152092 + (C85738 + C85737) * C152188) *
                C67857) *
               C4779) *
              C151851 * C151837 +
          ((((C76456 * C144 + C76473 + C76473 + C76451 * C160 + C76458 * C145 +
              C76474 + C76474 + C151796 * C161) *
                 C152188 +
             (C85739 + C85740) * C152092) *
                C67857 +
            ((C76805 + C76806) * C152188 + C86675 * C152092) * C152068) *
               C151952 -
           (((C85741 + C85742) * C152092 + C86676 * C152188) * C152068 +
            ((C85743 + C85744) * C152092 + (C85740 + C85739) * C152188) *
                C67857) *
               C151959 +
           (((C85744 + C85743) * C152188 +
             (C76456 * C2452 + C85699 + C85699 + C76451 * C2468 +
              C76458 * C2451 + C85700 + C85700 + C151796 * C2467) *
                 C152092) *
                C67857 +
            ((C85742 + C85741) * C152188 +
             (C76456 * C2957 + C85701 + C85701 + C76451 * C2965 +
              C76458 * C2958 + C85702 + C85702 + C151796 * C2966) *
                 C152092) *
                C152068) *
               C4779) *
              C151851 * C3588)) /
        (p * q * std::sqrt(p + q));
    d2ee[69] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
              C76462 + C76462 + C151796 * C159) *
                 C152188 +
             (C85731 + C85732) * C152092) *
                C67857 +
            ((C76793 + C76794) * C152188 + C86671 * C152092) * C152068) *
               C4107 -
           ((C87419 * C152092 + C86672 * C152188) * C152068 +
            ((C85733 + C85734) * C152092 + (C85732 + C85731) * C152188) *
                C67857) *
               C151956) *
              C151851 * C152264 +
          ((((C85735 + C85736) * C152188 + (C85737 + C85738) * C152092) *
                C67857 +
            (C86673 * C152188 + C89489 * C152092) * C152068) *
               C151956 -
           ((C86674 * C152092 + (C76800 + C76799) * C152188) * C152068 +
            ((C85736 + C85735) * C152092 +
             (C76458 * C144 + C76471 + C76471 + C151796 * C160 + C76456 * C143 +
              C76472 + C76472 + C76451 * C159) *
                 C152188) *
                C67857) *
               C4107) *
              C151851 * C152257 +
          ((((C76456 * C144 + C76473 + C76473 + C76451 * C160 + C76458 * C145 +
              C76474 + C76474 + C151796 * C161) *
                 C152188 +
             (C85739 + C85740) * C152092) *
                C67857 +
            ((C76805 + C76806) * C152188 + C86675 * C152092) * C152068) *
               C4107 -
           (((C85741 + C85742) * C152092 + C86676 * C152188) * C152068 +
            ((C85743 + C85744) * C152092 + (C85740 + C85739) * C152188) *
                C67857) *
               C151956) *
              C151851 * C152242 +
          ((((C86283 + C86284) * C152188 +
             (C76456 * C554 + C86275 + C86275 + C76451 * C578 + C76458 * C556 +
              C86276 + C86276 + C151796 * C580) *
                 C152092) *
                C67857 +
            ((C86011 + C86012) * C152188 +
             (C76456 * C1531 + C86277 + C86277 + C76451 * C1555 +
              C76458 * C2677 + C86278 + C86278 + C151796 * C2679) *
                 C152092) *
                C152068) *
               C151956 -
           (((C86012 + C86011) * C152092 + (C77284 + C77283) * C152188) *
                C152068 +
            ((C86284 + C86283) * C152092 +
             (C76458 * C146 + C76483 + C76483 + C151796 * C162 + C76456 * C145 +
              C76484 + C76484 + C76451 * C161) *
                 C152188) *
                C67857) *
               C4107) *
              C151851 * C152218)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
               C76462 + C76462 + C151796 * C159) *
                  C152188 +
              (C85731 + C85732) * C152092) *
                 C67857 +
             ((C76793 + C76794) * C152188 + C86671 * C152092) * C152068) *
                C4107 -
            ((C87419 * C152092 + C86672 * C152188) * C152068 +
             ((C85733 + C85734) * C152092 + (C85732 + C85731) * C152188) *
                 C67857) *
                C151956) *
               C152258 +
           (((C86671 * C152188 + C87420 * C152092) * C67857 +
             (C87421 * C152188 + C78477 * C152092) * C152068) *
                C151956 -
            ((C78429 * C152092 + (C76796 + C76795) * C152188) * C152068 +
             (C86672 * C152092 + (C76794 + C76793) * C152188) * C67857) *
                C4107) *
               C152244 +
           (((C76811 * C152188 + C87421 * C152092) * C67857 +
             ((C76798 + C76797) * C152188 + C79185 * C152092) * C152068) *
                C4107 -
            (((C78475 + C78476) * C152092 + C88326 * C152188) * C152068 +
             (C87422 * C152092 + C78429 * C152188) * C67857) *
                C151956) *
               C152214) *
              C3241 +
          (((((C85735 + C85736) * C152188 + (C85737 + C85738) * C152092) *
                 C67857 +
             (C86673 * C152188 + C89489 * C152092) * C152068) *
                C151956 -
            ((C86674 * C152092 + (C76800 + C76799) * C152188) * C152068 +
             ((C85736 + C85735) * C152092 +
              (C76458 * C144 + C76471 + C76471 + C151796 * C160 +
               C76456 * C143 + C76472 + C76472 + C76451 * C159) *
                  C152188) *
                 C67857) *
                C4107) *
               C152258 +
           ((((C76799 + C76800) * C152188 + C86673 * C152092) * C67857 +
             ((C76801 + C76802) * C152188 + C78977 * C152092) * C152068) *
                C4107 -
            (((C80077 + C80078) * C152092 + C88067 * C152188) * C152068 +
             (C89494 * C152092 + C86674 * C152188) * C67857) *
                C151956) *
               C152244 +
           (((C78977 * C152188 + (C80078 + C80077) * C152092) * C67857 +
             ((C78990 + C78989) * C152188 +
              (C76456 * C8065 + C80067 + C80067 + C76451 * C8071 +
               C76458 * C8066 + C80068 + C80068 + C151796 * C8072) *
                  C152092) *
                 C152068) *
                C151956 -
            (((C78989 + C78990) * C152092 + (C76804 + C76803) * C152188) *
                 C152068 +
             (C88067 * C152092 + C76812 * C152188) * C67857) *
                C4107) *
               C152214) *
              C151834)) /
            (p * q * std::sqrt(p + q));
    d2ee[70] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
              C76462 + C76462 + C151796 * C159) *
                 C152188 +
             (C85731 + C85732) * C152092) *
                C67857 +
            ((C76793 + C76794) * C152188 + (C77834 + C77833) * C152092) *
                C152068) *
               C151869 * C152172 -
           ((C78429 * C152092 + (C76796 + C76795) * C152188) * C152068 +
            ((C77833 + C77834) * C152092 + (C76794 + C76793) * C152188) *
                C67857) *
               C151869 * C151914) *
              C739 +
          ((((C76799 + C76800) * C152188 + (C77835 + C77836) * C152092) *
                C67857 +
            ((C76801 + C76802) * C152188 + C78977 * C152092) * C152068) *
               C151869 * C151914 -
           (((C77836 + C77835) * C152092 + (C76800 + C76799) * C152188) *
                C152068 +
            ((C85736 + C85735) * C152092 +
             (C76458 * C144 + C76471 + C76471 + C151796 * C160 + C76456 * C143 +
              C76472 + C76472 + C76451 * C159) *
                 C152188) *
                C67857) *
               C151869 * C152172) *
              C740 +
          ((((C76456 * C144 + C76473 + C76473 + C76451 * C160 + C76458 * C145 +
              C76474 + C76474 + C151796 * C161) *
                 C152188 +
             (C85739 + C85740) * C152092) *
                C67857 +
            ((C76805 + C76806) * C152188 + (C77842 + C77841) * C152092) *
                C152068) *
               C151869 * C152172 -
           (((C77839 + C77840) * C152092 + (C76808 + C76807) * C152188) *
                C152068 +
            ((C77841 + C77842) * C152092 + (C76806 + C76805) * C152188) *
                C67857) *
               C151869 * C151914) *
              C741 +
          ((((C77283 + C77284) * C152188 + (C86011 + C86012) * C152092) *
                C67857 +
            ((C77285 + C77286) * C152188 +
             (C76456 * C1535 + C77485 + C77485 + C76451 * C1559 +
              C76458 * C1916 + C77486 + C77486 + C151796 * C1918) *
                 C152092) *
                C152068) *
               C151869 * C151914 -
           (((C86012 + C86011) * C152092 + (C77284 + C77283) * C152188) *
                C152068 +
            ((C76458 * C555 + C77482 + C77482 + C151796 * C579 + C76456 * C547 +
              C77481 + C77481 + C76451 * C571) *
                 C152092 +
             (C76458 * C146 + C76483 + C76483 + C151796 * C162 + C76456 * C145 +
              C76484 + C76484 + C76451 * C161) *
                 C152188) *
                C67857) *
               C151869 * C152172) *
              C152218)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
              C76462 + C76462 + C151796 * C159) *
                 C152188 +
             (C85731 + C85732) * C152092) *
                C67857 +
            ((C76793 + C76794) * C152188 + C86671 * C152092) * C152068) *
               C151869 * C1709 -
           ((C78429 * C152092 + (C76796 + C76795) * C152188) * C152068 +
            (C86672 * C152092 + (C76794 + C76793) * C152188) * C67857) *
               C151869 * C1710 +
           ((C76811 * C152188 + C87421 * C152092) * C67857 +
            ((C76798 + C76797) * C152188 + C79185 * C152092) * C152068) *
               C151869 * C1711 -
           (((C79197 + C79198) * C152092 + (C78206 + C78205) * C152188) *
                C152068 +
            ((C78474 + C78473) * C152092 + C78183 * C152188) * C67857) *
               C151869 * C152224) *
              C152158 +
          ((((C76799 + C76800) * C152188 + C86673 * C152092) * C67857 +
            ((C76801 + C76802) * C152188 + C78977 * C152092) * C152068) *
               C151869 * C1710 -
           ((C86674 * C152092 + (C76800 + C76799) * C152188) * C152068 +
            ((C85736 + C85735) * C152092 +
             (C76458 * C144 + C76471 + C76471 + C151796 * C160 + C76456 * C143 +
              C76472 + C76472 + C76451 * C159) *
                 C152188) *
                C67857) *
               C151869 * C1709 -
           (((C78989 + C78990) * C152092 + (C76804 + C76803) * C152188) *
                C152068 +
            ((C77838 + C77837) * C152092 + C76812 * C152188) * C67857) *
               C151869 * C1711 +
           ((C78673 * C152188 + (C78990 + C78989) * C152092) * C67857 +
            ((C78686 + C78685) * C152188 +
             (C76456 * C8842 + C78982 + C78982 + C76451 * C8848 +
              C76458 * C8843 + C78983 + C78983 + C151796 * C8849) *
                 C152092) *
                C152068) *
               C151869 * C152224) *
              C151834)) /
            (p * q * std::sqrt(p + q));
    d2ee[71] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
               C76462 + C76462 + C151796 * C159) *
                  C152188 +
              (C85731 + C85732) * C152092) *
                 C67857 +
             ((C76793 + C76794) * C152188 + C86671 * C152092) * C152068) *
                C152173 -
            (((C78470 + C78469) * C152092 + C86672 * C152188) * C152068 +
             ((C85733 + C85734) * C152092 + (C85732 + C85731) * C152188) *
                 C67857) *
                C151956) *
               C152172 +
           (((C86671 * C152188 + (C78469 + C78470) * C152092) * C67857 +
             ((C77832 + C77831) * C152188 + C78477 * C152092) * C152068) *
                C151956 -
            ((C78429 * C152092 + (C76796 + C76795) * C152188) * C152068 +
             (C86672 * C152092 + (C76794 + C76793) * C152188) * C67857) *
                C152173) *
               C151914) *
              C335 +
          (((((C85735 + C85736) * C152188 + (C85737 + C85738) * C152092) *
                 C67857 +
             (C86673 * C152188 + (C80080 + C80079) * C152092) * C152068) *
                C151956 -
            ((C86674 * C152092 + (C76800 + C76799) * C152188) * C152068 +
             ((C85736 + C85735) * C152092 +
              (C76458 * C144 + C76471 + C76471 + C151796 * C160 +
               C76456 * C143 + C76472 + C76472 + C76451 * C159) *
                  C152188) *
                 C67857) *
                C152173) *
               C152172 +
           ((((C76799 + C76800) * C152188 + C86673 * C152092) * C67857 +
             ((C76801 + C76802) * C152188 + C78977 * C152092) * C152068) *
                C152173 -
            (((C80077 + C80078) * C152092 + (C77838 + C77837) * C152188) *
                 C152068 +
             ((C80079 + C80080) * C152092 + C86674 * C152188) * C67857) *
                C151956) *
               C151914) *
              C336 +
          (((((C76456 * C144 + C76473 + C76473 + C76451 * C160 + C76458 * C145 +
               C76474 + C76474 + C151796 * C161) *
                  C152188 +
              (C85739 + C85740) * C152092) *
                 C67857 +
             ((C76805 + C76806) * C152188 + C86675 * C152092) * C152068) *
                C152173 -
            (((C85741 + C85742) * C152092 + C86676 * C152188) * C152068 +
             ((C85743 + C85744) * C152092 + (C85740 + C85739) * C152188) *
                 C67857) *
                C151956) *
               C152172 +
           (((C86675 * C152188 + (C85742 + C85741) * C152092) * C67857 +
             ((C77840 + C77839) * C152188 +
              (C76456 * C1541 + C77069 + C77069 + C76451 * C1565 +
               C76458 * C1542 + C77070 + C77070 + C151796 * C1566) *
                  C152092) *
                 C152068) *
                C151956 -
            (((C77839 + C77840) * C152092 + (C76808 + C76807) * C152188) *
                 C152068 +
             (C86676 * C152092 + (C76806 + C76805) * C152188) * C67857) *
                C152173) *
               C151914) *
              C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
              C76462 + C76462 + C151796 * C159) *
                 C152188 +
             (C85731 + C85732) * C152092) *
                C67857 +
            ((C76793 + C76794) * C152188 + C86671 * C152092) * C152068) *
               C152173 -
           ((C87419 * C152092 + C86672 * C152188) * C152068 +
            ((C85733 + C85734) * C152092 + (C85732 + C85731) * C152188) *
                C67857) *
               C151956) *
              C1709 +
          (((C86671 * C152188 + C87420 * C152092) * C67857 +
            (C87421 * C152188 + C78477 * C152092) * C152068) *
               C151956 -
           ((C78429 * C152092 + (C76796 + C76795) * C152188) * C152068 +
            (C86672 * C152092 + (C76794 + C76793) * C152188) * C67857) *
               C152173) *
              C1710 +
          (((C76811 * C152188 + C87421 * C152092) * C67857 +
            ((C76798 + C76797) * C152188 + C79185 * C152092) * C152068) *
               C152173 -
           (((C78475 + C78476) * C152092 + C88326 * C152188) * C152068 +
            (C87422 * C152092 + C78429 * C152188) * C67857) *
               C151956) *
              C1711 +
          (((C79185 * C152188 + (C78476 + C78475) * C152092) * C67857 +
            ((C79198 + C79197) * C152188 +
             (C76456 * C25021 + C78450 + C78450 + C76451 * C25025 +
              C76458 * C25022 + C78451 + C78451 + C151796 * C25026) *
                 C152092) *
                C152068) *
               C151956 -
           (((C79197 + C79198) * C152092 + (C78206 + C78205) * C152188) *
                C152068 +
            (C88326 * C152092 + C78183 * C152188) * C67857) *
               C152173) *
              C152224) *
         C151823) /
            (p * q * std::sqrt(p + q));
    d2ee[72] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
              C76462 + C76462 + C151796 * C159) *
                 C152188 +
             (C76456 * C550 + C77040 + C77040 + C76451 * C574 + C76458 * C549 +
              C77039 + C77039 + C151796 * C573) *
                 C152092) *
                C67857 +
            ((C76793 + C76794) * C152188 + (C77834 + C77833) * C152092) *
                C152068) *
               C151869 * C152258 -
           ((C78429 * C152092 + (C76796 + C76795) * C152188) * C152068 +
            ((C77833 + C77834) * C152092 + (C76794 + C76793) * C152188) *
                C67857) *
               C151869 * C152244 +
           ((C76811 * C152188 + (C77832 + C77831) * C152092) * C67857 +
            ((C76798 + C76797) * C152188 + C79185 * C152092) * C152068) *
               C151869 * C152214) *
              C335 +
          ((((C76799 + C76800) * C152188 + (C77835 + C77836) * C152092) *
                C67857 +
            ((C76801 + C76802) * C152188 + C78977 * C152092) * C152068) *
               C151869 * C152244 -
           (((C77836 + C77835) * C152092 + (C76800 + C76799) * C152188) *
                C152068 +
            ((C76458 * C548 + C77048 + C77048 + C151796 * C572 + C76456 * C549 +
              C77047 + C77047 + C76451 * C573) *
                 C152092 +
             (C76458 * C144 + C76471 + C76471 + C151796 * C160 + C76456 * C143 +
              C76472 + C76472 + C76451 * C159) *
                 C152188) *
                C67857) *
               C151869 * C152258 -
           (((C78989 + C78990) * C152092 + (C76804 + C76803) * C152188) *
                C152068 +
            ((C77838 + C77837) * C152092 + C76812 * C152188) * C67857) *
               C151869 * C152214) *
              C336 +
          ((((C76456 * C144 + C76473 + C76473 + C76451 * C160 + C76458 * C145 +
              C76474 + C76474 + C151796 * C161) *
                 C152188 +
             (C76456 * C548 + C77064 + C77064 + C76451 * C572 + C76458 * C547 +
              C77063 + C77063 + C151796 * C571) *
                 C152092) *
                C67857 +
            ((C76805 + C76806) * C152188 + (C77842 + C77841) * C152092) *
                C152068) *
               C151869 * C152258 -
           (((C77839 + C77840) * C152092 + (C76808 + C76807) * C152188) *
                C152068 +
            ((C77841 + C77842) * C152092 + (C76806 + C76805) * C152188) *
                C67857) *
               C151869 * C152244 +
           ((C76813 * C152188 + (C77840 + C77839) * C152092) * C67857 +
            ((C76810 + C76809) * C152188 +
             (C76456 * C2055 + C77805 + C77805 + C76451 * C2063 +
              C76458 * C2056 + C77806 + C77806 + C151796 * C2064) *
                 C152092) *
                C152068) *
               C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
             C76462 + C76462 + C151796 * C159) *
                C152188 +
            (C76456 * C550 + C77040 + C77040 + C76451 * C574 + C76458 * C549 +
             C77039 + C77039 + C151796 * C573) *
                C152092) *
               C67857 +
           ((C76793 + C76794) * C152188 + (C77834 + C77833) * C152092) *
               C152068) *
              C151869 * C151851 * C129 -
          (((C77836 + C77835) * C152092 + (C76800 + C76799) * C152188) *
               C152068 +
           ((C76458 * C548 + C77048 + C77048 + C151796 * C572 + C76456 * C549 +
             C77047 + C77047 + C76451 * C573) *
                C152092 +
            (C76458 * C144 + C76471 + C76471 + C151796 * C160 + C76456 * C143 +
             C76472 + C76472 + C76451 * C159) *
                C152188) *
               C67857) *
              C151869 * C151851 * C130 +
          (((C76456 * C144 + C76473 + C76473 + C76451 * C160 + C76458 * C145 +
             C76474 + C76474 + C151796 * C161) *
                C152188 +
            (C76456 * C548 + C77064 + C77064 + C76451 * C572 + C76458 * C547 +
             C77063 + C77063 + C151796 * C571) *
                C152092) *
               C67857 +
           ((C76805 + C76806) * C152188 + (C77842 + C77841) * C152092) *
               C152068) *
              C151869 * C151851 * C131 -
          (((C76458 * C1087 + C77484 + C77484 + C151796 * C1099 +
             C76456 * C1086 + C77483 + C77483 + C76451 * C1098) *
                C152092 +
            (C77284 + C77283) * C152188) *
               C152068 +
           ((C76458 * C555 + C77482 + C77482 + C151796 * C579 + C76456 * C547 +
             C77481 + C77481 + C76451 * C571) *
                C152092 +
            (C76458 * C146 + C76483 + C76483 + C151796 * C162 + C76456 * C145 +
             C76484 + C76484 + C76451 * C161) *
                C152188) *
               C67857) *
              C151869 * C151851 * C132 +
          (((C76456 * C146 + C76485 + C76485 + C76451 * C162 + C76458 * C147 +
             C76486 + C76486 + C151796 * C163) *
                C152188 +
            (C76456 * C555 + C85087 + C85087 + C76451 * C579 + C76458 * C557 +
             C85088 + C85088 + C151796 * C581) *
                C152092) *
               C67857 +
           ((C76456 * C346 + C76487 + C76487 + C76451 * C370 + C76458 * C348 +
             C76488 + C76488 + C151796 * C372) *
                C152188 +
            (C76456 * C1087 + C85089 + C85089 + C76451 * C1099 +
             C76458 * C1088 + C85090 + C85090 + C151796 * C1100) *
                C152092) *
               C152068) *
              C151869 * C151851 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
              C76462 + C76462 + C151796 * C159) *
                 C152188 +
             (C85731 + C85732) * C152092) *
                C67857 +
            ((C76793 + C76794) * C152188 + (C77834 + C77833) * C152092) *
                C152068) *
               C152259 -
           (((C78470 + C78469) * C152092 + (C77833 + C77834) * C152188) *
                C152068 +
            ((C85733 + C85734) * C152092 + (C85732 + C85731) * C152188) *
                C67857) *
               C152246 +
           (((C85734 + C85733) * C152188 +
             (C76456 * C2454 + C79762 + C79762 + C76451 * C2470 +
              C76458 * C2453 + C79761 + C79761 + C151796 * C2469) *
                 C152092) *
                C67857 +
            ((C78469 + C78470) * C152188 + (C80496 + C80495) * C152092) *
                C152068) *
               C152217) *
              C151851 * C335 +
          ((((C85735 + C85736) * C152188 + (C85737 + C85738) * C152092) *
                C67857 +
            ((C77835 + C77836) * C152188 + (C80080 + C80079) * C152092) *
                C152068) *
               C152246 -
           (((C77836 + C77835) * C152092 + (C76800 + C76799) * C152188) *
                C152068 +
            ((C85736 + C85735) * C152092 +
             (C76458 * C144 + C76471 + C76471 + C151796 * C160 + C76456 * C143 +
              C76472 + C76472 + C76451 * C159) *
                 C152188) *
                C67857) *
               C152259 -
           (((C76458 * C2957 + C80278 + C80278 + C151796 * C2965 +
              C76456 * C2956 + C80277 + C80277 + C76451 * C2964) *
                 C152092 +
             (C80079 + C80080) * C152188) *
                C152068 +
            ((C76458 * C2452 + C80276 + C80276 + C151796 * C2468 +
              C76456 * C2453 + C80275 + C80275 + C76451 * C2469) *
                 C152092 +
             (C85738 + C85737) * C152188) *
                C67857) *
               C152217) *
              C151851 * C336 +
          ((((C76456 * C144 + C76473 + C76473 + C76451 * C160 + C76458 * C145 +
              C76474 + C76474 + C151796 * C161) *
                 C152188 +
             (C85739 + C85740) * C152092) *
                C67857 +
            ((C76805 + C76806) * C152188 + (C77842 + C77841) * C152092) *
                C152068) *
               C152259 -
           (((C85741 + C85742) * C152092 + (C77841 + C77842) * C152188) *
                C152068 +
            ((C85743 + C85744) * C152092 + (C85740 + C85739) * C152188) *
                C67857) *
               C152246 +
           (((C85744 + C85743) * C152188 +
             (C76456 * C2452 + C85699 + C85699 + C76451 * C2468 +
              C76458 * C2451 + C85700 + C85700 + C151796 * C2467) *
                 C152092) *
                C67857 +
            ((C85742 + C85741) * C152188 +
             (C76456 * C2957 + C85701 + C85701 + C76451 * C2965 +
              C76458 * C2958 + C85702 + C85702 + C151796 * C2966) *
                 C152092) *
                C152068) *
               C152217) *
              C151851 * C152208)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
              C76462 + C76462 + C151796 * C159) *
                 C152188 +
             (C85731 + C85732) * C152092) *
                C67857 +
            ((C76793 + C76794) * C152188 + C86671 * C152092) * C152068) *
               C151869 * C1259 -
           ((C78429 * C152092 + (C76796 + C76795) * C152188) * C152068 +
            (C86672 * C152092 + (C76794 + C76793) * C152188) * C67857) *
               C151869 * C1260 +
           ((C76811 * C152188 + (C77832 + C77831) * C152092) * C67857 +
            ((C76798 + C76797) * C152188 + C79185 * C152092) * C152068) *
               C151869 * C152214) *
              C152255 +
          ((((C76799 + C76800) * C152188 + C86673 * C152092) * C67857 +
            ((C76801 + C76802) * C152188 + C78977 * C152092) * C152068) *
               C151869 * C1260 -
           ((C86674 * C152092 + (C76800 + C76799) * C152188) * C152068 +
            ((C85736 + C85735) * C152092 +
             (C76458 * C144 + C76471 + C76471 + C151796 * C160 + C76456 * C143 +
              C76472 + C76472 + C76451 * C159) *
                 C152188) *
                C67857) *
               C151869 * C1259 -
           (((C78989 + C78990) * C152092 + (C76804 + C76803) * C152188) *
                C152068 +
            ((C77838 + C77837) * C152092 + C76812 * C152188) * C67857) *
               C151869 * C152214) *
              C152240 +
          ((((C76456 * C144 + C76473 + C76473 + C76451 * C160 + C76458 * C145 +
              C76474 + C76474 + C151796 * C161) *
                 C152188 +
             (C85739 + C85740) * C152092) *
                C67857 +
            ((C76805 + C76806) * C152188 + C86675 * C152092) * C152068) *
               C151869 * C1259 -
           (((C77839 + C77840) * C152092 + (C76808 + C76807) * C152188) *
                C152068 +
            (C86676 * C152092 + (C76806 + C76805) * C152188) * C67857) *
               C151869 * C1260 +
           ((C76813 * C152188 + (C77840 + C77839) * C152092) * C67857 +
            ((C76810 + C76809) * C152188 +
             (C76456 * C2055 + C77805 + C77805 + C76451 * C2063 +
              C76458 * C2056 + C77806 + C77806 + C151796 * C2064) *
                 C152092) *
                C152068) *
               C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
             C76462 + C76462 + C151796 * C159) *
                C152188 +
            (C85731 + C85732) * C152092) *
               C67857 +
           ((C76793 + C76794) * C152188 + C86671 * C152092) * C152068) *
              C151869 * C1347 -
          ((C78429 * C152092 + (C76796 + C76795) * C152188) * C152068 +
           (C86672 * C152092 + (C76794 + C76793) * C152188) * C67857) *
              C151869 * C1348 +
          ((C76811 * C152188 + (C77832 + C77831) * C152092) * C67857 +
           ((C76798 + C76797) * C152188 + C79185 * C152092) * C152068) *
              C151869 * C1349 -
          (((C79197 + C79198) * C152092 + (C78206 + C78205) * C152188) *
               C152068 +
           ((C78474 + C78473) * C152092 + C78183 * C152188) * C67857) *
              C151869 * C1350 +
          ((C78209 * C152188 + (C79198 + C79197) * C152092) * C67857 +
           ((C78208 + C78207) * C152188 +
            (C76456 * C25783 + C79190 + C79190 + C76451 * C25787 +
             C76458 * C25784 + C79191 + C79191 + C151796 * C25788) *
                C152092) *
               C152068) *
              C151869 * C1351) *
         C151823) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
              C76462 + C76462 + C151796 * C159) *
                 C152188 +
             (C85731 + C85732) * C152092) *
                C67857 +
            ((C76793 + C76794) * C152188 + C86671 * C152092) * C152068) *
               C152259 -
           ((C87419 * C152092 + C86672 * C152188) * C152068 +
            ((C85733 + C85734) * C152092 + (C85732 + C85731) * C152188) *
                C67857) *
               C152246 +
           (((C85734 + C85733) * C152188 +
             (C76456 * C2454 + C79762 + C79762 + C76451 * C2470 +
              C76458 * C2453 + C79761 + C79761 + C151796 * C2469) *
                 C152092) *
                C67857 +
            (C87420 * C152188 + (C80496 + C80495) * C152092) * C152068) *
               C152217) *
              C1259 +
          (((C86671 * C152188 + C87420 * C152092) * C67857 +
            (C87421 * C152188 + C78477 * C152092) * C152068) *
               C152246 -
           ((C78429 * C152092 + (C76796 + C76795) * C152188) * C152068 +
            (C86672 * C152092 + (C76794 + C76793) * C152188) * C67857) *
               C152259 -
           (((C80493 + C80494) * C152092 + C87422 * C152188) * C152068 +
            ((C80495 + C80496) * C152092 + C87419 * C152188) * C67857) *
               C152217) *
              C1260 +
          (((C76811 * C152188 + C87421 * C152092) * C67857 +
            ((C76798 + C76797) * C152188 + C79185 * C152092) * C152068) *
               C152259 -
           (((C78475 + C78476) * C152092 + (C78474 + C78473) * C152188) *
                C152068 +
            (C87422 * C152092 + C78429 * C152188) * C67857) *
               C152246 +
           ((C78477 * C152188 + (C80494 + C80493) * C152092) * C67857 +
            ((C78476 + C78475) * C152188 +
             (C76456 * C27085 + C80483 + C80483 + C76451 * C27089 +
              C76458 * C27086 + C80484 + C80484 + C151796 * C27090) *
                 C152092) *
                C152068) *
               C152217) *
              C152214) *
         C151823) /
            (p * q * std::sqrt(p + q));
    d2ee[73] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
              C76462 + C76462 + C151796 * C159) *
                 C152188 +
             (C85731 + C85732) * C152092) *
                C67857 +
            ((C76793 + C76794) * C152188 + (C77834 + C77833) * C152092) *
                C152068) *
               C152173 -
           (((C78470 + C78469) * C152092 + (C77833 + C77834) * C152188) *
                C152068 +
            ((C85733 + C85734) * C152092 + (C85732 + C85731) * C152188) *
                C67857) *
               C151956) *
              C151851 * C739 +
          ((((C85735 + C85736) * C152188 + (C85737 + C85738) * C152092) *
                C67857 +
            ((C77835 + C77836) * C152188 + (C80080 + C80079) * C152092) *
                C152068) *
               C151956 -
           (((C77836 + C77835) * C152092 + (C76800 + C76799) * C152188) *
                C152068 +
            ((C85736 + C85735) * C152092 +
             (C76458 * C144 + C76471 + C76471 + C151796 * C160 + C76456 * C143 +
              C76472 + C76472 + C76451 * C159) *
                 C152188) *
                C67857) *
               C152173) *
              C151851 * C740 +
          ((((C76456 * C144 + C76473 + C76473 + C76451 * C160 + C76458 * C145 +
              C76474 + C76474 + C151796 * C161) *
                 C152188 +
             (C85739 + C85740) * C152092) *
                C67857 +
            ((C76805 + C76806) * C152188 + (C77842 + C77841) * C152092) *
                C152068) *
               C152173 -
           (((C85741 + C85742) * C152092 + (C77841 + C77842) * C152188) *
                C152068 +
            ((C85743 + C85744) * C152092 + (C85740 + C85739) * C152188) *
                C67857) *
               C151956) *
              C151851 * C741 +
          ((((C86283 + C86284) * C152188 +
             (C76456 * C554 + C86275 + C86275 + C76451 * C578 + C76458 * C556 +
              C86276 + C86276 + C151796 * C580) *
                 C152092) *
                C67857 +
            ((C86011 + C86012) * C152188 +
             (C76456 * C1531 + C86277 + C86277 + C76451 * C1555 +
              C76458 * C2677 + C86278 + C86278 + C151796 * C2679) *
                 C152092) *
                C152068) *
               C151956 -
           (((C86012 + C86011) * C152092 + (C77284 + C77283) * C152188) *
                C152068 +
            ((C86284 + C86283) * C152092 +
             (C76458 * C146 + C76483 + C76483 + C151796 * C162 + C76456 * C145 +
              C76484 + C76484 + C76451 * C161) *
                 C152188) *
                C67857) *
               C152173) *
              C151851 * C152218)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
               C76462 + C76462 + C151796 * C159) *
                  C152188 +
              (C85731 + C85732) * C152092) *
                 C67857 +
             ((C76793 + C76794) * C152188 + C86671 * C152092) * C152068) *
                C152173 -
            ((C87419 * C152092 + C86672 * C152188) * C152068 +
             ((C85733 + C85734) * C152092 + (C85732 + C85731) * C152188) *
                 C67857) *
                C151956) *
               C1259 +
           (((C86671 * C152188 + C87420 * C152092) * C67857 +
             (C87421 * C152188 + C78477 * C152092) * C152068) *
                C151956 -
            ((C78429 * C152092 + (C76796 + C76795) * C152188) * C152068 +
             (C86672 * C152092 + (C76794 + C76793) * C152188) * C67857) *
                C152173) *
               C1260 +
           (((C76811 * C152188 + C87421 * C152092) * C67857 +
             ((C76798 + C76797) * C152188 + C79185 * C152092) * C152068) *
                C152173 -
            (((C78475 + C78476) * C152092 + (C78474 + C78473) * C152188) *
                 C152068 +
             (C87422 * C152092 + C78429 * C152188) * C67857) *
                C151956) *
               C152214) *
              C152158 +
          (((((C85735 + C85736) * C152188 + (C85737 + C85738) * C152092) *
                 C67857 +
             (C86673 * C152188 + (C80080 + C80079) * C152092) * C152068) *
                C151956 -
            ((C86674 * C152092 + (C76800 + C76799) * C152188) * C152068 +
             ((C85736 + C85735) * C152092 +
              (C76458 * C144 + C76471 + C76471 + C151796 * C160 +
               C76456 * C143 + C76472 + C76472 + C76451 * C159) *
                  C152188) *
                 C67857) *
                C152173) *
               C1259 +
           ((((C76799 + C76800) * C152188 + C86673 * C152092) * C67857 +
             ((C76801 + C76802) * C152188 + C78977 * C152092) * C152068) *
                C152173 -
            (((C80077 + C80078) * C152092 + C88067 * C152188) * C152068 +
             ((C80079 + C80080) * C152092 + C86674 * C152188) * C67857) *
                C151956) *
               C1260 +
           (((C78977 * C152188 + (C80078 + C80077) * C152092) * C67857 +
             ((C78990 + C78989) * C152188 +
              (C76456 * C8065 + C80067 + C80067 + C76451 * C8071 +
               C76458 * C8066 + C80068 + C80068 + C151796 * C8072) *
                  C152092) *
                 C152068) *
                C151956 -
            (((C78989 + C78990) * C152092 + (C76804 + C76803) * C152188) *
                 C152068 +
             (C88067 * C152092 + C76812 * C152188) * C67857) *
                C152173) *
               C152214) *
              C151834)) /
            (p * q * std::sqrt(p + q));
    d2ee[74] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
             C76462 + C76462 + C151796 * C159) *
                C152188 +
            (C76456 * C550 + C77040 + C77040 + C76451 * C574 + C76458 * C549 +
             C77039 + C77039 + C151796 * C573) *
                C152092) *
               C67857 +
           ((C76793 + C76794) * C152188 + (C77834 + C77833) * C152092) *
               C152068) *
              C151869 * C151851 * C129 -
          (((C77836 + C77835) * C152092 + (C76800 + C76799) * C152188) *
               C152068 +
           ((C76458 * C548 + C77048 + C77048 + C151796 * C572 + C76456 * C549 +
             C77047 + C77047 + C76451 * C573) *
                C152092 +
            (C76458 * C144 + C76471 + C76471 + C151796 * C160 + C76456 * C143 +
             C76472 + C76472 + C76451 * C159) *
                C152188) *
               C67857) *
              C151869 * C151851 * C130 +
          (((C76456 * C144 + C76473 + C76473 + C76451 * C160 + C76458 * C145 +
             C76474 + C76474 + C151796 * C161) *
                C152188 +
            (C76456 * C548 + C77064 + C77064 + C76451 * C572 + C76458 * C547 +
             C77063 + C77063 + C151796 * C571) *
                C152092) *
               C67857 +
           ((C76805 + C76806) * C152188 + (C77842 + C77841) * C152092) *
               C152068) *
              C151869 * C151851 * C131 -
          (((C76458 * C1087 + C77484 + C77484 + C151796 * C1099 +
             C76456 * C1086 + C77483 + C77483 + C76451 * C1098) *
                C152092 +
            (C77284 + C77283) * C152188) *
               C152068 +
           ((C76458 * C555 + C77482 + C77482 + C151796 * C579 + C76456 * C547 +
             C77481 + C77481 + C76451 * C571) *
                C152092 +
            (C76458 * C146 + C76483 + C76483 + C151796 * C162 + C76456 * C145 +
             C76484 + C76484 + C76451 * C161) *
                C152188) *
               C67857) *
              C151869 * C151851 * C132 +
          (((C76456 * C146 + C76485 + C76485 + C76451 * C162 + C76458 * C147 +
             C76486 + C76486 + C151796 * C163) *
                C152188 +
            (C76456 * C555 + C85087 + C85087 + C76451 * C579 + C76458 * C557 +
             C85088 + C85088 + C151796 * C581) *
                C152092) *
               C67857 +
           ((C76456 * C346 + C76487 + C76487 + C76451 * C370 + C76458 * C348 +
             C76488 + C76488 + C151796 * C372) *
                C152188 +
            (C76456 * C1087 + C85089 + C85089 + C76451 * C1099 +
             C76458 * C1088 + C85090 + C85090 + C151796 * C1100) *
                C152092) *
               C152068) *
              C151869 * C151851 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
              C76462 + C76462 + C151796 * C159) *
                 C152188 +
             (C76456 * C550 + C77040 + C77040 + C76451 * C574 + C76458 * C549 +
              C77039 + C77039 + C151796 * C573) *
                 C152092) *
                C67857 +
            ((C76793 + C76794) * C152188 + (C77834 + C77833) * C152092) *
                C152068) *
               C151869 * C152258 -
           ((C78429 * C152092 + (C76796 + C76795) * C152188) * C152068 +
            ((C77833 + C77834) * C152092 + (C76794 + C76793) * C152188) *
                C67857) *
               C151869 * C152244 +
           ((C76811 * C152188 + (C77832 + C77831) * C152092) * C67857 +
            ((C76798 + C76797) * C152188 + C79185 * C152092) * C152068) *
               C151869 * C152214) *
              C335 +
          ((((C76799 + C76800) * C152188 + (C77835 + C77836) * C152092) *
                C67857 +
            ((C76801 + C76802) * C152188 + C78977 * C152092) * C152068) *
               C151869 * C152244 -
           (((C77836 + C77835) * C152092 + (C76800 + C76799) * C152188) *
                C152068 +
            ((C76458 * C548 + C77048 + C77048 + C151796 * C572 + C76456 * C549 +
              C77047 + C77047 + C76451 * C573) *
                 C152092 +
             (C76458 * C144 + C76471 + C76471 + C151796 * C160 + C76456 * C143 +
              C76472 + C76472 + C76451 * C159) *
                 C152188) *
                C67857) *
               C151869 * C152258 -
           (((C78989 + C78990) * C152092 + (C76804 + C76803) * C152188) *
                C152068 +
            ((C77838 + C77837) * C152092 + C76812 * C152188) * C67857) *
               C151869 * C152214) *
              C336 +
          ((((C76456 * C144 + C76473 + C76473 + C76451 * C160 + C76458 * C145 +
              C76474 + C76474 + C151796 * C161) *
                 C152188 +
             (C76456 * C548 + C77064 + C77064 + C76451 * C572 + C76458 * C547 +
              C77063 + C77063 + C151796 * C571) *
                 C152092) *
                C67857 +
            ((C76805 + C76806) * C152188 + (C77842 + C77841) * C152092) *
                C152068) *
               C151869 * C152258 -
           (((C77839 + C77840) * C152092 + (C76808 + C76807) * C152188) *
                C152068 +
            ((C77841 + C77842) * C152092 + (C76806 + C76805) * C152188) *
                C67857) *
               C151869 * C152244 +
           ((C76813 * C152188 + (C77840 + C77839) * C152092) * C67857 +
            ((C76810 + C76809) * C152188 +
             (C76456 * C2055 + C77805 + C77805 + C76451 * C2063 +
              C76458 * C2056 + C77806 + C77806 + C151796 * C2064) *
                 C152092) *
                C152068) *
               C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
              C76462 + C76462 + C151796 * C159) *
                 C152188 +
             (C85731 + C85732) * C152092) *
                C67857 +
            ((C76793 + C76794) * C152188 + C86671 * C152092) * C152068) *
               C151869 * C1259 -
           ((C78429 * C152092 + (C76796 + C76795) * C152188) * C152068 +
            (C86672 * C152092 + (C76794 + C76793) * C152188) * C67857) *
               C151869 * C1260 +
           ((C76811 * C152188 + (C77832 + C77831) * C152092) * C67857 +
            ((C76798 + C76797) * C152188 + C79185 * C152092) * C152068) *
               C151869 * C152214) *
              C152255 +
          ((((C76799 + C76800) * C152188 + C86673 * C152092) * C67857 +
            ((C76801 + C76802) * C152188 + C78977 * C152092) * C152068) *
               C151869 * C1260 -
           ((C86674 * C152092 + (C76800 + C76799) * C152188) * C152068 +
            ((C85736 + C85735) * C152092 +
             (C76458 * C144 + C76471 + C76471 + C151796 * C160 + C76456 * C143 +
              C76472 + C76472 + C76451 * C159) *
                 C152188) *
                C67857) *
               C151869 * C1259 -
           (((C78989 + C78990) * C152092 + (C76804 + C76803) * C152188) *
                C152068 +
            ((C77838 + C77837) * C152092 + C76812 * C152188) * C67857) *
               C151869 * C152214) *
              C152240 +
          ((((C76456 * C144 + C76473 + C76473 + C76451 * C160 + C76458 * C145 +
              C76474 + C76474 + C151796 * C161) *
                 C152188 +
             (C85739 + C85740) * C152092) *
                C67857 +
            ((C76805 + C76806) * C152188 + C86675 * C152092) * C152068) *
               C151869 * C1259 -
           (((C77839 + C77840) * C152092 + (C76808 + C76807) * C152188) *
                C152068 +
            (C86676 * C152092 + (C76806 + C76805) * C152188) * C67857) *
               C151869 * C1260 +
           ((C76813 * C152188 + (C77840 + C77839) * C152092) * C67857 +
            ((C76810 + C76809) * C152188 +
             (C76456 * C2055 + C77805 + C77805 + C76451 * C2063 +
              C76458 * C2056 + C77806 + C77806 + C151796 * C2064) *
                 C152092) *
                C152068) *
               C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
             C76462 + C76462 + C151796 * C159) *
                C152188 +
            (C85731 + C85732) * C152092) *
               C67857 +
           ((C76793 + C76794) * C152188 + C86671 * C152092) * C152068) *
              C151869 * C1347 -
          ((C78429 * C152092 + (C76796 + C76795) * C152188) * C152068 +
           (C86672 * C152092 + (C76794 + C76793) * C152188) * C67857) *
              C151869 * C1348 +
          ((C76811 * C152188 + (C77832 + C77831) * C152092) * C67857 +
           ((C76798 + C76797) * C152188 + C79185 * C152092) * C152068) *
              C151869 * C1349 -
          (((C79197 + C79198) * C152092 + (C78206 + C78205) * C152188) *
               C152068 +
           ((C78474 + C78473) * C152092 + C78183 * C152188) * C67857) *
              C151869 * C1350 +
          ((C78209 * C152188 + (C79198 + C79197) * C152092) * C67857 +
           ((C78208 + C78207) * C152188 +
            (C76456 * C25783 + C79190 + C79190 + C76451 * C25787 +
             C76458 * C25784 + C79191 + C79191 + C151796 * C25788) *
                C152092) *
               C152068) *
              C151869 * C1351) *
         C151823) /
            (p * q * std::sqrt(p + q));
    d2ee[75] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
              C23049 + C23049 + C151796 * C159) *
                 C96046 +
             (C46294 + C46295) * C152092) *
                C67857 +
            ((C23380 + C23381) * C96046 + C124903 * C152092) * C152068) *
               C151869 * C151910 -
           ((C25028 * C152092 + (C23383 + C23382) * C96046) * C152068 +
            (C124904 * C152092 + (C23381 + C23380) * C96046) * C67857) *
               C151869 * C151917 +
           ((C23398 * C96046 + C125652 * C152092) * C67857 +
            ((C23385 + C23384) * C96046 + C25790 * C152092) * C152068) *
               C151869 * C3585) *
              C151828 +
          ((((C23386 + C23387) * C96046 + C124905 * C152092) * C67857 +
            ((C23388 + C23389) * C96046 + C25576 * C152092) * C152068) *
               C151869 * C151917 -
           ((C124906 * C152092 + (C23387 + C23386) * C96046) * C152068 +
            ((C46301 + C46300) * C152092 +
             (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
              C23059 + C23059 + C152149 * C159) *
                 C96046) *
                C67857) *
               C151869 * C151910 -
           (((C25588 + C25589) * C152092 + (C23391 + C23390) * C96046) *
                C152068 +
            (C126298 * C152092 + C23399 * C96046) * C67857) *
               C151869 * C3585) *
              C151837 +
          ((((C23043 * C144 + C23060 + C23060 + C152149 * C160 + C23045 * C145 +
              C23061 + C23061 + C151796 * C161) *
                 C96046 +
             (C46306 + C46307) * C152092) *
                C67857 +
            ((C23392 + C23393) * C96046 + C124907 * C152092) * C152068) *
               C151869 * C151910 -
           (((C24426 + C24427) * C152092 + (C23395 + C23394) * C96046) *
                C152068 +
            (C124908 * C152092 + (C23393 + C23392) * C96046) * C67857) *
               C151869 * C151917 +
           ((C23400 * C96046 + (C24427 + C24426) * C152092) * C67857 +
            ((C23397 + C23396) * C96046 +
             (C23043 * C2055 + C24392 + C24392 + C152149 * C2063 +
              C23045 * C2056 + C24393 + C24393 + C151796 * C2064) *
                 C152092) *
                C152068) *
               C151869 * C3585) *
              C3588)) /
        (p * q * std::sqrt(p + q));
    d2ee[76] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C23043 * C142 + C23048 + C23048 + C152149 * C158 +
               C23045 * C143 + C23049 + C23049 + C151796 * C159) *
                  C96046 +
              (C46294 + C46295) * C152092) *
                 C67857 +
             ((C23380 + C23381) * C96046 + C124903 * C152092) * C152068) *
                C152173 -
            ((C47587 * C152092 + C124904 * C96046) * C152068 +
             ((C46297 + C46296) * C152092 + (C46295 + C46294) * C96046) *
                 C67857) *
                C151956) *
               C151910 +
           (((C124903 * C96046 + C125651 * C152092) * C67857 +
             (C125652 * C96046 + C25076 * C152092) * C152068) *
                C151956 -
            ((C25028 * C152092 + (C23383 + C23382) * C96046) * C152068 +
             (C124904 * C152092 + (C23381 + C23380) * C96046) * C67857) *
                C152173) *
               C151917 +
           (((C23398 * C96046 + C125652 * C152092) * C67857 +
             ((C23385 + C23384) * C96046 + C25790 * C152092) * C152068) *
                C152173 -
            (((C25074 + C25075) * C152092 + C126557 * C96046) * C152068 +
             (C125653 * C152092 + C25028 * C96046) * C67857) *
                C151956) *
               C3585) *
              C3241 +
          (((((C46300 + C46301) * C96046 + (C46302 + C46303) * C152092) *
                 C67857 +
             (C124905 * C96046 + C49146 * C152092) * C152068) *
                C151956 -
            ((C124906 * C152092 + (C23387 + C23386) * C96046) * C152068 +
             ((C46301 + C46300) * C152092 +
              (C23045 * C144 + C23058 + C23058 + C151796 * C160 +
               C23043 * C143 + C23059 + C23059 + C152149 * C159) *
                  C96046) *
                 C67857) *
                C152173) *
               C151910 +
           ((((C23386 + C23387) * C96046 + C124905 * C152092) * C67857 +
             ((C23388 + C23389) * C96046 + C25576 * C152092) * C152068) *
                C152173 -
            (((C26688 + C26689) * C152092 + C126298 * C96046) * C152068 +
             (C127686 * C152092 + C124906 * C96046) * C67857) *
                C151956) *
               C151917 +
           (((C25576 * C96046 + (C26689 + C26688) * C152092) * C67857 +
             ((C25589 + C25588) * C96046 +
              (C23043 * C8065 + C26678 + C26678 + C152149 * C8071 +
               C23045 * C8066 + C26679 + C26679 + C151796 * C8072) *
                  C152092) *
                 C152068) *
                C151956 -
            (((C25588 + C25589) * C152092 + (C23391 + C23390) * C96046) *
                 C152068 +
             (C126298 * C152092 + C23399 * C96046) * C67857) *
                C152173) *
               C3585) *
              C151834)) /
        (p * q * std::sqrt(p + q));
    d2ee[77] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
              C23049 + C23049 + C151796 * C159) *
                 C96046 +
             (C46294 + C46295) * C152092) *
                C67857 +
            ((C23380 + C23381) * C96046 + C124903 * C152092) * C152068) *
               C151869 * C152265 -
           ((C25028 * C152092 + (C23383 + C23382) * C96046) * C152068 +
            (C124904 * C152092 + (C23381 + C23380) * C96046) * C67857) *
               C151869 * C152261 +
           ((C23398 * C96046 + C125652 * C152092) * C67857 +
            ((C23385 + C23384) * C96046 + C25790 * C152092) * C152068) *
               C151869 * C152249 -
           (((C25802 + C25803) * C152092 + (C24799 + C24798) * C96046) *
                C152068 +
            (C126557 * C152092 + C24776 * C96046) * C67857) *
               C151869 * C152224) *
              C3241 +
          ((((C23386 + C23387) * C96046 + C124905 * C152092) * C67857 +
            ((C23388 + C23389) * C96046 + C25576 * C152092) * C152068) *
               C151869 * C152261 -
           ((C124906 * C152092 + (C23387 + C23386) * C96046) * C152068 +
            ((C46301 + C46300) * C152092 +
             (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
              C23059 + C23059 + C152149 * C159) *
                 C96046) *
                C67857) *
               C151869 * C152265 -
           (((C25588 + C25589) * C152092 + (C23391 + C23390) * C96046) *
                C152068 +
            (C126298 * C152092 + C23399 * C96046) * C67857) *
               C151869 * C152249 +
           ((C25272 * C96046 + (C25589 + C25588) * C152092) * C67857 +
            ((C25285 + C25284) * C96046 +
             (C23043 * C8842 + C25581 + C25581 + C152149 * C8848 +
              C23045 * C8843 + C25582 + C25582 + C151796 * C8849) *
                 C152092) *
                C152068) *
               C151869 * C152224) *
              C151834)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
              C23049 + C23049 + C151796 * C159) *
                 C96046 +
             (C46294 + C46295) * C152092) *
                C67857 +
            ((C23380 + C23381) * C96046 + C124903 * C152092) * C152068) *
               C151869 * C3101 -
           ((C25028 * C152092 + (C23383 + C23382) * C96046) * C152068 +
            (C124904 * C152092 + (C23381 + C23380) * C96046) * C67857) *
               C151869 * C151914) *
              C152264 +
          ((((C23386 + C23387) * C96046 + C124905 * C152092) * C67857 +
            ((C23388 + C23389) * C96046 + C25576 * C152092) * C152068) *
               C151869 * C151914 -
           ((C124906 * C152092 + (C23387 + C23386) * C96046) * C152068 +
            ((C46301 + C46300) * C152092 +
             (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
              C23059 + C23059 + C152149 * C159) *
                 C96046) *
                C67857) *
               C151869 * C3101) *
              C152257 +
          ((((C23043 * C144 + C23060 + C23060 + C152149 * C160 + C23045 * C145 +
              C23061 + C23061 + C151796 * C161) *
                 C96046 +
             (C46306 + C46307) * C152092) *
                C67857 +
            ((C23392 + C23393) * C96046 + C124907 * C152092) * C152068) *
               C151869 * C3101 -
           (((C24426 + C24427) * C152092 + (C23395 + C23394) * C96046) *
                C152068 +
            (C124908 * C152092 + (C23393 + C23392) * C96046) * C67857) *
               C151869 * C151914) *
              C152242 +
          ((((C23870 + C23871) * C96046 + (C124257 + C124258) * C152092) *
                C67857 +
            ((C23872 + C23873) * C96046 +
             (C23043 * C1535 + C24072 + C24072 + C152149 * C1559 +
              C23045 * C1916 + C24073 + C24073 + C151796 * C1918) *
                 C152092) *
                C152068) *
               C151869 * C151914 -
           (((C124258 + C124257) * C152092 + (C23871 + C23870) * C96046) *
                C152068 +
            ((C46724 + C46723) * C152092 +
             (C23045 * C146 + C23070 + C23070 + C151796 * C162 + C23043 * C145 +
              C23071 + C23071 + C152149 * C161) *
                 C96046) *
                C67857) *
               C151869 * C3101) *
              C152218)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C23043 * C142 + C23048 + C23048 + C152149 * C158 +
               C23045 * C143 + C23049 + C23049 + C151796 * C159) *
                  C96046 +
              (C46294 + C46295) * C152092) *
                 C67857 +
             ((C23380 + C23381) * C96046 + C124903 * C152092) * C152068) *
                C152259 -
            ((C47587 * C152092 + C124904 * C96046) * C152068 +
             ((C46297 + C46296) * C152092 + (C46295 + C46294) * C96046) *
                 C67857) *
                C152246 +
            ((C46312 * C96046 + (C46299 + C46298) * C152092) * C67857 +
             (C125651 * C96046 + C49563 * C152092) * C152068) *
                C152217) *
               C3101 +
           (((C124903 * C96046 + C125651 * C152092) * C67857 +
             (C125652 * C96046 + C25076 * C152092) * C152068) *
                C152246 -
            ((C25028 * C152092 + (C23383 + C23382) * C96046) * C152068 +
             (C124904 * C152092 + (C23381 + C23380) * C96046) * C67857) *
                C152259 -
            (((C27110 + C27111) * C152092 + C125653 * C96046) * C152068 +
             (C128203 * C152092 + C47587 * C96046) * C67857) *
                C152217) *
               C151914) *
              C3241 +
          (((((C46300 + C46301) * C96046 + (C46302 + C46303) * C152092) *
                 C67857 +
             (C124905 * C96046 + C49146 * C152092) * C152068) *
                C152246 -
            ((C124906 * C152092 + (C23387 + C23386) * C96046) * C152068 +
             ((C46301 + C46300) * C152092 +
              (C23045 * C144 + C23058 + C23058 + C151796 * C160 +
               C23043 * C143 + C23059 + C23059 + C152149 * C159) *
                  C96046) *
                 C67857) *
                C152259 -
            (((C49157 + C49158) * C152092 + C127686 * C96046) * C152068 +
             ((C46305 + C46304) * C152092 + C46313 * C96046) * C67857) *
                C152217) *
               C3101 +
           ((((C23386 + C23387) * C96046 + C124905 * C152092) * C67857 +
             ((C23388 + C23389) * C96046 + C25576 * C152092) * C152068) *
                C152259 -
            (((C26688 + C26689) * C152092 + C126298 * C96046) * C152068 +
             (C127686 * C152092 + C124906 * C96046) * C67857) *
                C152246 +
            ((C49146 * C96046 + (C49158 + C49157) * C152092) * C67857 +
             ((C26689 + C26688) * C96046 +
              (C23043 * C10150 + C26890 + C26890 + C152149 * C10156 +
               C23045 * C10151 + C26891 + C26891 + C151796 * C10157) *
                  C152092) *
                 C152068) *
                C152217) *
               C151914) *
              C151834)) /
            (p * q * std::sqrt(p + q));
    d2ee[78] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C23043 * C142 + C23048 + C23048 + C152149 * C158 +
               C23045 * C143 + C23049 + C23049 + C151796 * C159) *
                  C96046 +
              (C46294 + C46295) * C152092) *
                 C67857 +
             ((C23380 + C23381) * C96046 + C124903 * C152092) * C152068) *
                C152173 -
            ((C47587 * C152092 + C124904 * C96046) * C152068 +
             ((C46297 + C46296) * C152092 + (C46295 + C46294) * C96046) *
                 C67857) *
                C151956) *
               C3101 +
           (((C124903 * C96046 + C125651 * C152092) * C67857 +
             (C125652 * C96046 + C25076 * C152092) * C152068) *
                C151956 -
            ((C25028 * C152092 + (C23383 + C23382) * C96046) * C152068 +
             (C124904 * C152092 + (C23381 + C23380) * C96046) * C67857) *
                C152173) *
               C151914) *
              C151828 +
          (((((C46300 + C46301) * C96046 + (C46302 + C46303) * C152092) *
                 C67857 +
             (C124905 * C96046 + C49146 * C152092) * C152068) *
                C151956 -
            ((C124906 * C152092 + (C23387 + C23386) * C96046) * C152068 +
             ((C46301 + C46300) * C152092 +
              (C23045 * C144 + C23058 + C23058 + C151796 * C160 +
               C23043 * C143 + C23059 + C23059 + C152149 * C159) *
                  C96046) *
                 C67857) *
                C152173) *
               C3101 +
           ((((C23386 + C23387) * C96046 + C124905 * C152092) * C67857 +
             ((C23388 + C23389) * C96046 + C25576 * C152092) * C152068) *
                C152173 -
            (((C26688 + C26689) * C152092 + C126298 * C96046) * C152068 +
             (C127686 * C152092 + C124906 * C96046) * C67857) *
                C151956) *
               C151914) *
              C151837 +
          (((((C23043 * C144 + C23060 + C23060 + C152149 * C160 +
               C23045 * C145 + C23061 + C23061 + C151796 * C161) *
                  C96046 +
              (C46306 + C46307) * C152092) *
                 C67857 +
             ((C23392 + C23393) * C96046 + C124907 * C152092) * C152068) *
                C152173 -
            (((C47028 + C47027) * C152092 + C124908 * C96046) * C152068 +
             ((C46309 + C46308) * C152092 + (C46307 + C46306) * C96046) *
                 C67857) *
                C151956) *
               C3101 +
           (((C124907 * C96046 + (C47027 + C47028) * C152092) * C67857 +
             ((C24427 + C24426) * C96046 +
              (C23043 * C1541 + C23656 + C23656 + C152149 * C1565 +
               C23045 * C1542 + C23657 + C23657 + C151796 * C1566) *
                  C152092) *
                 C152068) *
                C151956 -
            (((C24426 + C24427) * C152092 + (C23395 + C23394) * C96046) *
                 C152068 +
             (C124908 * C152092 + (C23393 + C23392) * C96046) * C67857) *
                C152173) *
               C151914) *
              C3588)) /
        (p * q * std::sqrt(p + q));
    d2ee[79] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
              C23049 + C23049 + C151796 * C159) *
                 C96046 +
             (C46294 + C46295) * C152092) *
                C67857 +
            ((C23380 + C23381) * C96046 + C124903 * C152092) * C152068) *
               C151869 * C3101 -
           ((C25028 * C152092 + (C23383 + C23382) * C96046) * C152068 +
            (C124904 * C152092 + (C23381 + C23380) * C96046) * C67857) *
               C151869 * C151914) *
              C152264 +
          ((((C23386 + C23387) * C96046 + C124905 * C152092) * C67857 +
            ((C23388 + C23389) * C96046 + C25576 * C152092) * C152068) *
               C151869 * C151914 -
           ((C124906 * C152092 + (C23387 + C23386) * C96046) * C152068 +
            ((C46301 + C46300) * C152092 +
             (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
              C23059 + C23059 + C152149 * C159) *
                 C96046) *
                C67857) *
               C151869 * C3101) *
              C152257 +
          ((((C23043 * C144 + C23060 + C23060 + C152149 * C160 + C23045 * C145 +
              C23061 + C23061 + C151796 * C161) *
                 C96046 +
             (C46306 + C46307) * C152092) *
                C67857 +
            ((C23392 + C23393) * C96046 + C124907 * C152092) * C152068) *
               C151869 * C3101 -
           (((C24426 + C24427) * C152092 + (C23395 + C23394) * C96046) *
                C152068 +
            (C124908 * C152092 + (C23393 + C23392) * C96046) * C67857) *
               C151869 * C151914) *
              C152242 +
          ((((C23870 + C23871) * C96046 + (C124257 + C124258) * C152092) *
                C67857 +
            ((C23872 + C23873) * C96046 +
             (C23043 * C1535 + C24072 + C24072 + C152149 * C1559 +
              C23045 * C1916 + C24073 + C24073 + C151796 * C1918) *
                 C152092) *
                C152068) *
               C151869 * C151914 -
           (((C124258 + C124257) * C152092 + (C23871 + C23870) * C96046) *
                C152068 +
            ((C46724 + C46723) * C152092 +
             (C23045 * C146 + C23070 + C23070 + C151796 * C162 + C23043 * C145 +
              C23071 + C23071 + C152149 * C161) *
                 C96046) *
                C67857) *
               C151869 * C3101) *
              C152218)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
              C23049 + C23049 + C151796 * C159) *
                 C96046 +
             (C46294 + C46295) * C152092) *
                C67857 +
            ((C23380 + C23381) * C96046 + C124903 * C152092) * C152068) *
               C151869 * C152265 -
           ((C25028 * C152092 + (C23383 + C23382) * C96046) * C152068 +
            (C124904 * C152092 + (C23381 + C23380) * C96046) * C67857) *
               C151869 * C152261 +
           ((C23398 * C96046 + C125652 * C152092) * C67857 +
            ((C23385 + C23384) * C96046 + C25790 * C152092) * C152068) *
               C151869 * C152249 -
           (((C25802 + C25803) * C152092 + (C24799 + C24798) * C96046) *
                C152068 +
            (C126557 * C152092 + C24776 * C96046) * C67857) *
               C151869 * C152224) *
              C3241 +
          ((((C23386 + C23387) * C96046 + C124905 * C152092) * C67857 +
            ((C23388 + C23389) * C96046 + C25576 * C152092) * C152068) *
               C151869 * C152261 -
           ((C124906 * C152092 + (C23387 + C23386) * C96046) * C152068 +
            ((C46301 + C46300) * C152092 +
             (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
              C23059 + C23059 + C152149 * C159) *
                 C96046) *
                C67857) *
               C151869 * C152265 -
           (((C25588 + C25589) * C152092 + (C23391 + C23390) * C96046) *
                C152068 +
            (C126298 * C152092 + C23399 * C96046) * C67857) *
               C151869 * C152249 +
           ((C25272 * C96046 + (C25589 + C25588) * C152092) * C67857 +
            ((C25285 + C25284) * C96046 +
             (C23043 * C8842 + C25581 + C25581 + C152149 * C8848 +
              C23045 * C8843 + C25582 + C25582 + C151796 * C8849) *
                 C152092) *
                C152068) *
               C151869 * C152224) *
              C151834)) /
            (p * q * std::sqrt(p + q));
    d2ee[80] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C23043 * C142 + C23048 + C23048 + C152149 * C158 +
               C23045 * C143 + C23049 + C23049 + C151796 * C159) *
                  C96046 +
              (C46294 + C46295) * C152092) *
                 C67857 +
             ((C23380 + C23381) * C96046 + C124903 * C152092) * C152068) *
                C4107 -
            ((C47587 * C152092 + C124904 * C96046) * C152068 +
             ((C46297 + C46296) * C152092 + (C46295 + C46294) * C96046) *
                 C67857) *
                C151956) *
               C151910 +
           (((C124903 * C96046 + C125651 * C152092) * C67857 +
             (C125652 * C96046 + C25076 * C152092) * C152068) *
                C151956 -
            ((C25028 * C152092 + (C23383 + C23382) * C96046) * C152068 +
             (C124904 * C152092 + (C23381 + C23380) * C96046) * C67857) *
                C4107) *
               C151917 +
           (((C23398 * C96046 + C125652 * C152092) * C67857 +
             ((C23385 + C23384) * C96046 + C25790 * C152092) * C152068) *
                C4107 -
            (((C25074 + C25075) * C152092 + C126557 * C96046) * C152068 +
             (C125653 * C152092 + C25028 * C96046) * C67857) *
                C151956) *
               C3585) *
              C152158 +
          (((((C46300 + C46301) * C96046 + (C46302 + C46303) * C152092) *
                 C67857 +
             (C124905 * C96046 + C49146 * C152092) * C152068) *
                C151956 -
            ((C124906 * C152092 + (C23387 + C23386) * C96046) * C152068 +
             ((C46301 + C46300) * C152092 +
              (C23045 * C144 + C23058 + C23058 + C151796 * C160 +
               C23043 * C143 + C23059 + C23059 + C152149 * C159) *
                  C96046) *
                 C67857) *
                C4107) *
               C151910 +
           ((((C23386 + C23387) * C96046 + C124905 * C152092) * C67857 +
             ((C23388 + C23389) * C96046 + C25576 * C152092) * C152068) *
                C4107 -
            (((C26688 + C26689) * C152092 + C126298 * C96046) * C152068 +
             (C127686 * C152092 + C124906 * C96046) * C67857) *
                C151956) *
               C151917 +
           (((C25576 * C96046 + (C26689 + C26688) * C152092) * C67857 +
             ((C25589 + C25588) * C96046 +
              (C23043 * C8065 + C26678 + C26678 + C152149 * C8071 +
               C23045 * C8066 + C26679 + C26679 + C151796 * C8072) *
                  C152092) *
                 C152068) *
                C151956 -
            (((C25588 + C25589) * C152092 + (C23391 + C23390) * C96046) *
                 C152068 +
             (C126298 * C152092 + C23399 * C96046) * C67857) *
                C4107) *
               C3585) *
              C151834)) /
        (p * q * std::sqrt(p + q));
    d2ee[81] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
              C23049 + C23049 + C151796 * C159) *
                 C96046 +
             (C46294 + C46295) * C152092) *
                C67857 +
            ((C23380 + C23381) * C96046 + C124903 * C152092) * C152068) *
               C151952 -
           ((C47587 * C152092 + C124904 * C96046) * C152068 +
            ((C46297 + C46296) * C152092 + (C46295 + C46294) * C96046) *
                C67857) *
               C151959 +
           ((C46312 * C96046 + (C46299 + C46298) * C152092) * C67857 +
            (C125651 * C96046 + C49563 * C152092) * C152068) *
               C4779) *
              C151910 +
          (((C124903 * C96046 + C125651 * C152092) * C67857 +
            (C125652 * C96046 + C25076 * C152092) * C152068) *
               C151959 -
           ((C25028 * C152092 + (C23383 + C23382) * C96046) * C152068 +
            (C124904 * C152092 + (C23381 + C23380) * C96046) * C67857) *
               C151952 -
           (((C27110 + C27111) * C152092 + C125653 * C96046) * C152068 +
            (C128203 * C152092 + C47587 * C96046) * C67857) *
               C4779) *
              C151917 +
          (((C23398 * C96046 + C125652 * C152092) * C67857 +
            ((C23385 + C23384) * C96046 + C25790 * C152092) * C152068) *
               C151952 -
           (((C25074 + C25075) * C152092 + C126557 * C96046) * C152068 +
            (C125653 * C152092 + C25028 * C96046) * C67857) *
               C151959 +
           ((C25076 * C96046 + (C27111 + C27110) * C152092) * C67857 +
            ((C25075 + C25074) * C96046 +
             (C23043 * C27085 + C27100 + C27100 + C152149 * C27089 +
              C23045 * C27086 + C27101 + C27101 + C151796 * C27090) *
                 C152092) *
                C152068) *
               C4779) *
              C3585) *
         C151823) /
        (p * q * std::sqrt(p + q));
    d2ee[82] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
              C23049 + C23049 + C151796 * C159) *
                 C96046 +
             (C46294 + C46295) * C152092) *
                C67857 +
            ((C23380 + C23381) * C96046 + C124903 * C152092) * C152068) *
               C4107 -
           ((C47587 * C152092 + C124904 * C96046) * C152068 +
            ((C46297 + C46296) * C152092 + (C46295 + C46294) * C96046) *
                C67857) *
               C151956) *
              C152265 +
          (((C124903 * C96046 + C125651 * C152092) * C67857 +
            (C125652 * C96046 + C25076 * C152092) * C152068) *
               C151956 -
           ((C25028 * C152092 + (C23383 + C23382) * C96046) * C152068 +
            (C124904 * C152092 + (C23381 + C23380) * C96046) * C67857) *
               C4107) *
              C152261 +
          (((C23398 * C96046 + C125652 * C152092) * C67857 +
            ((C23385 + C23384) * C96046 + C25790 * C152092) * C152068) *
               C4107 -
           (((C25074 + C25075) * C152092 + C126557 * C96046) * C152068 +
            (C125653 * C152092 + C25028 * C96046) * C67857) *
               C151956) *
              C152249 +
          (((C25790 * C96046 + (C25075 + C25074) * C152092) * C67857 +
            ((C25803 + C25802) * C96046 +
             (C23043 * C25021 + C25049 + C25049 + C152149 * C25025 +
              C23045 * C25022 + C25050 + C25050 + C151796 * C25026) *
                 C152092) *
                C152068) *
               C151956 -
           (((C25802 + C25803) * C152092 + (C24799 + C24798) * C96046) *
                C152068 +
            (C126557 * C152092 + C24776 * C96046) * C67857) *
               C4107) *
              C152224) *
         C151823) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C23043 * C142 + C23048 + C23048 + C152149 * C158 +
               C23045 * C143 + C23049 + C23049 + C151796 * C159) *
                  C96046 +
              (C46294 + C46295) * C152092) *
                 C67857 +
             ((C23380 + C23381) * C96046 + C124903 * C152092) * C152068) *
                C4107 -
            ((C47587 * C152092 + C124904 * C96046) * C152068 +
             ((C46297 + C46296) * C152092 + (C46295 + C46294) * C96046) *
                 C67857) *
                C151956) *
               C3101 +
           (((C124903 * C96046 + C125651 * C152092) * C67857 +
             (C125652 * C96046 + C25076 * C152092) * C152068) *
                C151956 -
            ((C25028 * C152092 + (C23383 + C23382) * C96046) * C152068 +
             (C124904 * C152092 + (C23381 + C23380) * C96046) * C67857) *
                C4107) *
               C151914) *
              C152255 +
          (((((C46300 + C46301) * C96046 + (C46302 + C46303) * C152092) *
                 C67857 +
             (C124905 * C96046 + C49146 * C152092) * C152068) *
                C151956 -
            ((C124906 * C152092 + (C23387 + C23386) * C96046) * C152068 +
             ((C46301 + C46300) * C152092 +
              (C23045 * C144 + C23058 + C23058 + C151796 * C160 +
               C23043 * C143 + C23059 + C23059 + C152149 * C159) *
                  C96046) *
                 C67857) *
                C4107) *
               C3101 +
           ((((C23386 + C23387) * C96046 + C124905 * C152092) * C67857 +
             ((C23388 + C23389) * C96046 + C25576 * C152092) * C152068) *
                C4107 -
            (((C26688 + C26689) * C152092 + C126298 * C96046) * C152068 +
             (C127686 * C152092 + C124906 * C96046) * C67857) *
                C151956) *
               C151914) *
              C152240 +
          (((((C23043 * C144 + C23060 + C23060 + C152149 * C160 +
               C23045 * C145 + C23061 + C23061 + C151796 * C161) *
                  C96046 +
              (C46306 + C46307) * C152092) *
                 C67857 +
             ((C23392 + C23393) * C96046 + C124907 * C152092) * C152068) *
                C4107 -
            (((C47028 + C47027) * C152092 + C124908 * C96046) * C152068 +
             ((C46309 + C46308) * C152092 + (C46307 + C46306) * C96046) *
                 C67857) *
                C151956) *
               C3101 +
           (((C124907 * C96046 + (C47027 + C47028) * C152092) * C67857 +
             ((C24427 + C24426) * C96046 +
              (C23043 * C1541 + C23656 + C23656 + C152149 * C1565 +
               C23045 * C1542 + C23657 + C23657 + C151796 * C1566) *
                  C152092) *
                 C152068) *
                C151956 -
            (((C24426 + C24427) * C152092 + (C23395 + C23394) * C96046) *
                 C152068 +
             (C124908 * C152092 + (C23393 + C23392) * C96046) * C67857) *
                C4107) *
               C151914) *
              C152208)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
              C23049 + C23049 + C151796 * C159) *
                 C96046 +
             (C46294 + C46295) * C152092) *
                C67857 +
            ((C23380 + C23381) * C96046 + C124903 * C152092) * C152068) *
               C152266 -
           ((C47587 * C152092 + C124904 * C96046) * C152068 +
            ((C46297 + C46296) * C152092 + (C46295 + C46294) * C96046) *
                C67857) *
               C152263 +
           ((C46312 * C96046 + (C46299 + C46298) * C152092) * C67857 +
            (C125651 * C96046 + C49563 * C152092) * C152068) *
               C152252 -
           (((C49574 + C49575) * C152092 + C128203 * C96046) * C152068 +
            ((C48852 + C48851) * C152092 + C48830 * C96046) * C67857) *
               C152230) *
              C3101 +
          (((C124903 * C96046 + C125651 * C152092) * C67857 +
            (C125652 * C96046 + C25076 * C152092) * C152068) *
               C152263 -
           ((C25028 * C152092 + (C23383 + C23382) * C96046) * C152068 +
            (C124904 * C152092 + (C23381 + C23380) * C96046) * C67857) *
               C152266 -
           (((C27110 + C27111) * C152092 + C125653 * C96046) * C152068 +
            (C128203 * C152092 + C47587 * C96046) * C67857) *
               C152252 +
           ((C49563 * C96046 + (C49575 + C49574) * C152092) * C67857 +
            ((C27111 + C27110) * C96046 +
             (C23043 * C26361 + C26378 + C26378 + C152149 * C26365 +
              C23045 * C26362 + C26379 + C26379 + C151796 * C26366) *
                 C152092) *
                C152068) *
               C152230) *
              C151914) *
         C151823) /
            (p * q * std::sqrt(p + q));
    d2ee[83] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C23043 * C142 + C23048 + C23048 + C152149 * C158 +
               C23045 * C143 + C23049 + C23049 + C151796 * C159) *
                  C96046 +
              (C46294 + C46295) * C152092) *
                 C67857 +
             ((C23380 + C23381) * C96046 + C124903 * C152092) * C152068) *
                C151952 -
            ((C47587 * C152092 + C124904 * C96046) * C152068 +
             ((C46297 + C46296) * C152092 + (C46295 + C46294) * C96046) *
                 C67857) *
                C151959 +
            ((C46312 * C96046 + (C46299 + C46298) * C152092) * C67857 +
             (C125651 * C96046 + C49563 * C152092) * C152068) *
                C4779) *
               C3101 +
           (((C124903 * C96046 + C125651 * C152092) * C67857 +
             (C125652 * C96046 + C25076 * C152092) * C152068) *
                C151959 -
            ((C25028 * C152092 + (C23383 + C23382) * C96046) * C152068 +
             (C124904 * C152092 + (C23381 + C23380) * C96046) * C67857) *
                C151952 -
            (((C27110 + C27111) * C152092 + C125653 * C96046) * C152068 +
             (C128203 * C152092 + C47587 * C96046) * C67857) *
                C4779) *
               C151914) *
              C152158 +
          (((((C46300 + C46301) * C96046 + (C46302 + C46303) * C152092) *
                 C67857 +
             (C124905 * C96046 + C49146 * C152092) * C152068) *
                C151959 -
            ((C124906 * C152092 + (C23387 + C23386) * C96046) * C152068 +
             ((C46301 + C46300) * C152092 +
              (C23045 * C144 + C23058 + C23058 + C151796 * C160 +
               C23043 * C143 + C23059 + C23059 + C152149 * C159) *
                  C96046) *
                 C67857) *
                C151952 -
            (((C49157 + C49158) * C152092 + C127686 * C96046) * C152068 +
             ((C46305 + C46304) * C152092 + C46313 * C96046) * C67857) *
                C4779) *
               C3101 +
           ((((C23386 + C23387) * C96046 + C124905 * C152092) * C67857 +
             ((C23388 + C23389) * C96046 + C25576 * C152092) * C152068) *
                C151952 -
            (((C26688 + C26689) * C152092 + C126298 * C96046) * C152068 +
             (C127686 * C152092 + C124906 * C96046) * C67857) *
                C151959 +
            ((C49146 * C96046 + (C49158 + C49157) * C152092) * C67857 +
             ((C26689 + C26688) * C96046 +
              (C23043 * C10150 + C26890 + C26890 + C152149 * C10156 +
               C23045 * C10151 + C26891 + C26891 + C151796 * C10157) *
                  C152092) *
                 C152068) *
                C4779) *
               C151914) *
              C151834)) /
        (p * q * std::sqrt(p + q));
    d2ee[84] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C23043 * C142 + C23048 + C23048 + C152149 * C158 +
               C23045 * C143 + C23049 + C23049 + C151796 * C159) *
                  C96046 +
              (C46294 + C46295) * C152092) *
                 C67857 +
             ((C23380 + C23381) * C96046 + C124903 * C152092) * C152068) *
                C4107 -
            ((C47587 * C152092 + C124904 * C96046) * C152068 +
             ((C46297 + C46296) * C152092 + (C46295 + C46294) * C96046) *
                 C67857) *
                C151956) *
               C3101 +
           (((C124903 * C96046 + C125651 * C152092) * C67857 +
             (C125652 * C96046 + C25076 * C152092) * C152068) *
                C151956 -
            ((C25028 * C152092 + (C23383 + C23382) * C96046) * C152068 +
             (C124904 * C152092 + (C23381 + C23380) * C96046) * C67857) *
                C4107) *
               C151914) *
              C152255 +
          (((((C46300 + C46301) * C96046 + (C46302 + C46303) * C152092) *
                 C67857 +
             (C124905 * C96046 + C49146 * C152092) * C152068) *
                C151956 -
            ((C124906 * C152092 + (C23387 + C23386) * C96046) * C152068 +
             ((C46301 + C46300) * C152092 +
              (C23045 * C144 + C23058 + C23058 + C151796 * C160 +
               C23043 * C143 + C23059 + C23059 + C152149 * C159) *
                  C96046) *
                 C67857) *
                C4107) *
               C3101 +
           ((((C23386 + C23387) * C96046 + C124905 * C152092) * C67857 +
             ((C23388 + C23389) * C96046 + C25576 * C152092) * C152068) *
                C4107 -
            (((C26688 + C26689) * C152092 + C126298 * C96046) * C152068 +
             (C127686 * C152092 + C124906 * C96046) * C67857) *
                C151956) *
               C151914) *
              C152240 +
          (((((C23043 * C144 + C23060 + C23060 + C152149 * C160 +
               C23045 * C145 + C23061 + C23061 + C151796 * C161) *
                  C96046 +
              (C46306 + C46307) * C152092) *
                 C67857 +
             ((C23392 + C23393) * C96046 + C124907 * C152092) * C152068) *
                C4107 -
            (((C47028 + C47027) * C152092 + C124908 * C96046) * C152068 +
             ((C46309 + C46308) * C152092 + (C46307 + C46306) * C96046) *
                 C67857) *
                C151956) *
               C3101 +
           (((C124907 * C96046 + (C47027 + C47028) * C152092) * C67857 +
             ((C24427 + C24426) * C96046 +
              (C23043 * C1541 + C23656 + C23656 + C152149 * C1565 +
               C23045 * C1542 + C23657 + C23657 + C151796 * C1566) *
                  C152092) *
                 C152068) *
                C151956 -
            (((C24426 + C24427) * C152092 + (C23395 + C23394) * C96046) *
                 C152068 +
             (C124908 * C152092 + (C23393 + C23392) * C96046) * C67857) *
                C4107) *
               C151914) *
              C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
              C23049 + C23049 + C151796 * C159) *
                 C96046 +
             (C46294 + C46295) * C152092) *
                C67857 +
            ((C23380 + C23381) * C96046 + C124903 * C152092) * C152068) *
               C4107 -
           ((C47587 * C152092 + C124904 * C96046) * C152068 +
            ((C46297 + C46296) * C152092 + (C46295 + C46294) * C96046) *
                C67857) *
               C151956) *
              C152265 +
          (((C124903 * C96046 + C125651 * C152092) * C67857 +
            (C125652 * C96046 + C25076 * C152092) * C152068) *
               C151956 -
           ((C25028 * C152092 + (C23383 + C23382) * C96046) * C152068 +
            (C124904 * C152092 + (C23381 + C23380) * C96046) * C67857) *
               C4107) *
              C152261 +
          (((C23398 * C96046 + C125652 * C152092) * C67857 +
            ((C23385 + C23384) * C96046 + C25790 * C152092) * C152068) *
               C4107 -
           (((C25074 + C25075) * C152092 + C126557 * C96046) * C152068 +
            (C125653 * C152092 + C25028 * C96046) * C67857) *
               C151956) *
              C152249 +
          (((C25790 * C96046 + (C25075 + C25074) * C152092) * C67857 +
            ((C25803 + C25802) * C96046 +
             (C23043 * C25021 + C25049 + C25049 + C152149 * C25025 +
              C23045 * C25022 + C25050 + C25050 + C151796 * C25026) *
                 C152092) *
                C152068) *
               C151956 -
           (((C25802 + C25803) * C152092 + (C24799 + C24798) * C96046) *
                C152068 +
            (C126557 * C152092 + C24776 * C96046) * C67857) *
               C4107) *
              C152224) *
         C151823) /
            (p * q * std::sqrt(p + q));
    d2ee[85] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
              C23049 + C23049 + C151796 * C159) *
                 C96046 +
             (C46294 + C46295) * C152092) *
                C67857 +
            ((C23380 + C23381) * C96046 + C124903 * C152092) * C152068) *
               C151869 * C1709 -
           ((C25028 * C152092 + (C23383 + C23382) * C96046) * C152068 +
            (C124904 * C152092 + (C23381 + C23380) * C96046) * C67857) *
               C151869 * C1710 +
           ((C23398 * C96046 + C125652 * C152092) * C67857 +
            ((C23385 + C23384) * C96046 + C25790 * C152092) * C152068) *
               C151869 * C1711 -
           (((C25802 + C25803) * C152092 + (C24799 + C24798) * C96046) *
                C152068 +
            ((C25073 + C25072) * C152092 + C24776 * C96046) * C67857) *
               C151869 * C152224) *
              C152158 +
          ((((C23386 + C23387) * C96046 + C124905 * C152092) * C67857 +
            ((C23388 + C23389) * C96046 + C25576 * C152092) * C152068) *
               C151869 * C1710 -
           ((C124906 * C152092 + (C23387 + C23386) * C96046) * C152068 +
            ((C46301 + C46300) * C152092 +
             (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
              C23059 + C23059 + C152149 * C159) *
                 C96046) *
                C67857) *
               C151869 * C1709 -
           (((C25588 + C25589) * C152092 + (C23391 + C23390) * C96046) *
                C152068 +
            ((C24425 + C24424) * C152092 + C23399 * C96046) * C67857) *
               C151869 * C1711 +
           ((C25272 * C96046 + (C25589 + C25588) * C152092) * C67857 +
            ((C25285 + C25284) * C96046 +
             (C23043 * C8842 + C25581 + C25581 + C152149 * C8848 +
              C23045 * C8843 + C25582 + C25582 + C151796 * C8849) *
                 C152092) *
                C152068) *
               C151869 * C152224) *
              C151834)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
              C23049 + C23049 + C151796 * C159) *
                 C96046 +
             (C46294 + C46295) * C152092) *
                C67857 +
            ((C23380 + C23381) * C96046 + (C24421 + C24420) * C152092) *
                C152068) *
               C151869 * C152172 -
           ((C25028 * C152092 + (C23383 + C23382) * C96046) * C152068 +
            ((C24420 + C24421) * C152092 + (C23381 + C23380) * C96046) *
                C67857) *
               C151869 * C151914) *
              C739 +
          ((((C23386 + C23387) * C96046 + (C24422 + C24423) * C152092) *
                C67857 +
            ((C23388 + C23389) * C96046 + C25576 * C152092) * C152068) *
               C151869 * C151914 -
           (((C24423 + C24422) * C152092 + (C23387 + C23386) * C96046) *
                C152068 +
            ((C46301 + C46300) * C152092 +
             (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
              C23059 + C23059 + C152149 * C159) *
                 C96046) *
                C67857) *
               C151869 * C152172) *
              C740 +
          ((((C23043 * C144 + C23060 + C23060 + C152149 * C160 + C23045 * C145 +
              C23061 + C23061 + C151796 * C161) *
                 C96046 +
             (C46306 + C46307) * C152092) *
                C67857 +
            ((C23392 + C23393) * C96046 + (C24429 + C24428) * C152092) *
                C152068) *
               C151869 * C152172 -
           (((C24426 + C24427) * C152092 + (C23395 + C23394) * C96046) *
                C152068 +
            ((C24428 + C24429) * C152092 + (C23393 + C23392) * C96046) *
                C67857) *
               C151869 * C151914) *
              C741 +
          ((((C23870 + C23871) * C96046 + (C124257 + C124258) * C152092) *
                C67857 +
            ((C23872 + C23873) * C96046 +
             (C23043 * C1535 + C24072 + C24072 + C152149 * C1559 +
              C23045 * C1916 + C24073 + C24073 + C151796 * C1918) *
                 C152092) *
                C152068) *
               C151869 * C151914 -
           (((C124258 + C124257) * C152092 + (C23871 + C23870) * C96046) *
                C152068 +
            ((C46724 + C46723) * C152092 +
             (C23045 * C146 + C23070 + C23070 + C151796 * C162 + C23043 * C145 +
              C23071 + C23071 + C152149 * C161) *
                 C96046) *
                C67857) *
               C151869 * C152172) *
              C152218)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C23043 * C142 + C23048 + C23048 + C152149 * C158 +
               C23045 * C143 + C23049 + C23049 + C151796 * C159) *
                  C96046 +
              (C46294 + C46295) * C152092) *
                 C67857 +
             ((C23380 + C23381) * C96046 + C124903 * C152092) * C152068) *
                C2215 -
            ((C47587 * C152092 + C124904 * C96046) * C152068 +
             ((C46297 + C46296) * C152092 + (C46295 + C46294) * C96046) *
                 C67857) *
                C2216 +
            ((C46312 * C96046 + (C46299 + C46298) * C152092) * C67857 +
             (C125651 * C96046 + C49563 * C152092) * C152068) *
                C152217) *
               C152172 +
           (((C124903 * C96046 + C125651 * C152092) * C67857 +
             (C125652 * C96046 + C25076 * C152092) * C152068) *
                C2216 -
            ((C25028 * C152092 + (C23383 + C23382) * C96046) * C152068 +
             (C124904 * C152092 + (C23381 + C23380) * C96046) * C67857) *
                C2215 -
            (((C27110 + C27111) * C152092 + C125653 * C96046) * C152068 +
             ((C27112 + C27113) * C152092 + C47587 * C96046) * C67857) *
                C152217) *
               C151914) *
              C152158 +
          (((((C46300 + C46301) * C96046 + (C46302 + C46303) * C152092) *
                 C67857 +
             (C124905 * C96046 + C49146 * C152092) * C152068) *
                C2216 -
            ((C124906 * C152092 + (C23387 + C23386) * C96046) * C152068 +
             ((C46301 + C46300) * C152092 +
              (C23045 * C144 + C23058 + C23058 + C151796 * C160 +
               C23043 * C143 + C23059 + C23059 + C152149 * C159) *
                  C96046) *
                 C67857) *
                C2215 -
            (((C49157 + C49158) * C152092 + C127686 * C96046) * C152068 +
             ((C46305 + C46304) * C152092 + C46313 * C96046) * C67857) *
                C152217) *
               C152172 +
           ((((C23386 + C23387) * C96046 + C124905 * C152092) * C67857 +
             ((C23388 + C23389) * C96046 + C25576 * C152092) * C152068) *
                C2215 -
            (((C26688 + C26689) * C152092 + C126298 * C96046) * C152068 +
             (C127686 * C152092 + C124906 * C96046) * C67857) *
                C2216 +
            ((C49146 * C96046 + (C49158 + C49157) * C152092) * C67857 +
             ((C26689 + C26688) * C96046 +
              (C23043 * C10150 + C26890 + C26890 + C152149 * C10156 +
               C23045 * C10151 + C26891 + C26891 + C151796 * C10157) *
                  C152092) *
                 C152068) *
                C152217) *
               C151914) *
              C151834)) /
            (p * q * std::sqrt(p + q));
    d2ee[86] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
              C23049 + C23049 + C151796 * C159) *
                 C96046 +
             (C46294 + C46295) * C152092) *
                C67857 +
            ((C23380 + C23381) * C96046 + C124903 * C152092) * C152068) *
               C152173 -
           ((C47587 * C152092 + C124904 * C96046) * C152068 +
            ((C46297 + C46296) * C152092 + (C46295 + C46294) * C96046) *
                C67857) *
               C151956) *
              C1709 +
          (((C124903 * C96046 + C125651 * C152092) * C67857 +
            (C125652 * C96046 + C25076 * C152092) * C152068) *
               C151956 -
           ((C25028 * C152092 + (C23383 + C23382) * C96046) * C152068 +
            (C124904 * C152092 + (C23381 + C23380) * C96046) * C67857) *
               C152173) *
              C1710 +
          (((C23398 * C96046 + C125652 * C152092) * C67857 +
            ((C23385 + C23384) * C96046 + C25790 * C152092) * C152068) *
               C152173 -
           (((C25074 + C25075) * C152092 + C126557 * C96046) * C152068 +
            (C125653 * C152092 + C25028 * C96046) * C67857) *
               C151956) *
              C1711 +
          (((C25790 * C96046 + (C25075 + C25074) * C152092) * C67857 +
            ((C25803 + C25802) * C96046 +
             (C23043 * C25021 + C25049 + C25049 + C152149 * C25025 +
              C23045 * C25022 + C25050 + C25050 + C151796 * C25026) *
                 C152092) *
                C152068) *
               C151956 -
           (((C25802 + C25803) * C152092 + (C24799 + C24798) * C96046) *
                C152068 +
            (C126557 * C152092 + C24776 * C96046) * C67857) *
               C152173) *
              C152224) *
         C151823) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C23043 * C142 + C23048 + C23048 + C152149 * C158 +
               C23045 * C143 + C23049 + C23049 + C151796 * C159) *
                  C96046 +
              (C46294 + C46295) * C152092) *
                 C67857 +
             ((C23380 + C23381) * C96046 + C124903 * C152092) * C152068) *
                C152173 -
            ((C47587 * C152092 + C124904 * C96046) * C152068 +
             ((C46297 + C46296) * C152092 + (C46295 + C46294) * C96046) *
                 C67857) *
                C151956) *
               C152172 +
           (((C124903 * C96046 + (C25068 + C25069) * C152092) * C67857 +
             ((C24419 + C24418) * C96046 + C25076 * C152092) * C152068) *
                C151956 -
            ((C25028 * C152092 + (C23383 + C23382) * C96046) * C152068 +
             (C124904 * C152092 + (C23381 + C23380) * C96046) * C67857) *
                C152173) *
               C151914) *
              C335 +
          (((((C46300 + C46301) * C96046 + (C46302 + C46303) * C152092) *
                 C67857 +
             (C124905 * C96046 + C49146 * C152092) * C152068) *
                C151956 -
            ((C124906 * C152092 + (C23387 + C23386) * C96046) * C152068 +
             ((C46301 + C46300) * C152092 +
              (C23045 * C144 + C23058 + C23058 + C151796 * C160 +
               C23043 * C143 + C23059 + C23059 + C152149 * C159) *
                  C96046) *
                 C67857) *
                C152173) *
               C152172 +
           ((((C23386 + C23387) * C96046 + C124905 * C152092) * C67857 +
             ((C23388 + C23389) * C96046 + C25576 * C152092) * C152068) *
                C152173 -
            (((C26688 + C26689) * C152092 + (C24425 + C24424) * C96046) *
                 C152068 +
             ((C26690 + C26691) * C152092 + C124906 * C96046) * C67857) *
                C151956) *
               C151914) *
              C336 +
          (((((C23043 * C144 + C23060 + C23060 + C152149 * C160 +
               C23045 * C145 + C23061 + C23061 + C151796 * C161) *
                  C96046 +
              (C46306 + C46307) * C152092) *
                 C67857 +
             ((C23392 + C23393) * C96046 + C124907 * C152092) * C152068) *
                C152173 -
            (((C47028 + C47027) * C152092 + C124908 * C96046) * C152068 +
             ((C46309 + C46308) * C152092 + (C46307 + C46306) * C96046) *
                 C67857) *
                C151956) *
               C152172 +
           (((C124907 * C96046 + (C47027 + C47028) * C152092) * C67857 +
             ((C24427 + C24426) * C96046 +
              (C23043 * C1541 + C23656 + C23656 + C152149 * C1565 +
               C23045 * C1542 + C23657 + C23657 + C151796 * C1566) *
                  C152092) *
                 C152068) *
                C151956 -
            (((C24426 + C24427) * C152092 + (C23395 + C23394) * C96046) *
                 C152068 +
             (C124908 * C152092 + (C23393 + C23392) * C96046) * C67857) *
                C152173) *
               C151914) *
              C152208)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
              C23049 + C23049 + C151796 * C159) *
                 C96046 +
             (C46294 + C46295) * C152092) *
                C67857 +
            ((C23380 + C23381) * C96046 + C124903 * C152092) * C152068) *
               C2814 -
           ((C47587 * C152092 + C124904 * C96046) * C152068 +
            ((C46297 + C46296) * C152092 + (C46295 + C46294) * C96046) *
                C67857) *
               C2815 +
           ((C46312 * C96046 + (C46299 + C46298) * C152092) * C67857 +
            (C125651 * C96046 + C49563 * C152092) * C152068) *
               C2816 -
           (((C49574 + C49575) * C152092 + C128203 * C96046) * C152068 +
            ((C48852 + C48851) * C152092 + C48830 * C96046) * C67857) *
               C152230) *
              C152172 +
          (((C124903 * C96046 + C125651 * C152092) * C67857 +
            (C125652 * C96046 + C25076 * C152092) * C152068) *
               C2815 -
           ((C25028 * C152092 + (C23383 + C23382) * C96046) * C152068 +
            (C124904 * C152092 + (C23381 + C23380) * C96046) * C67857) *
               C2814 -
           (((C27110 + C27111) * C152092 + C125653 * C96046) * C152068 +
            (C128203 * C152092 + C47587 * C96046) * C67857) *
               C2816 +
           ((C49563 * C96046 + (C49575 + C49574) * C152092) * C67857 +
            ((C27111 + C27110) * C96046 +
             (C23043 * C26361 + C26378 + C26378 + C152149 * C26365 +
              C23045 * C26362 + C26379 + C26379 + C151796 * C26366) *
                 C152092) *
                C152068) *
               C152230) *
              C151914) *
         C151823) /
            (p * q * std::sqrt(p + q));
    d2ee[87] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C23043 * C142 + C23048 + C23048 + C152149 * C158 +
                 C23045 * C143 + C23049 + C23049 + C151796 * C159) *
                    C96046 +
                (C46294 + C46295) * C152092) *
                   C67857 +
               ((C23380 + C23381) * C96046 + (C24421 + C24420) * C152092) *
                   C152068) *
                  C151869 * C151851 * C129 -
              (((C24423 + C24422) * C152092 + (C23387 + C23386) * C96046) *
                   C152068 +
               ((C46301 + C46300) * C152092 +
                (C23045 * C144 + C23058 + C23058 + C151796 * C160 +
                 C23043 * C143 + C23059 + C23059 + C152149 * C159) *
                    C96046) *
                   C67857) *
                  C151869 * C151851 * C130 +
              (((C23043 * C144 + C23060 + C23060 + C152149 * C160 +
                 C23045 * C145 + C23061 + C23061 + C151796 * C161) *
                    C96046 +
                (C46306 + C46307) * C152092) *
                   C67857 +
               ((C23392 + C23393) * C96046 + (C24429 + C24428) * C152092) *
                   C152068) *
                  C151869 * C151851 * C131 -
              (((C23045 * C1087 + C24071 + C24071 + C151796 * C1099 +
                 C23043 * C1086 + C24070 + C24070 + C152149 * C1098) *
                    C152092 +
                (C23871 + C23870) * C96046) *
                   C152068 +
               ((C46724 + C46723) * C152092 +
                (C23045 * C146 + C23070 + C23070 + C151796 * C162 +
                 C23043 * C145 + C23071 + C23071 + C152149 * C161) *
                    C96046) *
                   C67857) *
                  C151869 * C151851 * C132 +
              (((C23043 * C146 + C23072 + C23072 + C152149 * C162 +
                 C23045 * C147 + C23073 + C23073 + C151796 * C163) *
                    C96046 +
                (C23043 * C555 + C45776 + C45776 + C152149 * C579 +
                 C23045 * C557 + C45777 + C45777 + C151796 * C581) *
                    C152092) *
                   C67857 +
               ((C23043 * C346 + C23074 + C23074 + C152149 * C370 +
                 C23045 * C348 + C23075 + C23075 + C151796 * C372) *
                    C96046 +
                (C23043 * C1087 + C123409 + C123409 + C152149 * C1099 +
                 C23045 * C1088 + C123410 + C123410 + C151796 * C1100) *
                    C152092) *
                   C152068) *
                  C151869 * C151851 * C133) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C23043 * C142 + C23048 + C23048 + C152149 * C158 +
                  C23045 * C143 + C23049 + C23049 + C151796 * C159) *
                     C96046 +
                 (C46294 + C46295) * C152092) *
                    C67857 +
                ((C23380 + C23381) * C96046 + (C24421 + C24420) * C152092) *
                    C152068) *
                   C151869 * C152258 -
               ((C25028 * C152092 + (C23383 + C23382) * C96046) * C152068 +
                ((C24420 + C24421) * C152092 + (C23381 + C23380) * C96046) *
                    C67857) *
                   C151869 * C152244 +
               ((C23398 * C96046 + (C24419 + C24418) * C152092) * C67857 +
                ((C23385 + C23384) * C96046 + C25790 * C152092) * C152068) *
                   C151869 * C152214) *
                  C335 +
              ((((C23386 + C23387) * C96046 + (C24422 + C24423) * C152092) *
                    C67857 +
                ((C23388 + C23389) * C96046 + C25576 * C152092) * C152068) *
                   C151869 * C152244 -
               (((C24423 + C24422) * C152092 + (C23387 + C23386) * C96046) *
                    C152068 +
                ((C46301 + C46300) * C152092 +
                 (C23045 * C144 + C23058 + C23058 + C151796 * C160 +
                  C23043 * C143 + C23059 + C23059 + C152149 * C159) *
                     C96046) *
                    C67857) *
                   C151869 * C152258 -
               (((C25588 + C25589) * C152092 + (C23391 + C23390) * C96046) *
                    C152068 +
                ((C24425 + C24424) * C152092 + C23399 * C96046) * C67857) *
                   C151869 * C152214) *
                  C336 +
              ((((C23043 * C144 + C23060 + C23060 + C152149 * C160 +
                  C23045 * C145 + C23061 + C23061 + C151796 * C161) *
                     C96046 +
                 (C46306 + C46307) * C152092) *
                    C67857 +
                ((C23392 + C23393) * C96046 + (C24429 + C24428) * C152092) *
                    C152068) *
                   C151869 * C152258 -
               (((C24426 + C24427) * C152092 + (C23395 + C23394) * C96046) *
                    C152068 +
                ((C24428 + C24429) * C152092 + (C23393 + C23392) * C96046) *
                    C67857) *
                   C151869 * C152244 +
               ((C23400 * C96046 + (C24427 + C24426) * C152092) * C67857 +
                ((C23397 + C23396) * C96046 +
                 (C23043 * C2055 + C24392 + C24392 + C152149 * C2063 +
                  C23045 * C2056 + C24393 + C24393 + C151796 * C2064) *
                     C152092) *
                    C152068) *
                   C151869 * C152214) *
                  C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
              C23049 + C23049 + C151796 * C159) *
                 C96046 +
             (C46294 + C46295) * C152092) *
                C67857 +
            ((C23380 + C23381) * C96046 + (C24421 + C24420) * C152092) *
                C152068) *
               C152259 -
           ((C47587 * C152092 + (C24420 + C24421) * C96046) * C152068 +
            ((C46297 + C46296) * C152092 + (C46295 + C46294) * C96046) *
                C67857) *
               C152246 +
           ((C46312 * C96046 + (C46299 + C46298) * C152092) * C67857 +
            ((C25068 + C25069) * C96046 + C49563 * C152092) * C152068) *
               C152217) *
              C151851 * C335 +
          ((((C46300 + C46301) * C96046 + (C46302 + C46303) * C152092) *
                C67857 +
            ((C24422 + C24423) * C96046 + C49146 * C152092) * C152068) *
               C152246 -
           (((C24423 + C24422) * C152092 + (C23387 + C23386) * C96046) *
                C152068 +
            ((C46301 + C46300) * C152092 +
             (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
              C23059 + C23059 + C152149 * C159) *
                 C96046) *
                C67857) *
               C152259 -
           (((C49157 + C49158) * C152092 + (C26690 + C26691) * C96046) *
                C152068 +
            ((C46305 + C46304) * C152092 + C46313 * C96046) * C67857) *
               C152217) *
              C151851 * C336 +
          ((((C23043 * C144 + C23060 + C23060 + C152149 * C160 + C23045 * C145 +
              C23061 + C23061 + C151796 * C161) *
                 C96046 +
             (C46306 + C46307) * C152092) *
                C67857 +
            ((C23392 + C23393) * C96046 + (C24429 + C24428) * C152092) *
                C152068) *
               C152259 -
           (((C47028 + C47027) * C152092 + (C24428 + C24429) * C96046) *
                C152068 +
            ((C46309 + C46308) * C152092 + (C46307 + C46306) * C96046) *
                C67857) *
               C152246 +
           ((C46314 * C96046 + (C46311 + C46310) * C152092) * C67857 +
            ((C47027 + C47028) * C96046 +
             (C23043 * C2957 + C47021 + C47021 + C152149 * C2965 +
              C23045 * C2958 + C47022 + C47022 + C151796 * C2966) *
                 C152092) *
                C152068) *
               C152217) *
              C151851 * C152208)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
              C23049 + C23049 + C151796 * C159) *
                 C96046 +
             (C46294 + C46295) * C152092) *
                C67857 +
            ((C23380 + C23381) * C96046 + C124903 * C152092) * C152068) *
               C151869 * C1259 -
           ((C25028 * C152092 + (C23383 + C23382) * C96046) * C152068 +
            (C124904 * C152092 + (C23381 + C23380) * C96046) * C67857) *
               C151869 * C1260 +
           ((C23398 * C96046 + (C24419 + C24418) * C152092) * C67857 +
            ((C23385 + C23384) * C96046 + C25790 * C152092) * C152068) *
               C151869 * C152214) *
              C152255 +
          ((((C23386 + C23387) * C96046 + C124905 * C152092) * C67857 +
            ((C23388 + C23389) * C96046 + C25576 * C152092) * C152068) *
               C151869 * C1260 -
           ((C124906 * C152092 + (C23387 + C23386) * C96046) * C152068 +
            ((C46301 + C46300) * C152092 +
             (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
              C23059 + C23059 + C152149 * C159) *
                 C96046) *
                C67857) *
               C151869 * C1259 -
           (((C25588 + C25589) * C152092 + (C23391 + C23390) * C96046) *
                C152068 +
            ((C24425 + C24424) * C152092 + C23399 * C96046) * C67857) *
               C151869 * C152214) *
              C152240 +
          ((((C23043 * C144 + C23060 + C23060 + C152149 * C160 + C23045 * C145 +
              C23061 + C23061 + C151796 * C161) *
                 C96046 +
             (C46306 + C46307) * C152092) *
                C67857 +
            ((C23392 + C23393) * C96046 + C124907 * C152092) * C152068) *
               C151869 * C1259 -
           (((C24426 + C24427) * C152092 + (C23395 + C23394) * C96046) *
                C152068 +
            (C124908 * C152092 + (C23393 + C23392) * C96046) * C67857) *
               C151869 * C1260 +
           ((C23400 * C96046 + (C24427 + C24426) * C152092) * C67857 +
            ((C23397 + C23396) * C96046 +
             (C23043 * C2055 + C24392 + C24392 + C152149 * C2063 +
              C23045 * C2056 + C24393 + C24393 + C151796 * C2064) *
                 C152092) *
                C152068) *
               C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
             C23049 + C23049 + C151796 * C159) *
                C96046 +
            (C46294 + C46295) * C152092) *
               C67857 +
           ((C23380 + C23381) * C96046 + C124903 * C152092) * C152068) *
              C151869 * C1347 -
          ((C25028 * C152092 + (C23383 + C23382) * C96046) * C152068 +
           (C124904 * C152092 + (C23381 + C23380) * C96046) * C67857) *
              C151869 * C1348 +
          ((C23398 * C96046 + (C24419 + C24418) * C152092) * C67857 +
           ((C23385 + C23384) * C96046 + C25790 * C152092) * C152068) *
              C151869 * C1349 -
          (((C25802 + C25803) * C152092 + (C24799 + C24798) * C96046) *
               C152068 +
           ((C25073 + C25072) * C152092 + C24776 * C96046) * C67857) *
              C151869 * C1350 +
          ((C24802 * C96046 + (C25803 + C25802) * C152092) * C67857 +
           ((C24801 + C24800) * C96046 +
            (C23043 * C25783 + C25795 + C25795 + C152149 * C25787 +
             C23045 * C25784 + C25796 + C25796 + C151796 * C25788) *
                C152092) *
               C152068) *
              C151869 * C1351) *
         C151823) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
              C23049 + C23049 + C151796 * C159) *
                 C96046 +
             (C46294 + C46295) * C152092) *
                C67857 +
            ((C23380 + C23381) * C96046 + C124903 * C152092) * C152068) *
               C152259 -
           ((C47587 * C152092 + C124904 * C96046) * C152068 +
            ((C46297 + C46296) * C152092 + (C46295 + C46294) * C96046) *
                C67857) *
               C152246 +
           ((C46312 * C96046 + (C46299 + C46298) * C152092) * C67857 +
            (C125651 * C96046 + C49563 * C152092) * C152068) *
               C152217) *
              C1259 +
          (((C124903 * C96046 + C125651 * C152092) * C67857 +
            (C125652 * C96046 + C25076 * C152092) * C152068) *
               C152246 -
           ((C25028 * C152092 + (C23383 + C23382) * C96046) * C152068 +
            (C124904 * C152092 + (C23381 + C23380) * C96046) * C67857) *
               C152259 -
           (((C27110 + C27111) * C152092 + C125653 * C96046) * C152068 +
            ((C27112 + C27113) * C152092 + C47587 * C96046) * C67857) *
               C152217) *
              C1260 +
          (((C23398 * C96046 + C125652 * C152092) * C67857 +
            ((C23385 + C23384) * C96046 + C25790 * C152092) * C152068) *
               C152259 -
           (((C25074 + C25075) * C152092 + (C25073 + C25072) * C96046) *
                C152068 +
            (C125653 * C152092 + C25028 * C96046) * C67857) *
               C152246 +
           ((C25076 * C96046 + (C27111 + C27110) * C152092) * C67857 +
            ((C25075 + C25074) * C96046 +
             (C23043 * C27085 + C27100 + C27100 + C152149 * C27089 +
              C23045 * C27086 + C27101 + C27101 + C151796 * C27090) *
                 C152092) *
                C152068) *
               C152217) *
              C152214) *
         C151823) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
              C23049 + C23049 + C151796 * C159) *
                 C96046 +
             (C46294 + C46295) * C152092) *
                C67857 +
            ((C23380 + C23381) * C96046 + C124903 * C152092) * C152068) *
               C2215 -
           ((C47587 * C152092 + C124904 * C96046) * C152068 +
            ((C46297 + C46296) * C152092 + (C46295 + C46294) * C96046) *
                C67857) *
               C2216 +
           ((C46312 * C96046 + (C46299 + C46298) * C152092) * C67857 +
            (C125651 * C96046 + C49563 * C152092) * C152068) *
               C152217) *
              C151851 * C152255 +
          ((((C46300 + C46301) * C96046 + (C46302 + C46303) * C152092) *
                C67857 +
            (C124905 * C96046 + C49146 * C152092) * C152068) *
               C2216 -
           ((C124906 * C152092 + (C23387 + C23386) * C96046) * C152068 +
            ((C46301 + C46300) * C152092 +
             (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
              C23059 + C23059 + C152149 * C159) *
                 C96046) *
                C67857) *
               C2215 -
           (((C49157 + C49158) * C152092 + (C26690 + C26691) * C96046) *
                C152068 +
            ((C46305 + C46304) * C152092 + C46313 * C96046) * C67857) *
               C152217) *
              C151851 * C152240 +
          ((((C23043 * C144 + C23060 + C23060 + C152149 * C160 + C23045 * C145 +
              C23061 + C23061 + C151796 * C161) *
                 C96046 +
             (C46306 + C46307) * C152092) *
                C67857 +
            ((C23392 + C23393) * C96046 + C124907 * C152092) * C152068) *
               C2215 -
           (((C47028 + C47027) * C152092 + C124908 * C96046) * C152068 +
            ((C46309 + C46308) * C152092 + (C46307 + C46306) * C96046) *
                C67857) *
               C2216 +
           ((C46314 * C96046 + (C46311 + C46310) * C152092) * C67857 +
            ((C47027 + C47028) * C96046 +
             (C23043 * C2957 + C47021 + C47021 + C152149 * C2965 +
              C23045 * C2958 + C47022 + C47022 + C151796 * C2966) *
                 C152092) *
                C152068) *
               C152217) *
              C151851 * C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
              C23049 + C23049 + C151796 * C159) *
                 C96046 +
             (C46294 + C46295) * C152092) *
                C67857 +
            ((C23380 + C23381) * C96046 + C124903 * C152092) * C152068) *
               C2215 -
           ((C47587 * C152092 + C124904 * C96046) * C152068 +
            ((C46297 + C46296) * C152092 + (C46295 + C46294) * C96046) *
                C67857) *
               C2216 +
           ((C46312 * C96046 + (C46299 + C46298) * C152092) * C67857 +
            (C125651 * C96046 + C49563 * C152092) * C152068) *
               C152217) *
              C152258 +
          (((C124903 * C96046 + C125651 * C152092) * C67857 +
            (C125652 * C96046 + C25076 * C152092) * C152068) *
               C2216 -
           ((C25028 * C152092 + (C23383 + C23382) * C96046) * C152068 +
            (C124904 * C152092 + (C23381 + C23380) * C96046) * C67857) *
               C2215 -
           (((C27110 + C27111) * C152092 + C125653 * C96046) * C152068 +
            ((C27112 + C27113) * C152092 + C47587 * C96046) * C67857) *
               C152217) *
              C152244 +
          (((C23398 * C96046 + C125652 * C152092) * C67857 +
            ((C23385 + C23384) * C96046 + C25790 * C152092) * C152068) *
               C2215 -
           (((C25074 + C25075) * C152092 + C126557 * C96046) * C152068 +
            (C125653 * C152092 + C25028 * C96046) * C67857) *
               C2216 +
           ((C25076 * C96046 + (C27111 + C27110) * C152092) * C67857 +
            ((C25075 + C25074) * C96046 +
             (C23043 * C27085 + C27100 + C27100 + C152149 * C27089 +
              C23045 * C27086 + C27101 + C27101 + C151796 * C27090) *
                 C152092) *
                C152068) *
               C152217) *
              C152214) *
         C151823) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
             C23049 + C23049 + C151796 * C159) *
                C96046 +
            (C46294 + C46295) * C152092) *
               C67857 +
           ((C23380 + C23381) * C96046 + C124903 * C152092) * C152068) *
              C2446 -
          ((C47587 * C152092 + C124904 * C96046) * C152068 +
           ((C46297 + C46296) * C152092 + (C46295 + C46294) * C96046) *
               C67857) *
              C2447 +
          ((C46312 * C96046 + (C46299 + C46298) * C152092) * C67857 +
           (C125651 * C96046 + C49563 * C152092) * C152068) *
              C2448 -
          (((C49574 + C49575) * C152092 + (C27112 + C27113) * C96046) *
               C152068 +
           ((C48852 + C48851) * C152092 + C48830 * C96046) * C67857) *
              C2449 +
          ((C48855 * C96046 + (C48854 + C48853) * C152092) * C67857 +
           ((C49575 + C49574) * C96046 +
            (C23043 * C40487 + C49568 + C49568 + C152149 * C40491 +
             C23045 * C49559 + C49569 + C49569 + C151796 * C49561) *
                C152092) *
               C152068) *
              C2450) *
         C151851 * C151823) /
            (p * q * std::sqrt(p + q));
    d2ee[88] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C23043 * C142 + C23048 + C23048 + C152149 * C158 +
               C23045 * C143 + C23049 + C23049 + C151796 * C159) *
                  C96046 +
              (C46294 + C46295) * C152092) *
                 C67857 +
             ((C23380 + C23381) * C96046 + C124903 * C152092) * C152068) *
                C152173 -
            ((C47587 * C152092 + C124904 * C96046) * C152068 +
             ((C46297 + C46296) * C152092 + (C46295 + C46294) * C96046) *
                 C67857) *
                C151956) *
               C1259 +
           (((C124903 * C96046 + C125651 * C152092) * C67857 +
             (C125652 * C96046 + C25076 * C152092) * C152068) *
                C151956 -
            ((C25028 * C152092 + (C23383 + C23382) * C96046) * C152068 +
             (C124904 * C152092 + (C23381 + C23380) * C96046) * C67857) *
                C152173) *
               C1260 +
           (((C23398 * C96046 + C125652 * C152092) * C67857 +
             ((C23385 + C23384) * C96046 + C25790 * C152092) * C152068) *
                C152173 -
            (((C25074 + C25075) * C152092 + (C25073 + C25072) * C96046) *
                 C152068 +
             (C125653 * C152092 + C25028 * C96046) * C67857) *
                C151956) *
               C152214) *
              C152158 +
          (((((C46300 + C46301) * C96046 + (C46302 + C46303) * C152092) *
                 C67857 +
             (C124905 * C96046 + C49146 * C152092) * C152068) *
                C151956 -
            ((C124906 * C152092 + (C23387 + C23386) * C96046) * C152068 +
             ((C46301 + C46300) * C152092 +
              (C23045 * C144 + C23058 + C23058 + C151796 * C160 +
               C23043 * C143 + C23059 + C23059 + C152149 * C159) *
                  C96046) *
                 C67857) *
                C152173) *
               C1259 +
           ((((C23386 + C23387) * C96046 + C124905 * C152092) * C67857 +
             ((C23388 + C23389) * C96046 + C25576 * C152092) * C152068) *
                C152173 -
            (((C26688 + C26689) * C152092 + C126298 * C96046) * C152068 +
             ((C26690 + C26691) * C152092 + C124906 * C96046) * C67857) *
                C151956) *
               C1260 +
           (((C25576 * C96046 + (C26689 + C26688) * C152092) * C67857 +
             ((C25589 + C25588) * C96046 +
              (C23043 * C8065 + C26678 + C26678 + C152149 * C8071 +
               C23045 * C8066 + C26679 + C26679 + C151796 * C8072) *
                  C152092) *
                 C152068) *
                C151956 -
            (((C25588 + C25589) * C152092 + (C23391 + C23390) * C96046) *
                 C152068 +
             (C126298 * C152092 + C23399 * C96046) * C67857) *
                C152173) *
               C152214) *
              C151834)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
              C23049 + C23049 + C151796 * C159) *
                 C96046 +
             (C46294 + C46295) * C152092) *
                C67857 +
            ((C23380 + C23381) * C96046 + (C24421 + C24420) * C152092) *
                C152068) *
               C152173 -
           ((C47587 * C152092 + (C24420 + C24421) * C96046) * C152068 +
            ((C46297 + C46296) * C152092 + (C46295 + C46294) * C96046) *
                C67857) *
               C151956) *
              C151851 * C739 +
          ((((C46300 + C46301) * C96046 + (C46302 + C46303) * C152092) *
                C67857 +
            ((C24422 + C24423) * C96046 + C49146 * C152092) * C152068) *
               C151956 -
           (((C24423 + C24422) * C152092 + (C23387 + C23386) * C96046) *
                C152068 +
            ((C46301 + C46300) * C152092 +
             (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
              C23059 + C23059 + C152149 * C159) *
                 C96046) *
                C67857) *
               C152173) *
              C151851 * C740 +
          ((((C23043 * C144 + C23060 + C23060 + C152149 * C160 + C23045 * C145 +
              C23061 + C23061 + C151796 * C161) *
                 C96046 +
             (C46306 + C46307) * C152092) *
                C67857 +
            ((C23392 + C23393) * C96046 + (C24429 + C24428) * C152092) *
                C152068) *
               C152173 -
           (((C47028 + C47027) * C152092 + (C24428 + C24429) * C96046) *
                C152068 +
            ((C46309 + C46308) * C152092 + (C46307 + C46306) * C96046) *
                C67857) *
               C151956) *
              C151851 * C741 +
          ((((C46723 + C46724) * C96046 + (C46725 + C46726) * C152092) *
                C67857 +
            ((C124257 + C124258) * C96046 +
             (C23043 * C1531 + C46509 + C46509 + C152149 * C1555 +
              C23045 * C2677 + C46510 + C46510 + C151796 * C2679) *
                 C152092) *
                C152068) *
               C151956 -
           (((C124258 + C124257) * C152092 + (C23871 + C23870) * C96046) *
                C152068 +
            ((C46724 + C46723) * C152092 +
             (C23045 * C146 + C23070 + C23070 + C151796 * C162 + C23043 * C145 +
              C23071 + C23071 + C152149 * C161) *
                 C96046) *
                C67857) *
               C152173) *
              C151851 * C152218)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
              C23049 + C23049 + C151796 * C159) *
                 C96046 +
             (C46294 + C46295) * C152092) *
                C67857 +
            ((C23380 + C23381) * C96046 + C124903 * C152092) * C152068) *
               C2814 -
           ((C47587 * C152092 + C124904 * C96046) * C152068 +
            ((C46297 + C46296) * C152092 + (C46295 + C46294) * C96046) *
                C67857) *
               C2815 +
           ((C46312 * C96046 + (C46299 + C46298) * C152092) * C67857 +
            (C125651 * C96046 + C49563 * C152092) * C152068) *
               C2816 -
           (((C49574 + C49575) * C152092 + (C27112 + C27113) * C96046) *
                C152068 +
            ((C48852 + C48851) * C152092 + C48830 * C96046) * C67857) *
               C152230) *
              C151851 * C152158 +
          ((((C46300 + C46301) * C96046 + (C46302 + C46303) * C152092) *
                C67857 +
            (C124905 * C96046 + C49146 * C152092) * C152068) *
               C2815 -
           ((C124906 * C152092 + (C23387 + C23386) * C96046) * C152068 +
            ((C46301 + C46300) * C152092 +
             (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
              C23059 + C23059 + C152149 * C159) *
                 C96046) *
                C67857) *
               C2814 -
           (((C49157 + C49158) * C152092 + C127686 * C96046) * C152068 +
            ((C46305 + C46304) * C152092 + C46313 * C96046) * C67857) *
               C2816 +
           ((C49353 * C96046 + (C49365 + C49364) * C152092) * C67857 +
            ((C49158 + C49157) * C96046 +
             (C23043 * C9427 + C49151 + C49151 + C152149 * C9433 +
              C23045 * C9428 + C49152 + C49152 + C151796 * C9434) *
                 C152092) *
                C152068) *
               C152230) *
              C151851 * C151834)) /
            (p * q * std::sqrt(p + q));
    d2ee[89] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
              C23049 + C23049 + C151796 * C159) *
                 C96046 +
             (C46294 + C46295) * C152092) *
                C67857 +
            ((C23380 + C23381) * C96046 + (C24421 + C24420) * C152092) *
                C152068) *
               C151869 * C152258 -
           ((C25028 * C152092 + (C23383 + C23382) * C96046) * C152068 +
            ((C24420 + C24421) * C152092 + (C23381 + C23380) * C96046) *
                C67857) *
               C151869 * C152244 +
           ((C23398 * C96046 + (C24419 + C24418) * C152092) * C67857 +
            ((C23385 + C23384) * C96046 + C25790 * C152092) * C152068) *
               C151869 * C152214) *
              C335 +
          ((((C23386 + C23387) * C96046 + (C24422 + C24423) * C152092) *
                C67857 +
            ((C23388 + C23389) * C96046 + C25576 * C152092) * C152068) *
               C151869 * C152244 -
           (((C24423 + C24422) * C152092 + (C23387 + C23386) * C96046) *
                C152068 +
            ((C46301 + C46300) * C152092 +
             (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
              C23059 + C23059 + C152149 * C159) *
                 C96046) *
                C67857) *
               C151869 * C152258 -
           (((C25588 + C25589) * C152092 + (C23391 + C23390) * C96046) *
                C152068 +
            ((C24425 + C24424) * C152092 + C23399 * C96046) * C67857) *
               C151869 * C152214) *
              C336 +
          ((((C23043 * C144 + C23060 + C23060 + C152149 * C160 + C23045 * C145 +
              C23061 + C23061 + C151796 * C161) *
                 C96046 +
             (C46306 + C46307) * C152092) *
                C67857 +
            ((C23392 + C23393) * C96046 + (C24429 + C24428) * C152092) *
                C152068) *
               C151869 * C152258 -
           (((C24426 + C24427) * C152092 + (C23395 + C23394) * C96046) *
                C152068 +
            ((C24428 + C24429) * C152092 + (C23393 + C23392) * C96046) *
                C67857) *
               C151869 * C152244 +
           ((C23400 * C96046 + (C24427 + C24426) * C152092) * C67857 +
            ((C23397 + C23396) * C96046 +
             (C23043 * C2055 + C24392 + C24392 + C152149 * C2063 +
              C23045 * C2056 + C24393 + C24393 + C151796 * C2064) *
                 C152092) *
                C152068) *
               C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
             C23049 + C23049 + C151796 * C159) *
                C96046 +
            (C46294 + C46295) * C152092) *
               C67857 +
           ((C23380 + C23381) * C96046 + (C24421 + C24420) * C152092) *
               C152068) *
              C151869 * C151851 * C129 -
          (((C24423 + C24422) * C152092 + (C23387 + C23386) * C96046) *
               C152068 +
           ((C46301 + C46300) * C152092 +
            (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
             C23059 + C23059 + C152149 * C159) *
                C96046) *
               C67857) *
              C151869 * C151851 * C130 +
          (((C23043 * C144 + C23060 + C23060 + C152149 * C160 + C23045 * C145 +
             C23061 + C23061 + C151796 * C161) *
                C96046 +
            (C46306 + C46307) * C152092) *
               C67857 +
           ((C23392 + C23393) * C96046 + (C24429 + C24428) * C152092) *
               C152068) *
              C151869 * C151851 * C131 -
          (((C23045 * C1087 + C24071 + C24071 + C151796 * C1099 +
             C23043 * C1086 + C24070 + C24070 + C152149 * C1098) *
                C152092 +
            (C23871 + C23870) * C96046) *
               C152068 +
           ((C46724 + C46723) * C152092 +
            (C23045 * C146 + C23070 + C23070 + C151796 * C162 + C23043 * C145 +
             C23071 + C23071 + C152149 * C161) *
                C96046) *
               C67857) *
              C151869 * C151851 * C132 +
          (((C23043 * C146 + C23072 + C23072 + C152149 * C162 + C23045 * C147 +
             C23073 + C23073 + C151796 * C163) *
                C96046 +
            (C23043 * C555 + C45776 + C45776 + C152149 * C579 + C23045 * C557 +
             C45777 + C45777 + C151796 * C581) *
                C152092) *
               C67857 +
           ((C23043 * C346 + C23074 + C23074 + C152149 * C370 + C23045 * C348 +
             C23075 + C23075 + C151796 * C372) *
                C96046 +
            (C23043 * C1087 + C123409 + C123409 + C152149 * C1099 +
             C23045 * C1088 + C123410 + C123410 + C151796 * C1100) *
                C152092) *
               C152068) *
              C151869 * C151851 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
              C23049 + C23049 + C151796 * C159) *
                 C96046 +
             (C46294 + C46295) * C152092) *
                C67857 +
            ((C23380 + C23381) * C96046 + C124903 * C152092) * C152068) *
               C151869 * C1259 -
           ((C25028 * C152092 + (C23383 + C23382) * C96046) * C152068 +
            (C124904 * C152092 + (C23381 + C23380) * C96046) * C67857) *
               C151869 * C1260 +
           ((C23398 * C96046 + (C24419 + C24418) * C152092) * C67857 +
            ((C23385 + C23384) * C96046 + C25790 * C152092) * C152068) *
               C151869 * C152214) *
              C152255 +
          ((((C23386 + C23387) * C96046 + C124905 * C152092) * C67857 +
            ((C23388 + C23389) * C96046 + C25576 * C152092) * C152068) *
               C151869 * C1260 -
           ((C124906 * C152092 + (C23387 + C23386) * C96046) * C152068 +
            ((C46301 + C46300) * C152092 +
             (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
              C23059 + C23059 + C152149 * C159) *
                 C96046) *
                C67857) *
               C151869 * C1259 -
           (((C25588 + C25589) * C152092 + (C23391 + C23390) * C96046) *
                C152068 +
            ((C24425 + C24424) * C152092 + C23399 * C96046) * C67857) *
               C151869 * C152214) *
              C152240 +
          ((((C23043 * C144 + C23060 + C23060 + C152149 * C160 + C23045 * C145 +
              C23061 + C23061 + C151796 * C161) *
                 C96046 +
             (C46306 + C46307) * C152092) *
                C67857 +
            ((C23392 + C23393) * C96046 + C124907 * C152092) * C152068) *
               C151869 * C1259 -
           (((C24426 + C24427) * C152092 + (C23395 + C23394) * C96046) *
                C152068 +
            (C124908 * C152092 + (C23393 + C23392) * C96046) * C67857) *
               C151869 * C1260 +
           ((C23400 * C96046 + (C24427 + C24426) * C152092) * C67857 +
            ((C23397 + C23396) * C96046 +
             (C23043 * C2055 + C24392 + C24392 + C152149 * C2063 +
              C23045 * C2056 + C24393 + C24393 + C151796 * C2064) *
                 C152092) *
                C152068) *
               C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
             C23049 + C23049 + C151796 * C159) *
                C96046 +
            (C46294 + C46295) * C152092) *
               C67857 +
           ((C23380 + C23381) * C96046 + C124903 * C152092) * C152068) *
              C151869 * C1347 -
          ((C25028 * C152092 + (C23383 + C23382) * C96046) * C152068 +
           (C124904 * C152092 + (C23381 + C23380) * C96046) * C67857) *
              C151869 * C1348 +
          ((C23398 * C96046 + (C24419 + C24418) * C152092) * C67857 +
           ((C23385 + C23384) * C96046 + C25790 * C152092) * C152068) *
              C151869 * C1349 -
          (((C25802 + C25803) * C152092 + (C24799 + C24798) * C96046) *
               C152068 +
           ((C25073 + C25072) * C152092 + C24776 * C96046) * C67857) *
              C151869 * C1350 +
          ((C24802 * C96046 + (C25803 + C25802) * C152092) * C67857 +
           ((C24801 + C24800) * C96046 +
            (C23043 * C25783 + C25795 + C25795 + C152149 * C25787 +
             C23045 * C25784 + C25796 + C25796 + C151796 * C25788) *
                C152092) *
               C152068) *
              C151869 * C1351) *
         C151823) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
              C23049 + C23049 + C151796 * C159) *
                 C96046 +
             (C46294 + C46295) * C152092) *
                C67857 +
            ((C23380 + C23381) * C96046 + C124903 * C152092) * C152068) *
               C2215 -
           ((C47587 * C152092 + C124904 * C96046) * C152068 +
            ((C46297 + C46296) * C152092 + (C46295 + C46294) * C96046) *
                C67857) *
               C2216 +
           ((C46312 * C96046 + (C46299 + C46298) * C152092) * C67857 +
            (C125651 * C96046 + C49563 * C152092) * C152068) *
               C152217) *
              C151851 * C152255 +
          ((((C46300 + C46301) * C96046 + (C46302 + C46303) * C152092) *
                C67857 +
            (C124905 * C96046 + C49146 * C152092) * C152068) *
               C2216 -
           ((C124906 * C152092 + (C23387 + C23386) * C96046) * C152068 +
            ((C46301 + C46300) * C152092 +
             (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
              C23059 + C23059 + C152149 * C159) *
                 C96046) *
                C67857) *
               C2215 -
           (((C49157 + C49158) * C152092 + (C26690 + C26691) * C96046) *
                C152068 +
            ((C46305 + C46304) * C152092 + C46313 * C96046) * C67857) *
               C152217) *
              C151851 * C152240 +
          ((((C23043 * C144 + C23060 + C23060 + C152149 * C160 + C23045 * C145 +
              C23061 + C23061 + C151796 * C161) *
                 C96046 +
             (C46306 + C46307) * C152092) *
                C67857 +
            ((C23392 + C23393) * C96046 + C124907 * C152092) * C152068) *
               C2215 -
           (((C47028 + C47027) * C152092 + C124908 * C96046) * C152068 +
            ((C46309 + C46308) * C152092 + (C46307 + C46306) * C96046) *
                C67857) *
               C2216 +
           ((C46314 * C96046 + (C46311 + C46310) * C152092) * C67857 +
            ((C47027 + C47028) * C96046 +
             (C23043 * C2957 + C47021 + C47021 + C152149 * C2965 +
              C23045 * C2958 + C47022 + C47022 + C151796 * C2966) *
                 C152092) *
                C152068) *
               C152217) *
              C151851 * C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
              C23049 + C23049 + C151796 * C159) *
                 C96046 +
             (C46294 + C46295) * C152092) *
                C67857 +
            ((C23380 + C23381) * C96046 + C124903 * C152092) * C152068) *
               C2215 -
           ((C47587 * C152092 + C124904 * C96046) * C152068 +
            ((C46297 + C46296) * C152092 + (C46295 + C46294) * C96046) *
                C67857) *
               C2216 +
           ((C46312 * C96046 + (C46299 + C46298) * C152092) * C67857 +
            (C125651 * C96046 + C49563 * C152092) * C152068) *
               C152217) *
              C152258 +
          (((C124903 * C96046 + C125651 * C152092) * C67857 +
            (C125652 * C96046 + C25076 * C152092) * C152068) *
               C2216 -
           ((C25028 * C152092 + (C23383 + C23382) * C96046) * C152068 +
            (C124904 * C152092 + (C23381 + C23380) * C96046) * C67857) *
               C2215 -
           (((C27110 + C27111) * C152092 + C125653 * C96046) * C152068 +
            ((C27112 + C27113) * C152092 + C47587 * C96046) * C67857) *
               C152217) *
              C152244 +
          (((C23398 * C96046 + C125652 * C152092) * C67857 +
            ((C23385 + C23384) * C96046 + C25790 * C152092) * C152068) *
               C2215 -
           (((C25074 + C25075) * C152092 + C126557 * C96046) * C152068 +
            (C125653 * C152092 + C25028 * C96046) * C67857) *
               C2216 +
           ((C25076 * C96046 + (C27111 + C27110) * C152092) * C67857 +
            ((C25075 + C25074) * C96046 +
             (C23043 * C27085 + C27100 + C27100 + C152149 * C27089 +
              C23045 * C27086 + C27101 + C27101 + C151796 * C27090) *
                 C152092) *
                C152068) *
               C152217) *
              C152214) *
         C151823) /
            (p * q * std::sqrt(p + q));
    d2ee[90] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C23043 * C142 + C23048 + C23048 + C152149 * C158 +
               C23045 * C143 + C23049 + C23049 + C151796 * C159) *
                  C96046 +
              (C46294 + C46295) * C152092) *
                 C67857 +
             ((C23380 + C23381) * C96046 + C124903 * C152092) * C152068) *
                C4107 -
            ((C47587 * C152092 + C124904 * C96046) * C152068 +
             ((C46297 + C46296) * C152092 + (C46295 + C46294) * C96046) *
                 C67857) *
                C151956) *
               C152172 +
           (((C124903 * C96046 + C125651 * C152092) * C67857 +
             (C125652 * C96046 + C25076 * C152092) * C152068) *
                C151956 -
            ((C25028 * C152092 + (C23383 + C23382) * C96046) * C152068 +
             (C124904 * C152092 + (C23381 + C23380) * C96046) * C67857) *
                C4107) *
               C151914) *
              C151828 +
          (((((C46300 + C46301) * C96046 + (C46302 + C46303) * C152092) *
                 C67857 +
             (C124905 * C96046 + C49146 * C152092) * C152068) *
                C151956 -
            ((C124906 * C152092 + (C23387 + C23386) * C96046) * C152068 +
             ((C46301 + C46300) * C152092 +
              (C23045 * C144 + C23058 + C23058 + C151796 * C160 +
               C23043 * C143 + C23059 + C23059 + C152149 * C159) *
                  C96046) *
                 C67857) *
                C4107) *
               C152172 +
           ((((C23386 + C23387) * C96046 + C124905 * C152092) * C67857 +
             ((C23388 + C23389) * C96046 + C25576 * C152092) * C152068) *
                C4107 -
            (((C26688 + C26689) * C152092 + C126298 * C96046) * C152068 +
             (C127686 * C152092 + C124906 * C96046) * C67857) *
                C151956) *
               C151914) *
              C151837 +
          (((((C23043 * C144 + C23060 + C23060 + C152149 * C160 +
               C23045 * C145 + C23061 + C23061 + C151796 * C161) *
                  C96046 +
              (C46306 + C46307) * C152092) *
                 C67857 +
             ((C23392 + C23393) * C96046 + C124907 * C152092) * C152068) *
                C4107 -
            (((C47028 + C47027) * C152092 + C124908 * C96046) * C152068 +
             ((C46309 + C46308) * C152092 + (C46307 + C46306) * C96046) *
                 C67857) *
                C151956) *
               C152172 +
           (((C124907 * C96046 + (C47027 + C47028) * C152092) * C67857 +
             ((C24427 + C24426) * C96046 +
              (C23043 * C1541 + C23656 + C23656 + C152149 * C1565 +
               C23045 * C1542 + C23657 + C23657 + C151796 * C1566) *
                  C152092) *
                 C152068) *
                C151956 -
            (((C24426 + C24427) * C152092 + (C23395 + C23394) * C96046) *
                 C152068 +
             (C124908 * C152092 + (C23393 + C23392) * C96046) * C67857) *
                C4107) *
               C151914) *
              C3588)) /
        (p * q * std::sqrt(p + q));
    d2ee[91] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C23043 * C142 + C23048 + C23048 + C152149 * C158 +
               C23045 * C143 + C23049 + C23049 + C151796 * C159) *
                  C96046 +
              (C46294 + C46295) * C152092) *
                 C67857 +
             ((C23380 + C23381) * C96046 + C124903 * C152092) * C152068) *
                C151952 -
            ((C47587 * C152092 + C124904 * C96046) * C152068 +
             ((C46297 + C46296) * C152092 + (C46295 + C46294) * C96046) *
                 C67857) *
                C151959 +
            ((C46312 * C96046 + (C46299 + C46298) * C152092) * C67857 +
             (C125651 * C96046 + C49563 * C152092) * C152068) *
                C4779) *
               C152172 +
           (((C124903 * C96046 + C125651 * C152092) * C67857 +
             (C125652 * C96046 + C25076 * C152092) * C152068) *
                C151959 -
            ((C25028 * C152092 + (C23383 + C23382) * C96046) * C152068 +
             (C124904 * C152092 + (C23381 + C23380) * C96046) * C67857) *
                C151952 -
            (((C27110 + C27111) * C152092 + C125653 * C96046) * C152068 +
             (C128203 * C152092 + C47587 * C96046) * C67857) *
                C4779) *
               C151914) *
              C3241 +
          (((((C46300 + C46301) * C96046 + (C46302 + C46303) * C152092) *
                 C67857 +
             (C124905 * C96046 + C49146 * C152092) * C152068) *
                C151959 -
            ((C124906 * C152092 + (C23387 + C23386) * C96046) * C152068 +
             ((C46301 + C46300) * C152092 +
              (C23045 * C144 + C23058 + C23058 + C151796 * C160 +
               C23043 * C143 + C23059 + C23059 + C152149 * C159) *
                  C96046) *
                 C67857) *
                C151952 -
            (((C49157 + C49158) * C152092 + C127686 * C96046) * C152068 +
             ((C46305 + C46304) * C152092 + C46313 * C96046) * C67857) *
                C4779) *
               C152172 +
           ((((C23386 + C23387) * C96046 + C124905 * C152092) * C67857 +
             ((C23388 + C23389) * C96046 + C25576 * C152092) * C152068) *
                C151952 -
            (((C26688 + C26689) * C152092 + C126298 * C96046) * C152068 +
             (C127686 * C152092 + C124906 * C96046) * C67857) *
                C151959 +
            ((C49146 * C96046 + (C49158 + C49157) * C152092) * C67857 +
             ((C26689 + C26688) * C96046 +
              (C23043 * C10150 + C26890 + C26890 + C152149 * C10156 +
               C23045 * C10151 + C26891 + C26891 + C151796 * C10157) *
                  C152092) *
                 C152068) *
                C4779) *
               C151914) *
              C151834)) /
        (p * q * std::sqrt(p + q));
    d2ee[92] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C23043 * C142 + C23048 + C23048 + C152149 * C158 +
               C23045 * C143 + C23049 + C23049 + C151796 * C159) *
                  C96046 +
              (C46294 + C46295) * C152092) *
                 C67857 +
             ((C23380 + C23381) * C96046 + C124903 * C152092) * C152068) *
                C4107 -
            ((C47587 * C152092 + C124904 * C96046) * C152068 +
             ((C46297 + C46296) * C152092 + (C46295 + C46294) * C96046) *
                 C67857) *
                C151956) *
               C152258 +
           (((C124903 * C96046 + C125651 * C152092) * C67857 +
             (C125652 * C96046 + C25076 * C152092) * C152068) *
                C151956 -
            ((C25028 * C152092 + (C23383 + C23382) * C96046) * C152068 +
             (C124904 * C152092 + (C23381 + C23380) * C96046) * C67857) *
                C4107) *
               C152244 +
           (((C23398 * C96046 + C125652 * C152092) * C67857 +
             ((C23385 + C23384) * C96046 + C25790 * C152092) * C152068) *
                C4107 -
            (((C25074 + C25075) * C152092 + C126557 * C96046) * C152068 +
             (C125653 * C152092 + C25028 * C96046) * C67857) *
                C151956) *
               C152214) *
              C3241 +
          (((((C46300 + C46301) * C96046 + (C46302 + C46303) * C152092) *
                 C67857 +
             (C124905 * C96046 + C49146 * C152092) * C152068) *
                C151956 -
            ((C124906 * C152092 + (C23387 + C23386) * C96046) * C152068 +
             ((C46301 + C46300) * C152092 +
              (C23045 * C144 + C23058 + C23058 + C151796 * C160 +
               C23043 * C143 + C23059 + C23059 + C152149 * C159) *
                  C96046) *
                 C67857) *
                C4107) *
               C152258 +
           ((((C23386 + C23387) * C96046 + C124905 * C152092) * C67857 +
             ((C23388 + C23389) * C96046 + C25576 * C152092) * C152068) *
                C4107 -
            (((C26688 + C26689) * C152092 + C126298 * C96046) * C152068 +
             (C127686 * C152092 + C124906 * C96046) * C67857) *
                C151956) *
               C152244 +
           (((C25576 * C96046 + (C26689 + C26688) * C152092) * C67857 +
             ((C25589 + C25588) * C96046 +
              (C23043 * C8065 + C26678 + C26678 + C152149 * C8071 +
               C23045 * C8066 + C26679 + C26679 + C151796 * C8072) *
                  C152092) *
                 C152068) *
                C151956 -
            (((C25588 + C25589) * C152092 + (C23391 + C23390) * C96046) *
                 C152068 +
             (C126298 * C152092 + C23399 * C96046) * C67857) *
                C4107) *
               C152214) *
              C151834)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
              C23049 + C23049 + C151796 * C159) *
                 C96046 +
             (C46294 + C46295) * C152092) *
                C67857 +
            ((C23380 + C23381) * C96046 + C124903 * C152092) * C152068) *
               C4107 -
           ((C47587 * C152092 + C124904 * C96046) * C152068 +
            ((C46297 + C46296) * C152092 + (C46295 + C46294) * C96046) *
                C67857) *
               C151956) *
              C151851 * C152264 +
          ((((C46300 + C46301) * C96046 + (C46302 + C46303) * C152092) *
                C67857 +
            (C124905 * C96046 + C49146 * C152092) * C152068) *
               C151956 -
           ((C124906 * C152092 + (C23387 + C23386) * C96046) * C152068 +
            ((C46301 + C46300) * C152092 +
             (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
              C23059 + C23059 + C152149 * C159) *
                 C96046) *
                C67857) *
               C4107) *
              C151851 * C152257 +
          ((((C23043 * C144 + C23060 + C23060 + C152149 * C160 + C23045 * C145 +
              C23061 + C23061 + C151796 * C161) *
                 C96046 +
             (C46306 + C46307) * C152092) *
                C67857 +
            ((C23392 + C23393) * C96046 + C124907 * C152092) * C152068) *
               C4107 -
           (((C47028 + C47027) * C152092 + C124908 * C96046) * C152068 +
            ((C46309 + C46308) * C152092 + (C46307 + C46306) * C96046) *
                C67857) *
               C151956) *
              C151851 * C152242 +
          ((((C46723 + C46724) * C96046 + (C46725 + C46726) * C152092) *
                C67857 +
            ((C124257 + C124258) * C96046 +
             (C23043 * C1531 + C46509 + C46509 + C152149 * C1555 +
              C23045 * C2677 + C46510 + C46510 + C151796 * C2679) *
                 C152092) *
                C152068) *
               C151956 -
           (((C124258 + C124257) * C152092 + (C23871 + C23870) * C96046) *
                C152068 +
            ((C46724 + C46723) * C152092 +
             (C23045 * C146 + C23070 + C23070 + C151796 * C162 + C23043 * C145 +
              C23071 + C23071 + C152149 * C161) *
                 C96046) *
                C67857) *
               C4107) *
              C151851 * C152218)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
              C23049 + C23049 + C151796 * C159) *
                 C96046 +
             (C46294 + C46295) * C152092) *
                C67857 +
            ((C23380 + C23381) * C96046 + C124903 * C152092) * C152068) *
               C152266 -
           ((C47587 * C152092 + C124904 * C96046) * C152068 +
            ((C46297 + C46296) * C152092 + (C46295 + C46294) * C96046) *
                C67857) *
               C152263 +
           ((C46312 * C96046 + (C46299 + C46298) * C152092) * C67857 +
            (C125651 * C96046 + C49563 * C152092) * C152068) *
               C152252 -
           (((C49574 + C49575) * C152092 + C128203 * C96046) * C152068 +
            ((C48852 + C48851) * C152092 + C48830 * C96046) * C67857) *
               C152230) *
              C151851 * C3241 +
          ((((C46300 + C46301) * C96046 + (C46302 + C46303) * C152092) *
                C67857 +
            (C124905 * C96046 + C49146 * C152092) * C152068) *
               C152263 -
           ((C124906 * C152092 + (C23387 + C23386) * C96046) * C152068 +
            ((C46301 + C46300) * C152092 +
             (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
              C23059 + C23059 + C152149 * C159) *
                 C96046) *
                C67857) *
               C152266 -
           (((C49157 + C49158) * C152092 + C127686 * C96046) * C152068 +
            ((C46305 + C46304) * C152092 + C46313 * C96046) * C67857) *
               C152252 +
           ((C49353 * C96046 + (C49365 + C49364) * C152092) * C67857 +
            ((C49158 + C49157) * C96046 +
             (C23043 * C9427 + C49151 + C49151 + C152149 * C9433 +
              C23045 * C9428 + C49152 + C49152 + C151796 * C9434) *
                 C152092) *
                C152068) *
               C152230) *
              C151851 * C151834)) /
            (p * q * std::sqrt(p + q));
    d2ee[93] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
              C23049 + C23049 + C151796 * C159) *
                 C96046 +
             (C46294 + C46295) * C152092) *
                C67857 +
            ((C23380 + C23381) * C96046 + C124903 * C152092) * C152068) *
               C151952 -
           ((C47587 * C152092 + C124904 * C96046) * C152068 +
            ((C46297 + C46296) * C152092 + (C46295 + C46294) * C96046) *
                C67857) *
               C151959 +
           ((C46312 * C96046 + (C46299 + C46298) * C152092) * C67857 +
            (C125651 * C96046 + C49563 * C152092) * C152068) *
               C4779) *
              C151851 * C151828 +
          ((((C46300 + C46301) * C96046 + (C46302 + C46303) * C152092) *
                C67857 +
            (C124905 * C96046 + C49146 * C152092) * C152068) *
               C151959 -
           ((C124906 * C152092 + (C23387 + C23386) * C96046) * C152068 +
            ((C46301 + C46300) * C152092 +
             (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
              C23059 + C23059 + C152149 * C159) *
                 C96046) *
                C67857) *
               C151952 -
           (((C49157 + C49158) * C152092 + C127686 * C96046) * C152068 +
            ((C46305 + C46304) * C152092 + C46313 * C96046) * C67857) *
               C4779) *
              C151851 * C151837 +
          ((((C23043 * C144 + C23060 + C23060 + C152149 * C160 + C23045 * C145 +
              C23061 + C23061 + C151796 * C161) *
                 C96046 +
             (C46306 + C46307) * C152092) *
                C67857 +
            ((C23392 + C23393) * C96046 + C124907 * C152092) * C152068) *
               C151952 -
           (((C47028 + C47027) * C152092 + C124908 * C96046) * C152068 +
            ((C46309 + C46308) * C152092 + (C46307 + C46306) * C96046) *
                C67857) *
               C151959 +
           ((C46314 * C96046 + (C46311 + C46310) * C152092) * C67857 +
            ((C47027 + C47028) * C96046 +
             (C23043 * C2957 + C47021 + C47021 + C152149 * C2965 +
              C23045 * C2958 + C47022 + C47022 + C151796 * C2966) *
                 C152092) *
                C152068) *
               C4779) *
              C151851 * C3588)) /
        (p * q * std::sqrt(p + q));
    d2ee[94] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
              C23049 + C23049 + C151796 * C159) *
                 C96046 +
             (C46294 + C46295) * C152092) *
                C67857 +
            ((C23380 + C23381) * C96046 + C124903 * C152092) * C152068) *
               C4107 -
           ((C47587 * C152092 + C124904 * C96046) * C152068 +
            ((C46297 + C46296) * C152092 + (C46295 + C46294) * C96046) *
                C67857) *
               C151956) *
              C151851 * C152264 +
          ((((C46300 + C46301) * C96046 + (C46302 + C46303) * C152092) *
                C67857 +
            (C124905 * C96046 + C49146 * C152092) * C152068) *
               C151956 -
           ((C124906 * C152092 + (C23387 + C23386) * C96046) * C152068 +
            ((C46301 + C46300) * C152092 +
             (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
              C23059 + C23059 + C152149 * C159) *
                 C96046) *
                C67857) *
               C4107) *
              C151851 * C152257 +
          ((((C23043 * C144 + C23060 + C23060 + C152149 * C160 + C23045 * C145 +
              C23061 + C23061 + C151796 * C161) *
                 C96046 +
             (C46306 + C46307) * C152092) *
                C67857 +
            ((C23392 + C23393) * C96046 + C124907 * C152092) * C152068) *
               C4107 -
           (((C47028 + C47027) * C152092 + C124908 * C96046) * C152068 +
            ((C46309 + C46308) * C152092 + (C46307 + C46306) * C96046) *
                C67857) *
               C151956) *
              C151851 * C152242 +
          ((((C46723 + C46724) * C96046 + (C46725 + C46726) * C152092) *
                C67857 +
            ((C124257 + C124258) * C96046 +
             (C23043 * C1531 + C46509 + C46509 + C152149 * C1555 +
              C23045 * C2677 + C46510 + C46510 + C151796 * C2679) *
                 C152092) *
                C152068) *
               C151956 -
           (((C124258 + C124257) * C152092 + (C23871 + C23870) * C96046) *
                C152068 +
            ((C46724 + C46723) * C152092 +
             (C23045 * C146 + C23070 + C23070 + C151796 * C162 + C23043 * C145 +
              C23071 + C23071 + C152149 * C161) *
                 C96046) *
                C67857) *
               C4107) *
              C151851 * C152218)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C23043 * C142 + C23048 + C23048 + C152149 * C158 +
               C23045 * C143 + C23049 + C23049 + C151796 * C159) *
                  C96046 +
              (C46294 + C46295) * C152092) *
                 C67857 +
             ((C23380 + C23381) * C96046 + C124903 * C152092) * C152068) *
                C4107 -
            ((C47587 * C152092 + C124904 * C96046) * C152068 +
             ((C46297 + C46296) * C152092 + (C46295 + C46294) * C96046) *
                 C67857) *
                C151956) *
               C152258 +
           (((C124903 * C96046 + C125651 * C152092) * C67857 +
             (C125652 * C96046 + C25076 * C152092) * C152068) *
                C151956 -
            ((C25028 * C152092 + (C23383 + C23382) * C96046) * C152068 +
             (C124904 * C152092 + (C23381 + C23380) * C96046) * C67857) *
                C4107) *
               C152244 +
           (((C23398 * C96046 + C125652 * C152092) * C67857 +
             ((C23385 + C23384) * C96046 + C25790 * C152092) * C152068) *
                C4107 -
            (((C25074 + C25075) * C152092 + C126557 * C96046) * C152068 +
             (C125653 * C152092 + C25028 * C96046) * C67857) *
                C151956) *
               C152214) *
              C3241 +
          (((((C46300 + C46301) * C96046 + (C46302 + C46303) * C152092) *
                 C67857 +
             (C124905 * C96046 + C49146 * C152092) * C152068) *
                C151956 -
            ((C124906 * C152092 + (C23387 + C23386) * C96046) * C152068 +
             ((C46301 + C46300) * C152092 +
              (C23045 * C144 + C23058 + C23058 + C151796 * C160 +
               C23043 * C143 + C23059 + C23059 + C152149 * C159) *
                  C96046) *
                 C67857) *
                C4107) *
               C152258 +
           ((((C23386 + C23387) * C96046 + C124905 * C152092) * C67857 +
             ((C23388 + C23389) * C96046 + C25576 * C152092) * C152068) *
                C4107 -
            (((C26688 + C26689) * C152092 + C126298 * C96046) * C152068 +
             (C127686 * C152092 + C124906 * C96046) * C67857) *
                C151956) *
               C152244 +
           (((C25576 * C96046 + (C26689 + C26688) * C152092) * C67857 +
             ((C25589 + C25588) * C96046 +
              (C23043 * C8065 + C26678 + C26678 + C152149 * C8071 +
               C23045 * C8066 + C26679 + C26679 + C151796 * C8072) *
                  C152092) *
                 C152068) *
                C151956 -
            (((C25588 + C25589) * C152092 + (C23391 + C23390) * C96046) *
                 C152068 +
             (C126298 * C152092 + C23399 * C96046) * C67857) *
                C4107) *
               C152214) *
              C151834)) /
            (p * q * std::sqrt(p + q));
    d2ee[95] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
              C23049 + C23049 + C151796 * C159) *
                 C96046 +
             (C46294 + C46295) * C152092) *
                C67857 +
            ((C23380 + C23381) * C96046 + (C24421 + C24420) * C152092) *
                C152068) *
               C151869 * C152172 -
           ((C25028 * C152092 + (C23383 + C23382) * C96046) * C152068 +
            ((C24420 + C24421) * C152092 + (C23381 + C23380) * C96046) *
                C67857) *
               C151869 * C151914) *
              C739 +
          ((((C23386 + C23387) * C96046 + (C24422 + C24423) * C152092) *
                C67857 +
            ((C23388 + C23389) * C96046 + C25576 * C152092) * C152068) *
               C151869 * C151914 -
           (((C24423 + C24422) * C152092 + (C23387 + C23386) * C96046) *
                C152068 +
            ((C46301 + C46300) * C152092 +
             (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
              C23059 + C23059 + C152149 * C159) *
                 C96046) *
                C67857) *
               C151869 * C152172) *
              C740 +
          ((((C23043 * C144 + C23060 + C23060 + C152149 * C160 + C23045 * C145 +
              C23061 + C23061 + C151796 * C161) *
                 C96046 +
             (C46306 + C46307) * C152092) *
                C67857 +
            ((C23392 + C23393) * C96046 + (C24429 + C24428) * C152092) *
                C152068) *
               C151869 * C152172 -
           (((C24426 + C24427) * C152092 + (C23395 + C23394) * C96046) *
                C152068 +
            ((C24428 + C24429) * C152092 + (C23393 + C23392) * C96046) *
                C67857) *
               C151869 * C151914) *
              C741 +
          ((((C23870 + C23871) * C96046 + (C124257 + C124258) * C152092) *
                C67857 +
            ((C23872 + C23873) * C96046 +
             (C23043 * C1535 + C24072 + C24072 + C152149 * C1559 +
              C23045 * C1916 + C24073 + C24073 + C151796 * C1918) *
                 C152092) *
                C152068) *
               C151869 * C151914 -
           (((C124258 + C124257) * C152092 + (C23871 + C23870) * C96046) *
                C152068 +
            ((C46724 + C46723) * C152092 +
             (C23045 * C146 + C23070 + C23070 + C151796 * C162 + C23043 * C145 +
              C23071 + C23071 + C152149 * C161) *
                 C96046) *
                C67857) *
               C151869 * C152172) *
              C152218)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
              C23049 + C23049 + C151796 * C159) *
                 C96046 +
             (C46294 + C46295) * C152092) *
                C67857 +
            ((C23380 + C23381) * C96046 + C124903 * C152092) * C152068) *
               C151869 * C1709 -
           ((C25028 * C152092 + (C23383 + C23382) * C96046) * C152068 +
            (C124904 * C152092 + (C23381 + C23380) * C96046) * C67857) *
               C151869 * C1710 +
           ((C23398 * C96046 + C125652 * C152092) * C67857 +
            ((C23385 + C23384) * C96046 + C25790 * C152092) * C152068) *
               C151869 * C1711 -
           (((C25802 + C25803) * C152092 + (C24799 + C24798) * C96046) *
                C152068 +
            ((C25073 + C25072) * C152092 + C24776 * C96046) * C67857) *
               C151869 * C152224) *
              C152158 +
          ((((C23386 + C23387) * C96046 + C124905 * C152092) * C67857 +
            ((C23388 + C23389) * C96046 + C25576 * C152092) * C152068) *
               C151869 * C1710 -
           ((C124906 * C152092 + (C23387 + C23386) * C96046) * C152068 +
            ((C46301 + C46300) * C152092 +
             (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
              C23059 + C23059 + C152149 * C159) *
                 C96046) *
                C67857) *
               C151869 * C1709 -
           (((C25588 + C25589) * C152092 + (C23391 + C23390) * C96046) *
                C152068 +
            ((C24425 + C24424) * C152092 + C23399 * C96046) * C67857) *
               C151869 * C1711 +
           ((C25272 * C96046 + (C25589 + C25588) * C152092) * C67857 +
            ((C25285 + C25284) * C96046 +
             (C23043 * C8842 + C25581 + C25581 + C152149 * C8848 +
              C23045 * C8843 + C25582 + C25582 + C151796 * C8849) *
                 C152092) *
                C152068) *
               C151869 * C152224) *
              C151834)) /
            (p * q * std::sqrt(p + q));
    d2ee[96] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C23043 * C142 + C23048 + C23048 + C152149 * C158 +
               C23045 * C143 + C23049 + C23049 + C151796 * C159) *
                  C96046 +
              (C46294 + C46295) * C152092) *
                 C67857 +
             ((C23380 + C23381) * C96046 + C124903 * C152092) * C152068) *
                C152173 -
            ((C47587 * C152092 + C124904 * C96046) * C152068 +
             ((C46297 + C46296) * C152092 + (C46295 + C46294) * C96046) *
                 C67857) *
                C151956) *
               C152172 +
           (((C124903 * C96046 + (C25068 + C25069) * C152092) * C67857 +
             ((C24419 + C24418) * C96046 + C25076 * C152092) * C152068) *
                C151956 -
            ((C25028 * C152092 + (C23383 + C23382) * C96046) * C152068 +
             (C124904 * C152092 + (C23381 + C23380) * C96046) * C67857) *
                C152173) *
               C151914) *
              C335 +
          (((((C46300 + C46301) * C96046 + (C46302 + C46303) * C152092) *
                 C67857 +
             (C124905 * C96046 + C49146 * C152092) * C152068) *
                C151956 -
            ((C124906 * C152092 + (C23387 + C23386) * C96046) * C152068 +
             ((C46301 + C46300) * C152092 +
              (C23045 * C144 + C23058 + C23058 + C151796 * C160 +
               C23043 * C143 + C23059 + C23059 + C152149 * C159) *
                  C96046) *
                 C67857) *
                C152173) *
               C152172 +
           ((((C23386 + C23387) * C96046 + C124905 * C152092) * C67857 +
             ((C23388 + C23389) * C96046 + C25576 * C152092) * C152068) *
                C152173 -
            (((C26688 + C26689) * C152092 + (C24425 + C24424) * C96046) *
                 C152068 +
             ((C26690 + C26691) * C152092 + C124906 * C96046) * C67857) *
                C151956) *
               C151914) *
              C336 +
          (((((C23043 * C144 + C23060 + C23060 + C152149 * C160 +
               C23045 * C145 + C23061 + C23061 + C151796 * C161) *
                  C96046 +
              (C46306 + C46307) * C152092) *
                 C67857 +
             ((C23392 + C23393) * C96046 + C124907 * C152092) * C152068) *
                C152173 -
            (((C47028 + C47027) * C152092 + C124908 * C96046) * C152068 +
             ((C46309 + C46308) * C152092 + (C46307 + C46306) * C96046) *
                 C67857) *
                C151956) *
               C152172 +
           (((C124907 * C96046 + (C47027 + C47028) * C152092) * C67857 +
             ((C24427 + C24426) * C96046 +
              (C23043 * C1541 + C23656 + C23656 + C152149 * C1565 +
               C23045 * C1542 + C23657 + C23657 + C151796 * C1566) *
                  C152092) *
                 C152068) *
                C151956 -
            (((C24426 + C24427) * C152092 + (C23395 + C23394) * C96046) *
                 C152068 +
             (C124908 * C152092 + (C23393 + C23392) * C96046) * C67857) *
                C152173) *
               C151914) *
              C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
              C23049 + C23049 + C151796 * C159) *
                 C96046 +
             (C46294 + C46295) * C152092) *
                C67857 +
            ((C23380 + C23381) * C96046 + C124903 * C152092) * C152068) *
               C152173 -
           ((C47587 * C152092 + C124904 * C96046) * C152068 +
            ((C46297 + C46296) * C152092 + (C46295 + C46294) * C96046) *
                C67857) *
               C151956) *
              C1709 +
          (((C124903 * C96046 + C125651 * C152092) * C67857 +
            (C125652 * C96046 + C25076 * C152092) * C152068) *
               C151956 -
           ((C25028 * C152092 + (C23383 + C23382) * C96046) * C152068 +
            (C124904 * C152092 + (C23381 + C23380) * C96046) * C67857) *
               C152173) *
              C1710 +
          (((C23398 * C96046 + C125652 * C152092) * C67857 +
            ((C23385 + C23384) * C96046 + C25790 * C152092) * C152068) *
               C152173 -
           (((C25074 + C25075) * C152092 + C126557 * C96046) * C152068 +
            (C125653 * C152092 + C25028 * C96046) * C67857) *
               C151956) *
              C1711 +
          (((C25790 * C96046 + (C25075 + C25074) * C152092) * C67857 +
            ((C25803 + C25802) * C96046 +
             (C23043 * C25021 + C25049 + C25049 + C152149 * C25025 +
              C23045 * C25022 + C25050 + C25050 + C151796 * C25026) *
                 C152092) *
                C152068) *
               C151956 -
           (((C25802 + C25803) * C152092 + (C24799 + C24798) * C96046) *
                C152068 +
            (C126557 * C152092 + C24776 * C96046) * C67857) *
               C152173) *
              C152224) *
         C151823) /
            (p * q * std::sqrt(p + q));
    d2ee[97] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
              C23049 + C23049 + C151796 * C159) *
                 C96046 +
             (C46294 + C46295) * C152092) *
                C67857 +
            ((C23380 + C23381) * C96046 + (C24421 + C24420) * C152092) *
                C152068) *
               C151869 * C152258 -
           ((C25028 * C152092 + (C23383 + C23382) * C96046) * C152068 +
            ((C24420 + C24421) * C152092 + (C23381 + C23380) * C96046) *
                C67857) *
               C151869 * C152244 +
           ((C23398 * C96046 + (C24419 + C24418) * C152092) * C67857 +
            ((C23385 + C23384) * C96046 + C25790 * C152092) * C152068) *
               C151869 * C152214) *
              C335 +
          ((((C23386 + C23387) * C96046 + (C24422 + C24423) * C152092) *
                C67857 +
            ((C23388 + C23389) * C96046 + C25576 * C152092) * C152068) *
               C151869 * C152244 -
           (((C24423 + C24422) * C152092 + (C23387 + C23386) * C96046) *
                C152068 +
            ((C46301 + C46300) * C152092 +
             (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
              C23059 + C23059 + C152149 * C159) *
                 C96046) *
                C67857) *
               C151869 * C152258 -
           (((C25588 + C25589) * C152092 + (C23391 + C23390) * C96046) *
                C152068 +
            ((C24425 + C24424) * C152092 + C23399 * C96046) * C67857) *
               C151869 * C152214) *
              C336 +
          ((((C23043 * C144 + C23060 + C23060 + C152149 * C160 + C23045 * C145 +
              C23061 + C23061 + C151796 * C161) *
                 C96046 +
             (C46306 + C46307) * C152092) *
                C67857 +
            ((C23392 + C23393) * C96046 + (C24429 + C24428) * C152092) *
                C152068) *
               C151869 * C152258 -
           (((C24426 + C24427) * C152092 + (C23395 + C23394) * C96046) *
                C152068 +
            ((C24428 + C24429) * C152092 + (C23393 + C23392) * C96046) *
                C67857) *
               C151869 * C152244 +
           ((C23400 * C96046 + (C24427 + C24426) * C152092) * C67857 +
            ((C23397 + C23396) * C96046 +
             (C23043 * C2055 + C24392 + C24392 + C152149 * C2063 +
              C23045 * C2056 + C24393 + C24393 + C151796 * C2064) *
                 C152092) *
                C152068) *
               C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
             C23049 + C23049 + C151796 * C159) *
                C96046 +
            (C46294 + C46295) * C152092) *
               C67857 +
           ((C23380 + C23381) * C96046 + (C24421 + C24420) * C152092) *
               C152068) *
              C151869 * C151851 * C129 -
          (((C24423 + C24422) * C152092 + (C23387 + C23386) * C96046) *
               C152068 +
           ((C46301 + C46300) * C152092 +
            (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
             C23059 + C23059 + C152149 * C159) *
                C96046) *
               C67857) *
              C151869 * C151851 * C130 +
          (((C23043 * C144 + C23060 + C23060 + C152149 * C160 + C23045 * C145 +
             C23061 + C23061 + C151796 * C161) *
                C96046 +
            (C46306 + C46307) * C152092) *
               C67857 +
           ((C23392 + C23393) * C96046 + (C24429 + C24428) * C152092) *
               C152068) *
              C151869 * C151851 * C131 -
          (((C23045 * C1087 + C24071 + C24071 + C151796 * C1099 +
             C23043 * C1086 + C24070 + C24070 + C152149 * C1098) *
                C152092 +
            (C23871 + C23870) * C96046) *
               C152068 +
           ((C46724 + C46723) * C152092 +
            (C23045 * C146 + C23070 + C23070 + C151796 * C162 + C23043 * C145 +
             C23071 + C23071 + C152149 * C161) *
                C96046) *
               C67857) *
              C151869 * C151851 * C132 +
          (((C23043 * C146 + C23072 + C23072 + C152149 * C162 + C23045 * C147 +
             C23073 + C23073 + C151796 * C163) *
                C96046 +
            (C23043 * C555 + C45776 + C45776 + C152149 * C579 + C23045 * C557 +
             C45777 + C45777 + C151796 * C581) *
                C152092) *
               C67857 +
           ((C23043 * C346 + C23074 + C23074 + C152149 * C370 + C23045 * C348 +
             C23075 + C23075 + C151796 * C372) *
                C96046 +
            (C23043 * C1087 + C123409 + C123409 + C152149 * C1099 +
             C23045 * C1088 + C123410 + C123410 + C151796 * C1100) *
                C152092) *
               C152068) *
              C151869 * C151851 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
              C23049 + C23049 + C151796 * C159) *
                 C96046 +
             (C46294 + C46295) * C152092) *
                C67857 +
            ((C23380 + C23381) * C96046 + (C24421 + C24420) * C152092) *
                C152068) *
               C152259 -
           ((C47587 * C152092 + (C24420 + C24421) * C96046) * C152068 +
            ((C46297 + C46296) * C152092 + (C46295 + C46294) * C96046) *
                C67857) *
               C152246 +
           ((C46312 * C96046 + (C46299 + C46298) * C152092) * C67857 +
            ((C25068 + C25069) * C96046 + C49563 * C152092) * C152068) *
               C152217) *
              C151851 * C335 +
          ((((C46300 + C46301) * C96046 + (C46302 + C46303) * C152092) *
                C67857 +
            ((C24422 + C24423) * C96046 + C49146 * C152092) * C152068) *
               C152246 -
           (((C24423 + C24422) * C152092 + (C23387 + C23386) * C96046) *
                C152068 +
            ((C46301 + C46300) * C152092 +
             (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
              C23059 + C23059 + C152149 * C159) *
                 C96046) *
                C67857) *
               C152259 -
           (((C49157 + C49158) * C152092 + (C26690 + C26691) * C96046) *
                C152068 +
            ((C46305 + C46304) * C152092 + C46313 * C96046) * C67857) *
               C152217) *
              C151851 * C336 +
          ((((C23043 * C144 + C23060 + C23060 + C152149 * C160 + C23045 * C145 +
              C23061 + C23061 + C151796 * C161) *
                 C96046 +
             (C46306 + C46307) * C152092) *
                C67857 +
            ((C23392 + C23393) * C96046 + (C24429 + C24428) * C152092) *
                C152068) *
               C152259 -
           (((C47028 + C47027) * C152092 + (C24428 + C24429) * C96046) *
                C152068 +
            ((C46309 + C46308) * C152092 + (C46307 + C46306) * C96046) *
                C67857) *
               C152246 +
           ((C46314 * C96046 + (C46311 + C46310) * C152092) * C67857 +
            ((C47027 + C47028) * C96046 +
             (C23043 * C2957 + C47021 + C47021 + C152149 * C2965 +
              C23045 * C2958 + C47022 + C47022 + C151796 * C2966) *
                 C152092) *
                C152068) *
               C152217) *
              C151851 * C152208)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
              C23049 + C23049 + C151796 * C159) *
                 C96046 +
             (C46294 + C46295) * C152092) *
                C67857 +
            ((C23380 + C23381) * C96046 + C124903 * C152092) * C152068) *
               C151869 * C1259 -
           ((C25028 * C152092 + (C23383 + C23382) * C96046) * C152068 +
            (C124904 * C152092 + (C23381 + C23380) * C96046) * C67857) *
               C151869 * C1260 +
           ((C23398 * C96046 + (C24419 + C24418) * C152092) * C67857 +
            ((C23385 + C23384) * C96046 + C25790 * C152092) * C152068) *
               C151869 * C152214) *
              C152255 +
          ((((C23386 + C23387) * C96046 + C124905 * C152092) * C67857 +
            ((C23388 + C23389) * C96046 + C25576 * C152092) * C152068) *
               C151869 * C1260 -
           ((C124906 * C152092 + (C23387 + C23386) * C96046) * C152068 +
            ((C46301 + C46300) * C152092 +
             (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
              C23059 + C23059 + C152149 * C159) *
                 C96046) *
                C67857) *
               C151869 * C1259 -
           (((C25588 + C25589) * C152092 + (C23391 + C23390) * C96046) *
                C152068 +
            ((C24425 + C24424) * C152092 + C23399 * C96046) * C67857) *
               C151869 * C152214) *
              C152240 +
          ((((C23043 * C144 + C23060 + C23060 + C152149 * C160 + C23045 * C145 +
              C23061 + C23061 + C151796 * C161) *
                 C96046 +
             (C46306 + C46307) * C152092) *
                C67857 +
            ((C23392 + C23393) * C96046 + C124907 * C152092) * C152068) *
               C151869 * C1259 -
           (((C24426 + C24427) * C152092 + (C23395 + C23394) * C96046) *
                C152068 +
            (C124908 * C152092 + (C23393 + C23392) * C96046) * C67857) *
               C151869 * C1260 +
           ((C23400 * C96046 + (C24427 + C24426) * C152092) * C67857 +
            ((C23397 + C23396) * C96046 +
             (C23043 * C2055 + C24392 + C24392 + C152149 * C2063 +
              C23045 * C2056 + C24393 + C24393 + C151796 * C2064) *
                 C152092) *
                C152068) *
               C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
             C23049 + C23049 + C151796 * C159) *
                C96046 +
            (C46294 + C46295) * C152092) *
               C67857 +
           ((C23380 + C23381) * C96046 + C124903 * C152092) * C152068) *
              C151869 * C1347 -
          ((C25028 * C152092 + (C23383 + C23382) * C96046) * C152068 +
           (C124904 * C152092 + (C23381 + C23380) * C96046) * C67857) *
              C151869 * C1348 +
          ((C23398 * C96046 + (C24419 + C24418) * C152092) * C67857 +
           ((C23385 + C23384) * C96046 + C25790 * C152092) * C152068) *
              C151869 * C1349 -
          (((C25802 + C25803) * C152092 + (C24799 + C24798) * C96046) *
               C152068 +
           ((C25073 + C25072) * C152092 + C24776 * C96046) * C67857) *
              C151869 * C1350 +
          ((C24802 * C96046 + (C25803 + C25802) * C152092) * C67857 +
           ((C24801 + C24800) * C96046 +
            (C23043 * C25783 + C25795 + C25795 + C152149 * C25787 +
             C23045 * C25784 + C25796 + C25796 + C151796 * C25788) *
                C152092) *
               C152068) *
              C151869 * C1351) *
         C151823) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
              C23049 + C23049 + C151796 * C159) *
                 C96046 +
             (C46294 + C46295) * C152092) *
                C67857 +
            ((C23380 + C23381) * C96046 + C124903 * C152092) * C152068) *
               C152259 -
           ((C47587 * C152092 + C124904 * C96046) * C152068 +
            ((C46297 + C46296) * C152092 + (C46295 + C46294) * C96046) *
                C67857) *
               C152246 +
           ((C46312 * C96046 + (C46299 + C46298) * C152092) * C67857 +
            (C125651 * C96046 + C49563 * C152092) * C152068) *
               C152217) *
              C1259 +
          (((C124903 * C96046 + C125651 * C152092) * C67857 +
            (C125652 * C96046 + C25076 * C152092) * C152068) *
               C152246 -
           ((C25028 * C152092 + (C23383 + C23382) * C96046) * C152068 +
            (C124904 * C152092 + (C23381 + C23380) * C96046) * C67857) *
               C152259 -
           (((C27110 + C27111) * C152092 + C125653 * C96046) * C152068 +
            ((C27112 + C27113) * C152092 + C47587 * C96046) * C67857) *
               C152217) *
              C1260 +
          (((C23398 * C96046 + C125652 * C152092) * C67857 +
            ((C23385 + C23384) * C96046 + C25790 * C152092) * C152068) *
               C152259 -
           (((C25074 + C25075) * C152092 + (C25073 + C25072) * C96046) *
                C152068 +
            (C125653 * C152092 + C25028 * C96046) * C67857) *
               C152246 +
           ((C25076 * C96046 + (C27111 + C27110) * C152092) * C67857 +
            ((C25075 + C25074) * C96046 +
             (C23043 * C27085 + C27100 + C27100 + C152149 * C27089 +
              C23045 * C27086 + C27101 + C27101 + C151796 * C27090) *
                 C152092) *
                C152068) *
               C152217) *
              C152214) *
         C151823) /
            (p * q * std::sqrt(p + q));
    d2ee[98] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
              C23049 + C23049 + C151796 * C159) *
                 C96046 +
             (C46294 + C46295) * C152092) *
                C67857 +
            ((C23380 + C23381) * C96046 + (C24421 + C24420) * C152092) *
                C152068) *
               C152173 -
           ((C47587 * C152092 + (C24420 + C24421) * C96046) * C152068 +
            ((C46297 + C46296) * C152092 + (C46295 + C46294) * C96046) *
                C67857) *
               C151956) *
              C151851 * C739 +
          ((((C46300 + C46301) * C96046 + (C46302 + C46303) * C152092) *
                C67857 +
            ((C24422 + C24423) * C96046 + C49146 * C152092) * C152068) *
               C151956 -
           (((C24423 + C24422) * C152092 + (C23387 + C23386) * C96046) *
                C152068 +
            ((C46301 + C46300) * C152092 +
             (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
              C23059 + C23059 + C152149 * C159) *
                 C96046) *
                C67857) *
               C152173) *
              C151851 * C740 +
          ((((C23043 * C144 + C23060 + C23060 + C152149 * C160 + C23045 * C145 +
              C23061 + C23061 + C151796 * C161) *
                 C96046 +
             (C46306 + C46307) * C152092) *
                C67857 +
            ((C23392 + C23393) * C96046 + (C24429 + C24428) * C152092) *
                C152068) *
               C152173 -
           (((C47028 + C47027) * C152092 + (C24428 + C24429) * C96046) *
                C152068 +
            ((C46309 + C46308) * C152092 + (C46307 + C46306) * C96046) *
                C67857) *
               C151956) *
              C151851 * C741 +
          ((((C46723 + C46724) * C96046 + (C46725 + C46726) * C152092) *
                C67857 +
            ((C124257 + C124258) * C96046 +
             (C23043 * C1531 + C46509 + C46509 + C152149 * C1555 +
              C23045 * C2677 + C46510 + C46510 + C151796 * C2679) *
                 C152092) *
                C152068) *
               C151956 -
           (((C124258 + C124257) * C152092 + (C23871 + C23870) * C96046) *
                C152068 +
            ((C46724 + C46723) * C152092 +
             (C23045 * C146 + C23070 + C23070 + C151796 * C162 + C23043 * C145 +
              C23071 + C23071 + C152149 * C161) *
                 C96046) *
                C67857) *
               C152173) *
              C151851 * C152218)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C23043 * C142 + C23048 + C23048 + C152149 * C158 +
               C23045 * C143 + C23049 + C23049 + C151796 * C159) *
                  C96046 +
              (C46294 + C46295) * C152092) *
                 C67857 +
             ((C23380 + C23381) * C96046 + C124903 * C152092) * C152068) *
                C152173 -
            ((C47587 * C152092 + C124904 * C96046) * C152068 +
             ((C46297 + C46296) * C152092 + (C46295 + C46294) * C96046) *
                 C67857) *
                C151956) *
               C1259 +
           (((C124903 * C96046 + C125651 * C152092) * C67857 +
             (C125652 * C96046 + C25076 * C152092) * C152068) *
                C151956 -
            ((C25028 * C152092 + (C23383 + C23382) * C96046) * C152068 +
             (C124904 * C152092 + (C23381 + C23380) * C96046) * C67857) *
                C152173) *
               C1260 +
           (((C23398 * C96046 + C125652 * C152092) * C67857 +
             ((C23385 + C23384) * C96046 + C25790 * C152092) * C152068) *
                C152173 -
            (((C25074 + C25075) * C152092 + (C25073 + C25072) * C96046) *
                 C152068 +
             (C125653 * C152092 + C25028 * C96046) * C67857) *
                C151956) *
               C152214) *
              C152158 +
          (((((C46300 + C46301) * C96046 + (C46302 + C46303) * C152092) *
                 C67857 +
             (C124905 * C96046 + C49146 * C152092) * C152068) *
                C151956 -
            ((C124906 * C152092 + (C23387 + C23386) * C96046) * C152068 +
             ((C46301 + C46300) * C152092 +
              (C23045 * C144 + C23058 + C23058 + C151796 * C160 +
               C23043 * C143 + C23059 + C23059 + C152149 * C159) *
                  C96046) *
                 C67857) *
                C152173) *
               C1259 +
           ((((C23386 + C23387) * C96046 + C124905 * C152092) * C67857 +
             ((C23388 + C23389) * C96046 + C25576 * C152092) * C152068) *
                C152173 -
            (((C26688 + C26689) * C152092 + C126298 * C96046) * C152068 +
             ((C26690 + C26691) * C152092 + C124906 * C96046) * C67857) *
                C151956) *
               C1260 +
           (((C25576 * C96046 + (C26689 + C26688) * C152092) * C67857 +
             ((C25589 + C25588) * C96046 +
              (C23043 * C8065 + C26678 + C26678 + C152149 * C8071 +
               C23045 * C8066 + C26679 + C26679 + C151796 * C8072) *
                  C152092) *
                 C152068) *
                C151956 -
            (((C25588 + C25589) * C152092 + (C23391 + C23390) * C96046) *
                 C152068 +
             (C126298 * C152092 + C23399 * C96046) * C67857) *
                C152173) *
               C152214) *
              C151834)) /
            (p * q * std::sqrt(p + q));
    d2ee[99] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
             C23049 + C23049 + C151796 * C159) *
                C96046 +
            (C46294 + C46295) * C152092) *
               C67857 +
           ((C23380 + C23381) * C96046 + (C24421 + C24420) * C152092) *
               C152068) *
              C151869 * C151851 * C129 -
          (((C24423 + C24422) * C152092 + (C23387 + C23386) * C96046) *
               C152068 +
           ((C46301 + C46300) * C152092 +
            (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
             C23059 + C23059 + C152149 * C159) *
                C96046) *
               C67857) *
              C151869 * C151851 * C130 +
          (((C23043 * C144 + C23060 + C23060 + C152149 * C160 + C23045 * C145 +
             C23061 + C23061 + C151796 * C161) *
                C96046 +
            (C46306 + C46307) * C152092) *
               C67857 +
           ((C23392 + C23393) * C96046 + (C24429 + C24428) * C152092) *
               C152068) *
              C151869 * C151851 * C131 -
          (((C23045 * C1087 + C24071 + C24071 + C151796 * C1099 +
             C23043 * C1086 + C24070 + C24070 + C152149 * C1098) *
                C152092 +
            (C23871 + C23870) * C96046) *
               C152068 +
           ((C46724 + C46723) * C152092 +
            (C23045 * C146 + C23070 + C23070 + C151796 * C162 + C23043 * C145 +
             C23071 + C23071 + C152149 * C161) *
                C96046) *
               C67857) *
              C151869 * C151851 * C132 +
          (((C23043 * C146 + C23072 + C23072 + C152149 * C162 + C23045 * C147 +
             C23073 + C23073 + C151796 * C163) *
                C96046 +
            (C23043 * C555 + C45776 + C45776 + C152149 * C579 + C23045 * C557 +
             C45777 + C45777 + C151796 * C581) *
                C152092) *
               C67857 +
           ((C23043 * C346 + C23074 + C23074 + C152149 * C370 + C23045 * C348 +
             C23075 + C23075 + C151796 * C372) *
                C96046 +
            (C23043 * C1087 + C123409 + C123409 + C152149 * C1099 +
             C23045 * C1088 + C123410 + C123410 + C151796 * C1100) *
                C152092) *
               C152068) *
              C151869 * C151851 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
              C23049 + C23049 + C151796 * C159) *
                 C96046 +
             (C46294 + C46295) * C152092) *
                C67857 +
            ((C23380 + C23381) * C96046 + (C24421 + C24420) * C152092) *
                C152068) *
               C151869 * C152258 -
           ((C25028 * C152092 + (C23383 + C23382) * C96046) * C152068 +
            ((C24420 + C24421) * C152092 + (C23381 + C23380) * C96046) *
                C67857) *
               C151869 * C152244 +
           ((C23398 * C96046 + (C24419 + C24418) * C152092) * C67857 +
            ((C23385 + C23384) * C96046 + C25790 * C152092) * C152068) *
               C151869 * C152214) *
              C335 +
          ((((C23386 + C23387) * C96046 + (C24422 + C24423) * C152092) *
                C67857 +
            ((C23388 + C23389) * C96046 + C25576 * C152092) * C152068) *
               C151869 * C152244 -
           (((C24423 + C24422) * C152092 + (C23387 + C23386) * C96046) *
                C152068 +
            ((C46301 + C46300) * C152092 +
             (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
              C23059 + C23059 + C152149 * C159) *
                 C96046) *
                C67857) *
               C151869 * C152258 -
           (((C25588 + C25589) * C152092 + (C23391 + C23390) * C96046) *
                C152068 +
            ((C24425 + C24424) * C152092 + C23399 * C96046) * C67857) *
               C151869 * C152214) *
              C336 +
          ((((C23043 * C144 + C23060 + C23060 + C152149 * C160 + C23045 * C145 +
              C23061 + C23061 + C151796 * C161) *
                 C96046 +
             (C46306 + C46307) * C152092) *
                C67857 +
            ((C23392 + C23393) * C96046 + (C24429 + C24428) * C152092) *
                C152068) *
               C151869 * C152258 -
           (((C24426 + C24427) * C152092 + (C23395 + C23394) * C96046) *
                C152068 +
            ((C24428 + C24429) * C152092 + (C23393 + C23392) * C96046) *
                C67857) *
               C151869 * C152244 +
           ((C23400 * C96046 + (C24427 + C24426) * C152092) * C67857 +
            ((C23397 + C23396) * C96046 +
             (C23043 * C2055 + C24392 + C24392 + C152149 * C2063 +
              C23045 * C2056 + C24393 + C24393 + C151796 * C2064) *
                 C152092) *
                C152068) *
               C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
              C23049 + C23049 + C151796 * C159) *
                 C96046 +
             (C46294 + C46295) * C152092) *
                C67857 +
            ((C23380 + C23381) * C96046 + C124903 * C152092) * C152068) *
               C151869 * C1259 -
           ((C25028 * C152092 + (C23383 + C23382) * C96046) * C152068 +
            (C124904 * C152092 + (C23381 + C23380) * C96046) * C67857) *
               C151869 * C1260 +
           ((C23398 * C96046 + (C24419 + C24418) * C152092) * C67857 +
            ((C23385 + C23384) * C96046 + C25790 * C152092) * C152068) *
               C151869 * C152214) *
              C152255 +
          ((((C23386 + C23387) * C96046 + C124905 * C152092) * C67857 +
            ((C23388 + C23389) * C96046 + C25576 * C152092) * C152068) *
               C151869 * C1260 -
           ((C124906 * C152092 + (C23387 + C23386) * C96046) * C152068 +
            ((C46301 + C46300) * C152092 +
             (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
              C23059 + C23059 + C152149 * C159) *
                 C96046) *
                C67857) *
               C151869 * C1259 -
           (((C25588 + C25589) * C152092 + (C23391 + C23390) * C96046) *
                C152068 +
            ((C24425 + C24424) * C152092 + C23399 * C96046) * C67857) *
               C151869 * C152214) *
              C152240 +
          ((((C23043 * C144 + C23060 + C23060 + C152149 * C160 + C23045 * C145 +
              C23061 + C23061 + C151796 * C161) *
                 C96046 +
             (C46306 + C46307) * C152092) *
                C67857 +
            ((C23392 + C23393) * C96046 + C124907 * C152092) * C152068) *
               C151869 * C1259 -
           (((C24426 + C24427) * C152092 + (C23395 + C23394) * C96046) *
                C152068 +
            (C124908 * C152092 + (C23393 + C23392) * C96046) * C67857) *
               C151869 * C1260 +
           ((C23400 * C96046 + (C24427 + C24426) * C152092) * C67857 +
            ((C23397 + C23396) * C96046 +
             (C23043 * C2055 + C24392 + C24392 + C152149 * C2063 +
              C23045 * C2056 + C24393 + C24393 + C151796 * C2064) *
                 C152092) *
                C152068) *
               C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
             C23049 + C23049 + C151796 * C159) *
                C96046 +
            (C46294 + C46295) * C152092) *
               C67857 +
           ((C23380 + C23381) * C96046 + C124903 * C152092) * C152068) *
              C151869 * C1347 -
          ((C25028 * C152092 + (C23383 + C23382) * C96046) * C152068 +
           (C124904 * C152092 + (C23381 + C23380) * C96046) * C67857) *
              C151869 * C1348 +
          ((C23398 * C96046 + (C24419 + C24418) * C152092) * C67857 +
           ((C23385 + C23384) * C96046 + C25790 * C152092) * C152068) *
              C151869 * C1349 -
          (((C25802 + C25803) * C152092 + (C24799 + C24798) * C96046) *
               C152068 +
           ((C25073 + C25072) * C152092 + C24776 * C96046) * C67857) *
              C151869 * C1350 +
          ((C24802 * C96046 + (C25803 + C25802) * C152092) * C67857 +
           ((C24801 + C24800) * C96046 +
            (C23043 * C25783 + C25795 + C25795 + C152149 * C25787 +
             C23045 * C25784 + C25796 + C25796 + C151796 * C25788) *
                C152092) *
               C152068) *
              C151869 * C1351) *
         C151823) /
            (p * q * std::sqrt(p + q));
    d2ee[100] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C96046 +
             C37949 * C152092) *
                C152253 +
            (C134436 + C134437) * C152233 + C134454 * C76455) *
               C151869 * C151910 -
           (C135709 * C76455 + (C134439 + C134438) * C152233 +
            (C134437 + C134436) * C152253) *
               C151869 * C151917 +
           (C134454 * C152253 + (C134441 + C134440) * C152233 +
            C135714 * C76455) *
               C151869 * C3585) *
              C151828 +
          (((C134442 + C134443) * C152253 + (C134444 + C134445) * C152233 +
            C136137 * C76455) *
               C151869 * C151917 -
           (C134455 * C76455 + (C134443 + C134442) * C152233 +
            (C37951 * C152092 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C96046) *
                C152253) *
               C151869 * C151910 -
           ((C136138 + C136139) * C76455 + (C134447 + C134446) * C152233 +
            C134455 * C152253) *
               C151869 * C3585) *
              C151837 +
          ((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C96046 +
             C37953 * C152092) *
                C152253 +
            (C134448 + C134449) * C152233 + C134456 * C76455) *
               C151869 * C151910 -
           ((C134452 + C134453) * C76455 + (C134451 + C134450) * C152233 +
            (C134449 + C134448) * C152253) *
               C151869 * C151917 +
           (C134456 * C152253 + (C134453 + C134452) * C152233 +
            (C31862 * C96046 +
             (C31628 * C8843 + C32542 + C32542 + C151791 * C8849) * C152092) *
                C76455) *
               C151869 * C3585) *
              C3588)) /
        (p * q * std::sqrt(p + q));
    d2ee[101] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C96046 +
              C37949 * C152092) *
                 C152253 +
             (C134436 + C134437) * C152233 + C134454 * C76455) *
                C152173 -
            (C135933 * C76455 + (C135359 + C135360) * C152233 +
             (C37950 * C152092 + C37949 * C96046) * C152253) *
                C151956) *
               C151910 +
           (((C135360 + C135359) * C152253 + (C135358 + C135357) * C152233 +
             C136627 * C76455) *
                C151956 -
            (C135709 * C76455 + (C134439 + C134438) * C152233 +
             (C134437 + C134436) * C152253) *
                C152173) *
               C151917 +
           ((C134454 * C152253 + (C134441 + C134440) * C152233 +
             C135714 * C76455) *
                C152173 -
            ((C136628 + C136629) * C76455 + (C135939 + C135938) * C152233 +
             C135933 * C152253) *
                C151956) *
               C3585) *
              C3241 +
          ((((C37951 * C96046 + C37952 * C152092) * C152253 +
             (C135361 + C135362) * C152233 + C136430 * C76455) *
                C151956 -
            (C134455 * C76455 + (C134443 + C134442) * C152233 +
             (C37951 * C152092 +
              (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C96046) *
                 C152253) *
                C152173) *
               C151910 +
           (((C134442 + C134443) * C152253 + (C134444 + C134445) * C152233 +
             C136137 * C76455) *
                C152173 -
            ((C136431 + C136432) * C76455 + (C135364 + C135363) * C152233 +
             (C135362 + C135361) * C152253) *
                C151956) *
               C151917 +
           ((C136430 * C152253 + (C136432 + C136431) * C152233 +
             (C33342 * C96046 +
              (C31628 * C25022 + C34069 + C34069 + C151791 * C25026) *
                  C152092) *
                 C76455) *
                C151956 -
            ((C136138 + C136139) * C76455 + (C134447 + C134446) * C152233 +
             C134455 * C152253) *
                C152173) *
               C3585) *
              C151834)) /
        (p * q * std::sqrt(p + q));
    d2ee[102] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C96046 +
             C37949 * C152092) *
                C152253 +
            (C134436 + C134437) * C152233 + C134454 * C76455) *
               C151869 * C152265 -
           (C135709 * C76455 + (C134439 + C134438) * C152233 +
            (C134437 + C134436) * C152253) *
               C151869 * C152261 +
           (C134454 * C152253 + (C134441 + C134440) * C152233 +
            C135714 * C76455) *
               C151869 * C152249 -
           ((C135712 + C135713) * C76455 + (C135711 + C135710) * C152233 +
            C135709 * C152253) *
               C151869 * C152224) *
              C3241 +
          (((C134442 + C134443) * C152253 + (C134444 + C134445) * C152233 +
            C136137 * C76455) *
               C151869 * C152261 -
           (C134455 * C76455 + (C134443 + C134442) * C152233 +
            (C37951 * C152092 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C96046) *
                C152253) *
               C151869 * C152265 -
           ((C136138 + C136139) * C76455 + (C134447 + C134446) * C152233 +
            C134455 * C152253) *
               C151869 * C152249 +
           (C136137 * C152253 + (C136139 + C136138) * C152233 +
            (C33141 * C96046 +
             (C31628 * C25784 + C33339 + C33339 + C151791 * C25788) * C152092) *
                C76455) *
               C151869 * C152224) *
              C151834)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C96046 +
             C37949 * C152092) *
                C152253 +
            (C134436 + C134437) * C152233 + C134454 * C76455) *
               C151869 * C3101 -
           (C135709 * C76455 + (C134439 + C134438) * C152233 +
            (C134437 + C134436) * C152253) *
               C151869 * C151914) *
              C152264 +
          (((C134442 + C134443) * C152253 + (C134444 + C134445) * C152233 +
            C136137 * C76455) *
               C151869 * C151914 -
           (C134455 * C76455 + (C134443 + C134442) * C152233 +
            (C37951 * C152092 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C96046) *
                C152253) *
               C151869 * C3101) *
              C152257 +
          ((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C96046 +
             C37953 * C152092) *
                C152253 +
            (C134448 + C134449) * C152233 + C134456 * C76455) *
               C151869 * C3101 -
           ((C134452 + C134453) * C76455 + (C134451 + C134450) * C152233 +
            (C134449 + C134448) * C152253) *
               C151869 * C151914) *
              C152242 +
          (((C134869 + C134870) * C152253 + (C134871 + C134872) * C152233 +
            (C32190 * C96046 +
             (C31628 * C2056 + C32327 + C32327 + C151791 * C2064) * C152092) *
                C76455) *
               C151869 * C151914 -
           ((C134872 + C134871) * C76455 + (C134870 + C134869) * C152233 +
            (C38366 * C152092 +
             (C31628 * C145 + C31646 + C31646 + C151791 * C161) * C96046) *
                C152253) *
               C151869 * C3101) *
              C152218)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C96046 +
              C37949 * C152092) *
                 C152253 +
             (C134436 + C134437) * C152233 + C134454 * C76455) *
                C152259 -
            (C135933 * C76455 + (C135359 + C135360) * C152233 +
             (C37950 * C152092 + C37949 * C96046) * C152253) *
                C152246 +
            ((C37950 * C96046 + C40513 * C152092) * C152253 +
             (C135934 + C135935) * C152233 + C135942 * C76455) *
                C152217) *
               C3101 +
           (((C135360 + C135359) * C152253 + (C135358 + C135357) * C152233 +
             C136627 * C76455) *
                C152246 -
            (C135709 * C76455 + (C134439 + C134438) * C152233 +
             (C134437 + C134436) * C152253) *
                C152259 -
            ((C135940 + C135941) * C76455 + (C135937 + C135936) * C152233 +
             (C135935 + C135934) * C152253) *
                C152217) *
               C151914) *
              C3241 +
          ((((C37951 * C96046 + C37952 * C152092) * C152253 +
             (C135361 + C135362) * C152233 + C136430 * C76455) *
                C152246 -
            (C134455 * C76455 + (C134443 + C134442) * C152233 +
             (C37951 * C152092 +
              (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C96046) *
                 C152253) *
                C152259 -
            ((C137478 + C137479) * C76455 + (C137480 + C137481) * C152233 +
             (C41022 * C152092 + C37952 * C96046) * C152253) *
                C152217) *
               C3101 +
           (((C134442 + C134443) * C152253 + (C134444 + C134445) * C152233 +
             C136137 * C76455) *
                C152259 -
            ((C136431 + C136432) * C76455 + (C135364 + C135363) * C152233 +
             (C135362 + C135361) * C152253) *
                C152246 +
            ((C137481 + C137480) * C152253 + (C137479 + C137478) * C152233 +
             (C34076 * C96046 +
              (C31628 * C27086 + C34215 + C34215 + C151791 * C27090) *
                  C152092) *
                 C76455) *
                C152217) *
               C151914) *
              C151834)) /
            (p * q * std::sqrt(p + q));
    d2ee[103] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C96046 +
              C37949 * C152092) *
                 C152253 +
             (C134436 + C134437) * C152233 + C134454 * C76455) *
                C152173 -
            (C135933 * C76455 + (C135359 + C135360) * C152233 +
             (C37950 * C152092 + C37949 * C96046) * C152253) *
                C151956) *
               C3101 +
           (((C135360 + C135359) * C152253 + (C135358 + C135357) * C152233 +
             C136627 * C76455) *
                C151956 -
            (C135709 * C76455 + (C134439 + C134438) * C152233 +
             (C134437 + C134436) * C152253) *
                C152173) *
               C151914) *
              C151828 +
          ((((C37951 * C96046 + C37952 * C152092) * C152253 +
             (C135361 + C135362) * C152233 + C136430 * C76455) *
                C151956 -
            (C134455 * C76455 + (C134443 + C134442) * C152233 +
             (C37951 * C152092 +
              (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C96046) *
                 C152253) *
                C152173) *
               C3101 +
           (((C134442 + C134443) * C152253 + (C134444 + C134445) * C152233 +
             C136137 * C76455) *
                C152173 -
            ((C136431 + C136432) * C76455 + (C135364 + C135363) * C152233 +
             (C135362 + C135361) * C152253) *
                C151956) *
               C151914) *
              C151837 +
          (((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C96046 +
              C37953 * C152092) *
                 C152253 +
             (C134448 + C134449) * C152233 + C134456 * C76455) *
                C152173 -
            ((C135365 + C135366) * C76455 + (C135367 + C135368) * C152233 +
             (C37956 * C152092 + C37953 * C96046) * C152253) *
                C151956) *
               C3101 +
           (((C135368 + C135367) * C152253 + (C135366 + C135365) * C152233 +
             (C32567 * C96046 +
              (C31628 * C8066 + C32044 + C32044 + C151791 * C8072) * C152092) *
                 C76455) *
                C151956 -
            ((C134452 + C134453) * C76455 + (C134451 + C134450) * C152233 +
             (C134449 + C134448) * C152253) *
                C152173) *
               C151914) *
              C3588)) /
        (p * q * std::sqrt(p + q));
    d2ee[104] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C96046 +
             C37949 * C152092) *
                C152253 +
            (C134436 + C134437) * C152233 + C134454 * C76455) *
               C151869 * C3101 -
           (C135709 * C76455 + (C134439 + C134438) * C152233 +
            (C134437 + C134436) * C152253) *
               C151869 * C151914) *
              C152264 +
          (((C134442 + C134443) * C152253 + (C134444 + C134445) * C152233 +
            C136137 * C76455) *
               C151869 * C151914 -
           (C134455 * C76455 + (C134443 + C134442) * C152233 +
            (C37951 * C152092 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C96046) *
                C152253) *
               C151869 * C3101) *
              C152257 +
          ((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C96046 +
             C37953 * C152092) *
                C152253 +
            (C134448 + C134449) * C152233 + C134456 * C76455) *
               C151869 * C3101 -
           ((C134452 + C134453) * C76455 + (C134451 + C134450) * C152233 +
            (C134449 + C134448) * C152253) *
               C151869 * C151914) *
              C152242 +
          (((C134869 + C134870) * C152253 + (C134871 + C134872) * C152233 +
            (C32190 * C96046 +
             (C31628 * C2056 + C32327 + C32327 + C151791 * C2064) * C152092) *
                C76455) *
               C151869 * C151914 -
           ((C134872 + C134871) * C76455 + (C134870 + C134869) * C152233 +
            (C38366 * C152092 +
             (C31628 * C145 + C31646 + C31646 + C151791 * C161) * C96046) *
                C152253) *
               C151869 * C3101) *
              C152218)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C96046 +
             C37949 * C152092) *
                C152253 +
            (C134436 + C134437) * C152233 + C134454 * C76455) *
               C151869 * C152265 -
           (C135709 * C76455 + (C134439 + C134438) * C152233 +
            (C134437 + C134436) * C152253) *
               C151869 * C152261 +
           (C134454 * C152253 + (C134441 + C134440) * C152233 +
            C135714 * C76455) *
               C151869 * C152249 -
           ((C135712 + C135713) * C76455 + (C135711 + C135710) * C152233 +
            C135709 * C152253) *
               C151869 * C152224) *
              C3241 +
          (((C134442 + C134443) * C152253 + (C134444 + C134445) * C152233 +
            C136137 * C76455) *
               C151869 * C152261 -
           (C134455 * C76455 + (C134443 + C134442) * C152233 +
            (C37951 * C152092 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C96046) *
                C152253) *
               C151869 * C152265 -
           ((C136138 + C136139) * C76455 + (C134447 + C134446) * C152233 +
            C134455 * C152253) *
               C151869 * C152249 +
           (C136137 * C152253 + (C136139 + C136138) * C152233 +
            (C33141 * C96046 +
             (C31628 * C25784 + C33339 + C33339 + C151791 * C25788) * C152092) *
                C76455) *
               C151869 * C152224) *
              C151834)) /
            (p * q * std::sqrt(p + q));
    d2ee[105] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C96046 +
              C37949 * C152092) *
                 C152253 +
             (C134436 + C134437) * C152233 + C134454 * C76455) *
                C4107 -
            (C135933 * C76455 + (C135359 + C135360) * C152233 +
             (C37950 * C152092 + C37949 * C96046) * C152253) *
                C151956) *
               C151910 +
           (((C135360 + C135359) * C152253 + (C135358 + C135357) * C152233 +
             C136627 * C76455) *
                C151956 -
            (C135709 * C76455 + (C134439 + C134438) * C152233 +
             (C134437 + C134436) * C152253) *
                C4107) *
               C151917 +
           ((C134454 * C152253 + (C134441 + C134440) * C152233 +
             C135714 * C76455) *
                C4107 -
            ((C136628 + C136629) * C76455 + (C135939 + C135938) * C152233 +
             C135933 * C152253) *
                C151956) *
               C3585) *
              C152158 +
          ((((C37951 * C96046 + C37952 * C152092) * C152253 +
             (C135361 + C135362) * C152233 + C136430 * C76455) *
                C151956 -
            (C134455 * C76455 + (C134443 + C134442) * C152233 +
             (C37951 * C152092 +
              (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C96046) *
                 C152253) *
                C4107) *
               C151910 +
           (((C134442 + C134443) * C152253 + (C134444 + C134445) * C152233 +
             C136137 * C76455) *
                C4107 -
            ((C136431 + C136432) * C76455 + (C135364 + C135363) * C152233 +
             (C135362 + C135361) * C152253) *
                C151956) *
               C151917 +
           ((C136430 * C152253 + (C136432 + C136431) * C152233 +
             (C33342 * C96046 +
              (C31628 * C25022 + C34069 + C34069 + C151791 * C25026) *
                  C152092) *
                 C76455) *
                C151956 -
            ((C136138 + C136139) * C76455 + (C134447 + C134446) * C152233 +
             C134455 * C152253) *
                C4107) *
               C3585) *
              C151834)) /
        (p * q * std::sqrt(p + q));
    d2ee[106] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C96046 +
             C37949 * C152092) *
                C152253 +
            (C134436 + C134437) * C152233 + C134454 * C76455) *
               C151952 -
           (C135933 * C76455 + (C135359 + C135360) * C152233 +
            (C37950 * C152092 + C37949 * C96046) * C152253) *
               C151959 +
           ((C37950 * C96046 + C40513 * C152092) * C152253 +
            (C135934 + C135935) * C152233 + C135942 * C76455) *
               C4779) *
              C151910 +
          (((C135360 + C135359) * C152253 + (C135358 + C135357) * C152233 +
            C136627 * C76455) *
               C151959 -
           (C135709 * C76455 + (C134439 + C134438) * C152233 +
            (C134437 + C134436) * C152253) *
               C151952 -
           ((C135940 + C135941) * C76455 + (C135937 + C135936) * C152233 +
            (C135935 + C135934) * C152253) *
               C4779) *
              C151917 +
          ((C134454 * C152253 + (C134441 + C134440) * C152233 +
            C135714 * C76455) *
               C151952 -
           ((C136628 + C136629) * C76455 + (C135939 + C135938) * C152233 +
            C135933 * C152253) *
               C151959 +
           (C135942 * C152253 + (C135941 + C135940) * C152233 +
            (C33000 * C96046 +
             (C31628 * C34345 + C34355 + C34355 + C151791 * C34347) * C152092) *
                C76455) *
               C4779) *
              C3585) *
         C151823) /
        (p * q * std::sqrt(p + q));
    d2ee[107] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C96046 +
             C37949 * C152092) *
                C152253 +
            (C134436 + C134437) * C152233 + C134454 * C76455) *
               C4107 -
           (C135933 * C76455 + (C135359 + C135360) * C152233 +
            (C37950 * C152092 + C37949 * C96046) * C152253) *
               C151956) *
              C152265 +
          (((C135360 + C135359) * C152253 + (C135358 + C135357) * C152233 +
            C136627 * C76455) *
               C151956 -
           (C135709 * C76455 + (C134439 + C134438) * C152233 +
            (C134437 + C134436) * C152253) *
               C4107) *
              C152261 +
          ((C134454 * C152253 + (C134441 + C134440) * C152233 +
            C135714 * C76455) *
               C4107 -
           ((C136628 + C136629) * C76455 + (C135939 + C135938) * C152233 +
            C135933 * C152253) *
               C151956) *
              C152249 +
          ((C136627 * C152253 + (C136629 + C136628) * C152233 +
            (C33482 * C96046 +
             (C31628 * C32969 + C32985 + C32985 + C151791 * C32971) * C152092) *
                C76455) *
               C151956 -
           ((C135712 + C135713) * C76455 + (C135711 + C135710) * C152233 +
            C135709 * C152253) *
               C4107) *
              C152224) *
         C151823) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C96046 +
              C37949 * C152092) *
                 C152253 +
             (C134436 + C134437) * C152233 + C134454 * C76455) *
                C4107 -
            (C135933 * C76455 + (C135359 + C135360) * C152233 +
             (C37950 * C152092 + C37949 * C96046) * C152253) *
                C151956) *
               C3101 +
           (((C135360 + C135359) * C152253 + (C135358 + C135357) * C152233 +
             C136627 * C76455) *
                C151956 -
            (C135709 * C76455 + (C134439 + C134438) * C152233 +
             (C134437 + C134436) * C152253) *
                C4107) *
               C151914) *
              C152255 +
          ((((C37951 * C96046 + C37952 * C152092) * C152253 +
             (C135361 + C135362) * C152233 + C136430 * C76455) *
                C151956 -
            (C134455 * C76455 + (C134443 + C134442) * C152233 +
             (C37951 * C152092 +
              (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C96046) *
                 C152253) *
                C4107) *
               C3101 +
           (((C134442 + C134443) * C152253 + (C134444 + C134445) * C152233 +
             C136137 * C76455) *
                C4107 -
            ((C136431 + C136432) * C76455 + (C135364 + C135363) * C152233 +
             (C135362 + C135361) * C152253) *
                C151956) *
               C151914) *
              C152240 +
          (((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C96046 +
              C37953 * C152092) *
                 C152253 +
             (C134448 + C134449) * C152233 + C134456 * C76455) *
                C4107 -
            ((C135365 + C135366) * C76455 + (C135367 + C135368) * C152233 +
             (C37956 * C152092 + C37953 * C96046) * C152253) *
                C151956) *
               C3101 +
           (((C135368 + C135367) * C152253 + (C135366 + C135365) * C152233 +
             (C32567 * C96046 +
              (C31628 * C8066 + C32044 + C32044 + C151791 * C8072) * C152092) *
                 C76455) *
                C151956 -
            ((C134452 + C134453) * C76455 + (C134451 + C134450) * C152233 +
             (C134449 + C134448) * C152253) *
                C4107) *
               C151914) *
              C152208)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C96046 +
             C37949 * C152092) *
                C152253 +
            (C134436 + C134437) * C152233 + C134454 * C76455) *
               C152266 -
           (C135933 * C76455 + (C135359 + C135360) * C152233 +
            (C37950 * C152092 + C37949 * C96046) * C152253) *
               C152263 +
           ((C37950 * C96046 + C40513 * C152092) * C152253 +
            (C135934 + C135935) * C152233 + C135942 * C76455) *
               C152252 -
           ((C137870 + C137871) * C76455 + (C137872 + C137873) * C152233 +
            (C40516 * C152092 + C40513 * C96046) * C152253) *
               C152230) *
              C3101 +
          (((C135360 + C135359) * C152253 + (C135358 + C135357) * C152233 +
            C136627 * C76455) *
               C152263 -
           (C135709 * C76455 + (C134439 + C134438) * C152233 +
            (C134437 + C134436) * C152253) *
               C152266 -
           ((C135940 + C135941) * C76455 + (C135937 + C135936) * C152233 +
            (C135935 + C135934) * C152253) *
               C152252 +
           ((C137873 + C137872) * C152253 + (C137871 + C137870) * C152233 +
            (C34362 * C96046 +
             (C31628 * C33857 + C33868 + C33868 + C151791 * C33859) * C152092) *
                C76455) *
               C152230) *
              C151914) *
         C151823) /
            (p * q * std::sqrt(p + q));
    d2ee[108] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C96046 +
              C37949 * C152092) *
                 C152253 +
             (C134436 + C134437) * C152233 + C134454 * C76455) *
                C151952 -
            (C135933 * C76455 + (C135359 + C135360) * C152233 +
             (C37950 * C152092 + C37949 * C96046) * C152253) *
                C151959 +
            ((C37950 * C96046 + C40513 * C152092) * C152253 +
             (C135934 + C135935) * C152233 + C135942 * C76455) *
                C4779) *
               C3101 +
           (((C135360 + C135359) * C152253 + (C135358 + C135357) * C152233 +
             C136627 * C76455) *
                C151959 -
            (C135709 * C76455 + (C134439 + C134438) * C152233 +
             (C134437 + C134436) * C152253) *
                C151952 -
            ((C135940 + C135941) * C76455 + (C135937 + C135936) * C152233 +
             (C135935 + C135934) * C152253) *
                C4779) *
               C151914) *
              C152158 +
          ((((C37951 * C96046 + C37952 * C152092) * C152253 +
             (C135361 + C135362) * C152233 + C136430 * C76455) *
                C151959 -
            (C134455 * C76455 + (C134443 + C134442) * C152233 +
             (C37951 * C152092 +
              (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C96046) *
                 C152253) *
                C151952 -
            ((C137478 + C137479) * C76455 + (C137480 + C137481) * C152233 +
             (C41022 * C152092 + C37952 * C96046) * C152253) *
                C4779) *
               C3101 +
           (((C134442 + C134443) * C152253 + (C134444 + C134445) * C152233 +
             C136137 * C76455) *
                C151952 -
            ((C136431 + C136432) * C76455 + (C135364 + C135363) * C152233 +
             (C135362 + C135361) * C152253) *
                C151959 +
            ((C137481 + C137480) * C152253 + (C137479 + C137478) * C152233 +
             (C34076 * C96046 +
              (C31628 * C27086 + C34215 + C34215 + C151791 * C27090) *
                  C152092) *
                 C76455) *
                C4779) *
               C151914) *
              C151834)) /
        (p * q * std::sqrt(p + q));
    d2ee[109] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C96046 +
              C37949 * C152092) *
                 C152253 +
             (C134436 + C134437) * C152233 + C134454 * C76455) *
                C4107 -
            (C135933 * C76455 + (C135359 + C135360) * C152233 +
             (C37950 * C152092 + C37949 * C96046) * C152253) *
                C151956) *
               C3101 +
           (((C135360 + C135359) * C152253 + (C135358 + C135357) * C152233 +
             C136627 * C76455) *
                C151956 -
            (C135709 * C76455 + (C134439 + C134438) * C152233 +
             (C134437 + C134436) * C152253) *
                C4107) *
               C151914) *
              C152255 +
          ((((C37951 * C96046 + C37952 * C152092) * C152253 +
             (C135361 + C135362) * C152233 + C136430 * C76455) *
                C151956 -
            (C134455 * C76455 + (C134443 + C134442) * C152233 +
             (C37951 * C152092 +
              (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C96046) *
                 C152253) *
                C4107) *
               C3101 +
           (((C134442 + C134443) * C152253 + (C134444 + C134445) * C152233 +
             C136137 * C76455) *
                C4107 -
            ((C136431 + C136432) * C76455 + (C135364 + C135363) * C152233 +
             (C135362 + C135361) * C152253) *
                C151956) *
               C151914) *
              C152240 +
          (((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C96046 +
              C37953 * C152092) *
                 C152253 +
             (C134448 + C134449) * C152233 + C134456 * C76455) *
                C4107 -
            ((C135365 + C135366) * C76455 + (C135367 + C135368) * C152233 +
             (C37956 * C152092 + C37953 * C96046) * C152253) *
                C151956) *
               C3101 +
           (((C135368 + C135367) * C152253 + (C135366 + C135365) * C152233 +
             (C32567 * C96046 +
              (C31628 * C8066 + C32044 + C32044 + C151791 * C8072) * C152092) *
                 C76455) *
                C151956 -
            ((C134452 + C134453) * C76455 + (C134451 + C134450) * C152233 +
             (C134449 + C134448) * C152253) *
                C4107) *
               C151914) *
              C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C96046 +
             C37949 * C152092) *
                C152253 +
            (C134436 + C134437) * C152233 + C134454 * C76455) *
               C4107 -
           (C135933 * C76455 + (C135359 + C135360) * C152233 +
            (C37950 * C152092 + C37949 * C96046) * C152253) *
               C151956) *
              C152265 +
          (((C135360 + C135359) * C152253 + (C135358 + C135357) * C152233 +
            C136627 * C76455) *
               C151956 -
           (C135709 * C76455 + (C134439 + C134438) * C152233 +
            (C134437 + C134436) * C152253) *
               C4107) *
              C152261 +
          ((C134454 * C152253 + (C134441 + C134440) * C152233 +
            C135714 * C76455) *
               C4107 -
           ((C136628 + C136629) * C76455 + (C135939 + C135938) * C152233 +
            C135933 * C152253) *
               C151956) *
              C152249 +
          ((C136627 * C152253 + (C136629 + C136628) * C152233 +
            (C33482 * C96046 +
             (C31628 * C32969 + C32985 + C32985 + C151791 * C32971) * C152092) *
                C76455) *
               C151956 -
           ((C135712 + C135713) * C76455 + (C135711 + C135710) * C152233 +
            C135709 * C152253) *
               C4107) *
              C152224) *
         C151823) /
            (p * q * std::sqrt(p + q));
    d2ee[110] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C96046 +
             C37949 * C152092) *
                C152253 +
            (C134436 + C134437) * C152233 + C134454 * C76455) *
               C151869 * C1709 -
           (C135709 * C76455 + (C134439 + C134438) * C152233 +
            (C134437 + C134436) * C152253) *
               C151869 * C1710 +
           (C134454 * C152253 + (C134441 + C134440) * C152233 +
            C135714 * C76455) *
               C151869 * C1711 -
           ((C135712 + C135713) * C76455 + (C135711 + C135710) * C152233 +
            C135709 * C152253) *
               C151869 * C152224) *
              C152158 +
          (((C134442 + C134443) * C152253 + (C134444 + C134445) * C152233 +
            C136137 * C76455) *
               C151869 * C1710 -
           (C134455 * C76455 + (C134443 + C134442) * C152233 +
            (C37951 * C152092 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C96046) *
                C152253) *
               C151869 * C1709 -
           ((C136138 + C136139) * C76455 + (C134447 + C134446) * C152233 +
            C134455 * C152253) *
               C151869 * C1711 +
           (C136137 * C152253 + (C136139 + C136138) * C152233 +
            (C33141 * C96046 +
             (C31628 * C25784 + C33339 + C33339 + C151791 * C25788) * C152092) *
                C76455) *
               C151869 * C152224) *
              C151834)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C96046 +
             C37949 * C152092) *
                C152253 +
            (C134436 + C134437) * C152233 + C134454 * C76455) *
               C151869 * C152172 -
           ((C134440 + C134441) * C76455 + (C134439 + C134438) * C152233 +
            (C134437 + C134436) * C152253) *
               C151869 * C151914) *
              C739 +
          (((C134442 + C134443) * C152253 + (C134444 + C134445) * C152233 +
            (C134446 + C134447) * C76455) *
               C151869 * C151914 -
           (C134455 * C76455 + (C134443 + C134442) * C152233 +
            (C37951 * C152092 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C96046) *
                C152253) *
               C151869 * C152172) *
              C740 +
          ((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C96046 +
             C37953 * C152092) *
                C152253 +
            (C134448 + C134449) * C152233 + C134456 * C76455) *
               C151869 * C152172 -
           ((C134452 + C134453) * C76455 + (C134451 + C134450) * C152233 +
            (C134449 + C134448) * C152253) *
               C151869 * C151914) *
              C741 +
          (((C134869 + C134870) * C152253 + (C134871 + C134872) * C152233 +
            (C32190 * C96046 +
             (C31628 * C2056 + C32327 + C32327 + C151791 * C2064) * C152092) *
                C76455) *
               C151869 * C151914 -
           ((C134872 + C134871) * C76455 + (C134870 + C134869) * C152233 +
            (C38366 * C152092 +
             (C31628 * C145 + C31646 + C31646 + C151791 * C161) * C96046) *
                C152253) *
               C151869 * C152172) *
              C152218)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C96046 +
              C37949 * C152092) *
                 C152253 +
             (C134436 + C134437) * C152233 + C134454 * C76455) *
                C2215 -
            (C135933 * C76455 + (C135359 + C135360) * C152233 +
             (C37950 * C152092 + C37949 * C96046) * C152253) *
                C2216 +
            ((C37950 * C96046 + C40513 * C152092) * C152253 +
             (C135934 + C135935) * C152233 + C135942 * C76455) *
                C152217) *
               C152172 +
           (((C135360 + C135359) * C152253 + (C135358 + C135357) * C152233 +
             C136627 * C76455) *
                C2216 -
            (C135709 * C76455 + (C134439 + C134438) * C152233 +
             (C134437 + C134436) * C152253) *
                C2215 -
            ((C135940 + C135941) * C76455 + (C135937 + C135936) * C152233 +
             (C135935 + C135934) * C152253) *
                C152217) *
               C151914) *
              C152158 +
          ((((C37951 * C96046 + C37952 * C152092) * C152253 +
             (C135361 + C135362) * C152233 + C136430 * C76455) *
                C2216 -
            (C134455 * C76455 + (C134443 + C134442) * C152233 +
             (C37951 * C152092 +
              (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C96046) *
                 C152253) *
                C2215 -
            ((C137478 + C137479) * C76455 + (C137480 + C137481) * C152233 +
             (C41022 * C152092 + C37952 * C96046) * C152253) *
                C152217) *
               C152172 +
           (((C134442 + C134443) * C152253 + (C134444 + C134445) * C152233 +
             C136137 * C76455) *
                C2215 -
            ((C136431 + C136432) * C76455 + (C135364 + C135363) * C152233 +
             (C135362 + C135361) * C152253) *
                C2216 +
            ((C137481 + C137480) * C152253 + (C137479 + C137478) * C152233 +
             (C34076 * C96046 +
              (C31628 * C27086 + C34215 + C34215 + C151791 * C27090) *
                  C152092) *
                 C76455) *
                C152217) *
               C151914) *
              C151834)) /
            (p * q * std::sqrt(p + q));
    d2ee[111] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C96046 +
             C37949 * C152092) *
                C152253 +
            (C134436 + C134437) * C152233 + C134454 * C76455) *
               C152173 -
           (C135933 * C76455 + (C135359 + C135360) * C152233 +
            (C37950 * C152092 + C37949 * C96046) * C152253) *
               C151956) *
              C1709 +
          (((C135360 + C135359) * C152253 + (C135358 + C135357) * C152233 +
            C136627 * C76455) *
               C151956 -
           (C135709 * C76455 + (C134439 + C134438) * C152233 +
            (C134437 + C134436) * C152253) *
               C152173) *
              C1710 +
          ((C134454 * C152253 + (C134441 + C134440) * C152233 +
            C135714 * C76455) *
               C152173 -
           ((C136628 + C136629) * C76455 + (C135939 + C135938) * C152233 +
            C135933 * C152253) *
               C151956) *
              C1711 +
          ((C136627 * C152253 + (C136629 + C136628) * C152233 +
            (C33482 * C96046 +
             (C31628 * C32969 + C32985 + C32985 + C151791 * C32971) * C152092) *
                C76455) *
               C151956 -
           ((C135712 + C135713) * C76455 + (C135711 + C135710) * C152233 +
            C135709 * C152253) *
               C152173) *
              C152224) *
         C151823) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C96046 +
              C37949 * C152092) *
                 C152253 +
             (C134436 + C134437) * C152233 + C134454 * C76455) *
                C152173 -
            ((C135357 + C135358) * C76455 + (C135359 + C135360) * C152233 +
             (C37950 * C152092 + C37949 * C96046) * C152253) *
                C151956) *
               C152172 +
           (((C135360 + C135359) * C152253 + (C135358 + C135357) * C152233 +
             (C32561 * C96046 + C32998 * C152092) * C76455) *
                C151956 -
            ((C134440 + C134441) * C76455 + (C134439 + C134438) * C152233 +
             (C134437 + C134436) * C152253) *
                C152173) *
               C151914) *
              C335 +
          ((((C37951 * C96046 + C37952 * C152092) * C152253 +
             (C135361 + C135362) * C152233 + (C135363 + C135364) * C76455) *
                C151956 -
            (C134455 * C76455 + (C134443 + C134442) * C152233 +
             (C37951 * C152092 +
              (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C96046) *
                 C152253) *
                C152173) *
               C152172 +
           (((C134442 + C134443) * C152253 + (C134444 + C134445) * C152233 +
             (C134446 + C134447) * C76455) *
                C152173 -
            ((C34076 * C152092 + C32566 * C96046) * C76455 +
             (C135364 + C135363) * C152233 + (C135362 + C135361) * C152253) *
                C151956) *
               C151914) *
              C336 +
          (((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C96046 +
              C37953 * C152092) *
                 C152253 +
             (C134448 + C134449) * C152233 + C134456 * C76455) *
                C152173 -
            ((C135365 + C135366) * C76455 + (C135367 + C135368) * C152233 +
             (C37956 * C152092 + C37953 * C96046) * C152253) *
                C151956) *
               C152172 +
           (((C135368 + C135367) * C152253 + (C135366 + C135365) * C152233 +
             (C32567 * C96046 +
              (C31628 * C8066 + C32044 + C32044 + C151791 * C8072) * C152092) *
                 C76455) *
                C151956 -
            ((C134452 + C134453) * C76455 + (C134451 + C134450) * C152233 +
             (C134449 + C134448) * C152253) *
                C152173) *
               C151914) *
              C152208)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C96046 +
             C37949 * C152092) *
                C152253 +
            (C134436 + C134437) * C152233 + C134454 * C76455) *
               C2814 -
           (C135933 * C76455 + (C135359 + C135360) * C152233 +
            (C37950 * C152092 + C37949 * C96046) * C152253) *
               C2815 +
           ((C37950 * C96046 + C40513 * C152092) * C152253 +
            (C135934 + C135935) * C152233 + C135942 * C76455) *
               C2816 -
           ((C137870 + C137871) * C76455 + (C137872 + C137873) * C152233 +
            (C40516 * C152092 + C40513 * C96046) * C152253) *
               C152230) *
              C152172 +
          (((C135360 + C135359) * C152253 + (C135358 + C135357) * C152233 +
            C136627 * C76455) *
               C2815 -
           (C135709 * C76455 + (C134439 + C134438) * C152233 +
            (C134437 + C134436) * C152253) *
               C2814 -
           ((C135940 + C135941) * C76455 + (C135937 + C135936) * C152233 +
            (C135935 + C135934) * C152253) *
               C2816 +
           ((C137873 + C137872) * C152253 + (C137871 + C137870) * C152233 +
            (C34362 * C96046 +
             (C31628 * C33857 + C33868 + C33868 + C151791 * C33859) * C152092) *
                C76455) *
               C152230) *
              C151914) *
         C151823) /
            (p * q * std::sqrt(p + q));
    d2ee[112] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C96046 +
                C37949 * C152092) *
                   C152253 +
               (C31851 * C96046 + C32563 * C152092) * C152233 +
               (C31852 * C96046 + C32562 * C152092) * C76455) *
                  C151869 * C151851 * C129 -
              ((C32565 * C152092 + C31856 * C96046) * C76455 +
               (C32564 * C152092 + C31855 * C96046) * C152233 +
               (C37951 * C152092 +
                (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C96046) *
                   C152253) *
                  C151869 * C151851 * C130 +
              (((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C96046 +
                C37953 * C152092) *
                   C152253 +
               (C31859 * C96046 + C32569 * C152092) * C152233 +
               (C31860 * C96046 + C32568 * C152092) * C76455) *
                  C151869 * C151851 * C131 -
              ((C38162 * C152092 + C32189 * C96046) * C76455 +
               (C38161 * C152092 + C32188 * C96046) * C152233 +
               (C38366 * C152092 +
                (C31628 * C145 + C31646 + C31646 + C151791 * C161) * C96046) *
                   C152253) *
                  C151869 * C151851 * C132 +
              (((C31628 * C146 + C31647 + C31647 + C151791 * C162) * C96046 +
                (C31628 * C555 + C37454 + C37454 + C151791 * C579) * C152092) *
                   C152253 +
               ((C31628 * C346 + C31648 + C31648 + C151791 * C370) * C96046 +
                (C31628 * C1087 + C37455 + C37455 + C151791 * C1099) *
                    C152092) *
                   C152233 +
               ((C31628 * C347 + C31649 + C31649 + C151791 * C371) * C96046 +
                (C31628 * C1916 + C37456 + C37456 + C151791 * C1918) *
                    C152092) *
                   C76455) *
                  C151869 * C151851 * C133) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C96046 +
                 C37949 * C152092) *
                    C152253 +
                (C134436 + C134437) * C152233 + C134454 * C76455) *
                   C151869 * C152258 -
               ((C134440 + C134441) * C76455 + (C134439 + C134438) * C152233 +
                (C134437 + C134436) * C152253) *
                   C151869 * C152244 +
               (C134454 * C152253 + (C134441 + C134440) * C152233 +
                (C31854 * C96046 + C32999 * C152092) * C76455) *
                   C151869 * C152214) *
                  C335 +
              (((C134442 + C134443) * C152253 + (C134444 + C134445) * C152233 +
                (C134446 + C134447) * C76455) *
                   C151869 * C152244 -
               (C134455 * C76455 + (C134443 + C134442) * C152233 +
                (C37951 * C152092 +
                 (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C96046) *
                    C152253) *
                   C151869 * C152258 -
               ((C33342 * C152092 + C31858 * C96046) * C76455 +
                (C134447 + C134446) * C152233 + C134455 * C152253) *
                   C151869 * C152214) *
                  C336 +
              ((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C96046 +
                 C37953 * C152092) *
                    C152253 +
                (C134448 + C134449) * C152233 + C134456 * C76455) *
                   C151869 * C152258 -
               ((C134452 + C134453) * C76455 + (C134451 + C134450) * C152233 +
                (C134449 + C134448) * C152253) *
                   C151869 * C152244 +
               (C134456 * C152253 + (C134453 + C134452) * C152233 +
                (C31862 * C96046 +
                 (C31628 * C8843 + C32542 + C32542 + C151791 * C8849) *
                     C152092) *
                    C76455) *
                   C151869 * C152214) *
                  C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C96046 +
             C37949 * C152092) *
                C152253 +
            (C134436 + C134437) * C152233 + C134454 * C76455) *
               C152259 -
           ((C32997 * C152092 + C32562 * C96046) * C76455 +
            (C32996 * C152092 + C32563 * C96046) * C152233 +
            (C37950 * C152092 + C37949 * C96046) * C152253) *
               C152246 +
           ((C37950 * C96046 + C40513 * C152092) * C152253 +
            (C32996 * C96046 + C34364 * C152092) * C152233 +
            (C32997 * C96046 + C34363 * C152092) * C76455) *
               C152217) *
              C151851 * C335 +
          (((C37951 * C96046 + C37952 * C152092) * C152253 +
            (C32564 * C96046 + C34078 * C152092) * C152233 +
            (C32565 * C96046 + C34077 * C152092) * C76455) *
               C152246 -
           (C134455 * C76455 + (C134443 + C134442) * C152233 +
            (C37951 * C152092 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C96046) *
                C152253) *
               C152259 -
           ((C40817 * C152092 + C34077 * C96046) * C76455 +
            (C40818 * C152092 + C34078 * C96046) * C152233 +
            (C41022 * C152092 + C37952 * C96046) * C152253) *
               C152217) *
              C151851 * C336 +
          ((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C96046 +
             C37953 * C152092) *
                C152253 +
            (C134448 + C134449) * C152233 + C134456 * C76455) *
               C152259 -
           ((C37954 * C152092 + C32568 * C96046) * C76455 +
            (C37955 * C152092 + C32569 * C96046) * C152233 +
            (C37956 * C152092 + C37953 * C96046) * C152253) *
               C152246 +
           ((C37956 * C96046 + C54593 * C152092) * C152253 +
            (C37955 * C96046 + C54592 * C152092) * C152233 +
            (C37954 * C96046 +
             (C31628 * C10151 + C37932 + C37932 + C151791 * C10157) * C152092) *
                C76455) *
               C152217) *
              C151851 * C152208)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C96046 +
             C37949 * C152092) *
                C152253 +
            (C134436 + C134437) * C152233 + C134454 * C76455) *
               C151869 * C1259 -
           ((C134440 + C134441) * C76455 + (C134439 + C134438) * C152233 +
            (C134437 + C134436) * C152253) *
               C151869 * C1260 +
           (C134454 * C152253 + (C134441 + C134440) * C152233 +
            (C31854 * C96046 + C32999 * C152092) * C76455) *
               C151869 * C152214) *
              C152255 +
          (((C134442 + C134443) * C152253 + (C134444 + C134445) * C152233 +
            (C134446 + C134447) * C76455) *
               C151869 * C1260 -
           (C134455 * C76455 + (C134443 + C134442) * C152233 +
            (C37951 * C152092 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C96046) *
                C152253) *
               C151869 * C1259 -
           ((C33342 * C152092 + C31858 * C96046) * C76455 +
            (C134447 + C134446) * C152233 + C134455 * C152253) *
               C151869 * C152214) *
              C152240 +
          ((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C96046 +
             C37953 * C152092) *
                C152253 +
            (C134448 + C134449) * C152233 + C134456 * C76455) *
               C151869 * C1259 -
           ((C134452 + C134453) * C76455 + (C134451 + C134450) * C152233 +
            (C134449 + C134448) * C152253) *
               C151869 * C1260 +
           (C134456 * C152253 + (C134453 + C134452) * C152233 +
            (C31862 * C96046 +
             (C31628 * C8843 + C32542 + C32542 + C151791 * C8849) * C152092) *
                C76455) *
               C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C96046 +
            C37949 * C152092) *
               C152253 +
           (C134436 + C134437) * C152233 + C134454 * C76455) *
              C151869 * C1347 -
          (C135709 * C76455 + (C134439 + C134438) * C152233 +
           (C134437 + C134436) * C152253) *
              C151869 * C1348 +
          (C134454 * C152253 + (C134441 + C134440) * C152233 +
           C135714 * C76455) *
              C151869 * C1349 -
          ((C135712 + C135713) * C76455 + (C135711 + C135710) * C152233 +
           C135709 * C152253) *
              C151869 * C1350 +
          (C135714 * C152253 + (C135713 + C135712) * C152233 +
           (C32821 * C96046 +
            (C31628 * C33473 + C33479 + C33479 + C151791 * C33475) * C152092) *
               C76455) *
              C151869 * C1351) *
         C151823) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C96046 +
             C37949 * C152092) *
                C152253 +
            (C134436 + C134437) * C152233 + C134454 * C76455) *
               C152259 -
           (C135933 * C76455 + (C135359 + C135360) * C152233 +
            (C37950 * C152092 + C37949 * C96046) * C152253) *
               C152246 +
           ((C37950 * C96046 + C40513 * C152092) * C152253 +
            (C135934 + C135935) * C152233 + C135942 * C76455) *
               C152217) *
              C1259 +
          (((C135360 + C135359) * C152253 + (C135358 + C135357) * C152233 +
            (C135938 + C135939) * C76455) *
               C152246 -
           (C135709 * C76455 + (C134439 + C134438) * C152233 +
            (C134437 + C134436) * C152253) *
               C152259 -
           ((C135940 + C135941) * C76455 + (C135937 + C135936) * C152233 +
            (C135935 + C135934) * C152253) *
               C152217) *
              C1260 +
          ((C134454 * C152253 + (C134441 + C134440) * C152233 +
            C135714 * C76455) *
               C152259 -
           ((C33000 * C152092 + C32999 * C96046) * C76455 +
            (C135939 + C135938) * C152233 + C135933 * C152253) *
               C152246 +
           (C135942 * C152253 + (C135941 + C135940) * C152233 +
            (C33000 * C96046 +
             (C31628 * C34345 + C34355 + C34355 + C151791 * C34347) * C152092) *
                C76455) *
               C152217) *
              C152214) *
         C151823) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C96046 +
             C37949 * C152092) *
                C152253 +
            (C134436 + C134437) * C152233 + C134454 * C76455) *
               C2215 -
           (C135933 * C76455 + (C135359 + C135360) * C152233 +
            (C37950 * C152092 + C37949 * C96046) * C152253) *
               C2216 +
           ((C37950 * C96046 + C40513 * C152092) * C152253 +
            (C135934 + C135935) * C152233 + C135942 * C76455) *
               C152217) *
              C151851 * C152255 +
          (((C37951 * C96046 + C37952 * C152092) * C152253 +
            (C135361 + C135362) * C152233 + C136430 * C76455) *
               C2216 -
           (C134455 * C76455 + (C134443 + C134442) * C152233 +
            (C37951 * C152092 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C96046) *
                C152253) *
               C2215 -
           ((C40817 * C152092 + C34077 * C96046) * C76455 +
            (C40818 * C152092 + C34078 * C96046) * C152233 +
            (C41022 * C152092 + C37952 * C96046) * C152253) *
               C152217) *
              C151851 * C152240 +
          ((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C96046 +
             C37953 * C152092) *
                C152253 +
            (C134448 + C134449) * C152233 + C134456 * C76455) *
               C2215 -
           ((C135365 + C135366) * C76455 + (C135367 + C135368) * C152233 +
            (C37956 * C152092 + C37953 * C96046) * C152253) *
               C2216 +
           ((C37956 * C96046 + C54593 * C152092) * C152253 +
            (C37955 * C96046 + C54592 * C152092) * C152233 +
            (C37954 * C96046 +
             (C31628 * C10151 + C37932 + C37932 + C151791 * C10157) * C152092) *
                C76455) *
               C152217) *
              C151851 * C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C96046 +
             C37949 * C152092) *
                C152253 +
            (C134436 + C134437) * C152233 + C134454 * C76455) *
               C2215 -
           (C135933 * C76455 + (C135359 + C135360) * C152233 +
            (C37950 * C152092 + C37949 * C96046) * C152253) *
               C2216 +
           ((C37950 * C96046 + C40513 * C152092) * C152253 +
            (C135934 + C135935) * C152233 + C135942 * C76455) *
               C152217) *
              C152258 +
          (((C135360 + C135359) * C152253 + (C135358 + C135357) * C152233 +
            C136627 * C76455) *
               C2216 -
           (C135709 * C76455 + (C134439 + C134438) * C152233 +
            (C134437 + C134436) * C152253) *
               C2215 -
           ((C135940 + C135941) * C76455 + (C135937 + C135936) * C152233 +
            (C135935 + C135934) * C152253) *
               C152217) *
              C152244 +
          ((C134454 * C152253 + (C134441 + C134440) * C152233 +
            C135714 * C76455) *
               C2215 -
           ((C136628 + C136629) * C76455 + (C135939 + C135938) * C152233 +
            C135933 * C152253) *
               C2216 +
           (C135942 * C152253 + (C135941 + C135940) * C152233 +
            (C33000 * C96046 +
             (C31628 * C34345 + C34355 + C34355 + C151791 * C34347) * C152092) *
                C76455) *
               C152217) *
              C152214) *
         C151823) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C96046 +
            C37949 * C152092) *
               C152253 +
           (C134436 + C134437) * C152233 + C134454 * C76455) *
              C2446 -
          (C135933 * C76455 + (C135359 + C135360) * C152233 +
           (C37950 * C152092 + C37949 * C96046) * C152253) *
              C2447 +
          ((C37950 * C96046 + C40513 * C152092) * C152253 +
           (C135934 + C135935) * C152233 + C135942 * C76455) *
              C2448 -
          ((C40514 * C152092 + C34363 * C96046) * C76455 +
           (C40515 * C152092 + C34364 * C96046) * C152233 +
           (C40516 * C152092 + C40513 * C96046) * C152253) *
              C2449 +
          ((C40516 * C96046 + C57128 * C152092) * C152253 +
           (C40515 * C96046 + C57127 * C152092) * C152233 +
           (C40514 * C96046 +
            (C31628 * C40488 + C40504 + C40504 + C151791 * C40492) * C152092) *
               C76455) *
              C2450) *
         C151851 * C151823) /
            (p * q * std::sqrt(p + q));
    d2ee[113] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C96046 +
              C37949 * C152092) *
                 C152253 +
             (C134436 + C134437) * C152233 + C134454 * C76455) *
                C152173 -
            (C135933 * C76455 + (C135359 + C135360) * C152233 +
             (C37950 * C152092 + C37949 * C96046) * C152253) *
                C151956) *
               C1259 +
           (((C135360 + C135359) * C152253 + (C135358 + C135357) * C152233 +
             (C135938 + C135939) * C76455) *
                C151956 -
            (C135709 * C76455 + (C134439 + C134438) * C152233 +
             (C134437 + C134436) * C152253) *
                C152173) *
               C1260 +
           ((C134454 * C152253 + (C134441 + C134440) * C152233 +
             C135714 * C76455) *
                C152173 -
            ((C33000 * C152092 + C32999 * C96046) * C76455 +
             (C135939 + C135938) * C152233 + C135933 * C152253) *
                C151956) *
               C152214) *
              C152158 +
          ((((C37951 * C96046 + C37952 * C152092) * C152253 +
             (C135361 + C135362) * C152233 + C136430 * C76455) *
                C151956 -
            (C134455 * C76455 + (C134443 + C134442) * C152233 +
             (C37951 * C152092 +
              (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C96046) *
                 C152253) *
                C152173) *
               C1259 +
           (((C134442 + C134443) * C152253 + (C134444 + C134445) * C152233 +
             C136137 * C76455) *
                C152173 -
            ((C136431 + C136432) * C76455 + (C135364 + C135363) * C152233 +
             (C135362 + C135361) * C152253) *
                C151956) *
               C1260 +
           ((C136430 * C152253 + (C136432 + C136431) * C152233 +
             (C33342 * C96046 +
              (C31628 * C25022 + C34069 + C34069 + C151791 * C25026) *
                  C152092) *
                 C76455) *
                C151956 -
            ((C136138 + C136139) * C76455 + (C134447 + C134446) * C152233 +
             C134455 * C152253) *
                C152173) *
               C152214) *
              C151834)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C96046 +
             C37949 * C152092) *
                C152253 +
            (C134436 + C134437) * C152233 + C134454 * C76455) *
               C152173 -
           ((C32997 * C152092 + C32562 * C96046) * C76455 +
            (C32996 * C152092 + C32563 * C96046) * C152233 +
            (C37950 * C152092 + C37949 * C96046) * C152253) *
               C151956) *
              C151851 * C739 +
          (((C37951 * C96046 + C37952 * C152092) * C152253 +
            (C32564 * C96046 + C34078 * C152092) * C152233 +
            (C32565 * C96046 + C34077 * C152092) * C76455) *
               C151956 -
           (C134455 * C76455 + (C134443 + C134442) * C152233 +
            (C37951 * C152092 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C96046) *
                C152253) *
               C152173) *
              C151851 * C740 +
          ((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C96046 +
             C37953 * C152092) *
                C152253 +
            (C134448 + C134449) * C152233 + C134456 * C76455) *
               C152173 -
           ((C37954 * C152092 + C32568 * C96046) * C76455 +
            (C37955 * C152092 + C32569 * C96046) * C152233 +
            (C37956 * C152092 + C37953 * C96046) * C152253) *
               C151956) *
              C151851 * C741 +
          (((C38366 * C96046 + C54996 * C152092) * C152253 +
            (C38161 * C96046 + C54794 * C152092) * C152233 +
            (C38162 * C96046 +
             (C31628 * C1542 + C38363 + C38363 + C151791 * C1566) * C152092) *
                C76455) *
               C151956 -
           ((C134872 + C134871) * C76455 + (C134870 + C134869) * C152233 +
            (C38366 * C152092 +
             (C31628 * C145 + C31646 + C31646 + C151791 * C161) * C96046) *
                C152253) *
               C152173) *
              C151851 * C152218)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C96046 +
             C37949 * C152092) *
                C152253 +
            (C134436 + C134437) * C152233 + C134454 * C76455) *
               C2814 -
           (C135933 * C76455 + (C135359 + C135360) * C152233 +
            (C37950 * C152092 + C37949 * C96046) * C152253) *
               C2815 +
           ((C37950 * C96046 + C40513 * C152092) * C152253 +
            (C135934 + C135935) * C152233 + C135942 * C76455) *
               C2816 -
           ((C40514 * C152092 + C34363 * C96046) * C76455 +
            (C40515 * C152092 + C34364 * C96046) * C152233 +
            (C40516 * C152092 + C40513 * C96046) * C152253) *
               C152230) *
              C151851 * C152158 +
          (((C37951 * C96046 + C37952 * C152092) * C152253 +
            (C135361 + C135362) * C152233 + C136430 * C76455) *
               C2815 -
           (C134455 * C76455 + (C134443 + C134442) * C152233 +
            (C37951 * C152092 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C96046) *
                C152253) *
               C2814 -
           ((C137478 + C137479) * C76455 + (C137480 + C137481) * C152233 +
            (C41022 * C152092 + C37952 * C96046) * C152253) *
               C2816 +
           ((C41022 * C96046 + C57627 * C152092) * C152253 +
            (C40818 * C96046 + C57425 * C152092) * C152233 +
            (C40817 * C96046 +
             (C31628 * C26362 + C41019 + C41019 + C151791 * C26366) * C152092) *
                C76455) *
               C152230) *
              C151851 * C151834)) /
            (p * q * std::sqrt(p + q));
    d2ee[114] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C96046 +
             C37949 * C152092) *
                C152253 +
            (C134436 + C134437) * C152233 + C134454 * C76455) *
               C151869 * C152258 -
           ((C134440 + C134441) * C76455 + (C134439 + C134438) * C152233 +
            (C134437 + C134436) * C152253) *
               C151869 * C152244 +
           (C134454 * C152253 + (C134441 + C134440) * C152233 +
            (C31854 * C96046 + C32999 * C152092) * C76455) *
               C151869 * C152214) *
              C335 +
          (((C134442 + C134443) * C152253 + (C134444 + C134445) * C152233 +
            (C134446 + C134447) * C76455) *
               C151869 * C152244 -
           (C134455 * C76455 + (C134443 + C134442) * C152233 +
            (C37951 * C152092 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C96046) *
                C152253) *
               C151869 * C152258 -
           ((C33342 * C152092 + C31858 * C96046) * C76455 +
            (C134447 + C134446) * C152233 + C134455 * C152253) *
               C151869 * C152214) *
              C336 +
          ((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C96046 +
             C37953 * C152092) *
                C152253 +
            (C134448 + C134449) * C152233 + C134456 * C76455) *
               C151869 * C152258 -
           ((C134452 + C134453) * C76455 + (C134451 + C134450) * C152233 +
            (C134449 + C134448) * C152253) *
               C151869 * C152244 +
           (C134456 * C152253 + (C134453 + C134452) * C152233 +
            (C31862 * C96046 +
             (C31628 * C8843 + C32542 + C32542 + C151791 * C8849) * C152092) *
                C76455) *
               C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C96046 +
            C37949 * C152092) *
               C152253 +
           (C31851 * C96046 + C32563 * C152092) * C152233 +
           (C31852 * C96046 + C32562 * C152092) * C76455) *
              C151869 * C151851 * C129 -
          ((C32565 * C152092 + C31856 * C96046) * C76455 +
           (C32564 * C152092 + C31855 * C96046) * C152233 +
           (C37951 * C152092 +
            (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C96046) *
               C152253) *
              C151869 * C151851 * C130 +
          (((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C96046 +
            C37953 * C152092) *
               C152253 +
           (C31859 * C96046 + C32569 * C152092) * C152233 +
           (C31860 * C96046 + C32568 * C152092) * C76455) *
              C151869 * C151851 * C131 -
          ((C38162 * C152092 + C32189 * C96046) * C76455 +
           (C38161 * C152092 + C32188 * C96046) * C152233 +
           (C38366 * C152092 +
            (C31628 * C145 + C31646 + C31646 + C151791 * C161) * C96046) *
               C152253) *
              C151869 * C151851 * C132 +
          (((C31628 * C146 + C31647 + C31647 + C151791 * C162) * C96046 +
            (C31628 * C555 + C37454 + C37454 + C151791 * C579) * C152092) *
               C152253 +
           ((C31628 * C346 + C31648 + C31648 + C151791 * C370) * C96046 +
            (C31628 * C1087 + C37455 + C37455 + C151791 * C1099) * C152092) *
               C152233 +
           ((C31628 * C347 + C31649 + C31649 + C151791 * C371) * C96046 +
            (C31628 * C1916 + C37456 + C37456 + C151791 * C1918) * C152092) *
               C76455) *
              C151869 * C151851 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C96046 +
             C37949 * C152092) *
                C152253 +
            (C134436 + C134437) * C152233 + C134454 * C76455) *
               C151869 * C1259 -
           ((C134440 + C134441) * C76455 + (C134439 + C134438) * C152233 +
            (C134437 + C134436) * C152253) *
               C151869 * C1260 +
           (C134454 * C152253 + (C134441 + C134440) * C152233 +
            (C31854 * C96046 + C32999 * C152092) * C76455) *
               C151869 * C152214) *
              C152255 +
          (((C134442 + C134443) * C152253 + (C134444 + C134445) * C152233 +
            (C134446 + C134447) * C76455) *
               C151869 * C1260 -
           (C134455 * C76455 + (C134443 + C134442) * C152233 +
            (C37951 * C152092 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C96046) *
                C152253) *
               C151869 * C1259 -
           ((C33342 * C152092 + C31858 * C96046) * C76455 +
            (C134447 + C134446) * C152233 + C134455 * C152253) *
               C151869 * C152214) *
              C152240 +
          ((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C96046 +
             C37953 * C152092) *
                C152253 +
            (C134448 + C134449) * C152233 + C134456 * C76455) *
               C151869 * C1259 -
           ((C134452 + C134453) * C76455 + (C134451 + C134450) * C152233 +
            (C134449 + C134448) * C152253) *
               C151869 * C1260 +
           (C134456 * C152253 + (C134453 + C134452) * C152233 +
            (C31862 * C96046 +
             (C31628 * C8843 + C32542 + C32542 + C151791 * C8849) * C152092) *
                C76455) *
               C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C96046 +
            C37949 * C152092) *
               C152253 +
           (C134436 + C134437) * C152233 + C134454 * C76455) *
              C151869 * C1347 -
          (C135709 * C76455 + (C134439 + C134438) * C152233 +
           (C134437 + C134436) * C152253) *
              C151869 * C1348 +
          (C134454 * C152253 + (C134441 + C134440) * C152233 +
           C135714 * C76455) *
              C151869 * C1349 -
          ((C135712 + C135713) * C76455 + (C135711 + C135710) * C152233 +
           C135709 * C152253) *
              C151869 * C1350 +
          (C135714 * C152253 + (C135713 + C135712) * C152233 +
           (C32821 * C96046 +
            (C31628 * C33473 + C33479 + C33479 + C151791 * C33475) * C152092) *
               C76455) *
              C151869 * C1351) *
         C151823) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C96046 +
             C37949 * C152092) *
                C152253 +
            (C134436 + C134437) * C152233 + C134454 * C76455) *
               C2215 -
           (C135933 * C76455 + (C135359 + C135360) * C152233 +
            (C37950 * C152092 + C37949 * C96046) * C152253) *
               C2216 +
           ((C37950 * C96046 + C40513 * C152092) * C152253 +
            (C135934 + C135935) * C152233 + C135942 * C76455) *
               C152217) *
              C151851 * C152255 +
          (((C37951 * C96046 + C37952 * C152092) * C152253 +
            (C135361 + C135362) * C152233 + C136430 * C76455) *
               C2216 -
           (C134455 * C76455 + (C134443 + C134442) * C152233 +
            (C37951 * C152092 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C96046) *
                C152253) *
               C2215 -
           ((C40817 * C152092 + C34077 * C96046) * C76455 +
            (C40818 * C152092 + C34078 * C96046) * C152233 +
            (C41022 * C152092 + C37952 * C96046) * C152253) *
               C152217) *
              C151851 * C152240 +
          ((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C96046 +
             C37953 * C152092) *
                C152253 +
            (C134448 + C134449) * C152233 + C134456 * C76455) *
               C2215 -
           ((C135365 + C135366) * C76455 + (C135367 + C135368) * C152233 +
            (C37956 * C152092 + C37953 * C96046) * C152253) *
               C2216 +
           ((C37956 * C96046 + C54593 * C152092) * C152253 +
            (C37955 * C96046 + C54592 * C152092) * C152233 +
            (C37954 * C96046 +
             (C31628 * C10151 + C37932 + C37932 + C151791 * C10157) * C152092) *
                C76455) *
               C152217) *
              C151851 * C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C96046 +
             C37949 * C152092) *
                C152253 +
            (C134436 + C134437) * C152233 + C134454 * C76455) *
               C2215 -
           (C135933 * C76455 + (C135359 + C135360) * C152233 +
            (C37950 * C152092 + C37949 * C96046) * C152253) *
               C2216 +
           ((C37950 * C96046 + C40513 * C152092) * C152253 +
            (C135934 + C135935) * C152233 + C135942 * C76455) *
               C152217) *
              C152258 +
          (((C135360 + C135359) * C152253 + (C135358 + C135357) * C152233 +
            C136627 * C76455) *
               C2216 -
           (C135709 * C76455 + (C134439 + C134438) * C152233 +
            (C134437 + C134436) * C152253) *
               C2215 -
           ((C135940 + C135941) * C76455 + (C135937 + C135936) * C152233 +
            (C135935 + C135934) * C152253) *
               C152217) *
              C152244 +
          ((C134454 * C152253 + (C134441 + C134440) * C152233 +
            C135714 * C76455) *
               C2215 -
           ((C136628 + C136629) * C76455 + (C135939 + C135938) * C152233 +
            C135933 * C152253) *
               C2216 +
           (C135942 * C152253 + (C135941 + C135940) * C152233 +
            (C33000 * C96046 +
             (C31628 * C34345 + C34355 + C34355 + C151791 * C34347) * C152092) *
                C76455) *
               C152217) *
              C152214) *
         C151823) /
            (p * q * std::sqrt(p + q));
    d2ee[115] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C96046 +
              C37949 * C152092) *
                 C152253 +
             (C134436 + C134437) * C152233 + C134454 * C76455) *
                C4107 -
            (C135933 * C76455 + (C135359 + C135360) * C152233 +
             (C37950 * C152092 + C37949 * C96046) * C152253) *
                C151956) *
               C152172 +
           (((C135360 + C135359) * C152253 + (C135358 + C135357) * C152233 +
             C136627 * C76455) *
                C151956 -
            (C135709 * C76455 + (C134439 + C134438) * C152233 +
             (C134437 + C134436) * C152253) *
                C4107) *
               C151914) *
              C151828 +
          ((((C37951 * C96046 + C37952 * C152092) * C152253 +
             (C135361 + C135362) * C152233 + C136430 * C76455) *
                C151956 -
            (C134455 * C76455 + (C134443 + C134442) * C152233 +
             (C37951 * C152092 +
              (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C96046) *
                 C152253) *
                C4107) *
               C152172 +
           (((C134442 + C134443) * C152253 + (C134444 + C134445) * C152233 +
             C136137 * C76455) *
                C4107 -
            ((C136431 + C136432) * C76455 + (C135364 + C135363) * C152233 +
             (C135362 + C135361) * C152253) *
                C151956) *
               C151914) *
              C151837 +
          (((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C96046 +
              C37953 * C152092) *
                 C152253 +
             (C134448 + C134449) * C152233 + C134456 * C76455) *
                C4107 -
            ((C135365 + C135366) * C76455 + (C135367 + C135368) * C152233 +
             (C37956 * C152092 + C37953 * C96046) * C152253) *
                C151956) *
               C152172 +
           (((C135368 + C135367) * C152253 + (C135366 + C135365) * C152233 +
             (C32567 * C96046 +
              (C31628 * C8066 + C32044 + C32044 + C151791 * C8072) * C152092) *
                 C76455) *
                C151956 -
            ((C134452 + C134453) * C76455 + (C134451 + C134450) * C152233 +
             (C134449 + C134448) * C152253) *
                C4107) *
               C151914) *
              C3588)) /
        (p * q * std::sqrt(p + q));
    d2ee[116] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C96046 +
              C37949 * C152092) *
                 C152253 +
             (C134436 + C134437) * C152233 + C134454 * C76455) *
                C151952 -
            (C135933 * C76455 + (C135359 + C135360) * C152233 +
             (C37950 * C152092 + C37949 * C96046) * C152253) *
                C151959 +
            ((C37950 * C96046 + C40513 * C152092) * C152253 +
             (C135934 + C135935) * C152233 + C135942 * C76455) *
                C4779) *
               C152172 +
           (((C135360 + C135359) * C152253 + (C135358 + C135357) * C152233 +
             C136627 * C76455) *
                C151959 -
            (C135709 * C76455 + (C134439 + C134438) * C152233 +
             (C134437 + C134436) * C152253) *
                C151952 -
            ((C135940 + C135941) * C76455 + (C135937 + C135936) * C152233 +
             (C135935 + C135934) * C152253) *
                C4779) *
               C151914) *
              C3241 +
          ((((C37951 * C96046 + C37952 * C152092) * C152253 +
             (C135361 + C135362) * C152233 + C136430 * C76455) *
                C151959 -
            (C134455 * C76455 + (C134443 + C134442) * C152233 +
             (C37951 * C152092 +
              (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C96046) *
                 C152253) *
                C151952 -
            ((C137478 + C137479) * C76455 + (C137480 + C137481) * C152233 +
             (C41022 * C152092 + C37952 * C96046) * C152253) *
                C4779) *
               C152172 +
           (((C134442 + C134443) * C152253 + (C134444 + C134445) * C152233 +
             C136137 * C76455) *
                C151952 -
            ((C136431 + C136432) * C76455 + (C135364 + C135363) * C152233 +
             (C135362 + C135361) * C152253) *
                C151959 +
            ((C137481 + C137480) * C152253 + (C137479 + C137478) * C152233 +
             (C34076 * C96046 +
              (C31628 * C27086 + C34215 + C34215 + C151791 * C27090) *
                  C152092) *
                 C76455) *
                C4779) *
               C151914) *
              C151834)) /
        (p * q * std::sqrt(p + q));
    d2ee[117] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C96046 +
              C37949 * C152092) *
                 C152253 +
             (C134436 + C134437) * C152233 + C134454 * C76455) *
                C4107 -
            (C135933 * C76455 + (C135359 + C135360) * C152233 +
             (C37950 * C152092 + C37949 * C96046) * C152253) *
                C151956) *
               C152258 +
           (((C135360 + C135359) * C152253 + (C135358 + C135357) * C152233 +
             C136627 * C76455) *
                C151956 -
            (C135709 * C76455 + (C134439 + C134438) * C152233 +
             (C134437 + C134436) * C152253) *
                C4107) *
               C152244 +
           ((C134454 * C152253 + (C134441 + C134440) * C152233 +
             C135714 * C76455) *
                C4107 -
            ((C136628 + C136629) * C76455 + (C135939 + C135938) * C152233 +
             C135933 * C152253) *
                C151956) *
               C152214) *
              C3241 +
          ((((C37951 * C96046 + C37952 * C152092) * C152253 +
             (C135361 + C135362) * C152233 + C136430 * C76455) *
                C151956 -
            (C134455 * C76455 + (C134443 + C134442) * C152233 +
             (C37951 * C152092 +
              (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C96046) *
                 C152253) *
                C4107) *
               C152258 +
           (((C134442 + C134443) * C152253 + (C134444 + C134445) * C152233 +
             C136137 * C76455) *
                C4107 -
            ((C136431 + C136432) * C76455 + (C135364 + C135363) * C152233 +
             (C135362 + C135361) * C152253) *
                C151956) *
               C152244 +
           ((C136430 * C152253 + (C136432 + C136431) * C152233 +
             (C33342 * C96046 +
              (C31628 * C25022 + C34069 + C34069 + C151791 * C25026) *
                  C152092) *
                 C76455) *
                C151956 -
            ((C136138 + C136139) * C76455 + (C134447 + C134446) * C152233 +
             C134455 * C152253) *
                C4107) *
               C152214) *
              C151834)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C96046 +
             C37949 * C152092) *
                C152253 +
            (C134436 + C134437) * C152233 + C134454 * C76455) *
               C4107 -
           (C135933 * C76455 + (C135359 + C135360) * C152233 +
            (C37950 * C152092 + C37949 * C96046) * C152253) *
               C151956) *
              C151851 * C152264 +
          (((C37951 * C96046 + C37952 * C152092) * C152253 +
            (C135361 + C135362) * C152233 + C136430 * C76455) *
               C151956 -
           (C134455 * C76455 + (C134443 + C134442) * C152233 +
            (C37951 * C152092 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C96046) *
                C152253) *
               C4107) *
              C151851 * C152257 +
          ((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C96046 +
             C37953 * C152092) *
                C152253 +
            (C134448 + C134449) * C152233 + C134456 * C76455) *
               C4107 -
           ((C135365 + C135366) * C76455 + (C135367 + C135368) * C152233 +
            (C37956 * C152092 + C37953 * C96046) * C152253) *
               C151956) *
              C151851 * C152242 +
          (((C38366 * C96046 + C54996 * C152092) * C152253 +
            (C38161 * C96046 + C54794 * C152092) * C152233 +
            (C38162 * C96046 +
             (C31628 * C1542 + C38363 + C38363 + C151791 * C1566) * C152092) *
                C76455) *
               C151956 -
           ((C134872 + C134871) * C76455 + (C134870 + C134869) * C152233 +
            (C38366 * C152092 +
             (C31628 * C145 + C31646 + C31646 + C151791 * C161) * C96046) *
                C152253) *
               C4107) *
              C151851 * C152218)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C96046 +
             C37949 * C152092) *
                C152253 +
            (C134436 + C134437) * C152233 + C134454 * C76455) *
               C152266 -
           (C135933 * C76455 + (C135359 + C135360) * C152233 +
            (C37950 * C152092 + C37949 * C96046) * C152253) *
               C152263 +
           ((C37950 * C96046 + C40513 * C152092) * C152253 +
            (C135934 + C135935) * C152233 + C135942 * C76455) *
               C152252 -
           ((C137870 + C137871) * C76455 + (C137872 + C137873) * C152233 +
            (C40516 * C152092 + C40513 * C96046) * C152253) *
               C152230) *
              C151851 * C3241 +
          (((C37951 * C96046 + C37952 * C152092) * C152253 +
            (C135361 + C135362) * C152233 + C136430 * C76455) *
               C152263 -
           (C134455 * C76455 + (C134443 + C134442) * C152233 +
            (C37951 * C152092 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C96046) *
                C152253) *
               C152266 -
           ((C137478 + C137479) * C76455 + (C137480 + C137481) * C152233 +
            (C41022 * C152092 + C37952 * C96046) * C152253) *
               C152252 +
           ((C41022 * C96046 + C57627 * C152092) * C152253 +
            (C40818 * C96046 + C57425 * C152092) * C152233 +
            (C40817 * C96046 +
             (C31628 * C26362 + C41019 + C41019 + C151791 * C26366) * C152092) *
                C76455) *
               C152230) *
              C151851 * C151834)) /
            (p * q * std::sqrt(p + q));
    d2ee[118] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C96046 +
             C37949 * C152092) *
                C152253 +
            (C134436 + C134437) * C152233 + C134454 * C76455) *
               C151952 -
           (C135933 * C76455 + (C135359 + C135360) * C152233 +
            (C37950 * C152092 + C37949 * C96046) * C152253) *
               C151959 +
           ((C37950 * C96046 + C40513 * C152092) * C152253 +
            (C135934 + C135935) * C152233 + C135942 * C76455) *
               C4779) *
              C151851 * C151828 +
          (((C37951 * C96046 + C37952 * C152092) * C152253 +
            (C135361 + C135362) * C152233 + C136430 * C76455) *
               C151959 -
           (C134455 * C76455 + (C134443 + C134442) * C152233 +
            (C37951 * C152092 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C96046) *
                C152253) *
               C151952 -
           ((C137478 + C137479) * C76455 + (C137480 + C137481) * C152233 +
            (C41022 * C152092 + C37952 * C96046) * C152253) *
               C4779) *
              C151851 * C151837 +
          ((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C96046 +
             C37953 * C152092) *
                C152253 +
            (C134448 + C134449) * C152233 + C134456 * C76455) *
               C151952 -
           ((C135365 + C135366) * C76455 + (C135367 + C135368) * C152233 +
            (C37956 * C152092 + C37953 * C96046) * C152253) *
               C151959 +
           ((C37956 * C96046 + C54593 * C152092) * C152253 +
            (C37955 * C96046 + C54592 * C152092) * C152233 +
            (C37954 * C96046 +
             (C31628 * C10151 + C37932 + C37932 + C151791 * C10157) * C152092) *
                C76455) *
               C4779) *
              C151851 * C3588)) /
        (p * q * std::sqrt(p + q));
    d2ee[119] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C96046 +
             C37949 * C152092) *
                C152253 +
            (C134436 + C134437) * C152233 + C134454 * C76455) *
               C4107 -
           (C135933 * C76455 + (C135359 + C135360) * C152233 +
            (C37950 * C152092 + C37949 * C96046) * C152253) *
               C151956) *
              C151851 * C152264 +
          (((C37951 * C96046 + C37952 * C152092) * C152253 +
            (C135361 + C135362) * C152233 + C136430 * C76455) *
               C151956 -
           (C134455 * C76455 + (C134443 + C134442) * C152233 +
            (C37951 * C152092 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C96046) *
                C152253) *
               C4107) *
              C151851 * C152257 +
          ((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C96046 +
             C37953 * C152092) *
                C152253 +
            (C134448 + C134449) * C152233 + C134456 * C76455) *
               C4107 -
           ((C135365 + C135366) * C76455 + (C135367 + C135368) * C152233 +
            (C37956 * C152092 + C37953 * C96046) * C152253) *
               C151956) *
              C151851 * C152242 +
          (((C38366 * C96046 + C54996 * C152092) * C152253 +
            (C38161 * C96046 + C54794 * C152092) * C152233 +
            (C38162 * C96046 +
             (C31628 * C1542 + C38363 + C38363 + C151791 * C1566) * C152092) *
                C76455) *
               C151956 -
           ((C134872 + C134871) * C76455 + (C134870 + C134869) * C152233 +
            (C38366 * C152092 +
             (C31628 * C145 + C31646 + C31646 + C151791 * C161) * C96046) *
                C152253) *
               C4107) *
              C151851 * C152218)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C96046 +
              C37949 * C152092) *
                 C152253 +
             (C134436 + C134437) * C152233 + C134454 * C76455) *
                C4107 -
            (C135933 * C76455 + (C135359 + C135360) * C152233 +
             (C37950 * C152092 + C37949 * C96046) * C152253) *
                C151956) *
               C152258 +
           (((C135360 + C135359) * C152253 + (C135358 + C135357) * C152233 +
             C136627 * C76455) *
                C151956 -
            (C135709 * C76455 + (C134439 + C134438) * C152233 +
             (C134437 + C134436) * C152253) *
                C4107) *
               C152244 +
           ((C134454 * C152253 + (C134441 + C134440) * C152233 +
             C135714 * C76455) *
                C4107 -
            ((C136628 + C136629) * C76455 + (C135939 + C135938) * C152233 +
             C135933 * C152253) *
                C151956) *
               C152214) *
              C3241 +
          ((((C37951 * C96046 + C37952 * C152092) * C152253 +
             (C135361 + C135362) * C152233 + C136430 * C76455) *
                C151956 -
            (C134455 * C76455 + (C134443 + C134442) * C152233 +
             (C37951 * C152092 +
              (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C96046) *
                 C152253) *
                C4107) *
               C152258 +
           (((C134442 + C134443) * C152253 + (C134444 + C134445) * C152233 +
             C136137 * C76455) *
                C4107 -
            ((C136431 + C136432) * C76455 + (C135364 + C135363) * C152233 +
             (C135362 + C135361) * C152253) *
                C151956) *
               C152244 +
           ((C136430 * C152253 + (C136432 + C136431) * C152233 +
             (C33342 * C96046 +
              (C31628 * C25022 + C34069 + C34069 + C151791 * C25026) *
                  C152092) *
                 C76455) *
                C151956 -
            ((C136138 + C136139) * C76455 + (C134447 + C134446) * C152233 +
             C134455 * C152253) *
                C4107) *
               C152214) *
              C151834)) /
            (p * q * std::sqrt(p + q));
    d2ee[120] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C96046 +
             C37949 * C152092) *
                C152253 +
            (C134436 + C134437) * C152233 + C134454 * C76455) *
               C151869 * C152172 -
           ((C134440 + C134441) * C76455 + (C134439 + C134438) * C152233 +
            (C134437 + C134436) * C152253) *
               C151869 * C151914) *
              C739 +
          (((C134442 + C134443) * C152253 + (C134444 + C134445) * C152233 +
            (C134446 + C134447) * C76455) *
               C151869 * C151914 -
           (C134455 * C76455 + (C134443 + C134442) * C152233 +
            (C37951 * C152092 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C96046) *
                C152253) *
               C151869 * C152172) *
              C740 +
          ((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C96046 +
             C37953 * C152092) *
                C152253 +
            (C134448 + C134449) * C152233 + C134456 * C76455) *
               C151869 * C152172 -
           ((C134452 + C134453) * C76455 + (C134451 + C134450) * C152233 +
            (C134449 + C134448) * C152253) *
               C151869 * C151914) *
              C741 +
          (((C134869 + C134870) * C152253 + (C134871 + C134872) * C152233 +
            (C32190 * C96046 +
             (C31628 * C2056 + C32327 + C32327 + C151791 * C2064) * C152092) *
                C76455) *
               C151869 * C151914 -
           ((C134872 + C134871) * C76455 + (C134870 + C134869) * C152233 +
            (C38366 * C152092 +
             (C31628 * C145 + C31646 + C31646 + C151791 * C161) * C96046) *
                C152253) *
               C151869 * C152172) *
              C152218)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C96046 +
             C37949 * C152092) *
                C152253 +
            (C134436 + C134437) * C152233 + C134454 * C76455) *
               C151869 * C1709 -
           (C135709 * C76455 + (C134439 + C134438) * C152233 +
            (C134437 + C134436) * C152253) *
               C151869 * C1710 +
           (C134454 * C152253 + (C134441 + C134440) * C152233 +
            C135714 * C76455) *
               C151869 * C1711 -
           ((C135712 + C135713) * C76455 + (C135711 + C135710) * C152233 +
            C135709 * C152253) *
               C151869 * C152224) *
              C152158 +
          (((C134442 + C134443) * C152253 + (C134444 + C134445) * C152233 +
            C136137 * C76455) *
               C151869 * C1710 -
           (C134455 * C76455 + (C134443 + C134442) * C152233 +
            (C37951 * C152092 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C96046) *
                C152253) *
               C151869 * C1709 -
           ((C136138 + C136139) * C76455 + (C134447 + C134446) * C152233 +
            C134455 * C152253) *
               C151869 * C1711 +
           (C136137 * C152253 + (C136139 + C136138) * C152233 +
            (C33141 * C96046 +
             (C31628 * C25784 + C33339 + C33339 + C151791 * C25788) * C152092) *
                C76455) *
               C151869 * C152224) *
              C151834)) /
            (p * q * std::sqrt(p + q));
    d2ee[121] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C96046 +
              C37949 * C152092) *
                 C152253 +
             (C134436 + C134437) * C152233 + C134454 * C76455) *
                C152173 -
            ((C135357 + C135358) * C76455 + (C135359 + C135360) * C152233 +
             (C37950 * C152092 + C37949 * C96046) * C152253) *
                C151956) *
               C152172 +
           (((C135360 + C135359) * C152253 + (C135358 + C135357) * C152233 +
             (C32561 * C96046 + C32998 * C152092) * C76455) *
                C151956 -
            ((C134440 + C134441) * C76455 + (C134439 + C134438) * C152233 +
             (C134437 + C134436) * C152253) *
                C152173) *
               C151914) *
              C335 +
          ((((C37951 * C96046 + C37952 * C152092) * C152253 +
             (C135361 + C135362) * C152233 + (C135363 + C135364) * C76455) *
                C151956 -
            (C134455 * C76455 + (C134443 + C134442) * C152233 +
             (C37951 * C152092 +
              (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C96046) *
                 C152253) *
                C152173) *
               C152172 +
           (((C134442 + C134443) * C152253 + (C134444 + C134445) * C152233 +
             (C134446 + C134447) * C76455) *
                C152173 -
            ((C34076 * C152092 + C32566 * C96046) * C76455 +
             (C135364 + C135363) * C152233 + (C135362 + C135361) * C152253) *
                C151956) *
               C151914) *
              C336 +
          (((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C96046 +
              C37953 * C152092) *
                 C152253 +
             (C134448 + C134449) * C152233 + C134456 * C76455) *
                C152173 -
            ((C135365 + C135366) * C76455 + (C135367 + C135368) * C152233 +
             (C37956 * C152092 + C37953 * C96046) * C152253) *
                C151956) *
               C152172 +
           (((C135368 + C135367) * C152253 + (C135366 + C135365) * C152233 +
             (C32567 * C96046 +
              (C31628 * C8066 + C32044 + C32044 + C151791 * C8072) * C152092) *
                 C76455) *
                C151956 -
            ((C134452 + C134453) * C76455 + (C134451 + C134450) * C152233 +
             (C134449 + C134448) * C152253) *
                C152173) *
               C151914) *
              C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C96046 +
             C37949 * C152092) *
                C152253 +
            (C134436 + C134437) * C152233 + C134454 * C76455) *
               C152173 -
           (C135933 * C76455 + (C135359 + C135360) * C152233 +
            (C37950 * C152092 + C37949 * C96046) * C152253) *
               C151956) *
              C1709 +
          (((C135360 + C135359) * C152253 + (C135358 + C135357) * C152233 +
            C136627 * C76455) *
               C151956 -
           (C135709 * C76455 + (C134439 + C134438) * C152233 +
            (C134437 + C134436) * C152253) *
               C152173) *
              C1710 +
          ((C134454 * C152253 + (C134441 + C134440) * C152233 +
            C135714 * C76455) *
               C152173 -
           ((C136628 + C136629) * C76455 + (C135939 + C135938) * C152233 +
            C135933 * C152253) *
               C151956) *
              C1711 +
          ((C136627 * C152253 + (C136629 + C136628) * C152233 +
            (C33482 * C96046 +
             (C31628 * C32969 + C32985 + C32985 + C151791 * C32971) * C152092) *
                C76455) *
               C151956 -
           ((C135712 + C135713) * C76455 + (C135711 + C135710) * C152233 +
            C135709 * C152253) *
               C152173) *
              C152224) *
         C151823) /
            (p * q * std::sqrt(p + q));
    d2ee[122] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C96046 +
             C37949 * C152092) *
                C152253 +
            (C134436 + C134437) * C152233 + C134454 * C76455) *
               C151869 * C152258 -
           ((C134440 + C134441) * C76455 + (C134439 + C134438) * C152233 +
            (C134437 + C134436) * C152253) *
               C151869 * C152244 +
           (C134454 * C152253 + (C134441 + C134440) * C152233 +
            (C31854 * C96046 + C32999 * C152092) * C76455) *
               C151869 * C152214) *
              C335 +
          (((C134442 + C134443) * C152253 + (C134444 + C134445) * C152233 +
            (C134446 + C134447) * C76455) *
               C151869 * C152244 -
           (C134455 * C76455 + (C134443 + C134442) * C152233 +
            (C37951 * C152092 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C96046) *
                C152253) *
               C151869 * C152258 -
           ((C33342 * C152092 + C31858 * C96046) * C76455 +
            (C134447 + C134446) * C152233 + C134455 * C152253) *
               C151869 * C152214) *
              C336 +
          ((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C96046 +
             C37953 * C152092) *
                C152253 +
            (C134448 + C134449) * C152233 + C134456 * C76455) *
               C151869 * C152258 -
           ((C134452 + C134453) * C76455 + (C134451 + C134450) * C152233 +
            (C134449 + C134448) * C152253) *
               C151869 * C152244 +
           (C134456 * C152253 + (C134453 + C134452) * C152233 +
            (C31862 * C96046 +
             (C31628 * C8843 + C32542 + C32542 + C151791 * C8849) * C152092) *
                C76455) *
               C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C96046 +
            C37949 * C152092) *
               C152253 +
           (C31851 * C96046 + C32563 * C152092) * C152233 +
           (C31852 * C96046 + C32562 * C152092) * C76455) *
              C151869 * C151851 * C129 -
          ((C32565 * C152092 + C31856 * C96046) * C76455 +
           (C32564 * C152092 + C31855 * C96046) * C152233 +
           (C37951 * C152092 +
            (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C96046) *
               C152253) *
              C151869 * C151851 * C130 +
          (((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C96046 +
            C37953 * C152092) *
               C152253 +
           (C31859 * C96046 + C32569 * C152092) * C152233 +
           (C31860 * C96046 + C32568 * C152092) * C76455) *
              C151869 * C151851 * C131 -
          ((C38162 * C152092 + C32189 * C96046) * C76455 +
           (C38161 * C152092 + C32188 * C96046) * C152233 +
           (C38366 * C152092 +
            (C31628 * C145 + C31646 + C31646 + C151791 * C161) * C96046) *
               C152253) *
              C151869 * C151851 * C132 +
          (((C31628 * C146 + C31647 + C31647 + C151791 * C162) * C96046 +
            (C31628 * C555 + C37454 + C37454 + C151791 * C579) * C152092) *
               C152253 +
           ((C31628 * C346 + C31648 + C31648 + C151791 * C370) * C96046 +
            (C31628 * C1087 + C37455 + C37455 + C151791 * C1099) * C152092) *
               C152233 +
           ((C31628 * C347 + C31649 + C31649 + C151791 * C371) * C96046 +
            (C31628 * C1916 + C37456 + C37456 + C151791 * C1918) * C152092) *
               C76455) *
              C151869 * C151851 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C96046 +
             C37949 * C152092) *
                C152253 +
            (C134436 + C134437) * C152233 + C134454 * C76455) *
               C152259 -
           ((C32997 * C152092 + C32562 * C96046) * C76455 +
            (C32996 * C152092 + C32563 * C96046) * C152233 +
            (C37950 * C152092 + C37949 * C96046) * C152253) *
               C152246 +
           ((C37950 * C96046 + C40513 * C152092) * C152253 +
            (C32996 * C96046 + C34364 * C152092) * C152233 +
            (C32997 * C96046 + C34363 * C152092) * C76455) *
               C152217) *
              C151851 * C335 +
          (((C37951 * C96046 + C37952 * C152092) * C152253 +
            (C32564 * C96046 + C34078 * C152092) * C152233 +
            (C32565 * C96046 + C34077 * C152092) * C76455) *
               C152246 -
           (C134455 * C76455 + (C134443 + C134442) * C152233 +
            (C37951 * C152092 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C96046) *
                C152253) *
               C152259 -
           ((C40817 * C152092 + C34077 * C96046) * C76455 +
            (C40818 * C152092 + C34078 * C96046) * C152233 +
            (C41022 * C152092 + C37952 * C96046) * C152253) *
               C152217) *
              C151851 * C336 +
          ((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C96046 +
             C37953 * C152092) *
                C152253 +
            (C134448 + C134449) * C152233 + C134456 * C76455) *
               C152259 -
           ((C37954 * C152092 + C32568 * C96046) * C76455 +
            (C37955 * C152092 + C32569 * C96046) * C152233 +
            (C37956 * C152092 + C37953 * C96046) * C152253) *
               C152246 +
           ((C37956 * C96046 + C54593 * C152092) * C152253 +
            (C37955 * C96046 + C54592 * C152092) * C152233 +
            (C37954 * C96046 +
             (C31628 * C10151 + C37932 + C37932 + C151791 * C10157) * C152092) *
                C76455) *
               C152217) *
              C151851 * C152208)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C96046 +
             C37949 * C152092) *
                C152253 +
            (C134436 + C134437) * C152233 + C134454 * C76455) *
               C151869 * C1259 -
           ((C134440 + C134441) * C76455 + (C134439 + C134438) * C152233 +
            (C134437 + C134436) * C152253) *
               C151869 * C1260 +
           (C134454 * C152253 + (C134441 + C134440) * C152233 +
            (C31854 * C96046 + C32999 * C152092) * C76455) *
               C151869 * C152214) *
              C152255 +
          (((C134442 + C134443) * C152253 + (C134444 + C134445) * C152233 +
            (C134446 + C134447) * C76455) *
               C151869 * C1260 -
           (C134455 * C76455 + (C134443 + C134442) * C152233 +
            (C37951 * C152092 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C96046) *
                C152253) *
               C151869 * C1259 -
           ((C33342 * C152092 + C31858 * C96046) * C76455 +
            (C134447 + C134446) * C152233 + C134455 * C152253) *
               C151869 * C152214) *
              C152240 +
          ((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C96046 +
             C37953 * C152092) *
                C152253 +
            (C134448 + C134449) * C152233 + C134456 * C76455) *
               C151869 * C1259 -
           ((C134452 + C134453) * C76455 + (C134451 + C134450) * C152233 +
            (C134449 + C134448) * C152253) *
               C151869 * C1260 +
           (C134456 * C152253 + (C134453 + C134452) * C152233 +
            (C31862 * C96046 +
             (C31628 * C8843 + C32542 + C32542 + C151791 * C8849) * C152092) *
                C76455) *
               C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C96046 +
            C37949 * C152092) *
               C152253 +
           (C134436 + C134437) * C152233 + C134454 * C76455) *
              C151869 * C1347 -
          (C135709 * C76455 + (C134439 + C134438) * C152233 +
           (C134437 + C134436) * C152253) *
              C151869 * C1348 +
          (C134454 * C152253 + (C134441 + C134440) * C152233 +
           C135714 * C76455) *
              C151869 * C1349 -
          ((C135712 + C135713) * C76455 + (C135711 + C135710) * C152233 +
           C135709 * C152253) *
              C151869 * C1350 +
          (C135714 * C152253 + (C135713 + C135712) * C152233 +
           (C32821 * C96046 +
            (C31628 * C33473 + C33479 + C33479 + C151791 * C33475) * C152092) *
               C76455) *
              C151869 * C1351) *
         C151823) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C96046 +
             C37949 * C152092) *
                C152253 +
            (C134436 + C134437) * C152233 + C134454 * C76455) *
               C152259 -
           (C135933 * C76455 + (C135359 + C135360) * C152233 +
            (C37950 * C152092 + C37949 * C96046) * C152253) *
               C152246 +
           ((C37950 * C96046 + C40513 * C152092) * C152253 +
            (C135934 + C135935) * C152233 + C135942 * C76455) *
               C152217) *
              C1259 +
          (((C135360 + C135359) * C152253 + (C135358 + C135357) * C152233 +
            (C135938 + C135939) * C76455) *
               C152246 -
           (C135709 * C76455 + (C134439 + C134438) * C152233 +
            (C134437 + C134436) * C152253) *
               C152259 -
           ((C135940 + C135941) * C76455 + (C135937 + C135936) * C152233 +
            (C135935 + C135934) * C152253) *
               C152217) *
              C1260 +
          ((C134454 * C152253 + (C134441 + C134440) * C152233 +
            C135714 * C76455) *
               C152259 -
           ((C33000 * C152092 + C32999 * C96046) * C76455 +
            (C135939 + C135938) * C152233 + C135933 * C152253) *
               C152246 +
           (C135942 * C152253 + (C135941 + C135940) * C152233 +
            (C33000 * C96046 +
             (C31628 * C34345 + C34355 + C34355 + C151791 * C34347) * C152092) *
                C76455) *
               C152217) *
              C152214) *
         C151823) /
            (p * q * std::sqrt(p + q));
    d2ee[123] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C96046 +
             C37949 * C152092) *
                C152253 +
            (C134436 + C134437) * C152233 + C134454 * C76455) *
               C152173 -
           ((C32997 * C152092 + C32562 * C96046) * C76455 +
            (C32996 * C152092 + C32563 * C96046) * C152233 +
            (C37950 * C152092 + C37949 * C96046) * C152253) *
               C151956) *
              C151851 * C739 +
          (((C37951 * C96046 + C37952 * C152092) * C152253 +
            (C32564 * C96046 + C34078 * C152092) * C152233 +
            (C32565 * C96046 + C34077 * C152092) * C76455) *
               C151956 -
           (C134455 * C76455 + (C134443 + C134442) * C152233 +
            (C37951 * C152092 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C96046) *
                C152253) *
               C152173) *
              C151851 * C740 +
          ((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C96046 +
             C37953 * C152092) *
                C152253 +
            (C134448 + C134449) * C152233 + C134456 * C76455) *
               C152173 -
           ((C37954 * C152092 + C32568 * C96046) * C76455 +
            (C37955 * C152092 + C32569 * C96046) * C152233 +
            (C37956 * C152092 + C37953 * C96046) * C152253) *
               C151956) *
              C151851 * C741 +
          (((C38366 * C96046 + C54996 * C152092) * C152253 +
            (C38161 * C96046 + C54794 * C152092) * C152233 +
            (C38162 * C96046 +
             (C31628 * C1542 + C38363 + C38363 + C151791 * C1566) * C152092) *
                C76455) *
               C151956 -
           ((C134872 + C134871) * C76455 + (C134870 + C134869) * C152233 +
            (C38366 * C152092 +
             (C31628 * C145 + C31646 + C31646 + C151791 * C161) * C96046) *
                C152253) *
               C152173) *
              C151851 * C152218)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C96046 +
              C37949 * C152092) *
                 C152253 +
             (C134436 + C134437) * C152233 + C134454 * C76455) *
                C152173 -
            (C135933 * C76455 + (C135359 + C135360) * C152233 +
             (C37950 * C152092 + C37949 * C96046) * C152253) *
                C151956) *
               C1259 +
           (((C135360 + C135359) * C152253 + (C135358 + C135357) * C152233 +
             (C135938 + C135939) * C76455) *
                C151956 -
            (C135709 * C76455 + (C134439 + C134438) * C152233 +
             (C134437 + C134436) * C152253) *
                C152173) *
               C1260 +
           ((C134454 * C152253 + (C134441 + C134440) * C152233 +
             C135714 * C76455) *
                C152173 -
            ((C33000 * C152092 + C32999 * C96046) * C76455 +
             (C135939 + C135938) * C152233 + C135933 * C152253) *
                C151956) *
               C152214) *
              C152158 +
          ((((C37951 * C96046 + C37952 * C152092) * C152253 +
             (C135361 + C135362) * C152233 + C136430 * C76455) *
                C151956 -
            (C134455 * C76455 + (C134443 + C134442) * C152233 +
             (C37951 * C152092 +
              (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C96046) *
                 C152253) *
                C152173) *
               C1259 +
           (((C134442 + C134443) * C152253 + (C134444 + C134445) * C152233 +
             C136137 * C76455) *
                C152173 -
            ((C136431 + C136432) * C76455 + (C135364 + C135363) * C152233 +
             (C135362 + C135361) * C152253) *
                C151956) *
               C1260 +
           ((C136430 * C152253 + (C136432 + C136431) * C152233 +
             (C33342 * C96046 +
              (C31628 * C25022 + C34069 + C34069 + C151791 * C25026) *
                  C152092) *
                 C76455) *
                C151956 -
            ((C136138 + C136139) * C76455 + (C134447 + C134446) * C152233 +
             C134455 * C152253) *
                C152173) *
               C152214) *
              C151834)) /
            (p * q * std::sqrt(p + q));
    d2ee[124] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C96046 +
            C37949 * C152092) *
               C152253 +
           (C31851 * C96046 + C32563 * C152092) * C152233 +
           (C31852 * C96046 + C32562 * C152092) * C76455) *
              C151869 * C151851 * C129 -
          ((C32565 * C152092 + C31856 * C96046) * C76455 +
           (C32564 * C152092 + C31855 * C96046) * C152233 +
           (C37951 * C152092 +
            (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C96046) *
               C152253) *
              C151869 * C151851 * C130 +
          (((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C96046 +
            C37953 * C152092) *
               C152253 +
           (C31859 * C96046 + C32569 * C152092) * C152233 +
           (C31860 * C96046 + C32568 * C152092) * C76455) *
              C151869 * C151851 * C131 -
          ((C38162 * C152092 + C32189 * C96046) * C76455 +
           (C38161 * C152092 + C32188 * C96046) * C152233 +
           (C38366 * C152092 +
            (C31628 * C145 + C31646 + C31646 + C151791 * C161) * C96046) *
               C152253) *
              C151869 * C151851 * C132 +
          (((C31628 * C146 + C31647 + C31647 + C151791 * C162) * C96046 +
            (C31628 * C555 + C37454 + C37454 + C151791 * C579) * C152092) *
               C152253 +
           ((C31628 * C346 + C31648 + C31648 + C151791 * C370) * C96046 +
            (C31628 * C1087 + C37455 + C37455 + C151791 * C1099) * C152092) *
               C152233 +
           ((C31628 * C347 + C31649 + C31649 + C151791 * C371) * C96046 +
            (C31628 * C1916 + C37456 + C37456 + C151791 * C1918) * C152092) *
               C76455) *
              C151869 * C151851 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C96046 +
             C37949 * C152092) *
                C152253 +
            (C134436 + C134437) * C152233 + C134454 * C76455) *
               C151869 * C152258 -
           ((C134440 + C134441) * C76455 + (C134439 + C134438) * C152233 +
            (C134437 + C134436) * C152253) *
               C151869 * C152244 +
           (C134454 * C152253 + (C134441 + C134440) * C152233 +
            (C31854 * C96046 + C32999 * C152092) * C76455) *
               C151869 * C152214) *
              C335 +
          (((C134442 + C134443) * C152253 + (C134444 + C134445) * C152233 +
            (C134446 + C134447) * C76455) *
               C151869 * C152244 -
           (C134455 * C76455 + (C134443 + C134442) * C152233 +
            (C37951 * C152092 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C96046) *
                C152253) *
               C151869 * C152258 -
           ((C33342 * C152092 + C31858 * C96046) * C76455 +
            (C134447 + C134446) * C152233 + C134455 * C152253) *
               C151869 * C152214) *
              C336 +
          ((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C96046 +
             C37953 * C152092) *
                C152253 +
            (C134448 + C134449) * C152233 + C134456 * C76455) *
               C151869 * C152258 -
           ((C134452 + C134453) * C76455 + (C134451 + C134450) * C152233 +
            (C134449 + C134448) * C152253) *
               C151869 * C152244 +
           (C134456 * C152253 + (C134453 + C134452) * C152233 +
            (C31862 * C96046 +
             (C31628 * C8843 + C32542 + C32542 + C151791 * C8849) * C152092) *
                C76455) *
               C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C96046 +
             C37949 * C152092) *
                C152253 +
            (C134436 + C134437) * C152233 + C134454 * C76455) *
               C151869 * C1259 -
           ((C134440 + C134441) * C76455 + (C134439 + C134438) * C152233 +
            (C134437 + C134436) * C152253) *
               C151869 * C1260 +
           (C134454 * C152253 + (C134441 + C134440) * C152233 +
            (C31854 * C96046 + C32999 * C152092) * C76455) *
               C151869 * C152214) *
              C152255 +
          (((C134442 + C134443) * C152253 + (C134444 + C134445) * C152233 +
            (C134446 + C134447) * C76455) *
               C151869 * C1260 -
           (C134455 * C76455 + (C134443 + C134442) * C152233 +
            (C37951 * C152092 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C96046) *
                C152253) *
               C151869 * C1259 -
           ((C33342 * C152092 + C31858 * C96046) * C76455 +
            (C134447 + C134446) * C152233 + C134455 * C152253) *
               C151869 * C152214) *
              C152240 +
          ((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C96046 +
             C37953 * C152092) *
                C152253 +
            (C134448 + C134449) * C152233 + C134456 * C76455) *
               C151869 * C1259 -
           ((C134452 + C134453) * C76455 + (C134451 + C134450) * C152233 +
            (C134449 + C134448) * C152253) *
               C151869 * C1260 +
           (C134456 * C152253 + (C134453 + C134452) * C152233 +
            (C31862 * C96046 +
             (C31628 * C8843 + C32542 + C32542 + C151791 * C8849) * C152092) *
                C76455) *
               C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C96046 +
            C37949 * C152092) *
               C152253 +
           (C134436 + C134437) * C152233 + C134454 * C76455) *
              C151869 * C1347 -
          (C135709 * C76455 + (C134439 + C134438) * C152233 +
           (C134437 + C134436) * C152253) *
              C151869 * C1348 +
          (C134454 * C152253 + (C134441 + C134440) * C152233 +
           C135714 * C76455) *
              C151869 * C1349 -
          ((C135712 + C135713) * C76455 + (C135711 + C135710) * C152233 +
           C135709 * C152253) *
              C151869 * C1350 +
          (C135714 * C152253 + (C135713 + C135712) * C152233 +
           (C32821 * C96046 +
            (C31628 * C33473 + C33479 + C33479 + C151791 * C33475) * C152092) *
               C76455) *
              C151869 * C1351) *
         C151823) /
            (p * q * std::sqrt(p + q));
    d2ee[125] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152254 +
             C37949 * C152236 + C37950 * C115175) *
                C67857 +
            (C142642 + C142643 + C142644) * C152068) *
               C151869 * C151910 -
           ((C142645 + C142646 + C142647) * C152068 +
            (C142644 + C142643 + C142642) * C67857) *
               C151869 * C151917 +
           ((C142647 + C142646 + C142645) * C67857 +
            (C143908 + C143909 + C143910) * C152068) *
               C151869 * C3585) *
              C151828 +
          (((C142648 + C142649 + C142650) * C67857 +
            (C142651 + C142652 + C142653) * C152068) *
               C151869 * C151917 -
           ((C142650 + C142649 + C142648) * C152068 +
            (C37952 * C115175 + C37951 * C152236 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152254) *
                C67857) *
               C151869 * C151910 -
           ((C144335 + C144336 + C144337) * C152068 +
            (C142653 + C142652 + C142651) * C67857) *
               C151869 * C3585) *
              C151837 +
          ((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C152254 +
             C37953 * C152236 + C37956 * C115175) *
                C67857 +
            (C142654 + C142655 + C142656) * C152068) *
               C151869 * C151910 -
           ((C142657 + C142658 + C142659) * C152068 +
            (C142656 + C142655 + C142654) * C67857) *
               C151869 * C151917 +
           ((C142659 + C142658 + C142657) * C67857 +
            (C31861 * C152254 + C32567 * C152236 +
             (C31628 * C8066 + C32044 + C32044 + C151791 * C8072) * C115175) *
                C152068) *
               C151869 * C3585) *
              C3588)) /
        (p * q * std::sqrt(p + q));
    d2ee[126] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152254 +
              C37949 * C152236 + C37950 * C115175) *
                 C67857 +
             (C142642 + C142643 + C142644) * C152068) *
                C152173 -
            ((C143559 + C143560 + C143561) * C152068 +
             (C40513 * C115175 + C37950 * C152236 + C37949 * C152254) *
                 C67857) *
                C151956) *
               C151910 +
           (((C143561 + C143560 + C143559) * C67857 +
             (C144135 + C144136 + C144137) * C152068) *
                C151956 -
            ((C142645 + C142646 + C142647) * C152068 +
             (C142644 + C142643 + C142642) * C67857) *
                C152173) *
               C151917 +
           (((C142647 + C142646 + C142645) * C67857 +
             (C143908 + C143909 + C143910) * C152068) *
                C152173 -
            ((C144825 + C144826 + C144827) * C152068 +
             (C144137 + C144136 + C144135) * C67857) *
                C151956) *
               C3585) *
              C3241 +
          ((((C37951 * C152254 + C37952 * C152236 + C41022 * C115175) * C67857 +
             (C143562 + C143563 + C143564) * C152068) *
                C151956 -
            ((C142650 + C142649 + C142648) * C152068 +
             (C37952 * C115175 + C37951 * C152236 +
              (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152254) *
                 C67857) *
                C152173) *
               C151910 +
           (((C142648 + C142649 + C142650) * C67857 +
             (C142651 + C142652 + C142653) * C152068) *
                C152173 -
            ((C144628 + C144629 + C144630) * C152068 +
             (C143564 + C143563 + C143562) * C67857) *
                C151956) *
               C151917 +
           (((C144630 + C144629 + C144628) * C67857 +
             (C32566 * C152254 + C34076 * C152236 +
              (C31628 * C27086 + C34215 + C34215 + C151791 * C27090) *
                  C115175) *
                 C152068) *
                C151956 -
            ((C144335 + C144336 + C144337) * C152068 +
             (C142653 + C142652 + C142651) * C67857) *
                C152173) *
               C3585) *
              C151834)) /
        (p * q * std::sqrt(p + q));
    d2ee[127] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152254 +
             C37949 * C152236 + C37950 * C115175) *
                C67857 +
            (C142642 + C142643 + C142644) * C152068) *
               C151869 * C152265 -
           ((C142645 + C142646 + C142647) * C152068 +
            (C142644 + C142643 + C142642) * C67857) *
               C151869 * C152261 +
           ((C142647 + C142646 + C142645) * C67857 +
            (C143908 + C143909 + C143910) * C152068) *
               C151869 * C152249 -
           ((C143911 + C143912 + C143913) * C152068 +
            (C143910 + C143909 + C143908) * C67857) *
               C151869 * C152224) *
              C3241 +
          (((C142648 + C142649 + C142650) * C67857 +
            (C142651 + C142652 + C142653) * C152068) *
               C151869 * C152261 -
           ((C142650 + C142649 + C142648) * C152068 +
            (C37952 * C115175 + C37951 * C152236 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152254) *
                C67857) *
               C151869 * C152265 -
           ((C144335 + C144336 + C144337) * C152068 +
            (C142653 + C142652 + C142651) * C67857) *
               C151869 * C152249 +
           ((C144337 + C144336 + C144335) * C67857 +
            (C31858 * C152254 + C33342 * C152236 +
             (C31628 * C25022 + C34069 + C34069 + C151791 * C25026) * C115175) *
                C152068) *
               C151869 * C152224) *
              C151834)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152254 +
             C37949 * C152236 + C37950 * C115175) *
                C67857 +
            (C142642 + C142643 + C142644) * C152068) *
               C151869 * C3101 -
           ((C142645 + C142646 + C142647) * C152068 +
            (C142644 + C142643 + C142642) * C67857) *
               C151869 * C151914) *
              C152264 +
          (((C142648 + C142649 + C142650) * C67857 +
            (C142651 + C142652 + C142653) * C152068) *
               C151869 * C151914 -
           ((C142650 + C142649 + C142648) * C152068 +
            (C37952 * C115175 + C37951 * C152236 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152254) *
                C67857) *
               C151869 * C3101) *
              C152257 +
          ((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C152254 +
             C37953 * C152236 + C37956 * C115175) *
                C67857 +
            (C142654 + C142655 + C142656) * C152068) *
               C151869 * C3101 -
           ((C142657 + C142658 + C142659) * C152068 +
            (C142656 + C142655 + C142654) * C67857) *
               C151869 * C151914) *
              C152242 +
          (((C143072 + C143073 + C143074) * C67857 +
            (C32189 * C152254 + C38162 * C152236 +
             (C31628 * C1542 + C38363 + C38363 + C151791 * C1566) * C115175) *
                C152068) *
               C151869 * C151914 -
           ((C143074 + C143073 + C143072) * C152068 +
            (C54996 * C115175 + C38366 * C152236 +
             (C31628 * C145 + C31646 + C31646 + C151791 * C161) * C152254) *
                C67857) *
               C151869 * C3101) *
              C152218)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152254 +
              C37949 * C152236 + C37950 * C115175) *
                 C67857 +
             (C142642 + C142643 + C142644) * C152068) *
                C152259 -
            ((C143559 + C143560 + C143561) * C152068 +
             (C40513 * C115175 + C37950 * C152236 + C37949 * C152254) *
                 C67857) *
                C152246 +
            ((C37950 * C152254 + C40513 * C152236 + C40516 * C115175) * C67857 +
             (C144132 + C144133 + C144134) * C152068) *
                C152217) *
               C3101 +
           (((C143561 + C143560 + C143559) * C67857 +
             (C144135 + C144136 + C144137) * C152068) *
                C152246 -
            ((C142645 + C142646 + C142647) * C152068 +
             (C142644 + C142643 + C142642) * C67857) *
                C152259 -
            ((C144138 + C144139 + C144140) * C152068 +
             (C144134 + C144133 + C144132) * C67857) *
                C152217) *
               C151914) *
              C3241 +
          ((((C37951 * C152254 + C37952 * C152236 + C41022 * C115175) * C67857 +
             (C143562 + C143563 + C143564) * C152068) *
                C152246 -
            ((C142650 + C142649 + C142648) * C152068 +
             (C37952 * C115175 + C37951 * C152236 +
              (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152254) *
                 C67857) *
                C152259 -
            ((C145676 + C145677 + C145678) * C152068 +
             (C57627 * C115175 + C41022 * C152236 + C37952 * C152254) *
                 C67857) *
                C152217) *
               C3101 +
           (((C142648 + C142649 + C142650) * C67857 +
             (C142651 + C142652 + C142653) * C152068) *
                C152259 -
            ((C144628 + C144629 + C144630) * C152068 +
             (C143564 + C143563 + C143562) * C67857) *
                C152246 +
            ((C145678 + C145677 + C145676) * C67857 +
             (C34077 * C152254 + C40817 * C152236 +
              (C31628 * C26362 + C41019 + C41019 + C151791 * C26366) *
                  C115175) *
                 C152068) *
                C152217) *
               C151914) *
              C151834)) /
            (p * q * std::sqrt(p + q));
    d2ee[128] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152254 +
              C37949 * C152236 + C37950 * C115175) *
                 C67857 +
             (C142642 + C142643 + C142644) * C152068) *
                C152173 -
            ((C143559 + C143560 + C143561) * C152068 +
             (C40513 * C115175 + C37950 * C152236 + C37949 * C152254) *
                 C67857) *
                C151956) *
               C3101 +
           (((C143561 + C143560 + C143559) * C67857 +
             (C144135 + C144136 + C144137) * C152068) *
                C151956 -
            ((C142645 + C142646 + C142647) * C152068 +
             (C142644 + C142643 + C142642) * C67857) *
                C152173) *
               C151914) *
              C151828 +
          ((((C37951 * C152254 + C37952 * C152236 + C41022 * C115175) * C67857 +
             (C143562 + C143563 + C143564) * C152068) *
                C151956 -
            ((C142650 + C142649 + C142648) * C152068 +
             (C37952 * C115175 + C37951 * C152236 +
              (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152254) *
                 C67857) *
                C152173) *
               C3101 +
           (((C142648 + C142649 + C142650) * C67857 +
             (C142651 + C142652 + C142653) * C152068) *
                C152173 -
            ((C144628 + C144629 + C144630) * C152068 +
             (C143564 + C143563 + C143562) * C67857) *
                C151956) *
               C151914) *
              C151837 +
          (((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C152254 +
              C37953 * C152236 + C37956 * C115175) *
                 C67857 +
             (C142654 + C142655 + C142656) * C152068) *
                C152173 -
            ((C143565 + C143566 + C143567) * C152068 +
             (C54593 * C115175 + C37956 * C152236 + C37953 * C152254) *
                 C67857) *
                C151956) *
               C3101 +
           (((C143567 + C143566 + C143565) * C67857 +
             (C32568 * C152254 + C37954 * C152236 +
              (C31628 * C10151 + C37932 + C37932 + C151791 * C10157) *
                  C115175) *
                 C152068) *
                C151956 -
            ((C142657 + C142658 + C142659) * C152068 +
             (C142656 + C142655 + C142654) * C67857) *
                C152173) *
               C151914) *
              C3588)) /
        (p * q * std::sqrt(p + q));
    d2ee[129] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152254 +
             C37949 * C152236 + C37950 * C115175) *
                C67857 +
            (C142642 + C142643 + C142644) * C152068) *
               C151869 * C3101 -
           ((C142645 + C142646 + C142647) * C152068 +
            (C142644 + C142643 + C142642) * C67857) *
               C151869 * C151914) *
              C152264 +
          (((C142648 + C142649 + C142650) * C67857 +
            (C142651 + C142652 + C142653) * C152068) *
               C151869 * C151914 -
           ((C142650 + C142649 + C142648) * C152068 +
            (C37952 * C115175 + C37951 * C152236 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152254) *
                C67857) *
               C151869 * C3101) *
              C152257 +
          ((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C152254 +
             C37953 * C152236 + C37956 * C115175) *
                C67857 +
            (C142654 + C142655 + C142656) * C152068) *
               C151869 * C3101 -
           ((C142657 + C142658 + C142659) * C152068 +
            (C142656 + C142655 + C142654) * C67857) *
               C151869 * C151914) *
              C152242 +
          (((C143072 + C143073 + C143074) * C67857 +
            (C32189 * C152254 + C38162 * C152236 +
             (C31628 * C1542 + C38363 + C38363 + C151791 * C1566) * C115175) *
                C152068) *
               C151869 * C151914 -
           ((C143074 + C143073 + C143072) * C152068 +
            (C54996 * C115175 + C38366 * C152236 +
             (C31628 * C145 + C31646 + C31646 + C151791 * C161) * C152254) *
                C67857) *
               C151869 * C3101) *
              C152218)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152254 +
             C37949 * C152236 + C37950 * C115175) *
                C67857 +
            (C142642 + C142643 + C142644) * C152068) *
               C151869 * C152265 -
           ((C142645 + C142646 + C142647) * C152068 +
            (C142644 + C142643 + C142642) * C67857) *
               C151869 * C152261 +
           ((C142647 + C142646 + C142645) * C67857 +
            (C143908 + C143909 + C143910) * C152068) *
               C151869 * C152249 -
           ((C143911 + C143912 + C143913) * C152068 +
            (C143910 + C143909 + C143908) * C67857) *
               C151869 * C152224) *
              C3241 +
          (((C142648 + C142649 + C142650) * C67857 +
            (C142651 + C142652 + C142653) * C152068) *
               C151869 * C152261 -
           ((C142650 + C142649 + C142648) * C152068 +
            (C37952 * C115175 + C37951 * C152236 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152254) *
                C67857) *
               C151869 * C152265 -
           ((C144335 + C144336 + C144337) * C152068 +
            (C142653 + C142652 + C142651) * C67857) *
               C151869 * C152249 +
           ((C144337 + C144336 + C144335) * C67857 +
            (C31858 * C152254 + C33342 * C152236 +
             (C31628 * C25022 + C34069 + C34069 + C151791 * C25026) * C115175) *
                C152068) *
               C151869 * C152224) *
              C151834)) /
            (p * q * std::sqrt(p + q));
    d2ee[130] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152254 +
              C37949 * C152236 + C37950 * C115175) *
                 C67857 +
             (C142642 + C142643 + C142644) * C152068) *
                C4107 -
            ((C143559 + C143560 + C143561) * C152068 +
             (C40513 * C115175 + C37950 * C152236 + C37949 * C152254) *
                 C67857) *
                C151956) *
               C151910 +
           (((C143561 + C143560 + C143559) * C67857 +
             (C144135 + C144136 + C144137) * C152068) *
                C151956 -
            ((C142645 + C142646 + C142647) * C152068 +
             (C142644 + C142643 + C142642) * C67857) *
                C4107) *
               C151917 +
           (((C142647 + C142646 + C142645) * C67857 +
             (C143908 + C143909 + C143910) * C152068) *
                C4107 -
            ((C144825 + C144826 + C144827) * C152068 +
             (C144137 + C144136 + C144135) * C67857) *
                C151956) *
               C3585) *
              C152158 +
          ((((C37951 * C152254 + C37952 * C152236 + C41022 * C115175) * C67857 +
             (C143562 + C143563 + C143564) * C152068) *
                C151956 -
            ((C142650 + C142649 + C142648) * C152068 +
             (C37952 * C115175 + C37951 * C152236 +
              (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152254) *
                 C67857) *
                C4107) *
               C151910 +
           (((C142648 + C142649 + C142650) * C67857 +
             (C142651 + C142652 + C142653) * C152068) *
                C4107 -
            ((C144628 + C144629 + C144630) * C152068 +
             (C143564 + C143563 + C143562) * C67857) *
                C151956) *
               C151917 +
           (((C144630 + C144629 + C144628) * C67857 +
             (C32566 * C152254 + C34076 * C152236 +
              (C31628 * C27086 + C34215 + C34215 + C151791 * C27090) *
                  C115175) *
                 C152068) *
                C151956 -
            ((C144335 + C144336 + C144337) * C152068 +
             (C142653 + C142652 + C142651) * C67857) *
                C4107) *
               C3585) *
              C151834)) /
        (p * q * std::sqrt(p + q));
    d2ee[131] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152254 +
             C37949 * C152236 + C37950 * C115175) *
                C67857 +
            (C142642 + C142643 + C142644) * C152068) *
               C151952 -
           ((C143559 + C143560 + C143561) * C152068 +
            (C40513 * C115175 + C37950 * C152236 + C37949 * C152254) * C67857) *
               C151959 +
           ((C37950 * C152254 + C40513 * C152236 + C40516 * C115175) * C67857 +
            (C144132 + C144133 + C144134) * C152068) *
               C4779) *
              C151910 +
          (((C143561 + C143560 + C143559) * C67857 +
            (C144135 + C144136 + C144137) * C152068) *
               C151959 -
           ((C142645 + C142646 + C142647) * C152068 +
            (C142644 + C142643 + C142642) * C67857) *
               C151952 -
           ((C144138 + C144139 + C144140) * C152068 +
            (C144134 + C144133 + C144132) * C67857) *
               C4779) *
              C151917 +
          (((C142647 + C142646 + C142645) * C67857 +
            (C143908 + C143909 + C143910) * C152068) *
               C151952 -
           ((C144825 + C144826 + C144827) * C152068 +
            (C144137 + C144136 + C144135) * C67857) *
               C151959 +
           ((C144140 + C144139 + C144138) * C67857 +
            (C32998 * C152254 + C34362 * C152236 +
             (C31628 * C33857 + C33868 + C33868 + C151791 * C33859) * C115175) *
                C152068) *
               C4779) *
              C3585) *
         C151823) /
        (p * q * std::sqrt(p + q));
    d2ee[132] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152254 +
             C37949 * C152236 + C37950 * C115175) *
                C67857 +
            (C142642 + C142643 + C142644) * C152068) *
               C4107 -
           ((C143559 + C143560 + C143561) * C152068 +
            (C40513 * C115175 + C37950 * C152236 + C37949 * C152254) * C67857) *
               C151956) *
              C152265 +
          (((C143561 + C143560 + C143559) * C67857 +
            (C144135 + C144136 + C144137) * C152068) *
               C151956 -
           ((C142645 + C142646 + C142647) * C152068 +
            (C142644 + C142643 + C142642) * C67857) *
               C4107) *
              C152261 +
          (((C142647 + C142646 + C142645) * C67857 +
            (C143908 + C143909 + C143910) * C152068) *
               C4107 -
           ((C144825 + C144826 + C144827) * C152068 +
            (C144137 + C144136 + C144135) * C67857) *
               C151956) *
              C152249 +
          (((C144827 + C144826 + C144825) * C67857 +
            (C32999 * C152254 + C33000 * C152236 +
             (C31628 * C34345 + C34355 + C34355 + C151791 * C34347) * C115175) *
                C152068) *
               C151956 -
           ((C143911 + C143912 + C143913) * C152068 +
            (C143910 + C143909 + C143908) * C67857) *
               C4107) *
              C152224) *
         C151823) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152254 +
              C37949 * C152236 + C37950 * C115175) *
                 C67857 +
             (C142642 + C142643 + C142644) * C152068) *
                C4107 -
            ((C143559 + C143560 + C143561) * C152068 +
             (C40513 * C115175 + C37950 * C152236 + C37949 * C152254) *
                 C67857) *
                C151956) *
               C3101 +
           (((C143561 + C143560 + C143559) * C67857 +
             (C144135 + C144136 + C144137) * C152068) *
                C151956 -
            ((C142645 + C142646 + C142647) * C152068 +
             (C142644 + C142643 + C142642) * C67857) *
                C4107) *
               C151914) *
              C152255 +
          ((((C37951 * C152254 + C37952 * C152236 + C41022 * C115175) * C67857 +
             (C143562 + C143563 + C143564) * C152068) *
                C151956 -
            ((C142650 + C142649 + C142648) * C152068 +
             (C37952 * C115175 + C37951 * C152236 +
              (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152254) *
                 C67857) *
                C4107) *
               C3101 +
           (((C142648 + C142649 + C142650) * C67857 +
             (C142651 + C142652 + C142653) * C152068) *
                C4107 -
            ((C144628 + C144629 + C144630) * C152068 +
             (C143564 + C143563 + C143562) * C67857) *
                C151956) *
               C151914) *
              C152240 +
          (((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C152254 +
              C37953 * C152236 + C37956 * C115175) *
                 C67857 +
             (C142654 + C142655 + C142656) * C152068) *
                C4107 -
            ((C143565 + C143566 + C143567) * C152068 +
             (C54593 * C115175 + C37956 * C152236 + C37953 * C152254) *
                 C67857) *
                C151956) *
               C3101 +
           (((C143567 + C143566 + C143565) * C67857 +
             (C32568 * C152254 + C37954 * C152236 +
              (C31628 * C10151 + C37932 + C37932 + C151791 * C10157) *
                  C115175) *
                 C152068) *
                C151956 -
            ((C142657 + C142658 + C142659) * C152068 +
             (C142656 + C142655 + C142654) * C67857) *
                C4107) *
               C151914) *
              C152208)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152254 +
             C37949 * C152236 + C37950 * C115175) *
                C67857 +
            (C142642 + C142643 + C142644) * C152068) *
               C152266 -
           ((C143559 + C143560 + C143561) * C152068 +
            (C40513 * C115175 + C37950 * C152236 + C37949 * C152254) * C67857) *
               C152263 +
           ((C37950 * C152254 + C40513 * C152236 + C40516 * C115175) * C67857 +
            (C144132 + C144133 + C144134) * C152068) *
               C152252 -
           ((C146067 + C146068 + C146069) * C152068 +
            (C57128 * C115175 + C40516 * C152236 + C40513 * C152254) * C67857) *
               C152230) *
              C3101 +
          (((C143561 + C143560 + C143559) * C67857 +
            (C144135 + C144136 + C144137) * C152068) *
               C152263 -
           ((C142645 + C142646 + C142647) * C152068 +
            (C142644 + C142643 + C142642) * C67857) *
               C152266 -
           ((C144138 + C144139 + C144140) * C152068 +
            (C144134 + C144133 + C144132) * C67857) *
               C152252 +
           ((C146069 + C146068 + C146067) * C67857 +
            (C34363 * C152254 + C40514 * C152236 +
             (C31628 * C40488 + C40504 + C40504 + C151791 * C40492) * C115175) *
                C152068) *
               C152230) *
              C151914) *
         C151823) /
            (p * q * std::sqrt(p + q));
    d2ee[133] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152254 +
              C37949 * C152236 + C37950 * C115175) *
                 C67857 +
             (C142642 + C142643 + C142644) * C152068) *
                C151952 -
            ((C143559 + C143560 + C143561) * C152068 +
             (C40513 * C115175 + C37950 * C152236 + C37949 * C152254) *
                 C67857) *
                C151959 +
            ((C37950 * C152254 + C40513 * C152236 + C40516 * C115175) * C67857 +
             (C144132 + C144133 + C144134) * C152068) *
                C4779) *
               C3101 +
           (((C143561 + C143560 + C143559) * C67857 +
             (C144135 + C144136 + C144137) * C152068) *
                C151959 -
            ((C142645 + C142646 + C142647) * C152068 +
             (C142644 + C142643 + C142642) * C67857) *
                C151952 -
            ((C144138 + C144139 + C144140) * C152068 +
             (C144134 + C144133 + C144132) * C67857) *
                C4779) *
               C151914) *
              C152158 +
          ((((C37951 * C152254 + C37952 * C152236 + C41022 * C115175) * C67857 +
             (C143562 + C143563 + C143564) * C152068) *
                C151959 -
            ((C142650 + C142649 + C142648) * C152068 +
             (C37952 * C115175 + C37951 * C152236 +
              (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152254) *
                 C67857) *
                C151952 -
            ((C145676 + C145677 + C145678) * C152068 +
             (C57627 * C115175 + C41022 * C152236 + C37952 * C152254) *
                 C67857) *
                C4779) *
               C3101 +
           (((C142648 + C142649 + C142650) * C67857 +
             (C142651 + C142652 + C142653) * C152068) *
                C151952 -
            ((C144628 + C144629 + C144630) * C152068 +
             (C143564 + C143563 + C143562) * C67857) *
                C151959 +
            ((C145678 + C145677 + C145676) * C67857 +
             (C34077 * C152254 + C40817 * C152236 +
              (C31628 * C26362 + C41019 + C41019 + C151791 * C26366) *
                  C115175) *
                 C152068) *
                C4779) *
               C151914) *
              C151834)) /
        (p * q * std::sqrt(p + q));
    d2ee[134] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152254 +
              C37949 * C152236 + C37950 * C115175) *
                 C67857 +
             (C142642 + C142643 + C142644) * C152068) *
                C4107 -
            ((C143559 + C143560 + C143561) * C152068 +
             (C40513 * C115175 + C37950 * C152236 + C37949 * C152254) *
                 C67857) *
                C151956) *
               C3101 +
           (((C143561 + C143560 + C143559) * C67857 +
             (C144135 + C144136 + C144137) * C152068) *
                C151956 -
            ((C142645 + C142646 + C142647) * C152068 +
             (C142644 + C142643 + C142642) * C67857) *
                C4107) *
               C151914) *
              C152255 +
          ((((C37951 * C152254 + C37952 * C152236 + C41022 * C115175) * C67857 +
             (C143562 + C143563 + C143564) * C152068) *
                C151956 -
            ((C142650 + C142649 + C142648) * C152068 +
             (C37952 * C115175 + C37951 * C152236 +
              (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152254) *
                 C67857) *
                C4107) *
               C3101 +
           (((C142648 + C142649 + C142650) * C67857 +
             (C142651 + C142652 + C142653) * C152068) *
                C4107 -
            ((C144628 + C144629 + C144630) * C152068 +
             (C143564 + C143563 + C143562) * C67857) *
                C151956) *
               C151914) *
              C152240 +
          (((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C152254 +
              C37953 * C152236 + C37956 * C115175) *
                 C67857 +
             (C142654 + C142655 + C142656) * C152068) *
                C4107 -
            ((C143565 + C143566 + C143567) * C152068 +
             (C54593 * C115175 + C37956 * C152236 + C37953 * C152254) *
                 C67857) *
                C151956) *
               C3101 +
           (((C143567 + C143566 + C143565) * C67857 +
             (C32568 * C152254 + C37954 * C152236 +
              (C31628 * C10151 + C37932 + C37932 + C151791 * C10157) *
                  C115175) *
                 C152068) *
                C151956 -
            ((C142657 + C142658 + C142659) * C152068 +
             (C142656 + C142655 + C142654) * C67857) *
                C4107) *
               C151914) *
              C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152254 +
             C37949 * C152236 + C37950 * C115175) *
                C67857 +
            (C142642 + C142643 + C142644) * C152068) *
               C4107 -
           ((C143559 + C143560 + C143561) * C152068 +
            (C40513 * C115175 + C37950 * C152236 + C37949 * C152254) * C67857) *
               C151956) *
              C152265 +
          (((C143561 + C143560 + C143559) * C67857 +
            (C144135 + C144136 + C144137) * C152068) *
               C151956 -
           ((C142645 + C142646 + C142647) * C152068 +
            (C142644 + C142643 + C142642) * C67857) *
               C4107) *
              C152261 +
          (((C142647 + C142646 + C142645) * C67857 +
            (C143908 + C143909 + C143910) * C152068) *
               C4107 -
           ((C144825 + C144826 + C144827) * C152068 +
            (C144137 + C144136 + C144135) * C67857) *
               C151956) *
              C152249 +
          (((C144827 + C144826 + C144825) * C67857 +
            (C32999 * C152254 + C33000 * C152236 +
             (C31628 * C34345 + C34355 + C34355 + C151791 * C34347) * C115175) *
                C152068) *
               C151956 -
           ((C143911 + C143912 + C143913) * C152068 +
            (C143910 + C143909 + C143908) * C67857) *
               C4107) *
              C152224) *
         C151823) /
            (p * q * std::sqrt(p + q));
    d2ee[135] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152254 +
             C37949 * C152236 + C37950 * C115175) *
                C67857 +
            (C142642 + C142643 + C142644) * C152068) *
               C151869 * C1709 -
           ((C142645 + C142646 + C142647) * C152068 +
            (C142644 + C142643 + C142642) * C67857) *
               C151869 * C1710 +
           ((C142647 + C142646 + C142645) * C67857 +
            (C143908 + C143909 + C143910) * C152068) *
               C151869 * C1711 -
           ((C143911 + C143912 + C143913) * C152068 +
            (C143910 + C143909 + C143908) * C67857) *
               C151869 * C152224) *
              C152158 +
          (((C142648 + C142649 + C142650) * C67857 +
            (C142651 + C142652 + C142653) * C152068) *
               C151869 * C1710 -
           ((C142650 + C142649 + C142648) * C152068 +
            (C37952 * C115175 + C37951 * C152236 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152254) *
                C67857) *
               C151869 * C1709 -
           ((C144335 + C144336 + C144337) * C152068 +
            (C142653 + C142652 + C142651) * C67857) *
               C151869 * C1711 +
           ((C144337 + C144336 + C144335) * C67857 +
            (C31858 * C152254 + C33342 * C152236 +
             (C31628 * C25022 + C34069 + C34069 + C151791 * C25026) * C115175) *
                C152068) *
               C151869 * C152224) *
              C151834)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152254 +
             C37949 * C152236 + C37950 * C115175) *
                C67857 +
            (C142642 + C142643 + C142644) * C152068) *
               C151869 * C152172 -
           ((C142645 + C142646 + C142647) * C152068 +
            (C142644 + C142643 + C142642) * C67857) *
               C151869 * C151914) *
              C739 +
          (((C142648 + C142649 + C142650) * C67857 +
            (C142651 + C142652 + C142653) * C152068) *
               C151869 * C151914 -
           ((C142650 + C142649 + C142648) * C152068 +
            (C37952 * C115175 + C37951 * C152236 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152254) *
                C67857) *
               C151869 * C152172) *
              C740 +
          ((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C152254 +
             C37953 * C152236 + C37956 * C115175) *
                C67857 +
            (C142654 + C142655 + C142656) * C152068) *
               C151869 * C152172 -
           ((C142657 + C142658 + C142659) * C152068 +
            (C142656 + C142655 + C142654) * C67857) *
               C151869 * C151914) *
              C741 +
          (((C143072 + C143073 + C143074) * C67857 +
            (C32189 * C152254 + C38162 * C152236 +
             (C31628 * C1542 + C38363 + C38363 + C151791 * C1566) * C115175) *
                C152068) *
               C151869 * C151914 -
           ((C143074 + C143073 + C143072) * C152068 +
            (C54996 * C115175 + C38366 * C152236 +
             (C31628 * C145 + C31646 + C31646 + C151791 * C161) * C152254) *
                C67857) *
               C151869 * C152172) *
              C152218)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152254 +
              C37949 * C152236 + C37950 * C115175) *
                 C67857 +
             (C142642 + C142643 + C142644) * C152068) *
                C2215 -
            ((C143559 + C143560 + C143561) * C152068 +
             (C40513 * C115175 + C37950 * C152236 + C37949 * C152254) *
                 C67857) *
                C2216 +
            ((C37950 * C152254 + C40513 * C152236 + C40516 * C115175) * C67857 +
             (C144132 + C144133 + C144134) * C152068) *
                C152217) *
               C152172 +
           (((C143561 + C143560 + C143559) * C67857 +
             (C144135 + C144136 + C144137) * C152068) *
                C2216 -
            ((C142645 + C142646 + C142647) * C152068 +
             (C142644 + C142643 + C142642) * C67857) *
                C2215 -
            ((C144138 + C144139 + C144140) * C152068 +
             (C144134 + C144133 + C144132) * C67857) *
                C152217) *
               C151914) *
              C152158 +
          ((((C37951 * C152254 + C37952 * C152236 + C41022 * C115175) * C67857 +
             (C143562 + C143563 + C143564) * C152068) *
                C2216 -
            ((C142650 + C142649 + C142648) * C152068 +
             (C37952 * C115175 + C37951 * C152236 +
              (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152254) *
                 C67857) *
                C2215 -
            ((C145676 + C145677 + C145678) * C152068 +
             (C57627 * C115175 + C41022 * C152236 + C37952 * C152254) *
                 C67857) *
                C152217) *
               C152172 +
           (((C142648 + C142649 + C142650) * C67857 +
             (C142651 + C142652 + C142653) * C152068) *
                C2215 -
            ((C144628 + C144629 + C144630) * C152068 +
             (C143564 + C143563 + C143562) * C67857) *
                C2216 +
            ((C145678 + C145677 + C145676) * C67857 +
             (C34077 * C152254 + C40817 * C152236 +
              (C31628 * C26362 + C41019 + C41019 + C151791 * C26366) *
                  C115175) *
                 C152068) *
                C152217) *
               C151914) *
              C151834)) /
            (p * q * std::sqrt(p + q));
    d2ee[136] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152254 +
             C37949 * C152236 + C37950 * C115175) *
                C67857 +
            (C142642 + C142643 + C142644) * C152068) *
               C152173 -
           ((C143559 + C143560 + C143561) * C152068 +
            (C40513 * C115175 + C37950 * C152236 + C37949 * C152254) * C67857) *
               C151956) *
              C1709 +
          (((C143561 + C143560 + C143559) * C67857 +
            (C144135 + C144136 + C144137) * C152068) *
               C151956 -
           ((C142645 + C142646 + C142647) * C152068 +
            (C142644 + C142643 + C142642) * C67857) *
               C152173) *
              C1710 +
          (((C142647 + C142646 + C142645) * C67857 +
            (C143908 + C143909 + C143910) * C152068) *
               C152173 -
           ((C144825 + C144826 + C144827) * C152068 +
            (C144137 + C144136 + C144135) * C67857) *
               C151956) *
              C1711 +
          (((C144827 + C144826 + C144825) * C67857 +
            (C32999 * C152254 + C33000 * C152236 +
             (C31628 * C34345 + C34355 + C34355 + C151791 * C34347) * C115175) *
                C152068) *
               C151956 -
           ((C143911 + C143912 + C143913) * C152068 +
            (C143910 + C143909 + C143908) * C67857) *
               C152173) *
              C152224) *
         C151823) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152254 +
              C37949 * C152236 + C37950 * C115175) *
                 C67857 +
             (C142642 + C142643 + C142644) * C152068) *
                C152173 -
            ((C143559 + C143560 + C143561) * C152068 +
             (C40513 * C115175 + C37950 * C152236 + C37949 * C152254) *
                 C67857) *
                C151956) *
               C152172 +
           (((C143561 + C143560 + C143559) * C67857 +
             (C32562 * C152254 + C32997 * C152236 + C34363 * C115175) *
                 C152068) *
                C151956 -
            ((C142645 + C142646 + C142647) * C152068 +
             (C142644 + C142643 + C142642) * C67857) *
                C152173) *
               C151914) *
              C335 +
          ((((C37951 * C152254 + C37952 * C152236 + C41022 * C115175) * C67857 +
             (C143562 + C143563 + C143564) * C152068) *
                C151956 -
            ((C142650 + C142649 + C142648) * C152068 +
             (C37952 * C115175 + C37951 * C152236 +
              (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152254) *
                 C67857) *
                C152173) *
               C152172 +
           (((C142648 + C142649 + C142650) * C67857 +
             (C142651 + C142652 + C142653) * C152068) *
                C152173 -
            ((C40817 * C115175 + C34077 * C152236 + C32565 * C152254) *
                 C152068 +
             (C143564 + C143563 + C143562) * C67857) *
                C151956) *
               C151914) *
              C336 +
          (((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C152254 +
              C37953 * C152236 + C37956 * C115175) *
                 C67857 +
             (C142654 + C142655 + C142656) * C152068) *
                C152173 -
            ((C143565 + C143566 + C143567) * C152068 +
             (C54593 * C115175 + C37956 * C152236 + C37953 * C152254) *
                 C67857) *
                C151956) *
               C152172 +
           (((C143567 + C143566 + C143565) * C67857 +
             (C32568 * C152254 + C37954 * C152236 +
              (C31628 * C10151 + C37932 + C37932 + C151791 * C10157) *
                  C115175) *
                 C152068) *
                C151956 -
            ((C142657 + C142658 + C142659) * C152068 +
             (C142656 + C142655 + C142654) * C67857) *
                C152173) *
               C151914) *
              C152208)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152254 +
             C37949 * C152236 + C37950 * C115175) *
                C67857 +
            (C142642 + C142643 + C142644) * C152068) *
               C2814 -
           ((C143559 + C143560 + C143561) * C152068 +
            (C40513 * C115175 + C37950 * C152236 + C37949 * C152254) * C67857) *
               C2815 +
           ((C37950 * C152254 + C40513 * C152236 + C40516 * C115175) * C67857 +
            (C144132 + C144133 + C144134) * C152068) *
               C2816 -
           ((C146067 + C146068 + C146069) * C152068 +
            (C57128 * C115175 + C40516 * C152236 + C40513 * C152254) * C67857) *
               C152230) *
              C152172 +
          (((C143561 + C143560 + C143559) * C67857 +
            (C144135 + C144136 + C144137) * C152068) *
               C2815 -
           ((C142645 + C142646 + C142647) * C152068 +
            (C142644 + C142643 + C142642) * C67857) *
               C2814 -
           ((C144138 + C144139 + C144140) * C152068 +
            (C144134 + C144133 + C144132) * C67857) *
               C2816 +
           ((C146069 + C146068 + C146067) * C67857 +
            (C34363 * C152254 + C40514 * C152236 +
             (C31628 * C40488 + C40504 + C40504 + C151791 * C40492) * C115175) *
                C152068) *
               C152230) *
              C151914) *
         C151823) /
            (p * q * std::sqrt(p + q));
    d2ee[137] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152254 +
                C37949 * C152236 + C37950 * C115175) *
                   C67857 +
               (C31851 * C152254 + C32563 * C152236 + C32996 * C115175) *
                   C152068) *
                  C151869 * C151851 * C129 -
              ((C34078 * C115175 + C32564 * C152236 + C31855 * C152254) *
                   C152068 +
               (C37952 * C115175 + C37951 * C152236 +
                (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152254) *
                   C67857) *
                  C151869 * C151851 * C130 +
              (((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C152254 +
                C37953 * C152236 + C37956 * C115175) *
                   C67857 +
               (C31859 * C152254 + C32569 * C152236 + C37955 * C115175) *
                   C152068) *
                  C151869 * C151851 * C131 -
              ((C54794 * C115175 + C38161 * C152236 + C32188 * C152254) *
                   C152068 +
               (C54996 * C115175 + C38366 * C152236 +
                (C31628 * C145 + C31646 + C31646 + C151791 * C161) * C152254) *
                   C67857) *
                  C151869 * C151851 * C132 +
              (((C31628 * C146 + C31647 + C31647 + C151791 * C162) * C152254 +
                (C31628 * C555 + C37454 + C37454 + C151791 * C579) * C152236 +
                (C31628 * C556 + C54126 + C54126 + C151791 * C580) * C115175) *
                   C67857 +
               ((C31628 * C346 + C31648 + C31648 + C151791 * C370) * C152254 +
                (C31628 * C1087 + C37455 + C37455 + C151791 * C1099) * C152236 +
                (C31628 * C2677 + C54127 + C54127 + C151791 * C2679) *
                    C115175) *
                   C152068) *
                  C151869 * C151851 * C133) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152254 +
                 C37949 * C152236 + C37950 * C115175) *
                    C67857 +
                (C142642 + C142643 + C142644) * C152068) *
                   C151869 * C152258 -
               ((C142645 + C142646 + C142647) * C152068 +
                (C142644 + C142643 + C142642) * C67857) *
                   C151869 * C152244 +
               ((C142647 + C142646 + C142645) * C67857 +
                (C31853 * C152254 + C32561 * C152236 + C32998 * C115175) *
                    C152068) *
                   C151869 * C152214) *
                  C335 +
              (((C142648 + C142649 + C142650) * C67857 +
                (C142651 + C142652 + C142653) * C152068) *
                   C151869 * C152244 -
               ((C142650 + C142649 + C142648) * C152068 +
                (C37952 * C115175 + C37951 * C152236 +
                 (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152254) *
                    C67857) *
                   C151869 * C152258 -
               ((C34076 * C115175 + C32566 * C152236 + C31857 * C152254) *
                    C152068 +
                (C142653 + C142652 + C142651) * C67857) *
                   C151869 * C152214) *
                  C336 +
              ((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C152254 +
                 C37953 * C152236 + C37956 * C115175) *
                    C67857 +
                (C142654 + C142655 + C142656) * C152068) *
                   C151869 * C152258 -
               ((C142657 + C142658 + C142659) * C152068 +
                (C142656 + C142655 + C142654) * C67857) *
                   C151869 * C152244 +
               ((C142659 + C142658 + C142657) * C67857 +
                (C31861 * C152254 + C32567 * C152236 +
                 (C31628 * C8066 + C32044 + C32044 + C151791 * C8072) *
                     C115175) *
                    C152068) *
                   C151869 * C152214) *
                  C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152254 +
             C37949 * C152236 + C37950 * C115175) *
                C67857 +
            (C142642 + C142643 + C142644) * C152068) *
               C152259 -
           ((C34364 * C115175 + C32996 * C152236 + C32563 * C152254) * C152068 +
            (C40513 * C115175 + C37950 * C152236 + C37949 * C152254) * C67857) *
               C152246 +
           ((C37950 * C152254 + C40513 * C152236 + C40516 * C115175) * C67857 +
            (C32996 * C152254 + C34364 * C152236 + C40515 * C115175) *
                C152068) *
               C152217) *
              C151851 * C335 +
          (((C37951 * C152254 + C37952 * C152236 + C41022 * C115175) * C67857 +
            (C32564 * C152254 + C34078 * C152236 + C40818 * C115175) *
                C152068) *
               C152246 -
           ((C142650 + C142649 + C142648) * C152068 +
            (C37952 * C115175 + C37951 * C152236 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152254) *
                C67857) *
               C152259 -
           ((C57425 * C115175 + C40818 * C152236 + C34078 * C152254) * C152068 +
            (C57627 * C115175 + C41022 * C152236 + C37952 * C152254) * C67857) *
               C152217) *
              C151851 * C336 +
          ((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C152254 +
             C37953 * C152236 + C37956 * C115175) *
                C67857 +
            (C142654 + C142655 + C142656) * C152068) *
               C152259 -
           ((C54592 * C115175 + C37955 * C152236 + C32569 * C152254) * C152068 +
            (C54593 * C115175 + C37956 * C152236 + C37953 * C152254) * C67857) *
               C152246 +
           ((C37956 * C152254 + C54593 * C152236 + C62637 * C115175) * C67857 +
            (C37955 * C152254 + C54592 * C152236 +
             (C31628 * C9428 + C54587 + C54587 + C151791 * C9434) * C115175) *
                C152068) *
               C152217) *
              C151851 * C152208)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152254 +
             C37949 * C152236 + C37950 * C115175) *
                C67857 +
            (C142642 + C142643 + C142644) * C152068) *
               C151869 * C1259 -
           ((C142645 + C142646 + C142647) * C152068 +
            (C142644 + C142643 + C142642) * C67857) *
               C151869 * C1260 +
           ((C142647 + C142646 + C142645) * C67857 +
            (C31853 * C152254 + C32561 * C152236 + C32998 * C115175) *
                C152068) *
               C151869 * C152214) *
              C152255 +
          (((C142648 + C142649 + C142650) * C67857 +
            (C142651 + C142652 + C142653) * C152068) *
               C151869 * C1260 -
           ((C142650 + C142649 + C142648) * C152068 +
            (C37952 * C115175 + C37951 * C152236 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152254) *
                C67857) *
               C151869 * C1259 -
           ((C34076 * C115175 + C32566 * C152236 + C31857 * C152254) * C152068 +
            (C142653 + C142652 + C142651) * C67857) *
               C151869 * C152214) *
              C152240 +
          ((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C152254 +
             C37953 * C152236 + C37956 * C115175) *
                C67857 +
            (C142654 + C142655 + C142656) * C152068) *
               C151869 * C1259 -
           ((C142657 + C142658 + C142659) * C152068 +
            (C142656 + C142655 + C142654) * C67857) *
               C151869 * C1260 +
           ((C142659 + C142658 + C142657) * C67857 +
            (C31861 * C152254 + C32567 * C152236 +
             (C31628 * C8066 + C32044 + C32044 + C151791 * C8072) * C115175) *
                C152068) *
               C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152254 +
            C37949 * C152236 + C37950 * C115175) *
               C67857 +
           (C142642 + C142643 + C142644) * C152068) *
              C151869 * C1347 -
          ((C142645 + C142646 + C142647) * C152068 +
           (C142644 + C142643 + C142642) * C67857) *
              C151869 * C1348 +
          ((C142647 + C142646 + C142645) * C67857 +
           (C143908 + C143909 + C143910) * C152068) *
              C151869 * C1349 -
          ((C143911 + C143912 + C143913) * C152068 +
           (C143910 + C143909 + C143908) * C67857) *
              C151869 * C1350 +
          ((C143913 + C143912 + C143911) * C67857 +
           (C32820 * C152254 + C33482 * C152236 +
            (C31628 * C32969 + C32985 + C32985 + C151791 * C32971) * C115175) *
               C152068) *
              C151869 * C1351) *
         C151823) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152254 +
             C37949 * C152236 + C37950 * C115175) *
                C67857 +
            (C142642 + C142643 + C142644) * C152068) *
               C152259 -
           ((C143559 + C143560 + C143561) * C152068 +
            (C40513 * C115175 + C37950 * C152236 + C37949 * C152254) * C67857) *
               C152246 +
           ((C37950 * C152254 + C40513 * C152236 + C40516 * C115175) * C67857 +
            (C144132 + C144133 + C144134) * C152068) *
               C152217) *
              C1259 +
          (((C143561 + C143560 + C143559) * C67857 +
            (C144135 + C144136 + C144137) * C152068) *
               C152246 -
           ((C142645 + C142646 + C142647) * C152068 +
            (C142644 + C142643 + C142642) * C67857) *
               C152259 -
           ((C144138 + C144139 + C144140) * C152068 +
            (C144134 + C144133 + C144132) * C67857) *
               C152217) *
              C1260 +
          (((C142647 + C142646 + C142645) * C67857 +
            (C143908 + C143909 + C143910) * C152068) *
               C152259 -
           ((C34362 * C115175 + C32998 * C152236 + C32561 * C152254) * C152068 +
            (C144137 + C144136 + C144135) * C67857) *
               C152246 +
           ((C144140 + C144139 + C144138) * C67857 +
            (C32998 * C152254 + C34362 * C152236 +
             (C31628 * C33857 + C33868 + C33868 + C151791 * C33859) * C115175) *
                C152068) *
               C152217) *
              C152214) *
         C151823) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152254 +
             C37949 * C152236 + C37950 * C115175) *
                C67857 +
            (C142642 + C142643 + C142644) * C152068) *
               C2215 -
           ((C143559 + C143560 + C143561) * C152068 +
            (C40513 * C115175 + C37950 * C152236 + C37949 * C152254) * C67857) *
               C2216 +
           ((C37950 * C152254 + C40513 * C152236 + C40516 * C115175) * C67857 +
            (C144132 + C144133 + C144134) * C152068) *
               C152217) *
              C151851 * C152255 +
          (((C37951 * C152254 + C37952 * C152236 + C41022 * C115175) * C67857 +
            (C143562 + C143563 + C143564) * C152068) *
               C2216 -
           ((C142650 + C142649 + C142648) * C152068 +
            (C37952 * C115175 + C37951 * C152236 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152254) *
                C67857) *
               C2215 -
           ((C57425 * C115175 + C40818 * C152236 + C34078 * C152254) * C152068 +
            (C57627 * C115175 + C41022 * C152236 + C37952 * C152254) * C67857) *
               C152217) *
              C151851 * C152240 +
          ((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C152254 +
             C37953 * C152236 + C37956 * C115175) *
                C67857 +
            (C142654 + C142655 + C142656) * C152068) *
               C2215 -
           ((C143565 + C143566 + C143567) * C152068 +
            (C54593 * C115175 + C37956 * C152236 + C37953 * C152254) * C67857) *
               C2216 +
           ((C37956 * C152254 + C54593 * C152236 + C62637 * C115175) * C67857 +
            (C37955 * C152254 + C54592 * C152236 +
             (C31628 * C9428 + C54587 + C54587 + C151791 * C9434) * C115175) *
                C152068) *
               C152217) *
              C151851 * C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152254 +
             C37949 * C152236 + C37950 * C115175) *
                C67857 +
            (C142642 + C142643 + C142644) * C152068) *
               C2215 -
           ((C143559 + C143560 + C143561) * C152068 +
            (C40513 * C115175 + C37950 * C152236 + C37949 * C152254) * C67857) *
               C2216 +
           ((C37950 * C152254 + C40513 * C152236 + C40516 * C115175) * C67857 +
            (C144132 + C144133 + C144134) * C152068) *
               C152217) *
              C152258 +
          (((C143561 + C143560 + C143559) * C67857 +
            (C144135 + C144136 + C144137) * C152068) *
               C2216 -
           ((C142645 + C142646 + C142647) * C152068 +
            (C142644 + C142643 + C142642) * C67857) *
               C2215 -
           ((C144138 + C144139 + C144140) * C152068 +
            (C144134 + C144133 + C144132) * C67857) *
               C152217) *
              C152244 +
          (((C142647 + C142646 + C142645) * C67857 +
            (C143908 + C143909 + C143910) * C152068) *
               C2215 -
           ((C144825 + C144826 + C144827) * C152068 +
            (C144137 + C144136 + C144135) * C67857) *
               C2216 +
           ((C144140 + C144139 + C144138) * C67857 +
            (C32998 * C152254 + C34362 * C152236 +
             (C31628 * C33857 + C33868 + C33868 + C151791 * C33859) * C115175) *
                C152068) *
               C152217) *
              C152214) *
         C151823) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152254 +
            C37949 * C152236 + C37950 * C115175) *
               C67857 +
           (C142642 + C142643 + C142644) * C152068) *
              C2446 -
          ((C143559 + C143560 + C143561) * C152068 +
           (C40513 * C115175 + C37950 * C152236 + C37949 * C152254) * C67857) *
              C2447 +
          ((C37950 * C152254 + C40513 * C152236 + C40516 * C115175) * C67857 +
           (C144132 + C144133 + C144134) * C152068) *
              C2448 -
          ((C57127 * C115175 + C40515 * C152236 + C34364 * C152254) * C152068 +
           (C57128 * C115175 + C40516 * C152236 + C40513 * C152254) * C67857) *
              C2449 +
          ((C40516 * C152254 + C57128 * C152236 + C64308 * C115175) * C67857 +
           (C40515 * C152254 + C57127 * C152236 +
            (C31628 * C57113 + C57122 + C57122 + C151791 * C57115) * C115175) *
               C152068) *
              C2450) *
         C151851 * C151823) /
            (p * q * std::sqrt(p + q));
    d2ee[138] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152254 +
              C37949 * C152236 + C37950 * C115175) *
                 C67857 +
             (C142642 + C142643 + C142644) * C152068) *
                C152173 -
            ((C143559 + C143560 + C143561) * C152068 +
             (C40513 * C115175 + C37950 * C152236 + C37949 * C152254) *
                 C67857) *
                C151956) *
               C1259 +
           (((C143561 + C143560 + C143559) * C67857 +
             (C144135 + C144136 + C144137) * C152068) *
                C151956 -
            ((C142645 + C142646 + C142647) * C152068 +
             (C142644 + C142643 + C142642) * C67857) *
                C152173) *
               C1260 +
           (((C142647 + C142646 + C142645) * C67857 +
             (C143908 + C143909 + C143910) * C152068) *
                C152173 -
            ((C34362 * C115175 + C32998 * C152236 + C32561 * C152254) *
                 C152068 +
             (C144137 + C144136 + C144135) * C67857) *
                C151956) *
               C152214) *
              C152158 +
          ((((C37951 * C152254 + C37952 * C152236 + C41022 * C115175) * C67857 +
             (C143562 + C143563 + C143564) * C152068) *
                C151956 -
            ((C142650 + C142649 + C142648) * C152068 +
             (C37952 * C115175 + C37951 * C152236 +
              (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152254) *
                 C67857) *
                C152173) *
               C1259 +
           (((C142648 + C142649 + C142650) * C67857 +
             (C142651 + C142652 + C142653) * C152068) *
                C152173 -
            ((C144628 + C144629 + C144630) * C152068 +
             (C143564 + C143563 + C143562) * C67857) *
                C151956) *
               C1260 +
           (((C144630 + C144629 + C144628) * C67857 +
             (C32566 * C152254 + C34076 * C152236 +
              (C31628 * C27086 + C34215 + C34215 + C151791 * C27090) *
                  C115175) *
                 C152068) *
                C151956 -
            ((C144335 + C144336 + C144337) * C152068 +
             (C142653 + C142652 + C142651) * C67857) *
                C152173) *
               C152214) *
              C151834)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152254 +
             C37949 * C152236 + C37950 * C115175) *
                C67857 +
            (C142642 + C142643 + C142644) * C152068) *
               C152173 -
           ((C34364 * C115175 + C32996 * C152236 + C32563 * C152254) * C152068 +
            (C40513 * C115175 + C37950 * C152236 + C37949 * C152254) * C67857) *
               C151956) *
              C151851 * C739 +
          (((C37951 * C152254 + C37952 * C152236 + C41022 * C115175) * C67857 +
            (C32564 * C152254 + C34078 * C152236 + C40818 * C115175) *
                C152068) *
               C151956 -
           ((C142650 + C142649 + C142648) * C152068 +
            (C37952 * C115175 + C37951 * C152236 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152254) *
                C67857) *
               C152173) *
              C151851 * C740 +
          ((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C152254 +
             C37953 * C152236 + C37956 * C115175) *
                C67857 +
            (C142654 + C142655 + C142656) * C152068) *
               C152173 -
           ((C54592 * C115175 + C37955 * C152236 + C32569 * C152254) * C152068 +
            (C54593 * C115175 + C37956 * C152236 + C37953 * C152254) * C67857) *
               C151956) *
              C151851 * C741 +
          (((C38366 * C152254 + C54996 * C152236 + C62903 * C115175) * C67857 +
            (C38161 * C152254 + C54794 * C152236 +
             (C31628 * C2958 + C54993 + C54993 + C151791 * C2966) * C115175) *
                C152068) *
               C151956 -
           ((C143074 + C143073 + C143072) * C152068 +
            (C54996 * C115175 + C38366 * C152236 +
             (C31628 * C145 + C31646 + C31646 + C151791 * C161) * C152254) *
                C67857) *
               C152173) *
              C151851 * C152218)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152254 +
             C37949 * C152236 + C37950 * C115175) *
                C67857 +
            (C142642 + C142643 + C142644) * C152068) *
               C2814 -
           ((C143559 + C143560 + C143561) * C152068 +
            (C40513 * C115175 + C37950 * C152236 + C37949 * C152254) * C67857) *
               C2815 +
           ((C37950 * C152254 + C40513 * C152236 + C40516 * C115175) * C67857 +
            (C144132 + C144133 + C144134) * C152068) *
               C2816 -
           ((C57127 * C115175 + C40515 * C152236 + C34364 * C152254) * C152068 +
            (C57128 * C115175 + C40516 * C152236 + C40513 * C152254) * C67857) *
               C152230) *
              C151851 * C152158 +
          (((C37951 * C152254 + C37952 * C152236 + C41022 * C115175) * C67857 +
            (C143562 + C143563 + C143564) * C152068) *
               C2815 -
           ((C142650 + C142649 + C142648) * C152068 +
            (C37952 * C115175 + C37951 * C152236 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152254) *
                C67857) *
               C2814 -
           ((C145676 + C145677 + C145678) * C152068 +
            (C57627 * C115175 + C41022 * C152236 + C37952 * C152254) * C67857) *
               C2816 +
           ((C41022 * C152254 + C57627 * C152236 + C64638 * C115175) * C67857 +
            (C40818 * C152254 + C57425 * C152236 +
             (C31628 * C49559 + C57624 + C57624 + C151791 * C49561) * C115175) *
                C152068) *
               C152230) *
              C151851 * C151834)) /
            (p * q * std::sqrt(p + q));
    d2ee[139] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152254 +
             C37949 * C152236 + C37950 * C115175) *
                C67857 +
            (C142642 + C142643 + C142644) * C152068) *
               C151869 * C152258 -
           ((C142645 + C142646 + C142647) * C152068 +
            (C142644 + C142643 + C142642) * C67857) *
               C151869 * C152244 +
           ((C142647 + C142646 + C142645) * C67857 +
            (C31853 * C152254 + C32561 * C152236 + C32998 * C115175) *
                C152068) *
               C151869 * C152214) *
              C335 +
          (((C142648 + C142649 + C142650) * C67857 +
            (C142651 + C142652 + C142653) * C152068) *
               C151869 * C152244 -
           ((C142650 + C142649 + C142648) * C152068 +
            (C37952 * C115175 + C37951 * C152236 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152254) *
                C67857) *
               C151869 * C152258 -
           ((C34076 * C115175 + C32566 * C152236 + C31857 * C152254) * C152068 +
            (C142653 + C142652 + C142651) * C67857) *
               C151869 * C152214) *
              C336 +
          ((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C152254 +
             C37953 * C152236 + C37956 * C115175) *
                C67857 +
            (C142654 + C142655 + C142656) * C152068) *
               C151869 * C152258 -
           ((C142657 + C142658 + C142659) * C152068 +
            (C142656 + C142655 + C142654) * C67857) *
               C151869 * C152244 +
           ((C142659 + C142658 + C142657) * C67857 +
            (C31861 * C152254 + C32567 * C152236 +
             (C31628 * C8066 + C32044 + C32044 + C151791 * C8072) * C115175) *
                C152068) *
               C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152254 +
            C37949 * C152236 + C37950 * C115175) *
               C67857 +
           (C31851 * C152254 + C32563 * C152236 + C32996 * C115175) * C152068) *
              C151869 * C151851 * C129 -
          ((C34078 * C115175 + C32564 * C152236 + C31855 * C152254) * C152068 +
           (C37952 * C115175 + C37951 * C152236 +
            (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152254) *
               C67857) *
              C151869 * C151851 * C130 +
          (((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C152254 +
            C37953 * C152236 + C37956 * C115175) *
               C67857 +
           (C31859 * C152254 + C32569 * C152236 + C37955 * C115175) * C152068) *
              C151869 * C151851 * C131 -
          ((C54794 * C115175 + C38161 * C152236 + C32188 * C152254) * C152068 +
           (C54996 * C115175 + C38366 * C152236 +
            (C31628 * C145 + C31646 + C31646 + C151791 * C161) * C152254) *
               C67857) *
              C151869 * C151851 * C132 +
          (((C31628 * C146 + C31647 + C31647 + C151791 * C162) * C152254 +
            (C31628 * C555 + C37454 + C37454 + C151791 * C579) * C152236 +
            (C31628 * C556 + C54126 + C54126 + C151791 * C580) * C115175) *
               C67857 +
           ((C31628 * C346 + C31648 + C31648 + C151791 * C370) * C152254 +
            (C31628 * C1087 + C37455 + C37455 + C151791 * C1099) * C152236 +
            (C31628 * C2677 + C54127 + C54127 + C151791 * C2679) * C115175) *
               C152068) *
              C151869 * C151851 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152254 +
             C37949 * C152236 + C37950 * C115175) *
                C67857 +
            (C142642 + C142643 + C142644) * C152068) *
               C151869 * C1259 -
           ((C142645 + C142646 + C142647) * C152068 +
            (C142644 + C142643 + C142642) * C67857) *
               C151869 * C1260 +
           ((C142647 + C142646 + C142645) * C67857 +
            (C31853 * C152254 + C32561 * C152236 + C32998 * C115175) *
                C152068) *
               C151869 * C152214) *
              C152255 +
          (((C142648 + C142649 + C142650) * C67857 +
            (C142651 + C142652 + C142653) * C152068) *
               C151869 * C1260 -
           ((C142650 + C142649 + C142648) * C152068 +
            (C37952 * C115175 + C37951 * C152236 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152254) *
                C67857) *
               C151869 * C1259 -
           ((C34076 * C115175 + C32566 * C152236 + C31857 * C152254) * C152068 +
            (C142653 + C142652 + C142651) * C67857) *
               C151869 * C152214) *
              C152240 +
          ((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C152254 +
             C37953 * C152236 + C37956 * C115175) *
                C67857 +
            (C142654 + C142655 + C142656) * C152068) *
               C151869 * C1259 -
           ((C142657 + C142658 + C142659) * C152068 +
            (C142656 + C142655 + C142654) * C67857) *
               C151869 * C1260 +
           ((C142659 + C142658 + C142657) * C67857 +
            (C31861 * C152254 + C32567 * C152236 +
             (C31628 * C8066 + C32044 + C32044 + C151791 * C8072) * C115175) *
                C152068) *
               C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152254 +
            C37949 * C152236 + C37950 * C115175) *
               C67857 +
           (C142642 + C142643 + C142644) * C152068) *
              C151869 * C1347 -
          ((C142645 + C142646 + C142647) * C152068 +
           (C142644 + C142643 + C142642) * C67857) *
              C151869 * C1348 +
          ((C142647 + C142646 + C142645) * C67857 +
           (C143908 + C143909 + C143910) * C152068) *
              C151869 * C1349 -
          ((C143911 + C143912 + C143913) * C152068 +
           (C143910 + C143909 + C143908) * C67857) *
              C151869 * C1350 +
          ((C143913 + C143912 + C143911) * C67857 +
           (C32820 * C152254 + C33482 * C152236 +
            (C31628 * C32969 + C32985 + C32985 + C151791 * C32971) * C115175) *
               C152068) *
              C151869 * C1351) *
         C151823) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152254 +
             C37949 * C152236 + C37950 * C115175) *
                C67857 +
            (C142642 + C142643 + C142644) * C152068) *
               C2215 -
           ((C143559 + C143560 + C143561) * C152068 +
            (C40513 * C115175 + C37950 * C152236 + C37949 * C152254) * C67857) *
               C2216 +
           ((C37950 * C152254 + C40513 * C152236 + C40516 * C115175) * C67857 +
            (C144132 + C144133 + C144134) * C152068) *
               C152217) *
              C151851 * C152255 +
          (((C37951 * C152254 + C37952 * C152236 + C41022 * C115175) * C67857 +
            (C143562 + C143563 + C143564) * C152068) *
               C2216 -
           ((C142650 + C142649 + C142648) * C152068 +
            (C37952 * C115175 + C37951 * C152236 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152254) *
                C67857) *
               C2215 -
           ((C57425 * C115175 + C40818 * C152236 + C34078 * C152254) * C152068 +
            (C57627 * C115175 + C41022 * C152236 + C37952 * C152254) * C67857) *
               C152217) *
              C151851 * C152240 +
          ((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C152254 +
             C37953 * C152236 + C37956 * C115175) *
                C67857 +
            (C142654 + C142655 + C142656) * C152068) *
               C2215 -
           ((C143565 + C143566 + C143567) * C152068 +
            (C54593 * C115175 + C37956 * C152236 + C37953 * C152254) * C67857) *
               C2216 +
           ((C37956 * C152254 + C54593 * C152236 + C62637 * C115175) * C67857 +
            (C37955 * C152254 + C54592 * C152236 +
             (C31628 * C9428 + C54587 + C54587 + C151791 * C9434) * C115175) *
                C152068) *
               C152217) *
              C151851 * C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152254 +
             C37949 * C152236 + C37950 * C115175) *
                C67857 +
            (C142642 + C142643 + C142644) * C152068) *
               C2215 -
           ((C143559 + C143560 + C143561) * C152068 +
            (C40513 * C115175 + C37950 * C152236 + C37949 * C152254) * C67857) *
               C2216 +
           ((C37950 * C152254 + C40513 * C152236 + C40516 * C115175) * C67857 +
            (C144132 + C144133 + C144134) * C152068) *
               C152217) *
              C152258 +
          (((C143561 + C143560 + C143559) * C67857 +
            (C144135 + C144136 + C144137) * C152068) *
               C2216 -
           ((C142645 + C142646 + C142647) * C152068 +
            (C142644 + C142643 + C142642) * C67857) *
               C2215 -
           ((C144138 + C144139 + C144140) * C152068 +
            (C144134 + C144133 + C144132) * C67857) *
               C152217) *
              C152244 +
          (((C142647 + C142646 + C142645) * C67857 +
            (C143908 + C143909 + C143910) * C152068) *
               C2215 -
           ((C144825 + C144826 + C144827) * C152068 +
            (C144137 + C144136 + C144135) * C67857) *
               C2216 +
           ((C144140 + C144139 + C144138) * C67857 +
            (C32998 * C152254 + C34362 * C152236 +
             (C31628 * C33857 + C33868 + C33868 + C151791 * C33859) * C115175) *
                C152068) *
               C152217) *
              C152214) *
         C151823) /
            (p * q * std::sqrt(p + q));
    d2ee[140] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152254 +
              C37949 * C152236 + C37950 * C115175) *
                 C67857 +
             (C142642 + C142643 + C142644) * C152068) *
                C4107 -
            ((C143559 + C143560 + C143561) * C152068 +
             (C40513 * C115175 + C37950 * C152236 + C37949 * C152254) *
                 C67857) *
                C151956) *
               C152172 +
           (((C143561 + C143560 + C143559) * C67857 +
             (C144135 + C144136 + C144137) * C152068) *
                C151956 -
            ((C142645 + C142646 + C142647) * C152068 +
             (C142644 + C142643 + C142642) * C67857) *
                C4107) *
               C151914) *
              C151828 +
          ((((C37951 * C152254 + C37952 * C152236 + C41022 * C115175) * C67857 +
             (C143562 + C143563 + C143564) * C152068) *
                C151956 -
            ((C142650 + C142649 + C142648) * C152068 +
             (C37952 * C115175 + C37951 * C152236 +
              (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152254) *
                 C67857) *
                C4107) *
               C152172 +
           (((C142648 + C142649 + C142650) * C67857 +
             (C142651 + C142652 + C142653) * C152068) *
                C4107 -
            ((C144628 + C144629 + C144630) * C152068 +
             (C143564 + C143563 + C143562) * C67857) *
                C151956) *
               C151914) *
              C151837 +
          (((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C152254 +
              C37953 * C152236 + C37956 * C115175) *
                 C67857 +
             (C142654 + C142655 + C142656) * C152068) *
                C4107 -
            ((C143565 + C143566 + C143567) * C152068 +
             (C54593 * C115175 + C37956 * C152236 + C37953 * C152254) *
                 C67857) *
                C151956) *
               C152172 +
           (((C143567 + C143566 + C143565) * C67857 +
             (C32568 * C152254 + C37954 * C152236 +
              (C31628 * C10151 + C37932 + C37932 + C151791 * C10157) *
                  C115175) *
                 C152068) *
                C151956 -
            ((C142657 + C142658 + C142659) * C152068 +
             (C142656 + C142655 + C142654) * C67857) *
                C4107) *
               C151914) *
              C3588)) /
        (p * q * std::sqrt(p + q));
    d2ee[141] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152254 +
              C37949 * C152236 + C37950 * C115175) *
                 C67857 +
             (C142642 + C142643 + C142644) * C152068) *
                C151952 -
            ((C143559 + C143560 + C143561) * C152068 +
             (C40513 * C115175 + C37950 * C152236 + C37949 * C152254) *
                 C67857) *
                C151959 +
            ((C37950 * C152254 + C40513 * C152236 + C40516 * C115175) * C67857 +
             (C144132 + C144133 + C144134) * C152068) *
                C4779) *
               C152172 +
           (((C143561 + C143560 + C143559) * C67857 +
             (C144135 + C144136 + C144137) * C152068) *
                C151959 -
            ((C142645 + C142646 + C142647) * C152068 +
             (C142644 + C142643 + C142642) * C67857) *
                C151952 -
            ((C144138 + C144139 + C144140) * C152068 +
             (C144134 + C144133 + C144132) * C67857) *
                C4779) *
               C151914) *
              C3241 +
          ((((C37951 * C152254 + C37952 * C152236 + C41022 * C115175) * C67857 +
             (C143562 + C143563 + C143564) * C152068) *
                C151959 -
            ((C142650 + C142649 + C142648) * C152068 +
             (C37952 * C115175 + C37951 * C152236 +
              (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152254) *
                 C67857) *
                C151952 -
            ((C145676 + C145677 + C145678) * C152068 +
             (C57627 * C115175 + C41022 * C152236 + C37952 * C152254) *
                 C67857) *
                C4779) *
               C152172 +
           (((C142648 + C142649 + C142650) * C67857 +
             (C142651 + C142652 + C142653) * C152068) *
                C151952 -
            ((C144628 + C144629 + C144630) * C152068 +
             (C143564 + C143563 + C143562) * C67857) *
                C151959 +
            ((C145678 + C145677 + C145676) * C67857 +
             (C34077 * C152254 + C40817 * C152236 +
              (C31628 * C26362 + C41019 + C41019 + C151791 * C26366) *
                  C115175) *
                 C152068) *
                C4779) *
               C151914) *
              C151834)) /
        (p * q * std::sqrt(p + q));
    d2ee[142] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152254 +
              C37949 * C152236 + C37950 * C115175) *
                 C67857 +
             (C142642 + C142643 + C142644) * C152068) *
                C4107 -
            ((C143559 + C143560 + C143561) * C152068 +
             (C40513 * C115175 + C37950 * C152236 + C37949 * C152254) *
                 C67857) *
                C151956) *
               C152258 +
           (((C143561 + C143560 + C143559) * C67857 +
             (C144135 + C144136 + C144137) * C152068) *
                C151956 -
            ((C142645 + C142646 + C142647) * C152068 +
             (C142644 + C142643 + C142642) * C67857) *
                C4107) *
               C152244 +
           (((C142647 + C142646 + C142645) * C67857 +
             (C143908 + C143909 + C143910) * C152068) *
                C4107 -
            ((C144825 + C144826 + C144827) * C152068 +
             (C144137 + C144136 + C144135) * C67857) *
                C151956) *
               C152214) *
              C3241 +
          ((((C37951 * C152254 + C37952 * C152236 + C41022 * C115175) * C67857 +
             (C143562 + C143563 + C143564) * C152068) *
                C151956 -
            ((C142650 + C142649 + C142648) * C152068 +
             (C37952 * C115175 + C37951 * C152236 +
              (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152254) *
                 C67857) *
                C4107) *
               C152258 +
           (((C142648 + C142649 + C142650) * C67857 +
             (C142651 + C142652 + C142653) * C152068) *
                C4107 -
            ((C144628 + C144629 + C144630) * C152068 +
             (C143564 + C143563 + C143562) * C67857) *
                C151956) *
               C152244 +
           (((C144630 + C144629 + C144628) * C67857 +
             (C32566 * C152254 + C34076 * C152236 +
              (C31628 * C27086 + C34215 + C34215 + C151791 * C27090) *
                  C115175) *
                 C152068) *
                C151956 -
            ((C144335 + C144336 + C144337) * C152068 +
             (C142653 + C142652 + C142651) * C67857) *
                C4107) *
               C152214) *
              C151834)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152254 +
             C37949 * C152236 + C37950 * C115175) *
                C67857 +
            (C142642 + C142643 + C142644) * C152068) *
               C4107 -
           ((C143559 + C143560 + C143561) * C152068 +
            (C40513 * C115175 + C37950 * C152236 + C37949 * C152254) * C67857) *
               C151956) *
              C151851 * C152264 +
          (((C37951 * C152254 + C37952 * C152236 + C41022 * C115175) * C67857 +
            (C143562 + C143563 + C143564) * C152068) *
               C151956 -
           ((C142650 + C142649 + C142648) * C152068 +
            (C37952 * C115175 + C37951 * C152236 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152254) *
                C67857) *
               C4107) *
              C151851 * C152257 +
          ((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C152254 +
             C37953 * C152236 + C37956 * C115175) *
                C67857 +
            (C142654 + C142655 + C142656) * C152068) *
               C4107 -
           ((C143565 + C143566 + C143567) * C152068 +
            (C54593 * C115175 + C37956 * C152236 + C37953 * C152254) * C67857) *
               C151956) *
              C151851 * C152242 +
          (((C38366 * C152254 + C54996 * C152236 + C62903 * C115175) * C67857 +
            (C38161 * C152254 + C54794 * C152236 +
             (C31628 * C2958 + C54993 + C54993 + C151791 * C2966) * C115175) *
                C152068) *
               C151956 -
           ((C143074 + C143073 + C143072) * C152068 +
            (C54996 * C115175 + C38366 * C152236 +
             (C31628 * C145 + C31646 + C31646 + C151791 * C161) * C152254) *
                C67857) *
               C4107) *
              C151851 * C152218)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152254 +
             C37949 * C152236 + C37950 * C115175) *
                C67857 +
            (C142642 + C142643 + C142644) * C152068) *
               C152266 -
           ((C143559 + C143560 + C143561) * C152068 +
            (C40513 * C115175 + C37950 * C152236 + C37949 * C152254) * C67857) *
               C152263 +
           ((C37950 * C152254 + C40513 * C152236 + C40516 * C115175) * C67857 +
            (C144132 + C144133 + C144134) * C152068) *
               C152252 -
           ((C146067 + C146068 + C146069) * C152068 +
            (C57128 * C115175 + C40516 * C152236 + C40513 * C152254) * C67857) *
               C152230) *
              C151851 * C3241 +
          (((C37951 * C152254 + C37952 * C152236 + C41022 * C115175) * C67857 +
            (C143562 + C143563 + C143564) * C152068) *
               C152263 -
           ((C142650 + C142649 + C142648) * C152068 +
            (C37952 * C115175 + C37951 * C152236 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152254) *
                C67857) *
               C152266 -
           ((C145676 + C145677 + C145678) * C152068 +
            (C57627 * C115175 + C41022 * C152236 + C37952 * C152254) * C67857) *
               C152252 +
           ((C41022 * C152254 + C57627 * C152236 + C64638 * C115175) * C67857 +
            (C40818 * C152254 + C57425 * C152236 +
             (C31628 * C49559 + C57624 + C57624 + C151791 * C49561) * C115175) *
                C152068) *
               C152230) *
              C151851 * C151834)) /
            (p * q * std::sqrt(p + q));
    d2ee[143] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152254 +
             C37949 * C152236 + C37950 * C115175) *
                C67857 +
            (C142642 + C142643 + C142644) * C152068) *
               C151952 -
           ((C143559 + C143560 + C143561) * C152068 +
            (C40513 * C115175 + C37950 * C152236 + C37949 * C152254) * C67857) *
               C151959 +
           ((C37950 * C152254 + C40513 * C152236 + C40516 * C115175) * C67857 +
            (C144132 + C144133 + C144134) * C152068) *
               C4779) *
              C151851 * C151828 +
          (((C37951 * C152254 + C37952 * C152236 + C41022 * C115175) * C67857 +
            (C143562 + C143563 + C143564) * C152068) *
               C151959 -
           ((C142650 + C142649 + C142648) * C152068 +
            (C37952 * C115175 + C37951 * C152236 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152254) *
                C67857) *
               C151952 -
           ((C145676 + C145677 + C145678) * C152068 +
            (C57627 * C115175 + C41022 * C152236 + C37952 * C152254) * C67857) *
               C4779) *
              C151851 * C151837 +
          ((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C152254 +
             C37953 * C152236 + C37956 * C115175) *
                C67857 +
            (C142654 + C142655 + C142656) * C152068) *
               C151952 -
           ((C143565 + C143566 + C143567) * C152068 +
            (C54593 * C115175 + C37956 * C152236 + C37953 * C152254) * C67857) *
               C151959 +
           ((C37956 * C152254 + C54593 * C152236 + C62637 * C115175) * C67857 +
            (C37955 * C152254 + C54592 * C152236 +
             (C31628 * C9428 + C54587 + C54587 + C151791 * C9434) * C115175) *
                C152068) *
               C4779) *
              C151851 * C3588)) /
        (p * q * std::sqrt(p + q));
    d2ee[144] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152254 +
             C37949 * C152236 + C37950 * C115175) *
                C67857 +
            (C142642 + C142643 + C142644) * C152068) *
               C4107 -
           ((C143559 + C143560 + C143561) * C152068 +
            (C40513 * C115175 + C37950 * C152236 + C37949 * C152254) * C67857) *
               C151956) *
              C151851 * C152264 +
          (((C37951 * C152254 + C37952 * C152236 + C41022 * C115175) * C67857 +
            (C143562 + C143563 + C143564) * C152068) *
               C151956 -
           ((C142650 + C142649 + C142648) * C152068 +
            (C37952 * C115175 + C37951 * C152236 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152254) *
                C67857) *
               C4107) *
              C151851 * C152257 +
          ((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C152254 +
             C37953 * C152236 + C37956 * C115175) *
                C67857 +
            (C142654 + C142655 + C142656) * C152068) *
               C4107 -
           ((C143565 + C143566 + C143567) * C152068 +
            (C54593 * C115175 + C37956 * C152236 + C37953 * C152254) * C67857) *
               C151956) *
              C151851 * C152242 +
          (((C38366 * C152254 + C54996 * C152236 + C62903 * C115175) * C67857 +
            (C38161 * C152254 + C54794 * C152236 +
             (C31628 * C2958 + C54993 + C54993 + C151791 * C2966) * C115175) *
                C152068) *
               C151956 -
           ((C143074 + C143073 + C143072) * C152068 +
            (C54996 * C115175 + C38366 * C152236 +
             (C31628 * C145 + C31646 + C31646 + C151791 * C161) * C152254) *
                C67857) *
               C4107) *
              C151851 * C152218)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152254 +
              C37949 * C152236 + C37950 * C115175) *
                 C67857 +
             (C142642 + C142643 + C142644) * C152068) *
                C4107 -
            ((C143559 + C143560 + C143561) * C152068 +
             (C40513 * C115175 + C37950 * C152236 + C37949 * C152254) *
                 C67857) *
                C151956) *
               C152258 +
           (((C143561 + C143560 + C143559) * C67857 +
             (C144135 + C144136 + C144137) * C152068) *
                C151956 -
            ((C142645 + C142646 + C142647) * C152068 +
             (C142644 + C142643 + C142642) * C67857) *
                C4107) *
               C152244 +
           (((C142647 + C142646 + C142645) * C67857 +
             (C143908 + C143909 + C143910) * C152068) *
                C4107 -
            ((C144825 + C144826 + C144827) * C152068 +
             (C144137 + C144136 + C144135) * C67857) *
                C151956) *
               C152214) *
              C3241 +
          ((((C37951 * C152254 + C37952 * C152236 + C41022 * C115175) * C67857 +
             (C143562 + C143563 + C143564) * C152068) *
                C151956 -
            ((C142650 + C142649 + C142648) * C152068 +
             (C37952 * C115175 + C37951 * C152236 +
              (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152254) *
                 C67857) *
                C4107) *
               C152258 +
           (((C142648 + C142649 + C142650) * C67857 +
             (C142651 + C142652 + C142653) * C152068) *
                C4107 -
            ((C144628 + C144629 + C144630) * C152068 +
             (C143564 + C143563 + C143562) * C67857) *
                C151956) *
               C152244 +
           (((C144630 + C144629 + C144628) * C67857 +
             (C32566 * C152254 + C34076 * C152236 +
              (C31628 * C27086 + C34215 + C34215 + C151791 * C27090) *
                  C115175) *
                 C152068) *
                C151956 -
            ((C144335 + C144336 + C144337) * C152068 +
             (C142653 + C142652 + C142651) * C67857) *
                C4107) *
               C152214) *
              C151834)) /
            (p * q * std::sqrt(p + q));
    d2ee[145] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152254 +
             C37949 * C152236 + C37950 * C115175) *
                C67857 +
            (C142642 + C142643 + C142644) * C152068) *
               C151869 * C152172 -
           ((C142645 + C142646 + C142647) * C152068 +
            (C142644 + C142643 + C142642) * C67857) *
               C151869 * C151914) *
              C739 +
          (((C142648 + C142649 + C142650) * C67857 +
            (C142651 + C142652 + C142653) * C152068) *
               C151869 * C151914 -
           ((C142650 + C142649 + C142648) * C152068 +
            (C37952 * C115175 + C37951 * C152236 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152254) *
                C67857) *
               C151869 * C152172) *
              C740 +
          ((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C152254 +
             C37953 * C152236 + C37956 * C115175) *
                C67857 +
            (C142654 + C142655 + C142656) * C152068) *
               C151869 * C152172 -
           ((C142657 + C142658 + C142659) * C152068 +
            (C142656 + C142655 + C142654) * C67857) *
               C151869 * C151914) *
              C741 +
          (((C143072 + C143073 + C143074) * C67857 +
            (C32189 * C152254 + C38162 * C152236 +
             (C31628 * C1542 + C38363 + C38363 + C151791 * C1566) * C115175) *
                C152068) *
               C151869 * C151914 -
           ((C143074 + C143073 + C143072) * C152068 +
            (C54996 * C115175 + C38366 * C152236 +
             (C31628 * C145 + C31646 + C31646 + C151791 * C161) * C152254) *
                C67857) *
               C151869 * C152172) *
              C152218)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152254 +
             C37949 * C152236 + C37950 * C115175) *
                C67857 +
            (C142642 + C142643 + C142644) * C152068) *
               C151869 * C1709 -
           ((C142645 + C142646 + C142647) * C152068 +
            (C142644 + C142643 + C142642) * C67857) *
               C151869 * C1710 +
           ((C142647 + C142646 + C142645) * C67857 +
            (C143908 + C143909 + C143910) * C152068) *
               C151869 * C1711 -
           ((C143911 + C143912 + C143913) * C152068 +
            (C143910 + C143909 + C143908) * C67857) *
               C151869 * C152224) *
              C152158 +
          (((C142648 + C142649 + C142650) * C67857 +
            (C142651 + C142652 + C142653) * C152068) *
               C151869 * C1710 -
           ((C142650 + C142649 + C142648) * C152068 +
            (C37952 * C115175 + C37951 * C152236 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152254) *
                C67857) *
               C151869 * C1709 -
           ((C144335 + C144336 + C144337) * C152068 +
            (C142653 + C142652 + C142651) * C67857) *
               C151869 * C1711 +
           ((C144337 + C144336 + C144335) * C67857 +
            (C31858 * C152254 + C33342 * C152236 +
             (C31628 * C25022 + C34069 + C34069 + C151791 * C25026) * C115175) *
                C152068) *
               C151869 * C152224) *
              C151834)) /
            (p * q * std::sqrt(p + q));
    d2ee[146] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152254 +
              C37949 * C152236 + C37950 * C115175) *
                 C67857 +
             (C142642 + C142643 + C142644) * C152068) *
                C152173 -
            ((C143559 + C143560 + C143561) * C152068 +
             (C40513 * C115175 + C37950 * C152236 + C37949 * C152254) *
                 C67857) *
                C151956) *
               C152172 +
           (((C143561 + C143560 + C143559) * C67857 +
             (C32562 * C152254 + C32997 * C152236 + C34363 * C115175) *
                 C152068) *
                C151956 -
            ((C142645 + C142646 + C142647) * C152068 +
             (C142644 + C142643 + C142642) * C67857) *
                C152173) *
               C151914) *
              C335 +
          ((((C37951 * C152254 + C37952 * C152236 + C41022 * C115175) * C67857 +
             (C143562 + C143563 + C143564) * C152068) *
                C151956 -
            ((C142650 + C142649 + C142648) * C152068 +
             (C37952 * C115175 + C37951 * C152236 +
              (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152254) *
                 C67857) *
                C152173) *
               C152172 +
           (((C142648 + C142649 + C142650) * C67857 +
             (C142651 + C142652 + C142653) * C152068) *
                C152173 -
            ((C40817 * C115175 + C34077 * C152236 + C32565 * C152254) *
                 C152068 +
             (C143564 + C143563 + C143562) * C67857) *
                C151956) *
               C151914) *
              C336 +
          (((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C152254 +
              C37953 * C152236 + C37956 * C115175) *
                 C67857 +
             (C142654 + C142655 + C142656) * C152068) *
                C152173 -
            ((C143565 + C143566 + C143567) * C152068 +
             (C54593 * C115175 + C37956 * C152236 + C37953 * C152254) *
                 C67857) *
                C151956) *
               C152172 +
           (((C143567 + C143566 + C143565) * C67857 +
             (C32568 * C152254 + C37954 * C152236 +
              (C31628 * C10151 + C37932 + C37932 + C151791 * C10157) *
                  C115175) *
                 C152068) *
                C151956 -
            ((C142657 + C142658 + C142659) * C152068 +
             (C142656 + C142655 + C142654) * C67857) *
                C152173) *
               C151914) *
              C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152254 +
             C37949 * C152236 + C37950 * C115175) *
                C67857 +
            (C142642 + C142643 + C142644) * C152068) *
               C152173 -
           ((C143559 + C143560 + C143561) * C152068 +
            (C40513 * C115175 + C37950 * C152236 + C37949 * C152254) * C67857) *
               C151956) *
              C1709 +
          (((C143561 + C143560 + C143559) * C67857 +
            (C144135 + C144136 + C144137) * C152068) *
               C151956 -
           ((C142645 + C142646 + C142647) * C152068 +
            (C142644 + C142643 + C142642) * C67857) *
               C152173) *
              C1710 +
          (((C142647 + C142646 + C142645) * C67857 +
            (C143908 + C143909 + C143910) * C152068) *
               C152173 -
           ((C144825 + C144826 + C144827) * C152068 +
            (C144137 + C144136 + C144135) * C67857) *
               C151956) *
              C1711 +
          (((C144827 + C144826 + C144825) * C67857 +
            (C32999 * C152254 + C33000 * C152236 +
             (C31628 * C34345 + C34355 + C34355 + C151791 * C34347) * C115175) *
                C152068) *
               C151956 -
           ((C143911 + C143912 + C143913) * C152068 +
            (C143910 + C143909 + C143908) * C67857) *
               C152173) *
              C152224) *
         C151823) /
            (p * q * std::sqrt(p + q));
    d2ee[147] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152254 +
             C37949 * C152236 + C37950 * C115175) *
                C67857 +
            (C142642 + C142643 + C142644) * C152068) *
               C151869 * C152258 -
           ((C142645 + C142646 + C142647) * C152068 +
            (C142644 + C142643 + C142642) * C67857) *
               C151869 * C152244 +
           ((C142647 + C142646 + C142645) * C67857 +
            (C31853 * C152254 + C32561 * C152236 + C32998 * C115175) *
                C152068) *
               C151869 * C152214) *
              C335 +
          (((C142648 + C142649 + C142650) * C67857 +
            (C142651 + C142652 + C142653) * C152068) *
               C151869 * C152244 -
           ((C142650 + C142649 + C142648) * C152068 +
            (C37952 * C115175 + C37951 * C152236 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152254) *
                C67857) *
               C151869 * C152258 -
           ((C34076 * C115175 + C32566 * C152236 + C31857 * C152254) * C152068 +
            (C142653 + C142652 + C142651) * C67857) *
               C151869 * C152214) *
              C336 +
          ((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C152254 +
             C37953 * C152236 + C37956 * C115175) *
                C67857 +
            (C142654 + C142655 + C142656) * C152068) *
               C151869 * C152258 -
           ((C142657 + C142658 + C142659) * C152068 +
            (C142656 + C142655 + C142654) * C67857) *
               C151869 * C152244 +
           ((C142659 + C142658 + C142657) * C67857 +
            (C31861 * C152254 + C32567 * C152236 +
             (C31628 * C8066 + C32044 + C32044 + C151791 * C8072) * C115175) *
                C152068) *
               C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152254 +
            C37949 * C152236 + C37950 * C115175) *
               C67857 +
           (C31851 * C152254 + C32563 * C152236 + C32996 * C115175) * C152068) *
              C151869 * C151851 * C129 -
          ((C34078 * C115175 + C32564 * C152236 + C31855 * C152254) * C152068 +
           (C37952 * C115175 + C37951 * C152236 +
            (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152254) *
               C67857) *
              C151869 * C151851 * C130 +
          (((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C152254 +
            C37953 * C152236 + C37956 * C115175) *
               C67857 +
           (C31859 * C152254 + C32569 * C152236 + C37955 * C115175) * C152068) *
              C151869 * C151851 * C131 -
          ((C54794 * C115175 + C38161 * C152236 + C32188 * C152254) * C152068 +
           (C54996 * C115175 + C38366 * C152236 +
            (C31628 * C145 + C31646 + C31646 + C151791 * C161) * C152254) *
               C67857) *
              C151869 * C151851 * C132 +
          (((C31628 * C146 + C31647 + C31647 + C151791 * C162) * C152254 +
            (C31628 * C555 + C37454 + C37454 + C151791 * C579) * C152236 +
            (C31628 * C556 + C54126 + C54126 + C151791 * C580) * C115175) *
               C67857 +
           ((C31628 * C346 + C31648 + C31648 + C151791 * C370) * C152254 +
            (C31628 * C1087 + C37455 + C37455 + C151791 * C1099) * C152236 +
            (C31628 * C2677 + C54127 + C54127 + C151791 * C2679) * C115175) *
               C152068) *
              C151869 * C151851 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152254 +
             C37949 * C152236 + C37950 * C115175) *
                C67857 +
            (C142642 + C142643 + C142644) * C152068) *
               C152259 -
           ((C34364 * C115175 + C32996 * C152236 + C32563 * C152254) * C152068 +
            (C40513 * C115175 + C37950 * C152236 + C37949 * C152254) * C67857) *
               C152246 +
           ((C37950 * C152254 + C40513 * C152236 + C40516 * C115175) * C67857 +
            (C32996 * C152254 + C34364 * C152236 + C40515 * C115175) *
                C152068) *
               C152217) *
              C151851 * C335 +
          (((C37951 * C152254 + C37952 * C152236 + C41022 * C115175) * C67857 +
            (C32564 * C152254 + C34078 * C152236 + C40818 * C115175) *
                C152068) *
               C152246 -
           ((C142650 + C142649 + C142648) * C152068 +
            (C37952 * C115175 + C37951 * C152236 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152254) *
                C67857) *
               C152259 -
           ((C57425 * C115175 + C40818 * C152236 + C34078 * C152254) * C152068 +
            (C57627 * C115175 + C41022 * C152236 + C37952 * C152254) * C67857) *
               C152217) *
              C151851 * C336 +
          ((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C152254 +
             C37953 * C152236 + C37956 * C115175) *
                C67857 +
            (C142654 + C142655 + C142656) * C152068) *
               C152259 -
           ((C54592 * C115175 + C37955 * C152236 + C32569 * C152254) * C152068 +
            (C54593 * C115175 + C37956 * C152236 + C37953 * C152254) * C67857) *
               C152246 +
           ((C37956 * C152254 + C54593 * C152236 + C62637 * C115175) * C67857 +
            (C37955 * C152254 + C54592 * C152236 +
             (C31628 * C9428 + C54587 + C54587 + C151791 * C9434) * C115175) *
                C152068) *
               C152217) *
              C151851 * C152208)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152254 +
             C37949 * C152236 + C37950 * C115175) *
                C67857 +
            (C142642 + C142643 + C142644) * C152068) *
               C151869 * C1259 -
           ((C142645 + C142646 + C142647) * C152068 +
            (C142644 + C142643 + C142642) * C67857) *
               C151869 * C1260 +
           ((C142647 + C142646 + C142645) * C67857 +
            (C31853 * C152254 + C32561 * C152236 + C32998 * C115175) *
                C152068) *
               C151869 * C152214) *
              C152255 +
          (((C142648 + C142649 + C142650) * C67857 +
            (C142651 + C142652 + C142653) * C152068) *
               C151869 * C1260 -
           ((C142650 + C142649 + C142648) * C152068 +
            (C37952 * C115175 + C37951 * C152236 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152254) *
                C67857) *
               C151869 * C1259 -
           ((C34076 * C115175 + C32566 * C152236 + C31857 * C152254) * C152068 +
            (C142653 + C142652 + C142651) * C67857) *
               C151869 * C152214) *
              C152240 +
          ((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C152254 +
             C37953 * C152236 + C37956 * C115175) *
                C67857 +
            (C142654 + C142655 + C142656) * C152068) *
               C151869 * C1259 -
           ((C142657 + C142658 + C142659) * C152068 +
            (C142656 + C142655 + C142654) * C67857) *
               C151869 * C1260 +
           ((C142659 + C142658 + C142657) * C67857 +
            (C31861 * C152254 + C32567 * C152236 +
             (C31628 * C8066 + C32044 + C32044 + C151791 * C8072) * C115175) *
                C152068) *
               C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152254 +
            C37949 * C152236 + C37950 * C115175) *
               C67857 +
           (C142642 + C142643 + C142644) * C152068) *
              C151869 * C1347 -
          ((C142645 + C142646 + C142647) * C152068 +
           (C142644 + C142643 + C142642) * C67857) *
              C151869 * C1348 +
          ((C142647 + C142646 + C142645) * C67857 +
           (C143908 + C143909 + C143910) * C152068) *
              C151869 * C1349 -
          ((C143911 + C143912 + C143913) * C152068 +
           (C143910 + C143909 + C143908) * C67857) *
              C151869 * C1350 +
          ((C143913 + C143912 + C143911) * C67857 +
           (C32820 * C152254 + C33482 * C152236 +
            (C31628 * C32969 + C32985 + C32985 + C151791 * C32971) * C115175) *
               C152068) *
              C151869 * C1351) *
         C151823) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152254 +
             C37949 * C152236 + C37950 * C115175) *
                C67857 +
            (C142642 + C142643 + C142644) * C152068) *
               C152259 -
           ((C143559 + C143560 + C143561) * C152068 +
            (C40513 * C115175 + C37950 * C152236 + C37949 * C152254) * C67857) *
               C152246 +
           ((C37950 * C152254 + C40513 * C152236 + C40516 * C115175) * C67857 +
            (C144132 + C144133 + C144134) * C152068) *
               C152217) *
              C1259 +
          (((C143561 + C143560 + C143559) * C67857 +
            (C144135 + C144136 + C144137) * C152068) *
               C152246 -
           ((C142645 + C142646 + C142647) * C152068 +
            (C142644 + C142643 + C142642) * C67857) *
               C152259 -
           ((C144138 + C144139 + C144140) * C152068 +
            (C144134 + C144133 + C144132) * C67857) *
               C152217) *
              C1260 +
          (((C142647 + C142646 + C142645) * C67857 +
            (C143908 + C143909 + C143910) * C152068) *
               C152259 -
           ((C34362 * C115175 + C32998 * C152236 + C32561 * C152254) * C152068 +
            (C144137 + C144136 + C144135) * C67857) *
               C152246 +
           ((C144140 + C144139 + C144138) * C67857 +
            (C32998 * C152254 + C34362 * C152236 +
             (C31628 * C33857 + C33868 + C33868 + C151791 * C33859) * C115175) *
                C152068) *
               C152217) *
              C152214) *
         C151823) /
            (p * q * std::sqrt(p + q));
    d2ee[148] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152254 +
             C37949 * C152236 + C37950 * C115175) *
                C67857 +
            (C142642 + C142643 + C142644) * C152068) *
               C152173 -
           ((C34364 * C115175 + C32996 * C152236 + C32563 * C152254) * C152068 +
            (C40513 * C115175 + C37950 * C152236 + C37949 * C152254) * C67857) *
               C151956) *
              C151851 * C739 +
          (((C37951 * C152254 + C37952 * C152236 + C41022 * C115175) * C67857 +
            (C32564 * C152254 + C34078 * C152236 + C40818 * C115175) *
                C152068) *
               C151956 -
           ((C142650 + C142649 + C142648) * C152068 +
            (C37952 * C115175 + C37951 * C152236 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152254) *
                C67857) *
               C152173) *
              C151851 * C740 +
          ((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C152254 +
             C37953 * C152236 + C37956 * C115175) *
                C67857 +
            (C142654 + C142655 + C142656) * C152068) *
               C152173 -
           ((C54592 * C115175 + C37955 * C152236 + C32569 * C152254) * C152068 +
            (C54593 * C115175 + C37956 * C152236 + C37953 * C152254) * C67857) *
               C151956) *
              C151851 * C741 +
          (((C38366 * C152254 + C54996 * C152236 + C62903 * C115175) * C67857 +
            (C38161 * C152254 + C54794 * C152236 +
             (C31628 * C2958 + C54993 + C54993 + C151791 * C2966) * C115175) *
                C152068) *
               C151956 -
           ((C143074 + C143073 + C143072) * C152068 +
            (C54996 * C115175 + C38366 * C152236 +
             (C31628 * C145 + C31646 + C31646 + C151791 * C161) * C152254) *
                C67857) *
               C152173) *
              C151851 * C152218)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152254 +
              C37949 * C152236 + C37950 * C115175) *
                 C67857 +
             (C142642 + C142643 + C142644) * C152068) *
                C152173 -
            ((C143559 + C143560 + C143561) * C152068 +
             (C40513 * C115175 + C37950 * C152236 + C37949 * C152254) *
                 C67857) *
                C151956) *
               C1259 +
           (((C143561 + C143560 + C143559) * C67857 +
             (C144135 + C144136 + C144137) * C152068) *
                C151956 -
            ((C142645 + C142646 + C142647) * C152068 +
             (C142644 + C142643 + C142642) * C67857) *
                C152173) *
               C1260 +
           (((C142647 + C142646 + C142645) * C67857 +
             (C143908 + C143909 + C143910) * C152068) *
                C152173 -
            ((C34362 * C115175 + C32998 * C152236 + C32561 * C152254) *
                 C152068 +
             (C144137 + C144136 + C144135) * C67857) *
                C151956) *
               C152214) *
              C152158 +
          ((((C37951 * C152254 + C37952 * C152236 + C41022 * C115175) * C67857 +
             (C143562 + C143563 + C143564) * C152068) *
                C151956 -
            ((C142650 + C142649 + C142648) * C152068 +
             (C37952 * C115175 + C37951 * C152236 +
              (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152254) *
                 C67857) *
                C152173) *
               C1259 +
           (((C142648 + C142649 + C142650) * C67857 +
             (C142651 + C142652 + C142653) * C152068) *
                C152173 -
            ((C144628 + C144629 + C144630) * C152068 +
             (C143564 + C143563 + C143562) * C67857) *
                C151956) *
               C1260 +
           (((C144630 + C144629 + C144628) * C67857 +
             (C32566 * C152254 + C34076 * C152236 +
              (C31628 * C27086 + C34215 + C34215 + C151791 * C27090) *
                  C115175) *
                 C152068) *
                C151956 -
            ((C144335 + C144336 + C144337) * C152068 +
             (C142653 + C142652 + C142651) * C67857) *
                C152173) *
               C152214) *
              C151834)) /
            (p * q * std::sqrt(p + q));
    d2ee[149] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152254 +
            C37949 * C152236 + C37950 * C115175) *
               C67857 +
           (C31851 * C152254 + C32563 * C152236 + C32996 * C115175) * C152068) *
              C151869 * C151851 * C129 -
          ((C34078 * C115175 + C32564 * C152236 + C31855 * C152254) * C152068 +
           (C37952 * C115175 + C37951 * C152236 +
            (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152254) *
               C67857) *
              C151869 * C151851 * C130 +
          (((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C152254 +
            C37953 * C152236 + C37956 * C115175) *
               C67857 +
           (C31859 * C152254 + C32569 * C152236 + C37955 * C115175) * C152068) *
              C151869 * C151851 * C131 -
          ((C54794 * C115175 + C38161 * C152236 + C32188 * C152254) * C152068 +
           (C54996 * C115175 + C38366 * C152236 +
            (C31628 * C145 + C31646 + C31646 + C151791 * C161) * C152254) *
               C67857) *
              C151869 * C151851 * C132 +
          (((C31628 * C146 + C31647 + C31647 + C151791 * C162) * C152254 +
            (C31628 * C555 + C37454 + C37454 + C151791 * C579) * C152236 +
            (C31628 * C556 + C54126 + C54126 + C151791 * C580) * C115175) *
               C67857 +
           ((C31628 * C346 + C31648 + C31648 + C151791 * C370) * C152254 +
            (C31628 * C1087 + C37455 + C37455 + C151791 * C1099) * C152236 +
            (C31628 * C2677 + C54127 + C54127 + C151791 * C2679) * C115175) *
               C152068) *
              C151869 * C151851 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152254 +
             C37949 * C152236 + C37950 * C115175) *
                C67857 +
            (C142642 + C142643 + C142644) * C152068) *
               C151869 * C152258 -
           ((C142645 + C142646 + C142647) * C152068 +
            (C142644 + C142643 + C142642) * C67857) *
               C151869 * C152244 +
           ((C142647 + C142646 + C142645) * C67857 +
            (C31853 * C152254 + C32561 * C152236 + C32998 * C115175) *
                C152068) *
               C151869 * C152214) *
              C335 +
          (((C142648 + C142649 + C142650) * C67857 +
            (C142651 + C142652 + C142653) * C152068) *
               C151869 * C152244 -
           ((C142650 + C142649 + C142648) * C152068 +
            (C37952 * C115175 + C37951 * C152236 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152254) *
                C67857) *
               C151869 * C152258 -
           ((C34076 * C115175 + C32566 * C152236 + C31857 * C152254) * C152068 +
            (C142653 + C142652 + C142651) * C67857) *
               C151869 * C152214) *
              C336 +
          ((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C152254 +
             C37953 * C152236 + C37956 * C115175) *
                C67857 +
            (C142654 + C142655 + C142656) * C152068) *
               C151869 * C152258 -
           ((C142657 + C142658 + C142659) * C152068 +
            (C142656 + C142655 + C142654) * C67857) *
               C151869 * C152244 +
           ((C142659 + C142658 + C142657) * C67857 +
            (C31861 * C152254 + C32567 * C152236 +
             (C31628 * C8066 + C32044 + C32044 + C151791 * C8072) * C115175) *
                C152068) *
               C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152254 +
             C37949 * C152236 + C37950 * C115175) *
                C67857 +
            (C142642 + C142643 + C142644) * C152068) *
               C151869 * C1259 -
           ((C142645 + C142646 + C142647) * C152068 +
            (C142644 + C142643 + C142642) * C67857) *
               C151869 * C1260 +
           ((C142647 + C142646 + C142645) * C67857 +
            (C31853 * C152254 + C32561 * C152236 + C32998 * C115175) *
                C152068) *
               C151869 * C152214) *
              C152255 +
          (((C142648 + C142649 + C142650) * C67857 +
            (C142651 + C142652 + C142653) * C152068) *
               C151869 * C1260 -
           ((C142650 + C142649 + C142648) * C152068 +
            (C37952 * C115175 + C37951 * C152236 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152254) *
                C67857) *
               C151869 * C1259 -
           ((C34076 * C115175 + C32566 * C152236 + C31857 * C152254) * C152068 +
            (C142653 + C142652 + C142651) * C67857) *
               C151869 * C152214) *
              C152240 +
          ((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C152254 +
             C37953 * C152236 + C37956 * C115175) *
                C67857 +
            (C142654 + C142655 + C142656) * C152068) *
               C151869 * C1259 -
           ((C142657 + C142658 + C142659) * C152068 +
            (C142656 + C142655 + C142654) * C67857) *
               C151869 * C1260 +
           ((C142659 + C142658 + C142657) * C67857 +
            (C31861 * C152254 + C32567 * C152236 +
             (C31628 * C8066 + C32044 + C32044 + C151791 * C8072) * C115175) *
                C152068) *
               C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152254 +
            C37949 * C152236 + C37950 * C115175) *
               C67857 +
           (C142642 + C142643 + C142644) * C152068) *
              C151869 * C1347 -
          ((C142645 + C142646 + C142647) * C152068 +
           (C142644 + C142643 + C142642) * C67857) *
              C151869 * C1348 +
          ((C142647 + C142646 + C142645) * C67857 +
           (C143908 + C143909 + C143910) * C152068) *
              C151869 * C1349 -
          ((C143911 + C143912 + C143913) * C152068 +
           (C143910 + C143909 + C143908) * C67857) *
              C151869 * C1350 +
          ((C143913 + C143912 + C143911) * C67857 +
           (C32820 * C152254 + C33482 * C152236 +
            (C31628 * C32969 + C32985 + C32985 + C151791 * C32971) * C115175) *
               C152068) *
              C151869 * C1351) *
         C151823) /
            (p * q * std::sqrt(p + q));
    d2ee[150] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
             C23049 + C23049 + C151796 * C159) *
                C152080 * C23040 +
            (C23380 + C23381) * C152080 * C23041 + C23401 * C23042) *
               C151869 * C151910 -
           (C24789 * C23042 + (C23383 + C23382) * C152080 * C23041 +
            (C23381 + C23380) * C152080 * C23040) *
               C151869 * C151917 +
           (C23401 * C23040 + (C23385 + C23384) * C152080 * C23041 +
            C24803 * C23042) *
               C151869 * C3585) *
              C151828 +
          (((C23386 + C23387) * C152080 * C23040 +
            (C23388 + C23389) * C152080 * C23041 + C25279 * C23042) *
               C151869 * C151917 -
           (C23402 * C23042 + (C23387 + C23386) * C152080 * C23041 +
            (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
             C23059 + C23059 + C152149 * C159) *
                C152080 * C23040) *
               C151869 * C151910 -
           ((C25284 + C25285) * C152080 * C23042 +
            (C23391 + C23390) * C152080 * C23041 + C23402 * C23040) *
               C151869 * C3585) *
              C151837 +
          (((C23043 * C144 + C23060 + C23060 + C152149 * C160 + C23045 * C145 +
             C23061 + C23061 + C151796 * C161) *
                C152080 * C23040 +
            (C23392 + C23393) * C152080 * C23041 + C23403 * C23042) *
               C151869 * C151910 -
           ((C23396 + C23397) * C152080 * C23042 +
            (C23395 + C23394) * C152080 * C23041 +
            (C23393 + C23392) * C152080 * C23040) *
               C151869 * C151917 +
           (C23403 * C23040 + (C23397 + C23396) * C152080 * C23041 +
            (C23043 * C1359 + C23342 + C23342 + C152149 * C1375 +
             C23045 * C1360 + C23343 + C23343 + C151796 * C1376) *
                C152080 * C23042) *
               C151869 * C3585) *
              C3588)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
            C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
            C140 * C145 + C170 + C170 + C124 * C161) *
               C152080 * C152054 * C151869 * C151910 -
           (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
            C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
            C134 * C341 + C378 + C378 + C121 * C365) *
               C152080 * C152054 * C151869 * C151917 +
           (C134 * C342 + C379 + C379 + C121 * C366 + C136 * C343 + C380 +
            C380 + C122 * C367 + C138 * C344 + C381 + C381 + C123 * C368 +
            C140 * C345 + C382 + C382 + C124 * C369) *
               C152080 * C152054 * C151869 * C3585) *
              C151828 +
          ((C134 * C340 + C383 + C383 + C121 * C364 + C136 * C339 + C384 +
            C384 + C122 * C363 + C138 * C338 + C385 + C385 + C123 * C362 +
            C140 * C346 + C386 + C386 + C124 * C370) *
               C152080 * C152054 * C151869 * C151917 -
           (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
            C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
            C134 * C143 + C174 + C174 + C121 * C159) *
               C152080 * C152054 * C151869 * C151910 -
           (C140 * C347 + C387 + C387 + C124 * C371 + C138 * C345 + C388 +
            C388 + C123 * C369 + C136 * C344 + C389 + C389 + C122 * C368 +
            C134 * C343 + C390 + C390 + C121 * C367) *
               C152080 * C152054 * C151869 * C3585) *
              C151837 +
          ((C134 * C144 + C175 + C175 + C121 * C160 + C136 * C145 + C176 +
            C176 + C122 * C161 + C138 * C146 + C177 + C177 + C123 * C162 +
            C140 * C147 + C178 + C178 + C124 * C163) *
               C152080 * C152054 * C151869 * C151910 -
           (C140 * C348 + C391 + C391 + C124 * C372 + C138 * C346 + C392 +
            C392 + C123 * C370 + C136 * C338 + C393 + C393 + C122 * C362 +
            C134 * C339 + C394 + C394 + C121 * C363) *
               C152080 * C152054 * C151869 * C151917 +
           (C134 * C344 + C395 + C395 + C121 * C368 + C136 * C345 + C396 +
            C396 + C122 * C369 + C138 * C347 + C397 + C397 + C123 * C371 +
            C140 * C349 + C398 + C398 + C124 * C373) *
               C152080 * C152054 * C151869 * C3585) *
              C3588)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
             C23049 + C23049 + C151796 * C159) *
                C45770 +
            (C46294 + C46295) * C45771 + C46312 * C45772) *
               C152054 * C151869 * C151910 -
           (C47587 * C45772 + (C24420 + C24421) * C45771 +
            (C23381 + C23380) * C45770) *
               C152054 * C151869 * C151917 +
           (C23398 * C45770 + (C24419 + C24418) * C45771 + C25076 * C45772) *
               C152054 * C151869 * C3585) *
              C151828 +
          (((C23386 + C23387) * C45770 + (C24422 + C24423) * C45771 +
            C49146 * C45772) *
               C152054 * C151869 * C151917 -
           (C46313 * C45772 + (C46301 + C46300) * C45771 +
            (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
             C23059 + C23059 + C152149 * C159) *
                C45770) *
               C152054 * C151869 * C151910 -
           ((C26688 + C26689) * C45772 + (C24425 + C24424) * C45771 +
            C23399 * C45770) *
               C152054 * C151869 * C3585) *
              C151837 +
          (((C23043 * C144 + C23060 + C23060 + C152149 * C160 + C23045 * C145 +
             C23061 + C23061 + C151796 * C161) *
                C45770 +
            (C46306 + C46307) * C45771 + C46314 * C45772) *
               C152054 * C151869 * C151910 -
           ((C47028 + C47027) * C45772 + (C24428 + C24429) * C45771 +
            (C23393 + C23392) * C45770) *
               C152054 * C151869 * C151917 +
           (C23400 * C45770 + (C24427 + C24426) * C45771 +
            (C23043 * C1541 + C23656 + C23656 + C152149 * C1565 +
             C23045 * C1542 + C23657 + C23657 + C151796 * C1566) *
                C45772) *
               C152054 * C151869 * C3585) *
              C3588)) /
            (p * q * std::sqrt(p + q));
    d2ee[151] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
              C23049 + C23049 + C151796 * C159) *
                 C152080 * C23040 +
             (C23380 + C23381) * C152080 * C23041 + C23401 * C23042) *
                C152173 -
            (C25051 * C23042 + (C24420 + C24421) * C152080 * C23041 +
             (C23045 * C549 + C23626 + C23626 + C151796 * C573 + C23043 * C550 +
              C23627 + C23627 + C152149 * C574) *
                 C152080 * C23040) *
                C151956) *
               C151910 +
           (((C24421 + C24420) * C152080 * C23040 +
             (C24419 + C24418) * C152080 * C23041 + C25797 * C23042) *
                C151956 -
            (C24789 * C23042 + (C23383 + C23382) * C152080 * C23041 +
             (C23381 + C23380) * C152080 * C23040) *
                C152173) *
               C151917 +
           ((C23401 * C23040 + (C23385 + C23384) * C152080 * C23041 +
             C24803 * C23042) *
                C152173 -
            ((C25802 + C25803) * C152080 * C23042 +
             (C25073 + C25072) * C152080 * C23041 + C25051 * C23040) *
                C151956) *
               C3585) *
              C3241 +
          ((((C23043 * C549 + C23634 + C23634 + C152149 * C573 + C23045 * C548 +
              C23635 + C23635 + C151796 * C572) *
                 C152080 * C23040 +
             (C24422 + C24423) * C152080 * C23041 + C25583 * C23042) *
                C151956 -
            (C23402 * C23042 + (C23387 + C23386) * C152080 * C23041 +
             (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
              C23059 + C23059 + C152149 * C159) *
                 C152080 * C23040) *
                C152173) *
               C151910 +
           (((C23386 + C23387) * C152080 * C23040 +
             (C23388 + C23389) * C152080 * C23041 + C25279 * C23042) *
                C152173 -
            ((C25588 + C25589) * C152080 * C23042 +
             (C24425 + C24424) * C152080 * C23041 +
             (C24423 + C24422) * C152080 * C23040) *
                C151956) *
               C151917 +
           ((C25583 * C23040 + (C25589 + C25588) * C152080 * C23041 +
             (C23043 * C8842 + C25581 + C25581 + C152149 * C8848 +
              C23045 * C8843 + C25582 + C25582 + C151796 * C8849) *
                 C152080 * C23042) *
                C151956 -
            ((C25284 + C25285) * C152080 * C23042 +
             (C23391 + C23390) * C152080 * C23041 + C23402 * C23040) *
                C152173) *
               C3585) *
              C151834)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
             C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
             C140 * C145 + C170 + C170 + C124 * C161) *
                C152080 * C152054 * C152173 -
            (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
             C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
             C134 * C550 + C587 + C587 + C121 * C574) *
                C152080 * C152054 * C151956) *
               C151910 +
           ((C134 * C1083 + C1102 + C1102 + C121 * C1095 + C136 * C1084 +
             C1103 + C1103 + C122 * C1096 + C138 * C1085 + C1104 + C1104 +
             C123 * C1097 + C140 * C1086 + C1105 + C1105 + C124 * C1098) *
                C152080 * C152054 * C151956 -
            (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
             C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
             C134 * C341 + C378 + C378 + C121 * C365) *
                C152080 * C152054 * C152173) *
               C151917 +
           ((C134 * C342 + C379 + C379 + C121 * C366 + C136 * C343 + C380 +
             C380 + C122 * C367 + C138 * C344 + C381 + C381 + C123 * C368 +
             C140 * C345 + C382 + C382 + C124 * C369) *
                C152080 * C152054 * C152173 -
            (C140 * C1535 + C1572 + C1572 + C124 * C1559 + C138 * C1536 +
             C1573 + C1573 + C123 * C1560 + C136 * C1537 + C1574 + C1574 +
             C122 * C1561 + C134 * C1538 + C1575 + C1575 + C121 * C1562) *
                C152080 * C152054 * C151956) *
               C3585) *
              C3241 +
          (((C134 * C549 + C592 + C592 + C121 * C573 + C136 * C548 + C593 +
             C593 + C122 * C572 + C138 * C547 + C594 + C594 + C123 * C571 +
             C140 * C555 + C595 + C595 + C124 * C579) *
                C152080 * C152054 * C151956 -
            (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
             C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
             C134 * C143 + C174 + C174 + C121 * C159) *
                C152080 * C152054 * C152173) *
               C151910 +
           ((C134 * C340 + C383 + C383 + C121 * C364 + C136 * C339 + C384 +
             C384 + C122 * C363 + C138 * C338 + C385 + C385 + C123 * C362 +
             C140 * C346 + C386 + C386 + C124 * C370) *
                C152080 * C152054 * C152173 -
            (C140 * C1087 + C1106 + C1106 + C124 * C1099 + C138 * C1086 +
             C1107 + C1107 + C123 * C1098 + C136 * C1085 + C1108 + C1108 +
             C122 * C1097 + C134 * C1084 + C1109 + C1109 + C121 * C1096) *
                C152080 * C152054 * C151956) *
               C151917 +
           ((C134 * C1537 + C1920 + C1920 + C121 * C1561 + C136 * C1536 +
             C1921 + C1921 + C122 * C1560 + C138 * C1535 + C1922 + C1922 +
             C123 * C1559 + C140 * C1916 + C1923 + C1923 + C124 * C1918) *
                C152080 * C152054 * C151956 -
            (C140 * C347 + C387 + C387 + C124 * C371 + C138 * C345 + C388 +
             C388 + C123 * C369 + C136 * C344 + C389 + C389 + C122 * C368 +
             C134 * C343 + C390 + C390 + C121 * C367) *
                C152080 * C152054 * C152173) *
               C3585) *
              C151834)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
              C23049 + C23049 + C151796 * C159) *
                 C45770 +
             (C46294 + C46295) * C45771 + C46312 * C45772) *
                C152054 * C152173 -
            (C48830 * C45772 + (C46297 + C46296) * C45771 +
             (C46295 + C46294) * C45770) *
                C152054 * C151956) *
               C151910 +
           (((C24421 + C24420) * C45770 + (C25068 + C25069) * C45771 +
             C49563 * C45772) *
                C152054 * C151956 -
            (C47587 * C45772 + (C24420 + C24421) * C45771 +
             (C23381 + C23380) * C45770) *
                C152054 * C152173) *
               C151917 +
           ((C23398 * C45770 + (C24419 + C24418) * C45771 + C25076 * C45772) *
                C152054 * C152173 -
            ((C27110 + C27111) * C45772 + (C25071 + C25070) * C45771 +
             C25028 * C45770) *
                C152054 * C151956) *
               C3585) *
              C3241 +
          ((((C46300 + C46301) * C45770 + (C46302 + C46303) * C45771 +
             C49353 * C45772) *
                C152054 * C151956 -
            (C46313 * C45772 + (C46301 + C46300) * C45771 +
             (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
              C23059 + C23059 + C152149 * C159) *
                 C45770) *
                C152054 * C152173) *
               C151910 +
           (((C23386 + C23387) * C45770 + (C24422 + C24423) * C45771 +
             C49146 * C45772) *
                C152054 * C152173 -
            ((C49157 + C49158) * C45772 + (C26690 + C26691) * C45771 +
             (C24423 + C24422) * C45770) *
                C152054 * C151956) *
               C151917 +
           ((C25576 * C45770 + (C26689 + C26688) * C45771 +
             (C23043 * C10150 + C26890 + C26890 + C152149 * C10156 +
              C23045 * C10151 + C26891 + C26891 + C151796 * C10157) *
                 C45772) *
                C152054 * C151956 -
            ((C26688 + C26689) * C45772 + (C24425 + C24424) * C45771 +
             C23399 * C45770) *
                C152054 * C152173) *
               C3585) *
              C151834)) /
            (p * q * std::sqrt(p + q));
    d2ee[152] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
                C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
                C140 * C145 + C170 + C170 + C124 * C161) *
                   C152080 * C152054 * C151869 * C3101 -
               (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
                C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
                C134 * C341 + C378 + C378 + C121 * C365) *
                   C152080 * C152054 * C151869 * C151914) *
                  C152264 +
              ((C134 * C340 + C383 + C383 + C121 * C364 + C136 * C339 + C384 +
                C384 + C122 * C363 + C138 * C338 + C385 + C385 + C123 * C362 +
                C140 * C346 + C386 + C386 + C124 * C370) *
                   C152080 * C152054 * C151869 * C151914 -
               (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
                C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
                C134 * C143 + C174 + C174 + C121 * C159) *
                   C152080 * C152054 * C151869 * C3101) *
                  C152257 +
              ((C134 * C144 + C175 + C175 + C121 * C160 + C136 * C145 + C176 +
                C176 + C122 * C161 + C138 * C146 + C177 + C177 + C123 * C162 +
                C140 * C147 + C178 + C178 + C124 * C163) *
                   C152080 * C152054 * C151869 * C3101 -
               (C140 * C348 + C391 + C391 + C124 * C372 + C138 * C346 + C392 +
                C392 + C123 * C370 + C136 * C338 + C393 + C393 + C122 * C362 +
                C134 * C339 + C394 + C394 + C121 * C363) *
                   C152080 * C152054 * C151869 * C151914) *
                  C152242 +
              ((C134 * C338 + C747 + C747 + C121 * C362 + C136 * C346 + C748 +
                C748 + C122 * C370 + C138 * C348 + C749 + C749 + C123 * C372 +
                C140 * C743 + C750 + C750 + C124 * C745) *
                   C152080 * C152054 * C151869 * C151914 -
               (C140 * C148 + C179 + C179 + C124 * C164 + C138 * C147 + C180 +
                C180 + C123 * C163 + C136 * C146 + C181 + C181 + C122 * C162 +
                C134 * C145 + C182 + C182 + C121 * C161) *
                   C152080 * C152054 * C151869 * C3101) *
                  C152218) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
                C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
                C140 * C145 + C170 + C170 + C124 * C161) *
                   C152080 * C152054 * C151869 * C152265 -
               (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
                C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
                C134 * C341 + C378 + C378 + C121 * C365) *
                   C152080 * C152054 * C151869 * C152261 +
               (C134 * C342 + C379 + C379 + C121 * C366 + C136 * C343 + C380 +
                C380 + C122 * C367 + C138 * C344 + C381 + C381 + C123 * C368 +
                C140 * C345 + C382 + C382 + C124 * C369) *
                   C152080 * C152054 * C151869 * C152249 -
               (C140 * C1353 + C1378 + C1378 + C124 * C1369 + C138 * C1354 +
                C1379 + C1379 + C123 * C1370 + C136 * C1355 + C1380 + C1380 +
                C122 * C1371 + C134 * C1356 + C1381 + C1381 + C121 * C1372) *
                   C152080 * C152054 * C151869 * C152224) *
                  C3241 +
              ((C134 * C340 + C383 + C383 + C121 * C364 + C136 * C339 + C384 +
                C384 + C122 * C363 + C138 * C338 + C385 + C385 + C123 * C362 +
                C140 * C346 + C386 + C386 + C124 * C370) *
                   C152080 * C152054 * C151869 * C152261 -
               (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
                C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
                C134 * C143 + C174 + C174 + C121 * C159) *
                   C152080 * C152054 * C151869 * C152265 -
               (C140 * C347 + C387 + C387 + C124 * C371 + C138 * C345 + C388 +
                C388 + C123 * C369 + C136 * C344 + C389 + C389 + C122 * C368 +
                C134 * C343 + C390 + C390 + C121 * C367) *
                   C152080 * C152054 * C151869 * C152249 +
               (C134 * C1355 + C1719 + C1719 + C121 * C1371 + C136 * C1354 +
                C1720 + C1720 + C122 * C1370 + C138 * C1353 + C1721 + C1721 +
                C123 * C1369 + C140 * C1715 + C1722 + C1722 + C124 * C1717) *
                   C152080 * C152054 * C151869 * C152224) *
                  C151834)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
             C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
             C140 * C145 + C170 + C170 + C124 * C161) *
                C152080 * C152054 * C152259 -
            (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
             C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
             C134 * C550 + C587 + C587 + C121 * C574) *
                C152080 * C152054 * C152246 +
            (C134 * C551 + C588 + C588 + C121 * C575 + C136 * C552 + C589 +
             C589 + C122 * C576 + C138 * C553 + C590 + C590 + C123 * C577 +
             C140 * C554 + C591 + C591 + C124 * C578) *
                C152080 * C152054 * C152217) *
               C3101 +
           ((C134 * C1083 + C1102 + C1102 + C121 * C1095 + C136 * C1084 +
             C1103 + C1103 + C122 * C1096 + C138 * C1085 + C1104 + C1104 +
             C123 * C1097 + C140 * C1086 + C1105 + C1105 + C124 * C1098) *
                C152080 * C152054 * C152246 -
            (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
             C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
             C134 * C341 + C378 + C378 + C121 * C365) *
                C152080 * C152054 * C152259 -
            (C140 * C1531 + C1568 + C1568 + C124 * C1555 + C138 * C1532 +
             C1569 + C1569 + C123 * C1556 + C136 * C1533 + C1570 + C1570 +
             C122 * C1557 + C134 * C1534 + C1571 + C1571 + C121 * C1558) *
                C152080 * C152054 * C152217) *
               C151914) *
              C3241 +
          (((C134 * C549 + C592 + C592 + C121 * C573 + C136 * C548 + C593 +
             C593 + C122 * C572 + C138 * C547 + C594 + C594 + C123 * C571 +
             C140 * C555 + C595 + C595 + C124 * C579) *
                C152080 * C152054 * C152246 -
            (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
             C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
             C134 * C143 + C174 + C174 + C121 * C159) *
                C152080 * C152054 * C152259 -
            (C140 * C556 + C596 + C596 + C124 * C580 + C138 * C554 + C597 +
             C597 + C123 * C578 + C136 * C553 + C598 + C598 + C122 * C577 +
             C134 * C552 + C599 + C599 + C121 * C576) *
                C152080 * C152054 * C152217) *
               C3101 +
           ((C134 * C340 + C383 + C383 + C121 * C364 + C136 * C339 + C384 +
             C384 + C122 * C363 + C138 * C338 + C385 + C385 + C123 * C362 +
             C140 * C346 + C386 + C386 + C124 * C370) *
                C152080 * C152054 * C152259 -
            (C140 * C1087 + C1106 + C1106 + C124 * C1099 + C138 * C1086 +
             C1107 + C1107 + C123 * C1098 + C136 * C1085 + C1108 + C1108 +
             C122 * C1097 + C134 * C1084 + C1109 + C1109 + C121 * C1096) *
                C152080 * C152054 * C152246 +
            (C134 * C1533 + C2681 + C2681 + C121 * C1557 + C136 * C1532 +
             C2682 + C2682 + C122 * C1556 + C138 * C1531 + C2683 + C2683 +
             C123 * C1555 + C140 * C2677 + C2684 + C2684 + C124 * C2679) *
                C152080 * C152054 * C152217) *
               C151914) *
              C151834)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
             C23049 + C23049 + C151796 * C159) *
                C152080 * C23040 +
            (C23380 + C23381) * C152080 * C23041 + C23401 * C23042) *
               C151869 * C3101 -
           (C24789 * C23042 + (C23383 + C23382) * C152080 * C23041 +
            (C23381 + C23380) * C152080 * C23040) *
               C151869 * C151914) *
              C152264 +
          (((C23386 + C23387) * C152080 * C23040 +
            (C23388 + C23389) * C152080 * C23041 + C25279 * C23042) *
               C151869 * C151914 -
           (C23402 * C23042 + (C23387 + C23386) * C152080 * C23041 +
            (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
             C23059 + C23059 + C152149 * C159) *
                C152080 * C23040) *
               C151869 * C3101) *
              C152257 +
          (((C23043 * C144 + C23060 + C23060 + C152149 * C160 + C23045 * C145 +
             C23061 + C23061 + C151796 * C161) *
                C152080 * C23040 +
            (C23392 + C23393) * C152080 * C23041 + C23403 * C23042) *
               C151869 * C3101 -
           ((C23396 + C23397) * C152080 * C23042 +
            (C23395 + C23394) * C152080 * C23041 +
            (C23393 + C23392) * C152080 * C23040) *
               C151869 * C151914) *
              C152242 +
          (((C23870 + C23871) * C152080 * C23040 +
            (C23872 + C23873) * C152080 * C23041 +
            (C23043 * C1353 + C23860 + C23860 + C152149 * C1369 +
             C23045 * C1715 + C23861 + C23861 + C151796 * C1717) *
                C152080 * C23042) *
               C151869 * C151914 -
           ((C23873 + C23872) * C152080 * C23042 +
            (C23871 + C23870) * C152080 * C23041 +
            (C23045 * C146 + C23070 + C23070 + C151796 * C162 + C23043 * C145 +
             C23071 + C23071 + C152149 * C161) *
                C152080 * C23040) *
               C151869 * C3101) *
              C152218)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
             C23049 + C23049 + C151796 * C159) *
                C152080 * C23040 +
            (C23380 + C23381) * C152080 * C23041 + C23401 * C23042) *
               C151869 * C152265 -
           (C24789 * C23042 + (C23383 + C23382) * C152080 * C23041 +
            (C23381 + C23380) * C152080 * C23040) *
               C151869 * C152261 +
           (C23401 * C23040 + (C23385 + C23384) * C152080 * C23041 +
            C24803 * C23042) *
               C151869 * C152249 -
           ((C24800 + C24801) * C152080 * C23042 +
            (C24799 + C24798) * C152080 * C23041 + C24789 * C23040) *
               C151869 * C152224) *
              C3241 +
          (((C23386 + C23387) * C152080 * C23040 +
            (C23388 + C23389) * C152080 * C23041 + C25279 * C23042) *
               C151869 * C152261 -
           (C23402 * C23042 + (C23387 + C23386) * C152080 * C23041 +
            (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
             C23059 + C23059 + C152149 * C159) *
                C152080 * C23040) *
               C151869 * C152265 -
           ((C25284 + C25285) * C152080 * C23042 +
            (C23391 + C23390) * C152080 * C23041 + C23402 * C23040) *
               C151869 * C152249 +
           (C25279 * C23040 + (C25285 + C25284) * C152080 * C23041 +
            (C23043 * C7802 + C25277 + C25277 + C152149 * C7808 +
             C23045 * C7803 + C25278 + C25278 + C151796 * C7809) *
                C152080 * C23042) *
               C151869 * C152224) *
              C151834)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
              C23049 + C23049 + C151796 * C159) *
                 C152080 * C23040 +
             (C23380 + C23381) * C152080 * C23041 + C23401 * C23042) *
                C152259 -
            (C25051 * C23042 + (C24420 + C24421) * C152080 * C23041 +
             (C23045 * C549 + C23626 + C23626 + C151796 * C573 + C23043 * C550 +
              C23627 + C23627 + C152149 * C574) *
                 C152080 * C23040) *
                C152246 +
            ((C23043 * C551 + C23628 + C23628 + C152149 * C575 + C23045 * C552 +
              C23629 + C23629 + C151796 * C576) *
                 C152080 * C23040 +
             (C25068 + C25069) * C152080 * C23041 + C25077 * C23042) *
                C152217) *
               C3101 +
           (((C24421 + C24420) * C152080 * C23040 +
             (C24419 + C24418) * C152080 * C23041 + C25797 * C23042) *
                C152246 -
            (C24789 * C23042 + (C23383 + C23382) * C152080 * C23041 +
             (C23381 + C23380) * C152080 * C23040) *
                C152259 -
            ((C25074 + C25075) * C152080 * C23042 +
             (C25071 + C25070) * C152080 * C23041 +
             (C25069 + C25068) * C152080 * C23040) *
                C152217) *
               C151914) *
              C3241 +
          ((((C23043 * C549 + C23634 + C23634 + C152149 * C573 + C23045 * C548 +
              C23635 + C23635 + C151796 * C572) *
                 C152080 * C23040 +
             (C24422 + C24423) * C152080 * C23041 + C25583 * C23042) *
                C152246 -
            (C23402 * C23042 + (C23387 + C23386) * C152080 * C23041 +
             (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
              C23059 + C23059 + C152149 * C159) *
                 C152080 * C23040) *
                C152259 -
            ((C26688 + C26689) * C152080 * C23042 +
             (C26690 + C26691) * C152080 * C23041 +
             (C23045 * C553 + C23644 + C23644 + C151796 * C577 + C23043 * C552 +
              C23645 + C23645 + C152149 * C576) *
                 C152080 * C23040) *
                C152217) *
               C3101 +
           (((C23386 + C23387) * C152080 * C23040 +
             (C23388 + C23389) * C152080 * C23041 + C25279 * C23042) *
                C152259 -
            ((C25588 + C25589) * C152080 * C23042 +
             (C24425 + C24424) * C152080 * C23041 +
             (C24423 + C24422) * C152080 * C23040) *
                C152246 +
            ((C26691 + C26690) * C152080 * C23040 +
             (C26689 + C26688) * C152080 * C23041 +
             (C23043 * C8065 + C26678 + C26678 + C152149 * C8071 +
              C23045 * C8066 + C26679 + C26679 + C151796 * C8072) *
                 C152080 * C23042) *
                C152217) *
               C151914) *
              C151834)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
             C23049 + C23049 + C151796 * C159) *
                C45770 +
            (C46294 + C46295) * C45771 + C46312 * C45772) *
               C152054 * C151869 * C3101 -
           (C47587 * C45772 + (C24420 + C24421) * C45771 +
            (C23381 + C23380) * C45770) *
               C152054 * C151869 * C151914) *
              C152264 +
          (((C23386 + C23387) * C45770 + (C24422 + C24423) * C45771 +
            C49146 * C45772) *
               C152054 * C151869 * C151914 -
           (C46313 * C45772 + (C46301 + C46300) * C45771 +
            (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
             C23059 + C23059 + C152149 * C159) *
                C45770) *
               C152054 * C151869 * C3101) *
              C152257 +
          (((C23043 * C144 + C23060 + C23060 + C152149 * C160 + C23045 * C145 +
             C23061 + C23061 + C151796 * C161) *
                C45770 +
            (C46306 + C46307) * C45771 + C46314 * C45772) *
               C152054 * C151869 * C3101 -
           ((C47028 + C47027) * C45772 + (C24428 + C24429) * C45771 +
            (C23393 + C23392) * C45770) *
               C152054 * C151869 * C151914) *
              C152242 +
          (((C23870 + C23871) * C45770 +
            (C23043 * C1086 + C24070 + C24070 + C152149 * C1098 +
             C23045 * C1087 + C24071 + C24071 + C151796 * C1099) *
                C45771 +
            (C23043 * C1531 + C46509 + C46509 + C152149 * C1555 +
             C23045 * C2677 + C46510 + C46510 + C151796 * C2679) *
                C45772) *
               C152054 * C151869 * C151914 -
           ((C46726 + C46725) * C45772 + (C46724 + C46723) * C45771 +
            (C23045 * C146 + C23070 + C23070 + C151796 * C162 + C23043 * C145 +
             C23071 + C23071 + C152149 * C161) *
                C45770) *
               C152054 * C151869 * C3101) *
              C152218)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
             C23049 + C23049 + C151796 * C159) *
                C45770 +
            (C46294 + C46295) * C45771 + C46312 * C45772) *
               C152054 * C151869 * C152265 -
           (C47587 * C45772 + (C24420 + C24421) * C45771 +
            (C23381 + C23380) * C45770) *
               C152054 * C151869 * C152261 +
           (C23398 * C45770 + (C24419 + C24418) * C45771 + C25076 * C45772) *
               C152054 * C151869 * C152249 -
           ((C25074 + C25075) * C45772 + (C25073 + C25072) * C45771 +
            C24776 * C45770) *
               C152054 * C151869 * C152224) *
              C3241 +
          (((C23386 + C23387) * C45770 + (C24422 + C24423) * C45771 +
            C49146 * C45772) *
               C152054 * C151869 * C152261 -
           (C46313 * C45772 + (C46301 + C46300) * C45771 +
            (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
             C23059 + C23059 + C152149 * C159) *
                C45770) *
               C152054 * C151869 * C152265 -
           ((C26688 + C26689) * C45772 + (C24425 + C24424) * C45771 +
            C23399 * C45770) *
               C152054 * C151869 * C152249 +
           (C25272 * C45770 + (C25589 + C25588) * C45771 +
            (C23043 * C8065 + C26678 + C26678 + C152149 * C8071 +
             C23045 * C8066 + C26679 + C26679 + C151796 * C8072) *
                C45772) *
               C152054 * C151869 * C152224) *
              C151834)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
              C23049 + C23049 + C151796 * C159) *
                 C45770 +
             (C46294 + C46295) * C45771 + C46312 * C45772) *
                C152054 * C152259 -
            (C48830 * C45772 + (C46297 + C46296) * C45771 +
             (C46295 + C46294) * C45770) *
                C152054 * C152246 +
            (C46312 * C45770 + (C46299 + C46298) * C45771 + C48855 * C45772) *
                C152054 * C152217) *
               C3101 +
           (((C24421 + C24420) * C45770 + (C25068 + C25069) * C45771 +
             C49563 * C45772) *
                C152054 * C152246 -
            (C47587 * C45772 + (C24420 + C24421) * C45771 +
             (C23381 + C23380) * C45770) *
                C152054 * C152259 -
            ((C49574 + C49575) * C45772 + (C27112 + C27113) * C45771 +
             C47587 * C45770) *
                C152054 * C152217) *
               C151914) *
              C3241 +
          ((((C46300 + C46301) * C45770 + (C46302 + C46303) * C45771 +
             C49353 * C45772) *
                C152054 * C152246 -
            (C46313 * C45772 + (C46301 + C46300) * C45771 +
             (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
              C23059 + C23059 + C152149 * C159) *
                 C45770) *
                C152054 * C152259 -
            ((C49364 + C49365) * C45772 + (C46305 + C46304) * C45771 +
             C46313 * C45770) *
                C152054 * C152217) *
               C3101 +
           (((C23386 + C23387) * C45770 + (C24422 + C24423) * C45771 +
             C49146 * C45772) *
                C152054 * C152259 -
            ((C49157 + C49158) * C45772 + (C26690 + C26691) * C45771 +
             (C24423 + C24422) * C45770) *
                C152054 * C152246 +
            (C49146 * C45770 + (C49158 + C49157) * C45771 +
             (C23043 * C9427 + C49151 + C49151 + C152149 * C9433 +
              C23045 * C9428 + C49152 + C49152 + C151796 * C9434) *
                 C45772) *
                C152054 * C152217) *
               C151914) *
              C151834)) /
            (p * q * std::sqrt(p + q));
    d2ee[153] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
              C23049 + C23049 + C151796 * C159) *
                 C152080 * C23040 +
             (C23380 + C23381) * C152080 * C23041 + C23401 * C23042) *
                C152173 -
            (C25051 * C23042 + (C24420 + C24421) * C152080 * C23041 +
             (C23045 * C549 + C23626 + C23626 + C151796 * C573 + C23043 * C550 +
              C23627 + C23627 + C152149 * C574) *
                 C152080 * C23040) *
                C151956) *
               C3101 +
           (((C24421 + C24420) * C152080 * C23040 +
             (C24419 + C24418) * C152080 * C23041 + C25797 * C23042) *
                C151956 -
            (C24789 * C23042 + (C23383 + C23382) * C152080 * C23041 +
             (C23381 + C23380) * C152080 * C23040) *
                C152173) *
               C151914) *
              C151828 +
          ((((C23043 * C549 + C23634 + C23634 + C152149 * C573 + C23045 * C548 +
              C23635 + C23635 + C151796 * C572) *
                 C152080 * C23040 +
             (C24422 + C24423) * C152080 * C23041 + C25583 * C23042) *
                C151956 -
            (C23402 * C23042 + (C23387 + C23386) * C152080 * C23041 +
             (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
              C23059 + C23059 + C152149 * C159) *
                 C152080 * C23040) *
                C152173) *
               C3101 +
           (((C23386 + C23387) * C152080 * C23040 +
             (C23388 + C23389) * C152080 * C23041 + C25279 * C23042) *
                C152173 -
            ((C25588 + C25589) * C152080 * C23042 +
             (C24425 + C24424) * C152080 * C23041 +
             (C24423 + C24422) * C152080 * C23040) *
                C151956) *
               C151914) *
              C151837 +
          ((((C23043 * C144 + C23060 + C23060 + C152149 * C160 + C23045 * C145 +
              C23061 + C23061 + C151796 * C161) *
                 C152080 * C23040 +
             (C23392 + C23393) * C152080 * C23041 + C23403 * C23042) *
                C152173 -
            ((C24426 + C24427) * C152080 * C23042 +
             (C24428 + C24429) * C152080 * C23041 +
             (C23045 * C547 + C23650 + C23650 + C151796 * C571 + C23043 * C548 +
              C23651 + C23651 + C152149 * C572) *
                 C152080 * C23040) *
                C151956) *
               C3101 +
           (((C24429 + C24428) * C152080 * C23040 +
             (C24427 + C24426) * C152080 * C23041 +
             (C23043 * C2055 + C24392 + C24392 + C152149 * C2063 +
              C23045 * C2056 + C24393 + C24393 + C151796 * C2064) *
                 C152080 * C23042) *
                C151956 -
            ((C23396 + C23397) * C152080 * C23042 +
             (C23395 + C23394) * C152080 * C23041 +
             (C23393 + C23392) * C152080 * C23040) *
                C152173) *
               C151914) *
              C3588)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
             C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
             C140 * C145 + C170 + C170 + C124 * C161) *
                C152080 * C152054 * C152173 -
            (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
             C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
             C134 * C550 + C587 + C587 + C121 * C574) *
                C152080 * C152054 * C151956) *
               C3101 +
           ((C134 * C1083 + C1102 + C1102 + C121 * C1095 + C136 * C1084 +
             C1103 + C1103 + C122 * C1096 + C138 * C1085 + C1104 + C1104 +
             C123 * C1097 + C140 * C1086 + C1105 + C1105 + C124 * C1098) *
                C152080 * C152054 * C151956 -
            (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
             C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
             C134 * C341 + C378 + C378 + C121 * C365) *
                C152080 * C152054 * C152173) *
               C151914) *
              C151828 +
          (((C134 * C549 + C592 + C592 + C121 * C573 + C136 * C548 + C593 +
             C593 + C122 * C572 + C138 * C547 + C594 + C594 + C123 * C571 +
             C140 * C555 + C595 + C595 + C124 * C579) *
                C152080 * C152054 * C151956 -
            (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
             C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
             C134 * C143 + C174 + C174 + C121 * C159) *
                C152080 * C152054 * C152173) *
               C3101 +
           ((C134 * C340 + C383 + C383 + C121 * C364 + C136 * C339 + C384 +
             C384 + C122 * C363 + C138 * C338 + C385 + C385 + C123 * C362 +
             C140 * C346 + C386 + C386 + C124 * C370) *
                C152080 * C152054 * C152173 -
            (C140 * C1087 + C1106 + C1106 + C124 * C1099 + C138 * C1086 +
             C1107 + C1107 + C123 * C1098 + C136 * C1085 + C1108 + C1108 +
             C122 * C1097 + C134 * C1084 + C1109 + C1109 + C121 * C1096) *
                C152080 * C152054 * C151956) *
               C151914) *
              C151837 +
          (((C134 * C144 + C175 + C175 + C121 * C160 + C136 * C145 + C176 +
             C176 + C122 * C161 + C138 * C146 + C177 + C177 + C123 * C162 +
             C140 * C147 + C178 + C178 + C124 * C163) *
                C152080 * C152054 * C152173 -
            (C140 * C557 + C600 + C600 + C124 * C581 + C138 * C555 + C601 +
             C601 + C123 * C579 + C136 * C547 + C602 + C602 + C122 * C571 +
             C134 * C548 + C603 + C603 + C121 * C572) *
                C152080 * C152054 * C151956) *
               C3101 +
           ((C134 * C1085 + C1110 + C1110 + C121 * C1097 + C136 * C1086 +
             C1111 + C1111 + C122 * C1098 + C138 * C1087 + C1112 + C1112 +
             C123 * C1099 + C140 * C1088 + C1113 + C1113 + C124 * C1100) *
                C152080 * C152054 * C151956 -
            (C140 * C348 + C391 + C391 + C124 * C372 + C138 * C346 + C392 +
             C392 + C123 * C370 + C136 * C338 + C393 + C393 + C122 * C362 +
             C134 * C339 + C394 + C394 + C121 * C363) *
                C152080 * C152054 * C152173) *
               C151914) *
              C3588)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
              C23049 + C23049 + C151796 * C159) *
                 C45770 +
             (C46294 + C46295) * C45771 + C46312 * C45772) *
                C152054 * C152173 -
            (C48830 * C45772 + (C46297 + C46296) * C45771 +
             (C46295 + C46294) * C45770) *
                C152054 * C151956) *
               C3101 +
           (((C24421 + C24420) * C45770 + (C25068 + C25069) * C45771 +
             C49563 * C45772) *
                C152054 * C151956 -
            (C47587 * C45772 + (C24420 + C24421) * C45771 +
             (C23381 + C23380) * C45770) *
                C152054 * C152173) *
               C151914) *
              C151828 +
          ((((C46300 + C46301) * C45770 + (C46302 + C46303) * C45771 +
             C49353 * C45772) *
                C152054 * C151956 -
            (C46313 * C45772 + (C46301 + C46300) * C45771 +
             (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
              C23059 + C23059 + C152149 * C159) *
                 C45770) *
                C152054 * C152173) *
               C3101 +
           (((C23386 + C23387) * C45770 + (C24422 + C24423) * C45771 +
             C49146 * C45772) *
                C152054 * C152173 -
            ((C49157 + C49158) * C45772 + (C26690 + C26691) * C45771 +
             (C24423 + C24422) * C45770) *
                C152054 * C151956) *
               C151914) *
              C151837 +
          ((((C23043 * C144 + C23060 + C23060 + C152149 * C160 + C23045 * C145 +
              C23061 + C23061 + C151796 * C161) *
                 C45770 +
             (C46306 + C46307) * C45771 + C46314 * C45772) *
                C152054 * C152173 -
            ((C46310 + C46311) * C45772 + (C46309 + C46308) * C45771 +
             (C46307 + C46306) * C45770) *
                C152054 * C151956) *
               C3101 +
           (((C24429 + C24428) * C45770 + (C47027 + C47028) * C45771 +
             (C23043 * C2957 + C47021 + C47021 + C152149 * C2965 +
              C23045 * C2958 + C47022 + C47022 + C151796 * C2966) *
                 C45772) *
                C152054 * C151956 -
            ((C47028 + C47027) * C45772 + (C24428 + C24429) * C45771 +
             (C23393 + C23392) * C45770) *
                C152054 * C152173) *
               C151914) *
              C3588)) /
            (p * q * std::sqrt(p + q));
    d2ee[154] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
            C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
            C140 * C145 + C170 + C170 + C124 * C161) *
               C152080 * C152054 * C151869 * C152265 -
           (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
            C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
            C134 * C341 + C378 + C378 + C121 * C365) *
               C152080 * C152054 * C151869 * C152261 +
           (C134 * C342 + C379 + C379 + C121 * C366 + C136 * C343 + C380 +
            C380 + C122 * C367 + C138 * C344 + C381 + C381 + C123 * C368 +
            C140 * C345 + C382 + C382 + C124 * C369) *
               C152080 * C152054 * C151869 * C152249 -
           (C140 * C1353 + C1378 + C1378 + C124 * C1369 + C138 * C1354 + C1379 +
            C1379 + C123 * C1370 + C136 * C1355 + C1380 + C1380 + C122 * C1371 +
            C134 * C1356 + C1381 + C1381 + C121 * C1372) *
               C152080 * C152054 * C151869 * C152224) *
              C3241 +
          ((C134 * C340 + C383 + C383 + C121 * C364 + C136 * C339 + C384 +
            C384 + C122 * C363 + C138 * C338 + C385 + C385 + C123 * C362 +
            C140 * C346 + C386 + C386 + C124 * C370) *
               C152080 * C152054 * C151869 * C152261 -
           (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
            C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
            C134 * C143 + C174 + C174 + C121 * C159) *
               C152080 * C152054 * C151869 * C152265 -
           (C140 * C347 + C387 + C387 + C124 * C371 + C138 * C345 + C388 +
            C388 + C123 * C369 + C136 * C344 + C389 + C389 + C122 * C368 +
            C134 * C343 + C390 + C390 + C121 * C367) *
               C152080 * C152054 * C151869 * C152249 +
           (C134 * C1355 + C1719 + C1719 + C121 * C1371 + C136 * C1354 + C1720 +
            C1720 + C122 * C1370 + C138 * C1353 + C1721 + C1721 + C123 * C1369 +
            C140 * C1715 + C1722 + C1722 + C124 * C1717) *
               C152080 * C152054 * C151869 * C152224) *
              C151834)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
            C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
            C140 * C145 + C170 + C170 + C124 * C161) *
               C152080 * C152054 * C151869 * C3101 -
           (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
            C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
            C134 * C341 + C378 + C378 + C121 * C365) *
               C152080 * C152054 * C151869 * C151914) *
              C152264 +
          ((C134 * C340 + C383 + C383 + C121 * C364 + C136 * C339 + C384 +
            C384 + C122 * C363 + C138 * C338 + C385 + C385 + C123 * C362 +
            C140 * C346 + C386 + C386 + C124 * C370) *
               C152080 * C152054 * C151869 * C151914 -
           (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
            C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
            C134 * C143 + C174 + C174 + C121 * C159) *
               C152080 * C152054 * C151869 * C3101) *
              C152257 +
          ((C134 * C144 + C175 + C175 + C121 * C160 + C136 * C145 + C176 +
            C176 + C122 * C161 + C138 * C146 + C177 + C177 + C123 * C162 +
            C140 * C147 + C178 + C178 + C124 * C163) *
               C152080 * C152054 * C151869 * C3101 -
           (C140 * C348 + C391 + C391 + C124 * C372 + C138 * C346 + C392 +
            C392 + C123 * C370 + C136 * C338 + C393 + C393 + C122 * C362 +
            C134 * C339 + C394 + C394 + C121 * C363) *
               C152080 * C152054 * C151869 * C151914) *
              C152242 +
          ((C134 * C338 + C747 + C747 + C121 * C362 + C136 * C346 + C748 +
            C748 + C122 * C370 + C138 * C348 + C749 + C749 + C123 * C372 +
            C140 * C743 + C750 + C750 + C124 * C745) *
               C152080 * C152054 * C151869 * C151914 -
           (C140 * C148 + C179 + C179 + C124 * C164 + C138 * C147 + C180 +
            C180 + C123 * C163 + C136 * C146 + C181 + C181 + C122 * C162 +
            C134 * C145 + C182 + C182 + C121 * C161) *
               C152080 * C152054 * C151869 * C3101) *
              C152218)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
             C23049 + C23049 + C151796 * C159) *
                C152080 * C23040 +
            (C23380 + C23381) * C152080 * C23041 + C23401 * C23042) *
               C151869 * C3101 -
           (C24789 * C23042 + (C23383 + C23382) * C152080 * C23041 +
            (C23381 + C23380) * C152080 * C23040) *
               C151869 * C151914) *
              C152264 +
          (((C23386 + C23387) * C152080 * C23040 +
            (C23388 + C23389) * C152080 * C23041 + C25279 * C23042) *
               C151869 * C151914 -
           (C23402 * C23042 + (C23387 + C23386) * C152080 * C23041 +
            (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
             C23059 + C23059 + C152149 * C159) *
                C152080 * C23040) *
               C151869 * C3101) *
              C152257 +
          (((C23043 * C144 + C23060 + C23060 + C152149 * C160 + C23045 * C145 +
             C23061 + C23061 + C151796 * C161) *
                C152080 * C23040 +
            (C23392 + C23393) * C152080 * C23041 + C23403 * C23042) *
               C151869 * C3101 -
           ((C23396 + C23397) * C152080 * C23042 +
            (C23395 + C23394) * C152080 * C23041 +
            (C23393 + C23392) * C152080 * C23040) *
               C151869 * C151914) *
              C152242 +
          (((C23870 + C23871) * C152080 * C23040 +
            (C23872 + C23873) * C152080 * C23041 +
            (C23043 * C1353 + C23860 + C23860 + C152149 * C1369 +
             C23045 * C1715 + C23861 + C23861 + C151796 * C1717) *
                C152080 * C23042) *
               C151869 * C151914 -
           ((C23873 + C23872) * C152080 * C23042 +
            (C23871 + C23870) * C152080 * C23041 +
            (C23045 * C146 + C23070 + C23070 + C151796 * C162 + C23043 * C145 +
             C23071 + C23071 + C152149 * C161) *
                C152080 * C23040) *
               C151869 * C3101) *
              C152218)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
             C23049 + C23049 + C151796 * C159) *
                C152080 * C23040 +
            (C23380 + C23381) * C152080 * C23041 + C23401 * C23042) *
               C151869 * C152265 -
           (C24789 * C23042 + (C23383 + C23382) * C152080 * C23041 +
            (C23381 + C23380) * C152080 * C23040) *
               C151869 * C152261 +
           (C23401 * C23040 + (C23385 + C23384) * C152080 * C23041 +
            C24803 * C23042) *
               C151869 * C152249 -
           ((C24800 + C24801) * C152080 * C23042 +
            (C24799 + C24798) * C152080 * C23041 + C24789 * C23040) *
               C151869 * C152224) *
              C3241 +
          (((C23386 + C23387) * C152080 * C23040 +
            (C23388 + C23389) * C152080 * C23041 + C25279 * C23042) *
               C151869 * C152261 -
           (C23402 * C23042 + (C23387 + C23386) * C152080 * C23041 +
            (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
             C23059 + C23059 + C152149 * C159) *
                C152080 * C23040) *
               C151869 * C152265 -
           ((C25284 + C25285) * C152080 * C23042 +
            (C23391 + C23390) * C152080 * C23041 + C23402 * C23040) *
               C151869 * C152249 +
           (C25279 * C23040 + (C25285 + C25284) * C152080 * C23041 +
            (C23043 * C7802 + C25277 + C25277 + C152149 * C7808 +
             C23045 * C7803 + C25278 + C25278 + C151796 * C7809) *
                C152080 * C23042) *
               C151869 * C152224) *
              C151834)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
             C23049 + C23049 + C151796 * C159) *
                C45770 +
            (C46294 + C46295) * C45771 + C46312 * C45772) *
               C152054 * C151869 * C3101 -
           (C47587 * C45772 + (C24420 + C24421) * C45771 +
            (C23381 + C23380) * C45770) *
               C152054 * C151869 * C151914) *
              C152264 +
          (((C23386 + C23387) * C45770 + (C24422 + C24423) * C45771 +
            C49146 * C45772) *
               C152054 * C151869 * C151914 -
           (C46313 * C45772 + (C46301 + C46300) * C45771 +
            (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
             C23059 + C23059 + C152149 * C159) *
                C45770) *
               C152054 * C151869 * C3101) *
              C152257 +
          (((C23043 * C144 + C23060 + C23060 + C152149 * C160 + C23045 * C145 +
             C23061 + C23061 + C151796 * C161) *
                C45770 +
            (C46306 + C46307) * C45771 + C46314 * C45772) *
               C152054 * C151869 * C3101 -
           ((C47028 + C47027) * C45772 + (C24428 + C24429) * C45771 +
            (C23393 + C23392) * C45770) *
               C152054 * C151869 * C151914) *
              C152242 +
          (((C23870 + C23871) * C45770 +
            (C23043 * C1086 + C24070 + C24070 + C152149 * C1098 +
             C23045 * C1087 + C24071 + C24071 + C151796 * C1099) *
                C45771 +
            (C23043 * C1531 + C46509 + C46509 + C152149 * C1555 +
             C23045 * C2677 + C46510 + C46510 + C151796 * C2679) *
                C45772) *
               C152054 * C151869 * C151914 -
           ((C46726 + C46725) * C45772 + (C46724 + C46723) * C45771 +
            (C23045 * C146 + C23070 + C23070 + C151796 * C162 + C23043 * C145 +
             C23071 + C23071 + C152149 * C161) *
                C45770) *
               C152054 * C151869 * C3101) *
              C152218)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
             C23049 + C23049 + C151796 * C159) *
                C45770 +
            (C46294 + C46295) * C45771 + C46312 * C45772) *
               C152054 * C151869 * C152265 -
           (C47587 * C45772 + (C24420 + C24421) * C45771 +
            (C23381 + C23380) * C45770) *
               C152054 * C151869 * C152261 +
           (C23398 * C45770 + (C24419 + C24418) * C45771 + C25076 * C45772) *
               C152054 * C151869 * C152249 -
           ((C25074 + C25075) * C45772 + (C25073 + C25072) * C45771 +
            C24776 * C45770) *
               C152054 * C151869 * C152224) *
              C3241 +
          (((C23386 + C23387) * C45770 + (C24422 + C24423) * C45771 +
            C49146 * C45772) *
               C152054 * C151869 * C152261 -
           (C46313 * C45772 + (C46301 + C46300) * C45771 +
            (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
             C23059 + C23059 + C152149 * C159) *
                C45770) *
               C152054 * C151869 * C152265 -
           ((C26688 + C26689) * C45772 + (C24425 + C24424) * C45771 +
            C23399 * C45770) *
               C152054 * C151869 * C152249 +
           (C25272 * C45770 + (C25589 + C25588) * C45771 +
            (C23043 * C8065 + C26678 + C26678 + C152149 * C8071 +
             C23045 * C8066 + C26679 + C26679 + C151796 * C8072) *
                C45772) *
               C152054 * C151869 * C152224) *
              C151834)) /
            (p * q * std::sqrt(p + q));
    d2ee[155] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
              C23049 + C23049 + C151796 * C159) *
                 C152080 * C23040 +
             (C23380 + C23381) * C152080 * C23041 + C23401 * C23042) *
                C4107 -
            (C25051 * C23042 + (C24420 + C24421) * C152080 * C23041 +
             (C23045 * C549 + C23626 + C23626 + C151796 * C573 + C23043 * C550 +
              C23627 + C23627 + C152149 * C574) *
                 C152080 * C23040) *
                C151956) *
               C151910 +
           (((C24421 + C24420) * C152080 * C23040 +
             (C24419 + C24418) * C152080 * C23041 + C25797 * C23042) *
                C151956 -
            (C24789 * C23042 + (C23383 + C23382) * C152080 * C23041 +
             (C23381 + C23380) * C152080 * C23040) *
                C4107) *
               C151917 +
           ((C23401 * C23040 + (C23385 + C23384) * C152080 * C23041 +
             C24803 * C23042) *
                C4107 -
            ((C25802 + C25803) * C152080 * C23042 +
             (C25073 + C25072) * C152080 * C23041 + C25051 * C23040) *
                C151956) *
               C3585) *
              C152158 +
          ((((C23043 * C549 + C23634 + C23634 + C152149 * C573 + C23045 * C548 +
              C23635 + C23635 + C151796 * C572) *
                 C152080 * C23040 +
             (C24422 + C24423) * C152080 * C23041 + C25583 * C23042) *
                C151956 -
            (C23402 * C23042 + (C23387 + C23386) * C152080 * C23041 +
             (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
              C23059 + C23059 + C152149 * C159) *
                 C152080 * C23040) *
                C4107) *
               C151910 +
           (((C23386 + C23387) * C152080 * C23040 +
             (C23388 + C23389) * C152080 * C23041 + C25279 * C23042) *
                C4107 -
            ((C25588 + C25589) * C152080 * C23042 +
             (C24425 + C24424) * C152080 * C23041 +
             (C24423 + C24422) * C152080 * C23040) *
                C151956) *
               C151917 +
           ((C25583 * C23040 + (C25589 + C25588) * C152080 * C23041 +
             (C23043 * C8842 + C25581 + C25581 + C152149 * C8848 +
              C23045 * C8843 + C25582 + C25582 + C151796 * C8849) *
                 C152080 * C23042) *
                C151956 -
            ((C25284 + C25285) * C152080 * C23042 +
             (C23391 + C23390) * C152080 * C23041 + C23402 * C23040) *
                C4107) *
               C3585) *
              C151834)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
             C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
             C140 * C145 + C170 + C170 + C124 * C161) *
                C152080 * C152054 * C4107 -
            (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
             C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
             C134 * C550 + C587 + C587 + C121 * C574) *
                C152080 * C152054 * C151956) *
               C151910 +
           ((C134 * C1083 + C1102 + C1102 + C121 * C1095 + C136 * C1084 +
             C1103 + C1103 + C122 * C1096 + C138 * C1085 + C1104 + C1104 +
             C123 * C1097 + C140 * C1086 + C1105 + C1105 + C124 * C1098) *
                C152080 * C152054 * C151956 -
            (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
             C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
             C134 * C341 + C378 + C378 + C121 * C365) *
                C152080 * C152054 * C4107) *
               C151917 +
           ((C134 * C342 + C379 + C379 + C121 * C366 + C136 * C343 + C380 +
             C380 + C122 * C367 + C138 * C344 + C381 + C381 + C123 * C368 +
             C140 * C345 + C382 + C382 + C124 * C369) *
                C152080 * C152054 * C4107 -
            (C140 * C1535 + C1572 + C1572 + C124 * C1559 + C138 * C1536 +
             C1573 + C1573 + C123 * C1560 + C136 * C1537 + C1574 + C1574 +
             C122 * C1561 + C134 * C1538 + C1575 + C1575 + C121 * C1562) *
                C152080 * C152054 * C151956) *
               C3585) *
              C152158 +
          (((C134 * C549 + C592 + C592 + C121 * C573 + C136 * C548 + C593 +
             C593 + C122 * C572 + C138 * C547 + C594 + C594 + C123 * C571 +
             C140 * C555 + C595 + C595 + C124 * C579) *
                C152080 * C152054 * C151956 -
            (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
             C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
             C134 * C143 + C174 + C174 + C121 * C159) *
                C152080 * C152054 * C4107) *
               C151910 +
           ((C134 * C340 + C383 + C383 + C121 * C364 + C136 * C339 + C384 +
             C384 + C122 * C363 + C138 * C338 + C385 + C385 + C123 * C362 +
             C140 * C346 + C386 + C386 + C124 * C370) *
                C152080 * C152054 * C4107 -
            (C140 * C1087 + C1106 + C1106 + C124 * C1099 + C138 * C1086 +
             C1107 + C1107 + C123 * C1098 + C136 * C1085 + C1108 + C1108 +
             C122 * C1097 + C134 * C1084 + C1109 + C1109 + C121 * C1096) *
                C152080 * C152054 * C151956) *
               C151917 +
           ((C134 * C1537 + C1920 + C1920 + C121 * C1561 + C136 * C1536 +
             C1921 + C1921 + C122 * C1560 + C138 * C1535 + C1922 + C1922 +
             C123 * C1559 + C140 * C1916 + C1923 + C1923 + C124 * C1918) *
                C152080 * C152054 * C151956 -
            (C140 * C347 + C387 + C387 + C124 * C371 + C138 * C345 + C388 +
             C388 + C123 * C369 + C136 * C344 + C389 + C389 + C122 * C368 +
             C134 * C343 + C390 + C390 + C121 * C367) *
                C152080 * C152054 * C4107) *
               C3585) *
              C151834)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
              C23049 + C23049 + C151796 * C159) *
                 C45770 +
             (C46294 + C46295) * C45771 + C46312 * C45772) *
                C152054 * C4107 -
            (C48830 * C45772 + (C46297 + C46296) * C45771 +
             (C46295 + C46294) * C45770) *
                C152054 * C151956) *
               C151910 +
           (((C24421 + C24420) * C45770 + (C25068 + C25069) * C45771 +
             C49563 * C45772) *
                C152054 * C151956 -
            (C47587 * C45772 + (C24420 + C24421) * C45771 +
             (C23381 + C23380) * C45770) *
                C152054 * C4107) *
               C151917 +
           ((C23398 * C45770 + (C24419 + C24418) * C45771 + C25076 * C45772) *
                C152054 * C4107 -
            ((C27110 + C27111) * C45772 + (C25071 + C25070) * C45771 +
             C25028 * C45770) *
                C152054 * C151956) *
               C3585) *
              C152158 +
          ((((C46300 + C46301) * C45770 + (C46302 + C46303) * C45771 +
             C49353 * C45772) *
                C152054 * C151956 -
            (C46313 * C45772 + (C46301 + C46300) * C45771 +
             (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
              C23059 + C23059 + C152149 * C159) *
                 C45770) *
                C152054 * C4107) *
               C151910 +
           (((C23386 + C23387) * C45770 + (C24422 + C24423) * C45771 +
             C49146 * C45772) *
                C152054 * C4107 -
            ((C49157 + C49158) * C45772 + (C26690 + C26691) * C45771 +
             (C24423 + C24422) * C45770) *
                C152054 * C151956) *
               C151917 +
           ((C25576 * C45770 + (C26689 + C26688) * C45771 +
             (C23043 * C10150 + C26890 + C26890 + C152149 * C10156 +
              C23045 * C10151 + C26891 + C26891 + C151796 * C10157) *
                 C45772) *
                C152054 * C151956 -
            ((C26688 + C26689) * C45772 + (C24425 + C24424) * C45771 +
             C23399 * C45770) *
                C152054 * C4107) *
               C3585) *
              C151834)) /
            (p * q * std::sqrt(p + q));
    d2ee[156] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
             C23049 + C23049 + C151796 * C159) *
                C152080 * C23040 +
            (C23380 + C23381) * C152080 * C23041 + C23401 * C23042) *
               C151952 -
           (C25051 * C23042 + (C24420 + C24421) * C152080 * C23041 +
            (C23045 * C549 + C23626 + C23626 + C151796 * C573 + C23043 * C550 +
             C23627 + C23627 + C152149 * C574) *
                C152080 * C23040) *
               C151959 +
           ((C23043 * C551 + C23628 + C23628 + C152149 * C575 + C23045 * C552 +
             C23629 + C23629 + C151796 * C576) *
                C152080 * C23040 +
            (C25068 + C25069) * C152080 * C23041 + C25077 * C23042) *
               C4779) *
              C151910 +
          (((C24421 + C24420) * C152080 * C23040 +
            (C24419 + C24418) * C152080 * C23041 + C25797 * C23042) *
               C151959 -
           (C24789 * C23042 + (C23383 + C23382) * C152080 * C23041 +
            (C23381 + C23380) * C152080 * C23040) *
               C151952 -
           ((C25074 + C25075) * C152080 * C23042 +
            (C25071 + C25070) * C152080 * C23041 +
            (C25069 + C25068) * C152080 * C23040) *
               C4779) *
              C151917 +
          ((C23401 * C23040 + (C23385 + C23384) * C152080 * C23041 +
            C24803 * C23042) *
               C151952 -
           ((C25802 + C25803) * C152080 * C23042 +
            (C25073 + C25072) * C152080 * C23041 + C25051 * C23040) *
               C151959 +
           (C25077 * C23040 + (C25075 + C25074) * C152080 * C23041 +
            (C23043 * C25021 + C25049 + C25049 + C152149 * C25025 +
             C23045 * C25022 + C25050 + C25050 + C151796 * C25026) *
                C152080 * C23042) *
               C4779) *
              C3585) *
         C151823) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
            C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
            C140 * C145 + C170 + C170 + C124 * C161) *
               C152080 * C152054 * C151952 -
           (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
            C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
            C134 * C550 + C587 + C587 + C121 * C574) *
               C152080 * C152054 * C151959 +
           (C134 * C551 + C588 + C588 + C121 * C575 + C136 * C552 + C589 +
            C589 + C122 * C576 + C138 * C553 + C590 + C590 + C123 * C577 +
            C140 * C554 + C591 + C591 + C124 * C578) *
               C152080 * C152054 * C4779) *
              C151910 +
          ((C134 * C1083 + C1102 + C1102 + C121 * C1095 + C136 * C1084 + C1103 +
            C1103 + C122 * C1096 + C138 * C1085 + C1104 + C1104 + C123 * C1097 +
            C140 * C1086 + C1105 + C1105 + C124 * C1098) *
               C152080 * C152054 * C151959 -
           (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
            C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
            C134 * C341 + C378 + C378 + C121 * C365) *
               C152080 * C152054 * C151952 -
           (C140 * C1531 + C1568 + C1568 + C124 * C1555 + C138 * C1532 + C1569 +
            C1569 + C123 * C1556 + C136 * C1533 + C1570 + C1570 + C122 * C1557 +
            C134 * C1534 + C1571 + C1571 + C121 * C1558) *
               C152080 * C152054 * C4779) *
              C151917 +
          ((C134 * C342 + C379 + C379 + C121 * C366 + C136 * C343 + C380 +
            C380 + C122 * C367 + C138 * C344 + C381 + C381 + C123 * C368 +
            C140 * C345 + C382 + C382 + C124 * C369) *
               C152080 * C152054 * C151952 -
           (C140 * C1535 + C1572 + C1572 + C124 * C1559 + C138 * C1536 + C1573 +
            C1573 + C123 * C1560 + C136 * C1537 + C1574 + C1574 + C122 * C1561 +
            C134 * C1538 + C1575 + C1575 + C121 * C1562) *
               C152080 * C152054 * C151959 +
           (C134 * C1539 + C1576 + C1576 + C121 * C1563 + C136 * C1540 + C1577 +
            C1577 + C122 * C1564 + C138 * C1541 + C1578 + C1578 + C123 * C1565 +
            C140 * C1542 + C1579 + C1579 + C124 * C1566) *
               C152080 * C152054 * C4779) *
              C3585) *
         C151823) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
             C23049 + C23049 + C151796 * C159) *
                C45770 +
            (C46294 + C46295) * C45771 + C46312 * C45772) *
               C152054 * C151952 -
           (C48830 * C45772 + (C46297 + C46296) * C45771 +
            (C46295 + C46294) * C45770) *
               C152054 * C151959 +
           (C46312 * C45770 + (C46299 + C46298) * C45771 + C48855 * C45772) *
               C152054 * C4779) *
              C151910 +
          (((C24421 + C24420) * C45770 + (C25068 + C25069) * C45771 +
            C49563 * C45772) *
               C152054 * C151959 -
           (C47587 * C45772 + (C24420 + C24421) * C45771 +
            (C23381 + C23380) * C45770) *
               C152054 * C151952 -
           ((C49574 + C49575) * C45772 + (C27112 + C27113) * C45771 +
            C47587 * C45770) *
               C152054 * C4779) *
              C151917 +
          ((C23398 * C45770 + (C24419 + C24418) * C45771 + C25076 * C45772) *
               C152054 * C151952 -
           ((C27110 + C27111) * C45772 + (C25071 + C25070) * C45771 +
            C25028 * C45770) *
               C152054 * C151959 +
           (C25076 * C45770 + (C27111 + C27110) * C45771 +
            (C23043 * C26361 + C26378 + C26378 + C152149 * C26365 +
             C23045 * C26362 + C26379 + C26379 + C151796 * C26366) *
                C45772) *
               C152054 * C4779) *
              C3585) *
         C151823) /
            (p * q * std::sqrt(p + q));
    d2ee[157] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
                 C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
                 C140 * C145 + C170 + C170 + C124 * C161) *
                    C152080 * C152054 * C4107 -
                (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
                 C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
                 C134 * C550 + C587 + C587 + C121 * C574) *
                    C152080 * C152054 * C151956) *
                   C3101 +
               ((C134 * C1083 + C1102 + C1102 + C121 * C1095 + C136 * C1084 +
                 C1103 + C1103 + C122 * C1096 + C138 * C1085 + C1104 + C1104 +
                 C123 * C1097 + C140 * C1086 + C1105 + C1105 + C124 * C1098) *
                    C152080 * C152054 * C151956 -
                (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
                 C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
                 C134 * C341 + C378 + C378 + C121 * C365) *
                    C152080 * C152054 * C4107) *
                   C151914) *
                  C152255 +
              (((C134 * C549 + C592 + C592 + C121 * C573 + C136 * C548 + C593 +
                 C593 + C122 * C572 + C138 * C547 + C594 + C594 + C123 * C571 +
                 C140 * C555 + C595 + C595 + C124 * C579) *
                    C152080 * C152054 * C151956 -
                (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
                 C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
                 C134 * C143 + C174 + C174 + C121 * C159) *
                    C152080 * C152054 * C4107) *
                   C3101 +
               ((C134 * C340 + C383 + C383 + C121 * C364 + C136 * C339 + C384 +
                 C384 + C122 * C363 + C138 * C338 + C385 + C385 + C123 * C362 +
                 C140 * C346 + C386 + C386 + C124 * C370) *
                    C152080 * C152054 * C4107 -
                (C140 * C1087 + C1106 + C1106 + C124 * C1099 + C138 * C1086 +
                 C1107 + C1107 + C123 * C1098 + C136 * C1085 + C1108 + C1108 +
                 C122 * C1097 + C134 * C1084 + C1109 + C1109 + C121 * C1096) *
                    C152080 * C152054 * C151956) *
                   C151914) *
                  C152240 +
              (((C134 * C144 + C175 + C175 + C121 * C160 + C136 * C145 + C176 +
                 C176 + C122 * C161 + C138 * C146 + C177 + C177 + C123 * C162 +
                 C140 * C147 + C178 + C178 + C124 * C163) *
                    C152080 * C152054 * C4107 -
                (C140 * C557 + C600 + C600 + C124 * C581 + C138 * C555 + C601 +
                 C601 + C123 * C579 + C136 * C547 + C602 + C602 + C122 * C571 +
                 C134 * C548 + C603 + C603 + C121 * C572) *
                    C152080 * C152054 * C151956) *
                   C3101 +
               ((C134 * C1085 + C1110 + C1110 + C121 * C1097 + C136 * C1086 +
                 C1111 + C1111 + C122 * C1098 + C138 * C1087 + C1112 + C1112 +
                 C123 * C1099 + C140 * C1088 + C1113 + C1113 + C124 * C1100) *
                    C152080 * C152054 * C151956 -
                (C140 * C348 + C391 + C391 + C124 * C372 + C138 * C346 + C392 +
                 C392 + C123 * C370 + C136 * C338 + C393 + C393 + C122 * C362 +
                 C134 * C339 + C394 + C394 + C121 * C363) *
                    C152080 * C152054 * C4107) *
                   C151914) *
                  C152208) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
                C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
                C140 * C145 + C170 + C170 + C124 * C161) *
                   C152080 * C152054 * C4107 -
               (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
                C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
                C134 * C550 + C587 + C587 + C121 * C574) *
                   C152080 * C152054 * C151956) *
                  C152265 +
              ((C134 * C1083 + C1102 + C1102 + C121 * C1095 + C136 * C1084 +
                C1103 + C1103 + C122 * C1096 + C138 * C1085 + C1104 + C1104 +
                C123 * C1097 + C140 * C1086 + C1105 + C1105 + C124 * C1098) *
                   C152080 * C152054 * C151956 -
               (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
                C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
                C134 * C341 + C378 + C378 + C121 * C365) *
                   C152080 * C152054 * C4107) *
                  C152261 +
              ((C134 * C342 + C379 + C379 + C121 * C366 + C136 * C343 + C380 +
                C380 + C122 * C367 + C138 * C344 + C381 + C381 + C123 * C368 +
                C140 * C345 + C382 + C382 + C124 * C369) *
                   C152080 * C152054 * C4107 -
               (C140 * C1535 + C1572 + C1572 + C124 * C1559 + C138 * C1536 +
                C1573 + C1573 + C123 * C1560 + C136 * C1537 + C1574 + C1574 +
                C122 * C1561 + C134 * C1538 + C1575 + C1575 + C121 * C1562) *
                   C152080 * C152054 * C151956) *
                  C152249 +
              ((C134 * C2053 + C2066 + C2066 + C121 * C2061 + C136 * C2054 +
                C2067 + C2067 + C122 * C2062 + C138 * C2055 + C2068 + C2068 +
                C123 * C2063 + C140 * C2056 + C2069 + C2069 + C124 * C2064) *
                   C152080 * C152054 * C151956 -
               (C140 * C1353 + C1378 + C1378 + C124 * C1369 + C138 * C1354 +
                C1379 + C1379 + C123 * C1370 + C136 * C1355 + C1380 + C1380 +
                C122 * C1371 + C134 * C1356 + C1381 + C1381 + C121 * C1372) *
                   C152080 * C152054 * C4107) *
                  C152224) *
             C151823) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
            C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
            C140 * C145 + C170 + C170 + C124 * C161) *
               C152080 * C152054 * C152266 -
           (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
            C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
            C134 * C550 + C587 + C587 + C121 * C574) *
               C152080 * C152054 * C152263 +
           (C134 * C551 + C588 + C588 + C121 * C575 + C136 * C552 + C589 +
            C589 + C122 * C576 + C138 * C553 + C590 + C590 + C123 * C577 +
            C140 * C554 + C591 + C591 + C124 * C578) *
               C152080 * C152054 * C152252 -
           (C140 * C2451 + C2476 + C2476 + C124 * C2467 + C138 * C2452 + C2477 +
            C2477 + C123 * C2468 + C136 * C2453 + C2478 + C2478 + C122 * C2469 +
            C134 * C2454 + C2479 + C2479 + C121 * C2470) *
               C152080 * C152054 * C152230) *
              C3101 +
          ((C134 * C1083 + C1102 + C1102 + C121 * C1095 + C136 * C1084 + C1103 +
            C1103 + C122 * C1096 + C138 * C1085 + C1104 + C1104 + C123 * C1097 +
            C140 * C1086 + C1105 + C1105 + C124 * C1098) *
               C152080 * C152054 * C152263 -
           (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
            C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
            C134 * C341 + C378 + C378 + C121 * C365) *
               C152080 * C152054 * C152266 -
           (C140 * C1531 + C1568 + C1568 + C124 * C1555 + C138 * C1532 + C1569 +
            C1569 + C123 * C1556 + C136 * C1533 + C1570 + C1570 + C122 * C1557 +
            C134 * C1534 + C1571 + C1571 + C121 * C1558) *
               C152080 * C152054 * C152252 +
           (C134 * C2955 + C2968 + C2968 + C121 * C2963 + C136 * C2956 + C2969 +
            C2969 + C122 * C2964 + C138 * C2957 + C2970 + C2970 + C123 * C2965 +
            C140 * C2958 + C2971 + C2971 + C124 * C2966) *
               C152080 * C152054 * C152230) *
              C151914) *
         C151823) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
              C23049 + C23049 + C151796 * C159) *
                 C152080 * C23040 +
             (C23380 + C23381) * C152080 * C23041 + C23401 * C23042) *
                C4107 -
            (C25051 * C23042 + (C24420 + C24421) * C152080 * C23041 +
             (C23045 * C549 + C23626 + C23626 + C151796 * C573 + C23043 * C550 +
              C23627 + C23627 + C152149 * C574) *
                 C152080 * C23040) *
                C151956) *
               C3101 +
           (((C24421 + C24420) * C152080 * C23040 +
             (C24419 + C24418) * C152080 * C23041 + C25797 * C23042) *
                C151956 -
            (C24789 * C23042 + (C23383 + C23382) * C152080 * C23041 +
             (C23381 + C23380) * C152080 * C23040) *
                C4107) *
               C151914) *
              C152255 +
          ((((C23043 * C549 + C23634 + C23634 + C152149 * C573 + C23045 * C548 +
              C23635 + C23635 + C151796 * C572) *
                 C152080 * C23040 +
             (C24422 + C24423) * C152080 * C23041 + C25583 * C23042) *
                C151956 -
            (C23402 * C23042 + (C23387 + C23386) * C152080 * C23041 +
             (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
              C23059 + C23059 + C152149 * C159) *
                 C152080 * C23040) *
                C4107) *
               C3101 +
           (((C23386 + C23387) * C152080 * C23040 +
             (C23388 + C23389) * C152080 * C23041 + C25279 * C23042) *
                C4107 -
            ((C25588 + C25589) * C152080 * C23042 +
             (C24425 + C24424) * C152080 * C23041 +
             (C24423 + C24422) * C152080 * C23040) *
                C151956) *
               C151914) *
              C152240 +
          ((((C23043 * C144 + C23060 + C23060 + C152149 * C160 + C23045 * C145 +
              C23061 + C23061 + C151796 * C161) *
                 C152080 * C23040 +
             (C23392 + C23393) * C152080 * C23041 + C23403 * C23042) *
                C4107 -
            ((C24426 + C24427) * C152080 * C23042 +
             (C24428 + C24429) * C152080 * C23041 +
             (C23045 * C547 + C23650 + C23650 + C151796 * C571 + C23043 * C548 +
              C23651 + C23651 + C152149 * C572) *
                 C152080 * C23040) *
                C151956) *
               C3101 +
           (((C24429 + C24428) * C152080 * C23040 +
             (C24427 + C24426) * C152080 * C23041 +
             (C23043 * C2055 + C24392 + C24392 + C152149 * C2063 +
              C23045 * C2056 + C24393 + C24393 + C151796 * C2064) *
                 C152080 * C23042) *
                C151956 -
            ((C23396 + C23397) * C152080 * C23042 +
             (C23395 + C23394) * C152080 * C23041 +
             (C23393 + C23392) * C152080 * C23040) *
                C4107) *
               C151914) *
              C152208)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
             C23049 + C23049 + C151796 * C159) *
                C152080 * C23040 +
            (C23380 + C23381) * C152080 * C23041 + C23401 * C23042) *
               C4107 -
           (C25051 * C23042 + (C24420 + C24421) * C152080 * C23041 +
            (C23045 * C549 + C23626 + C23626 + C151796 * C573 + C23043 * C550 +
             C23627 + C23627 + C152149 * C574) *
                C152080 * C23040) *
               C151956) *
              C152265 +
          (((C24421 + C24420) * C152080 * C23040 +
            (C24419 + C24418) * C152080 * C23041 + C25797 * C23042) *
               C151956 -
           (C24789 * C23042 + (C23383 + C23382) * C152080 * C23041 +
            (C23381 + C23380) * C152080 * C23040) *
               C4107) *
              C152261 +
          ((C23401 * C23040 + (C23385 + C23384) * C152080 * C23041 +
            C24803 * C23042) *
               C4107 -
           ((C25802 + C25803) * C152080 * C23042 +
            (C25073 + C25072) * C152080 * C23041 + C25051 * C23040) *
               C151956) *
              C152249 +
          ((C25797 * C23040 + (C25803 + C25802) * C152080 * C23041 +
            (C23043 * C25783 + C25795 + C25795 + C152149 * C25787 +
             C23045 * C25784 + C25796 + C25796 + C151796 * C25788) *
                C152080 * C23042) *
               C151956 -
           ((C24800 + C24801) * C152080 * C23042 +
            (C24799 + C24798) * C152080 * C23041 + C24789 * C23040) *
               C4107) *
              C152224) *
         C151823) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
             C23049 + C23049 + C151796 * C159) *
                C152080 * C23040 +
            (C23380 + C23381) * C152080 * C23041 + C23401 * C23042) *
               C152266 -
           (C25051 * C23042 + (C24420 + C24421) * C152080 * C23041 +
            (C23045 * C549 + C23626 + C23626 + C151796 * C573 + C23043 * C550 +
             C23627 + C23627 + C152149 * C574) *
                C152080 * C23040) *
               C152263 +
           ((C23043 * C551 + C23628 + C23628 + C152149 * C575 + C23045 * C552 +
             C23629 + C23629 + C151796 * C576) *
                C152080 * C23040 +
            (C25068 + C25069) * C152080 * C23041 + C25077 * C23042) *
               C152252 -
           ((C27110 + C27111) * C152080 * C23042 +
            (C27112 + C27113) * C152080 * C23041 +
            (C23045 * C2453 + C26372 + C26372 + C151796 * C2469 +
             C23043 * C2454 + C26373 + C26373 + C152149 * C2470) *
                C152080 * C23040) *
               C152230) *
              C3101 +
          (((C24421 + C24420) * C152080 * C23040 +
            (C24419 + C24418) * C152080 * C23041 + C25797 * C23042) *
               C152263 -
           (C24789 * C23042 + (C23383 + C23382) * C152080 * C23041 +
            (C23381 + C23380) * C152080 * C23040) *
               C152266 -
           ((C25074 + C25075) * C152080 * C23042 +
            (C25071 + C25070) * C152080 * C23041 +
            (C25069 + C25068) * C152080 * C23040) *
               C152252 +
           ((C27113 + C27112) * C152080 * C23040 +
            (C27111 + C27110) * C152080 * C23041 +
            (C23043 * C27085 + C27100 + C27100 + C152149 * C27089 +
             C23045 * C27086 + C27101 + C27101 + C151796 * C27090) *
                C152080 * C23042) *
               C152230) *
              C151914) *
         C151823) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
              C23049 + C23049 + C151796 * C159) *
                 C45770 +
             (C46294 + C46295) * C45771 + C46312 * C45772) *
                C152054 * C4107 -
            (C48830 * C45772 + (C46297 + C46296) * C45771 +
             (C46295 + C46294) * C45770) *
                C152054 * C151956) *
               C3101 +
           (((C24421 + C24420) * C45770 + (C25068 + C25069) * C45771 +
             C49563 * C45772) *
                C152054 * C151956 -
            (C47587 * C45772 + (C24420 + C24421) * C45771 +
             (C23381 + C23380) * C45770) *
                C152054 * C4107) *
               C151914) *
              C152255 +
          ((((C46300 + C46301) * C45770 + (C46302 + C46303) * C45771 +
             C49353 * C45772) *
                C152054 * C151956 -
            (C46313 * C45772 + (C46301 + C46300) * C45771 +
             (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
              C23059 + C23059 + C152149 * C159) *
                 C45770) *
                C152054 * C4107) *
               C3101 +
           (((C23386 + C23387) * C45770 + (C24422 + C24423) * C45771 +
             C49146 * C45772) *
                C152054 * C4107 -
            ((C49157 + C49158) * C45772 + (C26690 + C26691) * C45771 +
             (C24423 + C24422) * C45770) *
                C152054 * C151956) *
               C151914) *
              C152240 +
          ((((C23043 * C144 + C23060 + C23060 + C152149 * C160 + C23045 * C145 +
              C23061 + C23061 + C151796 * C161) *
                 C45770 +
             (C46306 + C46307) * C45771 + C46314 * C45772) *
                C152054 * C4107 -
            ((C46310 + C46311) * C45772 + (C46309 + C46308) * C45771 +
             (C46307 + C46306) * C45770) *
                C152054 * C151956) *
               C3101 +
           (((C24429 + C24428) * C45770 + (C47027 + C47028) * C45771 +
             (C23043 * C2957 + C47021 + C47021 + C152149 * C2965 +
              C23045 * C2958 + C47022 + C47022 + C151796 * C2966) *
                 C45772) *
                C152054 * C151956 -
            ((C47028 + C47027) * C45772 + (C24428 + C24429) * C45771 +
             (C23393 + C23392) * C45770) *
                C152054 * C4107) *
               C151914) *
              C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
             C23049 + C23049 + C151796 * C159) *
                C45770 +
            (C46294 + C46295) * C45771 + C46312 * C45772) *
               C152054 * C4107 -
           (C48830 * C45772 + (C46297 + C46296) * C45771 +
            (C46295 + C46294) * C45770) *
               C152054 * C151956) *
              C152265 +
          (((C24421 + C24420) * C45770 + (C25068 + C25069) * C45771 +
            C49563 * C45772) *
               C152054 * C151956 -
           (C47587 * C45772 + (C24420 + C24421) * C45771 +
            (C23381 + C23380) * C45770) *
               C152054 * C4107) *
              C152261 +
          ((C23398 * C45770 + (C24419 + C24418) * C45771 + C25076 * C45772) *
               C152054 * C4107 -
           ((C27110 + C27111) * C45772 + (C25071 + C25070) * C45771 +
            C25028 * C45770) *
               C152054 * C151956) *
              C152249 +
          ((C25790 * C45770 + (C25075 + C25074) * C45771 +
            (C23043 * C27085 + C27100 + C27100 + C152149 * C27089 +
             C23045 * C27086 + C27101 + C27101 + C151796 * C27090) *
                C45772) *
               C152054 * C151956 -
           ((C25074 + C25075) * C45772 + (C25073 + C25072) * C45771 +
            C24776 * C45770) *
               C152054 * C4107) *
              C152224) *
         C151823) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
             C23049 + C23049 + C151796 * C159) *
                C45770 +
            (C46294 + C46295) * C45771 + C46312 * C45772) *
               C152054 * C152266 -
           (C48830 * C45772 + (C46297 + C46296) * C45771 +
            (C46295 + C46294) * C45770) *
               C152054 * C152263 +
           (C46312 * C45770 + (C46299 + C46298) * C45771 + C48855 * C45772) *
               C152054 * C152252 -
           ((C48853 + C48854) * C45772 + (C48852 + C48851) * C45771 +
            C48830 * C45770) *
               C152054 * C152230) *
              C3101 +
          (((C24421 + C24420) * C45770 + (C25068 + C25069) * C45771 +
            C49563 * C45772) *
               C152054 * C152263 -
           (C47587 * C45772 + (C24420 + C24421) * C45771 +
            (C23381 + C23380) * C45770) *
               C152054 * C152266 -
           ((C49574 + C49575) * C45772 + (C27112 + C27113) * C45771 +
            C47587 * C45770) *
               C152054 * C152252 +
           (C49563 * C45770 + (C49575 + C49574) * C45771 +
            (C23043 * C40487 + C49568 + C49568 + C152149 * C40491 +
             C23045 * C49559 + C49569 + C49569 + C151796 * C49561) *
                C45772) *
               C152054 * C152230) *
              C151914) *
         C151823) /
            (p * q * std::sqrt(p + q));
    d2ee[158] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
              C23049 + C23049 + C151796 * C159) *
                 C152080 * C23040 +
             (C23380 + C23381) * C152080 * C23041 + C23401 * C23042) *
                C151952 -
            (C25051 * C23042 + (C24420 + C24421) * C152080 * C23041 +
             (C23045 * C549 + C23626 + C23626 + C151796 * C573 + C23043 * C550 +
              C23627 + C23627 + C152149 * C574) *
                 C152080 * C23040) *
                C151959 +
            ((C23043 * C551 + C23628 + C23628 + C152149 * C575 + C23045 * C552 +
              C23629 + C23629 + C151796 * C576) *
                 C152080 * C23040 +
             (C25068 + C25069) * C152080 * C23041 + C25077 * C23042) *
                C4779) *
               C3101 +
           (((C24421 + C24420) * C152080 * C23040 +
             (C24419 + C24418) * C152080 * C23041 + C25797 * C23042) *
                C151959 -
            (C24789 * C23042 + (C23383 + C23382) * C152080 * C23041 +
             (C23381 + C23380) * C152080 * C23040) *
                C151952 -
            ((C25074 + C25075) * C152080 * C23042 +
             (C25071 + C25070) * C152080 * C23041 +
             (C25069 + C25068) * C152080 * C23040) *
                C4779) *
               C151914) *
              C152158 +
          ((((C23043 * C549 + C23634 + C23634 + C152149 * C573 + C23045 * C548 +
              C23635 + C23635 + C151796 * C572) *
                 C152080 * C23040 +
             (C24422 + C24423) * C152080 * C23041 + C25583 * C23042) *
                C151959 -
            (C23402 * C23042 + (C23387 + C23386) * C152080 * C23041 +
             (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
              C23059 + C23059 + C152149 * C159) *
                 C152080 * C23040) *
                C151952 -
            ((C26688 + C26689) * C152080 * C23042 +
             (C26690 + C26691) * C152080 * C23041 +
             (C23045 * C553 + C23644 + C23644 + C151796 * C577 + C23043 * C552 +
              C23645 + C23645 + C152149 * C576) *
                 C152080 * C23040) *
                C4779) *
               C3101 +
           (((C23386 + C23387) * C152080 * C23040 +
             (C23388 + C23389) * C152080 * C23041 + C25279 * C23042) *
                C151952 -
            ((C25588 + C25589) * C152080 * C23042 +
             (C24425 + C24424) * C152080 * C23041 +
             (C24423 + C24422) * C152080 * C23040) *
                C151959 +
            ((C26691 + C26690) * C152080 * C23040 +
             (C26689 + C26688) * C152080 * C23041 +
             (C23043 * C8065 + C26678 + C26678 + C152149 * C8071 +
              C23045 * C8066 + C26679 + C26679 + C151796 * C8072) *
                 C152080 * C23042) *
                C4779) *
               C151914) *
              C151834)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
             C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
             C140 * C145 + C170 + C170 + C124 * C161) *
                C152080 * C152054 * C151952 -
            (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
             C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
             C134 * C550 + C587 + C587 + C121 * C574) *
                C152080 * C152054 * C151959 +
            (C134 * C551 + C588 + C588 + C121 * C575 + C136 * C552 + C589 +
             C589 + C122 * C576 + C138 * C553 + C590 + C590 + C123 * C577 +
             C140 * C554 + C591 + C591 + C124 * C578) *
                C152080 * C152054 * C4779) *
               C3101 +
           ((C134 * C1083 + C1102 + C1102 + C121 * C1095 + C136 * C1084 +
             C1103 + C1103 + C122 * C1096 + C138 * C1085 + C1104 + C1104 +
             C123 * C1097 + C140 * C1086 + C1105 + C1105 + C124 * C1098) *
                C152080 * C152054 * C151959 -
            (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
             C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
             C134 * C341 + C378 + C378 + C121 * C365) *
                C152080 * C152054 * C151952 -
            (C140 * C1531 + C1568 + C1568 + C124 * C1555 + C138 * C1532 +
             C1569 + C1569 + C123 * C1556 + C136 * C1533 + C1570 + C1570 +
             C122 * C1557 + C134 * C1534 + C1571 + C1571 + C121 * C1558) *
                C152080 * C152054 * C4779) *
               C151914) *
              C152158 +
          (((C134 * C549 + C592 + C592 + C121 * C573 + C136 * C548 + C593 +
             C593 + C122 * C572 + C138 * C547 + C594 + C594 + C123 * C571 +
             C140 * C555 + C595 + C595 + C124 * C579) *
                C152080 * C152054 * C151959 -
            (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
             C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
             C134 * C143 + C174 + C174 + C121 * C159) *
                C152080 * C152054 * C151952 -
            (C140 * C556 + C596 + C596 + C124 * C580 + C138 * C554 + C597 +
             C597 + C123 * C578 + C136 * C553 + C598 + C598 + C122 * C577 +
             C134 * C552 + C599 + C599 + C121 * C576) *
                C152080 * C152054 * C4779) *
               C3101 +
           ((C134 * C340 + C383 + C383 + C121 * C364 + C136 * C339 + C384 +
             C384 + C122 * C363 + C138 * C338 + C385 + C385 + C123 * C362 +
             C140 * C346 + C386 + C386 + C124 * C370) *
                C152080 * C152054 * C151952 -
            (C140 * C1087 + C1106 + C1106 + C124 * C1099 + C138 * C1086 +
             C1107 + C1107 + C123 * C1098 + C136 * C1085 + C1108 + C1108 +
             C122 * C1097 + C134 * C1084 + C1109 + C1109 + C121 * C1096) *
                C152080 * C152054 * C151959 +
            (C134 * C1533 + C2681 + C2681 + C121 * C1557 + C136 * C1532 +
             C2682 + C2682 + C122 * C1556 + C138 * C1531 + C2683 + C2683 +
             C123 * C1555 + C140 * C2677 + C2684 + C2684 + C124 * C2679) *
                C152080 * C152054 * C4779) *
               C151914) *
              C151834)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
              C23049 + C23049 + C151796 * C159) *
                 C45770 +
             (C46294 + C46295) * C45771 + C46312 * C45772) *
                C152054 * C151952 -
            (C48830 * C45772 + (C46297 + C46296) * C45771 +
             (C46295 + C46294) * C45770) *
                C152054 * C151959 +
            (C46312 * C45770 + (C46299 + C46298) * C45771 + C48855 * C45772) *
                C152054 * C4779) *
               C3101 +
           (((C24421 + C24420) * C45770 + (C25068 + C25069) * C45771 +
             C49563 * C45772) *
                C152054 * C151959 -
            (C47587 * C45772 + (C24420 + C24421) * C45771 +
             (C23381 + C23380) * C45770) *
                C152054 * C151952 -
            ((C49574 + C49575) * C45772 + (C27112 + C27113) * C45771 +
             C47587 * C45770) *
                C152054 * C4779) *
               C151914) *
              C152158 +
          ((((C46300 + C46301) * C45770 + (C46302 + C46303) * C45771 +
             C49353 * C45772) *
                C152054 * C151959 -
            (C46313 * C45772 + (C46301 + C46300) * C45771 +
             (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
              C23059 + C23059 + C152149 * C159) *
                 C45770) *
                C152054 * C151952 -
            ((C49364 + C49365) * C45772 + (C46305 + C46304) * C45771 +
             C46313 * C45770) *
                C152054 * C4779) *
               C3101 +
           (((C23386 + C23387) * C45770 + (C24422 + C24423) * C45771 +
             C49146 * C45772) *
                C152054 * C151952 -
            ((C49157 + C49158) * C45772 + (C26690 + C26691) * C45771 +
             (C24423 + C24422) * C45770) *
                C152054 * C151959 +
            (C49146 * C45770 + (C49158 + C49157) * C45771 +
             (C23043 * C9427 + C49151 + C49151 + C152149 * C9433 +
              C23045 * C9428 + C49152 + C49152 + C151796 * C9434) *
                 C45772) *
                C152054 * C4779) *
               C151914) *
              C151834)) /
            (p * q * std::sqrt(p + q));
    d2ee[159] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
            C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
            C140 * C145 + C170 + C170 + C124 * C161) *
               C152080 * C152054 * C4107 -
           (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
            C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
            C134 * C550 + C587 + C587 + C121 * C574) *
               C152080 * C152054 * C151956) *
              C152265 +
          ((C134 * C1083 + C1102 + C1102 + C121 * C1095 + C136 * C1084 + C1103 +
            C1103 + C122 * C1096 + C138 * C1085 + C1104 + C1104 + C123 * C1097 +
            C140 * C1086 + C1105 + C1105 + C124 * C1098) *
               C152080 * C152054 * C151956 -
           (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
            C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
            C134 * C341 + C378 + C378 + C121 * C365) *
               C152080 * C152054 * C4107) *
              C152261 +
          ((C134 * C342 + C379 + C379 + C121 * C366 + C136 * C343 + C380 +
            C380 + C122 * C367 + C138 * C344 + C381 + C381 + C123 * C368 +
            C140 * C345 + C382 + C382 + C124 * C369) *
               C152080 * C152054 * C4107 -
           (C140 * C1535 + C1572 + C1572 + C124 * C1559 + C138 * C1536 + C1573 +
            C1573 + C123 * C1560 + C136 * C1537 + C1574 + C1574 + C122 * C1561 +
            C134 * C1538 + C1575 + C1575 + C121 * C1562) *
               C152080 * C152054 * C151956) *
              C152249 +
          ((C134 * C2053 + C2066 + C2066 + C121 * C2061 + C136 * C2054 + C2067 +
            C2067 + C122 * C2062 + C138 * C2055 + C2068 + C2068 + C123 * C2063 +
            C140 * C2056 + C2069 + C2069 + C124 * C2064) *
               C152080 * C152054 * C151956 -
           (C140 * C1353 + C1378 + C1378 + C124 * C1369 + C138 * C1354 + C1379 +
            C1379 + C123 * C1370 + C136 * C1355 + C1380 + C1380 + C122 * C1371 +
            C134 * C1356 + C1381 + C1381 + C121 * C1372) *
               C152080 * C152054 * C4107) *
              C152224) *
         C151823) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
             C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
             C140 * C145 + C170 + C170 + C124 * C161) *
                C152080 * C152054 * C4107 -
            (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
             C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
             C134 * C550 + C587 + C587 + C121 * C574) *
                C152080 * C152054 * C151956) *
               C3101 +
           ((C134 * C1083 + C1102 + C1102 + C121 * C1095 + C136 * C1084 +
             C1103 + C1103 + C122 * C1096 + C138 * C1085 + C1104 + C1104 +
             C123 * C1097 + C140 * C1086 + C1105 + C1105 + C124 * C1098) *
                C152080 * C152054 * C151956 -
            (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
             C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
             C134 * C341 + C378 + C378 + C121 * C365) *
                C152080 * C152054 * C4107) *
               C151914) *
              C152255 +
          (((C134 * C549 + C592 + C592 + C121 * C573 + C136 * C548 + C593 +
             C593 + C122 * C572 + C138 * C547 + C594 + C594 + C123 * C571 +
             C140 * C555 + C595 + C595 + C124 * C579) *
                C152080 * C152054 * C151956 -
            (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
             C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
             C134 * C143 + C174 + C174 + C121 * C159) *
                C152080 * C152054 * C4107) *
               C3101 +
           ((C134 * C340 + C383 + C383 + C121 * C364 + C136 * C339 + C384 +
             C384 + C122 * C363 + C138 * C338 + C385 + C385 + C123 * C362 +
             C140 * C346 + C386 + C386 + C124 * C370) *
                C152080 * C152054 * C4107 -
            (C140 * C1087 + C1106 + C1106 + C124 * C1099 + C138 * C1086 +
             C1107 + C1107 + C123 * C1098 + C136 * C1085 + C1108 + C1108 +
             C122 * C1097 + C134 * C1084 + C1109 + C1109 + C121 * C1096) *
                C152080 * C152054 * C151956) *
               C151914) *
              C152240 +
          (((C134 * C144 + C175 + C175 + C121 * C160 + C136 * C145 + C176 +
             C176 + C122 * C161 + C138 * C146 + C177 + C177 + C123 * C162 +
             C140 * C147 + C178 + C178 + C124 * C163) *
                C152080 * C152054 * C4107 -
            (C140 * C557 + C600 + C600 + C124 * C581 + C138 * C555 + C601 +
             C601 + C123 * C579 + C136 * C547 + C602 + C602 + C122 * C571 +
             C134 * C548 + C603 + C603 + C121 * C572) *
                C152080 * C152054 * C151956) *
               C3101 +
           ((C134 * C1085 + C1110 + C1110 + C121 * C1097 + C136 * C1086 +
             C1111 + C1111 + C122 * C1098 + C138 * C1087 + C1112 + C1112 +
             C123 * C1099 + C140 * C1088 + C1113 + C1113 + C124 * C1100) *
                C152080 * C152054 * C151956 -
            (C140 * C348 + C391 + C391 + C124 * C372 + C138 * C346 + C392 +
             C392 + C123 * C370 + C136 * C338 + C393 + C393 + C122 * C362 +
             C134 * C339 + C394 + C394 + C121 * C363) *
                C152080 * C152054 * C4107) *
               C151914) *
              C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
              C23049 + C23049 + C151796 * C159) *
                 C152080 * C23040 +
             (C23380 + C23381) * C152080 * C23041 + C23401 * C23042) *
                C4107 -
            (C25051 * C23042 + (C24420 + C24421) * C152080 * C23041 +
             (C23045 * C549 + C23626 + C23626 + C151796 * C573 + C23043 * C550 +
              C23627 + C23627 + C152149 * C574) *
                 C152080 * C23040) *
                C151956) *
               C3101 +
           (((C24421 + C24420) * C152080 * C23040 +
             (C24419 + C24418) * C152080 * C23041 + C25797 * C23042) *
                C151956 -
            (C24789 * C23042 + (C23383 + C23382) * C152080 * C23041 +
             (C23381 + C23380) * C152080 * C23040) *
                C4107) *
               C151914) *
              C152255 +
          ((((C23043 * C549 + C23634 + C23634 + C152149 * C573 + C23045 * C548 +
              C23635 + C23635 + C151796 * C572) *
                 C152080 * C23040 +
             (C24422 + C24423) * C152080 * C23041 + C25583 * C23042) *
                C151956 -
            (C23402 * C23042 + (C23387 + C23386) * C152080 * C23041 +
             (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
              C23059 + C23059 + C152149 * C159) *
                 C152080 * C23040) *
                C4107) *
               C3101 +
           (((C23386 + C23387) * C152080 * C23040 +
             (C23388 + C23389) * C152080 * C23041 + C25279 * C23042) *
                C4107 -
            ((C25588 + C25589) * C152080 * C23042 +
             (C24425 + C24424) * C152080 * C23041 +
             (C24423 + C24422) * C152080 * C23040) *
                C151956) *
               C151914) *
              C152240 +
          ((((C23043 * C144 + C23060 + C23060 + C152149 * C160 + C23045 * C145 +
              C23061 + C23061 + C151796 * C161) *
                 C152080 * C23040 +
             (C23392 + C23393) * C152080 * C23041 + C23403 * C23042) *
                C4107 -
            ((C24426 + C24427) * C152080 * C23042 +
             (C24428 + C24429) * C152080 * C23041 +
             (C23045 * C547 + C23650 + C23650 + C151796 * C571 + C23043 * C548 +
              C23651 + C23651 + C152149 * C572) *
                 C152080 * C23040) *
                C151956) *
               C3101 +
           (((C24429 + C24428) * C152080 * C23040 +
             (C24427 + C24426) * C152080 * C23041 +
             (C23043 * C2055 + C24392 + C24392 + C152149 * C2063 +
              C23045 * C2056 + C24393 + C24393 + C151796 * C2064) *
                 C152080 * C23042) *
                C151956 -
            ((C23396 + C23397) * C152080 * C23042 +
             (C23395 + C23394) * C152080 * C23041 +
             (C23393 + C23392) * C152080 * C23040) *
                C4107) *
               C151914) *
              C152208)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
             C23049 + C23049 + C151796 * C159) *
                C152080 * C23040 +
            (C23380 + C23381) * C152080 * C23041 + C23401 * C23042) *
               C4107 -
           (C25051 * C23042 + (C24420 + C24421) * C152080 * C23041 +
            (C23045 * C549 + C23626 + C23626 + C151796 * C573 + C23043 * C550 +
             C23627 + C23627 + C152149 * C574) *
                C152080 * C23040) *
               C151956) *
              C152265 +
          (((C24421 + C24420) * C152080 * C23040 +
            (C24419 + C24418) * C152080 * C23041 + C25797 * C23042) *
               C151956 -
           (C24789 * C23042 + (C23383 + C23382) * C152080 * C23041 +
            (C23381 + C23380) * C152080 * C23040) *
               C4107) *
              C152261 +
          ((C23401 * C23040 + (C23385 + C23384) * C152080 * C23041 +
            C24803 * C23042) *
               C4107 -
           ((C25802 + C25803) * C152080 * C23042 +
            (C25073 + C25072) * C152080 * C23041 + C25051 * C23040) *
               C151956) *
              C152249 +
          ((C25797 * C23040 + (C25803 + C25802) * C152080 * C23041 +
            (C23043 * C25783 + C25795 + C25795 + C152149 * C25787 +
             C23045 * C25784 + C25796 + C25796 + C151796 * C25788) *
                C152080 * C23042) *
               C151956 -
           ((C24800 + C24801) * C152080 * C23042 +
            (C24799 + C24798) * C152080 * C23041 + C24789 * C23040) *
               C4107) *
              C152224) *
         C151823) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
              C23049 + C23049 + C151796 * C159) *
                 C45770 +
             (C46294 + C46295) * C45771 + C46312 * C45772) *
                C152054 * C4107 -
            (C48830 * C45772 + (C46297 + C46296) * C45771 +
             (C46295 + C46294) * C45770) *
                C152054 * C151956) *
               C3101 +
           (((C24421 + C24420) * C45770 + (C25068 + C25069) * C45771 +
             C49563 * C45772) *
                C152054 * C151956 -
            (C47587 * C45772 + (C24420 + C24421) * C45771 +
             (C23381 + C23380) * C45770) *
                C152054 * C4107) *
               C151914) *
              C152255 +
          ((((C46300 + C46301) * C45770 + (C46302 + C46303) * C45771 +
             C49353 * C45772) *
                C152054 * C151956 -
            (C46313 * C45772 + (C46301 + C46300) * C45771 +
             (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
              C23059 + C23059 + C152149 * C159) *
                 C45770) *
                C152054 * C4107) *
               C3101 +
           (((C23386 + C23387) * C45770 + (C24422 + C24423) * C45771 +
             C49146 * C45772) *
                C152054 * C4107 -
            ((C49157 + C49158) * C45772 + (C26690 + C26691) * C45771 +
             (C24423 + C24422) * C45770) *
                C152054 * C151956) *
               C151914) *
              C152240 +
          ((((C23043 * C144 + C23060 + C23060 + C152149 * C160 + C23045 * C145 +
              C23061 + C23061 + C151796 * C161) *
                 C45770 +
             (C46306 + C46307) * C45771 + C46314 * C45772) *
                C152054 * C4107 -
            ((C46310 + C46311) * C45772 + (C46309 + C46308) * C45771 +
             (C46307 + C46306) * C45770) *
                C152054 * C151956) *
               C3101 +
           (((C24429 + C24428) * C45770 + (C47027 + C47028) * C45771 +
             (C23043 * C2957 + C47021 + C47021 + C152149 * C2965 +
              C23045 * C2958 + C47022 + C47022 + C151796 * C2966) *
                 C45772) *
                C152054 * C151956 -
            ((C47028 + C47027) * C45772 + (C24428 + C24429) * C45771 +
             (C23393 + C23392) * C45770) *
                C152054 * C4107) *
               C151914) *
              C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
             C23049 + C23049 + C151796 * C159) *
                C45770 +
            (C46294 + C46295) * C45771 + C46312 * C45772) *
               C152054 * C4107 -
           (C48830 * C45772 + (C46297 + C46296) * C45771 +
            (C46295 + C46294) * C45770) *
               C152054 * C151956) *
              C152265 +
          (((C24421 + C24420) * C45770 + (C25068 + C25069) * C45771 +
            C49563 * C45772) *
               C152054 * C151956 -
           (C47587 * C45772 + (C24420 + C24421) * C45771 +
            (C23381 + C23380) * C45770) *
               C152054 * C4107) *
              C152261 +
          ((C23398 * C45770 + (C24419 + C24418) * C45771 + C25076 * C45772) *
               C152054 * C4107 -
           ((C27110 + C27111) * C45772 + (C25071 + C25070) * C45771 +
            C25028 * C45770) *
               C152054 * C151956) *
              C152249 +
          ((C25790 * C45770 + (C25075 + C25074) * C45771 +
            (C23043 * C27085 + C27100 + C27100 + C152149 * C27089 +
             C23045 * C27086 + C27101 + C27101 + C151796 * C27090) *
                C45772) *
               C152054 * C151956 -
           ((C25074 + C25075) * C45772 + (C25073 + C25072) * C45771 +
            C24776 * C45770) *
               C152054 * C4107) *
              C152224) *
         C151823) /
            (p * q * std::sqrt(p + q));
    d2ee[160] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
                C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
                C140 * C145 + C170 + C170 + C124 * C161) *
                   C152080 * C152054 * C151869 * C152172 -
               (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
                C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
                C134 * C341 + C378 + C378 + C121 * C365) *
                   C152080 * C152054 * C151869 * C151914) *
                  C739 +
              ((C134 * C340 + C383 + C383 + C121 * C364 + C136 * C339 + C384 +
                C384 + C122 * C363 + C138 * C338 + C385 + C385 + C123 * C362 +
                C140 * C346 + C386 + C386 + C124 * C370) *
                   C152080 * C152054 * C151869 * C151914 -
               (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
                C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
                C134 * C143 + C174 + C174 + C121 * C159) *
                   C152080 * C152054 * C151869 * C152172) *
                  C740 +
              ((C134 * C144 + C175 + C175 + C121 * C160 + C136 * C145 + C176 +
                C176 + C122 * C161 + C138 * C146 + C177 + C177 + C123 * C162 +
                C140 * C147 + C178 + C178 + C124 * C163) *
                   C152080 * C152054 * C151869 * C152172 -
               (C140 * C348 + C391 + C391 + C124 * C372 + C138 * C346 + C392 +
                C392 + C123 * C370 + C136 * C338 + C393 + C393 + C122 * C362 +
                C134 * C339 + C394 + C394 + C121 * C363) *
                   C152080 * C152054 * C151869 * C151914) *
                  C741 +
              ((C134 * C338 + C747 + C747 + C121 * C362 + C136 * C346 + C748 +
                C748 + C122 * C370 + C138 * C348 + C749 + C749 + C123 * C372 +
                C140 * C743 + C750 + C750 + C124 * C745) *
                   C152080 * C152054 * C151869 * C151914 -
               (C140 * C148 + C179 + C179 + C124 * C164 + C138 * C147 + C180 +
                C180 + C123 * C163 + C136 * C146 + C181 + C181 + C122 * C162 +
                C134 * C145 + C182 + C182 + C121 * C161) *
                   C152080 * C152054 * C151869 * C152172) *
                  C152218) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
                C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
                C140 * C145 + C170 + C170 + C124 * C161) *
                   C152080 * C152054 * C151869 * C1709 -
               (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
                C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
                C134 * C341 + C378 + C378 + C121 * C365) *
                   C152080 * C152054 * C151869 * C1710 +
               (C134 * C342 + C379 + C379 + C121 * C366 + C136 * C343 + C380 +
                C380 + C122 * C367 + C138 * C344 + C381 + C381 + C123 * C368 +
                C140 * C345 + C382 + C382 + C124 * C369) *
                   C152080 * C152054 * C151869 * C1711 -
               (C140 * C1353 + C1378 + C1378 + C124 * C1369 + C138 * C1354 +
                C1379 + C1379 + C123 * C1370 + C136 * C1355 + C1380 + C1380 +
                C122 * C1371 + C134 * C1356 + C1381 + C1381 + C121 * C1372) *
                   C152080 * C152054 * C151869 * C152224) *
                  C152158 +
              ((C134 * C340 + C383 + C383 + C121 * C364 + C136 * C339 + C384 +
                C384 + C122 * C363 + C138 * C338 + C385 + C385 + C123 * C362 +
                C140 * C346 + C386 + C386 + C124 * C370) *
                   C152080 * C152054 * C151869 * C1710 -
               (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
                C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
                C134 * C143 + C174 + C174 + C121 * C159) *
                   C152080 * C152054 * C151869 * C1709 -
               (C140 * C347 + C387 + C387 + C124 * C371 + C138 * C345 + C388 +
                C388 + C123 * C369 + C136 * C344 + C389 + C389 + C122 * C368 +
                C134 * C343 + C390 + C390 + C121 * C367) *
                   C152080 * C152054 * C151869 * C1711 +
               (C134 * C1355 + C1719 + C1719 + C121 * C1371 + C136 * C1354 +
                C1720 + C1720 + C122 * C1370 + C138 * C1353 + C1721 + C1721 +
                C123 * C1369 + C140 * C1715 + C1722 + C1722 + C124 * C1717) *
                   C152080 * C152054 * C151869 * C152224) *
                  C151834)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
             C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
             C140 * C145 + C170 + C170 + C124 * C161) *
                C152080 * C152054 * C2215 -
            (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
             C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
             C134 * C550 + C587 + C587 + C121 * C574) *
                C152080 * C152054 * C2216 +
            (C134 * C551 + C588 + C588 + C121 * C575 + C136 * C552 + C589 +
             C589 + C122 * C576 + C138 * C553 + C590 + C590 + C123 * C577 +
             C140 * C554 + C591 + C591 + C124 * C578) *
                C152080 * C152054 * C152217) *
               C152172 +
           ((C134 * C1083 + C1102 + C1102 + C121 * C1095 + C136 * C1084 +
             C1103 + C1103 + C122 * C1096 + C138 * C1085 + C1104 + C1104 +
             C123 * C1097 + C140 * C1086 + C1105 + C1105 + C124 * C1098) *
                C152080 * C152054 * C2216 -
            (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
             C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
             C134 * C341 + C378 + C378 + C121 * C365) *
                C152080 * C152054 * C2215 -
            (C140 * C1531 + C1568 + C1568 + C124 * C1555 + C138 * C1532 +
             C1569 + C1569 + C123 * C1556 + C136 * C1533 + C1570 + C1570 +
             C122 * C1557 + C134 * C1534 + C1571 + C1571 + C121 * C1558) *
                C152080 * C152054 * C152217) *
               C151914) *
              C152158 +
          (((C134 * C549 + C592 + C592 + C121 * C573 + C136 * C548 + C593 +
             C593 + C122 * C572 + C138 * C547 + C594 + C594 + C123 * C571 +
             C140 * C555 + C595 + C595 + C124 * C579) *
                C152080 * C152054 * C2216 -
            (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
             C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
             C134 * C143 + C174 + C174 + C121 * C159) *
                C152080 * C152054 * C2215 -
            (C140 * C556 + C596 + C596 + C124 * C580 + C138 * C554 + C597 +
             C597 + C123 * C578 + C136 * C553 + C598 + C598 + C122 * C577 +
             C134 * C552 + C599 + C599 + C121 * C576) *
                C152080 * C152054 * C152217) *
               C152172 +
           ((C134 * C340 + C383 + C383 + C121 * C364 + C136 * C339 + C384 +
             C384 + C122 * C363 + C138 * C338 + C385 + C385 + C123 * C362 +
             C140 * C346 + C386 + C386 + C124 * C370) *
                C152080 * C152054 * C2215 -
            (C140 * C1087 + C1106 + C1106 + C124 * C1099 + C138 * C1086 +
             C1107 + C1107 + C123 * C1098 + C136 * C1085 + C1108 + C1108 +
             C122 * C1097 + C134 * C1084 + C1109 + C1109 + C121 * C1096) *
                C152080 * C152054 * C2216 +
            (C134 * C1533 + C2681 + C2681 + C121 * C1557 + C136 * C1532 +
             C2682 + C2682 + C122 * C1556 + C138 * C1531 + C2683 + C2683 +
             C123 * C1555 + C140 * C2677 + C2684 + C2684 + C124 * C2679) *
                C152080 * C152054 * C152217) *
               C151914) *
              C151834)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
             C23049 + C23049 + C151796 * C159) *
                C152080 * C23040 +
            (C23380 + C23381) * C152080 * C23041 + C23401 * C23042) *
               C151869 * C152172 -
           ((C23384 + C23385) * C152080 * C23042 +
            (C23383 + C23382) * C152080 * C23041 +
            (C23381 + C23380) * C152080 * C23040) *
               C151869 * C151914) *
              C739 +
          (((C23386 + C23387) * C152080 * C23040 +
            (C23388 + C23389) * C152080 * C23041 +
            (C23390 + C23391) * C152080 * C23042) *
               C151869 * C151914 -
           (C23402 * C23042 + (C23387 + C23386) * C152080 * C23041 +
            (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
             C23059 + C23059 + C152149 * C159) *
                C152080 * C23040) *
               C151869 * C152172) *
              C740 +
          (((C23043 * C144 + C23060 + C23060 + C152149 * C160 + C23045 * C145 +
             C23061 + C23061 + C151796 * C161) *
                C152080 * C23040 +
            (C23392 + C23393) * C152080 * C23041 + C23403 * C23042) *
               C151869 * C152172 -
           ((C23396 + C23397) * C152080 * C23042 +
            (C23395 + C23394) * C152080 * C23041 +
            (C23393 + C23392) * C152080 * C23040) *
               C151869 * C151914) *
              C741 +
          (((C23870 + C23871) * C152080 * C23040 +
            (C23872 + C23873) * C152080 * C23041 +
            (C23043 * C1353 + C23860 + C23860 + C152149 * C1369 +
             C23045 * C1715 + C23861 + C23861 + C151796 * C1717) *
                C152080 * C23042) *
               C151869 * C151914 -
           ((C23873 + C23872) * C152080 * C23042 +
            (C23871 + C23870) * C152080 * C23041 +
            (C23045 * C146 + C23070 + C23070 + C151796 * C162 + C23043 * C145 +
             C23071 + C23071 + C152149 * C161) *
                C152080 * C23040) *
               C151869 * C152172) *
              C152218)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
             C23049 + C23049 + C151796 * C159) *
                C152080 * C23040 +
            (C23380 + C23381) * C152080 * C23041 + C23401 * C23042) *
               C151869 * C1709 -
           (C24789 * C23042 + (C23383 + C23382) * C152080 * C23041 +
            (C23381 + C23380) * C152080 * C23040) *
               C151869 * C1710 +
           (C23401 * C23040 + (C23385 + C23384) * C152080 * C23041 +
            C24803 * C23042) *
               C151869 * C1711 -
           ((C24800 + C24801) * C152080 * C23042 +
            (C24799 + C24798) * C152080 * C23041 + C24789 * C23040) *
               C151869 * C152224) *
              C152158 +
          (((C23386 + C23387) * C152080 * C23040 +
            (C23388 + C23389) * C152080 * C23041 + C25279 * C23042) *
               C151869 * C1710 -
           (C23402 * C23042 + (C23387 + C23386) * C152080 * C23041 +
            (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
             C23059 + C23059 + C152149 * C159) *
                C152080 * C23040) *
               C151869 * C1709 -
           ((C25284 + C25285) * C152080 * C23042 +
            (C23391 + C23390) * C152080 * C23041 + C23402 * C23040) *
               C151869 * C1711 +
           (C25279 * C23040 + (C25285 + C25284) * C152080 * C23041 +
            (C23043 * C7802 + C25277 + C25277 + C152149 * C7808 +
             C23045 * C7803 + C25278 + C25278 + C151796 * C7809) *
                C152080 * C23042) *
               C151869 * C152224) *
              C151834)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
              C23049 + C23049 + C151796 * C159) *
                 C152080 * C23040 +
             (C23380 + C23381) * C152080 * C23041 + C23401 * C23042) *
                C2215 -
            (C25051 * C23042 + (C24420 + C24421) * C152080 * C23041 +
             (C23045 * C549 + C23626 + C23626 + C151796 * C573 + C23043 * C550 +
              C23627 + C23627 + C152149 * C574) *
                 C152080 * C23040) *
                C2216 +
            ((C23043 * C551 + C23628 + C23628 + C152149 * C575 + C23045 * C552 +
              C23629 + C23629 + C151796 * C576) *
                 C152080 * C23040 +
             (C25068 + C25069) * C152080 * C23041 + C25077 * C23042) *
                C152217) *
               C152172 +
           (((C24421 + C24420) * C152080 * C23040 +
             (C24419 + C24418) * C152080 * C23041 + C25797 * C23042) *
                C2216 -
            (C24789 * C23042 + (C23383 + C23382) * C152080 * C23041 +
             (C23381 + C23380) * C152080 * C23040) *
                C2215 -
            ((C25074 + C25075) * C152080 * C23042 +
             (C25071 + C25070) * C152080 * C23041 +
             (C25069 + C25068) * C152080 * C23040) *
                C152217) *
               C151914) *
              C152158 +
          ((((C23043 * C549 + C23634 + C23634 + C152149 * C573 + C23045 * C548 +
              C23635 + C23635 + C151796 * C572) *
                 C152080 * C23040 +
             (C24422 + C24423) * C152080 * C23041 + C25583 * C23042) *
                C2216 -
            (C23402 * C23042 + (C23387 + C23386) * C152080 * C23041 +
             (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
              C23059 + C23059 + C152149 * C159) *
                 C152080 * C23040) *
                C2215 -
            ((C26688 + C26689) * C152080 * C23042 +
             (C26690 + C26691) * C152080 * C23041 +
             (C23045 * C553 + C23644 + C23644 + C151796 * C577 + C23043 * C552 +
              C23645 + C23645 + C152149 * C576) *
                 C152080 * C23040) *
                C152217) *
               C152172 +
           (((C23386 + C23387) * C152080 * C23040 +
             (C23388 + C23389) * C152080 * C23041 + C25279 * C23042) *
                C2215 -
            ((C25588 + C25589) * C152080 * C23042 +
             (C24425 + C24424) * C152080 * C23041 +
             (C24423 + C24422) * C152080 * C23040) *
                C2216 +
            ((C26691 + C26690) * C152080 * C23040 +
             (C26689 + C26688) * C152080 * C23041 +
             (C23043 * C8065 + C26678 + C26678 + C152149 * C8071 +
              C23045 * C8066 + C26679 + C26679 + C151796 * C8072) *
                 C152080 * C23042) *
                C152217) *
               C151914) *
              C151834)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
             C23049 + C23049 + C151796 * C159) *
                C45770 +
            (C46294 + C46295) * C45771 + C46312 * C45772) *
               C152054 * C151869 * C152172 -
           ((C25069 + C25068) * C45772 + (C24420 + C24421) * C45771 +
            (C23381 + C23380) * C45770) *
               C152054 * C151869 * C151914) *
              C739 +
          (((C23386 + C23387) * C45770 + (C24422 + C24423) * C45771 +
            (C26691 + C26690) * C45772) *
               C152054 * C151869 * C151914 -
           (C46313 * C45772 + (C46301 + C46300) * C45771 +
            (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
             C23059 + C23059 + C152149 * C159) *
                C45770) *
               C152054 * C151869 * C152172) *
              C740 +
          (((C23043 * C144 + C23060 + C23060 + C152149 * C160 + C23045 * C145 +
             C23061 + C23061 + C151796 * C161) *
                C45770 +
            (C46306 + C46307) * C45771 + C46314 * C45772) *
               C152054 * C151869 * C152172 -
           ((C23045 * C1531 + C23655 + C23655 + C151796 * C1555 +
             C23043 * C1532 + C23654 + C23654 + C152149 * C1556) *
                C45772 +
            (C24428 + C24429) * C45771 + (C23393 + C23392) * C45770) *
               C152054 * C151869 * C151914) *
              C741 +
          (((C23870 + C23871) * C45770 +
            (C23043 * C1086 + C24070 + C24070 + C152149 * C1098 +
             C23045 * C1087 + C24071 + C24071 + C151796 * C1099) *
                C45771 +
            (C23043 * C1531 + C46509 + C46509 + C152149 * C1555 +
             C23045 * C2677 + C46510 + C46510 + C151796 * C2679) *
                C45772) *
               C152054 * C151869 * C151914 -
           ((C23045 * C556 + C45774 + C45774 + C151796 * C580 + C23043 * C554 +
             C45775 + C45775 + C152149 * C578) *
                C45772 +
            (C23045 * C555 + C24069 + C24069 + C151796 * C579 + C23043 * C547 +
             C24068 + C24068 + C152149 * C571) *
                C45771 +
            (C23045 * C146 + C23070 + C23070 + C151796 * C162 + C23043 * C145 +
             C23071 + C23071 + C152149 * C161) *
                C45770) *
               C152054 * C151869 * C152172) *
              C152218)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
             C23049 + C23049 + C151796 * C159) *
                C45770 +
            (C46294 + C46295) * C45771 + C46312 * C45772) *
               C152054 * C151869 * C1709 -
           (C47587 * C45772 + (C24420 + C24421) * C45771 +
            (C23381 + C23380) * C45770) *
               C152054 * C151869 * C1710 +
           (C23398 * C45770 + (C24419 + C24418) * C45771 + C25076 * C45772) *
               C152054 * C151869 * C1711 -
           ((C25074 + C25075) * C45772 + (C25073 + C25072) * C45771 +
            C24776 * C45770) *
               C152054 * C151869 * C152224) *
              C152158 +
          (((C23386 + C23387) * C45770 + (C24422 + C24423) * C45771 +
            (C26691 + C26690) * C45772) *
               C152054 * C151869 * C1710 -
           (C46313 * C45772 + (C46301 + C46300) * C45771 +
            (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
             C23059 + C23059 + C152149 * C159) *
                C45770) *
               C152054 * C151869 * C1709 -
           ((C26688 + C26689) * C45772 + (C24425 + C24424) * C45771 +
            C23399 * C45770) *
               C152054 * C151869 * C1711 +
           (C25272 * C45770 + (C25589 + C25588) * C45771 +
            (C23043 * C8065 + C26678 + C26678 + C152149 * C8071 +
             C23045 * C8066 + C26679 + C26679 + C151796 * C8072) *
                C45772) *
               C152054 * C151869 * C152224) *
              C151834)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
              C23049 + C23049 + C151796 * C159) *
                 C45770 +
             (C46294 + C46295) * C45771 + C46312 * C45772) *
                C152054 * C2215 -
            (C48830 * C45772 + (C46297 + C46296) * C45771 +
             (C46295 + C46294) * C45770) *
                C152054 * C2216 +
            (C46312 * C45770 + (C46299 + C46298) * C45771 + C48855 * C45772) *
                C152054 * C152217) *
               C152172 +
           (((C24421 + C24420) * C45770 + (C25068 + C25069) * C45771 +
             (C27113 + C27112) * C45772) *
                C152054 * C2216 -
            (C47587 * C45772 + (C24420 + C24421) * C45771 +
             (C23381 + C23380) * C45770) *
                C152054 * C2215 -
            ((C23045 * C9427 + C26377 + C26377 + C151796 * C9433 +
              C23043 * C9426 + C26376 + C26376 + C152149 * C9432) *
                 C45772 +
             (C27112 + C27113) * C45771 + C47587 * C45770) *
                C152054 * C152217) *
               C151914) *
              C152158 +
          ((((C46300 + C46301) * C45770 + (C46302 + C46303) * C45771 +
             (C46304 + C46305) * C45772) *
                C152054 * C2216 -
            (C46313 * C45772 + (C46301 + C46300) * C45771 +
             (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
              C23059 + C23059 + C152149 * C159) *
                 C45770) *
                C152054 * C2215 -
            ((C23045 * C2457 + C46240 + C46240 + C151796 * C2473 +
              C23043 * C2456 + C46241 + C46241 + C152149 * C2472) *
                 C45772 +
             (C46305 + C46304) * C45771 + C46313 * C45770) *
                C152054 * C152217) *
               C152172 +
           (((C23386 + C23387) * C45770 + (C24422 + C24423) * C45771 +
             C49146 * C45772) *
                C152054 * C2215 -
            ((C49157 + C49158) * C45772 + (C26690 + C26691) * C45771 +
             (C24423 + C24422) * C45770) *
                C152054 * C2216 +
            (C49146 * C45770 + (C49158 + C49157) * C45771 +
             (C23043 * C9427 + C49151 + C49151 + C152149 * C9433 +
              C23045 * C9428 + C49152 + C49152 + C151796 * C9434) *
                 C45772) *
                C152054 * C152217) *
               C151914) *
              C151834)) /
            (p * q * std::sqrt(p + q));
    d2ee[161] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
                 C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
                 C140 * C145 + C170 + C170 + C124 * C161) *
                    C152080 * C152054 * C152173 -
                (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
                 C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
                 C134 * C550 + C587 + C587 + C121 * C574) *
                    C152080 * C152054 * C151956) *
                   C152172 +
               ((C134 * C1083 + C1102 + C1102 + C121 * C1095 + C136 * C1084 +
                 C1103 + C1103 + C122 * C1096 + C138 * C1085 + C1104 + C1104 +
                 C123 * C1097 + C140 * C1086 + C1105 + C1105 + C124 * C1098) *
                    C152080 * C152054 * C151956 -
                (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
                 C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
                 C134 * C341 + C378 + C378 + C121 * C365) *
                    C152080 * C152054 * C152173) *
                   C151914) *
                  C335 +
              (((C134 * C549 + C592 + C592 + C121 * C573 + C136 * C548 + C593 +
                 C593 + C122 * C572 + C138 * C547 + C594 + C594 + C123 * C571 +
                 C140 * C555 + C595 + C595 + C124 * C579) *
                    C152080 * C152054 * C151956 -
                (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
                 C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
                 C134 * C143 + C174 + C174 + C121 * C159) *
                    C152080 * C152054 * C152173) *
                   C152172 +
               ((C134 * C340 + C383 + C383 + C121 * C364 + C136 * C339 + C384 +
                 C384 + C122 * C363 + C138 * C338 + C385 + C385 + C123 * C362 +
                 C140 * C346 + C386 + C386 + C124 * C370) *
                    C152080 * C152054 * C152173 -
                (C140 * C1087 + C1106 + C1106 + C124 * C1099 + C138 * C1086 +
                 C1107 + C1107 + C123 * C1098 + C136 * C1085 + C1108 + C1108 +
                 C122 * C1097 + C134 * C1084 + C1109 + C1109 + C121 * C1096) *
                    C152080 * C152054 * C151956) *
                   C151914) *
                  C336 +
              (((C134 * C144 + C175 + C175 + C121 * C160 + C136 * C145 + C176 +
                 C176 + C122 * C161 + C138 * C146 + C177 + C177 + C123 * C162 +
                 C140 * C147 + C178 + C178 + C124 * C163) *
                    C152080 * C152054 * C152173 -
                (C140 * C557 + C600 + C600 + C124 * C581 + C138 * C555 + C601 +
                 C601 + C123 * C579 + C136 * C547 + C602 + C602 + C122 * C571 +
                 C134 * C548 + C603 + C603 + C121 * C572) *
                    C152080 * C152054 * C151956) *
                   C152172 +
               ((C134 * C1085 + C1110 + C1110 + C121 * C1097 + C136 * C1086 +
                 C1111 + C1111 + C122 * C1098 + C138 * C1087 + C1112 + C1112 +
                 C123 * C1099 + C140 * C1088 + C1113 + C1113 + C124 * C1100) *
                    C152080 * C152054 * C151956 -
                (C140 * C348 + C391 + C391 + C124 * C372 + C138 * C346 + C392 +
                 C392 + C123 * C370 + C136 * C338 + C393 + C393 + C122 * C362 +
                 C134 * C339 + C394 + C394 + C121 * C363) *
                    C152080 * C152054 * C152173) *
                   C151914) *
                  C152208) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
                C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
                C140 * C145 + C170 + C170 + C124 * C161) *
                   C152080 * C152054 * C152173 -
               (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
                C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
                C134 * C550 + C587 + C587 + C121 * C574) *
                   C152080 * C152054 * C151956) *
                  C1709 +
              ((C134 * C1083 + C1102 + C1102 + C121 * C1095 + C136 * C1084 +
                C1103 + C1103 + C122 * C1096 + C138 * C1085 + C1104 + C1104 +
                C123 * C1097 + C140 * C1086 + C1105 + C1105 + C124 * C1098) *
                   C152080 * C152054 * C151956 -
               (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
                C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
                C134 * C341 + C378 + C378 + C121 * C365) *
                   C152080 * C152054 * C152173) *
                  C1710 +
              ((C134 * C342 + C379 + C379 + C121 * C366 + C136 * C343 + C380 +
                C380 + C122 * C367 + C138 * C344 + C381 + C381 + C123 * C368 +
                C140 * C345 + C382 + C382 + C124 * C369) *
                   C152080 * C152054 * C152173 -
               (C140 * C1535 + C1572 + C1572 + C124 * C1559 + C138 * C1536 +
                C1573 + C1573 + C123 * C1560 + C136 * C1537 + C1574 + C1574 +
                C122 * C1561 + C134 * C1538 + C1575 + C1575 + C121 * C1562) *
                   C152080 * C152054 * C151956) *
                  C1711 +
              ((C134 * C2053 + C2066 + C2066 + C121 * C2061 + C136 * C2054 +
                C2067 + C2067 + C122 * C2062 + C138 * C2055 + C2068 + C2068 +
                C123 * C2063 + C140 * C2056 + C2069 + C2069 + C124 * C2064) *
                   C152080 * C152054 * C151956 -
               (C140 * C1353 + C1378 + C1378 + C124 * C1369 + C138 * C1354 +
                C1379 + C1379 + C123 * C1370 + C136 * C1355 + C1380 + C1380 +
                C122 * C1371 + C134 * C1356 + C1381 + C1381 + C121 * C1372) *
                   C152080 * C152054 * C152173) *
                  C152224) *
             C151823) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
            C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
            C140 * C145 + C170 + C170 + C124 * C161) *
               C152080 * C152054 * C2814 -
           (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
            C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
            C134 * C550 + C587 + C587 + C121 * C574) *
               C152080 * C152054 * C2815 +
           (C134 * C551 + C588 + C588 + C121 * C575 + C136 * C552 + C589 +
            C589 + C122 * C576 + C138 * C553 + C590 + C590 + C123 * C577 +
            C140 * C554 + C591 + C591 + C124 * C578) *
               C152080 * C152054 * C2816 -
           (C140 * C2451 + C2476 + C2476 + C124 * C2467 + C138 * C2452 + C2477 +
            C2477 + C123 * C2468 + C136 * C2453 + C2478 + C2478 + C122 * C2469 +
            C134 * C2454 + C2479 + C2479 + C121 * C2470) *
               C152080 * C152054 * C152230) *
              C152172 +
          ((C134 * C1083 + C1102 + C1102 + C121 * C1095 + C136 * C1084 + C1103 +
            C1103 + C122 * C1096 + C138 * C1085 + C1104 + C1104 + C123 * C1097 +
            C140 * C1086 + C1105 + C1105 + C124 * C1098) *
               C152080 * C152054 * C2815 -
           (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
            C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
            C134 * C341 + C378 + C378 + C121 * C365) *
               C152080 * C152054 * C2814 -
           (C140 * C1531 + C1568 + C1568 + C124 * C1555 + C138 * C1532 + C1569 +
            C1569 + C123 * C1556 + C136 * C1533 + C1570 + C1570 + C122 * C1557 +
            C134 * C1534 + C1571 + C1571 + C121 * C1558) *
               C152080 * C152054 * C2816 +
           (C134 * C2955 + C2968 + C2968 + C121 * C2963 + C136 * C2956 + C2969 +
            C2969 + C122 * C2964 + C138 * C2957 + C2970 + C2970 + C123 * C2965 +
            C140 * C2958 + C2971 + C2971 + C124 * C2966) *
               C152080 * C152054 * C152230) *
              C151914) *
         C151823) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
              C23049 + C23049 + C151796 * C159) *
                 C152080 * C23040 +
             (C23380 + C23381) * C152080 * C23041 + C23401 * C23042) *
                C152173 -
            ((C24418 + C24419) * C152080 * C23042 +
             (C24420 + C24421) * C152080 * C23041 +
             (C23045 * C549 + C23626 + C23626 + C151796 * C573 + C23043 * C550 +
              C23627 + C23627 + C152149 * C574) *
                 C152080 * C23040) *
                C151956) *
               C152172 +
           (((C24421 + C24420) * C152080 * C23040 +
             (C24419 + C24418) * C152080 * C23041 +
             (C23043 * C2053 + C24372 + C24372 + C152149 * C2061 +
              C23045 * C2054 + C24373 + C24373 + C151796 * C2062) *
                 C152080 * C23042) *
                C151956 -
            ((C23384 + C23385) * C152080 * C23042 +
             (C23383 + C23382) * C152080 * C23041 +
             (C23381 + C23380) * C152080 * C23040) *
                C152173) *
               C151914) *
              C335 +
          ((((C23043 * C549 + C23634 + C23634 + C152149 * C573 + C23045 * C548 +
              C23635 + C23635 + C151796 * C572) *
                 C152080 * C23040 +
             (C24422 + C24423) * C152080 * C23041 +
             (C24424 + C24425) * C152080 * C23042) *
                C151956 -
            (C23402 * C23042 + (C23387 + C23386) * C152080 * C23041 +
             (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
              C23059 + C23059 + C152149 * C159) *
                 C152080 * C23040) *
                C152173) *
               C152172 +
           (((C23386 + C23387) * C152080 * C23040 +
             (C23388 + C23389) * C152080 * C23041 +
             (C23390 + C23391) * C152080 * C23042) *
                C152173 -
            ((C23045 * C2055 + C24382 + C24382 + C151796 * C2063 +
              C23043 * C2054 + C24383 + C24383 + C152149 * C2062) *
                 C152080 * C23042 +
             (C24425 + C24424) * C152080 * C23041 +
             (C24423 + C24422) * C152080 * C23040) *
                C151956) *
               C151914) *
              C336 +
          ((((C23043 * C144 + C23060 + C23060 + C152149 * C160 + C23045 * C145 +
              C23061 + C23061 + C151796 * C161) *
                 C152080 * C23040 +
             (C23392 + C23393) * C152080 * C23041 + C23403 * C23042) *
                C152173 -
            ((C24426 + C24427) * C152080 * C23042 +
             (C24428 + C24429) * C152080 * C23041 +
             (C23045 * C547 + C23650 + C23650 + C151796 * C571 + C23043 * C548 +
              C23651 + C23651 + C152149 * C572) *
                 C152080 * C23040) *
                C151956) *
               C152172 +
           (((C24429 + C24428) * C152080 * C23040 +
             (C24427 + C24426) * C152080 * C23041 +
             (C23043 * C2055 + C24392 + C24392 + C152149 * C2063 +
              C23045 * C2056 + C24393 + C24393 + C151796 * C2064) *
                 C152080 * C23042) *
                C151956 -
            ((C23396 + C23397) * C152080 * C23042 +
             (C23395 + C23394) * C152080 * C23041 +
             (C23393 + C23392) * C152080 * C23040) *
                C152173) *
               C151914) *
              C152208)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
             C23049 + C23049 + C151796 * C159) *
                C152080 * C23040 +
            (C23380 + C23381) * C152080 * C23041 + C23401 * C23042) *
               C152173 -
           (C25051 * C23042 + (C24420 + C24421) * C152080 * C23041 +
            (C23045 * C549 + C23626 + C23626 + C151796 * C573 + C23043 * C550 +
             C23627 + C23627 + C152149 * C574) *
                C152080 * C23040) *
               C151956) *
              C1709 +
          (((C24421 + C24420) * C152080 * C23040 +
            (C24419 + C24418) * C152080 * C23041 + C25797 * C23042) *
               C151956 -
           (C24789 * C23042 + (C23383 + C23382) * C152080 * C23041 +
            (C23381 + C23380) * C152080 * C23040) *
               C152173) *
              C1710 +
          ((C23401 * C23040 + (C23385 + C23384) * C152080 * C23041 +
            C24803 * C23042) *
               C152173 -
           ((C25802 + C25803) * C152080 * C23042 +
            (C25073 + C25072) * C152080 * C23041 + C25051 * C23040) *
               C151956) *
              C1711 +
          ((C25797 * C23040 + (C25803 + C25802) * C152080 * C23041 +
            (C23043 * C25783 + C25795 + C25795 + C152149 * C25787 +
             C23045 * C25784 + C25796 + C25796 + C151796 * C25788) *
                C152080 * C23042) *
               C151956 -
           ((C24800 + C24801) * C152080 * C23042 +
            (C24799 + C24798) * C152080 * C23041 + C24789 * C23040) *
               C152173) *
              C152224) *
         C151823) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
             C23049 + C23049 + C151796 * C159) *
                C152080 * C23040 +
            (C23380 + C23381) * C152080 * C23041 + C23401 * C23042) *
               C2814 -
           (C25051 * C23042 + (C24420 + C24421) * C152080 * C23041 +
            (C23045 * C549 + C23626 + C23626 + C151796 * C573 + C23043 * C550 +
             C23627 + C23627 + C152149 * C574) *
                C152080 * C23040) *
               C2815 +
           ((C23043 * C551 + C23628 + C23628 + C152149 * C575 + C23045 * C552 +
             C23629 + C23629 + C151796 * C576) *
                C152080 * C23040 +
            (C25068 + C25069) * C152080 * C23041 + C25077 * C23042) *
               C2816 -
           ((C27110 + C27111) * C152080 * C23042 +
            (C27112 + C27113) * C152080 * C23041 +
            (C23045 * C2453 + C26372 + C26372 + C151796 * C2469 +
             C23043 * C2454 + C26373 + C26373 + C152149 * C2470) *
                C152080 * C23040) *
               C152230) *
              C152172 +
          (((C24421 + C24420) * C152080 * C23040 +
            (C24419 + C24418) * C152080 * C23041 + C25797 * C23042) *
               C2815 -
           (C24789 * C23042 + (C23383 + C23382) * C152080 * C23041 +
            (C23381 + C23380) * C152080 * C23040) *
               C2814 -
           ((C25074 + C25075) * C152080 * C23042 +
            (C25071 + C25070) * C152080 * C23041 +
            (C25069 + C25068) * C152080 * C23040) *
               C2816 +
           ((C27113 + C27112) * C152080 * C23040 +
            (C27111 + C27110) * C152080 * C23041 +
            (C23043 * C27085 + C27100 + C27100 + C152149 * C27089 +
             C23045 * C27086 + C27101 + C27101 + C151796 * C27090) *
                C152080 * C23042) *
               C152230) *
              C151914) *
         C151823) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
              C23049 + C23049 + C151796 * C159) *
                 C45770 +
             (C46294 + C46295) * C45771 + C46312 * C45772) *
                C152054 * C152173 -
            ((C46298 + C46299) * C45772 + (C46297 + C46296) * C45771 +
             (C46295 + C46294) * C45770) *
                C152054 * C151956) *
               C152172 +
           (((C24421 + C24420) * C45770 + (C25068 + C25069) * C45771 +
             (C27113 + C27112) * C45772) *
                C152054 * C151956 -
            ((C25069 + C25068) * C45772 + (C24420 + C24421) * C45771 +
             (C23381 + C23380) * C45770) *
                C152054 * C152173) *
               C151914) *
              C335 +
          ((((C46300 + C46301) * C45770 + (C46302 + C46303) * C45771 +
             (C46304 + C46305) * C45772) *
                C152054 * C151956 -
            (C46313 * C45772 + (C46301 + C46300) * C45771 +
             (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
              C23059 + C23059 + C152149 * C159) *
                 C45770) *
                C152054 * C152173) *
               C152172 +
           (((C23386 + C23387) * C45770 + (C24422 + C24423) * C45771 +
             (C26691 + C26690) * C45772) *
                C152054 * C152173 -
            ((C23045 * C2957 + C26889 + C26889 + C151796 * C2965 +
              C23043 * C2956 + C26888 + C26888 + C152149 * C2964) *
                 C45772 +
             (C26690 + C26691) * C45771 + (C24423 + C24422) * C45770) *
                C152054 * C151956) *
               C151914) *
              C336 +
          ((((C23043 * C144 + C23060 + C23060 + C152149 * C160 + C23045 * C145 +
              C23061 + C23061 + C151796 * C161) *
                 C45770 +
             (C46306 + C46307) * C45771 + C46314 * C45772) *
                C152054 * C152173 -
            ((C46310 + C46311) * C45772 + (C46309 + C46308) * C45771 +
             (C46307 + C46306) * C45770) *
                C152054 * C151956) *
               C152172 +
           (((C24429 + C24428) * C45770 + (C47027 + C47028) * C45771 +
             (C23043 * C2957 + C47021 + C47021 + C152149 * C2965 +
              C23045 * C2958 + C47022 + C47022 + C151796 * C2966) *
                 C45772) *
                C152054 * C151956 -
            ((C47028 + C47027) * C45772 + (C24428 + C24429) * C45771 +
             (C23393 + C23392) * C45770) *
                C152054 * C152173) *
               C151914) *
              C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
             C23049 + C23049 + C151796 * C159) *
                C45770 +
            (C46294 + C46295) * C45771 + C46312 * C45772) *
               C152054 * C152173 -
           ((C46298 + C46299) * C45772 + (C46297 + C46296) * C45771 +
            (C46295 + C46294) * C45770) *
               C152054 * C151956) *
              C1709 +
          (((C24421 + C24420) * C45770 + (C25068 + C25069) * C45771 +
            (C27113 + C27112) * C45772) *
               C152054 * C151956 -
           (C47587 * C45772 + (C24420 + C24421) * C45771 +
            (C23381 + C23380) * C45770) *
               C152054 * C152173) *
              C1710 +
          ((C23398 * C45770 + (C24419 + C24418) * C45771 + C25076 * C45772) *
               C152054 * C152173 -
           ((C27110 + C27111) * C45772 + (C25071 + C25070) * C45771 +
            C25028 * C45770) *
               C152054 * C151956) *
              C1711 +
          ((C25790 * C45770 + (C25075 + C25074) * C45771 +
            (C23043 * C27085 + C27100 + C27100 + C152149 * C27089 +
             C23045 * C27086 + C27101 + C27101 + C151796 * C27090) *
                C45772) *
               C152054 * C151956 -
           ((C25074 + C25075) * C45772 + (C25073 + C25072) * C45771 +
            C24776 * C45770) *
               C152054 * C152173) *
              C152224) *
         C151823) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
             C23049 + C23049 + C151796 * C159) *
                C45770 +
            (C46294 + C46295) * C45771 + C46312 * C45772) *
               C152054 * C2814 -
           (C48830 * C45772 + (C46297 + C46296) * C45771 +
            (C46295 + C46294) * C45770) *
               C152054 * C2815 +
           (C46312 * C45770 + (C46299 + C46298) * C45771 + C48855 * C45772) *
               C152054 * C2816 -
           ((C48853 + C48854) * C45772 + (C48852 + C48851) * C45771 +
            C48830 * C45770) *
               C152054 * C152230) *
              C152172 +
          (((C24421 + C24420) * C45770 + (C25068 + C25069) * C45771 +
            C49563 * C45772) *
               C152054 * C2815 -
           (C47587 * C45772 + (C24420 + C24421) * C45771 +
            (C23381 + C23380) * C45770) *
               C152054 * C2814 -
           ((C49574 + C49575) * C45772 + (C27112 + C27113) * C45771 +
            C47587 * C45770) *
               C152054 * C2816 +
           (C49563 * C45770 + (C49575 + C49574) * C45771 +
            (C23043 * C40487 + C49568 + C49568 + C152149 * C40491 +
             C23045 * C49559 + C49569 + C49569 + C151796 * C49561) *
                C45772) *
               C152054 * C152230) *
              C151914) *
         C151823) /
            (p * q * std::sqrt(p + q));
    d2ee[162] +=
        (-0.25 * std::pow(Pi, 2.5) *
             ((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
               C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
               C140 * C145 + C170 + C170 + C124 * C161) *
                  C152080 * C152054 * C151869 * C151851 * C129 -
              (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
               C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
               C134 * C143 + C174 + C174 + C121 * C159) *
                  C152080 * C152054 * C151869 * C151851 * C130 +
              (C134 * C144 + C175 + C175 + C121 * C160 + C136 * C145 + C176 +
               C176 + C122 * C161 + C138 * C146 + C177 + C177 + C123 * C162 +
               C140 * C147 + C178 + C178 + C124 * C163) *
                  C152080 * C152054 * C151869 * C151851 * C131 -
              (C140 * C148 + C179 + C179 + C124 * C164 + C138 * C147 + C180 +
               C180 + C123 * C163 + C136 * C146 + C181 + C181 + C122 * C162 +
               C134 * C145 + C182 + C182 + C121 * C161) *
                  C152080 * C152054 * C151869 * C151851 * C132 +
              (C134 * C146 + C183 + C183 + C121 * C162 + C136 * C147 + C184 +
               C184 + C122 * C163 + C138 * C148 + C185 + C185 + C123 * C164 +
               C140 * C149 + C186 + C186 + C124 * C165) *
                  C152080 * C152054 * C151869 * C151851 * C133) -
         0.25 * std::pow(Pi, 2.5) *
             (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
                C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
                C140 * C145 + C170 + C170 + C124 * C161) *
                   C152080 * C152054 * C151869 * C152258 -
               (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
                C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
                C134 * C341 + C378 + C378 + C121 * C365) *
                   C152080 * C152054 * C151869 * C152244 +
               (C134 * C342 + C379 + C379 + C121 * C366 + C136 * C343 + C380 +
                C380 + C122 * C367 + C138 * C344 + C381 + C381 + C123 * C368 +
                C140 * C345 + C382 + C382 + C124 * C369) *
                   C152080 * C152054 * C151869 * C152214) *
                  C335 +
              ((C134 * C340 + C383 + C383 + C121 * C364 + C136 * C339 + C384 +
                C384 + C122 * C363 + C138 * C338 + C385 + C385 + C123 * C362 +
                C140 * C346 + C386 + C386 + C124 * C370) *
                   C152080 * C152054 * C151869 * C152244 -
               (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
                C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
                C134 * C143 + C174 + C174 + C121 * C159) *
                   C152080 * C152054 * C151869 * C152258 -
               (C140 * C347 + C387 + C387 + C124 * C371 + C138 * C345 + C388 +
                C388 + C123 * C369 + C136 * C344 + C389 + C389 + C122 * C368 +
                C134 * C343 + C390 + C390 + C121 * C367) *
                   C152080 * C152054 * C151869 * C152214) *
                  C336 +
              ((C134 * C144 + C175 + C175 + C121 * C160 + C136 * C145 + C176 +
                C176 + C122 * C161 + C138 * C146 + C177 + C177 + C123 * C162 +
                C140 * C147 + C178 + C178 + C124 * C163) *
                   C152080 * C152054 * C151869 * C152258 -
               (C140 * C348 + C391 + C391 + C124 * C372 + C138 * C346 + C392 +
                C392 + C123 * C370 + C136 * C338 + C393 + C393 + C122 * C362 +
                C134 * C339 + C394 + C394 + C121 * C363) *
                   C152080 * C152054 * C151869 * C152244 +
               (C134 * C344 + C395 + C395 + C121 * C368 + C136 * C345 + C396 +
                C396 + C122 * C369 + C138 * C347 + C397 + C397 + C123 * C371 +
                C140 * C349 + C398 + C398 + C124 * C373) *
                   C152080 * C152054 * C151869 * C152214) *
                  C152208) +
         0.5 * std::pow(Pi, 2.5) *
             (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
                C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
                C140 * C145 + C170 + C170 + C124 * C161) *
                   C152080 * C152054 * C152259 -
               (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
                C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
                C134 * C550 + C587 + C587 + C121 * C574) *
                   C152080 * C152054 * C152246 +
               (C134 * C551 + C588 + C588 + C121 * C575 + C136 * C552 + C589 +
                C589 + C122 * C576 + C138 * C553 + C590 + C590 + C123 * C577 +
                C140 * C554 + C591 + C591 + C124 * C578) *
                   C152080 * C152054 * C152217) *
                  C151851 * C335 +
              ((C134 * C549 + C592 + C592 + C121 * C573 + C136 * C548 + C593 +
                C593 + C122 * C572 + C138 * C547 + C594 + C594 + C123 * C571 +
                C140 * C555 + C595 + C595 + C124 * C579) *
                   C152080 * C152054 * C152246 -
               (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
                C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
                C134 * C143 + C174 + C174 + C121 * C159) *
                   C152080 * C152054 * C152259 -
               (C140 * C556 + C596 + C596 + C124 * C580 + C138 * C554 + C597 +
                C597 + C123 * C578 + C136 * C553 + C598 + C598 + C122 * C577 +
                C134 * C552 + C599 + C599 + C121 * C576) *
                   C152080 * C152054 * C152217) *
                  C151851 * C336 +
              ((C134 * C144 + C175 + C175 + C121 * C160 + C136 * C145 + C176 +
                C176 + C122 * C161 + C138 * C146 + C177 + C177 + C123 * C162 +
                C140 * C147 + C178 + C178 + C124 * C163) *
                   C152080 * C152054 * C152259 -
               (C140 * C557 + C600 + C600 + C124 * C581 + C138 * C555 + C601 +
                C601 + C123 * C579 + C136 * C547 + C602 + C602 + C122 * C571 +
                C134 * C548 + C603 + C603 + C121 * C572) *
                   C152080 * C152054 * C152246 +
               (C134 * C553 + C604 + C604 + C121 * C577 + C136 * C554 + C605 +
                C605 + C122 * C578 + C138 * C556 + C606 + C606 + C123 * C580 +
                C140 * C558 + C607 + C607 + C124 * C582) *
                   C152080 * C152054 * C152217) *
                  C151851 * C152208) -
         0.25 * std::pow(Pi, 2.5) *
             (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
                C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
                C140 * C145 + C170 + C170 + C124 * C161) *
                   C152080 * C152054 * C151869 * C1259 -
               (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
                C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
                C134 * C341 + C378 + C378 + C121 * C365) *
                   C152080 * C152054 * C151869 * C1260 +
               (C134 * C342 + C379 + C379 + C121 * C366 + C136 * C343 + C380 +
                C380 + C122 * C367 + C138 * C344 + C381 + C381 + C123 * C368 +
                C140 * C345 + C382 + C382 + C124 * C369) *
                   C152080 * C152054 * C151869 * C152214) *
                  C152255 +
              ((C134 * C340 + C383 + C383 + C121 * C364 + C136 * C339 + C384 +
                C384 + C122 * C363 + C138 * C338 + C385 + C385 + C123 * C362 +
                C140 * C346 + C386 + C386 + C124 * C370) *
                   C152080 * C152054 * C151869 * C1260 -
               (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
                C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
                C134 * C143 + C174 + C174 + C121 * C159) *
                   C152080 * C152054 * C151869 * C1259 -
               (C140 * C347 + C387 + C387 + C124 * C371 + C138 * C345 + C388 +
                C388 + C123 * C369 + C136 * C344 + C389 + C389 + C122 * C368 +
                C134 * C343 + C390 + C390 + C121 * C367) *
                   C152080 * C152054 * C151869 * C152214) *
                  C152240 +
              ((C134 * C144 + C175 + C175 + C121 * C160 + C136 * C145 + C176 +
                C176 + C122 * C161 + C138 * C146 + C177 + C177 + C123 * C162 +
                C140 * C147 + C178 + C178 + C124 * C163) *
                   C152080 * C152054 * C151869 * C1259 -
               (C140 * C348 + C391 + C391 + C124 * C372 + C138 * C346 + C392 +
                C392 + C123 * C370 + C136 * C338 + C393 + C393 + C122 * C362 +
                C134 * C339 + C394 + C394 + C121 * C363) *
                   C152080 * C152054 * C151869 * C1260 +
               (C134 * C344 + C395 + C395 + C121 * C368 + C136 * C345 + C396 +
                C396 + C122 * C369 + C138 * C347 + C397 + C397 + C123 * C371 +
                C140 * C349 + C398 + C398 + C124 * C373) *
                   C152080 * C152054 * C151869 * C152214) *
                  C152208) -
         0.25 * std::pow(Pi, 2.5) *
             ((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
               C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
               C140 * C145 + C170 + C170 + C124 * C161) *
                  C152080 * C152054 * C151869 * C1347 -
              (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
               C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
               C134 * C341 + C378 + C378 + C121 * C365) *
                  C152080 * C152054 * C151869 * C1348 +
              (C134 * C342 + C379 + C379 + C121 * C366 + C136 * C343 + C380 +
               C380 + C122 * C367 + C138 * C344 + C381 + C381 + C123 * C368 +
               C140 * C345 + C382 + C382 + C124 * C369) *
                  C152080 * C152054 * C151869 * C1349 -
              (C140 * C1353 + C1378 + C1378 + C124 * C1369 + C138 * C1354 +
               C1379 + C1379 + C123 * C1370 + C136 * C1355 + C1380 + C1380 +
               C122 * C1371 + C134 * C1356 + C1381 + C1381 + C121 * C1372) *
                  C152080 * C152054 * C151869 * C1350 +
              (C134 * C1357 + C1382 + C1382 + C121 * C1373 + C136 * C1358 +
               C1383 + C1383 + C122 * C1374 + C138 * C1359 + C1384 + C1384 +
               C123 * C1375 + C140 * C1360 + C1385 + C1385 + C124 * C1376) *
                  C152080 * C152054 * C151869 * C1351) *
             C151823 +
         0.5 * std::pow(Pi, 2.5) *
             (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
                C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
                C140 * C145 + C170 + C170 + C124 * C161) *
                   C152080 * C152054 * C152259 -
               (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
                C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
                C134 * C550 + C587 + C587 + C121 * C574) *
                   C152080 * C152054 * C152246 +
               (C134 * C551 + C588 + C588 + C121 * C575 + C136 * C552 + C589 +
                C589 + C122 * C576 + C138 * C553 + C590 + C590 + C123 * C577 +
                C140 * C554 + C591 + C591 + C124 * C578) *
                   C152080 * C152054 * C152217) *
                  C1259 +
              ((C134 * C1083 + C1102 + C1102 + C121 * C1095 + C136 * C1084 +
                C1103 + C1103 + C122 * C1096 + C138 * C1085 + C1104 + C1104 +
                C123 * C1097 + C140 * C1086 + C1105 + C1105 + C124 * C1098) *
                   C152080 * C152054 * C152246 -
               (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
                C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
                C134 * C341 + C378 + C378 + C121 * C365) *
                   C152080 * C152054 * C152259 -
               (C140 * C1531 + C1568 + C1568 + C124 * C1555 + C138 * C1532 +
                C1569 + C1569 + C123 * C1556 + C136 * C1533 + C1570 + C1570 +
                C122 * C1557 + C134 * C1534 + C1571 + C1571 + C121 * C1558) *
                   C152080 * C152054 * C152217) *
                  C1260 +
              ((C134 * C342 + C379 + C379 + C121 * C366 + C136 * C343 + C380 +
                C380 + C122 * C367 + C138 * C344 + C381 + C381 + C123 * C368 +
                C140 * C345 + C382 + C382 + C124 * C369) *
                   C152080 * C152054 * C152259 -
               (C140 * C1535 + C1572 + C1572 + C124 * C1559 + C138 * C1536 +
                C1573 + C1573 + C123 * C1560 + C136 * C1537 + C1574 + C1574 +
                C122 * C1561 + C134 * C1538 + C1575 + C1575 + C121 * C1562) *
                   C152080 * C152054 * C152246 +
               (C134 * C1539 + C1576 + C1576 + C121 * C1563 + C136 * C1540 +
                C1577 + C1577 + C122 * C1564 + C138 * C1541 + C1578 + C1578 +
                C123 * C1565 + C140 * C1542 + C1579 + C1579 + C124 * C1566) *
                   C152080 * C152054 * C152217) *
                  C152214) *
             C151823 +
         0.5 * std::pow(Pi, 2.5) *
             (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
                C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
                C140 * C145 + C170 + C170 + C124 * C161) *
                   C152080 * C152054 * C2215 -
               (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
                C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
                C134 * C550 + C587 + C587 + C121 * C574) *
                   C152080 * C152054 * C2216 +
               (C134 * C551 + C588 + C588 + C121 * C575 + C136 * C552 + C589 +
                C589 + C122 * C576 + C138 * C553 + C590 + C590 + C123 * C577 +
                C140 * C554 + C591 + C591 + C124 * C578) *
                   C152080 * C152054 * C152217) *
                  C151851 * C152255 +
              ((C134 * C549 + C592 + C592 + C121 * C573 + C136 * C548 + C593 +
                C593 + C122 * C572 + C138 * C547 + C594 + C594 + C123 * C571 +
                C140 * C555 + C595 + C595 + C124 * C579) *
                   C152080 * C152054 * C2216 -
               (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
                C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
                C134 * C143 + C174 + C174 + C121 * C159) *
                   C152080 * C152054 * C2215 -
               (C140 * C556 + C596 + C596 + C124 * C580 + C138 * C554 + C597 +
                C597 + C123 * C578 + C136 * C553 + C598 + C598 + C122 * C577 +
                C134 * C552 + C599 + C599 + C121 * C576) *
                   C152080 * C152054 * C152217) *
                  C151851 * C152240 +
              ((C134 * C144 + C175 + C175 + C121 * C160 + C136 * C145 + C176 +
                C176 + C122 * C161 + C138 * C146 + C177 + C177 + C123 * C162 +
                C140 * C147 + C178 + C178 + C124 * C163) *
                   C152080 * C152054 * C2215 -
               (C140 * C557 + C600 + C600 + C124 * C581 + C138 * C555 + C601 +
                C601 + C123 * C579 + C136 * C547 + C602 + C602 + C122 * C571 +
                C134 * C548 + C603 + C603 + C121 * C572) *
                   C152080 * C152054 * C2216 +
               (C134 * C553 + C604 + C604 + C121 * C577 + C136 * C554 + C605 +
                C605 + C122 * C578 + C138 * C556 + C606 + C606 + C123 * C580 +
                C140 * C558 + C607 + C607 + C124 * C582) *
                   C152080 * C152054 * C152217) *
                  C151851 * C152208) +
         0.5 * std::pow(Pi, 2.5) *
             (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
                C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
                C140 * C145 + C170 + C170 + C124 * C161) *
                   C152080 * C152054 * C2215 -
               (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
                C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
                C134 * C550 + C587 + C587 + C121 * C574) *
                   C152080 * C152054 * C2216 +
               (C134 * C551 + C588 + C588 + C121 * C575 + C136 * C552 + C589 +
                C589 + C122 * C576 + C138 * C553 + C590 + C590 + C123 * C577 +
                C140 * C554 + C591 + C591 + C124 * C578) *
                   C152080 * C152054 * C152217) *
                  C152258 +
              ((C134 * C1083 + C1102 + C1102 + C121 * C1095 + C136 * C1084 +
                C1103 + C1103 + C122 * C1096 + C138 * C1085 + C1104 + C1104 +
                C123 * C1097 + C140 * C1086 + C1105 + C1105 + C124 * C1098) *
                   C152080 * C152054 * C2216 -
               (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
                C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
                C134 * C341 + C378 + C378 + C121 * C365) *
                   C152080 * C152054 * C2215 -
               (C140 * C1531 + C1568 + C1568 + C124 * C1555 + C138 * C1532 +
                C1569 + C1569 + C123 * C1556 + C136 * C1533 + C1570 + C1570 +
                C122 * C1557 + C134 * C1534 + C1571 + C1571 + C121 * C1558) *
                   C152080 * C152054 * C152217) *
                  C152244 +
              ((C134 * C342 + C379 + C379 + C121 * C366 + C136 * C343 + C380 +
                C380 + C122 * C367 + C138 * C344 + C381 + C381 + C123 * C368 +
                C140 * C345 + C382 + C382 + C124 * C369) *
                   C152080 * C152054 * C2215 -
               (C140 * C1535 + C1572 + C1572 + C124 * C1559 + C138 * C1536 +
                C1573 + C1573 + C123 * C1560 + C136 * C1537 + C1574 + C1574 +
                C122 * C1561 + C134 * C1538 + C1575 + C1575 + C121 * C1562) *
                   C152080 * C152054 * C2216 +
               (C134 * C1539 + C1576 + C1576 + C121 * C1563 + C136 * C1540 +
                C1577 + C1577 + C122 * C1564 + C138 * C1541 + C1578 + C1578 +
                C123 * C1565 + C140 * C1542 + C1579 + C1579 + C124 * C1566) *
                   C152080 * C152054 * C152217) *
                  C152214) *
             C151823) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 + C168 +
           C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 + C140 * C145 +
           C170 + C170 + C124 * C161) *
              C152080 * C152054 * C2446 -
          (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 + C585 +
           C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 + C134 * C550 +
           C587 + C587 + C121 * C574) *
              C152080 * C152054 * C2447 +
          (C134 * C551 + C588 + C588 + C121 * C575 + C136 * C552 + C589 + C589 +
           C122 * C576 + C138 * C553 + C590 + C590 + C123 * C577 + C140 * C554 +
           C591 + C591 + C124 * C578) *
              C152080 * C152054 * C2448 -
          (C140 * C2451 + C2476 + C2476 + C124 * C2467 + C138 * C2452 + C2477 +
           C2477 + C123 * C2468 + C136 * C2453 + C2478 + C2478 + C122 * C2469 +
           C134 * C2454 + C2479 + C2479 + C121 * C2470) *
              C152080 * C152054 * C2449 +
          (C134 * C2455 + C2480 + C2480 + C121 * C2471 + C136 * C2456 + C2481 +
           C2481 + C122 * C2472 + C138 * C2457 + C2482 + C2482 + C123 * C2473 +
           C140 * C2458 + C2483 + C2483 + C124 * C2474) *
              C152080 * C152054 * C2450) *
         C151851 * C151823) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         (((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
            C23049 + C23049 + C151796 * C159) *
               C152080 * C23040 +
           (C23043 * C341 + C23050 + C23050 + C152149 * C365 + C23045 * C340 +
            C23051 + C23051 + C151796 * C364) *
               C152080 * C23041 +
           (C23043 * C342 + C23052 + C23052 + C152149 * C366 + C23045 * C343 +
            C23053 + C23053 + C151796 * C367) *
               C152080 * C23042) *
              C151869 * C151851 * C129 -
          ((C23045 * C344 + C23054 + C23054 + C151796 * C368 + C23043 * C343 +
            C23055 + C23055 + C152149 * C367) *
               C152080 * C23042 +
           (C23045 * C339 + C23056 + C23056 + C151796 * C363 + C23043 * C340 +
            C23057 + C23057 + C152149 * C364) *
               C152080 * C23041 +
           (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
            C23059 + C23059 + C152149 * C159) *
               C152080 * C23040) *
              C151869 * C151851 * C130 +
          ((C23043 * C144 + C23060 + C23060 + C152149 * C160 + C23045 * C145 +
            C23061 + C23061 + C151796 * C161) *
               C152080 * C23040 +
           (C23043 * C339 + C23062 + C23062 + C152149 * C363 + C23045 * C338 +
            C23063 + C23063 + C151796 * C362) *
               C152080 * C23041 +
           (C23043 * C344 + C23064 + C23064 + C152149 * C368 + C23045 * C345 +
            C23065 + C23065 + C151796 * C369) *
               C152080 * C23042) *
              C151869 * C151851 * C131 -
          ((C23045 * C347 + C23066 + C23066 + C151796 * C371 + C23043 * C345 +
            C23067 + C23067 + C152149 * C369) *
               C152080 * C23042 +
           (C23045 * C346 + C23068 + C23068 + C151796 * C370 + C23043 * C338 +
            C23069 + C23069 + C152149 * C362) *
               C152080 * C23041 +
           (C23045 * C146 + C23070 + C23070 + C151796 * C162 + C23043 * C145 +
            C23071 + C23071 + C152149 * C161) *
               C152080 * C23040) *
              C151869 * C151851 * C132 +
          ((C23043 * C146 + C23072 + C23072 + C152149 * C162 + C23045 * C147 +
            C23073 + C23073 + C151796 * C163) *
               C152080 * C23040 +
           (C23043 * C346 + C23074 + C23074 + C152149 * C370 + C23045 * C348 +
            C23075 + C23075 + C151796 * C372) *
               C152080 * C23041 +
           (C23043 * C347 + C23076 + C23076 + C152149 * C371 + C23045 * C349 +
            C23077 + C23077 + C151796 * C373) *
               C152080 * C23042) *
              C151869 * C151851 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
             C23049 + C23049 + C151796 * C159) *
                C152080 * C23040 +
            (C23380 + C23381) * C152080 * C23041 + C23401 * C23042) *
               C151869 * C152258 -
           ((C23384 + C23385) * C152080 * C23042 +
            (C23383 + C23382) * C152080 * C23041 +
            (C23381 + C23380) * C152080 * C23040) *
               C151869 * C152244 +
           (C23401 * C23040 + (C23385 + C23384) * C152080 * C23041 +
            (C23043 * C1357 + C23310 + C23310 + C152149 * C1373 +
             C23045 * C1358 + C23311 + C23311 + C151796 * C1374) *
                C152080 * C23042) *
               C151869 * C152214) *
              C335 +
          (((C23386 + C23387) * C152080 * C23040 +
            (C23388 + C23389) * C152080 * C23041 +
            (C23390 + C23391) * C152080 * C23042) *
               C151869 * C152244 -
           (C23402 * C23042 + (C23387 + C23386) * C152080 * C23041 +
            (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
             C23059 + C23059 + C152149 * C159) *
                C152080 * C23040) *
               C151869 * C152258 -
           ((C23045 * C1359 + C23326 + C23326 + C151796 * C1375 +
             C23043 * C1358 + C23327 + C23327 + C152149 * C1374) *
                C152080 * C23042 +
            (C23391 + C23390) * C152080 * C23041 + C23402 * C23040) *
               C151869 * C152214) *
              C336 +
          (((C23043 * C144 + C23060 + C23060 + C152149 * C160 + C23045 * C145 +
             C23061 + C23061 + C151796 * C161) *
                C152080 * C23040 +
            (C23392 + C23393) * C152080 * C23041 + C23403 * C23042) *
               C151869 * C152258 -
           ((C23396 + C23397) * C152080 * C23042 +
            (C23395 + C23394) * C152080 * C23041 +
            (C23393 + C23392) * C152080 * C23040) *
               C151869 * C152244 +
           (C23403 * C23040 + (C23397 + C23396) * C152080 * C23041 +
            (C23043 * C1359 + C23342 + C23342 + C152149 * C1375 +
             C23045 * C1360 + C23343 + C23343 + C151796 * C1376) *
                C152080 * C23042) *
               C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
             C23049 + C23049 + C151796 * C159) *
                C152080 * C23040 +
            (C23380 + C23381) * C152080 * C23041 + C23401 * C23042) *
               C152259 -
           ((C23045 * C1537 + C23622 + C23622 + C151796 * C1561 +
             C23043 * C1538 + C23623 + C23623 + C152149 * C1562) *
                C152080 * C23042 +
            (C23045 * C1084 + C23624 + C23624 + C151796 * C1096 +
             C23043 * C1083 + C23625 + C23625 + C152149 * C1095) *
                C152080 * C23041 +
            (C23045 * C549 + C23626 + C23626 + C151796 * C573 + C23043 * C550 +
             C23627 + C23627 + C152149 * C574) *
                C152080 * C23040) *
               C152246 +
           ((C23043 * C551 + C23628 + C23628 + C152149 * C575 + C23045 * C552 +
             C23629 + C23629 + C151796 * C576) *
                C152080 * C23040 +
            (C23043 * C1534 + C23630 + C23630 + C152149 * C1558 +
             C23045 * C1533 + C23631 + C23631 + C151796 * C1557) *
                C152080 * C23041 +
            (C23043 * C1539 + C23632 + C23632 + C152149 * C1563 +
             C23045 * C1540 + C23633 + C23633 + C151796 * C1564) *
                C152080 * C23042) *
               C152217) *
              C151851 * C335 +
          (((C23043 * C549 + C23634 + C23634 + C152149 * C573 + C23045 * C548 +
             C23635 + C23635 + C151796 * C572) *
                C152080 * C23040 +
            (C23043 * C1084 + C23636 + C23636 + C152149 * C1096 +
             C23045 * C1085 + C23637 + C23637 + C151796 * C1097) *
                C152080 * C23041 +
            (C23043 * C1537 + C23638 + C23638 + C152149 * C1561 +
             C23045 * C1536 + C23639 + C23639 + C151796 * C1560) *
                C152080 * C23042) *
               C152246 -
           (C23402 * C23042 + (C23387 + C23386) * C152080 * C23041 +
            (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
             C23059 + C23059 + C152149 * C159) *
                C152080 * C23040) *
               C152259 -
           ((C23045 * C1541 + C23640 + C23640 + C151796 * C1565 +
             C23043 * C1540 + C23641 + C23641 + C152149 * C1564) *
                C152080 * C23042 +
            (C23045 * C1532 + C23642 + C23642 + C151796 * C1556 +
             C23043 * C1533 + C23643 + C23643 + C152149 * C1557) *
                C152080 * C23041 +
            (C23045 * C553 + C23644 + C23644 + C151796 * C577 + C23043 * C552 +
             C23645 + C23645 + C152149 * C576) *
                C152080 * C23040) *
               C152217) *
              C151851 * C336 +
          (((C23043 * C144 + C23060 + C23060 + C152149 * C160 + C23045 * C145 +
             C23061 + C23061 + C151796 * C161) *
                C152080 * C23040 +
            (C23392 + C23393) * C152080 * C23041 + C23403 * C23042) *
               C152259 -
           ((C23045 * C1535 + C23646 + C23646 + C151796 * C1559 +
             C23043 * C1536 + C23647 + C23647 + C152149 * C1560) *
                C152080 * C23042 +
            (C23045 * C1086 + C23648 + C23648 + C151796 * C1098 +
             C23043 * C1085 + C23649 + C23649 + C152149 * C1097) *
                C152080 * C23041 +
            (C23045 * C547 + C23650 + C23650 + C151796 * C571 + C23043 * C548 +
             C23651 + C23651 + C152149 * C572) *
                C152080 * C23040) *
               C152246 +
           ((C23043 * C553 + C23652 + C23652 + C152149 * C577 + C23045 * C554 +
             C23653 + C23653 + C151796 * C578) *
                C152080 * C23040 +
            (C23043 * C1532 + C23654 + C23654 + C152149 * C1556 +
             C23045 * C1531 + C23655 + C23655 + C151796 * C1555) *
                C152080 * C23041 +
            (C23043 * C1541 + C23656 + C23656 + C152149 * C1565 +
             C23045 * C1542 + C23657 + C23657 + C151796 * C1566) *
                C152080 * C23042) *
               C152217) *
              C151851 * C152208)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
             C23049 + C23049 + C151796 * C159) *
                C152080 * C23040 +
            (C23380 + C23381) * C152080 * C23041 + C23401 * C23042) *
               C151869 * C1259 -
           ((C23384 + C23385) * C152080 * C23042 +
            (C23383 + C23382) * C152080 * C23041 +
            (C23381 + C23380) * C152080 * C23040) *
               C151869 * C1260 +
           (C23401 * C23040 + (C23385 + C23384) * C152080 * C23041 +
            (C23043 * C1357 + C23310 + C23310 + C152149 * C1373 +
             C23045 * C1358 + C23311 + C23311 + C151796 * C1374) *
                C152080 * C23042) *
               C151869 * C152214) *
              C152255 +
          (((C23386 + C23387) * C152080 * C23040 +
            (C23388 + C23389) * C152080 * C23041 +
            (C23390 + C23391) * C152080 * C23042) *
               C151869 * C1260 -
           (C23402 * C23042 + (C23387 + C23386) * C152080 * C23041 +
            (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
             C23059 + C23059 + C152149 * C159) *
                C152080 * C23040) *
               C151869 * C1259 -
           ((C23045 * C1359 + C23326 + C23326 + C151796 * C1375 +
             C23043 * C1358 + C23327 + C23327 + C152149 * C1374) *
                C152080 * C23042 +
            (C23391 + C23390) * C152080 * C23041 + C23402 * C23040) *
               C151869 * C152214) *
              C152240 +
          (((C23043 * C144 + C23060 + C23060 + C152149 * C160 + C23045 * C145 +
             C23061 + C23061 + C151796 * C161) *
                C152080 * C23040 +
            (C23392 + C23393) * C152080 * C23041 + C23403 * C23042) *
               C151869 * C1259 -
           ((C23396 + C23397) * C152080 * C23042 +
            (C23395 + C23394) * C152080 * C23041 +
            (C23393 + C23392) * C152080 * C23040) *
               C151869 * C1260 +
           (C23403 * C23040 + (C23397 + C23396) * C152080 * C23041 +
            (C23043 * C1359 + C23342 + C23342 + C152149 * C1375 +
             C23045 * C1360 + C23343 + C23343 + C151796 * C1376) *
                C152080 * C23042) *
               C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         (((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
            C23049 + C23049 + C151796 * C159) *
               C152080 * C23040 +
           (C23380 + C23381) * C152080 * C23041 + C23401 * C23042) *
              C151869 * C1347 -
          (C24789 * C23042 + (C23383 + C23382) * C152080 * C23041 +
           (C23381 + C23380) * C152080 * C23040) *
              C151869 * C1348 +
          (C23401 * C23040 + (C23385 + C23384) * C152080 * C23041 +
           C24803 * C23042) *
              C151869 * C1349 -
          ((C24800 + C24801) * C152080 * C23042 +
           (C24799 + C24798) * C152080 * C23041 + C24789 * C23040) *
              C151869 * C1350 +
          (C24803 * C23040 + (C24801 + C24800) * C152080 * C23041 +
           (C23043 * C24769 + C24787 + C24787 + C152149 * C24773 +
            C23045 * C24770 + C24788 + C24788 + C151796 * C24774) *
               C152080 * C23042) *
              C151869 * C1351) *
         C151823) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
             C23049 + C23049 + C151796 * C159) *
                C152080 * C23040 +
            (C23380 + C23381) * C152080 * C23041 + C23401 * C23042) *
               C152259 -
           (C25051 * C23042 + (C24420 + C24421) * C152080 * C23041 +
            (C23045 * C549 + C23626 + C23626 + C151796 * C573 + C23043 * C550 +
             C23627 + C23627 + C152149 * C574) *
                C152080 * C23040) *
               C152246 +
           ((C23043 * C551 + C23628 + C23628 + C152149 * C575 + C23045 * C552 +
             C23629 + C23629 + C151796 * C576) *
                C152080 * C23040 +
            (C25068 + C25069) * C152080 * C23041 + C25077 * C23042) *
               C152217) *
              C1259 +
          (((C24421 + C24420) * C152080 * C23040 +
            (C24419 + C24418) * C152080 * C23041 +
            (C25072 + C25073) * C152080 * C23042) *
               C152246 -
           (C24789 * C23042 + (C23383 + C23382) * C152080 * C23041 +
            (C23381 + C23380) * C152080 * C23040) *
               C152259 -
           ((C25074 + C25075) * C152080 * C23042 +
            (C25071 + C25070) * C152080 * C23041 +
            (C25069 + C25068) * C152080 * C23040) *
               C152217) *
              C1260 +
          ((C23401 * C23040 + (C23385 + C23384) * C152080 * C23041 +
            C24803 * C23042) *
               C152259 -
           ((C23045 * C8842 + C25047 + C25047 + C151796 * C8848 +
             C23043 * C8841 + C25048 + C25048 + C152149 * C8847) *
                C152080 * C23042 +
            (C25073 + C25072) * C152080 * C23041 + C25051 * C23040) *
               C152246 +
           (C25077 * C23040 + (C25075 + C25074) * C152080 * C23041 +
            (C23043 * C25021 + C25049 + C25049 + C152149 * C25025 +
             C23045 * C25022 + C25050 + C25050 + C151796 * C25026) *
                C152080 * C23042) *
               C152217) *
              C152214) *
         C151823) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
             C23049 + C23049 + C151796 * C159) *
                C152080 * C23040 +
            (C23380 + C23381) * C152080 * C23041 + C23401 * C23042) *
               C2215 -
           (C25051 * C23042 + (C24420 + C24421) * C152080 * C23041 +
            (C23045 * C549 + C23626 + C23626 + C151796 * C573 + C23043 * C550 +
             C23627 + C23627 + C152149 * C574) *
                C152080 * C23040) *
               C2216 +
           ((C23043 * C551 + C23628 + C23628 + C152149 * C575 + C23045 * C552 +
             C23629 + C23629 + C151796 * C576) *
                C152080 * C23040 +
            (C25068 + C25069) * C152080 * C23041 + C25077 * C23042) *
               C152217) *
              C151851 * C152255 +
          (((C23043 * C549 + C23634 + C23634 + C152149 * C573 + C23045 * C548 +
             C23635 + C23635 + C151796 * C572) *
                C152080 * C23040 +
            (C24422 + C24423) * C152080 * C23041 + C25583 * C23042) *
               C2216 -
           (C23402 * C23042 + (C23387 + C23386) * C152080 * C23041 +
            (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
             C23059 + C23059 + C152149 * C159) *
                C152080 * C23040) *
               C2215 -
           ((C23045 * C1541 + C23640 + C23640 + C151796 * C1565 +
             C23043 * C1540 + C23641 + C23641 + C152149 * C1564) *
                C152080 * C23042 +
            (C23045 * C1532 + C23642 + C23642 + C151796 * C1556 +
             C23043 * C1533 + C23643 + C23643 + C152149 * C1557) *
                C152080 * C23041 +
            (C23045 * C553 + C23644 + C23644 + C151796 * C577 + C23043 * C552 +
             C23645 + C23645 + C152149 * C576) *
                C152080 * C23040) *
               C152217) *
              C151851 * C152240 +
          (((C23043 * C144 + C23060 + C23060 + C152149 * C160 + C23045 * C145 +
             C23061 + C23061 + C151796 * C161) *
                C152080 * C23040 +
            (C23392 + C23393) * C152080 * C23041 + C23403 * C23042) *
               C2215 -
           ((C24426 + C24427) * C152080 * C23042 +
            (C24428 + C24429) * C152080 * C23041 +
            (C23045 * C547 + C23650 + C23650 + C151796 * C571 + C23043 * C548 +
             C23651 + C23651 + C152149 * C572) *
                C152080 * C23040) *
               C2216 +
           ((C23043 * C553 + C23652 + C23652 + C152149 * C577 + C23045 * C554 +
             C23653 + C23653 + C151796 * C578) *
                C152080 * C23040 +
            (C23043 * C1532 + C23654 + C23654 + C152149 * C1556 +
             C23045 * C1531 + C23655 + C23655 + C151796 * C1555) *
                C152080 * C23041 +
            (C23043 * C1541 + C23656 + C23656 + C152149 * C1565 +
             C23045 * C1542 + C23657 + C23657 + C151796 * C1566) *
                C152080 * C23042) *
               C152217) *
              C151851 * C152208)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
             C23049 + C23049 + C151796 * C159) *
                C152080 * C23040 +
            (C23380 + C23381) * C152080 * C23041 + C23401 * C23042) *
               C2215 -
           (C25051 * C23042 + (C24420 + C24421) * C152080 * C23041 +
            (C23045 * C549 + C23626 + C23626 + C151796 * C573 + C23043 * C550 +
             C23627 + C23627 + C152149 * C574) *
                C152080 * C23040) *
               C2216 +
           ((C23043 * C551 + C23628 + C23628 + C152149 * C575 + C23045 * C552 +
             C23629 + C23629 + C151796 * C576) *
                C152080 * C23040 +
            (C25068 + C25069) * C152080 * C23041 + C25077 * C23042) *
               C152217) *
              C152258 +
          (((C24421 + C24420) * C152080 * C23040 +
            (C24419 + C24418) * C152080 * C23041 + C25797 * C23042) *
               C2216 -
           (C24789 * C23042 + (C23383 + C23382) * C152080 * C23041 +
            (C23381 + C23380) * C152080 * C23040) *
               C2215 -
           ((C25074 + C25075) * C152080 * C23042 +
            (C25071 + C25070) * C152080 * C23041 +
            (C25069 + C25068) * C152080 * C23040) *
               C152217) *
              C152244 +
          ((C23401 * C23040 + (C23385 + C23384) * C152080 * C23041 +
            C24803 * C23042) *
               C2215 -
           ((C25802 + C25803) * C152080 * C23042 +
            (C25073 + C25072) * C152080 * C23041 + C25051 * C23040) *
               C2216 +
           (C25077 * C23040 + (C25075 + C25074) * C152080 * C23041 +
            (C23043 * C25021 + C25049 + C25049 + C152149 * C25025 +
             C23045 * C25022 + C25050 + C25050 + C151796 * C25026) *
                C152080 * C23042) *
               C152217) *
              C152214) *
         C151823) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
            C23049 + C23049 + C151796 * C159) *
               C152080 * C23040 +
           (C23380 + C23381) * C152080 * C23041 + C23401 * C23042) *
              C2446 -
          (C25051 * C23042 + (C24420 + C24421) * C152080 * C23041 +
           (C23045 * C549 + C23626 + C23626 + C151796 * C573 + C23043 * C550 +
            C23627 + C23627 + C152149 * C574) *
               C152080 * C23040) *
              C2447 +
          ((C23043 * C551 + C23628 + C23628 + C152149 * C575 + C23045 * C552 +
            C23629 + C23629 + C151796 * C576) *
               C152080 * C23040 +
           (C25068 + C25069) * C152080 * C23041 + C25077 * C23042) *
              C2448 -
          ((C23045 * C10150 + C26368 + C26368 + C151796 * C10156 +
            C23043 * C10149 + C26369 + C26369 + C152149 * C10155) *
               C152080 * C23042 +
           (C23045 * C2956 + C26370 + C26370 + C151796 * C2964 +
            C23043 * C2955 + C26371 + C26371 + C152149 * C2963) *
               C152080 * C23041 +
           (C23045 * C2453 + C26372 + C26372 + C151796 * C2469 +
            C23043 * C2454 + C26373 + C26373 + C152149 * C2470) *
               C152080 * C23040) *
              C2449 +
          ((C23043 * C2455 + C26374 + C26374 + C152149 * C2471 +
            C23045 * C2456 + C26375 + C26375 + C151796 * C2472) *
               C152080 * C23040 +
           (C23043 * C9426 + C26376 + C26376 + C152149 * C9432 +
            C23045 * C9427 + C26377 + C26377 + C151796 * C9433) *
               C152080 * C23041 +
           (C23043 * C26361 + C26378 + C26378 + C152149 * C26365 +
            C23045 * C26362 + C26379 + C26379 + C151796 * C26366) *
               C152080 * C23042) *
              C2450) *
         C151851 * C151823) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
            C23049 + C23049 + C151796 * C159) *
               C45770 +
           (C23043 * C550 + C23627 + C23627 + C152149 * C574 + C23045 * C549 +
            C23626 + C23626 + C151796 * C573) *
               C45771 +
           (C23043 * C551 + C23628 + C23628 + C152149 * C575 + C23045 * C552 +
            C23629 + C23629 + C151796 * C576) *
               C45772) *
              C152054 * C151869 * C151851 * C129 -
          ((C23045 * C553 + C23644 + C23644 + C151796 * C577 + C23043 * C552 +
            C23645 + C23645 + C152149 * C576) *
               C45772 +
           (C23045 * C548 + C23635 + C23635 + C151796 * C572 + C23043 * C549 +
            C23634 + C23634 + C152149 * C573) *
               C45771 +
           (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
            C23059 + C23059 + C152149 * C159) *
               C45770) *
              C152054 * C151869 * C151851 * C130 +
          ((C23043 * C144 + C23060 + C23060 + C152149 * C160 + C23045 * C145 +
            C23061 + C23061 + C151796 * C161) *
               C45770 +
           (C23043 * C548 + C23651 + C23651 + C152149 * C572 + C23045 * C547 +
            C23650 + C23650 + C151796 * C571) *
               C45771 +
           (C23043 * C553 + C23652 + C23652 + C152149 * C577 + C23045 * C554 +
            C23653 + C23653 + C151796 * C578) *
               C45772) *
              C152054 * C151869 * C151851 * C131 -
          ((C23045 * C556 + C45774 + C45774 + C151796 * C580 + C23043 * C554 +
            C45775 + C45775 + C152149 * C578) *
               C45772 +
           (C23045 * C555 + C24069 + C24069 + C151796 * C579 + C23043 * C547 +
            C24068 + C24068 + C152149 * C571) *
               C45771 +
           (C23045 * C146 + C23070 + C23070 + C151796 * C162 + C23043 * C145 +
            C23071 + C23071 + C152149 * C161) *
               C45770) *
              C152054 * C151869 * C151851 * C132 +
          ((C23043 * C146 + C23072 + C23072 + C152149 * C162 + C23045 * C147 +
            C23073 + C23073 + C151796 * C163) *
               C45770 +
           (C23043 * C555 + C45776 + C45776 + C152149 * C579 + C23045 * C557 +
            C45777 + C45777 + C151796 * C581) *
               C45771 +
           (C23043 * C556 + C45778 + C45778 + C152149 * C580 + C23045 * C558 +
            C45779 + C45779 + C151796 * C582) *
               C45772) *
              C152054 * C151869 * C151851 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
             C23049 + C23049 + C151796 * C159) *
                C45770 +
            (C23043 * C550 + C23627 + C23627 + C152149 * C574 + C23045 * C549 +
             C23626 + C23626 + C151796 * C573) *
                C45771 +
            (C23043 * C551 + C23628 + C23628 + C152149 * C575 + C23045 * C552 +
             C23629 + C23629 + C151796 * C576) *
                C45772) *
               C152054 * C151869 * C152258 -
           ((C25069 + C25068) * C45772 + (C24420 + C24421) * C45771 +
            (C23381 + C23380) * C45770) *
               C152054 * C151869 * C152244 +
           (C23398 * C45770 + (C24419 + C24418) * C45771 + C25076 * C45772) *
               C152054 * C151869 * C152214) *
              C335 +
          (((C23386 + C23387) * C45770 + (C24422 + C24423) * C45771 +
            (C26691 + C26690) * C45772) *
               C152054 * C151869 * C152244 -
           ((C23045 * C553 + C23644 + C23644 + C151796 * C577 + C23043 * C552 +
             C23645 + C23645 + C152149 * C576) *
                C45772 +
            (C23045 * C548 + C23635 + C23635 + C151796 * C572 + C23043 * C549 +
             C23634 + C23634 + C152149 * C573) *
                C45771 +
            (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
             C23059 + C23059 + C152149 * C159) *
                C45770) *
               C152054 * C151869 * C152258 -
           ((C26688 + C26689) * C45772 + (C24425 + C24424) * C45771 +
            C23399 * C45770) *
               C152054 * C151869 * C152214) *
              C336 +
          (((C23043 * C144 + C23060 + C23060 + C152149 * C160 + C23045 * C145 +
             C23061 + C23061 + C151796 * C161) *
                C45770 +
            (C23043 * C548 + C23651 + C23651 + C152149 * C572 + C23045 * C547 +
             C23650 + C23650 + C151796 * C571) *
                C45771 +
            (C23043 * C553 + C23652 + C23652 + C152149 * C577 + C23045 * C554 +
             C23653 + C23653 + C151796 * C578) *
                C45772) *
               C152054 * C151869 * C152258 -
           ((C23045 * C1531 + C23655 + C23655 + C151796 * C1555 +
             C23043 * C1532 + C23654 + C23654 + C152149 * C1556) *
                C45772 +
            (C24428 + C24429) * C45771 + (C23393 + C23392) * C45770) *
               C152054 * C151869 * C152244 +
           (C23400 * C45770 + (C24427 + C24426) * C45771 +
            (C23043 * C1541 + C23656 + C23656 + C152149 * C1565 +
             C23045 * C1542 + C23657 + C23657 + C151796 * C1566) *
                C45772) *
               C152054 * C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
             C23049 + C23049 + C151796 * C159) *
                C45770 +
            (C46294 + C46295) * C45771 + C46312 * C45772) *
               C152054 * C152259 -
           ((C46298 + C46299) * C45772 + (C46297 + C46296) * C45771 +
            (C46295 + C46294) * C45770) *
               C152054 * C152246 +
           (C46312 * C45770 + (C46299 + C46298) * C45771 +
            (C23043 * C2455 + C26374 + C26374 + C152149 * C2471 +
             C23045 * C2456 + C26375 + C26375 + C151796 * C2472) *
                C45772) *
               C152054 * C152217) *
              C151851 * C335 +
          (((C46300 + C46301) * C45770 + (C46302 + C46303) * C45771 +
            (C46304 + C46305) * C45772) *
               C152054 * C152246 -
           (C46313 * C45772 + (C46301 + C46300) * C45771 +
            (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
             C23059 + C23059 + C152149 * C159) *
                C45770) *
               C152054 * C152259 -
           ((C23045 * C2457 + C46240 + C46240 + C151796 * C2473 +
             C23043 * C2456 + C46241 + C46241 + C152149 * C2472) *
                C45772 +
            (C46305 + C46304) * C45771 + C46313 * C45770) *
               C152054 * C152217) *
              C151851 * C336 +
          (((C23043 * C144 + C23060 + C23060 + C152149 * C160 + C23045 * C145 +
             C23061 + C23061 + C151796 * C161) *
                C45770 +
            (C46306 + C46307) * C45771 + C46314 * C45772) *
               C152054 * C152259 -
           ((C46310 + C46311) * C45772 + (C46309 + C46308) * C45771 +
            (C46307 + C46306) * C45770) *
               C152054 * C152246 +
           (C46314 * C45770 + (C46311 + C46310) * C45771 +
            (C23043 * C2457 + C46256 + C46256 + C152149 * C2473 +
             C23045 * C2458 + C46257 + C46257 + C151796 * C2474) *
                C45772) *
               C152054 * C152217) *
              C151851 * C152208)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
             C23049 + C23049 + C151796 * C159) *
                C45770 +
            (C46294 + C46295) * C45771 + C46312 * C45772) *
               C152054 * C151869 * C1259 -
           ((C25069 + C25068) * C45772 + (C24420 + C24421) * C45771 +
            (C23381 + C23380) * C45770) *
               C152054 * C151869 * C1260 +
           (C23398 * C45770 + (C24419 + C24418) * C45771 + C25076 * C45772) *
               C152054 * C151869 * C152214) *
              C152255 +
          (((C23386 + C23387) * C45770 + (C24422 + C24423) * C45771 +
            (C26691 + C26690) * C45772) *
               C152054 * C151869 * C1260 -
           (C46313 * C45772 + (C46301 + C46300) * C45771 +
            (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
             C23059 + C23059 + C152149 * C159) *
                C45770) *
               C152054 * C151869 * C1259 -
           ((C26688 + C26689) * C45772 + (C24425 + C24424) * C45771 +
            C23399 * C45770) *
               C152054 * C151869 * C152214) *
              C152240 +
          (((C23043 * C144 + C23060 + C23060 + C152149 * C160 + C23045 * C145 +
             C23061 + C23061 + C151796 * C161) *
                C45770 +
            (C46306 + C46307) * C45771 + C46314 * C45772) *
               C152054 * C151869 * C1259 -
           ((C47028 + C47027) * C45772 + (C24428 + C24429) * C45771 +
            (C23393 + C23392) * C45770) *
               C152054 * C151869 * C1260 +
           (C23400 * C45770 + (C24427 + C24426) * C45771 +
            (C23043 * C1541 + C23656 + C23656 + C152149 * C1565 +
             C23045 * C1542 + C23657 + C23657 + C151796 * C1566) *
                C45772) *
               C152054 * C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
            C23049 + C23049 + C151796 * C159) *
               C45770 +
           (C46294 + C46295) * C45771 + C46312 * C45772) *
              C152054 * C151869 * C1347 -
          ((C25069 + C25068) * C45772 + (C24420 + C24421) * C45771 +
           (C23381 + C23380) * C45770) *
              C152054 * C151869 * C1348 +
          (C23398 * C45770 + (C24419 + C24418) * C45771 + C25076 * C45772) *
              C152054 * C151869 * C1349 -
          ((C25074 + C25075) * C45772 + (C25073 + C25072) * C45771 +
           C24776 * C45770) *
              C152054 * C151869 * C1350 +
          (C24802 * C45770 + (C25803 + C25802) * C45771 +
           (C23043 * C25021 + C25049 + C25049 + C152149 * C25025 +
            C23045 * C25022 + C25050 + C25050 + C151796 * C25026) *
               C45772) *
              C152054 * C151869 * C1351) *
         C151823) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
             C23049 + C23049 + C151796 * C159) *
                C45770 +
            (C46294 + C46295) * C45771 + C46312 * C45772) *
               C152054 * C152259 -
           ((C46298 + C46299) * C45772 + (C46297 + C46296) * C45771 +
            (C46295 + C46294) * C45770) *
               C152054 * C152246 +
           (C46312 * C45770 + (C46299 + C46298) * C45771 +
            (C23043 * C2455 + C26374 + C26374 + C152149 * C2471 +
             C23045 * C2456 + C26375 + C26375 + C151796 * C2472) *
                C45772) *
               C152054 * C152217) *
              C1259 +
          (((C24421 + C24420) * C45770 + (C25068 + C25069) * C45771 +
            (C27113 + C27112) * C45772) *
               C152054 * C152246 -
           (C47587 * C45772 + (C24420 + C24421) * C45771 +
            (C23381 + C23380) * C45770) *
               C152054 * C152259 -
           ((C23045 * C9427 + C26377 + C26377 + C151796 * C9433 +
             C23043 * C9426 + C26376 + C26376 + C152149 * C9432) *
                C45772 +
            (C27112 + C27113) * C45771 + C47587 * C45770) *
               C152054 * C152217) *
              C1260 +
          ((C23398 * C45770 + (C24419 + C24418) * C45771 + C25076 * C45772) *
               C152054 * C152259 -
           ((C27110 + C27111) * C45772 + (C25071 + C25070) * C45771 +
            C25028 * C45770) *
               C152054 * C152246 +
           (C25076 * C45770 + (C27111 + C27110) * C45771 +
            (C23043 * C26361 + C26378 + C26378 + C152149 * C26365 +
             C23045 * C26362 + C26379 + C26379 + C151796 * C26366) *
                C45772) *
               C152054 * C152217) *
              C152214) *
         C151823) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
             C23049 + C23049 + C151796 * C159) *
                C45770 +
            (C46294 + C46295) * C45771 + C46312 * C45772) *
               C152054 * C2215 -
           ((C46298 + C46299) * C45772 + (C46297 + C46296) * C45771 +
            (C46295 + C46294) * C45770) *
               C152054 * C2216 +
           (C46312 * C45770 + (C46299 + C46298) * C45771 +
            (C23043 * C2455 + C26374 + C26374 + C152149 * C2471 +
             C23045 * C2456 + C26375 + C26375 + C151796 * C2472) *
                C45772) *
               C152054 * C152217) *
              C151851 * C152255 +
          (((C46300 + C46301) * C45770 + (C46302 + C46303) * C45771 +
            (C46304 + C46305) * C45772) *
               C152054 * C2216 -
           (C46313 * C45772 + (C46301 + C46300) * C45771 +
            (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
             C23059 + C23059 + C152149 * C159) *
                C45770) *
               C152054 * C2215 -
           ((C23045 * C2457 + C46240 + C46240 + C151796 * C2473 +
             C23043 * C2456 + C46241 + C46241 + C152149 * C2472) *
                C45772 +
            (C46305 + C46304) * C45771 + C46313 * C45770) *
               C152054 * C152217) *
              C151851 * C152240 +
          (((C23043 * C144 + C23060 + C23060 + C152149 * C160 + C23045 * C145 +
             C23061 + C23061 + C151796 * C161) *
                C45770 +
            (C46306 + C46307) * C45771 + C46314 * C45772) *
               C152054 * C2215 -
           ((C46310 + C46311) * C45772 + (C46309 + C46308) * C45771 +
            (C46307 + C46306) * C45770) *
               C152054 * C2216 +
           (C46314 * C45770 + (C46311 + C46310) * C45771 +
            (C23043 * C2457 + C46256 + C46256 + C152149 * C2473 +
             C23045 * C2458 + C46257 + C46257 + C151796 * C2474) *
                C45772) *
               C152054 * C152217) *
              C151851 * C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
             C23049 + C23049 + C151796 * C159) *
                C45770 +
            (C46294 + C46295) * C45771 + C46312 * C45772) *
               C152054 * C2215 -
           ((C46298 + C46299) * C45772 + (C46297 + C46296) * C45771 +
            (C46295 + C46294) * C45770) *
               C152054 * C2216 +
           (C46312 * C45770 + (C46299 + C46298) * C45771 +
            (C23043 * C2455 + C26374 + C26374 + C152149 * C2471 +
             C23045 * C2456 + C26375 + C26375 + C151796 * C2472) *
                C45772) *
               C152054 * C152217) *
              C152258 +
          (((C24421 + C24420) * C45770 + (C25068 + C25069) * C45771 +
            (C27113 + C27112) * C45772) *
               C152054 * C2216 -
           (C47587 * C45772 + (C24420 + C24421) * C45771 +
            (C23381 + C23380) * C45770) *
               C152054 * C2215 -
           ((C23045 * C9427 + C26377 + C26377 + C151796 * C9433 +
             C23043 * C9426 + C26376 + C26376 + C152149 * C9432) *
                C45772 +
            (C27112 + C27113) * C45771 + C47587 * C45770) *
               C152054 * C152217) *
              C152244 +
          ((C23398 * C45770 + (C24419 + C24418) * C45771 + C25076 * C45772) *
               C152054 * C2215 -
           ((C27110 + C27111) * C45772 + (C25071 + C25070) * C45771 +
            C25028 * C45770) *
               C152054 * C2216 +
           (C25076 * C45770 + (C27111 + C27110) * C45771 +
            (C23043 * C26361 + C26378 + C26378 + C152149 * C26365 +
             C23045 * C26362 + C26379 + C26379 + C151796 * C26366) *
                C45772) *
               C152054 * C152217) *
              C152214) *
         C151823) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
            C23049 + C23049 + C151796 * C159) *
               C45770 +
           (C46294 + C46295) * C45771 + C46312 * C45772) *
              C152054 * C2446 -
          (C48830 * C45772 + (C46297 + C46296) * C45771 +
           (C46295 + C46294) * C45770) *
              C152054 * C2447 +
          (C46312 * C45770 + (C46299 + C46298) * C45771 + C48855 * C45772) *
              C152054 * C2448 -
          ((C48853 + C48854) * C45772 + (C48852 + C48851) * C45771 +
           C48830 * C45770) *
              C152054 * C2449 +
          (C48855 * C45770 + (C48854 + C48853) * C45771 +
           (C23043 * C48823 + C48841 + C48841 + C152149 * C48827 +
            C23045 * C48824 + C48842 + C48842 + C151796 * C48828) *
               C45772) *
              C152054 * C2450) *
         C151851 * C151823) /
            (p * q * std::sqrt(p + q));
    d2ee[163] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
                C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
                C140 * C145 + C170 + C170 + C124 * C161) *
                   C152080 * C152054 * C152173 -
               (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
                C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
                C134 * C550 + C587 + C587 + C121 * C574) *
                   C152080 * C152054 * C151956) *
                  C151851 * C739 +
              ((C134 * C549 + C592 + C592 + C121 * C573 + C136 * C548 + C593 +
                C593 + C122 * C572 + C138 * C547 + C594 + C594 + C123 * C571 +
                C140 * C555 + C595 + C595 + C124 * C579) *
                   C152080 * C152054 * C151956 -
               (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
                C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
                C134 * C143 + C174 + C174 + C121 * C159) *
                   C152080 * C152054 * C152173) *
                  C151851 * C740 +
              ((C134 * C144 + C175 + C175 + C121 * C160 + C136 * C145 + C176 +
                C176 + C122 * C161 + C138 * C146 + C177 + C177 + C123 * C162 +
                C140 * C147 + C178 + C178 + C124 * C163) *
                   C152080 * C152054 * C152173 -
               (C140 * C557 + C600 + C600 + C124 * C581 + C138 * C555 + C601 +
                C601 + C123 * C579 + C136 * C547 + C602 + C602 + C122 * C571 +
                C134 * C548 + C603 + C603 + C121 * C572) *
                   C152080 * C152054 * C151956) *
                  C151851 * C741 +
              ((C134 * C547 + C886 + C886 + C121 * C571 + C136 * C555 + C887 +
                C887 + C122 * C579 + C138 * C557 + C888 + C888 + C123 * C581 +
                C140 * C882 + C889 + C889 + C124 * C884) *
                   C152080 * C152054 * C151956 -
               (C140 * C148 + C179 + C179 + C124 * C164 + C138 * C147 + C180 +
                C180 + C123 * C163 + C136 * C146 + C181 + C181 + C122 * C162 +
                C134 * C145 + C182 + C182 + C121 * C161) *
                   C152080 * C152054 * C152173) *
                  C151851 * C152218) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
                 C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
                 C140 * C145 + C170 + C170 + C124 * C161) *
                    C152080 * C152054 * C152173 -
                (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
                 C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
                 C134 * C550 + C587 + C587 + C121 * C574) *
                    C152080 * C152054 * C151956) *
                   C1259 +
               ((C134 * C1083 + C1102 + C1102 + C121 * C1095 + C136 * C1084 +
                 C1103 + C1103 + C122 * C1096 + C138 * C1085 + C1104 + C1104 +
                 C123 * C1097 + C140 * C1086 + C1105 + C1105 + C124 * C1098) *
                    C152080 * C152054 * C151956 -
                (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
                 C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
                 C134 * C341 + C378 + C378 + C121 * C365) *
                    C152080 * C152054 * C152173) *
                   C1260 +
               ((C134 * C342 + C379 + C379 + C121 * C366 + C136 * C343 + C380 +
                 C380 + C122 * C367 + C138 * C344 + C381 + C381 + C123 * C368 +
                 C140 * C345 + C382 + C382 + C124 * C369) *
                    C152080 * C152054 * C152173 -
                (C140 * C1535 + C1572 + C1572 + C124 * C1559 + C138 * C1536 +
                 C1573 + C1573 + C123 * C1560 + C136 * C1537 + C1574 + C1574 +
                 C122 * C1561 + C134 * C1538 + C1575 + C1575 + C121 * C1562) *
                    C152080 * C152054 * C151956) *
                   C152214) *
                  C152158 +
              (((C134 * C549 + C592 + C592 + C121 * C573 + C136 * C548 + C593 +
                 C593 + C122 * C572 + C138 * C547 + C594 + C594 + C123 * C571 +
                 C140 * C555 + C595 + C595 + C124 * C579) *
                    C152080 * C152054 * C151956 -
                (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
                 C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
                 C134 * C143 + C174 + C174 + C121 * C159) *
                    C152080 * C152054 * C152173) *
                   C1259 +
               ((C134 * C340 + C383 + C383 + C121 * C364 + C136 * C339 + C384 +
                 C384 + C122 * C363 + C138 * C338 + C385 + C385 + C123 * C362 +
                 C140 * C346 + C386 + C386 + C124 * C370) *
                    C152080 * C152054 * C152173 -
                (C140 * C1087 + C1106 + C1106 + C124 * C1099 + C138 * C1086 +
                 C1107 + C1107 + C123 * C1098 + C136 * C1085 + C1108 + C1108 +
                 C122 * C1097 + C134 * C1084 + C1109 + C1109 + C121 * C1096) *
                    C152080 * C152054 * C151956) *
                   C1260 +
               ((C134 * C1537 + C1920 + C1920 + C121 * C1561 + C136 * C1536 +
                 C1921 + C1921 + C122 * C1560 + C138 * C1535 + C1922 + C1922 +
                 C123 * C1559 + C140 * C1916 + C1923 + C1923 + C124 * C1918) *
                    C152080 * C152054 * C151956 -
                (C140 * C347 + C387 + C387 + C124 * C371 + C138 * C345 + C388 +
                 C388 + C123 * C369 + C136 * C344 + C389 + C389 + C122 * C368 +
                 C134 * C343 + C390 + C390 + C121 * C367) *
                    C152080 * C152054 * C152173) *
                   C152214) *
                  C151834)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
            C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
            C140 * C145 + C170 + C170 + C124 * C161) *
               C152080 * C152054 * C2814 -
           (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
            C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
            C134 * C550 + C587 + C587 + C121 * C574) *
               C152080 * C152054 * C2815 +
           (C134 * C551 + C588 + C588 + C121 * C575 + C136 * C552 + C589 +
            C589 + C122 * C576 + C138 * C553 + C590 + C590 + C123 * C577 +
            C140 * C554 + C591 + C591 + C124 * C578) *
               C152080 * C152054 * C2816 -
           (C140 * C2451 + C2476 + C2476 + C124 * C2467 + C138 * C2452 + C2477 +
            C2477 + C123 * C2468 + C136 * C2453 + C2478 + C2478 + C122 * C2469 +
            C134 * C2454 + C2479 + C2479 + C121 * C2470) *
               C152080 * C152054 * C152230) *
              C151851 * C152158 +
          ((C134 * C549 + C592 + C592 + C121 * C573 + C136 * C548 + C593 +
            C593 + C122 * C572 + C138 * C547 + C594 + C594 + C123 * C571 +
            C140 * C555 + C595 + C595 + C124 * C579) *
               C152080 * C152054 * C2815 -
           (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
            C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
            C134 * C143 + C174 + C174 + C121 * C159) *
               C152080 * C152054 * C2814 -
           (C140 * C556 + C596 + C596 + C124 * C580 + C138 * C554 + C597 +
            C597 + C123 * C578 + C136 * C553 + C598 + C598 + C122 * C577 +
            C134 * C552 + C599 + C599 + C121 * C576) *
               C152080 * C152054 * C2816 +
           (C134 * C2453 + C2822 + C2822 + C121 * C2469 + C136 * C2452 + C2823 +
            C2823 + C122 * C2468 + C138 * C2451 + C2824 + C2824 + C123 * C2467 +
            C140 * C2818 + C2825 + C2825 + C124 * C2820) *
               C152080 * C152054 * C152230) *
              C151851 * C151834)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
             C23049 + C23049 + C151796 * C159) *
                C152080 * C23040 +
            (C23380 + C23381) * C152080 * C23041 + C23401 * C23042) *
               C152173 -
           ((C23045 * C1537 + C23622 + C23622 + C151796 * C1561 +
             C23043 * C1538 + C23623 + C23623 + C152149 * C1562) *
                C152080 * C23042 +
            (C23045 * C1084 + C23624 + C23624 + C151796 * C1096 +
             C23043 * C1083 + C23625 + C23625 + C152149 * C1095) *
                C152080 * C23041 +
            (C23045 * C549 + C23626 + C23626 + C151796 * C573 + C23043 * C550 +
             C23627 + C23627 + C152149 * C574) *
                C152080 * C23040) *
               C151956) *
              C151851 * C739 +
          (((C23043 * C549 + C23634 + C23634 + C152149 * C573 + C23045 * C548 +
             C23635 + C23635 + C151796 * C572) *
                C152080 * C23040 +
            (C23043 * C1084 + C23636 + C23636 + C152149 * C1096 +
             C23045 * C1085 + C23637 + C23637 + C151796 * C1097) *
                C152080 * C23041 +
            (C23043 * C1537 + C23638 + C23638 + C152149 * C1561 +
             C23045 * C1536 + C23639 + C23639 + C151796 * C1560) *
                C152080 * C23042) *
               C151956 -
           (C23402 * C23042 + (C23387 + C23386) * C152080 * C23041 +
            (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
             C23059 + C23059 + C152149 * C159) *
                C152080 * C23040) *
               C152173) *
              C151851 * C740 +
          (((C23043 * C144 + C23060 + C23060 + C152149 * C160 + C23045 * C145 +
             C23061 + C23061 + C151796 * C161) *
                C152080 * C23040 +
            (C23392 + C23393) * C152080 * C23041 + C23403 * C23042) *
               C152173 -
           ((C23045 * C1535 + C23646 + C23646 + C151796 * C1559 +
             C23043 * C1536 + C23647 + C23647 + C152149 * C1560) *
                C152080 * C23042 +
            (C23045 * C1086 + C23648 + C23648 + C151796 * C1098 +
             C23043 * C1085 + C23649 + C23649 + C152149 * C1097) *
                C152080 * C23041 +
            (C23045 * C547 + C23650 + C23650 + C151796 * C571 + C23043 * C548 +
             C23651 + C23651 + C152149 * C572) *
                C152080 * C23040) *
               C151956) *
              C151851 * C741 +
          (((C23043 * C547 + C24068 + C24068 + C152149 * C571 + C23045 * C555 +
             C24069 + C24069 + C151796 * C579) *
                C152080 * C23040 +
            (C23043 * C1086 + C24070 + C24070 + C152149 * C1098 +
             C23045 * C1087 + C24071 + C24071 + C151796 * C1099) *
                C152080 * C23041 +
            (C23043 * C1535 + C24072 + C24072 + C152149 * C1559 +
             C23045 * C1916 + C24073 + C24073 + C151796 * C1918) *
                C152080 * C23042) *
               C151956 -
           ((C23873 + C23872) * C152080 * C23042 +
            (C23871 + C23870) * C152080 * C23041 +
            (C23045 * C146 + C23070 + C23070 + C151796 * C162 + C23043 * C145 +
             C23071 + C23071 + C152149 * C161) *
                C152080 * C23040) *
               C152173) *
              C151851 * C152218)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
              C23049 + C23049 + C151796 * C159) *
                 C152080 * C23040 +
             (C23380 + C23381) * C152080 * C23041 + C23401 * C23042) *
                C152173 -
            (C25051 * C23042 + (C24420 + C24421) * C152080 * C23041 +
             (C23045 * C549 + C23626 + C23626 + C151796 * C573 + C23043 * C550 +
              C23627 + C23627 + C152149 * C574) *
                 C152080 * C23040) *
                C151956) *
               C1259 +
           (((C24421 + C24420) * C152080 * C23040 +
             (C24419 + C24418) * C152080 * C23041 +
             (C25072 + C25073) * C152080 * C23042) *
                C151956 -
            (C24789 * C23042 + (C23383 + C23382) * C152080 * C23041 +
             (C23381 + C23380) * C152080 * C23040) *
                C152173) *
               C1260 +
           ((C23401 * C23040 + (C23385 + C23384) * C152080 * C23041 +
             C24803 * C23042) *
                C152173 -
            ((C23045 * C8842 + C25047 + C25047 + C151796 * C8848 +
              C23043 * C8841 + C25048 + C25048 + C152149 * C8847) *
                 C152080 * C23042 +
             (C25073 + C25072) * C152080 * C23041 + C25051 * C23040) *
                C151956) *
               C152214) *
              C152158 +
          ((((C23043 * C549 + C23634 + C23634 + C152149 * C573 + C23045 * C548 +
              C23635 + C23635 + C151796 * C572) *
                 C152080 * C23040 +
             (C24422 + C24423) * C152080 * C23041 + C25583 * C23042) *
                C151956 -
            (C23402 * C23042 + (C23387 + C23386) * C152080 * C23041 +
             (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
              C23059 + C23059 + C152149 * C159) *
                 C152080 * C23040) *
                C152173) *
               C1259 +
           (((C23386 + C23387) * C152080 * C23040 +
             (C23388 + C23389) * C152080 * C23041 + C25279 * C23042) *
                C152173 -
            ((C25588 + C25589) * C152080 * C23042 +
             (C24425 + C24424) * C152080 * C23041 +
             (C24423 + C24422) * C152080 * C23040) *
                C151956) *
               C1260 +
           ((C25583 * C23040 + (C25589 + C25588) * C152080 * C23041 +
             (C23043 * C8842 + C25581 + C25581 + C152149 * C8848 +
              C23045 * C8843 + C25582 + C25582 + C151796 * C8849) *
                 C152080 * C23042) *
                C151956 -
            ((C25284 + C25285) * C152080 * C23042 +
             (C23391 + C23390) * C152080 * C23041 + C23402 * C23040) *
                C152173) *
               C152214) *
              C151834)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
             C23049 + C23049 + C151796 * C159) *
                C152080 * C23040 +
            (C23380 + C23381) * C152080 * C23041 + C23401 * C23042) *
               C2814 -
           (C25051 * C23042 + (C24420 + C24421) * C152080 * C23041 +
            (C23045 * C549 + C23626 + C23626 + C151796 * C573 + C23043 * C550 +
             C23627 + C23627 + C152149 * C574) *
                C152080 * C23040) *
               C2815 +
           ((C23043 * C551 + C23628 + C23628 + C152149 * C575 + C23045 * C552 +
             C23629 + C23629 + C151796 * C576) *
                C152080 * C23040 +
            (C25068 + C25069) * C152080 * C23041 + C25077 * C23042) *
               C2816 -
           ((C23045 * C10150 + C26368 + C26368 + C151796 * C10156 +
             C23043 * C10149 + C26369 + C26369 + C152149 * C10155) *
                C152080 * C23042 +
            (C23045 * C2956 + C26370 + C26370 + C151796 * C2964 +
             C23043 * C2955 + C26371 + C26371 + C152149 * C2963) *
                C152080 * C23041 +
            (C23045 * C2453 + C26372 + C26372 + C151796 * C2469 +
             C23043 * C2454 + C26373 + C26373 + C152149 * C2470) *
                C152080 * C23040) *
               C152230) *
              C151851 * C152158 +
          (((C23043 * C549 + C23634 + C23634 + C152149 * C573 + C23045 * C548 +
             C23635 + C23635 + C151796 * C572) *
                C152080 * C23040 +
            (C24422 + C24423) * C152080 * C23041 + C25583 * C23042) *
               C2815 -
           (C23402 * C23042 + (C23387 + C23386) * C152080 * C23041 +
            (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
             C23059 + C23059 + C152149 * C159) *
                C152080 * C23040) *
               C2814 -
           ((C26688 + C26689) * C152080 * C23042 +
            (C26690 + C26691) * C152080 * C23041 +
            (C23045 * C553 + C23644 + C23644 + C151796 * C577 + C23043 * C552 +
             C23645 + C23645 + C152149 * C576) *
                C152080 * C23040) *
               C2816 +
           ((C23043 * C2453 + C26886 + C26886 + C152149 * C2469 +
             C23045 * C2452 + C26887 + C26887 + C151796 * C2468) *
                C152080 * C23040 +
            (C23043 * C2956 + C26888 + C26888 + C152149 * C2964 +
             C23045 * C2957 + C26889 + C26889 + C151796 * C2965) *
                C152080 * C23041 +
            (C23043 * C10150 + C26890 + C26890 + C152149 * C10156 +
             C23045 * C10151 + C26891 + C26891 + C151796 * C10157) *
                C152080 * C23042) *
               C152230) *
              C151851 * C151834)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
             C23049 + C23049 + C151796 * C159) *
                C45770 +
            (C46294 + C46295) * C45771 + C46312 * C45772) *
               C152054 * C152173 -
           ((C46298 + C46299) * C45772 + (C46297 + C46296) * C45771 +
            (C46295 + C46294) * C45770) *
               C152054 * C151956) *
              C151851 * C739 +
          (((C46300 + C46301) * C45770 + (C46302 + C46303) * C45771 +
            (C46304 + C46305) * C45772) *
               C152054 * C151956 -
           (C46313 * C45772 + (C46301 + C46300) * C45771 +
            (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
             C23059 + C23059 + C152149 * C159) *
                C45770) *
               C152054 * C152173) *
              C151851 * C740 +
          (((C23043 * C144 + C23060 + C23060 + C152149 * C160 + C23045 * C145 +
             C23061 + C23061 + C151796 * C161) *
                C45770 +
            (C46306 + C46307) * C45771 + C46314 * C45772) *
               C152054 * C152173 -
           ((C46310 + C46311) * C45772 + (C46309 + C46308) * C45771 +
            (C46307 + C46306) * C45770) *
               C152054 * C151956) *
              C151851 * C741 +
          (((C46723 + C46724) * C45770 + (C46725 + C46726) * C45771 +
            (C23043 * C2451 + C46713 + C46713 + C152149 * C2467 +
             C23045 * C2818 + C46714 + C46714 + C151796 * C2820) *
                C45772) *
               C152054 * C151956 -
           ((C46726 + C46725) * C45772 + (C46724 + C46723) * C45771 +
            (C23045 * C146 + C23070 + C23070 + C151796 * C162 + C23043 * C145 +
             C23071 + C23071 + C152149 * C161) *
                C45770) *
               C152054 * C152173) *
              C151851 * C152218)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
              C23049 + C23049 + C151796 * C159) *
                 C45770 +
             (C46294 + C46295) * C45771 + C46312 * C45772) *
                C152054 * C152173 -
            ((C46298 + C46299) * C45772 + (C46297 + C46296) * C45771 +
             (C46295 + C46294) * C45770) *
                C152054 * C151956) *
               C1259 +
           (((C24421 + C24420) * C45770 + (C25068 + C25069) * C45771 +
             (C27113 + C27112) * C45772) *
                C152054 * C151956 -
            (C47587 * C45772 + (C24420 + C24421) * C45771 +
             (C23381 + C23380) * C45770) *
                C152054 * C152173) *
               C1260 +
           ((C23398 * C45770 + (C24419 + C24418) * C45771 + C25076 * C45772) *
                C152054 * C152173 -
            ((C27110 + C27111) * C45772 + (C25071 + C25070) * C45771 +
             C25028 * C45770) *
                C152054 * C151956) *
               C152214) *
              C152158 +
          ((((C46300 + C46301) * C45770 + (C46302 + C46303) * C45771 +
             (C46304 + C46305) * C45772) *
                C152054 * C151956 -
            (C46313 * C45772 + (C46301 + C46300) * C45771 +
             (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
              C23059 + C23059 + C152149 * C159) *
                 C45770) *
                C152054 * C152173) *
               C1259 +
           (((C23386 + C23387) * C45770 + (C24422 + C24423) * C45771 +
             (C26691 + C26690) * C45772) *
                C152054 * C152173 -
            ((C23045 * C2957 + C26889 + C26889 + C151796 * C2965 +
              C23043 * C2956 + C26888 + C26888 + C152149 * C2964) *
                 C45772 +
             (C26690 + C26691) * C45771 + (C24423 + C24422) * C45770) *
                C152054 * C151956) *
               C1260 +
           ((C25576 * C45770 + (C26689 + C26688) * C45771 +
             (C23043 * C10150 + C26890 + C26890 + C152149 * C10156 +
              C23045 * C10151 + C26891 + C26891 + C151796 * C10157) *
                 C45772) *
                C152054 * C151956 -
            ((C26688 + C26689) * C45772 + (C24425 + C24424) * C45771 +
             C23399 * C45770) *
                C152054 * C152173) *
               C152214) *
              C151834)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
             C23049 + C23049 + C151796 * C159) *
                C45770 +
            (C46294 + C46295) * C45771 + C46312 * C45772) *
               C152054 * C2814 -
           (C48830 * C45772 + (C46297 + C46296) * C45771 +
            (C46295 + C46294) * C45770) *
               C152054 * C2815 +
           (C46312 * C45770 + (C46299 + C46298) * C45771 + C48855 * C45772) *
               C152054 * C2816 -
           ((C48853 + C48854) * C45772 + (C48852 + C48851) * C45771 +
            C48830 * C45770) *
               C152054 * C152230) *
              C151851 * C152158 +
          (((C46300 + C46301) * C45770 + (C46302 + C46303) * C45771 +
            C49353 * C45772) *
               C152054 * C2815 -
           (C46313 * C45772 + (C46301 + C46300) * C45771 +
            (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
             C23059 + C23059 + C152149 * C159) *
                C45770) *
               C152054 * C2814 -
           ((C49364 + C49365) * C45772 + (C46305 + C46304) * C45771 +
            C46313 * C45770) *
               C152054 * C2816 +
           (C49353 * C45770 + (C49365 + C49364) * C45771 +
            (C23043 * C17751 + C49358 + C49358 + C152149 * C17757 +
             C23045 * C17752 + C49359 + C49359 + C151796 * C17758) *
                C45772) *
               C152054 * C152230) *
              C151851 * C151834)) /
            (p * q * std::sqrt(p + q));
    d2ee[164] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 + C168 +
           C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 + C140 * C145 +
           C170 + C170 + C124 * C161) *
              C152080 * C152054 * C151869 * C151851 * C129 -
          (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 + C172 +
           C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 + C134 * C143 +
           C174 + C174 + C121 * C159) *
              C152080 * C152054 * C151869 * C151851 * C130 +
          (C134 * C144 + C175 + C175 + C121 * C160 + C136 * C145 + C176 + C176 +
           C122 * C161 + C138 * C146 + C177 + C177 + C123 * C162 + C140 * C147 +
           C178 + C178 + C124 * C163) *
              C152080 * C152054 * C151869 * C151851 * C131 -
          (C140 * C148 + C179 + C179 + C124 * C164 + C138 * C147 + C180 + C180 +
           C123 * C163 + C136 * C146 + C181 + C181 + C122 * C162 + C134 * C145 +
           C182 + C182 + C121 * C161) *
              C152080 * C152054 * C151869 * C151851 * C132 +
          (C134 * C146 + C183 + C183 + C121 * C162 + C136 * C147 + C184 + C184 +
           C122 * C163 + C138 * C148 + C185 + C185 + C123 * C164 + C140 * C149 +
           C186 + C186 + C124 * C165) *
              C152080 * C152054 * C151869 * C151851 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
            C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
            C140 * C145 + C170 + C170 + C124 * C161) *
               C152080 * C152054 * C151869 * C152258 -
           (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
            C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
            C134 * C341 + C378 + C378 + C121 * C365) *
               C152080 * C152054 * C151869 * C152244 +
           (C134 * C342 + C379 + C379 + C121 * C366 + C136 * C343 + C380 +
            C380 + C122 * C367 + C138 * C344 + C381 + C381 + C123 * C368 +
            C140 * C345 + C382 + C382 + C124 * C369) *
               C152080 * C152054 * C151869 * C152214) *
              C335 +
          ((C134 * C340 + C383 + C383 + C121 * C364 + C136 * C339 + C384 +
            C384 + C122 * C363 + C138 * C338 + C385 + C385 + C123 * C362 +
            C140 * C346 + C386 + C386 + C124 * C370) *
               C152080 * C152054 * C151869 * C152244 -
           (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
            C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
            C134 * C143 + C174 + C174 + C121 * C159) *
               C152080 * C152054 * C151869 * C152258 -
           (C140 * C347 + C387 + C387 + C124 * C371 + C138 * C345 + C388 +
            C388 + C123 * C369 + C136 * C344 + C389 + C389 + C122 * C368 +
            C134 * C343 + C390 + C390 + C121 * C367) *
               C152080 * C152054 * C151869 * C152214) *
              C336 +
          ((C134 * C144 + C175 + C175 + C121 * C160 + C136 * C145 + C176 +
            C176 + C122 * C161 + C138 * C146 + C177 + C177 + C123 * C162 +
            C140 * C147 + C178 + C178 + C124 * C163) *
               C152080 * C152054 * C151869 * C152258 -
           (C140 * C348 + C391 + C391 + C124 * C372 + C138 * C346 + C392 +
            C392 + C123 * C370 + C136 * C338 + C393 + C393 + C122 * C362 +
            C134 * C339 + C394 + C394 + C121 * C363) *
               C152080 * C152054 * C151869 * C152244 +
           (C134 * C344 + C395 + C395 + C121 * C368 + C136 * C345 + C396 +
            C396 + C122 * C369 + C138 * C347 + C397 + C397 + C123 * C371 +
            C140 * C349 + C398 + C398 + C124 * C373) *
               C152080 * C152054 * C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
            C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
            C140 * C145 + C170 + C170 + C124 * C161) *
               C152080 * C152054 * C151869 * C1259 -
           (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
            C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
            C134 * C341 + C378 + C378 + C121 * C365) *
               C152080 * C152054 * C151869 * C1260 +
           (C134 * C342 + C379 + C379 + C121 * C366 + C136 * C343 + C380 +
            C380 + C122 * C367 + C138 * C344 + C381 + C381 + C123 * C368 +
            C140 * C345 + C382 + C382 + C124 * C369) *
               C152080 * C152054 * C151869 * C152214) *
              C152255 +
          ((C134 * C340 + C383 + C383 + C121 * C364 + C136 * C339 + C384 +
            C384 + C122 * C363 + C138 * C338 + C385 + C385 + C123 * C362 +
            C140 * C346 + C386 + C386 + C124 * C370) *
               C152080 * C152054 * C151869 * C1260 -
           (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
            C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
            C134 * C143 + C174 + C174 + C121 * C159) *
               C152080 * C152054 * C151869 * C1259 -
           (C140 * C347 + C387 + C387 + C124 * C371 + C138 * C345 + C388 +
            C388 + C123 * C369 + C136 * C344 + C389 + C389 + C122 * C368 +
            C134 * C343 + C390 + C390 + C121 * C367) *
               C152080 * C152054 * C151869 * C152214) *
              C152240 +
          ((C134 * C144 + C175 + C175 + C121 * C160 + C136 * C145 + C176 +
            C176 + C122 * C161 + C138 * C146 + C177 + C177 + C123 * C162 +
            C140 * C147 + C178 + C178 + C124 * C163) *
               C152080 * C152054 * C151869 * C1259 -
           (C140 * C348 + C391 + C391 + C124 * C372 + C138 * C346 + C392 +
            C392 + C123 * C370 + C136 * C338 + C393 + C393 + C122 * C362 +
            C134 * C339 + C394 + C394 + C121 * C363) *
               C152080 * C152054 * C151869 * C1260 +
           (C134 * C344 + C395 + C395 + C121 * C368 + C136 * C345 + C396 +
            C396 + C122 * C369 + C138 * C347 + C397 + C397 + C123 * C371 +
            C140 * C349 + C398 + C398 + C124 * C373) *
               C152080 * C152054 * C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 + C168 +
           C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 + C140 * C145 +
           C170 + C170 + C124 * C161) *
              C152080 * C152054 * C151869 * C1347 -
          (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 + C376 +
           C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 + C134 * C341 +
           C378 + C378 + C121 * C365) *
              C152080 * C152054 * C151869 * C1348 +
          (C134 * C342 + C379 + C379 + C121 * C366 + C136 * C343 + C380 + C380 +
           C122 * C367 + C138 * C344 + C381 + C381 + C123 * C368 + C140 * C345 +
           C382 + C382 + C124 * C369) *
              C152080 * C152054 * C151869 * C1349 -
          (C140 * C1353 + C1378 + C1378 + C124 * C1369 + C138 * C1354 + C1379 +
           C1379 + C123 * C1370 + C136 * C1355 + C1380 + C1380 + C122 * C1371 +
           C134 * C1356 + C1381 + C1381 + C121 * C1372) *
              C152080 * C152054 * C151869 * C1350 +
          (C134 * C1357 + C1382 + C1382 + C121 * C1373 + C136 * C1358 + C1383 +
           C1383 + C122 * C1374 + C138 * C1359 + C1384 + C1384 + C123 * C1375 +
           C140 * C1360 + C1385 + C1385 + C124 * C1376) *
              C152080 * C152054 * C151869 * C1351) *
         C151823) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
            C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
            C140 * C145 + C170 + C170 + C124 * C161) *
               C152080 * C152054 * C2215 -
           (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
            C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
            C134 * C550 + C587 + C587 + C121 * C574) *
               C152080 * C152054 * C2216 +
           (C134 * C551 + C588 + C588 + C121 * C575 + C136 * C552 + C589 +
            C589 + C122 * C576 + C138 * C553 + C590 + C590 + C123 * C577 +
            C140 * C554 + C591 + C591 + C124 * C578) *
               C152080 * C152054 * C152217) *
              C151851 * C152255 +
          ((C134 * C549 + C592 + C592 + C121 * C573 + C136 * C548 + C593 +
            C593 + C122 * C572 + C138 * C547 + C594 + C594 + C123 * C571 +
            C140 * C555 + C595 + C595 + C124 * C579) *
               C152080 * C152054 * C2216 -
           (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
            C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
            C134 * C143 + C174 + C174 + C121 * C159) *
               C152080 * C152054 * C2215 -
           (C140 * C556 + C596 + C596 + C124 * C580 + C138 * C554 + C597 +
            C597 + C123 * C578 + C136 * C553 + C598 + C598 + C122 * C577 +
            C134 * C552 + C599 + C599 + C121 * C576) *
               C152080 * C152054 * C152217) *
              C151851 * C152240 +
          ((C134 * C144 + C175 + C175 + C121 * C160 + C136 * C145 + C176 +
            C176 + C122 * C161 + C138 * C146 + C177 + C177 + C123 * C162 +
            C140 * C147 + C178 + C178 + C124 * C163) *
               C152080 * C152054 * C2215 -
           (C140 * C557 + C600 + C600 + C124 * C581 + C138 * C555 + C601 +
            C601 + C123 * C579 + C136 * C547 + C602 + C602 + C122 * C571 +
            C134 * C548 + C603 + C603 + C121 * C572) *
               C152080 * C152054 * C2216 +
           (C134 * C553 + C604 + C604 + C121 * C577 + C136 * C554 + C605 +
            C605 + C122 * C578 + C138 * C556 + C606 + C606 + C123 * C580 +
            C140 * C558 + C607 + C607 + C124 * C582) *
               C152080 * C152054 * C152217) *
              C151851 * C152208)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
            C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
            C140 * C145 + C170 + C170 + C124 * C161) *
               C152080 * C152054 * C2215 -
           (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
            C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
            C134 * C550 + C587 + C587 + C121 * C574) *
               C152080 * C152054 * C2216 +
           (C134 * C551 + C588 + C588 + C121 * C575 + C136 * C552 + C589 +
            C589 + C122 * C576 + C138 * C553 + C590 + C590 + C123 * C577 +
            C140 * C554 + C591 + C591 + C124 * C578) *
               C152080 * C152054 * C152217) *
              C152258 +
          ((C134 * C1083 + C1102 + C1102 + C121 * C1095 + C136 * C1084 + C1103 +
            C1103 + C122 * C1096 + C138 * C1085 + C1104 + C1104 + C123 * C1097 +
            C140 * C1086 + C1105 + C1105 + C124 * C1098) *
               C152080 * C152054 * C2216 -
           (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
            C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
            C134 * C341 + C378 + C378 + C121 * C365) *
               C152080 * C152054 * C2215 -
           (C140 * C1531 + C1568 + C1568 + C124 * C1555 + C138 * C1532 + C1569 +
            C1569 + C123 * C1556 + C136 * C1533 + C1570 + C1570 + C122 * C1557 +
            C134 * C1534 + C1571 + C1571 + C121 * C1558) *
               C152080 * C152054 * C152217) *
              C152244 +
          ((C134 * C342 + C379 + C379 + C121 * C366 + C136 * C343 + C380 +
            C380 + C122 * C367 + C138 * C344 + C381 + C381 + C123 * C368 +
            C140 * C345 + C382 + C382 + C124 * C369) *
               C152080 * C152054 * C2215 -
           (C140 * C1535 + C1572 + C1572 + C124 * C1559 + C138 * C1536 + C1573 +
            C1573 + C123 * C1560 + C136 * C1537 + C1574 + C1574 + C122 * C1561 +
            C134 * C1538 + C1575 + C1575 + C121 * C1562) *
               C152080 * C152054 * C2216 +
           (C134 * C1539 + C1576 + C1576 + C121 * C1563 + C136 * C1540 + C1577 +
            C1577 + C122 * C1564 + C138 * C1541 + C1578 + C1578 + C123 * C1565 +
            C140 * C1542 + C1579 + C1579 + C124 * C1566) *
               C152080 * C152054 * C152217) *
              C152214) *
         C151823) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
            C23049 + C23049 + C151796 * C159) *
               C152080 * C23040 +
           (C23043 * C341 + C23050 + C23050 + C152149 * C365 + C23045 * C340 +
            C23051 + C23051 + C151796 * C364) *
               C152080 * C23041 +
           (C23043 * C342 + C23052 + C23052 + C152149 * C366 + C23045 * C343 +
            C23053 + C23053 + C151796 * C367) *
               C152080 * C23042) *
              C151869 * C151851 * C129 -
          ((C23045 * C344 + C23054 + C23054 + C151796 * C368 + C23043 * C343 +
            C23055 + C23055 + C152149 * C367) *
               C152080 * C23042 +
           (C23045 * C339 + C23056 + C23056 + C151796 * C363 + C23043 * C340 +
            C23057 + C23057 + C152149 * C364) *
               C152080 * C23041 +
           (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
            C23059 + C23059 + C152149 * C159) *
               C152080 * C23040) *
              C151869 * C151851 * C130 +
          ((C23043 * C144 + C23060 + C23060 + C152149 * C160 + C23045 * C145 +
            C23061 + C23061 + C151796 * C161) *
               C152080 * C23040 +
           (C23043 * C339 + C23062 + C23062 + C152149 * C363 + C23045 * C338 +
            C23063 + C23063 + C151796 * C362) *
               C152080 * C23041 +
           (C23043 * C344 + C23064 + C23064 + C152149 * C368 + C23045 * C345 +
            C23065 + C23065 + C151796 * C369) *
               C152080 * C23042) *
              C151869 * C151851 * C131 -
          ((C23045 * C347 + C23066 + C23066 + C151796 * C371 + C23043 * C345 +
            C23067 + C23067 + C152149 * C369) *
               C152080 * C23042 +
           (C23045 * C346 + C23068 + C23068 + C151796 * C370 + C23043 * C338 +
            C23069 + C23069 + C152149 * C362) *
               C152080 * C23041 +
           (C23045 * C146 + C23070 + C23070 + C151796 * C162 + C23043 * C145 +
            C23071 + C23071 + C152149 * C161) *
               C152080 * C23040) *
              C151869 * C151851 * C132 +
          ((C23043 * C146 + C23072 + C23072 + C152149 * C162 + C23045 * C147 +
            C23073 + C23073 + C151796 * C163) *
               C152080 * C23040 +
           (C23043 * C346 + C23074 + C23074 + C152149 * C370 + C23045 * C348 +
            C23075 + C23075 + C151796 * C372) *
               C152080 * C23041 +
           (C23043 * C347 + C23076 + C23076 + C152149 * C371 + C23045 * C349 +
            C23077 + C23077 + C151796 * C373) *
               C152080 * C23042) *
              C151869 * C151851 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
             C23049 + C23049 + C151796 * C159) *
                C152080 * C23040 +
            (C23380 + C23381) * C152080 * C23041 + C23401 * C23042) *
               C151869 * C152258 -
           ((C23384 + C23385) * C152080 * C23042 +
            (C23383 + C23382) * C152080 * C23041 +
            (C23381 + C23380) * C152080 * C23040) *
               C151869 * C152244 +
           (C23401 * C23040 + (C23385 + C23384) * C152080 * C23041 +
            (C23043 * C1357 + C23310 + C23310 + C152149 * C1373 +
             C23045 * C1358 + C23311 + C23311 + C151796 * C1374) *
                C152080 * C23042) *
               C151869 * C152214) *
              C335 +
          (((C23386 + C23387) * C152080 * C23040 +
            (C23388 + C23389) * C152080 * C23041 +
            (C23390 + C23391) * C152080 * C23042) *
               C151869 * C152244 -
           (C23402 * C23042 + (C23387 + C23386) * C152080 * C23041 +
            (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
             C23059 + C23059 + C152149 * C159) *
                C152080 * C23040) *
               C151869 * C152258 -
           ((C23045 * C1359 + C23326 + C23326 + C151796 * C1375 +
             C23043 * C1358 + C23327 + C23327 + C152149 * C1374) *
                C152080 * C23042 +
            (C23391 + C23390) * C152080 * C23041 + C23402 * C23040) *
               C151869 * C152214) *
              C336 +
          (((C23043 * C144 + C23060 + C23060 + C152149 * C160 + C23045 * C145 +
             C23061 + C23061 + C151796 * C161) *
                C152080 * C23040 +
            (C23392 + C23393) * C152080 * C23041 + C23403 * C23042) *
               C151869 * C152258 -
           ((C23396 + C23397) * C152080 * C23042 +
            (C23395 + C23394) * C152080 * C23041 +
            (C23393 + C23392) * C152080 * C23040) *
               C151869 * C152244 +
           (C23403 * C23040 + (C23397 + C23396) * C152080 * C23041 +
            (C23043 * C1359 + C23342 + C23342 + C152149 * C1375 +
             C23045 * C1360 + C23343 + C23343 + C151796 * C1376) *
                C152080 * C23042) *
               C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
             C23049 + C23049 + C151796 * C159) *
                C152080 * C23040 +
            (C23380 + C23381) * C152080 * C23041 + C23401 * C23042) *
               C151869 * C1259 -
           ((C23384 + C23385) * C152080 * C23042 +
            (C23383 + C23382) * C152080 * C23041 +
            (C23381 + C23380) * C152080 * C23040) *
               C151869 * C1260 +
           (C23401 * C23040 + (C23385 + C23384) * C152080 * C23041 +
            (C23043 * C1357 + C23310 + C23310 + C152149 * C1373 +
             C23045 * C1358 + C23311 + C23311 + C151796 * C1374) *
                C152080 * C23042) *
               C151869 * C152214) *
              C152255 +
          (((C23386 + C23387) * C152080 * C23040 +
            (C23388 + C23389) * C152080 * C23041 +
            (C23390 + C23391) * C152080 * C23042) *
               C151869 * C1260 -
           (C23402 * C23042 + (C23387 + C23386) * C152080 * C23041 +
            (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
             C23059 + C23059 + C152149 * C159) *
                C152080 * C23040) *
               C151869 * C1259 -
           ((C23045 * C1359 + C23326 + C23326 + C151796 * C1375 +
             C23043 * C1358 + C23327 + C23327 + C152149 * C1374) *
                C152080 * C23042 +
            (C23391 + C23390) * C152080 * C23041 + C23402 * C23040) *
               C151869 * C152214) *
              C152240 +
          (((C23043 * C144 + C23060 + C23060 + C152149 * C160 + C23045 * C145 +
             C23061 + C23061 + C151796 * C161) *
                C152080 * C23040 +
            (C23392 + C23393) * C152080 * C23041 + C23403 * C23042) *
               C151869 * C1259 -
           ((C23396 + C23397) * C152080 * C23042 +
            (C23395 + C23394) * C152080 * C23041 +
            (C23393 + C23392) * C152080 * C23040) *
               C151869 * C1260 +
           (C23403 * C23040 + (C23397 + C23396) * C152080 * C23041 +
            (C23043 * C1359 + C23342 + C23342 + C152149 * C1375 +
             C23045 * C1360 + C23343 + C23343 + C151796 * C1376) *
                C152080 * C23042) *
               C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
            C23049 + C23049 + C151796 * C159) *
               C152080 * C23040 +
           (C23380 + C23381) * C152080 * C23041 + C23401 * C23042) *
              C151869 * C1347 -
          (C24789 * C23042 + (C23383 + C23382) * C152080 * C23041 +
           (C23381 + C23380) * C152080 * C23040) *
              C151869 * C1348 +
          (C23401 * C23040 + (C23385 + C23384) * C152080 * C23041 +
           C24803 * C23042) *
              C151869 * C1349 -
          ((C24800 + C24801) * C152080 * C23042 +
           (C24799 + C24798) * C152080 * C23041 + C24789 * C23040) *
              C151869 * C1350 +
          (C24803 * C23040 + (C24801 + C24800) * C152080 * C23041 +
           (C23043 * C24769 + C24787 + C24787 + C152149 * C24773 +
            C23045 * C24770 + C24788 + C24788 + C151796 * C24774) *
               C152080 * C23042) *
              C151869 * C1351) *
         C151823) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
             C23049 + C23049 + C151796 * C159) *
                C152080 * C23040 +
            (C23380 + C23381) * C152080 * C23041 + C23401 * C23042) *
               C2215 -
           (C25051 * C23042 + (C24420 + C24421) * C152080 * C23041 +
            (C23045 * C549 + C23626 + C23626 + C151796 * C573 + C23043 * C550 +
             C23627 + C23627 + C152149 * C574) *
                C152080 * C23040) *
               C2216 +
           ((C23043 * C551 + C23628 + C23628 + C152149 * C575 + C23045 * C552 +
             C23629 + C23629 + C151796 * C576) *
                C152080 * C23040 +
            (C25068 + C25069) * C152080 * C23041 + C25077 * C23042) *
               C152217) *
              C151851 * C152255 +
          (((C23043 * C549 + C23634 + C23634 + C152149 * C573 + C23045 * C548 +
             C23635 + C23635 + C151796 * C572) *
                C152080 * C23040 +
            (C24422 + C24423) * C152080 * C23041 + C25583 * C23042) *
               C2216 -
           (C23402 * C23042 + (C23387 + C23386) * C152080 * C23041 +
            (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
             C23059 + C23059 + C152149 * C159) *
                C152080 * C23040) *
               C2215 -
           ((C23045 * C1541 + C23640 + C23640 + C151796 * C1565 +
             C23043 * C1540 + C23641 + C23641 + C152149 * C1564) *
                C152080 * C23042 +
            (C23045 * C1532 + C23642 + C23642 + C151796 * C1556 +
             C23043 * C1533 + C23643 + C23643 + C152149 * C1557) *
                C152080 * C23041 +
            (C23045 * C553 + C23644 + C23644 + C151796 * C577 + C23043 * C552 +
             C23645 + C23645 + C152149 * C576) *
                C152080 * C23040) *
               C152217) *
              C151851 * C152240 +
          (((C23043 * C144 + C23060 + C23060 + C152149 * C160 + C23045 * C145 +
             C23061 + C23061 + C151796 * C161) *
                C152080 * C23040 +
            (C23392 + C23393) * C152080 * C23041 + C23403 * C23042) *
               C2215 -
           ((C24426 + C24427) * C152080 * C23042 +
            (C24428 + C24429) * C152080 * C23041 +
            (C23045 * C547 + C23650 + C23650 + C151796 * C571 + C23043 * C548 +
             C23651 + C23651 + C152149 * C572) *
                C152080 * C23040) *
               C2216 +
           ((C23043 * C553 + C23652 + C23652 + C152149 * C577 + C23045 * C554 +
             C23653 + C23653 + C151796 * C578) *
                C152080 * C23040 +
            (C23043 * C1532 + C23654 + C23654 + C152149 * C1556 +
             C23045 * C1531 + C23655 + C23655 + C151796 * C1555) *
                C152080 * C23041 +
            (C23043 * C1541 + C23656 + C23656 + C152149 * C1565 +
             C23045 * C1542 + C23657 + C23657 + C151796 * C1566) *
                C152080 * C23042) *
               C152217) *
              C151851 * C152208)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
             C23049 + C23049 + C151796 * C159) *
                C152080 * C23040 +
            (C23380 + C23381) * C152080 * C23041 + C23401 * C23042) *
               C2215 -
           (C25051 * C23042 + (C24420 + C24421) * C152080 * C23041 +
            (C23045 * C549 + C23626 + C23626 + C151796 * C573 + C23043 * C550 +
             C23627 + C23627 + C152149 * C574) *
                C152080 * C23040) *
               C2216 +
           ((C23043 * C551 + C23628 + C23628 + C152149 * C575 + C23045 * C552 +
             C23629 + C23629 + C151796 * C576) *
                C152080 * C23040 +
            (C25068 + C25069) * C152080 * C23041 + C25077 * C23042) *
               C152217) *
              C152258 +
          (((C24421 + C24420) * C152080 * C23040 +
            (C24419 + C24418) * C152080 * C23041 + C25797 * C23042) *
               C2216 -
           (C24789 * C23042 + (C23383 + C23382) * C152080 * C23041 +
            (C23381 + C23380) * C152080 * C23040) *
               C2215 -
           ((C25074 + C25075) * C152080 * C23042 +
            (C25071 + C25070) * C152080 * C23041 +
            (C25069 + C25068) * C152080 * C23040) *
               C152217) *
              C152244 +
          ((C23401 * C23040 + (C23385 + C23384) * C152080 * C23041 +
            C24803 * C23042) *
               C2215 -
           ((C25802 + C25803) * C152080 * C23042 +
            (C25073 + C25072) * C152080 * C23041 + C25051 * C23040) *
               C2216 +
           (C25077 * C23040 + (C25075 + C25074) * C152080 * C23041 +
            (C23043 * C25021 + C25049 + C25049 + C152149 * C25025 +
             C23045 * C25022 + C25050 + C25050 + C151796 * C25026) *
                C152080 * C23042) *
               C152217) *
              C152214) *
         C151823) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
            C23049 + C23049 + C151796 * C159) *
               C45770 +
           (C23043 * C550 + C23627 + C23627 + C152149 * C574 + C23045 * C549 +
            C23626 + C23626 + C151796 * C573) *
               C45771 +
           (C23043 * C551 + C23628 + C23628 + C152149 * C575 + C23045 * C552 +
            C23629 + C23629 + C151796 * C576) *
               C45772) *
              C152054 * C151869 * C151851 * C129 -
          ((C23045 * C553 + C23644 + C23644 + C151796 * C577 + C23043 * C552 +
            C23645 + C23645 + C152149 * C576) *
               C45772 +
           (C23045 * C548 + C23635 + C23635 + C151796 * C572 + C23043 * C549 +
            C23634 + C23634 + C152149 * C573) *
               C45771 +
           (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
            C23059 + C23059 + C152149 * C159) *
               C45770) *
              C152054 * C151869 * C151851 * C130 +
          ((C23043 * C144 + C23060 + C23060 + C152149 * C160 + C23045 * C145 +
            C23061 + C23061 + C151796 * C161) *
               C45770 +
           (C23043 * C548 + C23651 + C23651 + C152149 * C572 + C23045 * C547 +
            C23650 + C23650 + C151796 * C571) *
               C45771 +
           (C23043 * C553 + C23652 + C23652 + C152149 * C577 + C23045 * C554 +
            C23653 + C23653 + C151796 * C578) *
               C45772) *
              C152054 * C151869 * C151851 * C131 -
          ((C23045 * C556 + C45774 + C45774 + C151796 * C580 + C23043 * C554 +
            C45775 + C45775 + C152149 * C578) *
               C45772 +
           (C23045 * C555 + C24069 + C24069 + C151796 * C579 + C23043 * C547 +
            C24068 + C24068 + C152149 * C571) *
               C45771 +
           (C23045 * C146 + C23070 + C23070 + C151796 * C162 + C23043 * C145 +
            C23071 + C23071 + C152149 * C161) *
               C45770) *
              C152054 * C151869 * C151851 * C132 +
          ((C23043 * C146 + C23072 + C23072 + C152149 * C162 + C23045 * C147 +
            C23073 + C23073 + C151796 * C163) *
               C45770 +
           (C23043 * C555 + C45776 + C45776 + C152149 * C579 + C23045 * C557 +
            C45777 + C45777 + C151796 * C581) *
               C45771 +
           (C23043 * C556 + C45778 + C45778 + C152149 * C580 + C23045 * C558 +
            C45779 + C45779 + C151796 * C582) *
               C45772) *
              C152054 * C151869 * C151851 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
             C23049 + C23049 + C151796 * C159) *
                C45770 +
            (C23043 * C550 + C23627 + C23627 + C152149 * C574 + C23045 * C549 +
             C23626 + C23626 + C151796 * C573) *
                C45771 +
            (C23043 * C551 + C23628 + C23628 + C152149 * C575 + C23045 * C552 +
             C23629 + C23629 + C151796 * C576) *
                C45772) *
               C152054 * C151869 * C152258 -
           ((C25069 + C25068) * C45772 + (C24420 + C24421) * C45771 +
            (C23381 + C23380) * C45770) *
               C152054 * C151869 * C152244 +
           (C23398 * C45770 + (C24419 + C24418) * C45771 + C25076 * C45772) *
               C152054 * C151869 * C152214) *
              C335 +
          (((C23386 + C23387) * C45770 + (C24422 + C24423) * C45771 +
            (C26691 + C26690) * C45772) *
               C152054 * C151869 * C152244 -
           ((C23045 * C553 + C23644 + C23644 + C151796 * C577 + C23043 * C552 +
             C23645 + C23645 + C152149 * C576) *
                C45772 +
            (C23045 * C548 + C23635 + C23635 + C151796 * C572 + C23043 * C549 +
             C23634 + C23634 + C152149 * C573) *
                C45771 +
            (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
             C23059 + C23059 + C152149 * C159) *
                C45770) *
               C152054 * C151869 * C152258 -
           ((C26688 + C26689) * C45772 + (C24425 + C24424) * C45771 +
            C23399 * C45770) *
               C152054 * C151869 * C152214) *
              C336 +
          (((C23043 * C144 + C23060 + C23060 + C152149 * C160 + C23045 * C145 +
             C23061 + C23061 + C151796 * C161) *
                C45770 +
            (C23043 * C548 + C23651 + C23651 + C152149 * C572 + C23045 * C547 +
             C23650 + C23650 + C151796 * C571) *
                C45771 +
            (C23043 * C553 + C23652 + C23652 + C152149 * C577 + C23045 * C554 +
             C23653 + C23653 + C151796 * C578) *
                C45772) *
               C152054 * C151869 * C152258 -
           ((C23045 * C1531 + C23655 + C23655 + C151796 * C1555 +
             C23043 * C1532 + C23654 + C23654 + C152149 * C1556) *
                C45772 +
            (C24428 + C24429) * C45771 + (C23393 + C23392) * C45770) *
               C152054 * C151869 * C152244 +
           (C23400 * C45770 + (C24427 + C24426) * C45771 +
            (C23043 * C1541 + C23656 + C23656 + C152149 * C1565 +
             C23045 * C1542 + C23657 + C23657 + C151796 * C1566) *
                C45772) *
               C152054 * C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
             C23049 + C23049 + C151796 * C159) *
                C45770 +
            (C46294 + C46295) * C45771 + C46312 * C45772) *
               C152054 * C151869 * C1259 -
           ((C25069 + C25068) * C45772 + (C24420 + C24421) * C45771 +
            (C23381 + C23380) * C45770) *
               C152054 * C151869 * C1260 +
           (C23398 * C45770 + (C24419 + C24418) * C45771 + C25076 * C45772) *
               C152054 * C151869 * C152214) *
              C152255 +
          (((C23386 + C23387) * C45770 + (C24422 + C24423) * C45771 +
            (C26691 + C26690) * C45772) *
               C152054 * C151869 * C1260 -
           (C46313 * C45772 + (C46301 + C46300) * C45771 +
            (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
             C23059 + C23059 + C152149 * C159) *
                C45770) *
               C152054 * C151869 * C1259 -
           ((C26688 + C26689) * C45772 + (C24425 + C24424) * C45771 +
            C23399 * C45770) *
               C152054 * C151869 * C152214) *
              C152240 +
          (((C23043 * C144 + C23060 + C23060 + C152149 * C160 + C23045 * C145 +
             C23061 + C23061 + C151796 * C161) *
                C45770 +
            (C46306 + C46307) * C45771 + C46314 * C45772) *
               C152054 * C151869 * C1259 -
           ((C47028 + C47027) * C45772 + (C24428 + C24429) * C45771 +
            (C23393 + C23392) * C45770) *
               C152054 * C151869 * C1260 +
           (C23400 * C45770 + (C24427 + C24426) * C45771 +
            (C23043 * C1541 + C23656 + C23656 + C152149 * C1565 +
             C23045 * C1542 + C23657 + C23657 + C151796 * C1566) *
                C45772) *
               C152054 * C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
            C23049 + C23049 + C151796 * C159) *
               C45770 +
           (C46294 + C46295) * C45771 + C46312 * C45772) *
              C152054 * C151869 * C1347 -
          ((C25069 + C25068) * C45772 + (C24420 + C24421) * C45771 +
           (C23381 + C23380) * C45770) *
              C152054 * C151869 * C1348 +
          (C23398 * C45770 + (C24419 + C24418) * C45771 + C25076 * C45772) *
              C152054 * C151869 * C1349 -
          ((C25074 + C25075) * C45772 + (C25073 + C25072) * C45771 +
           C24776 * C45770) *
              C152054 * C151869 * C1350 +
          (C24802 * C45770 + (C25803 + C25802) * C45771 +
           (C23043 * C25021 + C25049 + C25049 + C152149 * C25025 +
            C23045 * C25022 + C25050 + C25050 + C151796 * C25026) *
               C45772) *
              C152054 * C151869 * C1351) *
         C151823) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
             C23049 + C23049 + C151796 * C159) *
                C45770 +
            (C46294 + C46295) * C45771 + C46312 * C45772) *
               C152054 * C2215 -
           ((C46298 + C46299) * C45772 + (C46297 + C46296) * C45771 +
            (C46295 + C46294) * C45770) *
               C152054 * C2216 +
           (C46312 * C45770 + (C46299 + C46298) * C45771 +
            (C23043 * C2455 + C26374 + C26374 + C152149 * C2471 +
             C23045 * C2456 + C26375 + C26375 + C151796 * C2472) *
                C45772) *
               C152054 * C152217) *
              C151851 * C152255 +
          (((C46300 + C46301) * C45770 + (C46302 + C46303) * C45771 +
            (C46304 + C46305) * C45772) *
               C152054 * C2216 -
           (C46313 * C45772 + (C46301 + C46300) * C45771 +
            (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
             C23059 + C23059 + C152149 * C159) *
                C45770) *
               C152054 * C2215 -
           ((C23045 * C2457 + C46240 + C46240 + C151796 * C2473 +
             C23043 * C2456 + C46241 + C46241 + C152149 * C2472) *
                C45772 +
            (C46305 + C46304) * C45771 + C46313 * C45770) *
               C152054 * C152217) *
              C151851 * C152240 +
          (((C23043 * C144 + C23060 + C23060 + C152149 * C160 + C23045 * C145 +
             C23061 + C23061 + C151796 * C161) *
                C45770 +
            (C46306 + C46307) * C45771 + C46314 * C45772) *
               C152054 * C2215 -
           ((C46310 + C46311) * C45772 + (C46309 + C46308) * C45771 +
            (C46307 + C46306) * C45770) *
               C152054 * C2216 +
           (C46314 * C45770 + (C46311 + C46310) * C45771 +
            (C23043 * C2457 + C46256 + C46256 + C152149 * C2473 +
             C23045 * C2458 + C46257 + C46257 + C151796 * C2474) *
                C45772) *
               C152054 * C152217) *
              C151851 * C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
             C23049 + C23049 + C151796 * C159) *
                C45770 +
            (C46294 + C46295) * C45771 + C46312 * C45772) *
               C152054 * C2215 -
           ((C46298 + C46299) * C45772 + (C46297 + C46296) * C45771 +
            (C46295 + C46294) * C45770) *
               C152054 * C2216 +
           (C46312 * C45770 + (C46299 + C46298) * C45771 +
            (C23043 * C2455 + C26374 + C26374 + C152149 * C2471 +
             C23045 * C2456 + C26375 + C26375 + C151796 * C2472) *
                C45772) *
               C152054 * C152217) *
              C152258 +
          (((C24421 + C24420) * C45770 + (C25068 + C25069) * C45771 +
            (C27113 + C27112) * C45772) *
               C152054 * C2216 -
           (C47587 * C45772 + (C24420 + C24421) * C45771 +
            (C23381 + C23380) * C45770) *
               C152054 * C2215 -
           ((C23045 * C9427 + C26377 + C26377 + C151796 * C9433 +
             C23043 * C9426 + C26376 + C26376 + C152149 * C9432) *
                C45772 +
            (C27112 + C27113) * C45771 + C47587 * C45770) *
               C152054 * C152217) *
              C152244 +
          ((C23398 * C45770 + (C24419 + C24418) * C45771 + C25076 * C45772) *
               C152054 * C2215 -
           ((C27110 + C27111) * C45772 + (C25071 + C25070) * C45771 +
            C25028 * C45770) *
               C152054 * C2216 +
           (C25076 * C45770 + (C27111 + C27110) * C45771 +
            (C23043 * C26361 + C26378 + C26378 + C152149 * C26365 +
             C23045 * C26362 + C26379 + C26379 + C151796 * C26366) *
                C45772) *
               C152054 * C152217) *
              C152214) *
         C151823) /
            (p * q * std::sqrt(p + q));
    d2ee[165] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
              C23049 + C23049 + C151796 * C159) *
                 C152080 * C23040 +
             (C23380 + C23381) * C152080 * C23041 + C23401 * C23042) *
                C4107 -
            (C25051 * C23042 + (C24420 + C24421) * C152080 * C23041 +
             (C23045 * C549 + C23626 + C23626 + C151796 * C573 + C23043 * C550 +
              C23627 + C23627 + C152149 * C574) *
                 C152080 * C23040) *
                C151956) *
               C152172 +
           (((C24421 + C24420) * C152080 * C23040 +
             (C24419 + C24418) * C152080 * C23041 + C25797 * C23042) *
                C151956 -
            (C24789 * C23042 + (C23383 + C23382) * C152080 * C23041 +
             (C23381 + C23380) * C152080 * C23040) *
                C4107) *
               C151914) *
              C151828 +
          ((((C23043 * C549 + C23634 + C23634 + C152149 * C573 + C23045 * C548 +
              C23635 + C23635 + C151796 * C572) *
                 C152080 * C23040 +
             (C24422 + C24423) * C152080 * C23041 + C25583 * C23042) *
                C151956 -
            (C23402 * C23042 + (C23387 + C23386) * C152080 * C23041 +
             (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
              C23059 + C23059 + C152149 * C159) *
                 C152080 * C23040) *
                C4107) *
               C152172 +
           (((C23386 + C23387) * C152080 * C23040 +
             (C23388 + C23389) * C152080 * C23041 + C25279 * C23042) *
                C4107 -
            ((C25588 + C25589) * C152080 * C23042 +
             (C24425 + C24424) * C152080 * C23041 +
             (C24423 + C24422) * C152080 * C23040) *
                C151956) *
               C151914) *
              C151837 +
          ((((C23043 * C144 + C23060 + C23060 + C152149 * C160 + C23045 * C145 +
              C23061 + C23061 + C151796 * C161) *
                 C152080 * C23040 +
             (C23392 + C23393) * C152080 * C23041 + C23403 * C23042) *
                C4107 -
            ((C24426 + C24427) * C152080 * C23042 +
             (C24428 + C24429) * C152080 * C23041 +
             (C23045 * C547 + C23650 + C23650 + C151796 * C571 + C23043 * C548 +
              C23651 + C23651 + C152149 * C572) *
                 C152080 * C23040) *
                C151956) *
               C152172 +
           (((C24429 + C24428) * C152080 * C23040 +
             (C24427 + C24426) * C152080 * C23041 +
             (C23043 * C2055 + C24392 + C24392 + C152149 * C2063 +
              C23045 * C2056 + C24393 + C24393 + C151796 * C2064) *
                 C152080 * C23042) *
                C151956 -
            ((C23396 + C23397) * C152080 * C23042 +
             (C23395 + C23394) * C152080 * C23041 +
             (C23393 + C23392) * C152080 * C23040) *
                C4107) *
               C151914) *
              C3588)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
             C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
             C140 * C145 + C170 + C170 + C124 * C161) *
                C152080 * C152054 * C4107 -
            (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
             C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
             C134 * C550 + C587 + C587 + C121 * C574) *
                C152080 * C152054 * C151956) *
               C152172 +
           ((C134 * C1083 + C1102 + C1102 + C121 * C1095 + C136 * C1084 +
             C1103 + C1103 + C122 * C1096 + C138 * C1085 + C1104 + C1104 +
             C123 * C1097 + C140 * C1086 + C1105 + C1105 + C124 * C1098) *
                C152080 * C152054 * C151956 -
            (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
             C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
             C134 * C341 + C378 + C378 + C121 * C365) *
                C152080 * C152054 * C4107) *
               C151914) *
              C151828 +
          (((C134 * C549 + C592 + C592 + C121 * C573 + C136 * C548 + C593 +
             C593 + C122 * C572 + C138 * C547 + C594 + C594 + C123 * C571 +
             C140 * C555 + C595 + C595 + C124 * C579) *
                C152080 * C152054 * C151956 -
            (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
             C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
             C134 * C143 + C174 + C174 + C121 * C159) *
                C152080 * C152054 * C4107) *
               C152172 +
           ((C134 * C340 + C383 + C383 + C121 * C364 + C136 * C339 + C384 +
             C384 + C122 * C363 + C138 * C338 + C385 + C385 + C123 * C362 +
             C140 * C346 + C386 + C386 + C124 * C370) *
                C152080 * C152054 * C4107 -
            (C140 * C1087 + C1106 + C1106 + C124 * C1099 + C138 * C1086 +
             C1107 + C1107 + C123 * C1098 + C136 * C1085 + C1108 + C1108 +
             C122 * C1097 + C134 * C1084 + C1109 + C1109 + C121 * C1096) *
                C152080 * C152054 * C151956) *
               C151914) *
              C151837 +
          (((C134 * C144 + C175 + C175 + C121 * C160 + C136 * C145 + C176 +
             C176 + C122 * C161 + C138 * C146 + C177 + C177 + C123 * C162 +
             C140 * C147 + C178 + C178 + C124 * C163) *
                C152080 * C152054 * C4107 -
            (C140 * C557 + C600 + C600 + C124 * C581 + C138 * C555 + C601 +
             C601 + C123 * C579 + C136 * C547 + C602 + C602 + C122 * C571 +
             C134 * C548 + C603 + C603 + C121 * C572) *
                C152080 * C152054 * C151956) *
               C152172 +
           ((C134 * C1085 + C1110 + C1110 + C121 * C1097 + C136 * C1086 +
             C1111 + C1111 + C122 * C1098 + C138 * C1087 + C1112 + C1112 +
             C123 * C1099 + C140 * C1088 + C1113 + C1113 + C124 * C1100) *
                C152080 * C152054 * C151956 -
            (C140 * C348 + C391 + C391 + C124 * C372 + C138 * C346 + C392 +
             C392 + C123 * C370 + C136 * C338 + C393 + C393 + C122 * C362 +
             C134 * C339 + C394 + C394 + C121 * C363) *
                C152080 * C152054 * C4107) *
               C151914) *
              C3588)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
              C23049 + C23049 + C151796 * C159) *
                 C45770 +
             (C46294 + C46295) * C45771 + C46312 * C45772) *
                C152054 * C4107 -
            (C48830 * C45772 + (C46297 + C46296) * C45771 +
             (C46295 + C46294) * C45770) *
                C152054 * C151956) *
               C152172 +
           (((C24421 + C24420) * C45770 + (C25068 + C25069) * C45771 +
             C49563 * C45772) *
                C152054 * C151956 -
            (C47587 * C45772 + (C24420 + C24421) * C45771 +
             (C23381 + C23380) * C45770) *
                C152054 * C4107) *
               C151914) *
              C151828 +
          ((((C46300 + C46301) * C45770 + (C46302 + C46303) * C45771 +
             C49353 * C45772) *
                C152054 * C151956 -
            (C46313 * C45772 + (C46301 + C46300) * C45771 +
             (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
              C23059 + C23059 + C152149 * C159) *
                 C45770) *
                C152054 * C4107) *
               C152172 +
           (((C23386 + C23387) * C45770 + (C24422 + C24423) * C45771 +
             C49146 * C45772) *
                C152054 * C4107 -
            ((C49157 + C49158) * C45772 + (C26690 + C26691) * C45771 +
             (C24423 + C24422) * C45770) *
                C152054 * C151956) *
               C151914) *
              C151837 +
          ((((C23043 * C144 + C23060 + C23060 + C152149 * C160 + C23045 * C145 +
              C23061 + C23061 + C151796 * C161) *
                 C45770 +
             (C46306 + C46307) * C45771 + C46314 * C45772) *
                C152054 * C4107 -
            ((C46310 + C46311) * C45772 + (C46309 + C46308) * C45771 +
             (C46307 + C46306) * C45770) *
                C152054 * C151956) *
               C152172 +
           (((C24429 + C24428) * C45770 + (C47027 + C47028) * C45771 +
             (C23043 * C2957 + C47021 + C47021 + C152149 * C2965 +
              C23045 * C2958 + C47022 + C47022 + C151796 * C2966) *
                 C45772) *
                C152054 * C151956 -
            ((C47028 + C47027) * C45772 + (C24428 + C24429) * C45771 +
             (C23393 + C23392) * C45770) *
                C152054 * C4107) *
               C151914) *
              C3588)) /
            (p * q * std::sqrt(p + q));
    d2ee[166] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
              C23049 + C23049 + C151796 * C159) *
                 C152080 * C23040 +
             (C23380 + C23381) * C152080 * C23041 + C23401 * C23042) *
                C151952 -
            (C25051 * C23042 + (C24420 + C24421) * C152080 * C23041 +
             (C23045 * C549 + C23626 + C23626 + C151796 * C573 + C23043 * C550 +
              C23627 + C23627 + C152149 * C574) *
                 C152080 * C23040) *
                C151959 +
            ((C23043 * C551 + C23628 + C23628 + C152149 * C575 + C23045 * C552 +
              C23629 + C23629 + C151796 * C576) *
                 C152080 * C23040 +
             (C25068 + C25069) * C152080 * C23041 + C25077 * C23042) *
                C4779) *
               C152172 +
           (((C24421 + C24420) * C152080 * C23040 +
             (C24419 + C24418) * C152080 * C23041 + C25797 * C23042) *
                C151959 -
            (C24789 * C23042 + (C23383 + C23382) * C152080 * C23041 +
             (C23381 + C23380) * C152080 * C23040) *
                C151952 -
            ((C25074 + C25075) * C152080 * C23042 +
             (C25071 + C25070) * C152080 * C23041 +
             (C25069 + C25068) * C152080 * C23040) *
                C4779) *
               C151914) *
              C3241 +
          ((((C23043 * C549 + C23634 + C23634 + C152149 * C573 + C23045 * C548 +
              C23635 + C23635 + C151796 * C572) *
                 C152080 * C23040 +
             (C24422 + C24423) * C152080 * C23041 + C25583 * C23042) *
                C151959 -
            (C23402 * C23042 + (C23387 + C23386) * C152080 * C23041 +
             (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
              C23059 + C23059 + C152149 * C159) *
                 C152080 * C23040) *
                C151952 -
            ((C26688 + C26689) * C152080 * C23042 +
             (C26690 + C26691) * C152080 * C23041 +
             (C23045 * C553 + C23644 + C23644 + C151796 * C577 + C23043 * C552 +
              C23645 + C23645 + C152149 * C576) *
                 C152080 * C23040) *
                C4779) *
               C152172 +
           (((C23386 + C23387) * C152080 * C23040 +
             (C23388 + C23389) * C152080 * C23041 + C25279 * C23042) *
                C151952 -
            ((C25588 + C25589) * C152080 * C23042 +
             (C24425 + C24424) * C152080 * C23041 +
             (C24423 + C24422) * C152080 * C23040) *
                C151959 +
            ((C26691 + C26690) * C152080 * C23040 +
             (C26689 + C26688) * C152080 * C23041 +
             (C23043 * C8065 + C26678 + C26678 + C152149 * C8071 +
              C23045 * C8066 + C26679 + C26679 + C151796 * C8072) *
                 C152080 * C23042) *
                C4779) *
               C151914) *
              C151834)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
             C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
             C140 * C145 + C170 + C170 + C124 * C161) *
                C152080 * C152054 * C151952 -
            (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
             C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
             C134 * C550 + C587 + C587 + C121 * C574) *
                C152080 * C152054 * C151959 +
            (C134 * C551 + C588 + C588 + C121 * C575 + C136 * C552 + C589 +
             C589 + C122 * C576 + C138 * C553 + C590 + C590 + C123 * C577 +
             C140 * C554 + C591 + C591 + C124 * C578) *
                C152080 * C152054 * C4779) *
               C152172 +
           ((C134 * C1083 + C1102 + C1102 + C121 * C1095 + C136 * C1084 +
             C1103 + C1103 + C122 * C1096 + C138 * C1085 + C1104 + C1104 +
             C123 * C1097 + C140 * C1086 + C1105 + C1105 + C124 * C1098) *
                C152080 * C152054 * C151959 -
            (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
             C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
             C134 * C341 + C378 + C378 + C121 * C365) *
                C152080 * C152054 * C151952 -
            (C140 * C1531 + C1568 + C1568 + C124 * C1555 + C138 * C1532 +
             C1569 + C1569 + C123 * C1556 + C136 * C1533 + C1570 + C1570 +
             C122 * C1557 + C134 * C1534 + C1571 + C1571 + C121 * C1558) *
                C152080 * C152054 * C4779) *
               C151914) *
              C3241 +
          (((C134 * C549 + C592 + C592 + C121 * C573 + C136 * C548 + C593 +
             C593 + C122 * C572 + C138 * C547 + C594 + C594 + C123 * C571 +
             C140 * C555 + C595 + C595 + C124 * C579) *
                C152080 * C152054 * C151959 -
            (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
             C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
             C134 * C143 + C174 + C174 + C121 * C159) *
                C152080 * C152054 * C151952 -
            (C140 * C556 + C596 + C596 + C124 * C580 + C138 * C554 + C597 +
             C597 + C123 * C578 + C136 * C553 + C598 + C598 + C122 * C577 +
             C134 * C552 + C599 + C599 + C121 * C576) *
                C152080 * C152054 * C4779) *
               C152172 +
           ((C134 * C340 + C383 + C383 + C121 * C364 + C136 * C339 + C384 +
             C384 + C122 * C363 + C138 * C338 + C385 + C385 + C123 * C362 +
             C140 * C346 + C386 + C386 + C124 * C370) *
                C152080 * C152054 * C151952 -
            (C140 * C1087 + C1106 + C1106 + C124 * C1099 + C138 * C1086 +
             C1107 + C1107 + C123 * C1098 + C136 * C1085 + C1108 + C1108 +
             C122 * C1097 + C134 * C1084 + C1109 + C1109 + C121 * C1096) *
                C152080 * C152054 * C151959 +
            (C134 * C1533 + C2681 + C2681 + C121 * C1557 + C136 * C1532 +
             C2682 + C2682 + C122 * C1556 + C138 * C1531 + C2683 + C2683 +
             C123 * C1555 + C140 * C2677 + C2684 + C2684 + C124 * C2679) *
                C152080 * C152054 * C4779) *
               C151914) *
              C151834)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
              C23049 + C23049 + C151796 * C159) *
                 C45770 +
             (C46294 + C46295) * C45771 + C46312 * C45772) *
                C152054 * C151952 -
            (C48830 * C45772 + (C46297 + C46296) * C45771 +
             (C46295 + C46294) * C45770) *
                C152054 * C151959 +
            (C46312 * C45770 + (C46299 + C46298) * C45771 + C48855 * C45772) *
                C152054 * C4779) *
               C152172 +
           (((C24421 + C24420) * C45770 + (C25068 + C25069) * C45771 +
             C49563 * C45772) *
                C152054 * C151959 -
            (C47587 * C45772 + (C24420 + C24421) * C45771 +
             (C23381 + C23380) * C45770) *
                C152054 * C151952 -
            ((C49574 + C49575) * C45772 + (C27112 + C27113) * C45771 +
             C47587 * C45770) *
                C152054 * C4779) *
               C151914) *
              C3241 +
          ((((C46300 + C46301) * C45770 + (C46302 + C46303) * C45771 +
             C49353 * C45772) *
                C152054 * C151959 -
            (C46313 * C45772 + (C46301 + C46300) * C45771 +
             (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
              C23059 + C23059 + C152149 * C159) *
                 C45770) *
                C152054 * C151952 -
            ((C49364 + C49365) * C45772 + (C46305 + C46304) * C45771 +
             C46313 * C45770) *
                C152054 * C4779) *
               C152172 +
           (((C23386 + C23387) * C45770 + (C24422 + C24423) * C45771 +
             C49146 * C45772) *
                C152054 * C151952 -
            ((C49157 + C49158) * C45772 + (C26690 + C26691) * C45771 +
             (C24423 + C24422) * C45770) *
                C152054 * C151959 +
            (C49146 * C45770 + (C49158 + C49157) * C45771 +
             (C23043 * C9427 + C49151 + C49151 + C152149 * C9433 +
              C23045 * C9428 + C49152 + C49152 + C151796 * C9434) *
                 C45772) *
                C152054 * C4779) *
               C151914) *
              C151834)) /
            (p * q * std::sqrt(p + q));
    d2ee[167] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
                C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
                C140 * C145 + C170 + C170 + C124 * C161) *
                   C152080 * C152054 * C4107 -
               (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
                C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
                C134 * C550 + C587 + C587 + C121 * C574) *
                   C152080 * C152054 * C151956) *
                  C151851 * C152264 +
              ((C134 * C549 + C592 + C592 + C121 * C573 + C136 * C548 + C593 +
                C593 + C122 * C572 + C138 * C547 + C594 + C594 + C123 * C571 +
                C140 * C555 + C595 + C595 + C124 * C579) *
                   C152080 * C152054 * C151956 -
               (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
                C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
                C134 * C143 + C174 + C174 + C121 * C159) *
                   C152080 * C152054 * C4107) *
                  C151851 * C152257 +
              ((C134 * C144 + C175 + C175 + C121 * C160 + C136 * C145 + C176 +
                C176 + C122 * C161 + C138 * C146 + C177 + C177 + C123 * C162 +
                C140 * C147 + C178 + C178 + C124 * C163) *
                   C152080 * C152054 * C4107 -
               (C140 * C557 + C600 + C600 + C124 * C581 + C138 * C555 + C601 +
                C601 + C123 * C579 + C136 * C547 + C602 + C602 + C122 * C571 +
                C134 * C548 + C603 + C603 + C121 * C572) *
                   C152080 * C152054 * C151956) *
                  C151851 * C152242 +
              ((C134 * C547 + C886 + C886 + C121 * C571 + C136 * C555 + C887 +
                C887 + C122 * C579 + C138 * C557 + C888 + C888 + C123 * C581 +
                C140 * C882 + C889 + C889 + C124 * C884) *
                   C152080 * C152054 * C151956 -
               (C140 * C148 + C179 + C179 + C124 * C164 + C138 * C147 + C180 +
                C180 + C123 * C163 + C136 * C146 + C181 + C181 + C122 * C162 +
                C134 * C145 + C182 + C182 + C121 * C161) *
                   C152080 * C152054 * C4107) *
                  C151851 * C152218) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
                 C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
                 C140 * C145 + C170 + C170 + C124 * C161) *
                    C152080 * C152054 * C4107 -
                (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
                 C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
                 C134 * C550 + C587 + C587 + C121 * C574) *
                    C152080 * C152054 * C151956) *
                   C152258 +
               ((C134 * C1083 + C1102 + C1102 + C121 * C1095 + C136 * C1084 +
                 C1103 + C1103 + C122 * C1096 + C138 * C1085 + C1104 + C1104 +
                 C123 * C1097 + C140 * C1086 + C1105 + C1105 + C124 * C1098) *
                    C152080 * C152054 * C151956 -
                (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
                 C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
                 C134 * C341 + C378 + C378 + C121 * C365) *
                    C152080 * C152054 * C4107) *
                   C152244 +
               ((C134 * C342 + C379 + C379 + C121 * C366 + C136 * C343 + C380 +
                 C380 + C122 * C367 + C138 * C344 + C381 + C381 + C123 * C368 +
                 C140 * C345 + C382 + C382 + C124 * C369) *
                    C152080 * C152054 * C4107 -
                (C140 * C1535 + C1572 + C1572 + C124 * C1559 + C138 * C1536 +
                 C1573 + C1573 + C123 * C1560 + C136 * C1537 + C1574 + C1574 +
                 C122 * C1561 + C134 * C1538 + C1575 + C1575 + C121 * C1562) *
                    C152080 * C152054 * C151956) *
                   C152214) *
                  C3241 +
              (((C134 * C549 + C592 + C592 + C121 * C573 + C136 * C548 + C593 +
                 C593 + C122 * C572 + C138 * C547 + C594 + C594 + C123 * C571 +
                 C140 * C555 + C595 + C595 + C124 * C579) *
                    C152080 * C152054 * C151956 -
                (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
                 C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
                 C134 * C143 + C174 + C174 + C121 * C159) *
                    C152080 * C152054 * C4107) *
                   C152258 +
               ((C134 * C340 + C383 + C383 + C121 * C364 + C136 * C339 + C384 +
                 C384 + C122 * C363 + C138 * C338 + C385 + C385 + C123 * C362 +
                 C140 * C346 + C386 + C386 + C124 * C370) *
                    C152080 * C152054 * C4107 -
                (C140 * C1087 + C1106 + C1106 + C124 * C1099 + C138 * C1086 +
                 C1107 + C1107 + C123 * C1098 + C136 * C1085 + C1108 + C1108 +
                 C122 * C1097 + C134 * C1084 + C1109 + C1109 + C121 * C1096) *
                    C152080 * C152054 * C151956) *
                   C152244 +
               ((C134 * C1537 + C1920 + C1920 + C121 * C1561 + C136 * C1536 +
                 C1921 + C1921 + C122 * C1560 + C138 * C1535 + C1922 + C1922 +
                 C123 * C1559 + C140 * C1916 + C1923 + C1923 + C124 * C1918) *
                    C152080 * C152054 * C151956 -
                (C140 * C347 + C387 + C387 + C124 * C371 + C138 * C345 + C388 +
                 C388 + C123 * C369 + C136 * C344 + C389 + C389 + C122 * C368 +
                 C134 * C343 + C390 + C390 + C121 * C367) *
                    C152080 * C152054 * C4107) *
                   C152214) *
                  C151834)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
            C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
            C140 * C145 + C170 + C170 + C124 * C161) *
               C152080 * C152054 * C152266 -
           (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
            C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
            C134 * C550 + C587 + C587 + C121 * C574) *
               C152080 * C152054 * C152263 +
           (C134 * C551 + C588 + C588 + C121 * C575 + C136 * C552 + C589 +
            C589 + C122 * C576 + C138 * C553 + C590 + C590 + C123 * C577 +
            C140 * C554 + C591 + C591 + C124 * C578) *
               C152080 * C152054 * C152252 -
           (C140 * C2451 + C2476 + C2476 + C124 * C2467 + C138 * C2452 + C2477 +
            C2477 + C123 * C2468 + C136 * C2453 + C2478 + C2478 + C122 * C2469 +
            C134 * C2454 + C2479 + C2479 + C121 * C2470) *
               C152080 * C152054 * C152230) *
              C151851 * C3241 +
          ((C134 * C549 + C592 + C592 + C121 * C573 + C136 * C548 + C593 +
            C593 + C122 * C572 + C138 * C547 + C594 + C594 + C123 * C571 +
            C140 * C555 + C595 + C595 + C124 * C579) *
               C152080 * C152054 * C152263 -
           (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
            C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
            C134 * C143 + C174 + C174 + C121 * C159) *
               C152080 * C152054 * C152266 -
           (C140 * C556 + C596 + C596 + C124 * C580 + C138 * C554 + C597 +
            C597 + C123 * C578 + C136 * C553 + C598 + C598 + C122 * C577 +
            C134 * C552 + C599 + C599 + C121 * C576) *
               C152080 * C152054 * C152252 +
           (C134 * C2453 + C2822 + C2822 + C121 * C2469 + C136 * C2452 + C2823 +
            C2823 + C122 * C2468 + C138 * C2451 + C2824 + C2824 + C123 * C2467 +
            C140 * C2818 + C2825 + C2825 + C124 * C2820) *
               C152080 * C152054 * C152230) *
              C151851 * C151834)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
             C23049 + C23049 + C151796 * C159) *
                C152080 * C23040 +
            (C23380 + C23381) * C152080 * C23041 + C23401 * C23042) *
               C4107 -
           (C25051 * C23042 + (C24420 + C24421) * C152080 * C23041 +
            (C23045 * C549 + C23626 + C23626 + C151796 * C573 + C23043 * C550 +
             C23627 + C23627 + C152149 * C574) *
                C152080 * C23040) *
               C151956) *
              C151851 * C152264 +
          (((C23043 * C549 + C23634 + C23634 + C152149 * C573 + C23045 * C548 +
             C23635 + C23635 + C151796 * C572) *
                C152080 * C23040 +
            (C24422 + C24423) * C152080 * C23041 + C25583 * C23042) *
               C151956 -
           (C23402 * C23042 + (C23387 + C23386) * C152080 * C23041 +
            (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
             C23059 + C23059 + C152149 * C159) *
                C152080 * C23040) *
               C4107) *
              C151851 * C152257 +
          (((C23043 * C144 + C23060 + C23060 + C152149 * C160 + C23045 * C145 +
             C23061 + C23061 + C151796 * C161) *
                C152080 * C23040 +
            (C23392 + C23393) * C152080 * C23041 + C23403 * C23042) *
               C4107 -
           ((C24426 + C24427) * C152080 * C23042 +
            (C24428 + C24429) * C152080 * C23041 +
            (C23045 * C547 + C23650 + C23650 + C151796 * C571 + C23043 * C548 +
             C23651 + C23651 + C152149 * C572) *
                C152080 * C23040) *
               C151956) *
              C151851 * C152242 +
          (((C23043 * C547 + C24068 + C24068 + C152149 * C571 + C23045 * C555 +
             C24069 + C24069 + C151796 * C579) *
                C152080 * C23040 +
            (C23043 * C1086 + C24070 + C24070 + C152149 * C1098 +
             C23045 * C1087 + C24071 + C24071 + C151796 * C1099) *
                C152080 * C23041 +
            (C23043 * C1535 + C24072 + C24072 + C152149 * C1559 +
             C23045 * C1916 + C24073 + C24073 + C151796 * C1918) *
                C152080 * C23042) *
               C151956 -
           ((C23873 + C23872) * C152080 * C23042 +
            (C23871 + C23870) * C152080 * C23041 +
            (C23045 * C146 + C23070 + C23070 + C151796 * C162 + C23043 * C145 +
             C23071 + C23071 + C152149 * C161) *
                C152080 * C23040) *
               C4107) *
              C151851 * C152218)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
              C23049 + C23049 + C151796 * C159) *
                 C152080 * C23040 +
             (C23380 + C23381) * C152080 * C23041 + C23401 * C23042) *
                C4107 -
            (C25051 * C23042 + (C24420 + C24421) * C152080 * C23041 +
             (C23045 * C549 + C23626 + C23626 + C151796 * C573 + C23043 * C550 +
              C23627 + C23627 + C152149 * C574) *
                 C152080 * C23040) *
                C151956) *
               C152258 +
           (((C24421 + C24420) * C152080 * C23040 +
             (C24419 + C24418) * C152080 * C23041 + C25797 * C23042) *
                C151956 -
            (C24789 * C23042 + (C23383 + C23382) * C152080 * C23041 +
             (C23381 + C23380) * C152080 * C23040) *
                C4107) *
               C152244 +
           ((C23401 * C23040 + (C23385 + C23384) * C152080 * C23041 +
             C24803 * C23042) *
                C4107 -
            ((C25802 + C25803) * C152080 * C23042 +
             (C25073 + C25072) * C152080 * C23041 + C25051 * C23040) *
                C151956) *
               C152214) *
              C3241 +
          ((((C23043 * C549 + C23634 + C23634 + C152149 * C573 + C23045 * C548 +
              C23635 + C23635 + C151796 * C572) *
                 C152080 * C23040 +
             (C24422 + C24423) * C152080 * C23041 + C25583 * C23042) *
                C151956 -
            (C23402 * C23042 + (C23387 + C23386) * C152080 * C23041 +
             (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
              C23059 + C23059 + C152149 * C159) *
                 C152080 * C23040) *
                C4107) *
               C152258 +
           (((C23386 + C23387) * C152080 * C23040 +
             (C23388 + C23389) * C152080 * C23041 + C25279 * C23042) *
                C4107 -
            ((C25588 + C25589) * C152080 * C23042 +
             (C24425 + C24424) * C152080 * C23041 +
             (C24423 + C24422) * C152080 * C23040) *
                C151956) *
               C152244 +
           ((C25583 * C23040 + (C25589 + C25588) * C152080 * C23041 +
             (C23043 * C8842 + C25581 + C25581 + C152149 * C8848 +
              C23045 * C8843 + C25582 + C25582 + C151796 * C8849) *
                 C152080 * C23042) *
                C151956 -
            ((C25284 + C25285) * C152080 * C23042 +
             (C23391 + C23390) * C152080 * C23041 + C23402 * C23040) *
                C4107) *
               C152214) *
              C151834)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
             C23049 + C23049 + C151796 * C159) *
                C152080 * C23040 +
            (C23380 + C23381) * C152080 * C23041 + C23401 * C23042) *
               C152266 -
           (C25051 * C23042 + (C24420 + C24421) * C152080 * C23041 +
            (C23045 * C549 + C23626 + C23626 + C151796 * C573 + C23043 * C550 +
             C23627 + C23627 + C152149 * C574) *
                C152080 * C23040) *
               C152263 +
           ((C23043 * C551 + C23628 + C23628 + C152149 * C575 + C23045 * C552 +
             C23629 + C23629 + C151796 * C576) *
                C152080 * C23040 +
            (C25068 + C25069) * C152080 * C23041 + C25077 * C23042) *
               C152252 -
           ((C27110 + C27111) * C152080 * C23042 +
            (C27112 + C27113) * C152080 * C23041 +
            (C23045 * C2453 + C26372 + C26372 + C151796 * C2469 +
             C23043 * C2454 + C26373 + C26373 + C152149 * C2470) *
                C152080 * C23040) *
               C152230) *
              C151851 * C3241 +
          (((C23043 * C549 + C23634 + C23634 + C152149 * C573 + C23045 * C548 +
             C23635 + C23635 + C151796 * C572) *
                C152080 * C23040 +
            (C24422 + C24423) * C152080 * C23041 + C25583 * C23042) *
               C152263 -
           (C23402 * C23042 + (C23387 + C23386) * C152080 * C23041 +
            (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
             C23059 + C23059 + C152149 * C159) *
                C152080 * C23040) *
               C152266 -
           ((C26688 + C26689) * C152080 * C23042 +
            (C26690 + C26691) * C152080 * C23041 +
            (C23045 * C553 + C23644 + C23644 + C151796 * C577 + C23043 * C552 +
             C23645 + C23645 + C152149 * C576) *
                C152080 * C23040) *
               C152252 +
           ((C23043 * C2453 + C26886 + C26886 + C152149 * C2469 +
             C23045 * C2452 + C26887 + C26887 + C151796 * C2468) *
                C152080 * C23040 +
            (C23043 * C2956 + C26888 + C26888 + C152149 * C2964 +
             C23045 * C2957 + C26889 + C26889 + C151796 * C2965) *
                C152080 * C23041 +
            (C23043 * C10150 + C26890 + C26890 + C152149 * C10156 +
             C23045 * C10151 + C26891 + C26891 + C151796 * C10157) *
                C152080 * C23042) *
               C152230) *
              C151851 * C151834)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
             C23049 + C23049 + C151796 * C159) *
                C45770 +
            (C46294 + C46295) * C45771 + C46312 * C45772) *
               C152054 * C4107 -
           (C48830 * C45772 + (C46297 + C46296) * C45771 +
            (C46295 + C46294) * C45770) *
               C152054 * C151956) *
              C151851 * C152264 +
          (((C46300 + C46301) * C45770 + (C46302 + C46303) * C45771 +
            C49353 * C45772) *
               C152054 * C151956 -
           (C46313 * C45772 + (C46301 + C46300) * C45771 +
            (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
             C23059 + C23059 + C152149 * C159) *
                C45770) *
               C152054 * C4107) *
              C151851 * C152257 +
          (((C23043 * C144 + C23060 + C23060 + C152149 * C160 + C23045 * C145 +
             C23061 + C23061 + C151796 * C161) *
                C45770 +
            (C46306 + C46307) * C45771 + C46314 * C45772) *
               C152054 * C4107 -
           ((C46310 + C46311) * C45772 + (C46309 + C46308) * C45771 +
            (C46307 + C46306) * C45770) *
               C152054 * C151956) *
              C151851 * C152242 +
          (((C46723 + C46724) * C45770 + (C46725 + C46726) * C45771 +
            (C23043 * C2451 + C46713 + C46713 + C152149 * C2467 +
             C23045 * C2818 + C46714 + C46714 + C151796 * C2820) *
                C45772) *
               C152054 * C151956 -
           ((C46726 + C46725) * C45772 + (C46724 + C46723) * C45771 +
            (C23045 * C146 + C23070 + C23070 + C151796 * C162 + C23043 * C145 +
             C23071 + C23071 + C152149 * C161) *
                C45770) *
               C152054 * C4107) *
              C151851 * C152218)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
              C23049 + C23049 + C151796 * C159) *
                 C45770 +
             (C46294 + C46295) * C45771 + C46312 * C45772) *
                C152054 * C4107 -
            (C48830 * C45772 + (C46297 + C46296) * C45771 +
             (C46295 + C46294) * C45770) *
                C152054 * C151956) *
               C152258 +
           (((C24421 + C24420) * C45770 + (C25068 + C25069) * C45771 +
             C49563 * C45772) *
                C152054 * C151956 -
            (C47587 * C45772 + (C24420 + C24421) * C45771 +
             (C23381 + C23380) * C45770) *
                C152054 * C4107) *
               C152244 +
           ((C23398 * C45770 + (C24419 + C24418) * C45771 + C25076 * C45772) *
                C152054 * C4107 -
            ((C27110 + C27111) * C45772 + (C25071 + C25070) * C45771 +
             C25028 * C45770) *
                C152054 * C151956) *
               C152214) *
              C3241 +
          ((((C46300 + C46301) * C45770 + (C46302 + C46303) * C45771 +
             C49353 * C45772) *
                C152054 * C151956 -
            (C46313 * C45772 + (C46301 + C46300) * C45771 +
             (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
              C23059 + C23059 + C152149 * C159) *
                 C45770) *
                C152054 * C4107) *
               C152258 +
           (((C23386 + C23387) * C45770 + (C24422 + C24423) * C45771 +
             C49146 * C45772) *
                C152054 * C4107 -
            ((C49157 + C49158) * C45772 + (C26690 + C26691) * C45771 +
             (C24423 + C24422) * C45770) *
                C152054 * C151956) *
               C152244 +
           ((C25576 * C45770 + (C26689 + C26688) * C45771 +
             (C23043 * C10150 + C26890 + C26890 + C152149 * C10156 +
              C23045 * C10151 + C26891 + C26891 + C151796 * C10157) *
                 C45772) *
                C152054 * C151956 -
            ((C26688 + C26689) * C45772 + (C24425 + C24424) * C45771 +
             C23399 * C45770) *
                C152054 * C4107) *
               C152214) *
              C151834)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
             C23049 + C23049 + C151796 * C159) *
                C45770 +
            (C46294 + C46295) * C45771 + C46312 * C45772) *
               C152054 * C152266 -
           (C48830 * C45772 + (C46297 + C46296) * C45771 +
            (C46295 + C46294) * C45770) *
               C152054 * C152263 +
           (C46312 * C45770 + (C46299 + C46298) * C45771 + C48855 * C45772) *
               C152054 * C152252 -
           ((C48853 + C48854) * C45772 + (C48852 + C48851) * C45771 +
            C48830 * C45770) *
               C152054 * C152230) *
              C151851 * C3241 +
          (((C46300 + C46301) * C45770 + (C46302 + C46303) * C45771 +
            C49353 * C45772) *
               C152054 * C152263 -
           (C46313 * C45772 + (C46301 + C46300) * C45771 +
            (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
             C23059 + C23059 + C152149 * C159) *
                C45770) *
               C152054 * C152266 -
           ((C49364 + C49365) * C45772 + (C46305 + C46304) * C45771 +
            C46313 * C45770) *
               C152054 * C152252 +
           (C49353 * C45770 + (C49365 + C49364) * C45771 +
            (C23043 * C17751 + C49358 + C49358 + C152149 * C17757 +
             C23045 * C17752 + C49359 + C49359 + C151796 * C17758) *
                C45772) *
               C152054 * C152230) *
              C151851 * C151834)) /
            (p * q * std::sqrt(p + q));
    d2ee[168] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
             C23049 + C23049 + C151796 * C159) *
                C152080 * C23040 +
            (C23380 + C23381) * C152080 * C23041 + C23401 * C23042) *
               C151952 -
           (C25051 * C23042 + (C24420 + C24421) * C152080 * C23041 +
            (C23045 * C549 + C23626 + C23626 + C151796 * C573 + C23043 * C550 +
             C23627 + C23627 + C152149 * C574) *
                C152080 * C23040) *
               C151959 +
           ((C23043 * C551 + C23628 + C23628 + C152149 * C575 + C23045 * C552 +
             C23629 + C23629 + C151796 * C576) *
                C152080 * C23040 +
            (C25068 + C25069) * C152080 * C23041 + C25077 * C23042) *
               C4779) *
              C151851 * C151828 +
          (((C23043 * C549 + C23634 + C23634 + C152149 * C573 + C23045 * C548 +
             C23635 + C23635 + C151796 * C572) *
                C152080 * C23040 +
            (C24422 + C24423) * C152080 * C23041 + C25583 * C23042) *
               C151959 -
           (C23402 * C23042 + (C23387 + C23386) * C152080 * C23041 +
            (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
             C23059 + C23059 + C152149 * C159) *
                C152080 * C23040) *
               C151952 -
           ((C26688 + C26689) * C152080 * C23042 +
            (C26690 + C26691) * C152080 * C23041 +
            (C23045 * C553 + C23644 + C23644 + C151796 * C577 + C23043 * C552 +
             C23645 + C23645 + C152149 * C576) *
                C152080 * C23040) *
               C4779) *
              C151851 * C151837 +
          (((C23043 * C144 + C23060 + C23060 + C152149 * C160 + C23045 * C145 +
             C23061 + C23061 + C151796 * C161) *
                C152080 * C23040 +
            (C23392 + C23393) * C152080 * C23041 + C23403 * C23042) *
               C151952 -
           ((C24426 + C24427) * C152080 * C23042 +
            (C24428 + C24429) * C152080 * C23041 +
            (C23045 * C547 + C23650 + C23650 + C151796 * C571 + C23043 * C548 +
             C23651 + C23651 + C152149 * C572) *
                C152080 * C23040) *
               C151959 +
           ((C23043 * C553 + C23652 + C23652 + C152149 * C577 + C23045 * C554 +
             C23653 + C23653 + C151796 * C578) *
                C152080 * C23040 +
            (C23043 * C1532 + C23654 + C23654 + C152149 * C1556 +
             C23045 * C1531 + C23655 + C23655 + C151796 * C1555) *
                C152080 * C23041 +
            (C23043 * C1541 + C23656 + C23656 + C152149 * C1565 +
             C23045 * C1542 + C23657 + C23657 + C151796 * C1566) *
                C152080 * C23042) *
               C4779) *
              C151851 * C3588)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
            C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
            C140 * C145 + C170 + C170 + C124 * C161) *
               C152080 * C152054 * C151952 -
           (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
            C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
            C134 * C550 + C587 + C587 + C121 * C574) *
               C152080 * C152054 * C151959 +
           (C134 * C551 + C588 + C588 + C121 * C575 + C136 * C552 + C589 +
            C589 + C122 * C576 + C138 * C553 + C590 + C590 + C123 * C577 +
            C140 * C554 + C591 + C591 + C124 * C578) *
               C152080 * C152054 * C4779) *
              C151851 * C151828 +
          ((C134 * C549 + C592 + C592 + C121 * C573 + C136 * C548 + C593 +
            C593 + C122 * C572 + C138 * C547 + C594 + C594 + C123 * C571 +
            C140 * C555 + C595 + C595 + C124 * C579) *
               C152080 * C152054 * C151959 -
           (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
            C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
            C134 * C143 + C174 + C174 + C121 * C159) *
               C152080 * C152054 * C151952 -
           (C140 * C556 + C596 + C596 + C124 * C580 + C138 * C554 + C597 +
            C597 + C123 * C578 + C136 * C553 + C598 + C598 + C122 * C577 +
            C134 * C552 + C599 + C599 + C121 * C576) *
               C152080 * C152054 * C4779) *
              C151851 * C151837 +
          ((C134 * C144 + C175 + C175 + C121 * C160 + C136 * C145 + C176 +
            C176 + C122 * C161 + C138 * C146 + C177 + C177 + C123 * C162 +
            C140 * C147 + C178 + C178 + C124 * C163) *
               C152080 * C152054 * C151952 -
           (C140 * C557 + C600 + C600 + C124 * C581 + C138 * C555 + C601 +
            C601 + C123 * C579 + C136 * C547 + C602 + C602 + C122 * C571 +
            C134 * C548 + C603 + C603 + C121 * C572) *
               C152080 * C152054 * C151959 +
           (C134 * C553 + C604 + C604 + C121 * C577 + C136 * C554 + C605 +
            C605 + C122 * C578 + C138 * C556 + C606 + C606 + C123 * C580 +
            C140 * C558 + C607 + C607 + C124 * C582) *
               C152080 * C152054 * C4779) *
              C151851 * C3588)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
             C23049 + C23049 + C151796 * C159) *
                C45770 +
            (C46294 + C46295) * C45771 + C46312 * C45772) *
               C152054 * C151952 -
           (C48830 * C45772 + (C46297 + C46296) * C45771 +
            (C46295 + C46294) * C45770) *
               C152054 * C151959 +
           (C46312 * C45770 + (C46299 + C46298) * C45771 + C48855 * C45772) *
               C152054 * C4779) *
              C151851 * C151828 +
          (((C46300 + C46301) * C45770 + (C46302 + C46303) * C45771 +
            C49353 * C45772) *
               C152054 * C151959 -
           (C46313 * C45772 + (C46301 + C46300) * C45771 +
            (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
             C23059 + C23059 + C152149 * C159) *
                C45770) *
               C152054 * C151952 -
           ((C49364 + C49365) * C45772 + (C46305 + C46304) * C45771 +
            C46313 * C45770) *
               C152054 * C4779) *
              C151851 * C151837 +
          (((C23043 * C144 + C23060 + C23060 + C152149 * C160 + C23045 * C145 +
             C23061 + C23061 + C151796 * C161) *
                C45770 +
            (C46306 + C46307) * C45771 + C46314 * C45772) *
               C152054 * C151952 -
           ((C46310 + C46311) * C45772 + (C46309 + C46308) * C45771 +
            (C46307 + C46306) * C45770) *
               C152054 * C151959 +
           (C46314 * C45770 + (C46311 + C46310) * C45771 +
            (C23043 * C2457 + C46256 + C46256 + C152149 * C2473 +
             C23045 * C2458 + C46257 + C46257 + C151796 * C2474) *
                C45772) *
               C152054 * C4779) *
              C151851 * C3588)) /
            (p * q * std::sqrt(p + q));
    d2ee[169] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
             C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
             C140 * C145 + C170 + C170 + C124 * C161) *
                C152080 * C152054 * C4107 -
            (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
             C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
             C134 * C550 + C587 + C587 + C121 * C574) *
                C152080 * C152054 * C151956) *
               C152258 +
           ((C134 * C1083 + C1102 + C1102 + C121 * C1095 + C136 * C1084 +
             C1103 + C1103 + C122 * C1096 + C138 * C1085 + C1104 + C1104 +
             C123 * C1097 + C140 * C1086 + C1105 + C1105 + C124 * C1098) *
                C152080 * C152054 * C151956 -
            (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
             C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
             C134 * C341 + C378 + C378 + C121 * C365) *
                C152080 * C152054 * C4107) *
               C152244 +
           ((C134 * C342 + C379 + C379 + C121 * C366 + C136 * C343 + C380 +
             C380 + C122 * C367 + C138 * C344 + C381 + C381 + C123 * C368 +
             C140 * C345 + C382 + C382 + C124 * C369) *
                C152080 * C152054 * C4107 -
            (C140 * C1535 + C1572 + C1572 + C124 * C1559 + C138 * C1536 +
             C1573 + C1573 + C123 * C1560 + C136 * C1537 + C1574 + C1574 +
             C122 * C1561 + C134 * C1538 + C1575 + C1575 + C121 * C1562) *
                C152080 * C152054 * C151956) *
               C152214) *
              C3241 +
          (((C134 * C549 + C592 + C592 + C121 * C573 + C136 * C548 + C593 +
             C593 + C122 * C572 + C138 * C547 + C594 + C594 + C123 * C571 +
             C140 * C555 + C595 + C595 + C124 * C579) *
                C152080 * C152054 * C151956 -
            (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
             C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
             C134 * C143 + C174 + C174 + C121 * C159) *
                C152080 * C152054 * C4107) *
               C152258 +
           ((C134 * C340 + C383 + C383 + C121 * C364 + C136 * C339 + C384 +
             C384 + C122 * C363 + C138 * C338 + C385 + C385 + C123 * C362 +
             C140 * C346 + C386 + C386 + C124 * C370) *
                C152080 * C152054 * C4107 -
            (C140 * C1087 + C1106 + C1106 + C124 * C1099 + C138 * C1086 +
             C1107 + C1107 + C123 * C1098 + C136 * C1085 + C1108 + C1108 +
             C122 * C1097 + C134 * C1084 + C1109 + C1109 + C121 * C1096) *
                C152080 * C152054 * C151956) *
               C152244 +
           ((C134 * C1537 + C1920 + C1920 + C121 * C1561 + C136 * C1536 +
             C1921 + C1921 + C122 * C1560 + C138 * C1535 + C1922 + C1922 +
             C123 * C1559 + C140 * C1916 + C1923 + C1923 + C124 * C1918) *
                C152080 * C152054 * C151956 -
            (C140 * C347 + C387 + C387 + C124 * C371 + C138 * C345 + C388 +
             C388 + C123 * C369 + C136 * C344 + C389 + C389 + C122 * C368 +
             C134 * C343 + C390 + C390 + C121 * C367) *
                C152080 * C152054 * C4107) *
               C152214) *
              C151834)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
            C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
            C140 * C145 + C170 + C170 + C124 * C161) *
               C152080 * C152054 * C4107 -
           (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
            C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
            C134 * C550 + C587 + C587 + C121 * C574) *
               C152080 * C152054 * C151956) *
              C151851 * C152264 +
          ((C134 * C549 + C592 + C592 + C121 * C573 + C136 * C548 + C593 +
            C593 + C122 * C572 + C138 * C547 + C594 + C594 + C123 * C571 +
            C140 * C555 + C595 + C595 + C124 * C579) *
               C152080 * C152054 * C151956 -
           (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
            C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
            C134 * C143 + C174 + C174 + C121 * C159) *
               C152080 * C152054 * C4107) *
              C151851 * C152257 +
          ((C134 * C144 + C175 + C175 + C121 * C160 + C136 * C145 + C176 +
            C176 + C122 * C161 + C138 * C146 + C177 + C177 + C123 * C162 +
            C140 * C147 + C178 + C178 + C124 * C163) *
               C152080 * C152054 * C4107 -
           (C140 * C557 + C600 + C600 + C124 * C581 + C138 * C555 + C601 +
            C601 + C123 * C579 + C136 * C547 + C602 + C602 + C122 * C571 +
            C134 * C548 + C603 + C603 + C121 * C572) *
               C152080 * C152054 * C151956) *
              C151851 * C152242 +
          ((C134 * C547 + C886 + C886 + C121 * C571 + C136 * C555 + C887 +
            C887 + C122 * C579 + C138 * C557 + C888 + C888 + C123 * C581 +
            C140 * C882 + C889 + C889 + C124 * C884) *
               C152080 * C152054 * C151956 -
           (C140 * C148 + C179 + C179 + C124 * C164 + C138 * C147 + C180 +
            C180 + C123 * C163 + C136 * C146 + C181 + C181 + C122 * C162 +
            C134 * C145 + C182 + C182 + C121 * C161) *
               C152080 * C152054 * C4107) *
              C151851 * C152218)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
             C23049 + C23049 + C151796 * C159) *
                C152080 * C23040 +
            (C23380 + C23381) * C152080 * C23041 + C23401 * C23042) *
               C4107 -
           (C25051 * C23042 + (C24420 + C24421) * C152080 * C23041 +
            (C23045 * C549 + C23626 + C23626 + C151796 * C573 + C23043 * C550 +
             C23627 + C23627 + C152149 * C574) *
                C152080 * C23040) *
               C151956) *
              C151851 * C152264 +
          (((C23043 * C549 + C23634 + C23634 + C152149 * C573 + C23045 * C548 +
             C23635 + C23635 + C151796 * C572) *
                C152080 * C23040 +
            (C24422 + C24423) * C152080 * C23041 + C25583 * C23042) *
               C151956 -
           (C23402 * C23042 + (C23387 + C23386) * C152080 * C23041 +
            (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
             C23059 + C23059 + C152149 * C159) *
                C152080 * C23040) *
               C4107) *
              C151851 * C152257 +
          (((C23043 * C144 + C23060 + C23060 + C152149 * C160 + C23045 * C145 +
             C23061 + C23061 + C151796 * C161) *
                C152080 * C23040 +
            (C23392 + C23393) * C152080 * C23041 + C23403 * C23042) *
               C4107 -
           ((C24426 + C24427) * C152080 * C23042 +
            (C24428 + C24429) * C152080 * C23041 +
            (C23045 * C547 + C23650 + C23650 + C151796 * C571 + C23043 * C548 +
             C23651 + C23651 + C152149 * C572) *
                C152080 * C23040) *
               C151956) *
              C151851 * C152242 +
          (((C23043 * C547 + C24068 + C24068 + C152149 * C571 + C23045 * C555 +
             C24069 + C24069 + C151796 * C579) *
                C152080 * C23040 +
            (C23043 * C1086 + C24070 + C24070 + C152149 * C1098 +
             C23045 * C1087 + C24071 + C24071 + C151796 * C1099) *
                C152080 * C23041 +
            (C23043 * C1535 + C24072 + C24072 + C152149 * C1559 +
             C23045 * C1916 + C24073 + C24073 + C151796 * C1918) *
                C152080 * C23042) *
               C151956 -
           ((C23873 + C23872) * C152080 * C23042 +
            (C23871 + C23870) * C152080 * C23041 +
            (C23045 * C146 + C23070 + C23070 + C151796 * C162 + C23043 * C145 +
             C23071 + C23071 + C152149 * C161) *
                C152080 * C23040) *
               C4107) *
              C151851 * C152218)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
              C23049 + C23049 + C151796 * C159) *
                 C152080 * C23040 +
             (C23380 + C23381) * C152080 * C23041 + C23401 * C23042) *
                C4107 -
            (C25051 * C23042 + (C24420 + C24421) * C152080 * C23041 +
             (C23045 * C549 + C23626 + C23626 + C151796 * C573 + C23043 * C550 +
              C23627 + C23627 + C152149 * C574) *
                 C152080 * C23040) *
                C151956) *
               C152258 +
           (((C24421 + C24420) * C152080 * C23040 +
             (C24419 + C24418) * C152080 * C23041 + C25797 * C23042) *
                C151956 -
            (C24789 * C23042 + (C23383 + C23382) * C152080 * C23041 +
             (C23381 + C23380) * C152080 * C23040) *
                C4107) *
               C152244 +
           ((C23401 * C23040 + (C23385 + C23384) * C152080 * C23041 +
             C24803 * C23042) *
                C4107 -
            ((C25802 + C25803) * C152080 * C23042 +
             (C25073 + C25072) * C152080 * C23041 + C25051 * C23040) *
                C151956) *
               C152214) *
              C3241 +
          ((((C23043 * C549 + C23634 + C23634 + C152149 * C573 + C23045 * C548 +
              C23635 + C23635 + C151796 * C572) *
                 C152080 * C23040 +
             (C24422 + C24423) * C152080 * C23041 + C25583 * C23042) *
                C151956 -
            (C23402 * C23042 + (C23387 + C23386) * C152080 * C23041 +
             (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
              C23059 + C23059 + C152149 * C159) *
                 C152080 * C23040) *
                C4107) *
               C152258 +
           (((C23386 + C23387) * C152080 * C23040 +
             (C23388 + C23389) * C152080 * C23041 + C25279 * C23042) *
                C4107 -
            ((C25588 + C25589) * C152080 * C23042 +
             (C24425 + C24424) * C152080 * C23041 +
             (C24423 + C24422) * C152080 * C23040) *
                C151956) *
               C152244 +
           ((C25583 * C23040 + (C25589 + C25588) * C152080 * C23041 +
             (C23043 * C8842 + C25581 + C25581 + C152149 * C8848 +
              C23045 * C8843 + C25582 + C25582 + C151796 * C8849) *
                 C152080 * C23042) *
                C151956 -
            ((C25284 + C25285) * C152080 * C23042 +
             (C23391 + C23390) * C152080 * C23041 + C23402 * C23040) *
                C4107) *
               C152214) *
              C151834)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
             C23049 + C23049 + C151796 * C159) *
                C45770 +
            (C46294 + C46295) * C45771 + C46312 * C45772) *
               C152054 * C4107 -
           (C48830 * C45772 + (C46297 + C46296) * C45771 +
            (C46295 + C46294) * C45770) *
               C152054 * C151956) *
              C151851 * C152264 +
          (((C46300 + C46301) * C45770 + (C46302 + C46303) * C45771 +
            C49353 * C45772) *
               C152054 * C151956 -
           (C46313 * C45772 + (C46301 + C46300) * C45771 +
            (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
             C23059 + C23059 + C152149 * C159) *
                C45770) *
               C152054 * C4107) *
              C151851 * C152257 +
          (((C23043 * C144 + C23060 + C23060 + C152149 * C160 + C23045 * C145 +
             C23061 + C23061 + C151796 * C161) *
                C45770 +
            (C46306 + C46307) * C45771 + C46314 * C45772) *
               C152054 * C4107 -
           ((C46310 + C46311) * C45772 + (C46309 + C46308) * C45771 +
            (C46307 + C46306) * C45770) *
               C152054 * C151956) *
              C151851 * C152242 +
          (((C46723 + C46724) * C45770 + (C46725 + C46726) * C45771 +
            (C23043 * C2451 + C46713 + C46713 + C152149 * C2467 +
             C23045 * C2818 + C46714 + C46714 + C151796 * C2820) *
                C45772) *
               C152054 * C151956 -
           ((C46726 + C46725) * C45772 + (C46724 + C46723) * C45771 +
            (C23045 * C146 + C23070 + C23070 + C151796 * C162 + C23043 * C145 +
             C23071 + C23071 + C152149 * C161) *
                C45770) *
               C152054 * C4107) *
              C151851 * C152218)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
              C23049 + C23049 + C151796 * C159) *
                 C45770 +
             (C46294 + C46295) * C45771 + C46312 * C45772) *
                C152054 * C4107 -
            (C48830 * C45772 + (C46297 + C46296) * C45771 +
             (C46295 + C46294) * C45770) *
                C152054 * C151956) *
               C152258 +
           (((C24421 + C24420) * C45770 + (C25068 + C25069) * C45771 +
             C49563 * C45772) *
                C152054 * C151956 -
            (C47587 * C45772 + (C24420 + C24421) * C45771 +
             (C23381 + C23380) * C45770) *
                C152054 * C4107) *
               C152244 +
           ((C23398 * C45770 + (C24419 + C24418) * C45771 + C25076 * C45772) *
                C152054 * C4107 -
            ((C27110 + C27111) * C45772 + (C25071 + C25070) * C45771 +
             C25028 * C45770) *
                C152054 * C151956) *
               C152214) *
              C3241 +
          ((((C46300 + C46301) * C45770 + (C46302 + C46303) * C45771 +
             C49353 * C45772) *
                C152054 * C151956 -
            (C46313 * C45772 + (C46301 + C46300) * C45771 +
             (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
              C23059 + C23059 + C152149 * C159) *
                 C45770) *
                C152054 * C4107) *
               C152258 +
           (((C23386 + C23387) * C45770 + (C24422 + C24423) * C45771 +
             C49146 * C45772) *
                C152054 * C4107 -
            ((C49157 + C49158) * C45772 + (C26690 + C26691) * C45771 +
             (C24423 + C24422) * C45770) *
                C152054 * C151956) *
               C152244 +
           ((C25576 * C45770 + (C26689 + C26688) * C45771 +
             (C23043 * C10150 + C26890 + C26890 + C152149 * C10156 +
              C23045 * C10151 + C26891 + C26891 + C151796 * C10157) *
                 C45772) *
                C152054 * C151956 -
            ((C26688 + C26689) * C45772 + (C24425 + C24424) * C45771 +
             C23399 * C45770) *
                C152054 * C4107) *
               C152214) *
              C151834)) /
            (p * q * std::sqrt(p + q));
    d2ee[170] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
            C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
            C140 * C145 + C170 + C170 + C124 * C161) *
               C152080 * C152054 * C151869 * C1709 -
           (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
            C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
            C134 * C341 + C378 + C378 + C121 * C365) *
               C152080 * C152054 * C151869 * C1710 +
           (C134 * C342 + C379 + C379 + C121 * C366 + C136 * C343 + C380 +
            C380 + C122 * C367 + C138 * C344 + C381 + C381 + C123 * C368 +
            C140 * C345 + C382 + C382 + C124 * C369) *
               C152080 * C152054 * C151869 * C1711 -
           (C140 * C1353 + C1378 + C1378 + C124 * C1369 + C138 * C1354 + C1379 +
            C1379 + C123 * C1370 + C136 * C1355 + C1380 + C1380 + C122 * C1371 +
            C134 * C1356 + C1381 + C1381 + C121 * C1372) *
               C152080 * C152054 * C151869 * C152224) *
              C152158 +
          ((C134 * C340 + C383 + C383 + C121 * C364 + C136 * C339 + C384 +
            C384 + C122 * C363 + C138 * C338 + C385 + C385 + C123 * C362 +
            C140 * C346 + C386 + C386 + C124 * C370) *
               C152080 * C152054 * C151869 * C1710 -
           (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
            C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
            C134 * C143 + C174 + C174 + C121 * C159) *
               C152080 * C152054 * C151869 * C1709 -
           (C140 * C347 + C387 + C387 + C124 * C371 + C138 * C345 + C388 +
            C388 + C123 * C369 + C136 * C344 + C389 + C389 + C122 * C368 +
            C134 * C343 + C390 + C390 + C121 * C367) *
               C152080 * C152054 * C151869 * C1711 +
           (C134 * C1355 + C1719 + C1719 + C121 * C1371 + C136 * C1354 + C1720 +
            C1720 + C122 * C1370 + C138 * C1353 + C1721 + C1721 + C123 * C1369 +
            C140 * C1715 + C1722 + C1722 + C124 * C1717) *
               C152080 * C152054 * C151869 * C152224) *
              C151834)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
            C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
            C140 * C145 + C170 + C170 + C124 * C161) *
               C152080 * C152054 * C151869 * C152172 -
           (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
            C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
            C134 * C341 + C378 + C378 + C121 * C365) *
               C152080 * C152054 * C151869 * C151914) *
              C739 +
          ((C134 * C340 + C383 + C383 + C121 * C364 + C136 * C339 + C384 +
            C384 + C122 * C363 + C138 * C338 + C385 + C385 + C123 * C362 +
            C140 * C346 + C386 + C386 + C124 * C370) *
               C152080 * C152054 * C151869 * C151914 -
           (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
            C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
            C134 * C143 + C174 + C174 + C121 * C159) *
               C152080 * C152054 * C151869 * C152172) *
              C740 +
          ((C134 * C144 + C175 + C175 + C121 * C160 + C136 * C145 + C176 +
            C176 + C122 * C161 + C138 * C146 + C177 + C177 + C123 * C162 +
            C140 * C147 + C178 + C178 + C124 * C163) *
               C152080 * C152054 * C151869 * C152172 -
           (C140 * C348 + C391 + C391 + C124 * C372 + C138 * C346 + C392 +
            C392 + C123 * C370 + C136 * C338 + C393 + C393 + C122 * C362 +
            C134 * C339 + C394 + C394 + C121 * C363) *
               C152080 * C152054 * C151869 * C151914) *
              C741 +
          ((C134 * C338 + C747 + C747 + C121 * C362 + C136 * C346 + C748 +
            C748 + C122 * C370 + C138 * C348 + C749 + C749 + C123 * C372 +
            C140 * C743 + C750 + C750 + C124 * C745) *
               C152080 * C152054 * C151869 * C151914 -
           (C140 * C148 + C179 + C179 + C124 * C164 + C138 * C147 + C180 +
            C180 + C123 * C163 + C136 * C146 + C181 + C181 + C122 * C162 +
            C134 * C145 + C182 + C182 + C121 * C161) *
               C152080 * C152054 * C151869 * C152172) *
              C152218)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
             C23049 + C23049 + C151796 * C159) *
                C152080 * C23040 +
            (C23380 + C23381) * C152080 * C23041 + C23401 * C23042) *
               C151869 * C152172 -
           ((C23384 + C23385) * C152080 * C23042 +
            (C23383 + C23382) * C152080 * C23041 +
            (C23381 + C23380) * C152080 * C23040) *
               C151869 * C151914) *
              C739 +
          (((C23386 + C23387) * C152080 * C23040 +
            (C23388 + C23389) * C152080 * C23041 +
            (C23390 + C23391) * C152080 * C23042) *
               C151869 * C151914 -
           (C23402 * C23042 + (C23387 + C23386) * C152080 * C23041 +
            (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
             C23059 + C23059 + C152149 * C159) *
                C152080 * C23040) *
               C151869 * C152172) *
              C740 +
          (((C23043 * C144 + C23060 + C23060 + C152149 * C160 + C23045 * C145 +
             C23061 + C23061 + C151796 * C161) *
                C152080 * C23040 +
            (C23392 + C23393) * C152080 * C23041 + C23403 * C23042) *
               C151869 * C152172 -
           ((C23396 + C23397) * C152080 * C23042 +
            (C23395 + C23394) * C152080 * C23041 +
            (C23393 + C23392) * C152080 * C23040) *
               C151869 * C151914) *
              C741 +
          (((C23870 + C23871) * C152080 * C23040 +
            (C23872 + C23873) * C152080 * C23041 +
            (C23043 * C1353 + C23860 + C23860 + C152149 * C1369 +
             C23045 * C1715 + C23861 + C23861 + C151796 * C1717) *
                C152080 * C23042) *
               C151869 * C151914 -
           ((C23873 + C23872) * C152080 * C23042 +
            (C23871 + C23870) * C152080 * C23041 +
            (C23045 * C146 + C23070 + C23070 + C151796 * C162 + C23043 * C145 +
             C23071 + C23071 + C152149 * C161) *
                C152080 * C23040) *
               C151869 * C152172) *
              C152218)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
             C23049 + C23049 + C151796 * C159) *
                C152080 * C23040 +
            (C23380 + C23381) * C152080 * C23041 + C23401 * C23042) *
               C151869 * C1709 -
           (C24789 * C23042 + (C23383 + C23382) * C152080 * C23041 +
            (C23381 + C23380) * C152080 * C23040) *
               C151869 * C1710 +
           (C23401 * C23040 + (C23385 + C23384) * C152080 * C23041 +
            C24803 * C23042) *
               C151869 * C1711 -
           ((C24800 + C24801) * C152080 * C23042 +
            (C24799 + C24798) * C152080 * C23041 + C24789 * C23040) *
               C151869 * C152224) *
              C152158 +
          (((C23386 + C23387) * C152080 * C23040 +
            (C23388 + C23389) * C152080 * C23041 + C25279 * C23042) *
               C151869 * C1710 -
           (C23402 * C23042 + (C23387 + C23386) * C152080 * C23041 +
            (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
             C23059 + C23059 + C152149 * C159) *
                C152080 * C23040) *
               C151869 * C1709 -
           ((C25284 + C25285) * C152080 * C23042 +
            (C23391 + C23390) * C152080 * C23041 + C23402 * C23040) *
               C151869 * C1711 +
           (C25279 * C23040 + (C25285 + C25284) * C152080 * C23041 +
            (C23043 * C7802 + C25277 + C25277 + C152149 * C7808 +
             C23045 * C7803 + C25278 + C25278 + C151796 * C7809) *
                C152080 * C23042) *
               C151869 * C152224) *
              C151834)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
             C23049 + C23049 + C151796 * C159) *
                C45770 +
            (C46294 + C46295) * C45771 + C46312 * C45772) *
               C152054 * C151869 * C152172 -
           ((C25069 + C25068) * C45772 + (C24420 + C24421) * C45771 +
            (C23381 + C23380) * C45770) *
               C152054 * C151869 * C151914) *
              C739 +
          (((C23386 + C23387) * C45770 + (C24422 + C24423) * C45771 +
            (C26691 + C26690) * C45772) *
               C152054 * C151869 * C151914 -
           (C46313 * C45772 + (C46301 + C46300) * C45771 +
            (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
             C23059 + C23059 + C152149 * C159) *
                C45770) *
               C152054 * C151869 * C152172) *
              C740 +
          (((C23043 * C144 + C23060 + C23060 + C152149 * C160 + C23045 * C145 +
             C23061 + C23061 + C151796 * C161) *
                C45770 +
            (C46306 + C46307) * C45771 + C46314 * C45772) *
               C152054 * C151869 * C152172 -
           ((C23045 * C1531 + C23655 + C23655 + C151796 * C1555 +
             C23043 * C1532 + C23654 + C23654 + C152149 * C1556) *
                C45772 +
            (C24428 + C24429) * C45771 + (C23393 + C23392) * C45770) *
               C152054 * C151869 * C151914) *
              C741 +
          (((C23870 + C23871) * C45770 +
            (C23043 * C1086 + C24070 + C24070 + C152149 * C1098 +
             C23045 * C1087 + C24071 + C24071 + C151796 * C1099) *
                C45771 +
            (C23043 * C1531 + C46509 + C46509 + C152149 * C1555 +
             C23045 * C2677 + C46510 + C46510 + C151796 * C2679) *
                C45772) *
               C152054 * C151869 * C151914 -
           ((C23045 * C556 + C45774 + C45774 + C151796 * C580 + C23043 * C554 +
             C45775 + C45775 + C152149 * C578) *
                C45772 +
            (C23045 * C555 + C24069 + C24069 + C151796 * C579 + C23043 * C547 +
             C24068 + C24068 + C152149 * C571) *
                C45771 +
            (C23045 * C146 + C23070 + C23070 + C151796 * C162 + C23043 * C145 +
             C23071 + C23071 + C152149 * C161) *
                C45770) *
               C152054 * C151869 * C152172) *
              C152218)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
             C23049 + C23049 + C151796 * C159) *
                C45770 +
            (C46294 + C46295) * C45771 + C46312 * C45772) *
               C152054 * C151869 * C1709 -
           (C47587 * C45772 + (C24420 + C24421) * C45771 +
            (C23381 + C23380) * C45770) *
               C152054 * C151869 * C1710 +
           (C23398 * C45770 + (C24419 + C24418) * C45771 + C25076 * C45772) *
               C152054 * C151869 * C1711 -
           ((C25074 + C25075) * C45772 + (C25073 + C25072) * C45771 +
            C24776 * C45770) *
               C152054 * C151869 * C152224) *
              C152158 +
          (((C23386 + C23387) * C45770 + (C24422 + C24423) * C45771 +
            (C26691 + C26690) * C45772) *
               C152054 * C151869 * C1710 -
           (C46313 * C45772 + (C46301 + C46300) * C45771 +
            (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
             C23059 + C23059 + C152149 * C159) *
                C45770) *
               C152054 * C151869 * C1709 -
           ((C26688 + C26689) * C45772 + (C24425 + C24424) * C45771 +
            C23399 * C45770) *
               C152054 * C151869 * C1711 +
           (C25272 * C45770 + (C25589 + C25588) * C45771 +
            (C23043 * C8065 + C26678 + C26678 + C152149 * C8071 +
             C23045 * C8066 + C26679 + C26679 + C151796 * C8072) *
                C45772) *
               C152054 * C151869 * C152224) *
              C151834)) /
            (p * q * std::sqrt(p + q));
    d2ee[171] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
            C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
            C140 * C145 + C170 + C170 + C124 * C161) *
               C152080 * C152054 * C152173 -
           (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
            C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
            C134 * C550 + C587 + C587 + C121 * C574) *
               C152080 * C152054 * C151956) *
              C1709 +
          ((C134 * C1083 + C1102 + C1102 + C121 * C1095 + C136 * C1084 + C1103 +
            C1103 + C122 * C1096 + C138 * C1085 + C1104 + C1104 + C123 * C1097 +
            C140 * C1086 + C1105 + C1105 + C124 * C1098) *
               C152080 * C152054 * C151956 -
           (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
            C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
            C134 * C341 + C378 + C378 + C121 * C365) *
               C152080 * C152054 * C152173) *
              C1710 +
          ((C134 * C342 + C379 + C379 + C121 * C366 + C136 * C343 + C380 +
            C380 + C122 * C367 + C138 * C344 + C381 + C381 + C123 * C368 +
            C140 * C345 + C382 + C382 + C124 * C369) *
               C152080 * C152054 * C152173 -
           (C140 * C1535 + C1572 + C1572 + C124 * C1559 + C138 * C1536 + C1573 +
            C1573 + C123 * C1560 + C136 * C1537 + C1574 + C1574 + C122 * C1561 +
            C134 * C1538 + C1575 + C1575 + C121 * C1562) *
               C152080 * C152054 * C151956) *
              C1711 +
          ((C134 * C2053 + C2066 + C2066 + C121 * C2061 + C136 * C2054 + C2067 +
            C2067 + C122 * C2062 + C138 * C2055 + C2068 + C2068 + C123 * C2063 +
            C140 * C2056 + C2069 + C2069 + C124 * C2064) *
               C152080 * C152054 * C151956 -
           (C140 * C1353 + C1378 + C1378 + C124 * C1369 + C138 * C1354 + C1379 +
            C1379 + C123 * C1370 + C136 * C1355 + C1380 + C1380 + C122 * C1371 +
            C134 * C1356 + C1381 + C1381 + C121 * C1372) *
               C152080 * C152054 * C152173) *
              C152224) *
         C151823) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
             C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
             C140 * C145 + C170 + C170 + C124 * C161) *
                C152080 * C152054 * C152173 -
            (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
             C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
             C134 * C550 + C587 + C587 + C121 * C574) *
                C152080 * C152054 * C151956) *
               C152172 +
           ((C134 * C1083 + C1102 + C1102 + C121 * C1095 + C136 * C1084 +
             C1103 + C1103 + C122 * C1096 + C138 * C1085 + C1104 + C1104 +
             C123 * C1097 + C140 * C1086 + C1105 + C1105 + C124 * C1098) *
                C152080 * C152054 * C151956 -
            (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
             C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
             C134 * C341 + C378 + C378 + C121 * C365) *
                C152080 * C152054 * C152173) *
               C151914) *
              C335 +
          (((C134 * C549 + C592 + C592 + C121 * C573 + C136 * C548 + C593 +
             C593 + C122 * C572 + C138 * C547 + C594 + C594 + C123 * C571 +
             C140 * C555 + C595 + C595 + C124 * C579) *
                C152080 * C152054 * C151956 -
            (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
             C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
             C134 * C143 + C174 + C174 + C121 * C159) *
                C152080 * C152054 * C152173) *
               C152172 +
           ((C134 * C340 + C383 + C383 + C121 * C364 + C136 * C339 + C384 +
             C384 + C122 * C363 + C138 * C338 + C385 + C385 + C123 * C362 +
             C140 * C346 + C386 + C386 + C124 * C370) *
                C152080 * C152054 * C152173 -
            (C140 * C1087 + C1106 + C1106 + C124 * C1099 + C138 * C1086 +
             C1107 + C1107 + C123 * C1098 + C136 * C1085 + C1108 + C1108 +
             C122 * C1097 + C134 * C1084 + C1109 + C1109 + C121 * C1096) *
                C152080 * C152054 * C151956) *
               C151914) *
              C336 +
          (((C134 * C144 + C175 + C175 + C121 * C160 + C136 * C145 + C176 +
             C176 + C122 * C161 + C138 * C146 + C177 + C177 + C123 * C162 +
             C140 * C147 + C178 + C178 + C124 * C163) *
                C152080 * C152054 * C152173 -
            (C140 * C557 + C600 + C600 + C124 * C581 + C138 * C555 + C601 +
             C601 + C123 * C579 + C136 * C547 + C602 + C602 + C122 * C571 +
             C134 * C548 + C603 + C603 + C121 * C572) *
                C152080 * C152054 * C151956) *
               C152172 +
           ((C134 * C1085 + C1110 + C1110 + C121 * C1097 + C136 * C1086 +
             C1111 + C1111 + C122 * C1098 + C138 * C1087 + C1112 + C1112 +
             C123 * C1099 + C140 * C1088 + C1113 + C1113 + C124 * C1100) *
                C152080 * C152054 * C151956 -
            (C140 * C348 + C391 + C391 + C124 * C372 + C138 * C346 + C392 +
             C392 + C123 * C370 + C136 * C338 + C393 + C393 + C122 * C362 +
             C134 * C339 + C394 + C394 + C121 * C363) *
                C152080 * C152054 * C152173) *
               C151914) *
              C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
              C23049 + C23049 + C151796 * C159) *
                 C152080 * C23040 +
             (C23380 + C23381) * C152080 * C23041 + C23401 * C23042) *
                C152173 -
            ((C24418 + C24419) * C152080 * C23042 +
             (C24420 + C24421) * C152080 * C23041 +
             (C23045 * C549 + C23626 + C23626 + C151796 * C573 + C23043 * C550 +
              C23627 + C23627 + C152149 * C574) *
                 C152080 * C23040) *
                C151956) *
               C152172 +
           (((C24421 + C24420) * C152080 * C23040 +
             (C24419 + C24418) * C152080 * C23041 +
             (C23043 * C2053 + C24372 + C24372 + C152149 * C2061 +
              C23045 * C2054 + C24373 + C24373 + C151796 * C2062) *
                 C152080 * C23042) *
                C151956 -
            ((C23384 + C23385) * C152080 * C23042 +
             (C23383 + C23382) * C152080 * C23041 +
             (C23381 + C23380) * C152080 * C23040) *
                C152173) *
               C151914) *
              C335 +
          ((((C23043 * C549 + C23634 + C23634 + C152149 * C573 + C23045 * C548 +
              C23635 + C23635 + C151796 * C572) *
                 C152080 * C23040 +
             (C24422 + C24423) * C152080 * C23041 +
             (C24424 + C24425) * C152080 * C23042) *
                C151956 -
            (C23402 * C23042 + (C23387 + C23386) * C152080 * C23041 +
             (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
              C23059 + C23059 + C152149 * C159) *
                 C152080 * C23040) *
                C152173) *
               C152172 +
           (((C23386 + C23387) * C152080 * C23040 +
             (C23388 + C23389) * C152080 * C23041 +
             (C23390 + C23391) * C152080 * C23042) *
                C152173 -
            ((C23045 * C2055 + C24382 + C24382 + C151796 * C2063 +
              C23043 * C2054 + C24383 + C24383 + C152149 * C2062) *
                 C152080 * C23042 +
             (C24425 + C24424) * C152080 * C23041 +
             (C24423 + C24422) * C152080 * C23040) *
                C151956) *
               C151914) *
              C336 +
          ((((C23043 * C144 + C23060 + C23060 + C152149 * C160 + C23045 * C145 +
              C23061 + C23061 + C151796 * C161) *
                 C152080 * C23040 +
             (C23392 + C23393) * C152080 * C23041 + C23403 * C23042) *
                C152173 -
            ((C24426 + C24427) * C152080 * C23042 +
             (C24428 + C24429) * C152080 * C23041 +
             (C23045 * C547 + C23650 + C23650 + C151796 * C571 + C23043 * C548 +
              C23651 + C23651 + C152149 * C572) *
                 C152080 * C23040) *
                C151956) *
               C152172 +
           (((C24429 + C24428) * C152080 * C23040 +
             (C24427 + C24426) * C152080 * C23041 +
             (C23043 * C2055 + C24392 + C24392 + C152149 * C2063 +
              C23045 * C2056 + C24393 + C24393 + C151796 * C2064) *
                 C152080 * C23042) *
                C151956 -
            ((C23396 + C23397) * C152080 * C23042 +
             (C23395 + C23394) * C152080 * C23041 +
             (C23393 + C23392) * C152080 * C23040) *
                C152173) *
               C151914) *
              C152208)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
             C23049 + C23049 + C151796 * C159) *
                C152080 * C23040 +
            (C23380 + C23381) * C152080 * C23041 + C23401 * C23042) *
               C152173 -
           (C25051 * C23042 + (C24420 + C24421) * C152080 * C23041 +
            (C23045 * C549 + C23626 + C23626 + C151796 * C573 + C23043 * C550 +
             C23627 + C23627 + C152149 * C574) *
                C152080 * C23040) *
               C151956) *
              C1709 +
          (((C24421 + C24420) * C152080 * C23040 +
            (C24419 + C24418) * C152080 * C23041 + C25797 * C23042) *
               C151956 -
           (C24789 * C23042 + (C23383 + C23382) * C152080 * C23041 +
            (C23381 + C23380) * C152080 * C23040) *
               C152173) *
              C1710 +
          ((C23401 * C23040 + (C23385 + C23384) * C152080 * C23041 +
            C24803 * C23042) *
               C152173 -
           ((C25802 + C25803) * C152080 * C23042 +
            (C25073 + C25072) * C152080 * C23041 + C25051 * C23040) *
               C151956) *
              C1711 +
          ((C25797 * C23040 + (C25803 + C25802) * C152080 * C23041 +
            (C23043 * C25783 + C25795 + C25795 + C152149 * C25787 +
             C23045 * C25784 + C25796 + C25796 + C151796 * C25788) *
                C152080 * C23042) *
               C151956 -
           ((C24800 + C24801) * C152080 * C23042 +
            (C24799 + C24798) * C152080 * C23041 + C24789 * C23040) *
               C152173) *
              C152224) *
         C151823) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
              C23049 + C23049 + C151796 * C159) *
                 C45770 +
             (C46294 + C46295) * C45771 + C46312 * C45772) *
                C152054 * C152173 -
            ((C46298 + C46299) * C45772 + (C46297 + C46296) * C45771 +
             (C46295 + C46294) * C45770) *
                C152054 * C151956) *
               C152172 +
           (((C24421 + C24420) * C45770 + (C25068 + C25069) * C45771 +
             (C27113 + C27112) * C45772) *
                C152054 * C151956 -
            ((C25069 + C25068) * C45772 + (C24420 + C24421) * C45771 +
             (C23381 + C23380) * C45770) *
                C152054 * C152173) *
               C151914) *
              C335 +
          ((((C46300 + C46301) * C45770 + (C46302 + C46303) * C45771 +
             (C46304 + C46305) * C45772) *
                C152054 * C151956 -
            (C46313 * C45772 + (C46301 + C46300) * C45771 +
             (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
              C23059 + C23059 + C152149 * C159) *
                 C45770) *
                C152054 * C152173) *
               C152172 +
           (((C23386 + C23387) * C45770 + (C24422 + C24423) * C45771 +
             (C26691 + C26690) * C45772) *
                C152054 * C152173 -
            ((C23045 * C2957 + C26889 + C26889 + C151796 * C2965 +
              C23043 * C2956 + C26888 + C26888 + C152149 * C2964) *
                 C45772 +
             (C26690 + C26691) * C45771 + (C24423 + C24422) * C45770) *
                C152054 * C151956) *
               C151914) *
              C336 +
          ((((C23043 * C144 + C23060 + C23060 + C152149 * C160 + C23045 * C145 +
              C23061 + C23061 + C151796 * C161) *
                 C45770 +
             (C46306 + C46307) * C45771 + C46314 * C45772) *
                C152054 * C152173 -
            ((C46310 + C46311) * C45772 + (C46309 + C46308) * C45771 +
             (C46307 + C46306) * C45770) *
                C152054 * C151956) *
               C152172 +
           (((C24429 + C24428) * C45770 + (C47027 + C47028) * C45771 +
             (C23043 * C2957 + C47021 + C47021 + C152149 * C2965 +
              C23045 * C2958 + C47022 + C47022 + C151796 * C2966) *
                 C45772) *
                C152054 * C151956 -
            ((C47028 + C47027) * C45772 + (C24428 + C24429) * C45771 +
             (C23393 + C23392) * C45770) *
                C152054 * C152173) *
               C151914) *
              C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
             C23049 + C23049 + C151796 * C159) *
                C45770 +
            (C46294 + C46295) * C45771 + C46312 * C45772) *
               C152054 * C152173 -
           ((C46298 + C46299) * C45772 + (C46297 + C46296) * C45771 +
            (C46295 + C46294) * C45770) *
               C152054 * C151956) *
              C1709 +
          (((C24421 + C24420) * C45770 + (C25068 + C25069) * C45771 +
            (C27113 + C27112) * C45772) *
               C152054 * C151956 -
           (C47587 * C45772 + (C24420 + C24421) * C45771 +
            (C23381 + C23380) * C45770) *
               C152054 * C152173) *
              C1710 +
          ((C23398 * C45770 + (C24419 + C24418) * C45771 + C25076 * C45772) *
               C152054 * C152173 -
           ((C27110 + C27111) * C45772 + (C25071 + C25070) * C45771 +
            C25028 * C45770) *
               C152054 * C151956) *
              C1711 +
          ((C25790 * C45770 + (C25075 + C25074) * C45771 +
            (C23043 * C27085 + C27100 + C27100 + C152149 * C27089 +
             C23045 * C27086 + C27101 + C27101 + C151796 * C27090) *
                C45772) *
               C152054 * C151956 -
           ((C25074 + C25075) * C45772 + (C25073 + C25072) * C45771 +
            C24776 * C45770) *
               C152054 * C152173) *
              C152224) *
         C151823) /
            (p * q * std::sqrt(p + q));
    d2ee[172] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
               C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
               C140 * C145 + C170 + C170 + C124 * C161) *
                  C152080 * C152054 * C151869 * C151851 * C129 -
              (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
               C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
               C134 * C143 + C174 + C174 + C121 * C159) *
                  C152080 * C152054 * C151869 * C151851 * C130 +
              (C134 * C144 + C175 + C175 + C121 * C160 + C136 * C145 + C176 +
               C176 + C122 * C161 + C138 * C146 + C177 + C177 + C123 * C162 +
               C140 * C147 + C178 + C178 + C124 * C163) *
                  C152080 * C152054 * C151869 * C151851 * C131 -
              (C140 * C148 + C179 + C179 + C124 * C164 + C138 * C147 + C180 +
               C180 + C123 * C163 + C136 * C146 + C181 + C181 + C122 * C162 +
               C134 * C145 + C182 + C182 + C121 * C161) *
                  C152080 * C152054 * C151869 * C151851 * C132 +
              (C134 * C146 + C183 + C183 + C121 * C162 + C136 * C147 + C184 +
               C184 + C122 * C163 + C138 * C148 + C185 + C185 + C123 * C164 +
               C140 * C149 + C186 + C186 + C124 * C165) *
                  C152080 * C152054 * C151869 * C151851 * C133) +
         std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
                C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
                C140 * C145 + C170 + C170 + C124 * C161) *
                   C152080 * C152054 * C151869 * C152258 -
               (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
                C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
                C134 * C341 + C378 + C378 + C121 * C365) *
                   C152080 * C152054 * C151869 * C152244 +
               (C134 * C342 + C379 + C379 + C121 * C366 + C136 * C343 + C380 +
                C380 + C122 * C367 + C138 * C344 + C381 + C381 + C123 * C368 +
                C140 * C345 + C382 + C382 + C124 * C369) *
                   C152080 * C152054 * C151869 * C152214) *
                  C335 +
              ((C134 * C340 + C383 + C383 + C121 * C364 + C136 * C339 + C384 +
                C384 + C122 * C363 + C138 * C338 + C385 + C385 + C123 * C362 +
                C140 * C346 + C386 + C386 + C124 * C370) *
                   C152080 * C152054 * C151869 * C152244 -
               (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
                C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
                C134 * C143 + C174 + C174 + C121 * C159) *
                   C152080 * C152054 * C151869 * C152258 -
               (C140 * C347 + C387 + C387 + C124 * C371 + C138 * C345 + C388 +
                C388 + C123 * C369 + C136 * C344 + C389 + C389 + C122 * C368 +
                C134 * C343 + C390 + C390 + C121 * C367) *
                   C152080 * C152054 * C151869 * C152214) *
                  C336 +
              ((C134 * C144 + C175 + C175 + C121 * C160 + C136 * C145 + C176 +
                C176 + C122 * C161 + C138 * C146 + C177 + C177 + C123 * C162 +
                C140 * C147 + C178 + C178 + C124 * C163) *
                   C152080 * C152054 * C151869 * C152258 -
               (C140 * C348 + C391 + C391 + C124 * C372 + C138 * C346 + C392 +
                C392 + C123 * C370 + C136 * C338 + C393 + C393 + C122 * C362 +
                C134 * C339 + C394 + C394 + C121 * C363) *
                   C152080 * C152054 * C151869 * C152244 +
               (C134 * C344 + C395 + C395 + C121 * C368 + C136 * C345 + C396 +
                C396 + C122 * C369 + C138 * C347 + C397 + C397 + C123 * C371 +
                C140 * C349 + C398 + C398 + C124 * C373) *
                   C152080 * C152054 * C151869 * C152214) *
                  C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
            C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
            C140 * C145 + C170 + C170 + C124 * C161) *
               C152080 * C152054 * C152259 -
           (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
            C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
            C134 * C550 + C587 + C587 + C121 * C574) *
               C152080 * C152054 * C152246 +
           (C134 * C551 + C588 + C588 + C121 * C575 + C136 * C552 + C589 +
            C589 + C122 * C576 + C138 * C553 + C590 + C590 + C123 * C577 +
            C140 * C554 + C591 + C591 + C124 * C578) *
               C152080 * C152054 * C152217) *
              C151851 * C335 +
          ((C134 * C549 + C592 + C592 + C121 * C573 + C136 * C548 + C593 +
            C593 + C122 * C572 + C138 * C547 + C594 + C594 + C123 * C571 +
            C140 * C555 + C595 + C595 + C124 * C579) *
               C152080 * C152054 * C152246 -
           (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
            C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
            C134 * C143 + C174 + C174 + C121 * C159) *
               C152080 * C152054 * C152259 -
           (C140 * C556 + C596 + C596 + C124 * C580 + C138 * C554 + C597 +
            C597 + C123 * C578 + C136 * C553 + C598 + C598 + C122 * C577 +
            C134 * C552 + C599 + C599 + C121 * C576) *
               C152080 * C152054 * C152217) *
              C151851 * C336 +
          ((C134 * C144 + C175 + C175 + C121 * C160 + C136 * C145 + C176 +
            C176 + C122 * C161 + C138 * C146 + C177 + C177 + C123 * C162 +
            C140 * C147 + C178 + C178 + C124 * C163) *
               C152080 * C152054 * C152259 -
           (C140 * C557 + C600 + C600 + C124 * C581 + C138 * C555 + C601 +
            C601 + C123 * C579 + C136 * C547 + C602 + C602 + C122 * C571 +
            C134 * C548 + C603 + C603 + C121 * C572) *
               C152080 * C152054 * C152246 +
           (C134 * C553 + C604 + C604 + C121 * C577 + C136 * C554 + C605 +
            C605 + C122 * C578 + C138 * C556 + C606 + C606 + C123 * C580 +
            C140 * C558 + C607 + C607 + C124 * C582) *
               C152080 * C152054 * C152217) *
              C151851 * C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
            C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
            C140 * C145 + C170 + C170 + C124 * C161) *
               C152080 * C152054 * C151869 * C1259 -
           (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
            C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
            C134 * C341 + C378 + C378 + C121 * C365) *
               C152080 * C152054 * C151869 * C1260 +
           (C134 * C342 + C379 + C379 + C121 * C366 + C136 * C343 + C380 +
            C380 + C122 * C367 + C138 * C344 + C381 + C381 + C123 * C368 +
            C140 * C345 + C382 + C382 + C124 * C369) *
               C152080 * C152054 * C151869 * C152214) *
              C152255 +
          ((C134 * C340 + C383 + C383 + C121 * C364 + C136 * C339 + C384 +
            C384 + C122 * C363 + C138 * C338 + C385 + C385 + C123 * C362 +
            C140 * C346 + C386 + C386 + C124 * C370) *
               C152080 * C152054 * C151869 * C1260 -
           (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
            C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
            C134 * C143 + C174 + C174 + C121 * C159) *
               C152080 * C152054 * C151869 * C1259 -
           (C140 * C347 + C387 + C387 + C124 * C371 + C138 * C345 + C388 +
            C388 + C123 * C369 + C136 * C344 + C389 + C389 + C122 * C368 +
            C134 * C343 + C390 + C390 + C121 * C367) *
               C152080 * C152054 * C151869 * C152214) *
              C152240 +
          ((C134 * C144 + C175 + C175 + C121 * C160 + C136 * C145 + C176 +
            C176 + C122 * C161 + C138 * C146 + C177 + C177 + C123 * C162 +
            C140 * C147 + C178 + C178 + C124 * C163) *
               C152080 * C152054 * C151869 * C1259 -
           (C140 * C348 + C391 + C391 + C124 * C372 + C138 * C346 + C392 +
            C392 + C123 * C370 + C136 * C338 + C393 + C393 + C122 * C362 +
            C134 * C339 + C394 + C394 + C121 * C363) *
               C152080 * C152054 * C151869 * C1260 +
           (C134 * C344 + C395 + C395 + C121 * C368 + C136 * C345 + C396 +
            C396 + C122 * C369 + C138 * C347 + C397 + C397 + C123 * C371 +
            C140 * C349 + C398 + C398 + C124 * C373) *
               C152080 * C152054 * C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 + C168 +
           C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 + C140 * C145 +
           C170 + C170 + C124 * C161) *
              C152080 * C152054 * C151869 * C1347 -
          (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 + C376 +
           C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 + C134 * C341 +
           C378 + C378 + C121 * C365) *
              C152080 * C152054 * C151869 * C1348 +
          (C134 * C342 + C379 + C379 + C121 * C366 + C136 * C343 + C380 + C380 +
           C122 * C367 + C138 * C344 + C381 + C381 + C123 * C368 + C140 * C345 +
           C382 + C382 + C124 * C369) *
              C152080 * C152054 * C151869 * C1349 -
          (C140 * C1353 + C1378 + C1378 + C124 * C1369 + C138 * C1354 + C1379 +
           C1379 + C123 * C1370 + C136 * C1355 + C1380 + C1380 + C122 * C1371 +
           C134 * C1356 + C1381 + C1381 + C121 * C1372) *
              C152080 * C152054 * C151869 * C1350 +
          (C134 * C1357 + C1382 + C1382 + C121 * C1373 + C136 * C1358 + C1383 +
           C1383 + C122 * C1374 + C138 * C1359 + C1384 + C1384 + C123 * C1375 +
           C140 * C1360 + C1385 + C1385 + C124 * C1376) *
              C152080 * C152054 * C151869 * C1351) *
         C151823) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
            C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
            C140 * C145 + C170 + C170 + C124 * C161) *
               C152080 * C152054 * C152259 -
           (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
            C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
            C134 * C550 + C587 + C587 + C121 * C574) *
               C152080 * C152054 * C152246 +
           (C134 * C551 + C588 + C588 + C121 * C575 + C136 * C552 + C589 +
            C589 + C122 * C576 + C138 * C553 + C590 + C590 + C123 * C577 +
            C140 * C554 + C591 + C591 + C124 * C578) *
               C152080 * C152054 * C152217) *
              C1259 +
          ((C134 * C1083 + C1102 + C1102 + C121 * C1095 + C136 * C1084 + C1103 +
            C1103 + C122 * C1096 + C138 * C1085 + C1104 + C1104 + C123 * C1097 +
            C140 * C1086 + C1105 + C1105 + C124 * C1098) *
               C152080 * C152054 * C152246 -
           (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
            C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
            C134 * C341 + C378 + C378 + C121 * C365) *
               C152080 * C152054 * C152259 -
           (C140 * C1531 + C1568 + C1568 + C124 * C1555 + C138 * C1532 + C1569 +
            C1569 + C123 * C1556 + C136 * C1533 + C1570 + C1570 + C122 * C1557 +
            C134 * C1534 + C1571 + C1571 + C121 * C1558) *
               C152080 * C152054 * C152217) *
              C1260 +
          ((C134 * C342 + C379 + C379 + C121 * C366 + C136 * C343 + C380 +
            C380 + C122 * C367 + C138 * C344 + C381 + C381 + C123 * C368 +
            C140 * C345 + C382 + C382 + C124 * C369) *
               C152080 * C152054 * C152259 -
           (C140 * C1535 + C1572 + C1572 + C124 * C1559 + C138 * C1536 + C1573 +
            C1573 + C123 * C1560 + C136 * C1537 + C1574 + C1574 + C122 * C1561 +
            C134 * C1538 + C1575 + C1575 + C121 * C1562) *
               C152080 * C152054 * C152246 +
           (C134 * C1539 + C1576 + C1576 + C121 * C1563 + C136 * C1540 + C1577 +
            C1577 + C122 * C1564 + C138 * C1541 + C1578 + C1578 + C123 * C1565 +
            C140 * C1542 + C1579 + C1579 + C124 * C1566) *
               C152080 * C152054 * C152217) *
              C152214) *
         C151823) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
            C23049 + C23049 + C151796 * C159) *
               C152080 * C23040 +
           (C23043 * C341 + C23050 + C23050 + C152149 * C365 + C23045 * C340 +
            C23051 + C23051 + C151796 * C364) *
               C152080 * C23041 +
           (C23043 * C342 + C23052 + C23052 + C152149 * C366 + C23045 * C343 +
            C23053 + C23053 + C151796 * C367) *
               C152080 * C23042) *
              C151869 * C151851 * C129 -
          ((C23045 * C344 + C23054 + C23054 + C151796 * C368 + C23043 * C343 +
            C23055 + C23055 + C152149 * C367) *
               C152080 * C23042 +
           (C23045 * C339 + C23056 + C23056 + C151796 * C363 + C23043 * C340 +
            C23057 + C23057 + C152149 * C364) *
               C152080 * C23041 +
           (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
            C23059 + C23059 + C152149 * C159) *
               C152080 * C23040) *
              C151869 * C151851 * C130 +
          ((C23043 * C144 + C23060 + C23060 + C152149 * C160 + C23045 * C145 +
            C23061 + C23061 + C151796 * C161) *
               C152080 * C23040 +
           (C23043 * C339 + C23062 + C23062 + C152149 * C363 + C23045 * C338 +
            C23063 + C23063 + C151796 * C362) *
               C152080 * C23041 +
           (C23043 * C344 + C23064 + C23064 + C152149 * C368 + C23045 * C345 +
            C23065 + C23065 + C151796 * C369) *
               C152080 * C23042) *
              C151869 * C151851 * C131 -
          ((C23045 * C347 + C23066 + C23066 + C151796 * C371 + C23043 * C345 +
            C23067 + C23067 + C152149 * C369) *
               C152080 * C23042 +
           (C23045 * C346 + C23068 + C23068 + C151796 * C370 + C23043 * C338 +
            C23069 + C23069 + C152149 * C362) *
               C152080 * C23041 +
           (C23045 * C146 + C23070 + C23070 + C151796 * C162 + C23043 * C145 +
            C23071 + C23071 + C152149 * C161) *
               C152080 * C23040) *
              C151869 * C151851 * C132 +
          ((C23043 * C146 + C23072 + C23072 + C152149 * C162 + C23045 * C147 +
            C23073 + C23073 + C151796 * C163) *
               C152080 * C23040 +
           (C23043 * C346 + C23074 + C23074 + C152149 * C370 + C23045 * C348 +
            C23075 + C23075 + C151796 * C372) *
               C152080 * C23041 +
           (C23043 * C347 + C23076 + C23076 + C152149 * C371 + C23045 * C349 +
            C23077 + C23077 + C151796 * C373) *
               C152080 * C23042) *
              C151869 * C151851 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
             C23049 + C23049 + C151796 * C159) *
                C152080 * C23040 +
            (C23380 + C23381) * C152080 * C23041 + C23401 * C23042) *
               C151869 * C152258 -
           ((C23384 + C23385) * C152080 * C23042 +
            (C23383 + C23382) * C152080 * C23041 +
            (C23381 + C23380) * C152080 * C23040) *
               C151869 * C152244 +
           (C23401 * C23040 + (C23385 + C23384) * C152080 * C23041 +
            (C23043 * C1357 + C23310 + C23310 + C152149 * C1373 +
             C23045 * C1358 + C23311 + C23311 + C151796 * C1374) *
                C152080 * C23042) *
               C151869 * C152214) *
              C335 +
          (((C23386 + C23387) * C152080 * C23040 +
            (C23388 + C23389) * C152080 * C23041 +
            (C23390 + C23391) * C152080 * C23042) *
               C151869 * C152244 -
           (C23402 * C23042 + (C23387 + C23386) * C152080 * C23041 +
            (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
             C23059 + C23059 + C152149 * C159) *
                C152080 * C23040) *
               C151869 * C152258 -
           ((C23045 * C1359 + C23326 + C23326 + C151796 * C1375 +
             C23043 * C1358 + C23327 + C23327 + C152149 * C1374) *
                C152080 * C23042 +
            (C23391 + C23390) * C152080 * C23041 + C23402 * C23040) *
               C151869 * C152214) *
              C336 +
          (((C23043 * C144 + C23060 + C23060 + C152149 * C160 + C23045 * C145 +
             C23061 + C23061 + C151796 * C161) *
                C152080 * C23040 +
            (C23392 + C23393) * C152080 * C23041 + C23403 * C23042) *
               C151869 * C152258 -
           ((C23396 + C23397) * C152080 * C23042 +
            (C23395 + C23394) * C152080 * C23041 +
            (C23393 + C23392) * C152080 * C23040) *
               C151869 * C152244 +
           (C23403 * C23040 + (C23397 + C23396) * C152080 * C23041 +
            (C23043 * C1359 + C23342 + C23342 + C152149 * C1375 +
             C23045 * C1360 + C23343 + C23343 + C151796 * C1376) *
                C152080 * C23042) *
               C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
             C23049 + C23049 + C151796 * C159) *
                C152080 * C23040 +
            (C23380 + C23381) * C152080 * C23041 + C23401 * C23042) *
               C152259 -
           ((C23045 * C1537 + C23622 + C23622 + C151796 * C1561 +
             C23043 * C1538 + C23623 + C23623 + C152149 * C1562) *
                C152080 * C23042 +
            (C23045 * C1084 + C23624 + C23624 + C151796 * C1096 +
             C23043 * C1083 + C23625 + C23625 + C152149 * C1095) *
                C152080 * C23041 +
            (C23045 * C549 + C23626 + C23626 + C151796 * C573 + C23043 * C550 +
             C23627 + C23627 + C152149 * C574) *
                C152080 * C23040) *
               C152246 +
           ((C23043 * C551 + C23628 + C23628 + C152149 * C575 + C23045 * C552 +
             C23629 + C23629 + C151796 * C576) *
                C152080 * C23040 +
            (C23043 * C1534 + C23630 + C23630 + C152149 * C1558 +
             C23045 * C1533 + C23631 + C23631 + C151796 * C1557) *
                C152080 * C23041 +
            (C23043 * C1539 + C23632 + C23632 + C152149 * C1563 +
             C23045 * C1540 + C23633 + C23633 + C151796 * C1564) *
                C152080 * C23042) *
               C152217) *
              C151851 * C335 +
          (((C23043 * C549 + C23634 + C23634 + C152149 * C573 + C23045 * C548 +
             C23635 + C23635 + C151796 * C572) *
                C152080 * C23040 +
            (C23043 * C1084 + C23636 + C23636 + C152149 * C1096 +
             C23045 * C1085 + C23637 + C23637 + C151796 * C1097) *
                C152080 * C23041 +
            (C23043 * C1537 + C23638 + C23638 + C152149 * C1561 +
             C23045 * C1536 + C23639 + C23639 + C151796 * C1560) *
                C152080 * C23042) *
               C152246 -
           (C23402 * C23042 + (C23387 + C23386) * C152080 * C23041 +
            (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
             C23059 + C23059 + C152149 * C159) *
                C152080 * C23040) *
               C152259 -
           ((C23045 * C1541 + C23640 + C23640 + C151796 * C1565 +
             C23043 * C1540 + C23641 + C23641 + C152149 * C1564) *
                C152080 * C23042 +
            (C23045 * C1532 + C23642 + C23642 + C151796 * C1556 +
             C23043 * C1533 + C23643 + C23643 + C152149 * C1557) *
                C152080 * C23041 +
            (C23045 * C553 + C23644 + C23644 + C151796 * C577 + C23043 * C552 +
             C23645 + C23645 + C152149 * C576) *
                C152080 * C23040) *
               C152217) *
              C151851 * C336 +
          (((C23043 * C144 + C23060 + C23060 + C152149 * C160 + C23045 * C145 +
             C23061 + C23061 + C151796 * C161) *
                C152080 * C23040 +
            (C23392 + C23393) * C152080 * C23041 + C23403 * C23042) *
               C152259 -
           ((C23045 * C1535 + C23646 + C23646 + C151796 * C1559 +
             C23043 * C1536 + C23647 + C23647 + C152149 * C1560) *
                C152080 * C23042 +
            (C23045 * C1086 + C23648 + C23648 + C151796 * C1098 +
             C23043 * C1085 + C23649 + C23649 + C152149 * C1097) *
                C152080 * C23041 +
            (C23045 * C547 + C23650 + C23650 + C151796 * C571 + C23043 * C548 +
             C23651 + C23651 + C152149 * C572) *
                C152080 * C23040) *
               C152246 +
           ((C23043 * C553 + C23652 + C23652 + C152149 * C577 + C23045 * C554 +
             C23653 + C23653 + C151796 * C578) *
                C152080 * C23040 +
            (C23043 * C1532 + C23654 + C23654 + C152149 * C1556 +
             C23045 * C1531 + C23655 + C23655 + C151796 * C1555) *
                C152080 * C23041 +
            (C23043 * C1541 + C23656 + C23656 + C152149 * C1565 +
             C23045 * C1542 + C23657 + C23657 + C151796 * C1566) *
                C152080 * C23042) *
               C152217) *
              C151851 * C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
             C23049 + C23049 + C151796 * C159) *
                C152080 * C23040 +
            (C23380 + C23381) * C152080 * C23041 + C23401 * C23042) *
               C151869 * C1259 -
           ((C23384 + C23385) * C152080 * C23042 +
            (C23383 + C23382) * C152080 * C23041 +
            (C23381 + C23380) * C152080 * C23040) *
               C151869 * C1260 +
           (C23401 * C23040 + (C23385 + C23384) * C152080 * C23041 +
            (C23043 * C1357 + C23310 + C23310 + C152149 * C1373 +
             C23045 * C1358 + C23311 + C23311 + C151796 * C1374) *
                C152080 * C23042) *
               C151869 * C152214) *
              C152255 +
          (((C23386 + C23387) * C152080 * C23040 +
            (C23388 + C23389) * C152080 * C23041 +
            (C23390 + C23391) * C152080 * C23042) *
               C151869 * C1260 -
           (C23402 * C23042 + (C23387 + C23386) * C152080 * C23041 +
            (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
             C23059 + C23059 + C152149 * C159) *
                C152080 * C23040) *
               C151869 * C1259 -
           ((C23045 * C1359 + C23326 + C23326 + C151796 * C1375 +
             C23043 * C1358 + C23327 + C23327 + C152149 * C1374) *
                C152080 * C23042 +
            (C23391 + C23390) * C152080 * C23041 + C23402 * C23040) *
               C151869 * C152214) *
              C152240 +
          (((C23043 * C144 + C23060 + C23060 + C152149 * C160 + C23045 * C145 +
             C23061 + C23061 + C151796 * C161) *
                C152080 * C23040 +
            (C23392 + C23393) * C152080 * C23041 + C23403 * C23042) *
               C151869 * C1259 -
           ((C23396 + C23397) * C152080 * C23042 +
            (C23395 + C23394) * C152080 * C23041 +
            (C23393 + C23392) * C152080 * C23040) *
               C151869 * C1260 +
           (C23403 * C23040 + (C23397 + C23396) * C152080 * C23041 +
            (C23043 * C1359 + C23342 + C23342 + C152149 * C1375 +
             C23045 * C1360 + C23343 + C23343 + C151796 * C1376) *
                C152080 * C23042) *
               C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
            C23049 + C23049 + C151796 * C159) *
               C152080 * C23040 +
           (C23380 + C23381) * C152080 * C23041 + C23401 * C23042) *
              C151869 * C1347 -
          (C24789 * C23042 + (C23383 + C23382) * C152080 * C23041 +
           (C23381 + C23380) * C152080 * C23040) *
              C151869 * C1348 +
          (C23401 * C23040 + (C23385 + C23384) * C152080 * C23041 +
           C24803 * C23042) *
              C151869 * C1349 -
          ((C24800 + C24801) * C152080 * C23042 +
           (C24799 + C24798) * C152080 * C23041 + C24789 * C23040) *
              C151869 * C1350 +
          (C24803 * C23040 + (C24801 + C24800) * C152080 * C23041 +
           (C23043 * C24769 + C24787 + C24787 + C152149 * C24773 +
            C23045 * C24770 + C24788 + C24788 + C151796 * C24774) *
               C152080 * C23042) *
              C151869 * C1351) *
         C151823) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
             C23049 + C23049 + C151796 * C159) *
                C152080 * C23040 +
            (C23380 + C23381) * C152080 * C23041 + C23401 * C23042) *
               C152259 -
           (C25051 * C23042 + (C24420 + C24421) * C152080 * C23041 +
            (C23045 * C549 + C23626 + C23626 + C151796 * C573 + C23043 * C550 +
             C23627 + C23627 + C152149 * C574) *
                C152080 * C23040) *
               C152246 +
           ((C23043 * C551 + C23628 + C23628 + C152149 * C575 + C23045 * C552 +
             C23629 + C23629 + C151796 * C576) *
                C152080 * C23040 +
            (C25068 + C25069) * C152080 * C23041 + C25077 * C23042) *
               C152217) *
              C1259 +
          (((C24421 + C24420) * C152080 * C23040 +
            (C24419 + C24418) * C152080 * C23041 +
            (C25072 + C25073) * C152080 * C23042) *
               C152246 -
           (C24789 * C23042 + (C23383 + C23382) * C152080 * C23041 +
            (C23381 + C23380) * C152080 * C23040) *
               C152259 -
           ((C25074 + C25075) * C152080 * C23042 +
            (C25071 + C25070) * C152080 * C23041 +
            (C25069 + C25068) * C152080 * C23040) *
               C152217) *
              C1260 +
          ((C23401 * C23040 + (C23385 + C23384) * C152080 * C23041 +
            C24803 * C23042) *
               C152259 -
           ((C23045 * C8842 + C25047 + C25047 + C151796 * C8848 +
             C23043 * C8841 + C25048 + C25048 + C152149 * C8847) *
                C152080 * C23042 +
            (C25073 + C25072) * C152080 * C23041 + C25051 * C23040) *
               C152246 +
           (C25077 * C23040 + (C25075 + C25074) * C152080 * C23041 +
            (C23043 * C25021 + C25049 + C25049 + C152149 * C25025 +
             C23045 * C25022 + C25050 + C25050 + C151796 * C25026) *
                C152080 * C23042) *
               C152217) *
              C152214) *
         C151823) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
            C23049 + C23049 + C151796 * C159) *
               C45770 +
           (C23043 * C550 + C23627 + C23627 + C152149 * C574 + C23045 * C549 +
            C23626 + C23626 + C151796 * C573) *
               C45771 +
           (C23043 * C551 + C23628 + C23628 + C152149 * C575 + C23045 * C552 +
            C23629 + C23629 + C151796 * C576) *
               C45772) *
              C152054 * C151869 * C151851 * C129 -
          ((C23045 * C553 + C23644 + C23644 + C151796 * C577 + C23043 * C552 +
            C23645 + C23645 + C152149 * C576) *
               C45772 +
           (C23045 * C548 + C23635 + C23635 + C151796 * C572 + C23043 * C549 +
            C23634 + C23634 + C152149 * C573) *
               C45771 +
           (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
            C23059 + C23059 + C152149 * C159) *
               C45770) *
              C152054 * C151869 * C151851 * C130 +
          ((C23043 * C144 + C23060 + C23060 + C152149 * C160 + C23045 * C145 +
            C23061 + C23061 + C151796 * C161) *
               C45770 +
           (C23043 * C548 + C23651 + C23651 + C152149 * C572 + C23045 * C547 +
            C23650 + C23650 + C151796 * C571) *
               C45771 +
           (C23043 * C553 + C23652 + C23652 + C152149 * C577 + C23045 * C554 +
            C23653 + C23653 + C151796 * C578) *
               C45772) *
              C152054 * C151869 * C151851 * C131 -
          ((C23045 * C556 + C45774 + C45774 + C151796 * C580 + C23043 * C554 +
            C45775 + C45775 + C152149 * C578) *
               C45772 +
           (C23045 * C555 + C24069 + C24069 + C151796 * C579 + C23043 * C547 +
            C24068 + C24068 + C152149 * C571) *
               C45771 +
           (C23045 * C146 + C23070 + C23070 + C151796 * C162 + C23043 * C145 +
            C23071 + C23071 + C152149 * C161) *
               C45770) *
              C152054 * C151869 * C151851 * C132 +
          ((C23043 * C146 + C23072 + C23072 + C152149 * C162 + C23045 * C147 +
            C23073 + C23073 + C151796 * C163) *
               C45770 +
           (C23043 * C555 + C45776 + C45776 + C152149 * C579 + C23045 * C557 +
            C45777 + C45777 + C151796 * C581) *
               C45771 +
           (C23043 * C556 + C45778 + C45778 + C152149 * C580 + C23045 * C558 +
            C45779 + C45779 + C151796 * C582) *
               C45772) *
              C152054 * C151869 * C151851 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
             C23049 + C23049 + C151796 * C159) *
                C45770 +
            (C23043 * C550 + C23627 + C23627 + C152149 * C574 + C23045 * C549 +
             C23626 + C23626 + C151796 * C573) *
                C45771 +
            (C23043 * C551 + C23628 + C23628 + C152149 * C575 + C23045 * C552 +
             C23629 + C23629 + C151796 * C576) *
                C45772) *
               C152054 * C151869 * C152258 -
           ((C25069 + C25068) * C45772 + (C24420 + C24421) * C45771 +
            (C23381 + C23380) * C45770) *
               C152054 * C151869 * C152244 +
           (C23398 * C45770 + (C24419 + C24418) * C45771 + C25076 * C45772) *
               C152054 * C151869 * C152214) *
              C335 +
          (((C23386 + C23387) * C45770 + (C24422 + C24423) * C45771 +
            (C26691 + C26690) * C45772) *
               C152054 * C151869 * C152244 -
           ((C23045 * C553 + C23644 + C23644 + C151796 * C577 + C23043 * C552 +
             C23645 + C23645 + C152149 * C576) *
                C45772 +
            (C23045 * C548 + C23635 + C23635 + C151796 * C572 + C23043 * C549 +
             C23634 + C23634 + C152149 * C573) *
                C45771 +
            (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
             C23059 + C23059 + C152149 * C159) *
                C45770) *
               C152054 * C151869 * C152258 -
           ((C26688 + C26689) * C45772 + (C24425 + C24424) * C45771 +
            C23399 * C45770) *
               C152054 * C151869 * C152214) *
              C336 +
          (((C23043 * C144 + C23060 + C23060 + C152149 * C160 + C23045 * C145 +
             C23061 + C23061 + C151796 * C161) *
                C45770 +
            (C23043 * C548 + C23651 + C23651 + C152149 * C572 + C23045 * C547 +
             C23650 + C23650 + C151796 * C571) *
                C45771 +
            (C23043 * C553 + C23652 + C23652 + C152149 * C577 + C23045 * C554 +
             C23653 + C23653 + C151796 * C578) *
                C45772) *
               C152054 * C151869 * C152258 -
           ((C23045 * C1531 + C23655 + C23655 + C151796 * C1555 +
             C23043 * C1532 + C23654 + C23654 + C152149 * C1556) *
                C45772 +
            (C24428 + C24429) * C45771 + (C23393 + C23392) * C45770) *
               C152054 * C151869 * C152244 +
           (C23400 * C45770 + (C24427 + C24426) * C45771 +
            (C23043 * C1541 + C23656 + C23656 + C152149 * C1565 +
             C23045 * C1542 + C23657 + C23657 + C151796 * C1566) *
                C45772) *
               C152054 * C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
             C23049 + C23049 + C151796 * C159) *
                C45770 +
            (C46294 + C46295) * C45771 + C46312 * C45772) *
               C152054 * C152259 -
           ((C46298 + C46299) * C45772 + (C46297 + C46296) * C45771 +
            (C46295 + C46294) * C45770) *
               C152054 * C152246 +
           (C46312 * C45770 + (C46299 + C46298) * C45771 +
            (C23043 * C2455 + C26374 + C26374 + C152149 * C2471 +
             C23045 * C2456 + C26375 + C26375 + C151796 * C2472) *
                C45772) *
               C152054 * C152217) *
              C151851 * C335 +
          (((C46300 + C46301) * C45770 + (C46302 + C46303) * C45771 +
            (C46304 + C46305) * C45772) *
               C152054 * C152246 -
           (C46313 * C45772 + (C46301 + C46300) * C45771 +
            (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
             C23059 + C23059 + C152149 * C159) *
                C45770) *
               C152054 * C152259 -
           ((C23045 * C2457 + C46240 + C46240 + C151796 * C2473 +
             C23043 * C2456 + C46241 + C46241 + C152149 * C2472) *
                C45772 +
            (C46305 + C46304) * C45771 + C46313 * C45770) *
               C152054 * C152217) *
              C151851 * C336 +
          (((C23043 * C144 + C23060 + C23060 + C152149 * C160 + C23045 * C145 +
             C23061 + C23061 + C151796 * C161) *
                C45770 +
            (C46306 + C46307) * C45771 + C46314 * C45772) *
               C152054 * C152259 -
           ((C46310 + C46311) * C45772 + (C46309 + C46308) * C45771 +
            (C46307 + C46306) * C45770) *
               C152054 * C152246 +
           (C46314 * C45770 + (C46311 + C46310) * C45771 +
            (C23043 * C2457 + C46256 + C46256 + C152149 * C2473 +
             C23045 * C2458 + C46257 + C46257 + C151796 * C2474) *
                C45772) *
               C152054 * C152217) *
              C151851 * C152208)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
             C23049 + C23049 + C151796 * C159) *
                C45770 +
            (C46294 + C46295) * C45771 + C46312 * C45772) *
               C152054 * C151869 * C1259 -
           ((C25069 + C25068) * C45772 + (C24420 + C24421) * C45771 +
            (C23381 + C23380) * C45770) *
               C152054 * C151869 * C1260 +
           (C23398 * C45770 + (C24419 + C24418) * C45771 + C25076 * C45772) *
               C152054 * C151869 * C152214) *
              C152255 +
          (((C23386 + C23387) * C45770 + (C24422 + C24423) * C45771 +
            (C26691 + C26690) * C45772) *
               C152054 * C151869 * C1260 -
           (C46313 * C45772 + (C46301 + C46300) * C45771 +
            (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
             C23059 + C23059 + C152149 * C159) *
                C45770) *
               C152054 * C151869 * C1259 -
           ((C26688 + C26689) * C45772 + (C24425 + C24424) * C45771 +
            C23399 * C45770) *
               C152054 * C151869 * C152214) *
              C152240 +
          (((C23043 * C144 + C23060 + C23060 + C152149 * C160 + C23045 * C145 +
             C23061 + C23061 + C151796 * C161) *
                C45770 +
            (C46306 + C46307) * C45771 + C46314 * C45772) *
               C152054 * C151869 * C1259 -
           ((C47028 + C47027) * C45772 + (C24428 + C24429) * C45771 +
            (C23393 + C23392) * C45770) *
               C152054 * C151869 * C1260 +
           (C23400 * C45770 + (C24427 + C24426) * C45771 +
            (C23043 * C1541 + C23656 + C23656 + C152149 * C1565 +
             C23045 * C1542 + C23657 + C23657 + C151796 * C1566) *
                C45772) *
               C152054 * C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
            C23049 + C23049 + C151796 * C159) *
               C45770 +
           (C46294 + C46295) * C45771 + C46312 * C45772) *
              C152054 * C151869 * C1347 -
          ((C25069 + C25068) * C45772 + (C24420 + C24421) * C45771 +
           (C23381 + C23380) * C45770) *
              C152054 * C151869 * C1348 +
          (C23398 * C45770 + (C24419 + C24418) * C45771 + C25076 * C45772) *
              C152054 * C151869 * C1349 -
          ((C25074 + C25075) * C45772 + (C25073 + C25072) * C45771 +
           C24776 * C45770) *
              C152054 * C151869 * C1350 +
          (C24802 * C45770 + (C25803 + C25802) * C45771 +
           (C23043 * C25021 + C25049 + C25049 + C152149 * C25025 +
            C23045 * C25022 + C25050 + C25050 + C151796 * C25026) *
               C45772) *
              C152054 * C151869 * C1351) *
         C151823) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
             C23049 + C23049 + C151796 * C159) *
                C45770 +
            (C46294 + C46295) * C45771 + C46312 * C45772) *
               C152054 * C152259 -
           ((C46298 + C46299) * C45772 + (C46297 + C46296) * C45771 +
            (C46295 + C46294) * C45770) *
               C152054 * C152246 +
           (C46312 * C45770 + (C46299 + C46298) * C45771 +
            (C23043 * C2455 + C26374 + C26374 + C152149 * C2471 +
             C23045 * C2456 + C26375 + C26375 + C151796 * C2472) *
                C45772) *
               C152054 * C152217) *
              C1259 +
          (((C24421 + C24420) * C45770 + (C25068 + C25069) * C45771 +
            (C27113 + C27112) * C45772) *
               C152054 * C152246 -
           (C47587 * C45772 + (C24420 + C24421) * C45771 +
            (C23381 + C23380) * C45770) *
               C152054 * C152259 -
           ((C23045 * C9427 + C26377 + C26377 + C151796 * C9433 +
             C23043 * C9426 + C26376 + C26376 + C152149 * C9432) *
                C45772 +
            (C27112 + C27113) * C45771 + C47587 * C45770) *
               C152054 * C152217) *
              C1260 +
          ((C23398 * C45770 + (C24419 + C24418) * C45771 + C25076 * C45772) *
               C152054 * C152259 -
           ((C27110 + C27111) * C45772 + (C25071 + C25070) * C45771 +
            C25028 * C45770) *
               C152054 * C152246 +
           (C25076 * C45770 + (C27111 + C27110) * C45771 +
            (C23043 * C26361 + C26378 + C26378 + C152149 * C26365 +
             C23045 * C26362 + C26379 + C26379 + C151796 * C26366) *
                C45772) *
               C152054 * C152217) *
              C152214) *
         C151823) /
            (p * q * std::sqrt(p + q));
    d2ee[173] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
             C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
             C140 * C145 + C170 + C170 + C124 * C161) *
                C152080 * C152054 * C152173 -
            (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
             C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
             C134 * C550 + C587 + C587 + C121 * C574) *
                C152080 * C152054 * C151956) *
               C1259 +
           ((C134 * C1083 + C1102 + C1102 + C121 * C1095 + C136 * C1084 +
             C1103 + C1103 + C122 * C1096 + C138 * C1085 + C1104 + C1104 +
             C123 * C1097 + C140 * C1086 + C1105 + C1105 + C124 * C1098) *
                C152080 * C152054 * C151956 -
            (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
             C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
             C134 * C341 + C378 + C378 + C121 * C365) *
                C152080 * C152054 * C152173) *
               C1260 +
           ((C134 * C342 + C379 + C379 + C121 * C366 + C136 * C343 + C380 +
             C380 + C122 * C367 + C138 * C344 + C381 + C381 + C123 * C368 +
             C140 * C345 + C382 + C382 + C124 * C369) *
                C152080 * C152054 * C152173 -
            (C140 * C1535 + C1572 + C1572 + C124 * C1559 + C138 * C1536 +
             C1573 + C1573 + C123 * C1560 + C136 * C1537 + C1574 + C1574 +
             C122 * C1561 + C134 * C1538 + C1575 + C1575 + C121 * C1562) *
                C152080 * C152054 * C151956) *
               C152214) *
              C152158 +
          (((C134 * C549 + C592 + C592 + C121 * C573 + C136 * C548 + C593 +
             C593 + C122 * C572 + C138 * C547 + C594 + C594 + C123 * C571 +
             C140 * C555 + C595 + C595 + C124 * C579) *
                C152080 * C152054 * C151956 -
            (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
             C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
             C134 * C143 + C174 + C174 + C121 * C159) *
                C152080 * C152054 * C152173) *
               C1259 +
           ((C134 * C340 + C383 + C383 + C121 * C364 + C136 * C339 + C384 +
             C384 + C122 * C363 + C138 * C338 + C385 + C385 + C123 * C362 +
             C140 * C346 + C386 + C386 + C124 * C370) *
                C152080 * C152054 * C152173 -
            (C140 * C1087 + C1106 + C1106 + C124 * C1099 + C138 * C1086 +
             C1107 + C1107 + C123 * C1098 + C136 * C1085 + C1108 + C1108 +
             C122 * C1097 + C134 * C1084 + C1109 + C1109 + C121 * C1096) *
                C152080 * C152054 * C151956) *
               C1260 +
           ((C134 * C1537 + C1920 + C1920 + C121 * C1561 + C136 * C1536 +
             C1921 + C1921 + C122 * C1560 + C138 * C1535 + C1922 + C1922 +
             C123 * C1559 + C140 * C1916 + C1923 + C1923 + C124 * C1918) *
                C152080 * C152054 * C151956 -
            (C140 * C347 + C387 + C387 + C124 * C371 + C138 * C345 + C388 +
             C388 + C123 * C369 + C136 * C344 + C389 + C389 + C122 * C368 +
             C134 * C343 + C390 + C390 + C121 * C367) *
                C152080 * C152054 * C152173) *
               C152214) *
              C151834)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
            C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
            C140 * C145 + C170 + C170 + C124 * C161) *
               C152080 * C152054 * C152173 -
           (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
            C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
            C134 * C550 + C587 + C587 + C121 * C574) *
               C152080 * C152054 * C151956) *
              C151851 * C739 +
          ((C134 * C549 + C592 + C592 + C121 * C573 + C136 * C548 + C593 +
            C593 + C122 * C572 + C138 * C547 + C594 + C594 + C123 * C571 +
            C140 * C555 + C595 + C595 + C124 * C579) *
               C152080 * C152054 * C151956 -
           (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
            C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
            C134 * C143 + C174 + C174 + C121 * C159) *
               C152080 * C152054 * C152173) *
              C151851 * C740 +
          ((C134 * C144 + C175 + C175 + C121 * C160 + C136 * C145 + C176 +
            C176 + C122 * C161 + C138 * C146 + C177 + C177 + C123 * C162 +
            C140 * C147 + C178 + C178 + C124 * C163) *
               C152080 * C152054 * C152173 -
           (C140 * C557 + C600 + C600 + C124 * C581 + C138 * C555 + C601 +
            C601 + C123 * C579 + C136 * C547 + C602 + C602 + C122 * C571 +
            C134 * C548 + C603 + C603 + C121 * C572) *
               C152080 * C152054 * C151956) *
              C151851 * C741 +
          ((C134 * C547 + C886 + C886 + C121 * C571 + C136 * C555 + C887 +
            C887 + C122 * C579 + C138 * C557 + C888 + C888 + C123 * C581 +
            C140 * C882 + C889 + C889 + C124 * C884) *
               C152080 * C152054 * C151956 -
           (C140 * C148 + C179 + C179 + C124 * C164 + C138 * C147 + C180 +
            C180 + C123 * C163 + C136 * C146 + C181 + C181 + C122 * C162 +
            C134 * C145 + C182 + C182 + C121 * C161) *
               C152080 * C152054 * C152173) *
              C151851 * C152218)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
             C23049 + C23049 + C151796 * C159) *
                C152080 * C23040 +
            (C23380 + C23381) * C152080 * C23041 + C23401 * C23042) *
               C152173 -
           ((C23045 * C1537 + C23622 + C23622 + C151796 * C1561 +
             C23043 * C1538 + C23623 + C23623 + C152149 * C1562) *
                C152080 * C23042 +
            (C23045 * C1084 + C23624 + C23624 + C151796 * C1096 +
             C23043 * C1083 + C23625 + C23625 + C152149 * C1095) *
                C152080 * C23041 +
            (C23045 * C549 + C23626 + C23626 + C151796 * C573 + C23043 * C550 +
             C23627 + C23627 + C152149 * C574) *
                C152080 * C23040) *
               C151956) *
              C151851 * C739 +
          (((C23043 * C549 + C23634 + C23634 + C152149 * C573 + C23045 * C548 +
             C23635 + C23635 + C151796 * C572) *
                C152080 * C23040 +
            (C23043 * C1084 + C23636 + C23636 + C152149 * C1096 +
             C23045 * C1085 + C23637 + C23637 + C151796 * C1097) *
                C152080 * C23041 +
            (C23043 * C1537 + C23638 + C23638 + C152149 * C1561 +
             C23045 * C1536 + C23639 + C23639 + C151796 * C1560) *
                C152080 * C23042) *
               C151956 -
           (C23402 * C23042 + (C23387 + C23386) * C152080 * C23041 +
            (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
             C23059 + C23059 + C152149 * C159) *
                C152080 * C23040) *
               C152173) *
              C151851 * C740 +
          (((C23043 * C144 + C23060 + C23060 + C152149 * C160 + C23045 * C145 +
             C23061 + C23061 + C151796 * C161) *
                C152080 * C23040 +
            (C23392 + C23393) * C152080 * C23041 + C23403 * C23042) *
               C152173 -
           ((C23045 * C1535 + C23646 + C23646 + C151796 * C1559 +
             C23043 * C1536 + C23647 + C23647 + C152149 * C1560) *
                C152080 * C23042 +
            (C23045 * C1086 + C23648 + C23648 + C151796 * C1098 +
             C23043 * C1085 + C23649 + C23649 + C152149 * C1097) *
                C152080 * C23041 +
            (C23045 * C547 + C23650 + C23650 + C151796 * C571 + C23043 * C548 +
             C23651 + C23651 + C152149 * C572) *
                C152080 * C23040) *
               C151956) *
              C151851 * C741 +
          (((C23043 * C547 + C24068 + C24068 + C152149 * C571 + C23045 * C555 +
             C24069 + C24069 + C151796 * C579) *
                C152080 * C23040 +
            (C23043 * C1086 + C24070 + C24070 + C152149 * C1098 +
             C23045 * C1087 + C24071 + C24071 + C151796 * C1099) *
                C152080 * C23041 +
            (C23043 * C1535 + C24072 + C24072 + C152149 * C1559 +
             C23045 * C1916 + C24073 + C24073 + C151796 * C1918) *
                C152080 * C23042) *
               C151956 -
           ((C23873 + C23872) * C152080 * C23042 +
            (C23871 + C23870) * C152080 * C23041 +
            (C23045 * C146 + C23070 + C23070 + C151796 * C162 + C23043 * C145 +
             C23071 + C23071 + C152149 * C161) *
                C152080 * C23040) *
               C152173) *
              C151851 * C152218)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
              C23049 + C23049 + C151796 * C159) *
                 C152080 * C23040 +
             (C23380 + C23381) * C152080 * C23041 + C23401 * C23042) *
                C152173 -
            (C25051 * C23042 + (C24420 + C24421) * C152080 * C23041 +
             (C23045 * C549 + C23626 + C23626 + C151796 * C573 + C23043 * C550 +
              C23627 + C23627 + C152149 * C574) *
                 C152080 * C23040) *
                C151956) *
               C1259 +
           (((C24421 + C24420) * C152080 * C23040 +
             (C24419 + C24418) * C152080 * C23041 +
             (C25072 + C25073) * C152080 * C23042) *
                C151956 -
            (C24789 * C23042 + (C23383 + C23382) * C152080 * C23041 +
             (C23381 + C23380) * C152080 * C23040) *
                C152173) *
               C1260 +
           ((C23401 * C23040 + (C23385 + C23384) * C152080 * C23041 +
             C24803 * C23042) *
                C152173 -
            ((C23045 * C8842 + C25047 + C25047 + C151796 * C8848 +
              C23043 * C8841 + C25048 + C25048 + C152149 * C8847) *
                 C152080 * C23042 +
             (C25073 + C25072) * C152080 * C23041 + C25051 * C23040) *
                C151956) *
               C152214) *
              C152158 +
          ((((C23043 * C549 + C23634 + C23634 + C152149 * C573 + C23045 * C548 +
              C23635 + C23635 + C151796 * C572) *
                 C152080 * C23040 +
             (C24422 + C24423) * C152080 * C23041 + C25583 * C23042) *
                C151956 -
            (C23402 * C23042 + (C23387 + C23386) * C152080 * C23041 +
             (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
              C23059 + C23059 + C152149 * C159) *
                 C152080 * C23040) *
                C152173) *
               C1259 +
           (((C23386 + C23387) * C152080 * C23040 +
             (C23388 + C23389) * C152080 * C23041 + C25279 * C23042) *
                C152173 -
            ((C25588 + C25589) * C152080 * C23042 +
             (C24425 + C24424) * C152080 * C23041 +
             (C24423 + C24422) * C152080 * C23040) *
                C151956) *
               C1260 +
           ((C25583 * C23040 + (C25589 + C25588) * C152080 * C23041 +
             (C23043 * C8842 + C25581 + C25581 + C152149 * C8848 +
              C23045 * C8843 + C25582 + C25582 + C151796 * C8849) *
                 C152080 * C23042) *
                C151956 -
            ((C25284 + C25285) * C152080 * C23042 +
             (C23391 + C23390) * C152080 * C23041 + C23402 * C23040) *
                C152173) *
               C152214) *
              C151834)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
             C23049 + C23049 + C151796 * C159) *
                C45770 +
            (C46294 + C46295) * C45771 + C46312 * C45772) *
               C152054 * C152173 -
           ((C46298 + C46299) * C45772 + (C46297 + C46296) * C45771 +
            (C46295 + C46294) * C45770) *
               C152054 * C151956) *
              C151851 * C739 +
          (((C46300 + C46301) * C45770 + (C46302 + C46303) * C45771 +
            (C46304 + C46305) * C45772) *
               C152054 * C151956 -
           (C46313 * C45772 + (C46301 + C46300) * C45771 +
            (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
             C23059 + C23059 + C152149 * C159) *
                C45770) *
               C152054 * C152173) *
              C151851 * C740 +
          (((C23043 * C144 + C23060 + C23060 + C152149 * C160 + C23045 * C145 +
             C23061 + C23061 + C151796 * C161) *
                C45770 +
            (C46306 + C46307) * C45771 + C46314 * C45772) *
               C152054 * C152173 -
           ((C46310 + C46311) * C45772 + (C46309 + C46308) * C45771 +
            (C46307 + C46306) * C45770) *
               C152054 * C151956) *
              C151851 * C741 +
          (((C46723 + C46724) * C45770 + (C46725 + C46726) * C45771 +
            (C23043 * C2451 + C46713 + C46713 + C152149 * C2467 +
             C23045 * C2818 + C46714 + C46714 + C151796 * C2820) *
                C45772) *
               C152054 * C151956 -
           ((C46726 + C46725) * C45772 + (C46724 + C46723) * C45771 +
            (C23045 * C146 + C23070 + C23070 + C151796 * C162 + C23043 * C145 +
             C23071 + C23071 + C152149 * C161) *
                C45770) *
               C152054 * C152173) *
              C151851 * C152218)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
              C23049 + C23049 + C151796 * C159) *
                 C45770 +
             (C46294 + C46295) * C45771 + C46312 * C45772) *
                C152054 * C152173 -
            ((C46298 + C46299) * C45772 + (C46297 + C46296) * C45771 +
             (C46295 + C46294) * C45770) *
                C152054 * C151956) *
               C1259 +
           (((C24421 + C24420) * C45770 + (C25068 + C25069) * C45771 +
             (C27113 + C27112) * C45772) *
                C152054 * C151956 -
            (C47587 * C45772 + (C24420 + C24421) * C45771 +
             (C23381 + C23380) * C45770) *
                C152054 * C152173) *
               C1260 +
           ((C23398 * C45770 + (C24419 + C24418) * C45771 + C25076 * C45772) *
                C152054 * C152173 -
            ((C27110 + C27111) * C45772 + (C25071 + C25070) * C45771 +
             C25028 * C45770) *
                C152054 * C151956) *
               C152214) *
              C152158 +
          ((((C46300 + C46301) * C45770 + (C46302 + C46303) * C45771 +
             (C46304 + C46305) * C45772) *
                C152054 * C151956 -
            (C46313 * C45772 + (C46301 + C46300) * C45771 +
             (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
              C23059 + C23059 + C152149 * C159) *
                 C45770) *
                C152054 * C152173) *
               C1259 +
           (((C23386 + C23387) * C45770 + (C24422 + C24423) * C45771 +
             (C26691 + C26690) * C45772) *
                C152054 * C152173 -
            ((C23045 * C2957 + C26889 + C26889 + C151796 * C2965 +
              C23043 * C2956 + C26888 + C26888 + C152149 * C2964) *
                 C45772 +
             (C26690 + C26691) * C45771 + (C24423 + C24422) * C45770) *
                C152054 * C151956) *
               C1260 +
           ((C25576 * C45770 + (C26689 + C26688) * C45771 +
             (C23043 * C10150 + C26890 + C26890 + C152149 * C10156 +
              C23045 * C10151 + C26891 + C26891 + C151796 * C10157) *
                 C45772) *
                C152054 * C151956 -
            ((C26688 + C26689) * C45772 + (C24425 + C24424) * C45771 +
             C23399 * C45770) *
                C152054 * C152173) *
               C152214) *
              C151834)) /
            (p * q * std::sqrt(p + q));
    d2ee[174] +=
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
            C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
            C140 * C145 + C170 + C170 + C124 * C161) *
               C152080 * C152054 * C151869 * C152258 -
           (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
            C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
            C134 * C341 + C378 + C378 + C121 * C365) *
               C152080 * C152054 * C151869 * C152244 +
           (C134 * C342 + C379 + C379 + C121 * C366 + C136 * C343 + C380 +
            C380 + C122 * C367 + C138 * C344 + C381 + C381 + C123 * C368 +
            C140 * C345 + C382 + C382 + C124 * C369) *
               C152080 * C152054 * C151869 * C152214) *
              C335 +
          ((C134 * C340 + C383 + C383 + C121 * C364 + C136 * C339 + C384 +
            C384 + C122 * C363 + C138 * C338 + C385 + C385 + C123 * C362 +
            C140 * C346 + C386 + C386 + C124 * C370) *
               C152080 * C152054 * C151869 * C152244 -
           (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
            C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
            C134 * C143 + C174 + C174 + C121 * C159) *
               C152080 * C152054 * C151869 * C152258 -
           (C140 * C347 + C387 + C387 + C124 * C371 + C138 * C345 + C388 +
            C388 + C123 * C369 + C136 * C344 + C389 + C389 + C122 * C368 +
            C134 * C343 + C390 + C390 + C121 * C367) *
               C152080 * C152054 * C151869 * C152214) *
              C336 +
          ((C134 * C144 + C175 + C175 + C121 * C160 + C136 * C145 + C176 +
            C176 + C122 * C161 + C138 * C146 + C177 + C177 + C123 * C162 +
            C140 * C147 + C178 + C178 + C124 * C163) *
               C152080 * C152054 * C151869 * C152258 -
           (C140 * C348 + C391 + C391 + C124 * C372 + C138 * C346 + C392 +
            C392 + C123 * C370 + C136 * C338 + C393 + C393 + C122 * C362 +
            C134 * C339 + C394 + C394 + C121 * C363) *
               C152080 * C152054 * C151869 * C152244 +
           (C134 * C344 + C395 + C395 + C121 * C368 + C136 * C345 + C396 +
            C396 + C122 * C369 + C138 * C347 + C397 + C397 + C123 * C371 +
            C140 * C349 + C398 + C398 + C124 * C373) *
               C152080 * C152054 * C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 + C168 +
           C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 + C140 * C145 +
           C170 + C170 + C124 * C161) *
              C152080 * C152054 * C151869 * C151851 * C129 -
          (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 + C172 +
           C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 + C134 * C143 +
           C174 + C174 + C121 * C159) *
              C152080 * C152054 * C151869 * C151851 * C130 +
          (C134 * C144 + C175 + C175 + C121 * C160 + C136 * C145 + C176 + C176 +
           C122 * C161 + C138 * C146 + C177 + C177 + C123 * C162 + C140 * C147 +
           C178 + C178 + C124 * C163) *
              C152080 * C152054 * C151869 * C151851 * C131 -
          (C140 * C148 + C179 + C179 + C124 * C164 + C138 * C147 + C180 + C180 +
           C123 * C163 + C136 * C146 + C181 + C181 + C122 * C162 + C134 * C145 +
           C182 + C182 + C121 * C161) *
              C152080 * C152054 * C151869 * C151851 * C132 +
          (C134 * C146 + C183 + C183 + C121 * C162 + C136 * C147 + C184 + C184 +
           C122 * C163 + C138 * C148 + C185 + C185 + C123 * C164 + C140 * C149 +
           C186 + C186 + C124 * C165) *
              C152080 * C152054 * C151869 * C151851 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
            C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
            C140 * C145 + C170 + C170 + C124 * C161) *
               C152080 * C152054 * C151869 * C1259 -
           (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
            C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
            C134 * C341 + C378 + C378 + C121 * C365) *
               C152080 * C152054 * C151869 * C1260 +
           (C134 * C342 + C379 + C379 + C121 * C366 + C136 * C343 + C380 +
            C380 + C122 * C367 + C138 * C344 + C381 + C381 + C123 * C368 +
            C140 * C345 + C382 + C382 + C124 * C369) *
               C152080 * C152054 * C151869 * C152214) *
              C152255 +
          ((C134 * C340 + C383 + C383 + C121 * C364 + C136 * C339 + C384 +
            C384 + C122 * C363 + C138 * C338 + C385 + C385 + C123 * C362 +
            C140 * C346 + C386 + C386 + C124 * C370) *
               C152080 * C152054 * C151869 * C1260 -
           (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
            C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
            C134 * C143 + C174 + C174 + C121 * C159) *
               C152080 * C152054 * C151869 * C1259 -
           (C140 * C347 + C387 + C387 + C124 * C371 + C138 * C345 + C388 +
            C388 + C123 * C369 + C136 * C344 + C389 + C389 + C122 * C368 +
            C134 * C343 + C390 + C390 + C121 * C367) *
               C152080 * C152054 * C151869 * C152214) *
              C152240 +
          ((C134 * C144 + C175 + C175 + C121 * C160 + C136 * C145 + C176 +
            C176 + C122 * C161 + C138 * C146 + C177 + C177 + C123 * C162 +
            C140 * C147 + C178 + C178 + C124 * C163) *
               C152080 * C152054 * C151869 * C1259 -
           (C140 * C348 + C391 + C391 + C124 * C372 + C138 * C346 + C392 +
            C392 + C123 * C370 + C136 * C338 + C393 + C393 + C122 * C362 +
            C134 * C339 + C394 + C394 + C121 * C363) *
               C152080 * C152054 * C151869 * C1260 +
           (C134 * C344 + C395 + C395 + C121 * C368 + C136 * C345 + C396 +
            C396 + C122 * C369 + C138 * C347 + C397 + C397 + C123 * C371 +
            C140 * C349 + C398 + C398 + C124 * C373) *
               C152080 * C152054 * C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 + C168 +
           C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 + C140 * C145 +
           C170 + C170 + C124 * C161) *
              C152080 * C152054 * C151869 * C1347 -
          (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 + C376 +
           C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 + C134 * C341 +
           C378 + C378 + C121 * C365) *
              C152080 * C152054 * C151869 * C1348 +
          (C134 * C342 + C379 + C379 + C121 * C366 + C136 * C343 + C380 + C380 +
           C122 * C367 + C138 * C344 + C381 + C381 + C123 * C368 + C140 * C345 +
           C382 + C382 + C124 * C369) *
              C152080 * C152054 * C151869 * C1349 -
          (C140 * C1353 + C1378 + C1378 + C124 * C1369 + C138 * C1354 + C1379 +
           C1379 + C123 * C1370 + C136 * C1355 + C1380 + C1380 + C122 * C1371 +
           C134 * C1356 + C1381 + C1381 + C121 * C1372) *
              C152080 * C152054 * C151869 * C1350 +
          (C134 * C1357 + C1382 + C1382 + C121 * C1373 + C136 * C1358 + C1383 +
           C1383 + C122 * C1374 + C138 * C1359 + C1384 + C1384 + C123 * C1375 +
           C140 * C1360 + C1385 + C1385 + C124 * C1376) *
              C152080 * C152054 * C151869 * C1351) *
         C151823) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
            C23049 + C23049 + C151796 * C159) *
               C152080 * C23040 +
           (C23043 * C341 + C23050 + C23050 + C152149 * C365 + C23045 * C340 +
            C23051 + C23051 + C151796 * C364) *
               C152080 * C23041 +
           (C23043 * C342 + C23052 + C23052 + C152149 * C366 + C23045 * C343 +
            C23053 + C23053 + C151796 * C367) *
               C152080 * C23042) *
              C151869 * C151851 * C129 -
          ((C23045 * C344 + C23054 + C23054 + C151796 * C368 + C23043 * C343 +
            C23055 + C23055 + C152149 * C367) *
               C152080 * C23042 +
           (C23045 * C339 + C23056 + C23056 + C151796 * C363 + C23043 * C340 +
            C23057 + C23057 + C152149 * C364) *
               C152080 * C23041 +
           (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
            C23059 + C23059 + C152149 * C159) *
               C152080 * C23040) *
              C151869 * C151851 * C130 +
          ((C23043 * C144 + C23060 + C23060 + C152149 * C160 + C23045 * C145 +
            C23061 + C23061 + C151796 * C161) *
               C152080 * C23040 +
           (C23043 * C339 + C23062 + C23062 + C152149 * C363 + C23045 * C338 +
            C23063 + C23063 + C151796 * C362) *
               C152080 * C23041 +
           (C23043 * C344 + C23064 + C23064 + C152149 * C368 + C23045 * C345 +
            C23065 + C23065 + C151796 * C369) *
               C152080 * C23042) *
              C151869 * C151851 * C131 -
          ((C23045 * C347 + C23066 + C23066 + C151796 * C371 + C23043 * C345 +
            C23067 + C23067 + C152149 * C369) *
               C152080 * C23042 +
           (C23045 * C346 + C23068 + C23068 + C151796 * C370 + C23043 * C338 +
            C23069 + C23069 + C152149 * C362) *
               C152080 * C23041 +
           (C23045 * C146 + C23070 + C23070 + C151796 * C162 + C23043 * C145 +
            C23071 + C23071 + C152149 * C161) *
               C152080 * C23040) *
              C151869 * C151851 * C132 +
          ((C23043 * C146 + C23072 + C23072 + C152149 * C162 + C23045 * C147 +
            C23073 + C23073 + C151796 * C163) *
               C152080 * C23040 +
           (C23043 * C346 + C23074 + C23074 + C152149 * C370 + C23045 * C348 +
            C23075 + C23075 + C151796 * C372) *
               C152080 * C23041 +
           (C23043 * C347 + C23076 + C23076 + C152149 * C371 + C23045 * C349 +
            C23077 + C23077 + C151796 * C373) *
               C152080 * C23042) *
              C151869 * C151851 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
             C23049 + C23049 + C151796 * C159) *
                C152080 * C23040 +
            (C23380 + C23381) * C152080 * C23041 + C23401 * C23042) *
               C151869 * C152258 -
           ((C23384 + C23385) * C152080 * C23042 +
            (C23383 + C23382) * C152080 * C23041 +
            (C23381 + C23380) * C152080 * C23040) *
               C151869 * C152244 +
           (C23401 * C23040 + (C23385 + C23384) * C152080 * C23041 +
            (C23043 * C1357 + C23310 + C23310 + C152149 * C1373 +
             C23045 * C1358 + C23311 + C23311 + C151796 * C1374) *
                C152080 * C23042) *
               C151869 * C152214) *
              C335 +
          (((C23386 + C23387) * C152080 * C23040 +
            (C23388 + C23389) * C152080 * C23041 +
            (C23390 + C23391) * C152080 * C23042) *
               C151869 * C152244 -
           (C23402 * C23042 + (C23387 + C23386) * C152080 * C23041 +
            (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
             C23059 + C23059 + C152149 * C159) *
                C152080 * C23040) *
               C151869 * C152258 -
           ((C23045 * C1359 + C23326 + C23326 + C151796 * C1375 +
             C23043 * C1358 + C23327 + C23327 + C152149 * C1374) *
                C152080 * C23042 +
            (C23391 + C23390) * C152080 * C23041 + C23402 * C23040) *
               C151869 * C152214) *
              C336 +
          (((C23043 * C144 + C23060 + C23060 + C152149 * C160 + C23045 * C145 +
             C23061 + C23061 + C151796 * C161) *
                C152080 * C23040 +
            (C23392 + C23393) * C152080 * C23041 + C23403 * C23042) *
               C151869 * C152258 -
           ((C23396 + C23397) * C152080 * C23042 +
            (C23395 + C23394) * C152080 * C23041 +
            (C23393 + C23392) * C152080 * C23040) *
               C151869 * C152244 +
           (C23403 * C23040 + (C23397 + C23396) * C152080 * C23041 +
            (C23043 * C1359 + C23342 + C23342 + C152149 * C1375 +
             C23045 * C1360 + C23343 + C23343 + C151796 * C1376) *
                C152080 * C23042) *
               C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
             C23049 + C23049 + C151796 * C159) *
                C152080 * C23040 +
            (C23380 + C23381) * C152080 * C23041 + C23401 * C23042) *
               C151869 * C1259 -
           ((C23384 + C23385) * C152080 * C23042 +
            (C23383 + C23382) * C152080 * C23041 +
            (C23381 + C23380) * C152080 * C23040) *
               C151869 * C1260 +
           (C23401 * C23040 + (C23385 + C23384) * C152080 * C23041 +
            (C23043 * C1357 + C23310 + C23310 + C152149 * C1373 +
             C23045 * C1358 + C23311 + C23311 + C151796 * C1374) *
                C152080 * C23042) *
               C151869 * C152214) *
              C152255 +
          (((C23386 + C23387) * C152080 * C23040 +
            (C23388 + C23389) * C152080 * C23041 +
            (C23390 + C23391) * C152080 * C23042) *
               C151869 * C1260 -
           (C23402 * C23042 + (C23387 + C23386) * C152080 * C23041 +
            (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
             C23059 + C23059 + C152149 * C159) *
                C152080 * C23040) *
               C151869 * C1259 -
           ((C23045 * C1359 + C23326 + C23326 + C151796 * C1375 +
             C23043 * C1358 + C23327 + C23327 + C152149 * C1374) *
                C152080 * C23042 +
            (C23391 + C23390) * C152080 * C23041 + C23402 * C23040) *
               C151869 * C152214) *
              C152240 +
          (((C23043 * C144 + C23060 + C23060 + C152149 * C160 + C23045 * C145 +
             C23061 + C23061 + C151796 * C161) *
                C152080 * C23040 +
            (C23392 + C23393) * C152080 * C23041 + C23403 * C23042) *
               C151869 * C1259 -
           ((C23396 + C23397) * C152080 * C23042 +
            (C23395 + C23394) * C152080 * C23041 +
            (C23393 + C23392) * C152080 * C23040) *
               C151869 * C1260 +
           (C23403 * C23040 + (C23397 + C23396) * C152080 * C23041 +
            (C23043 * C1359 + C23342 + C23342 + C152149 * C1375 +
             C23045 * C1360 + C23343 + C23343 + C151796 * C1376) *
                C152080 * C23042) *
               C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
            C23049 + C23049 + C151796 * C159) *
               C152080 * C23040 +
           (C23380 + C23381) * C152080 * C23041 + C23401 * C23042) *
              C151869 * C1347 -
          (C24789 * C23042 + (C23383 + C23382) * C152080 * C23041 +
           (C23381 + C23380) * C152080 * C23040) *
              C151869 * C1348 +
          (C23401 * C23040 + (C23385 + C23384) * C152080 * C23041 +
           C24803 * C23042) *
              C151869 * C1349 -
          ((C24800 + C24801) * C152080 * C23042 +
           (C24799 + C24798) * C152080 * C23041 + C24789 * C23040) *
              C151869 * C1350 +
          (C24803 * C23040 + (C24801 + C24800) * C152080 * C23041 +
           (C23043 * C24769 + C24787 + C24787 + C152149 * C24773 +
            C23045 * C24770 + C24788 + C24788 + C151796 * C24774) *
               C152080 * C23042) *
              C151869 * C1351) *
         C151823) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
            C23049 + C23049 + C151796 * C159) *
               C45770 +
           (C23043 * C550 + C23627 + C23627 + C152149 * C574 + C23045 * C549 +
            C23626 + C23626 + C151796 * C573) *
               C45771 +
           (C23043 * C551 + C23628 + C23628 + C152149 * C575 + C23045 * C552 +
            C23629 + C23629 + C151796 * C576) *
               C45772) *
              C152054 * C151869 * C151851 * C129 -
          ((C23045 * C553 + C23644 + C23644 + C151796 * C577 + C23043 * C552 +
            C23645 + C23645 + C152149 * C576) *
               C45772 +
           (C23045 * C548 + C23635 + C23635 + C151796 * C572 + C23043 * C549 +
            C23634 + C23634 + C152149 * C573) *
               C45771 +
           (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
            C23059 + C23059 + C152149 * C159) *
               C45770) *
              C152054 * C151869 * C151851 * C130 +
          ((C23043 * C144 + C23060 + C23060 + C152149 * C160 + C23045 * C145 +
            C23061 + C23061 + C151796 * C161) *
               C45770 +
           (C23043 * C548 + C23651 + C23651 + C152149 * C572 + C23045 * C547 +
            C23650 + C23650 + C151796 * C571) *
               C45771 +
           (C23043 * C553 + C23652 + C23652 + C152149 * C577 + C23045 * C554 +
            C23653 + C23653 + C151796 * C578) *
               C45772) *
              C152054 * C151869 * C151851 * C131 -
          ((C23045 * C556 + C45774 + C45774 + C151796 * C580 + C23043 * C554 +
            C45775 + C45775 + C152149 * C578) *
               C45772 +
           (C23045 * C555 + C24069 + C24069 + C151796 * C579 + C23043 * C547 +
            C24068 + C24068 + C152149 * C571) *
               C45771 +
           (C23045 * C146 + C23070 + C23070 + C151796 * C162 + C23043 * C145 +
            C23071 + C23071 + C152149 * C161) *
               C45770) *
              C152054 * C151869 * C151851 * C132 +
          ((C23043 * C146 + C23072 + C23072 + C152149 * C162 + C23045 * C147 +
            C23073 + C23073 + C151796 * C163) *
               C45770 +
           (C23043 * C555 + C45776 + C45776 + C152149 * C579 + C23045 * C557 +
            C45777 + C45777 + C151796 * C581) *
               C45771 +
           (C23043 * C556 + C45778 + C45778 + C152149 * C580 + C23045 * C558 +
            C45779 + C45779 + C151796 * C582) *
               C45772) *
              C152054 * C151869 * C151851 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
             C23049 + C23049 + C151796 * C159) *
                C45770 +
            (C23043 * C550 + C23627 + C23627 + C152149 * C574 + C23045 * C549 +
             C23626 + C23626 + C151796 * C573) *
                C45771 +
            (C23043 * C551 + C23628 + C23628 + C152149 * C575 + C23045 * C552 +
             C23629 + C23629 + C151796 * C576) *
                C45772) *
               C152054 * C151869 * C152258 -
           ((C25069 + C25068) * C45772 + (C24420 + C24421) * C45771 +
            (C23381 + C23380) * C45770) *
               C152054 * C151869 * C152244 +
           (C23398 * C45770 + (C24419 + C24418) * C45771 + C25076 * C45772) *
               C152054 * C151869 * C152214) *
              C335 +
          (((C23386 + C23387) * C45770 + (C24422 + C24423) * C45771 +
            (C26691 + C26690) * C45772) *
               C152054 * C151869 * C152244 -
           ((C23045 * C553 + C23644 + C23644 + C151796 * C577 + C23043 * C552 +
             C23645 + C23645 + C152149 * C576) *
                C45772 +
            (C23045 * C548 + C23635 + C23635 + C151796 * C572 + C23043 * C549 +
             C23634 + C23634 + C152149 * C573) *
                C45771 +
            (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
             C23059 + C23059 + C152149 * C159) *
                C45770) *
               C152054 * C151869 * C152258 -
           ((C26688 + C26689) * C45772 + (C24425 + C24424) * C45771 +
            C23399 * C45770) *
               C152054 * C151869 * C152214) *
              C336 +
          (((C23043 * C144 + C23060 + C23060 + C152149 * C160 + C23045 * C145 +
             C23061 + C23061 + C151796 * C161) *
                C45770 +
            (C23043 * C548 + C23651 + C23651 + C152149 * C572 + C23045 * C547 +
             C23650 + C23650 + C151796 * C571) *
                C45771 +
            (C23043 * C553 + C23652 + C23652 + C152149 * C577 + C23045 * C554 +
             C23653 + C23653 + C151796 * C578) *
                C45772) *
               C152054 * C151869 * C152258 -
           ((C23045 * C1531 + C23655 + C23655 + C151796 * C1555 +
             C23043 * C1532 + C23654 + C23654 + C152149 * C1556) *
                C45772 +
            (C24428 + C24429) * C45771 + (C23393 + C23392) * C45770) *
               C152054 * C151869 * C152244 +
           (C23400 * C45770 + (C24427 + C24426) * C45771 +
            (C23043 * C1541 + C23656 + C23656 + C152149 * C1565 +
             C23045 * C1542 + C23657 + C23657 + C151796 * C1566) *
                C45772) *
               C152054 * C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
             C23049 + C23049 + C151796 * C159) *
                C45770 +
            (C46294 + C46295) * C45771 + C46312 * C45772) *
               C152054 * C151869 * C1259 -
           ((C25069 + C25068) * C45772 + (C24420 + C24421) * C45771 +
            (C23381 + C23380) * C45770) *
               C152054 * C151869 * C1260 +
           (C23398 * C45770 + (C24419 + C24418) * C45771 + C25076 * C45772) *
               C152054 * C151869 * C152214) *
              C152255 +
          (((C23386 + C23387) * C45770 + (C24422 + C24423) * C45771 +
            (C26691 + C26690) * C45772) *
               C152054 * C151869 * C1260 -
           (C46313 * C45772 + (C46301 + C46300) * C45771 +
            (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
             C23059 + C23059 + C152149 * C159) *
                C45770) *
               C152054 * C151869 * C1259 -
           ((C26688 + C26689) * C45772 + (C24425 + C24424) * C45771 +
            C23399 * C45770) *
               C152054 * C151869 * C152214) *
              C152240 +
          (((C23043 * C144 + C23060 + C23060 + C152149 * C160 + C23045 * C145 +
             C23061 + C23061 + C151796 * C161) *
                C45770 +
            (C46306 + C46307) * C45771 + C46314 * C45772) *
               C152054 * C151869 * C1259 -
           ((C47028 + C47027) * C45772 + (C24428 + C24429) * C45771 +
            (C23393 + C23392) * C45770) *
               C152054 * C151869 * C1260 +
           (C23400 * C45770 + (C24427 + C24426) * C45771 +
            (C23043 * C1541 + C23656 + C23656 + C152149 * C1565 +
             C23045 * C1542 + C23657 + C23657 + C151796 * C1566) *
                C45772) *
               C152054 * C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
            C23049 + C23049 + C151796 * C159) *
               C45770 +
           (C46294 + C46295) * C45771 + C46312 * C45772) *
              C152054 * C151869 * C1347 -
          ((C25069 + C25068) * C45772 + (C24420 + C24421) * C45771 +
           (C23381 + C23380) * C45770) *
              C152054 * C151869 * C1348 +
          (C23398 * C45770 + (C24419 + C24418) * C45771 + C25076 * C45772) *
              C152054 * C151869 * C1349 -
          ((C25074 + C25075) * C45772 + (C25073 + C25072) * C45771 +
           C24776 * C45770) *
              C152054 * C151869 * C1350 +
          (C24802 * C45770 + (C25803 + C25802) * C45771 +
           (C23043 * C25021 + C25049 + C25049 + C152149 * C25025 +
            C23045 * C25022 + C25050 + C25050 + C151796 * C25026) *
               C45772) *
              C152054 * C151869 * C1351) *
         C151823) /
            (p * q * std::sqrt(p + q));
    d2ee[175] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152080 *
                C31624 +
            C31863 * C31625 + C31864 * C31626 + C31865 * C31627) *
               C151869 * C151910 -
           (C31866 * C31627 + C31865 * C31626 + C31864 * C31625 +
            C31863 * C31624) *
               C151869 * C151917 +
           (C31864 * C31624 + C31865 * C31625 + C31866 * C31626 +
            C32822 * C31627) *
               C151869 * C3585) *
              C151828 +
          ((C31867 * C31624 + C31868 * C31625 + C31869 * C31626 +
            C31870 * C31627) *
               C151869 * C151917 -
           (C31869 * C31627 + C31868 * C31626 + C31867 * C31625 +
            (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152080 *
                C31624) *
               C151869 * C151910 -
           (C33142 * C31627 + C31870 * C31626 + C31869 * C31625 +
            C31868 * C31624) *
               C151869 * C3585) *
              C151837 +
          (((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C152080 *
                C31624 +
            C31871 * C31625 + C31872 * C31626 + C31873 * C31627) *
               C151869 * C151910 -
           (C31874 * C31627 + C31873 * C31626 + C31872 * C31625 +
            C31871 * C31624) *
               C151869 * C151917 +
           (C31872 * C31624 + C31873 * C31625 + C31874 * C31626 +
            (C31628 * C7803 + C31826 + C31826 + C151791 * C7809) * C152080 *
                C31627) *
               C151869 * C3585) *
              C3588)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
             C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
             C6086 * C160) *
                C152080 * C152187 +
            (C6434 + C6435 + C6436) * C152080 * C152068) *
               C151869 * C151910 -
           ((C6437 + C6438 + C6439) * C152080 * C152068 +
            (C6436 + C6435 + C6434) * C152080 * C152187) *
               C151869 * C151917 +
           ((C6439 + C6438 + C6437) * C152080 * C152187 +
            (C7841 + C7842 + C7843) * C152080 * C152068) *
               C151869 * C3585) *
              C151828 +
          (((C6440 + C6441 + C6442) * C152080 * C152187 +
            (C6443 + C6444 + C6445) * C152080 * C152068) *
               C151869 * C151917 -
           ((C6442 + C6441 + C6440) * C152080 * C152068 +
            (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
             C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
             C6084 * C159) *
                C152080 * C152187) *
               C151869 * C151910 -
           ((C8337 + C8338 + C8339) * C152080 * C152068 +
            (C6445 + C6444 + C6443) * C152080 * C152187) *
               C151869 * C3585) *
              C151837 +
          (((C6089 * C144 + C6108 + C6108 + C6084 * C160 + C6091 * C145 +
             C6109 + C6109 + C6085 * C161 + C6093 * C146 + C6110 + C6110 +
             C6086 * C162) *
                C152080 * C152187 +
            (C6446 + C6447 + C6448) * C152080 * C152068) *
               C151869 * C151910 -
           ((C6449 + C6450 + C6451) * C152080 * C152068 +
            (C6448 + C6447 + C6446) * C152080 * C152187) *
               C151869 * C151917 +
           ((C6451 + C6450 + C6449) * C152080 * C152187 +
            (C6089 * C1354 + C6395 + C6395 + C6084 * C1370 + C6091 * C1353 +
             C6396 + C6396 + C6085 * C1369 + C6093 * C1715 + C6397 + C6397 +
             C6086 * C1717) *
                C152080 * C152068) *
               C151869 * C3585) *
              C3588)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C45770 +
             C37949 * C45771 + C37950 * C45772) *
                C152187 +
            (C54346 + C54347 + C54348) * C152068) *
               C151869 * C151910 -
           ((C54349 + C54350 + C54351) * C152068 +
            (C54348 + C54347 + C54346) * C152187) *
               C151869 * C151917 +
           ((C54351 + C54350 + C54349) * C152187 +
            (C55636 + C55637 + C55638) * C152068) *
               C151869 * C3585) *
              C151828 +
          (((C54352 + C54353 + C54354) * C152187 +
            (C54355 + C54356 + C54357) * C152068) *
               C151869 * C151917 -
           ((C54354 + C54353 + C54352) * C152068 +
            (C37952 * C45772 + C37951 * C45771 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C45770) *
                C152187) *
               C151869 * C151910 -
           ((C56063 + C56064 + C56065) * C152068 +
            (C54357 + C54356 + C54355) * C152187) *
               C151869 * C3585) *
              C151837 +
          ((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C45770 +
             C37953 * C45771 + C37956 * C45772) *
                C152187 +
            (C54358 + C54359 + C54360) * C152068) *
               C151869 * C151910 -
           ((C54361 + C54362 + C54363) * C152068 +
            (C54360 + C54359 + C54358) * C152187) *
               C151869 * C151917 +
           ((C54363 + C54362 + C54361) * C152187 +
            (C31861 * C45770 + C32567 * C45771 +
             (C31628 * C8066 + C32044 + C32044 + C151791 * C8072) * C45772) *
                C152068) *
               C151869 * C3585) *
              C3588)) /
            (p * q * std::sqrt(p + q));
    d2ee[176] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152080 *
                 C31624 +
             C31863 * C31625 + C31864 * C31626 + C31865 * C31627) *
                C152173 -
            (C32570 * C31627 + C32571 * C31626 + C32572 * C31625 +
             (C31628 * C550 + C32024 + C32024 + C151791 * C574) * C152080 *
                 C31624) *
                C151956) *
               C151910 +
           ((C32572 * C31624 + C32571 * C31625 + C32570 * C31626 +
             C33004 * C31627) *
                C151956 -
            (C31866 * C31627 + C31865 * C31626 + C31864 * C31625 +
             C31863 * C31624) *
                C152173) *
               C151917 +
           ((C31864 * C31624 + C31865 * C31625 + C31866 * C31626 +
             C32822 * C31627) *
                C152173 -
            (C33483 * C31627 + C33004 * C31626 + C32570 * C31625 +
             C32571 * C31624) *
                C151956) *
               C3585) *
              C3241 +
          ((((C31628 * C549 + C32029 + C32029 + C151791 * C573) * C152080 *
                 C31624 +
             C32573 * C31625 + C32574 * C31626 + C32575 * C31627) *
                C151956 -
            (C31869 * C31627 + C31868 * C31626 + C31867 * C31625 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152080 *
                 C31624) *
                C152173) *
               C151910 +
           ((C31867 * C31624 + C31868 * C31625 + C31869 * C31626 +
             C31870 * C31627) *
                C152173 -
            (C33343 * C31627 + C32575 * C31626 + C32574 * C31625 +
             C32573 * C31624) *
                C151956) *
               C151917 +
           ((C32574 * C31624 + C32575 * C31625 + C33343 * C31626 +
             (C31628 * C25784 + C33339 + C33339 + C151791 * C25788) * C152080 *
                 C31627) *
                C151956 -
            (C33142 * C31627 + C31870 * C31626 + C31869 * C31625 +
             C31868 * C31624) *
                C152173) *
               C3585) *
              C151834)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
              C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
              C6086 * C160) *
                 C152080 * C152187 +
             (C6434 + C6435 + C6436) * C152080 * C152068) *
                C152173 -
            ((C7453 + C7454 + C7455) * C152080 * C152068 +
             (C6093 * C548 + C6673 + C6673 + C6086 * C572 + C6091 * C549 +
              C6674 + C6674 + C6085 * C573 + C6089 * C550 + C6675 + C6675 +
              C6084 * C574) *
                 C152080 * C152187) *
                C151956) *
               C151910 +
           (((C7455 + C7454 + C7453) * C152080 * C152187 +
             (C8122 + C8123 + C8124) * C152080 * C152068) *
                C151956 -
            ((C6437 + C6438 + C6439) * C152080 * C152068 +
             (C6436 + C6435 + C6434) * C152080 * C152187) *
                C152173) *
               C151917 +
           (((C6439 + C6438 + C6437) * C152080 * C152187 +
             (C7841 + C7842 + C7843) * C152080 * C152068) *
                C152173 -
            ((C8866 + C8867 + C8868) * C152080 * C152068 +
             (C8124 + C8123 + C8122) * C152080 * C152187) *
                C151956) *
               C3585) *
              C3241 +
          ((((C6089 * C549 + C6682 + C6682 + C6084 * C573 + C6091 * C548 +
              C6683 + C6683 + C6085 * C572 + C6093 * C547 + C6684 + C6684 +
              C6086 * C571) *
                 C152080 * C152187 +
             (C7456 + C7457 + C7458) * C152080 * C152068) *
                C151956 -
            ((C6442 + C6441 + C6440) * C152080 * C152068 +
             (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
              C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
              C6084 * C159) *
                 C152080 * C152187) *
                C152173) *
               C151910 +
           (((C6440 + C6441 + C6442) * C152080 * C152187 +
             (C6443 + C6444 + C6445) * C152080 * C152068) *
                C152173 -
            ((C8645 + C8646 + C8647) * C152080 * C152068 +
             (C7458 + C7457 + C7456) * C152080 * C152187) *
                C151956) *
               C151917 +
           (((C8647 + C8646 + C8645) * C152080 * C152187 +
             (C6089 * C2054 + C8636 + C8636 + C6084 * C2062 + C6091 * C2055 +
              C8637 + C8637 + C6085 * C2063 + C6093 * C2056 + C8638 + C8638 +
              C6086 * C2064) *
                 C152080 * C152068) *
                C151956 -
            ((C8337 + C8338 + C8339) * C152080 * C152068 +
             (C6445 + C6444 + C6443) * C152080 * C152187) *
                C152173) *
               C3585) *
              C151834)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C45770 +
              C37949 * C45771 + C37950 * C45772) *
                 C152187 +
             (C54346 + C54347 + C54348) * C152068) *
                C152173 -
            ((C55287 + C55288 + C55289) * C152068 +
             (C40513 * C45772 + C37950 * C45771 + C37949 * C45770) * C152187) *
                C151956) *
               C151910 +
           (((C55289 + C55288 + C55287) * C152187 +
             (C55863 + C55864 + C55865) * C152068) *
                C151956 -
            ((C54349 + C54350 + C54351) * C152068 +
             (C54348 + C54347 + C54346) * C152187) *
                C152173) *
               C151917 +
           (((C54351 + C54350 + C54349) * C152187 +
             (C55636 + C55637 + C55638) * C152068) *
                C152173 -
            ((C56553 + C56554 + C56555) * C152068 +
             (C55865 + C55864 + C55863) * C152187) *
                C151956) *
               C3585) *
              C3241 +
          ((((C37951 * C45770 + C37952 * C45771 + C41022 * C45772) * C152187 +
             (C55290 + C55291 + C55292) * C152068) *
                C151956 -
            ((C54354 + C54353 + C54352) * C152068 +
             (C37952 * C45772 + C37951 * C45771 +
              (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C45770) *
                 C152187) *
                C152173) *
               C151910 +
           (((C54352 + C54353 + C54354) * C152187 +
             (C54355 + C54356 + C54357) * C152068) *
                C152173 -
            ((C56356 + C56357 + C56358) * C152068 +
             (C55292 + C55291 + C55290) * C152187) *
                C151956) *
               C151917 +
           (((C56358 + C56357 + C56356) * C152187 +
             (C32566 * C45770 + C34076 * C45771 +
              (C31628 * C27086 + C34215 + C34215 + C151791 * C27090) * C45772) *
                 C152068) *
                C151956 -
            ((C56063 + C56064 + C56065) * C152068 +
             (C54357 + C54356 + C54355) * C152187) *
                C152173) *
               C3585) *
              C151834)) /
            (p * q * std::sqrt(p + q));
    d2ee[177] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
                 C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
                 C6086 * C160) *
                    C152080 * C152187 +
                (C6434 + C6435 + C6436) * C152080 * C152068) *
                   C151869 * C3101 -
               ((C6437 + C6438 + C6439) * C152080 * C152068 +
                (C6436 + C6435 + C6434) * C152080 * C152187) *
                   C151869 * C151914) *
                  C152264 +
              (((C6440 + C6441 + C6442) * C152080 * C152187 +
                (C6443 + C6444 + C6445) * C152080 * C152068) *
                   C151869 * C151914 -
               ((C6442 + C6441 + C6440) * C152080 * C152068 +
                (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
                 C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
                 C6084 * C159) *
                    C152080 * C152187) *
                   C151869 * C3101) *
                  C152257 +
              (((C6089 * C144 + C6108 + C6108 + C6084 * C160 + C6091 * C145 +
                 C6109 + C6109 + C6085 * C161 + C6093 * C146 + C6110 + C6110 +
                 C6086 * C162) *
                    C152080 * C152187 +
                (C6446 + C6447 + C6448) * C152080 * C152068) *
                   C151869 * C3101 -
               ((C6449 + C6450 + C6451) * C152080 * C152068 +
                (C6448 + C6447 + C6446) * C152080 * C152187) *
                   C151869 * C151914) *
                  C152242 +
              (((C6915 + C6916 + C6917) * C152080 * C152187 +
                (C6089 * C345 + C6906 + C6906 + C6084 * C369 + C6091 * C347 +
                 C6907 + C6907 + C6085 * C371 + C6093 * C349 + C6908 + C6908 +
                 C6086 * C373) *
                    C152080 * C152068) *
                   C151869 * C151914 -
               ((C6917 + C6916 + C6915) * C152080 * C152068 +
                (C6093 * C147 + C6117 + C6117 + C6086 * C163 + C6091 * C146 +
                 C6118 + C6118 + C6085 * C162 + C6089 * C145 + C6119 + C6119 +
                 C6084 * C161) *
                    C152080 * C152187) *
                   C151869 * C3101) *
                  C152218) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
                 C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
                 C6086 * C160) *
                    C152080 * C152187 +
                (C6434 + C6435 + C6436) * C152080 * C152068) *
                   C151869 * C152265 -
               ((C6437 + C6438 + C6439) * C152080 * C152068 +
                (C6436 + C6435 + C6434) * C152080 * C152187) *
                   C151869 * C152261 +
               ((C6439 + C6438 + C6437) * C152080 * C152187 +
                (C7841 + C7842 + C7843) * C152080 * C152068) *
                   C151869 * C152249 -
               ((C7844 + C7845 + C7846) * C152080 * C152068 +
                (C7843 + C7842 + C7841) * C152080 * C152187) *
                   C151869 * C152224) *
                  C3241 +
              (((C6440 + C6441 + C6442) * C152080 * C152187 +
                (C6443 + C6444 + C6445) * C152080 * C152068) *
                   C151869 * C152261 -
               ((C6442 + C6441 + C6440) * C152080 * C152068 +
                (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
                 C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
                 C6084 * C159) *
                    C152080 * C152187) *
                   C151869 * C152265 -
               ((C8337 + C8338 + C8339) * C152080 * C152068 +
                (C6445 + C6444 + C6443) * C152080 * C152187) *
                   C151869 * C152249 +
               ((C8339 + C8338 + C8337) * C152080 * C152187 +
                (C6089 * C1358 + C8328 + C8328 + C6084 * C1374 + C6091 * C1359 +
                 C8329 + C8329 + C6085 * C1375 + C6093 * C1360 + C8330 + C8330 +
                 C6086 * C1376) *
                    C152080 * C152068) *
                   C151869 * C152224) *
                  C151834)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
              C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
              C6086 * C160) *
                 C152080 * C152187 +
             (C6434 + C6435 + C6436) * C152080 * C152068) *
                C152259 -
            ((C7453 + C7454 + C7455) * C152080 * C152068 +
             (C6093 * C548 + C6673 + C6673 + C6086 * C572 + C6091 * C549 +
              C6674 + C6674 + C6085 * C573 + C6089 * C550 + C6675 + C6675 +
              C6084 * C574) *
                 C152080 * C152187) *
                C152246 +
            ((C6089 * C551 + C6676 + C6676 + C6084 * C575 + C6091 * C552 +
              C6677 + C6677 + C6085 * C576 + C6093 * C553 + C6678 + C6678 +
              C6086 * C577) *
                 C152080 * C152187 +
             (C8119 + C8120 + C8121) * C152080 * C152068) *
                C152217) *
               C3101 +
           (((C7455 + C7454 + C7453) * C152080 * C152187 +
             (C8122 + C8123 + C8124) * C152080 * C152068) *
                C152246 -
            ((C6437 + C6438 + C6439) * C152080 * C152068 +
             (C6436 + C6435 + C6434) * C152080 * C152187) *
                C152259 -
            ((C8125 + C8126 + C8127) * C152080 * C152068 +
             (C8121 + C8120 + C8119) * C152080 * C152187) *
                C152217) *
               C151914) *
              C3241 +
          ((((C6089 * C549 + C6682 + C6682 + C6084 * C573 + C6091 * C548 +
              C6683 + C6683 + C6085 * C572 + C6093 * C547 + C6684 + C6684 +
              C6086 * C571) *
                 C152080 * C152187 +
             (C7456 + C7457 + C7458) * C152080 * C152068) *
                C152246 -
            ((C6442 + C6441 + C6440) * C152080 * C152068 +
             (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
              C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
              C6084 * C159) *
                 C152080 * C152187) *
                C152259 -
            ((C9753 + C9754 + C9755) * C152080 * C152068 +
             (C6093 * C554 + C6691 + C6691 + C6086 * C578 + C6091 * C553 +
              C6692 + C6692 + C6085 * C577 + C6089 * C552 + C6693 + C6693 +
              C6084 * C576) *
                 C152080 * C152187) *
                C152217) *
               C3101 +
           (((C6440 + C6441 + C6442) * C152080 * C152187 +
             (C6443 + C6444 + C6445) * C152080 * C152068) *
                C152259 -
            ((C8645 + C8646 + C8647) * C152080 * C152068 +
             (C7458 + C7457 + C7456) * C152080 * C152187) *
                C152246 +
            ((C9755 + C9754 + C9753) * C152080 * C152187 +
             (C6089 * C1540 + C9744 + C9744 + C6084 * C1564 + C6091 * C1541 +
              C9745 + C9745 + C6085 * C1565 + C6093 * C1542 + C9746 + C9746 +
              C6086 * C1566) *
                 C152080 * C152068) *
                C152217) *
               C151914) *
              C151834)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152080 *
                C31624 +
            C31863 * C31625 + C31864 * C31626 + C31865 * C31627) *
               C151869 * C3101 -
           (C31866 * C31627 + C31865 * C31626 + C31864 * C31625 +
            C31863 * C31624) *
               C151869 * C151914) *
              C152264 +
          ((C31867 * C31624 + C31868 * C31625 + C31869 * C31626 +
            C31870 * C31627) *
               C151869 * C151914 -
           (C31869 * C31627 + C31868 * C31626 + C31867 * C31625 +
            (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152080 *
                C31624) *
               C151869 * C3101) *
              C152257 +
          (((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C152080 *
                C31624 +
            C31871 * C31625 + C31872 * C31626 + C31873 * C31627) *
               C151869 * C3101 -
           (C31874 * C31627 + C31873 * C31626 + C31872 * C31625 +
            C31871 * C31624) *
               C151869 * C151914) *
              C152242 +
          ((C32191 * C31624 + C32192 * C31625 + C32193 * C31626 +
            (C31628 * C1360 + C32181 + C32181 + C151791 * C1376) * C152080 *
                C31627) *
               C151869 * C151914 -
           (C32193 * C31627 + C32192 * C31626 + C32191 * C31625 +
            (C31628 * C145 + C31646 + C31646 + C151791 * C161) * C152080 *
                C31624) *
               C151869 * C3101) *
              C152218)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152080 *
                C31624 +
            C31863 * C31625 + C31864 * C31626 + C31865 * C31627) *
               C151869 * C152265 -
           (C31866 * C31627 + C31865 * C31626 + C31864 * C31625 +
            C31863 * C31624) *
               C151869 * C152261 +
           (C31864 * C31624 + C31865 * C31625 + C31866 * C31626 +
            C32822 * C31627) *
               C151869 * C152249 -
           (C32823 * C31627 + C32822 * C31626 + C31866 * C31625 +
            C31865 * C31624) *
               C151869 * C152224) *
              C3241 +
          ((C31867 * C31624 + C31868 * C31625 + C31869 * C31626 +
            C31870 * C31627) *
               C151869 * C152261 -
           (C31869 * C31627 + C31868 * C31626 + C31867 * C31625 +
            (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152080 *
                C31624) *
               C151869 * C152265 -
           (C33142 * C31627 + C31870 * C31626 + C31869 * C31625 +
            C31868 * C31624) *
               C151869 * C152249 +
           (C31869 * C31624 + C31870 * C31625 + C33142 * C31626 +
            (C31628 * C24770 + C33138 + C33138 + C151791 * C24774) * C152080 *
                C31627) *
               C151869 * C152224) *
              C151834)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152080 *
                 C31624 +
             C31863 * C31625 + C31864 * C31626 + C31865 * C31627) *
                C152259 -
            (C32570 * C31627 + C32571 * C31626 + C32572 * C31625 +
             (C31628 * C550 + C32024 + C32024 + C151791 * C574) * C152080 *
                 C31624) *
                C152246 +
            ((C31628 * C551 + C32025 + C32025 + C151791 * C575) * C152080 *
                 C31624 +
             C33001 * C31625 + C33002 * C31626 + C33003 * C31627) *
                C152217) *
               C3101 +
           ((C32572 * C31624 + C32571 * C31625 + C32570 * C31626 +
             C33004 * C31627) *
                C152246 -
            (C31866 * C31627 + C31865 * C31626 + C31864 * C31625 +
             C31863 * C31624) *
                C152259 -
            (C33005 * C31627 + C33003 * C31626 + C33002 * C31625 +
             C33001 * C31624) *
                C152217) *
               C151914) *
              C3241 +
          ((((C31628 * C549 + C32029 + C32029 + C151791 * C573) * C152080 *
                 C31624 +
             C32573 * C31625 + C32574 * C31626 + C32575 * C31627) *
                C152246 -
            (C31869 * C31627 + C31868 * C31626 + C31867 * C31625 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152080 *
                 C31624) *
                C152259 -
            (C34079 * C31627 + C34080 * C31626 + C34081 * C31625 +
             (C31628 * C552 + C32036 + C32036 + C151791 * C576) * C152080 *
                 C31624) *
                C152217) *
               C3101 +
           ((C31867 * C31624 + C31868 * C31625 + C31869 * C31626 +
             C31870 * C31627) *
                C152259 -
            (C33343 * C31627 + C32575 * C31626 + C32574 * C31625 +
             C32573 * C31624) *
                C152246 +
            (C34081 * C31624 + C34080 * C31625 + C34079 * C31626 +
             (C31628 * C25022 + C34069 + C34069 + C151791 * C25026) * C152080 *
                 C31627) *
                C152217) *
               C151914) *
              C151834)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C45770 +
             C37949 * C45771 + C37950 * C45772) *
                C152187 +
            (C54346 + C54347 + C54348) * C152068) *
               C151869 * C3101 -
           ((C54349 + C54350 + C54351) * C152068 +
            (C54348 + C54347 + C54346) * C152187) *
               C151869 * C151914) *
              C152264 +
          (((C54352 + C54353 + C54354) * C152187 +
            (C54355 + C54356 + C54357) * C152068) *
               C151869 * C151914 -
           ((C54354 + C54353 + C54352) * C152068 +
            (C37952 * C45772 + C37951 * C45771 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C45770) *
                C152187) *
               C151869 * C3101) *
              C152257 +
          ((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C45770 +
             C37953 * C45771 + C37956 * C45772) *
                C152187 +
            (C54358 + C54359 + C54360) * C152068) *
               C151869 * C3101 -
           ((C54361 + C54362 + C54363) * C152068 +
            (C54360 + C54359 + C54358) * C152187) *
               C151869 * C151914) *
              C152242 +
          (((C54788 + C54789 + C54795) * C152187 +
            (C32189 * C45770 + C38162 * C45771 +
             (C31628 * C1542 + C38363 + C38363 + C151791 * C1566) * C45772) *
                C152068) *
               C151869 * C151914 -
           ((C54795 + C54789 + C54788) * C152068 +
            (C54996 * C45772 + C38366 * C45771 +
             (C31628 * C145 + C31646 + C31646 + C151791 * C161) * C45770) *
                C152187) *
               C151869 * C3101) *
              C152218)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C45770 +
             C37949 * C45771 + C37950 * C45772) *
                C152187 +
            (C54346 + C54347 + C54348) * C152068) *
               C151869 * C152265 -
           ((C54349 + C54350 + C54351) * C152068 +
            (C54348 + C54347 + C54346) * C152187) *
               C151869 * C152261 +
           ((C54351 + C54350 + C54349) * C152187 +
            (C55636 + C55637 + C55638) * C152068) *
               C151869 * C152249 -
           ((C55639 + C55640 + C55641) * C152068 +
            (C55638 + C55637 + C55636) * C152187) *
               C151869 * C152224) *
              C3241 +
          (((C54352 + C54353 + C54354) * C152187 +
            (C54355 + C54356 + C54357) * C152068) *
               C151869 * C152261 -
           ((C54354 + C54353 + C54352) * C152068 +
            (C37952 * C45772 + C37951 * C45771 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C45770) *
                C152187) *
               C151869 * C152265 -
           ((C56063 + C56064 + C56065) * C152068 +
            (C54357 + C54356 + C54355) * C152187) *
               C151869 * C152249 +
           ((C56065 + C56064 + C56063) * C152187 +
            (C31858 * C45770 + C33342 * C45771 +
             (C31628 * C25022 + C34069 + C34069 + C151791 * C25026) * C45772) *
                C152068) *
               C151869 * C152224) *
              C151834)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C45770 +
              C37949 * C45771 + C37950 * C45772) *
                 C152187 +
             (C54346 + C54347 + C54348) * C152068) *
                C152259 -
            ((C55287 + C55288 + C55289) * C152068 +
             (C40513 * C45772 + C37950 * C45771 + C37949 * C45770) * C152187) *
                C152246 +
            ((C37950 * C45770 + C40513 * C45771 + C40516 * C45772) * C152187 +
             (C55860 + C55861 + C55862) * C152068) *
                C152217) *
               C3101 +
           (((C55289 + C55288 + C55287) * C152187 +
             (C55863 + C55864 + C55865) * C152068) *
                C152246 -
            ((C54349 + C54350 + C54351) * C152068 +
             (C54348 + C54347 + C54346) * C152187) *
                C152259 -
            ((C55866 + C55867 + C55868) * C152068 +
             (C55862 + C55861 + C55860) * C152187) *
                C152217) *
               C151914) *
              C3241 +
          ((((C37951 * C45770 + C37952 * C45771 + C41022 * C45772) * C152187 +
             (C55290 + C55291 + C55292) * C152068) *
                C152246 -
            ((C54354 + C54353 + C54352) * C152068 +
             (C37952 * C45772 + C37951 * C45771 +
              (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C45770) *
                 C152187) *
                C152259 -
            ((C57426 + C57421 + C57422) * C152068 +
             (C57627 * C45772 + C41022 * C45771 + C37952 * C45770) * C152187) *
                C152217) *
               C3101 +
           (((C54352 + C54353 + C54354) * C152187 +
             (C54355 + C54356 + C54357) * C152068) *
                C152259 -
            ((C56356 + C56357 + C56358) * C152068 +
             (C55292 + C55291 + C55290) * C152187) *
                C152246 +
            ((C57422 + C57421 + C57426) * C152187 +
             (C34077 * C45770 + C40817 * C45771 +
              (C31628 * C26362 + C41019 + C41019 + C151791 * C26366) * C45772) *
                 C152068) *
                C152217) *
               C151914) *
              C151834)) /
            (p * q * std::sqrt(p + q));
    d2ee[178] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152080 *
                 C31624 +
             C31863 * C31625 + C31864 * C31626 + C31865 * C31627) *
                C152173 -
            (C32570 * C31627 + C32571 * C31626 + C32572 * C31625 +
             (C31628 * C550 + C32024 + C32024 + C151791 * C574) * C152080 *
                 C31624) *
                C151956) *
               C3101 +
           ((C32572 * C31624 + C32571 * C31625 + C32570 * C31626 +
             C33004 * C31627) *
                C151956 -
            (C31866 * C31627 + C31865 * C31626 + C31864 * C31625 +
             C31863 * C31624) *
                C152173) *
               C151914) *
              C151828 +
          ((((C31628 * C549 + C32029 + C32029 + C151791 * C573) * C152080 *
                 C31624 +
             C32573 * C31625 + C32574 * C31626 + C32575 * C31627) *
                C151956 -
            (C31869 * C31627 + C31868 * C31626 + C31867 * C31625 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152080 *
                 C31624) *
                C152173) *
               C3101 +
           ((C31867 * C31624 + C31868 * C31625 + C31869 * C31626 +
             C31870 * C31627) *
                C152173 -
            (C33343 * C31627 + C32575 * C31626 + C32574 * C31625 +
             C32573 * C31624) *
                C151956) *
               C151914) *
              C151837 +
          ((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C152080 *
                 C31624 +
             C31871 * C31625 + C31872 * C31626 + C31873 * C31627) *
                C152173 -
            (C32576 * C31627 + C32577 * C31626 + C32578 * C31625 +
             (C31628 * C548 + C32040 + C32040 + C151791 * C572) * C152080 *
                 C31624) *
                C151956) *
               C3101 +
           ((C32578 * C31624 + C32577 * C31625 + C32576 * C31626 +
             (C31628 * C8843 + C32542 + C32542 + C151791 * C8849) * C152080 *
                 C31627) *
                C151956 -
            (C31874 * C31627 + C31873 * C31626 + C31872 * C31625 +
             C31871 * C31624) *
                C152173) *
               C151914) *
              C3588)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
              C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
              C6086 * C160) *
                 C152080 * C152187 +
             (C6434 + C6435 + C6436) * C152080 * C152068) *
                C152173 -
            ((C7453 + C7454 + C7455) * C152080 * C152068 +
             (C6093 * C548 + C6673 + C6673 + C6086 * C572 + C6091 * C549 +
              C6674 + C6674 + C6085 * C573 + C6089 * C550 + C6675 + C6675 +
              C6084 * C574) *
                 C152080 * C152187) *
                C151956) *
               C3101 +
           (((C7455 + C7454 + C7453) * C152080 * C152187 +
             (C8122 + C8123 + C8124) * C152080 * C152068) *
                C151956 -
            ((C6437 + C6438 + C6439) * C152080 * C152068 +
             (C6436 + C6435 + C6434) * C152080 * C152187) *
                C152173) *
               C151914) *
              C151828 +
          ((((C6089 * C549 + C6682 + C6682 + C6084 * C573 + C6091 * C548 +
              C6683 + C6683 + C6085 * C572 + C6093 * C547 + C6684 + C6684 +
              C6086 * C571) *
                 C152080 * C152187 +
             (C7456 + C7457 + C7458) * C152080 * C152068) *
                C151956 -
            ((C6442 + C6441 + C6440) * C152080 * C152068 +
             (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
              C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
              C6084 * C159) *
                 C152080 * C152187) *
                C152173) *
               C3101 +
           (((C6440 + C6441 + C6442) * C152080 * C152187 +
             (C6443 + C6444 + C6445) * C152080 * C152068) *
                C152173 -
            ((C8645 + C8646 + C8647) * C152080 * C152068 +
             (C7458 + C7457 + C7456) * C152080 * C152187) *
                C151956) *
               C151914) *
              C151837 +
          ((((C6089 * C144 + C6108 + C6108 + C6084 * C160 + C6091 * C145 +
              C6109 + C6109 + C6085 * C161 + C6093 * C146 + C6110 + C6110 +
              C6086 * C162) *
                 C152080 * C152187 +
             (C6446 + C6447 + C6448) * C152080 * C152068) *
                C152173 -
            ((C7459 + C7460 + C7461) * C152080 * C152068 +
             (C6093 * C555 + C6697 + C6697 + C6086 * C579 + C6091 * C547 +
              C6698 + C6698 + C6085 * C571 + C6089 * C548 + C6699 + C6699 +
              C6084 * C572) *
                 C152080 * C152187) *
                C151956) *
               C3101 +
           (((C7461 + C7460 + C7459) * C152080 * C152187 +
             (C6089 * C1536 + C7432 + C7432 + C6084 * C1560 + C6091 * C1535 +
              C7433 + C7433 + C6085 * C1559 + C6093 * C1916 + C7434 + C7434 +
              C6086 * C1918) *
                 C152080 * C152068) *
                C151956 -
            ((C6449 + C6450 + C6451) * C152080 * C152068 +
             (C6448 + C6447 + C6446) * C152080 * C152187) *
                C152173) *
               C151914) *
              C3588)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C45770 +
              C37949 * C45771 + C37950 * C45772) *
                 C152187 +
             (C54346 + C54347 + C54348) * C152068) *
                C152173 -
            ((C55287 + C55288 + C55289) * C152068 +
             (C40513 * C45772 + C37950 * C45771 + C37949 * C45770) * C152187) *
                C151956) *
               C3101 +
           (((C55289 + C55288 + C55287) * C152187 +
             (C55863 + C55864 + C55865) * C152068) *
                C151956 -
            ((C54349 + C54350 + C54351) * C152068 +
             (C54348 + C54347 + C54346) * C152187) *
                C152173) *
               C151914) *
              C151828 +
          ((((C37951 * C45770 + C37952 * C45771 + C41022 * C45772) * C152187 +
             (C55290 + C55291 + C55292) * C152068) *
                C151956 -
            ((C54354 + C54353 + C54352) * C152068 +
             (C37952 * C45772 + C37951 * C45771 +
              (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C45770) *
                 C152187) *
                C152173) *
               C3101 +
           (((C54352 + C54353 + C54354) * C152187 +
             (C54355 + C54356 + C54357) * C152068) *
                C152173 -
            ((C56356 + C56357 + C56358) * C152068 +
             (C55292 + C55291 + C55290) * C152187) *
                C151956) *
               C151914) *
              C151837 +
          (((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C45770 +
              C37953 * C45771 + C37956 * C45772) *
                 C152187 +
             (C54358 + C54359 + C54360) * C152068) *
                C152173 -
            ((C55293 + C55294 + C55295) * C152068 +
             (C54593 * C45772 + C37956 * C45771 + C37953 * C45770) * C152187) *
                C151956) *
               C3101 +
           (((C55295 + C55294 + C55293) * C152187 +
             (C32568 * C45770 + C37954 * C45771 +
              (C31628 * C10151 + C37932 + C37932 + C151791 * C10157) * C45772) *
                 C152068) *
                C151956 -
            ((C54361 + C54362 + C54363) * C152068 +
             (C54360 + C54359 + C54358) * C152187) *
                C152173) *
               C151914) *
              C3588)) /
            (p * q * std::sqrt(p + q));
    d2ee[179] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
             C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
             C6086 * C160) *
                C152080 * C152187 +
            (C6434 + C6435 + C6436) * C152080 * C152068) *
               C151869 * C152265 -
           ((C6437 + C6438 + C6439) * C152080 * C152068 +
            (C6436 + C6435 + C6434) * C152080 * C152187) *
               C151869 * C152261 +
           ((C6439 + C6438 + C6437) * C152080 * C152187 +
            (C7841 + C7842 + C7843) * C152080 * C152068) *
               C151869 * C152249 -
           ((C7844 + C7845 + C7846) * C152080 * C152068 +
            (C7843 + C7842 + C7841) * C152080 * C152187) *
               C151869 * C152224) *
              C3241 +
          (((C6440 + C6441 + C6442) * C152080 * C152187 +
            (C6443 + C6444 + C6445) * C152080 * C152068) *
               C151869 * C152261 -
           ((C6442 + C6441 + C6440) * C152080 * C152068 +
            (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
             C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
             C6084 * C159) *
                C152080 * C152187) *
               C151869 * C152265 -
           ((C8337 + C8338 + C8339) * C152080 * C152068 +
            (C6445 + C6444 + C6443) * C152080 * C152187) *
               C151869 * C152249 +
           ((C8339 + C8338 + C8337) * C152080 * C152187 +
            (C6089 * C1358 + C8328 + C8328 + C6084 * C1374 + C6091 * C1359 +
             C8329 + C8329 + C6085 * C1375 + C6093 * C1360 + C8330 + C8330 +
             C6086 * C1376) *
                C152080 * C152068) *
               C151869 * C152224) *
              C151834)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
             C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
             C6086 * C160) *
                C152080 * C152187 +
            (C6434 + C6435 + C6436) * C152080 * C152068) *
               C151869 * C3101 -
           ((C6437 + C6438 + C6439) * C152080 * C152068 +
            (C6436 + C6435 + C6434) * C152080 * C152187) *
               C151869 * C151914) *
              C152264 +
          (((C6440 + C6441 + C6442) * C152080 * C152187 +
            (C6443 + C6444 + C6445) * C152080 * C152068) *
               C151869 * C151914 -
           ((C6442 + C6441 + C6440) * C152080 * C152068 +
            (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
             C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
             C6084 * C159) *
                C152080 * C152187) *
               C151869 * C3101) *
              C152257 +
          (((C6089 * C144 + C6108 + C6108 + C6084 * C160 + C6091 * C145 +
             C6109 + C6109 + C6085 * C161 + C6093 * C146 + C6110 + C6110 +
             C6086 * C162) *
                C152080 * C152187 +
            (C6446 + C6447 + C6448) * C152080 * C152068) *
               C151869 * C3101 -
           ((C6449 + C6450 + C6451) * C152080 * C152068 +
            (C6448 + C6447 + C6446) * C152080 * C152187) *
               C151869 * C151914) *
              C152242 +
          (((C6915 + C6916 + C6917) * C152080 * C152187 +
            (C6089 * C345 + C6906 + C6906 + C6084 * C369 + C6091 * C347 +
             C6907 + C6907 + C6085 * C371 + C6093 * C349 + C6908 + C6908 +
             C6086 * C373) *
                C152080 * C152068) *
               C151869 * C151914 -
           ((C6917 + C6916 + C6915) * C152080 * C152068 +
            (C6093 * C147 + C6117 + C6117 + C6086 * C163 + C6091 * C146 +
             C6118 + C6118 + C6085 * C162 + C6089 * C145 + C6119 + C6119 +
             C6084 * C161) *
                C152080 * C152187) *
               C151869 * C3101) *
              C152218)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152080 *
                C31624 +
            C31863 * C31625 + C31864 * C31626 + C31865 * C31627) *
               C151869 * C3101 -
           (C31866 * C31627 + C31865 * C31626 + C31864 * C31625 +
            C31863 * C31624) *
               C151869 * C151914) *
              C152264 +
          ((C31867 * C31624 + C31868 * C31625 + C31869 * C31626 +
            C31870 * C31627) *
               C151869 * C151914 -
           (C31869 * C31627 + C31868 * C31626 + C31867 * C31625 +
            (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152080 *
                C31624) *
               C151869 * C3101) *
              C152257 +
          (((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C152080 *
                C31624 +
            C31871 * C31625 + C31872 * C31626 + C31873 * C31627) *
               C151869 * C3101 -
           (C31874 * C31627 + C31873 * C31626 + C31872 * C31625 +
            C31871 * C31624) *
               C151869 * C151914) *
              C152242 +
          ((C32191 * C31624 + C32192 * C31625 + C32193 * C31626 +
            (C31628 * C1360 + C32181 + C32181 + C151791 * C1376) * C152080 *
                C31627) *
               C151869 * C151914 -
           (C32193 * C31627 + C32192 * C31626 + C32191 * C31625 +
            (C31628 * C145 + C31646 + C31646 + C151791 * C161) * C152080 *
                C31624) *
               C151869 * C3101) *
              C152218)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152080 *
                C31624 +
            C31863 * C31625 + C31864 * C31626 + C31865 * C31627) *
               C151869 * C152265 -
           (C31866 * C31627 + C31865 * C31626 + C31864 * C31625 +
            C31863 * C31624) *
               C151869 * C152261 +
           (C31864 * C31624 + C31865 * C31625 + C31866 * C31626 +
            C32822 * C31627) *
               C151869 * C152249 -
           (C32823 * C31627 + C32822 * C31626 + C31866 * C31625 +
            C31865 * C31624) *
               C151869 * C152224) *
              C3241 +
          ((C31867 * C31624 + C31868 * C31625 + C31869 * C31626 +
            C31870 * C31627) *
               C151869 * C152261 -
           (C31869 * C31627 + C31868 * C31626 + C31867 * C31625 +
            (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152080 *
                C31624) *
               C151869 * C152265 -
           (C33142 * C31627 + C31870 * C31626 + C31869 * C31625 +
            C31868 * C31624) *
               C151869 * C152249 +
           (C31869 * C31624 + C31870 * C31625 + C33142 * C31626 +
            (C31628 * C24770 + C33138 + C33138 + C151791 * C24774) * C152080 *
                C31627) *
               C151869 * C152224) *
              C151834)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C45770 +
             C37949 * C45771 + C37950 * C45772) *
                C152187 +
            (C54346 + C54347 + C54348) * C152068) *
               C151869 * C3101 -
           ((C54349 + C54350 + C54351) * C152068 +
            (C54348 + C54347 + C54346) * C152187) *
               C151869 * C151914) *
              C152264 +
          (((C54352 + C54353 + C54354) * C152187 +
            (C54355 + C54356 + C54357) * C152068) *
               C151869 * C151914 -
           ((C54354 + C54353 + C54352) * C152068 +
            (C37952 * C45772 + C37951 * C45771 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C45770) *
                C152187) *
               C151869 * C3101) *
              C152257 +
          ((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C45770 +
             C37953 * C45771 + C37956 * C45772) *
                C152187 +
            (C54358 + C54359 + C54360) * C152068) *
               C151869 * C3101 -
           ((C54361 + C54362 + C54363) * C152068 +
            (C54360 + C54359 + C54358) * C152187) *
               C151869 * C151914) *
              C152242 +
          (((C54788 + C54789 + C54795) * C152187 +
            (C32189 * C45770 + C38162 * C45771 +
             (C31628 * C1542 + C38363 + C38363 + C151791 * C1566) * C45772) *
                C152068) *
               C151869 * C151914 -
           ((C54795 + C54789 + C54788) * C152068 +
            (C54996 * C45772 + C38366 * C45771 +
             (C31628 * C145 + C31646 + C31646 + C151791 * C161) * C45770) *
                C152187) *
               C151869 * C3101) *
              C152218)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C45770 +
             C37949 * C45771 + C37950 * C45772) *
                C152187 +
            (C54346 + C54347 + C54348) * C152068) *
               C151869 * C152265 -
           ((C54349 + C54350 + C54351) * C152068 +
            (C54348 + C54347 + C54346) * C152187) *
               C151869 * C152261 +
           ((C54351 + C54350 + C54349) * C152187 +
            (C55636 + C55637 + C55638) * C152068) *
               C151869 * C152249 -
           ((C55639 + C55640 + C55641) * C152068 +
            (C55638 + C55637 + C55636) * C152187) *
               C151869 * C152224) *
              C3241 +
          (((C54352 + C54353 + C54354) * C152187 +
            (C54355 + C54356 + C54357) * C152068) *
               C151869 * C152261 -
           ((C54354 + C54353 + C54352) * C152068 +
            (C37952 * C45772 + C37951 * C45771 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C45770) *
                C152187) *
               C151869 * C152265 -
           ((C56063 + C56064 + C56065) * C152068 +
            (C54357 + C54356 + C54355) * C152187) *
               C151869 * C152249 +
           ((C56065 + C56064 + C56063) * C152187 +
            (C31858 * C45770 + C33342 * C45771 +
             (C31628 * C25022 + C34069 + C34069 + C151791 * C25026) * C45772) *
                C152068) *
               C151869 * C152224) *
              C151834)) /
            (p * q * std::sqrt(p + q));
    d2ee[180] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152080 *
                 C31624 +
             C31863 * C31625 + C31864 * C31626 + C31865 * C31627) *
                C4107 -
            (C32570 * C31627 + C32571 * C31626 + C32572 * C31625 +
             (C31628 * C550 + C32024 + C32024 + C151791 * C574) * C152080 *
                 C31624) *
                C151956) *
               C151910 +
           ((C32572 * C31624 + C32571 * C31625 + C32570 * C31626 +
             C33004 * C31627) *
                C151956 -
            (C31866 * C31627 + C31865 * C31626 + C31864 * C31625 +
             C31863 * C31624) *
                C4107) *
               C151917 +
           ((C31864 * C31624 + C31865 * C31625 + C31866 * C31626 +
             C32822 * C31627) *
                C4107 -
            (C33483 * C31627 + C33004 * C31626 + C32570 * C31625 +
             C32571 * C31624) *
                C151956) *
               C3585) *
              C152158 +
          ((((C31628 * C549 + C32029 + C32029 + C151791 * C573) * C152080 *
                 C31624 +
             C32573 * C31625 + C32574 * C31626 + C32575 * C31627) *
                C151956 -
            (C31869 * C31627 + C31868 * C31626 + C31867 * C31625 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152080 *
                 C31624) *
                C4107) *
               C151910 +
           ((C31867 * C31624 + C31868 * C31625 + C31869 * C31626 +
             C31870 * C31627) *
                C4107 -
            (C33343 * C31627 + C32575 * C31626 + C32574 * C31625 +
             C32573 * C31624) *
                C151956) *
               C151917 +
           ((C32574 * C31624 + C32575 * C31625 + C33343 * C31626 +
             (C31628 * C25784 + C33339 + C33339 + C151791 * C25788) * C152080 *
                 C31627) *
                C151956 -
            (C33142 * C31627 + C31870 * C31626 + C31869 * C31625 +
             C31868 * C31624) *
                C4107) *
               C3585) *
              C151834)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
              C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
              C6086 * C160) *
                 C152080 * C152187 +
             (C6434 + C6435 + C6436) * C152080 * C152068) *
                C4107 -
            ((C7453 + C7454 + C7455) * C152080 * C152068 +
             (C6093 * C548 + C6673 + C6673 + C6086 * C572 + C6091 * C549 +
              C6674 + C6674 + C6085 * C573 + C6089 * C550 + C6675 + C6675 +
              C6084 * C574) *
                 C152080 * C152187) *
                C151956) *
               C151910 +
           (((C7455 + C7454 + C7453) * C152080 * C152187 +
             (C8122 + C8123 + C8124) * C152080 * C152068) *
                C151956 -
            ((C6437 + C6438 + C6439) * C152080 * C152068 +
             (C6436 + C6435 + C6434) * C152080 * C152187) *
                C4107) *
               C151917 +
           (((C6439 + C6438 + C6437) * C152080 * C152187 +
             (C7841 + C7842 + C7843) * C152080 * C152068) *
                C4107 -
            ((C8866 + C8867 + C8868) * C152080 * C152068 +
             (C8124 + C8123 + C8122) * C152080 * C152187) *
                C151956) *
               C3585) *
              C152158 +
          ((((C6089 * C549 + C6682 + C6682 + C6084 * C573 + C6091 * C548 +
              C6683 + C6683 + C6085 * C572 + C6093 * C547 + C6684 + C6684 +
              C6086 * C571) *
                 C152080 * C152187 +
             (C7456 + C7457 + C7458) * C152080 * C152068) *
                C151956 -
            ((C6442 + C6441 + C6440) * C152080 * C152068 +
             (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
              C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
              C6084 * C159) *
                 C152080 * C152187) *
                C4107) *
               C151910 +
           (((C6440 + C6441 + C6442) * C152080 * C152187 +
             (C6443 + C6444 + C6445) * C152080 * C152068) *
                C4107 -
            ((C8645 + C8646 + C8647) * C152080 * C152068 +
             (C7458 + C7457 + C7456) * C152080 * C152187) *
                C151956) *
               C151917 +
           (((C8647 + C8646 + C8645) * C152080 * C152187 +
             (C6089 * C2054 + C8636 + C8636 + C6084 * C2062 + C6091 * C2055 +
              C8637 + C8637 + C6085 * C2063 + C6093 * C2056 + C8638 + C8638 +
              C6086 * C2064) *
                 C152080 * C152068) *
                C151956 -
            ((C8337 + C8338 + C8339) * C152080 * C152068 +
             (C6445 + C6444 + C6443) * C152080 * C152187) *
                C4107) *
               C3585) *
              C151834)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C45770 +
              C37949 * C45771 + C37950 * C45772) *
                 C152187 +
             (C54346 + C54347 + C54348) * C152068) *
                C4107 -
            ((C55287 + C55288 + C55289) * C152068 +
             (C40513 * C45772 + C37950 * C45771 + C37949 * C45770) * C152187) *
                C151956) *
               C151910 +
           (((C55289 + C55288 + C55287) * C152187 +
             (C55863 + C55864 + C55865) * C152068) *
                C151956 -
            ((C54349 + C54350 + C54351) * C152068 +
             (C54348 + C54347 + C54346) * C152187) *
                C4107) *
               C151917 +
           (((C54351 + C54350 + C54349) * C152187 +
             (C55636 + C55637 + C55638) * C152068) *
                C4107 -
            ((C56553 + C56554 + C56555) * C152068 +
             (C55865 + C55864 + C55863) * C152187) *
                C151956) *
               C3585) *
              C152158 +
          ((((C37951 * C45770 + C37952 * C45771 + C41022 * C45772) * C152187 +
             (C55290 + C55291 + C55292) * C152068) *
                C151956 -
            ((C54354 + C54353 + C54352) * C152068 +
             (C37952 * C45772 + C37951 * C45771 +
              (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C45770) *
                 C152187) *
                C4107) *
               C151910 +
           (((C54352 + C54353 + C54354) * C152187 +
             (C54355 + C54356 + C54357) * C152068) *
                C4107 -
            ((C56356 + C56357 + C56358) * C152068 +
             (C55292 + C55291 + C55290) * C152187) *
                C151956) *
               C151917 +
           (((C56358 + C56357 + C56356) * C152187 +
             (C32566 * C45770 + C34076 * C45771 +
              (C31628 * C27086 + C34215 + C34215 + C151791 * C27090) * C45772) *
                 C152068) *
                C151956 -
            ((C56063 + C56064 + C56065) * C152068 +
             (C54357 + C54356 + C54355) * C152187) *
                C4107) *
               C3585) *
              C151834)) /
            (p * q * std::sqrt(p + q));
    d2ee[181] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152080 *
                C31624 +
            C31863 * C31625 + C31864 * C31626 + C31865 * C31627) *
               C151952 -
           (C32570 * C31627 + C32571 * C31626 + C32572 * C31625 +
            (C31628 * C550 + C32024 + C32024 + C151791 * C574) * C152080 *
                C31624) *
               C151959 +
           ((C31628 * C551 + C32025 + C32025 + C151791 * C575) * C152080 *
                C31624 +
            C33001 * C31625 + C33002 * C31626 + C33003 * C31627) *
               C4779) *
              C151910 +
          ((C32572 * C31624 + C32571 * C31625 + C32570 * C31626 +
            C33004 * C31627) *
               C151959 -
           (C31866 * C31627 + C31865 * C31626 + C31864 * C31625 +
            C31863 * C31624) *
               C151952 -
           (C33005 * C31627 + C33003 * C31626 + C33002 * C31625 +
            C33001 * C31624) *
               C4779) *
              C151917 +
          ((C31864 * C31624 + C31865 * C31625 + C31866 * C31626 +
            C32822 * C31627) *
               C151952 -
           (C33483 * C31627 + C33004 * C31626 + C32570 * C31625 +
            C32571 * C31624) *
               C151959 +
           (C33002 * C31624 + C33003 * C31625 + C33005 * C31626 +
            (C31628 * C32969 + C32985 + C32985 + C151791 * C32971) * C152080 *
                C31627) *
               C4779) *
              C3585) *
         C151823) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
             C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
             C6086 * C160) *
                C152080 * C152187 +
            (C6434 + C6435 + C6436) * C152080 * C152068) *
               C151952 -
           ((C7453 + C7454 + C7455) * C152080 * C152068 +
            (C6093 * C548 + C6673 + C6673 + C6086 * C572 + C6091 * C549 +
             C6674 + C6674 + C6085 * C573 + C6089 * C550 + C6675 + C6675 +
             C6084 * C574) *
                C152080 * C152187) *
               C151959 +
           ((C6089 * C551 + C6676 + C6676 + C6084 * C575 + C6091 * C552 +
             C6677 + C6677 + C6085 * C576 + C6093 * C553 + C6678 + C6678 +
             C6086 * C577) *
                C152080 * C152187 +
            (C8119 + C8120 + C8121) * C152080 * C152068) *
               C4779) *
              C151910 +
          (((C7455 + C7454 + C7453) * C152080 * C152187 +
            (C8122 + C8123 + C8124) * C152080 * C152068) *
               C151959 -
           ((C6437 + C6438 + C6439) * C152080 * C152068 +
            (C6436 + C6435 + C6434) * C152080 * C152187) *
               C151952 -
           ((C8125 + C8126 + C8127) * C152080 * C152068 +
            (C8121 + C8120 + C8119) * C152080 * C152187) *
               C4779) *
              C151917 +
          (((C6439 + C6438 + C6437) * C152080 * C152187 +
            (C7841 + C7842 + C7843) * C152080 * C152068) *
               C151952 -
           ((C8866 + C8867 + C8868) * C152080 * C152068 +
            (C8124 + C8123 + C8122) * C152080 * C152187) *
               C151959 +
           ((C8127 + C8126 + C8125) * C152080 * C152187 +
            (C6089 * C8064 + C8098 + C8098 + C6084 * C8070 + C6091 * C8065 +
             C8099 + C8099 + C6085 * C8071 + C6093 * C8066 + C8100 + C8100 +
             C6086 * C8072) *
                C152080 * C152068) *
               C4779) *
              C3585) *
         C151823) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C45770 +
             C37949 * C45771 + C37950 * C45772) *
                C152187 +
            (C54346 + C54347 + C54348) * C152068) *
               C151952 -
           ((C55287 + C55288 + C55289) * C152068 +
            (C40513 * C45772 + C37950 * C45771 + C37949 * C45770) * C152187) *
               C151959 +
           ((C37950 * C45770 + C40513 * C45771 + C40516 * C45772) * C152187 +
            (C55860 + C55861 + C55862) * C152068) *
               C4779) *
              C151910 +
          (((C55289 + C55288 + C55287) * C152187 +
            (C55863 + C55864 + C55865) * C152068) *
               C151959 -
           ((C54349 + C54350 + C54351) * C152068 +
            (C54348 + C54347 + C54346) * C152187) *
               C151952 -
           ((C55866 + C55867 + C55868) * C152068 +
            (C55862 + C55861 + C55860) * C152187) *
               C4779) *
              C151917 +
          (((C54351 + C54350 + C54349) * C152187 +
            (C55636 + C55637 + C55638) * C152068) *
               C151952 -
           ((C56553 + C56554 + C56555) * C152068 +
            (C55865 + C55864 + C55863) * C152187) *
               C151959 +
           ((C55868 + C55867 + C55866) * C152187 +
            (C32998 * C45770 + C34362 * C45771 +
             (C31628 * C33857 + C33868 + C33868 + C151791 * C33859) * C45772) *
                C152068) *
               C4779) *
              C3585) *
         C151823) /
            (p * q * std::sqrt(p + q));
    d2ee[182] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
                  C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
                  C6086 * C160) *
                     C152080 * C152187 +
                 (C6434 + C6435 + C6436) * C152080 * C152068) *
                    C4107 -
                ((C7453 + C7454 + C7455) * C152080 * C152068 +
                 (C6093 * C548 + C6673 + C6673 + C6086 * C572 + C6091 * C549 +
                  C6674 + C6674 + C6085 * C573 + C6089 * C550 + C6675 + C6675 +
                  C6084 * C574) *
                     C152080 * C152187) *
                    C151956) *
                   C3101 +
               (((C7455 + C7454 + C7453) * C152080 * C152187 +
                 (C8122 + C8123 + C8124) * C152080 * C152068) *
                    C151956 -
                ((C6437 + C6438 + C6439) * C152080 * C152068 +
                 (C6436 + C6435 + C6434) * C152080 * C152187) *
                    C4107) *
                   C151914) *
                  C152255 +
              ((((C6089 * C549 + C6682 + C6682 + C6084 * C573 + C6091 * C548 +
                  C6683 + C6683 + C6085 * C572 + C6093 * C547 + C6684 + C6684 +
                  C6086 * C571) *
                     C152080 * C152187 +
                 (C7456 + C7457 + C7458) * C152080 * C152068) *
                    C151956 -
                ((C6442 + C6441 + C6440) * C152080 * C152068 +
                 (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
                  C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
                  C6084 * C159) *
                     C152080 * C152187) *
                    C4107) *
                   C3101 +
               (((C6440 + C6441 + C6442) * C152080 * C152187 +
                 (C6443 + C6444 + C6445) * C152080 * C152068) *
                    C4107 -
                ((C8645 + C8646 + C8647) * C152080 * C152068 +
                 (C7458 + C7457 + C7456) * C152080 * C152187) *
                    C151956) *
                   C151914) *
                  C152240 +
              ((((C6089 * C144 + C6108 + C6108 + C6084 * C160 + C6091 * C145 +
                  C6109 + C6109 + C6085 * C161 + C6093 * C146 + C6110 + C6110 +
                  C6086 * C162) *
                     C152080 * C152187 +
                 (C6446 + C6447 + C6448) * C152080 * C152068) *
                    C4107 -
                ((C7459 + C7460 + C7461) * C152080 * C152068 +
                 (C6093 * C555 + C6697 + C6697 + C6086 * C579 + C6091 * C547 +
                  C6698 + C6698 + C6085 * C571 + C6089 * C548 + C6699 + C6699 +
                  C6084 * C572) *
                     C152080 * C152187) *
                    C151956) *
                   C3101 +
               (((C7461 + C7460 + C7459) * C152080 * C152187 +
                 (C6089 * C1536 + C7432 + C7432 + C6084 * C1560 +
                  C6091 * C1535 + C7433 + C7433 + C6085 * C1559 +
                  C6093 * C1916 + C7434 + C7434 + C6086 * C1918) *
                     C152080 * C152068) *
                    C151956 -
                ((C6449 + C6450 + C6451) * C152080 * C152068 +
                 (C6448 + C6447 + C6446) * C152080 * C152187) *
                    C4107) *
                   C151914) *
                  C152208) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
                 C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
                 C6086 * C160) *
                    C152080 * C152187 +
                (C6434 + C6435 + C6436) * C152080 * C152068) *
                   C4107 -
               ((C7453 + C7454 + C7455) * C152080 * C152068 +
                (C6093 * C548 + C6673 + C6673 + C6086 * C572 + C6091 * C549 +
                 C6674 + C6674 + C6085 * C573 + C6089 * C550 + C6675 + C6675 +
                 C6084 * C574) *
                    C152080 * C152187) *
                   C151956) *
                  C152265 +
              (((C7455 + C7454 + C7453) * C152080 * C152187 +
                (C8122 + C8123 + C8124) * C152080 * C152068) *
                   C151956 -
               ((C6437 + C6438 + C6439) * C152080 * C152068 +
                (C6436 + C6435 + C6434) * C152080 * C152187) *
                   C4107) *
                  C152261 +
              (((C6439 + C6438 + C6437) * C152080 * C152187 +
                (C7841 + C7842 + C7843) * C152080 * C152068) *
                   C4107 -
               ((C8866 + C8867 + C8868) * C152080 * C152068 +
                (C8124 + C8123 + C8122) * C152080 * C152187) *
                   C151956) *
                  C152249 +
              (((C8868 + C8867 + C8866) * C152080 * C152187 +
                (C6089 * C8841 + C8857 + C8857 + C6084 * C8847 + C6091 * C8842 +
                 C8858 + C8858 + C6085 * C8848 + C6093 * C8843 + C8859 + C8859 +
                 C6086 * C8849) *
                    C152080 * C152068) *
                   C151956 -
               ((C7844 + C7845 + C7846) * C152080 * C152068 +
                (C7843 + C7842 + C7841) * C152080 * C152187) *
                   C4107) *
                  C152224) *
             C151823) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
             C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
             C6086 * C160) *
                C152080 * C152187 +
            (C6434 + C6435 + C6436) * C152080 * C152068) *
               C152266 -
           ((C7453 + C7454 + C7455) * C152080 * C152068 +
            (C6093 * C548 + C6673 + C6673 + C6086 * C572 + C6091 * C549 +
             C6674 + C6674 + C6085 * C573 + C6089 * C550 + C6675 + C6675 +
             C6084 * C574) *
                C152080 * C152187) *
               C152263 +
           ((C6089 * C551 + C6676 + C6676 + C6084 * C575 + C6091 * C552 +
             C6677 + C6677 + C6085 * C576 + C6093 * C553 + C6678 + C6678 +
             C6086 * C577) *
                C152080 * C152187 +
            (C8119 + C8120 + C8121) * C152080 * C152068) *
               C152252 -
           ((C10174 + C10175 + C10176) * C152080 * C152068 +
            (C6093 * C2452 + C9439 + C9439 + C6086 * C2468 + C6091 * C2453 +
             C9440 + C9440 + C6085 * C2469 + C6089 * C2454 + C9441 + C9441 +
             C6084 * C2470) *
                C152080 * C152187) *
               C152230) *
              C3101 +
          (((C7455 + C7454 + C7453) * C152080 * C152187 +
            (C8122 + C8123 + C8124) * C152080 * C152068) *
               C152263 -
           ((C6437 + C6438 + C6439) * C152080 * C152068 +
            (C6436 + C6435 + C6434) * C152080 * C152187) *
               C152266 -
           ((C8125 + C8126 + C8127) * C152080 * C152068 +
            (C8121 + C8120 + C8119) * C152080 * C152187) *
               C152252 +
           ((C10176 + C10175 + C10174) * C152080 * C152187 +
            (C6089 * C10149 + C10165 + C10165 + C6084 * C10155 +
             C6091 * C10150 + C10166 + C10166 + C6085 * C10156 +
             C6093 * C10151 + C10167 + C10167 + C6086 * C10157) *
                C152080 * C152068) *
               C152230) *
              C151914) *
         C151823) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152080 *
                 C31624 +
             C31863 * C31625 + C31864 * C31626 + C31865 * C31627) *
                C4107 -
            (C32570 * C31627 + C32571 * C31626 + C32572 * C31625 +
             (C31628 * C550 + C32024 + C32024 + C151791 * C574) * C152080 *
                 C31624) *
                C151956) *
               C3101 +
           ((C32572 * C31624 + C32571 * C31625 + C32570 * C31626 +
             C33004 * C31627) *
                C151956 -
            (C31866 * C31627 + C31865 * C31626 + C31864 * C31625 +
             C31863 * C31624) *
                C4107) *
               C151914) *
              C152255 +
          ((((C31628 * C549 + C32029 + C32029 + C151791 * C573) * C152080 *
                 C31624 +
             C32573 * C31625 + C32574 * C31626 + C32575 * C31627) *
                C151956 -
            (C31869 * C31627 + C31868 * C31626 + C31867 * C31625 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152080 *
                 C31624) *
                C4107) *
               C3101 +
           ((C31867 * C31624 + C31868 * C31625 + C31869 * C31626 +
             C31870 * C31627) *
                C4107 -
            (C33343 * C31627 + C32575 * C31626 + C32574 * C31625 +
             C32573 * C31624) *
                C151956) *
               C151914) *
              C152240 +
          ((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C152080 *
                 C31624 +
             C31871 * C31625 + C31872 * C31626 + C31873 * C31627) *
                C4107 -
            (C32576 * C31627 + C32577 * C31626 + C32578 * C31625 +
             (C31628 * C548 + C32040 + C32040 + C151791 * C572) * C152080 *
                 C31624) *
                C151956) *
               C3101 +
           ((C32578 * C31624 + C32577 * C31625 + C32576 * C31626 +
             (C31628 * C8843 + C32542 + C32542 + C151791 * C8849) * C152080 *
                 C31627) *
                C151956 -
            (C31874 * C31627 + C31873 * C31626 + C31872 * C31625 +
             C31871 * C31624) *
                C4107) *
               C151914) *
              C152208)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152080 *
                C31624 +
            C31863 * C31625 + C31864 * C31626 + C31865 * C31627) *
               C4107 -
           (C32570 * C31627 + C32571 * C31626 + C32572 * C31625 +
            (C31628 * C550 + C32024 + C32024 + C151791 * C574) * C152080 *
                C31624) *
               C151956) *
              C152265 +
          ((C32572 * C31624 + C32571 * C31625 + C32570 * C31626 +
            C33004 * C31627) *
               C151956 -
           (C31866 * C31627 + C31865 * C31626 + C31864 * C31625 +
            C31863 * C31624) *
               C4107) *
              C152261 +
          ((C31864 * C31624 + C31865 * C31625 + C31866 * C31626 +
            C32822 * C31627) *
               C4107 -
           (C33483 * C31627 + C33004 * C31626 + C32570 * C31625 +
            C32571 * C31624) *
               C151956) *
              C152249 +
          ((C32570 * C31624 + C33004 * C31625 + C33483 * C31626 +
            (C31628 * C33473 + C33479 + C33479 + C151791 * C33475) * C152080 *
                C31627) *
               C151956 -
           (C32823 * C31627 + C32822 * C31626 + C31866 * C31625 +
            C31865 * C31624) *
               C4107) *
              C152224) *
         C151823) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152080 *
                C31624 +
            C31863 * C31625 + C31864 * C31626 + C31865 * C31627) *
               C152266 -
           (C32570 * C31627 + C32571 * C31626 + C32572 * C31625 +
            (C31628 * C550 + C32024 + C32024 + C151791 * C574) * C152080 *
                C31624) *
               C152263 +
           ((C31628 * C551 + C32025 + C32025 + C151791 * C575) * C152080 *
                C31624 +
            C33001 * C31625 + C33002 * C31626 + C33003 * C31627) *
               C152252 -
           (C34365 * C31627 + C34366 * C31626 + C34367 * C31625 +
            (C31628 * C2454 + C33864 + C33864 + C151791 * C2470) * C152080 *
                C31624) *
               C152230) *
              C3101 +
          ((C32572 * C31624 + C32571 * C31625 + C32570 * C31626 +
            C33004 * C31627) *
               C152263 -
           (C31866 * C31627 + C31865 * C31626 + C31864 * C31625 +
            C31863 * C31624) *
               C152266 -
           (C33005 * C31627 + C33003 * C31626 + C33002 * C31625 +
            C33001 * C31624) *
               C152252 +
           (C34367 * C31624 + C34366 * C31625 + C34365 * C31626 +
            (C31628 * C34345 + C34355 + C34355 + C151791 * C34347) * C152080 *
                C31627) *
               C152230) *
              C151914) *
         C151823) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C45770 +
              C37949 * C45771 + C37950 * C45772) *
                 C152187 +
             (C54346 + C54347 + C54348) * C152068) *
                C4107 -
            ((C55287 + C55288 + C55289) * C152068 +
             (C40513 * C45772 + C37950 * C45771 + C37949 * C45770) * C152187) *
                C151956) *
               C3101 +
           (((C55289 + C55288 + C55287) * C152187 +
             (C55863 + C55864 + C55865) * C152068) *
                C151956 -
            ((C54349 + C54350 + C54351) * C152068 +
             (C54348 + C54347 + C54346) * C152187) *
                C4107) *
               C151914) *
              C152255 +
          ((((C37951 * C45770 + C37952 * C45771 + C41022 * C45772) * C152187 +
             (C55290 + C55291 + C55292) * C152068) *
                C151956 -
            ((C54354 + C54353 + C54352) * C152068 +
             (C37952 * C45772 + C37951 * C45771 +
              (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C45770) *
                 C152187) *
                C4107) *
               C3101 +
           (((C54352 + C54353 + C54354) * C152187 +
             (C54355 + C54356 + C54357) * C152068) *
                C4107 -
            ((C56356 + C56357 + C56358) * C152068 +
             (C55292 + C55291 + C55290) * C152187) *
                C151956) *
               C151914) *
              C152240 +
          (((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C45770 +
              C37953 * C45771 + C37956 * C45772) *
                 C152187 +
             (C54358 + C54359 + C54360) * C152068) *
                C4107 -
            ((C55293 + C55294 + C55295) * C152068 +
             (C54593 * C45772 + C37956 * C45771 + C37953 * C45770) * C152187) *
                C151956) *
               C3101 +
           (((C55295 + C55294 + C55293) * C152187 +
             (C32568 * C45770 + C37954 * C45771 +
              (C31628 * C10151 + C37932 + C37932 + C151791 * C10157) * C45772) *
                 C152068) *
                C151956 -
            ((C54361 + C54362 + C54363) * C152068 +
             (C54360 + C54359 + C54358) * C152187) *
                C4107) *
               C151914) *
              C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C45770 +
             C37949 * C45771 + C37950 * C45772) *
                C152187 +
            (C54346 + C54347 + C54348) * C152068) *
               C4107 -
           ((C55287 + C55288 + C55289) * C152068 +
            (C40513 * C45772 + C37950 * C45771 + C37949 * C45770) * C152187) *
               C151956) *
              C152265 +
          (((C55289 + C55288 + C55287) * C152187 +
            (C55863 + C55864 + C55865) * C152068) *
               C151956 -
           ((C54349 + C54350 + C54351) * C152068 +
            (C54348 + C54347 + C54346) * C152187) *
               C4107) *
              C152261 +
          (((C54351 + C54350 + C54349) * C152187 +
            (C55636 + C55637 + C55638) * C152068) *
               C4107 -
           ((C56553 + C56554 + C56555) * C152068 +
            (C55865 + C55864 + C55863) * C152187) *
               C151956) *
              C152249 +
          (((C56555 + C56554 + C56553) * C152187 +
            (C32999 * C45770 + C33000 * C45771 +
             (C31628 * C34345 + C34355 + C34355 + C151791 * C34347) * C45772) *
                C152068) *
               C151956 -
           ((C55639 + C55640 + C55641) * C152068 +
            (C55638 + C55637 + C55636) * C152187) *
               C4107) *
              C152224) *
         C151823) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C45770 +
             C37949 * C45771 + C37950 * C45772) *
                C152187 +
            (C54346 + C54347 + C54348) * C152068) *
               C152266 -
           ((C55287 + C55288 + C55289) * C152068 +
            (C40513 * C45772 + C37950 * C45771 + C37949 * C45770) * C152187) *
               C152263 +
           ((C37950 * C45770 + C40513 * C45771 + C40516 * C45772) * C152187 +
            (C55860 + C55861 + C55862) * C152068) *
               C152252 -
           ((C57822 + C57823 + C57824) * C152068 +
            (C57128 * C45772 + C40516 * C45771 + C40513 * C45770) * C152187) *
               C152230) *
              C3101 +
          (((C55289 + C55288 + C55287) * C152187 +
            (C55863 + C55864 + C55865) * C152068) *
               C152263 -
           ((C54349 + C54350 + C54351) * C152068 +
            (C54348 + C54347 + C54346) * C152187) *
               C152266 -
           ((C55866 + C55867 + C55868) * C152068 +
            (C55862 + C55861 + C55860) * C152187) *
               C152252 +
           ((C57824 + C57823 + C57822) * C152187 +
            (C34363 * C45770 + C40514 * C45771 +
             (C31628 * C40488 + C40504 + C40504 + C151791 * C40492) * C45772) *
                C152068) *
               C152230) *
              C151914) *
         C151823) /
            (p * q * std::sqrt(p + q));
    d2ee[183] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152080 *
                 C31624 +
             C31863 * C31625 + C31864 * C31626 + C31865 * C31627) *
                C151952 -
            (C32570 * C31627 + C32571 * C31626 + C32572 * C31625 +
             (C31628 * C550 + C32024 + C32024 + C151791 * C574) * C152080 *
                 C31624) *
                C151959 +
            ((C31628 * C551 + C32025 + C32025 + C151791 * C575) * C152080 *
                 C31624 +
             C33001 * C31625 + C33002 * C31626 + C33003 * C31627) *
                C4779) *
               C3101 +
           ((C32572 * C31624 + C32571 * C31625 + C32570 * C31626 +
             C33004 * C31627) *
                C151959 -
            (C31866 * C31627 + C31865 * C31626 + C31864 * C31625 +
             C31863 * C31624) *
                C151952 -
            (C33005 * C31627 + C33003 * C31626 + C33002 * C31625 +
             C33001 * C31624) *
                C4779) *
               C151914) *
              C152158 +
          ((((C31628 * C549 + C32029 + C32029 + C151791 * C573) * C152080 *
                 C31624 +
             C32573 * C31625 + C32574 * C31626 + C32575 * C31627) *
                C151959 -
            (C31869 * C31627 + C31868 * C31626 + C31867 * C31625 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152080 *
                 C31624) *
                C151952 -
            (C34079 * C31627 + C34080 * C31626 + C34081 * C31625 +
             (C31628 * C552 + C32036 + C32036 + C151791 * C576) * C152080 *
                 C31624) *
                C4779) *
               C3101 +
           ((C31867 * C31624 + C31868 * C31625 + C31869 * C31626 +
             C31870 * C31627) *
                C151952 -
            (C33343 * C31627 + C32575 * C31626 + C32574 * C31625 +
             C32573 * C31624) *
                C151959 +
            (C34081 * C31624 + C34080 * C31625 + C34079 * C31626 +
             (C31628 * C25022 + C34069 + C34069 + C151791 * C25026) * C152080 *
                 C31627) *
                C4779) *
               C151914) *
              C151834)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
              C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
              C6086 * C160) *
                 C152080 * C152187 +
             (C6434 + C6435 + C6436) * C152080 * C152068) *
                C151952 -
            ((C7453 + C7454 + C7455) * C152080 * C152068 +
             (C6093 * C548 + C6673 + C6673 + C6086 * C572 + C6091 * C549 +
              C6674 + C6674 + C6085 * C573 + C6089 * C550 + C6675 + C6675 +
              C6084 * C574) *
                 C152080 * C152187) *
                C151959 +
            ((C6089 * C551 + C6676 + C6676 + C6084 * C575 + C6091 * C552 +
              C6677 + C6677 + C6085 * C576 + C6093 * C553 + C6678 + C6678 +
              C6086 * C577) *
                 C152080 * C152187 +
             (C8119 + C8120 + C8121) * C152080 * C152068) *
                C4779) *
               C3101 +
           (((C7455 + C7454 + C7453) * C152080 * C152187 +
             (C8122 + C8123 + C8124) * C152080 * C152068) *
                C151959 -
            ((C6437 + C6438 + C6439) * C152080 * C152068 +
             (C6436 + C6435 + C6434) * C152080 * C152187) *
                C151952 -
            ((C8125 + C8126 + C8127) * C152080 * C152068 +
             (C8121 + C8120 + C8119) * C152080 * C152187) *
                C4779) *
               C151914) *
              C152158 +
          ((((C6089 * C549 + C6682 + C6682 + C6084 * C573 + C6091 * C548 +
              C6683 + C6683 + C6085 * C572 + C6093 * C547 + C6684 + C6684 +
              C6086 * C571) *
                 C152080 * C152187 +
             (C7456 + C7457 + C7458) * C152080 * C152068) *
                C151959 -
            ((C6442 + C6441 + C6440) * C152080 * C152068 +
             (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
              C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
              C6084 * C159) *
                 C152080 * C152187) *
                C151952 -
            ((C9753 + C9754 + C9755) * C152080 * C152068 +
             (C6093 * C554 + C6691 + C6691 + C6086 * C578 + C6091 * C553 +
              C6692 + C6692 + C6085 * C577 + C6089 * C552 + C6693 + C6693 +
              C6084 * C576) *
                 C152080 * C152187) *
                C4779) *
               C3101 +
           (((C6440 + C6441 + C6442) * C152080 * C152187 +
             (C6443 + C6444 + C6445) * C152080 * C152068) *
                C151952 -
            ((C8645 + C8646 + C8647) * C152080 * C152068 +
             (C7458 + C7457 + C7456) * C152080 * C152187) *
                C151959 +
            ((C9755 + C9754 + C9753) * C152080 * C152187 +
             (C6089 * C1540 + C9744 + C9744 + C6084 * C1564 + C6091 * C1541 +
              C9745 + C9745 + C6085 * C1565 + C6093 * C1542 + C9746 + C9746 +
              C6086 * C1566) *
                 C152080 * C152068) *
                C4779) *
               C151914) *
              C151834)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C45770 +
              C37949 * C45771 + C37950 * C45772) *
                 C152187 +
             (C54346 + C54347 + C54348) * C152068) *
                C151952 -
            ((C55287 + C55288 + C55289) * C152068 +
             (C40513 * C45772 + C37950 * C45771 + C37949 * C45770) * C152187) *
                C151959 +
            ((C37950 * C45770 + C40513 * C45771 + C40516 * C45772) * C152187 +
             (C55860 + C55861 + C55862) * C152068) *
                C4779) *
               C3101 +
           (((C55289 + C55288 + C55287) * C152187 +
             (C55863 + C55864 + C55865) * C152068) *
                C151959 -
            ((C54349 + C54350 + C54351) * C152068 +
             (C54348 + C54347 + C54346) * C152187) *
                C151952 -
            ((C55866 + C55867 + C55868) * C152068 +
             (C55862 + C55861 + C55860) * C152187) *
                C4779) *
               C151914) *
              C152158 +
          ((((C37951 * C45770 + C37952 * C45771 + C41022 * C45772) * C152187 +
             (C55290 + C55291 + C55292) * C152068) *
                C151959 -
            ((C54354 + C54353 + C54352) * C152068 +
             (C37952 * C45772 + C37951 * C45771 +
              (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C45770) *
                 C152187) *
                C151952 -
            ((C57426 + C57421 + C57422) * C152068 +
             (C57627 * C45772 + C41022 * C45771 + C37952 * C45770) * C152187) *
                C4779) *
               C3101 +
           (((C54352 + C54353 + C54354) * C152187 +
             (C54355 + C54356 + C54357) * C152068) *
                C151952 -
            ((C56356 + C56357 + C56358) * C152068 +
             (C55292 + C55291 + C55290) * C152187) *
                C151959 +
            ((C57422 + C57421 + C57426) * C152187 +
             (C34077 * C45770 + C40817 * C45771 +
              (C31628 * C26362 + C41019 + C41019 + C151791 * C26366) * C45772) *
                 C152068) *
                C4779) *
               C151914) *
              C151834)) /
            (p * q * std::sqrt(p + q));
    d2ee[184] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
             C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
             C6086 * C160) *
                C152080 * C152187 +
            (C6434 + C6435 + C6436) * C152080 * C152068) *
               C4107 -
           ((C7453 + C7454 + C7455) * C152080 * C152068 +
            (C6093 * C548 + C6673 + C6673 + C6086 * C572 + C6091 * C549 +
             C6674 + C6674 + C6085 * C573 + C6089 * C550 + C6675 + C6675 +
             C6084 * C574) *
                C152080 * C152187) *
               C151956) *
              C152265 +
          (((C7455 + C7454 + C7453) * C152080 * C152187 +
            (C8122 + C8123 + C8124) * C152080 * C152068) *
               C151956 -
           ((C6437 + C6438 + C6439) * C152080 * C152068 +
            (C6436 + C6435 + C6434) * C152080 * C152187) *
               C4107) *
              C152261 +
          (((C6439 + C6438 + C6437) * C152080 * C152187 +
            (C7841 + C7842 + C7843) * C152080 * C152068) *
               C4107 -
           ((C8866 + C8867 + C8868) * C152080 * C152068 +
            (C8124 + C8123 + C8122) * C152080 * C152187) *
               C151956) *
              C152249 +
          (((C8868 + C8867 + C8866) * C152080 * C152187 +
            (C6089 * C8841 + C8857 + C8857 + C6084 * C8847 + C6091 * C8842 +
             C8858 + C8858 + C6085 * C8848 + C6093 * C8843 + C8859 + C8859 +
             C6086 * C8849) *
                C152080 * C152068) *
               C151956 -
           ((C7844 + C7845 + C7846) * C152080 * C152068 +
            (C7843 + C7842 + C7841) * C152080 * C152187) *
               C4107) *
              C152224) *
         C151823) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
              C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
              C6086 * C160) *
                 C152080 * C152187 +
             (C6434 + C6435 + C6436) * C152080 * C152068) *
                C4107 -
            ((C7453 + C7454 + C7455) * C152080 * C152068 +
             (C6093 * C548 + C6673 + C6673 + C6086 * C572 + C6091 * C549 +
              C6674 + C6674 + C6085 * C573 + C6089 * C550 + C6675 + C6675 +
              C6084 * C574) *
                 C152080 * C152187) *
                C151956) *
               C3101 +
           (((C7455 + C7454 + C7453) * C152080 * C152187 +
             (C8122 + C8123 + C8124) * C152080 * C152068) *
                C151956 -
            ((C6437 + C6438 + C6439) * C152080 * C152068 +
             (C6436 + C6435 + C6434) * C152080 * C152187) *
                C4107) *
               C151914) *
              C152255 +
          ((((C6089 * C549 + C6682 + C6682 + C6084 * C573 + C6091 * C548 +
              C6683 + C6683 + C6085 * C572 + C6093 * C547 + C6684 + C6684 +
              C6086 * C571) *
                 C152080 * C152187 +
             (C7456 + C7457 + C7458) * C152080 * C152068) *
                C151956 -
            ((C6442 + C6441 + C6440) * C152080 * C152068 +
             (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
              C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
              C6084 * C159) *
                 C152080 * C152187) *
                C4107) *
               C3101 +
           (((C6440 + C6441 + C6442) * C152080 * C152187 +
             (C6443 + C6444 + C6445) * C152080 * C152068) *
                C4107 -
            ((C8645 + C8646 + C8647) * C152080 * C152068 +
             (C7458 + C7457 + C7456) * C152080 * C152187) *
                C151956) *
               C151914) *
              C152240 +
          ((((C6089 * C144 + C6108 + C6108 + C6084 * C160 + C6091 * C145 +
              C6109 + C6109 + C6085 * C161 + C6093 * C146 + C6110 + C6110 +
              C6086 * C162) *
                 C152080 * C152187 +
             (C6446 + C6447 + C6448) * C152080 * C152068) *
                C4107 -
            ((C7459 + C7460 + C7461) * C152080 * C152068 +
             (C6093 * C555 + C6697 + C6697 + C6086 * C579 + C6091 * C547 +
              C6698 + C6698 + C6085 * C571 + C6089 * C548 + C6699 + C6699 +
              C6084 * C572) *
                 C152080 * C152187) *
                C151956) *
               C3101 +
           (((C7461 + C7460 + C7459) * C152080 * C152187 +
             (C6089 * C1536 + C7432 + C7432 + C6084 * C1560 + C6091 * C1535 +
              C7433 + C7433 + C6085 * C1559 + C6093 * C1916 + C7434 + C7434 +
              C6086 * C1918) *
                 C152080 * C152068) *
                C151956 -
            ((C6449 + C6450 + C6451) * C152080 * C152068 +
             (C6448 + C6447 + C6446) * C152080 * C152187) *
                C4107) *
               C151914) *
              C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152080 *
                 C31624 +
             C31863 * C31625 + C31864 * C31626 + C31865 * C31627) *
                C4107 -
            (C32570 * C31627 + C32571 * C31626 + C32572 * C31625 +
             (C31628 * C550 + C32024 + C32024 + C151791 * C574) * C152080 *
                 C31624) *
                C151956) *
               C3101 +
           ((C32572 * C31624 + C32571 * C31625 + C32570 * C31626 +
             C33004 * C31627) *
                C151956 -
            (C31866 * C31627 + C31865 * C31626 + C31864 * C31625 +
             C31863 * C31624) *
                C4107) *
               C151914) *
              C152255 +
          ((((C31628 * C549 + C32029 + C32029 + C151791 * C573) * C152080 *
                 C31624 +
             C32573 * C31625 + C32574 * C31626 + C32575 * C31627) *
                C151956 -
            (C31869 * C31627 + C31868 * C31626 + C31867 * C31625 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152080 *
                 C31624) *
                C4107) *
               C3101 +
           ((C31867 * C31624 + C31868 * C31625 + C31869 * C31626 +
             C31870 * C31627) *
                C4107 -
            (C33343 * C31627 + C32575 * C31626 + C32574 * C31625 +
             C32573 * C31624) *
                C151956) *
               C151914) *
              C152240 +
          ((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C152080 *
                 C31624 +
             C31871 * C31625 + C31872 * C31626 + C31873 * C31627) *
                C4107 -
            (C32576 * C31627 + C32577 * C31626 + C32578 * C31625 +
             (C31628 * C548 + C32040 + C32040 + C151791 * C572) * C152080 *
                 C31624) *
                C151956) *
               C3101 +
           ((C32578 * C31624 + C32577 * C31625 + C32576 * C31626 +
             (C31628 * C8843 + C32542 + C32542 + C151791 * C8849) * C152080 *
                 C31627) *
                C151956 -
            (C31874 * C31627 + C31873 * C31626 + C31872 * C31625 +
             C31871 * C31624) *
                C4107) *
               C151914) *
              C152208)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152080 *
                C31624 +
            C31863 * C31625 + C31864 * C31626 + C31865 * C31627) *
               C4107 -
           (C32570 * C31627 + C32571 * C31626 + C32572 * C31625 +
            (C31628 * C550 + C32024 + C32024 + C151791 * C574) * C152080 *
                C31624) *
               C151956) *
              C152265 +
          ((C32572 * C31624 + C32571 * C31625 + C32570 * C31626 +
            C33004 * C31627) *
               C151956 -
           (C31866 * C31627 + C31865 * C31626 + C31864 * C31625 +
            C31863 * C31624) *
               C4107) *
              C152261 +
          ((C31864 * C31624 + C31865 * C31625 + C31866 * C31626 +
            C32822 * C31627) *
               C4107 -
           (C33483 * C31627 + C33004 * C31626 + C32570 * C31625 +
            C32571 * C31624) *
               C151956) *
              C152249 +
          ((C32570 * C31624 + C33004 * C31625 + C33483 * C31626 +
            (C31628 * C33473 + C33479 + C33479 + C151791 * C33475) * C152080 *
                C31627) *
               C151956 -
           (C32823 * C31627 + C32822 * C31626 + C31866 * C31625 +
            C31865 * C31624) *
               C4107) *
              C152224) *
         C151823) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C45770 +
              C37949 * C45771 + C37950 * C45772) *
                 C152187 +
             (C54346 + C54347 + C54348) * C152068) *
                C4107 -
            ((C55287 + C55288 + C55289) * C152068 +
             (C40513 * C45772 + C37950 * C45771 + C37949 * C45770) * C152187) *
                C151956) *
               C3101 +
           (((C55289 + C55288 + C55287) * C152187 +
             (C55863 + C55864 + C55865) * C152068) *
                C151956 -
            ((C54349 + C54350 + C54351) * C152068 +
             (C54348 + C54347 + C54346) * C152187) *
                C4107) *
               C151914) *
              C152255 +
          ((((C37951 * C45770 + C37952 * C45771 + C41022 * C45772) * C152187 +
             (C55290 + C55291 + C55292) * C152068) *
                C151956 -
            ((C54354 + C54353 + C54352) * C152068 +
             (C37952 * C45772 + C37951 * C45771 +
              (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C45770) *
                 C152187) *
                C4107) *
               C3101 +
           (((C54352 + C54353 + C54354) * C152187 +
             (C54355 + C54356 + C54357) * C152068) *
                C4107 -
            ((C56356 + C56357 + C56358) * C152068 +
             (C55292 + C55291 + C55290) * C152187) *
                C151956) *
               C151914) *
              C152240 +
          (((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C45770 +
              C37953 * C45771 + C37956 * C45772) *
                 C152187 +
             (C54358 + C54359 + C54360) * C152068) *
                C4107 -
            ((C55293 + C55294 + C55295) * C152068 +
             (C54593 * C45772 + C37956 * C45771 + C37953 * C45770) * C152187) *
                C151956) *
               C3101 +
           (((C55295 + C55294 + C55293) * C152187 +
             (C32568 * C45770 + C37954 * C45771 +
              (C31628 * C10151 + C37932 + C37932 + C151791 * C10157) * C45772) *
                 C152068) *
                C151956 -
            ((C54361 + C54362 + C54363) * C152068 +
             (C54360 + C54359 + C54358) * C152187) *
                C4107) *
               C151914) *
              C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C45770 +
             C37949 * C45771 + C37950 * C45772) *
                C152187 +
            (C54346 + C54347 + C54348) * C152068) *
               C4107 -
           ((C55287 + C55288 + C55289) * C152068 +
            (C40513 * C45772 + C37950 * C45771 + C37949 * C45770) * C152187) *
               C151956) *
              C152265 +
          (((C55289 + C55288 + C55287) * C152187 +
            (C55863 + C55864 + C55865) * C152068) *
               C151956 -
           ((C54349 + C54350 + C54351) * C152068 +
            (C54348 + C54347 + C54346) * C152187) *
               C4107) *
              C152261 +
          (((C54351 + C54350 + C54349) * C152187 +
            (C55636 + C55637 + C55638) * C152068) *
               C4107 -
           ((C56553 + C56554 + C56555) * C152068 +
            (C55865 + C55864 + C55863) * C152187) *
               C151956) *
              C152249 +
          (((C56555 + C56554 + C56553) * C152187 +
            (C32999 * C45770 + C33000 * C45771 +
             (C31628 * C34345 + C34355 + C34355 + C151791 * C34347) * C45772) *
                C152068) *
               C151956 -
           ((C55639 + C55640 + C55641) * C152068 +
            (C55638 + C55637 + C55636) * C152187) *
               C4107) *
              C152224) *
         C151823) /
            (p * q * std::sqrt(p + q));
    d2ee[185] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
                 C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
                 C6086 * C160) *
                    C152080 * C152187 +
                (C6434 + C6435 + C6436) * C152080 * C152068) *
                   C151869 * C152172 -
               ((C6437 + C6438 + C6439) * C152080 * C152068 +
                (C6436 + C6435 + C6434) * C152080 * C152187) *
                   C151869 * C151914) *
                  C739 +
              (((C6440 + C6441 + C6442) * C152080 * C152187 +
                (C6443 + C6444 + C6445) * C152080 * C152068) *
                   C151869 * C151914 -
               ((C6442 + C6441 + C6440) * C152080 * C152068 +
                (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
                 C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
                 C6084 * C159) *
                    C152080 * C152187) *
                   C151869 * C152172) *
                  C740 +
              (((C6089 * C144 + C6108 + C6108 + C6084 * C160 + C6091 * C145 +
                 C6109 + C6109 + C6085 * C161 + C6093 * C146 + C6110 + C6110 +
                 C6086 * C162) *
                    C152080 * C152187 +
                (C6446 + C6447 + C6448) * C152080 * C152068) *
                   C151869 * C152172 -
               ((C6449 + C6450 + C6451) * C152080 * C152068 +
                (C6448 + C6447 + C6446) * C152080 * C152187) *
                   C151869 * C151914) *
                  C741 +
              (((C6915 + C6916 + C6917) * C152080 * C152187 +
                (C6089 * C345 + C6906 + C6906 + C6084 * C369 + C6091 * C347 +
                 C6907 + C6907 + C6085 * C371 + C6093 * C349 + C6908 + C6908 +
                 C6086 * C373) *
                    C152080 * C152068) *
                   C151869 * C151914 -
               ((C6917 + C6916 + C6915) * C152080 * C152068 +
                (C6093 * C147 + C6117 + C6117 + C6086 * C163 + C6091 * C146 +
                 C6118 + C6118 + C6085 * C162 + C6089 * C145 + C6119 + C6119 +
                 C6084 * C161) *
                    C152080 * C152187) *
                   C151869 * C152172) *
                  C152218) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
                 C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
                 C6086 * C160) *
                    C152080 * C152187 +
                (C6434 + C6435 + C6436) * C152080 * C152068) *
                   C151869 * C1709 -
               ((C6437 + C6438 + C6439) * C152080 * C152068 +
                (C6436 + C6435 + C6434) * C152080 * C152187) *
                   C151869 * C1710 +
               ((C6439 + C6438 + C6437) * C152080 * C152187 +
                (C7841 + C7842 + C7843) * C152080 * C152068) *
                   C151869 * C1711 -
               ((C7844 + C7845 + C7846) * C152080 * C152068 +
                (C7843 + C7842 + C7841) * C152080 * C152187) *
                   C151869 * C152224) *
                  C152158 +
              (((C6440 + C6441 + C6442) * C152080 * C152187 +
                (C6443 + C6444 + C6445) * C152080 * C152068) *
                   C151869 * C1710 -
               ((C6442 + C6441 + C6440) * C152080 * C152068 +
                (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
                 C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
                 C6084 * C159) *
                    C152080 * C152187) *
                   C151869 * C1709 -
               ((C8337 + C8338 + C8339) * C152080 * C152068 +
                (C6445 + C6444 + C6443) * C152080 * C152187) *
                   C151869 * C1711 +
               ((C8339 + C8338 + C8337) * C152080 * C152187 +
                (C6089 * C1358 + C8328 + C8328 + C6084 * C1374 + C6091 * C1359 +
                 C8329 + C8329 + C6085 * C1375 + C6093 * C1360 + C8330 + C8330 +
                 C6086 * C1376) *
                    C152080 * C152068) *
                   C151869 * C152224) *
                  C151834)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
              C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
              C6086 * C160) *
                 C152080 * C152187 +
             (C6434 + C6435 + C6436) * C152080 * C152068) *
                C2215 -
            ((C7453 + C7454 + C7455) * C152080 * C152068 +
             (C6093 * C548 + C6673 + C6673 + C6086 * C572 + C6091 * C549 +
              C6674 + C6674 + C6085 * C573 + C6089 * C550 + C6675 + C6675 +
              C6084 * C574) *
                 C152080 * C152187) *
                C2216 +
            ((C6089 * C551 + C6676 + C6676 + C6084 * C575 + C6091 * C552 +
              C6677 + C6677 + C6085 * C576 + C6093 * C553 + C6678 + C6678 +
              C6086 * C577) *
                 C152080 * C152187 +
             (C8119 + C8120 + C8121) * C152080 * C152068) *
                C152217) *
               C152172 +
           (((C7455 + C7454 + C7453) * C152080 * C152187 +
             (C8122 + C8123 + C8124) * C152080 * C152068) *
                C2216 -
            ((C6437 + C6438 + C6439) * C152080 * C152068 +
             (C6436 + C6435 + C6434) * C152080 * C152187) *
                C2215 -
            ((C8125 + C8126 + C8127) * C152080 * C152068 +
             (C8121 + C8120 + C8119) * C152080 * C152187) *
                C152217) *
               C151914) *
              C152158 +
          ((((C6089 * C549 + C6682 + C6682 + C6084 * C573 + C6091 * C548 +
              C6683 + C6683 + C6085 * C572 + C6093 * C547 + C6684 + C6684 +
              C6086 * C571) *
                 C152080 * C152187 +
             (C7456 + C7457 + C7458) * C152080 * C152068) *
                C2216 -
            ((C6442 + C6441 + C6440) * C152080 * C152068 +
             (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
              C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
              C6084 * C159) *
                 C152080 * C152187) *
                C2215 -
            ((C9753 + C9754 + C9755) * C152080 * C152068 +
             (C6093 * C554 + C6691 + C6691 + C6086 * C578 + C6091 * C553 +
              C6692 + C6692 + C6085 * C577 + C6089 * C552 + C6693 + C6693 +
              C6084 * C576) *
                 C152080 * C152187) *
                C152217) *
               C152172 +
           (((C6440 + C6441 + C6442) * C152080 * C152187 +
             (C6443 + C6444 + C6445) * C152080 * C152068) *
                C2215 -
            ((C8645 + C8646 + C8647) * C152080 * C152068 +
             (C7458 + C7457 + C7456) * C152080 * C152187) *
                C2216 +
            ((C9755 + C9754 + C9753) * C152080 * C152187 +
             (C6089 * C1540 + C9744 + C9744 + C6084 * C1564 + C6091 * C1541 +
              C9745 + C9745 + C6085 * C1565 + C6093 * C1542 + C9746 + C9746 +
              C6086 * C1566) *
                 C152080 * C152068) *
                C152217) *
               C151914) *
              C151834)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152080 *
                C31624 +
            C31863 * C31625 + C31864 * C31626 + C31865 * C31627) *
               C151869 * C152172 -
           (C31866 * C31627 + C31865 * C31626 + C31864 * C31625 +
            C31863 * C31624) *
               C151869 * C151914) *
              C739 +
          ((C31867 * C31624 + C31868 * C31625 + C31869 * C31626 +
            C31870 * C31627) *
               C151869 * C151914 -
           (C31869 * C31627 + C31868 * C31626 + C31867 * C31625 +
            (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152080 *
                C31624) *
               C151869 * C152172) *
              C740 +
          (((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C152080 *
                C31624 +
            C31871 * C31625 + C31872 * C31626 + C31873 * C31627) *
               C151869 * C152172 -
           (C31874 * C31627 + C31873 * C31626 + C31872 * C31625 +
            C31871 * C31624) *
               C151869 * C151914) *
              C741 +
          ((C32191 * C31624 + C32192 * C31625 + C32193 * C31626 +
            (C31628 * C1360 + C32181 + C32181 + C151791 * C1376) * C152080 *
                C31627) *
               C151869 * C151914 -
           (C32193 * C31627 + C32192 * C31626 + C32191 * C31625 +
            (C31628 * C145 + C31646 + C31646 + C151791 * C161) * C152080 *
                C31624) *
               C151869 * C152172) *
              C152218)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152080 *
                C31624 +
            C31863 * C31625 + C31864 * C31626 + C31865 * C31627) *
               C151869 * C1709 -
           (C31866 * C31627 + C31865 * C31626 + C31864 * C31625 +
            C31863 * C31624) *
               C151869 * C1710 +
           (C31864 * C31624 + C31865 * C31625 + C31866 * C31626 +
            C32822 * C31627) *
               C151869 * C1711 -
           (C32823 * C31627 + C32822 * C31626 + C31866 * C31625 +
            C31865 * C31624) *
               C151869 * C152224) *
              C152158 +
          ((C31867 * C31624 + C31868 * C31625 + C31869 * C31626 +
            C31870 * C31627) *
               C151869 * C1710 -
           (C31869 * C31627 + C31868 * C31626 + C31867 * C31625 +
            (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152080 *
                C31624) *
               C151869 * C1709 -
           (C33142 * C31627 + C31870 * C31626 + C31869 * C31625 +
            C31868 * C31624) *
               C151869 * C1711 +
           (C31869 * C31624 + C31870 * C31625 + C33142 * C31626 +
            (C31628 * C24770 + C33138 + C33138 + C151791 * C24774) * C152080 *
                C31627) *
               C151869 * C152224) *
              C151834)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152080 *
                 C31624 +
             C31863 * C31625 + C31864 * C31626 + C31865 * C31627) *
                C2215 -
            (C32570 * C31627 + C32571 * C31626 + C32572 * C31625 +
             (C31628 * C550 + C32024 + C32024 + C151791 * C574) * C152080 *
                 C31624) *
                C2216 +
            ((C31628 * C551 + C32025 + C32025 + C151791 * C575) * C152080 *
                 C31624 +
             C33001 * C31625 + C33002 * C31626 + C33003 * C31627) *
                C152217) *
               C152172 +
           ((C32572 * C31624 + C32571 * C31625 + C32570 * C31626 +
             C33004 * C31627) *
                C2216 -
            (C31866 * C31627 + C31865 * C31626 + C31864 * C31625 +
             C31863 * C31624) *
                C2215 -
            (C33005 * C31627 + C33003 * C31626 + C33002 * C31625 +
             C33001 * C31624) *
                C152217) *
               C151914) *
              C152158 +
          ((((C31628 * C549 + C32029 + C32029 + C151791 * C573) * C152080 *
                 C31624 +
             C32573 * C31625 + C32574 * C31626 + C32575 * C31627) *
                C2216 -
            (C31869 * C31627 + C31868 * C31626 + C31867 * C31625 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152080 *
                 C31624) *
                C2215 -
            (C34079 * C31627 + C34080 * C31626 + C34081 * C31625 +
             (C31628 * C552 + C32036 + C32036 + C151791 * C576) * C152080 *
                 C31624) *
                C152217) *
               C152172 +
           ((C31867 * C31624 + C31868 * C31625 + C31869 * C31626 +
             C31870 * C31627) *
                C2215 -
            (C33343 * C31627 + C32575 * C31626 + C32574 * C31625 +
             C32573 * C31624) *
                C2216 +
            (C34081 * C31624 + C34080 * C31625 + C34079 * C31626 +
             (C31628 * C25022 + C34069 + C34069 + C151791 * C25026) * C152080 *
                 C31627) *
                C152217) *
               C151914) *
              C151834)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C45770 +
             C37949 * C45771 + C37950 * C45772) *
                C152187 +
            (C54346 + C54347 + C54348) * C152068) *
               C151869 * C152172 -
           ((C54349 + C54350 + C54351) * C152068 +
            (C54348 + C54347 + C54346) * C152187) *
               C151869 * C151914) *
              C739 +
          (((C54352 + C54353 + C54354) * C152187 +
            (C54355 + C54356 + C54357) * C152068) *
               C151869 * C151914 -
           ((C54354 + C54353 + C54352) * C152068 +
            (C37952 * C45772 + C37951 * C45771 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C45770) *
                C152187) *
               C151869 * C152172) *
              C740 +
          ((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C45770 +
             C37953 * C45771 + C37956 * C45772) *
                C152187 +
            (C54358 + C54359 + C54360) * C152068) *
               C151869 * C152172 -
           ((C54361 + C54362 + C54363) * C152068 +
            (C54360 + C54359 + C54358) * C152187) *
               C151869 * C151914) *
              C741 +
          (((C54788 + C54789 + C54795) * C152187 +
            (C32189 * C45770 + C38162 * C45771 +
             (C31628 * C1542 + C38363 + C38363 + C151791 * C1566) * C45772) *
                C152068) *
               C151869 * C151914 -
           ((C54795 + C54789 + C54788) * C152068 +
            ((C31628 * C554 + C38361 + C38361 + C151791 * C578) * C45772 +
             C38366 * C45771 +
             (C31628 * C145 + C31646 + C31646 + C151791 * C161) * C45770) *
                C152187) *
               C151869 * C152172) *
              C152218)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C45770 +
             C37949 * C45771 + C37950 * C45772) *
                C152187 +
            (C54346 + C54347 + C54348) * C152068) *
               C151869 * C1709 -
           ((C54349 + C54350 + C54351) * C152068 +
            (C54348 + C54347 + C54346) * C152187) *
               C151869 * C1710 +
           ((C54351 + C54350 + C54349) * C152187 +
            (C55636 + C55637 + C55638) * C152068) *
               C151869 * C1711 -
           ((C55639 + C55640 + C55641) * C152068 +
            (C55638 + C55637 + C55636) * C152187) *
               C151869 * C152224) *
              C152158 +
          (((C54352 + C54353 + C54354) * C152187 +
            (C54355 + C54356 + C54357) * C152068) *
               C151869 * C1710 -
           ((C54354 + C54353 + C54352) * C152068 +
            (C37952 * C45772 + C37951 * C45771 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C45770) *
                C152187) *
               C151869 * C1709 -
           ((C56063 + C56064 + C56065) * C152068 +
            (C54357 + C54356 + C54355) * C152187) *
               C151869 * C1711 +
           ((C56065 + C56064 + C56063) * C152187 +
            (C31858 * C45770 + C33342 * C45771 +
             (C31628 * C25022 + C34069 + C34069 + C151791 * C25026) * C45772) *
                C152068) *
               C151869 * C152224) *
              C151834)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C45770 +
              C37949 * C45771 + C37950 * C45772) *
                 C152187 +
             (C54346 + C54347 + C54348) * C152068) *
                C2215 -
            ((C55287 + C55288 + C55289) * C152068 +
             (C40513 * C45772 + C37950 * C45771 + C37949 * C45770) * C152187) *
                C2216 +
            ((C37950 * C45770 + C40513 * C45771 + C40516 * C45772) * C152187 +
             (C55860 + C55861 + C55862) * C152068) *
                C152217) *
               C152172 +
           (((C55289 + C55288 + C55287) * C152187 +
             (C55863 + C55864 + C55865) * C152068) *
                C2216 -
            ((C54349 + C54350 + C54351) * C152068 +
             (C54348 + C54347 + C54346) * C152187) *
                C2215 -
            ((C55866 + C55867 + C55868) * C152068 +
             (C55862 + C55861 + C55860) * C152187) *
                C152217) *
               C151914) *
              C152158 +
          ((((C37951 * C45770 + C37952 * C45771 + C41022 * C45772) * C152187 +
             (C55290 + C55291 + C55292) * C152068) *
                C2216 -
            ((C54354 + C54353 + C54352) * C152068 +
             (C37952 * C45772 + C37951 * C45771 +
              (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C45770) *
                 C152187) *
                C2215 -
            ((C57426 + C57421 + C57422) * C152068 +
             ((C31628 * C2456 + C41017 + C41017 + C151791 * C2472) * C45772 +
              C41022 * C45771 + C37952 * C45770) *
                 C152187) *
                C152217) *
               C152172 +
           (((C54352 + C54353 + C54354) * C152187 +
             (C54355 + C54356 + C54357) * C152068) *
                C2215 -
            ((C56356 + C56357 + C56358) * C152068 +
             (C55292 + C55291 + C55290) * C152187) *
                C2216 +
            ((C57422 + C57421 + C57426) * C152187 +
             (C34077 * C45770 + C40817 * C45771 +
              (C31628 * C26362 + C41019 + C41019 + C151791 * C26366) * C45772) *
                 C152068) *
                C152217) *
               C151914) *
              C151834)) /
            (p * q * std::sqrt(p + q));
    d2ee[186] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
                  C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
                  C6086 * C160) *
                     C152080 * C152187 +
                 (C6434 + C6435 + C6436) * C152080 * C152068) *
                    C152173 -
                ((C7453 + C7454 + C7455) * C152080 * C152068 +
                 (C6093 * C548 + C6673 + C6673 + C6086 * C572 + C6091 * C549 +
                  C6674 + C6674 + C6085 * C573 + C6089 * C550 + C6675 + C6675 +
                  C6084 * C574) *
                     C152080 * C152187) *
                    C151956) *
                   C152172 +
               (((C7455 + C7454 + C7453) * C152080 * C152187 +
                 (C6089 * C1538 + C7414 + C7414 + C6084 * C1562 +
                  C6091 * C1537 + C7415 + C7415 + C6085 * C1561 +
                  C6093 * C1536 + C7416 + C7416 + C6086 * C1560) *
                     C152080 * C152068) *
                    C151956 -
                ((C6437 + C6438 + C6439) * C152080 * C152068 +
                 (C6436 + C6435 + C6434) * C152080 * C152187) *
                    C152173) *
                   C151914) *
                  C335 +
              ((((C6089 * C549 + C6682 + C6682 + C6084 * C573 + C6091 * C548 +
                  C6683 + C6683 + C6085 * C572 + C6093 * C547 + C6684 + C6684 +
                  C6086 * C571) *
                     C152080 * C152187 +
                 (C7456 + C7457 + C7458) * C152080 * C152068) *
                    C151956 -
                ((C6442 + C6441 + C6440) * C152080 * C152068 +
                 (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
                  C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
                  C6084 * C159) *
                     C152080 * C152187) *
                    C152173) *
                   C152172 +
               (((C6440 + C6441 + C6442) * C152080 * C152187 +
                 (C6443 + C6444 + C6445) * C152080 * C152068) *
                    C152173 -
                ((C6093 * C1535 + C7423 + C7423 + C6086 * C1559 +
                  C6091 * C1536 + C7424 + C7424 + C6085 * C1560 +
                  C6089 * C1537 + C7425 + C7425 + C6084 * C1561) *
                     C152080 * C152068 +
                 (C7458 + C7457 + C7456) * C152080 * C152187) *
                    C151956) *
                   C151914) *
                  C336 +
              ((((C6089 * C144 + C6108 + C6108 + C6084 * C160 + C6091 * C145 +
                  C6109 + C6109 + C6085 * C161 + C6093 * C146 + C6110 + C6110 +
                  C6086 * C162) *
                     C152080 * C152187 +
                 (C6446 + C6447 + C6448) * C152080 * C152068) *
                    C152173 -
                ((C7459 + C7460 + C7461) * C152080 * C152068 +
                 (C6093 * C555 + C6697 + C6697 + C6086 * C579 + C6091 * C547 +
                  C6698 + C6698 + C6085 * C571 + C6089 * C548 + C6699 + C6699 +
                  C6084 * C572) *
                     C152080 * C152187) *
                    C151956) *
                   C152172 +
               (((C7461 + C7460 + C7459) * C152080 * C152187 +
                 (C6089 * C1536 + C7432 + C7432 + C6084 * C1560 +
                  C6091 * C1535 + C7433 + C7433 + C6085 * C1559 +
                  C6093 * C1916 + C7434 + C7434 + C6086 * C1918) *
                     C152080 * C152068) *
                    C151956 -
                ((C6449 + C6450 + C6451) * C152080 * C152068 +
                 (C6448 + C6447 + C6446) * C152080 * C152187) *
                    C152173) *
                   C151914) *
                  C152208) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
                 C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
                 C6086 * C160) *
                    C152080 * C152187 +
                (C6434 + C6435 + C6436) * C152080 * C152068) *
                   C152173 -
               ((C7453 + C7454 + C7455) * C152080 * C152068 +
                (C6093 * C548 + C6673 + C6673 + C6086 * C572 + C6091 * C549 +
                 C6674 + C6674 + C6085 * C573 + C6089 * C550 + C6675 + C6675 +
                 C6084 * C574) *
                    C152080 * C152187) *
                   C151956) *
                  C1709 +
              (((C7455 + C7454 + C7453) * C152080 * C152187 +
                (C8122 + C8123 + C8124) * C152080 * C152068) *
                   C151956 -
               ((C6437 + C6438 + C6439) * C152080 * C152068 +
                (C6436 + C6435 + C6434) * C152080 * C152187) *
                   C152173) *
                  C1710 +
              (((C6439 + C6438 + C6437) * C152080 * C152187 +
                (C7841 + C7842 + C7843) * C152080 * C152068) *
                   C152173 -
               ((C8866 + C8867 + C8868) * C152080 * C152068 +
                (C8124 + C8123 + C8122) * C152080 * C152187) *
                   C151956) *
                  C1711 +
              (((C8868 + C8867 + C8866) * C152080 * C152187 +
                (C6089 * C8841 + C8857 + C8857 + C6084 * C8847 + C6091 * C8842 +
                 C8858 + C8858 + C6085 * C8848 + C6093 * C8843 + C8859 + C8859 +
                 C6086 * C8849) *
                    C152080 * C152068) *
                   C151956 -
               ((C7844 + C7845 + C7846) * C152080 * C152068 +
                (C7843 + C7842 + C7841) * C152080 * C152187) *
                   C152173) *
                  C152224) *
             C151823) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
             C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
             C6086 * C160) *
                C152080 * C152187 +
            (C6434 + C6435 + C6436) * C152080 * C152068) *
               C2814 -
           ((C7453 + C7454 + C7455) * C152080 * C152068 +
            (C6093 * C548 + C6673 + C6673 + C6086 * C572 + C6091 * C549 +
             C6674 + C6674 + C6085 * C573 + C6089 * C550 + C6675 + C6675 +
             C6084 * C574) *
                C152080 * C152187) *
               C2815 +
           ((C6089 * C551 + C6676 + C6676 + C6084 * C575 + C6091 * C552 +
             C6677 + C6677 + C6085 * C576 + C6093 * C553 + C6678 + C6678 +
             C6086 * C577) *
                C152080 * C152187 +
            (C8119 + C8120 + C8121) * C152080 * C152068) *
               C2816 -
           ((C10174 + C10175 + C10176) * C152080 * C152068 +
            (C6093 * C2452 + C9439 + C9439 + C6086 * C2468 + C6091 * C2453 +
             C9440 + C9440 + C6085 * C2469 + C6089 * C2454 + C9441 + C9441 +
             C6084 * C2470) *
                C152080 * C152187) *
               C152230) *
              C152172 +
          (((C7455 + C7454 + C7453) * C152080 * C152187 +
            (C8122 + C8123 + C8124) * C152080 * C152068) *
               C2815 -
           ((C6437 + C6438 + C6439) * C152080 * C152068 +
            (C6436 + C6435 + C6434) * C152080 * C152187) *
               C2814 -
           ((C8125 + C8126 + C8127) * C152080 * C152068 +
            (C8121 + C8120 + C8119) * C152080 * C152187) *
               C2816 +
           ((C10176 + C10175 + C10174) * C152080 * C152187 +
            (C6089 * C10149 + C10165 + C10165 + C6084 * C10155 +
             C6091 * C10150 + C10166 + C10166 + C6085 * C10156 +
             C6093 * C10151 + C10167 + C10167 + C6086 * C10157) *
                C152080 * C152068) *
               C152230) *
              C151914) *
         C151823) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152080 *
                 C31624 +
             C31863 * C31625 + C31864 * C31626 + C31865 * C31627) *
                C152173 -
            (C32570 * C31627 + C32571 * C31626 + C32572 * C31625 +
             (C31628 * C550 + C32024 + C32024 + C151791 * C574) * C152080 *
                 C31624) *
                C151956) *
               C152172 +
           ((C32572 * C31624 + C32571 * C31625 + C32570 * C31626 +
             (C31628 * C8841 + C32528 + C32528 + C151791 * C8847) * C152080 *
                 C31627) *
                C151956 -
            (C31866 * C31627 + C31865 * C31626 + C31864 * C31625 +
             C31863 * C31624) *
                C152173) *
               C151914) *
              C335 +
          ((((C31628 * C549 + C32029 + C32029 + C151791 * C573) * C152080 *
                 C31624 +
             C32573 * C31625 + C32574 * C31626 + C32575 * C31627) *
                C151956 -
            (C31869 * C31627 + C31868 * C31626 + C31867 * C31625 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152080 *
                 C31624) *
                C152173) *
               C152172 +
           ((C31867 * C31624 + C31868 * C31625 + C31869 * C31626 +
             C31870 * C31627) *
                C152173 -
            ((C31628 * C8842 + C32535 + C32535 + C151791 * C8848) * C152080 *
                 C31627 +
             C32575 * C31626 + C32574 * C31625 + C32573 * C31624) *
                C151956) *
               C151914) *
              C336 +
          ((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C152080 *
                 C31624 +
             C31871 * C31625 + C31872 * C31626 + C31873 * C31627) *
                C152173 -
            (C32576 * C31627 + C32577 * C31626 + C32578 * C31625 +
             (C31628 * C548 + C32040 + C32040 + C151791 * C572) * C152080 *
                 C31624) *
                C151956) *
               C152172 +
           ((C32578 * C31624 + C32577 * C31625 + C32576 * C31626 +
             (C31628 * C8843 + C32542 + C32542 + C151791 * C8849) * C152080 *
                 C31627) *
                C151956 -
            (C31874 * C31627 + C31873 * C31626 + C31872 * C31625 +
             C31871 * C31624) *
                C152173) *
               C151914) *
              C152208)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152080 *
                C31624 +
            C31863 * C31625 + C31864 * C31626 + C31865 * C31627) *
               C152173 -
           (C32570 * C31627 + C32571 * C31626 + C32572 * C31625 +
            (C31628 * C550 + C32024 + C32024 + C151791 * C574) * C152080 *
                C31624) *
               C151956) *
              C1709 +
          ((C32572 * C31624 + C32571 * C31625 + C32570 * C31626 +
            C33004 * C31627) *
               C151956 -
           (C31866 * C31627 + C31865 * C31626 + C31864 * C31625 +
            C31863 * C31624) *
               C152173) *
              C1710 +
          ((C31864 * C31624 + C31865 * C31625 + C31866 * C31626 +
            C32822 * C31627) *
               C152173 -
           (C33483 * C31627 + C33004 * C31626 + C32570 * C31625 +
            C32571 * C31624) *
               C151956) *
              C1711 +
          ((C32570 * C31624 + C33004 * C31625 + C33483 * C31626 +
            (C31628 * C33473 + C33479 + C33479 + C151791 * C33475) * C152080 *
                C31627) *
               C151956 -
           (C32823 * C31627 + C32822 * C31626 + C31866 * C31625 +
            C31865 * C31624) *
               C152173) *
              C152224) *
         C151823) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152080 *
                C31624 +
            C31863 * C31625 + C31864 * C31626 + C31865 * C31627) *
               C2814 -
           (C32570 * C31627 + C32571 * C31626 + C32572 * C31625 +
            (C31628 * C550 + C32024 + C32024 + C151791 * C574) * C152080 *
                C31624) *
               C2815 +
           ((C31628 * C551 + C32025 + C32025 + C151791 * C575) * C152080 *
                C31624 +
            C33001 * C31625 + C33002 * C31626 + C33003 * C31627) *
               C2816 -
           (C34365 * C31627 + C34366 * C31626 + C34367 * C31625 +
            (C31628 * C2454 + C33864 + C33864 + C151791 * C2470) * C152080 *
                C31624) *
               C152230) *
              C152172 +
          ((C32572 * C31624 + C32571 * C31625 + C32570 * C31626 +
            C33004 * C31627) *
               C2815 -
           (C31866 * C31627 + C31865 * C31626 + C31864 * C31625 +
            C31863 * C31624) *
               C2814 -
           (C33005 * C31627 + C33003 * C31626 + C33002 * C31625 +
            C33001 * C31624) *
               C2816 +
           (C34367 * C31624 + C34366 * C31625 + C34365 * C31626 +
            (C31628 * C34345 + C34355 + C34355 + C151791 * C34347) * C152080 *
                C31627) *
               C152230) *
              C151914) *
         C151823) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C45770 +
              C37949 * C45771 + C37950 * C45772) *
                 C152187 +
             (C54346 + C54347 + C54348) * C152068) *
                C152173 -
            ((C55287 + C55288 + C55289) * C152068 +
             (C40513 * C45772 + C37950 * C45771 + C37949 * C45770) * C152187) *
                C151956) *
               C152172 +
           (((C55289 + C55288 + C55287) * C152187 +
             (C32562 * C45770 + C32997 * C45771 + C34363 * C45772) * C152068) *
                C151956 -
            ((C54349 + C54350 + C54351) * C152068 +
             (C54348 + C54347 + C54346) * C152187) *
                C152173) *
               C151914) *
              C335 +
          ((((C37951 * C45770 + C37952 * C45771 + C41022 * C45772) * C152187 +
             (C55290 + C55291 + C55292) * C152068) *
                C151956 -
            ((C54354 + C54353 + C54352) * C152068 +
             (C37952 * C45772 + C37951 * C45771 +
              (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C45770) *
                 C152187) *
                C152173) *
               C152172 +
           (((C54352 + C54353 + C54354) * C152187 +
             (C54355 + C54356 + C54357) * C152068) *
                C152173 -
            ((C40817 * C45772 + C34077 * C45771 + C32565 * C45770) * C152068 +
             (C55292 + C55291 + C55290) * C152187) *
                C151956) *
               C151914) *
              C336 +
          (((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C45770 +
              C37953 * C45771 + C37956 * C45772) *
                 C152187 +
             (C54358 + C54359 + C54360) * C152068) *
                C152173 -
            ((C55293 + C55294 + C55295) * C152068 +
             (C54593 * C45772 + C37956 * C45771 + C37953 * C45770) * C152187) *
                C151956) *
               C152172 +
           (((C55295 + C55294 + C55293) * C152187 +
             (C32568 * C45770 + C37954 * C45771 +
              (C31628 * C10151 + C37932 + C37932 + C151791 * C10157) * C45772) *
                 C152068) *
                C151956 -
            ((C54361 + C54362 + C54363) * C152068 +
             (C54360 + C54359 + C54358) * C152187) *
                C152173) *
               C151914) *
              C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C45770 +
             C37949 * C45771 + C37950 * C45772) *
                C152187 +
            (C54346 + C54347 + C54348) * C152068) *
               C152173 -
           ((C55287 + C55288 + C55289) * C152068 +
            (C40513 * C45772 + C37950 * C45771 + C37949 * C45770) * C152187) *
               C151956) *
              C1709 +
          (((C55289 + C55288 + C55287) * C152187 +
            (C55863 + C55864 + C55865) * C152068) *
               C151956 -
           ((C54349 + C54350 + C54351) * C152068 +
            (C54348 + C54347 + C54346) * C152187) *
               C152173) *
              C1710 +
          (((C54351 + C54350 + C54349) * C152187 +
            (C55636 + C55637 + C55638) * C152068) *
               C152173 -
           ((C56553 + C56554 + C56555) * C152068 +
            (C55865 + C55864 + C55863) * C152187) *
               C151956) *
              C1711 +
          (((C56555 + C56554 + C56553) * C152187 +
            (C32999 * C45770 + C33000 * C45771 +
             (C31628 * C34345 + C34355 + C34355 + C151791 * C34347) * C45772) *
                C152068) *
               C151956 -
           ((C55639 + C55640 + C55641) * C152068 +
            (C55638 + C55637 + C55636) * C152187) *
               C152173) *
              C152224) *
         C151823) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C45770 +
             C37949 * C45771 + C37950 * C45772) *
                C152187 +
            (C54346 + C54347 + C54348) * C152068) *
               C2814 -
           ((C55287 + C55288 + C55289) * C152068 +
            (C40513 * C45772 + C37950 * C45771 + C37949 * C45770) * C152187) *
               C2815 +
           ((C37950 * C45770 + C40513 * C45771 + C40516 * C45772) * C152187 +
            (C55860 + C55861 + C55862) * C152068) *
               C2816 -
           ((C57822 + C57823 + C57824) * C152068 +
            (C57128 * C45772 + C40516 * C45771 + C40513 * C45770) * C152187) *
               C152230) *
              C152172 +
          (((C55289 + C55288 + C55287) * C152187 +
            (C55863 + C55864 + C55865) * C152068) *
               C2815 -
           ((C54349 + C54350 + C54351) * C152068 +
            (C54348 + C54347 + C54346) * C152187) *
               C2814 -
           ((C55866 + C55867 + C55868) * C152068 +
            (C55862 + C55861 + C55860) * C152187) *
               C2816 +
           ((C57824 + C57823 + C57822) * C152187 +
            (C34363 * C45770 + C40514 * C45771 +
             (C31628 * C40488 + C40504 + C40504 + C151791 * C40492) * C45772) *
                C152068) *
               C152230) *
              C151914) *
         C151823) /
            (p * q * std::sqrt(p + q));
    d2ee[187] +=
        (-0.25 * std::pow(Pi, 2.5) *
             (((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
                C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
                C6086 * C160) *
                   C152080 * C152187 +
               (C6089 * C341 + C6099 + C6099 + C6084 * C365 + C6091 * C340 +
                C6100 + C6100 + C6085 * C364 + C6093 * C339 + C6101 + C6101 +
                C6086 * C363) *
                   C152080 * C152068) *
                  C151869 * C151851 * C129 -
              ((C6093 * C338 + C6102 + C6102 + C6086 * C362 + C6091 * C339 +
                C6103 + C6103 + C6085 * C363 + C6089 * C340 + C6104 + C6104 +
                C6084 * C364) *
                   C152080 * C152068 +
               (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
                C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
                C6084 * C159) *
                   C152080 * C152187) *
                  C151869 * C151851 * C130 +
              ((C6089 * C144 + C6108 + C6108 + C6084 * C160 + C6091 * C145 +
                C6109 + C6109 + C6085 * C161 + C6093 * C146 + C6110 + C6110 +
                C6086 * C162) *
                   C152080 * C152187 +
               (C6089 * C339 + C6111 + C6111 + C6084 * C363 + C6091 * C338 +
                C6112 + C6112 + C6085 * C362 + C6093 * C346 + C6113 + C6113 +
                C6086 * C370) *
                   C152080 * C152068) *
                  C151869 * C151851 * C131 -
              ((C6093 * C348 + C6114 + C6114 + C6086 * C372 + C6091 * C346 +
                C6115 + C6115 + C6085 * C370 + C6089 * C338 + C6116 + C6116 +
                C6084 * C362) *
                   C152080 * C152068 +
               (C6093 * C147 + C6117 + C6117 + C6086 * C163 + C6091 * C146 +
                C6118 + C6118 + C6085 * C162 + C6089 * C145 + C6119 + C6119 +
                C6084 * C161) *
                   C152080 * C152187) *
                  C151869 * C151851 * C132 +
              ((C6089 * C146 + C6120 + C6120 + C6084 * C162 + C6091 * C147 +
                C6121 + C6121 + C6085 * C163 + C6093 * C148 + C6122 + C6122 +
                C6086 * C164) *
                   C152080 * C152187 +
               (C6089 * C346 + C6123 + C6123 + C6084 * C370 + C6091 * C348 +
                C6124 + C6124 + C6085 * C372 + C6093 * C743 + C6125 + C6125 +
                C6086 * C745) *
                   C152080 * C152068) *
                  C151869 * C151851 * C133) -
         0.25 * std::pow(Pi, 2.5) *
             ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
                 C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
                 C6086 * C160) *
                    C152080 * C152187 +
                (C6434 + C6435 + C6436) * C152080 * C152068) *
                   C151869 * C152258 -
               ((C6437 + C6438 + C6439) * C152080 * C152068 +
                (C6436 + C6435 + C6434) * C152080 * C152187) *
                   C151869 * C152244 +
               ((C6439 + C6438 + C6437) * C152080 * C152187 +
                (C6089 * C1356 + C6359 + C6359 + C6084 * C1372 + C6091 * C1355 +
                 C6360 + C6360 + C6085 * C1371 + C6093 * C1354 + C6361 + C6361 +
                 C6086 * C1370) *
                    C152080 * C152068) *
                   C151869 * C152214) *
                  C335 +
              (((C6440 + C6441 + C6442) * C152080 * C152187 +
                (C6443 + C6444 + C6445) * C152080 * C152068) *
                   C151869 * C152244 -
               ((C6442 + C6441 + C6440) * C152080 * C152068 +
                (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
                 C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
                 C6084 * C159) *
                    C152080 * C152187) *
                   C151869 * C152258 -
               ((C6093 * C1353 + C6377 + C6377 + C6086 * C1369 + C6091 * C1354 +
                 C6378 + C6378 + C6085 * C1370 + C6089 * C1355 + C6379 + C6379 +
                 C6084 * C1371) *
                    C152080 * C152068 +
                (C6445 + C6444 + C6443) * C152080 * C152187) *
                   C151869 * C152214) *
                  C336 +
              (((C6089 * C144 + C6108 + C6108 + C6084 * C160 + C6091 * C145 +
                 C6109 + C6109 + C6085 * C161 + C6093 * C146 + C6110 + C6110 +
                 C6086 * C162) *
                    C152080 * C152187 +
                (C6446 + C6447 + C6448) * C152080 * C152068) *
                   C151869 * C152258 -
               ((C6449 + C6450 + C6451) * C152080 * C152068 +
                (C6448 + C6447 + C6446) * C152080 * C152187) *
                   C151869 * C152244 +
               ((C6451 + C6450 + C6449) * C152080 * C152187 +
                (C6089 * C1354 + C6395 + C6395 + C6084 * C1370 + C6091 * C1353 +
                 C6396 + C6396 + C6085 * C1369 + C6093 * C1715 + C6397 + C6397 +
                 C6086 * C1717) *
                    C152080 * C152068) *
                   C151869 * C152214) *
                  C152208) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
                 C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
                 C6086 * C160) *
                    C152080 * C152187 +
                (C6434 + C6435 + C6436) * C152080 * C152068) *
                   C152259 -
               ((C6093 * C1085 + C6670 + C6670 + C6086 * C1097 + C6091 * C1084 +
                 C6671 + C6671 + C6085 * C1096 + C6089 * C1083 + C6672 + C6672 +
                 C6084 * C1095) *
                    C152080 * C152068 +
                (C6093 * C548 + C6673 + C6673 + C6086 * C572 + C6091 * C549 +
                 C6674 + C6674 + C6085 * C573 + C6089 * C550 + C6675 + C6675 +
                 C6084 * C574) *
                    C152080 * C152187) *
                   C152246 +
               ((C6089 * C551 + C6676 + C6676 + C6084 * C575 + C6091 * C552 +
                 C6677 + C6677 + C6085 * C576 + C6093 * C553 + C6678 + C6678 +
                 C6086 * C577) *
                    C152080 * C152187 +
                (C6089 * C1534 + C6679 + C6679 + C6084 * C1558 + C6091 * C1533 +
                 C6680 + C6680 + C6085 * C1557 + C6093 * C1532 + C6681 + C6681 +
                 C6086 * C1556) *
                    C152080 * C152068) *
                   C152217) *
                  C151851 * C335 +
              (((C6089 * C549 + C6682 + C6682 + C6084 * C573 + C6091 * C548 +
                 C6683 + C6683 + C6085 * C572 + C6093 * C547 + C6684 + C6684 +
                 C6086 * C571) *
                    C152080 * C152187 +
                (C6089 * C1084 + C6685 + C6685 + C6084 * C1096 + C6091 * C1085 +
                 C6686 + C6686 + C6085 * C1097 + C6093 * C1086 + C6687 + C6687 +
                 C6086 * C1098) *
                    C152080 * C152068) *
                   C152246 -
               ((C6442 + C6441 + C6440) * C152080 * C152068 +
                (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
                 C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
                 C6084 * C159) *
                    C152080 * C152187) *
                   C152259 -
               ((C6093 * C1531 + C6688 + C6688 + C6086 * C1555 + C6091 * C1532 +
                 C6689 + C6689 + C6085 * C1556 + C6089 * C1533 + C6690 + C6690 +
                 C6084 * C1557) *
                    C152080 * C152068 +
                (C6093 * C554 + C6691 + C6691 + C6086 * C578 + C6091 * C553 +
                 C6692 + C6692 + C6085 * C577 + C6089 * C552 + C6693 + C6693 +
                 C6084 * C576) *
                    C152080 * C152187) *
                   C152217) *
                  C151851 * C336 +
              (((C6089 * C144 + C6108 + C6108 + C6084 * C160 + C6091 * C145 +
                 C6109 + C6109 + C6085 * C161 + C6093 * C146 + C6110 + C6110 +
                 C6086 * C162) *
                    C152080 * C152187 +
                (C6446 + C6447 + C6448) * C152080 * C152068) *
                   C152259 -
               ((C6093 * C1087 + C6694 + C6694 + C6086 * C1099 + C6091 * C1086 +
                 C6695 + C6695 + C6085 * C1098 + C6089 * C1085 + C6696 + C6696 +
                 C6084 * C1097) *
                    C152080 * C152068 +
                (C6093 * C555 + C6697 + C6697 + C6086 * C579 + C6091 * C547 +
                 C6698 + C6698 + C6085 * C571 + C6089 * C548 + C6699 + C6699 +
                 C6084 * C572) *
                    C152080 * C152187) *
                   C152246 +
               ((C6089 * C553 + C6700 + C6700 + C6084 * C577 + C6091 * C554 +
                 C6701 + C6701 + C6085 * C578 + C6093 * C556 + C6702 + C6702 +
                 C6086 * C580) *
                    C152080 * C152187 +
                (C6089 * C1532 + C6703 + C6703 + C6084 * C1556 + C6091 * C1531 +
                 C6704 + C6704 + C6085 * C1555 + C6093 * C2677 + C6705 + C6705 +
                 C6086 * C2679) *
                    C152080 * C152068) *
                   C152217) *
                  C151851 * C152208) -
         0.25 * std::pow(Pi, 2.5) *
             ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
                 C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
                 C6086 * C160) *
                    C152080 * C152187 +
                (C6434 + C6435 + C6436) * C152080 * C152068) *
                   C151869 * C1259 -
               ((C6437 + C6438 + C6439) * C152080 * C152068 +
                (C6436 + C6435 + C6434) * C152080 * C152187) *
                   C151869 * C1260 +
               ((C6439 + C6438 + C6437) * C152080 * C152187 +
                (C6089 * C1356 + C6359 + C6359 + C6084 * C1372 + C6091 * C1355 +
                 C6360 + C6360 + C6085 * C1371 + C6093 * C1354 + C6361 + C6361 +
                 C6086 * C1370) *
                    C152080 * C152068) *
                   C151869 * C152214) *
                  C152255 +
              (((C6440 + C6441 + C6442) * C152080 * C152187 +
                (C6443 + C6444 + C6445) * C152080 * C152068) *
                   C151869 * C1260 -
               ((C6442 + C6441 + C6440) * C152080 * C152068 +
                (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
                 C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
                 C6084 * C159) *
                    C152080 * C152187) *
                   C151869 * C1259 -
               ((C6093 * C1353 + C6377 + C6377 + C6086 * C1369 + C6091 * C1354 +
                 C6378 + C6378 + C6085 * C1370 + C6089 * C1355 + C6379 + C6379 +
                 C6084 * C1371) *
                    C152080 * C152068 +
                (C6445 + C6444 + C6443) * C152080 * C152187) *
                   C151869 * C152214) *
                  C152240 +
              (((C6089 * C144 + C6108 + C6108 + C6084 * C160 + C6091 * C145 +
                 C6109 + C6109 + C6085 * C161 + C6093 * C146 + C6110 + C6110 +
                 C6086 * C162) *
                    C152080 * C152187 +
                (C6446 + C6447 + C6448) * C152080 * C152068) *
                   C151869 * C1259 -
               ((C6449 + C6450 + C6451) * C152080 * C152068 +
                (C6448 + C6447 + C6446) * C152080 * C152187) *
                   C151869 * C1260 +
               ((C6451 + C6450 + C6449) * C152080 * C152187 +
                (C6089 * C1354 + C6395 + C6395 + C6084 * C1370 + C6091 * C1353 +
                 C6396 + C6396 + C6085 * C1369 + C6093 * C1715 + C6397 + C6397 +
                 C6086 * C1717) *
                    C152080 * C152068) *
                   C151869 * C152214) *
                  C152208) -
         0.25 * std::pow(Pi, 2.5) *
             (((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
                C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
                C6086 * C160) *
                   C152080 * C152187 +
               (C6434 + C6435 + C6436) * C152080 * C152068) *
                  C151869 * C1347 -
              ((C6437 + C6438 + C6439) * C152080 * C152068 +
               (C6436 + C6435 + C6434) * C152080 * C152187) *
                  C151869 * C1348 +
              ((C6439 + C6438 + C6437) * C152080 * C152187 +
               (C7841 + C7842 + C7843) * C152080 * C152068) *
                  C151869 * C1349 -
              ((C7844 + C7845 + C7846) * C152080 * C152068 +
               (C7843 + C7842 + C7841) * C152080 * C152187) *
                  C151869 * C1350 +
              ((C7846 + C7845 + C7844) * C152080 * C152187 +
               (C6089 * C7801 + C7826 + C7826 + C6084 * C7807 + C6091 * C7802 +
                C7827 + C7827 + C6085 * C7808 + C6093 * C7803 + C7828 + C7828 +
                C6086 * C7809) *
                   C152080 * C152068) *
                  C151869 * C1351) *
             C151823 +
         0.5 * std::pow(Pi, 2.5) *
             ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
                 C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
                 C6086 * C160) *
                    C152080 * C152187 +
                (C6434 + C6435 + C6436) * C152080 * C152068) *
                   C152259 -
               ((C7453 + C7454 + C7455) * C152080 * C152068 +
                (C6093 * C548 + C6673 + C6673 + C6086 * C572 + C6091 * C549 +
                 C6674 + C6674 + C6085 * C573 + C6089 * C550 + C6675 + C6675 +
                 C6084 * C574) *
                    C152080 * C152187) *
                   C152246 +
               ((C6089 * C551 + C6676 + C6676 + C6084 * C575 + C6091 * C552 +
                 C6677 + C6677 + C6085 * C576 + C6093 * C553 + C6678 + C6678 +
                 C6086 * C577) *
                    C152080 * C152187 +
                (C8119 + C8120 + C8121) * C152080 * C152068) *
                   C152217) *
                  C1259 +
              (((C7455 + C7454 + C7453) * C152080 * C152187 +
                (C8122 + C8123 + C8124) * C152080 * C152068) *
                   C152246 -
               ((C6437 + C6438 + C6439) * C152080 * C152068 +
                (C6436 + C6435 + C6434) * C152080 * C152187) *
                   C152259 -
               ((C8125 + C8126 + C8127) * C152080 * C152068 +
                (C8121 + C8120 + C8119) * C152080 * C152187) *
                   C152217) *
                  C1260 +
              (((C6439 + C6438 + C6437) * C152080 * C152187 +
                (C7841 + C7842 + C7843) * C152080 * C152068) *
                   C152259 -
               ((C6093 * C2055 + C8095 + C8095 + C6086 * C2063 + C6091 * C2054 +
                 C8096 + C8096 + C6085 * C2062 + C6089 * C2053 + C8097 + C8097 +
                 C6084 * C2061) *
                    C152080 * C152068 +
                (C8124 + C8123 + C8122) * C152080 * C152187) *
                   C152246 +
               ((C8127 + C8126 + C8125) * C152080 * C152187 +
                (C6089 * C8064 + C8098 + C8098 + C6084 * C8070 + C6091 * C8065 +
                 C8099 + C8099 + C6085 * C8071 + C6093 * C8066 + C8100 + C8100 +
                 C6086 * C8072) *
                    C152080 * C152068) *
                   C152217) *
                  C152214) *
             C151823 +
         0.5 * std::pow(Pi, 2.5) *
             ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
                 C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
                 C6086 * C160) *
                    C152080 * C152187 +
                (C6434 + C6435 + C6436) * C152080 * C152068) *
                   C2215 -
               ((C7453 + C7454 + C7455) * C152080 * C152068 +
                (C6093 * C548 + C6673 + C6673 + C6086 * C572 + C6091 * C549 +
                 C6674 + C6674 + C6085 * C573 + C6089 * C550 + C6675 + C6675 +
                 C6084 * C574) *
                    C152080 * C152187) *
                   C2216 +
               ((C6089 * C551 + C6676 + C6676 + C6084 * C575 + C6091 * C552 +
                 C6677 + C6677 + C6085 * C576 + C6093 * C553 + C6678 + C6678 +
                 C6086 * C577) *
                    C152080 * C152187 +
                (C8119 + C8120 + C8121) * C152080 * C152068) *
                   C152217) *
                  C151851 * C152255 +
              (((C6089 * C549 + C6682 + C6682 + C6084 * C573 + C6091 * C548 +
                 C6683 + C6683 + C6085 * C572 + C6093 * C547 + C6684 + C6684 +
                 C6086 * C571) *
                    C152080 * C152187 +
                (C7456 + C7457 + C7458) * C152080 * C152068) *
                   C2216 -
               ((C6442 + C6441 + C6440) * C152080 * C152068 +
                (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
                 C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
                 C6084 * C159) *
                    C152080 * C152187) *
                   C2215 -
               ((C6093 * C1531 + C6688 + C6688 + C6086 * C1555 + C6091 * C1532 +
                 C6689 + C6689 + C6085 * C1556 + C6089 * C1533 + C6690 + C6690 +
                 C6084 * C1557) *
                    C152080 * C152068 +
                (C6093 * C554 + C6691 + C6691 + C6086 * C578 + C6091 * C553 +
                 C6692 + C6692 + C6085 * C577 + C6089 * C552 + C6693 + C6693 +
                 C6084 * C576) *
                    C152080 * C152187) *
                   C152217) *
                  C151851 * C152240 +
              (((C6089 * C144 + C6108 + C6108 + C6084 * C160 + C6091 * C145 +
                 C6109 + C6109 + C6085 * C161 + C6093 * C146 + C6110 + C6110 +
                 C6086 * C162) *
                    C152080 * C152187 +
                (C6446 + C6447 + C6448) * C152080 * C152068) *
                   C2215 -
               ((C7459 + C7460 + C7461) * C152080 * C152068 +
                (C6093 * C555 + C6697 + C6697 + C6086 * C579 + C6091 * C547 +
                 C6698 + C6698 + C6085 * C571 + C6089 * C548 + C6699 + C6699 +
                 C6084 * C572) *
                    C152080 * C152187) *
                   C2216 +
               ((C6089 * C553 + C6700 + C6700 + C6084 * C577 + C6091 * C554 +
                 C6701 + C6701 + C6085 * C578 + C6093 * C556 + C6702 + C6702 +
                 C6086 * C580) *
                    C152080 * C152187 +
                (C6089 * C1532 + C6703 + C6703 + C6084 * C1556 + C6091 * C1531 +
                 C6704 + C6704 + C6085 * C1555 + C6093 * C2677 + C6705 + C6705 +
                 C6086 * C2679) *
                    C152080 * C152068) *
                   C152217) *
                  C151851 * C152208) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
                 C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
                 C6086 * C160) *
                    C152080 * C152187 +
                (C6434 + C6435 + C6436) * C152080 * C152068) *
                   C2215 -
               ((C7453 + C7454 + C7455) * C152080 * C152068 +
                (C6093 * C548 + C6673 + C6673 + C6086 * C572 + C6091 * C549 +
                 C6674 + C6674 + C6085 * C573 + C6089 * C550 + C6675 + C6675 +
                 C6084 * C574) *
                    C152080 * C152187) *
                   C2216 +
               ((C6089 * C551 + C6676 + C6676 + C6084 * C575 + C6091 * C552 +
                 C6677 + C6677 + C6085 * C576 + C6093 * C553 + C6678 + C6678 +
                 C6086 * C577) *
                    C152080 * C152187 +
                (C8119 + C8120 + C8121) * C152080 * C152068) *
                   C152217) *
                  C152258 +
              (((C7455 + C7454 + C7453) * C152080 * C152187 +
                (C8122 + C8123 + C8124) * C152080 * C152068) *
                   C2216 -
               ((C6437 + C6438 + C6439) * C152080 * C152068 +
                (C6436 + C6435 + C6434) * C152080 * C152187) *
                   C2215 -
               ((C8125 + C8126 + C8127) * C152080 * C152068 +
                (C8121 + C8120 + C8119) * C152080 * C152187) *
                   C152217) *
                  C152244 +
              (((C6439 + C6438 + C6437) * C152080 * C152187 +
                (C7841 + C7842 + C7843) * C152080 * C152068) *
                   C2215 -
               ((C8866 + C8867 + C8868) * C152080 * C152068 +
                (C8124 + C8123 + C8122) * C152080 * C152187) *
                   C2216 +
               ((C8127 + C8126 + C8125) * C152080 * C152187 +
                (C6089 * C8064 + C8098 + C8098 + C6084 * C8070 + C6091 * C8065 +
                 C8099 + C8099 + C6085 * C8071 + C6093 * C8066 + C8100 + C8100 +
                 C6086 * C8072) *
                    C152080 * C152068) *
                   C152217) *
                  C152214) *
             C151823) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 + C6097 +
            C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
            C6086 * C160) *
               C152080 * C152187 +
           (C6434 + C6435 + C6436) * C152080 * C152068) *
              C2446 -
          ((C7453 + C7454 + C7455) * C152080 * C152068 +
           (C6093 * C548 + C6673 + C6673 + C6086 * C572 + C6091 * C549 + C6674 +
            C6674 + C6085 * C573 + C6089 * C550 + C6675 + C6675 +
            C6084 * C574) *
               C152080 * C152187) *
              C2447 +
          ((C6089 * C551 + C6676 + C6676 + C6084 * C575 + C6091 * C552 + C6677 +
            C6677 + C6085 * C576 + C6093 * C553 + C6678 + C6678 +
            C6086 * C577) *
               C152080 * C152187 +
           (C8119 + C8120 + C8121) * C152080 * C152068) *
              C2448 -
          ((C6093 * C2957 + C9436 + C9436 + C6086 * C2965 + C6091 * C2956 +
            C9437 + C9437 + C6085 * C2964 + C6089 * C2955 + C9438 + C9438 +
            C6084 * C2963) *
               C152080 * C152068 +
           (C6093 * C2452 + C9439 + C9439 + C6086 * C2468 + C6091 * C2453 +
            C9440 + C9440 + C6085 * C2469 + C6089 * C2454 + C9441 + C9441 +
            C6084 * C2470) *
               C152080 * C152187) *
              C2449 +
          ((C6089 * C2455 + C9442 + C9442 + C6084 * C2471 + C6091 * C2456 +
            C9443 + C9443 + C6085 * C2472 + C6093 * C2457 + C9444 + C9444 +
            C6086 * C2473) *
               C152080 * C152187 +
           (C6089 * C9426 + C9445 + C9445 + C6084 * C9432 + C6091 * C9427 +
            C9446 + C9446 + C6085 * C9433 + C6093 * C9428 + C9447 + C9447 +
            C6086 * C9434) *
               C152080 * C152068) *
              C2450) *
         C151851 * C151823) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         (((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152080 *
               C31624 +
           (C31628 * C341 + C31632 + C31632 + C151791 * C365) * C152080 *
               C31625 +
           (C31628 * C342 + C31633 + C31633 + C151791 * C366) * C152080 *
               C31626 +
           (C31628 * C1356 + C31634 + C31634 + C151791 * C1372) * C152080 *
               C31627) *
              C151869 * C151851 * C129 -
          ((C31628 * C1355 + C31635 + C31635 + C151791 * C1371) * C152080 *
               C31627 +
           (C31628 * C343 + C31636 + C31636 + C151791 * C367) * C152080 *
               C31626 +
           (C31628 * C340 + C31637 + C31637 + C151791 * C364) * C152080 *
               C31625 +
           (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152080 *
               C31624) *
              C151869 * C151851 * C130 +
          ((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C152080 *
               C31624 +
           (C31628 * C339 + C31640 + C31640 + C151791 * C363) * C152080 *
               C31625 +
           (C31628 * C344 + C31641 + C31641 + C151791 * C368) * C152080 *
               C31626 +
           (C31628 * C1354 + C31642 + C31642 + C151791 * C1370) * C152080 *
               C31627) *
              C151869 * C151851 * C131 -
          ((C31628 * C1353 + C31643 + C31643 + C151791 * C1369) * C152080 *
               C31627 +
           (C31628 * C345 + C31644 + C31644 + C151791 * C369) * C152080 *
               C31626 +
           (C31628 * C338 + C31645 + C31645 + C151791 * C362) * C152080 *
               C31625 +
           (C31628 * C145 + C31646 + C31646 + C151791 * C161) * C152080 *
               C31624) *
              C151869 * C151851 * C132 +
          ((C31628 * C146 + C31647 + C31647 + C151791 * C162) * C152080 *
               C31624 +
           (C31628 * C346 + C31648 + C31648 + C151791 * C370) * C152080 *
               C31625 +
           (C31628 * C347 + C31649 + C31649 + C151791 * C371) * C152080 *
               C31626 +
           (C31628 * C1715 + C31650 + C31650 + C151791 * C1717) * C152080 *
               C31627) *
              C151869 * C151851 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152080 *
                C31624 +
            C31863 * C31625 + C31864 * C31626 + C31865 * C31627) *
               C151869 * C152258 -
           (C31866 * C31627 + C31865 * C31626 + C31864 * C31625 +
            C31863 * C31624) *
               C151869 * C152244 +
           (C31864 * C31624 + C31865 * C31625 + C31866 * C31626 +
            (C31628 * C7801 + C31806 + C31806 + C151791 * C7807) * C152080 *
                C31627) *
               C151869 * C152214) *
              C335 +
          ((C31867 * C31624 + C31868 * C31625 + C31869 * C31626 +
            C31870 * C31627) *
               C151869 * C152244 -
           (C31869 * C31627 + C31868 * C31626 + C31867 * C31625 +
            (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152080 *
                C31624) *
               C151869 * C152258 -
           ((C31628 * C7802 + C31816 + C31816 + C151791 * C7808) * C152080 *
                C31627 +
            C31870 * C31626 + C31869 * C31625 + C31868 * C31624) *
               C151869 * C152214) *
              C336 +
          (((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C152080 *
                C31624 +
            C31871 * C31625 + C31872 * C31626 + C31873 * C31627) *
               C151869 * C152258 -
           (C31874 * C31627 + C31873 * C31626 + C31872 * C31625 +
            C31871 * C31624) *
               C151869 * C152244 +
           (C31872 * C31624 + C31873 * C31625 + C31874 * C31626 +
            (C31628 * C7803 + C31826 + C31826 + C151791 * C7809) * C152080 *
                C31627) *
               C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152080 *
                C31624 +
            C31863 * C31625 + C31864 * C31626 + C31865 * C31627) *
               C152259 -
           ((C31628 * C2053 + C32021 + C32021 + C151791 * C2061) * C152080 *
                C31627 +
            (C31628 * C1538 + C32022 + C32022 + C151791 * C1562) * C152080 *
                C31626 +
            (C31628 * C1083 + C32023 + C32023 + C151791 * C1095) * C152080 *
                C31625 +
            (C31628 * C550 + C32024 + C32024 + C151791 * C574) * C152080 *
                C31624) *
               C152246 +
           ((C31628 * C551 + C32025 + C32025 + C151791 * C575) * C152080 *
                C31624 +
            (C31628 * C1534 + C32026 + C32026 + C151791 * C1558) * C152080 *
                C31625 +
            (C31628 * C1539 + C32027 + C32027 + C151791 * C1563) * C152080 *
                C31626 +
            (C31628 * C8064 + C32028 + C32028 + C151791 * C8070) * C152080 *
                C31627) *
               C152217) *
              C151851 * C335 +
          (((C31628 * C549 + C32029 + C32029 + C151791 * C573) * C152080 *
                C31624 +
            (C31628 * C1084 + C32030 + C32030 + C151791 * C1096) * C152080 *
                C31625 +
            (C31628 * C1537 + C32031 + C32031 + C151791 * C1561) * C152080 *
                C31626 +
            (C31628 * C2054 + C32032 + C32032 + C151791 * C2062) * C152080 *
                C31627) *
               C152246 -
           (C31869 * C31627 + C31868 * C31626 + C31867 * C31625 +
            (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152080 *
                C31624) *
               C152259 -
           ((C31628 * C8065 + C32033 + C32033 + C151791 * C8071) * C152080 *
                C31627 +
            (C31628 * C1540 + C32034 + C32034 + C151791 * C1564) * C152080 *
                C31626 +
            (C31628 * C1533 + C32035 + C32035 + C151791 * C1557) * C152080 *
                C31625 +
            (C31628 * C552 + C32036 + C32036 + C151791 * C576) * C152080 *
                C31624) *
               C152217) *
              C151851 * C336 +
          (((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C152080 *
                C31624 +
            C31871 * C31625 + C31872 * C31626 + C31873 * C31627) *
               C152259 -
           ((C31628 * C2055 + C32037 + C32037 + C151791 * C2063) * C152080 *
                C31627 +
            (C31628 * C1536 + C32038 + C32038 + C151791 * C1560) * C152080 *
                C31626 +
            (C31628 * C1085 + C32039 + C32039 + C151791 * C1097) * C152080 *
                C31625 +
            (C31628 * C548 + C32040 + C32040 + C151791 * C572) * C152080 *
                C31624) *
               C152246 +
           ((C31628 * C553 + C32041 + C32041 + C151791 * C577) * C152080 *
                C31624 +
            (C31628 * C1532 + C32042 + C32042 + C151791 * C1556) * C152080 *
                C31625 +
            (C31628 * C1541 + C32043 + C32043 + C151791 * C1565) * C152080 *
                C31626 +
            (C31628 * C8066 + C32044 + C32044 + C151791 * C8072) * C152080 *
                C31627) *
               C152217) *
              C151851 * C152208)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152080 *
                C31624 +
            C31863 * C31625 + C31864 * C31626 + C31865 * C31627) *
               C151869 * C1259 -
           (C31866 * C31627 + C31865 * C31626 + C31864 * C31625 +
            C31863 * C31624) *
               C151869 * C1260 +
           (C31864 * C31624 + C31865 * C31625 + C31866 * C31626 +
            (C31628 * C7801 + C31806 + C31806 + C151791 * C7807) * C152080 *
                C31627) *
               C151869 * C152214) *
              C152255 +
          ((C31867 * C31624 + C31868 * C31625 + C31869 * C31626 +
            C31870 * C31627) *
               C151869 * C1260 -
           (C31869 * C31627 + C31868 * C31626 + C31867 * C31625 +
            (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152080 *
                C31624) *
               C151869 * C1259 -
           ((C31628 * C7802 + C31816 + C31816 + C151791 * C7808) * C152080 *
                C31627 +
            C31870 * C31626 + C31869 * C31625 + C31868 * C31624) *
               C151869 * C152214) *
              C152240 +
          (((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C152080 *
                C31624 +
            C31871 * C31625 + C31872 * C31626 + C31873 * C31627) *
               C151869 * C1259 -
           (C31874 * C31627 + C31873 * C31626 + C31872 * C31625 +
            C31871 * C31624) *
               C151869 * C1260 +
           (C31872 * C31624 + C31873 * C31625 + C31874 * C31626 +
            (C31628 * C7803 + C31826 + C31826 + C151791 * C7809) * C152080 *
                C31627) *
               C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         (((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152080 *
               C31624 +
           C31863 * C31625 + C31864 * C31626 + C31865 * C31627) *
              C151869 * C1347 -
          (C31866 * C31627 + C31865 * C31626 + C31864 * C31625 +
           C31863 * C31624) *
              C151869 * C1348 +
          (C31864 * C31624 + C31865 * C31625 + C31866 * C31626 +
           C32822 * C31627) *
              C151869 * C1349 -
          (C32823 * C31627 + C32822 * C31626 + C31866 * C31625 +
           C31865 * C31624) *
              C151869 * C1350 +
          (C31866 * C31624 + C32822 * C31625 + C32823 * C31626 +
           (C31628 * C32806 + C32815 + C32815 + C151791 * C32808) * C152080 *
               C31627) *
              C151869 * C1351) *
         C151823) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152080 *
                C31624 +
            C31863 * C31625 + C31864 * C31626 + C31865 * C31627) *
               C152259 -
           (C32570 * C31627 + C32571 * C31626 + C32572 * C31625 +
            (C31628 * C550 + C32024 + C32024 + C151791 * C574) * C152080 *
                C31624) *
               C152246 +
           ((C31628 * C551 + C32025 + C32025 + C151791 * C575) * C152080 *
                C31624 +
            C33001 * C31625 + C33002 * C31626 + C33003 * C31627) *
               C152217) *
              C1259 +
          ((C32572 * C31624 + C32571 * C31625 + C32570 * C31626 +
            C33004 * C31627) *
               C152246 -
           (C31866 * C31627 + C31865 * C31626 + C31864 * C31625 +
            C31863 * C31624) *
               C152259 -
           (C33005 * C31627 + C33003 * C31626 + C33002 * C31625 +
            C33001 * C31624) *
               C152217) *
              C1260 +
          ((C31864 * C31624 + C31865 * C31625 + C31866 * C31626 +
            C32822 * C31627) *
               C152259 -
           ((C31628 * C25783 + C32984 + C32984 + C151791 * C25787) * C152080 *
                C31627 +
            C33004 * C31626 + C32570 * C31625 + C32571 * C31624) *
               C152246 +
           (C33002 * C31624 + C33003 * C31625 + C33005 * C31626 +
            (C31628 * C32969 + C32985 + C32985 + C151791 * C32971) * C152080 *
                C31627) *
               C152217) *
              C152214) *
         C151823) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152080 *
                C31624 +
            C31863 * C31625 + C31864 * C31626 + C31865 * C31627) *
               C2215 -
           (C32570 * C31627 + C32571 * C31626 + C32572 * C31625 +
            (C31628 * C550 + C32024 + C32024 + C151791 * C574) * C152080 *
                C31624) *
               C2216 +
           ((C31628 * C551 + C32025 + C32025 + C151791 * C575) * C152080 *
                C31624 +
            C33001 * C31625 + C33002 * C31626 + C33003 * C31627) *
               C152217) *
              C151851 * C152255 +
          (((C31628 * C549 + C32029 + C32029 + C151791 * C573) * C152080 *
                C31624 +
            C32573 * C31625 + C32574 * C31626 + C32575 * C31627) *
               C2216 -
           (C31869 * C31627 + C31868 * C31626 + C31867 * C31625 +
            (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152080 *
                C31624) *
               C2215 -
           ((C31628 * C8065 + C32033 + C32033 + C151791 * C8071) * C152080 *
                C31627 +
            (C31628 * C1540 + C32034 + C32034 + C151791 * C1564) * C152080 *
                C31626 +
            (C31628 * C1533 + C32035 + C32035 + C151791 * C1557) * C152080 *
                C31625 +
            (C31628 * C552 + C32036 + C32036 + C151791 * C576) * C152080 *
                C31624) *
               C152217) *
              C151851 * C152240 +
          (((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C152080 *
                C31624 +
            C31871 * C31625 + C31872 * C31626 + C31873 * C31627) *
               C2215 -
           (C32576 * C31627 + C32577 * C31626 + C32578 * C31625 +
            (C31628 * C548 + C32040 + C32040 + C151791 * C572) * C152080 *
                C31624) *
               C2216 +
           ((C31628 * C553 + C32041 + C32041 + C151791 * C577) * C152080 *
                C31624 +
            (C31628 * C1532 + C32042 + C32042 + C151791 * C1556) * C152080 *
                C31625 +
            (C31628 * C1541 + C32043 + C32043 + C151791 * C1565) * C152080 *
                C31626 +
            (C31628 * C8066 + C32044 + C32044 + C151791 * C8072) * C152080 *
                C31627) *
               C152217) *
              C151851 * C152208)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152080 *
                C31624 +
            C31863 * C31625 + C31864 * C31626 + C31865 * C31627) *
               C2215 -
           (C32570 * C31627 + C32571 * C31626 + C32572 * C31625 +
            (C31628 * C550 + C32024 + C32024 + C151791 * C574) * C152080 *
                C31624) *
               C2216 +
           ((C31628 * C551 + C32025 + C32025 + C151791 * C575) * C152080 *
                C31624 +
            C33001 * C31625 + C33002 * C31626 + C33003 * C31627) *
               C152217) *
              C152258 +
          ((C32572 * C31624 + C32571 * C31625 + C32570 * C31626 +
            C33004 * C31627) *
               C2216 -
           (C31866 * C31627 + C31865 * C31626 + C31864 * C31625 +
            C31863 * C31624) *
               C2215 -
           (C33005 * C31627 + C33003 * C31626 + C33002 * C31625 +
            C33001 * C31624) *
               C152217) *
              C152244 +
          ((C31864 * C31624 + C31865 * C31625 + C31866 * C31626 +
            C32822 * C31627) *
               C2215 -
           (C33483 * C31627 + C33004 * C31626 + C32570 * C31625 +
            C32571 * C31624) *
               C2216 +
           (C33002 * C31624 + C33003 * C31625 + C33005 * C31626 +
            (C31628 * C32969 + C32985 + C32985 + C151791 * C32971) * C152080 *
                C31627) *
               C152217) *
              C152214) *
         C151823) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152080 *
               C31624 +
           C31863 * C31625 + C31864 * C31626 + C31865 * C31627) *
              C2446 -
          (C32570 * C31627 + C32571 * C31626 + C32572 * C31625 +
           (C31628 * C550 + C32024 + C32024 + C151791 * C574) * C152080 *
               C31624) *
              C2447 +
          ((C31628 * C551 + C32025 + C32025 + C151791 * C575) * C152080 *
               C31624 +
           C33001 * C31625 + C33002 * C31626 + C33003 * C31627) *
              C2448 -
          ((C31628 * C27085 + C33861 + C33861 + C151791 * C27089) * C152080 *
               C31627 +
           (C31628 * C10149 + C33862 + C33862 + C151791 * C10155) * C152080 *
               C31626 +
           (C31628 * C2955 + C33863 + C33863 + C151791 * C2963) * C152080 *
               C31625 +
           (C31628 * C2454 + C33864 + C33864 + C151791 * C2470) * C152080 *
               C31624) *
              C2449 +
          ((C31628 * C2455 + C33865 + C33865 + C151791 * C2471) * C152080 *
               C31624 +
           (C31628 * C9426 + C33866 + C33866 + C151791 * C9432) * C152080 *
               C31625 +
           (C31628 * C26361 + C33867 + C33867 + C151791 * C26365) * C152080 *
               C31626 +
           (C31628 * C33857 + C33868 + C33868 + C151791 * C33859) * C152080 *
               C31627) *
              C2450) *
         C151851 * C151823) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C45770 +
            C37949 * C45771 + C37950 * C45772) *
               C152187 +
           (C31851 * C45770 + C32563 * C45771 + C32996 * C45772) * C152068) *
              C151869 * C151851 * C129 -
          ((C34078 * C45772 + C32564 * C45771 + C31855 * C45770) * C152068 +
           (C37952 * C45772 + C37951 * C45771 +
            (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C45770) *
               C152187) *
              C151869 * C151851 * C130 +
          (((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C45770 +
            C37953 * C45771 + C37956 * C45772) *
               C152187 +
           (C31859 * C45770 + C32569 * C45771 + C37955 * C45772) * C152068) *
              C151869 * C151851 * C131 -
          (((C31628 * C1531 + C38362 + C38362 + C151791 * C1555) * C45772 +
            C38161 * C45771 + C32188 * C45770) *
               C152068 +
           ((C31628 * C554 + C38361 + C38361 + C151791 * C578) * C45772 +
            C38366 * C45771 +
            (C31628 * C145 + C31646 + C31646 + C151791 * C161) * C45770) *
               C152187) *
              C151869 * C151851 * C132 +
          (((C31628 * C146 + C31647 + C31647 + C151791 * C162) * C45770 +
            (C31628 * C555 + C37454 + C37454 + C151791 * C579) * C45771 +
            (C31628 * C556 + C54126 + C54126 + C151791 * C580) * C45772) *
               C152187 +
           ((C31628 * C346 + C31648 + C31648 + C151791 * C370) * C45770 +
            (C31628 * C1087 + C37455 + C37455 + C151791 * C1099) * C45771 +
            (C31628 * C2677 + C54127 + C54127 + C151791 * C2679) * C45772) *
               C152068) *
              C151869 * C151851 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C45770 +
             C37949 * C45771 + C37950 * C45772) *
                C152187 +
            (C54346 + C54347 + C54348) * C152068) *
               C151869 * C152258 -
           ((C54349 + C54350 + C54351) * C152068 +
            (C54348 + C54347 + C54346) * C152187) *
               C151869 * C152244 +
           ((C54351 + C54350 + C54349) * C152187 +
            (C31853 * C45770 + C32561 * C45771 + C32998 * C45772) * C152068) *
               C151869 * C152214) *
              C335 +
          (((C54352 + C54353 + C54354) * C152187 +
            (C54355 + C54356 + C54357) * C152068) *
               C151869 * C152244 -
           ((C54354 + C54353 + C54352) * C152068 +
            (C37952 * C45772 + C37951 * C45771 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C45770) *
                C152187) *
               C151869 * C152258 -
           ((C34076 * C45772 + C32566 * C45771 + C31857 * C45770) * C152068 +
            (C54357 + C54356 + C54355) * C152187) *
               C151869 * C152214) *
              C336 +
          ((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C45770 +
             C37953 * C45771 + C37956 * C45772) *
                C152187 +
            (C54358 + C54359 + C54360) * C152068) *
               C151869 * C152258 -
           ((C54361 + C54362 + C54363) * C152068 +
            (C54360 + C54359 + C54358) * C152187) *
               C151869 * C152244 +
           ((C54363 + C54362 + C54361) * C152187 +
            (C31861 * C45770 + C32567 * C45771 +
             (C31628 * C8066 + C32044 + C32044 + C151791 * C8072) * C45772) *
                C152068) *
               C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C45770 +
             C37949 * C45771 + C37950 * C45772) *
                C152187 +
            (C54346 + C54347 + C54348) * C152068) *
               C152259 -
           ((C34364 * C45772 + C32996 * C45771 + C32563 * C45770) * C152068 +
            (C40513 * C45772 + C37950 * C45771 + C37949 * C45770) * C152187) *
               C152246 +
           ((C37950 * C45770 + C40513 * C45771 + C40516 * C45772) * C152187 +
            (C32996 * C45770 + C34364 * C45771 + C40515 * C45772) * C152068) *
               C152217) *
              C151851 * C335 +
          (((C37951 * C45770 + C37952 * C45771 + C41022 * C45772) * C152187 +
            (C32564 * C45770 + C34078 * C45771 + C40818 * C45772) * C152068) *
               C152246 -
           ((C54354 + C54353 + C54352) * C152068 +
            (C37952 * C45772 + C37951 * C45771 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C45770) *
                C152187) *
               C152259 -
           (((C31628 * C9427 + C41018 + C41018 + C151791 * C9433) * C45772 +
             C40818 * C45771 + C34078 * C45770) *
                C152068 +
            ((C31628 * C2456 + C41017 + C41017 + C151791 * C2472) * C45772 +
             C41022 * C45771 + C37952 * C45770) *
                C152187) *
               C152217) *
              C151851 * C336 +
          ((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C45770 +
             C37953 * C45771 + C37956 * C45772) *
                C152187 +
            (C54358 + C54359 + C54360) * C152068) *
               C152259 -
           ((C54592 * C45772 + C37955 * C45771 + C32569 * C45770) * C152068 +
            (C54593 * C45772 + C37956 * C45771 + C37953 * C45770) * C152187) *
               C152246 +
           ((C37956 * C45770 + C54593 * C45771 +
             (C31628 * C2457 + C54586 + C54586 + C151791 * C2473) * C45772) *
                C152187 +
            (C37955 * C45770 + C54592 * C45771 +
             (C31628 * C9428 + C54587 + C54587 + C151791 * C9434) * C45772) *
                C152068) *
               C152217) *
              C151851 * C152208)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C45770 +
             C37949 * C45771 + C37950 * C45772) *
                C152187 +
            (C54346 + C54347 + C54348) * C152068) *
               C151869 * C1259 -
           ((C54349 + C54350 + C54351) * C152068 +
            (C54348 + C54347 + C54346) * C152187) *
               C151869 * C1260 +
           ((C54351 + C54350 + C54349) * C152187 +
            (C31853 * C45770 + C32561 * C45771 + C32998 * C45772) * C152068) *
               C151869 * C152214) *
              C152255 +
          (((C54352 + C54353 + C54354) * C152187 +
            (C54355 + C54356 + C54357) * C152068) *
               C151869 * C1260 -
           ((C54354 + C54353 + C54352) * C152068 +
            (C37952 * C45772 + C37951 * C45771 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C45770) *
                C152187) *
               C151869 * C1259 -
           ((C34076 * C45772 + C32566 * C45771 + C31857 * C45770) * C152068 +
            (C54357 + C54356 + C54355) * C152187) *
               C151869 * C152214) *
              C152240 +
          ((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C45770 +
             C37953 * C45771 + C37956 * C45772) *
                C152187 +
            (C54358 + C54359 + C54360) * C152068) *
               C151869 * C1259 -
           ((C54361 + C54362 + C54363) * C152068 +
            (C54360 + C54359 + C54358) * C152187) *
               C151869 * C1260 +
           ((C54363 + C54362 + C54361) * C152187 +
            (C31861 * C45770 + C32567 * C45771 +
             (C31628 * C8066 + C32044 + C32044 + C151791 * C8072) * C45772) *
                C152068) *
               C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C45770 +
            C37949 * C45771 + C37950 * C45772) *
               C152187 +
           (C54346 + C54347 + C54348) * C152068) *
              C151869 * C1347 -
          ((C54349 + C54350 + C54351) * C152068 +
           (C54348 + C54347 + C54346) * C152187) *
              C151869 * C1348 +
          ((C54351 + C54350 + C54349) * C152187 +
           (C55636 + C55637 + C55638) * C152068) *
              C151869 * C1349 -
          ((C55639 + C55640 + C55641) * C152068 +
           (C55638 + C55637 + C55636) * C152187) *
              C151869 * C1350 +
          ((C55641 + C55640 + C55639) * C152187 +
           (C32820 * C45770 + C33482 * C45771 +
            (C31628 * C32969 + C32985 + C32985 + C151791 * C32971) * C45772) *
               C152068) *
              C151869 * C1351) *
         C151823) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C45770 +
             C37949 * C45771 + C37950 * C45772) *
                C152187 +
            (C54346 + C54347 + C54348) * C152068) *
               C152259 -
           ((C55287 + C55288 + C55289) * C152068 +
            (C40513 * C45772 + C37950 * C45771 + C37949 * C45770) * C152187) *
               C152246 +
           ((C37950 * C45770 + C40513 * C45771 + C40516 * C45772) * C152187 +
            (C55860 + C55861 + C55862) * C152068) *
               C152217) *
              C1259 +
          (((C55289 + C55288 + C55287) * C152187 +
            (C55863 + C55864 + C55865) * C152068) *
               C152246 -
           ((C54349 + C54350 + C54351) * C152068 +
            (C54348 + C54347 + C54346) * C152187) *
               C152259 -
           ((C55866 + C55867 + C55868) * C152068 +
            (C55862 + C55861 + C55860) * C152187) *
               C152217) *
              C1260 +
          (((C54351 + C54350 + C54349) * C152187 +
            (C55636 + C55637 + C55638) * C152068) *
               C152259 -
           ((C34362 * C45772 + C32998 * C45771 + C32561 * C45770) * C152068 +
            (C55865 + C55864 + C55863) * C152187) *
               C152246 +
           ((C55868 + C55867 + C55866) * C152187 +
            (C32998 * C45770 + C34362 * C45771 +
             (C31628 * C33857 + C33868 + C33868 + C151791 * C33859) * C45772) *
                C152068) *
               C152217) *
              C152214) *
         C151823) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C45770 +
             C37949 * C45771 + C37950 * C45772) *
                C152187 +
            (C54346 + C54347 + C54348) * C152068) *
               C2215 -
           ((C55287 + C55288 + C55289) * C152068 +
            (C40513 * C45772 + C37950 * C45771 + C37949 * C45770) * C152187) *
               C2216 +
           ((C37950 * C45770 + C40513 * C45771 + C40516 * C45772) * C152187 +
            (C55860 + C55861 + C55862) * C152068) *
               C152217) *
              C151851 * C152255 +
          (((C37951 * C45770 + C37952 * C45771 + C41022 * C45772) * C152187 +
            (C55290 + C55291 + C55292) * C152068) *
               C2216 -
           ((C54354 + C54353 + C54352) * C152068 +
            (C37952 * C45772 + C37951 * C45771 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C45770) *
                C152187) *
               C2215 -
           (((C31628 * C9427 + C41018 + C41018 + C151791 * C9433) * C45772 +
             C40818 * C45771 + C34078 * C45770) *
                C152068 +
            ((C31628 * C2456 + C41017 + C41017 + C151791 * C2472) * C45772 +
             C41022 * C45771 + C37952 * C45770) *
                C152187) *
               C152217) *
              C151851 * C152240 +
          ((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C45770 +
             C37953 * C45771 + C37956 * C45772) *
                C152187 +
            (C54358 + C54359 + C54360) * C152068) *
               C2215 -
           ((C55293 + C55294 + C55295) * C152068 +
            (C54593 * C45772 + C37956 * C45771 + C37953 * C45770) * C152187) *
               C2216 +
           ((C37956 * C45770 + C54593 * C45771 +
             (C31628 * C2457 + C54586 + C54586 + C151791 * C2473) * C45772) *
                C152187 +
            (C37955 * C45770 + C54592 * C45771 +
             (C31628 * C9428 + C54587 + C54587 + C151791 * C9434) * C45772) *
                C152068) *
               C152217) *
              C151851 * C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C45770 +
             C37949 * C45771 + C37950 * C45772) *
                C152187 +
            (C54346 + C54347 + C54348) * C152068) *
               C2215 -
           ((C55287 + C55288 + C55289) * C152068 +
            (C40513 * C45772 + C37950 * C45771 + C37949 * C45770) * C152187) *
               C2216 +
           ((C37950 * C45770 + C40513 * C45771 + C40516 * C45772) * C152187 +
            (C55860 + C55861 + C55862) * C152068) *
               C152217) *
              C152258 +
          (((C55289 + C55288 + C55287) * C152187 +
            (C55863 + C55864 + C55865) * C152068) *
               C2216 -
           ((C54349 + C54350 + C54351) * C152068 +
            (C54348 + C54347 + C54346) * C152187) *
               C2215 -
           ((C55866 + C55867 + C55868) * C152068 +
            (C55862 + C55861 + C55860) * C152187) *
               C152217) *
              C152244 +
          (((C54351 + C54350 + C54349) * C152187 +
            (C55636 + C55637 + C55638) * C152068) *
               C2215 -
           ((C56553 + C56554 + C56555) * C152068 +
            (C55865 + C55864 + C55863) * C152187) *
               C2216 +
           ((C55868 + C55867 + C55866) * C152187 +
            (C32998 * C45770 + C34362 * C45771 +
             (C31628 * C33857 + C33868 + C33868 + C151791 * C33859) * C45772) *
                C152068) *
               C152217) *
              C152214) *
         C151823) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C45770 +
            C37949 * C45771 + C37950 * C45772) *
               C152187 +
           (C54346 + C54347 + C54348) * C152068) *
              C2446 -
          ((C55287 + C55288 + C55289) * C152068 +
           (C40513 * C45772 + C37950 * C45771 + C37949 * C45770) * C152187) *
              C2447 +
          ((C37950 * C45770 + C40513 * C45771 + C40516 * C45772) * C152187 +
           (C55860 + C55861 + C55862) * C152068) *
              C2448 -
          ((C57127 * C45772 + C40515 * C45771 + C34364 * C45770) * C152068 +
           (C57128 * C45772 + C40516 * C45771 + C40513 * C45770) * C152187) *
              C2449 +
          ((C40516 * C45770 + C57128 * C45771 +
            (C31628 * C48823 + C57121 + C57121 + C151791 * C48827) * C45772) *
               C152187 +
           (C40515 * C45770 + C57127 * C45771 +
            (C31628 * C57113 + C57122 + C57122 + C151791 * C57115) * C45772) *
               C152068) *
              C2450) *
         C151851 * C151823) /
            (p * q * std::sqrt(p + q));
    d2ee[188] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
                 C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
                 C6086 * C160) *
                    C152080 * C152187 +
                (C6434 + C6435 + C6436) * C152080 * C152068) *
                   C152173 -
               ((C6093 * C1085 + C6670 + C6670 + C6086 * C1097 + C6091 * C1084 +
                 C6671 + C6671 + C6085 * C1096 + C6089 * C1083 + C6672 + C6672 +
                 C6084 * C1095) *
                    C152080 * C152068 +
                (C6093 * C548 + C6673 + C6673 + C6086 * C572 + C6091 * C549 +
                 C6674 + C6674 + C6085 * C573 + C6089 * C550 + C6675 + C6675 +
                 C6084 * C574) *
                    C152080 * C152187) *
                   C151956) *
                  C151851 * C739 +
              (((C6089 * C549 + C6682 + C6682 + C6084 * C573 + C6091 * C548 +
                 C6683 + C6683 + C6085 * C572 + C6093 * C547 + C6684 + C6684 +
                 C6086 * C571) *
                    C152080 * C152187 +
                (C6089 * C1084 + C6685 + C6685 + C6084 * C1096 + C6091 * C1085 +
                 C6686 + C6686 + C6085 * C1097 + C6093 * C1086 + C6687 + C6687 +
                 C6086 * C1098) *
                    C152080 * C152068) *
                   C151956 -
               ((C6442 + C6441 + C6440) * C152080 * C152068 +
                (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
                 C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
                 C6084 * C159) *
                    C152080 * C152187) *
                   C152173) *
                  C151851 * C740 +
              (((C6089 * C144 + C6108 + C6108 + C6084 * C160 + C6091 * C145 +
                 C6109 + C6109 + C6085 * C161 + C6093 * C146 + C6110 + C6110 +
                 C6086 * C162) *
                    C152080 * C152187 +
                (C6446 + C6447 + C6448) * C152080 * C152068) *
                   C152173 -
               ((C6093 * C1087 + C6694 + C6694 + C6086 * C1099 + C6091 * C1086 +
                 C6695 + C6695 + C6085 * C1098 + C6089 * C1085 + C6696 + C6696 +
                 C6084 * C1097) *
                    C152080 * C152068 +
                (C6093 * C555 + C6697 + C6697 + C6086 * C579 + C6091 * C547 +
                 C6698 + C6698 + C6085 * C571 + C6089 * C548 + C6699 + C6699 +
                 C6084 * C572) *
                    C152080 * C152187) *
                   C151956) *
                  C151851 * C741 +
              (((C6089 * C547 + C7112 + C7112 + C6084 * C571 + C6091 * C555 +
                 C7113 + C7113 + C6085 * C579 + C6093 * C557 + C7114 + C7114 +
                 C6086 * C581) *
                    C152080 * C152187 +
                (C6089 * C1086 + C7115 + C7115 + C6084 * C1098 + C6091 * C1087 +
                 C7116 + C7116 + C6085 * C1099 + C6093 * C1088 + C7117 + C7117 +
                 C6086 * C1100) *
                    C152080 * C152068) *
                   C151956 -
               ((C6917 + C6916 + C6915) * C152080 * C152068 +
                (C6093 * C147 + C6117 + C6117 + C6086 * C163 + C6091 * C146 +
                 C6118 + C6118 + C6085 * C162 + C6089 * C145 + C6119 + C6119 +
                 C6084 * C161) *
                    C152080 * C152187) *
                   C152173) *
                  C151851 * C152218) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
                  C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
                  C6086 * C160) *
                     C152080 * C152187 +
                 (C6434 + C6435 + C6436) * C152080 * C152068) *
                    C152173 -
                ((C7453 + C7454 + C7455) * C152080 * C152068 +
                 (C6093 * C548 + C6673 + C6673 + C6086 * C572 + C6091 * C549 +
                  C6674 + C6674 + C6085 * C573 + C6089 * C550 + C6675 + C6675 +
                  C6084 * C574) *
                     C152080 * C152187) *
                    C151956) *
                   C1259 +
               (((C7455 + C7454 + C7453) * C152080 * C152187 +
                 (C8122 + C8123 + C8124) * C152080 * C152068) *
                    C151956 -
                ((C6437 + C6438 + C6439) * C152080 * C152068 +
                 (C6436 + C6435 + C6434) * C152080 * C152187) *
                    C152173) *
                   C1260 +
               (((C6439 + C6438 + C6437) * C152080 * C152187 +
                 (C7841 + C7842 + C7843) * C152080 * C152068) *
                    C152173 -
                ((C6093 * C2055 + C8095 + C8095 + C6086 * C2063 +
                  C6091 * C2054 + C8096 + C8096 + C6085 * C2062 +
                  C6089 * C2053 + C8097 + C8097 + C6084 * C2061) *
                     C152080 * C152068 +
                 (C8124 + C8123 + C8122) * C152080 * C152187) *
                    C151956) *
                   C152214) *
                  C152158 +
              ((((C6089 * C549 + C6682 + C6682 + C6084 * C573 + C6091 * C548 +
                  C6683 + C6683 + C6085 * C572 + C6093 * C547 + C6684 + C6684 +
                  C6086 * C571) *
                     C152080 * C152187 +
                 (C7456 + C7457 + C7458) * C152080 * C152068) *
                    C151956 -
                ((C6442 + C6441 + C6440) * C152080 * C152068 +
                 (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
                  C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
                  C6084 * C159) *
                     C152080 * C152187) *
                    C152173) *
                   C1259 +
               (((C6440 + C6441 + C6442) * C152080 * C152187 +
                 (C6443 + C6444 + C6445) * C152080 * C152068) *
                    C152173 -
                ((C8645 + C8646 + C8647) * C152080 * C152068 +
                 (C7458 + C7457 + C7456) * C152080 * C152187) *
                    C151956) *
                   C1260 +
               (((C8647 + C8646 + C8645) * C152080 * C152187 +
                 (C6089 * C2054 + C8636 + C8636 + C6084 * C2062 +
                  C6091 * C2055 + C8637 + C8637 + C6085 * C2063 +
                  C6093 * C2056 + C8638 + C8638 + C6086 * C2064) *
                     C152080 * C152068) *
                    C151956 -
                ((C8337 + C8338 + C8339) * C152080 * C152068 +
                 (C6445 + C6444 + C6443) * C152080 * C152187) *
                    C152173) *
                   C152214) *
                  C151834)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
             C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
             C6086 * C160) *
                C152080 * C152187 +
            (C6434 + C6435 + C6436) * C152080 * C152068) *
               C2814 -
           ((C7453 + C7454 + C7455) * C152080 * C152068 +
            (C6093 * C548 + C6673 + C6673 + C6086 * C572 + C6091 * C549 +
             C6674 + C6674 + C6085 * C573 + C6089 * C550 + C6675 + C6675 +
             C6084 * C574) *
                C152080 * C152187) *
               C2815 +
           ((C6089 * C551 + C6676 + C6676 + C6084 * C575 + C6091 * C552 +
             C6677 + C6677 + C6085 * C576 + C6093 * C553 + C6678 + C6678 +
             C6086 * C577) *
                C152080 * C152187 +
            (C8119 + C8120 + C8121) * C152080 * C152068) *
               C2816 -
           ((C6093 * C2957 + C9436 + C9436 + C6086 * C2965 + C6091 * C2956 +
             C9437 + C9437 + C6085 * C2964 + C6089 * C2955 + C9438 + C9438 +
             C6084 * C2963) *
                C152080 * C152068 +
            (C6093 * C2452 + C9439 + C9439 + C6086 * C2468 + C6091 * C2453 +
             C9440 + C9440 + C6085 * C2469 + C6089 * C2454 + C9441 + C9441 +
             C6084 * C2470) *
                C152080 * C152187) *
               C152230) *
              C151851 * C152158 +
          (((C6089 * C549 + C6682 + C6682 + C6084 * C573 + C6091 * C548 +
             C6683 + C6683 + C6085 * C572 + C6093 * C547 + C6684 + C6684 +
             C6086 * C571) *
                C152080 * C152187 +
            (C7456 + C7457 + C7458) * C152080 * C152068) *
               C2815 -
           ((C6442 + C6441 + C6440) * C152080 * C152068 +
            (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
             C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
             C6084 * C159) *
                C152080 * C152187) *
               C2814 -
           ((C9753 + C9754 + C9755) * C152080 * C152068 +
            (C6093 * C554 + C6691 + C6691 + C6086 * C578 + C6091 * C553 +
             C6692 + C6692 + C6085 * C577 + C6089 * C552 + C6693 + C6693 +
             C6084 * C576) *
                C152080 * C152187) *
               C2816 +
           ((C6089 * C2453 + C9950 + C9950 + C6084 * C2469 + C6091 * C2452 +
             C9951 + C9951 + C6085 * C2468 + C6093 * C2451 + C9952 + C9952 +
             C6086 * C2467) *
                C152080 * C152187 +
            (C6089 * C2956 + C9953 + C9953 + C6084 * C2964 + C6091 * C2957 +
             C9954 + C9954 + C6085 * C2965 + C6093 * C2958 + C9955 + C9955 +
             C6086 * C2966) *
                C152080 * C152068) *
               C152230) *
              C151851 * C151834)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152080 *
                C31624 +
            C31863 * C31625 + C31864 * C31626 + C31865 * C31627) *
               C152173 -
           ((C31628 * C2053 + C32021 + C32021 + C151791 * C2061) * C152080 *
                C31627 +
            (C31628 * C1538 + C32022 + C32022 + C151791 * C1562) * C152080 *
                C31626 +
            (C31628 * C1083 + C32023 + C32023 + C151791 * C1095) * C152080 *
                C31625 +
            (C31628 * C550 + C32024 + C32024 + C151791 * C574) * C152080 *
                C31624) *
               C151956) *
              C151851 * C739 +
          (((C31628 * C549 + C32029 + C32029 + C151791 * C573) * C152080 *
                C31624 +
            (C31628 * C1084 + C32030 + C32030 + C151791 * C1096) * C152080 *
                C31625 +
            (C31628 * C1537 + C32031 + C32031 + C151791 * C1561) * C152080 *
                C31626 +
            (C31628 * C2054 + C32032 + C32032 + C151791 * C2062) * C152080 *
                C31627) *
               C151956 -
           (C31869 * C31627 + C31868 * C31626 + C31867 * C31625 +
            (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152080 *
                C31624) *
               C152173) *
              C151851 * C740 +
          (((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C152080 *
                C31624 +
            C31871 * C31625 + C31872 * C31626 + C31873 * C31627) *
               C152173 -
           ((C31628 * C2055 + C32037 + C32037 + C151791 * C2063) * C152080 *
                C31627 +
            (C31628 * C1536 + C32038 + C32038 + C151791 * C1560) * C152080 *
                C31626 +
            (C31628 * C1085 + C32039 + C32039 + C151791 * C1097) * C152080 *
                C31625 +
            (C31628 * C548 + C32040 + C32040 + C151791 * C572) * C152080 *
                C31624) *
               C151956) *
              C151851 * C741 +
          (((C31628 * C547 + C32324 + C32324 + C151791 * C571) * C152080 *
                C31624 +
            (C31628 * C1086 + C32325 + C32325 + C151791 * C1098) * C152080 *
                C31625 +
            (C31628 * C1535 + C32326 + C32326 + C151791 * C1559) * C152080 *
                C31626 +
            (C31628 * C2056 + C32327 + C32327 + C151791 * C2064) * C152080 *
                C31627) *
               C151956 -
           (C32193 * C31627 + C32192 * C31626 + C32191 * C31625 +
            (C31628 * C145 + C31646 + C31646 + C151791 * C161) * C152080 *
                C31624) *
               C152173) *
              C151851 * C152218)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152080 *
                 C31624 +
             C31863 * C31625 + C31864 * C31626 + C31865 * C31627) *
                C152173 -
            (C32570 * C31627 + C32571 * C31626 + C32572 * C31625 +
             (C31628 * C550 + C32024 + C32024 + C151791 * C574) * C152080 *
                 C31624) *
                C151956) *
               C1259 +
           ((C32572 * C31624 + C32571 * C31625 + C32570 * C31626 +
             C33004 * C31627) *
                C151956 -
            (C31866 * C31627 + C31865 * C31626 + C31864 * C31625 +
             C31863 * C31624) *
                C152173) *
               C1260 +
           ((C31864 * C31624 + C31865 * C31625 + C31866 * C31626 +
             C32822 * C31627) *
                C152173 -
            ((C31628 * C25783 + C32984 + C32984 + C151791 * C25787) * C152080 *
                 C31627 +
             C33004 * C31626 + C32570 * C31625 + C32571 * C31624) *
                C151956) *
               C152214) *
              C152158 +
          ((((C31628 * C549 + C32029 + C32029 + C151791 * C573) * C152080 *
                 C31624 +
             C32573 * C31625 + C32574 * C31626 + C32575 * C31627) *
                C151956 -
            (C31869 * C31627 + C31868 * C31626 + C31867 * C31625 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152080 *
                 C31624) *
                C152173) *
               C1259 +
           ((C31867 * C31624 + C31868 * C31625 + C31869 * C31626 +
             C31870 * C31627) *
                C152173 -
            (C33343 * C31627 + C32575 * C31626 + C32574 * C31625 +
             C32573 * C31624) *
                C151956) *
               C1260 +
           ((C32574 * C31624 + C32575 * C31625 + C33343 * C31626 +
             (C31628 * C25784 + C33339 + C33339 + C151791 * C25788) * C152080 *
                 C31627) *
                C151956 -
            (C33142 * C31627 + C31870 * C31626 + C31869 * C31625 +
             C31868 * C31624) *
                C152173) *
               C152214) *
              C151834)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152080 *
                C31624 +
            C31863 * C31625 + C31864 * C31626 + C31865 * C31627) *
               C2814 -
           (C32570 * C31627 + C32571 * C31626 + C32572 * C31625 +
            (C31628 * C550 + C32024 + C32024 + C151791 * C574) * C152080 *
                C31624) *
               C2815 +
           ((C31628 * C551 + C32025 + C32025 + C151791 * C575) * C152080 *
                C31624 +
            C33001 * C31625 + C33002 * C31626 + C33003 * C31627) *
               C2816 -
           ((C31628 * C27085 + C33861 + C33861 + C151791 * C27089) * C152080 *
                C31627 +
            (C31628 * C10149 + C33862 + C33862 + C151791 * C10155) * C152080 *
                C31626 +
            (C31628 * C2955 + C33863 + C33863 + C151791 * C2963) * C152080 *
                C31625 +
            (C31628 * C2454 + C33864 + C33864 + C151791 * C2470) * C152080 *
                C31624) *
               C152230) *
              C151851 * C152158 +
          (((C31628 * C549 + C32029 + C32029 + C151791 * C573) * C152080 *
                C31624 +
            C32573 * C31625 + C32574 * C31626 + C32575 * C31627) *
               C2815 -
           (C31869 * C31627 + C31868 * C31626 + C31867 * C31625 +
            (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152080 *
                C31624) *
               C2814 -
           (C34079 * C31627 + C34080 * C31626 + C34081 * C31625 +
            (C31628 * C552 + C32036 + C32036 + C151791 * C576) * C152080 *
                C31624) *
               C2816 +
           ((C31628 * C2453 + C34212 + C34212 + C151791 * C2469) * C152080 *
                C31624 +
            (C31628 * C2956 + C34213 + C34213 + C151791 * C2964) * C152080 *
                C31625 +
            (C31628 * C10150 + C34214 + C34214 + C151791 * C10156) * C152080 *
                C31626 +
            (C31628 * C27086 + C34215 + C34215 + C151791 * C27090) * C152080 *
                C31627) *
               C152230) *
              C151851 * C151834)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C45770 +
             C37949 * C45771 + C37950 * C45772) *
                C152187 +
            (C54346 + C54347 + C54348) * C152068) *
               C152173 -
           ((C34364 * C45772 + C32996 * C45771 + C32563 * C45770) * C152068 +
            (C40513 * C45772 + C37950 * C45771 + C37949 * C45770) * C152187) *
               C151956) *
              C151851 * C739 +
          (((C37951 * C45770 + C37952 * C45771 + C41022 * C45772) * C152187 +
            (C32564 * C45770 + C34078 * C45771 + C40818 * C45772) * C152068) *
               C151956 -
           ((C54354 + C54353 + C54352) * C152068 +
            (C37952 * C45772 + C37951 * C45771 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C45770) *
                C152187) *
               C152173) *
              C151851 * C740 +
          ((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C45770 +
             C37953 * C45771 + C37956 * C45772) *
                C152187 +
            (C54358 + C54359 + C54360) * C152068) *
               C152173 -
           ((C54592 * C45772 + C37955 * C45771 + C32569 * C45770) * C152068 +
            (C54593 * C45772 + C37956 * C45771 + C37953 * C45770) * C152187) *
               C151956) *
              C151851 * C741 +
          (((C38366 * C45770 + C54996 * C45771 +
             (C31628 * C2451 + C54992 + C54992 + C151791 * C2467) * C45772) *
                C152187 +
            (C38161 * C45770 + C54794 * C45771 +
             (C31628 * C2958 + C54993 + C54993 + C151791 * C2966) * C45772) *
                C152068) *
               C151956 -
           ((C54795 + C54789 + C54788) * C152068 +
            (C54996 * C45772 + C38366 * C45771 +
             (C31628 * C145 + C31646 + C31646 + C151791 * C161) * C45770) *
                C152187) *
               C152173) *
              C151851 * C152218)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C45770 +
              C37949 * C45771 + C37950 * C45772) *
                 C152187 +
             (C54346 + C54347 + C54348) * C152068) *
                C152173 -
            ((C55287 + C55288 + C55289) * C152068 +
             (C40513 * C45772 + C37950 * C45771 + C37949 * C45770) * C152187) *
                C151956) *
               C1259 +
           (((C55289 + C55288 + C55287) * C152187 +
             (C55863 + C55864 + C55865) * C152068) *
                C151956 -
            ((C54349 + C54350 + C54351) * C152068 +
             (C54348 + C54347 + C54346) * C152187) *
                C152173) *
               C1260 +
           (((C54351 + C54350 + C54349) * C152187 +
             (C55636 + C55637 + C55638) * C152068) *
                C152173 -
            ((C34362 * C45772 + C32998 * C45771 + C32561 * C45770) * C152068 +
             (C55865 + C55864 + C55863) * C152187) *
                C151956) *
               C152214) *
              C152158 +
          ((((C37951 * C45770 + C37952 * C45771 + C41022 * C45772) * C152187 +
             (C55290 + C55291 + C55292) * C152068) *
                C151956 -
            ((C54354 + C54353 + C54352) * C152068 +
             (C37952 * C45772 + C37951 * C45771 +
              (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C45770) *
                 C152187) *
                C152173) *
               C1259 +
           (((C54352 + C54353 + C54354) * C152187 +
             (C54355 + C54356 + C54357) * C152068) *
                C152173 -
            ((C56356 + C56357 + C56358) * C152068 +
             (C55292 + C55291 + C55290) * C152187) *
                C151956) *
               C1260 +
           (((C56358 + C56357 + C56356) * C152187 +
             (C32566 * C45770 + C34076 * C45771 +
              (C31628 * C27086 + C34215 + C34215 + C151791 * C27090) * C45772) *
                 C152068) *
                C151956 -
            ((C56063 + C56064 + C56065) * C152068 +
             (C54357 + C54356 + C54355) * C152187) *
                C152173) *
               C152214) *
              C151834)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C45770 +
             C37949 * C45771 + C37950 * C45772) *
                C152187 +
            (C54346 + C54347 + C54348) * C152068) *
               C2814 -
           ((C55287 + C55288 + C55289) * C152068 +
            (C40513 * C45772 + C37950 * C45771 + C37949 * C45770) * C152187) *
               C2815 +
           ((C37950 * C45770 + C40513 * C45771 + C40516 * C45772) * C152187 +
            (C55860 + C55861 + C55862) * C152068) *
               C2816 -
           ((C57127 * C45772 + C40515 * C45771 + C34364 * C45770) * C152068 +
            (C57128 * C45772 + C40516 * C45771 + C40513 * C45770) * C152187) *
               C152230) *
              C151851 * C152158 +
          (((C37951 * C45770 + C37952 * C45771 + C41022 * C45772) * C152187 +
            (C55290 + C55291 + C55292) * C152068) *
               C2815 -
           ((C54354 + C54353 + C54352) * C152068 +
            (C37952 * C45772 + C37951 * C45771 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C45770) *
                C152187) *
               C2814 -
           ((C57426 + C57421 + C57422) * C152068 +
            (C57627 * C45772 + C41022 * C45771 + C37952 * C45770) * C152187) *
               C2816 +
           ((C41022 * C45770 + C57627 * C45771 +
             (C31628 * C17751 + C57623 + C57623 + C151791 * C17757) * C45772) *
                C152187 +
            (C40818 * C45770 + C57425 * C45771 +
             (C31628 * C49559 + C57624 + C57624 + C151791 * C49561) * C45772) *
                C152068) *
               C152230) *
              C151851 * C151834)) /
            (p * q * std::sqrt(p + q));
    d2ee[189] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 + C6097 +
            C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
            C6086 * C160) *
               C152080 * C152187 +
           (C6089 * C341 + C6099 + C6099 + C6084 * C365 + C6091 * C340 + C6100 +
            C6100 + C6085 * C364 + C6093 * C339 + C6101 + C6101 +
            C6086 * C363) *
               C152080 * C152068) *
              C151869 * C151851 * C129 -
          ((C6093 * C338 + C6102 + C6102 + C6086 * C362 + C6091 * C339 + C6103 +
            C6103 + C6085 * C363 + C6089 * C340 + C6104 + C6104 +
            C6084 * C364) *
               C152080 * C152068 +
           (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 + C6106 +
            C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
            C6084 * C159) *
               C152080 * C152187) *
              C151869 * C151851 * C130 +
          ((C6089 * C144 + C6108 + C6108 + C6084 * C160 + C6091 * C145 + C6109 +
            C6109 + C6085 * C161 + C6093 * C146 + C6110 + C6110 +
            C6086 * C162) *
               C152080 * C152187 +
           (C6089 * C339 + C6111 + C6111 + C6084 * C363 + C6091 * C338 + C6112 +
            C6112 + C6085 * C362 + C6093 * C346 + C6113 + C6113 +
            C6086 * C370) *
               C152080 * C152068) *
              C151869 * C151851 * C131 -
          ((C6093 * C348 + C6114 + C6114 + C6086 * C372 + C6091 * C346 + C6115 +
            C6115 + C6085 * C370 + C6089 * C338 + C6116 + C6116 +
            C6084 * C362) *
               C152080 * C152068 +
           (C6093 * C147 + C6117 + C6117 + C6086 * C163 + C6091 * C146 + C6118 +
            C6118 + C6085 * C162 + C6089 * C145 + C6119 + C6119 +
            C6084 * C161) *
               C152080 * C152187) *
              C151869 * C151851 * C132 +
          ((C6089 * C146 + C6120 + C6120 + C6084 * C162 + C6091 * C147 + C6121 +
            C6121 + C6085 * C163 + C6093 * C148 + C6122 + C6122 +
            C6086 * C164) *
               C152080 * C152187 +
           (C6089 * C346 + C6123 + C6123 + C6084 * C370 + C6091 * C348 + C6124 +
            C6124 + C6085 * C372 + C6093 * C743 + C6125 + C6125 +
            C6086 * C745) *
               C152080 * C152068) *
              C151869 * C151851 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
             C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
             C6086 * C160) *
                C152080 * C152187 +
            (C6434 + C6435 + C6436) * C152080 * C152068) *
               C151869 * C152258 -
           ((C6437 + C6438 + C6439) * C152080 * C152068 +
            (C6436 + C6435 + C6434) * C152080 * C152187) *
               C151869 * C152244 +
           ((C6439 + C6438 + C6437) * C152080 * C152187 +
            (C6089 * C1356 + C6359 + C6359 + C6084 * C1372 + C6091 * C1355 +
             C6360 + C6360 + C6085 * C1371 + C6093 * C1354 + C6361 + C6361 +
             C6086 * C1370) *
                C152080 * C152068) *
               C151869 * C152214) *
              C335 +
          (((C6440 + C6441 + C6442) * C152080 * C152187 +
            (C6443 + C6444 + C6445) * C152080 * C152068) *
               C151869 * C152244 -
           ((C6442 + C6441 + C6440) * C152080 * C152068 +
            (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
             C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
             C6084 * C159) *
                C152080 * C152187) *
               C151869 * C152258 -
           ((C6093 * C1353 + C6377 + C6377 + C6086 * C1369 + C6091 * C1354 +
             C6378 + C6378 + C6085 * C1370 + C6089 * C1355 + C6379 + C6379 +
             C6084 * C1371) *
                C152080 * C152068 +
            (C6445 + C6444 + C6443) * C152080 * C152187) *
               C151869 * C152214) *
              C336 +
          (((C6089 * C144 + C6108 + C6108 + C6084 * C160 + C6091 * C145 +
             C6109 + C6109 + C6085 * C161 + C6093 * C146 + C6110 + C6110 +
             C6086 * C162) *
                C152080 * C152187 +
            (C6446 + C6447 + C6448) * C152080 * C152068) *
               C151869 * C152258 -
           ((C6449 + C6450 + C6451) * C152080 * C152068 +
            (C6448 + C6447 + C6446) * C152080 * C152187) *
               C151869 * C152244 +
           ((C6451 + C6450 + C6449) * C152080 * C152187 +
            (C6089 * C1354 + C6395 + C6395 + C6084 * C1370 + C6091 * C1353 +
             C6396 + C6396 + C6085 * C1369 + C6093 * C1715 + C6397 + C6397 +
             C6086 * C1717) *
                C152080 * C152068) *
               C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
             C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
             C6086 * C160) *
                C152080 * C152187 +
            (C6434 + C6435 + C6436) * C152080 * C152068) *
               C151869 * C1259 -
           ((C6437 + C6438 + C6439) * C152080 * C152068 +
            (C6436 + C6435 + C6434) * C152080 * C152187) *
               C151869 * C1260 +
           ((C6439 + C6438 + C6437) * C152080 * C152187 +
            (C6089 * C1356 + C6359 + C6359 + C6084 * C1372 + C6091 * C1355 +
             C6360 + C6360 + C6085 * C1371 + C6093 * C1354 + C6361 + C6361 +
             C6086 * C1370) *
                C152080 * C152068) *
               C151869 * C152214) *
              C152255 +
          (((C6440 + C6441 + C6442) * C152080 * C152187 +
            (C6443 + C6444 + C6445) * C152080 * C152068) *
               C151869 * C1260 -
           ((C6442 + C6441 + C6440) * C152080 * C152068 +
            (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
             C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
             C6084 * C159) *
                C152080 * C152187) *
               C151869 * C1259 -
           ((C6093 * C1353 + C6377 + C6377 + C6086 * C1369 + C6091 * C1354 +
             C6378 + C6378 + C6085 * C1370 + C6089 * C1355 + C6379 + C6379 +
             C6084 * C1371) *
                C152080 * C152068 +
            (C6445 + C6444 + C6443) * C152080 * C152187) *
               C151869 * C152214) *
              C152240 +
          (((C6089 * C144 + C6108 + C6108 + C6084 * C160 + C6091 * C145 +
             C6109 + C6109 + C6085 * C161 + C6093 * C146 + C6110 + C6110 +
             C6086 * C162) *
                C152080 * C152187 +
            (C6446 + C6447 + C6448) * C152080 * C152068) *
               C151869 * C1259 -
           ((C6449 + C6450 + C6451) * C152080 * C152068 +
            (C6448 + C6447 + C6446) * C152080 * C152187) *
               C151869 * C1260 +
           ((C6451 + C6450 + C6449) * C152080 * C152187 +
            (C6089 * C1354 + C6395 + C6395 + C6084 * C1370 + C6091 * C1353 +
             C6396 + C6396 + C6085 * C1369 + C6093 * C1715 + C6397 + C6397 +
             C6086 * C1717) *
                C152080 * C152068) *
               C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 + C6097 +
            C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
            C6086 * C160) *
               C152080 * C152187 +
           (C6434 + C6435 + C6436) * C152080 * C152068) *
              C151869 * C1347 -
          ((C6437 + C6438 + C6439) * C152080 * C152068 +
           (C6436 + C6435 + C6434) * C152080 * C152187) *
              C151869 * C1348 +
          ((C6439 + C6438 + C6437) * C152080 * C152187 +
           (C7841 + C7842 + C7843) * C152080 * C152068) *
              C151869 * C1349 -
          ((C7844 + C7845 + C7846) * C152080 * C152068 +
           (C7843 + C7842 + C7841) * C152080 * C152187) *
              C151869 * C1350 +
          ((C7846 + C7845 + C7844) * C152080 * C152187 +
           (C6089 * C7801 + C7826 + C7826 + C6084 * C7807 + C6091 * C7802 +
            C7827 + C7827 + C6085 * C7808 + C6093 * C7803 + C7828 + C7828 +
            C6086 * C7809) *
               C152080 * C152068) *
              C151869 * C1351) *
         C151823) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
             C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
             C6086 * C160) *
                C152080 * C152187 +
            (C6434 + C6435 + C6436) * C152080 * C152068) *
               C2215 -
           ((C7453 + C7454 + C7455) * C152080 * C152068 +
            (C6093 * C548 + C6673 + C6673 + C6086 * C572 + C6091 * C549 +
             C6674 + C6674 + C6085 * C573 + C6089 * C550 + C6675 + C6675 +
             C6084 * C574) *
                C152080 * C152187) *
               C2216 +
           ((C6089 * C551 + C6676 + C6676 + C6084 * C575 + C6091 * C552 +
             C6677 + C6677 + C6085 * C576 + C6093 * C553 + C6678 + C6678 +
             C6086 * C577) *
                C152080 * C152187 +
            (C8119 + C8120 + C8121) * C152080 * C152068) *
               C152217) *
              C151851 * C152255 +
          (((C6089 * C549 + C6682 + C6682 + C6084 * C573 + C6091 * C548 +
             C6683 + C6683 + C6085 * C572 + C6093 * C547 + C6684 + C6684 +
             C6086 * C571) *
                C152080 * C152187 +
            (C7456 + C7457 + C7458) * C152080 * C152068) *
               C2216 -
           ((C6442 + C6441 + C6440) * C152080 * C152068 +
            (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
             C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
             C6084 * C159) *
                C152080 * C152187) *
               C2215 -
           ((C6093 * C1531 + C6688 + C6688 + C6086 * C1555 + C6091 * C1532 +
             C6689 + C6689 + C6085 * C1556 + C6089 * C1533 + C6690 + C6690 +
             C6084 * C1557) *
                C152080 * C152068 +
            (C6093 * C554 + C6691 + C6691 + C6086 * C578 + C6091 * C553 +
             C6692 + C6692 + C6085 * C577 + C6089 * C552 + C6693 + C6693 +
             C6084 * C576) *
                C152080 * C152187) *
               C152217) *
              C151851 * C152240 +
          (((C6089 * C144 + C6108 + C6108 + C6084 * C160 + C6091 * C145 +
             C6109 + C6109 + C6085 * C161 + C6093 * C146 + C6110 + C6110 +
             C6086 * C162) *
                C152080 * C152187 +
            (C6446 + C6447 + C6448) * C152080 * C152068) *
               C2215 -
           ((C7459 + C7460 + C7461) * C152080 * C152068 +
            (C6093 * C555 + C6697 + C6697 + C6086 * C579 + C6091 * C547 +
             C6698 + C6698 + C6085 * C571 + C6089 * C548 + C6699 + C6699 +
             C6084 * C572) *
                C152080 * C152187) *
               C2216 +
           ((C6089 * C553 + C6700 + C6700 + C6084 * C577 + C6091 * C554 +
             C6701 + C6701 + C6085 * C578 + C6093 * C556 + C6702 + C6702 +
             C6086 * C580) *
                C152080 * C152187 +
            (C6089 * C1532 + C6703 + C6703 + C6084 * C1556 + C6091 * C1531 +
             C6704 + C6704 + C6085 * C1555 + C6093 * C2677 + C6705 + C6705 +
             C6086 * C2679) *
                C152080 * C152068) *
               C152217) *
              C151851 * C152208)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
             C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
             C6086 * C160) *
                C152080 * C152187 +
            (C6434 + C6435 + C6436) * C152080 * C152068) *
               C2215 -
           ((C7453 + C7454 + C7455) * C152080 * C152068 +
            (C6093 * C548 + C6673 + C6673 + C6086 * C572 + C6091 * C549 +
             C6674 + C6674 + C6085 * C573 + C6089 * C550 + C6675 + C6675 +
             C6084 * C574) *
                C152080 * C152187) *
               C2216 +
           ((C6089 * C551 + C6676 + C6676 + C6084 * C575 + C6091 * C552 +
             C6677 + C6677 + C6085 * C576 + C6093 * C553 + C6678 + C6678 +
             C6086 * C577) *
                C152080 * C152187 +
            (C8119 + C8120 + C8121) * C152080 * C152068) *
               C152217) *
              C152258 +
          (((C7455 + C7454 + C7453) * C152080 * C152187 +
            (C8122 + C8123 + C8124) * C152080 * C152068) *
               C2216 -
           ((C6437 + C6438 + C6439) * C152080 * C152068 +
            (C6436 + C6435 + C6434) * C152080 * C152187) *
               C2215 -
           ((C8125 + C8126 + C8127) * C152080 * C152068 +
            (C8121 + C8120 + C8119) * C152080 * C152187) *
               C152217) *
              C152244 +
          (((C6439 + C6438 + C6437) * C152080 * C152187 +
            (C7841 + C7842 + C7843) * C152080 * C152068) *
               C2215 -
           ((C8866 + C8867 + C8868) * C152080 * C152068 +
            (C8124 + C8123 + C8122) * C152080 * C152187) *
               C2216 +
           ((C8127 + C8126 + C8125) * C152080 * C152187 +
            (C6089 * C8064 + C8098 + C8098 + C6084 * C8070 + C6091 * C8065 +
             C8099 + C8099 + C6085 * C8071 + C6093 * C8066 + C8100 + C8100 +
             C6086 * C8072) *
                C152080 * C152068) *
               C152217) *
              C152214) *
         C151823) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152080 *
               C31624 +
           (C31628 * C341 + C31632 + C31632 + C151791 * C365) * C152080 *
               C31625 +
           (C31628 * C342 + C31633 + C31633 + C151791 * C366) * C152080 *
               C31626 +
           (C31628 * C1356 + C31634 + C31634 + C151791 * C1372) * C152080 *
               C31627) *
              C151869 * C151851 * C129 -
          ((C31628 * C1355 + C31635 + C31635 + C151791 * C1371) * C152080 *
               C31627 +
           (C31628 * C343 + C31636 + C31636 + C151791 * C367) * C152080 *
               C31626 +
           (C31628 * C340 + C31637 + C31637 + C151791 * C364) * C152080 *
               C31625 +
           (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152080 *
               C31624) *
              C151869 * C151851 * C130 +
          ((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C152080 *
               C31624 +
           (C31628 * C339 + C31640 + C31640 + C151791 * C363) * C152080 *
               C31625 +
           (C31628 * C344 + C31641 + C31641 + C151791 * C368) * C152080 *
               C31626 +
           (C31628 * C1354 + C31642 + C31642 + C151791 * C1370) * C152080 *
               C31627) *
              C151869 * C151851 * C131 -
          ((C31628 * C1353 + C31643 + C31643 + C151791 * C1369) * C152080 *
               C31627 +
           (C31628 * C345 + C31644 + C31644 + C151791 * C369) * C152080 *
               C31626 +
           (C31628 * C338 + C31645 + C31645 + C151791 * C362) * C152080 *
               C31625 +
           (C31628 * C145 + C31646 + C31646 + C151791 * C161) * C152080 *
               C31624) *
              C151869 * C151851 * C132 +
          ((C31628 * C146 + C31647 + C31647 + C151791 * C162) * C152080 *
               C31624 +
           (C31628 * C346 + C31648 + C31648 + C151791 * C370) * C152080 *
               C31625 +
           (C31628 * C347 + C31649 + C31649 + C151791 * C371) * C152080 *
               C31626 +
           (C31628 * C1715 + C31650 + C31650 + C151791 * C1717) * C152080 *
               C31627) *
              C151869 * C151851 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152080 *
                C31624 +
            C31863 * C31625 + C31864 * C31626 + C31865 * C31627) *
               C151869 * C152258 -
           (C31866 * C31627 + C31865 * C31626 + C31864 * C31625 +
            C31863 * C31624) *
               C151869 * C152244 +
           (C31864 * C31624 + C31865 * C31625 + C31866 * C31626 +
            (C31628 * C7801 + C31806 + C31806 + C151791 * C7807) * C152080 *
                C31627) *
               C151869 * C152214) *
              C335 +
          ((C31867 * C31624 + C31868 * C31625 + C31869 * C31626 +
            C31870 * C31627) *
               C151869 * C152244 -
           (C31869 * C31627 + C31868 * C31626 + C31867 * C31625 +
            (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152080 *
                C31624) *
               C151869 * C152258 -
           ((C31628 * C7802 + C31816 + C31816 + C151791 * C7808) * C152080 *
                C31627 +
            C31870 * C31626 + C31869 * C31625 + C31868 * C31624) *
               C151869 * C152214) *
              C336 +
          (((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C152080 *
                C31624 +
            C31871 * C31625 + C31872 * C31626 + C31873 * C31627) *
               C151869 * C152258 -
           (C31874 * C31627 + C31873 * C31626 + C31872 * C31625 +
            C31871 * C31624) *
               C151869 * C152244 +
           (C31872 * C31624 + C31873 * C31625 + C31874 * C31626 +
            (C31628 * C7803 + C31826 + C31826 + C151791 * C7809) * C152080 *
                C31627) *
               C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152080 *
                C31624 +
            C31863 * C31625 + C31864 * C31626 + C31865 * C31627) *
               C151869 * C1259 -
           (C31866 * C31627 + C31865 * C31626 + C31864 * C31625 +
            C31863 * C31624) *
               C151869 * C1260 +
           (C31864 * C31624 + C31865 * C31625 + C31866 * C31626 +
            (C31628 * C7801 + C31806 + C31806 + C151791 * C7807) * C152080 *
                C31627) *
               C151869 * C152214) *
              C152255 +
          ((C31867 * C31624 + C31868 * C31625 + C31869 * C31626 +
            C31870 * C31627) *
               C151869 * C1260 -
           (C31869 * C31627 + C31868 * C31626 + C31867 * C31625 +
            (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152080 *
                C31624) *
               C151869 * C1259 -
           ((C31628 * C7802 + C31816 + C31816 + C151791 * C7808) * C152080 *
                C31627 +
            C31870 * C31626 + C31869 * C31625 + C31868 * C31624) *
               C151869 * C152214) *
              C152240 +
          (((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C152080 *
                C31624 +
            C31871 * C31625 + C31872 * C31626 + C31873 * C31627) *
               C151869 * C1259 -
           (C31874 * C31627 + C31873 * C31626 + C31872 * C31625 +
            C31871 * C31624) *
               C151869 * C1260 +
           (C31872 * C31624 + C31873 * C31625 + C31874 * C31626 +
            (C31628 * C7803 + C31826 + C31826 + C151791 * C7809) * C152080 *
                C31627) *
               C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152080 *
               C31624 +
           C31863 * C31625 + C31864 * C31626 + C31865 * C31627) *
              C151869 * C1347 -
          (C31866 * C31627 + C31865 * C31626 + C31864 * C31625 +
           C31863 * C31624) *
              C151869 * C1348 +
          (C31864 * C31624 + C31865 * C31625 + C31866 * C31626 +
           C32822 * C31627) *
              C151869 * C1349 -
          (C32823 * C31627 + C32822 * C31626 + C31866 * C31625 +
           C31865 * C31624) *
              C151869 * C1350 +
          (C31866 * C31624 + C32822 * C31625 + C32823 * C31626 +
           (C31628 * C32806 + C32815 + C32815 + C151791 * C32808) * C152080 *
               C31627) *
              C151869 * C1351) *
         C151823) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152080 *
                C31624 +
            C31863 * C31625 + C31864 * C31626 + C31865 * C31627) *
               C2215 -
           (C32570 * C31627 + C32571 * C31626 + C32572 * C31625 +
            (C31628 * C550 + C32024 + C32024 + C151791 * C574) * C152080 *
                C31624) *
               C2216 +
           ((C31628 * C551 + C32025 + C32025 + C151791 * C575) * C152080 *
                C31624 +
            C33001 * C31625 + C33002 * C31626 + C33003 * C31627) *
               C152217) *
              C151851 * C152255 +
          (((C31628 * C549 + C32029 + C32029 + C151791 * C573) * C152080 *
                C31624 +
            C32573 * C31625 + C32574 * C31626 + C32575 * C31627) *
               C2216 -
           (C31869 * C31627 + C31868 * C31626 + C31867 * C31625 +
            (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152080 *
                C31624) *
               C2215 -
           ((C31628 * C8065 + C32033 + C32033 + C151791 * C8071) * C152080 *
                C31627 +
            (C31628 * C1540 + C32034 + C32034 + C151791 * C1564) * C152080 *
                C31626 +
            (C31628 * C1533 + C32035 + C32035 + C151791 * C1557) * C152080 *
                C31625 +
            (C31628 * C552 + C32036 + C32036 + C151791 * C576) * C152080 *
                C31624) *
               C152217) *
              C151851 * C152240 +
          (((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C152080 *
                C31624 +
            C31871 * C31625 + C31872 * C31626 + C31873 * C31627) *
               C2215 -
           (C32576 * C31627 + C32577 * C31626 + C32578 * C31625 +
            (C31628 * C548 + C32040 + C32040 + C151791 * C572) * C152080 *
                C31624) *
               C2216 +
           ((C31628 * C553 + C32041 + C32041 + C151791 * C577) * C152080 *
                C31624 +
            (C31628 * C1532 + C32042 + C32042 + C151791 * C1556) * C152080 *
                C31625 +
            (C31628 * C1541 + C32043 + C32043 + C151791 * C1565) * C152080 *
                C31626 +
            (C31628 * C8066 + C32044 + C32044 + C151791 * C8072) * C152080 *
                C31627) *
               C152217) *
              C151851 * C152208)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152080 *
                C31624 +
            C31863 * C31625 + C31864 * C31626 + C31865 * C31627) *
               C2215 -
           (C32570 * C31627 + C32571 * C31626 + C32572 * C31625 +
            (C31628 * C550 + C32024 + C32024 + C151791 * C574) * C152080 *
                C31624) *
               C2216 +
           ((C31628 * C551 + C32025 + C32025 + C151791 * C575) * C152080 *
                C31624 +
            C33001 * C31625 + C33002 * C31626 + C33003 * C31627) *
               C152217) *
              C152258 +
          ((C32572 * C31624 + C32571 * C31625 + C32570 * C31626 +
            C33004 * C31627) *
               C2216 -
           (C31866 * C31627 + C31865 * C31626 + C31864 * C31625 +
            C31863 * C31624) *
               C2215 -
           (C33005 * C31627 + C33003 * C31626 + C33002 * C31625 +
            C33001 * C31624) *
               C152217) *
              C152244 +
          ((C31864 * C31624 + C31865 * C31625 + C31866 * C31626 +
            C32822 * C31627) *
               C2215 -
           (C33483 * C31627 + C33004 * C31626 + C32570 * C31625 +
            C32571 * C31624) *
               C2216 +
           (C33002 * C31624 + C33003 * C31625 + C33005 * C31626 +
            (C31628 * C32969 + C32985 + C32985 + C151791 * C32971) * C152080 *
                C31627) *
               C152217) *
              C152214) *
         C151823) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C45770 +
            C37949 * C45771 + C37950 * C45772) *
               C152187 +
           (C31851 * C45770 + C32563 * C45771 + C32996 * C45772) * C152068) *
              C151869 * C151851 * C129 -
          ((C34078 * C45772 + C32564 * C45771 + C31855 * C45770) * C152068 +
           (C37952 * C45772 + C37951 * C45771 +
            (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C45770) *
               C152187) *
              C151869 * C151851 * C130 +
          (((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C45770 +
            C37953 * C45771 + C37956 * C45772) *
               C152187 +
           (C31859 * C45770 + C32569 * C45771 + C37955 * C45772) * C152068) *
              C151869 * C151851 * C131 -
          (((C31628 * C1531 + C38362 + C38362 + C151791 * C1555) * C45772 +
            C38161 * C45771 + C32188 * C45770) *
               C152068 +
           ((C31628 * C554 + C38361 + C38361 + C151791 * C578) * C45772 +
            C38366 * C45771 +
            (C31628 * C145 + C31646 + C31646 + C151791 * C161) * C45770) *
               C152187) *
              C151869 * C151851 * C132 +
          (((C31628 * C146 + C31647 + C31647 + C151791 * C162) * C45770 +
            (C31628 * C555 + C37454 + C37454 + C151791 * C579) * C45771 +
            (C31628 * C556 + C54126 + C54126 + C151791 * C580) * C45772) *
               C152187 +
           ((C31628 * C346 + C31648 + C31648 + C151791 * C370) * C45770 +
            (C31628 * C1087 + C37455 + C37455 + C151791 * C1099) * C45771 +
            (C31628 * C2677 + C54127 + C54127 + C151791 * C2679) * C45772) *
               C152068) *
              C151869 * C151851 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C45770 +
             C37949 * C45771 + C37950 * C45772) *
                C152187 +
            (C54346 + C54347 + C54348) * C152068) *
               C151869 * C152258 -
           ((C54349 + C54350 + C54351) * C152068 +
            (C54348 + C54347 + C54346) * C152187) *
               C151869 * C152244 +
           ((C54351 + C54350 + C54349) * C152187 +
            (C31853 * C45770 + C32561 * C45771 + C32998 * C45772) * C152068) *
               C151869 * C152214) *
              C335 +
          (((C54352 + C54353 + C54354) * C152187 +
            (C54355 + C54356 + C54357) * C152068) *
               C151869 * C152244 -
           ((C54354 + C54353 + C54352) * C152068 +
            (C37952 * C45772 + C37951 * C45771 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C45770) *
                C152187) *
               C151869 * C152258 -
           ((C34076 * C45772 + C32566 * C45771 + C31857 * C45770) * C152068 +
            (C54357 + C54356 + C54355) * C152187) *
               C151869 * C152214) *
              C336 +
          ((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C45770 +
             C37953 * C45771 + C37956 * C45772) *
                C152187 +
            (C54358 + C54359 + C54360) * C152068) *
               C151869 * C152258 -
           ((C54361 + C54362 + C54363) * C152068 +
            (C54360 + C54359 + C54358) * C152187) *
               C151869 * C152244 +
           ((C54363 + C54362 + C54361) * C152187 +
            (C31861 * C45770 + C32567 * C45771 +
             (C31628 * C8066 + C32044 + C32044 + C151791 * C8072) * C45772) *
                C152068) *
               C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C45770 +
             C37949 * C45771 + C37950 * C45772) *
                C152187 +
            (C54346 + C54347 + C54348) * C152068) *
               C151869 * C1259 -
           ((C54349 + C54350 + C54351) * C152068 +
            (C54348 + C54347 + C54346) * C152187) *
               C151869 * C1260 +
           ((C54351 + C54350 + C54349) * C152187 +
            (C31853 * C45770 + C32561 * C45771 + C32998 * C45772) * C152068) *
               C151869 * C152214) *
              C152255 +
          (((C54352 + C54353 + C54354) * C152187 +
            (C54355 + C54356 + C54357) * C152068) *
               C151869 * C1260 -
           ((C54354 + C54353 + C54352) * C152068 +
            (C37952 * C45772 + C37951 * C45771 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C45770) *
                C152187) *
               C151869 * C1259 -
           ((C34076 * C45772 + C32566 * C45771 + C31857 * C45770) * C152068 +
            (C54357 + C54356 + C54355) * C152187) *
               C151869 * C152214) *
              C152240 +
          ((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C45770 +
             C37953 * C45771 + C37956 * C45772) *
                C152187 +
            (C54358 + C54359 + C54360) * C152068) *
               C151869 * C1259 -
           ((C54361 + C54362 + C54363) * C152068 +
            (C54360 + C54359 + C54358) * C152187) *
               C151869 * C1260 +
           ((C54363 + C54362 + C54361) * C152187 +
            (C31861 * C45770 + C32567 * C45771 +
             (C31628 * C8066 + C32044 + C32044 + C151791 * C8072) * C45772) *
                C152068) *
               C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C45770 +
            C37949 * C45771 + C37950 * C45772) *
               C152187 +
           (C54346 + C54347 + C54348) * C152068) *
              C151869 * C1347 -
          ((C54349 + C54350 + C54351) * C152068 +
           (C54348 + C54347 + C54346) * C152187) *
              C151869 * C1348 +
          ((C54351 + C54350 + C54349) * C152187 +
           (C55636 + C55637 + C55638) * C152068) *
              C151869 * C1349 -
          ((C55639 + C55640 + C55641) * C152068 +
           (C55638 + C55637 + C55636) * C152187) *
              C151869 * C1350 +
          ((C55641 + C55640 + C55639) * C152187 +
           (C32820 * C45770 + C33482 * C45771 +
            (C31628 * C32969 + C32985 + C32985 + C151791 * C32971) * C45772) *
               C152068) *
              C151869 * C1351) *
         C151823) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C45770 +
             C37949 * C45771 + C37950 * C45772) *
                C152187 +
            (C54346 + C54347 + C54348) * C152068) *
               C2215 -
           ((C55287 + C55288 + C55289) * C152068 +
            (C40513 * C45772 + C37950 * C45771 + C37949 * C45770) * C152187) *
               C2216 +
           ((C37950 * C45770 + C40513 * C45771 + C40516 * C45772) * C152187 +
            (C55860 + C55861 + C55862) * C152068) *
               C152217) *
              C151851 * C152255 +
          (((C37951 * C45770 + C37952 * C45771 + C41022 * C45772) * C152187 +
            (C55290 + C55291 + C55292) * C152068) *
               C2216 -
           ((C54354 + C54353 + C54352) * C152068 +
            (C37952 * C45772 + C37951 * C45771 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C45770) *
                C152187) *
               C2215 -
           (((C31628 * C9427 + C41018 + C41018 + C151791 * C9433) * C45772 +
             C40818 * C45771 + C34078 * C45770) *
                C152068 +
            ((C31628 * C2456 + C41017 + C41017 + C151791 * C2472) * C45772 +
             C41022 * C45771 + C37952 * C45770) *
                C152187) *
               C152217) *
              C151851 * C152240 +
          ((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C45770 +
             C37953 * C45771 + C37956 * C45772) *
                C152187 +
            (C54358 + C54359 + C54360) * C152068) *
               C2215 -
           ((C55293 + C55294 + C55295) * C152068 +
            (C54593 * C45772 + C37956 * C45771 + C37953 * C45770) * C152187) *
               C2216 +
           ((C37956 * C45770 + C54593 * C45771 +
             (C31628 * C2457 + C54586 + C54586 + C151791 * C2473) * C45772) *
                C152187 +
            (C37955 * C45770 + C54592 * C45771 +
             (C31628 * C9428 + C54587 + C54587 + C151791 * C9434) * C45772) *
                C152068) *
               C152217) *
              C151851 * C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C45770 +
             C37949 * C45771 + C37950 * C45772) *
                C152187 +
            (C54346 + C54347 + C54348) * C152068) *
               C2215 -
           ((C55287 + C55288 + C55289) * C152068 +
            (C40513 * C45772 + C37950 * C45771 + C37949 * C45770) * C152187) *
               C2216 +
           ((C37950 * C45770 + C40513 * C45771 + C40516 * C45772) * C152187 +
            (C55860 + C55861 + C55862) * C152068) *
               C152217) *
              C152258 +
          (((C55289 + C55288 + C55287) * C152187 +
            (C55863 + C55864 + C55865) * C152068) *
               C2216 -
           ((C54349 + C54350 + C54351) * C152068 +
            (C54348 + C54347 + C54346) * C152187) *
               C2215 -
           ((C55866 + C55867 + C55868) * C152068 +
            (C55862 + C55861 + C55860) * C152187) *
               C152217) *
              C152244 +
          (((C54351 + C54350 + C54349) * C152187 +
            (C55636 + C55637 + C55638) * C152068) *
               C2215 -
           ((C56553 + C56554 + C56555) * C152068 +
            (C55865 + C55864 + C55863) * C152187) *
               C2216 +
           ((C55868 + C55867 + C55866) * C152187 +
            (C32998 * C45770 + C34362 * C45771 +
             (C31628 * C33857 + C33868 + C33868 + C151791 * C33859) * C45772) *
                C152068) *
               C152217) *
              C152214) *
         C151823) /
            (p * q * std::sqrt(p + q));
    d2ee[190] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152080 *
                 C31624 +
             C31863 * C31625 + C31864 * C31626 + C31865 * C31627) *
                C4107 -
            (C32570 * C31627 + C32571 * C31626 + C32572 * C31625 +
             (C31628 * C550 + C32024 + C32024 + C151791 * C574) * C152080 *
                 C31624) *
                C151956) *
               C152172 +
           ((C32572 * C31624 + C32571 * C31625 + C32570 * C31626 +
             C33004 * C31627) *
                C151956 -
            (C31866 * C31627 + C31865 * C31626 + C31864 * C31625 +
             C31863 * C31624) *
                C4107) *
               C151914) *
              C151828 +
          ((((C31628 * C549 + C32029 + C32029 + C151791 * C573) * C152080 *
                 C31624 +
             C32573 * C31625 + C32574 * C31626 + C32575 * C31627) *
                C151956 -
            (C31869 * C31627 + C31868 * C31626 + C31867 * C31625 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152080 *
                 C31624) *
                C4107) *
               C152172 +
           ((C31867 * C31624 + C31868 * C31625 + C31869 * C31626 +
             C31870 * C31627) *
                C4107 -
            (C33343 * C31627 + C32575 * C31626 + C32574 * C31625 +
             C32573 * C31624) *
                C151956) *
               C151914) *
              C151837 +
          ((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C152080 *
                 C31624 +
             C31871 * C31625 + C31872 * C31626 + C31873 * C31627) *
                C4107 -
            (C32576 * C31627 + C32577 * C31626 + C32578 * C31625 +
             (C31628 * C548 + C32040 + C32040 + C151791 * C572) * C152080 *
                 C31624) *
                C151956) *
               C152172 +
           ((C32578 * C31624 + C32577 * C31625 + C32576 * C31626 +
             (C31628 * C8843 + C32542 + C32542 + C151791 * C8849) * C152080 *
                 C31627) *
                C151956 -
            (C31874 * C31627 + C31873 * C31626 + C31872 * C31625 +
             C31871 * C31624) *
                C4107) *
               C151914) *
              C3588)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
              C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
              C6086 * C160) *
                 C152080 * C152187 +
             (C6434 + C6435 + C6436) * C152080 * C152068) *
                C4107 -
            ((C7453 + C7454 + C7455) * C152080 * C152068 +
             (C6093 * C548 + C6673 + C6673 + C6086 * C572 + C6091 * C549 +
              C6674 + C6674 + C6085 * C573 + C6089 * C550 + C6675 + C6675 +
              C6084 * C574) *
                 C152080 * C152187) *
                C151956) *
               C152172 +
           (((C7455 + C7454 + C7453) * C152080 * C152187 +
             (C8122 + C8123 + C8124) * C152080 * C152068) *
                C151956 -
            ((C6437 + C6438 + C6439) * C152080 * C152068 +
             (C6436 + C6435 + C6434) * C152080 * C152187) *
                C4107) *
               C151914) *
              C151828 +
          ((((C6089 * C549 + C6682 + C6682 + C6084 * C573 + C6091 * C548 +
              C6683 + C6683 + C6085 * C572 + C6093 * C547 + C6684 + C6684 +
              C6086 * C571) *
                 C152080 * C152187 +
             (C7456 + C7457 + C7458) * C152080 * C152068) *
                C151956 -
            ((C6442 + C6441 + C6440) * C152080 * C152068 +
             (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
              C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
              C6084 * C159) *
                 C152080 * C152187) *
                C4107) *
               C152172 +
           (((C6440 + C6441 + C6442) * C152080 * C152187 +
             (C6443 + C6444 + C6445) * C152080 * C152068) *
                C4107 -
            ((C8645 + C8646 + C8647) * C152080 * C152068 +
             (C7458 + C7457 + C7456) * C152080 * C152187) *
                C151956) *
               C151914) *
              C151837 +
          ((((C6089 * C144 + C6108 + C6108 + C6084 * C160 + C6091 * C145 +
              C6109 + C6109 + C6085 * C161 + C6093 * C146 + C6110 + C6110 +
              C6086 * C162) *
                 C152080 * C152187 +
             (C6446 + C6447 + C6448) * C152080 * C152068) *
                C4107 -
            ((C7459 + C7460 + C7461) * C152080 * C152068 +
             (C6093 * C555 + C6697 + C6697 + C6086 * C579 + C6091 * C547 +
              C6698 + C6698 + C6085 * C571 + C6089 * C548 + C6699 + C6699 +
              C6084 * C572) *
                 C152080 * C152187) *
                C151956) *
               C152172 +
           (((C7461 + C7460 + C7459) * C152080 * C152187 +
             (C6089 * C1536 + C7432 + C7432 + C6084 * C1560 + C6091 * C1535 +
              C7433 + C7433 + C6085 * C1559 + C6093 * C1916 + C7434 + C7434 +
              C6086 * C1918) *
                 C152080 * C152068) *
                C151956 -
            ((C6449 + C6450 + C6451) * C152080 * C152068 +
             (C6448 + C6447 + C6446) * C152080 * C152187) *
                C4107) *
               C151914) *
              C3588)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C45770 +
              C37949 * C45771 + C37950 * C45772) *
                 C152187 +
             (C54346 + C54347 + C54348) * C152068) *
                C4107 -
            ((C55287 + C55288 + C55289) * C152068 +
             (C40513 * C45772 + C37950 * C45771 + C37949 * C45770) * C152187) *
                C151956) *
               C152172 +
           (((C55289 + C55288 + C55287) * C152187 +
             (C55863 + C55864 + C55865) * C152068) *
                C151956 -
            ((C54349 + C54350 + C54351) * C152068 +
             (C54348 + C54347 + C54346) * C152187) *
                C4107) *
               C151914) *
              C151828 +
          ((((C37951 * C45770 + C37952 * C45771 + C41022 * C45772) * C152187 +
             (C55290 + C55291 + C55292) * C152068) *
                C151956 -
            ((C54354 + C54353 + C54352) * C152068 +
             (C37952 * C45772 + C37951 * C45771 +
              (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C45770) *
                 C152187) *
                C4107) *
               C152172 +
           (((C54352 + C54353 + C54354) * C152187 +
             (C54355 + C54356 + C54357) * C152068) *
                C4107 -
            ((C56356 + C56357 + C56358) * C152068 +
             (C55292 + C55291 + C55290) * C152187) *
                C151956) *
               C151914) *
              C151837 +
          (((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C45770 +
              C37953 * C45771 + C37956 * C45772) *
                 C152187 +
             (C54358 + C54359 + C54360) * C152068) *
                C4107 -
            ((C55293 + C55294 + C55295) * C152068 +
             (C54593 * C45772 + C37956 * C45771 + C37953 * C45770) * C152187) *
                C151956) *
               C152172 +
           (((C55295 + C55294 + C55293) * C152187 +
             (C32568 * C45770 + C37954 * C45771 +
              (C31628 * C10151 + C37932 + C37932 + C151791 * C10157) * C45772) *
                 C152068) *
                C151956 -
            ((C54361 + C54362 + C54363) * C152068 +
             (C54360 + C54359 + C54358) * C152187) *
                C4107) *
               C151914) *
              C3588)) /
            (p * q * std::sqrt(p + q));
    d2ee[191] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152080 *
                 C31624 +
             C31863 * C31625 + C31864 * C31626 + C31865 * C31627) *
                C151952 -
            (C32570 * C31627 + C32571 * C31626 + C32572 * C31625 +
             (C31628 * C550 + C32024 + C32024 + C151791 * C574) * C152080 *
                 C31624) *
                C151959 +
            ((C31628 * C551 + C32025 + C32025 + C151791 * C575) * C152080 *
                 C31624 +
             C33001 * C31625 + C33002 * C31626 + C33003 * C31627) *
                C4779) *
               C152172 +
           ((C32572 * C31624 + C32571 * C31625 + C32570 * C31626 +
             C33004 * C31627) *
                C151959 -
            (C31866 * C31627 + C31865 * C31626 + C31864 * C31625 +
             C31863 * C31624) *
                C151952 -
            (C33005 * C31627 + C33003 * C31626 + C33002 * C31625 +
             C33001 * C31624) *
                C4779) *
               C151914) *
              C3241 +
          ((((C31628 * C549 + C32029 + C32029 + C151791 * C573) * C152080 *
                 C31624 +
             C32573 * C31625 + C32574 * C31626 + C32575 * C31627) *
                C151959 -
            (C31869 * C31627 + C31868 * C31626 + C31867 * C31625 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152080 *
                 C31624) *
                C151952 -
            (C34079 * C31627 + C34080 * C31626 + C34081 * C31625 +
             (C31628 * C552 + C32036 + C32036 + C151791 * C576) * C152080 *
                 C31624) *
                C4779) *
               C152172 +
           ((C31867 * C31624 + C31868 * C31625 + C31869 * C31626 +
             C31870 * C31627) *
                C151952 -
            (C33343 * C31627 + C32575 * C31626 + C32574 * C31625 +
             C32573 * C31624) *
                C151959 +
            (C34081 * C31624 + C34080 * C31625 + C34079 * C31626 +
             (C31628 * C25022 + C34069 + C34069 + C151791 * C25026) * C152080 *
                 C31627) *
                C4779) *
               C151914) *
              C151834)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
              C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
              C6086 * C160) *
                 C152080 * C152187 +
             (C6434 + C6435 + C6436) * C152080 * C152068) *
                C151952 -
            ((C7453 + C7454 + C7455) * C152080 * C152068 +
             (C6093 * C548 + C6673 + C6673 + C6086 * C572 + C6091 * C549 +
              C6674 + C6674 + C6085 * C573 + C6089 * C550 + C6675 + C6675 +
              C6084 * C574) *
                 C152080 * C152187) *
                C151959 +
            ((C6089 * C551 + C6676 + C6676 + C6084 * C575 + C6091 * C552 +
              C6677 + C6677 + C6085 * C576 + C6093 * C553 + C6678 + C6678 +
              C6086 * C577) *
                 C152080 * C152187 +
             (C8119 + C8120 + C8121) * C152080 * C152068) *
                C4779) *
               C152172 +
           (((C7455 + C7454 + C7453) * C152080 * C152187 +
             (C8122 + C8123 + C8124) * C152080 * C152068) *
                C151959 -
            ((C6437 + C6438 + C6439) * C152080 * C152068 +
             (C6436 + C6435 + C6434) * C152080 * C152187) *
                C151952 -
            ((C8125 + C8126 + C8127) * C152080 * C152068 +
             (C8121 + C8120 + C8119) * C152080 * C152187) *
                C4779) *
               C151914) *
              C3241 +
          ((((C6089 * C549 + C6682 + C6682 + C6084 * C573 + C6091 * C548 +
              C6683 + C6683 + C6085 * C572 + C6093 * C547 + C6684 + C6684 +
              C6086 * C571) *
                 C152080 * C152187 +
             (C7456 + C7457 + C7458) * C152080 * C152068) *
                C151959 -
            ((C6442 + C6441 + C6440) * C152080 * C152068 +
             (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
              C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
              C6084 * C159) *
                 C152080 * C152187) *
                C151952 -
            ((C9753 + C9754 + C9755) * C152080 * C152068 +
             (C6093 * C554 + C6691 + C6691 + C6086 * C578 + C6091 * C553 +
              C6692 + C6692 + C6085 * C577 + C6089 * C552 + C6693 + C6693 +
              C6084 * C576) *
                 C152080 * C152187) *
                C4779) *
               C152172 +
           (((C6440 + C6441 + C6442) * C152080 * C152187 +
             (C6443 + C6444 + C6445) * C152080 * C152068) *
                C151952 -
            ((C8645 + C8646 + C8647) * C152080 * C152068 +
             (C7458 + C7457 + C7456) * C152080 * C152187) *
                C151959 +
            ((C9755 + C9754 + C9753) * C152080 * C152187 +
             (C6089 * C1540 + C9744 + C9744 + C6084 * C1564 + C6091 * C1541 +
              C9745 + C9745 + C6085 * C1565 + C6093 * C1542 + C9746 + C9746 +
              C6086 * C1566) *
                 C152080 * C152068) *
                C4779) *
               C151914) *
              C151834)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C45770 +
              C37949 * C45771 + C37950 * C45772) *
                 C152187 +
             (C54346 + C54347 + C54348) * C152068) *
                C151952 -
            ((C55287 + C55288 + C55289) * C152068 +
             (C40513 * C45772 + C37950 * C45771 + C37949 * C45770) * C152187) *
                C151959 +
            ((C37950 * C45770 + C40513 * C45771 + C40516 * C45772) * C152187 +
             (C55860 + C55861 + C55862) * C152068) *
                C4779) *
               C152172 +
           (((C55289 + C55288 + C55287) * C152187 +
             (C55863 + C55864 + C55865) * C152068) *
                C151959 -
            ((C54349 + C54350 + C54351) * C152068 +
             (C54348 + C54347 + C54346) * C152187) *
                C151952 -
            ((C55866 + C55867 + C55868) * C152068 +
             (C55862 + C55861 + C55860) * C152187) *
                C4779) *
               C151914) *
              C3241 +
          ((((C37951 * C45770 + C37952 * C45771 + C41022 * C45772) * C152187 +
             (C55290 + C55291 + C55292) * C152068) *
                C151959 -
            ((C54354 + C54353 + C54352) * C152068 +
             (C37952 * C45772 + C37951 * C45771 +
              (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C45770) *
                 C152187) *
                C151952 -
            ((C57426 + C57421 + C57422) * C152068 +
             (C57627 * C45772 + C41022 * C45771 + C37952 * C45770) * C152187) *
                C4779) *
               C152172 +
           (((C54352 + C54353 + C54354) * C152187 +
             (C54355 + C54356 + C54357) * C152068) *
                C151952 -
            ((C56356 + C56357 + C56358) * C152068 +
             (C55292 + C55291 + C55290) * C152187) *
                C151959 +
            ((C57422 + C57421 + C57426) * C152187 +
             (C34077 * C45770 + C40817 * C45771 +
              (C31628 * C26362 + C41019 + C41019 + C151791 * C26366) * C45772) *
                 C152068) *
                C4779) *
               C151914) *
              C151834)) /
            (p * q * std::sqrt(p + q));
    d2ee[192] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
                 C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
                 C6086 * C160) *
                    C152080 * C152187 +
                (C6434 + C6435 + C6436) * C152080 * C152068) *
                   C4107 -
               ((C7453 + C7454 + C7455) * C152080 * C152068 +
                (C6093 * C548 + C6673 + C6673 + C6086 * C572 + C6091 * C549 +
                 C6674 + C6674 + C6085 * C573 + C6089 * C550 + C6675 + C6675 +
                 C6084 * C574) *
                    C152080 * C152187) *
                   C151956) *
                  C151851 * C152264 +
              (((C6089 * C549 + C6682 + C6682 + C6084 * C573 + C6091 * C548 +
                 C6683 + C6683 + C6085 * C572 + C6093 * C547 + C6684 + C6684 +
                 C6086 * C571) *
                    C152080 * C152187 +
                (C7456 + C7457 + C7458) * C152080 * C152068) *
                   C151956 -
               ((C6442 + C6441 + C6440) * C152080 * C152068 +
                (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
                 C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
                 C6084 * C159) *
                    C152080 * C152187) *
                   C4107) *
                  C151851 * C152257 +
              (((C6089 * C144 + C6108 + C6108 + C6084 * C160 + C6091 * C145 +
                 C6109 + C6109 + C6085 * C161 + C6093 * C146 + C6110 + C6110 +
                 C6086 * C162) *
                    C152080 * C152187 +
                (C6446 + C6447 + C6448) * C152080 * C152068) *
                   C4107 -
               ((C7459 + C7460 + C7461) * C152080 * C152068 +
                (C6093 * C555 + C6697 + C6697 + C6086 * C579 + C6091 * C547 +
                 C6698 + C6698 + C6085 * C571 + C6089 * C548 + C6699 + C6699 +
                 C6084 * C572) *
                    C152080 * C152187) *
                   C151956) *
                  C151851 * C152242 +
              (((C6089 * C547 + C7112 + C7112 + C6084 * C571 + C6091 * C555 +
                 C7113 + C7113 + C6085 * C579 + C6093 * C557 + C7114 + C7114 +
                 C6086 * C581) *
                    C152080 * C152187 +
                (C6089 * C1086 + C7115 + C7115 + C6084 * C1098 + C6091 * C1087 +
                 C7116 + C7116 + C6085 * C1099 + C6093 * C1088 + C7117 + C7117 +
                 C6086 * C1100) *
                    C152080 * C152068) *
                   C151956 -
               ((C6917 + C6916 + C6915) * C152080 * C152068 +
                (C6093 * C147 + C6117 + C6117 + C6086 * C163 + C6091 * C146 +
                 C6118 + C6118 + C6085 * C162 + C6089 * C145 + C6119 + C6119 +
                 C6084 * C161) *
                    C152080 * C152187) *
                   C4107) *
                  C151851 * C152218) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
                  C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
                  C6086 * C160) *
                     C152080 * C152187 +
                 (C6434 + C6435 + C6436) * C152080 * C152068) *
                    C4107 -
                ((C7453 + C7454 + C7455) * C152080 * C152068 +
                 (C6093 * C548 + C6673 + C6673 + C6086 * C572 + C6091 * C549 +
                  C6674 + C6674 + C6085 * C573 + C6089 * C550 + C6675 + C6675 +
                  C6084 * C574) *
                     C152080 * C152187) *
                    C151956) *
                   C152258 +
               (((C7455 + C7454 + C7453) * C152080 * C152187 +
                 (C8122 + C8123 + C8124) * C152080 * C152068) *
                    C151956 -
                ((C6437 + C6438 + C6439) * C152080 * C152068 +
                 (C6436 + C6435 + C6434) * C152080 * C152187) *
                    C4107) *
                   C152244 +
               (((C6439 + C6438 + C6437) * C152080 * C152187 +
                 (C7841 + C7842 + C7843) * C152080 * C152068) *
                    C4107 -
                ((C8866 + C8867 + C8868) * C152080 * C152068 +
                 (C8124 + C8123 + C8122) * C152080 * C152187) *
                    C151956) *
                   C152214) *
                  C3241 +
              ((((C6089 * C549 + C6682 + C6682 + C6084 * C573 + C6091 * C548 +
                  C6683 + C6683 + C6085 * C572 + C6093 * C547 + C6684 + C6684 +
                  C6086 * C571) *
                     C152080 * C152187 +
                 (C7456 + C7457 + C7458) * C152080 * C152068) *
                    C151956 -
                ((C6442 + C6441 + C6440) * C152080 * C152068 +
                 (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
                  C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
                  C6084 * C159) *
                     C152080 * C152187) *
                    C4107) *
                   C152258 +
               (((C6440 + C6441 + C6442) * C152080 * C152187 +
                 (C6443 + C6444 + C6445) * C152080 * C152068) *
                    C4107 -
                ((C8645 + C8646 + C8647) * C152080 * C152068 +
                 (C7458 + C7457 + C7456) * C152080 * C152187) *
                    C151956) *
                   C152244 +
               (((C8647 + C8646 + C8645) * C152080 * C152187 +
                 (C6089 * C2054 + C8636 + C8636 + C6084 * C2062 +
                  C6091 * C2055 + C8637 + C8637 + C6085 * C2063 +
                  C6093 * C2056 + C8638 + C8638 + C6086 * C2064) *
                     C152080 * C152068) *
                    C151956 -
                ((C8337 + C8338 + C8339) * C152080 * C152068 +
                 (C6445 + C6444 + C6443) * C152080 * C152187) *
                    C4107) *
                   C152214) *
                  C151834)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
             C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
             C6086 * C160) *
                C152080 * C152187 +
            (C6434 + C6435 + C6436) * C152080 * C152068) *
               C152266 -
           ((C7453 + C7454 + C7455) * C152080 * C152068 +
            (C6093 * C548 + C6673 + C6673 + C6086 * C572 + C6091 * C549 +
             C6674 + C6674 + C6085 * C573 + C6089 * C550 + C6675 + C6675 +
             C6084 * C574) *
                C152080 * C152187) *
               C152263 +
           ((C6089 * C551 + C6676 + C6676 + C6084 * C575 + C6091 * C552 +
             C6677 + C6677 + C6085 * C576 + C6093 * C553 + C6678 + C6678 +
             C6086 * C577) *
                C152080 * C152187 +
            (C8119 + C8120 + C8121) * C152080 * C152068) *
               C152252 -
           ((C10174 + C10175 + C10176) * C152080 * C152068 +
            (C6093 * C2452 + C9439 + C9439 + C6086 * C2468 + C6091 * C2453 +
             C9440 + C9440 + C6085 * C2469 + C6089 * C2454 + C9441 + C9441 +
             C6084 * C2470) *
                C152080 * C152187) *
               C152230) *
              C151851 * C3241 +
          (((C6089 * C549 + C6682 + C6682 + C6084 * C573 + C6091 * C548 +
             C6683 + C6683 + C6085 * C572 + C6093 * C547 + C6684 + C6684 +
             C6086 * C571) *
                C152080 * C152187 +
            (C7456 + C7457 + C7458) * C152080 * C152068) *
               C152263 -
           ((C6442 + C6441 + C6440) * C152080 * C152068 +
            (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
             C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
             C6084 * C159) *
                C152080 * C152187) *
               C152266 -
           ((C9753 + C9754 + C9755) * C152080 * C152068 +
            (C6093 * C554 + C6691 + C6691 + C6086 * C578 + C6091 * C553 +
             C6692 + C6692 + C6085 * C577 + C6089 * C552 + C6693 + C6693 +
             C6084 * C576) *
                C152080 * C152187) *
               C152252 +
           ((C6089 * C2453 + C9950 + C9950 + C6084 * C2469 + C6091 * C2452 +
             C9951 + C9951 + C6085 * C2468 + C6093 * C2451 + C9952 + C9952 +
             C6086 * C2467) *
                C152080 * C152187 +
            (C6089 * C2956 + C9953 + C9953 + C6084 * C2964 + C6091 * C2957 +
             C9954 + C9954 + C6085 * C2965 + C6093 * C2958 + C9955 + C9955 +
             C6086 * C2966) *
                C152080 * C152068) *
               C152230) *
              C151851 * C151834)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152080 *
                C31624 +
            C31863 * C31625 + C31864 * C31626 + C31865 * C31627) *
               C4107 -
           (C32570 * C31627 + C32571 * C31626 + C32572 * C31625 +
            (C31628 * C550 + C32024 + C32024 + C151791 * C574) * C152080 *
                C31624) *
               C151956) *
              C151851 * C152264 +
          (((C31628 * C549 + C32029 + C32029 + C151791 * C573) * C152080 *
                C31624 +
            C32573 * C31625 + C32574 * C31626 + C32575 * C31627) *
               C151956 -
           (C31869 * C31627 + C31868 * C31626 + C31867 * C31625 +
            (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152080 *
                C31624) *
               C4107) *
              C151851 * C152257 +
          (((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C152080 *
                C31624 +
            C31871 * C31625 + C31872 * C31626 + C31873 * C31627) *
               C4107 -
           (C32576 * C31627 + C32577 * C31626 + C32578 * C31625 +
            (C31628 * C548 + C32040 + C32040 + C151791 * C572) * C152080 *
                C31624) *
               C151956) *
              C151851 * C152242 +
          (((C31628 * C547 + C32324 + C32324 + C151791 * C571) * C152080 *
                C31624 +
            (C31628 * C1086 + C32325 + C32325 + C151791 * C1098) * C152080 *
                C31625 +
            (C31628 * C1535 + C32326 + C32326 + C151791 * C1559) * C152080 *
                C31626 +
            (C31628 * C2056 + C32327 + C32327 + C151791 * C2064) * C152080 *
                C31627) *
               C151956 -
           (C32193 * C31627 + C32192 * C31626 + C32191 * C31625 +
            (C31628 * C145 + C31646 + C31646 + C151791 * C161) * C152080 *
                C31624) *
               C4107) *
              C151851 * C152218)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152080 *
                 C31624 +
             C31863 * C31625 + C31864 * C31626 + C31865 * C31627) *
                C4107 -
            (C32570 * C31627 + C32571 * C31626 + C32572 * C31625 +
             (C31628 * C550 + C32024 + C32024 + C151791 * C574) * C152080 *
                 C31624) *
                C151956) *
               C152258 +
           ((C32572 * C31624 + C32571 * C31625 + C32570 * C31626 +
             C33004 * C31627) *
                C151956 -
            (C31866 * C31627 + C31865 * C31626 + C31864 * C31625 +
             C31863 * C31624) *
                C4107) *
               C152244 +
           ((C31864 * C31624 + C31865 * C31625 + C31866 * C31626 +
             C32822 * C31627) *
                C4107 -
            (C33483 * C31627 + C33004 * C31626 + C32570 * C31625 +
             C32571 * C31624) *
                C151956) *
               C152214) *
              C3241 +
          ((((C31628 * C549 + C32029 + C32029 + C151791 * C573) * C152080 *
                 C31624 +
             C32573 * C31625 + C32574 * C31626 + C32575 * C31627) *
                C151956 -
            (C31869 * C31627 + C31868 * C31626 + C31867 * C31625 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152080 *
                 C31624) *
                C4107) *
               C152258 +
           ((C31867 * C31624 + C31868 * C31625 + C31869 * C31626 +
             C31870 * C31627) *
                C4107 -
            (C33343 * C31627 + C32575 * C31626 + C32574 * C31625 +
             C32573 * C31624) *
                C151956) *
               C152244 +
           ((C32574 * C31624 + C32575 * C31625 + C33343 * C31626 +
             (C31628 * C25784 + C33339 + C33339 + C151791 * C25788) * C152080 *
                 C31627) *
                C151956 -
            (C33142 * C31627 + C31870 * C31626 + C31869 * C31625 +
             C31868 * C31624) *
                C4107) *
               C152214) *
              C151834)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152080 *
                C31624 +
            C31863 * C31625 + C31864 * C31626 + C31865 * C31627) *
               C152266 -
           (C32570 * C31627 + C32571 * C31626 + C32572 * C31625 +
            (C31628 * C550 + C32024 + C32024 + C151791 * C574) * C152080 *
                C31624) *
               C152263 +
           ((C31628 * C551 + C32025 + C32025 + C151791 * C575) * C152080 *
                C31624 +
            C33001 * C31625 + C33002 * C31626 + C33003 * C31627) *
               C152252 -
           (C34365 * C31627 + C34366 * C31626 + C34367 * C31625 +
            (C31628 * C2454 + C33864 + C33864 + C151791 * C2470) * C152080 *
                C31624) *
               C152230) *
              C151851 * C3241 +
          (((C31628 * C549 + C32029 + C32029 + C151791 * C573) * C152080 *
                C31624 +
            C32573 * C31625 + C32574 * C31626 + C32575 * C31627) *
               C152263 -
           (C31869 * C31627 + C31868 * C31626 + C31867 * C31625 +
            (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152080 *
                C31624) *
               C152266 -
           (C34079 * C31627 + C34080 * C31626 + C34081 * C31625 +
            (C31628 * C552 + C32036 + C32036 + C151791 * C576) * C152080 *
                C31624) *
               C152252 +
           ((C31628 * C2453 + C34212 + C34212 + C151791 * C2469) * C152080 *
                C31624 +
            (C31628 * C2956 + C34213 + C34213 + C151791 * C2964) * C152080 *
                C31625 +
            (C31628 * C10150 + C34214 + C34214 + C151791 * C10156) * C152080 *
                C31626 +
            (C31628 * C27086 + C34215 + C34215 + C151791 * C27090) * C152080 *
                C31627) *
               C152230) *
              C151851 * C151834)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C45770 +
             C37949 * C45771 + C37950 * C45772) *
                C152187 +
            (C54346 + C54347 + C54348) * C152068) *
               C4107 -
           ((C55287 + C55288 + C55289) * C152068 +
            (C40513 * C45772 + C37950 * C45771 + C37949 * C45770) * C152187) *
               C151956) *
              C151851 * C152264 +
          (((C37951 * C45770 + C37952 * C45771 + C41022 * C45772) * C152187 +
            (C55290 + C55291 + C55292) * C152068) *
               C151956 -
           ((C54354 + C54353 + C54352) * C152068 +
            (C37952 * C45772 + C37951 * C45771 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C45770) *
                C152187) *
               C4107) *
              C151851 * C152257 +
          ((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C45770 +
             C37953 * C45771 + C37956 * C45772) *
                C152187 +
            (C54358 + C54359 + C54360) * C152068) *
               C4107 -
           ((C55293 + C55294 + C55295) * C152068 +
            (C54593 * C45772 + C37956 * C45771 + C37953 * C45770) * C152187) *
               C151956) *
              C151851 * C152242 +
          (((C38366 * C45770 + C54996 * C45771 +
             (C31628 * C2451 + C54992 + C54992 + C151791 * C2467) * C45772) *
                C152187 +
            (C38161 * C45770 + C54794 * C45771 +
             (C31628 * C2958 + C54993 + C54993 + C151791 * C2966) * C45772) *
                C152068) *
               C151956 -
           ((C54795 + C54789 + C54788) * C152068 +
            (C54996 * C45772 + C38366 * C45771 +
             (C31628 * C145 + C31646 + C31646 + C151791 * C161) * C45770) *
                C152187) *
               C4107) *
              C151851 * C152218)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C45770 +
              C37949 * C45771 + C37950 * C45772) *
                 C152187 +
             (C54346 + C54347 + C54348) * C152068) *
                C4107 -
            ((C55287 + C55288 + C55289) * C152068 +
             (C40513 * C45772 + C37950 * C45771 + C37949 * C45770) * C152187) *
                C151956) *
               C152258 +
           (((C55289 + C55288 + C55287) * C152187 +
             (C55863 + C55864 + C55865) * C152068) *
                C151956 -
            ((C54349 + C54350 + C54351) * C152068 +
             (C54348 + C54347 + C54346) * C152187) *
                C4107) *
               C152244 +
           (((C54351 + C54350 + C54349) * C152187 +
             (C55636 + C55637 + C55638) * C152068) *
                C4107 -
            ((C56553 + C56554 + C56555) * C152068 +
             (C55865 + C55864 + C55863) * C152187) *
                C151956) *
               C152214) *
              C3241 +
          ((((C37951 * C45770 + C37952 * C45771 + C41022 * C45772) * C152187 +
             (C55290 + C55291 + C55292) * C152068) *
                C151956 -
            ((C54354 + C54353 + C54352) * C152068 +
             (C37952 * C45772 + C37951 * C45771 +
              (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C45770) *
                 C152187) *
                C4107) *
               C152258 +
           (((C54352 + C54353 + C54354) * C152187 +
             (C54355 + C54356 + C54357) * C152068) *
                C4107 -
            ((C56356 + C56357 + C56358) * C152068 +
             (C55292 + C55291 + C55290) * C152187) *
                C151956) *
               C152244 +
           (((C56358 + C56357 + C56356) * C152187 +
             (C32566 * C45770 + C34076 * C45771 +
              (C31628 * C27086 + C34215 + C34215 + C151791 * C27090) * C45772) *
                 C152068) *
                C151956 -
            ((C56063 + C56064 + C56065) * C152068 +
             (C54357 + C54356 + C54355) * C152187) *
                C4107) *
               C152214) *
              C151834)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C45770 +
             C37949 * C45771 + C37950 * C45772) *
                C152187 +
            (C54346 + C54347 + C54348) * C152068) *
               C152266 -
           ((C55287 + C55288 + C55289) * C152068 +
            (C40513 * C45772 + C37950 * C45771 + C37949 * C45770) * C152187) *
               C152263 +
           ((C37950 * C45770 + C40513 * C45771 + C40516 * C45772) * C152187 +
            (C55860 + C55861 + C55862) * C152068) *
               C152252 -
           ((C57822 + C57823 + C57824) * C152068 +
            (C57128 * C45772 + C40516 * C45771 + C40513 * C45770) * C152187) *
               C152230) *
              C151851 * C3241 +
          (((C37951 * C45770 + C37952 * C45771 + C41022 * C45772) * C152187 +
            (C55290 + C55291 + C55292) * C152068) *
               C152263 -
           ((C54354 + C54353 + C54352) * C152068 +
            (C37952 * C45772 + C37951 * C45771 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C45770) *
                C152187) *
               C152266 -
           ((C57426 + C57421 + C57422) * C152068 +
            (C57627 * C45772 + C41022 * C45771 + C37952 * C45770) * C152187) *
               C152252 +
           ((C41022 * C45770 + C57627 * C45771 +
             (C31628 * C17751 + C57623 + C57623 + C151791 * C17757) * C45772) *
                C152187 +
            (C40818 * C45770 + C57425 * C45771 +
             (C31628 * C49559 + C57624 + C57624 + C151791 * C49561) * C45772) *
                C152068) *
               C152230) *
              C151851 * C151834)) /
            (p * q * std::sqrt(p + q));
    d2ee[193] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152080 *
                C31624 +
            C31863 * C31625 + C31864 * C31626 + C31865 * C31627) *
               C151952 -
           (C32570 * C31627 + C32571 * C31626 + C32572 * C31625 +
            (C31628 * C550 + C32024 + C32024 + C151791 * C574) * C152080 *
                C31624) *
               C151959 +
           ((C31628 * C551 + C32025 + C32025 + C151791 * C575) * C152080 *
                C31624 +
            C33001 * C31625 + C33002 * C31626 + C33003 * C31627) *
               C4779) *
              C151851 * C151828 +
          (((C31628 * C549 + C32029 + C32029 + C151791 * C573) * C152080 *
                C31624 +
            C32573 * C31625 + C32574 * C31626 + C32575 * C31627) *
               C151959 -
           (C31869 * C31627 + C31868 * C31626 + C31867 * C31625 +
            (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152080 *
                C31624) *
               C151952 -
           (C34079 * C31627 + C34080 * C31626 + C34081 * C31625 +
            (C31628 * C552 + C32036 + C32036 + C151791 * C576) * C152080 *
                C31624) *
               C4779) *
              C151851 * C151837 +
          (((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C152080 *
                C31624 +
            C31871 * C31625 + C31872 * C31626 + C31873 * C31627) *
               C151952 -
           (C32576 * C31627 + C32577 * C31626 + C32578 * C31625 +
            (C31628 * C548 + C32040 + C32040 + C151791 * C572) * C152080 *
                C31624) *
               C151959 +
           ((C31628 * C553 + C32041 + C32041 + C151791 * C577) * C152080 *
                C31624 +
            (C31628 * C1532 + C32042 + C32042 + C151791 * C1556) * C152080 *
                C31625 +
            (C31628 * C1541 + C32043 + C32043 + C151791 * C1565) * C152080 *
                C31626 +
            (C31628 * C8066 + C32044 + C32044 + C151791 * C8072) * C152080 *
                C31627) *
               C4779) *
              C151851 * C3588)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
             C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
             C6086 * C160) *
                C152080 * C152187 +
            (C6434 + C6435 + C6436) * C152080 * C152068) *
               C151952 -
           ((C7453 + C7454 + C7455) * C152080 * C152068 +
            (C6093 * C548 + C6673 + C6673 + C6086 * C572 + C6091 * C549 +
             C6674 + C6674 + C6085 * C573 + C6089 * C550 + C6675 + C6675 +
             C6084 * C574) *
                C152080 * C152187) *
               C151959 +
           ((C6089 * C551 + C6676 + C6676 + C6084 * C575 + C6091 * C552 +
             C6677 + C6677 + C6085 * C576 + C6093 * C553 + C6678 + C6678 +
             C6086 * C577) *
                C152080 * C152187 +
            (C8119 + C8120 + C8121) * C152080 * C152068) *
               C4779) *
              C151851 * C151828 +
          (((C6089 * C549 + C6682 + C6682 + C6084 * C573 + C6091 * C548 +
             C6683 + C6683 + C6085 * C572 + C6093 * C547 + C6684 + C6684 +
             C6086 * C571) *
                C152080 * C152187 +
            (C7456 + C7457 + C7458) * C152080 * C152068) *
               C151959 -
           ((C6442 + C6441 + C6440) * C152080 * C152068 +
            (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
             C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
             C6084 * C159) *
                C152080 * C152187) *
               C151952 -
           ((C9753 + C9754 + C9755) * C152080 * C152068 +
            (C6093 * C554 + C6691 + C6691 + C6086 * C578 + C6091 * C553 +
             C6692 + C6692 + C6085 * C577 + C6089 * C552 + C6693 + C6693 +
             C6084 * C576) *
                C152080 * C152187) *
               C4779) *
              C151851 * C151837 +
          (((C6089 * C144 + C6108 + C6108 + C6084 * C160 + C6091 * C145 +
             C6109 + C6109 + C6085 * C161 + C6093 * C146 + C6110 + C6110 +
             C6086 * C162) *
                C152080 * C152187 +
            (C6446 + C6447 + C6448) * C152080 * C152068) *
               C151952 -
           ((C7459 + C7460 + C7461) * C152080 * C152068 +
            (C6093 * C555 + C6697 + C6697 + C6086 * C579 + C6091 * C547 +
             C6698 + C6698 + C6085 * C571 + C6089 * C548 + C6699 + C6699 +
             C6084 * C572) *
                C152080 * C152187) *
               C151959 +
           ((C6089 * C553 + C6700 + C6700 + C6084 * C577 + C6091 * C554 +
             C6701 + C6701 + C6085 * C578 + C6093 * C556 + C6702 + C6702 +
             C6086 * C580) *
                C152080 * C152187 +
            (C6089 * C1532 + C6703 + C6703 + C6084 * C1556 + C6091 * C1531 +
             C6704 + C6704 + C6085 * C1555 + C6093 * C2677 + C6705 + C6705 +
             C6086 * C2679) *
                C152080 * C152068) *
               C4779) *
              C151851 * C3588)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C45770 +
             C37949 * C45771 + C37950 * C45772) *
                C152187 +
            (C54346 + C54347 + C54348) * C152068) *
               C151952 -
           ((C55287 + C55288 + C55289) * C152068 +
            (C40513 * C45772 + C37950 * C45771 + C37949 * C45770) * C152187) *
               C151959 +
           ((C37950 * C45770 + C40513 * C45771 + C40516 * C45772) * C152187 +
            (C55860 + C55861 + C55862) * C152068) *
               C4779) *
              C151851 * C151828 +
          (((C37951 * C45770 + C37952 * C45771 + C41022 * C45772) * C152187 +
            (C55290 + C55291 + C55292) * C152068) *
               C151959 -
           ((C54354 + C54353 + C54352) * C152068 +
            (C37952 * C45772 + C37951 * C45771 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C45770) *
                C152187) *
               C151952 -
           ((C57426 + C57421 + C57422) * C152068 +
            (C57627 * C45772 + C41022 * C45771 + C37952 * C45770) * C152187) *
               C4779) *
              C151851 * C151837 +
          ((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C45770 +
             C37953 * C45771 + C37956 * C45772) *
                C152187 +
            (C54358 + C54359 + C54360) * C152068) *
               C151952 -
           ((C55293 + C55294 + C55295) * C152068 +
            (C54593 * C45772 + C37956 * C45771 + C37953 * C45770) * C152187) *
               C151959 +
           ((C37956 * C45770 + C54593 * C45771 +
             (C31628 * C2457 + C54586 + C54586 + C151791 * C2473) * C45772) *
                C152187 +
            (C37955 * C45770 + C54592 * C45771 +
             (C31628 * C9428 + C54587 + C54587 + C151791 * C9434) * C45772) *
                C152068) *
               C4779) *
              C151851 * C3588)) /
            (p * q * std::sqrt(p + q));
    d2ee[194] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
              C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
              C6086 * C160) *
                 C152080 * C152187 +
             (C6434 + C6435 + C6436) * C152080 * C152068) *
                C4107 -
            ((C7453 + C7454 + C7455) * C152080 * C152068 +
             (C6093 * C548 + C6673 + C6673 + C6086 * C572 + C6091 * C549 +
              C6674 + C6674 + C6085 * C573 + C6089 * C550 + C6675 + C6675 +
              C6084 * C574) *
                 C152080 * C152187) *
                C151956) *
               C152258 +
           (((C7455 + C7454 + C7453) * C152080 * C152187 +
             (C8122 + C8123 + C8124) * C152080 * C152068) *
                C151956 -
            ((C6437 + C6438 + C6439) * C152080 * C152068 +
             (C6436 + C6435 + C6434) * C152080 * C152187) *
                C4107) *
               C152244 +
           (((C6439 + C6438 + C6437) * C152080 * C152187 +
             (C7841 + C7842 + C7843) * C152080 * C152068) *
                C4107 -
            ((C8866 + C8867 + C8868) * C152080 * C152068 +
             (C8124 + C8123 + C8122) * C152080 * C152187) *
                C151956) *
               C152214) *
              C3241 +
          ((((C6089 * C549 + C6682 + C6682 + C6084 * C573 + C6091 * C548 +
              C6683 + C6683 + C6085 * C572 + C6093 * C547 + C6684 + C6684 +
              C6086 * C571) *
                 C152080 * C152187 +
             (C7456 + C7457 + C7458) * C152080 * C152068) *
                C151956 -
            ((C6442 + C6441 + C6440) * C152080 * C152068 +
             (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
              C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
              C6084 * C159) *
                 C152080 * C152187) *
                C4107) *
               C152258 +
           (((C6440 + C6441 + C6442) * C152080 * C152187 +
             (C6443 + C6444 + C6445) * C152080 * C152068) *
                C4107 -
            ((C8645 + C8646 + C8647) * C152080 * C152068 +
             (C7458 + C7457 + C7456) * C152080 * C152187) *
                C151956) *
               C152244 +
           (((C8647 + C8646 + C8645) * C152080 * C152187 +
             (C6089 * C2054 + C8636 + C8636 + C6084 * C2062 + C6091 * C2055 +
              C8637 + C8637 + C6085 * C2063 + C6093 * C2056 + C8638 + C8638 +
              C6086 * C2064) *
                 C152080 * C152068) *
                C151956 -
            ((C8337 + C8338 + C8339) * C152080 * C152068 +
             (C6445 + C6444 + C6443) * C152080 * C152187) *
                C4107) *
               C152214) *
              C151834)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
             C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
             C6086 * C160) *
                C152080 * C152187 +
            (C6434 + C6435 + C6436) * C152080 * C152068) *
               C4107 -
           ((C7453 + C7454 + C7455) * C152080 * C152068 +
            (C6093 * C548 + C6673 + C6673 + C6086 * C572 + C6091 * C549 +
             C6674 + C6674 + C6085 * C573 + C6089 * C550 + C6675 + C6675 +
             C6084 * C574) *
                C152080 * C152187) *
               C151956) *
              C151851 * C152264 +
          (((C6089 * C549 + C6682 + C6682 + C6084 * C573 + C6091 * C548 +
             C6683 + C6683 + C6085 * C572 + C6093 * C547 + C6684 + C6684 +
             C6086 * C571) *
                C152080 * C152187 +
            (C7456 + C7457 + C7458) * C152080 * C152068) *
               C151956 -
           ((C6442 + C6441 + C6440) * C152080 * C152068 +
            (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
             C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
             C6084 * C159) *
                C152080 * C152187) *
               C4107) *
              C151851 * C152257 +
          (((C6089 * C144 + C6108 + C6108 + C6084 * C160 + C6091 * C145 +
             C6109 + C6109 + C6085 * C161 + C6093 * C146 + C6110 + C6110 +
             C6086 * C162) *
                C152080 * C152187 +
            (C6446 + C6447 + C6448) * C152080 * C152068) *
               C4107 -
           ((C7459 + C7460 + C7461) * C152080 * C152068 +
            (C6093 * C555 + C6697 + C6697 + C6086 * C579 + C6091 * C547 +
             C6698 + C6698 + C6085 * C571 + C6089 * C548 + C6699 + C6699 +
             C6084 * C572) *
                C152080 * C152187) *
               C151956) *
              C151851 * C152242 +
          (((C6089 * C547 + C7112 + C7112 + C6084 * C571 + C6091 * C555 +
             C7113 + C7113 + C6085 * C579 + C6093 * C557 + C7114 + C7114 +
             C6086 * C581) *
                C152080 * C152187 +
            (C6089 * C1086 + C7115 + C7115 + C6084 * C1098 + C6091 * C1087 +
             C7116 + C7116 + C6085 * C1099 + C6093 * C1088 + C7117 + C7117 +
             C6086 * C1100) *
                C152080 * C152068) *
               C151956 -
           ((C6917 + C6916 + C6915) * C152080 * C152068 +
            (C6093 * C147 + C6117 + C6117 + C6086 * C163 + C6091 * C146 +
             C6118 + C6118 + C6085 * C162 + C6089 * C145 + C6119 + C6119 +
             C6084 * C161) *
                C152080 * C152187) *
               C4107) *
              C151851 * C152218)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152080 *
                C31624 +
            C31863 * C31625 + C31864 * C31626 + C31865 * C31627) *
               C4107 -
           (C32570 * C31627 + C32571 * C31626 + C32572 * C31625 +
            (C31628 * C550 + C32024 + C32024 + C151791 * C574) * C152080 *
                C31624) *
               C151956) *
              C151851 * C152264 +
          (((C31628 * C549 + C32029 + C32029 + C151791 * C573) * C152080 *
                C31624 +
            C32573 * C31625 + C32574 * C31626 + C32575 * C31627) *
               C151956 -
           (C31869 * C31627 + C31868 * C31626 + C31867 * C31625 +
            (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152080 *
                C31624) *
               C4107) *
              C151851 * C152257 +
          (((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C152080 *
                C31624 +
            C31871 * C31625 + C31872 * C31626 + C31873 * C31627) *
               C4107 -
           (C32576 * C31627 + C32577 * C31626 + C32578 * C31625 +
            (C31628 * C548 + C32040 + C32040 + C151791 * C572) * C152080 *
                C31624) *
               C151956) *
              C151851 * C152242 +
          (((C31628 * C547 + C32324 + C32324 + C151791 * C571) * C152080 *
                C31624 +
            (C31628 * C1086 + C32325 + C32325 + C151791 * C1098) * C152080 *
                C31625 +
            (C31628 * C1535 + C32326 + C32326 + C151791 * C1559) * C152080 *
                C31626 +
            (C31628 * C2056 + C32327 + C32327 + C151791 * C2064) * C152080 *
                C31627) *
               C151956 -
           (C32193 * C31627 + C32192 * C31626 + C32191 * C31625 +
            (C31628 * C145 + C31646 + C31646 + C151791 * C161) * C152080 *
                C31624) *
               C4107) *
              C151851 * C152218)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152080 *
                 C31624 +
             C31863 * C31625 + C31864 * C31626 + C31865 * C31627) *
                C4107 -
            (C32570 * C31627 + C32571 * C31626 + C32572 * C31625 +
             (C31628 * C550 + C32024 + C32024 + C151791 * C574) * C152080 *
                 C31624) *
                C151956) *
               C152258 +
           ((C32572 * C31624 + C32571 * C31625 + C32570 * C31626 +
             C33004 * C31627) *
                C151956 -
            (C31866 * C31627 + C31865 * C31626 + C31864 * C31625 +
             C31863 * C31624) *
                C4107) *
               C152244 +
           ((C31864 * C31624 + C31865 * C31625 + C31866 * C31626 +
             C32822 * C31627) *
                C4107 -
            (C33483 * C31627 + C33004 * C31626 + C32570 * C31625 +
             C32571 * C31624) *
                C151956) *
               C152214) *
              C3241 +
          ((((C31628 * C549 + C32029 + C32029 + C151791 * C573) * C152080 *
                 C31624 +
             C32573 * C31625 + C32574 * C31626 + C32575 * C31627) *
                C151956 -
            (C31869 * C31627 + C31868 * C31626 + C31867 * C31625 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152080 *
                 C31624) *
                C4107) *
               C152258 +
           ((C31867 * C31624 + C31868 * C31625 + C31869 * C31626 +
             C31870 * C31627) *
                C4107 -
            (C33343 * C31627 + C32575 * C31626 + C32574 * C31625 +
             C32573 * C31624) *
                C151956) *
               C152244 +
           ((C32574 * C31624 + C32575 * C31625 + C33343 * C31626 +
             (C31628 * C25784 + C33339 + C33339 + C151791 * C25788) * C152080 *
                 C31627) *
                C151956 -
            (C33142 * C31627 + C31870 * C31626 + C31869 * C31625 +
             C31868 * C31624) *
                C4107) *
               C152214) *
              C151834)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C45770 +
             C37949 * C45771 + C37950 * C45772) *
                C152187 +
            (C54346 + C54347 + C54348) * C152068) *
               C4107 -
           ((C55287 + C55288 + C55289) * C152068 +
            (C40513 * C45772 + C37950 * C45771 + C37949 * C45770) * C152187) *
               C151956) *
              C151851 * C152264 +
          (((C37951 * C45770 + C37952 * C45771 + C41022 * C45772) * C152187 +
            (C55290 + C55291 + C55292) * C152068) *
               C151956 -
           ((C54354 + C54353 + C54352) * C152068 +
            (C37952 * C45772 + C37951 * C45771 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C45770) *
                C152187) *
               C4107) *
              C151851 * C152257 +
          ((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C45770 +
             C37953 * C45771 + C37956 * C45772) *
                C152187 +
            (C54358 + C54359 + C54360) * C152068) *
               C4107 -
           ((C55293 + C55294 + C55295) * C152068 +
            (C54593 * C45772 + C37956 * C45771 + C37953 * C45770) * C152187) *
               C151956) *
              C151851 * C152242 +
          (((C38366 * C45770 + C54996 * C45771 +
             (C31628 * C2451 + C54992 + C54992 + C151791 * C2467) * C45772) *
                C152187 +
            (C38161 * C45770 + C54794 * C45771 +
             (C31628 * C2958 + C54993 + C54993 + C151791 * C2966) * C45772) *
                C152068) *
               C151956 -
           ((C54795 + C54789 + C54788) * C152068 +
            (C54996 * C45772 + C38366 * C45771 +
             (C31628 * C145 + C31646 + C31646 + C151791 * C161) * C45770) *
                C152187) *
               C4107) *
              C151851 * C152218)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C45770 +
              C37949 * C45771 + C37950 * C45772) *
                 C152187 +
             (C54346 + C54347 + C54348) * C152068) *
                C4107 -
            ((C55287 + C55288 + C55289) * C152068 +
             (C40513 * C45772 + C37950 * C45771 + C37949 * C45770) * C152187) *
                C151956) *
               C152258 +
           (((C55289 + C55288 + C55287) * C152187 +
             (C55863 + C55864 + C55865) * C152068) *
                C151956 -
            ((C54349 + C54350 + C54351) * C152068 +
             (C54348 + C54347 + C54346) * C152187) *
                C4107) *
               C152244 +
           (((C54351 + C54350 + C54349) * C152187 +
             (C55636 + C55637 + C55638) * C152068) *
                C4107 -
            ((C56553 + C56554 + C56555) * C152068 +
             (C55865 + C55864 + C55863) * C152187) *
                C151956) *
               C152214) *
              C3241 +
          ((((C37951 * C45770 + C37952 * C45771 + C41022 * C45772) * C152187 +
             (C55290 + C55291 + C55292) * C152068) *
                C151956 -
            ((C54354 + C54353 + C54352) * C152068 +
             (C37952 * C45772 + C37951 * C45771 +
              (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C45770) *
                 C152187) *
                C4107) *
               C152258 +
           (((C54352 + C54353 + C54354) * C152187 +
             (C54355 + C54356 + C54357) * C152068) *
                C4107 -
            ((C56356 + C56357 + C56358) * C152068 +
             (C55292 + C55291 + C55290) * C152187) *
                C151956) *
               C152244 +
           (((C56358 + C56357 + C56356) * C152187 +
             (C32566 * C45770 + C34076 * C45771 +
              (C31628 * C27086 + C34215 + C34215 + C151791 * C27090) * C45772) *
                 C152068) *
                C151956 -
            ((C56063 + C56064 + C56065) * C152068 +
             (C54357 + C54356 + C54355) * C152187) *
                C4107) *
               C152214) *
              C151834)) /
            (p * q * std::sqrt(p + q));
    d2ee[195] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
             C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
             C6086 * C160) *
                C152080 * C152187 +
            (C6434 + C6435 + C6436) * C152080 * C152068) *
               C151869 * C1709 -
           ((C6437 + C6438 + C6439) * C152080 * C152068 +
            (C6436 + C6435 + C6434) * C152080 * C152187) *
               C151869 * C1710 +
           ((C6439 + C6438 + C6437) * C152080 * C152187 +
            (C7841 + C7842 + C7843) * C152080 * C152068) *
               C151869 * C1711 -
           ((C7844 + C7845 + C7846) * C152080 * C152068 +
            (C7843 + C7842 + C7841) * C152080 * C152187) *
               C151869 * C152224) *
              C152158 +
          (((C6440 + C6441 + C6442) * C152080 * C152187 +
            (C6443 + C6444 + C6445) * C152080 * C152068) *
               C151869 * C1710 -
           ((C6442 + C6441 + C6440) * C152080 * C152068 +
            (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
             C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
             C6084 * C159) *
                C152080 * C152187) *
               C151869 * C1709 -
           ((C8337 + C8338 + C8339) * C152080 * C152068 +
            (C6445 + C6444 + C6443) * C152080 * C152187) *
               C151869 * C1711 +
           ((C8339 + C8338 + C8337) * C152080 * C152187 +
            (C6089 * C1358 + C8328 + C8328 + C6084 * C1374 + C6091 * C1359 +
             C8329 + C8329 + C6085 * C1375 + C6093 * C1360 + C8330 + C8330 +
             C6086 * C1376) *
                C152080 * C152068) *
               C151869 * C152224) *
              C151834)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
             C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
             C6086 * C160) *
                C152080 * C152187 +
            (C6434 + C6435 + C6436) * C152080 * C152068) *
               C151869 * C152172 -
           ((C6437 + C6438 + C6439) * C152080 * C152068 +
            (C6436 + C6435 + C6434) * C152080 * C152187) *
               C151869 * C151914) *
              C739 +
          (((C6440 + C6441 + C6442) * C152080 * C152187 +
            (C6443 + C6444 + C6445) * C152080 * C152068) *
               C151869 * C151914 -
           ((C6442 + C6441 + C6440) * C152080 * C152068 +
            (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
             C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
             C6084 * C159) *
                C152080 * C152187) *
               C151869 * C152172) *
              C740 +
          (((C6089 * C144 + C6108 + C6108 + C6084 * C160 + C6091 * C145 +
             C6109 + C6109 + C6085 * C161 + C6093 * C146 + C6110 + C6110 +
             C6086 * C162) *
                C152080 * C152187 +
            (C6446 + C6447 + C6448) * C152080 * C152068) *
               C151869 * C152172 -
           ((C6449 + C6450 + C6451) * C152080 * C152068 +
            (C6448 + C6447 + C6446) * C152080 * C152187) *
               C151869 * C151914) *
              C741 +
          (((C6915 + C6916 + C6917) * C152080 * C152187 +
            (C6089 * C345 + C6906 + C6906 + C6084 * C369 + C6091 * C347 +
             C6907 + C6907 + C6085 * C371 + C6093 * C349 + C6908 + C6908 +
             C6086 * C373) *
                C152080 * C152068) *
               C151869 * C151914 -
           ((C6917 + C6916 + C6915) * C152080 * C152068 +
            (C6093 * C147 + C6117 + C6117 + C6086 * C163 + C6091 * C146 +
             C6118 + C6118 + C6085 * C162 + C6089 * C145 + C6119 + C6119 +
             C6084 * C161) *
                C152080 * C152187) *
               C151869 * C152172) *
              C152218)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152080 *
                C31624 +
            C31863 * C31625 + C31864 * C31626 + C31865 * C31627) *
               C151869 * C152172 -
           (C31866 * C31627 + C31865 * C31626 + C31864 * C31625 +
            C31863 * C31624) *
               C151869 * C151914) *
              C739 +
          ((C31867 * C31624 + C31868 * C31625 + C31869 * C31626 +
            C31870 * C31627) *
               C151869 * C151914 -
           (C31869 * C31627 + C31868 * C31626 + C31867 * C31625 +
            (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152080 *
                C31624) *
               C151869 * C152172) *
              C740 +
          (((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C152080 *
                C31624 +
            C31871 * C31625 + C31872 * C31626 + C31873 * C31627) *
               C151869 * C152172 -
           (C31874 * C31627 + C31873 * C31626 + C31872 * C31625 +
            C31871 * C31624) *
               C151869 * C151914) *
              C741 +
          ((C32191 * C31624 + C32192 * C31625 + C32193 * C31626 +
            (C31628 * C1360 + C32181 + C32181 + C151791 * C1376) * C152080 *
                C31627) *
               C151869 * C151914 -
           (C32193 * C31627 + C32192 * C31626 + C32191 * C31625 +
            (C31628 * C145 + C31646 + C31646 + C151791 * C161) * C152080 *
                C31624) *
               C151869 * C152172) *
              C152218)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152080 *
                C31624 +
            C31863 * C31625 + C31864 * C31626 + C31865 * C31627) *
               C151869 * C1709 -
           (C31866 * C31627 + C31865 * C31626 + C31864 * C31625 +
            C31863 * C31624) *
               C151869 * C1710 +
           (C31864 * C31624 + C31865 * C31625 + C31866 * C31626 +
            C32822 * C31627) *
               C151869 * C1711 -
           (C32823 * C31627 + C32822 * C31626 + C31866 * C31625 +
            C31865 * C31624) *
               C151869 * C152224) *
              C152158 +
          ((C31867 * C31624 + C31868 * C31625 + C31869 * C31626 +
            C31870 * C31627) *
               C151869 * C1710 -
           (C31869 * C31627 + C31868 * C31626 + C31867 * C31625 +
            (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152080 *
                C31624) *
               C151869 * C1709 -
           (C33142 * C31627 + C31870 * C31626 + C31869 * C31625 +
            C31868 * C31624) *
               C151869 * C1711 +
           (C31869 * C31624 + C31870 * C31625 + C33142 * C31626 +
            (C31628 * C24770 + C33138 + C33138 + C151791 * C24774) * C152080 *
                C31627) *
               C151869 * C152224) *
              C151834)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C45770 +
             C37949 * C45771 + C37950 * C45772) *
                C152187 +
            (C54346 + C54347 + C54348) * C152068) *
               C151869 * C152172 -
           ((C54349 + C54350 + C54351) * C152068 +
            (C54348 + C54347 + C54346) * C152187) *
               C151869 * C151914) *
              C739 +
          (((C54352 + C54353 + C54354) * C152187 +
            (C54355 + C54356 + C54357) * C152068) *
               C151869 * C151914 -
           ((C54354 + C54353 + C54352) * C152068 +
            (C37952 * C45772 + C37951 * C45771 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C45770) *
                C152187) *
               C151869 * C152172) *
              C740 +
          ((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C45770 +
             C37953 * C45771 + C37956 * C45772) *
                C152187 +
            (C54358 + C54359 + C54360) * C152068) *
               C151869 * C152172 -
           ((C54361 + C54362 + C54363) * C152068 +
            (C54360 + C54359 + C54358) * C152187) *
               C151869 * C151914) *
              C741 +
          (((C54788 + C54789 + C54795) * C152187 +
            (C32189 * C45770 + C38162 * C45771 +
             (C31628 * C1542 + C38363 + C38363 + C151791 * C1566) * C45772) *
                C152068) *
               C151869 * C151914 -
           ((C54795 + C54789 + C54788) * C152068 +
            ((C31628 * C554 + C38361 + C38361 + C151791 * C578) * C45772 +
             C38366 * C45771 +
             (C31628 * C145 + C31646 + C31646 + C151791 * C161) * C45770) *
                C152187) *
               C151869 * C152172) *
              C152218)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C45770 +
             C37949 * C45771 + C37950 * C45772) *
                C152187 +
            (C54346 + C54347 + C54348) * C152068) *
               C151869 * C1709 -
           ((C54349 + C54350 + C54351) * C152068 +
            (C54348 + C54347 + C54346) * C152187) *
               C151869 * C1710 +
           ((C54351 + C54350 + C54349) * C152187 +
            (C55636 + C55637 + C55638) * C152068) *
               C151869 * C1711 -
           ((C55639 + C55640 + C55641) * C152068 +
            (C55638 + C55637 + C55636) * C152187) *
               C151869 * C152224) *
              C152158 +
          (((C54352 + C54353 + C54354) * C152187 +
            (C54355 + C54356 + C54357) * C152068) *
               C151869 * C1710 -
           ((C54354 + C54353 + C54352) * C152068 +
            (C37952 * C45772 + C37951 * C45771 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C45770) *
                C152187) *
               C151869 * C1709 -
           ((C56063 + C56064 + C56065) * C152068 +
            (C54357 + C54356 + C54355) * C152187) *
               C151869 * C1711 +
           ((C56065 + C56064 + C56063) * C152187 +
            (C31858 * C45770 + C33342 * C45771 +
             (C31628 * C25022 + C34069 + C34069 + C151791 * C25026) * C45772) *
                C152068) *
               C151869 * C152224) *
              C151834)) /
            (p * q * std::sqrt(p + q));
    d2ee[196] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
             C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
             C6086 * C160) *
                C152080 * C152187 +
            (C6434 + C6435 + C6436) * C152080 * C152068) *
               C152173 -
           ((C7453 + C7454 + C7455) * C152080 * C152068 +
            (C6093 * C548 + C6673 + C6673 + C6086 * C572 + C6091 * C549 +
             C6674 + C6674 + C6085 * C573 + C6089 * C550 + C6675 + C6675 +
             C6084 * C574) *
                C152080 * C152187) *
               C151956) *
              C1709 +
          (((C7455 + C7454 + C7453) * C152080 * C152187 +
            (C8122 + C8123 + C8124) * C152080 * C152068) *
               C151956 -
           ((C6437 + C6438 + C6439) * C152080 * C152068 +
            (C6436 + C6435 + C6434) * C152080 * C152187) *
               C152173) *
              C1710 +
          (((C6439 + C6438 + C6437) * C152080 * C152187 +
            (C7841 + C7842 + C7843) * C152080 * C152068) *
               C152173 -
           ((C8866 + C8867 + C8868) * C152080 * C152068 +
            (C8124 + C8123 + C8122) * C152080 * C152187) *
               C151956) *
              C1711 +
          (((C8868 + C8867 + C8866) * C152080 * C152187 +
            (C6089 * C8841 + C8857 + C8857 + C6084 * C8847 + C6091 * C8842 +
             C8858 + C8858 + C6085 * C8848 + C6093 * C8843 + C8859 + C8859 +
             C6086 * C8849) *
                C152080 * C152068) *
               C151956 -
           ((C7844 + C7845 + C7846) * C152080 * C152068 +
            (C7843 + C7842 + C7841) * C152080 * C152187) *
               C152173) *
              C152224) *
         C151823) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
              C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
              C6086 * C160) *
                 C152080 * C152187 +
             (C6434 + C6435 + C6436) * C152080 * C152068) *
                C152173 -
            ((C7453 + C7454 + C7455) * C152080 * C152068 +
             (C6093 * C548 + C6673 + C6673 + C6086 * C572 + C6091 * C549 +
              C6674 + C6674 + C6085 * C573 + C6089 * C550 + C6675 + C6675 +
              C6084 * C574) *
                 C152080 * C152187) *
                C151956) *
               C152172 +
           (((C7455 + C7454 + C7453) * C152080 * C152187 +
             (C6089 * C1538 + C7414 + C7414 + C6084 * C1562 + C6091 * C1537 +
              C7415 + C7415 + C6085 * C1561 + C6093 * C1536 + C7416 + C7416 +
              C6086 * C1560) *
                 C152080 * C152068) *
                C151956 -
            ((C6437 + C6438 + C6439) * C152080 * C152068 +
             (C6436 + C6435 + C6434) * C152080 * C152187) *
                C152173) *
               C151914) *
              C335 +
          ((((C6089 * C549 + C6682 + C6682 + C6084 * C573 + C6091 * C548 +
              C6683 + C6683 + C6085 * C572 + C6093 * C547 + C6684 + C6684 +
              C6086 * C571) *
                 C152080 * C152187 +
             (C7456 + C7457 + C7458) * C152080 * C152068) *
                C151956 -
            ((C6442 + C6441 + C6440) * C152080 * C152068 +
             (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
              C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
              C6084 * C159) *
                 C152080 * C152187) *
                C152173) *
               C152172 +
           (((C6440 + C6441 + C6442) * C152080 * C152187 +
             (C6443 + C6444 + C6445) * C152080 * C152068) *
                C152173 -
            ((C6093 * C1535 + C7423 + C7423 + C6086 * C1559 + C6091 * C1536 +
              C7424 + C7424 + C6085 * C1560 + C6089 * C1537 + C7425 + C7425 +
              C6084 * C1561) *
                 C152080 * C152068 +
             (C7458 + C7457 + C7456) * C152080 * C152187) *
                C151956) *
               C151914) *
              C336 +
          ((((C6089 * C144 + C6108 + C6108 + C6084 * C160 + C6091 * C145 +
              C6109 + C6109 + C6085 * C161 + C6093 * C146 + C6110 + C6110 +
              C6086 * C162) *
                 C152080 * C152187 +
             (C6446 + C6447 + C6448) * C152080 * C152068) *
                C152173 -
            ((C7459 + C7460 + C7461) * C152080 * C152068 +
             (C6093 * C555 + C6697 + C6697 + C6086 * C579 + C6091 * C547 +
              C6698 + C6698 + C6085 * C571 + C6089 * C548 + C6699 + C6699 +
              C6084 * C572) *
                 C152080 * C152187) *
                C151956) *
               C152172 +
           (((C7461 + C7460 + C7459) * C152080 * C152187 +
             (C6089 * C1536 + C7432 + C7432 + C6084 * C1560 + C6091 * C1535 +
              C7433 + C7433 + C6085 * C1559 + C6093 * C1916 + C7434 + C7434 +
              C6086 * C1918) *
                 C152080 * C152068) *
                C151956 -
            ((C6449 + C6450 + C6451) * C152080 * C152068 +
             (C6448 + C6447 + C6446) * C152080 * C152187) *
                C152173) *
               C151914) *
              C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152080 *
                 C31624 +
             C31863 * C31625 + C31864 * C31626 + C31865 * C31627) *
                C152173 -
            (C32570 * C31627 + C32571 * C31626 + C32572 * C31625 +
             (C31628 * C550 + C32024 + C32024 + C151791 * C574) * C152080 *
                 C31624) *
                C151956) *
               C152172 +
           ((C32572 * C31624 + C32571 * C31625 + C32570 * C31626 +
             (C31628 * C8841 + C32528 + C32528 + C151791 * C8847) * C152080 *
                 C31627) *
                C151956 -
            (C31866 * C31627 + C31865 * C31626 + C31864 * C31625 +
             C31863 * C31624) *
                C152173) *
               C151914) *
              C335 +
          ((((C31628 * C549 + C32029 + C32029 + C151791 * C573) * C152080 *
                 C31624 +
             C32573 * C31625 + C32574 * C31626 + C32575 * C31627) *
                C151956 -
            (C31869 * C31627 + C31868 * C31626 + C31867 * C31625 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152080 *
                 C31624) *
                C152173) *
               C152172 +
           ((C31867 * C31624 + C31868 * C31625 + C31869 * C31626 +
             C31870 * C31627) *
                C152173 -
            ((C31628 * C8842 + C32535 + C32535 + C151791 * C8848) * C152080 *
                 C31627 +
             C32575 * C31626 + C32574 * C31625 + C32573 * C31624) *
                C151956) *
               C151914) *
              C336 +
          ((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C152080 *
                 C31624 +
             C31871 * C31625 + C31872 * C31626 + C31873 * C31627) *
                C152173 -
            (C32576 * C31627 + C32577 * C31626 + C32578 * C31625 +
             (C31628 * C548 + C32040 + C32040 + C151791 * C572) * C152080 *
                 C31624) *
                C151956) *
               C152172 +
           ((C32578 * C31624 + C32577 * C31625 + C32576 * C31626 +
             (C31628 * C8843 + C32542 + C32542 + C151791 * C8849) * C152080 *
                 C31627) *
                C151956 -
            (C31874 * C31627 + C31873 * C31626 + C31872 * C31625 +
             C31871 * C31624) *
                C152173) *
               C151914) *
              C152208)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152080 *
                C31624 +
            C31863 * C31625 + C31864 * C31626 + C31865 * C31627) *
               C152173 -
           (C32570 * C31627 + C32571 * C31626 + C32572 * C31625 +
            (C31628 * C550 + C32024 + C32024 + C151791 * C574) * C152080 *
                C31624) *
               C151956) *
              C1709 +
          ((C32572 * C31624 + C32571 * C31625 + C32570 * C31626 +
            C33004 * C31627) *
               C151956 -
           (C31866 * C31627 + C31865 * C31626 + C31864 * C31625 +
            C31863 * C31624) *
               C152173) *
              C1710 +
          ((C31864 * C31624 + C31865 * C31625 + C31866 * C31626 +
            C32822 * C31627) *
               C152173 -
           (C33483 * C31627 + C33004 * C31626 + C32570 * C31625 +
            C32571 * C31624) *
               C151956) *
              C1711 +
          ((C32570 * C31624 + C33004 * C31625 + C33483 * C31626 +
            (C31628 * C33473 + C33479 + C33479 + C151791 * C33475) * C152080 *
                C31627) *
               C151956 -
           (C32823 * C31627 + C32822 * C31626 + C31866 * C31625 +
            C31865 * C31624) *
               C152173) *
              C152224) *
         C151823) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C45770 +
              C37949 * C45771 + C37950 * C45772) *
                 C152187 +
             (C54346 + C54347 + C54348) * C152068) *
                C152173 -
            ((C55287 + C55288 + C55289) * C152068 +
             (C40513 * C45772 + C37950 * C45771 + C37949 * C45770) * C152187) *
                C151956) *
               C152172 +
           (((C55289 + C55288 + C55287) * C152187 +
             (C32562 * C45770 + C32997 * C45771 + C34363 * C45772) * C152068) *
                C151956 -
            ((C54349 + C54350 + C54351) * C152068 +
             (C54348 + C54347 + C54346) * C152187) *
                C152173) *
               C151914) *
              C335 +
          ((((C37951 * C45770 + C37952 * C45771 + C41022 * C45772) * C152187 +
             (C55290 + C55291 + C55292) * C152068) *
                C151956 -
            ((C54354 + C54353 + C54352) * C152068 +
             (C37952 * C45772 + C37951 * C45771 +
              (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C45770) *
                 C152187) *
                C152173) *
               C152172 +
           (((C54352 + C54353 + C54354) * C152187 +
             (C54355 + C54356 + C54357) * C152068) *
                C152173 -
            ((C40817 * C45772 + C34077 * C45771 + C32565 * C45770) * C152068 +
             (C55292 + C55291 + C55290) * C152187) *
                C151956) *
               C151914) *
              C336 +
          (((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C45770 +
              C37953 * C45771 + C37956 * C45772) *
                 C152187 +
             (C54358 + C54359 + C54360) * C152068) *
                C152173 -
            ((C55293 + C55294 + C55295) * C152068 +
             (C54593 * C45772 + C37956 * C45771 + C37953 * C45770) * C152187) *
                C151956) *
               C152172 +
           (((C55295 + C55294 + C55293) * C152187 +
             (C32568 * C45770 + C37954 * C45771 +
              (C31628 * C10151 + C37932 + C37932 + C151791 * C10157) * C45772) *
                 C152068) *
                C151956 -
            ((C54361 + C54362 + C54363) * C152068 +
             (C54360 + C54359 + C54358) * C152187) *
                C152173) *
               C151914) *
              C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C45770 +
             C37949 * C45771 + C37950 * C45772) *
                C152187 +
            (C54346 + C54347 + C54348) * C152068) *
               C152173 -
           ((C55287 + C55288 + C55289) * C152068 +
            (C40513 * C45772 + C37950 * C45771 + C37949 * C45770) * C152187) *
               C151956) *
              C1709 +
          (((C55289 + C55288 + C55287) * C152187 +
            (C55863 + C55864 + C55865) * C152068) *
               C151956 -
           ((C54349 + C54350 + C54351) * C152068 +
            (C54348 + C54347 + C54346) * C152187) *
               C152173) *
              C1710 +
          (((C54351 + C54350 + C54349) * C152187 +
            (C55636 + C55637 + C55638) * C152068) *
               C152173 -
           ((C56553 + C56554 + C56555) * C152068 +
            (C55865 + C55864 + C55863) * C152187) *
               C151956) *
              C1711 +
          (((C56555 + C56554 + C56553) * C152187 +
            (C32999 * C45770 + C33000 * C45771 +
             (C31628 * C34345 + C34355 + C34355 + C151791 * C34347) * C45772) *
                C152068) *
               C151956 -
           ((C55639 + C55640 + C55641) * C152068 +
            (C55638 + C55637 + C55636) * C152187) *
               C152173) *
              C152224) *
         C151823) /
            (p * q * std::sqrt(p + q));
    d2ee[197] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             (((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
                C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
                C6086 * C160) *
                   C152080 * C152187 +
               (C6089 * C341 + C6099 + C6099 + C6084 * C365 + C6091 * C340 +
                C6100 + C6100 + C6085 * C364 + C6093 * C339 + C6101 + C6101 +
                C6086 * C363) *
                   C152080 * C152068) *
                  C151869 * C151851 * C129 -
              ((C6093 * C338 + C6102 + C6102 + C6086 * C362 + C6091 * C339 +
                C6103 + C6103 + C6085 * C363 + C6089 * C340 + C6104 + C6104 +
                C6084 * C364) *
                   C152080 * C152068 +
               (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
                C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
                C6084 * C159) *
                   C152080 * C152187) *
                  C151869 * C151851 * C130 +
              ((C6089 * C144 + C6108 + C6108 + C6084 * C160 + C6091 * C145 +
                C6109 + C6109 + C6085 * C161 + C6093 * C146 + C6110 + C6110 +
                C6086 * C162) *
                   C152080 * C152187 +
               (C6089 * C339 + C6111 + C6111 + C6084 * C363 + C6091 * C338 +
                C6112 + C6112 + C6085 * C362 + C6093 * C346 + C6113 + C6113 +
                C6086 * C370) *
                   C152080 * C152068) *
                  C151869 * C151851 * C131 -
              ((C6093 * C348 + C6114 + C6114 + C6086 * C372 + C6091 * C346 +
                C6115 + C6115 + C6085 * C370 + C6089 * C338 + C6116 + C6116 +
                C6084 * C362) *
                   C152080 * C152068 +
               (C6093 * C147 + C6117 + C6117 + C6086 * C163 + C6091 * C146 +
                C6118 + C6118 + C6085 * C162 + C6089 * C145 + C6119 + C6119 +
                C6084 * C161) *
                   C152080 * C152187) *
                  C151869 * C151851 * C132 +
              ((C6089 * C146 + C6120 + C6120 + C6084 * C162 + C6091 * C147 +
                C6121 + C6121 + C6085 * C163 + C6093 * C148 + C6122 + C6122 +
                C6086 * C164) *
                   C152080 * C152187 +
               (C6089 * C346 + C6123 + C6123 + C6084 * C370 + C6091 * C348 +
                C6124 + C6124 + C6085 * C372 + C6093 * C743 + C6125 + C6125 +
                C6086 * C745) *
                   C152080 * C152068) *
                  C151869 * C151851 * C133) +
         std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
                 C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
                 C6086 * C160) *
                    C152080 * C152187 +
                (C6434 + C6435 + C6436) * C152080 * C152068) *
                   C151869 * C152258 -
               ((C6437 + C6438 + C6439) * C152080 * C152068 +
                (C6436 + C6435 + C6434) * C152080 * C152187) *
                   C151869 * C152244 +
               ((C6439 + C6438 + C6437) * C152080 * C152187 +
                (C6089 * C1356 + C6359 + C6359 + C6084 * C1372 + C6091 * C1355 +
                 C6360 + C6360 + C6085 * C1371 + C6093 * C1354 + C6361 + C6361 +
                 C6086 * C1370) *
                    C152080 * C152068) *
                   C151869 * C152214) *
                  C335 +
              (((C6440 + C6441 + C6442) * C152080 * C152187 +
                (C6443 + C6444 + C6445) * C152080 * C152068) *
                   C151869 * C152244 -
               ((C6442 + C6441 + C6440) * C152080 * C152068 +
                (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
                 C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
                 C6084 * C159) *
                    C152080 * C152187) *
                   C151869 * C152258 -
               ((C6093 * C1353 + C6377 + C6377 + C6086 * C1369 + C6091 * C1354 +
                 C6378 + C6378 + C6085 * C1370 + C6089 * C1355 + C6379 + C6379 +
                 C6084 * C1371) *
                    C152080 * C152068 +
                (C6445 + C6444 + C6443) * C152080 * C152187) *
                   C151869 * C152214) *
                  C336 +
              (((C6089 * C144 + C6108 + C6108 + C6084 * C160 + C6091 * C145 +
                 C6109 + C6109 + C6085 * C161 + C6093 * C146 + C6110 + C6110 +
                 C6086 * C162) *
                    C152080 * C152187 +
                (C6446 + C6447 + C6448) * C152080 * C152068) *
                   C151869 * C152258 -
               ((C6449 + C6450 + C6451) * C152080 * C152068 +
                (C6448 + C6447 + C6446) * C152080 * C152187) *
                   C151869 * C152244 +
               ((C6451 + C6450 + C6449) * C152080 * C152187 +
                (C6089 * C1354 + C6395 + C6395 + C6084 * C1370 + C6091 * C1353 +
                 C6396 + C6396 + C6085 * C1369 + C6093 * C1715 + C6397 + C6397 +
                 C6086 * C1717) *
                    C152080 * C152068) *
                   C151869 * C152214) *
                  C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
             C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
             C6086 * C160) *
                C152080 * C152187 +
            (C6434 + C6435 + C6436) * C152080 * C152068) *
               C152259 -
           ((C6093 * C1085 + C6670 + C6670 + C6086 * C1097 + C6091 * C1084 +
             C6671 + C6671 + C6085 * C1096 + C6089 * C1083 + C6672 + C6672 +
             C6084 * C1095) *
                C152080 * C152068 +
            (C6093 * C548 + C6673 + C6673 + C6086 * C572 + C6091 * C549 +
             C6674 + C6674 + C6085 * C573 + C6089 * C550 + C6675 + C6675 +
             C6084 * C574) *
                C152080 * C152187) *
               C152246 +
           ((C6089 * C551 + C6676 + C6676 + C6084 * C575 + C6091 * C552 +
             C6677 + C6677 + C6085 * C576 + C6093 * C553 + C6678 + C6678 +
             C6086 * C577) *
                C152080 * C152187 +
            (C6089 * C1534 + C6679 + C6679 + C6084 * C1558 + C6091 * C1533 +
             C6680 + C6680 + C6085 * C1557 + C6093 * C1532 + C6681 + C6681 +
             C6086 * C1556) *
                C152080 * C152068) *
               C152217) *
              C151851 * C335 +
          (((C6089 * C549 + C6682 + C6682 + C6084 * C573 + C6091 * C548 +
             C6683 + C6683 + C6085 * C572 + C6093 * C547 + C6684 + C6684 +
             C6086 * C571) *
                C152080 * C152187 +
            (C6089 * C1084 + C6685 + C6685 + C6084 * C1096 + C6091 * C1085 +
             C6686 + C6686 + C6085 * C1097 + C6093 * C1086 + C6687 + C6687 +
             C6086 * C1098) *
                C152080 * C152068) *
               C152246 -
           ((C6442 + C6441 + C6440) * C152080 * C152068 +
            (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
             C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
             C6084 * C159) *
                C152080 * C152187) *
               C152259 -
           ((C6093 * C1531 + C6688 + C6688 + C6086 * C1555 + C6091 * C1532 +
             C6689 + C6689 + C6085 * C1556 + C6089 * C1533 + C6690 + C6690 +
             C6084 * C1557) *
                C152080 * C152068 +
            (C6093 * C554 + C6691 + C6691 + C6086 * C578 + C6091 * C553 +
             C6692 + C6692 + C6085 * C577 + C6089 * C552 + C6693 + C6693 +
             C6084 * C576) *
                C152080 * C152187) *
               C152217) *
              C151851 * C336 +
          (((C6089 * C144 + C6108 + C6108 + C6084 * C160 + C6091 * C145 +
             C6109 + C6109 + C6085 * C161 + C6093 * C146 + C6110 + C6110 +
             C6086 * C162) *
                C152080 * C152187 +
            (C6446 + C6447 + C6448) * C152080 * C152068) *
               C152259 -
           ((C6093 * C1087 + C6694 + C6694 + C6086 * C1099 + C6091 * C1086 +
             C6695 + C6695 + C6085 * C1098 + C6089 * C1085 + C6696 + C6696 +
             C6084 * C1097) *
                C152080 * C152068 +
            (C6093 * C555 + C6697 + C6697 + C6086 * C579 + C6091 * C547 +
             C6698 + C6698 + C6085 * C571 + C6089 * C548 + C6699 + C6699 +
             C6084 * C572) *
                C152080 * C152187) *
               C152246 +
           ((C6089 * C553 + C6700 + C6700 + C6084 * C577 + C6091 * C554 +
             C6701 + C6701 + C6085 * C578 + C6093 * C556 + C6702 + C6702 +
             C6086 * C580) *
                C152080 * C152187 +
            (C6089 * C1532 + C6703 + C6703 + C6084 * C1556 + C6091 * C1531 +
             C6704 + C6704 + C6085 * C1555 + C6093 * C2677 + C6705 + C6705 +
             C6086 * C2679) *
                C152080 * C152068) *
               C152217) *
              C151851 * C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
             C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
             C6086 * C160) *
                C152080 * C152187 +
            (C6434 + C6435 + C6436) * C152080 * C152068) *
               C151869 * C1259 -
           ((C6437 + C6438 + C6439) * C152080 * C152068 +
            (C6436 + C6435 + C6434) * C152080 * C152187) *
               C151869 * C1260 +
           ((C6439 + C6438 + C6437) * C152080 * C152187 +
            (C6089 * C1356 + C6359 + C6359 + C6084 * C1372 + C6091 * C1355 +
             C6360 + C6360 + C6085 * C1371 + C6093 * C1354 + C6361 + C6361 +
             C6086 * C1370) *
                C152080 * C152068) *
               C151869 * C152214) *
              C152255 +
          (((C6440 + C6441 + C6442) * C152080 * C152187 +
            (C6443 + C6444 + C6445) * C152080 * C152068) *
               C151869 * C1260 -
           ((C6442 + C6441 + C6440) * C152080 * C152068 +
            (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
             C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
             C6084 * C159) *
                C152080 * C152187) *
               C151869 * C1259 -
           ((C6093 * C1353 + C6377 + C6377 + C6086 * C1369 + C6091 * C1354 +
             C6378 + C6378 + C6085 * C1370 + C6089 * C1355 + C6379 + C6379 +
             C6084 * C1371) *
                C152080 * C152068 +
            (C6445 + C6444 + C6443) * C152080 * C152187) *
               C151869 * C152214) *
              C152240 +
          (((C6089 * C144 + C6108 + C6108 + C6084 * C160 + C6091 * C145 +
             C6109 + C6109 + C6085 * C161 + C6093 * C146 + C6110 + C6110 +
             C6086 * C162) *
                C152080 * C152187 +
            (C6446 + C6447 + C6448) * C152080 * C152068) *
               C151869 * C1259 -
           ((C6449 + C6450 + C6451) * C152080 * C152068 +
            (C6448 + C6447 + C6446) * C152080 * C152187) *
               C151869 * C1260 +
           ((C6451 + C6450 + C6449) * C152080 * C152187 +
            (C6089 * C1354 + C6395 + C6395 + C6084 * C1370 + C6091 * C1353 +
             C6396 + C6396 + C6085 * C1369 + C6093 * C1715 + C6397 + C6397 +
             C6086 * C1717) *
                C152080 * C152068) *
               C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 + C6097 +
            C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
            C6086 * C160) *
               C152080 * C152187 +
           (C6434 + C6435 + C6436) * C152080 * C152068) *
              C151869 * C1347 -
          ((C6437 + C6438 + C6439) * C152080 * C152068 +
           (C6436 + C6435 + C6434) * C152080 * C152187) *
              C151869 * C1348 +
          ((C6439 + C6438 + C6437) * C152080 * C152187 +
           (C7841 + C7842 + C7843) * C152080 * C152068) *
              C151869 * C1349 -
          ((C7844 + C7845 + C7846) * C152080 * C152068 +
           (C7843 + C7842 + C7841) * C152080 * C152187) *
              C151869 * C1350 +
          ((C7846 + C7845 + C7844) * C152080 * C152187 +
           (C6089 * C7801 + C7826 + C7826 + C6084 * C7807 + C6091 * C7802 +
            C7827 + C7827 + C6085 * C7808 + C6093 * C7803 + C7828 + C7828 +
            C6086 * C7809) *
               C152080 * C152068) *
              C151869 * C1351) *
         C151823) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
             C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
             C6086 * C160) *
                C152080 * C152187 +
            (C6434 + C6435 + C6436) * C152080 * C152068) *
               C152259 -
           ((C7453 + C7454 + C7455) * C152080 * C152068 +
            (C6093 * C548 + C6673 + C6673 + C6086 * C572 + C6091 * C549 +
             C6674 + C6674 + C6085 * C573 + C6089 * C550 + C6675 + C6675 +
             C6084 * C574) *
                C152080 * C152187) *
               C152246 +
           ((C6089 * C551 + C6676 + C6676 + C6084 * C575 + C6091 * C552 +
             C6677 + C6677 + C6085 * C576 + C6093 * C553 + C6678 + C6678 +
             C6086 * C577) *
                C152080 * C152187 +
            (C8119 + C8120 + C8121) * C152080 * C152068) *
               C152217) *
              C1259 +
          (((C7455 + C7454 + C7453) * C152080 * C152187 +
            (C8122 + C8123 + C8124) * C152080 * C152068) *
               C152246 -
           ((C6437 + C6438 + C6439) * C152080 * C152068 +
            (C6436 + C6435 + C6434) * C152080 * C152187) *
               C152259 -
           ((C8125 + C8126 + C8127) * C152080 * C152068 +
            (C8121 + C8120 + C8119) * C152080 * C152187) *
               C152217) *
              C1260 +
          (((C6439 + C6438 + C6437) * C152080 * C152187 +
            (C7841 + C7842 + C7843) * C152080 * C152068) *
               C152259 -
           ((C6093 * C2055 + C8095 + C8095 + C6086 * C2063 + C6091 * C2054 +
             C8096 + C8096 + C6085 * C2062 + C6089 * C2053 + C8097 + C8097 +
             C6084 * C2061) *
                C152080 * C152068 +
            (C8124 + C8123 + C8122) * C152080 * C152187) *
               C152246 +
           ((C8127 + C8126 + C8125) * C152080 * C152187 +
            (C6089 * C8064 + C8098 + C8098 + C6084 * C8070 + C6091 * C8065 +
             C8099 + C8099 + C6085 * C8071 + C6093 * C8066 + C8100 + C8100 +
             C6086 * C8072) *
                C152080 * C152068) *
               C152217) *
              C152214) *
         C151823) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152080 *
               C31624 +
           (C31628 * C341 + C31632 + C31632 + C151791 * C365) * C152080 *
               C31625 +
           (C31628 * C342 + C31633 + C31633 + C151791 * C366) * C152080 *
               C31626 +
           (C31628 * C1356 + C31634 + C31634 + C151791 * C1372) * C152080 *
               C31627) *
              C151869 * C151851 * C129 -
          ((C31628 * C1355 + C31635 + C31635 + C151791 * C1371) * C152080 *
               C31627 +
           (C31628 * C343 + C31636 + C31636 + C151791 * C367) * C152080 *
               C31626 +
           (C31628 * C340 + C31637 + C31637 + C151791 * C364) * C152080 *
               C31625 +
           (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152080 *
               C31624) *
              C151869 * C151851 * C130 +
          ((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C152080 *
               C31624 +
           (C31628 * C339 + C31640 + C31640 + C151791 * C363) * C152080 *
               C31625 +
           (C31628 * C344 + C31641 + C31641 + C151791 * C368) * C152080 *
               C31626 +
           (C31628 * C1354 + C31642 + C31642 + C151791 * C1370) * C152080 *
               C31627) *
              C151869 * C151851 * C131 -
          ((C31628 * C1353 + C31643 + C31643 + C151791 * C1369) * C152080 *
               C31627 +
           (C31628 * C345 + C31644 + C31644 + C151791 * C369) * C152080 *
               C31626 +
           (C31628 * C338 + C31645 + C31645 + C151791 * C362) * C152080 *
               C31625 +
           (C31628 * C145 + C31646 + C31646 + C151791 * C161) * C152080 *
               C31624) *
              C151869 * C151851 * C132 +
          ((C31628 * C146 + C31647 + C31647 + C151791 * C162) * C152080 *
               C31624 +
           (C31628 * C346 + C31648 + C31648 + C151791 * C370) * C152080 *
               C31625 +
           (C31628 * C347 + C31649 + C31649 + C151791 * C371) * C152080 *
               C31626 +
           (C31628 * C1715 + C31650 + C31650 + C151791 * C1717) * C152080 *
               C31627) *
              C151869 * C151851 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152080 *
                C31624 +
            C31863 * C31625 + C31864 * C31626 + C31865 * C31627) *
               C151869 * C152258 -
           (C31866 * C31627 + C31865 * C31626 + C31864 * C31625 +
            C31863 * C31624) *
               C151869 * C152244 +
           (C31864 * C31624 + C31865 * C31625 + C31866 * C31626 +
            (C31628 * C7801 + C31806 + C31806 + C151791 * C7807) * C152080 *
                C31627) *
               C151869 * C152214) *
              C335 +
          ((C31867 * C31624 + C31868 * C31625 + C31869 * C31626 +
            C31870 * C31627) *
               C151869 * C152244 -
           (C31869 * C31627 + C31868 * C31626 + C31867 * C31625 +
            (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152080 *
                C31624) *
               C151869 * C152258 -
           ((C31628 * C7802 + C31816 + C31816 + C151791 * C7808) * C152080 *
                C31627 +
            C31870 * C31626 + C31869 * C31625 + C31868 * C31624) *
               C151869 * C152214) *
              C336 +
          (((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C152080 *
                C31624 +
            C31871 * C31625 + C31872 * C31626 + C31873 * C31627) *
               C151869 * C152258 -
           (C31874 * C31627 + C31873 * C31626 + C31872 * C31625 +
            C31871 * C31624) *
               C151869 * C152244 +
           (C31872 * C31624 + C31873 * C31625 + C31874 * C31626 +
            (C31628 * C7803 + C31826 + C31826 + C151791 * C7809) * C152080 *
                C31627) *
               C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152080 *
                C31624 +
            C31863 * C31625 + C31864 * C31626 + C31865 * C31627) *
               C152259 -
           ((C31628 * C2053 + C32021 + C32021 + C151791 * C2061) * C152080 *
                C31627 +
            (C31628 * C1538 + C32022 + C32022 + C151791 * C1562) * C152080 *
                C31626 +
            (C31628 * C1083 + C32023 + C32023 + C151791 * C1095) * C152080 *
                C31625 +
            (C31628 * C550 + C32024 + C32024 + C151791 * C574) * C152080 *
                C31624) *
               C152246 +
           ((C31628 * C551 + C32025 + C32025 + C151791 * C575) * C152080 *
                C31624 +
            (C31628 * C1534 + C32026 + C32026 + C151791 * C1558) * C152080 *
                C31625 +
            (C31628 * C1539 + C32027 + C32027 + C151791 * C1563) * C152080 *
                C31626 +
            (C31628 * C8064 + C32028 + C32028 + C151791 * C8070) * C152080 *
                C31627) *
               C152217) *
              C151851 * C335 +
          (((C31628 * C549 + C32029 + C32029 + C151791 * C573) * C152080 *
                C31624 +
            (C31628 * C1084 + C32030 + C32030 + C151791 * C1096) * C152080 *
                C31625 +
            (C31628 * C1537 + C32031 + C32031 + C151791 * C1561) * C152080 *
                C31626 +
            (C31628 * C2054 + C32032 + C32032 + C151791 * C2062) * C152080 *
                C31627) *
               C152246 -
           (C31869 * C31627 + C31868 * C31626 + C31867 * C31625 +
            (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152080 *
                C31624) *
               C152259 -
           ((C31628 * C8065 + C32033 + C32033 + C151791 * C8071) * C152080 *
                C31627 +
            (C31628 * C1540 + C32034 + C32034 + C151791 * C1564) * C152080 *
                C31626 +
            (C31628 * C1533 + C32035 + C32035 + C151791 * C1557) * C152080 *
                C31625 +
            (C31628 * C552 + C32036 + C32036 + C151791 * C576) * C152080 *
                C31624) *
               C152217) *
              C151851 * C336 +
          (((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C152080 *
                C31624 +
            C31871 * C31625 + C31872 * C31626 + C31873 * C31627) *
               C152259 -
           ((C31628 * C2055 + C32037 + C32037 + C151791 * C2063) * C152080 *
                C31627 +
            (C31628 * C1536 + C32038 + C32038 + C151791 * C1560) * C152080 *
                C31626 +
            (C31628 * C1085 + C32039 + C32039 + C151791 * C1097) * C152080 *
                C31625 +
            (C31628 * C548 + C32040 + C32040 + C151791 * C572) * C152080 *
                C31624) *
               C152246 +
           ((C31628 * C553 + C32041 + C32041 + C151791 * C577) * C152080 *
                C31624 +
            (C31628 * C1532 + C32042 + C32042 + C151791 * C1556) * C152080 *
                C31625 +
            (C31628 * C1541 + C32043 + C32043 + C151791 * C1565) * C152080 *
                C31626 +
            (C31628 * C8066 + C32044 + C32044 + C151791 * C8072) * C152080 *
                C31627) *
               C152217) *
              C151851 * C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152080 *
                C31624 +
            C31863 * C31625 + C31864 * C31626 + C31865 * C31627) *
               C151869 * C1259 -
           (C31866 * C31627 + C31865 * C31626 + C31864 * C31625 +
            C31863 * C31624) *
               C151869 * C1260 +
           (C31864 * C31624 + C31865 * C31625 + C31866 * C31626 +
            (C31628 * C7801 + C31806 + C31806 + C151791 * C7807) * C152080 *
                C31627) *
               C151869 * C152214) *
              C152255 +
          ((C31867 * C31624 + C31868 * C31625 + C31869 * C31626 +
            C31870 * C31627) *
               C151869 * C1260 -
           (C31869 * C31627 + C31868 * C31626 + C31867 * C31625 +
            (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152080 *
                C31624) *
               C151869 * C1259 -
           ((C31628 * C7802 + C31816 + C31816 + C151791 * C7808) * C152080 *
                C31627 +
            C31870 * C31626 + C31869 * C31625 + C31868 * C31624) *
               C151869 * C152214) *
              C152240 +
          (((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C152080 *
                C31624 +
            C31871 * C31625 + C31872 * C31626 + C31873 * C31627) *
               C151869 * C1259 -
           (C31874 * C31627 + C31873 * C31626 + C31872 * C31625 +
            C31871 * C31624) *
               C151869 * C1260 +
           (C31872 * C31624 + C31873 * C31625 + C31874 * C31626 +
            (C31628 * C7803 + C31826 + C31826 + C151791 * C7809) * C152080 *
                C31627) *
               C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152080 *
               C31624 +
           C31863 * C31625 + C31864 * C31626 + C31865 * C31627) *
              C151869 * C1347 -
          (C31866 * C31627 + C31865 * C31626 + C31864 * C31625 +
           C31863 * C31624) *
              C151869 * C1348 +
          (C31864 * C31624 + C31865 * C31625 + C31866 * C31626 +
           C32822 * C31627) *
              C151869 * C1349 -
          (C32823 * C31627 + C32822 * C31626 + C31866 * C31625 +
           C31865 * C31624) *
              C151869 * C1350 +
          (C31866 * C31624 + C32822 * C31625 + C32823 * C31626 +
           (C31628 * C32806 + C32815 + C32815 + C151791 * C32808) * C152080 *
               C31627) *
              C151869 * C1351) *
         C151823) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152080 *
                C31624 +
            C31863 * C31625 + C31864 * C31626 + C31865 * C31627) *
               C152259 -
           (C32570 * C31627 + C32571 * C31626 + C32572 * C31625 +
            (C31628 * C550 + C32024 + C32024 + C151791 * C574) * C152080 *
                C31624) *
               C152246 +
           ((C31628 * C551 + C32025 + C32025 + C151791 * C575) * C152080 *
                C31624 +
            C33001 * C31625 + C33002 * C31626 + C33003 * C31627) *
               C152217) *
              C1259 +
          ((C32572 * C31624 + C32571 * C31625 + C32570 * C31626 +
            C33004 * C31627) *
               C152246 -
           (C31866 * C31627 + C31865 * C31626 + C31864 * C31625 +
            C31863 * C31624) *
               C152259 -
           (C33005 * C31627 + C33003 * C31626 + C33002 * C31625 +
            C33001 * C31624) *
               C152217) *
              C1260 +
          ((C31864 * C31624 + C31865 * C31625 + C31866 * C31626 +
            C32822 * C31627) *
               C152259 -
           ((C31628 * C25783 + C32984 + C32984 + C151791 * C25787) * C152080 *
                C31627 +
            C33004 * C31626 + C32570 * C31625 + C32571 * C31624) *
               C152246 +
           (C33002 * C31624 + C33003 * C31625 + C33005 * C31626 +
            (C31628 * C32969 + C32985 + C32985 + C151791 * C32971) * C152080 *
                C31627) *
               C152217) *
              C152214) *
         C151823) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C45770 +
            C37949 * C45771 + C37950 * C45772) *
               C152187 +
           (C31851 * C45770 + C32563 * C45771 + C32996 * C45772) * C152068) *
              C151869 * C151851 * C129 -
          ((C34078 * C45772 + C32564 * C45771 + C31855 * C45770) * C152068 +
           (C37952 * C45772 + C37951 * C45771 +
            (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C45770) *
               C152187) *
              C151869 * C151851 * C130 +
          (((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C45770 +
            C37953 * C45771 + C37956 * C45772) *
               C152187 +
           (C31859 * C45770 + C32569 * C45771 + C37955 * C45772) * C152068) *
              C151869 * C151851 * C131 -
          (((C31628 * C1531 + C38362 + C38362 + C151791 * C1555) * C45772 +
            C38161 * C45771 + C32188 * C45770) *
               C152068 +
           ((C31628 * C554 + C38361 + C38361 + C151791 * C578) * C45772 +
            C38366 * C45771 +
            (C31628 * C145 + C31646 + C31646 + C151791 * C161) * C45770) *
               C152187) *
              C151869 * C151851 * C132 +
          (((C31628 * C146 + C31647 + C31647 + C151791 * C162) * C45770 +
            (C31628 * C555 + C37454 + C37454 + C151791 * C579) * C45771 +
            (C31628 * C556 + C54126 + C54126 + C151791 * C580) * C45772) *
               C152187 +
           ((C31628 * C346 + C31648 + C31648 + C151791 * C370) * C45770 +
            (C31628 * C1087 + C37455 + C37455 + C151791 * C1099) * C45771 +
            (C31628 * C2677 + C54127 + C54127 + C151791 * C2679) * C45772) *
               C152068) *
              C151869 * C151851 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C45770 +
             C37949 * C45771 + C37950 * C45772) *
                C152187 +
            (C54346 + C54347 + C54348) * C152068) *
               C151869 * C152258 -
           ((C54349 + C54350 + C54351) * C152068 +
            (C54348 + C54347 + C54346) * C152187) *
               C151869 * C152244 +
           ((C54351 + C54350 + C54349) * C152187 +
            (C31853 * C45770 + C32561 * C45771 + C32998 * C45772) * C152068) *
               C151869 * C152214) *
              C335 +
          (((C54352 + C54353 + C54354) * C152187 +
            (C54355 + C54356 + C54357) * C152068) *
               C151869 * C152244 -
           ((C54354 + C54353 + C54352) * C152068 +
            (C37952 * C45772 + C37951 * C45771 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C45770) *
                C152187) *
               C151869 * C152258 -
           ((C34076 * C45772 + C32566 * C45771 + C31857 * C45770) * C152068 +
            (C54357 + C54356 + C54355) * C152187) *
               C151869 * C152214) *
              C336 +
          ((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C45770 +
             C37953 * C45771 + C37956 * C45772) *
                C152187 +
            (C54358 + C54359 + C54360) * C152068) *
               C151869 * C152258 -
           ((C54361 + C54362 + C54363) * C152068 +
            (C54360 + C54359 + C54358) * C152187) *
               C151869 * C152244 +
           ((C54363 + C54362 + C54361) * C152187 +
            (C31861 * C45770 + C32567 * C45771 +
             (C31628 * C8066 + C32044 + C32044 + C151791 * C8072) * C45772) *
                C152068) *
               C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C45770 +
             C37949 * C45771 + C37950 * C45772) *
                C152187 +
            (C54346 + C54347 + C54348) * C152068) *
               C152259 -
           ((C34364 * C45772 + C32996 * C45771 + C32563 * C45770) * C152068 +
            (C40513 * C45772 + C37950 * C45771 + C37949 * C45770) * C152187) *
               C152246 +
           ((C37950 * C45770 + C40513 * C45771 + C40516 * C45772) * C152187 +
            (C32996 * C45770 + C34364 * C45771 + C40515 * C45772) * C152068) *
               C152217) *
              C151851 * C335 +
          (((C37951 * C45770 + C37952 * C45771 + C41022 * C45772) * C152187 +
            (C32564 * C45770 + C34078 * C45771 + C40818 * C45772) * C152068) *
               C152246 -
           ((C54354 + C54353 + C54352) * C152068 +
            (C37952 * C45772 + C37951 * C45771 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C45770) *
                C152187) *
               C152259 -
           (((C31628 * C9427 + C41018 + C41018 + C151791 * C9433) * C45772 +
             C40818 * C45771 + C34078 * C45770) *
                C152068 +
            ((C31628 * C2456 + C41017 + C41017 + C151791 * C2472) * C45772 +
             C41022 * C45771 + C37952 * C45770) *
                C152187) *
               C152217) *
              C151851 * C336 +
          ((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C45770 +
             C37953 * C45771 + C37956 * C45772) *
                C152187 +
            (C54358 + C54359 + C54360) * C152068) *
               C152259 -
           ((C54592 * C45772 + C37955 * C45771 + C32569 * C45770) * C152068 +
            (C54593 * C45772 + C37956 * C45771 + C37953 * C45770) * C152187) *
               C152246 +
           ((C37956 * C45770 + C54593 * C45771 +
             (C31628 * C2457 + C54586 + C54586 + C151791 * C2473) * C45772) *
                C152187 +
            (C37955 * C45770 + C54592 * C45771 +
             (C31628 * C9428 + C54587 + C54587 + C151791 * C9434) * C45772) *
                C152068) *
               C152217) *
              C151851 * C152208)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C45770 +
             C37949 * C45771 + C37950 * C45772) *
                C152187 +
            (C54346 + C54347 + C54348) * C152068) *
               C151869 * C1259 -
           ((C54349 + C54350 + C54351) * C152068 +
            (C54348 + C54347 + C54346) * C152187) *
               C151869 * C1260 +
           ((C54351 + C54350 + C54349) * C152187 +
            (C31853 * C45770 + C32561 * C45771 + C32998 * C45772) * C152068) *
               C151869 * C152214) *
              C152255 +
          (((C54352 + C54353 + C54354) * C152187 +
            (C54355 + C54356 + C54357) * C152068) *
               C151869 * C1260 -
           ((C54354 + C54353 + C54352) * C152068 +
            (C37952 * C45772 + C37951 * C45771 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C45770) *
                C152187) *
               C151869 * C1259 -
           ((C34076 * C45772 + C32566 * C45771 + C31857 * C45770) * C152068 +
            (C54357 + C54356 + C54355) * C152187) *
               C151869 * C152214) *
              C152240 +
          ((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C45770 +
             C37953 * C45771 + C37956 * C45772) *
                C152187 +
            (C54358 + C54359 + C54360) * C152068) *
               C151869 * C1259 -
           ((C54361 + C54362 + C54363) * C152068 +
            (C54360 + C54359 + C54358) * C152187) *
               C151869 * C1260 +
           ((C54363 + C54362 + C54361) * C152187 +
            (C31861 * C45770 + C32567 * C45771 +
             (C31628 * C8066 + C32044 + C32044 + C151791 * C8072) * C45772) *
                C152068) *
               C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C45770 +
            C37949 * C45771 + C37950 * C45772) *
               C152187 +
           (C54346 + C54347 + C54348) * C152068) *
              C151869 * C1347 -
          ((C54349 + C54350 + C54351) * C152068 +
           (C54348 + C54347 + C54346) * C152187) *
              C151869 * C1348 +
          ((C54351 + C54350 + C54349) * C152187 +
           (C55636 + C55637 + C55638) * C152068) *
              C151869 * C1349 -
          ((C55639 + C55640 + C55641) * C152068 +
           (C55638 + C55637 + C55636) * C152187) *
              C151869 * C1350 +
          ((C55641 + C55640 + C55639) * C152187 +
           (C32820 * C45770 + C33482 * C45771 +
            (C31628 * C32969 + C32985 + C32985 + C151791 * C32971) * C45772) *
               C152068) *
              C151869 * C1351) *
         C151823) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C45770 +
             C37949 * C45771 + C37950 * C45772) *
                C152187 +
            (C54346 + C54347 + C54348) * C152068) *
               C152259 -
           ((C55287 + C55288 + C55289) * C152068 +
            (C40513 * C45772 + C37950 * C45771 + C37949 * C45770) * C152187) *
               C152246 +
           ((C37950 * C45770 + C40513 * C45771 + C40516 * C45772) * C152187 +
            (C55860 + C55861 + C55862) * C152068) *
               C152217) *
              C1259 +
          (((C55289 + C55288 + C55287) * C152187 +
            (C55863 + C55864 + C55865) * C152068) *
               C152246 -
           ((C54349 + C54350 + C54351) * C152068 +
            (C54348 + C54347 + C54346) * C152187) *
               C152259 -
           ((C55866 + C55867 + C55868) * C152068 +
            (C55862 + C55861 + C55860) * C152187) *
               C152217) *
              C1260 +
          (((C54351 + C54350 + C54349) * C152187 +
            (C55636 + C55637 + C55638) * C152068) *
               C152259 -
           ((C34362 * C45772 + C32998 * C45771 + C32561 * C45770) * C152068 +
            (C55865 + C55864 + C55863) * C152187) *
               C152246 +
           ((C55868 + C55867 + C55866) * C152187 +
            (C32998 * C45770 + C34362 * C45771 +
             (C31628 * C33857 + C33868 + C33868 + C151791 * C33859) * C45772) *
                C152068) *
               C152217) *
              C152214) *
         C151823) /
            (p * q * std::sqrt(p + q));
    d2ee[198] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
              C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
              C6086 * C160) *
                 C152080 * C152187 +
             (C6434 + C6435 + C6436) * C152080 * C152068) *
                C152173 -
            ((C7453 + C7454 + C7455) * C152080 * C152068 +
             (C6093 * C548 + C6673 + C6673 + C6086 * C572 + C6091 * C549 +
              C6674 + C6674 + C6085 * C573 + C6089 * C550 + C6675 + C6675 +
              C6084 * C574) *
                 C152080 * C152187) *
                C151956) *
               C1259 +
           (((C7455 + C7454 + C7453) * C152080 * C152187 +
             (C8122 + C8123 + C8124) * C152080 * C152068) *
                C151956 -
            ((C6437 + C6438 + C6439) * C152080 * C152068 +
             (C6436 + C6435 + C6434) * C152080 * C152187) *
                C152173) *
               C1260 +
           (((C6439 + C6438 + C6437) * C152080 * C152187 +
             (C7841 + C7842 + C7843) * C152080 * C152068) *
                C152173 -
            ((C6093 * C2055 + C8095 + C8095 + C6086 * C2063 + C6091 * C2054 +
              C8096 + C8096 + C6085 * C2062 + C6089 * C2053 + C8097 + C8097 +
              C6084 * C2061) *
                 C152080 * C152068 +
             (C8124 + C8123 + C8122) * C152080 * C152187) *
                C151956) *
               C152214) *
              C152158 +
          ((((C6089 * C549 + C6682 + C6682 + C6084 * C573 + C6091 * C548 +
              C6683 + C6683 + C6085 * C572 + C6093 * C547 + C6684 + C6684 +
              C6086 * C571) *
                 C152080 * C152187 +
             (C7456 + C7457 + C7458) * C152080 * C152068) *
                C151956 -
            ((C6442 + C6441 + C6440) * C152080 * C152068 +
             (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
              C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
              C6084 * C159) *
                 C152080 * C152187) *
                C152173) *
               C1259 +
           (((C6440 + C6441 + C6442) * C152080 * C152187 +
             (C6443 + C6444 + C6445) * C152080 * C152068) *
                C152173 -
            ((C8645 + C8646 + C8647) * C152080 * C152068 +
             (C7458 + C7457 + C7456) * C152080 * C152187) *
                C151956) *
               C1260 +
           (((C8647 + C8646 + C8645) * C152080 * C152187 +
             (C6089 * C2054 + C8636 + C8636 + C6084 * C2062 + C6091 * C2055 +
              C8637 + C8637 + C6085 * C2063 + C6093 * C2056 + C8638 + C8638 +
              C6086 * C2064) *
                 C152080 * C152068) *
                C151956 -
            ((C8337 + C8338 + C8339) * C152080 * C152068 +
             (C6445 + C6444 + C6443) * C152080 * C152187) *
                C152173) *
               C152214) *
              C151834)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
             C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
             C6086 * C160) *
                C152080 * C152187 +
            (C6434 + C6435 + C6436) * C152080 * C152068) *
               C152173 -
           ((C6093 * C1085 + C6670 + C6670 + C6086 * C1097 + C6091 * C1084 +
             C6671 + C6671 + C6085 * C1096 + C6089 * C1083 + C6672 + C6672 +
             C6084 * C1095) *
                C152080 * C152068 +
            (C6093 * C548 + C6673 + C6673 + C6086 * C572 + C6091 * C549 +
             C6674 + C6674 + C6085 * C573 + C6089 * C550 + C6675 + C6675 +
             C6084 * C574) *
                C152080 * C152187) *
               C151956) *
              C151851 * C739 +
          (((C6089 * C549 + C6682 + C6682 + C6084 * C573 + C6091 * C548 +
             C6683 + C6683 + C6085 * C572 + C6093 * C547 + C6684 + C6684 +
             C6086 * C571) *
                C152080 * C152187 +
            (C6089 * C1084 + C6685 + C6685 + C6084 * C1096 + C6091 * C1085 +
             C6686 + C6686 + C6085 * C1097 + C6093 * C1086 + C6687 + C6687 +
             C6086 * C1098) *
                C152080 * C152068) *
               C151956 -
           ((C6442 + C6441 + C6440) * C152080 * C152068 +
            (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
             C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
             C6084 * C159) *
                C152080 * C152187) *
               C152173) *
              C151851 * C740 +
          (((C6089 * C144 + C6108 + C6108 + C6084 * C160 + C6091 * C145 +
             C6109 + C6109 + C6085 * C161 + C6093 * C146 + C6110 + C6110 +
             C6086 * C162) *
                C152080 * C152187 +
            (C6446 + C6447 + C6448) * C152080 * C152068) *
               C152173 -
           ((C6093 * C1087 + C6694 + C6694 + C6086 * C1099 + C6091 * C1086 +
             C6695 + C6695 + C6085 * C1098 + C6089 * C1085 + C6696 + C6696 +
             C6084 * C1097) *
                C152080 * C152068 +
            (C6093 * C555 + C6697 + C6697 + C6086 * C579 + C6091 * C547 +
             C6698 + C6698 + C6085 * C571 + C6089 * C548 + C6699 + C6699 +
             C6084 * C572) *
                C152080 * C152187) *
               C151956) *
              C151851 * C741 +
          (((C6089 * C547 + C7112 + C7112 + C6084 * C571 + C6091 * C555 +
             C7113 + C7113 + C6085 * C579 + C6093 * C557 + C7114 + C7114 +
             C6086 * C581) *
                C152080 * C152187 +
            (C6089 * C1086 + C7115 + C7115 + C6084 * C1098 + C6091 * C1087 +
             C7116 + C7116 + C6085 * C1099 + C6093 * C1088 + C7117 + C7117 +
             C6086 * C1100) *
                C152080 * C152068) *
               C151956 -
           ((C6917 + C6916 + C6915) * C152080 * C152068 +
            (C6093 * C147 + C6117 + C6117 + C6086 * C163 + C6091 * C146 +
             C6118 + C6118 + C6085 * C162 + C6089 * C145 + C6119 + C6119 +
             C6084 * C161) *
                C152080 * C152187) *
               C152173) *
              C151851 * C152218)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152080 *
                C31624 +
            C31863 * C31625 + C31864 * C31626 + C31865 * C31627) *
               C152173 -
           ((C31628 * C2053 + C32021 + C32021 + C151791 * C2061) * C152080 *
                C31627 +
            (C31628 * C1538 + C32022 + C32022 + C151791 * C1562) * C152080 *
                C31626 +
            (C31628 * C1083 + C32023 + C32023 + C151791 * C1095) * C152080 *
                C31625 +
            (C31628 * C550 + C32024 + C32024 + C151791 * C574) * C152080 *
                C31624) *
               C151956) *
              C151851 * C739 +
          (((C31628 * C549 + C32029 + C32029 + C151791 * C573) * C152080 *
                C31624 +
            (C31628 * C1084 + C32030 + C32030 + C151791 * C1096) * C152080 *
                C31625 +
            (C31628 * C1537 + C32031 + C32031 + C151791 * C1561) * C152080 *
                C31626 +
            (C31628 * C2054 + C32032 + C32032 + C151791 * C2062) * C152080 *
                C31627) *
               C151956 -
           (C31869 * C31627 + C31868 * C31626 + C31867 * C31625 +
            (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152080 *
                C31624) *
               C152173) *
              C151851 * C740 +
          (((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C152080 *
                C31624 +
            C31871 * C31625 + C31872 * C31626 + C31873 * C31627) *
               C152173 -
           ((C31628 * C2055 + C32037 + C32037 + C151791 * C2063) * C152080 *
                C31627 +
            (C31628 * C1536 + C32038 + C32038 + C151791 * C1560) * C152080 *
                C31626 +
            (C31628 * C1085 + C32039 + C32039 + C151791 * C1097) * C152080 *
                C31625 +
            (C31628 * C548 + C32040 + C32040 + C151791 * C572) * C152080 *
                C31624) *
               C151956) *
              C151851 * C741 +
          (((C31628 * C547 + C32324 + C32324 + C151791 * C571) * C152080 *
                C31624 +
            (C31628 * C1086 + C32325 + C32325 + C151791 * C1098) * C152080 *
                C31625 +
            (C31628 * C1535 + C32326 + C32326 + C151791 * C1559) * C152080 *
                C31626 +
            (C31628 * C2056 + C32327 + C32327 + C151791 * C2064) * C152080 *
                C31627) *
               C151956 -
           (C32193 * C31627 + C32192 * C31626 + C32191 * C31625 +
            (C31628 * C145 + C31646 + C31646 + C151791 * C161) * C152080 *
                C31624) *
               C152173) *
              C151851 * C152218)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152080 *
                 C31624 +
             C31863 * C31625 + C31864 * C31626 + C31865 * C31627) *
                C152173 -
            (C32570 * C31627 + C32571 * C31626 + C32572 * C31625 +
             (C31628 * C550 + C32024 + C32024 + C151791 * C574) * C152080 *
                 C31624) *
                C151956) *
               C1259 +
           ((C32572 * C31624 + C32571 * C31625 + C32570 * C31626 +
             C33004 * C31627) *
                C151956 -
            (C31866 * C31627 + C31865 * C31626 + C31864 * C31625 +
             C31863 * C31624) *
                C152173) *
               C1260 +
           ((C31864 * C31624 + C31865 * C31625 + C31866 * C31626 +
             C32822 * C31627) *
                C152173 -
            ((C31628 * C25783 + C32984 + C32984 + C151791 * C25787) * C152080 *
                 C31627 +
             C33004 * C31626 + C32570 * C31625 + C32571 * C31624) *
                C151956) *
               C152214) *
              C152158 +
          ((((C31628 * C549 + C32029 + C32029 + C151791 * C573) * C152080 *
                 C31624 +
             C32573 * C31625 + C32574 * C31626 + C32575 * C31627) *
                C151956 -
            (C31869 * C31627 + C31868 * C31626 + C31867 * C31625 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152080 *
                 C31624) *
                C152173) *
               C1259 +
           ((C31867 * C31624 + C31868 * C31625 + C31869 * C31626 +
             C31870 * C31627) *
                C152173 -
            (C33343 * C31627 + C32575 * C31626 + C32574 * C31625 +
             C32573 * C31624) *
                C151956) *
               C1260 +
           ((C32574 * C31624 + C32575 * C31625 + C33343 * C31626 +
             (C31628 * C25784 + C33339 + C33339 + C151791 * C25788) * C152080 *
                 C31627) *
                C151956 -
            (C33142 * C31627 + C31870 * C31626 + C31869 * C31625 +
             C31868 * C31624) *
                C152173) *
               C152214) *
              C151834)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C45770 +
             C37949 * C45771 + C37950 * C45772) *
                C152187 +
            (C54346 + C54347 + C54348) * C152068) *
               C152173 -
           ((C34364 * C45772 + C32996 * C45771 + C32563 * C45770) * C152068 +
            (C40513 * C45772 + C37950 * C45771 + C37949 * C45770) * C152187) *
               C151956) *
              C151851 * C739 +
          (((C37951 * C45770 + C37952 * C45771 + C41022 * C45772) * C152187 +
            (C32564 * C45770 + C34078 * C45771 + C40818 * C45772) * C152068) *
               C151956 -
           ((C54354 + C54353 + C54352) * C152068 +
            (C37952 * C45772 + C37951 * C45771 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C45770) *
                C152187) *
               C152173) *
              C151851 * C740 +
          ((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C45770 +
             C37953 * C45771 + C37956 * C45772) *
                C152187 +
            (C54358 + C54359 + C54360) * C152068) *
               C152173 -
           ((C54592 * C45772 + C37955 * C45771 + C32569 * C45770) * C152068 +
            (C54593 * C45772 + C37956 * C45771 + C37953 * C45770) * C152187) *
               C151956) *
              C151851 * C741 +
          (((C38366 * C45770 + C54996 * C45771 +
             (C31628 * C2451 + C54992 + C54992 + C151791 * C2467) * C45772) *
                C152187 +
            (C38161 * C45770 + C54794 * C45771 +
             (C31628 * C2958 + C54993 + C54993 + C151791 * C2966) * C45772) *
                C152068) *
               C151956 -
           ((C54795 + C54789 + C54788) * C152068 +
            (C54996 * C45772 + C38366 * C45771 +
             (C31628 * C145 + C31646 + C31646 + C151791 * C161) * C45770) *
                C152187) *
               C152173) *
              C151851 * C152218)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C45770 +
              C37949 * C45771 + C37950 * C45772) *
                 C152187 +
             (C54346 + C54347 + C54348) * C152068) *
                C152173 -
            ((C55287 + C55288 + C55289) * C152068 +
             (C40513 * C45772 + C37950 * C45771 + C37949 * C45770) * C152187) *
                C151956) *
               C1259 +
           (((C55289 + C55288 + C55287) * C152187 +
             (C55863 + C55864 + C55865) * C152068) *
                C151956 -
            ((C54349 + C54350 + C54351) * C152068 +
             (C54348 + C54347 + C54346) * C152187) *
                C152173) *
               C1260 +
           (((C54351 + C54350 + C54349) * C152187 +
             (C55636 + C55637 + C55638) * C152068) *
                C152173 -
            ((C34362 * C45772 + C32998 * C45771 + C32561 * C45770) * C152068 +
             (C55865 + C55864 + C55863) * C152187) *
                C151956) *
               C152214) *
              C152158 +
          ((((C37951 * C45770 + C37952 * C45771 + C41022 * C45772) * C152187 +
             (C55290 + C55291 + C55292) * C152068) *
                C151956 -
            ((C54354 + C54353 + C54352) * C152068 +
             (C37952 * C45772 + C37951 * C45771 +
              (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C45770) *
                 C152187) *
                C152173) *
               C1259 +
           (((C54352 + C54353 + C54354) * C152187 +
             (C54355 + C54356 + C54357) * C152068) *
                C152173 -
            ((C56356 + C56357 + C56358) * C152068 +
             (C55292 + C55291 + C55290) * C152187) *
                C151956) *
               C1260 +
           (((C56358 + C56357 + C56356) * C152187 +
             (C32566 * C45770 + C34076 * C45771 +
              (C31628 * C27086 + C34215 + C34215 + C151791 * C27090) * C45772) *
                 C152068) *
                C151956 -
            ((C56063 + C56064 + C56065) * C152068 +
             (C54357 + C54356 + C54355) * C152187) *
                C152173) *
               C152214) *
              C151834)) /
            (p * q * std::sqrt(p + q));
    d2ee[199] +=
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
             C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
             C6086 * C160) *
                C152080 * C152187 +
            (C6434 + C6435 + C6436) * C152080 * C152068) *
               C151869 * C152258 -
           ((C6437 + C6438 + C6439) * C152080 * C152068 +
            (C6436 + C6435 + C6434) * C152080 * C152187) *
               C151869 * C152244 +
           ((C6439 + C6438 + C6437) * C152080 * C152187 +
            (C6089 * C1356 + C6359 + C6359 + C6084 * C1372 + C6091 * C1355 +
             C6360 + C6360 + C6085 * C1371 + C6093 * C1354 + C6361 + C6361 +
             C6086 * C1370) *
                C152080 * C152068) *
               C151869 * C152214) *
              C335 +
          (((C6440 + C6441 + C6442) * C152080 * C152187 +
            (C6443 + C6444 + C6445) * C152080 * C152068) *
               C151869 * C152244 -
           ((C6442 + C6441 + C6440) * C152080 * C152068 +
            (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
             C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
             C6084 * C159) *
                C152080 * C152187) *
               C151869 * C152258 -
           ((C6093 * C1353 + C6377 + C6377 + C6086 * C1369 + C6091 * C1354 +
             C6378 + C6378 + C6085 * C1370 + C6089 * C1355 + C6379 + C6379 +
             C6084 * C1371) *
                C152080 * C152068 +
            (C6445 + C6444 + C6443) * C152080 * C152187) *
               C151869 * C152214) *
              C336 +
          (((C6089 * C144 + C6108 + C6108 + C6084 * C160 + C6091 * C145 +
             C6109 + C6109 + C6085 * C161 + C6093 * C146 + C6110 + C6110 +
             C6086 * C162) *
                C152080 * C152187 +
            (C6446 + C6447 + C6448) * C152080 * C152068) *
               C151869 * C152258 -
           ((C6449 + C6450 + C6451) * C152080 * C152068 +
            (C6448 + C6447 + C6446) * C152080 * C152187) *
               C151869 * C152244 +
           ((C6451 + C6450 + C6449) * C152080 * C152187 +
            (C6089 * C1354 + C6395 + C6395 + C6084 * C1370 + C6091 * C1353 +
             C6396 + C6396 + C6085 * C1369 + C6093 * C1715 + C6397 + C6397 +
             C6086 * C1717) *
                C152080 * C152068) *
               C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 + C6097 +
            C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
            C6086 * C160) *
               C152080 * C152187 +
           (C6089 * C341 + C6099 + C6099 + C6084 * C365 + C6091 * C340 + C6100 +
            C6100 + C6085 * C364 + C6093 * C339 + C6101 + C6101 +
            C6086 * C363) *
               C152080 * C152068) *
              C151869 * C151851 * C129 -
          ((C6093 * C338 + C6102 + C6102 + C6086 * C362 + C6091 * C339 + C6103 +
            C6103 + C6085 * C363 + C6089 * C340 + C6104 + C6104 +
            C6084 * C364) *
               C152080 * C152068 +
           (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 + C6106 +
            C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
            C6084 * C159) *
               C152080 * C152187) *
              C151869 * C151851 * C130 +
          ((C6089 * C144 + C6108 + C6108 + C6084 * C160 + C6091 * C145 + C6109 +
            C6109 + C6085 * C161 + C6093 * C146 + C6110 + C6110 +
            C6086 * C162) *
               C152080 * C152187 +
           (C6089 * C339 + C6111 + C6111 + C6084 * C363 + C6091 * C338 + C6112 +
            C6112 + C6085 * C362 + C6093 * C346 + C6113 + C6113 +
            C6086 * C370) *
               C152080 * C152068) *
              C151869 * C151851 * C131 -
          ((C6093 * C348 + C6114 + C6114 + C6086 * C372 + C6091 * C346 + C6115 +
            C6115 + C6085 * C370 + C6089 * C338 + C6116 + C6116 +
            C6084 * C362) *
               C152080 * C152068 +
           (C6093 * C147 + C6117 + C6117 + C6086 * C163 + C6091 * C146 + C6118 +
            C6118 + C6085 * C162 + C6089 * C145 + C6119 + C6119 +
            C6084 * C161) *
               C152080 * C152187) *
              C151869 * C151851 * C132 +
          ((C6089 * C146 + C6120 + C6120 + C6084 * C162 + C6091 * C147 + C6121 +
            C6121 + C6085 * C163 + C6093 * C148 + C6122 + C6122 +
            C6086 * C164) *
               C152080 * C152187 +
           (C6089 * C346 + C6123 + C6123 + C6084 * C370 + C6091 * C348 + C6124 +
            C6124 + C6085 * C372 + C6093 * C743 + C6125 + C6125 +
            C6086 * C745) *
               C152080 * C152068) *
              C151869 * C151851 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
             C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
             C6086 * C160) *
                C152080 * C152187 +
            (C6434 + C6435 + C6436) * C152080 * C152068) *
               C151869 * C1259 -
           ((C6437 + C6438 + C6439) * C152080 * C152068 +
            (C6436 + C6435 + C6434) * C152080 * C152187) *
               C151869 * C1260 +
           ((C6439 + C6438 + C6437) * C152080 * C152187 +
            (C6089 * C1356 + C6359 + C6359 + C6084 * C1372 + C6091 * C1355 +
             C6360 + C6360 + C6085 * C1371 + C6093 * C1354 + C6361 + C6361 +
             C6086 * C1370) *
                C152080 * C152068) *
               C151869 * C152214) *
              C152255 +
          (((C6440 + C6441 + C6442) * C152080 * C152187 +
            (C6443 + C6444 + C6445) * C152080 * C152068) *
               C151869 * C1260 -
           ((C6442 + C6441 + C6440) * C152080 * C152068 +
            (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
             C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
             C6084 * C159) *
                C152080 * C152187) *
               C151869 * C1259 -
           ((C6093 * C1353 + C6377 + C6377 + C6086 * C1369 + C6091 * C1354 +
             C6378 + C6378 + C6085 * C1370 + C6089 * C1355 + C6379 + C6379 +
             C6084 * C1371) *
                C152080 * C152068 +
            (C6445 + C6444 + C6443) * C152080 * C152187) *
               C151869 * C152214) *
              C152240 +
          (((C6089 * C144 + C6108 + C6108 + C6084 * C160 + C6091 * C145 +
             C6109 + C6109 + C6085 * C161 + C6093 * C146 + C6110 + C6110 +
             C6086 * C162) *
                C152080 * C152187 +
            (C6446 + C6447 + C6448) * C152080 * C152068) *
               C151869 * C1259 -
           ((C6449 + C6450 + C6451) * C152080 * C152068 +
            (C6448 + C6447 + C6446) * C152080 * C152187) *
               C151869 * C1260 +
           ((C6451 + C6450 + C6449) * C152080 * C152187 +
            (C6089 * C1354 + C6395 + C6395 + C6084 * C1370 + C6091 * C1353 +
             C6396 + C6396 + C6085 * C1369 + C6093 * C1715 + C6397 + C6397 +
             C6086 * C1717) *
                C152080 * C152068) *
               C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 + C6097 +
            C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
            C6086 * C160) *
               C152080 * C152187 +
           (C6434 + C6435 + C6436) * C152080 * C152068) *
              C151869 * C1347 -
          ((C6437 + C6438 + C6439) * C152080 * C152068 +
           (C6436 + C6435 + C6434) * C152080 * C152187) *
              C151869 * C1348 +
          ((C6439 + C6438 + C6437) * C152080 * C152187 +
           (C7841 + C7842 + C7843) * C152080 * C152068) *
              C151869 * C1349 -
          ((C7844 + C7845 + C7846) * C152080 * C152068 +
           (C7843 + C7842 + C7841) * C152080 * C152187) *
              C151869 * C1350 +
          ((C7846 + C7845 + C7844) * C152080 * C152187 +
           (C6089 * C7801 + C7826 + C7826 + C6084 * C7807 + C6091 * C7802 +
            C7827 + C7827 + C6085 * C7808 + C6093 * C7803 + C7828 + C7828 +
            C6086 * C7809) *
               C152080 * C152068) *
              C151869 * C1351) *
         C151823) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152080 *
               C31624 +
           (C31628 * C341 + C31632 + C31632 + C151791 * C365) * C152080 *
               C31625 +
           (C31628 * C342 + C31633 + C31633 + C151791 * C366) * C152080 *
               C31626 +
           (C31628 * C1356 + C31634 + C31634 + C151791 * C1372) * C152080 *
               C31627) *
              C151869 * C151851 * C129 -
          ((C31628 * C1355 + C31635 + C31635 + C151791 * C1371) * C152080 *
               C31627 +
           (C31628 * C343 + C31636 + C31636 + C151791 * C367) * C152080 *
               C31626 +
           (C31628 * C340 + C31637 + C31637 + C151791 * C364) * C152080 *
               C31625 +
           (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152080 *
               C31624) *
              C151869 * C151851 * C130 +
          ((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C152080 *
               C31624 +
           (C31628 * C339 + C31640 + C31640 + C151791 * C363) * C152080 *
               C31625 +
           (C31628 * C344 + C31641 + C31641 + C151791 * C368) * C152080 *
               C31626 +
           (C31628 * C1354 + C31642 + C31642 + C151791 * C1370) * C152080 *
               C31627) *
              C151869 * C151851 * C131 -
          ((C31628 * C1353 + C31643 + C31643 + C151791 * C1369) * C152080 *
               C31627 +
           (C31628 * C345 + C31644 + C31644 + C151791 * C369) * C152080 *
               C31626 +
           (C31628 * C338 + C31645 + C31645 + C151791 * C362) * C152080 *
               C31625 +
           (C31628 * C145 + C31646 + C31646 + C151791 * C161) * C152080 *
               C31624) *
              C151869 * C151851 * C132 +
          ((C31628 * C146 + C31647 + C31647 + C151791 * C162) * C152080 *
               C31624 +
           (C31628 * C346 + C31648 + C31648 + C151791 * C370) * C152080 *
               C31625 +
           (C31628 * C347 + C31649 + C31649 + C151791 * C371) * C152080 *
               C31626 +
           (C31628 * C1715 + C31650 + C31650 + C151791 * C1717) * C152080 *
               C31627) *
              C151869 * C151851 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152080 *
                C31624 +
            C31863 * C31625 + C31864 * C31626 + C31865 * C31627) *
               C151869 * C152258 -
           (C31866 * C31627 + C31865 * C31626 + C31864 * C31625 +
            C31863 * C31624) *
               C151869 * C152244 +
           (C31864 * C31624 + C31865 * C31625 + C31866 * C31626 +
            (C31628 * C7801 + C31806 + C31806 + C151791 * C7807) * C152080 *
                C31627) *
               C151869 * C152214) *
              C335 +
          ((C31867 * C31624 + C31868 * C31625 + C31869 * C31626 +
            C31870 * C31627) *
               C151869 * C152244 -
           (C31869 * C31627 + C31868 * C31626 + C31867 * C31625 +
            (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152080 *
                C31624) *
               C151869 * C152258 -
           ((C31628 * C7802 + C31816 + C31816 + C151791 * C7808) * C152080 *
                C31627 +
            C31870 * C31626 + C31869 * C31625 + C31868 * C31624) *
               C151869 * C152214) *
              C336 +
          (((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C152080 *
                C31624 +
            C31871 * C31625 + C31872 * C31626 + C31873 * C31627) *
               C151869 * C152258 -
           (C31874 * C31627 + C31873 * C31626 + C31872 * C31625 +
            C31871 * C31624) *
               C151869 * C152244 +
           (C31872 * C31624 + C31873 * C31625 + C31874 * C31626 +
            (C31628 * C7803 + C31826 + C31826 + C151791 * C7809) * C152080 *
                C31627) *
               C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152080 *
                C31624 +
            C31863 * C31625 + C31864 * C31626 + C31865 * C31627) *
               C151869 * C1259 -
           (C31866 * C31627 + C31865 * C31626 + C31864 * C31625 +
            C31863 * C31624) *
               C151869 * C1260 +
           (C31864 * C31624 + C31865 * C31625 + C31866 * C31626 +
            (C31628 * C7801 + C31806 + C31806 + C151791 * C7807) * C152080 *
                C31627) *
               C151869 * C152214) *
              C152255 +
          ((C31867 * C31624 + C31868 * C31625 + C31869 * C31626 +
            C31870 * C31627) *
               C151869 * C1260 -
           (C31869 * C31627 + C31868 * C31626 + C31867 * C31625 +
            (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152080 *
                C31624) *
               C151869 * C1259 -
           ((C31628 * C7802 + C31816 + C31816 + C151791 * C7808) * C152080 *
                C31627 +
            C31870 * C31626 + C31869 * C31625 + C31868 * C31624) *
               C151869 * C152214) *
              C152240 +
          (((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C152080 *
                C31624 +
            C31871 * C31625 + C31872 * C31626 + C31873 * C31627) *
               C151869 * C1259 -
           (C31874 * C31627 + C31873 * C31626 + C31872 * C31625 +
            C31871 * C31624) *
               C151869 * C1260 +
           (C31872 * C31624 + C31873 * C31625 + C31874 * C31626 +
            (C31628 * C7803 + C31826 + C31826 + C151791 * C7809) * C152080 *
                C31627) *
               C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152080 *
               C31624 +
           C31863 * C31625 + C31864 * C31626 + C31865 * C31627) *
              C151869 * C1347 -
          (C31866 * C31627 + C31865 * C31626 + C31864 * C31625 +
           C31863 * C31624) *
              C151869 * C1348 +
          (C31864 * C31624 + C31865 * C31625 + C31866 * C31626 +
           C32822 * C31627) *
              C151869 * C1349 -
          (C32823 * C31627 + C32822 * C31626 + C31866 * C31625 +
           C31865 * C31624) *
              C151869 * C1350 +
          (C31866 * C31624 + C32822 * C31625 + C32823 * C31626 +
           (C31628 * C32806 + C32815 + C32815 + C151791 * C32808) * C152080 *
               C31627) *
              C151869 * C1351) *
         C151823) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C45770 +
            C37949 * C45771 + C37950 * C45772) *
               C152187 +
           (C31851 * C45770 + C32563 * C45771 + C32996 * C45772) * C152068) *
              C151869 * C151851 * C129 -
          ((C34078 * C45772 + C32564 * C45771 + C31855 * C45770) * C152068 +
           (C37952 * C45772 + C37951 * C45771 +
            (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C45770) *
               C152187) *
              C151869 * C151851 * C130 +
          (((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C45770 +
            C37953 * C45771 + C37956 * C45772) *
               C152187 +
           (C31859 * C45770 + C32569 * C45771 + C37955 * C45772) * C152068) *
              C151869 * C151851 * C131 -
          (((C31628 * C1531 + C38362 + C38362 + C151791 * C1555) * C45772 +
            C38161 * C45771 + C32188 * C45770) *
               C152068 +
           ((C31628 * C554 + C38361 + C38361 + C151791 * C578) * C45772 +
            C38366 * C45771 +
            (C31628 * C145 + C31646 + C31646 + C151791 * C161) * C45770) *
               C152187) *
              C151869 * C151851 * C132 +
          (((C31628 * C146 + C31647 + C31647 + C151791 * C162) * C45770 +
            (C31628 * C555 + C37454 + C37454 + C151791 * C579) * C45771 +
            (C31628 * C556 + C54126 + C54126 + C151791 * C580) * C45772) *
               C152187 +
           ((C31628 * C346 + C31648 + C31648 + C151791 * C370) * C45770 +
            (C31628 * C1087 + C37455 + C37455 + C151791 * C1099) * C45771 +
            (C31628 * C2677 + C54127 + C54127 + C151791 * C2679) * C45772) *
               C152068) *
              C151869 * C151851 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C45770 +
             C37949 * C45771 + C37950 * C45772) *
                C152187 +
            (C54346 + C54347 + C54348) * C152068) *
               C151869 * C152258 -
           ((C54349 + C54350 + C54351) * C152068 +
            (C54348 + C54347 + C54346) * C152187) *
               C151869 * C152244 +
           ((C54351 + C54350 + C54349) * C152187 +
            (C31853 * C45770 + C32561 * C45771 + C32998 * C45772) * C152068) *
               C151869 * C152214) *
              C335 +
          (((C54352 + C54353 + C54354) * C152187 +
            (C54355 + C54356 + C54357) * C152068) *
               C151869 * C152244 -
           ((C54354 + C54353 + C54352) * C152068 +
            (C37952 * C45772 + C37951 * C45771 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C45770) *
                C152187) *
               C151869 * C152258 -
           ((C34076 * C45772 + C32566 * C45771 + C31857 * C45770) * C152068 +
            (C54357 + C54356 + C54355) * C152187) *
               C151869 * C152214) *
              C336 +
          ((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C45770 +
             C37953 * C45771 + C37956 * C45772) *
                C152187 +
            (C54358 + C54359 + C54360) * C152068) *
               C151869 * C152258 -
           ((C54361 + C54362 + C54363) * C152068 +
            (C54360 + C54359 + C54358) * C152187) *
               C151869 * C152244 +
           ((C54363 + C54362 + C54361) * C152187 +
            (C31861 * C45770 + C32567 * C45771 +
             (C31628 * C8066 + C32044 + C32044 + C151791 * C8072) * C45772) *
                C152068) *
               C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C45770 +
             C37949 * C45771 + C37950 * C45772) *
                C152187 +
            (C54346 + C54347 + C54348) * C152068) *
               C151869 * C1259 -
           ((C54349 + C54350 + C54351) * C152068 +
            (C54348 + C54347 + C54346) * C152187) *
               C151869 * C1260 +
           ((C54351 + C54350 + C54349) * C152187 +
            (C31853 * C45770 + C32561 * C45771 + C32998 * C45772) * C152068) *
               C151869 * C152214) *
              C152255 +
          (((C54352 + C54353 + C54354) * C152187 +
            (C54355 + C54356 + C54357) * C152068) *
               C151869 * C1260 -
           ((C54354 + C54353 + C54352) * C152068 +
            (C37952 * C45772 + C37951 * C45771 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C45770) *
                C152187) *
               C151869 * C1259 -
           ((C34076 * C45772 + C32566 * C45771 + C31857 * C45770) * C152068 +
            (C54357 + C54356 + C54355) * C152187) *
               C151869 * C152214) *
              C152240 +
          ((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C45770 +
             C37953 * C45771 + C37956 * C45772) *
                C152187 +
            (C54358 + C54359 + C54360) * C152068) *
               C151869 * C1259 -
           ((C54361 + C54362 + C54363) * C152068 +
            (C54360 + C54359 + C54358) * C152187) *
               C151869 * C1260 +
           ((C54363 + C54362 + C54361) * C152187 +
            (C31861 * C45770 + C32567 * C45771 +
             (C31628 * C8066 + C32044 + C32044 + C151791 * C8072) * C45772) *
                C152068) *
               C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C45770 +
            C37949 * C45771 + C37950 * C45772) *
               C152187 +
           (C54346 + C54347 + C54348) * C152068) *
              C151869 * C1347 -
          ((C54349 + C54350 + C54351) * C152068 +
           (C54348 + C54347 + C54346) * C152187) *
              C151869 * C1348 +
          ((C54351 + C54350 + C54349) * C152187 +
           (C55636 + C55637 + C55638) * C152068) *
              C151869 * C1349 -
          ((C55639 + C55640 + C55641) * C152068 +
           (C55638 + C55637 + C55636) * C152187) *
              C151869 * C1350 +
          ((C55641 + C55640 + C55639) * C152187 +
           (C32820 * C45770 + C33482 * C45771 +
            (C31628 * C32969 + C32985 + C32985 + C151791 * C32971) * C45772) *
               C152068) *
              C151869 * C1351) *
         C151823) /
            (p * q * std::sqrt(p + q));
    d2ee[200] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152188 +
             C37949 * C152092) *
                C23040 +
            (C37675 + C37676) * C23041 + C37693 * C23042) *
               C151869 * C151910 -
           (C39009 * C23042 + (C37678 + C37677) * C23041 +
            (C37676 + C37675) * C23040) *
               C151869 * C151917 +
           (C37693 * C23040 + (C37680 + C37679) * C23041 + C39014 * C23042) *
               C151869 * C3585) *
              C151828 +
          (((C37681 + C37682) * C23040 + (C37683 + C37684) * C23041 +
            C39437 * C23042) *
               C151869 * C151917 -
           (C37694 * C23042 + (C37682 + C37681) * C23041 +
            (C37951 * C152092 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152188) *
                C23040) *
               C151869 * C151910 -
           ((C39438 + C39439) * C23042 + (C37686 + C37685) * C23041 +
            C37694 * C23040) *
               C151869 * C3585) *
              C151837 +
          ((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C152188 +
             C37953 * C152092) *
                C23040 +
            (C37687 + C37688) * C23041 + C37695 * C23042) *
               C151869 * C151910 -
           ((C37691 + C37692) * C23042 + (C37690 + C37689) * C23041 +
            (C37688 + C37687) * C23040) *
               C151869 * C151917 +
           (C37695 * C23040 + (C37692 + C37691) * C23041 +
            (C31862 * C152188 +
             (C31628 * C8843 + C32542 + C32542 + C151791 * C8849) * C152092) *
                C23042) *
               C151869 * C3585) *
              C3588)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
             C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
             C6086 * C160) *
                C152188 +
            (C15243 + C15244 + C15245) * C152092) *
               C152054 * C151869 * C151910 -
           ((C7453 + C7454 + C7455) * C152092 +
            (C6436 + C6435 + C6434) * C152188) *
               C152054 * C151869 * C151917 +
           ((C6439 + C6438 + C6437) * C152188 +
            (C8122 + C8123 + C8124) * C152092) *
               C152054 * C151869 * C3585) *
              C151828 +
          (((C6440 + C6441 + C6442) * C152188 +
            (C7456 + C7457 + C7458) * C152092) *
               C152054 * C151869 * C151917 -
           ((C15251 + C15250 + C15249) * C152092 +
            (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
             C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
             C6084 * C159) *
                C152188) *
               C152054 * C151869 * C151910 -
           ((C8645 + C8646 + C8647) * C152092 +
            (C6445 + C6444 + C6443) * C152188) *
               C152054 * C151869 * C3585) *
              C151837 +
          (((C6089 * C144 + C6108 + C6108 + C6084 * C160 + C6091 * C145 +
             C6109 + C6109 + C6085 * C161 + C6093 * C146 + C6110 + C6110 +
             C6086 * C162) *
                C152188 +
            (C15255 + C15256 + C15257) * C152092) *
               C152054 * C151869 * C151910 -
           ((C7459 + C7460 + C7461) * C152092 +
            (C6448 + C6447 + C6446) * C152188) *
               C152054 * C151869 * C151917 +
           ((C6451 + C6450 + C6449) * C152188 +
            (C6089 * C1536 + C7432 + C7432 + C6084 * C1560 + C6091 * C1535 +
             C7433 + C7433 + C6085 * C1559 + C6093 * C1916 + C7434 + C7434 +
             C6086 * C1918) *
                C152092) *
               C152054 * C151869 * C3585) *
              C3588)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C62334 +
            C37949 * C62335 + C37950 * C62336 + C40513 * C62337) *
               C152054 * C151869 * C151910 -
           (C34364 * C62337 + C32996 * C62336 + C32563 * C62335 +
            C31851 * C62334) *
               C152054 * C151869 * C151917 +
           (C31852 * C62334 + C32562 * C62335 + C32997 * C62336 +
            C34363 * C62337) *
               C152054 * C151869 * C3585) *
              C151828 +
          ((C31855 * C62334 + C32564 * C62335 + C34078 * C62336 +
            C40818 * C62337) *
               C152054 * C151869 * C151917 -
           (C41022 * C62337 + C37952 * C62336 + C37951 * C62335 +
            (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C62334) *
               C152054 * C151869 * C151910 -
           (C40817 * C62337 + C34077 * C62336 + C32565 * C62335 +
            C31856 * C62334) *
               C152054 * C151869 * C3585) *
              C151837 +
          (((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C62334 +
            C37953 * C62335 + C37956 * C62336 + C54593 * C62337) *
               C152054 * C151869 * C151910 -
           (C54592 * C62337 + C37955 * C62336 + C32569 * C62335 +
            C31859 * C62334) *
               C152054 * C151869 * C151917 +
           (C31860 * C62334 + C32568 * C62335 + C37954 * C62336 +
            (C31628 * C10151 + C37932 + C37932 + C151791 * C10157) * C62337) *
               C152054 * C151869 * C3585) *
              C3588)) /
            (p * q * std::sqrt(p + q));
    d2ee[201] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152188 +
              C37949 * C152092) *
                 C23040 +
             (C37675 + C37676) * C23041 + C37693 * C23042) *
                C152173 -
            (C39233 * C23042 + (C38659 + C38660) * C23041 +
             (C37950 * C152092 + C37949 * C152188) * C23040) *
                C151956) *
               C151910 +
           (((C38660 + C38659) * C23040 + (C38658 + C38657) * C23041 +
             C39927 * C23042) *
                C151956 -
            (C39009 * C23042 + (C37678 + C37677) * C23041 +
             (C37676 + C37675) * C23040) *
                C152173) *
               C151917 +
           ((C37693 * C23040 + (C37680 + C37679) * C23041 + C39014 * C23042) *
                C152173 -
            ((C39928 + C39929) * C23042 + (C39239 + C39238) * C23041 +
             C39233 * C23040) *
                C151956) *
               C3585) *
              C3241 +
          ((((C37951 * C152188 + C37952 * C152092) * C23040 +
             (C38661 + C38662) * C23041 + C39730 * C23042) *
                C151956 -
            (C37694 * C23042 + (C37682 + C37681) * C23041 +
             (C37951 * C152092 +
              (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152188) *
                 C23040) *
                C152173) *
               C151910 +
           (((C37681 + C37682) * C23040 + (C37683 + C37684) * C23041 +
             C39437 * C23042) *
                C152173 -
            ((C39731 + C39732) * C23042 + (C38664 + C38663) * C23041 +
             (C38662 + C38661) * C23040) *
                C151956) *
               C151917 +
           ((C39730 * C23040 + (C39732 + C39731) * C23041 +
             (C33342 * C152188 +
              (C31628 * C25022 + C34069 + C34069 + C151791 * C25026) *
                  C152092) *
                 C23042) *
                C151956 -
            ((C39438 + C39439) * C23042 + (C37686 + C37685) * C23041 +
             C37694 * C23040) *
                C152173) *
               C3585) *
              C151834)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
              C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
              C6086 * C160) *
                 C152188 +
             (C15243 + C15244 + C15245) * C152092) *
                C152054 * C152173 -
            ((C15246 + C15247 + C15248) * C152092 +
             (C15245 + C15244 + C15243) * C152188) *
                C152054 * C151956) *
               C151910 +
           (((C7455 + C7454 + C7453) * C152188 +
             (C8119 + C8120 + C8121) * C152092) *
                C152054 * C151956 -
            ((C7453 + C7454 + C7455) * C152092 +
             (C6436 + C6435 + C6434) * C152188) *
                C152054 * C152173) *
               C151917 +
           (((C6439 + C6438 + C6437) * C152188 +
             (C8122 + C8123 + C8124) * C152092) *
                C152054 * C152173 -
            ((C8125 + C8126 + C8127) * C152092 +
             (C8124 + C8123 + C8122) * C152188) *
                C152054 * C151956) *
               C3585) *
              C3241 +
          ((((C15249 + C15250 + C15251) * C152188 +
             (C15252 + C15253 + C15254) * C152092) *
                C152054 * C151956 -
            ((C15251 + C15250 + C15249) * C152092 +
             (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
              C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
              C6084 * C159) *
                 C152188) *
                C152054 * C152173) *
               C151910 +
           (((C6440 + C6441 + C6442) * C152188 +
             (C7456 + C7457 + C7458) * C152092) *
                C152054 * C152173 -
            ((C9753 + C9754 + C9755) * C152092 +
             (C7458 + C7457 + C7456) * C152188) *
                C152054 * C151956) *
               C151917 +
           (((C8647 + C8646 + C8645) * C152188 +
             (C6089 * C1540 + C9744 + C9744 + C6084 * C1564 + C6091 * C1541 +
              C9745 + C9745 + C6085 * C1565 + C6093 * C1542 + C9746 + C9746 +
              C6086 * C1566) *
                 C152092) *
                C152054 * C151956 -
            ((C8645 + C8646 + C8647) * C152092 +
             (C6445 + C6444 + C6443) * C152188) *
                C152054 * C152173) *
               C3585) *
              C151834)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C62334 +
             C37949 * C62335 + C37950 * C62336 + C40513 * C62337) *
                C152054 * C152173 -
            (C40516 * C62337 + C40513 * C62336 + C37950 * C62335 +
             C37949 * C62334) *
                C152054 * C151956) *
               C151910 +
           ((C32563 * C62334 + C32996 * C62335 + C34364 * C62336 +
             C40515 * C62337) *
                C152054 * C151956 -
            (C34364 * C62337 + C32996 * C62336 + C32563 * C62335 +
             C31851 * C62334) *
                C152054 * C152173) *
               C151917 +
           ((C31852 * C62334 + C32562 * C62335 + C32997 * C62336 +
             C34363 * C62337) *
                C152054 * C152173 -
            (C40514 * C62337 + C34363 * C62336 + C32997 * C62335 +
             C32562 * C62334) *
                C152054 * C151956) *
               C3585) *
              C3241 +
          (((C37951 * C62334 + C37952 * C62335 + C41022 * C62336 +
             C57627 * C62337) *
                C152054 * C151956 -
            (C41022 * C62337 + C37952 * C62336 + C37951 * C62335 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C62334) *
                C152054 * C152173) *
               C151910 +
           ((C31855 * C62334 + C32564 * C62335 + C34078 * C62336 +
             C40818 * C62337) *
                C152054 * C152173 -
            (C57425 * C62337 + C40818 * C62336 + C34078 * C62335 +
             C32564 * C62334) *
                C152054 * C151956) *
               C151917 +
           ((C32565 * C62334 + C34077 * C62335 + C40817 * C62336 +
             (C31628 * C26362 + C41019 + C41019 + C151791 * C26366) * C62337) *
                C152054 * C151956 -
            (C40817 * C62337 + C34077 * C62336 + C32565 * C62335 +
             C31856 * C62334) *
                C152054 * C152173) *
               C3585) *
              C151834)) /
            (p * q * std::sqrt(p + q));
    d2ee[202] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
                 C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
                 C6086 * C160) *
                    C152188 +
                (C15243 + C15244 + C15245) * C152092) *
                   C152054 * C151869 * C3101 -
               ((C7453 + C7454 + C7455) * C152092 +
                (C6436 + C6435 + C6434) * C152188) *
                   C152054 * C151869 * C151914) *
                  C152264 +
              (((C6440 + C6441 + C6442) * C152188 +
                (C7456 + C7457 + C7458) * C152092) *
                   C152054 * C151869 * C151914 -
               ((C15251 + C15250 + C15249) * C152092 +
                (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
                 C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
                 C6084 * C159) *
                    C152188) *
                   C152054 * C151869 * C3101) *
                  C152257 +
              (((C6089 * C144 + C6108 + C6108 + C6084 * C160 + C6091 * C145 +
                 C6109 + C6109 + C6085 * C161 + C6093 * C146 + C6110 + C6110 +
                 C6086 * C162) *
                    C152188 +
                (C15255 + C15256 + C15257) * C152092) *
                   C152054 * C151869 * C3101 -
               ((C7459 + C7460 + C7461) * C152092 +
                (C6448 + C6447 + C6446) * C152188) *
                   C152054 * C151869 * C151914) *
                  C152242 +
              (((C6915 + C6916 + C6917) * C152188 +
                (C6089 * C1086 + C7115 + C7115 + C6084 * C1098 + C6091 * C1087 +
                 C7116 + C7116 + C6085 * C1099 + C6093 * C1088 + C7117 + C7117 +
                 C6086 * C1100) *
                    C152092) *
                   C152054 * C151869 * C151914 -
               ((C15666 + C15665 + C15664) * C152092 +
                (C6093 * C147 + C6117 + C6117 + C6086 * C163 + C6091 * C146 +
                 C6118 + C6118 + C6085 * C162 + C6089 * C145 + C6119 + C6119 +
                 C6084 * C161) *
                    C152188) *
                   C152054 * C151869 * C3101) *
                  C152218) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
                 C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
                 C6086 * C160) *
                    C152188 +
                (C15243 + C15244 + C15245) * C152092) *
                   C152054 * C151869 * C152265 -
               ((C7453 + C7454 + C7455) * C152092 +
                (C6436 + C6435 + C6434) * C152188) *
                   C152054 * C151869 * C152261 +
               ((C6439 + C6438 + C6437) * C152188 +
                (C8122 + C8123 + C8124) * C152092) *
                   C152054 * C151869 * C152249 -
               ((C8866 + C8867 + C8868) * C152092 +
                (C7843 + C7842 + C7841) * C152188) *
                   C152054 * C151869 * C152224) *
                  C3241 +
              (((C6440 + C6441 + C6442) * C152188 +
                (C7456 + C7457 + C7458) * C152092) *
                   C152054 * C151869 * C152261 -
               ((C15251 + C15250 + C15249) * C152092 +
                (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
                 C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
                 C6084 * C159) *
                    C152188) *
                   C152054 * C151869 * C152265 -
               ((C8645 + C8646 + C8647) * C152092 +
                (C6445 + C6444 + C6443) * C152188) *
                   C152054 * C151869 * C152249 +
               ((C8339 + C8338 + C8337) * C152188 +
                (C6089 * C2054 + C8636 + C8636 + C6084 * C2062 + C6091 * C2055 +
                 C8637 + C8637 + C6085 * C2063 + C6093 * C2056 + C8638 + C8638 +
                 C6086 * C2064) *
                    C152092) *
                   C152054 * C151869 * C152224) *
                  C151834)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
              C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
              C6086 * C160) *
                 C152188 +
             (C15243 + C15244 + C15245) * C152092) *
                C152054 * C152259 -
            ((C15246 + C15247 + C15248) * C152092 +
             (C15245 + C15244 + C15243) * C152188) *
                C152054 * C152246 +
            ((C15248 + C15247 + C15246) * C152188 +
             (C17787 + C17788 + C17789) * C152092) *
                C152054 * C152217) *
               C3101 +
           (((C7455 + C7454 + C7453) * C152188 +
             (C8119 + C8120 + C8121) * C152092) *
                C152054 * C152246 -
            ((C7453 + C7454 + C7455) * C152092 +
             (C6436 + C6435 + C6434) * C152188) *
                C152054 * C152259 -
            ((C10174 + C10175 + C10176) * C152092 +
             (C8121 + C8120 + C8119) * C152188) *
                C152054 * C152217) *
               C151914) *
              C3241 +
          ((((C15249 + C15250 + C15251) * C152188 +
             (C15252 + C15253 + C15254) * C152092) *
                C152054 * C152246 -
            ((C15251 + C15250 + C15249) * C152092 +
             (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
              C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
              C6084 * C159) *
                 C152188) *
                C152054 * C152259 -
            ((C18292 + C18293 + C18294) * C152092 +
             (C15254 + C15253 + C15252) * C152188) *
                C152054 * C152217) *
               C3101 +
           (((C6440 + C6441 + C6442) * C152188 +
             (C7456 + C7457 + C7458) * C152092) *
                C152054 * C152259 -
            ((C9753 + C9754 + C9755) * C152092 +
             (C7458 + C7457 + C7456) * C152188) *
                C152054 * C152246 +
            ((C9755 + C9754 + C9753) * C152188 +
             (C6089 * C2956 + C9953 + C9953 + C6084 * C2964 + C6091 * C2957 +
              C9954 + C9954 + C6085 * C2965 + C6093 * C2958 + C9955 + C9955 +
              C6086 * C2966) *
                 C152092) *
                C152054 * C152217) *
               C151914) *
              C151834)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152188 +
             C37949 * C152092) *
                C23040 +
            (C37675 + C37676) * C23041 + C37693 * C23042) *
               C151869 * C3101 -
           (C39009 * C23042 + (C37678 + C37677) * C23041 +
            (C37676 + C37675) * C23040) *
               C151869 * C151914) *
              C152264 +
          (((C37681 + C37682) * C23040 + (C37683 + C37684) * C23041 +
            C39437 * C23042) *
               C151869 * C151914 -
           (C37694 * C23042 + (C37682 + C37681) * C23041 +
            (C37951 * C152092 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152188) *
                C23040) *
               C151869 * C3101) *
              C152257 +
          ((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C152188 +
             C37953 * C152092) *
                C23040 +
            (C37687 + C37688) * C23041 + C37695 * C23042) *
               C151869 * C3101 -
           ((C37691 + C37692) * C23042 + (C37690 + C37689) * C23041 +
            (C37688 + C37687) * C23040) *
               C151869 * C151914) *
              C152242 +
          (((C38151 + C38163) * C23040 + (C38154 + C38164) * C23041 +
            (C32190 * C152188 +
             (C31628 * C2056 + C32327 + C32327 + C151791 * C2064) * C152092) *
                C23042) *
               C151869 * C151914 -
           ((C38164 + C38154) * C23042 + (C38163 + C38151) * C23041 +
            (C38366 * C152092 +
             (C31628 * C145 + C31646 + C31646 + C151791 * C161) * C152188) *
                C23040) *
               C151869 * C3101) *
              C152218)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152188 +
             C37949 * C152092) *
                C23040 +
            (C37675 + C37676) * C23041 + C37693 * C23042) *
               C151869 * C152265 -
           (C39009 * C23042 + (C37678 + C37677) * C23041 +
            (C37676 + C37675) * C23040) *
               C151869 * C152261 +
           (C37693 * C23040 + (C37680 + C37679) * C23041 + C39014 * C23042) *
               C151869 * C152249 -
           ((C39012 + C39013) * C23042 + (C39011 + C39010) * C23041 +
            C39009 * C23040) *
               C151869 * C152224) *
              C3241 +
          (((C37681 + C37682) * C23040 + (C37683 + C37684) * C23041 +
            C39437 * C23042) *
               C151869 * C152261 -
           (C37694 * C23042 + (C37682 + C37681) * C23041 +
            (C37951 * C152092 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152188) *
                C23040) *
               C151869 * C152265 -
           ((C39438 + C39439) * C23042 + (C37686 + C37685) * C23041 +
            C37694 * C23040) *
               C151869 * C152249 +
           (C39437 * C23040 + (C39439 + C39438) * C23041 +
            (C33141 * C152188 +
             (C31628 * C25784 + C33339 + C33339 + C151791 * C25788) * C152092) *
                C23042) *
               C151869 * C152224) *
              C151834)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152188 +
              C37949 * C152092) *
                 C23040 +
             (C37675 + C37676) * C23041 + C37693 * C23042) *
                C152259 -
            (C39233 * C23042 + (C38659 + C38660) * C23041 +
             (C37950 * C152092 + C37949 * C152188) * C23040) *
                C152246 +
            ((C37950 * C152188 + C40513 * C152092) * C23040 +
             (C39234 + C39235) * C23041 + C39242 * C23042) *
                C152217) *
               C3101 +
           (((C38660 + C38659) * C23040 + (C38658 + C38657) * C23041 +
             C39927 * C23042) *
                C152246 -
            (C39009 * C23042 + (C37678 + C37677) * C23041 +
             (C37676 + C37675) * C23040) *
                C152259 -
            ((C39240 + C39241) * C23042 + (C39237 + C39236) * C23041 +
             (C39235 + C39234) * C23040) *
                C152217) *
               C151914) *
              C3241 +
          ((((C37951 * C152188 + C37952 * C152092) * C23040 +
             (C38661 + C38662) * C23041 + C39730 * C23042) *
                C152246 -
            (C37694 * C23042 + (C37682 + C37681) * C23041 +
             (C37951 * C152092 +
              (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152188) *
                 C23040) *
                C152259 -
            ((C40819 + C40809) * C23042 + (C40820 + C40812) * C23041 +
             (C41022 * C152092 + C37952 * C152188) * C23040) *
                C152217) *
               C3101 +
           (((C37681 + C37682) * C23040 + (C37683 + C37684) * C23041 +
             C39437 * C23042) *
                C152259 -
            ((C39731 + C39732) * C23042 + (C38664 + C38663) * C23041 +
             (C38662 + C38661) * C23040) *
                C152246 +
            ((C40812 + C40820) * C23040 + (C40809 + C40819) * C23041 +
             (C34076 * C152188 +
              (C31628 * C27086 + C34215 + C34215 + C151791 * C27090) *
                  C152092) *
                 C23042) *
                C152217) *
               C151914) *
              C151834)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C62334 +
            C37949 * C62335 + C37950 * C62336 + C40513 * C62337) *
               C152054 * C151869 * C3101 -
           (C34364 * C62337 + C32996 * C62336 + C32563 * C62335 +
            C31851 * C62334) *
               C152054 * C151869 * C151914) *
              C152264 +
          ((C31855 * C62334 + C32564 * C62335 + C34078 * C62336 +
            C40818 * C62337) *
               C152054 * C151869 * C151914 -
           (C41022 * C62337 + C37952 * C62336 + C37951 * C62335 +
            (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C62334) *
               C152054 * C151869 * C3101) *
              C152257 +
          (((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C62334 +
            C37953 * C62335 + C37956 * C62336 + C54593 * C62337) *
               C152054 * C151869 * C3101 -
           (C54592 * C62337 + C37955 * C62336 + C32569 * C62335 +
            C31859 * C62334) *
               C152054 * C151869 * C151914) *
              C152242 +
          ((C32188 * C62334 + C38161 * C62335 + C54794 * C62336 +
            (C31628 * C2958 + C54993 + C54993 + C151791 * C2966) * C62337) *
               C152054 * C151869 * C151914 -
           (C62903 * C62337 + C54996 * C62336 + C38366 * C62335 +
            (C31628 * C145 + C31646 + C31646 + C151791 * C161) * C62334) *
               C152054 * C151869 * C3101) *
              C152218)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C62334 +
            C37949 * C62335 + C37950 * C62336 + C40513 * C62337) *
               C152054 * C151869 * C152265 -
           (C34364 * C62337 + C32996 * C62336 + C32563 * C62335 +
            C31851 * C62334) *
               C152054 * C151869 * C152261 +
           (C31852 * C62334 + C32562 * C62335 + C32997 * C62336 +
            C34363 * C62337) *
               C152054 * C151869 * C152249 -
           (C34362 * C62337 + C32998 * C62336 + C32561 * C62335 +
            C31853 * C62334) *
               C152054 * C151869 * C152224) *
              C3241 +
          ((C31855 * C62334 + C32564 * C62335 + C34078 * C62336 +
            C40818 * C62337) *
               C152054 * C151869 * C152261 -
           (C41022 * C62337 + C37952 * C62336 + C37951 * C62335 +
            (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C62334) *
               C152054 * C151869 * C152265 -
           (C40817 * C62337 + C34077 * C62336 + C32565 * C62335 +
            C31856 * C62334) *
               C152054 * C151869 * C152249 +
           (C31857 * C62334 + C32566 * C62335 + C34076 * C62336 +
            (C31628 * C27086 + C34215 + C34215 + C151791 * C27090) * C62337) *
               C152054 * C151869 * C152224) *
              C151834)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C62334 +
             C37949 * C62335 + C37950 * C62336 + C40513 * C62337) *
                C152054 * C152259 -
            (C40516 * C62337 + C40513 * C62336 + C37950 * C62335 +
             C37949 * C62334) *
                C152054 * C152246 +
            (C37950 * C62334 + C40513 * C62335 + C40516 * C62336 +
             C57128 * C62337) *
                C152054 * C152217) *
               C3101 +
           ((C32563 * C62334 + C32996 * C62335 + C34364 * C62336 +
             C40515 * C62337) *
                C152054 * C152246 -
            (C34364 * C62337 + C32996 * C62336 + C32563 * C62335 +
             C31851 * C62334) *
                C152054 * C152259 -
            (C57127 * C62337 + C40515 * C62336 + C34364 * C62335 +
             C32996 * C62334) *
                C152054 * C152217) *
               C151914) *
              C3241 +
          (((C37951 * C62334 + C37952 * C62335 + C41022 * C62336 +
             C57627 * C62337) *
                C152054 * C152246 -
            (C41022 * C62337 + C37952 * C62336 + C37951 * C62335 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C62334) *
                C152054 * C152259 -
            (C64638 * C62337 + C57627 * C62336 + C41022 * C62335 +
             C37952 * C62334) *
                C152054 * C152217) *
               C3101 +
           ((C31855 * C62334 + C32564 * C62335 + C34078 * C62336 +
             C40818 * C62337) *
                C152054 * C152259 -
            (C57425 * C62337 + C40818 * C62336 + C34078 * C62335 +
             C32564 * C62334) *
                C152054 * C152246 +
            (C34078 * C62334 + C40818 * C62335 + C57425 * C62336 +
             (C31628 * C49559 + C57624 + C57624 + C151791 * C49561) * C62337) *
                C152054 * C152217) *
               C151914) *
              C151834)) /
            (p * q * std::sqrt(p + q));
    d2ee[203] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152188 +
              C37949 * C152092) *
                 C23040 +
             (C37675 + C37676) * C23041 + C37693 * C23042) *
                C152173 -
            (C39233 * C23042 + (C38659 + C38660) * C23041 +
             (C37950 * C152092 + C37949 * C152188) * C23040) *
                C151956) *
               C3101 +
           (((C38660 + C38659) * C23040 + (C38658 + C38657) * C23041 +
             C39927 * C23042) *
                C151956 -
            (C39009 * C23042 + (C37678 + C37677) * C23041 +
             (C37676 + C37675) * C23040) *
                C152173) *
               C151914) *
              C151828 +
          ((((C37951 * C152188 + C37952 * C152092) * C23040 +
             (C38661 + C38662) * C23041 + C39730 * C23042) *
                C151956 -
            (C37694 * C23042 + (C37682 + C37681) * C23041 +
             (C37951 * C152092 +
              (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152188) *
                 C23040) *
                C152173) *
               C3101 +
           (((C37681 + C37682) * C23040 + (C37683 + C37684) * C23041 +
             C39437 * C23042) *
                C152173 -
            ((C39731 + C39732) * C23042 + (C38664 + C38663) * C23041 +
             (C38662 + C38661) * C23040) *
                C151956) *
               C151914) *
              C151837 +
          (((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C152188 +
              C37953 * C152092) *
                 C23040 +
             (C37687 + C37688) * C23041 + C37695 * C23042) *
                C152173 -
            ((C38665 + C38666) * C23042 + (C38667 + C38668) * C23041 +
             (C37956 * C152092 + C37953 * C152188) * C23040) *
                C151956) *
               C3101 +
           (((C38668 + C38667) * C23040 + (C38666 + C38665) * C23041 +
             (C32567 * C152188 +
              (C31628 * C8066 + C32044 + C32044 + C151791 * C8072) * C152092) *
                 C23042) *
                C151956 -
            ((C37691 + C37692) * C23042 + (C37690 + C37689) * C23041 +
             (C37688 + C37687) * C23040) *
                C152173) *
               C151914) *
              C3588)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
              C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
              C6086 * C160) *
                 C152188 +
             (C15243 + C15244 + C15245) * C152092) *
                C152054 * C152173 -
            ((C15246 + C15247 + C15248) * C152092 +
             (C15245 + C15244 + C15243) * C152188) *
                C152054 * C151956) *
               C3101 +
           (((C7455 + C7454 + C7453) * C152188 +
             (C8119 + C8120 + C8121) * C152092) *
                C152054 * C151956 -
            ((C7453 + C7454 + C7455) * C152092 +
             (C6436 + C6435 + C6434) * C152188) *
                C152054 * C152173) *
               C151914) *
              C151828 +
          ((((C15249 + C15250 + C15251) * C152188 +
             (C15252 + C15253 + C15254) * C152092) *
                C152054 * C151956 -
            ((C15251 + C15250 + C15249) * C152092 +
             (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
              C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
              C6084 * C159) *
                 C152188) *
                C152054 * C152173) *
               C3101 +
           (((C6440 + C6441 + C6442) * C152188 +
             (C7456 + C7457 + C7458) * C152092) *
                C152054 * C152173 -
            ((C9753 + C9754 + C9755) * C152092 +
             (C7458 + C7457 + C7456) * C152188) *
                C152054 * C151956) *
               C151914) *
              C151837 +
          ((((C6089 * C144 + C6108 + C6108 + C6084 * C160 + C6091 * C145 +
              C6109 + C6109 + C6085 * C161 + C6093 * C146 + C6110 + C6110 +
              C6086 * C162) *
                 C152188 +
             (C15255 + C15256 + C15257) * C152092) *
                C152054 * C152173 -
            ((C15258 + C15259 + C15260) * C152092 +
             (C15257 + C15256 + C15255) * C152188) *
                C152054 * C151956) *
               C3101 +
           (((C7461 + C7460 + C7459) * C152188 +
             (C6089 * C1532 + C6703 + C6703 + C6084 * C1556 + C6091 * C1531 +
              C6704 + C6704 + C6085 * C1555 + C6093 * C2677 + C6705 + C6705 +
              C6086 * C2679) *
                 C152092) *
                C152054 * C151956 -
            ((C7459 + C7460 + C7461) * C152092 +
             (C6448 + C6447 + C6446) * C152188) *
                C152054 * C152173) *
               C151914) *
              C3588)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C62334 +
             C37949 * C62335 + C37950 * C62336 + C40513 * C62337) *
                C152054 * C152173 -
            (C40516 * C62337 + C40513 * C62336 + C37950 * C62335 +
             C37949 * C62334) *
                C152054 * C151956) *
               C3101 +
           ((C32563 * C62334 + C32996 * C62335 + C34364 * C62336 +
             C40515 * C62337) *
                C152054 * C151956 -
            (C34364 * C62337 + C32996 * C62336 + C32563 * C62335 +
             C31851 * C62334) *
                C152054 * C152173) *
               C151914) *
              C151828 +
          (((C37951 * C62334 + C37952 * C62335 + C41022 * C62336 +
             C57627 * C62337) *
                C152054 * C151956 -
            (C41022 * C62337 + C37952 * C62336 + C37951 * C62335 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C62334) *
                C152054 * C152173) *
               C3101 +
           ((C31855 * C62334 + C32564 * C62335 + C34078 * C62336 +
             C40818 * C62337) *
                C152054 * C152173 -
            (C57425 * C62337 + C40818 * C62336 + C34078 * C62335 +
             C32564 * C62334) *
                C152054 * C151956) *
               C151914) *
              C151837 +
          ((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C62334 +
             C37953 * C62335 + C37956 * C62336 + C54593 * C62337) *
                C152054 * C152173 -
            (C62637 * C62337 + C54593 * C62336 + C37956 * C62335 +
             C37953 * C62334) *
                C152054 * C151956) *
               C3101 +
           ((C32569 * C62334 + C37955 * C62335 + C54592 * C62336 +
             (C31628 * C9428 + C54587 + C54587 + C151791 * C9434) * C62337) *
                C152054 * C151956 -
            (C54592 * C62337 + C37955 * C62336 + C32569 * C62335 +
             C31859 * C62334) *
                C152054 * C152173) *
               C151914) *
              C3588)) /
            (p * q * std::sqrt(p + q));
    d2ee[204] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
             C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
             C6086 * C160) *
                C152188 +
            (C15243 + C15244 + C15245) * C152092) *
               C152054 * C151869 * C152265 -
           ((C7453 + C7454 + C7455) * C152092 +
            (C6436 + C6435 + C6434) * C152188) *
               C152054 * C151869 * C152261 +
           ((C6439 + C6438 + C6437) * C152188 +
            (C8122 + C8123 + C8124) * C152092) *
               C152054 * C151869 * C152249 -
           ((C8866 + C8867 + C8868) * C152092 +
            (C7843 + C7842 + C7841) * C152188) *
               C152054 * C151869 * C152224) *
              C3241 +
          (((C6440 + C6441 + C6442) * C152188 +
            (C7456 + C7457 + C7458) * C152092) *
               C152054 * C151869 * C152261 -
           ((C15251 + C15250 + C15249) * C152092 +
            (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
             C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
             C6084 * C159) *
                C152188) *
               C152054 * C151869 * C152265 -
           ((C8645 + C8646 + C8647) * C152092 +
            (C6445 + C6444 + C6443) * C152188) *
               C152054 * C151869 * C152249 +
           ((C8339 + C8338 + C8337) * C152188 +
            (C6089 * C2054 + C8636 + C8636 + C6084 * C2062 + C6091 * C2055 +
             C8637 + C8637 + C6085 * C2063 + C6093 * C2056 + C8638 + C8638 +
             C6086 * C2064) *
                C152092) *
               C152054 * C151869 * C152224) *
              C151834)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
             C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
             C6086 * C160) *
                C152188 +
            (C15243 + C15244 + C15245) * C152092) *
               C152054 * C151869 * C3101 -
           ((C7453 + C7454 + C7455) * C152092 +
            (C6436 + C6435 + C6434) * C152188) *
               C152054 * C151869 * C151914) *
              C152264 +
          (((C6440 + C6441 + C6442) * C152188 +
            (C7456 + C7457 + C7458) * C152092) *
               C152054 * C151869 * C151914 -
           ((C15251 + C15250 + C15249) * C152092 +
            (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
             C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
             C6084 * C159) *
                C152188) *
               C152054 * C151869 * C3101) *
              C152257 +
          (((C6089 * C144 + C6108 + C6108 + C6084 * C160 + C6091 * C145 +
             C6109 + C6109 + C6085 * C161 + C6093 * C146 + C6110 + C6110 +
             C6086 * C162) *
                C152188 +
            (C15255 + C15256 + C15257) * C152092) *
               C152054 * C151869 * C3101 -
           ((C7459 + C7460 + C7461) * C152092 +
            (C6448 + C6447 + C6446) * C152188) *
               C152054 * C151869 * C151914) *
              C152242 +
          (((C6915 + C6916 + C6917) * C152188 +
            (C6089 * C1086 + C7115 + C7115 + C6084 * C1098 + C6091 * C1087 +
             C7116 + C7116 + C6085 * C1099 + C6093 * C1088 + C7117 + C7117 +
             C6086 * C1100) *
                C152092) *
               C152054 * C151869 * C151914 -
           ((C15666 + C15665 + C15664) * C152092 +
            (C6093 * C147 + C6117 + C6117 + C6086 * C163 + C6091 * C146 +
             C6118 + C6118 + C6085 * C162 + C6089 * C145 + C6119 + C6119 +
             C6084 * C161) *
                C152188) *
               C152054 * C151869 * C3101) *
              C152218)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152188 +
             C37949 * C152092) *
                C23040 +
            (C37675 + C37676) * C23041 + C37693 * C23042) *
               C151869 * C3101 -
           (C39009 * C23042 + (C37678 + C37677) * C23041 +
            (C37676 + C37675) * C23040) *
               C151869 * C151914) *
              C152264 +
          (((C37681 + C37682) * C23040 + (C37683 + C37684) * C23041 +
            C39437 * C23042) *
               C151869 * C151914 -
           (C37694 * C23042 + (C37682 + C37681) * C23041 +
            (C37951 * C152092 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152188) *
                C23040) *
               C151869 * C3101) *
              C152257 +
          ((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C152188 +
             C37953 * C152092) *
                C23040 +
            (C37687 + C37688) * C23041 + C37695 * C23042) *
               C151869 * C3101 -
           ((C37691 + C37692) * C23042 + (C37690 + C37689) * C23041 +
            (C37688 + C37687) * C23040) *
               C151869 * C151914) *
              C152242 +
          (((C38151 + C38163) * C23040 + (C38154 + C38164) * C23041 +
            (C32190 * C152188 +
             (C31628 * C2056 + C32327 + C32327 + C151791 * C2064) * C152092) *
                C23042) *
               C151869 * C151914 -
           ((C38164 + C38154) * C23042 + (C38163 + C38151) * C23041 +
            (C38366 * C152092 +
             (C31628 * C145 + C31646 + C31646 + C151791 * C161) * C152188) *
                C23040) *
               C151869 * C3101) *
              C152218)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152188 +
             C37949 * C152092) *
                C23040 +
            (C37675 + C37676) * C23041 + C37693 * C23042) *
               C151869 * C152265 -
           (C39009 * C23042 + (C37678 + C37677) * C23041 +
            (C37676 + C37675) * C23040) *
               C151869 * C152261 +
           (C37693 * C23040 + (C37680 + C37679) * C23041 + C39014 * C23042) *
               C151869 * C152249 -
           ((C39012 + C39013) * C23042 + (C39011 + C39010) * C23041 +
            C39009 * C23040) *
               C151869 * C152224) *
              C3241 +
          (((C37681 + C37682) * C23040 + (C37683 + C37684) * C23041 +
            C39437 * C23042) *
               C151869 * C152261 -
           (C37694 * C23042 + (C37682 + C37681) * C23041 +
            (C37951 * C152092 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152188) *
                C23040) *
               C151869 * C152265 -
           ((C39438 + C39439) * C23042 + (C37686 + C37685) * C23041 +
            C37694 * C23040) *
               C151869 * C152249 +
           (C39437 * C23040 + (C39439 + C39438) * C23041 +
            (C33141 * C152188 +
             (C31628 * C25784 + C33339 + C33339 + C151791 * C25788) * C152092) *
                C23042) *
               C151869 * C152224) *
              C151834)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C62334 +
            C37949 * C62335 + C37950 * C62336 + C40513 * C62337) *
               C152054 * C151869 * C3101 -
           (C34364 * C62337 + C32996 * C62336 + C32563 * C62335 +
            C31851 * C62334) *
               C152054 * C151869 * C151914) *
              C152264 +
          ((C31855 * C62334 + C32564 * C62335 + C34078 * C62336 +
            C40818 * C62337) *
               C152054 * C151869 * C151914 -
           (C41022 * C62337 + C37952 * C62336 + C37951 * C62335 +
            (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C62334) *
               C152054 * C151869 * C3101) *
              C152257 +
          (((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C62334 +
            C37953 * C62335 + C37956 * C62336 + C54593 * C62337) *
               C152054 * C151869 * C3101 -
           (C54592 * C62337 + C37955 * C62336 + C32569 * C62335 +
            C31859 * C62334) *
               C152054 * C151869 * C151914) *
              C152242 +
          ((C32188 * C62334 + C38161 * C62335 + C54794 * C62336 +
            (C31628 * C2958 + C54993 + C54993 + C151791 * C2966) * C62337) *
               C152054 * C151869 * C151914 -
           (C62903 * C62337 + C54996 * C62336 + C38366 * C62335 +
            (C31628 * C145 + C31646 + C31646 + C151791 * C161) * C62334) *
               C152054 * C151869 * C3101) *
              C152218)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C62334 +
            C37949 * C62335 + C37950 * C62336 + C40513 * C62337) *
               C152054 * C151869 * C152265 -
           (C34364 * C62337 + C32996 * C62336 + C32563 * C62335 +
            C31851 * C62334) *
               C152054 * C151869 * C152261 +
           (C31852 * C62334 + C32562 * C62335 + C32997 * C62336 +
            C34363 * C62337) *
               C152054 * C151869 * C152249 -
           (C34362 * C62337 + C32998 * C62336 + C32561 * C62335 +
            C31853 * C62334) *
               C152054 * C151869 * C152224) *
              C3241 +
          ((C31855 * C62334 + C32564 * C62335 + C34078 * C62336 +
            C40818 * C62337) *
               C152054 * C151869 * C152261 -
           (C41022 * C62337 + C37952 * C62336 + C37951 * C62335 +
            (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C62334) *
               C152054 * C151869 * C152265 -
           (C40817 * C62337 + C34077 * C62336 + C32565 * C62335 +
            C31856 * C62334) *
               C152054 * C151869 * C152249 +
           (C31857 * C62334 + C32566 * C62335 + C34076 * C62336 +
            (C31628 * C27086 + C34215 + C34215 + C151791 * C27090) * C62337) *
               C152054 * C151869 * C152224) *
              C151834)) /
            (p * q * std::sqrt(p + q));
    d2ee[205] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152188 +
              C37949 * C152092) *
                 C23040 +
             (C37675 + C37676) * C23041 + C37693 * C23042) *
                C4107 -
            (C39233 * C23042 + (C38659 + C38660) * C23041 +
             (C37950 * C152092 + C37949 * C152188) * C23040) *
                C151956) *
               C151910 +
           (((C38660 + C38659) * C23040 + (C38658 + C38657) * C23041 +
             C39927 * C23042) *
                C151956 -
            (C39009 * C23042 + (C37678 + C37677) * C23041 +
             (C37676 + C37675) * C23040) *
                C4107) *
               C151917 +
           ((C37693 * C23040 + (C37680 + C37679) * C23041 + C39014 * C23042) *
                C4107 -
            ((C39928 + C39929) * C23042 + (C39239 + C39238) * C23041 +
             C39233 * C23040) *
                C151956) *
               C3585) *
              C152158 +
          ((((C37951 * C152188 + C37952 * C152092) * C23040 +
             (C38661 + C38662) * C23041 + C39730 * C23042) *
                C151956 -
            (C37694 * C23042 + (C37682 + C37681) * C23041 +
             (C37951 * C152092 +
              (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152188) *
                 C23040) *
                C4107) *
               C151910 +
           (((C37681 + C37682) * C23040 + (C37683 + C37684) * C23041 +
             C39437 * C23042) *
                C4107 -
            ((C39731 + C39732) * C23042 + (C38664 + C38663) * C23041 +
             (C38662 + C38661) * C23040) *
                C151956) *
               C151917 +
           ((C39730 * C23040 + (C39732 + C39731) * C23041 +
             (C33342 * C152188 +
              (C31628 * C25022 + C34069 + C34069 + C151791 * C25026) *
                  C152092) *
                 C23042) *
                C151956 -
            ((C39438 + C39439) * C23042 + (C37686 + C37685) * C23041 +
             C37694 * C23040) *
                C4107) *
               C3585) *
              C151834)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
              C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
              C6086 * C160) *
                 C152188 +
             (C15243 + C15244 + C15245) * C152092) *
                C152054 * C4107 -
            ((C15246 + C15247 + C15248) * C152092 +
             (C15245 + C15244 + C15243) * C152188) *
                C152054 * C151956) *
               C151910 +
           (((C7455 + C7454 + C7453) * C152188 +
             (C8119 + C8120 + C8121) * C152092) *
                C152054 * C151956 -
            ((C7453 + C7454 + C7455) * C152092 +
             (C6436 + C6435 + C6434) * C152188) *
                C152054 * C4107) *
               C151917 +
           (((C6439 + C6438 + C6437) * C152188 +
             (C8122 + C8123 + C8124) * C152092) *
                C152054 * C4107 -
            ((C8125 + C8126 + C8127) * C152092 +
             (C8124 + C8123 + C8122) * C152188) *
                C152054 * C151956) *
               C3585) *
              C152158 +
          ((((C15249 + C15250 + C15251) * C152188 +
             (C15252 + C15253 + C15254) * C152092) *
                C152054 * C151956 -
            ((C15251 + C15250 + C15249) * C152092 +
             (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
              C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
              C6084 * C159) *
                 C152188) *
                C152054 * C4107) *
               C151910 +
           (((C6440 + C6441 + C6442) * C152188 +
             (C7456 + C7457 + C7458) * C152092) *
                C152054 * C4107 -
            ((C9753 + C9754 + C9755) * C152092 +
             (C7458 + C7457 + C7456) * C152188) *
                C152054 * C151956) *
               C151917 +
           (((C8647 + C8646 + C8645) * C152188 +
             (C6089 * C1540 + C9744 + C9744 + C6084 * C1564 + C6091 * C1541 +
              C9745 + C9745 + C6085 * C1565 + C6093 * C1542 + C9746 + C9746 +
              C6086 * C1566) *
                 C152092) *
                C152054 * C151956 -
            ((C8645 + C8646 + C8647) * C152092 +
             (C6445 + C6444 + C6443) * C152188) *
                C152054 * C4107) *
               C3585) *
              C151834)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C62334 +
             C37949 * C62335 + C37950 * C62336 + C40513 * C62337) *
                C152054 * C4107 -
            (C40516 * C62337 + C40513 * C62336 + C37950 * C62335 +
             C37949 * C62334) *
                C152054 * C151956) *
               C151910 +
           ((C32563 * C62334 + C32996 * C62335 + C34364 * C62336 +
             C40515 * C62337) *
                C152054 * C151956 -
            (C34364 * C62337 + C32996 * C62336 + C32563 * C62335 +
             C31851 * C62334) *
                C152054 * C4107) *
               C151917 +
           ((C31852 * C62334 + C32562 * C62335 + C32997 * C62336 +
             C34363 * C62337) *
                C152054 * C4107 -
            (C40514 * C62337 + C34363 * C62336 + C32997 * C62335 +
             C32562 * C62334) *
                C152054 * C151956) *
               C3585) *
              C152158 +
          (((C37951 * C62334 + C37952 * C62335 + C41022 * C62336 +
             C57627 * C62337) *
                C152054 * C151956 -
            (C41022 * C62337 + C37952 * C62336 + C37951 * C62335 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C62334) *
                C152054 * C4107) *
               C151910 +
           ((C31855 * C62334 + C32564 * C62335 + C34078 * C62336 +
             C40818 * C62337) *
                C152054 * C4107 -
            (C57425 * C62337 + C40818 * C62336 + C34078 * C62335 +
             C32564 * C62334) *
                C152054 * C151956) *
               C151917 +
           ((C32565 * C62334 + C34077 * C62335 + C40817 * C62336 +
             (C31628 * C26362 + C41019 + C41019 + C151791 * C26366) * C62337) *
                C152054 * C151956 -
            (C40817 * C62337 + C34077 * C62336 + C32565 * C62335 +
             C31856 * C62334) *
                C152054 * C4107) *
               C3585) *
              C151834)) /
            (p * q * std::sqrt(p + q));
    d2ee[206] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152188 +
             C37949 * C152092) *
                C23040 +
            (C37675 + C37676) * C23041 + C37693 * C23042) *
               C151952 -
           (C39233 * C23042 + (C38659 + C38660) * C23041 +
            (C37950 * C152092 + C37949 * C152188) * C23040) *
               C151959 +
           ((C37950 * C152188 + C40513 * C152092) * C23040 +
            (C39234 + C39235) * C23041 + C39242 * C23042) *
               C4779) *
              C151910 +
          (((C38660 + C38659) * C23040 + (C38658 + C38657) * C23041 +
            C39927 * C23042) *
               C151959 -
           (C39009 * C23042 + (C37678 + C37677) * C23041 +
            (C37676 + C37675) * C23040) *
               C151952 -
           ((C39240 + C39241) * C23042 + (C39237 + C39236) * C23041 +
            (C39235 + C39234) * C23040) *
               C4779) *
              C151917 +
          ((C37693 * C23040 + (C37680 + C37679) * C23041 + C39014 * C23042) *
               C151952 -
           ((C39928 + C39929) * C23042 + (C39239 + C39238) * C23041 +
            C39233 * C23040) *
               C151959 +
           (C39242 * C23040 + (C39241 + C39240) * C23041 +
            (C33000 * C152188 +
             (C31628 * C34345 + C34355 + C34355 + C151791 * C34347) * C152092) *
                C23042) *
               C4779) *
              C3585) *
         C151823) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
             C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
             C6086 * C160) *
                C152188 +
            (C15243 + C15244 + C15245) * C152092) *
               C152054 * C151952 -
           ((C15246 + C15247 + C15248) * C152092 +
            (C15245 + C15244 + C15243) * C152188) *
               C152054 * C151959 +
           ((C15248 + C15247 + C15246) * C152188 +
            (C17787 + C17788 + C17789) * C152092) *
               C152054 * C4779) *
              C151910 +
          (((C7455 + C7454 + C7453) * C152188 +
            (C8119 + C8120 + C8121) * C152092) *
               C152054 * C151959 -
           ((C7453 + C7454 + C7455) * C152092 +
            (C6436 + C6435 + C6434) * C152188) *
               C152054 * C151952 -
           ((C10174 + C10175 + C10176) * C152092 +
            (C8121 + C8120 + C8119) * C152188) *
               C152054 * C4779) *
              C151917 +
          (((C6439 + C6438 + C6437) * C152188 +
            (C8122 + C8123 + C8124) * C152092) *
               C152054 * C151952 -
           ((C8125 + C8126 + C8127) * C152092 +
            (C8124 + C8123 + C8122) * C152188) *
               C152054 * C151959 +
           ((C8127 + C8126 + C8125) * C152188 +
            (C6089 * C10149 + C10165 + C10165 + C6084 * C10155 +
             C6091 * C10150 + C10166 + C10166 + C6085 * C10156 +
             C6093 * C10151 + C10167 + C10167 + C6086 * C10157) *
                C152092) *
               C152054 * C4779) *
              C3585) *
         C151823) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C62334 +
            C37949 * C62335 + C37950 * C62336 + C40513 * C62337) *
               C152054 * C151952 -
           (C40516 * C62337 + C40513 * C62336 + C37950 * C62335 +
            C37949 * C62334) *
               C152054 * C151959 +
           (C37950 * C62334 + C40513 * C62335 + C40516 * C62336 +
            C57128 * C62337) *
               C152054 * C4779) *
              C151910 +
          ((C32563 * C62334 + C32996 * C62335 + C34364 * C62336 +
            C40515 * C62337) *
               C152054 * C151959 -
           (C34364 * C62337 + C32996 * C62336 + C32563 * C62335 +
            C31851 * C62334) *
               C152054 * C151952 -
           (C57127 * C62337 + C40515 * C62336 + C34364 * C62335 +
            C32996 * C62334) *
               C152054 * C4779) *
              C151917 +
          ((C31852 * C62334 + C32562 * C62335 + C32997 * C62336 +
            C34363 * C62337) *
               C152054 * C151952 -
           (C40514 * C62337 + C34363 * C62336 + C32997 * C62335 +
            C32562 * C62334) *
               C152054 * C151959 +
           (C32997 * C62334 + C34363 * C62335 + C40514 * C62336 +
            (C31628 * C40488 + C40504 + C40504 + C151791 * C40492) * C62337) *
               C152054 * C4779) *
              C3585) *
         C151823) /
            (p * q * std::sqrt(p + q));
    d2ee[207] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
                  C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
                  C6086 * C160) *
                     C152188 +
                 (C15243 + C15244 + C15245) * C152092) *
                    C152054 * C4107 -
                ((C15246 + C15247 + C15248) * C152092 +
                 (C15245 + C15244 + C15243) * C152188) *
                    C152054 * C151956) *
                   C3101 +
               (((C7455 + C7454 + C7453) * C152188 +
                 (C8119 + C8120 + C8121) * C152092) *
                    C152054 * C151956 -
                ((C7453 + C7454 + C7455) * C152092 +
                 (C6436 + C6435 + C6434) * C152188) *
                    C152054 * C4107) *
                   C151914) *
                  C152255 +
              ((((C15249 + C15250 + C15251) * C152188 +
                 (C15252 + C15253 + C15254) * C152092) *
                    C152054 * C151956 -
                ((C15251 + C15250 + C15249) * C152092 +
                 (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
                  C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
                  C6084 * C159) *
                     C152188) *
                    C152054 * C4107) *
                   C3101 +
               (((C6440 + C6441 + C6442) * C152188 +
                 (C7456 + C7457 + C7458) * C152092) *
                    C152054 * C4107 -
                ((C9753 + C9754 + C9755) * C152092 +
                 (C7458 + C7457 + C7456) * C152188) *
                    C152054 * C151956) *
                   C151914) *
                  C152240 +
              ((((C6089 * C144 + C6108 + C6108 + C6084 * C160 + C6091 * C145 +
                  C6109 + C6109 + C6085 * C161 + C6093 * C146 + C6110 + C6110 +
                  C6086 * C162) *
                     C152188 +
                 (C15255 + C15256 + C15257) * C152092) *
                    C152054 * C4107 -
                ((C15258 + C15259 + C15260) * C152092 +
                 (C15257 + C15256 + C15255) * C152188) *
                    C152054 * C151956) *
                   C3101 +
               (((C7461 + C7460 + C7459) * C152188 +
                 (C6089 * C1532 + C6703 + C6703 + C6084 * C1556 +
                  C6091 * C1531 + C6704 + C6704 + C6085 * C1555 +
                  C6093 * C2677 + C6705 + C6705 + C6086 * C2679) *
                     C152092) *
                    C152054 * C151956 -
                ((C7459 + C7460 + C7461) * C152092 +
                 (C6448 + C6447 + C6446) * C152188) *
                    C152054 * C4107) *
                   C151914) *
                  C152208) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
                 C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
                 C6086 * C160) *
                    C152188 +
                (C15243 + C15244 + C15245) * C152092) *
                   C152054 * C4107 -
               ((C15246 + C15247 + C15248) * C152092 +
                (C15245 + C15244 + C15243) * C152188) *
                   C152054 * C151956) *
                  C152265 +
              (((C7455 + C7454 + C7453) * C152188 +
                (C8119 + C8120 + C8121) * C152092) *
                   C152054 * C151956 -
               ((C7453 + C7454 + C7455) * C152092 +
                (C6436 + C6435 + C6434) * C152188) *
                   C152054 * C4107) *
                  C152261 +
              (((C6439 + C6438 + C6437) * C152188 +
                (C8122 + C8123 + C8124) * C152092) *
                   C152054 * C4107 -
               ((C8125 + C8126 + C8127) * C152092 +
                (C8124 + C8123 + C8122) * C152188) *
                   C152054 * C151956) *
                  C152249 +
              (((C8868 + C8867 + C8866) * C152188 +
                (C6089 * C8064 + C8098 + C8098 + C6084 * C8070 + C6091 * C8065 +
                 C8099 + C8099 + C6085 * C8071 + C6093 * C8066 + C8100 + C8100 +
                 C6086 * C8072) *
                    C152092) *
                   C152054 * C151956 -
               ((C8866 + C8867 + C8868) * C152092 +
                (C7843 + C7842 + C7841) * C152188) *
                   C152054 * C4107) *
                  C152224) *
             C151823) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
             C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
             C6086 * C160) *
                C152188 +
            (C15243 + C15244 + C15245) * C152092) *
               C152054 * C152266 -
           ((C15246 + C15247 + C15248) * C152092 +
            (C15245 + C15244 + C15243) * C152188) *
               C152054 * C152263 +
           ((C15248 + C15247 + C15246) * C152188 +
            (C17787 + C17788 + C17789) * C152092) *
               C152054 * C152252 -
           ((C17790 + C17791 + C17792) * C152092 +
            (C17789 + C17788 + C17787) * C152188) *
               C152054 * C152230) *
              C3101 +
          (((C7455 + C7454 + C7453) * C152188 +
            (C8119 + C8120 + C8121) * C152092) *
               C152054 * C152263 -
           ((C7453 + C7454 + C7455) * C152092 +
            (C6436 + C6435 + C6434) * C152188) *
               C152054 * C152266 -
           ((C10174 + C10175 + C10176) * C152092 +
            (C8121 + C8120 + C8119) * C152188) *
               C152054 * C152252 +
           ((C10176 + C10175 + C10174) * C152188 +
            (C6089 * C9426 + C9445 + C9445 + C6084 * C9432 + C6091 * C9427 +
             C9446 + C9446 + C6085 * C9433 + C6093 * C9428 + C9447 + C9447 +
             C6086 * C9434) *
                C152092) *
               C152054 * C152230) *
              C151914) *
         C151823) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152188 +
              C37949 * C152092) *
                 C23040 +
             (C37675 + C37676) * C23041 + C37693 * C23042) *
                C4107 -
            (C39233 * C23042 + (C38659 + C38660) * C23041 +
             (C37950 * C152092 + C37949 * C152188) * C23040) *
                C151956) *
               C3101 +
           (((C38660 + C38659) * C23040 + (C38658 + C38657) * C23041 +
             C39927 * C23042) *
                C151956 -
            (C39009 * C23042 + (C37678 + C37677) * C23041 +
             (C37676 + C37675) * C23040) *
                C4107) *
               C151914) *
              C152255 +
          ((((C37951 * C152188 + C37952 * C152092) * C23040 +
             (C38661 + C38662) * C23041 + C39730 * C23042) *
                C151956 -
            (C37694 * C23042 + (C37682 + C37681) * C23041 +
             (C37951 * C152092 +
              (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152188) *
                 C23040) *
                C4107) *
               C3101 +
           (((C37681 + C37682) * C23040 + (C37683 + C37684) * C23041 +
             C39437 * C23042) *
                C4107 -
            ((C39731 + C39732) * C23042 + (C38664 + C38663) * C23041 +
             (C38662 + C38661) * C23040) *
                C151956) *
               C151914) *
              C152240 +
          (((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C152188 +
              C37953 * C152092) *
                 C23040 +
             (C37687 + C37688) * C23041 + C37695 * C23042) *
                C4107 -
            ((C38665 + C38666) * C23042 + (C38667 + C38668) * C23041 +
             (C37956 * C152092 + C37953 * C152188) * C23040) *
                C151956) *
               C3101 +
           (((C38668 + C38667) * C23040 + (C38666 + C38665) * C23041 +
             (C32567 * C152188 +
              (C31628 * C8066 + C32044 + C32044 + C151791 * C8072) * C152092) *
                 C23042) *
                C151956 -
            ((C37691 + C37692) * C23042 + (C37690 + C37689) * C23041 +
             (C37688 + C37687) * C23040) *
                C4107) *
               C151914) *
              C152208)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152188 +
             C37949 * C152092) *
                C23040 +
            (C37675 + C37676) * C23041 + C37693 * C23042) *
               C4107 -
           (C39233 * C23042 + (C38659 + C38660) * C23041 +
            (C37950 * C152092 + C37949 * C152188) * C23040) *
               C151956) *
              C152265 +
          (((C38660 + C38659) * C23040 + (C38658 + C38657) * C23041 +
            C39927 * C23042) *
               C151956 -
           (C39009 * C23042 + (C37678 + C37677) * C23041 +
            (C37676 + C37675) * C23040) *
               C4107) *
              C152261 +
          ((C37693 * C23040 + (C37680 + C37679) * C23041 + C39014 * C23042) *
               C4107 -
           ((C39928 + C39929) * C23042 + (C39239 + C39238) * C23041 +
            C39233 * C23040) *
               C151956) *
              C152249 +
          ((C39927 * C23040 + (C39929 + C39928) * C23041 +
            (C33482 * C152188 +
             (C31628 * C32969 + C32985 + C32985 + C151791 * C32971) * C152092) *
                C23042) *
               C151956 -
           ((C39012 + C39013) * C23042 + (C39011 + C39010) * C23041 +
            C39009 * C23040) *
               C4107) *
              C152224) *
         C151823) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152188 +
             C37949 * C152092) *
                C23040 +
            (C37675 + C37676) * C23041 + C37693 * C23042) *
               C152266 -
           (C39233 * C23042 + (C38659 + C38660) * C23041 +
            (C37950 * C152092 + C37949 * C152188) * C23040) *
               C152263 +
           ((C37950 * C152188 + C40513 * C152092) * C23040 +
            (C39234 + C39235) * C23041 + C39242 * C23042) *
               C152252 -
           ((C41217 + C41218) * C23042 + (C41219 + C41220) * C23041 +
            (C40516 * C152092 + C40513 * C152188) * C23040) *
               C152230) *
              C3101 +
          (((C38660 + C38659) * C23040 + (C38658 + C38657) * C23041 +
            C39927 * C23042) *
               C152263 -
           (C39009 * C23042 + (C37678 + C37677) * C23041 +
            (C37676 + C37675) * C23040) *
               C152266 -
           ((C39240 + C39241) * C23042 + (C39237 + C39236) * C23041 +
            (C39235 + C39234) * C23040) *
               C152252 +
           ((C41220 + C41219) * C23040 + (C41218 + C41217) * C23041 +
            (C34362 * C152188 +
             (C31628 * C33857 + C33868 + C33868 + C151791 * C33859) * C152092) *
                C23042) *
               C152230) *
              C151914) *
         C151823) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C62334 +
             C37949 * C62335 + C37950 * C62336 + C40513 * C62337) *
                C152054 * C4107 -
            (C40516 * C62337 + C40513 * C62336 + C37950 * C62335 +
             C37949 * C62334) *
                C152054 * C151956) *
               C3101 +
           ((C32563 * C62334 + C32996 * C62335 + C34364 * C62336 +
             C40515 * C62337) *
                C152054 * C151956 -
            (C34364 * C62337 + C32996 * C62336 + C32563 * C62335 +
             C31851 * C62334) *
                C152054 * C4107) *
               C151914) *
              C152255 +
          (((C37951 * C62334 + C37952 * C62335 + C41022 * C62336 +
             C57627 * C62337) *
                C152054 * C151956 -
            (C41022 * C62337 + C37952 * C62336 + C37951 * C62335 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C62334) *
                C152054 * C4107) *
               C3101 +
           ((C31855 * C62334 + C32564 * C62335 + C34078 * C62336 +
             C40818 * C62337) *
                C152054 * C4107 -
            (C57425 * C62337 + C40818 * C62336 + C34078 * C62335 +
             C32564 * C62334) *
                C152054 * C151956) *
               C151914) *
              C152240 +
          ((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C62334 +
             C37953 * C62335 + C37956 * C62336 + C54593 * C62337) *
                C152054 * C4107 -
            (C62637 * C62337 + C54593 * C62336 + C37956 * C62335 +
             C37953 * C62334) *
                C152054 * C151956) *
               C3101 +
           ((C32569 * C62334 + C37955 * C62335 + C54592 * C62336 +
             (C31628 * C9428 + C54587 + C54587 + C151791 * C9434) * C62337) *
                C152054 * C151956 -
            (C54592 * C62337 + C37955 * C62336 + C32569 * C62335 +
             C31859 * C62334) *
                C152054 * C4107) *
               C151914) *
              C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C62334 +
            C37949 * C62335 + C37950 * C62336 + C40513 * C62337) *
               C152054 * C4107 -
           (C40516 * C62337 + C40513 * C62336 + C37950 * C62335 +
            C37949 * C62334) *
               C152054 * C151956) *
              C152265 +
          ((C32563 * C62334 + C32996 * C62335 + C34364 * C62336 +
            C40515 * C62337) *
               C152054 * C151956 -
           (C34364 * C62337 + C32996 * C62336 + C32563 * C62335 +
            C31851 * C62334) *
               C152054 * C4107) *
              C152261 +
          ((C31852 * C62334 + C32562 * C62335 + C32997 * C62336 +
            C34363 * C62337) *
               C152054 * C4107 -
           (C40514 * C62337 + C34363 * C62336 + C32997 * C62335 +
            C32562 * C62334) *
               C152054 * C151956) *
              C152249 +
          ((C32561 * C62334 + C32998 * C62335 + C34362 * C62336 +
            (C31628 * C33857 + C33868 + C33868 + C151791 * C33859) * C62337) *
               C152054 * C151956 -
           (C34362 * C62337 + C32998 * C62336 + C32561 * C62335 +
            C31853 * C62334) *
               C152054 * C4107) *
              C152224) *
         C151823) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C62334 +
            C37949 * C62335 + C37950 * C62336 + C40513 * C62337) *
               C152054 * C152266 -
           (C40516 * C62337 + C40513 * C62336 + C37950 * C62335 +
            C37949 * C62334) *
               C152054 * C152263 +
           (C37950 * C62334 + C40513 * C62335 + C40516 * C62336 +
            C57128 * C62337) *
               C152054 * C152252 -
           (C64308 * C62337 + C57128 * C62336 + C40516 * C62335 +
            C40513 * C62334) *
               C152054 * C152230) *
              C3101 +
          ((C32563 * C62334 + C32996 * C62335 + C34364 * C62336 +
            C40515 * C62337) *
               C152054 * C152263 -
           (C34364 * C62337 + C32996 * C62336 + C32563 * C62335 +
            C31851 * C62334) *
               C152054 * C152266 -
           (C57127 * C62337 + C40515 * C62336 + C34364 * C62335 +
            C32996 * C62334) *
               C152054 * C152252 +
           (C34364 * C62334 + C40515 * C62335 + C57127 * C62336 +
            (C31628 * C57113 + C57122 + C57122 + C151791 * C57115) * C62337) *
               C152054 * C152230) *
              C151914) *
         C151823) /
            (p * q * std::sqrt(p + q));
    d2ee[208] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152188 +
              C37949 * C152092) *
                 C23040 +
             (C37675 + C37676) * C23041 + C37693 * C23042) *
                C151952 -
            (C39233 * C23042 + (C38659 + C38660) * C23041 +
             (C37950 * C152092 + C37949 * C152188) * C23040) *
                C151959 +
            ((C37950 * C152188 + C40513 * C152092) * C23040 +
             (C39234 + C39235) * C23041 + C39242 * C23042) *
                C4779) *
               C3101 +
           (((C38660 + C38659) * C23040 + (C38658 + C38657) * C23041 +
             C39927 * C23042) *
                C151959 -
            (C39009 * C23042 + (C37678 + C37677) * C23041 +
             (C37676 + C37675) * C23040) *
                C151952 -
            ((C39240 + C39241) * C23042 + (C39237 + C39236) * C23041 +
             (C39235 + C39234) * C23040) *
                C4779) *
               C151914) *
              C152158 +
          ((((C37951 * C152188 + C37952 * C152092) * C23040 +
             (C38661 + C38662) * C23041 + C39730 * C23042) *
                C151959 -
            (C37694 * C23042 + (C37682 + C37681) * C23041 +
             (C37951 * C152092 +
              (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152188) *
                 C23040) *
                C151952 -
            ((C40819 + C40809) * C23042 + (C40820 + C40812) * C23041 +
             (C41022 * C152092 + C37952 * C152188) * C23040) *
                C4779) *
               C3101 +
           (((C37681 + C37682) * C23040 + (C37683 + C37684) * C23041 +
             C39437 * C23042) *
                C151952 -
            ((C39731 + C39732) * C23042 + (C38664 + C38663) * C23041 +
             (C38662 + C38661) * C23040) *
                C151959 +
            ((C40812 + C40820) * C23040 + (C40809 + C40819) * C23041 +
             (C34076 * C152188 +
              (C31628 * C27086 + C34215 + C34215 + C151791 * C27090) *
                  C152092) *
                 C23042) *
                C4779) *
               C151914) *
              C151834)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
              C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
              C6086 * C160) *
                 C152188 +
             (C15243 + C15244 + C15245) * C152092) *
                C152054 * C151952 -
            ((C15246 + C15247 + C15248) * C152092 +
             (C15245 + C15244 + C15243) * C152188) *
                C152054 * C151959 +
            ((C15248 + C15247 + C15246) * C152188 +
             (C17787 + C17788 + C17789) * C152092) *
                C152054 * C4779) *
               C3101 +
           (((C7455 + C7454 + C7453) * C152188 +
             (C8119 + C8120 + C8121) * C152092) *
                C152054 * C151959 -
            ((C7453 + C7454 + C7455) * C152092 +
             (C6436 + C6435 + C6434) * C152188) *
                C152054 * C151952 -
            ((C10174 + C10175 + C10176) * C152092 +
             (C8121 + C8120 + C8119) * C152188) *
                C152054 * C4779) *
               C151914) *
              C152158 +
          ((((C15249 + C15250 + C15251) * C152188 +
             (C15252 + C15253 + C15254) * C152092) *
                C152054 * C151959 -
            ((C15251 + C15250 + C15249) * C152092 +
             (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
              C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
              C6084 * C159) *
                 C152188) *
                C152054 * C151952 -
            ((C18292 + C18293 + C18294) * C152092 +
             (C15254 + C15253 + C15252) * C152188) *
                C152054 * C4779) *
               C3101 +
           (((C6440 + C6441 + C6442) * C152188 +
             (C7456 + C7457 + C7458) * C152092) *
                C152054 * C151952 -
            ((C9753 + C9754 + C9755) * C152092 +
             (C7458 + C7457 + C7456) * C152188) *
                C152054 * C151959 +
            ((C9755 + C9754 + C9753) * C152188 +
             (C6089 * C2956 + C9953 + C9953 + C6084 * C2964 + C6091 * C2957 +
              C9954 + C9954 + C6085 * C2965 + C6093 * C2958 + C9955 + C9955 +
              C6086 * C2966) *
                 C152092) *
                C152054 * C4779) *
               C151914) *
              C151834)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C62334 +
             C37949 * C62335 + C37950 * C62336 + C40513 * C62337) *
                C152054 * C151952 -
            (C40516 * C62337 + C40513 * C62336 + C37950 * C62335 +
             C37949 * C62334) *
                C152054 * C151959 +
            (C37950 * C62334 + C40513 * C62335 + C40516 * C62336 +
             C57128 * C62337) *
                C152054 * C4779) *
               C3101 +
           ((C32563 * C62334 + C32996 * C62335 + C34364 * C62336 +
             C40515 * C62337) *
                C152054 * C151959 -
            (C34364 * C62337 + C32996 * C62336 + C32563 * C62335 +
             C31851 * C62334) *
                C152054 * C151952 -
            (C57127 * C62337 + C40515 * C62336 + C34364 * C62335 +
             C32996 * C62334) *
                C152054 * C4779) *
               C151914) *
              C152158 +
          (((C37951 * C62334 + C37952 * C62335 + C41022 * C62336 +
             C57627 * C62337) *
                C152054 * C151959 -
            (C41022 * C62337 + C37952 * C62336 + C37951 * C62335 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C62334) *
                C152054 * C151952 -
            (C64638 * C62337 + C57627 * C62336 + C41022 * C62335 +
             C37952 * C62334) *
                C152054 * C4779) *
               C3101 +
           ((C31855 * C62334 + C32564 * C62335 + C34078 * C62336 +
             C40818 * C62337) *
                C152054 * C151952 -
            (C57425 * C62337 + C40818 * C62336 + C34078 * C62335 +
             C32564 * C62334) *
                C152054 * C151959 +
            (C34078 * C62334 + C40818 * C62335 + C57425 * C62336 +
             (C31628 * C49559 + C57624 + C57624 + C151791 * C49561) * C62337) *
                C152054 * C4779) *
               C151914) *
              C151834)) /
            (p * q * std::sqrt(p + q));
    d2ee[209] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
             C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
             C6086 * C160) *
                C152188 +
            (C15243 + C15244 + C15245) * C152092) *
               C152054 * C4107 -
           ((C15246 + C15247 + C15248) * C152092 +
            (C15245 + C15244 + C15243) * C152188) *
               C152054 * C151956) *
              C152265 +
          (((C7455 + C7454 + C7453) * C152188 +
            (C8119 + C8120 + C8121) * C152092) *
               C152054 * C151956 -
           ((C7453 + C7454 + C7455) * C152092 +
            (C6436 + C6435 + C6434) * C152188) *
               C152054 * C4107) *
              C152261 +
          (((C6439 + C6438 + C6437) * C152188 +
            (C8122 + C8123 + C8124) * C152092) *
               C152054 * C4107 -
           ((C8125 + C8126 + C8127) * C152092 +
            (C8124 + C8123 + C8122) * C152188) *
               C152054 * C151956) *
              C152249 +
          (((C8868 + C8867 + C8866) * C152188 +
            (C6089 * C8064 + C8098 + C8098 + C6084 * C8070 + C6091 * C8065 +
             C8099 + C8099 + C6085 * C8071 + C6093 * C8066 + C8100 + C8100 +
             C6086 * C8072) *
                C152092) *
               C152054 * C151956 -
           ((C8866 + C8867 + C8868) * C152092 +
            (C7843 + C7842 + C7841) * C152188) *
               C152054 * C4107) *
              C152224) *
         C151823) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
              C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
              C6086 * C160) *
                 C152188 +
             (C15243 + C15244 + C15245) * C152092) *
                C152054 * C4107 -
            ((C15246 + C15247 + C15248) * C152092 +
             (C15245 + C15244 + C15243) * C152188) *
                C152054 * C151956) *
               C3101 +
           (((C7455 + C7454 + C7453) * C152188 +
             (C8119 + C8120 + C8121) * C152092) *
                C152054 * C151956 -
            ((C7453 + C7454 + C7455) * C152092 +
             (C6436 + C6435 + C6434) * C152188) *
                C152054 * C4107) *
               C151914) *
              C152255 +
          ((((C15249 + C15250 + C15251) * C152188 +
             (C15252 + C15253 + C15254) * C152092) *
                C152054 * C151956 -
            ((C15251 + C15250 + C15249) * C152092 +
             (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
              C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
              C6084 * C159) *
                 C152188) *
                C152054 * C4107) *
               C3101 +
           (((C6440 + C6441 + C6442) * C152188 +
             (C7456 + C7457 + C7458) * C152092) *
                C152054 * C4107 -
            ((C9753 + C9754 + C9755) * C152092 +
             (C7458 + C7457 + C7456) * C152188) *
                C152054 * C151956) *
               C151914) *
              C152240 +
          ((((C6089 * C144 + C6108 + C6108 + C6084 * C160 + C6091 * C145 +
              C6109 + C6109 + C6085 * C161 + C6093 * C146 + C6110 + C6110 +
              C6086 * C162) *
                 C152188 +
             (C15255 + C15256 + C15257) * C152092) *
                C152054 * C4107 -
            ((C15258 + C15259 + C15260) * C152092 +
             (C15257 + C15256 + C15255) * C152188) *
                C152054 * C151956) *
               C3101 +
           (((C7461 + C7460 + C7459) * C152188 +
             (C6089 * C1532 + C6703 + C6703 + C6084 * C1556 + C6091 * C1531 +
              C6704 + C6704 + C6085 * C1555 + C6093 * C2677 + C6705 + C6705 +
              C6086 * C2679) *
                 C152092) *
                C152054 * C151956 -
            ((C7459 + C7460 + C7461) * C152092 +
             (C6448 + C6447 + C6446) * C152188) *
                C152054 * C4107) *
               C151914) *
              C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152188 +
              C37949 * C152092) *
                 C23040 +
             (C37675 + C37676) * C23041 + C37693 * C23042) *
                C4107 -
            (C39233 * C23042 + (C38659 + C38660) * C23041 +
             (C37950 * C152092 + C37949 * C152188) * C23040) *
                C151956) *
               C3101 +
           (((C38660 + C38659) * C23040 + (C38658 + C38657) * C23041 +
             C39927 * C23042) *
                C151956 -
            (C39009 * C23042 + (C37678 + C37677) * C23041 +
             (C37676 + C37675) * C23040) *
                C4107) *
               C151914) *
              C152255 +
          ((((C37951 * C152188 + C37952 * C152092) * C23040 +
             (C38661 + C38662) * C23041 + C39730 * C23042) *
                C151956 -
            (C37694 * C23042 + (C37682 + C37681) * C23041 +
             (C37951 * C152092 +
              (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152188) *
                 C23040) *
                C4107) *
               C3101 +
           (((C37681 + C37682) * C23040 + (C37683 + C37684) * C23041 +
             C39437 * C23042) *
                C4107 -
            ((C39731 + C39732) * C23042 + (C38664 + C38663) * C23041 +
             (C38662 + C38661) * C23040) *
                C151956) *
               C151914) *
              C152240 +
          (((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C152188 +
              C37953 * C152092) *
                 C23040 +
             (C37687 + C37688) * C23041 + C37695 * C23042) *
                C4107 -
            ((C38665 + C38666) * C23042 + (C38667 + C38668) * C23041 +
             (C37956 * C152092 + C37953 * C152188) * C23040) *
                C151956) *
               C3101 +
           (((C38668 + C38667) * C23040 + (C38666 + C38665) * C23041 +
             (C32567 * C152188 +
              (C31628 * C8066 + C32044 + C32044 + C151791 * C8072) * C152092) *
                 C23042) *
                C151956 -
            ((C37691 + C37692) * C23042 + (C37690 + C37689) * C23041 +
             (C37688 + C37687) * C23040) *
                C4107) *
               C151914) *
              C152208)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152188 +
             C37949 * C152092) *
                C23040 +
            (C37675 + C37676) * C23041 + C37693 * C23042) *
               C4107 -
           (C39233 * C23042 + (C38659 + C38660) * C23041 +
            (C37950 * C152092 + C37949 * C152188) * C23040) *
               C151956) *
              C152265 +
          (((C38660 + C38659) * C23040 + (C38658 + C38657) * C23041 +
            C39927 * C23042) *
               C151956 -
           (C39009 * C23042 + (C37678 + C37677) * C23041 +
            (C37676 + C37675) * C23040) *
               C4107) *
              C152261 +
          ((C37693 * C23040 + (C37680 + C37679) * C23041 + C39014 * C23042) *
               C4107 -
           ((C39928 + C39929) * C23042 + (C39239 + C39238) * C23041 +
            C39233 * C23040) *
               C151956) *
              C152249 +
          ((C39927 * C23040 + (C39929 + C39928) * C23041 +
            (C33482 * C152188 +
             (C31628 * C32969 + C32985 + C32985 + C151791 * C32971) * C152092) *
                C23042) *
               C151956 -
           ((C39012 + C39013) * C23042 + (C39011 + C39010) * C23041 +
            C39009 * C23040) *
               C4107) *
              C152224) *
         C151823) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C62334 +
             C37949 * C62335 + C37950 * C62336 + C40513 * C62337) *
                C152054 * C4107 -
            (C40516 * C62337 + C40513 * C62336 + C37950 * C62335 +
             C37949 * C62334) *
                C152054 * C151956) *
               C3101 +
           ((C32563 * C62334 + C32996 * C62335 + C34364 * C62336 +
             C40515 * C62337) *
                C152054 * C151956 -
            (C34364 * C62337 + C32996 * C62336 + C32563 * C62335 +
             C31851 * C62334) *
                C152054 * C4107) *
               C151914) *
              C152255 +
          (((C37951 * C62334 + C37952 * C62335 + C41022 * C62336 +
             C57627 * C62337) *
                C152054 * C151956 -
            (C41022 * C62337 + C37952 * C62336 + C37951 * C62335 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C62334) *
                C152054 * C4107) *
               C3101 +
           ((C31855 * C62334 + C32564 * C62335 + C34078 * C62336 +
             C40818 * C62337) *
                C152054 * C4107 -
            (C57425 * C62337 + C40818 * C62336 + C34078 * C62335 +
             C32564 * C62334) *
                C152054 * C151956) *
               C151914) *
              C152240 +
          ((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C62334 +
             C37953 * C62335 + C37956 * C62336 + C54593 * C62337) *
                C152054 * C4107 -
            (C62637 * C62337 + C54593 * C62336 + C37956 * C62335 +
             C37953 * C62334) *
                C152054 * C151956) *
               C3101 +
           ((C32569 * C62334 + C37955 * C62335 + C54592 * C62336 +
             (C31628 * C9428 + C54587 + C54587 + C151791 * C9434) * C62337) *
                C152054 * C151956 -
            (C54592 * C62337 + C37955 * C62336 + C32569 * C62335 +
             C31859 * C62334) *
                C152054 * C4107) *
               C151914) *
              C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C62334 +
            C37949 * C62335 + C37950 * C62336 + C40513 * C62337) *
               C152054 * C4107 -
           (C40516 * C62337 + C40513 * C62336 + C37950 * C62335 +
            C37949 * C62334) *
               C152054 * C151956) *
              C152265 +
          ((C32563 * C62334 + C32996 * C62335 + C34364 * C62336 +
            C40515 * C62337) *
               C152054 * C151956 -
           (C34364 * C62337 + C32996 * C62336 + C32563 * C62335 +
            C31851 * C62334) *
               C152054 * C4107) *
              C152261 +
          ((C31852 * C62334 + C32562 * C62335 + C32997 * C62336 +
            C34363 * C62337) *
               C152054 * C4107 -
           (C40514 * C62337 + C34363 * C62336 + C32997 * C62335 +
            C32562 * C62334) *
               C152054 * C151956) *
              C152249 +
          ((C32561 * C62334 + C32998 * C62335 + C34362 * C62336 +
            (C31628 * C33857 + C33868 + C33868 + C151791 * C33859) * C62337) *
               C152054 * C151956 -
           (C34362 * C62337 + C32998 * C62336 + C32561 * C62335 +
            C31853 * C62334) *
               C152054 * C4107) *
              C152224) *
         C151823) /
            (p * q * std::sqrt(p + q));
    d2ee[210] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
                 C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
                 C6086 * C160) *
                    C152188 +
                (C15243 + C15244 + C15245) * C152092) *
                   C152054 * C151869 * C152172 -
               ((C7453 + C7454 + C7455) * C152092 +
                (C6436 + C6435 + C6434) * C152188) *
                   C152054 * C151869 * C151914) *
                  C739 +
              (((C6440 + C6441 + C6442) * C152188 +
                (C7456 + C7457 + C7458) * C152092) *
                   C152054 * C151869 * C151914 -
               ((C15251 + C15250 + C15249) * C152092 +
                (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
                 C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
                 C6084 * C159) *
                    C152188) *
                   C152054 * C151869 * C152172) *
                  C740 +
              (((C6089 * C144 + C6108 + C6108 + C6084 * C160 + C6091 * C145 +
                 C6109 + C6109 + C6085 * C161 + C6093 * C146 + C6110 + C6110 +
                 C6086 * C162) *
                    C152188 +
                (C15255 + C15256 + C15257) * C152092) *
                   C152054 * C151869 * C152172 -
               ((C7459 + C7460 + C7461) * C152092 +
                (C6448 + C6447 + C6446) * C152188) *
                   C152054 * C151869 * C151914) *
                  C741 +
              (((C6915 + C6916 + C6917) * C152188 +
                (C6089 * C1086 + C7115 + C7115 + C6084 * C1098 + C6091 * C1087 +
                 C7116 + C7116 + C6085 * C1099 + C6093 * C1088 + C7117 + C7117 +
                 C6086 * C1100) *
                    C152092) *
                   C152054 * C151869 * C151914 -
               ((C6093 * C557 + C7114 + C7114 + C6086 * C581 + C6091 * C555 +
                 C7113 + C7113 + C6085 * C579 + C6089 * C547 + C7112 + C7112 +
                 C6084 * C571) *
                    C152092 +
                (C6093 * C147 + C6117 + C6117 + C6086 * C163 + C6091 * C146 +
                 C6118 + C6118 + C6085 * C162 + C6089 * C145 + C6119 + C6119 +
                 C6084 * C161) *
                    C152188) *
                   C152054 * C151869 * C152172) *
                  C152218) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
                 C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
                 C6086 * C160) *
                    C152188 +
                (C15243 + C15244 + C15245) * C152092) *
                   C152054 * C151869 * C1709 -
               ((C7453 + C7454 + C7455) * C152092 +
                (C6436 + C6435 + C6434) * C152188) *
                   C152054 * C151869 * C1710 +
               ((C6439 + C6438 + C6437) * C152188 +
                (C8122 + C8123 + C8124) * C152092) *
                   C152054 * C151869 * C1711 -
               ((C8866 + C8867 + C8868) * C152092 +
                (C7843 + C7842 + C7841) * C152188) *
                   C152054 * C151869 * C152224) *
                  C152158 +
              (((C6440 + C6441 + C6442) * C152188 +
                (C7456 + C7457 + C7458) * C152092) *
                   C152054 * C151869 * C1710 -
               ((C15251 + C15250 + C15249) * C152092 +
                (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
                 C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
                 C6084 * C159) *
                    C152188) *
                   C152054 * C151869 * C1709 -
               ((C8645 + C8646 + C8647) * C152092 +
                (C6445 + C6444 + C6443) * C152188) *
                   C152054 * C151869 * C1711 +
               ((C8339 + C8338 + C8337) * C152188 +
                (C6089 * C2054 + C8636 + C8636 + C6084 * C2062 + C6091 * C2055 +
                 C8637 + C8637 + C6085 * C2063 + C6093 * C2056 + C8638 + C8638 +
                 C6086 * C2064) *
                    C152092) *
                   C152054 * C151869 * C152224) *
                  C151834)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
              C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
              C6086 * C160) *
                 C152188 +
             (C15243 + C15244 + C15245) * C152092) *
                C152054 * C2215 -
            ((C15246 + C15247 + C15248) * C152092 +
             (C15245 + C15244 + C15243) * C152188) *
                C152054 * C2216 +
            ((C15248 + C15247 + C15246) * C152188 +
             (C17787 + C17788 + C17789) * C152092) *
                C152054 * C152217) *
               C152172 +
           (((C7455 + C7454 + C7453) * C152188 +
             (C8119 + C8120 + C8121) * C152092) *
                C152054 * C2216 -
            ((C7453 + C7454 + C7455) * C152092 +
             (C6436 + C6435 + C6434) * C152188) *
                C152054 * C2215 -
            ((C10174 + C10175 + C10176) * C152092 +
             (C8121 + C8120 + C8119) * C152188) *
                C152054 * C152217) *
               C151914) *
              C152158 +
          ((((C15249 + C15250 + C15251) * C152188 +
             (C15252 + C15253 + C15254) * C152092) *
                C152054 * C2216 -
            ((C15251 + C15250 + C15249) * C152092 +
             (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
              C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
              C6084 * C159) *
                 C152188) *
                C152054 * C2215 -
            ((C6093 * C2451 + C9952 + C9952 + C6086 * C2467 + C6091 * C2452 +
              C9951 + C9951 + C6085 * C2468 + C6089 * C2453 + C9950 + C9950 +
              C6084 * C2469) *
                 C152092 +
             (C15254 + C15253 + C15252) * C152188) *
                C152054 * C152217) *
               C152172 +
           (((C6440 + C6441 + C6442) * C152188 +
             (C7456 + C7457 + C7458) * C152092) *
                C152054 * C2215 -
            ((C9753 + C9754 + C9755) * C152092 +
             (C7458 + C7457 + C7456) * C152188) *
                C152054 * C2216 +
            ((C9755 + C9754 + C9753) * C152188 +
             (C6089 * C2956 + C9953 + C9953 + C6084 * C2964 + C6091 * C2957 +
              C9954 + C9954 + C6085 * C2965 + C6093 * C2958 + C9955 + C9955 +
              C6086 * C2966) *
                 C152092) *
                C152054 * C152217) *
               C151914) *
              C151834)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152188 +
             C37949 * C152092) *
                C23040 +
            (C37675 + C37676) * C23041 + C37693 * C23042) *
               C151869 * C152172 -
           ((C37679 + C37680) * C23042 + (C37678 + C37677) * C23041 +
            (C37676 + C37675) * C23040) *
               C151869 * C151914) *
              C739 +
          (((C37681 + C37682) * C23040 + (C37683 + C37684) * C23041 +
            (C37685 + C37686) * C23042) *
               C151869 * C151914 -
           (C37694 * C23042 + (C37682 + C37681) * C23041 +
            (C37951 * C152092 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152188) *
                C23040) *
               C151869 * C152172) *
              C740 +
          ((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C152188 +
             C37953 * C152092) *
                C23040 +
            (C37687 + C37688) * C23041 + C37695 * C23042) *
               C151869 * C152172 -
           ((C37691 + C37692) * C23042 + (C37690 + C37689) * C23041 +
            (C37688 + C37687) * C23040) *
               C151869 * C151914) *
              C741 +
          (((C38151 + C38163) * C23040 + (C38154 + C38164) * C23041 +
            (C32190 * C152188 +
             (C31628 * C2056 + C32327 + C32327 + C151791 * C2064) * C152092) *
                C23042) *
               C151869 * C151914 -
           ((C38164 + C38154) * C23042 + (C38163 + C38151) * C23041 +
            ((C31628 * C547 + C32324 + C32324 + C151791 * C571) * C152092 +
             (C31628 * C145 + C31646 + C31646 + C151791 * C161) * C152188) *
                C23040) *
               C151869 * C152172) *
              C152218)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152188 +
             C37949 * C152092) *
                C23040 +
            (C37675 + C37676) * C23041 + C37693 * C23042) *
               C151869 * C1709 -
           (C39009 * C23042 + (C37678 + C37677) * C23041 +
            (C37676 + C37675) * C23040) *
               C151869 * C1710 +
           (C37693 * C23040 + (C37680 + C37679) * C23041 + C39014 * C23042) *
               C151869 * C1711 -
           ((C39012 + C39013) * C23042 + (C39011 + C39010) * C23041 +
            C39009 * C23040) *
               C151869 * C152224) *
              C152158 +
          (((C37681 + C37682) * C23040 + (C37683 + C37684) * C23041 +
            C39437 * C23042) *
               C151869 * C1710 -
           (C37694 * C23042 + (C37682 + C37681) * C23041 +
            (C37951 * C152092 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152188) *
                C23040) *
               C151869 * C1709 -
           ((C39438 + C39439) * C23042 + (C37686 + C37685) * C23041 +
            C37694 * C23040) *
               C151869 * C1711 +
           (C39437 * C23040 + (C39439 + C39438) * C23041 +
            (C33141 * C152188 +
             (C31628 * C25784 + C33339 + C33339 + C151791 * C25788) * C152092) *
                C23042) *
               C151869 * C152224) *
              C151834)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152188 +
              C37949 * C152092) *
                 C23040 +
             (C37675 + C37676) * C23041 + C37693 * C23042) *
                C2215 -
            (C39233 * C23042 + (C38659 + C38660) * C23041 +
             (C37950 * C152092 + C37949 * C152188) * C23040) *
                C2216 +
            ((C37950 * C152188 + C40513 * C152092) * C23040 +
             (C39234 + C39235) * C23041 + C39242 * C23042) *
                C152217) *
               C152172 +
           (((C38660 + C38659) * C23040 + (C38658 + C38657) * C23041 +
             C39927 * C23042) *
                C2216 -
            (C39009 * C23042 + (C37678 + C37677) * C23041 +
             (C37676 + C37675) * C23040) *
                C2215 -
            ((C39240 + C39241) * C23042 + (C39237 + C39236) * C23041 +
             (C39235 + C39234) * C23040) *
                C152217) *
               C151914) *
              C152158 +
          ((((C37951 * C152188 + C37952 * C152092) * C23040 +
             (C38661 + C38662) * C23041 + C39730 * C23042) *
                C2216 -
            (C37694 * C23042 + (C37682 + C37681) * C23041 +
             (C37951 * C152092 +
              (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152188) *
                 C23040) *
                C2215 -
            ((C40819 + C40809) * C23042 + (C40820 + C40812) * C23041 +
             ((C31628 * C2453 + C34212 + C34212 + C151791 * C2469) * C152092 +
              C37952 * C152188) *
                 C23040) *
                C152217) *
               C152172 +
           (((C37681 + C37682) * C23040 + (C37683 + C37684) * C23041 +
             C39437 * C23042) *
                C2215 -
            ((C39731 + C39732) * C23042 + (C38664 + C38663) * C23041 +
             (C38662 + C38661) * C23040) *
                C2216 +
            ((C40812 + C40820) * C23040 + (C40809 + C40819) * C23041 +
             (C34076 * C152188 +
              (C31628 * C27086 + C34215 + C34215 + C151791 * C27090) *
                  C152092) *
                 C23042) *
                C152217) *
               C151914) *
              C151834)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C62334 +
            C37949 * C62335 + C37950 * C62336 + C40513 * C62337) *
               C152054 * C151869 * C152172 -
           (C34364 * C62337 + C32996 * C62336 + C32563 * C62335 +
            C31851 * C62334) *
               C152054 * C151869 * C151914) *
              C739 +
          ((C31855 * C62334 + C32564 * C62335 + C34078 * C62336 +
            C40818 * C62337) *
               C152054 * C151869 * C151914 -
           (C41022 * C62337 + C37952 * C62336 + C37951 * C62335 +
            (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C62334) *
               C152054 * C151869 * C152172) *
              C740 +
          (((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C62334 +
            C37953 * C62335 + C37956 * C62336 + C54593 * C62337) *
               C152054 * C151869 * C152172 -
           (C54592 * C62337 + C37955 * C62336 + C32569 * C62335 +
            C31859 * C62334) *
               C152054 * C151869 * C151914) *
              C741 +
          ((C32188 * C62334 + C38161 * C62335 + C54794 * C62336 +
            (C31628 * C2958 + C54993 + C54993 + C151791 * C2966) * C62337) *
               C152054 * C151869 * C151914 -
           ((C31628 * C2451 + C54992 + C54992 + C151791 * C2467) * C62337 +
            C54996 * C62336 + C38366 * C62335 +
            (C31628 * C145 + C31646 + C31646 + C151791 * C161) * C62334) *
               C152054 * C151869 * C152172) *
              C152218)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C62334 +
            C37949 * C62335 + C37950 * C62336 + C40513 * C62337) *
               C152054 * C151869 * C1709 -
           (C34364 * C62337 + C32996 * C62336 + C32563 * C62335 +
            C31851 * C62334) *
               C152054 * C151869 * C1710 +
           (C31852 * C62334 + C32562 * C62335 + C32997 * C62336 +
            C34363 * C62337) *
               C152054 * C151869 * C1711 -
           (C34362 * C62337 + C32998 * C62336 + C32561 * C62335 +
            C31853 * C62334) *
               C152054 * C151869 * C152224) *
              C152158 +
          ((C31855 * C62334 + C32564 * C62335 + C34078 * C62336 +
            C40818 * C62337) *
               C152054 * C151869 * C1710 -
           (C41022 * C62337 + C37952 * C62336 + C37951 * C62335 +
            (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C62334) *
               C152054 * C151869 * C1709 -
           (C40817 * C62337 + C34077 * C62336 + C32565 * C62335 +
            C31856 * C62334) *
               C152054 * C151869 * C1711 +
           (C31857 * C62334 + C32566 * C62335 + C34076 * C62336 +
            (C31628 * C27086 + C34215 + C34215 + C151791 * C27090) * C62337) *
               C152054 * C151869 * C152224) *
              C151834)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C62334 +
             C37949 * C62335 + C37950 * C62336 + C40513 * C62337) *
                C152054 * C2215 -
            (C40516 * C62337 + C40513 * C62336 + C37950 * C62335 +
             C37949 * C62334) *
                C152054 * C2216 +
            (C37950 * C62334 + C40513 * C62335 + C40516 * C62336 +
             C57128 * C62337) *
                C152054 * C152217) *
               C152172 +
           ((C32563 * C62334 + C32996 * C62335 + C34364 * C62336 +
             C40515 * C62337) *
                C152054 * C2216 -
            (C34364 * C62337 + C32996 * C62336 + C32563 * C62335 +
             C31851 * C62334) *
                C152054 * C2215 -
            (C57127 * C62337 + C40515 * C62336 + C34364 * C62335 +
             C32996 * C62334) *
                C152054 * C152217) *
               C151914) *
              C152158 +
          (((C37951 * C62334 + C37952 * C62335 + C41022 * C62336 +
             C57627 * C62337) *
                C152054 * C2216 -
            (C41022 * C62337 + C37952 * C62336 + C37951 * C62335 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C62334) *
                C152054 * C2215 -
            ((C31628 * C17751 + C57623 + C57623 + C151791 * C17757) * C62337 +
             C57627 * C62336 + C41022 * C62335 + C37952 * C62334) *
                C152054 * C152217) *
               C152172 +
           ((C31855 * C62334 + C32564 * C62335 + C34078 * C62336 +
             C40818 * C62337) *
                C152054 * C2215 -
            (C57425 * C62337 + C40818 * C62336 + C34078 * C62335 +
             C32564 * C62334) *
                C152054 * C2216 +
            (C34078 * C62334 + C40818 * C62335 + C57425 * C62336 +
             (C31628 * C49559 + C57624 + C57624 + C151791 * C49561) * C62337) *
                C152054 * C152217) *
               C151914) *
              C151834)) /
            (p * q * std::sqrt(p + q));
    d2ee[211] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
                  C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
                  C6086 * C160) *
                     C152188 +
                 (C15243 + C15244 + C15245) * C152092) *
                    C152054 * C152173 -
                ((C15246 + C15247 + C15248) * C152092 +
                 (C15245 + C15244 + C15243) * C152188) *
                    C152054 * C151956) *
                   C152172 +
               (((C7455 + C7454 + C7453) * C152188 +
                 (C8119 + C8120 + C8121) * C152092) *
                    C152054 * C151956 -
                ((C7453 + C7454 + C7455) * C152092 +
                 (C6436 + C6435 + C6434) * C152188) *
                    C152054 * C152173) *
                   C151914) *
                  C335 +
              ((((C15249 + C15250 + C15251) * C152188 +
                 (C15252 + C15253 + C15254) * C152092) *
                    C152054 * C151956 -
                ((C15251 + C15250 + C15249) * C152092 +
                 (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
                  C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
                  C6084 * C159) *
                     C152188) *
                    C152054 * C152173) *
                   C152172 +
               (((C6440 + C6441 + C6442) * C152188 +
                 (C7456 + C7457 + C7458) * C152092) *
                    C152054 * C152173 -
                ((C9753 + C9754 + C9755) * C152092 +
                 (C7458 + C7457 + C7456) * C152188) *
                    C152054 * C151956) *
                   C151914) *
                  C336 +
              ((((C6089 * C144 + C6108 + C6108 + C6084 * C160 + C6091 * C145 +
                  C6109 + C6109 + C6085 * C161 + C6093 * C146 + C6110 + C6110 +
                  C6086 * C162) *
                     C152188 +
                 (C15255 + C15256 + C15257) * C152092) *
                    C152054 * C152173 -
                ((C15258 + C15259 + C15260) * C152092 +
                 (C15257 + C15256 + C15255) * C152188) *
                    C152054 * C151956) *
                   C152172 +
               (((C7461 + C7460 + C7459) * C152188 +
                 (C6089 * C1532 + C6703 + C6703 + C6084 * C1556 +
                  C6091 * C1531 + C6704 + C6704 + C6085 * C1555 +
                  C6093 * C2677 + C6705 + C6705 + C6086 * C2679) *
                     C152092) *
                    C152054 * C151956 -
                ((C7459 + C7460 + C7461) * C152092 +
                 (C6448 + C6447 + C6446) * C152188) *
                    C152054 * C152173) *
                   C151914) *
                  C152208) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
                 C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
                 C6086 * C160) *
                    C152188 +
                (C15243 + C15244 + C15245) * C152092) *
                   C152054 * C152173 -
               ((C15246 + C15247 + C15248) * C152092 +
                (C15245 + C15244 + C15243) * C152188) *
                   C152054 * C151956) *
                  C1709 +
              (((C7455 + C7454 + C7453) * C152188 +
                (C8119 + C8120 + C8121) * C152092) *
                   C152054 * C151956 -
               ((C7453 + C7454 + C7455) * C152092 +
                (C6436 + C6435 + C6434) * C152188) *
                   C152054 * C152173) *
                  C1710 +
              (((C6439 + C6438 + C6437) * C152188 +
                (C8122 + C8123 + C8124) * C152092) *
                   C152054 * C152173 -
               ((C8125 + C8126 + C8127) * C152092 +
                (C8124 + C8123 + C8122) * C152188) *
                   C152054 * C151956) *
                  C1711 +
              (((C8868 + C8867 + C8866) * C152188 +
                (C6089 * C8064 + C8098 + C8098 + C6084 * C8070 + C6091 * C8065 +
                 C8099 + C8099 + C6085 * C8071 + C6093 * C8066 + C8100 + C8100 +
                 C6086 * C8072) *
                    C152092) *
                   C152054 * C151956 -
               ((C8866 + C8867 + C8868) * C152092 +
                (C7843 + C7842 + C7841) * C152188) *
                   C152054 * C152173) *
                  C152224) *
             C151823) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
             C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
             C6086 * C160) *
                C152188 +
            (C15243 + C15244 + C15245) * C152092) *
               C152054 * C2814 -
           ((C15246 + C15247 + C15248) * C152092 +
            (C15245 + C15244 + C15243) * C152188) *
               C152054 * C2815 +
           ((C15248 + C15247 + C15246) * C152188 +
            (C17787 + C17788 + C17789) * C152092) *
               C152054 * C2816 -
           ((C17790 + C17791 + C17792) * C152092 +
            (C17789 + C17788 + C17787) * C152188) *
               C152054 * C152230) *
              C152172 +
          (((C7455 + C7454 + C7453) * C152188 +
            (C8119 + C8120 + C8121) * C152092) *
               C152054 * C2815 -
           ((C7453 + C7454 + C7455) * C152092 +
            (C6436 + C6435 + C6434) * C152188) *
               C152054 * C2814 -
           ((C10174 + C10175 + C10176) * C152092 +
            (C8121 + C8120 + C8119) * C152188) *
               C152054 * C2816 +
           ((C10176 + C10175 + C10174) * C152188 +
            (C6089 * C9426 + C9445 + C9445 + C6084 * C9432 + C6091 * C9427 +
             C9446 + C9446 + C6085 * C9433 + C6093 * C9428 + C9447 + C9447 +
             C6086 * C9434) *
                C152092) *
               C152054 * C152230) *
              C151914) *
         C151823) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152188 +
              C37949 * C152092) *
                 C23040 +
             (C37675 + C37676) * C23041 + C37693 * C23042) *
                C152173 -
            ((C38657 + C38658) * C23042 + (C38659 + C38660) * C23041 +
             (C37950 * C152092 + C37949 * C152188) * C23040) *
                C151956) *
               C152172 +
           (((C38660 + C38659) * C23040 + (C38658 + C38657) * C23041 +
             (C32561 * C152188 + C32998 * C152092) * C23042) *
                C151956 -
            ((C37679 + C37680) * C23042 + (C37678 + C37677) * C23041 +
             (C37676 + C37675) * C23040) *
                C152173) *
               C151914) *
              C335 +
          ((((C37951 * C152188 + C37952 * C152092) * C23040 +
             (C38661 + C38662) * C23041 + (C38663 + C38664) * C23042) *
                C151956 -
            (C37694 * C23042 + (C37682 + C37681) * C23041 +
             (C37951 * C152092 +
              (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152188) *
                 C23040) *
                C152173) *
               C152172 +
           (((C37681 + C37682) * C23040 + (C37683 + C37684) * C23041 +
             (C37685 + C37686) * C23042) *
                C152173 -
            ((C34076 * C152092 + C32566 * C152188) * C23042 +
             (C38664 + C38663) * C23041 + (C38662 + C38661) * C23040) *
                C151956) *
               C151914) *
              C336 +
          (((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C152188 +
              C37953 * C152092) *
                 C23040 +
             (C37687 + C37688) * C23041 + C37695 * C23042) *
                C152173 -
            ((C38665 + C38666) * C23042 + (C38667 + C38668) * C23041 +
             (C37956 * C152092 + C37953 * C152188) * C23040) *
                C151956) *
               C152172 +
           (((C38668 + C38667) * C23040 + (C38666 + C38665) * C23041 +
             (C32567 * C152188 +
              (C31628 * C8066 + C32044 + C32044 + C151791 * C8072) * C152092) *
                 C23042) *
                C151956 -
            ((C37691 + C37692) * C23042 + (C37690 + C37689) * C23041 +
             (C37688 + C37687) * C23040) *
                C152173) *
               C151914) *
              C152208)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152188 +
             C37949 * C152092) *
                C23040 +
            (C37675 + C37676) * C23041 + C37693 * C23042) *
               C152173 -
           (C39233 * C23042 + (C38659 + C38660) * C23041 +
            (C37950 * C152092 + C37949 * C152188) * C23040) *
               C151956) *
              C1709 +
          (((C38660 + C38659) * C23040 + (C38658 + C38657) * C23041 +
            C39927 * C23042) *
               C151956 -
           (C39009 * C23042 + (C37678 + C37677) * C23041 +
            (C37676 + C37675) * C23040) *
               C152173) *
              C1710 +
          ((C37693 * C23040 + (C37680 + C37679) * C23041 + C39014 * C23042) *
               C152173 -
           ((C39928 + C39929) * C23042 + (C39239 + C39238) * C23041 +
            C39233 * C23040) *
               C151956) *
              C1711 +
          ((C39927 * C23040 + (C39929 + C39928) * C23041 +
            (C33482 * C152188 +
             (C31628 * C32969 + C32985 + C32985 + C151791 * C32971) * C152092) *
                C23042) *
               C151956 -
           ((C39012 + C39013) * C23042 + (C39011 + C39010) * C23041 +
            C39009 * C23040) *
               C152173) *
              C152224) *
         C151823) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152188 +
             C37949 * C152092) *
                C23040 +
            (C37675 + C37676) * C23041 + C37693 * C23042) *
               C2814 -
           (C39233 * C23042 + (C38659 + C38660) * C23041 +
            (C37950 * C152092 + C37949 * C152188) * C23040) *
               C2815 +
           ((C37950 * C152188 + C40513 * C152092) * C23040 +
            (C39234 + C39235) * C23041 + C39242 * C23042) *
               C2816 -
           ((C41217 + C41218) * C23042 + (C41219 + C41220) * C23041 +
            (C40516 * C152092 + C40513 * C152188) * C23040) *
               C152230) *
              C152172 +
          (((C38660 + C38659) * C23040 + (C38658 + C38657) * C23041 +
            C39927 * C23042) *
               C2815 -
           (C39009 * C23042 + (C37678 + C37677) * C23041 +
            (C37676 + C37675) * C23040) *
               C2814 -
           ((C39240 + C39241) * C23042 + (C39237 + C39236) * C23041 +
            (C39235 + C39234) * C23040) *
               C2816 +
           ((C41220 + C41219) * C23040 + (C41218 + C41217) * C23041 +
            (C34362 * C152188 +
             (C31628 * C33857 + C33868 + C33868 + C151791 * C33859) * C152092) *
                C23042) *
               C152230) *
              C151914) *
         C151823) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C62334 +
             C37949 * C62335 + C37950 * C62336 + C40513 * C62337) *
                C152054 * C152173 -
            (C40516 * C62337 + C40513 * C62336 + C37950 * C62335 +
             C37949 * C62334) *
                C152054 * C151956) *
               C152172 +
           ((C32563 * C62334 + C32996 * C62335 + C34364 * C62336 +
             C40515 * C62337) *
                C152054 * C151956 -
            (C34364 * C62337 + C32996 * C62336 + C32563 * C62335 +
             C31851 * C62334) *
                C152054 * C152173) *
               C151914) *
              C335 +
          (((C37951 * C62334 + C37952 * C62335 + C41022 * C62336 +
             C57627 * C62337) *
                C152054 * C151956 -
            (C41022 * C62337 + C37952 * C62336 + C37951 * C62335 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C62334) *
                C152054 * C152173) *
               C152172 +
           ((C31855 * C62334 + C32564 * C62335 + C34078 * C62336 +
             C40818 * C62337) *
                C152054 * C152173 -
            (C57425 * C62337 + C40818 * C62336 + C34078 * C62335 +
             C32564 * C62334) *
                C152054 * C151956) *
               C151914) *
              C336 +
          ((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C62334 +
             C37953 * C62335 + C37956 * C62336 + C54593 * C62337) *
                C152054 * C152173 -
            (C62637 * C62337 + C54593 * C62336 + C37956 * C62335 +
             C37953 * C62334) *
                C152054 * C151956) *
               C152172 +
           ((C32569 * C62334 + C37955 * C62335 + C54592 * C62336 +
             (C31628 * C9428 + C54587 + C54587 + C151791 * C9434) * C62337) *
                C152054 * C151956 -
            (C54592 * C62337 + C37955 * C62336 + C32569 * C62335 +
             C31859 * C62334) *
                C152054 * C152173) *
               C151914) *
              C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C62334 +
            C37949 * C62335 + C37950 * C62336 + C40513 * C62337) *
               C152054 * C152173 -
           (C40516 * C62337 + C40513 * C62336 + C37950 * C62335 +
            C37949 * C62334) *
               C152054 * C151956) *
              C1709 +
          ((C32563 * C62334 + C32996 * C62335 + C34364 * C62336 +
            C40515 * C62337) *
               C152054 * C151956 -
           (C34364 * C62337 + C32996 * C62336 + C32563 * C62335 +
            C31851 * C62334) *
               C152054 * C152173) *
              C1710 +
          ((C31852 * C62334 + C32562 * C62335 + C32997 * C62336 +
            C34363 * C62337) *
               C152054 * C152173 -
           (C40514 * C62337 + C34363 * C62336 + C32997 * C62335 +
            C32562 * C62334) *
               C152054 * C151956) *
              C1711 +
          ((C32561 * C62334 + C32998 * C62335 + C34362 * C62336 +
            (C31628 * C33857 + C33868 + C33868 + C151791 * C33859) * C62337) *
               C152054 * C151956 -
           (C34362 * C62337 + C32998 * C62336 + C32561 * C62335 +
            C31853 * C62334) *
               C152054 * C152173) *
              C152224) *
         C151823) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C62334 +
            C37949 * C62335 + C37950 * C62336 + C40513 * C62337) *
               C152054 * C2814 -
           (C40516 * C62337 + C40513 * C62336 + C37950 * C62335 +
            C37949 * C62334) *
               C152054 * C2815 +
           (C37950 * C62334 + C40513 * C62335 + C40516 * C62336 +
            C57128 * C62337) *
               C152054 * C2816 -
           (C64308 * C62337 + C57128 * C62336 + C40516 * C62335 +
            C40513 * C62334) *
               C152054 * C152230) *
              C152172 +
          ((C32563 * C62334 + C32996 * C62335 + C34364 * C62336 +
            C40515 * C62337) *
               C152054 * C2815 -
           (C34364 * C62337 + C32996 * C62336 + C32563 * C62335 +
            C31851 * C62334) *
               C152054 * C2814 -
           (C57127 * C62337 + C40515 * C62336 + C34364 * C62335 +
            C32996 * C62334) *
               C152054 * C2816 +
           (C34364 * C62334 + C40515 * C62335 + C57127 * C62336 +
            (C31628 * C57113 + C57122 + C57122 + C151791 * C57115) * C62337) *
               C152054 * C152230) *
              C151914) *
         C151823) /
            (p * q * std::sqrt(p + q));
    d2ee[212] +=
        (-0.25 * std::pow(Pi, 2.5) *
             (((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
                C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
                C6086 * C160) *
                   C152188 +
               (C6089 * C550 + C6675 + C6675 + C6084 * C574 + C6091 * C549 +
                C6674 + C6674 + C6085 * C573 + C6093 * C548 + C6673 + C6673 +
                C6086 * C572) *
                   C152092) *
                  C152054 * C151869 * C151851 * C129 -
              ((C6093 * C547 + C6684 + C6684 + C6086 * C571 + C6091 * C548 +
                C6683 + C6683 + C6085 * C572 + C6089 * C549 + C6682 + C6682 +
                C6084 * C573) *
                   C152092 +
               (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
                C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
                C6084 * C159) *
                   C152188) *
                  C152054 * C151869 * C151851 * C130 +
              ((C6089 * C144 + C6108 + C6108 + C6084 * C160 + C6091 * C145 +
                C6109 + C6109 + C6085 * C161 + C6093 * C146 + C6110 + C6110 +
                C6086 * C162) *
                   C152188 +
               (C6089 * C548 + C6699 + C6699 + C6084 * C572 + C6091 * C547 +
                C6698 + C6698 + C6085 * C571 + C6093 * C555 + C6697 + C6697 +
                C6086 * C579) *
                   C152092) *
                  C152054 * C151869 * C151851 * C131 -
              ((C6093 * C557 + C7114 + C7114 + C6086 * C581 + C6091 * C555 +
                C7113 + C7113 + C6085 * C579 + C6089 * C547 + C7112 + C7112 +
                C6084 * C571) *
                   C152092 +
               (C6093 * C147 + C6117 + C6117 + C6086 * C163 + C6091 * C146 +
                C6118 + C6118 + C6085 * C162 + C6089 * C145 + C6119 + C6119 +
                C6084 * C161) *
                   C152188) *
                  C152054 * C151869 * C151851 * C132 +
              ((C6089 * C146 + C6120 + C6120 + C6084 * C162 + C6091 * C147 +
                C6121 + C6121 + C6085 * C163 + C6093 * C148 + C6122 + C6122 +
                C6086 * C164) *
                   C152188 +
               (C6089 * C555 + C14729 + C14729 + C6084 * C579 + C6091 * C557 +
                C14730 + C14730 + C6085 * C581 + C6093 * C882 + C14731 +
                C14731 + C6086 * C884) *
                   C152092) *
                  C152054 * C151869 * C151851 * C133) -
         0.25 * std::pow(Pi, 2.5) *
             ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
                 C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
                 C6086 * C160) *
                    C152188 +
                (C6089 * C550 + C6675 + C6675 + C6084 * C574 + C6091 * C549 +
                 C6674 + C6674 + C6085 * C573 + C6093 * C548 + C6673 + C6673 +
                 C6086 * C572) *
                    C152092) *
                   C152054 * C151869 * C152258 -
               ((C7453 + C7454 + C7455) * C152092 +
                (C6436 + C6435 + C6434) * C152188) *
                   C152054 * C151869 * C152244 +
               ((C6439 + C6438 + C6437) * C152188 +
                (C8122 + C8123 + C8124) * C152092) *
                   C152054 * C151869 * C152214) *
                  C335 +
              (((C6440 + C6441 + C6442) * C152188 +
                (C7456 + C7457 + C7458) * C152092) *
                   C152054 * C151869 * C152244 -
               ((C6093 * C547 + C6684 + C6684 + C6086 * C571 + C6091 * C548 +
                 C6683 + C6683 + C6085 * C572 + C6089 * C549 + C6682 + C6682 +
                 C6084 * C573) *
                    C152092 +
                (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
                 C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
                 C6084 * C159) *
                    C152188) *
                   C152054 * C151869 * C152258 -
               ((C8645 + C8646 + C8647) * C152092 +
                (C6445 + C6444 + C6443) * C152188) *
                   C152054 * C151869 * C152214) *
                  C336 +
              (((C6089 * C144 + C6108 + C6108 + C6084 * C160 + C6091 * C145 +
                 C6109 + C6109 + C6085 * C161 + C6093 * C146 + C6110 + C6110 +
                 C6086 * C162) *
                    C152188 +
                (C6089 * C548 + C6699 + C6699 + C6084 * C572 + C6091 * C547 +
                 C6698 + C6698 + C6085 * C571 + C6093 * C555 + C6697 + C6697 +
                 C6086 * C579) *
                    C152092) *
                   C152054 * C151869 * C152258 -
               ((C7459 + C7460 + C7461) * C152092 +
                (C6448 + C6447 + C6446) * C152188) *
                   C152054 * C151869 * C152244 +
               ((C6451 + C6450 + C6449) * C152188 +
                (C6089 * C1536 + C7432 + C7432 + C6084 * C1560 + C6091 * C1535 +
                 C7433 + C7433 + C6085 * C1559 + C6093 * C1916 + C7434 + C7434 +
                 C6086 * C1918) *
                    C152092) *
                   C152054 * C151869 * C152214) *
                  C152208) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
                 C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
                 C6086 * C160) *
                    C152188 +
                (C15243 + C15244 + C15245) * C152092) *
                   C152054 * C152259 -
               ((C15246 + C15247 + C15248) * C152092 +
                (C15245 + C15244 + C15243) * C152188) *
                   C152054 * C152246 +
               ((C15248 + C15247 + C15246) * C152188 +
                (C6089 * C2454 + C9441 + C9441 + C6084 * C2470 + C6091 * C2453 +
                 C9440 + C9440 + C6085 * C2469 + C6093 * C2452 + C9439 + C9439 +
                 C6086 * C2468) *
                    C152092) *
                   C152054 * C152217) *
                  C151851 * C335 +
              (((C15249 + C15250 + C15251) * C152188 +
                (C15252 + C15253 + C15254) * C152092) *
                   C152054 * C152246 -
               ((C15251 + C15250 + C15249) * C152092 +
                (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
                 C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
                 C6084 * C159) *
                    C152188) *
                   C152054 * C152259 -
               ((C6093 * C2451 + C9952 + C9952 + C6086 * C2467 + C6091 * C2452 +
                 C9951 + C9951 + C6085 * C2468 + C6089 * C2453 + C9950 + C9950 +
                 C6084 * C2469) *
                    C152092 +
                (C15254 + C15253 + C15252) * C152188) *
                   C152054 * C152217) *
                  C151851 * C336 +
              (((C6089 * C144 + C6108 + C6108 + C6084 * C160 + C6091 * C145 +
                 C6109 + C6109 + C6085 * C161 + C6093 * C146 + C6110 + C6110 +
                 C6086 * C162) *
                    C152188 +
                (C15255 + C15256 + C15257) * C152092) *
                   C152054 * C152259 -
               ((C15258 + C15259 + C15260) * C152092 +
                (C15257 + C15256 + C15255) * C152188) *
                   C152054 * C152246 +
               ((C15260 + C15259 + C15258) * C152188 +
                (C6089 * C2452 + C15204 + C15204 + C6084 * C2468 +
                 C6091 * C2451 + C15205 + C15205 + C6085 * C2467 +
                 C6093 * C2818 + C15206 + C15206 + C6086 * C2820) *
                    C152092) *
                   C152054 * C152217) *
                  C151851 * C152208) -
         0.25 * std::pow(Pi, 2.5) *
             ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
                 C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
                 C6086 * C160) *
                    C152188 +
                (C15243 + C15244 + C15245) * C152092) *
                   C152054 * C151869 * C1259 -
               ((C7453 + C7454 + C7455) * C152092 +
                (C6436 + C6435 + C6434) * C152188) *
                   C152054 * C151869 * C1260 +
               ((C6439 + C6438 + C6437) * C152188 +
                (C8122 + C8123 + C8124) * C152092) *
                   C152054 * C151869 * C152214) *
                  C152255 +
              (((C6440 + C6441 + C6442) * C152188 +
                (C7456 + C7457 + C7458) * C152092) *
                   C152054 * C151869 * C1260 -
               ((C15251 + C15250 + C15249) * C152092 +
                (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
                 C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
                 C6084 * C159) *
                    C152188) *
                   C152054 * C151869 * C1259 -
               ((C8645 + C8646 + C8647) * C152092 +
                (C6445 + C6444 + C6443) * C152188) *
                   C152054 * C151869 * C152214) *
                  C152240 +
              (((C6089 * C144 + C6108 + C6108 + C6084 * C160 + C6091 * C145 +
                 C6109 + C6109 + C6085 * C161 + C6093 * C146 + C6110 + C6110 +
                 C6086 * C162) *
                    C152188 +
                (C15255 + C15256 + C15257) * C152092) *
                   C152054 * C151869 * C1259 -
               ((C7459 + C7460 + C7461) * C152092 +
                (C6448 + C6447 + C6446) * C152188) *
                   C152054 * C151869 * C1260 +
               ((C6451 + C6450 + C6449) * C152188 +
                (C6089 * C1536 + C7432 + C7432 + C6084 * C1560 + C6091 * C1535 +
                 C7433 + C7433 + C6085 * C1559 + C6093 * C1916 + C7434 + C7434 +
                 C6086 * C1918) *
                    C152092) *
                   C152054 * C151869 * C152214) *
                  C152208) -
         0.25 * std::pow(Pi, 2.5) *
             (((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
                C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
                C6086 * C160) *
                   C152188 +
               (C15243 + C15244 + C15245) * C152092) *
                  C152054 * C151869 * C1347 -
              ((C7453 + C7454 + C7455) * C152092 +
               (C6436 + C6435 + C6434) * C152188) *
                  C152054 * C151869 * C1348 +
              ((C6439 + C6438 + C6437) * C152188 +
               (C8122 + C8123 + C8124) * C152092) *
                  C152054 * C151869 * C1349 -
              ((C8866 + C8867 + C8868) * C152092 +
               (C7843 + C7842 + C7841) * C152188) *
                  C152054 * C151869 * C1350 +
              ((C7846 + C7845 + C7844) * C152188 +
               (C6089 * C8841 + C8857 + C8857 + C6084 * C8847 + C6091 * C8842 +
                C8858 + C8858 + C6085 * C8848 + C6093 * C8843 + C8859 + C8859 +
                C6086 * C8849) *
                   C152092) *
                  C152054 * C151869 * C1351) *
             C151823 +
         0.5 * std::pow(Pi, 2.5) *
             ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
                 C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
                 C6086 * C160) *
                    C152188 +
                (C15243 + C15244 + C15245) * C152092) *
                   C152054 * C152259 -
               ((C15246 + C15247 + C15248) * C152092 +
                (C15245 + C15244 + C15243) * C152188) *
                   C152054 * C152246 +
               ((C15248 + C15247 + C15246) * C152188 +
                (C6089 * C2454 + C9441 + C9441 + C6084 * C2470 + C6091 * C2453 +
                 C9440 + C9440 + C6085 * C2469 + C6093 * C2452 + C9439 + C9439 +
                 C6086 * C2468) *
                    C152092) *
                   C152054 * C152217) *
                  C1259 +
              (((C7455 + C7454 + C7453) * C152188 +
                (C8119 + C8120 + C8121) * C152092) *
                   C152054 * C152246 -
               ((C7453 + C7454 + C7455) * C152092 +
                (C6436 + C6435 + C6434) * C152188) *
                   C152054 * C152259 -
               ((C10174 + C10175 + C10176) * C152092 +
                (C8121 + C8120 + C8119) * C152188) *
                   C152054 * C152217) *
                  C1260 +
              (((C6439 + C6438 + C6437) * C152188 +
                (C8122 + C8123 + C8124) * C152092) *
                   C152054 * C152259 -
               ((C8125 + C8126 + C8127) * C152092 +
                (C8124 + C8123 + C8122) * C152188) *
                   C152054 * C152246 +
               ((C8127 + C8126 + C8125) * C152188 +
                (C6089 * C10149 + C10165 + C10165 + C6084 * C10155 +
                 C6091 * C10150 + C10166 + C10166 + C6085 * C10156 +
                 C6093 * C10151 + C10167 + C10167 + C6086 * C10157) *
                    C152092) *
                   C152054 * C152217) *
                  C152214) *
             C151823 +
         0.5 * std::pow(Pi, 2.5) *
             ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
                 C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
                 C6086 * C160) *
                    C152188 +
                (C15243 + C15244 + C15245) * C152092) *
                   C152054 * C2215 -
               ((C15246 + C15247 + C15248) * C152092 +
                (C15245 + C15244 + C15243) * C152188) *
                   C152054 * C2216 +
               ((C15248 + C15247 + C15246) * C152188 +
                (C6089 * C2454 + C9441 + C9441 + C6084 * C2470 + C6091 * C2453 +
                 C9440 + C9440 + C6085 * C2469 + C6093 * C2452 + C9439 + C9439 +
                 C6086 * C2468) *
                    C152092) *
                   C152054 * C152217) *
                  C151851 * C152255 +
              (((C15249 + C15250 + C15251) * C152188 +
                (C15252 + C15253 + C15254) * C152092) *
                   C152054 * C2216 -
               ((C15251 + C15250 + C15249) * C152092 +
                (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
                 C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
                 C6084 * C159) *
                    C152188) *
                   C152054 * C2215 -
               ((C6093 * C2451 + C9952 + C9952 + C6086 * C2467 + C6091 * C2452 +
                 C9951 + C9951 + C6085 * C2468 + C6089 * C2453 + C9950 + C9950 +
                 C6084 * C2469) *
                    C152092 +
                (C15254 + C15253 + C15252) * C152188) *
                   C152054 * C152217) *
                  C151851 * C152240 +
              (((C6089 * C144 + C6108 + C6108 + C6084 * C160 + C6091 * C145 +
                 C6109 + C6109 + C6085 * C161 + C6093 * C146 + C6110 + C6110 +
                 C6086 * C162) *
                    C152188 +
                (C15255 + C15256 + C15257) * C152092) *
                   C152054 * C2215 -
               ((C15258 + C15259 + C15260) * C152092 +
                (C15257 + C15256 + C15255) * C152188) *
                   C152054 * C2216 +
               ((C15260 + C15259 + C15258) * C152188 +
                (C6089 * C2452 + C15204 + C15204 + C6084 * C2468 +
                 C6091 * C2451 + C15205 + C15205 + C6085 * C2467 +
                 C6093 * C2818 + C15206 + C15206 + C6086 * C2820) *
                    C152092) *
                   C152054 * C152217) *
                  C151851 * C152208) +
         0.5 * std::pow(Pi, 2.5) *
             ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
                 C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
                 C6086 * C160) *
                    C152188 +
                (C15243 + C15244 + C15245) * C152092) *
                   C152054 * C2215 -
               ((C15246 + C15247 + C15248) * C152092 +
                (C15245 + C15244 + C15243) * C152188) *
                   C152054 * C2216 +
               ((C15248 + C15247 + C15246) * C152188 +
                (C6089 * C2454 + C9441 + C9441 + C6084 * C2470 + C6091 * C2453 +
                 C9440 + C9440 + C6085 * C2469 + C6093 * C2452 + C9439 + C9439 +
                 C6086 * C2468) *
                    C152092) *
                   C152054 * C152217) *
                  C152258 +
              (((C7455 + C7454 + C7453) * C152188 +
                (C8119 + C8120 + C8121) * C152092) *
                   C152054 * C2216 -
               ((C7453 + C7454 + C7455) * C152092 +
                (C6436 + C6435 + C6434) * C152188) *
                   C152054 * C2215 -
               ((C10174 + C10175 + C10176) * C152092 +
                (C8121 + C8120 + C8119) * C152188) *
                   C152054 * C152217) *
                  C152244 +
              (((C6439 + C6438 + C6437) * C152188 +
                (C8122 + C8123 + C8124) * C152092) *
                   C152054 * C2215 -
               ((C8125 + C8126 + C8127) * C152092 +
                (C8124 + C8123 + C8122) * C152188) *
                   C152054 * C2216 +
               ((C8127 + C8126 + C8125) * C152188 +
                (C6089 * C10149 + C10165 + C10165 + C6084 * C10155 +
                 C6091 * C10150 + C10166 + C10166 + C6085 * C10156 +
                 C6093 * C10151 + C10167 + C10167 + C6086 * C10157) *
                    C152092) *
                   C152054 * C152217) *
                  C152214) *
             C151823) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         (((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 + C6097 +
            C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
            C6086 * C160) *
               C152188 +
           (C15243 + C15244 + C15245) * C152092) *
              C152054 * C2446 -
          ((C15246 + C15247 + C15248) * C152092 +
           (C15245 + C15244 + C15243) * C152188) *
              C152054 * C2447 +
          ((C15248 + C15247 + C15246) * C152188 +
           (C17787 + C17788 + C17789) * C152092) *
              C152054 * C2448 -
          ((C17790 + C17791 + C17792) * C152092 +
           (C17789 + C17788 + C17787) * C152188) *
              C152054 * C2449 +
          ((C17792 + C17791 + C17790) * C152188 +
           (C6089 * C17750 + C17772 + C17772 + C6084 * C17756 + C6091 * C17751 +
            C17773 + C17773 + C6085 * C17757 + C6093 * C17752 + C17774 +
            C17774 + C6086 * C17758) *
               C152092) *
              C152054 * C2450) *
         C151851 * C151823) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152188 +
            (C31628 * C550 + C32024 + C32024 + C151791 * C574) * C152092) *
               C23040 +
           (C31851 * C152188 + C32563 * C152092) * C23041 +
           (C31852 * C152188 + C32562 * C152092) * C23042) *
              C151869 * C151851 * C129 -
          ((C32565 * C152092 + C31856 * C152188) * C23042 +
           (C32564 * C152092 + C31855 * C152188) * C23041 +
           ((C31628 * C549 + C32029 + C32029 + C151791 * C573) * C152092 +
            (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152188) *
               C23040) *
              C151869 * C151851 * C130 +
          (((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C152188 +
            (C31628 * C548 + C32040 + C32040 + C151791 * C572) * C152092) *
               C23040 +
           (C31859 * C152188 + C32569 * C152092) * C23041 +
           (C31860 * C152188 + C32568 * C152092) * C23042) *
              C151869 * C151851 * C131 -
          (((C31628 * C1535 + C32326 + C32326 + C151791 * C1559) * C152092 +
            C32189 * C152188) *
               C23042 +
           ((C31628 * C1086 + C32325 + C32325 + C151791 * C1098) * C152092 +
            C32188 * C152188) *
               C23041 +
           ((C31628 * C547 + C32324 + C32324 + C151791 * C571) * C152092 +
            (C31628 * C145 + C31646 + C31646 + C151791 * C161) * C152188) *
               C23040) *
              C151869 * C151851 * C132 +
          (((C31628 * C146 + C31647 + C31647 + C151791 * C162) * C152188 +
            (C31628 * C555 + C37454 + C37454 + C151791 * C579) * C152092) *
               C23040 +
           ((C31628 * C346 + C31648 + C31648 + C151791 * C370) * C152188 +
            (C31628 * C1087 + C37455 + C37455 + C151791 * C1099) * C152092) *
               C23041 +
           ((C31628 * C347 + C31649 + C31649 + C151791 * C371) * C152188 +
            (C31628 * C1916 + C37456 + C37456 + C151791 * C1918) * C152092) *
               C23042) *
              C151869 * C151851 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152188 +
             (C31628 * C550 + C32024 + C32024 + C151791 * C574) * C152092) *
                C23040 +
            (C37675 + C37676) * C23041 + C37693 * C23042) *
               C151869 * C152258 -
           ((C37679 + C37680) * C23042 + (C37678 + C37677) * C23041 +
            (C37676 + C37675) * C23040) *
               C151869 * C152244 +
           (C37693 * C23040 + (C37680 + C37679) * C23041 +
            (C31854 * C152188 + C32999 * C152092) * C23042) *
               C151869 * C152214) *
              C335 +
          (((C37681 + C37682) * C23040 + (C37683 + C37684) * C23041 +
            (C37685 + C37686) * C23042) *
               C151869 * C152244 -
           (C37694 * C23042 + (C37682 + C37681) * C23041 +
            ((C31628 * C549 + C32029 + C32029 + C151791 * C573) * C152092 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152188) *
                C23040) *
               C151869 * C152258 -
           ((C33342 * C152092 + C31858 * C152188) * C23042 +
            (C37686 + C37685) * C23041 + C37694 * C23040) *
               C151869 * C152214) *
              C336 +
          ((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C152188 +
             (C31628 * C548 + C32040 + C32040 + C151791 * C572) * C152092) *
                C23040 +
            (C37687 + C37688) * C23041 + C37695 * C23042) *
               C151869 * C152258 -
           ((C37691 + C37692) * C23042 + (C37690 + C37689) * C23041 +
            (C37688 + C37687) * C23040) *
               C151869 * C152244 +
           (C37695 * C23040 + (C37692 + C37691) * C23041 +
            (C31862 * C152188 +
             (C31628 * C8843 + C32542 + C32542 + C151791 * C8849) * C152092) *
                C23042) *
               C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152188 +
             C37949 * C152092) *
                C23040 +
            (C37675 + C37676) * C23041 + C37693 * C23042) *
               C152259 -
           ((C32997 * C152092 + C32562 * C152188) * C23042 +
            (C32996 * C152092 + C32563 * C152188) * C23041 +
            (C37950 * C152092 + C37949 * C152188) * C23040) *
               C152246 +
           ((C37950 * C152188 +
             (C31628 * C2454 + C33864 + C33864 + C151791 * C2470) * C152092) *
                C23040 +
            (C32996 * C152188 + C34364 * C152092) * C23041 +
            (C32997 * C152188 + C34363 * C152092) * C23042) *
               C152217) *
              C151851 * C335 +
          (((C37951 * C152188 + C37952 * C152092) * C23040 +
            (C32564 * C152188 + C34078 * C152092) * C23041 +
            (C32565 * C152188 + C34077 * C152092) * C23042) *
               C152246 -
           (C37694 * C23042 + (C37682 + C37681) * C23041 +
            (C37951 * C152092 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152188) *
                C23040) *
               C152259 -
           (((C31628 * C10150 + C34214 + C34214 + C151791 * C10156) * C152092 +
             C34077 * C152188) *
                C23042 +
            ((C31628 * C2956 + C34213 + C34213 + C151791 * C2964) * C152092 +
             C34078 * C152188) *
                C23041 +
            ((C31628 * C2453 + C34212 + C34212 + C151791 * C2469) * C152092 +
             C37952 * C152188) *
                C23040) *
               C152217) *
              C151851 * C336 +
          ((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C152188 +
             C37953 * C152092) *
                C23040 +
            (C37687 + C37688) * C23041 + C37695 * C23042) *
               C152259 -
           ((C37954 * C152092 + C32568 * C152188) * C23042 +
            (C37955 * C152092 + C32569 * C152188) * C23041 +
            (C37956 * C152092 + C37953 * C152188) * C23040) *
               C152246 +
           ((C37956 * C152188 +
             (C31628 * C2452 + C37930 + C37930 + C151791 * C2468) * C152092) *
                C23040 +
            (C37955 * C152188 +
             (C31628 * C2957 + C37931 + C37931 + C151791 * C2965) * C152092) *
                C23041 +
            (C37954 * C152188 +
             (C31628 * C10151 + C37932 + C37932 + C151791 * C10157) * C152092) *
                C23042) *
               C152217) *
              C151851 * C152208)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152188 +
             C37949 * C152092) *
                C23040 +
            (C37675 + C37676) * C23041 + C37693 * C23042) *
               C151869 * C1259 -
           ((C37679 + C37680) * C23042 + (C37678 + C37677) * C23041 +
            (C37676 + C37675) * C23040) *
               C151869 * C1260 +
           (C37693 * C23040 + (C37680 + C37679) * C23041 +
            (C31854 * C152188 + C32999 * C152092) * C23042) *
               C151869 * C152214) *
              C152255 +
          (((C37681 + C37682) * C23040 + (C37683 + C37684) * C23041 +
            (C37685 + C37686) * C23042) *
               C151869 * C1260 -
           (C37694 * C23042 + (C37682 + C37681) * C23041 +
            (C37951 * C152092 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152188) *
                C23040) *
               C151869 * C1259 -
           ((C33342 * C152092 + C31858 * C152188) * C23042 +
            (C37686 + C37685) * C23041 + C37694 * C23040) *
               C151869 * C152214) *
              C152240 +
          ((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C152188 +
             C37953 * C152092) *
                C23040 +
            (C37687 + C37688) * C23041 + C37695 * C23042) *
               C151869 * C1259 -
           ((C37691 + C37692) * C23042 + (C37690 + C37689) * C23041 +
            (C37688 + C37687) * C23040) *
               C151869 * C1260 +
           (C37695 * C23040 + (C37692 + C37691) * C23041 +
            (C31862 * C152188 +
             (C31628 * C8843 + C32542 + C32542 + C151791 * C8849) * C152092) *
                C23042) *
               C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) +
        (-0.25 * std::pow(Pi, 2.5) *
         ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152188 +
            C37949 * C152092) *
               C23040 +
           (C37675 + C37676) * C23041 + C37693 * C23042) *
              C151869 * C1347 -
          (C39009 * C23042 + (C37678 + C37677) * C23041 +
           (C37676 + C37675) * C23040) *
              C151869 * C1348 +
          (C37693 * C23040 + (C37680 + C37679) * C23041 + C39014 * C23042) *
              C151869 * C1349 -
          ((C39012 + C39013) * C23042 + (C39011 + C39010) * C23041 +
           C39009 * C23040) *
              C151869 * C1350 +
          (C39014 * C23040 + (C39013 + C39012) * C23041 +
           (C32821 * C152188 +
            (C31628 * C33473 + C33479 + C33479 + C151791 * C33475) * C152092) *
               C23042) *
              C151869 * C1351) *
         C151823) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152188 +
             C37949 * C152092) *
                C23040 +
            (C37675 + C37676) * C23041 + C37693 * C23042) *
               C152259 -
           (C39233 * C23042 + (C38659 + C38660) * C23041 +
            (C37950 * C152092 + C37949 * C152188) * C23040) *
               C152246 +
           ((C37950 * C152188 +
             (C31628 * C2454 + C33864 + C33864 + C151791 * C2470) * C152092) *
                C23040 +
            (C39234 + C39235) * C23041 + C39242 * C23042) *
               C152217) *
              C1259 +
          (((C38660 + C38659) * C23040 + (C38658 + C38657) * C23041 +
            (C39238 + C39239) * C23042) *
               C152246 -
           (C39009 * C23042 + (C37678 + C37677) * C23041 +
            (C37676 + C37675) * C23040) *
               C152259 -
           ((C39240 + C39241) * C23042 + (C39237 + C39236) * C23041 +
            (C39235 + C39234) * C23040) *
               C152217) *
              C1260 +
          ((C37693 * C23040 + (C37680 + C37679) * C23041 + C39014 * C23042) *
               C152259 -
           ((C33000 * C152092 + C32999 * C152188) * C23042 +
            (C39239 + C39238) * C23041 + C39233 * C23040) *
               C152246 +
           (C39242 * C23040 + (C39241 + C39240) * C23041 +
            (C33000 * C152188 +
             (C31628 * C34345 + C34355 + C34355 + C151791 * C34347) * C152092) *
                C23042) *
               C152217) *
              C152214) *
         C151823) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152188 +
             C37949 * C152092) *
                C23040 +
            (C37675 + C37676) * C23041 + C37693 * C23042) *
               C2215 -
           (C39233 * C23042 + (C38659 + C38660) * C23041 +
            (C37950 * C152092 + C37949 * C152188) * C23040) *
               C2216 +
           ((C37950 * C152188 +
             (C31628 * C2454 + C33864 + C33864 + C151791 * C2470) * C152092) *
                C23040 +
            (C39234 + C39235) * C23041 + C39242 * C23042) *
               C152217) *
              C151851 * C152255 +
          (((C37951 * C152188 + C37952 * C152092) * C23040 +
            (C38661 + C38662) * C23041 + C39730 * C23042) *
               C2216 -
           (C37694 * C23042 + (C37682 + C37681) * C23041 +
            (C37951 * C152092 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152188) *
                C23040) *
               C2215 -
           (((C31628 * C10150 + C34214 + C34214 + C151791 * C10156) * C152092 +
             C34077 * C152188) *
                C23042 +
            ((C31628 * C2956 + C34213 + C34213 + C151791 * C2964) * C152092 +
             C34078 * C152188) *
                C23041 +
            ((C31628 * C2453 + C34212 + C34212 + C151791 * C2469) * C152092 +
             C37952 * C152188) *
                C23040) *
               C152217) *
              C151851 * C152240 +
          ((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C152188 +
             C37953 * C152092) *
                C23040 +
            (C37687 + C37688) * C23041 + C37695 * C23042) *
               C2215 -
           ((C38665 + C38666) * C23042 + (C38667 + C38668) * C23041 +
            (C37956 * C152092 + C37953 * C152188) * C23040) *
               C2216 +
           ((C37956 * C152188 +
             (C31628 * C2452 + C37930 + C37930 + C151791 * C2468) * C152092) *
                C23040 +
            (C37955 * C152188 +
             (C31628 * C2957 + C37931 + C37931 + C151791 * C2965) * C152092) *
                C23041 +
            (C37954 * C152188 +
             (C31628 * C10151 + C37932 + C37932 + C151791 * C10157) * C152092) *
                C23042) *
               C152217) *
              C151851 * C152208)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152188 +
             C37949 * C152092) *
                C23040 +
            (C37675 + C37676) * C23041 + C37693 * C23042) *
               C2215 -
           (C39233 * C23042 + (C38659 + C38660) * C23041 +
            (C37950 * C152092 + C37949 * C152188) * C23040) *
               C2216 +
           ((C37950 * C152188 +
             (C31628 * C2454 + C33864 + C33864 + C151791 * C2470) * C152092) *
                C23040 +
            (C39234 + C39235) * C23041 + C39242 * C23042) *
               C152217) *
              C152258 +
          (((C38660 + C38659) * C23040 + (C38658 + C38657) * C23041 +
            C39927 * C23042) *
               C2216 -
           (C39009 * C23042 + (C37678 + C37677) * C23041 +
            (C37676 + C37675) * C23040) *
               C2215 -
           ((C39240 + C39241) * C23042 + (C39237 + C39236) * C23041 +
            (C39235 + C39234) * C23040) *
               C152217) *
              C152244 +
          ((C37693 * C23040 + (C37680 + C37679) * C23041 + C39014 * C23042) *
               C2215 -
           ((C39928 + C39929) * C23042 + (C39239 + C39238) * C23041 +
            C39233 * C23040) *
               C2216 +
           (C39242 * C23040 + (C39241 + C39240) * C23041 +
            (C33000 * C152188 +
             (C31628 * C34345 + C34355 + C34355 + C151791 * C34347) * C152092) *
                C23042) *
               C152217) *
              C152214) *
         C151823) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152188 +
            C37949 * C152092) *
               C23040 +
           (C37675 + C37676) * C23041 + C37693 * C23042) *
              C2446 -
          (C39233 * C23042 + (C38659 + C38660) * C23041 +
           (C37950 * C152092 + C37949 * C152188) * C23040) *
              C2447 +
          ((C37950 * C152188 + C40513 * C152092) * C23040 +
           (C39234 + C39235) * C23041 + C39242 * C23042) *
              C2448 -
          ((C40514 * C152092 + C34363 * C152188) * C23042 +
           (C40515 * C152092 + C34364 * C152188) * C23041 +
           (C40516 * C152092 + C40513 * C152188) * C23040) *
              C2449 +
          ((C40516 * C152188 +
            (C31628 * C17750 + C40502 + C40502 + C151791 * C17756) * C152092) *
               C23040 +
           (C40515 * C152188 +
            (C31628 * C40487 + C40503 + C40503 + C151791 * C40491) * C152092) *
               C23041 +
           (C40514 * C152188 +
            (C31628 * C40488 + C40504 + C40504 + C151791 * C40492) * C152092) *
               C23042) *
              C2450) *
         C151851 * C151823) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C62334 +
           C37949 * C62335 + C37950 * C62336 + C40513 * C62337) *
              C152054 * C151869 * C151851 * C129 -
          (C41022 * C62337 + C37952 * C62336 + C37951 * C62335 +
           (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C62334) *
              C152054 * C151869 * C151851 * C130 +
          ((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C62334 +
           C37953 * C62335 + C37956 * C62336 + C54593 * C62337) *
              C152054 * C151869 * C151851 * C131 -
          ((C31628 * C2451 + C54992 + C54992 + C151791 * C2467) * C62337 +
           C54996 * C62336 + C38366 * C62335 +
           (C31628 * C145 + C31646 + C31646 + C151791 * C161) * C62334) *
              C152054 * C151869 * C151851 * C132 +
          ((C31628 * C146 + C31647 + C31647 + C151791 * C162) * C62334 +
           (C31628 * C555 + C37454 + C37454 + C151791 * C579) * C62335 +
           (C31628 * C556 + C54126 + C54126 + C151791 * C580) * C62336 +
           (C31628 * C2818 + C62339 + C62339 + C151791 * C2820) * C62337) *
              C152054 * C151869 * C151851 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C62334 +
            C37949 * C62335 + C37950 * C62336 + C40513 * C62337) *
               C152054 * C151869 * C152258 -
           (C34364 * C62337 + C32996 * C62336 + C32563 * C62335 +
            C31851 * C62334) *
               C152054 * C151869 * C152244 +
           (C31852 * C62334 + C32562 * C62335 + C32997 * C62336 +
            C34363 * C62337) *
               C152054 * C151869 * C152214) *
              C335 +
          ((C31855 * C62334 + C32564 * C62335 + C34078 * C62336 +
            C40818 * C62337) *
               C152054 * C151869 * C152244 -
           (C41022 * C62337 + C37952 * C62336 + C37951 * C62335 +
            (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C62334) *
               C152054 * C151869 * C152258 -
           (C40817 * C62337 + C34077 * C62336 + C32565 * C62335 +
            C31856 * C62334) *
               C152054 * C151869 * C152214) *
              C336 +
          (((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C62334 +
            C37953 * C62335 + C37956 * C62336 + C54593 * C62337) *
               C152054 * C151869 * C152258 -
           (C54592 * C62337 + C37955 * C62336 + C32569 * C62335 +
            C31859 * C62334) *
               C152054 * C151869 * C152244 +
           (C31860 * C62334 + C32568 * C62335 + C37954 * C62336 +
            (C31628 * C10151 + C37932 + C37932 + C151791 * C10157) * C62337) *
               C152054 * C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C62334 +
            C37949 * C62335 + C37950 * C62336 + C40513 * C62337) *
               C152054 * C152259 -
           (C40516 * C62337 + C40513 * C62336 + C37950 * C62335 +
            C37949 * C62334) *
               C152054 * C152246 +
           (C37950 * C62334 + C40513 * C62335 + C40516 * C62336 +
            C57128 * C62337) *
               C152054 * C152217) *
              C151851 * C335 +
          ((C37951 * C62334 + C37952 * C62335 + C41022 * C62336 +
            C57627 * C62337) *
               C152054 * C152246 -
           (C41022 * C62337 + C37952 * C62336 + C37951 * C62335 +
            (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C62334) *
               C152054 * C152259 -
           ((C31628 * C17751 + C57623 + C57623 + C151791 * C17757) * C62337 +
            C57627 * C62336 + C41022 * C62335 + C37952 * C62334) *
               C152054 * C152217) *
              C151851 * C336 +
          (((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C62334 +
            C37953 * C62335 + C37956 * C62336 + C54593 * C62337) *
               C152054 * C152259 -
           (C62637 * C62337 + C54593 * C62336 + C37956 * C62335 +
            C37953 * C62334) *
               C152054 * C152246 +
           (C37956 * C62334 + C54593 * C62335 + C62637 * C62336 +
            (C31628 * C17752 + C62634 + C62634 + C151791 * C17758) * C62337) *
               C152054 * C152217) *
              C151851 * C152208)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C62334 +
            C37949 * C62335 + C37950 * C62336 + C40513 * C62337) *
               C152054 * C151869 * C1259 -
           (C34364 * C62337 + C32996 * C62336 + C32563 * C62335 +
            C31851 * C62334) *
               C152054 * C151869 * C1260 +
           (C31852 * C62334 + C32562 * C62335 + C32997 * C62336 +
            C34363 * C62337) *
               C152054 * C151869 * C152214) *
              C152255 +
          ((C31855 * C62334 + C32564 * C62335 + C34078 * C62336 +
            C40818 * C62337) *
               C152054 * C151869 * C1260 -
           (C41022 * C62337 + C37952 * C62336 + C37951 * C62335 +
            (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C62334) *
               C152054 * C151869 * C1259 -
           (C40817 * C62337 + C34077 * C62336 + C32565 * C62335 +
            C31856 * C62334) *
               C152054 * C151869 * C152214) *
              C152240 +
          (((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C62334 +
            C37953 * C62335 + C37956 * C62336 + C54593 * C62337) *
               C152054 * C151869 * C1259 -
           (C54592 * C62337 + C37955 * C62336 + C32569 * C62335 +
            C31859 * C62334) *
               C152054 * C151869 * C1260 +
           (C31860 * C62334 + C32568 * C62335 + C37954 * C62336 +
            (C31628 * C10151 + C37932 + C37932 + C151791 * C10157) * C62337) *
               C152054 * C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) +
        (0.5 * std::pow(Pi, 2.5) *
         (((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C62334 +
           C37949 * C62335 + C37950 * C62336 + C40513 * C62337) *
              C152054 * C151869 * C1347 -
          (C34364 * C62337 + C32996 * C62336 + C32563 * C62335 +
           C31851 * C62334) *
              C152054 * C151869 * C1348 +
          (C31852 * C62334 + C32562 * C62335 + C32997 * C62336 +
           C34363 * C62337) *
              C152054 * C151869 * C1349 -
          (C34362 * C62337 + C32998 * C62336 + C32561 * C62335 +
           C31853 * C62334) *
              C152054 * C151869 * C1350 +
          (C31854 * C62334 + C32999 * C62335 + C33000 * C62336 +
           (C31628 * C34345 + C34355 + C34355 + C151791 * C34347) * C62337) *
              C152054 * C151869 * C1351) *
         C151823) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C62334 +
            C37949 * C62335 + C37950 * C62336 + C40513 * C62337) *
               C152054 * C152259 -
           (C40516 * C62337 + C40513 * C62336 + C37950 * C62335 +
            C37949 * C62334) *
               C152054 * C152246 +
           (C37950 * C62334 + C40513 * C62335 + C40516 * C62336 +
            C57128 * C62337) *
               C152054 * C152217) *
              C1259 +
          ((C32563 * C62334 + C32996 * C62335 + C34364 * C62336 +
            C40515 * C62337) *
               C152054 * C152246 -
           (C34364 * C62337 + C32996 * C62336 + C32563 * C62335 +
            C31851 * C62334) *
               C152054 * C152259 -
           (C57127 * C62337 + C40515 * C62336 + C34364 * C62335 +
            C32996 * C62334) *
               C152054 * C152217) *
              C1260 +
          ((C31852 * C62334 + C32562 * C62335 + C32997 * C62336 +
            C34363 * C62337) *
               C152054 * C152259 -
           (C40514 * C62337 + C34363 * C62336 + C32997 * C62335 +
            C32562 * C62334) *
               C152054 * C152246 +
           (C32997 * C62334 + C34363 * C62335 + C40514 * C62336 +
            (C31628 * C40488 + C40504 + C40504 + C151791 * C40492) * C62337) *
               C152054 * C152217) *
              C152214) *
         C151823) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C62334 +
            C37949 * C62335 + C37950 * C62336 + C40513 * C62337) *
               C152054 * C2215 -
           (C40516 * C62337 + C40513 * C62336 + C37950 * C62335 +
            C37949 * C62334) *
               C152054 * C2216 +
           (C37950 * C62334 + C40513 * C62335 + C40516 * C62336 +
            C57128 * C62337) *
               C152054 * C152217) *
              C151851 * C152255 +
          ((C37951 * C62334 + C37952 * C62335 + C41022 * C62336 +
            C57627 * C62337) *
               C152054 * C2216 -
           (C41022 * C62337 + C37952 * C62336 + C37951 * C62335 +
            (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C62334) *
               C152054 * C2215 -
           ((C31628 * C17751 + C57623 + C57623 + C151791 * C17757) * C62337 +
            C57627 * C62336 + C41022 * C62335 + C37952 * C62334) *
               C152054 * C152217) *
              C151851 * C152240 +
          (((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C62334 +
            C37953 * C62335 + C37956 * C62336 + C54593 * C62337) *
               C152054 * C2215 -
           (C62637 * C62337 + C54593 * C62336 + C37956 * C62335 +
            C37953 * C62334) *
               C152054 * C2216 +
           (C37956 * C62334 + C54593 * C62335 + C62637 * C62336 +
            (C31628 * C17752 + C62634 + C62634 + C151791 * C17758) * C62337) *
               C152054 * C152217) *
              C151851 * C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::pow(Pi, 2.5) *
         ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C62334 +
            C37949 * C62335 + C37950 * C62336 + C40513 * C62337) *
               C152054 * C2215 -
           (C40516 * C62337 + C40513 * C62336 + C37950 * C62335 +
            C37949 * C62334) *
               C152054 * C2216 +
           (C37950 * C62334 + C40513 * C62335 + C40516 * C62336 +
            C57128 * C62337) *
               C152054 * C152217) *
              C152258 +
          ((C32563 * C62334 + C32996 * C62335 + C34364 * C62336 +
            C40515 * C62337) *
               C152054 * C2216 -
           (C34364 * C62337 + C32996 * C62336 + C32563 * C62335 +
            C31851 * C62334) *
               C152054 * C2215 -
           (C57127 * C62337 + C40515 * C62336 + C34364 * C62335 +
            C32996 * C62334) *
               C152054 * C152217) *
              C152244 +
          ((C31852 * C62334 + C32562 * C62335 + C32997 * C62336 +
            C34363 * C62337) *
               C152054 * C2215 -
           (C40514 * C62337 + C34363 * C62336 + C32997 * C62335 +
            C32562 * C62334) *
               C152054 * C2216 +
           (C32997 * C62334 + C34363 * C62335 + C40514 * C62336 +
            (C31628 * C40488 + C40504 + C40504 + C151791 * C40492) * C62337) *
               C152054 * C152217) *
              C152214) *
         C151823) /
            (p * q * std::sqrt(p + q)) +
        (2 * std::pow(Pi, 2.5) *
         (((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C62334 +
           C37949 * C62335 + C37950 * C62336 + C40513 * C62337) *
              C152054 * C2446 -
          (C40516 * C62337 + C40513 * C62336 + C37950 * C62335 +
           C37949 * C62334) *
              C152054 * C2447 +
          (C37950 * C62334 + C40513 * C62335 + C40516 * C62336 +
           C57128 * C62337) *
              C152054 * C2448 -
          (C64308 * C62337 + C57128 * C62336 + C40516 * C62335 +
           C40513 * C62334) *
              C152054 * C2449 +
          (C40516 * C62334 + C57128 * C62335 + C64308 * C62336 +
           (C31628 * C64299 + C64305 + C64305 + C151791 * C64301) * C62337) *
              C152054 * C2450) *
         C151851 * C151823) /
            (p * q * std::sqrt(p + q));
    d2ee[213] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
                 C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
                 C6086 * C160) *
                    C152188 +
                (C15243 + C15244 + C15245) * C152092) *
                   C152054 * C152173 -
               ((C15246 + C15247 + C15248) * C152092 +
                (C15245 + C15244 + C15243) * C152188) *
                   C152054 * C151956) *
                  C151851 * C739 +
              (((C15249 + C15250 + C15251) * C152188 +
                (C15252 + C15253 + C15254) * C152092) *
                   C152054 * C151956 -
               ((C15251 + C15250 + C15249) * C152092 +
                (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
                 C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
                 C6084 * C159) *
                    C152188) *
                   C152054 * C152173) *
                  C151851 * C740 +
              (((C6089 * C144 + C6108 + C6108 + C6084 * C160 + C6091 * C145 +
                 C6109 + C6109 + C6085 * C161 + C6093 * C146 + C6110 + C6110 +
                 C6086 * C162) *
                    C152188 +
                (C15255 + C15256 + C15257) * C152092) *
                   C152054 * C152173 -
               ((C15258 + C15259 + C15260) * C152092 +
                (C15257 + C15256 + C15255) * C152188) *
                   C152054 * C151956) *
                  C151851 * C741 +
              (((C15664 + C15665 + C15666) * C152188 +
                (C6089 * C554 + C15655 + C15655 + C6084 * C578 + C6091 * C556 +
                 C15656 + C15656 + C6085 * C580 + C6093 * C558 + C15657 +
                 C15657 + C6086 * C582) *
                    C152092) *
                   C152054 * C151956 -
               ((C15666 + C15665 + C15664) * C152092 +
                (C6093 * C147 + C6117 + C6117 + C6086 * C163 + C6091 * C146 +
                 C6118 + C6118 + C6085 * C162 + C6089 * C145 + C6119 + C6119 +
                 C6084 * C161) *
                    C152188) *
                   C152054 * C152173) *
                  C151851 * C152218) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
                  C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
                  C6086 * C160) *
                     C152188 +
                 (C15243 + C15244 + C15245) * C152092) *
                    C152054 * C152173 -
                ((C15246 + C15247 + C15248) * C152092 +
                 (C15245 + C15244 + C15243) * C152188) *
                    C152054 * C151956) *
                   C1259 +
               (((C7455 + C7454 + C7453) * C152188 +
                 (C8119 + C8120 + C8121) * C152092) *
                    C152054 * C151956 -
                ((C7453 + C7454 + C7455) * C152092 +
                 (C6436 + C6435 + C6434) * C152188) *
                    C152054 * C152173) *
                   C1260 +
               (((C6439 + C6438 + C6437) * C152188 +
                 (C8122 + C8123 + C8124) * C152092) *
                    C152054 * C152173 -
                ((C8125 + C8126 + C8127) * C152092 +
                 (C8124 + C8123 + C8122) * C152188) *
                    C152054 * C151956) *
                   C152214) *
                  C152158 +
              ((((C15249 + C15250 + C15251) * C152188 +
                 (C15252 + C15253 + C15254) * C152092) *
                    C152054 * C151956 -
                ((C15251 + C15250 + C15249) * C152092 +
                 (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
                  C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
                  C6084 * C159) *
                     C152188) *
                    C152054 * C152173) *
                   C1259 +
               (((C6440 + C6441 + C6442) * C152188 +
                 (C7456 + C7457 + C7458) * C152092) *
                    C152054 * C152173 -
                ((C9753 + C9754 + C9755) * C152092 +
                 (C7458 + C7457 + C7456) * C152188) *
                    C152054 * C151956) *
                   C1260 +
               (((C8647 + C8646 + C8645) * C152188 +
                 (C6089 * C1540 + C9744 + C9744 + C6084 * C1564 +
                  C6091 * C1541 + C9745 + C9745 + C6085 * C1565 +
                  C6093 * C1542 + C9746 + C9746 + C6086 * C1566) *
                     C152092) *
                    C152054 * C151956 -
                ((C8645 + C8646 + C8647) * C152092 +
                 (C6445 + C6444 + C6443) * C152188) *
                    C152054 * C152173) *
                   C152214) *
                  C151834)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
             C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
             C6086 * C160) *
                C152188 +
            (C15243 + C15244 + C15245) * C152092) *
               C152054 * C2814 -
           ((C15246 + C15247 + C15248) * C152092 +
            (C15245 + C15244 + C15243) * C152188) *
               C152054 * C2815 +
           ((C15248 + C15247 + C15246) * C152188 +
            (C17787 + C17788 + C17789) * C152092) *
               C152054 * C2816 -
           ((C17790 + C17791 + C17792) * C152092 +
            (C17789 + C17788 + C17787) * C152188) *
               C152054 * C152230) *
              C151851 * C152158 +
          (((C15249 + C15250 + C15251) * C152188 +
            (C15252 + C15253 + C15254) * C152092) *
               C152054 * C2815 -
           ((C15251 + C15250 + C15249) * C152092 +
            (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
             C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
             C6084 * C159) *
                C152188) *
               C152054 * C2814 -
           ((C18292 + C18293 + C18294) * C152092 +
            (C15254 + C15253 + C15252) * C152188) *
               C152054 * C2816 +
           ((C18294 + C18293 + C18292) * C152188 +
            (C6089 * C2456 + C18283 + C18283 + C6084 * C2472 + C6091 * C2457 +
             C18284 + C18284 + C6085 * C2473 + C6093 * C2458 + C18285 + C18285 +
             C6086 * C2474) *
                C152092) *
               C152054 * C152230) *
              C151851 * C151834)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152188 +
             C37949 * C152092) *
                C23040 +
            (C37675 + C37676) * C23041 + C37693 * C23042) *
               C152173 -
           ((C32997 * C152092 + C32562 * C152188) * C23042 +
            (C32996 * C152092 + C32563 * C152188) * C23041 +
            (C37950 * C152092 + C37949 * C152188) * C23040) *
               C151956) *
              C151851 * C739 +
          (((C37951 * C152188 + C37952 * C152092) * C23040 +
            (C32564 * C152188 + C34078 * C152092) * C23041 +
            (C32565 * C152188 + C34077 * C152092) * C23042) *
               C151956 -
           (C37694 * C23042 + (C37682 + C37681) * C23041 +
            (C37951 * C152092 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152188) *
                C23040) *
               C152173) *
              C151851 * C740 +
          ((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C152188 +
             C37953 * C152092) *
                C23040 +
            (C37687 + C37688) * C23041 + C37695 * C23042) *
               C152173 -
           ((C37954 * C152092 + C32568 * C152188) * C23042 +
            (C37955 * C152092 + C32569 * C152188) * C23041 +
            (C37956 * C152092 + C37953 * C152188) * C23040) *
               C151956) *
              C151851 * C741 +
          (((C38366 * C152188 +
             (C31628 * C554 + C38361 + C38361 + C151791 * C578) * C152092) *
                C23040 +
            (C38161 * C152188 +
             (C31628 * C1531 + C38362 + C38362 + C151791 * C1555) * C152092) *
                C23041 +
            (C38162 * C152188 +
             (C31628 * C1542 + C38363 + C38363 + C151791 * C1566) * C152092) *
                C23042) *
               C151956 -
           ((C38164 + C38154) * C23042 + (C38163 + C38151) * C23041 +
            (C38366 * C152092 +
             (C31628 * C145 + C31646 + C31646 + C151791 * C161) * C152188) *
                C23040) *
               C152173) *
              C151851 * C152218)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152188 +
              C37949 * C152092) *
                 C23040 +
             (C37675 + C37676) * C23041 + C37693 * C23042) *
                C152173 -
            (C39233 * C23042 + (C38659 + C38660) * C23041 +
             (C37950 * C152092 + C37949 * C152188) * C23040) *
                C151956) *
               C1259 +
           (((C38660 + C38659) * C23040 + (C38658 + C38657) * C23041 +
             (C39238 + C39239) * C23042) *
                C151956 -
            (C39009 * C23042 + (C37678 + C37677) * C23041 +
             (C37676 + C37675) * C23040) *
                C152173) *
               C1260 +
           ((C37693 * C23040 + (C37680 + C37679) * C23041 + C39014 * C23042) *
                C152173 -
            ((C33000 * C152092 + C32999 * C152188) * C23042 +
             (C39239 + C39238) * C23041 + C39233 * C23040) *
                C151956) *
               C152214) *
              C152158 +
          ((((C37951 * C152188 + C37952 * C152092) * C23040 +
             (C38661 + C38662) * C23041 + C39730 * C23042) *
                C151956 -
            (C37694 * C23042 + (C37682 + C37681) * C23041 +
             (C37951 * C152092 +
              (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152188) *
                 C23040) *
                C152173) *
               C1259 +
           (((C37681 + C37682) * C23040 + (C37683 + C37684) * C23041 +
             C39437 * C23042) *
                C152173 -
            ((C39731 + C39732) * C23042 + (C38664 + C38663) * C23041 +
             (C38662 + C38661) * C23040) *
                C151956) *
               C1260 +
           ((C39730 * C23040 + (C39732 + C39731) * C23041 +
             (C33342 * C152188 +
              (C31628 * C25022 + C34069 + C34069 + C151791 * C25026) *
                  C152092) *
                 C23042) *
                C151956 -
            ((C39438 + C39439) * C23042 + (C37686 + C37685) * C23041 +
             C37694 * C23040) *
                C152173) *
               C152214) *
              C151834)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152188 +
             C37949 * C152092) *
                C23040 +
            (C37675 + C37676) * C23041 + C37693 * C23042) *
               C2814 -
           (C39233 * C23042 + (C38659 + C38660) * C23041 +
            (C37950 * C152092 + C37949 * C152188) * C23040) *
               C2815 +
           ((C37950 * C152188 + C40513 * C152092) * C23040 +
            (C39234 + C39235) * C23041 + C39242 * C23042) *
               C2816 -
           ((C40514 * C152092 + C34363 * C152188) * C23042 +
            (C40515 * C152092 + C34364 * C152188) * C23041 +
            (C40516 * C152092 + C40513 * C152188) * C23040) *
               C152230) *
              C151851 * C152158 +
          (((C37951 * C152188 + C37952 * C152092) * C23040 +
            (C38661 + C38662) * C23041 + C39730 * C23042) *
               C2815 -
           (C37694 * C23042 + (C37682 + C37681) * C23041 +
            (C37951 * C152092 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152188) *
                C23040) *
               C2814 -
           ((C40819 + C40809) * C23042 + (C40820 + C40812) * C23041 +
            (C41022 * C152092 + C37952 * C152188) * C23040) *
               C2816 +
           ((C41022 * C152188 +
             (C31628 * C2456 + C41017 + C41017 + C151791 * C2472) * C152092) *
                C23040 +
            (C40818 * C152188 +
             (C31628 * C9427 + C41018 + C41018 + C151791 * C9433) * C152092) *
                C23041 +
            (C40817 * C152188 +
             (C31628 * C26362 + C41019 + C41019 + C151791 * C26366) * C152092) *
                C23042) *
               C152230) *
              C151851 * C151834)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C62334 +
            C37949 * C62335 + C37950 * C62336 + C40513 * C62337) *
               C152054 * C152173 -
           (C40516 * C62337 + C40513 * C62336 + C37950 * C62335 +
            C37949 * C62334) *
               C152054 * C151956) *
              C151851 * C739 +
          ((C37951 * C62334 + C37952 * C62335 + C41022 * C62336 +
            C57627 * C62337) *
               C152054 * C151956 -
           (C41022 * C62337 + C37952 * C62336 + C37951 * C62335 +
            (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C62334) *
               C152054 * C152173) *
              C151851 * C740 +
          (((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C62334 +
            C37953 * C62335 + C37956 * C62336 + C54593 * C62337) *
               C152054 * C152173 -
           (C62637 * C62337 + C54593 * C62336 + C37956 * C62335 +
            C37953 * C62334) *
               C152054 * C151956) *
              C151851 * C741 +
          ((C38366 * C62334 + C54996 * C62335 + C62903 * C62336 +
            (C31628 * C2458 + C62900 + C62900 + C151791 * C2474) * C62337) *
               C152054 * C151956 -
           (C62903 * C62337 + C54996 * C62336 + C38366 * C62335 +
            (C31628 * C145 + C31646 + C31646 + C151791 * C161) * C62334) *
               C152054 * C152173) *
              C151851 * C152218)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C62334 +
             C37949 * C62335 + C37950 * C62336 + C40513 * C62337) *
                C152054 * C152173 -
            (C40516 * C62337 + C40513 * C62336 + C37950 * C62335 +
             C37949 * C62334) *
                C152054 * C151956) *
               C1259 +
           ((C32563 * C62334 + C32996 * C62335 + C34364 * C62336 +
             C40515 * C62337) *
                C152054 * C151956 -
            (C34364 * C62337 + C32996 * C62336 + C32563 * C62335 +
             C31851 * C62334) *
                C152054 * C152173) *
               C1260 +
           ((C31852 * C62334 + C32562 * C62335 + C32997 * C62336 +
             C34363 * C62337) *
                C152054 * C152173 -
            (C40514 * C62337 + C34363 * C62336 + C32997 * C62335 +
             C32562 * C62334) *
                C152054 * C151956) *
               C152214) *
              C152158 +
          (((C37951 * C62334 + C37952 * C62335 + C41022 * C62336 +
             C57627 * C62337) *
                C152054 * C151956 -
            (C41022 * C62337 + C37952 * C62336 + C37951 * C62335 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C62334) *
                C152054 * C152173) *
               C1259 +
           ((C31855 * C62334 + C32564 * C62335 + C34078 * C62336 +
             C40818 * C62337) *
                C152054 * C152173 -
            (C57425 * C62337 + C40818 * C62336 + C34078 * C62335 +
             C32564 * C62334) *
                C152054 * C151956) *
               C1260 +
           ((C32565 * C62334 + C34077 * C62335 + C40817 * C62336 +
             (C31628 * C26362 + C41019 + C41019 + C151791 * C26366) * C62337) *
                C152054 * C151956 -
            (C40817 * C62337 + C34077 * C62336 + C32565 * C62335 +
             C31856 * C62334) *
                C152054 * C152173) *
               C152214) *
              C151834)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C62334 +
            C37949 * C62335 + C37950 * C62336 + C40513 * C62337) *
               C152054 * C2814 -
           (C40516 * C62337 + C40513 * C62336 + C37950 * C62335 +
            C37949 * C62334) *
               C152054 * C2815 +
           (C37950 * C62334 + C40513 * C62335 + C40516 * C62336 +
            C57128 * C62337) *
               C152054 * C2816 -
           (C64308 * C62337 + C57128 * C62336 + C40516 * C62335 +
            C40513 * C62334) *
               C152054 * C152230) *
              C151851 * C152158 +
          ((C37951 * C62334 + C37952 * C62335 + C41022 * C62336 +
            C57627 * C62337) *
               C152054 * C2815 -
           (C41022 * C62337 + C37952 * C62336 + C37951 * C62335 +
            (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C62334) *
               C152054 * C2814 -
           (C64638 * C62337 + C57627 * C62336 + C41022 * C62335 +
            C37952 * C62334) *
               C152054 * C2816 +
           (C41022 * C62334 + C57627 * C62335 + C64638 * C62336 +
            (C31628 * C48824 + C64635 + C64635 + C151791 * C48828) * C62337) *
               C152054 * C152230) *
              C151851 * C151834)) /
            (p * q * std::sqrt(p + q));
    d2ee[214] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 + C6097 +
            C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
            C6086 * C160) *
               C152188 +
           (C6089 * C550 + C6675 + C6675 + C6084 * C574 + C6091 * C549 + C6674 +
            C6674 + C6085 * C573 + C6093 * C548 + C6673 + C6673 +
            C6086 * C572) *
               C152092) *
              C152054 * C151869 * C151851 * C129 -
          ((C6093 * C547 + C6684 + C6684 + C6086 * C571 + C6091 * C548 + C6683 +
            C6683 + C6085 * C572 + C6089 * C549 + C6682 + C6682 +
            C6084 * C573) *
               C152092 +
           (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 + C6106 +
            C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
            C6084 * C159) *
               C152188) *
              C152054 * C151869 * C151851 * C130 +
          ((C6089 * C144 + C6108 + C6108 + C6084 * C160 + C6091 * C145 + C6109 +
            C6109 + C6085 * C161 + C6093 * C146 + C6110 + C6110 +
            C6086 * C162) *
               C152188 +
           (C6089 * C548 + C6699 + C6699 + C6084 * C572 + C6091 * C547 + C6698 +
            C6698 + C6085 * C571 + C6093 * C555 + C6697 + C6697 +
            C6086 * C579) *
               C152092) *
              C152054 * C151869 * C151851 * C131 -
          ((C6093 * C557 + C7114 + C7114 + C6086 * C581 + C6091 * C555 + C7113 +
            C7113 + C6085 * C579 + C6089 * C547 + C7112 + C7112 +
            C6084 * C571) *
               C152092 +
           (C6093 * C147 + C6117 + C6117 + C6086 * C163 + C6091 * C146 + C6118 +
            C6118 + C6085 * C162 + C6089 * C145 + C6119 + C6119 +
            C6084 * C161) *
               C152188) *
              C152054 * C151869 * C151851 * C132 +
          ((C6089 * C146 + C6120 + C6120 + C6084 * C162 + C6091 * C147 + C6121 +
            C6121 + C6085 * C163 + C6093 * C148 + C6122 + C6122 +
            C6086 * C164) *
               C152188 +
           (C6089 * C555 + C14729 + C14729 + C6084 * C579 + C6091 * C557 +
            C14730 + C14730 + C6085 * C581 + C6093 * C882 + C14731 + C14731 +
            C6086 * C884) *
               C152092) *
              C152054 * C151869 * C151851 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
             C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
             C6086 * C160) *
                C152188 +
            (C6089 * C550 + C6675 + C6675 + C6084 * C574 + C6091 * C549 +
             C6674 + C6674 + C6085 * C573 + C6093 * C548 + C6673 + C6673 +
             C6086 * C572) *
                C152092) *
               C152054 * C151869 * C152258 -
           ((C7453 + C7454 + C7455) * C152092 +
            (C6436 + C6435 + C6434) * C152188) *
               C152054 * C151869 * C152244 +
           ((C6439 + C6438 + C6437) * C152188 +
            (C8122 + C8123 + C8124) * C152092) *
               C152054 * C151869 * C152214) *
              C335 +
          (((C6440 + C6441 + C6442) * C152188 +
            (C7456 + C7457 + C7458) * C152092) *
               C152054 * C151869 * C152244 -
           ((C6093 * C547 + C6684 + C6684 + C6086 * C571 + C6091 * C548 +
             C6683 + C6683 + C6085 * C572 + C6089 * C549 + C6682 + C6682 +
             C6084 * C573) *
                C152092 +
            (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
             C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
             C6084 * C159) *
                C152188) *
               C152054 * C151869 * C152258 -
           ((C8645 + C8646 + C8647) * C152092 +
            (C6445 + C6444 + C6443) * C152188) *
               C152054 * C151869 * C152214) *
              C336 +
          (((C6089 * C144 + C6108 + C6108 + C6084 * C160 + C6091 * C145 +
             C6109 + C6109 + C6085 * C161 + C6093 * C146 + C6110 + C6110 +
             C6086 * C162) *
                C152188 +
            (C6089 * C548 + C6699 + C6699 + C6084 * C572 + C6091 * C547 +
             C6698 + C6698 + C6085 * C571 + C6093 * C555 + C6697 + C6697 +
             C6086 * C579) *
                C152092) *
               C152054 * C151869 * C152258 -
           ((C7459 + C7460 + C7461) * C152092 +
            (C6448 + C6447 + C6446) * C152188) *
               C152054 * C151869 * C152244 +
           ((C6451 + C6450 + C6449) * C152188 +
            (C6089 * C1536 + C7432 + C7432 + C6084 * C1560 + C6091 * C1535 +
             C7433 + C7433 + C6085 * C1559 + C6093 * C1916 + C7434 + C7434 +
             C6086 * C1918) *
                C152092) *
               C152054 * C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
             C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
             C6086 * C160) *
                C152188 +
            (C15243 + C15244 + C15245) * C152092) *
               C152054 * C151869 * C1259 -
           ((C7453 + C7454 + C7455) * C152092 +
            (C6436 + C6435 + C6434) * C152188) *
               C152054 * C151869 * C1260 +
           ((C6439 + C6438 + C6437) * C152188 +
            (C8122 + C8123 + C8124) * C152092) *
               C152054 * C151869 * C152214) *
              C152255 +
          (((C6440 + C6441 + C6442) * C152188 +
            (C7456 + C7457 + C7458) * C152092) *
               C152054 * C151869 * C1260 -
           ((C15251 + C15250 + C15249) * C152092 +
            (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
             C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
             C6084 * C159) *
                C152188) *
               C152054 * C151869 * C1259 -
           ((C8645 + C8646 + C8647) * C152092 +
            (C6445 + C6444 + C6443) * C152188) *
               C152054 * C151869 * C152214) *
              C152240 +
          (((C6089 * C144 + C6108 + C6108 + C6084 * C160 + C6091 * C145 +
             C6109 + C6109 + C6085 * C161 + C6093 * C146 + C6110 + C6110 +
             C6086 * C162) *
                C152188 +
            (C15255 + C15256 + C15257) * C152092) *
               C152054 * C151869 * C1259 -
           ((C7459 + C7460 + C7461) * C152092 +
            (C6448 + C6447 + C6446) * C152188) *
               C152054 * C151869 * C1260 +
           ((C6451 + C6450 + C6449) * C152188 +
            (C6089 * C1536 + C7432 + C7432 + C6084 * C1560 + C6091 * C1535 +
             C7433 + C7433 + C6085 * C1559 + C6093 * C1916 + C7434 + C7434 +
             C6086 * C1918) *
                C152092) *
               C152054 * C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 + C6097 +
            C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
            C6086 * C160) *
               C152188 +
           (C15243 + C15244 + C15245) * C152092) *
              C152054 * C151869 * C1347 -
          ((C7453 + C7454 + C7455) * C152092 +
           (C6436 + C6435 + C6434) * C152188) *
              C152054 * C151869 * C1348 +
          ((C6439 + C6438 + C6437) * C152188 +
           (C8122 + C8123 + C8124) * C152092) *
              C152054 * C151869 * C1349 -
          ((C8866 + C8867 + C8868) * C152092 +
           (C7843 + C7842 + C7841) * C152188) *
              C152054 * C151869 * C1350 +
          ((C7846 + C7845 + C7844) * C152188 +
           (C6089 * C8841 + C8857 + C8857 + C6084 * C8847 + C6091 * C8842 +
            C8858 + C8858 + C6085 * C8848 + C6093 * C8843 + C8859 + C8859 +
            C6086 * C8849) *
               C152092) *
              C152054 * C151869 * C1351) *
         C151823) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
             C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
             C6086 * C160) *
                C152188 +
            (C15243 + C15244 + C15245) * C152092) *
               C152054 * C2215 -
           ((C15246 + C15247 + C15248) * C152092 +
            (C15245 + C15244 + C15243) * C152188) *
               C152054 * C2216 +
           ((C15248 + C15247 + C15246) * C152188 +
            (C6089 * C2454 + C9441 + C9441 + C6084 * C2470 + C6091 * C2453 +
             C9440 + C9440 + C6085 * C2469 + C6093 * C2452 + C9439 + C9439 +
             C6086 * C2468) *
                C152092) *
               C152054 * C152217) *
              C151851 * C152255 +
          (((C15249 + C15250 + C15251) * C152188 +
            (C15252 + C15253 + C15254) * C152092) *
               C152054 * C2216 -
           ((C15251 + C15250 + C15249) * C152092 +
            (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
             C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
             C6084 * C159) *
                C152188) *
               C152054 * C2215 -
           ((C6093 * C2451 + C9952 + C9952 + C6086 * C2467 + C6091 * C2452 +
             C9951 + C9951 + C6085 * C2468 + C6089 * C2453 + C9950 + C9950 +
             C6084 * C2469) *
                C152092 +
            (C15254 + C15253 + C15252) * C152188) *
               C152054 * C152217) *
              C151851 * C152240 +
          (((C6089 * C144 + C6108 + C6108 + C6084 * C160 + C6091 * C145 +
             C6109 + C6109 + C6085 * C161 + C6093 * C146 + C6110 + C6110 +
             C6086 * C162) *
                C152188 +
            (C15255 + C15256 + C15257) * C152092) *
               C152054 * C2215 -
           ((C15258 + C15259 + C15260) * C152092 +
            (C15257 + C15256 + C15255) * C152188) *
               C152054 * C2216 +
           ((C15260 + C15259 + C15258) * C152188 +
            (C6089 * C2452 + C15204 + C15204 + C6084 * C2468 + C6091 * C2451 +
             C15205 + C15205 + C6085 * C2467 + C6093 * C2818 + C15206 + C15206 +
             C6086 * C2820) *
                C152092) *
               C152054 * C152217) *
              C151851 * C152208)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
             C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
             C6086 * C160) *
                C152188 +
            (C15243 + C15244 + C15245) * C152092) *
               C152054 * C2215 -
           ((C15246 + C15247 + C15248) * C152092 +
            (C15245 + C15244 + C15243) * C152188) *
               C152054 * C2216 +
           ((C15248 + C15247 + C15246) * C152188 +
            (C6089 * C2454 + C9441 + C9441 + C6084 * C2470 + C6091 * C2453 +
             C9440 + C9440 + C6085 * C2469 + C6093 * C2452 + C9439 + C9439 +
             C6086 * C2468) *
                C152092) *
               C152054 * C152217) *
              C152258 +
          (((C7455 + C7454 + C7453) * C152188 +
            (C8119 + C8120 + C8121) * C152092) *
               C152054 * C2216 -
           ((C7453 + C7454 + C7455) * C152092 +
            (C6436 + C6435 + C6434) * C152188) *
               C152054 * C2215 -
           ((C10174 + C10175 + C10176) * C152092 +
            (C8121 + C8120 + C8119) * C152188) *
               C152054 * C152217) *
              C152244 +
          (((C6439 + C6438 + C6437) * C152188 +
            (C8122 + C8123 + C8124) * C152092) *
               C152054 * C2215 -
           ((C8125 + C8126 + C8127) * C152092 +
            (C8124 + C8123 + C8122) * C152188) *
               C152054 * C2216 +
           ((C8127 + C8126 + C8125) * C152188 +
            (C6089 * C10149 + C10165 + C10165 + C6084 * C10155 +
             C6091 * C10150 + C10166 + C10166 + C6085 * C10156 +
             C6093 * C10151 + C10167 + C10167 + C6086 * C10157) *
                C152092) *
               C152054 * C152217) *
              C152214) *
         C151823) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152188 +
            (C31628 * C550 + C32024 + C32024 + C151791 * C574) * C152092) *
               C23040 +
           (C31851 * C152188 + C32563 * C152092) * C23041 +
           (C31852 * C152188 + C32562 * C152092) * C23042) *
              C151869 * C151851 * C129 -
          ((C32565 * C152092 + C31856 * C152188) * C23042 +
           (C32564 * C152092 + C31855 * C152188) * C23041 +
           ((C31628 * C549 + C32029 + C32029 + C151791 * C573) * C152092 +
            (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152188) *
               C23040) *
              C151869 * C151851 * C130 +
          (((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C152188 +
            (C31628 * C548 + C32040 + C32040 + C151791 * C572) * C152092) *
               C23040 +
           (C31859 * C152188 + C32569 * C152092) * C23041 +
           (C31860 * C152188 + C32568 * C152092) * C23042) *
              C151869 * C151851 * C131 -
          (((C31628 * C1535 + C32326 + C32326 + C151791 * C1559) * C152092 +
            C32189 * C152188) *
               C23042 +
           ((C31628 * C1086 + C32325 + C32325 + C151791 * C1098) * C152092 +
            C32188 * C152188) *
               C23041 +
           ((C31628 * C547 + C32324 + C32324 + C151791 * C571) * C152092 +
            (C31628 * C145 + C31646 + C31646 + C151791 * C161) * C152188) *
               C23040) *
              C151869 * C151851 * C132 +
          (((C31628 * C146 + C31647 + C31647 + C151791 * C162) * C152188 +
            (C31628 * C555 + C37454 + C37454 + C151791 * C579) * C152092) *
               C23040 +
           ((C31628 * C346 + C31648 + C31648 + C151791 * C370) * C152188 +
            (C31628 * C1087 + C37455 + C37455 + C151791 * C1099) * C152092) *
               C23041 +
           ((C31628 * C347 + C31649 + C31649 + C151791 * C371) * C152188 +
            (C31628 * C1916 + C37456 + C37456 + C151791 * C1918) * C152092) *
               C23042) *
              C151869 * C151851 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152188 +
             (C31628 * C550 + C32024 + C32024 + C151791 * C574) * C152092) *
                C23040 +
            (C37675 + C37676) * C23041 + C37693 * C23042) *
               C151869 * C152258 -
           ((C37679 + C37680) * C23042 + (C37678 + C37677) * C23041 +
            (C37676 + C37675) * C23040) *
               C151869 * C152244 +
           (C37693 * C23040 + (C37680 + C37679) * C23041 +
            (C31854 * C152188 + C32999 * C152092) * C23042) *
               C151869 * C152214) *
              C335 +
          (((C37681 + C37682) * C23040 + (C37683 + C37684) * C23041 +
            (C37685 + C37686) * C23042) *
               C151869 * C152244 -
           (C37694 * C23042 + (C37682 + C37681) * C23041 +
            ((C31628 * C549 + C32029 + C32029 + C151791 * C573) * C152092 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152188) *
                C23040) *
               C151869 * C152258 -
           ((C33342 * C152092 + C31858 * C152188) * C23042 +
            (C37686 + C37685) * C23041 + C37694 * C23040) *
               C151869 * C152214) *
              C336 +
          ((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C152188 +
             (C31628 * C548 + C32040 + C32040 + C151791 * C572) * C152092) *
                C23040 +
            (C37687 + C37688) * C23041 + C37695 * C23042) *
               C151869 * C152258 -
           ((C37691 + C37692) * C23042 + (C37690 + C37689) * C23041 +
            (C37688 + C37687) * C23040) *
               C151869 * C152244 +
           (C37695 * C23040 + (C37692 + C37691) * C23041 +
            (C31862 * C152188 +
             (C31628 * C8843 + C32542 + C32542 + C151791 * C8849) * C152092) *
                C23042) *
               C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152188 +
             C37949 * C152092) *
                C23040 +
            (C37675 + C37676) * C23041 + C37693 * C23042) *
               C151869 * C1259 -
           ((C37679 + C37680) * C23042 + (C37678 + C37677) * C23041 +
            (C37676 + C37675) * C23040) *
               C151869 * C1260 +
           (C37693 * C23040 + (C37680 + C37679) * C23041 +
            (C31854 * C152188 + C32999 * C152092) * C23042) *
               C151869 * C152214) *
              C152255 +
          (((C37681 + C37682) * C23040 + (C37683 + C37684) * C23041 +
            (C37685 + C37686) * C23042) *
               C151869 * C1260 -
           (C37694 * C23042 + (C37682 + C37681) * C23041 +
            (C37951 * C152092 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152188) *
                C23040) *
               C151869 * C1259 -
           ((C33342 * C152092 + C31858 * C152188) * C23042 +
            (C37686 + C37685) * C23041 + C37694 * C23040) *
               C151869 * C152214) *
              C152240 +
          ((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C152188 +
             C37953 * C152092) *
                C23040 +
            (C37687 + C37688) * C23041 + C37695 * C23042) *
               C151869 * C1259 -
           ((C37691 + C37692) * C23042 + (C37690 + C37689) * C23041 +
            (C37688 + C37687) * C23040) *
               C151869 * C1260 +
           (C37695 * C23040 + (C37692 + C37691) * C23041 +
            (C31862 * C152188 +
             (C31628 * C8843 + C32542 + C32542 + C151791 * C8849) * C152092) *
                C23042) *
               C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152188 +
            C37949 * C152092) *
               C23040 +
           (C37675 + C37676) * C23041 + C37693 * C23042) *
              C151869 * C1347 -
          (C39009 * C23042 + (C37678 + C37677) * C23041 +
           (C37676 + C37675) * C23040) *
              C151869 * C1348 +
          (C37693 * C23040 + (C37680 + C37679) * C23041 + C39014 * C23042) *
              C151869 * C1349 -
          ((C39012 + C39013) * C23042 + (C39011 + C39010) * C23041 +
           C39009 * C23040) *
              C151869 * C1350 +
          (C39014 * C23040 + (C39013 + C39012) * C23041 +
           (C32821 * C152188 +
            (C31628 * C33473 + C33479 + C33479 + C151791 * C33475) * C152092) *
               C23042) *
              C151869 * C1351) *
         C151823) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152188 +
             C37949 * C152092) *
                C23040 +
            (C37675 + C37676) * C23041 + C37693 * C23042) *
               C2215 -
           (C39233 * C23042 + (C38659 + C38660) * C23041 +
            (C37950 * C152092 + C37949 * C152188) * C23040) *
               C2216 +
           ((C37950 * C152188 +
             (C31628 * C2454 + C33864 + C33864 + C151791 * C2470) * C152092) *
                C23040 +
            (C39234 + C39235) * C23041 + C39242 * C23042) *
               C152217) *
              C151851 * C152255 +
          (((C37951 * C152188 + C37952 * C152092) * C23040 +
            (C38661 + C38662) * C23041 + C39730 * C23042) *
               C2216 -
           (C37694 * C23042 + (C37682 + C37681) * C23041 +
            (C37951 * C152092 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152188) *
                C23040) *
               C2215 -
           (((C31628 * C10150 + C34214 + C34214 + C151791 * C10156) * C152092 +
             C34077 * C152188) *
                C23042 +
            ((C31628 * C2956 + C34213 + C34213 + C151791 * C2964) * C152092 +
             C34078 * C152188) *
                C23041 +
            ((C31628 * C2453 + C34212 + C34212 + C151791 * C2469) * C152092 +
             C37952 * C152188) *
                C23040) *
               C152217) *
              C151851 * C152240 +
          ((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C152188 +
             C37953 * C152092) *
                C23040 +
            (C37687 + C37688) * C23041 + C37695 * C23042) *
               C2215 -
           ((C38665 + C38666) * C23042 + (C38667 + C38668) * C23041 +
            (C37956 * C152092 + C37953 * C152188) * C23040) *
               C2216 +
           ((C37956 * C152188 +
             (C31628 * C2452 + C37930 + C37930 + C151791 * C2468) * C152092) *
                C23040 +
            (C37955 * C152188 +
             (C31628 * C2957 + C37931 + C37931 + C151791 * C2965) * C152092) *
                C23041 +
            (C37954 * C152188 +
             (C31628 * C10151 + C37932 + C37932 + C151791 * C10157) * C152092) *
                C23042) *
               C152217) *
              C151851 * C152208)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152188 +
             C37949 * C152092) *
                C23040 +
            (C37675 + C37676) * C23041 + C37693 * C23042) *
               C2215 -
           (C39233 * C23042 + (C38659 + C38660) * C23041 +
            (C37950 * C152092 + C37949 * C152188) * C23040) *
               C2216 +
           ((C37950 * C152188 +
             (C31628 * C2454 + C33864 + C33864 + C151791 * C2470) * C152092) *
                C23040 +
            (C39234 + C39235) * C23041 + C39242 * C23042) *
               C152217) *
              C152258 +
          (((C38660 + C38659) * C23040 + (C38658 + C38657) * C23041 +
            C39927 * C23042) *
               C2216 -
           (C39009 * C23042 + (C37678 + C37677) * C23041 +
            (C37676 + C37675) * C23040) *
               C2215 -
           ((C39240 + C39241) * C23042 + (C39237 + C39236) * C23041 +
            (C39235 + C39234) * C23040) *
               C152217) *
              C152244 +
          ((C37693 * C23040 + (C37680 + C37679) * C23041 + C39014 * C23042) *
               C2215 -
           ((C39928 + C39929) * C23042 + (C39239 + C39238) * C23041 +
            C39233 * C23040) *
               C2216 +
           (C39242 * C23040 + (C39241 + C39240) * C23041 +
            (C33000 * C152188 +
             (C31628 * C34345 + C34355 + C34355 + C151791 * C34347) * C152092) *
                C23042) *
               C152217) *
              C152214) *
         C151823) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C62334 +
           C37949 * C62335 + C37950 * C62336 + C40513 * C62337) *
              C152054 * C151869 * C151851 * C129 -
          (C41022 * C62337 + C37952 * C62336 + C37951 * C62335 +
           (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C62334) *
              C152054 * C151869 * C151851 * C130 +
          ((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C62334 +
           C37953 * C62335 + C37956 * C62336 + C54593 * C62337) *
              C152054 * C151869 * C151851 * C131 -
          ((C31628 * C2451 + C54992 + C54992 + C151791 * C2467) * C62337 +
           C54996 * C62336 + C38366 * C62335 +
           (C31628 * C145 + C31646 + C31646 + C151791 * C161) * C62334) *
              C152054 * C151869 * C151851 * C132 +
          ((C31628 * C146 + C31647 + C31647 + C151791 * C162) * C62334 +
           (C31628 * C555 + C37454 + C37454 + C151791 * C579) * C62335 +
           (C31628 * C556 + C54126 + C54126 + C151791 * C580) * C62336 +
           (C31628 * C2818 + C62339 + C62339 + C151791 * C2820) * C62337) *
              C152054 * C151869 * C151851 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C62334 +
            C37949 * C62335 + C37950 * C62336 + C40513 * C62337) *
               C152054 * C151869 * C152258 -
           (C34364 * C62337 + C32996 * C62336 + C32563 * C62335 +
            C31851 * C62334) *
               C152054 * C151869 * C152244 +
           (C31852 * C62334 + C32562 * C62335 + C32997 * C62336 +
            C34363 * C62337) *
               C152054 * C151869 * C152214) *
              C335 +
          ((C31855 * C62334 + C32564 * C62335 + C34078 * C62336 +
            C40818 * C62337) *
               C152054 * C151869 * C152244 -
           (C41022 * C62337 + C37952 * C62336 + C37951 * C62335 +
            (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C62334) *
               C152054 * C151869 * C152258 -
           (C40817 * C62337 + C34077 * C62336 + C32565 * C62335 +
            C31856 * C62334) *
               C152054 * C151869 * C152214) *
              C336 +
          (((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C62334 +
            C37953 * C62335 + C37956 * C62336 + C54593 * C62337) *
               C152054 * C151869 * C152258 -
           (C54592 * C62337 + C37955 * C62336 + C32569 * C62335 +
            C31859 * C62334) *
               C152054 * C151869 * C152244 +
           (C31860 * C62334 + C32568 * C62335 + C37954 * C62336 +
            (C31628 * C10151 + C37932 + C37932 + C151791 * C10157) * C62337) *
               C152054 * C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C62334 +
            C37949 * C62335 + C37950 * C62336 + C40513 * C62337) *
               C152054 * C151869 * C1259 -
           (C34364 * C62337 + C32996 * C62336 + C32563 * C62335 +
            C31851 * C62334) *
               C152054 * C151869 * C1260 +
           (C31852 * C62334 + C32562 * C62335 + C32997 * C62336 +
            C34363 * C62337) *
               C152054 * C151869 * C152214) *
              C152255 +
          ((C31855 * C62334 + C32564 * C62335 + C34078 * C62336 +
            C40818 * C62337) *
               C152054 * C151869 * C1260 -
           (C41022 * C62337 + C37952 * C62336 + C37951 * C62335 +
            (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C62334) *
               C152054 * C151869 * C1259 -
           (C40817 * C62337 + C34077 * C62336 + C32565 * C62335 +
            C31856 * C62334) *
               C152054 * C151869 * C152214) *
              C152240 +
          (((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C62334 +
            C37953 * C62335 + C37956 * C62336 + C54593 * C62337) *
               C152054 * C151869 * C1259 -
           (C54592 * C62337 + C37955 * C62336 + C32569 * C62335 +
            C31859 * C62334) *
               C152054 * C151869 * C1260 +
           (C31860 * C62334 + C32568 * C62335 + C37954 * C62336 +
            (C31628 * C10151 + C37932 + C37932 + C151791 * C10157) * C62337) *
               C152054 * C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C62334 +
           C37949 * C62335 + C37950 * C62336 + C40513 * C62337) *
              C152054 * C151869 * C1347 -
          (C34364 * C62337 + C32996 * C62336 + C32563 * C62335 +
           C31851 * C62334) *
              C152054 * C151869 * C1348 +
          (C31852 * C62334 + C32562 * C62335 + C32997 * C62336 +
           C34363 * C62337) *
              C152054 * C151869 * C1349 -
          (C34362 * C62337 + C32998 * C62336 + C32561 * C62335 +
           C31853 * C62334) *
              C152054 * C151869 * C1350 +
          (C31854 * C62334 + C32999 * C62335 + C33000 * C62336 +
           (C31628 * C34345 + C34355 + C34355 + C151791 * C34347) * C62337) *
              C152054 * C151869 * C1351) *
         C151823) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C62334 +
            C37949 * C62335 + C37950 * C62336 + C40513 * C62337) *
               C152054 * C2215 -
           (C40516 * C62337 + C40513 * C62336 + C37950 * C62335 +
            C37949 * C62334) *
               C152054 * C2216 +
           (C37950 * C62334 + C40513 * C62335 + C40516 * C62336 +
            C57128 * C62337) *
               C152054 * C152217) *
              C151851 * C152255 +
          ((C37951 * C62334 + C37952 * C62335 + C41022 * C62336 +
            C57627 * C62337) *
               C152054 * C2216 -
           (C41022 * C62337 + C37952 * C62336 + C37951 * C62335 +
            (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C62334) *
               C152054 * C2215 -
           ((C31628 * C17751 + C57623 + C57623 + C151791 * C17757) * C62337 +
            C57627 * C62336 + C41022 * C62335 + C37952 * C62334) *
               C152054 * C152217) *
              C151851 * C152240 +
          (((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C62334 +
            C37953 * C62335 + C37956 * C62336 + C54593 * C62337) *
               C152054 * C2215 -
           (C62637 * C62337 + C54593 * C62336 + C37956 * C62335 +
            C37953 * C62334) *
               C152054 * C2216 +
           (C37956 * C62334 + C54593 * C62335 + C62637 * C62336 +
            (C31628 * C17752 + C62634 + C62634 + C151791 * C17758) * C62337) *
               C152054 * C152217) *
              C151851 * C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C62334 +
            C37949 * C62335 + C37950 * C62336 + C40513 * C62337) *
               C152054 * C2215 -
           (C40516 * C62337 + C40513 * C62336 + C37950 * C62335 +
            C37949 * C62334) *
               C152054 * C2216 +
           (C37950 * C62334 + C40513 * C62335 + C40516 * C62336 +
            C57128 * C62337) *
               C152054 * C152217) *
              C152258 +
          ((C32563 * C62334 + C32996 * C62335 + C34364 * C62336 +
            C40515 * C62337) *
               C152054 * C2216 -
           (C34364 * C62337 + C32996 * C62336 + C32563 * C62335 +
            C31851 * C62334) *
               C152054 * C2215 -
           (C57127 * C62337 + C40515 * C62336 + C34364 * C62335 +
            C32996 * C62334) *
               C152054 * C152217) *
              C152244 +
          ((C31852 * C62334 + C32562 * C62335 + C32997 * C62336 +
            C34363 * C62337) *
               C152054 * C2215 -
           (C40514 * C62337 + C34363 * C62336 + C32997 * C62335 +
            C32562 * C62334) *
               C152054 * C2216 +
           (C32997 * C62334 + C34363 * C62335 + C40514 * C62336 +
            (C31628 * C40488 + C40504 + C40504 + C151791 * C40492) * C62337) *
               C152054 * C152217) *
              C152214) *
         C151823) /
            (p * q * std::sqrt(p + q));
    d2ee[215] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152188 +
              C37949 * C152092) *
                 C23040 +
             (C37675 + C37676) * C23041 + C37693 * C23042) *
                C4107 -
            (C39233 * C23042 + (C38659 + C38660) * C23041 +
             (C37950 * C152092 + C37949 * C152188) * C23040) *
                C151956) *
               C152172 +
           (((C38660 + C38659) * C23040 + (C38658 + C38657) * C23041 +
             C39927 * C23042) *
                C151956 -
            (C39009 * C23042 + (C37678 + C37677) * C23041 +
             (C37676 + C37675) * C23040) *
                C4107) *
               C151914) *
              C151828 +
          ((((C37951 * C152188 + C37952 * C152092) * C23040 +
             (C38661 + C38662) * C23041 + C39730 * C23042) *
                C151956 -
            (C37694 * C23042 + (C37682 + C37681) * C23041 +
             (C37951 * C152092 +
              (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152188) *
                 C23040) *
                C4107) *
               C152172 +
           (((C37681 + C37682) * C23040 + (C37683 + C37684) * C23041 +
             C39437 * C23042) *
                C4107 -
            ((C39731 + C39732) * C23042 + (C38664 + C38663) * C23041 +
             (C38662 + C38661) * C23040) *
                C151956) *
               C151914) *
              C151837 +
          (((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C152188 +
              C37953 * C152092) *
                 C23040 +
             (C37687 + C37688) * C23041 + C37695 * C23042) *
                C4107 -
            ((C38665 + C38666) * C23042 + (C38667 + C38668) * C23041 +
             (C37956 * C152092 + C37953 * C152188) * C23040) *
                C151956) *
               C152172 +
           (((C38668 + C38667) * C23040 + (C38666 + C38665) * C23041 +
             (C32567 * C152188 +
              (C31628 * C8066 + C32044 + C32044 + C151791 * C8072) * C152092) *
                 C23042) *
                C151956 -
            ((C37691 + C37692) * C23042 + (C37690 + C37689) * C23041 +
             (C37688 + C37687) * C23040) *
                C4107) *
               C151914) *
              C3588)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
              C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
              C6086 * C160) *
                 C152188 +
             (C15243 + C15244 + C15245) * C152092) *
                C152054 * C4107 -
            ((C15246 + C15247 + C15248) * C152092 +
             (C15245 + C15244 + C15243) * C152188) *
                C152054 * C151956) *
               C152172 +
           (((C7455 + C7454 + C7453) * C152188 +
             (C8119 + C8120 + C8121) * C152092) *
                C152054 * C151956 -
            ((C7453 + C7454 + C7455) * C152092 +
             (C6436 + C6435 + C6434) * C152188) *
                C152054 * C4107) *
               C151914) *
              C151828 +
          ((((C15249 + C15250 + C15251) * C152188 +
             (C15252 + C15253 + C15254) * C152092) *
                C152054 * C151956 -
            ((C15251 + C15250 + C15249) * C152092 +
             (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
              C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
              C6084 * C159) *
                 C152188) *
                C152054 * C4107) *
               C152172 +
           (((C6440 + C6441 + C6442) * C152188 +
             (C7456 + C7457 + C7458) * C152092) *
                C152054 * C4107 -
            ((C9753 + C9754 + C9755) * C152092 +
             (C7458 + C7457 + C7456) * C152188) *
                C152054 * C151956) *
               C151914) *
              C151837 +
          ((((C6089 * C144 + C6108 + C6108 + C6084 * C160 + C6091 * C145 +
              C6109 + C6109 + C6085 * C161 + C6093 * C146 + C6110 + C6110 +
              C6086 * C162) *
                 C152188 +
             (C15255 + C15256 + C15257) * C152092) *
                C152054 * C4107 -
            ((C15258 + C15259 + C15260) * C152092 +
             (C15257 + C15256 + C15255) * C152188) *
                C152054 * C151956) *
               C152172 +
           (((C7461 + C7460 + C7459) * C152188 +
             (C6089 * C1532 + C6703 + C6703 + C6084 * C1556 + C6091 * C1531 +
              C6704 + C6704 + C6085 * C1555 + C6093 * C2677 + C6705 + C6705 +
              C6086 * C2679) *
                 C152092) *
                C152054 * C151956 -
            ((C7459 + C7460 + C7461) * C152092 +
             (C6448 + C6447 + C6446) * C152188) *
                C152054 * C4107) *
               C151914) *
              C3588)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C62334 +
             C37949 * C62335 + C37950 * C62336 + C40513 * C62337) *
                C152054 * C4107 -
            (C40516 * C62337 + C40513 * C62336 + C37950 * C62335 +
             C37949 * C62334) *
                C152054 * C151956) *
               C152172 +
           ((C32563 * C62334 + C32996 * C62335 + C34364 * C62336 +
             C40515 * C62337) *
                C152054 * C151956 -
            (C34364 * C62337 + C32996 * C62336 + C32563 * C62335 +
             C31851 * C62334) *
                C152054 * C4107) *
               C151914) *
              C151828 +
          (((C37951 * C62334 + C37952 * C62335 + C41022 * C62336 +
             C57627 * C62337) *
                C152054 * C151956 -
            (C41022 * C62337 + C37952 * C62336 + C37951 * C62335 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C62334) *
                C152054 * C4107) *
               C152172 +
           ((C31855 * C62334 + C32564 * C62335 + C34078 * C62336 +
             C40818 * C62337) *
                C152054 * C4107 -
            (C57425 * C62337 + C40818 * C62336 + C34078 * C62335 +
             C32564 * C62334) *
                C152054 * C151956) *
               C151914) *
              C151837 +
          ((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C62334 +
             C37953 * C62335 + C37956 * C62336 + C54593 * C62337) *
                C152054 * C4107 -
            (C62637 * C62337 + C54593 * C62336 + C37956 * C62335 +
             C37953 * C62334) *
                C152054 * C151956) *
               C152172 +
           ((C32569 * C62334 + C37955 * C62335 + C54592 * C62336 +
             (C31628 * C9428 + C54587 + C54587 + C151791 * C9434) * C62337) *
                C152054 * C151956 -
            (C54592 * C62337 + C37955 * C62336 + C32569 * C62335 +
             C31859 * C62334) *
                C152054 * C4107) *
               C151914) *
              C3588)) /
            (p * q * std::sqrt(p + q));
    d2ee[216] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152188 +
              C37949 * C152092) *
                 C23040 +
             (C37675 + C37676) * C23041 + C37693 * C23042) *
                C151952 -
            (C39233 * C23042 + (C38659 + C38660) * C23041 +
             (C37950 * C152092 + C37949 * C152188) * C23040) *
                C151959 +
            ((C37950 * C152188 + C40513 * C152092) * C23040 +
             (C39234 + C39235) * C23041 + C39242 * C23042) *
                C4779) *
               C152172 +
           (((C38660 + C38659) * C23040 + (C38658 + C38657) * C23041 +
             C39927 * C23042) *
                C151959 -
            (C39009 * C23042 + (C37678 + C37677) * C23041 +
             (C37676 + C37675) * C23040) *
                C151952 -
            ((C39240 + C39241) * C23042 + (C39237 + C39236) * C23041 +
             (C39235 + C39234) * C23040) *
                C4779) *
               C151914) *
              C3241 +
          ((((C37951 * C152188 + C37952 * C152092) * C23040 +
             (C38661 + C38662) * C23041 + C39730 * C23042) *
                C151959 -
            (C37694 * C23042 + (C37682 + C37681) * C23041 +
             (C37951 * C152092 +
              (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152188) *
                 C23040) *
                C151952 -
            ((C40819 + C40809) * C23042 + (C40820 + C40812) * C23041 +
             (C41022 * C152092 + C37952 * C152188) * C23040) *
                C4779) *
               C152172 +
           (((C37681 + C37682) * C23040 + (C37683 + C37684) * C23041 +
             C39437 * C23042) *
                C151952 -
            ((C39731 + C39732) * C23042 + (C38664 + C38663) * C23041 +
             (C38662 + C38661) * C23040) *
                C151959 +
            ((C40812 + C40820) * C23040 + (C40809 + C40819) * C23041 +
             (C34076 * C152188 +
              (C31628 * C27086 + C34215 + C34215 + C151791 * C27090) *
                  C152092) *
                 C23042) *
                C4779) *
               C151914) *
              C151834)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
              C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
              C6086 * C160) *
                 C152188 +
             (C15243 + C15244 + C15245) * C152092) *
                C152054 * C151952 -
            ((C15246 + C15247 + C15248) * C152092 +
             (C15245 + C15244 + C15243) * C152188) *
                C152054 * C151959 +
            ((C15248 + C15247 + C15246) * C152188 +
             (C17787 + C17788 + C17789) * C152092) *
                C152054 * C4779) *
               C152172 +
           (((C7455 + C7454 + C7453) * C152188 +
             (C8119 + C8120 + C8121) * C152092) *
                C152054 * C151959 -
            ((C7453 + C7454 + C7455) * C152092 +
             (C6436 + C6435 + C6434) * C152188) *
                C152054 * C151952 -
            ((C10174 + C10175 + C10176) * C152092 +
             (C8121 + C8120 + C8119) * C152188) *
                C152054 * C4779) *
               C151914) *
              C3241 +
          ((((C15249 + C15250 + C15251) * C152188 +
             (C15252 + C15253 + C15254) * C152092) *
                C152054 * C151959 -
            ((C15251 + C15250 + C15249) * C152092 +
             (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
              C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
              C6084 * C159) *
                 C152188) *
                C152054 * C151952 -
            ((C18292 + C18293 + C18294) * C152092 +
             (C15254 + C15253 + C15252) * C152188) *
                C152054 * C4779) *
               C152172 +
           (((C6440 + C6441 + C6442) * C152188 +
             (C7456 + C7457 + C7458) * C152092) *
                C152054 * C151952 -
            ((C9753 + C9754 + C9755) * C152092 +
             (C7458 + C7457 + C7456) * C152188) *
                C152054 * C151959 +
            ((C9755 + C9754 + C9753) * C152188 +
             (C6089 * C2956 + C9953 + C9953 + C6084 * C2964 + C6091 * C2957 +
              C9954 + C9954 + C6085 * C2965 + C6093 * C2958 + C9955 + C9955 +
              C6086 * C2966) *
                 C152092) *
                C152054 * C4779) *
               C151914) *
              C151834)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C62334 +
             C37949 * C62335 + C37950 * C62336 + C40513 * C62337) *
                C152054 * C151952 -
            (C40516 * C62337 + C40513 * C62336 + C37950 * C62335 +
             C37949 * C62334) *
                C152054 * C151959 +
            (C37950 * C62334 + C40513 * C62335 + C40516 * C62336 +
             C57128 * C62337) *
                C152054 * C4779) *
               C152172 +
           ((C32563 * C62334 + C32996 * C62335 + C34364 * C62336 +
             C40515 * C62337) *
                C152054 * C151959 -
            (C34364 * C62337 + C32996 * C62336 + C32563 * C62335 +
             C31851 * C62334) *
                C152054 * C151952 -
            (C57127 * C62337 + C40515 * C62336 + C34364 * C62335 +
             C32996 * C62334) *
                C152054 * C4779) *
               C151914) *
              C3241 +
          (((C37951 * C62334 + C37952 * C62335 + C41022 * C62336 +
             C57627 * C62337) *
                C152054 * C151959 -
            (C41022 * C62337 + C37952 * C62336 + C37951 * C62335 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C62334) *
                C152054 * C151952 -
            (C64638 * C62337 + C57627 * C62336 + C41022 * C62335 +
             C37952 * C62334) *
                C152054 * C4779) *
               C152172 +
           ((C31855 * C62334 + C32564 * C62335 + C34078 * C62336 +
             C40818 * C62337) *
                C152054 * C151952 -
            (C57425 * C62337 + C40818 * C62336 + C34078 * C62335 +
             C32564 * C62334) *
                C152054 * C151959 +
            (C34078 * C62334 + C40818 * C62335 + C57425 * C62336 +
             (C31628 * C49559 + C57624 + C57624 + C151791 * C49561) * C62337) *
                C152054 * C4779) *
               C151914) *
              C151834)) /
            (p * q * std::sqrt(p + q));
    d2ee[217] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
                 C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
                 C6086 * C160) *
                    C152188 +
                (C15243 + C15244 + C15245) * C152092) *
                   C152054 * C4107 -
               ((C15246 + C15247 + C15248) * C152092 +
                (C15245 + C15244 + C15243) * C152188) *
                   C152054 * C151956) *
                  C151851 * C152264 +
              (((C15249 + C15250 + C15251) * C152188 +
                (C15252 + C15253 + C15254) * C152092) *
                   C152054 * C151956 -
               ((C15251 + C15250 + C15249) * C152092 +
                (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
                 C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
                 C6084 * C159) *
                    C152188) *
                   C152054 * C4107) *
                  C151851 * C152257 +
              (((C6089 * C144 + C6108 + C6108 + C6084 * C160 + C6091 * C145 +
                 C6109 + C6109 + C6085 * C161 + C6093 * C146 + C6110 + C6110 +
                 C6086 * C162) *
                    C152188 +
                (C15255 + C15256 + C15257) * C152092) *
                   C152054 * C4107 -
               ((C15258 + C15259 + C15260) * C152092 +
                (C15257 + C15256 + C15255) * C152188) *
                   C152054 * C151956) *
                  C151851 * C152242 +
              (((C15664 + C15665 + C15666) * C152188 +
                (C6089 * C554 + C15655 + C15655 + C6084 * C578 + C6091 * C556 +
                 C15656 + C15656 + C6085 * C580 + C6093 * C558 + C15657 +
                 C15657 + C6086 * C582) *
                    C152092) *
                   C152054 * C151956 -
               ((C15666 + C15665 + C15664) * C152092 +
                (C6093 * C147 + C6117 + C6117 + C6086 * C163 + C6091 * C146 +
                 C6118 + C6118 + C6085 * C162 + C6089 * C145 + C6119 + C6119 +
                 C6084 * C161) *
                    C152188) *
                   C152054 * C4107) *
                  C151851 * C152218) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
                  C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
                  C6086 * C160) *
                     C152188 +
                 (C15243 + C15244 + C15245) * C152092) *
                    C152054 * C4107 -
                ((C15246 + C15247 + C15248) * C152092 +
                 (C15245 + C15244 + C15243) * C152188) *
                    C152054 * C151956) *
                   C152258 +
               (((C7455 + C7454 + C7453) * C152188 +
                 (C8119 + C8120 + C8121) * C152092) *
                    C152054 * C151956 -
                ((C7453 + C7454 + C7455) * C152092 +
                 (C6436 + C6435 + C6434) * C152188) *
                    C152054 * C4107) *
                   C152244 +
               (((C6439 + C6438 + C6437) * C152188 +
                 (C8122 + C8123 + C8124) * C152092) *
                    C152054 * C4107 -
                ((C8125 + C8126 + C8127) * C152092 +
                 (C8124 + C8123 + C8122) * C152188) *
                    C152054 * C151956) *
                   C152214) *
                  C3241 +
              ((((C15249 + C15250 + C15251) * C152188 +
                 (C15252 + C15253 + C15254) * C152092) *
                    C152054 * C151956 -
                ((C15251 + C15250 + C15249) * C152092 +
                 (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
                  C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
                  C6084 * C159) *
                     C152188) *
                    C152054 * C4107) *
                   C152258 +
               (((C6440 + C6441 + C6442) * C152188 +
                 (C7456 + C7457 + C7458) * C152092) *
                    C152054 * C4107 -
                ((C9753 + C9754 + C9755) * C152092 +
                 (C7458 + C7457 + C7456) * C152188) *
                    C152054 * C151956) *
                   C152244 +
               (((C8647 + C8646 + C8645) * C152188 +
                 (C6089 * C1540 + C9744 + C9744 + C6084 * C1564 +
                  C6091 * C1541 + C9745 + C9745 + C6085 * C1565 +
                  C6093 * C1542 + C9746 + C9746 + C6086 * C1566) *
                     C152092) *
                    C152054 * C151956 -
                ((C8645 + C8646 + C8647) * C152092 +
                 (C6445 + C6444 + C6443) * C152188) *
                    C152054 * C4107) *
                   C152214) *
                  C151834)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
             C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
             C6086 * C160) *
                C152188 +
            (C15243 + C15244 + C15245) * C152092) *
               C152054 * C152266 -
           ((C15246 + C15247 + C15248) * C152092 +
            (C15245 + C15244 + C15243) * C152188) *
               C152054 * C152263 +
           ((C15248 + C15247 + C15246) * C152188 +
            (C17787 + C17788 + C17789) * C152092) *
               C152054 * C152252 -
           ((C17790 + C17791 + C17792) * C152092 +
            (C17789 + C17788 + C17787) * C152188) *
               C152054 * C152230) *
              C151851 * C3241 +
          (((C15249 + C15250 + C15251) * C152188 +
            (C15252 + C15253 + C15254) * C152092) *
               C152054 * C152263 -
           ((C15251 + C15250 + C15249) * C152092 +
            (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
             C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
             C6084 * C159) *
                C152188) *
               C152054 * C152266 -
           ((C18292 + C18293 + C18294) * C152092 +
            (C15254 + C15253 + C15252) * C152188) *
               C152054 * C152252 +
           ((C18294 + C18293 + C18292) * C152188 +
            (C6089 * C2456 + C18283 + C18283 + C6084 * C2472 + C6091 * C2457 +
             C18284 + C18284 + C6085 * C2473 + C6093 * C2458 + C18285 + C18285 +
             C6086 * C2474) *
                C152092) *
               C152054 * C152230) *
              C151851 * C151834)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152188 +
             C37949 * C152092) *
                C23040 +
            (C37675 + C37676) * C23041 + C37693 * C23042) *
               C4107 -
           (C39233 * C23042 + (C38659 + C38660) * C23041 +
            (C37950 * C152092 + C37949 * C152188) * C23040) *
               C151956) *
              C151851 * C152264 +
          (((C37951 * C152188 + C37952 * C152092) * C23040 +
            (C38661 + C38662) * C23041 + C39730 * C23042) *
               C151956 -
           (C37694 * C23042 + (C37682 + C37681) * C23041 +
            (C37951 * C152092 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152188) *
                C23040) *
               C4107) *
              C151851 * C152257 +
          ((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C152188 +
             C37953 * C152092) *
                C23040 +
            (C37687 + C37688) * C23041 + C37695 * C23042) *
               C4107 -
           ((C38665 + C38666) * C23042 + (C38667 + C38668) * C23041 +
            (C37956 * C152092 + C37953 * C152188) * C23040) *
               C151956) *
              C151851 * C152242 +
          (((C38366 * C152188 +
             (C31628 * C554 + C38361 + C38361 + C151791 * C578) * C152092) *
                C23040 +
            (C38161 * C152188 +
             (C31628 * C1531 + C38362 + C38362 + C151791 * C1555) * C152092) *
                C23041 +
            (C38162 * C152188 +
             (C31628 * C1542 + C38363 + C38363 + C151791 * C1566) * C152092) *
                C23042) *
               C151956 -
           ((C38164 + C38154) * C23042 + (C38163 + C38151) * C23041 +
            (C38366 * C152092 +
             (C31628 * C145 + C31646 + C31646 + C151791 * C161) * C152188) *
                C23040) *
               C4107) *
              C151851 * C152218)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152188 +
              C37949 * C152092) *
                 C23040 +
             (C37675 + C37676) * C23041 + C37693 * C23042) *
                C4107 -
            (C39233 * C23042 + (C38659 + C38660) * C23041 +
             (C37950 * C152092 + C37949 * C152188) * C23040) *
                C151956) *
               C152258 +
           (((C38660 + C38659) * C23040 + (C38658 + C38657) * C23041 +
             C39927 * C23042) *
                C151956 -
            (C39009 * C23042 + (C37678 + C37677) * C23041 +
             (C37676 + C37675) * C23040) *
                C4107) *
               C152244 +
           ((C37693 * C23040 + (C37680 + C37679) * C23041 + C39014 * C23042) *
                C4107 -
            ((C39928 + C39929) * C23042 + (C39239 + C39238) * C23041 +
             C39233 * C23040) *
                C151956) *
               C152214) *
              C3241 +
          ((((C37951 * C152188 + C37952 * C152092) * C23040 +
             (C38661 + C38662) * C23041 + C39730 * C23042) *
                C151956 -
            (C37694 * C23042 + (C37682 + C37681) * C23041 +
             (C37951 * C152092 +
              (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152188) *
                 C23040) *
                C4107) *
               C152258 +
           (((C37681 + C37682) * C23040 + (C37683 + C37684) * C23041 +
             C39437 * C23042) *
                C4107 -
            ((C39731 + C39732) * C23042 + (C38664 + C38663) * C23041 +
             (C38662 + C38661) * C23040) *
                C151956) *
               C152244 +
           ((C39730 * C23040 + (C39732 + C39731) * C23041 +
             (C33342 * C152188 +
              (C31628 * C25022 + C34069 + C34069 + C151791 * C25026) *
                  C152092) *
                 C23042) *
                C151956 -
            ((C39438 + C39439) * C23042 + (C37686 + C37685) * C23041 +
             C37694 * C23040) *
                C4107) *
               C152214) *
              C151834)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152188 +
             C37949 * C152092) *
                C23040 +
            (C37675 + C37676) * C23041 + C37693 * C23042) *
               C152266 -
           (C39233 * C23042 + (C38659 + C38660) * C23041 +
            (C37950 * C152092 + C37949 * C152188) * C23040) *
               C152263 +
           ((C37950 * C152188 + C40513 * C152092) * C23040 +
            (C39234 + C39235) * C23041 + C39242 * C23042) *
               C152252 -
           ((C41217 + C41218) * C23042 + (C41219 + C41220) * C23041 +
            (C40516 * C152092 + C40513 * C152188) * C23040) *
               C152230) *
              C151851 * C3241 +
          (((C37951 * C152188 + C37952 * C152092) * C23040 +
            (C38661 + C38662) * C23041 + C39730 * C23042) *
               C152263 -
           (C37694 * C23042 + (C37682 + C37681) * C23041 +
            (C37951 * C152092 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152188) *
                C23040) *
               C152266 -
           ((C40819 + C40809) * C23042 + (C40820 + C40812) * C23041 +
            (C41022 * C152092 + C37952 * C152188) * C23040) *
               C152252 +
           ((C41022 * C152188 +
             (C31628 * C2456 + C41017 + C41017 + C151791 * C2472) * C152092) *
                C23040 +
            (C40818 * C152188 +
             (C31628 * C9427 + C41018 + C41018 + C151791 * C9433) * C152092) *
                C23041 +
            (C40817 * C152188 +
             (C31628 * C26362 + C41019 + C41019 + C151791 * C26366) * C152092) *
                C23042) *
               C152230) *
              C151851 * C151834)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C62334 +
            C37949 * C62335 + C37950 * C62336 + C40513 * C62337) *
               C152054 * C4107 -
           (C40516 * C62337 + C40513 * C62336 + C37950 * C62335 +
            C37949 * C62334) *
               C152054 * C151956) *
              C151851 * C152264 +
          ((C37951 * C62334 + C37952 * C62335 + C41022 * C62336 +
            C57627 * C62337) *
               C152054 * C151956 -
           (C41022 * C62337 + C37952 * C62336 + C37951 * C62335 +
            (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C62334) *
               C152054 * C4107) *
              C151851 * C152257 +
          (((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C62334 +
            C37953 * C62335 + C37956 * C62336 + C54593 * C62337) *
               C152054 * C4107 -
           (C62637 * C62337 + C54593 * C62336 + C37956 * C62335 +
            C37953 * C62334) *
               C152054 * C151956) *
              C151851 * C152242 +
          ((C38366 * C62334 + C54996 * C62335 + C62903 * C62336 +
            (C31628 * C2458 + C62900 + C62900 + C151791 * C2474) * C62337) *
               C152054 * C151956 -
           (C62903 * C62337 + C54996 * C62336 + C38366 * C62335 +
            (C31628 * C145 + C31646 + C31646 + C151791 * C161) * C62334) *
               C152054 * C4107) *
              C151851 * C152218)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C62334 +
             C37949 * C62335 + C37950 * C62336 + C40513 * C62337) *
                C152054 * C4107 -
            (C40516 * C62337 + C40513 * C62336 + C37950 * C62335 +
             C37949 * C62334) *
                C152054 * C151956) *
               C152258 +
           ((C32563 * C62334 + C32996 * C62335 + C34364 * C62336 +
             C40515 * C62337) *
                C152054 * C151956 -
            (C34364 * C62337 + C32996 * C62336 + C32563 * C62335 +
             C31851 * C62334) *
                C152054 * C4107) *
               C152244 +
           ((C31852 * C62334 + C32562 * C62335 + C32997 * C62336 +
             C34363 * C62337) *
                C152054 * C4107 -
            (C40514 * C62337 + C34363 * C62336 + C32997 * C62335 +
             C32562 * C62334) *
                C152054 * C151956) *
               C152214) *
              C3241 +
          (((C37951 * C62334 + C37952 * C62335 + C41022 * C62336 +
             C57627 * C62337) *
                C152054 * C151956 -
            (C41022 * C62337 + C37952 * C62336 + C37951 * C62335 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C62334) *
                C152054 * C4107) *
               C152258 +
           ((C31855 * C62334 + C32564 * C62335 + C34078 * C62336 +
             C40818 * C62337) *
                C152054 * C4107 -
            (C57425 * C62337 + C40818 * C62336 + C34078 * C62335 +
             C32564 * C62334) *
                C152054 * C151956) *
               C152244 +
           ((C32565 * C62334 + C34077 * C62335 + C40817 * C62336 +
             (C31628 * C26362 + C41019 + C41019 + C151791 * C26366) * C62337) *
                C152054 * C151956 -
            (C40817 * C62337 + C34077 * C62336 + C32565 * C62335 +
             C31856 * C62334) *
                C152054 * C4107) *
               C152214) *
              C151834)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C62334 +
            C37949 * C62335 + C37950 * C62336 + C40513 * C62337) *
               C152054 * C152266 -
           (C40516 * C62337 + C40513 * C62336 + C37950 * C62335 +
            C37949 * C62334) *
               C152054 * C152263 +
           (C37950 * C62334 + C40513 * C62335 + C40516 * C62336 +
            C57128 * C62337) *
               C152054 * C152252 -
           (C64308 * C62337 + C57128 * C62336 + C40516 * C62335 +
            C40513 * C62334) *
               C152054 * C152230) *
              C151851 * C3241 +
          ((C37951 * C62334 + C37952 * C62335 + C41022 * C62336 +
            C57627 * C62337) *
               C152054 * C152263 -
           (C41022 * C62337 + C37952 * C62336 + C37951 * C62335 +
            (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C62334) *
               C152054 * C152266 -
           (C64638 * C62337 + C57627 * C62336 + C41022 * C62335 +
            C37952 * C62334) *
               C152054 * C152252 +
           (C41022 * C62334 + C57627 * C62335 + C64638 * C62336 +
            (C31628 * C48824 + C64635 + C64635 + C151791 * C48828) * C62337) *
               C152054 * C152230) *
              C151851 * C151834)) /
            (p * q * std::sqrt(p + q));
    d2ee[218] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152188 +
             C37949 * C152092) *
                C23040 +
            (C37675 + C37676) * C23041 + C37693 * C23042) *
               C151952 -
           (C39233 * C23042 + (C38659 + C38660) * C23041 +
            (C37950 * C152092 + C37949 * C152188) * C23040) *
               C151959 +
           ((C37950 * C152188 + C40513 * C152092) * C23040 +
            (C39234 + C39235) * C23041 + C39242 * C23042) *
               C4779) *
              C151851 * C151828 +
          (((C37951 * C152188 + C37952 * C152092) * C23040 +
            (C38661 + C38662) * C23041 + C39730 * C23042) *
               C151959 -
           (C37694 * C23042 + (C37682 + C37681) * C23041 +
            (C37951 * C152092 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152188) *
                C23040) *
               C151952 -
           ((C40819 + C40809) * C23042 + (C40820 + C40812) * C23041 +
            (C41022 * C152092 + C37952 * C152188) * C23040) *
               C4779) *
              C151851 * C151837 +
          ((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C152188 +
             C37953 * C152092) *
                C23040 +
            (C37687 + C37688) * C23041 + C37695 * C23042) *
               C151952 -
           ((C38665 + C38666) * C23042 + (C38667 + C38668) * C23041 +
            (C37956 * C152092 + C37953 * C152188) * C23040) *
               C151959 +
           ((C37956 * C152188 +
             (C31628 * C2452 + C37930 + C37930 + C151791 * C2468) * C152092) *
                C23040 +
            (C37955 * C152188 +
             (C31628 * C2957 + C37931 + C37931 + C151791 * C2965) * C152092) *
                C23041 +
            (C37954 * C152188 +
             (C31628 * C10151 + C37932 + C37932 + C151791 * C10157) * C152092) *
                C23042) *
               C4779) *
              C151851 * C3588)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
             C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
             C6086 * C160) *
                C152188 +
            (C15243 + C15244 + C15245) * C152092) *
               C152054 * C151952 -
           ((C15246 + C15247 + C15248) * C152092 +
            (C15245 + C15244 + C15243) * C152188) *
               C152054 * C151959 +
           ((C15248 + C15247 + C15246) * C152188 +
            (C17787 + C17788 + C17789) * C152092) *
               C152054 * C4779) *
              C151851 * C151828 +
          (((C15249 + C15250 + C15251) * C152188 +
            (C15252 + C15253 + C15254) * C152092) *
               C152054 * C151959 -
           ((C15251 + C15250 + C15249) * C152092 +
            (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
             C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
             C6084 * C159) *
                C152188) *
               C152054 * C151952 -
           ((C18292 + C18293 + C18294) * C152092 +
            (C15254 + C15253 + C15252) * C152188) *
               C152054 * C4779) *
              C151851 * C151837 +
          (((C6089 * C144 + C6108 + C6108 + C6084 * C160 + C6091 * C145 +
             C6109 + C6109 + C6085 * C161 + C6093 * C146 + C6110 + C6110 +
             C6086 * C162) *
                C152188 +
            (C15255 + C15256 + C15257) * C152092) *
               C152054 * C151952 -
           ((C15258 + C15259 + C15260) * C152092 +
            (C15257 + C15256 + C15255) * C152188) *
               C152054 * C151959 +
           ((C15260 + C15259 + C15258) * C152188 +
            (C6089 * C2452 + C15204 + C15204 + C6084 * C2468 + C6091 * C2451 +
             C15205 + C15205 + C6085 * C2467 + C6093 * C2818 + C15206 + C15206 +
             C6086 * C2820) *
                C152092) *
               C152054 * C4779) *
              C151851 * C3588)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C62334 +
            C37949 * C62335 + C37950 * C62336 + C40513 * C62337) *
               C152054 * C151952 -
           (C40516 * C62337 + C40513 * C62336 + C37950 * C62335 +
            C37949 * C62334) *
               C152054 * C151959 +
           (C37950 * C62334 + C40513 * C62335 + C40516 * C62336 +
            C57128 * C62337) *
               C152054 * C4779) *
              C151851 * C151828 +
          ((C37951 * C62334 + C37952 * C62335 + C41022 * C62336 +
            C57627 * C62337) *
               C152054 * C151959 -
           (C41022 * C62337 + C37952 * C62336 + C37951 * C62335 +
            (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C62334) *
               C152054 * C151952 -
           (C64638 * C62337 + C57627 * C62336 + C41022 * C62335 +
            C37952 * C62334) *
               C152054 * C4779) *
              C151851 * C151837 +
          (((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C62334 +
            C37953 * C62335 + C37956 * C62336 + C54593 * C62337) *
               C152054 * C151952 -
           (C62637 * C62337 + C54593 * C62336 + C37956 * C62335 +
            C37953 * C62334) *
               C152054 * C151959 +
           (C37956 * C62334 + C54593 * C62335 + C62637 * C62336 +
            (C31628 * C17752 + C62634 + C62634 + C151791 * C17758) * C62337) *
               C152054 * C4779) *
              C151851 * C3588)) /
            (p * q * std::sqrt(p + q));
    d2ee[219] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
              C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
              C6086 * C160) *
                 C152188 +
             (C15243 + C15244 + C15245) * C152092) *
                C152054 * C4107 -
            ((C15246 + C15247 + C15248) * C152092 +
             (C15245 + C15244 + C15243) * C152188) *
                C152054 * C151956) *
               C152258 +
           (((C7455 + C7454 + C7453) * C152188 +
             (C8119 + C8120 + C8121) * C152092) *
                C152054 * C151956 -
            ((C7453 + C7454 + C7455) * C152092 +
             (C6436 + C6435 + C6434) * C152188) *
                C152054 * C4107) *
               C152244 +
           (((C6439 + C6438 + C6437) * C152188 +
             (C8122 + C8123 + C8124) * C152092) *
                C152054 * C4107 -
            ((C8125 + C8126 + C8127) * C152092 +
             (C8124 + C8123 + C8122) * C152188) *
                C152054 * C151956) *
               C152214) *
              C3241 +
          ((((C15249 + C15250 + C15251) * C152188 +
             (C15252 + C15253 + C15254) * C152092) *
                C152054 * C151956 -
            ((C15251 + C15250 + C15249) * C152092 +
             (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
              C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
              C6084 * C159) *
                 C152188) *
                C152054 * C4107) *
               C152258 +
           (((C6440 + C6441 + C6442) * C152188 +
             (C7456 + C7457 + C7458) * C152092) *
                C152054 * C4107 -
            ((C9753 + C9754 + C9755) * C152092 +
             (C7458 + C7457 + C7456) * C152188) *
                C152054 * C151956) *
               C152244 +
           (((C8647 + C8646 + C8645) * C152188 +
             (C6089 * C1540 + C9744 + C9744 + C6084 * C1564 + C6091 * C1541 +
              C9745 + C9745 + C6085 * C1565 + C6093 * C1542 + C9746 + C9746 +
              C6086 * C1566) *
                 C152092) *
                C152054 * C151956 -
            ((C8645 + C8646 + C8647) * C152092 +
             (C6445 + C6444 + C6443) * C152188) *
                C152054 * C4107) *
               C152214) *
              C151834)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
             C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
             C6086 * C160) *
                C152188 +
            (C15243 + C15244 + C15245) * C152092) *
               C152054 * C4107 -
           ((C15246 + C15247 + C15248) * C152092 +
            (C15245 + C15244 + C15243) * C152188) *
               C152054 * C151956) *
              C151851 * C152264 +
          (((C15249 + C15250 + C15251) * C152188 +
            (C15252 + C15253 + C15254) * C152092) *
               C152054 * C151956 -
           ((C15251 + C15250 + C15249) * C152092 +
            (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
             C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
             C6084 * C159) *
                C152188) *
               C152054 * C4107) *
              C151851 * C152257 +
          (((C6089 * C144 + C6108 + C6108 + C6084 * C160 + C6091 * C145 +
             C6109 + C6109 + C6085 * C161 + C6093 * C146 + C6110 + C6110 +
             C6086 * C162) *
                C152188 +
            (C15255 + C15256 + C15257) * C152092) *
               C152054 * C4107 -
           ((C15258 + C15259 + C15260) * C152092 +
            (C15257 + C15256 + C15255) * C152188) *
               C152054 * C151956) *
              C151851 * C152242 +
          (((C15664 + C15665 + C15666) * C152188 +
            (C6089 * C554 + C15655 + C15655 + C6084 * C578 + C6091 * C556 +
             C15656 + C15656 + C6085 * C580 + C6093 * C558 + C15657 + C15657 +
             C6086 * C582) *
                C152092) *
               C152054 * C151956 -
           ((C15666 + C15665 + C15664) * C152092 +
            (C6093 * C147 + C6117 + C6117 + C6086 * C163 + C6091 * C146 +
             C6118 + C6118 + C6085 * C162 + C6089 * C145 + C6119 + C6119 +
             C6084 * C161) *
                C152188) *
               C152054 * C4107) *
              C151851 * C152218)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152188 +
             C37949 * C152092) *
                C23040 +
            (C37675 + C37676) * C23041 + C37693 * C23042) *
               C4107 -
           (C39233 * C23042 + (C38659 + C38660) * C23041 +
            (C37950 * C152092 + C37949 * C152188) * C23040) *
               C151956) *
              C151851 * C152264 +
          (((C37951 * C152188 + C37952 * C152092) * C23040 +
            (C38661 + C38662) * C23041 + C39730 * C23042) *
               C151956 -
           (C37694 * C23042 + (C37682 + C37681) * C23041 +
            (C37951 * C152092 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152188) *
                C23040) *
               C4107) *
              C151851 * C152257 +
          ((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C152188 +
             C37953 * C152092) *
                C23040 +
            (C37687 + C37688) * C23041 + C37695 * C23042) *
               C4107 -
           ((C38665 + C38666) * C23042 + (C38667 + C38668) * C23041 +
            (C37956 * C152092 + C37953 * C152188) * C23040) *
               C151956) *
              C151851 * C152242 +
          (((C38366 * C152188 +
             (C31628 * C554 + C38361 + C38361 + C151791 * C578) * C152092) *
                C23040 +
            (C38161 * C152188 +
             (C31628 * C1531 + C38362 + C38362 + C151791 * C1555) * C152092) *
                C23041 +
            (C38162 * C152188 +
             (C31628 * C1542 + C38363 + C38363 + C151791 * C1566) * C152092) *
                C23042) *
               C151956 -
           ((C38164 + C38154) * C23042 + (C38163 + C38151) * C23041 +
            (C38366 * C152092 +
             (C31628 * C145 + C31646 + C31646 + C151791 * C161) * C152188) *
                C23040) *
               C4107) *
              C151851 * C152218)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152188 +
              C37949 * C152092) *
                 C23040 +
             (C37675 + C37676) * C23041 + C37693 * C23042) *
                C4107 -
            (C39233 * C23042 + (C38659 + C38660) * C23041 +
             (C37950 * C152092 + C37949 * C152188) * C23040) *
                C151956) *
               C152258 +
           (((C38660 + C38659) * C23040 + (C38658 + C38657) * C23041 +
             C39927 * C23042) *
                C151956 -
            (C39009 * C23042 + (C37678 + C37677) * C23041 +
             (C37676 + C37675) * C23040) *
                C4107) *
               C152244 +
           ((C37693 * C23040 + (C37680 + C37679) * C23041 + C39014 * C23042) *
                C4107 -
            ((C39928 + C39929) * C23042 + (C39239 + C39238) * C23041 +
             C39233 * C23040) *
                C151956) *
               C152214) *
              C3241 +
          ((((C37951 * C152188 + C37952 * C152092) * C23040 +
             (C38661 + C38662) * C23041 + C39730 * C23042) *
                C151956 -
            (C37694 * C23042 + (C37682 + C37681) * C23041 +
             (C37951 * C152092 +
              (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152188) *
                 C23040) *
                C4107) *
               C152258 +
           (((C37681 + C37682) * C23040 + (C37683 + C37684) * C23041 +
             C39437 * C23042) *
                C4107 -
            ((C39731 + C39732) * C23042 + (C38664 + C38663) * C23041 +
             (C38662 + C38661) * C23040) *
                C151956) *
               C152244 +
           ((C39730 * C23040 + (C39732 + C39731) * C23041 +
             (C33342 * C152188 +
              (C31628 * C25022 + C34069 + C34069 + C151791 * C25026) *
                  C152092) *
                 C23042) *
                C151956 -
            ((C39438 + C39439) * C23042 + (C37686 + C37685) * C23041 +
             C37694 * C23040) *
                C4107) *
               C152214) *
              C151834)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C62334 +
            C37949 * C62335 + C37950 * C62336 + C40513 * C62337) *
               C152054 * C4107 -
           (C40516 * C62337 + C40513 * C62336 + C37950 * C62335 +
            C37949 * C62334) *
               C152054 * C151956) *
              C151851 * C152264 +
          ((C37951 * C62334 + C37952 * C62335 + C41022 * C62336 +
            C57627 * C62337) *
               C152054 * C151956 -
           (C41022 * C62337 + C37952 * C62336 + C37951 * C62335 +
            (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C62334) *
               C152054 * C4107) *
              C151851 * C152257 +
          (((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C62334 +
            C37953 * C62335 + C37956 * C62336 + C54593 * C62337) *
               C152054 * C4107 -
           (C62637 * C62337 + C54593 * C62336 + C37956 * C62335 +
            C37953 * C62334) *
               C152054 * C151956) *
              C151851 * C152242 +
          ((C38366 * C62334 + C54996 * C62335 + C62903 * C62336 +
            (C31628 * C2458 + C62900 + C62900 + C151791 * C2474) * C62337) *
               C152054 * C151956 -
           (C62903 * C62337 + C54996 * C62336 + C38366 * C62335 +
            (C31628 * C145 + C31646 + C31646 + C151791 * C161) * C62334) *
               C152054 * C4107) *
              C151851 * C152218)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C62334 +
             C37949 * C62335 + C37950 * C62336 + C40513 * C62337) *
                C152054 * C4107 -
            (C40516 * C62337 + C40513 * C62336 + C37950 * C62335 +
             C37949 * C62334) *
                C152054 * C151956) *
               C152258 +
           ((C32563 * C62334 + C32996 * C62335 + C34364 * C62336 +
             C40515 * C62337) *
                C152054 * C151956 -
            (C34364 * C62337 + C32996 * C62336 + C32563 * C62335 +
             C31851 * C62334) *
                C152054 * C4107) *
               C152244 +
           ((C31852 * C62334 + C32562 * C62335 + C32997 * C62336 +
             C34363 * C62337) *
                C152054 * C4107 -
            (C40514 * C62337 + C34363 * C62336 + C32997 * C62335 +
             C32562 * C62334) *
                C152054 * C151956) *
               C152214) *
              C3241 +
          (((C37951 * C62334 + C37952 * C62335 + C41022 * C62336 +
             C57627 * C62337) *
                C152054 * C151956 -
            (C41022 * C62337 + C37952 * C62336 + C37951 * C62335 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C62334) *
                C152054 * C4107) *
               C152258 +
           ((C31855 * C62334 + C32564 * C62335 + C34078 * C62336 +
             C40818 * C62337) *
                C152054 * C4107 -
            (C57425 * C62337 + C40818 * C62336 + C34078 * C62335 +
             C32564 * C62334) *
                C152054 * C151956) *
               C152244 +
           ((C32565 * C62334 + C34077 * C62335 + C40817 * C62336 +
             (C31628 * C26362 + C41019 + C41019 + C151791 * C26366) * C62337) *
                C152054 * C151956 -
            (C40817 * C62337 + C34077 * C62336 + C32565 * C62335 +
             C31856 * C62334) *
                C152054 * C4107) *
               C152214) *
              C151834)) /
            (p * q * std::sqrt(p + q));
    d2ee[220] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
             C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
             C6086 * C160) *
                C152188 +
            (C15243 + C15244 + C15245) * C152092) *
               C152054 * C151869 * C1709 -
           ((C7453 + C7454 + C7455) * C152092 +
            (C6436 + C6435 + C6434) * C152188) *
               C152054 * C151869 * C1710 +
           ((C6439 + C6438 + C6437) * C152188 +
            (C8122 + C8123 + C8124) * C152092) *
               C152054 * C151869 * C1711 -
           ((C8866 + C8867 + C8868) * C152092 +
            (C7843 + C7842 + C7841) * C152188) *
               C152054 * C151869 * C152224) *
              C152158 +
          (((C6440 + C6441 + C6442) * C152188 +
            (C7456 + C7457 + C7458) * C152092) *
               C152054 * C151869 * C1710 -
           ((C15251 + C15250 + C15249) * C152092 +
            (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
             C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
             C6084 * C159) *
                C152188) *
               C152054 * C151869 * C1709 -
           ((C8645 + C8646 + C8647) * C152092 +
            (C6445 + C6444 + C6443) * C152188) *
               C152054 * C151869 * C1711 +
           ((C8339 + C8338 + C8337) * C152188 +
            (C6089 * C2054 + C8636 + C8636 + C6084 * C2062 + C6091 * C2055 +
             C8637 + C8637 + C6085 * C2063 + C6093 * C2056 + C8638 + C8638 +
             C6086 * C2064) *
                C152092) *
               C152054 * C151869 * C152224) *
              C151834)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
             C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
             C6086 * C160) *
                C152188 +
            (C15243 + C15244 + C15245) * C152092) *
               C152054 * C151869 * C152172 -
           ((C7453 + C7454 + C7455) * C152092 +
            (C6436 + C6435 + C6434) * C152188) *
               C152054 * C151869 * C151914) *
              C739 +
          (((C6440 + C6441 + C6442) * C152188 +
            (C7456 + C7457 + C7458) * C152092) *
               C152054 * C151869 * C151914 -
           ((C15251 + C15250 + C15249) * C152092 +
            (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
             C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
             C6084 * C159) *
                C152188) *
               C152054 * C151869 * C152172) *
              C740 +
          (((C6089 * C144 + C6108 + C6108 + C6084 * C160 + C6091 * C145 +
             C6109 + C6109 + C6085 * C161 + C6093 * C146 + C6110 + C6110 +
             C6086 * C162) *
                C152188 +
            (C15255 + C15256 + C15257) * C152092) *
               C152054 * C151869 * C152172 -
           ((C7459 + C7460 + C7461) * C152092 +
            (C6448 + C6447 + C6446) * C152188) *
               C152054 * C151869 * C151914) *
              C741 +
          (((C6915 + C6916 + C6917) * C152188 +
            (C6089 * C1086 + C7115 + C7115 + C6084 * C1098 + C6091 * C1087 +
             C7116 + C7116 + C6085 * C1099 + C6093 * C1088 + C7117 + C7117 +
             C6086 * C1100) *
                C152092) *
               C152054 * C151869 * C151914 -
           ((C6093 * C557 + C7114 + C7114 + C6086 * C581 + C6091 * C555 +
             C7113 + C7113 + C6085 * C579 + C6089 * C547 + C7112 + C7112 +
             C6084 * C571) *
                C152092 +
            (C6093 * C147 + C6117 + C6117 + C6086 * C163 + C6091 * C146 +
             C6118 + C6118 + C6085 * C162 + C6089 * C145 + C6119 + C6119 +
             C6084 * C161) *
                C152188) *
               C152054 * C151869 * C152172) *
              C152218)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152188 +
             C37949 * C152092) *
                C23040 +
            (C37675 + C37676) * C23041 + C37693 * C23042) *
               C151869 * C152172 -
           ((C37679 + C37680) * C23042 + (C37678 + C37677) * C23041 +
            (C37676 + C37675) * C23040) *
               C151869 * C151914) *
              C739 +
          (((C37681 + C37682) * C23040 + (C37683 + C37684) * C23041 +
            (C37685 + C37686) * C23042) *
               C151869 * C151914 -
           (C37694 * C23042 + (C37682 + C37681) * C23041 +
            (C37951 * C152092 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152188) *
                C23040) *
               C151869 * C152172) *
              C740 +
          ((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C152188 +
             C37953 * C152092) *
                C23040 +
            (C37687 + C37688) * C23041 + C37695 * C23042) *
               C151869 * C152172 -
           ((C37691 + C37692) * C23042 + (C37690 + C37689) * C23041 +
            (C37688 + C37687) * C23040) *
               C151869 * C151914) *
              C741 +
          (((C38151 + C38163) * C23040 + (C38154 + C38164) * C23041 +
            (C32190 * C152188 +
             (C31628 * C2056 + C32327 + C32327 + C151791 * C2064) * C152092) *
                C23042) *
               C151869 * C151914 -
           ((C38164 + C38154) * C23042 + (C38163 + C38151) * C23041 +
            ((C31628 * C547 + C32324 + C32324 + C151791 * C571) * C152092 +
             (C31628 * C145 + C31646 + C31646 + C151791 * C161) * C152188) *
                C23040) *
               C151869 * C152172) *
              C152218)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152188 +
             C37949 * C152092) *
                C23040 +
            (C37675 + C37676) * C23041 + C37693 * C23042) *
               C151869 * C1709 -
           (C39009 * C23042 + (C37678 + C37677) * C23041 +
            (C37676 + C37675) * C23040) *
               C151869 * C1710 +
           (C37693 * C23040 + (C37680 + C37679) * C23041 + C39014 * C23042) *
               C151869 * C1711 -
           ((C39012 + C39013) * C23042 + (C39011 + C39010) * C23041 +
            C39009 * C23040) *
               C151869 * C152224) *
              C152158 +
          (((C37681 + C37682) * C23040 + (C37683 + C37684) * C23041 +
            C39437 * C23042) *
               C151869 * C1710 -
           (C37694 * C23042 + (C37682 + C37681) * C23041 +
            (C37951 * C152092 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152188) *
                C23040) *
               C151869 * C1709 -
           ((C39438 + C39439) * C23042 + (C37686 + C37685) * C23041 +
            C37694 * C23040) *
               C151869 * C1711 +
           (C39437 * C23040 + (C39439 + C39438) * C23041 +
            (C33141 * C152188 +
             (C31628 * C25784 + C33339 + C33339 + C151791 * C25788) * C152092) *
                C23042) *
               C151869 * C152224) *
              C151834)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C62334 +
            C37949 * C62335 + C37950 * C62336 + C40513 * C62337) *
               C152054 * C151869 * C152172 -
           (C34364 * C62337 + C32996 * C62336 + C32563 * C62335 +
            C31851 * C62334) *
               C152054 * C151869 * C151914) *
              C739 +
          ((C31855 * C62334 + C32564 * C62335 + C34078 * C62336 +
            C40818 * C62337) *
               C152054 * C151869 * C151914 -
           (C41022 * C62337 + C37952 * C62336 + C37951 * C62335 +
            (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C62334) *
               C152054 * C151869 * C152172) *
              C740 +
          (((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C62334 +
            C37953 * C62335 + C37956 * C62336 + C54593 * C62337) *
               C152054 * C151869 * C152172 -
           (C54592 * C62337 + C37955 * C62336 + C32569 * C62335 +
            C31859 * C62334) *
               C152054 * C151869 * C151914) *
              C741 +
          ((C32188 * C62334 + C38161 * C62335 + C54794 * C62336 +
            (C31628 * C2958 + C54993 + C54993 + C151791 * C2966) * C62337) *
               C152054 * C151869 * C151914 -
           ((C31628 * C2451 + C54992 + C54992 + C151791 * C2467) * C62337 +
            C54996 * C62336 + C38366 * C62335 +
            (C31628 * C145 + C31646 + C31646 + C151791 * C161) * C62334) *
               C152054 * C151869 * C152172) *
              C152218)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C62334 +
            C37949 * C62335 + C37950 * C62336 + C40513 * C62337) *
               C152054 * C151869 * C1709 -
           (C34364 * C62337 + C32996 * C62336 + C32563 * C62335 +
            C31851 * C62334) *
               C152054 * C151869 * C1710 +
           (C31852 * C62334 + C32562 * C62335 + C32997 * C62336 +
            C34363 * C62337) *
               C152054 * C151869 * C1711 -
           (C34362 * C62337 + C32998 * C62336 + C32561 * C62335 +
            C31853 * C62334) *
               C152054 * C151869 * C152224) *
              C152158 +
          ((C31855 * C62334 + C32564 * C62335 + C34078 * C62336 +
            C40818 * C62337) *
               C152054 * C151869 * C1710 -
           (C41022 * C62337 + C37952 * C62336 + C37951 * C62335 +
            (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C62334) *
               C152054 * C151869 * C1709 -
           (C40817 * C62337 + C34077 * C62336 + C32565 * C62335 +
            C31856 * C62334) *
               C152054 * C151869 * C1711 +
           (C31857 * C62334 + C32566 * C62335 + C34076 * C62336 +
            (C31628 * C27086 + C34215 + C34215 + C151791 * C27090) * C62337) *
               C152054 * C151869 * C152224) *
              C151834)) /
            (p * q * std::sqrt(p + q));
    d2ee[221] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
             C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
             C6086 * C160) *
                C152188 +
            (C15243 + C15244 + C15245) * C152092) *
               C152054 * C152173 -
           ((C15246 + C15247 + C15248) * C152092 +
            (C15245 + C15244 + C15243) * C152188) *
               C152054 * C151956) *
              C1709 +
          (((C7455 + C7454 + C7453) * C152188 +
            (C8119 + C8120 + C8121) * C152092) *
               C152054 * C151956 -
           ((C7453 + C7454 + C7455) * C152092 +
            (C6436 + C6435 + C6434) * C152188) *
               C152054 * C152173) *
              C1710 +
          (((C6439 + C6438 + C6437) * C152188 +
            (C8122 + C8123 + C8124) * C152092) *
               C152054 * C152173 -
           ((C8125 + C8126 + C8127) * C152092 +
            (C8124 + C8123 + C8122) * C152188) *
               C152054 * C151956) *
              C1711 +
          (((C8868 + C8867 + C8866) * C152188 +
            (C6089 * C8064 + C8098 + C8098 + C6084 * C8070 + C6091 * C8065 +
             C8099 + C8099 + C6085 * C8071 + C6093 * C8066 + C8100 + C8100 +
             C6086 * C8072) *
                C152092) *
               C152054 * C151956 -
           ((C8866 + C8867 + C8868) * C152092 +
            (C7843 + C7842 + C7841) * C152188) *
               C152054 * C152173) *
              C152224) *
         C151823) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
              C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
              C6086 * C160) *
                 C152188 +
             (C15243 + C15244 + C15245) * C152092) *
                C152054 * C152173 -
            ((C15246 + C15247 + C15248) * C152092 +
             (C15245 + C15244 + C15243) * C152188) *
                C152054 * C151956) *
               C152172 +
           (((C7455 + C7454 + C7453) * C152188 +
             (C8119 + C8120 + C8121) * C152092) *
                C152054 * C151956 -
            ((C7453 + C7454 + C7455) * C152092 +
             (C6436 + C6435 + C6434) * C152188) *
                C152054 * C152173) *
               C151914) *
              C335 +
          ((((C15249 + C15250 + C15251) * C152188 +
             (C15252 + C15253 + C15254) * C152092) *
                C152054 * C151956 -
            ((C15251 + C15250 + C15249) * C152092 +
             (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
              C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
              C6084 * C159) *
                 C152188) *
                C152054 * C152173) *
               C152172 +
           (((C6440 + C6441 + C6442) * C152188 +
             (C7456 + C7457 + C7458) * C152092) *
                C152054 * C152173 -
            ((C9753 + C9754 + C9755) * C152092 +
             (C7458 + C7457 + C7456) * C152188) *
                C152054 * C151956) *
               C151914) *
              C336 +
          ((((C6089 * C144 + C6108 + C6108 + C6084 * C160 + C6091 * C145 +
              C6109 + C6109 + C6085 * C161 + C6093 * C146 + C6110 + C6110 +
              C6086 * C162) *
                 C152188 +
             (C15255 + C15256 + C15257) * C152092) *
                C152054 * C152173 -
            ((C15258 + C15259 + C15260) * C152092 +
             (C15257 + C15256 + C15255) * C152188) *
                C152054 * C151956) *
               C152172 +
           (((C7461 + C7460 + C7459) * C152188 +
             (C6089 * C1532 + C6703 + C6703 + C6084 * C1556 + C6091 * C1531 +
              C6704 + C6704 + C6085 * C1555 + C6093 * C2677 + C6705 + C6705 +
              C6086 * C2679) *
                 C152092) *
                C152054 * C151956 -
            ((C7459 + C7460 + C7461) * C152092 +
             (C6448 + C6447 + C6446) * C152188) *
                C152054 * C152173) *
               C151914) *
              C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152188 +
              C37949 * C152092) *
                 C23040 +
             (C37675 + C37676) * C23041 + C37693 * C23042) *
                C152173 -
            ((C38657 + C38658) * C23042 + (C38659 + C38660) * C23041 +
             (C37950 * C152092 + C37949 * C152188) * C23040) *
                C151956) *
               C152172 +
           (((C38660 + C38659) * C23040 + (C38658 + C38657) * C23041 +
             (C32561 * C152188 + C32998 * C152092) * C23042) *
                C151956 -
            ((C37679 + C37680) * C23042 + (C37678 + C37677) * C23041 +
             (C37676 + C37675) * C23040) *
                C152173) *
               C151914) *
              C335 +
          ((((C37951 * C152188 + C37952 * C152092) * C23040 +
             (C38661 + C38662) * C23041 + (C38663 + C38664) * C23042) *
                C151956 -
            (C37694 * C23042 + (C37682 + C37681) * C23041 +
             (C37951 * C152092 +
              (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152188) *
                 C23040) *
                C152173) *
               C152172 +
           (((C37681 + C37682) * C23040 + (C37683 + C37684) * C23041 +
             (C37685 + C37686) * C23042) *
                C152173 -
            ((C34076 * C152092 + C32566 * C152188) * C23042 +
             (C38664 + C38663) * C23041 + (C38662 + C38661) * C23040) *
                C151956) *
               C151914) *
              C336 +
          (((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C152188 +
              C37953 * C152092) *
                 C23040 +
             (C37687 + C37688) * C23041 + C37695 * C23042) *
                C152173 -
            ((C38665 + C38666) * C23042 + (C38667 + C38668) * C23041 +
             (C37956 * C152092 + C37953 * C152188) * C23040) *
                C151956) *
               C152172 +
           (((C38668 + C38667) * C23040 + (C38666 + C38665) * C23041 +
             (C32567 * C152188 +
              (C31628 * C8066 + C32044 + C32044 + C151791 * C8072) * C152092) *
                 C23042) *
                C151956 -
            ((C37691 + C37692) * C23042 + (C37690 + C37689) * C23041 +
             (C37688 + C37687) * C23040) *
                C152173) *
               C151914) *
              C152208)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152188 +
             C37949 * C152092) *
                C23040 +
            (C37675 + C37676) * C23041 + C37693 * C23042) *
               C152173 -
           (C39233 * C23042 + (C38659 + C38660) * C23041 +
            (C37950 * C152092 + C37949 * C152188) * C23040) *
               C151956) *
              C1709 +
          (((C38660 + C38659) * C23040 + (C38658 + C38657) * C23041 +
            C39927 * C23042) *
               C151956 -
           (C39009 * C23042 + (C37678 + C37677) * C23041 +
            (C37676 + C37675) * C23040) *
               C152173) *
              C1710 +
          ((C37693 * C23040 + (C37680 + C37679) * C23041 + C39014 * C23042) *
               C152173 -
           ((C39928 + C39929) * C23042 + (C39239 + C39238) * C23041 +
            C39233 * C23040) *
               C151956) *
              C1711 +
          ((C39927 * C23040 + (C39929 + C39928) * C23041 +
            (C33482 * C152188 +
             (C31628 * C32969 + C32985 + C32985 + C151791 * C32971) * C152092) *
                C23042) *
               C151956 -
           ((C39012 + C39013) * C23042 + (C39011 + C39010) * C23041 +
            C39009 * C23040) *
               C152173) *
              C152224) *
         C151823) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C62334 +
             C37949 * C62335 + C37950 * C62336 + C40513 * C62337) *
                C152054 * C152173 -
            (C40516 * C62337 + C40513 * C62336 + C37950 * C62335 +
             C37949 * C62334) *
                C152054 * C151956) *
               C152172 +
           ((C32563 * C62334 + C32996 * C62335 + C34364 * C62336 +
             C40515 * C62337) *
                C152054 * C151956 -
            (C34364 * C62337 + C32996 * C62336 + C32563 * C62335 +
             C31851 * C62334) *
                C152054 * C152173) *
               C151914) *
              C335 +
          (((C37951 * C62334 + C37952 * C62335 + C41022 * C62336 +
             C57627 * C62337) *
                C152054 * C151956 -
            (C41022 * C62337 + C37952 * C62336 + C37951 * C62335 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C62334) *
                C152054 * C152173) *
               C152172 +
           ((C31855 * C62334 + C32564 * C62335 + C34078 * C62336 +
             C40818 * C62337) *
                C152054 * C152173 -
            (C57425 * C62337 + C40818 * C62336 + C34078 * C62335 +
             C32564 * C62334) *
                C152054 * C151956) *
               C151914) *
              C336 +
          ((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C62334 +
             C37953 * C62335 + C37956 * C62336 + C54593 * C62337) *
                C152054 * C152173 -
            (C62637 * C62337 + C54593 * C62336 + C37956 * C62335 +
             C37953 * C62334) *
                C152054 * C151956) *
               C152172 +
           ((C32569 * C62334 + C37955 * C62335 + C54592 * C62336 +
             (C31628 * C9428 + C54587 + C54587 + C151791 * C9434) * C62337) *
                C152054 * C151956 -
            (C54592 * C62337 + C37955 * C62336 + C32569 * C62335 +
             C31859 * C62334) *
                C152054 * C152173) *
               C151914) *
              C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C62334 +
            C37949 * C62335 + C37950 * C62336 + C40513 * C62337) *
               C152054 * C152173 -
           (C40516 * C62337 + C40513 * C62336 + C37950 * C62335 +
            C37949 * C62334) *
               C152054 * C151956) *
              C1709 +
          ((C32563 * C62334 + C32996 * C62335 + C34364 * C62336 +
            C40515 * C62337) *
               C152054 * C151956 -
           (C34364 * C62337 + C32996 * C62336 + C32563 * C62335 +
            C31851 * C62334) *
               C152054 * C152173) *
              C1710 +
          ((C31852 * C62334 + C32562 * C62335 + C32997 * C62336 +
            C34363 * C62337) *
               C152054 * C152173 -
           (C40514 * C62337 + C34363 * C62336 + C32997 * C62335 +
            C32562 * C62334) *
               C152054 * C151956) *
              C1711 +
          ((C32561 * C62334 + C32998 * C62335 + C34362 * C62336 +
            (C31628 * C33857 + C33868 + C33868 + C151791 * C33859) * C62337) *
               C152054 * C151956 -
           (C34362 * C62337 + C32998 * C62336 + C32561 * C62335 +
            C31853 * C62334) *
               C152054 * C152173) *
              C152224) *
         C151823) /
            (p * q * std::sqrt(p + q));
    d2ee[222] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             (((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
                C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
                C6086 * C160) *
                   C152188 +
               (C6089 * C550 + C6675 + C6675 + C6084 * C574 + C6091 * C549 +
                C6674 + C6674 + C6085 * C573 + C6093 * C548 + C6673 + C6673 +
                C6086 * C572) *
                   C152092) *
                  C152054 * C151869 * C151851 * C129 -
              ((C6093 * C547 + C6684 + C6684 + C6086 * C571 + C6091 * C548 +
                C6683 + C6683 + C6085 * C572 + C6089 * C549 + C6682 + C6682 +
                C6084 * C573) *
                   C152092 +
               (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
                C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
                C6084 * C159) *
                   C152188) *
                  C152054 * C151869 * C151851 * C130 +
              ((C6089 * C144 + C6108 + C6108 + C6084 * C160 + C6091 * C145 +
                C6109 + C6109 + C6085 * C161 + C6093 * C146 + C6110 + C6110 +
                C6086 * C162) *
                   C152188 +
               (C6089 * C548 + C6699 + C6699 + C6084 * C572 + C6091 * C547 +
                C6698 + C6698 + C6085 * C571 + C6093 * C555 + C6697 + C6697 +
                C6086 * C579) *
                   C152092) *
                  C152054 * C151869 * C151851 * C131 -
              ((C6093 * C557 + C7114 + C7114 + C6086 * C581 + C6091 * C555 +
                C7113 + C7113 + C6085 * C579 + C6089 * C547 + C7112 + C7112 +
                C6084 * C571) *
                   C152092 +
               (C6093 * C147 + C6117 + C6117 + C6086 * C163 + C6091 * C146 +
                C6118 + C6118 + C6085 * C162 + C6089 * C145 + C6119 + C6119 +
                C6084 * C161) *
                   C152188) *
                  C152054 * C151869 * C151851 * C132 +
              ((C6089 * C146 + C6120 + C6120 + C6084 * C162 + C6091 * C147 +
                C6121 + C6121 + C6085 * C163 + C6093 * C148 + C6122 + C6122 +
                C6086 * C164) *
                   C152188 +
               (C6089 * C555 + C14729 + C14729 + C6084 * C579 + C6091 * C557 +
                C14730 + C14730 + C6085 * C581 + C6093 * C882 + C14731 +
                C14731 + C6086 * C884) *
                   C152092) *
                  C152054 * C151869 * C151851 * C133) +
         std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
                 C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
                 C6086 * C160) *
                    C152188 +
                (C6089 * C550 + C6675 + C6675 + C6084 * C574 + C6091 * C549 +
                 C6674 + C6674 + C6085 * C573 + C6093 * C548 + C6673 + C6673 +
                 C6086 * C572) *
                    C152092) *
                   C152054 * C151869 * C152258 -
               ((C7453 + C7454 + C7455) * C152092 +
                (C6436 + C6435 + C6434) * C152188) *
                   C152054 * C151869 * C152244 +
               ((C6439 + C6438 + C6437) * C152188 +
                (C8122 + C8123 + C8124) * C152092) *
                   C152054 * C151869 * C152214) *
                  C335 +
              (((C6440 + C6441 + C6442) * C152188 +
                (C7456 + C7457 + C7458) * C152092) *
                   C152054 * C151869 * C152244 -
               ((C6093 * C547 + C6684 + C6684 + C6086 * C571 + C6091 * C548 +
                 C6683 + C6683 + C6085 * C572 + C6089 * C549 + C6682 + C6682 +
                 C6084 * C573) *
                    C152092 +
                (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
                 C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
                 C6084 * C159) *
                    C152188) *
                   C152054 * C151869 * C152258 -
               ((C8645 + C8646 + C8647) * C152092 +
                (C6445 + C6444 + C6443) * C152188) *
                   C152054 * C151869 * C152214) *
                  C336 +
              (((C6089 * C144 + C6108 + C6108 + C6084 * C160 + C6091 * C145 +
                 C6109 + C6109 + C6085 * C161 + C6093 * C146 + C6110 + C6110 +
                 C6086 * C162) *
                    C152188 +
                (C6089 * C548 + C6699 + C6699 + C6084 * C572 + C6091 * C547 +
                 C6698 + C6698 + C6085 * C571 + C6093 * C555 + C6697 + C6697 +
                 C6086 * C579) *
                    C152092) *
                   C152054 * C151869 * C152258 -
               ((C7459 + C7460 + C7461) * C152092 +
                (C6448 + C6447 + C6446) * C152188) *
                   C152054 * C151869 * C152244 +
               ((C6451 + C6450 + C6449) * C152188 +
                (C6089 * C1536 + C7432 + C7432 + C6084 * C1560 + C6091 * C1535 +
                 C7433 + C7433 + C6085 * C1559 + C6093 * C1916 + C7434 + C7434 +
                 C6086 * C1918) *
                    C152092) *
                   C152054 * C151869 * C152214) *
                  C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
             C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
             C6086 * C160) *
                C152188 +
            (C15243 + C15244 + C15245) * C152092) *
               C152054 * C152259 -
           ((C15246 + C15247 + C15248) * C152092 +
            (C15245 + C15244 + C15243) * C152188) *
               C152054 * C152246 +
           ((C15248 + C15247 + C15246) * C152188 +
            (C6089 * C2454 + C9441 + C9441 + C6084 * C2470 + C6091 * C2453 +
             C9440 + C9440 + C6085 * C2469 + C6093 * C2452 + C9439 + C9439 +
             C6086 * C2468) *
                C152092) *
               C152054 * C152217) *
              C151851 * C335 +
          (((C15249 + C15250 + C15251) * C152188 +
            (C15252 + C15253 + C15254) * C152092) *
               C152054 * C152246 -
           ((C15251 + C15250 + C15249) * C152092 +
            (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
             C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
             C6084 * C159) *
                C152188) *
               C152054 * C152259 -
           ((C6093 * C2451 + C9952 + C9952 + C6086 * C2467 + C6091 * C2452 +
             C9951 + C9951 + C6085 * C2468 + C6089 * C2453 + C9950 + C9950 +
             C6084 * C2469) *
                C152092 +
            (C15254 + C15253 + C15252) * C152188) *
               C152054 * C152217) *
              C151851 * C336 +
          (((C6089 * C144 + C6108 + C6108 + C6084 * C160 + C6091 * C145 +
             C6109 + C6109 + C6085 * C161 + C6093 * C146 + C6110 + C6110 +
             C6086 * C162) *
                C152188 +
            (C15255 + C15256 + C15257) * C152092) *
               C152054 * C152259 -
           ((C15258 + C15259 + C15260) * C152092 +
            (C15257 + C15256 + C15255) * C152188) *
               C152054 * C152246 +
           ((C15260 + C15259 + C15258) * C152188 +
            (C6089 * C2452 + C15204 + C15204 + C6084 * C2468 + C6091 * C2451 +
             C15205 + C15205 + C6085 * C2467 + C6093 * C2818 + C15206 + C15206 +
             C6086 * C2820) *
                C152092) *
               C152054 * C152217) *
              C151851 * C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
             C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
             C6086 * C160) *
                C152188 +
            (C15243 + C15244 + C15245) * C152092) *
               C152054 * C151869 * C1259 -
           ((C7453 + C7454 + C7455) * C152092 +
            (C6436 + C6435 + C6434) * C152188) *
               C152054 * C151869 * C1260 +
           ((C6439 + C6438 + C6437) * C152188 +
            (C8122 + C8123 + C8124) * C152092) *
               C152054 * C151869 * C152214) *
              C152255 +
          (((C6440 + C6441 + C6442) * C152188 +
            (C7456 + C7457 + C7458) * C152092) *
               C152054 * C151869 * C1260 -
           ((C15251 + C15250 + C15249) * C152092 +
            (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
             C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
             C6084 * C159) *
                C152188) *
               C152054 * C151869 * C1259 -
           ((C8645 + C8646 + C8647) * C152092 +
            (C6445 + C6444 + C6443) * C152188) *
               C152054 * C151869 * C152214) *
              C152240 +
          (((C6089 * C144 + C6108 + C6108 + C6084 * C160 + C6091 * C145 +
             C6109 + C6109 + C6085 * C161 + C6093 * C146 + C6110 + C6110 +
             C6086 * C162) *
                C152188 +
            (C15255 + C15256 + C15257) * C152092) *
               C152054 * C151869 * C1259 -
           ((C7459 + C7460 + C7461) * C152092 +
            (C6448 + C6447 + C6446) * C152188) *
               C152054 * C151869 * C1260 +
           ((C6451 + C6450 + C6449) * C152188 +
            (C6089 * C1536 + C7432 + C7432 + C6084 * C1560 + C6091 * C1535 +
             C7433 + C7433 + C6085 * C1559 + C6093 * C1916 + C7434 + C7434 +
             C6086 * C1918) *
                C152092) *
               C152054 * C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 + C6097 +
            C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
            C6086 * C160) *
               C152188 +
           (C15243 + C15244 + C15245) * C152092) *
              C152054 * C151869 * C1347 -
          ((C7453 + C7454 + C7455) * C152092 +
           (C6436 + C6435 + C6434) * C152188) *
              C152054 * C151869 * C1348 +
          ((C6439 + C6438 + C6437) * C152188 +
           (C8122 + C8123 + C8124) * C152092) *
              C152054 * C151869 * C1349 -
          ((C8866 + C8867 + C8868) * C152092 +
           (C7843 + C7842 + C7841) * C152188) *
              C152054 * C151869 * C1350 +
          ((C7846 + C7845 + C7844) * C152188 +
           (C6089 * C8841 + C8857 + C8857 + C6084 * C8847 + C6091 * C8842 +
            C8858 + C8858 + C6085 * C8848 + C6093 * C8843 + C8859 + C8859 +
            C6086 * C8849) *
               C152092) *
              C152054 * C151869 * C1351) *
         C151823) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
             C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
             C6086 * C160) *
                C152188 +
            (C15243 + C15244 + C15245) * C152092) *
               C152054 * C152259 -
           ((C15246 + C15247 + C15248) * C152092 +
            (C15245 + C15244 + C15243) * C152188) *
               C152054 * C152246 +
           ((C15248 + C15247 + C15246) * C152188 +
            (C6089 * C2454 + C9441 + C9441 + C6084 * C2470 + C6091 * C2453 +
             C9440 + C9440 + C6085 * C2469 + C6093 * C2452 + C9439 + C9439 +
             C6086 * C2468) *
                C152092) *
               C152054 * C152217) *
              C1259 +
          (((C7455 + C7454 + C7453) * C152188 +
            (C8119 + C8120 + C8121) * C152092) *
               C152054 * C152246 -
           ((C7453 + C7454 + C7455) * C152092 +
            (C6436 + C6435 + C6434) * C152188) *
               C152054 * C152259 -
           ((C10174 + C10175 + C10176) * C152092 +
            (C8121 + C8120 + C8119) * C152188) *
               C152054 * C152217) *
              C1260 +
          (((C6439 + C6438 + C6437) * C152188 +
            (C8122 + C8123 + C8124) * C152092) *
               C152054 * C152259 -
           ((C8125 + C8126 + C8127) * C152092 +
            (C8124 + C8123 + C8122) * C152188) *
               C152054 * C152246 +
           ((C8127 + C8126 + C8125) * C152188 +
            (C6089 * C10149 + C10165 + C10165 + C6084 * C10155 +
             C6091 * C10150 + C10166 + C10166 + C6085 * C10156 +
             C6093 * C10151 + C10167 + C10167 + C6086 * C10157) *
                C152092) *
               C152054 * C152217) *
              C152214) *
         C151823) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152188 +
            (C31628 * C550 + C32024 + C32024 + C151791 * C574) * C152092) *
               C23040 +
           (C31851 * C152188 + C32563 * C152092) * C23041 +
           (C31852 * C152188 + C32562 * C152092) * C23042) *
              C151869 * C151851 * C129 -
          ((C32565 * C152092 + C31856 * C152188) * C23042 +
           (C32564 * C152092 + C31855 * C152188) * C23041 +
           ((C31628 * C549 + C32029 + C32029 + C151791 * C573) * C152092 +
            (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152188) *
               C23040) *
              C151869 * C151851 * C130 +
          (((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C152188 +
            (C31628 * C548 + C32040 + C32040 + C151791 * C572) * C152092) *
               C23040 +
           (C31859 * C152188 + C32569 * C152092) * C23041 +
           (C31860 * C152188 + C32568 * C152092) * C23042) *
              C151869 * C151851 * C131 -
          (((C31628 * C1535 + C32326 + C32326 + C151791 * C1559) * C152092 +
            C32189 * C152188) *
               C23042 +
           ((C31628 * C1086 + C32325 + C32325 + C151791 * C1098) * C152092 +
            C32188 * C152188) *
               C23041 +
           ((C31628 * C547 + C32324 + C32324 + C151791 * C571) * C152092 +
            (C31628 * C145 + C31646 + C31646 + C151791 * C161) * C152188) *
               C23040) *
              C151869 * C151851 * C132 +
          (((C31628 * C146 + C31647 + C31647 + C151791 * C162) * C152188 +
            (C31628 * C555 + C37454 + C37454 + C151791 * C579) * C152092) *
               C23040 +
           ((C31628 * C346 + C31648 + C31648 + C151791 * C370) * C152188 +
            (C31628 * C1087 + C37455 + C37455 + C151791 * C1099) * C152092) *
               C23041 +
           ((C31628 * C347 + C31649 + C31649 + C151791 * C371) * C152188 +
            (C31628 * C1916 + C37456 + C37456 + C151791 * C1918) * C152092) *
               C23042) *
              C151869 * C151851 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152188 +
             (C31628 * C550 + C32024 + C32024 + C151791 * C574) * C152092) *
                C23040 +
            (C37675 + C37676) * C23041 + C37693 * C23042) *
               C151869 * C152258 -
           ((C37679 + C37680) * C23042 + (C37678 + C37677) * C23041 +
            (C37676 + C37675) * C23040) *
               C151869 * C152244 +
           (C37693 * C23040 + (C37680 + C37679) * C23041 +
            (C31854 * C152188 + C32999 * C152092) * C23042) *
               C151869 * C152214) *
              C335 +
          (((C37681 + C37682) * C23040 + (C37683 + C37684) * C23041 +
            (C37685 + C37686) * C23042) *
               C151869 * C152244 -
           (C37694 * C23042 + (C37682 + C37681) * C23041 +
            ((C31628 * C549 + C32029 + C32029 + C151791 * C573) * C152092 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152188) *
                C23040) *
               C151869 * C152258 -
           ((C33342 * C152092 + C31858 * C152188) * C23042 +
            (C37686 + C37685) * C23041 + C37694 * C23040) *
               C151869 * C152214) *
              C336 +
          ((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C152188 +
             (C31628 * C548 + C32040 + C32040 + C151791 * C572) * C152092) *
                C23040 +
            (C37687 + C37688) * C23041 + C37695 * C23042) *
               C151869 * C152258 -
           ((C37691 + C37692) * C23042 + (C37690 + C37689) * C23041 +
            (C37688 + C37687) * C23040) *
               C151869 * C152244 +
           (C37695 * C23040 + (C37692 + C37691) * C23041 +
            (C31862 * C152188 +
             (C31628 * C8843 + C32542 + C32542 + C151791 * C8849) * C152092) *
                C23042) *
               C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152188 +
             C37949 * C152092) *
                C23040 +
            (C37675 + C37676) * C23041 + C37693 * C23042) *
               C152259 -
           ((C32997 * C152092 + C32562 * C152188) * C23042 +
            (C32996 * C152092 + C32563 * C152188) * C23041 +
            (C37950 * C152092 + C37949 * C152188) * C23040) *
               C152246 +
           ((C37950 * C152188 +
             (C31628 * C2454 + C33864 + C33864 + C151791 * C2470) * C152092) *
                C23040 +
            (C32996 * C152188 + C34364 * C152092) * C23041 +
            (C32997 * C152188 + C34363 * C152092) * C23042) *
               C152217) *
              C151851 * C335 +
          (((C37951 * C152188 + C37952 * C152092) * C23040 +
            (C32564 * C152188 + C34078 * C152092) * C23041 +
            (C32565 * C152188 + C34077 * C152092) * C23042) *
               C152246 -
           (C37694 * C23042 + (C37682 + C37681) * C23041 +
            (C37951 * C152092 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152188) *
                C23040) *
               C152259 -
           (((C31628 * C10150 + C34214 + C34214 + C151791 * C10156) * C152092 +
             C34077 * C152188) *
                C23042 +
            ((C31628 * C2956 + C34213 + C34213 + C151791 * C2964) * C152092 +
             C34078 * C152188) *
                C23041 +
            ((C31628 * C2453 + C34212 + C34212 + C151791 * C2469) * C152092 +
             C37952 * C152188) *
                C23040) *
               C152217) *
              C151851 * C336 +
          ((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C152188 +
             C37953 * C152092) *
                C23040 +
            (C37687 + C37688) * C23041 + C37695 * C23042) *
               C152259 -
           ((C37954 * C152092 + C32568 * C152188) * C23042 +
            (C37955 * C152092 + C32569 * C152188) * C23041 +
            (C37956 * C152092 + C37953 * C152188) * C23040) *
               C152246 +
           ((C37956 * C152188 +
             (C31628 * C2452 + C37930 + C37930 + C151791 * C2468) * C152092) *
                C23040 +
            (C37955 * C152188 +
             (C31628 * C2957 + C37931 + C37931 + C151791 * C2965) * C152092) *
                C23041 +
            (C37954 * C152188 +
             (C31628 * C10151 + C37932 + C37932 + C151791 * C10157) * C152092) *
                C23042) *
               C152217) *
              C151851 * C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152188 +
             C37949 * C152092) *
                C23040 +
            (C37675 + C37676) * C23041 + C37693 * C23042) *
               C151869 * C1259 -
           ((C37679 + C37680) * C23042 + (C37678 + C37677) * C23041 +
            (C37676 + C37675) * C23040) *
               C151869 * C1260 +
           (C37693 * C23040 + (C37680 + C37679) * C23041 +
            (C31854 * C152188 + C32999 * C152092) * C23042) *
               C151869 * C152214) *
              C152255 +
          (((C37681 + C37682) * C23040 + (C37683 + C37684) * C23041 +
            (C37685 + C37686) * C23042) *
               C151869 * C1260 -
           (C37694 * C23042 + (C37682 + C37681) * C23041 +
            (C37951 * C152092 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152188) *
                C23040) *
               C151869 * C1259 -
           ((C33342 * C152092 + C31858 * C152188) * C23042 +
            (C37686 + C37685) * C23041 + C37694 * C23040) *
               C151869 * C152214) *
              C152240 +
          ((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C152188 +
             C37953 * C152092) *
                C23040 +
            (C37687 + C37688) * C23041 + C37695 * C23042) *
               C151869 * C1259 -
           ((C37691 + C37692) * C23042 + (C37690 + C37689) * C23041 +
            (C37688 + C37687) * C23040) *
               C151869 * C1260 +
           (C37695 * C23040 + (C37692 + C37691) * C23041 +
            (C31862 * C152188 +
             (C31628 * C8843 + C32542 + C32542 + C151791 * C8849) * C152092) *
                C23042) *
               C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152188 +
            C37949 * C152092) *
               C23040 +
           (C37675 + C37676) * C23041 + C37693 * C23042) *
              C151869 * C1347 -
          (C39009 * C23042 + (C37678 + C37677) * C23041 +
           (C37676 + C37675) * C23040) *
              C151869 * C1348 +
          (C37693 * C23040 + (C37680 + C37679) * C23041 + C39014 * C23042) *
              C151869 * C1349 -
          ((C39012 + C39013) * C23042 + (C39011 + C39010) * C23041 +
           C39009 * C23040) *
              C151869 * C1350 +
          (C39014 * C23040 + (C39013 + C39012) * C23041 +
           (C32821 * C152188 +
            (C31628 * C33473 + C33479 + C33479 + C151791 * C33475) * C152092) *
               C23042) *
              C151869 * C1351) *
         C151823) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152188 +
             C37949 * C152092) *
                C23040 +
            (C37675 + C37676) * C23041 + C37693 * C23042) *
               C152259 -
           (C39233 * C23042 + (C38659 + C38660) * C23041 +
            (C37950 * C152092 + C37949 * C152188) * C23040) *
               C152246 +
           ((C37950 * C152188 +
             (C31628 * C2454 + C33864 + C33864 + C151791 * C2470) * C152092) *
                C23040 +
            (C39234 + C39235) * C23041 + C39242 * C23042) *
               C152217) *
              C1259 +
          (((C38660 + C38659) * C23040 + (C38658 + C38657) * C23041 +
            (C39238 + C39239) * C23042) *
               C152246 -
           (C39009 * C23042 + (C37678 + C37677) * C23041 +
            (C37676 + C37675) * C23040) *
               C152259 -
           ((C39240 + C39241) * C23042 + (C39237 + C39236) * C23041 +
            (C39235 + C39234) * C23040) *
               C152217) *
              C1260 +
          ((C37693 * C23040 + (C37680 + C37679) * C23041 + C39014 * C23042) *
               C152259 -
           ((C33000 * C152092 + C32999 * C152188) * C23042 +
            (C39239 + C39238) * C23041 + C39233 * C23040) *
               C152246 +
           (C39242 * C23040 + (C39241 + C39240) * C23041 +
            (C33000 * C152188 +
             (C31628 * C34345 + C34355 + C34355 + C151791 * C34347) * C152092) *
                C23042) *
               C152217) *
              C152214) *
         C151823) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C62334 +
           C37949 * C62335 + C37950 * C62336 + C40513 * C62337) *
              C152054 * C151869 * C151851 * C129 -
          (C41022 * C62337 + C37952 * C62336 + C37951 * C62335 +
           (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C62334) *
              C152054 * C151869 * C151851 * C130 +
          ((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C62334 +
           C37953 * C62335 + C37956 * C62336 + C54593 * C62337) *
              C152054 * C151869 * C151851 * C131 -
          ((C31628 * C2451 + C54992 + C54992 + C151791 * C2467) * C62337 +
           C54996 * C62336 + C38366 * C62335 +
           (C31628 * C145 + C31646 + C31646 + C151791 * C161) * C62334) *
              C152054 * C151869 * C151851 * C132 +
          ((C31628 * C146 + C31647 + C31647 + C151791 * C162) * C62334 +
           (C31628 * C555 + C37454 + C37454 + C151791 * C579) * C62335 +
           (C31628 * C556 + C54126 + C54126 + C151791 * C580) * C62336 +
           (C31628 * C2818 + C62339 + C62339 + C151791 * C2820) * C62337) *
              C152054 * C151869 * C151851 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C62334 +
            C37949 * C62335 + C37950 * C62336 + C40513 * C62337) *
               C152054 * C151869 * C152258 -
           (C34364 * C62337 + C32996 * C62336 + C32563 * C62335 +
            C31851 * C62334) *
               C152054 * C151869 * C152244 +
           (C31852 * C62334 + C32562 * C62335 + C32997 * C62336 +
            C34363 * C62337) *
               C152054 * C151869 * C152214) *
              C335 +
          ((C31855 * C62334 + C32564 * C62335 + C34078 * C62336 +
            C40818 * C62337) *
               C152054 * C151869 * C152244 -
           (C41022 * C62337 + C37952 * C62336 + C37951 * C62335 +
            (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C62334) *
               C152054 * C151869 * C152258 -
           (C40817 * C62337 + C34077 * C62336 + C32565 * C62335 +
            C31856 * C62334) *
               C152054 * C151869 * C152214) *
              C336 +
          (((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C62334 +
            C37953 * C62335 + C37956 * C62336 + C54593 * C62337) *
               C152054 * C151869 * C152258 -
           (C54592 * C62337 + C37955 * C62336 + C32569 * C62335 +
            C31859 * C62334) *
               C152054 * C151869 * C152244 +
           (C31860 * C62334 + C32568 * C62335 + C37954 * C62336 +
            (C31628 * C10151 + C37932 + C37932 + C151791 * C10157) * C62337) *
               C152054 * C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C62334 +
            C37949 * C62335 + C37950 * C62336 + C40513 * C62337) *
               C152054 * C152259 -
           (C40516 * C62337 + C40513 * C62336 + C37950 * C62335 +
            C37949 * C62334) *
               C152054 * C152246 +
           (C37950 * C62334 + C40513 * C62335 + C40516 * C62336 +
            C57128 * C62337) *
               C152054 * C152217) *
              C151851 * C335 +
          ((C37951 * C62334 + C37952 * C62335 + C41022 * C62336 +
            C57627 * C62337) *
               C152054 * C152246 -
           (C41022 * C62337 + C37952 * C62336 + C37951 * C62335 +
            (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C62334) *
               C152054 * C152259 -
           ((C31628 * C17751 + C57623 + C57623 + C151791 * C17757) * C62337 +
            C57627 * C62336 + C41022 * C62335 + C37952 * C62334) *
               C152054 * C152217) *
              C151851 * C336 +
          (((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C62334 +
            C37953 * C62335 + C37956 * C62336 + C54593 * C62337) *
               C152054 * C152259 -
           (C62637 * C62337 + C54593 * C62336 + C37956 * C62335 +
            C37953 * C62334) *
               C152054 * C152246 +
           (C37956 * C62334 + C54593 * C62335 + C62637 * C62336 +
            (C31628 * C17752 + C62634 + C62634 + C151791 * C17758) * C62337) *
               C152054 * C152217) *
              C151851 * C152208)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C62334 +
            C37949 * C62335 + C37950 * C62336 + C40513 * C62337) *
               C152054 * C151869 * C1259 -
           (C34364 * C62337 + C32996 * C62336 + C32563 * C62335 +
            C31851 * C62334) *
               C152054 * C151869 * C1260 +
           (C31852 * C62334 + C32562 * C62335 + C32997 * C62336 +
            C34363 * C62337) *
               C152054 * C151869 * C152214) *
              C152255 +
          ((C31855 * C62334 + C32564 * C62335 + C34078 * C62336 +
            C40818 * C62337) *
               C152054 * C151869 * C1260 -
           (C41022 * C62337 + C37952 * C62336 + C37951 * C62335 +
            (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C62334) *
               C152054 * C151869 * C1259 -
           (C40817 * C62337 + C34077 * C62336 + C32565 * C62335 +
            C31856 * C62334) *
               C152054 * C151869 * C152214) *
              C152240 +
          (((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C62334 +
            C37953 * C62335 + C37956 * C62336 + C54593 * C62337) *
               C152054 * C151869 * C1259 -
           (C54592 * C62337 + C37955 * C62336 + C32569 * C62335 +
            C31859 * C62334) *
               C152054 * C151869 * C1260 +
           (C31860 * C62334 + C32568 * C62335 + C37954 * C62336 +
            (C31628 * C10151 + C37932 + C37932 + C151791 * C10157) * C62337) *
               C152054 * C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C62334 +
           C37949 * C62335 + C37950 * C62336 + C40513 * C62337) *
              C152054 * C151869 * C1347 -
          (C34364 * C62337 + C32996 * C62336 + C32563 * C62335 +
           C31851 * C62334) *
              C152054 * C151869 * C1348 +
          (C31852 * C62334 + C32562 * C62335 + C32997 * C62336 +
           C34363 * C62337) *
              C152054 * C151869 * C1349 -
          (C34362 * C62337 + C32998 * C62336 + C32561 * C62335 +
           C31853 * C62334) *
              C152054 * C151869 * C1350 +
          (C31854 * C62334 + C32999 * C62335 + C33000 * C62336 +
           (C31628 * C34345 + C34355 + C34355 + C151791 * C34347) * C62337) *
              C152054 * C151869 * C1351) *
         C151823) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C62334 +
            C37949 * C62335 + C37950 * C62336 + C40513 * C62337) *
               C152054 * C152259 -
           (C40516 * C62337 + C40513 * C62336 + C37950 * C62335 +
            C37949 * C62334) *
               C152054 * C152246 +
           (C37950 * C62334 + C40513 * C62335 + C40516 * C62336 +
            C57128 * C62337) *
               C152054 * C152217) *
              C1259 +
          ((C32563 * C62334 + C32996 * C62335 + C34364 * C62336 +
            C40515 * C62337) *
               C152054 * C152246 -
           (C34364 * C62337 + C32996 * C62336 + C32563 * C62335 +
            C31851 * C62334) *
               C152054 * C152259 -
           (C57127 * C62337 + C40515 * C62336 + C34364 * C62335 +
            C32996 * C62334) *
               C152054 * C152217) *
              C1260 +
          ((C31852 * C62334 + C32562 * C62335 + C32997 * C62336 +
            C34363 * C62337) *
               C152054 * C152259 -
           (C40514 * C62337 + C34363 * C62336 + C32997 * C62335 +
            C32562 * C62334) *
               C152054 * C152246 +
           (C32997 * C62334 + C34363 * C62335 + C40514 * C62336 +
            (C31628 * C40488 + C40504 + C40504 + C151791 * C40492) * C62337) *
               C152054 * C152217) *
              C152214) *
         C151823) /
            (p * q * std::sqrt(p + q));
    d2ee[223] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
              C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
              C6086 * C160) *
                 C152188 +
             (C15243 + C15244 + C15245) * C152092) *
                C152054 * C152173 -
            ((C15246 + C15247 + C15248) * C152092 +
             (C15245 + C15244 + C15243) * C152188) *
                C152054 * C151956) *
               C1259 +
           (((C7455 + C7454 + C7453) * C152188 +
             (C8119 + C8120 + C8121) * C152092) *
                C152054 * C151956 -
            ((C7453 + C7454 + C7455) * C152092 +
             (C6436 + C6435 + C6434) * C152188) *
                C152054 * C152173) *
               C1260 +
           (((C6439 + C6438 + C6437) * C152188 +
             (C8122 + C8123 + C8124) * C152092) *
                C152054 * C152173 -
            ((C8125 + C8126 + C8127) * C152092 +
             (C8124 + C8123 + C8122) * C152188) *
                C152054 * C151956) *
               C152214) *
              C152158 +
          ((((C15249 + C15250 + C15251) * C152188 +
             (C15252 + C15253 + C15254) * C152092) *
                C152054 * C151956 -
            ((C15251 + C15250 + C15249) * C152092 +
             (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
              C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
              C6084 * C159) *
                 C152188) *
                C152054 * C152173) *
               C1259 +
           (((C6440 + C6441 + C6442) * C152188 +
             (C7456 + C7457 + C7458) * C152092) *
                C152054 * C152173 -
            ((C9753 + C9754 + C9755) * C152092 +
             (C7458 + C7457 + C7456) * C152188) *
                C152054 * C151956) *
               C1260 +
           (((C8647 + C8646 + C8645) * C152188 +
             (C6089 * C1540 + C9744 + C9744 + C6084 * C1564 + C6091 * C1541 +
              C9745 + C9745 + C6085 * C1565 + C6093 * C1542 + C9746 + C9746 +
              C6086 * C1566) *
                 C152092) *
                C152054 * C151956 -
            ((C8645 + C8646 + C8647) * C152092 +
             (C6445 + C6444 + C6443) * C152188) *
                C152054 * C152173) *
               C152214) *
              C151834)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
             C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
             C6086 * C160) *
                C152188 +
            (C15243 + C15244 + C15245) * C152092) *
               C152054 * C152173 -
           ((C15246 + C15247 + C15248) * C152092 +
            (C15245 + C15244 + C15243) * C152188) *
               C152054 * C151956) *
              C151851 * C739 +
          (((C15249 + C15250 + C15251) * C152188 +
            (C15252 + C15253 + C15254) * C152092) *
               C152054 * C151956 -
           ((C15251 + C15250 + C15249) * C152092 +
            (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
             C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
             C6084 * C159) *
                C152188) *
               C152054 * C152173) *
              C151851 * C740 +
          (((C6089 * C144 + C6108 + C6108 + C6084 * C160 + C6091 * C145 +
             C6109 + C6109 + C6085 * C161 + C6093 * C146 + C6110 + C6110 +
             C6086 * C162) *
                C152188 +
            (C15255 + C15256 + C15257) * C152092) *
               C152054 * C152173 -
           ((C15258 + C15259 + C15260) * C152092 +
            (C15257 + C15256 + C15255) * C152188) *
               C152054 * C151956) *
              C151851 * C741 +
          (((C15664 + C15665 + C15666) * C152188 +
            (C6089 * C554 + C15655 + C15655 + C6084 * C578 + C6091 * C556 +
             C15656 + C15656 + C6085 * C580 + C6093 * C558 + C15657 + C15657 +
             C6086 * C582) *
                C152092) *
               C152054 * C151956 -
           ((C15666 + C15665 + C15664) * C152092 +
            (C6093 * C147 + C6117 + C6117 + C6086 * C163 + C6091 * C146 +
             C6118 + C6118 + C6085 * C162 + C6089 * C145 + C6119 + C6119 +
             C6084 * C161) *
                C152188) *
               C152054 * C152173) *
              C151851 * C152218)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152188 +
             C37949 * C152092) *
                C23040 +
            (C37675 + C37676) * C23041 + C37693 * C23042) *
               C152173 -
           ((C32997 * C152092 + C32562 * C152188) * C23042 +
            (C32996 * C152092 + C32563 * C152188) * C23041 +
            (C37950 * C152092 + C37949 * C152188) * C23040) *
               C151956) *
              C151851 * C739 +
          (((C37951 * C152188 + C37952 * C152092) * C23040 +
            (C32564 * C152188 + C34078 * C152092) * C23041 +
            (C32565 * C152188 + C34077 * C152092) * C23042) *
               C151956 -
           (C37694 * C23042 + (C37682 + C37681) * C23041 +
            (C37951 * C152092 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152188) *
                C23040) *
               C152173) *
              C151851 * C740 +
          ((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C152188 +
             C37953 * C152092) *
                C23040 +
            (C37687 + C37688) * C23041 + C37695 * C23042) *
               C152173 -
           ((C37954 * C152092 + C32568 * C152188) * C23042 +
            (C37955 * C152092 + C32569 * C152188) * C23041 +
            (C37956 * C152092 + C37953 * C152188) * C23040) *
               C151956) *
              C151851 * C741 +
          (((C38366 * C152188 +
             (C31628 * C554 + C38361 + C38361 + C151791 * C578) * C152092) *
                C23040 +
            (C38161 * C152188 +
             (C31628 * C1531 + C38362 + C38362 + C151791 * C1555) * C152092) *
                C23041 +
            (C38162 * C152188 +
             (C31628 * C1542 + C38363 + C38363 + C151791 * C1566) * C152092) *
                C23042) *
               C151956 -
           ((C38164 + C38154) * C23042 + (C38163 + C38151) * C23041 +
            (C38366 * C152092 +
             (C31628 * C145 + C31646 + C31646 + C151791 * C161) * C152188) *
                C23040) *
               C152173) *
              C151851 * C152218)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152188 +
              C37949 * C152092) *
                 C23040 +
             (C37675 + C37676) * C23041 + C37693 * C23042) *
                C152173 -
            (C39233 * C23042 + (C38659 + C38660) * C23041 +
             (C37950 * C152092 + C37949 * C152188) * C23040) *
                C151956) *
               C1259 +
           (((C38660 + C38659) * C23040 + (C38658 + C38657) * C23041 +
             (C39238 + C39239) * C23042) *
                C151956 -
            (C39009 * C23042 + (C37678 + C37677) * C23041 +
             (C37676 + C37675) * C23040) *
                C152173) *
               C1260 +
           ((C37693 * C23040 + (C37680 + C37679) * C23041 + C39014 * C23042) *
                C152173 -
            ((C33000 * C152092 + C32999 * C152188) * C23042 +
             (C39239 + C39238) * C23041 + C39233 * C23040) *
                C151956) *
               C152214) *
              C152158 +
          ((((C37951 * C152188 + C37952 * C152092) * C23040 +
             (C38661 + C38662) * C23041 + C39730 * C23042) *
                C151956 -
            (C37694 * C23042 + (C37682 + C37681) * C23041 +
             (C37951 * C152092 +
              (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152188) *
                 C23040) *
                C152173) *
               C1259 +
           (((C37681 + C37682) * C23040 + (C37683 + C37684) * C23041 +
             C39437 * C23042) *
                C152173 -
            ((C39731 + C39732) * C23042 + (C38664 + C38663) * C23041 +
             (C38662 + C38661) * C23040) *
                C151956) *
               C1260 +
           ((C39730 * C23040 + (C39732 + C39731) * C23041 +
             (C33342 * C152188 +
              (C31628 * C25022 + C34069 + C34069 + C151791 * C25026) *
                  C152092) *
                 C23042) *
                C151956 -
            ((C39438 + C39439) * C23042 + (C37686 + C37685) * C23041 +
             C37694 * C23040) *
                C152173) *
               C152214) *
              C151834)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C62334 +
            C37949 * C62335 + C37950 * C62336 + C40513 * C62337) *
               C152054 * C152173 -
           (C40516 * C62337 + C40513 * C62336 + C37950 * C62335 +
            C37949 * C62334) *
               C152054 * C151956) *
              C151851 * C739 +
          ((C37951 * C62334 + C37952 * C62335 + C41022 * C62336 +
            C57627 * C62337) *
               C152054 * C151956 -
           (C41022 * C62337 + C37952 * C62336 + C37951 * C62335 +
            (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C62334) *
               C152054 * C152173) *
              C151851 * C740 +
          (((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C62334 +
            C37953 * C62335 + C37956 * C62336 + C54593 * C62337) *
               C152054 * C152173 -
           (C62637 * C62337 + C54593 * C62336 + C37956 * C62335 +
            C37953 * C62334) *
               C152054 * C151956) *
              C151851 * C741 +
          ((C38366 * C62334 + C54996 * C62335 + C62903 * C62336 +
            (C31628 * C2458 + C62900 + C62900 + C151791 * C2474) * C62337) *
               C152054 * C151956 -
           (C62903 * C62337 + C54996 * C62336 + C38366 * C62335 +
            (C31628 * C145 + C31646 + C31646 + C151791 * C161) * C62334) *
               C152054 * C152173) *
              C151851 * C152218)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C62334 +
             C37949 * C62335 + C37950 * C62336 + C40513 * C62337) *
                C152054 * C152173 -
            (C40516 * C62337 + C40513 * C62336 + C37950 * C62335 +
             C37949 * C62334) *
                C152054 * C151956) *
               C1259 +
           ((C32563 * C62334 + C32996 * C62335 + C34364 * C62336 +
             C40515 * C62337) *
                C152054 * C151956 -
            (C34364 * C62337 + C32996 * C62336 + C32563 * C62335 +
             C31851 * C62334) *
                C152054 * C152173) *
               C1260 +
           ((C31852 * C62334 + C32562 * C62335 + C32997 * C62336 +
             C34363 * C62337) *
                C152054 * C152173 -
            (C40514 * C62337 + C34363 * C62336 + C32997 * C62335 +
             C32562 * C62334) *
                C152054 * C151956) *
               C152214) *
              C152158 +
          (((C37951 * C62334 + C37952 * C62335 + C41022 * C62336 +
             C57627 * C62337) *
                C152054 * C151956 -
            (C41022 * C62337 + C37952 * C62336 + C37951 * C62335 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C62334) *
                C152054 * C152173) *
               C1259 +
           ((C31855 * C62334 + C32564 * C62335 + C34078 * C62336 +
             C40818 * C62337) *
                C152054 * C152173 -
            (C57425 * C62337 + C40818 * C62336 + C34078 * C62335 +
             C32564 * C62334) *
                C152054 * C151956) *
               C1260 +
           ((C32565 * C62334 + C34077 * C62335 + C40817 * C62336 +
             (C31628 * C26362 + C41019 + C41019 + C151791 * C26366) * C62337) *
                C152054 * C151956 -
            (C40817 * C62337 + C34077 * C62336 + C32565 * C62335 +
             C31856 * C62334) *
                C152054 * C152173) *
               C152214) *
              C151834)) /
            (p * q * std::sqrt(p + q));
    d2ee[224] +=
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
             C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
             C6086 * C160) *
                C152188 +
            (C6089 * C550 + C6675 + C6675 + C6084 * C574 + C6091 * C549 +
             C6674 + C6674 + C6085 * C573 + C6093 * C548 + C6673 + C6673 +
             C6086 * C572) *
                C152092) *
               C152054 * C151869 * C152258 -
           ((C7453 + C7454 + C7455) * C152092 +
            (C6436 + C6435 + C6434) * C152188) *
               C152054 * C151869 * C152244 +
           ((C6439 + C6438 + C6437) * C152188 +
            (C8122 + C8123 + C8124) * C152092) *
               C152054 * C151869 * C152214) *
              C335 +
          (((C6440 + C6441 + C6442) * C152188 +
            (C7456 + C7457 + C7458) * C152092) *
               C152054 * C151869 * C152244 -
           ((C6093 * C547 + C6684 + C6684 + C6086 * C571 + C6091 * C548 +
             C6683 + C6683 + C6085 * C572 + C6089 * C549 + C6682 + C6682 +
             C6084 * C573) *
                C152092 +
            (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
             C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
             C6084 * C159) *
                C152188) *
               C152054 * C151869 * C152258 -
           ((C8645 + C8646 + C8647) * C152092 +
            (C6445 + C6444 + C6443) * C152188) *
               C152054 * C151869 * C152214) *
              C336 +
          (((C6089 * C144 + C6108 + C6108 + C6084 * C160 + C6091 * C145 +
             C6109 + C6109 + C6085 * C161 + C6093 * C146 + C6110 + C6110 +
             C6086 * C162) *
                C152188 +
            (C6089 * C548 + C6699 + C6699 + C6084 * C572 + C6091 * C547 +
             C6698 + C6698 + C6085 * C571 + C6093 * C555 + C6697 + C6697 +
             C6086 * C579) *
                C152092) *
               C152054 * C151869 * C152258 -
           ((C7459 + C7460 + C7461) * C152092 +
            (C6448 + C6447 + C6446) * C152188) *
               C152054 * C151869 * C152244 +
           ((C6451 + C6450 + C6449) * C152188 +
            (C6089 * C1536 + C7432 + C7432 + C6084 * C1560 + C6091 * C1535 +
             C7433 + C7433 + C6085 * C1559 + C6093 * C1916 + C7434 + C7434 +
             C6086 * C1918) *
                C152092) *
               C152054 * C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 + C6097 +
            C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
            C6086 * C160) *
               C152188 +
           (C6089 * C550 + C6675 + C6675 + C6084 * C574 + C6091 * C549 + C6674 +
            C6674 + C6085 * C573 + C6093 * C548 + C6673 + C6673 +
            C6086 * C572) *
               C152092) *
              C152054 * C151869 * C151851 * C129 -
          ((C6093 * C547 + C6684 + C6684 + C6086 * C571 + C6091 * C548 + C6683 +
            C6683 + C6085 * C572 + C6089 * C549 + C6682 + C6682 +
            C6084 * C573) *
               C152092 +
           (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 + C6106 +
            C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
            C6084 * C159) *
               C152188) *
              C152054 * C151869 * C151851 * C130 +
          ((C6089 * C144 + C6108 + C6108 + C6084 * C160 + C6091 * C145 + C6109 +
            C6109 + C6085 * C161 + C6093 * C146 + C6110 + C6110 +
            C6086 * C162) *
               C152188 +
           (C6089 * C548 + C6699 + C6699 + C6084 * C572 + C6091 * C547 + C6698 +
            C6698 + C6085 * C571 + C6093 * C555 + C6697 + C6697 +
            C6086 * C579) *
               C152092) *
              C152054 * C151869 * C151851 * C131 -
          ((C6093 * C557 + C7114 + C7114 + C6086 * C581 + C6091 * C555 + C7113 +
            C7113 + C6085 * C579 + C6089 * C547 + C7112 + C7112 +
            C6084 * C571) *
               C152092 +
           (C6093 * C147 + C6117 + C6117 + C6086 * C163 + C6091 * C146 + C6118 +
            C6118 + C6085 * C162 + C6089 * C145 + C6119 + C6119 +
            C6084 * C161) *
               C152188) *
              C152054 * C151869 * C151851 * C132 +
          ((C6089 * C146 + C6120 + C6120 + C6084 * C162 + C6091 * C147 + C6121 +
            C6121 + C6085 * C163 + C6093 * C148 + C6122 + C6122 +
            C6086 * C164) *
               C152188 +
           (C6089 * C555 + C14729 + C14729 + C6084 * C579 + C6091 * C557 +
            C14730 + C14730 + C6085 * C581 + C6093 * C882 + C14731 + C14731 +
            C6086 * C884) *
               C152092) *
              C152054 * C151869 * C151851 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
             C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
             C6086 * C160) *
                C152188 +
            (C15243 + C15244 + C15245) * C152092) *
               C152054 * C151869 * C1259 -
           ((C7453 + C7454 + C7455) * C152092 +
            (C6436 + C6435 + C6434) * C152188) *
               C152054 * C151869 * C1260 +
           ((C6439 + C6438 + C6437) * C152188 +
            (C8122 + C8123 + C8124) * C152092) *
               C152054 * C151869 * C152214) *
              C152255 +
          (((C6440 + C6441 + C6442) * C152188 +
            (C7456 + C7457 + C7458) * C152092) *
               C152054 * C151869 * C1260 -
           ((C15251 + C15250 + C15249) * C152092 +
            (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
             C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
             C6084 * C159) *
                C152188) *
               C152054 * C151869 * C1259 -
           ((C8645 + C8646 + C8647) * C152092 +
            (C6445 + C6444 + C6443) * C152188) *
               C152054 * C151869 * C152214) *
              C152240 +
          (((C6089 * C144 + C6108 + C6108 + C6084 * C160 + C6091 * C145 +
             C6109 + C6109 + C6085 * C161 + C6093 * C146 + C6110 + C6110 +
             C6086 * C162) *
                C152188 +
            (C15255 + C15256 + C15257) * C152092) *
               C152054 * C151869 * C1259 -
           ((C7459 + C7460 + C7461) * C152092 +
            (C6448 + C6447 + C6446) * C152188) *
               C152054 * C151869 * C1260 +
           ((C6451 + C6450 + C6449) * C152188 +
            (C6089 * C1536 + C7432 + C7432 + C6084 * C1560 + C6091 * C1535 +
             C7433 + C7433 + C6085 * C1559 + C6093 * C1916 + C7434 + C7434 +
             C6086 * C1918) *
                C152092) *
               C152054 * C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 + C6097 +
            C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
            C6086 * C160) *
               C152188 +
           (C15243 + C15244 + C15245) * C152092) *
              C152054 * C151869 * C1347 -
          ((C7453 + C7454 + C7455) * C152092 +
           (C6436 + C6435 + C6434) * C152188) *
              C152054 * C151869 * C1348 +
          ((C6439 + C6438 + C6437) * C152188 +
           (C8122 + C8123 + C8124) * C152092) *
              C152054 * C151869 * C1349 -
          ((C8866 + C8867 + C8868) * C152092 +
           (C7843 + C7842 + C7841) * C152188) *
              C152054 * C151869 * C1350 +
          ((C7846 + C7845 + C7844) * C152188 +
           (C6089 * C8841 + C8857 + C8857 + C6084 * C8847 + C6091 * C8842 +
            C8858 + C8858 + C6085 * C8848 + C6093 * C8843 + C8859 + C8859 +
            C6086 * C8849) *
               C152092) *
              C152054 * C151869 * C1351) *
         C151823) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152188 +
            (C31628 * C550 + C32024 + C32024 + C151791 * C574) * C152092) *
               C23040 +
           (C31851 * C152188 + C32563 * C152092) * C23041 +
           (C31852 * C152188 + C32562 * C152092) * C23042) *
              C151869 * C151851 * C129 -
          ((C32565 * C152092 + C31856 * C152188) * C23042 +
           (C32564 * C152092 + C31855 * C152188) * C23041 +
           ((C31628 * C549 + C32029 + C32029 + C151791 * C573) * C152092 +
            (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152188) *
               C23040) *
              C151869 * C151851 * C130 +
          (((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C152188 +
            (C31628 * C548 + C32040 + C32040 + C151791 * C572) * C152092) *
               C23040 +
           (C31859 * C152188 + C32569 * C152092) * C23041 +
           (C31860 * C152188 + C32568 * C152092) * C23042) *
              C151869 * C151851 * C131 -
          (((C31628 * C1535 + C32326 + C32326 + C151791 * C1559) * C152092 +
            C32189 * C152188) *
               C23042 +
           ((C31628 * C1086 + C32325 + C32325 + C151791 * C1098) * C152092 +
            C32188 * C152188) *
               C23041 +
           ((C31628 * C547 + C32324 + C32324 + C151791 * C571) * C152092 +
            (C31628 * C145 + C31646 + C31646 + C151791 * C161) * C152188) *
               C23040) *
              C151869 * C151851 * C132 +
          (((C31628 * C146 + C31647 + C31647 + C151791 * C162) * C152188 +
            (C31628 * C555 + C37454 + C37454 + C151791 * C579) * C152092) *
               C23040 +
           ((C31628 * C346 + C31648 + C31648 + C151791 * C370) * C152188 +
            (C31628 * C1087 + C37455 + C37455 + C151791 * C1099) * C152092) *
               C23041 +
           ((C31628 * C347 + C31649 + C31649 + C151791 * C371) * C152188 +
            (C31628 * C1916 + C37456 + C37456 + C151791 * C1918) * C152092) *
               C23042) *
              C151869 * C151851 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152188 +
             (C31628 * C550 + C32024 + C32024 + C151791 * C574) * C152092) *
                C23040 +
            (C37675 + C37676) * C23041 + C37693 * C23042) *
               C151869 * C152258 -
           ((C37679 + C37680) * C23042 + (C37678 + C37677) * C23041 +
            (C37676 + C37675) * C23040) *
               C151869 * C152244 +
           (C37693 * C23040 + (C37680 + C37679) * C23041 +
            (C31854 * C152188 + C32999 * C152092) * C23042) *
               C151869 * C152214) *
              C335 +
          (((C37681 + C37682) * C23040 + (C37683 + C37684) * C23041 +
            (C37685 + C37686) * C23042) *
               C151869 * C152244 -
           (C37694 * C23042 + (C37682 + C37681) * C23041 +
            ((C31628 * C549 + C32029 + C32029 + C151791 * C573) * C152092 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152188) *
                C23040) *
               C151869 * C152258 -
           ((C33342 * C152092 + C31858 * C152188) * C23042 +
            (C37686 + C37685) * C23041 + C37694 * C23040) *
               C151869 * C152214) *
              C336 +
          ((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C152188 +
             (C31628 * C548 + C32040 + C32040 + C151791 * C572) * C152092) *
                C23040 +
            (C37687 + C37688) * C23041 + C37695 * C23042) *
               C151869 * C152258 -
           ((C37691 + C37692) * C23042 + (C37690 + C37689) * C23041 +
            (C37688 + C37687) * C23040) *
               C151869 * C152244 +
           (C37695 * C23040 + (C37692 + C37691) * C23041 +
            (C31862 * C152188 +
             (C31628 * C8843 + C32542 + C32542 + C151791 * C8849) * C152092) *
                C23042) *
               C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152188 +
             C37949 * C152092) *
                C23040 +
            (C37675 + C37676) * C23041 + C37693 * C23042) *
               C151869 * C1259 -
           ((C37679 + C37680) * C23042 + (C37678 + C37677) * C23041 +
            (C37676 + C37675) * C23040) *
               C151869 * C1260 +
           (C37693 * C23040 + (C37680 + C37679) * C23041 +
            (C31854 * C152188 + C32999 * C152092) * C23042) *
               C151869 * C152214) *
              C152255 +
          (((C37681 + C37682) * C23040 + (C37683 + C37684) * C23041 +
            (C37685 + C37686) * C23042) *
               C151869 * C1260 -
           (C37694 * C23042 + (C37682 + C37681) * C23041 +
            (C37951 * C152092 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152188) *
                C23040) *
               C151869 * C1259 -
           ((C33342 * C152092 + C31858 * C152188) * C23042 +
            (C37686 + C37685) * C23041 + C37694 * C23040) *
               C151869 * C152214) *
              C152240 +
          ((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C152188 +
             C37953 * C152092) *
                C23040 +
            (C37687 + C37688) * C23041 + C37695 * C23042) *
               C151869 * C1259 -
           ((C37691 + C37692) * C23042 + (C37690 + C37689) * C23041 +
            (C37688 + C37687) * C23040) *
               C151869 * C1260 +
           (C37695 * C23040 + (C37692 + C37691) * C23041 +
            (C31862 * C152188 +
             (C31628 * C8843 + C32542 + C32542 + C151791 * C8849) * C152092) *
                C23042) *
               C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152188 +
            C37949 * C152092) *
               C23040 +
           (C37675 + C37676) * C23041 + C37693 * C23042) *
              C151869 * C1347 -
          (C39009 * C23042 + (C37678 + C37677) * C23041 +
           (C37676 + C37675) * C23040) *
              C151869 * C1348 +
          (C37693 * C23040 + (C37680 + C37679) * C23041 + C39014 * C23042) *
              C151869 * C1349 -
          ((C39012 + C39013) * C23042 + (C39011 + C39010) * C23041 +
           C39009 * C23040) *
              C151869 * C1350 +
          (C39014 * C23040 + (C39013 + C39012) * C23041 +
           (C32821 * C152188 +
            (C31628 * C33473 + C33479 + C33479 + C151791 * C33475) * C152092) *
               C23042) *
              C151869 * C1351) *
         C151823) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C62334 +
           C37949 * C62335 + C37950 * C62336 + C40513 * C62337) *
              C152054 * C151869 * C151851 * C129 -
          (C41022 * C62337 + C37952 * C62336 + C37951 * C62335 +
           (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C62334) *
              C152054 * C151869 * C151851 * C130 +
          ((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C62334 +
           C37953 * C62335 + C37956 * C62336 + C54593 * C62337) *
              C152054 * C151869 * C151851 * C131 -
          ((C31628 * C2451 + C54992 + C54992 + C151791 * C2467) * C62337 +
           C54996 * C62336 + C38366 * C62335 +
           (C31628 * C145 + C31646 + C31646 + C151791 * C161) * C62334) *
              C152054 * C151869 * C151851 * C132 +
          ((C31628 * C146 + C31647 + C31647 + C151791 * C162) * C62334 +
           (C31628 * C555 + C37454 + C37454 + C151791 * C579) * C62335 +
           (C31628 * C556 + C54126 + C54126 + C151791 * C580) * C62336 +
           (C31628 * C2818 + C62339 + C62339 + C151791 * C2820) * C62337) *
              C152054 * C151869 * C151851 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C62334 +
            C37949 * C62335 + C37950 * C62336 + C40513 * C62337) *
               C152054 * C151869 * C152258 -
           (C34364 * C62337 + C32996 * C62336 + C32563 * C62335 +
            C31851 * C62334) *
               C152054 * C151869 * C152244 +
           (C31852 * C62334 + C32562 * C62335 + C32997 * C62336 +
            C34363 * C62337) *
               C152054 * C151869 * C152214) *
              C335 +
          ((C31855 * C62334 + C32564 * C62335 + C34078 * C62336 +
            C40818 * C62337) *
               C152054 * C151869 * C152244 -
           (C41022 * C62337 + C37952 * C62336 + C37951 * C62335 +
            (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C62334) *
               C152054 * C151869 * C152258 -
           (C40817 * C62337 + C34077 * C62336 + C32565 * C62335 +
            C31856 * C62334) *
               C152054 * C151869 * C152214) *
              C336 +
          (((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C62334 +
            C37953 * C62335 + C37956 * C62336 + C54593 * C62337) *
               C152054 * C151869 * C152258 -
           (C54592 * C62337 + C37955 * C62336 + C32569 * C62335 +
            C31859 * C62334) *
               C152054 * C151869 * C152244 +
           (C31860 * C62334 + C32568 * C62335 + C37954 * C62336 +
            (C31628 * C10151 + C37932 + C37932 + C151791 * C10157) * C62337) *
               C152054 * C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C62334 +
            C37949 * C62335 + C37950 * C62336 + C40513 * C62337) *
               C152054 * C151869 * C1259 -
           (C34364 * C62337 + C32996 * C62336 + C32563 * C62335 +
            C31851 * C62334) *
               C152054 * C151869 * C1260 +
           (C31852 * C62334 + C32562 * C62335 + C32997 * C62336 +
            C34363 * C62337) *
               C152054 * C151869 * C152214) *
              C152255 +
          ((C31855 * C62334 + C32564 * C62335 + C34078 * C62336 +
            C40818 * C62337) *
               C152054 * C151869 * C1260 -
           (C41022 * C62337 + C37952 * C62336 + C37951 * C62335 +
            (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C62334) *
               C152054 * C151869 * C1259 -
           (C40817 * C62337 + C34077 * C62336 + C32565 * C62335 +
            C31856 * C62334) *
               C152054 * C151869 * C152214) *
              C152240 +
          (((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C62334 +
            C37953 * C62335 + C37956 * C62336 + C54593 * C62337) *
               C152054 * C151869 * C1259 -
           (C54592 * C62337 + C37955 * C62336 + C32569 * C62335 +
            C31859 * C62334) *
               C152054 * C151869 * C1260 +
           (C31860 * C62334 + C32568 * C62335 + C37954 * C62336 +
            (C31628 * C10151 + C37932 + C37932 + C151791 * C10157) * C62337) *
               C152054 * C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C62334 +
           C37949 * C62335 + C37950 * C62336 + C40513 * C62337) *
              C152054 * C151869 * C1347 -
          (C34364 * C62337 + C32996 * C62336 + C32563 * C62335 +
           C31851 * C62334) *
              C152054 * C151869 * C1348 +
          (C31852 * C62334 + C32562 * C62335 + C32997 * C62336 +
           C34363 * C62337) *
              C152054 * C151869 * C1349 -
          (C34362 * C62337 + C32998 * C62336 + C32561 * C62335 +
           C31853 * C62334) *
              C152054 * C151869 * C1350 +
          (C31854 * C62334 + C32999 * C62335 + C33000 * C62336 +
           (C31628 * C34345 + C34355 + C34355 + C151791 * C34347) * C62337) *
              C152054 * C151869 * C1351) *
         C151823) /
            (p * q * std::sqrt(p + q));
    d2ee[225] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  ((((C67859 * C142 + C67866 + C67866 + C152237 * C158 +
                      C67861 * C143 + C67867 + C67867 + C152201 * C159 +
                      C67863 * C144 + C67868 + C67868 + C67856 * C160) *
                         C96046 +
                     (C96563 + C96564 + C96565) * C152092) *
                        C152054 * C151869 * C151910 -
                    ((C69223 + C69224 + C69225) * C152092 +
                     (C68206 + C68205 + C68204) * C96046) *
                        C152054 * C151869 * C151917 +
                    ((C68209 + C68208 + C68207) * C96046 +
                     (C69874 + C69875 + C69876) * C152092) *
                        C152054 * C151869 * C3585) *
                       C151828 +
                   (((C68210 + C68211 + C68212) * C96046 +
                     (C69226 + C69227 + C69228) * C152092) *
                        C152054 * C151869 * C151917 -
                    ((C96571 + C96570 + C96569) * C152092 +
                     (C67863 * C145 + C67875 + C67875 + C67856 * C161 +
                      C67861 * C144 + C67876 + C67876 + C152201 * C160 +
                      C67859 * C143 + C67877 + C67877 + C152237 * C159) *
                         C96046) *
                        C152054 * C151869 * C151910 -
                    ((C70397 + C70398 + C70399) * C152092 +
                     (C68215 + C68214 + C68213) * C96046) *
                        C152054 * C151869 * C3585) *
                       C151837 +
                   (((C67859 * C144 + C67878 + C67878 + C152237 * C160 +
                      C67861 * C145 + C67879 + C67879 + C152201 * C161 +
                      C67863 * C146 + C67880 + C67880 + C67856 * C162) *
                         C96046 +
                     (C96575 + C96576 + C96577) * C152092) *
                        C152054 * C151869 * C151910 -
                    ((C69229 + C69230 + C69231) * C152092 +
                     (C68218 + C68217 + C68216) * C96046) *
                        C152054 * C151869 * C151917 +
                    ((C68221 + C68220 + C68219) * C96046 +
                     (C67859 * C1536 + C69202 + C69202 + C152237 * C1560 +
                      C67861 * C1535 + C69203 + C69203 + C152201 * C1559 +
                      C67863 * C1916 + C69204 + C69204 + C67856 * C1918) *
                         C152092) *
                        C152054 * C151869 * C3585) *
                       C3588)) /
                 (p * q * std::sqrt(p + q));
    d2ee[226] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  (((((C67859 * C142 + C67866 + C67866 + C152237 * C158 +
                       C67861 * C143 + C67867 + C67867 + C152201 * C159 +
                       C67863 * C144 + C67868 + C67868 + C67856 * C160) *
                          C96046 +
                      (C96563 + C96564 + C96565) * C152092) *
                         C152054 * C152173 -
                     ((C96566 + C96567 + C96568) * C152092 +
                      (C96565 + C96564 + C96563) * C96046) *
                         C152054 * C151956) *
                        C151910 +
                    (((C69225 + C69224 + C69223) * C96046 +
                      (C69871 + C69872 + C69873) * C152092) *
                         C152054 * C151956 -
                     ((C69223 + C69224 + C69225) * C152092 +
                      (C68206 + C68205 + C68204) * C96046) *
                         C152054 * C152173) *
                        C151917 +
                    (((C68209 + C68208 + C68207) * C96046 +
                      (C69874 + C69875 + C69876) * C152092) *
                         C152054 * C152173 -
                     ((C69877 + C69878 + C69879) * C152092 +
                      (C69876 + C69875 + C69874) * C96046) *
                         C152054 * C151956) *
                        C3585) *
                       C3241 +
                   ((((C96569 + C96570 + C96571) * C96046 +
                      (C96572 + C96573 + C96574) * C152092) *
                         C152054 * C151956 -
                     ((C96571 + C96570 + C96569) * C152092 +
                      (C67863 * C145 + C67875 + C67875 + C67856 * C161 +
                       C67861 * C144 + C67876 + C67876 + C152201 * C160 +
                       C67859 * C143 + C67877 + C67877 + C152237 * C159) *
                          C96046) *
                         C152054 * C152173) *
                        C151910 +
                    (((C68210 + C68211 + C68212) * C96046 +
                      (C69226 + C69227 + C69228) * C152092) *
                         C152054 * C152173 -
                     ((C71487 + C71488 + C71489) * C152092 +
                      (C69228 + C69227 + C69226) * C96046) *
                         C152054 * C151956) *
                        C151917 +
                    (((C70399 + C70398 + C70397) * C96046 +
                      (C67859 * C1540 + C71478 + C71478 + C152237 * C1564 +
                       C67861 * C1541 + C71479 + C71479 + C152201 * C1565 +
                       C67863 * C1542 + C71480 + C71480 + C67856 * C1566) *
                          C152092) *
                         C152054 * C151956 -
                     ((C70397 + C70398 + C70399) * C152092 +
                      (C68215 + C68214 + C68213) * C96046) *
                         C152054 * C152173) *
                        C3585) *
                       C151834)) /
                 (p * q * std::sqrt(p + q));
    d2ee[227] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C67859 * C142 + C67866 + C67866 + C152237 * C158 +
                      C67861 * C143 + C67867 + C67867 + C152201 * C159 +
                      C67863 * C144 + C67868 + C67868 + C67856 * C160) *
                         C96046 +
                     (C96563 + C96564 + C96565) * C152092) *
                        C152054 * C151869 * C152265 -
                    ((C69223 + C69224 + C69225) * C152092 +
                     (C68206 + C68205 + C68204) * C96046) *
                        C152054 * C151869 * C152261 +
                    ((C68209 + C68208 + C68207) * C96046 +
                     (C69874 + C69875 + C69876) * C152092) *
                        C152054 * C151869 * C152249 -
                    ((C70609 + C70610 + C70611) * C152092 +
                     (C69604 + C69603 + C69602) * C96046) *
                        C152054 * C151869 * C152224) *
                       C3241 +
                   (((C68210 + C68211 + C68212) * C96046 +
                     (C69226 + C69227 + C69228) * C152092) *
                        C152054 * C151869 * C152261 -
                    ((C96571 + C96570 + C96569) * C152092 +
                     (C67863 * C145 + C67875 + C67875 + C67856 * C161 +
                      C67861 * C144 + C67876 + C67876 + C152201 * C160 +
                      C67859 * C143 + C67877 + C67877 + C152237 * C159) *
                         C96046) *
                        C152054 * C151869 * C152265 -
                    ((C70397 + C70398 + C70399) * C152092 +
                     (C68215 + C68214 + C68213) * C96046) *
                        C152054 * C151869 * C152249 +
                    ((C70091 + C70090 + C70089) * C96046 +
                     (C67859 * C2054 + C70388 + C70388 + C152237 * C2062 +
                      C67861 * C2055 + C70389 + C70389 + C152201 * C2063 +
                      C67863 * C2056 + C70390 + C70390 + C67856 * C2064) *
                         C152092) *
                        C152054 * C151869 * C152224) *
                       C151834)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C67859 * C142 + C67866 + C67866 + C152237 * C158 +
                      C67861 * C143 + C67867 + C67867 + C152201 * C159 +
                      C67863 * C144 + C67868 + C67868 + C67856 * C160) *
                         C96046 +
                     (C96563 + C96564 + C96565) * C152092) *
                        C152054 * C151869 * C3101 -
                    ((C69223 + C69224 + C69225) * C152092 +
                     (C68206 + C68205 + C68204) * C96046) *
                        C152054 * C151869 * C151914) *
                       C152264 +
                   (((C68210 + C68211 + C68212) * C96046 +
                     (C69226 + C69227 + C69228) * C152092) *
                        C152054 * C151869 * C151914 -
                    ((C96571 + C96570 + C96569) * C152092 +
                     (C67863 * C145 + C67875 + C67875 + C67856 * C161 +
                      C67861 * C144 + C67876 + C67876 + C152201 * C160 +
                      C67859 * C143 + C67877 + C67877 + C152237 * C159) *
                         C96046) *
                        C152054 * C151869 * C3101) *
                       C152257 +
                   (((C67859 * C144 + C67878 + C67878 + C152237 * C160 +
                      C67861 * C145 + C67879 + C67879 + C152201 * C161 +
                      C67863 * C146 + C67880 + C67880 + C67856 * C162) *
                         C96046 +
                     (C96575 + C96576 + C96577) * C152092) *
                        C152054 * C151869 * C3101 -
                    ((C69229 + C69230 + C69231) * C152092 +
                     (C68218 + C68217 + C68216) * C96046) *
                        C152054 * C151869 * C151914) *
                       C152242 +
                   (((C68685 + C68686 + C68687) * C96046 +
                     (C67859 * C1086 + C68885 + C68885 + C152237 * C1098 +
                      C67861 * C1087 + C68886 + C68886 + C152201 * C1099 +
                      C67863 * C1088 + C68887 + C68887 + C67856 * C1100) *
                         C152092) *
                        C152054 * C151869 * C151914 -
                    ((C96986 + C96985 + C96984) * C152092 +
                     (C67863 * C147 + C67887 + C67887 + C67856 * C163 +
                      C67861 * C146 + C67888 + C67888 + C152201 * C162 +
                      C67859 * C145 + C67889 + C67889 + C152237 * C161) *
                         C96046) *
                        C152054 * C151869 * C3101) *
                       C152218)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C67859 * C142 + C67866 + C67866 + C152237 * C158 +
                       C67861 * C143 + C67867 + C67867 + C152201 * C159 +
                       C67863 * C144 + C67868 + C67868 + C67856 * C160) *
                          C96046 +
                      (C96563 + C96564 + C96565) * C152092) *
                         C152054 * C152259 -
                     ((C96566 + C96567 + C96568) * C152092 +
                      (C96565 + C96564 + C96563) * C96046) *
                         C152054 * C152246 +
                     ((C96568 + C96567 + C96566) * C96046 +
                      (C99098 + C99099 + C99100) * C152092) *
                         C152054 * C152217) *
                        C3101 +
                    (((C69225 + C69224 + C69223) * C96046 +
                      (C69871 + C69872 + C69873) * C152092) *
                         C152054 * C152246 -
                     ((C69223 + C69224 + C69225) * C152092 +
                      (C68206 + C68205 + C68204) * C96046) *
                         C152054 * C152259 -
                     ((C71899 + C71900 + C71901) * C152092 +
                      (C69873 + C69872 + C69871) * C96046) *
                         C152054 * C152217) *
                        C151914) *
                       C3241 +
                   ((((C96569 + C96570 + C96571) * C96046 +
                      (C96572 + C96573 + C96574) * C152092) *
                         C152054 * C152246 -
                     ((C96571 + C96570 + C96569) * C152092 +
                      (C67863 * C145 + C67875 + C67875 + C67856 * C161 +
                       C67861 * C144 + C67876 + C67876 + C152201 * C160 +
                       C67859 * C143 + C67877 + C67877 + C152237 * C159) *
                          C96046) *
                         C152054 * C152259 -
                     ((C99603 + C99604 + C99605) * C152092 +
                      (C96574 + C96573 + C96572) * C96046) *
                         C152054 * C152217) *
                        C3101 +
                    (((C68210 + C68211 + C68212) * C96046 +
                      (C69226 + C69227 + C69228) * C152092) *
                         C152054 * C152259 -
                     ((C71487 + C71488 + C71489) * C152092 +
                      (C69228 + C69227 + C69226) * C96046) *
                         C152054 * C152246 +
                     ((C71489 + C71488 + C71487) * C96046 +
                      (C67859 * C2956 + C71687 + C71687 + C152237 * C2964 +
                       C67861 * C2957 + C71688 + C71688 + C152201 * C2965 +
                       C67863 * C2958 + C71689 + C71689 + C67856 * C2966) *
                          C152092) *
                         C152054 * C152217) *
                        C151914) *
                       C151834)) /
                     (p * q * std::sqrt(p + q));
    d2ee[228] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  (((((C67859 * C142 + C67866 + C67866 + C152237 * C158 +
                       C67861 * C143 + C67867 + C67867 + C152201 * C159 +
                       C67863 * C144 + C67868 + C67868 + C67856 * C160) *
                          C96046 +
                      (C96563 + C96564 + C96565) * C152092) *
                         C152054 * C152173 -
                     ((C96566 + C96567 + C96568) * C152092 +
                      (C96565 + C96564 + C96563) * C96046) *
                         C152054 * C151956) *
                        C3101 +
                    (((C69225 + C69224 + C69223) * C96046 +
                      (C69871 + C69872 + C69873) * C152092) *
                         C152054 * C151956 -
                     ((C69223 + C69224 + C69225) * C152092 +
                      (C68206 + C68205 + C68204) * C96046) *
                         C152054 * C152173) *
                        C151914) *
                       C151828 +
                   ((((C96569 + C96570 + C96571) * C96046 +
                      (C96572 + C96573 + C96574) * C152092) *
                         C152054 * C151956 -
                     ((C96571 + C96570 + C96569) * C152092 +
                      (C67863 * C145 + C67875 + C67875 + C67856 * C161 +
                       C67861 * C144 + C67876 + C67876 + C152201 * C160 +
                       C67859 * C143 + C67877 + C67877 + C152237 * C159) *
                          C96046) *
                         C152054 * C152173) *
                        C3101 +
                    (((C68210 + C68211 + C68212) * C96046 +
                      (C69226 + C69227 + C69228) * C152092) *
                         C152054 * C152173 -
                     ((C71487 + C71488 + C71489) * C152092 +
                      (C69228 + C69227 + C69226) * C96046) *
                         C152054 * C151956) *
                        C151914) *
                       C151837 +
                   ((((C67859 * C144 + C67878 + C67878 + C152237 * C160 +
                       C67861 * C145 + C67879 + C67879 + C152201 * C161 +
                       C67863 * C146 + C67880 + C67880 + C67856 * C162) *
                          C96046 +
                      (C96575 + C96576 + C96577) * C152092) *
                         C152054 * C152173 -
                     ((C96578 + C96579 + C96580) * C152092 +
                      (C96577 + C96576 + C96575) * C96046) *
                         C152054 * C151956) *
                        C3101 +
                    (((C69231 + C69230 + C69229) * C96046 +
                      (C67859 * C1532 + C68473 + C68473 + C152237 * C1556 +
                       C67861 * C1531 + C68474 + C68474 + C152201 * C1555 +
                       C67863 * C2677 + C68475 + C68475 + C67856 * C2679) *
                          C152092) *
                         C152054 * C151956 -
                     ((C69229 + C69230 + C69231) * C152092 +
                      (C68218 + C68217 + C68216) * C96046) *
                         C152054 * C152173) *
                        C151914) *
                       C3588)) /
                 (p * q * std::sqrt(p + q));
    d2ee[229] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C67859 * C142 + C67866 + C67866 + C152237 * C158 +
                      C67861 * C143 + C67867 + C67867 + C152201 * C159 +
                      C67863 * C144 + C67868 + C67868 + C67856 * C160) *
                         C96046 +
                     (C96563 + C96564 + C96565) * C152092) *
                        C152054 * C151869 * C3101 -
                    ((C69223 + C69224 + C69225) * C152092 +
                     (C68206 + C68205 + C68204) * C96046) *
                        C152054 * C151869 * C151914) *
                       C152264 +
                   (((C68210 + C68211 + C68212) * C96046 +
                     (C69226 + C69227 + C69228) * C152092) *
                        C152054 * C151869 * C151914 -
                    ((C96571 + C96570 + C96569) * C152092 +
                     (C67863 * C145 + C67875 + C67875 + C67856 * C161 +
                      C67861 * C144 + C67876 + C67876 + C152201 * C160 +
                      C67859 * C143 + C67877 + C67877 + C152237 * C159) *
                         C96046) *
                        C152054 * C151869 * C3101) *
                       C152257 +
                   (((C67859 * C144 + C67878 + C67878 + C152237 * C160 +
                      C67861 * C145 + C67879 + C67879 + C152201 * C161 +
                      C67863 * C146 + C67880 + C67880 + C67856 * C162) *
                         C96046 +
                     (C96575 + C96576 + C96577) * C152092) *
                        C152054 * C151869 * C3101 -
                    ((C69229 + C69230 + C69231) * C152092 +
                     (C68218 + C68217 + C68216) * C96046) *
                        C152054 * C151869 * C151914) *
                       C152242 +
                   (((C68685 + C68686 + C68687) * C96046 +
                     (C67859 * C1086 + C68885 + C68885 + C152237 * C1098 +
                      C67861 * C1087 + C68886 + C68886 + C152201 * C1099 +
                      C67863 * C1088 + C68887 + C68887 + C67856 * C1100) *
                         C152092) *
                        C152054 * C151869 * C151914 -
                    ((C96986 + C96985 + C96984) * C152092 +
                     (C67863 * C147 + C67887 + C67887 + C67856 * C163 +
                      C67861 * C146 + C67888 + C67888 + C152201 * C162 +
                      C67859 * C145 + C67889 + C67889 + C152237 * C161) *
                         C96046) *
                        C152054 * C151869 * C3101) *
                       C152218)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C67859 * C142 + C67866 + C67866 + C152237 * C158 +
                      C67861 * C143 + C67867 + C67867 + C152201 * C159 +
                      C67863 * C144 + C67868 + C67868 + C67856 * C160) *
                         C96046 +
                     (C96563 + C96564 + C96565) * C152092) *
                        C152054 * C151869 * C152265 -
                    ((C69223 + C69224 + C69225) * C152092 +
                     (C68206 + C68205 + C68204) * C96046) *
                        C152054 * C151869 * C152261 +
                    ((C68209 + C68208 + C68207) * C96046 +
                     (C69874 + C69875 + C69876) * C152092) *
                        C152054 * C151869 * C152249 -
                    ((C70609 + C70610 + C70611) * C152092 +
                     (C69604 + C69603 + C69602) * C96046) *
                        C152054 * C151869 * C152224) *
                       C3241 +
                   (((C68210 + C68211 + C68212) * C96046 +
                     (C69226 + C69227 + C69228) * C152092) *
                        C152054 * C151869 * C152261 -
                    ((C96571 + C96570 + C96569) * C152092 +
                     (C67863 * C145 + C67875 + C67875 + C67856 * C161 +
                      C67861 * C144 + C67876 + C67876 + C152201 * C160 +
                      C67859 * C143 + C67877 + C67877 + C152237 * C159) *
                         C96046) *
                        C152054 * C151869 * C152265 -
                    ((C70397 + C70398 + C70399) * C152092 +
                     (C68215 + C68214 + C68213) * C96046) *
                        C152054 * C151869 * C152249 +
                    ((C70091 + C70090 + C70089) * C96046 +
                     (C67859 * C2054 + C70388 + C70388 + C152237 * C2062 +
                      C67861 * C2055 + C70389 + C70389 + C152201 * C2063 +
                      C67863 * C2056 + C70390 + C70390 + C67856 * C2064) *
                         C152092) *
                        C152054 * C151869 * C152224) *
                       C151834)) /
                     (p * q * std::sqrt(p + q));
    d2ee[230] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  (((((C67859 * C142 + C67866 + C67866 + C152237 * C158 +
                       C67861 * C143 + C67867 + C67867 + C152201 * C159 +
                       C67863 * C144 + C67868 + C67868 + C67856 * C160) *
                          C96046 +
                      (C96563 + C96564 + C96565) * C152092) *
                         C152054 * C4107 -
                     ((C96566 + C96567 + C96568) * C152092 +
                      (C96565 + C96564 + C96563) * C96046) *
                         C152054 * C151956) *
                        C151910 +
                    (((C69225 + C69224 + C69223) * C96046 +
                      (C69871 + C69872 + C69873) * C152092) *
                         C152054 * C151956 -
                     ((C69223 + C69224 + C69225) * C152092 +
                      (C68206 + C68205 + C68204) * C96046) *
                         C152054 * C4107) *
                        C151917 +
                    (((C68209 + C68208 + C68207) * C96046 +
                      (C69874 + C69875 + C69876) * C152092) *
                         C152054 * C4107 -
                     ((C69877 + C69878 + C69879) * C152092 +
                      (C69876 + C69875 + C69874) * C96046) *
                         C152054 * C151956) *
                        C3585) *
                       C152158 +
                   ((((C96569 + C96570 + C96571) * C96046 +
                      (C96572 + C96573 + C96574) * C152092) *
                         C152054 * C151956 -
                     ((C96571 + C96570 + C96569) * C152092 +
                      (C67863 * C145 + C67875 + C67875 + C67856 * C161 +
                       C67861 * C144 + C67876 + C67876 + C152201 * C160 +
                       C67859 * C143 + C67877 + C67877 + C152237 * C159) *
                          C96046) *
                         C152054 * C4107) *
                        C151910 +
                    (((C68210 + C68211 + C68212) * C96046 +
                      (C69226 + C69227 + C69228) * C152092) *
                         C152054 * C4107 -
                     ((C71487 + C71488 + C71489) * C152092 +
                      (C69228 + C69227 + C69226) * C96046) *
                         C152054 * C151956) *
                        C151917 +
                    (((C70399 + C70398 + C70397) * C96046 +
                      (C67859 * C1540 + C71478 + C71478 + C152237 * C1564 +
                       C67861 * C1541 + C71479 + C71479 + C152201 * C1565 +
                       C67863 * C1542 + C71480 + C71480 + C67856 * C1566) *
                          C152092) *
                         C152054 * C151956 -
                     ((C70397 + C70398 + C70399) * C152092 +
                      (C68215 + C68214 + C68213) * C96046) *
                         C152054 * C4107) *
                        C3585) *
                       C151834)) /
                 (p * q * std::sqrt(p + q));
    d2ee[231] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  ((((C67859 * C142 + C67866 + C67866 + C152237 * C158 +
                      C67861 * C143 + C67867 + C67867 + C152201 * C159 +
                      C67863 * C144 + C67868 + C67868 + C67856 * C160) *
                         C96046 +
                     (C96563 + C96564 + C96565) * C152092) *
                        C152054 * C151952 -
                    ((C96566 + C96567 + C96568) * C152092 +
                     (C96565 + C96564 + C96563) * C96046) *
                        C152054 * C151959 +
                    ((C96568 + C96567 + C96566) * C96046 +
                     (C99098 + C99099 + C99100) * C152092) *
                        C152054 * C4779) *
                       C151910 +
                   (((C69225 + C69224 + C69223) * C96046 +
                     (C69871 + C69872 + C69873) * C152092) *
                        C152054 * C151959 -
                    ((C69223 + C69224 + C69225) * C152092 +
                     (C68206 + C68205 + C68204) * C96046) *
                        C152054 * C151952 -
                    ((C71899 + C71900 + C71901) * C152092 +
                     (C69873 + C69872 + C69871) * C96046) *
                        C152054 * C4779) *
                       C151917 +
                   (((C68209 + C68208 + C68207) * C96046 +
                     (C69874 + C69875 + C69876) * C152092) *
                        C152054 * C151952 -
                    ((C69877 + C69878 + C69879) * C152092 +
                     (C69876 + C69875 + C69874) * C96046) *
                        C152054 * C151959 +
                    ((C69879 + C69878 + C69877) * C96046 +
                     (C67859 * C10149 + C71890 + C71890 + C152237 * C10155 +
                      C67861 * C10150 + C71891 + C71891 + C152201 * C10156 +
                      C67863 * C10151 + C71892 + C71892 + C67856 * C10157) *
                         C152092) *
                        C152054 * C4779) *
                       C3585) *
                  C151823) /
                 (p * q * std::sqrt(p + q));
    d2ee[232] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C67859 * C142 + C67866 + C67866 + C152237 * C158 +
                      C67861 * C143 + C67867 + C67867 + C152201 * C159 +
                      C67863 * C144 + C67868 + C67868 + C67856 * C160) *
                         C96046 +
                     (C96563 + C96564 + C96565) * C152092) *
                        C152054 * C4107 -
                    ((C96566 + C96567 + C96568) * C152092 +
                     (C96565 + C96564 + C96563) * C96046) *
                        C152054 * C151956) *
                       C152265 +
                   (((C69225 + C69224 + C69223) * C96046 +
                     (C69871 + C69872 + C69873) * C152092) *
                        C152054 * C151956 -
                    ((C69223 + C69224 + C69225) * C152092 +
                     (C68206 + C68205 + C68204) * C96046) *
                        C152054 * C4107) *
                       C152261 +
                   (((C68209 + C68208 + C68207) * C96046 +
                     (C69874 + C69875 + C69876) * C152092) *
                        C152054 * C4107 -
                    ((C69877 + C69878 + C69879) * C152092 +
                     (C69876 + C69875 + C69874) * C96046) *
                        C152054 * C151956) *
                       C152249 +
                   (((C70611 + C70610 + C70609) * C96046 +
                     (C67859 * C8064 + C69850 + C69850 + C152237 * C8070 +
                      C67861 * C8065 + C69851 + C69851 + C152201 * C8071 +
                      C67863 * C8066 + C69852 + C69852 + C67856 * C8072) *
                         C152092) *
                        C152054 * C151956 -
                    ((C70609 + C70610 + C70611) * C152092 +
                     (C69604 + C69603 + C69602) * C96046) *
                        C152054 * C4107) *
                       C152224) *
                  C151823) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C67859 * C142 + C67866 + C67866 + C152237 * C158 +
                       C67861 * C143 + C67867 + C67867 + C152201 * C159 +
                       C67863 * C144 + C67868 + C67868 + C67856 * C160) *
                          C96046 +
                      (C96563 + C96564 + C96565) * C152092) *
                         C152054 * C4107 -
                     ((C96566 + C96567 + C96568) * C152092 +
                      (C96565 + C96564 + C96563) * C96046) *
                         C152054 * C151956) *
                        C3101 +
                    (((C69225 + C69224 + C69223) * C96046 +
                      (C69871 + C69872 + C69873) * C152092) *
                         C152054 * C151956 -
                     ((C69223 + C69224 + C69225) * C152092 +
                      (C68206 + C68205 + C68204) * C96046) *
                         C152054 * C4107) *
                        C151914) *
                       C152255 +
                   ((((C96569 + C96570 + C96571) * C96046 +
                      (C96572 + C96573 + C96574) * C152092) *
                         C152054 * C151956 -
                     ((C96571 + C96570 + C96569) * C152092 +
                      (C67863 * C145 + C67875 + C67875 + C67856 * C161 +
                       C67861 * C144 + C67876 + C67876 + C152201 * C160 +
                       C67859 * C143 + C67877 + C67877 + C152237 * C159) *
                          C96046) *
                         C152054 * C4107) *
                        C3101 +
                    (((C68210 + C68211 + C68212) * C96046 +
                      (C69226 + C69227 + C69228) * C152092) *
                         C152054 * C4107 -
                     ((C71487 + C71488 + C71489) * C152092 +
                      (C69228 + C69227 + C69226) * C96046) *
                         C152054 * C151956) *
                        C151914) *
                       C152240 +
                   ((((C67859 * C144 + C67878 + C67878 + C152237 * C160 +
                       C67861 * C145 + C67879 + C67879 + C152201 * C161 +
                       C67863 * C146 + C67880 + C67880 + C67856 * C162) *
                          C96046 +
                      (C96575 + C96576 + C96577) * C152092) *
                         C152054 * C4107 -
                     ((C96578 + C96579 + C96580) * C152092 +
                      (C96577 + C96576 + C96575) * C96046) *
                         C152054 * C151956) *
                        C3101 +
                    (((C69231 + C69230 + C69229) * C96046 +
                      (C67859 * C1532 + C68473 + C68473 + C152237 * C1556 +
                       C67861 * C1531 + C68474 + C68474 + C152201 * C1555 +
                       C67863 * C2677 + C68475 + C68475 + C67856 * C2679) *
                          C152092) *
                         C152054 * C151956 -
                     ((C69229 + C69230 + C69231) * C152092 +
                      (C68218 + C68217 + C68216) * C96046) *
                         C152054 * C4107) *
                        C151914) *
                       C152208)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C67859 * C142 + C67866 + C67866 + C152237 * C158 +
                      C67861 * C143 + C67867 + C67867 + C152201 * C159 +
                      C67863 * C144 + C67868 + C67868 + C67856 * C160) *
                         C96046 +
                     (C96563 + C96564 + C96565) * C152092) *
                        C152054 * C152266 -
                    ((C96566 + C96567 + C96568) * C152092 +
                     (C96565 + C96564 + C96563) * C96046) *
                        C152054 * C152263 +
                    ((C96568 + C96567 + C96566) * C96046 +
                     (C99098 + C99099 + C99100) * C152092) *
                        C152054 * C152252 -
                    ((C99101 + C99102 + C99103) * C152092 +
                     (C99100 + C99099 + C99098) * C96046) *
                        C152054 * C152230) *
                       C3101 +
                   (((C69225 + C69224 + C69223) * C96046 +
                     (C69871 + C69872 + C69873) * C152092) *
                        C152054 * C152263 -
                    ((C69223 + C69224 + C69225) * C152092 +
                     (C68206 + C68205 + C68204) * C96046) *
                        C152054 * C152266 -
                    ((C71899 + C71900 + C71901) * C152092 +
                     (C69873 + C69872 + C69871) * C96046) *
                        C152054 * C152252 +
                    ((C71901 + C71900 + C71899) * C96046 +
                     (C67859 * C9426 + C71179 + C71179 + C152237 * C9432 +
                      C67861 * C9427 + C71180 + C71180 + C152201 * C9433 +
                      C67863 * C9428 + C71181 + C71181 + C67856 * C9434) *
                         C152092) *
                        C152054 * C152230) *
                       C151914) *
                  C151823) /
                     (p * q * std::sqrt(p + q));
    d2ee[233] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  (((((C67859 * C142 + C67866 + C67866 + C152237 * C158 +
                       C67861 * C143 + C67867 + C67867 + C152201 * C159 +
                       C67863 * C144 + C67868 + C67868 + C67856 * C160) *
                          C96046 +
                      (C96563 + C96564 + C96565) * C152092) *
                         C152054 * C151952 -
                     ((C96566 + C96567 + C96568) * C152092 +
                      (C96565 + C96564 + C96563) * C96046) *
                         C152054 * C151959 +
                     ((C96568 + C96567 + C96566) * C96046 +
                      (C99098 + C99099 + C99100) * C152092) *
                         C152054 * C4779) *
                        C3101 +
                    (((C69225 + C69224 + C69223) * C96046 +
                      (C69871 + C69872 + C69873) * C152092) *
                         C152054 * C151959 -
                     ((C69223 + C69224 + C69225) * C152092 +
                      (C68206 + C68205 + C68204) * C96046) *
                         C152054 * C151952 -
                     ((C71899 + C71900 + C71901) * C152092 +
                      (C69873 + C69872 + C69871) * C96046) *
                         C152054 * C4779) *
                        C151914) *
                       C152158 +
                   ((((C96569 + C96570 + C96571) * C96046 +
                      (C96572 + C96573 + C96574) * C152092) *
                         C152054 * C151959 -
                     ((C96571 + C96570 + C96569) * C152092 +
                      (C67863 * C145 + C67875 + C67875 + C67856 * C161 +
                       C67861 * C144 + C67876 + C67876 + C152201 * C160 +
                       C67859 * C143 + C67877 + C67877 + C152237 * C159) *
                          C96046) *
                         C152054 * C151952 -
                     ((C99603 + C99604 + C99605) * C152092 +
                      (C96574 + C96573 + C96572) * C96046) *
                         C152054 * C4779) *
                        C3101 +
                    (((C68210 + C68211 + C68212) * C96046 +
                      (C69226 + C69227 + C69228) * C152092) *
                         C152054 * C151952 -
                     ((C71487 + C71488 + C71489) * C152092 +
                      (C69228 + C69227 + C69226) * C96046) *
                         C152054 * C151959 +
                     ((C71489 + C71488 + C71487) * C96046 +
                      (C67859 * C2956 + C71687 + C71687 + C152237 * C2964 +
                       C67861 * C2957 + C71688 + C71688 + C152201 * C2965 +
                       C67863 * C2958 + C71689 + C71689 + C67856 * C2966) *
                          C152092) *
                         C152054 * C4779) *
                        C151914) *
                       C151834)) /
                 (p * q * std::sqrt(p + q));
    d2ee[234] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C67859 * C142 + C67866 + C67866 + C152237 * C158 +
                       C67861 * C143 + C67867 + C67867 + C152201 * C159 +
                       C67863 * C144 + C67868 + C67868 + C67856 * C160) *
                          C96046 +
                      (C96563 + C96564 + C96565) * C152092) *
                         C152054 * C4107 -
                     ((C96566 + C96567 + C96568) * C152092 +
                      (C96565 + C96564 + C96563) * C96046) *
                         C152054 * C151956) *
                        C3101 +
                    (((C69225 + C69224 + C69223) * C96046 +
                      (C69871 + C69872 + C69873) * C152092) *
                         C152054 * C151956 -
                     ((C69223 + C69224 + C69225) * C152092 +
                      (C68206 + C68205 + C68204) * C96046) *
                         C152054 * C4107) *
                        C151914) *
                       C152255 +
                   ((((C96569 + C96570 + C96571) * C96046 +
                      (C96572 + C96573 + C96574) * C152092) *
                         C152054 * C151956 -
                     ((C96571 + C96570 + C96569) * C152092 +
                      (C67863 * C145 + C67875 + C67875 + C67856 * C161 +
                       C67861 * C144 + C67876 + C67876 + C152201 * C160 +
                       C67859 * C143 + C67877 + C67877 + C152237 * C159) *
                          C96046) *
                         C152054 * C4107) *
                        C3101 +
                    (((C68210 + C68211 + C68212) * C96046 +
                      (C69226 + C69227 + C69228) * C152092) *
                         C152054 * C4107 -
                     ((C71487 + C71488 + C71489) * C152092 +
                      (C69228 + C69227 + C69226) * C96046) *
                         C152054 * C151956) *
                        C151914) *
                       C152240 +
                   ((((C67859 * C144 + C67878 + C67878 + C152237 * C160 +
                       C67861 * C145 + C67879 + C67879 + C152201 * C161 +
                       C67863 * C146 + C67880 + C67880 + C67856 * C162) *
                          C96046 +
                      (C96575 + C96576 + C96577) * C152092) *
                         C152054 * C4107 -
                     ((C96578 + C96579 + C96580) * C152092 +
                      (C96577 + C96576 + C96575) * C96046) *
                         C152054 * C151956) *
                        C3101 +
                    (((C69231 + C69230 + C69229) * C96046 +
                      (C67859 * C1532 + C68473 + C68473 + C152237 * C1556 +
                       C67861 * C1531 + C68474 + C68474 + C152201 * C1555 +
                       C67863 * C2677 + C68475 + C68475 + C67856 * C2679) *
                          C152092) *
                         C152054 * C151956 -
                     ((C69229 + C69230 + C69231) * C152092 +
                      (C68218 + C68217 + C68216) * C96046) *
                         C152054 * C4107) *
                        C151914) *
                       C152208)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C67859 * C142 + C67866 + C67866 + C152237 * C158 +
                      C67861 * C143 + C67867 + C67867 + C152201 * C159 +
                      C67863 * C144 + C67868 + C67868 + C67856 * C160) *
                         C96046 +
                     (C96563 + C96564 + C96565) * C152092) *
                        C152054 * C4107 -
                    ((C96566 + C96567 + C96568) * C152092 +
                     (C96565 + C96564 + C96563) * C96046) *
                        C152054 * C151956) *
                       C152265 +
                   (((C69225 + C69224 + C69223) * C96046 +
                     (C69871 + C69872 + C69873) * C152092) *
                        C152054 * C151956 -
                    ((C69223 + C69224 + C69225) * C152092 +
                     (C68206 + C68205 + C68204) * C96046) *
                        C152054 * C4107) *
                       C152261 +
                   (((C68209 + C68208 + C68207) * C96046 +
                     (C69874 + C69875 + C69876) * C152092) *
                        C152054 * C4107 -
                    ((C69877 + C69878 + C69879) * C152092 +
                     (C69876 + C69875 + C69874) * C96046) *
                        C152054 * C151956) *
                       C152249 +
                   (((C70611 + C70610 + C70609) * C96046 +
                     (C67859 * C8064 + C69850 + C69850 + C152237 * C8070 +
                      C67861 * C8065 + C69851 + C69851 + C152201 * C8071 +
                      C67863 * C8066 + C69852 + C69852 + C67856 * C8072) *
                         C152092) *
                        C152054 * C151956 -
                    ((C70609 + C70610 + C70611) * C152092 +
                     (C69604 + C69603 + C69602) * C96046) *
                        C152054 * C4107) *
                       C152224) *
                  C151823) /
                     (p * q * std::sqrt(p + q));
    d2ee[235] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C67859 * C142 + C67866 + C67866 + C152237 * C158 +
                      C67861 * C143 + C67867 + C67867 + C152201 * C159 +
                      C67863 * C144 + C67868 + C67868 + C67856 * C160) *
                         C96046 +
                     (C96563 + C96564 + C96565) * C152092) *
                        C152054 * C151869 * C1709 -
                    ((C69223 + C69224 + C69225) * C152092 +
                     (C68206 + C68205 + C68204) * C96046) *
                        C152054 * C151869 * C1710 +
                    ((C68209 + C68208 + C68207) * C96046 +
                     (C69874 + C69875 + C69876) * C152092) *
                        C152054 * C151869 * C1711 -
                    ((C70609 + C70610 + C70611) * C152092 +
                     (C69604 + C69603 + C69602) * C96046) *
                        C152054 * C151869 * C152224) *
                       C152158 +
                   (((C68210 + C68211 + C68212) * C96046 +
                     (C69226 + C69227 + C69228) * C152092) *
                        C152054 * C151869 * C1710 -
                    ((C96571 + C96570 + C96569) * C152092 +
                     (C67863 * C145 + C67875 + C67875 + C67856 * C161 +
                      C67861 * C144 + C67876 + C67876 + C152201 * C160 +
                      C67859 * C143 + C67877 + C67877 + C152237 * C159) *
                         C96046) *
                        C152054 * C151869 * C1709 -
                    ((C70397 + C70398 + C70399) * C152092 +
                     (C68215 + C68214 + C68213) * C96046) *
                        C152054 * C151869 * C1711 +
                    ((C70091 + C70090 + C70089) * C96046 +
                     (C67859 * C2054 + C70388 + C70388 + C152237 * C2062 +
                      C67861 * C2055 + C70389 + C70389 + C152201 * C2063 +
                      C67863 * C2056 + C70390 + C70390 + C67856 * C2064) *
                         C152092) *
                        C152054 * C151869 * C152224) *
                       C151834)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C67859 * C142 + C67866 + C67866 + C152237 * C158 +
                      C67861 * C143 + C67867 + C67867 + C152201 * C159 +
                      C67863 * C144 + C67868 + C67868 + C67856 * C160) *
                         C96046 +
                     (C96563 + C96564 + C96565) * C152092) *
                        C152054 * C151869 * C152172 -
                    ((C69223 + C69224 + C69225) * C152092 +
                     (C68206 + C68205 + C68204) * C96046) *
                        C152054 * C151869 * C151914) *
                       C739 +
                   (((C68210 + C68211 + C68212) * C96046 +
                     (C69226 + C69227 + C69228) * C152092) *
                        C152054 * C151869 * C151914 -
                    ((C96571 + C96570 + C96569) * C152092 +
                     (C67863 * C145 + C67875 + C67875 + C67856 * C161 +
                      C67861 * C144 + C67876 + C67876 + C152201 * C160 +
                      C67859 * C143 + C67877 + C67877 + C152237 * C159) *
                         C96046) *
                        C152054 * C151869 * C152172) *
                       C740 +
                   (((C67859 * C144 + C67878 + C67878 + C152237 * C160 +
                      C67861 * C145 + C67879 + C67879 + C152201 * C161 +
                      C67863 * C146 + C67880 + C67880 + C67856 * C162) *
                         C96046 +
                     (C96575 + C96576 + C96577) * C152092) *
                        C152054 * C151869 * C152172 -
                    ((C69229 + C69230 + C69231) * C152092 +
                     (C68218 + C68217 + C68216) * C96046) *
                        C152054 * C151869 * C151914) *
                       C741 +
                   (((C68685 + C68686 + C68687) * C96046 +
                     (C67859 * C1086 + C68885 + C68885 + C152237 * C1098 +
                      C67861 * C1087 + C68886 + C68886 + C152201 * C1099 +
                      C67863 * C1088 + C68887 + C68887 + C67856 * C1100) *
                         C152092) *
                        C152054 * C151869 * C151914 -
                    ((C67863 * C557 + C68884 + C68884 + C67856 * C581 +
                      C67861 * C555 + C68883 + C68883 + C152201 * C579 +
                      C67859 * C547 + C68882 + C68882 + C152237 * C571) *
                         C152092 +
                     (C67863 * C147 + C67887 + C67887 + C67856 * C163 +
                      C67861 * C146 + C67888 + C67888 + C152201 * C162 +
                      C67859 * C145 + C67889 + C67889 + C152237 * C161) *
                         C96046) *
                        C152054 * C151869 * C152172) *
                       C152218)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  (((((C67859 * C142 + C67866 + C67866 + C152237 * C158 +
                       C67861 * C143 + C67867 + C67867 + C152201 * C159 +
                       C67863 * C144 + C67868 + C67868 + C67856 * C160) *
                          C96046 +
                      (C96563 + C96564 + C96565) * C152092) *
                         C152054 * C2215 -
                     ((C96566 + C96567 + C96568) * C152092 +
                      (C96565 + C96564 + C96563) * C96046) *
                         C152054 * C2216 +
                     ((C96568 + C96567 + C96566) * C96046 +
                      (C99098 + C99099 + C99100) * C152092) *
                         C152054 * C152217) *
                        C152172 +
                    (((C69225 + C69224 + C69223) * C96046 +
                      (C69871 + C69872 + C69873) * C152092) *
                         C152054 * C2216 -
                     ((C69223 + C69224 + C69225) * C152092 +
                      (C68206 + C68205 + C68204) * C96046) *
                         C152054 * C2215 -
                     ((C71899 + C71900 + C71901) * C152092 +
                      (C69873 + C69872 + C69871) * C96046) *
                         C152054 * C152217) *
                        C151914) *
                       C152158 +
                   ((((C96569 + C96570 + C96571) * C96046 +
                      (C96572 + C96573 + C96574) * C152092) *
                         C152054 * C2216 -
                     ((C96571 + C96570 + C96569) * C152092 +
                      (C67863 * C145 + C67875 + C67875 + C67856 * C161 +
                       C67861 * C144 + C67876 + C67876 + C152201 * C160 +
                       C67859 * C143 + C67877 + C67877 + C152237 * C159) *
                          C96046) *
                         C152054 * C2215 -
                     ((C67863 * C2451 + C71686 + C71686 + C67856 * C2467 +
                       C67861 * C2452 + C71685 + C71685 + C152201 * C2468 +
                       C67859 * C2453 + C71684 + C71684 + C152237 * C2469) *
                          C152092 +
                      (C96574 + C96573 + C96572) * C96046) *
                         C152054 * C152217) *
                        C152172 +
                    (((C68210 + C68211 + C68212) * C96046 +
                      (C69226 + C69227 + C69228) * C152092) *
                         C152054 * C2215 -
                     ((C71487 + C71488 + C71489) * C152092 +
                      (C69228 + C69227 + C69226) * C96046) *
                         C152054 * C2216 +
                     ((C71489 + C71488 + C71487) * C96046 +
                      (C67859 * C2956 + C71687 + C71687 + C152237 * C2964 +
                       C67861 * C2957 + C71688 + C71688 + C152201 * C2965 +
                       C67863 * C2958 + C71689 + C71689 + C67856 * C2966) *
                          C152092) *
                         C152054 * C152217) *
                        C151914) *
                       C151834)) /
                     (p * q * std::sqrt(p + q));
    d2ee[236] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C67859 * C142 + C67866 + C67866 + C152237 * C158 +
                      C67861 * C143 + C67867 + C67867 + C152201 * C159 +
                      C67863 * C144 + C67868 + C67868 + C67856 * C160) *
                         C96046 +
                     (C96563 + C96564 + C96565) * C152092) *
                        C152054 * C152173 -
                    ((C96566 + C96567 + C96568) * C152092 +
                     (C96565 + C96564 + C96563) * C96046) *
                        C152054 * C151956) *
                       C1709 +
                   (((C69225 + C69224 + C69223) * C96046 +
                     (C69871 + C69872 + C69873) * C152092) *
                        C152054 * C151956 -
                    ((C69223 + C69224 + C69225) * C152092 +
                     (C68206 + C68205 + C68204) * C96046) *
                        C152054 * C152173) *
                       C1710 +
                   (((C68209 + C68208 + C68207) * C96046 +
                     (C69874 + C69875 + C69876) * C152092) *
                        C152054 * C152173 -
                    ((C69877 + C69878 + C69879) * C152092 +
                     (C69876 + C69875 + C69874) * C96046) *
                        C152054 * C151956) *
                       C1711 +
                   (((C70611 + C70610 + C70609) * C96046 +
                     (C67859 * C8064 + C69850 + C69850 + C152237 * C8070 +
                      C67861 * C8065 + C69851 + C69851 + C152201 * C8071 +
                      C67863 * C8066 + C69852 + C69852 + C67856 * C8072) *
                         C152092) *
                        C152054 * C151956 -
                    ((C70609 + C70610 + C70611) * C152092 +
                     (C69604 + C69603 + C69602) * C96046) *
                        C152054 * C152173) *
                       C152224) *
                  C151823) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C67859 * C142 + C67866 + C67866 + C152237 * C158 +
                       C67861 * C143 + C67867 + C67867 + C152201 * C159 +
                       C67863 * C144 + C67868 + C67868 + C67856 * C160) *
                          C96046 +
                      (C96563 + C96564 + C96565) * C152092) *
                         C152054 * C152173 -
                     ((C96566 + C96567 + C96568) * C152092 +
                      (C96565 + C96564 + C96563) * C96046) *
                         C152054 * C151956) *
                        C152172 +
                    (((C69225 + C69224 + C69223) * C96046 +
                      (C69871 + C69872 + C69873) * C152092) *
                         C152054 * C151956 -
                     ((C69223 + C69224 + C69225) * C152092 +
                      (C68206 + C68205 + C68204) * C96046) *
                         C152054 * C152173) *
                        C151914) *
                       C335 +
                   ((((C96569 + C96570 + C96571) * C96046 +
                      (C96572 + C96573 + C96574) * C152092) *
                         C152054 * C151956 -
                     ((C96571 + C96570 + C96569) * C152092 +
                      (C67863 * C145 + C67875 + C67875 + C67856 * C161 +
                       C67861 * C144 + C67876 + C67876 + C152201 * C160 +
                       C67859 * C143 + C67877 + C67877 + C152237 * C159) *
                          C96046) *
                         C152054 * C152173) *
                        C152172 +
                    (((C68210 + C68211 + C68212) * C96046 +
                      (C69226 + C69227 + C69228) * C152092) *
                         C152054 * C152173 -
                     ((C71487 + C71488 + C71489) * C152092 +
                      (C69228 + C69227 + C69226) * C96046) *
                         C152054 * C151956) *
                        C151914) *
                       C336 +
                   ((((C67859 * C144 + C67878 + C67878 + C152237 * C160 +
                       C67861 * C145 + C67879 + C67879 + C152201 * C161 +
                       C67863 * C146 + C67880 + C67880 + C67856 * C162) *
                          C96046 +
                      (C96575 + C96576 + C96577) * C152092) *
                         C152054 * C152173 -
                     ((C96578 + C96579 + C96580) * C152092 +
                      (C96577 + C96576 + C96575) * C96046) *
                         C152054 * C151956) *
                        C152172 +
                    (((C69231 + C69230 + C69229) * C96046 +
                      (C67859 * C1532 + C68473 + C68473 + C152237 * C1556 +
                       C67861 * C1531 + C68474 + C68474 + C152201 * C1555 +
                       C67863 * C2677 + C68475 + C68475 + C67856 * C2679) *
                          C152092) *
                         C152054 * C151956 -
                     ((C69229 + C69230 + C69231) * C152092 +
                      (C68218 + C68217 + C68216) * C96046) *
                         C152054 * C152173) *
                        C151914) *
                       C152208)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C67859 * C142 + C67866 + C67866 + C152237 * C158 +
                      C67861 * C143 + C67867 + C67867 + C152201 * C159 +
                      C67863 * C144 + C67868 + C67868 + C67856 * C160) *
                         C96046 +
                     (C96563 + C96564 + C96565) * C152092) *
                        C152054 * C2814 -
                    ((C96566 + C96567 + C96568) * C152092 +
                     (C96565 + C96564 + C96563) * C96046) *
                        C152054 * C2815 +
                    ((C96568 + C96567 + C96566) * C96046 +
                     (C99098 + C99099 + C99100) * C152092) *
                        C152054 * C2816 -
                    ((C99101 + C99102 + C99103) * C152092 +
                     (C99100 + C99099 + C99098) * C96046) *
                        C152054 * C152230) *
                       C152172 +
                   (((C69225 + C69224 + C69223) * C96046 +
                     (C69871 + C69872 + C69873) * C152092) *
                        C152054 * C2815 -
                    ((C69223 + C69224 + C69225) * C152092 +
                     (C68206 + C68205 + C68204) * C96046) *
                        C152054 * C2814 -
                    ((C71899 + C71900 + C71901) * C152092 +
                     (C69873 + C69872 + C69871) * C96046) *
                        C152054 * C2816 +
                    ((C71901 + C71900 + C71899) * C96046 +
                     (C67859 * C9426 + C71179 + C71179 + C152237 * C9432 +
                      C67861 * C9427 + C71180 + C71180 + C152201 * C9433 +
                      C67863 * C9428 + C71181 + C71181 + C67856 * C9434) *
                         C152092) *
                        C152054 * C152230) *
                       C151914) *
                  C151823) /
                     (p * q * std::sqrt(p + q));
    d2ee[237] += (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                      (((C67859 * C142 + C67866 + C67866 + C152237 * C158 +
                         C67861 * C143 + C67867 + C67867 + C152201 * C159 +
                         C67863 * C144 + C67868 + C67868 + C67856 * C160) *
                            C96046 +
                        (C67859 * C550 + C68445 + C68445 + C152237 * C574 +
                         C67861 * C549 + C68444 + C68444 + C152201 * C573 +
                         C67863 * C548 + C68443 + C68443 + C67856 * C572) *
                            C152092) *
                           C152054 * C151869 * C151851 * C129 -
                       ((C67863 * C547 + C68454 + C68454 + C67856 * C571 +
                         C67861 * C548 + C68453 + C68453 + C152201 * C572 +
                         C67859 * C549 + C68452 + C68452 + C152237 * C573) *
                            C152092 +
                        (C67863 * C145 + C67875 + C67875 + C67856 * C161 +
                         C67861 * C144 + C67876 + C67876 + C152201 * C160 +
                         C67859 * C143 + C67877 + C67877 + C152237 * C159) *
                            C96046) *
                           C152054 * C151869 * C151851 * C130 +
                       ((C67859 * C144 + C67878 + C67878 + C152237 * C160 +
                         C67861 * C145 + C67879 + C67879 + C152201 * C161 +
                         C67863 * C146 + C67880 + C67880 + C67856 * C162) *
                            C96046 +
                        (C67859 * C548 + C68469 + C68469 + C152237 * C572 +
                         C67861 * C547 + C68468 + C68468 + C152201 * C571 +
                         C67863 * C555 + C68467 + C68467 + C67856 * C579) *
                            C152092) *
                           C152054 * C151869 * C151851 * C131 -
                       ((C67863 * C557 + C68884 + C68884 + C67856 * C581 +
                         C67861 * C555 + C68883 + C68883 + C152201 * C579 +
                         C67859 * C547 + C68882 + C68882 + C152237 * C571) *
                            C152092 +
                        (C67863 * C147 + C67887 + C67887 + C67856 * C163 +
                         C67861 * C146 + C67888 + C67888 + C152201 * C162 +
                         C67859 * C145 + C67889 + C67889 + C152237 * C161) *
                            C96046) *
                           C152054 * C151869 * C151851 * C132 +
                       ((C67859 * C146 + C67890 + C67890 + C152237 * C162 +
                         C67861 * C147 + C67891 + C67891 + C152201 * C163 +
                         C67863 * C148 + C67892 + C67892 + C67856 * C164) *
                            C96046 +
                        (C67859 * C555 + C96049 + C96049 + C152237 * C579 +
                         C67861 * C557 + C96050 + C96050 + C152201 * C581 +
                         C67863 * C882 + C96051 + C96051 + C67856 * C884) *
                            C152092) *
                           C152054 * C151869 * C151851 * C133) +
                  std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                      ((((C67859 * C142 + C67866 + C67866 + C152237 * C158 +
                          C67861 * C143 + C67867 + C67867 + C152201 * C159 +
                          C67863 * C144 + C67868 + C67868 + C67856 * C160) *
                             C96046 +
                         (C67859 * C550 + C68445 + C68445 + C152237 * C574 +
                          C67861 * C549 + C68444 + C68444 + C152201 * C573 +
                          C67863 * C548 + C68443 + C68443 + C67856 * C572) *
                             C152092) *
                            C152054 * C151869 * C152258 -
                        ((C69223 + C69224 + C69225) * C152092 +
                         (C68206 + C68205 + C68204) * C96046) *
                            C152054 * C151869 * C152244 +
                        ((C68209 + C68208 + C68207) * C96046 +
                         (C69874 + C69875 + C69876) * C152092) *
                            C152054 * C151869 * C152214) *
                           C335 +
                       (((C68210 + C68211 + C68212) * C96046 +
                         (C69226 + C69227 + C69228) * C152092) *
                            C152054 * C151869 * C152244 -
                        ((C67863 * C547 + C68454 + C68454 + C67856 * C571 +
                          C67861 * C548 + C68453 + C68453 + C152201 * C572 +
                          C67859 * C549 + C68452 + C68452 + C152237 * C573) *
                             C152092 +
                         (C67863 * C145 + C67875 + C67875 + C67856 * C161 +
                          C67861 * C144 + C67876 + C67876 + C152201 * C160 +
                          C67859 * C143 + C67877 + C67877 + C152237 * C159) *
                             C96046) *
                            C152054 * C151869 * C152258 -
                        ((C70397 + C70398 + C70399) * C152092 +
                         (C68215 + C68214 + C68213) * C96046) *
                            C152054 * C151869 * C152214) *
                           C336 +
                       (((C67859 * C144 + C67878 + C67878 + C152237 * C160 +
                          C67861 * C145 + C67879 + C67879 + C152201 * C161 +
                          C67863 * C146 + C67880 + C67880 + C67856 * C162) *
                             C96046 +
                         (C67859 * C548 + C68469 + C68469 + C152237 * C572 +
                          C67861 * C547 + C68468 + C68468 + C152201 * C571 +
                          C67863 * C555 + C68467 + C68467 + C67856 * C579) *
                             C152092) *
                            C152054 * C151869 * C152258 -
                        ((C69229 + C69230 + C69231) * C152092 +
                         (C68218 + C68217 + C68216) * C96046) *
                            C152054 * C151869 * C152244 +
                        ((C68221 + C68220 + C68219) * C96046 +
                         (C67859 * C1536 + C69202 + C69202 + C152237 * C1560 +
                          C67861 * C1535 + C69203 + C69203 + C152201 * C1559 +
                          C67863 * C1916 + C69204 + C69204 + C67856 * C1918) *
                             C152092) *
                            C152054 * C151869 * C152214) *
                           C152208)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C67859 * C142 + C67866 + C67866 + C152237 * C158 +
                      C67861 * C143 + C67867 + C67867 + C152201 * C159 +
                      C67863 * C144 + C67868 + C67868 + C67856 * C160) *
                         C96046 +
                     (C96563 + C96564 + C96565) * C152092) *
                        C152054 * C152259 -
                    ((C96566 + C96567 + C96568) * C152092 +
                     (C96565 + C96564 + C96563) * C96046) *
                        C152054 * C152246 +
                    ((C96568 + C96567 + C96566) * C96046 +
                     (C67859 * C2454 + C71175 + C71175 + C152237 * C2470 +
                      C67861 * C2453 + C71174 + C71174 + C152201 * C2469 +
                      C67863 * C2452 + C71173 + C71173 + C67856 * C2468) *
                         C152092) *
                        C152054 * C152217) *
                       C151851 * C335 +
                   (((C96569 + C96570 + C96571) * C96046 +
                     (C96572 + C96573 + C96574) * C152092) *
                        C152054 * C152246 -
                    ((C96571 + C96570 + C96569) * C152092 +
                     (C67863 * C145 + C67875 + C67875 + C67856 * C161 +
                      C67861 * C144 + C67876 + C67876 + C152201 * C160 +
                      C67859 * C143 + C67877 + C67877 + C152237 * C159) *
                         C96046) *
                        C152054 * C152259 -
                    ((C67863 * C2451 + C71686 + C71686 + C67856 * C2467 +
                      C67861 * C2452 + C71685 + C71685 + C152201 * C2468 +
                      C67859 * C2453 + C71684 + C71684 + C152237 * C2469) *
                         C152092 +
                     (C96574 + C96573 + C96572) * C96046) *
                        C152054 * C152217) *
                       C151851 * C336 +
                   (((C67859 * C144 + C67878 + C67878 + C152237 * C160 +
                      C67861 * C145 + C67879 + C67879 + C152201 * C161 +
                      C67863 * C146 + C67880 + C67880 + C67856 * C162) *
                         C96046 +
                     (C96575 + C96576 + C96577) * C152092) *
                        C152054 * C152259 -
                    ((C96578 + C96579 + C96580) * C152092 +
                     (C96577 + C96576 + C96575) * C96046) *
                        C152054 * C152246 +
                    ((C96580 + C96579 + C96578) * C96046 +
                     (C67859 * C2452 + C96524 + C96524 + C152237 * C2468 +
                      C67861 * C2451 + C96525 + C96525 + C152201 * C2467 +
                      C67863 * C2818 + C96526 + C96526 + C67856 * C2820) *
                         C152092) *
                        C152054 * C152217) *
                       C151851 * C152208)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  ((((C67859 * C142 + C67866 + C67866 + C152237 * C158 +
                      C67861 * C143 + C67867 + C67867 + C152201 * C159 +
                      C67863 * C144 + C67868 + C67868 + C67856 * C160) *
                         C96046 +
                     (C96563 + C96564 + C96565) * C152092) *
                        C152054 * C151869 * C1259 -
                    ((C69223 + C69224 + C69225) * C152092 +
                     (C68206 + C68205 + C68204) * C96046) *
                        C152054 * C151869 * C1260 +
                    ((C68209 + C68208 + C68207) * C96046 +
                     (C69874 + C69875 + C69876) * C152092) *
                        C152054 * C151869 * C152214) *
                       C152255 +
                   (((C68210 + C68211 + C68212) * C96046 +
                     (C69226 + C69227 + C69228) * C152092) *
                        C152054 * C151869 * C1260 -
                    ((C96571 + C96570 + C96569) * C152092 +
                     (C67863 * C145 + C67875 + C67875 + C67856 * C161 +
                      C67861 * C144 + C67876 + C67876 + C152201 * C160 +
                      C67859 * C143 + C67877 + C67877 + C152237 * C159) *
                         C96046) *
                        C152054 * C151869 * C1259 -
                    ((C70397 + C70398 + C70399) * C152092 +
                     (C68215 + C68214 + C68213) * C96046) *
                        C152054 * C151869 * C152214) *
                       C152240 +
                   (((C67859 * C144 + C67878 + C67878 + C152237 * C160 +
                      C67861 * C145 + C67879 + C67879 + C152201 * C161 +
                      C67863 * C146 + C67880 + C67880 + C67856 * C162) *
                         C96046 +
                     (C96575 + C96576 + C96577) * C152092) *
                        C152054 * C151869 * C1259 -
                    ((C69229 + C69230 + C69231) * C152092 +
                     (C68218 + C68217 + C68216) * C96046) *
                        C152054 * C151869 * C1260 +
                    ((C68221 + C68220 + C68219) * C96046 +
                     (C67859 * C1536 + C69202 + C69202 + C152237 * C1560 +
                      C67861 * C1535 + C69203 + C69203 + C152201 * C1559 +
                      C67863 * C1916 + C69204 + C69204 + C67856 * C1918) *
                         C152092) *
                        C152054 * C151869 * C152214) *
                       C152208)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  (((C67859 * C142 + C67866 + C67866 + C152237 * C158 +
                     C67861 * C143 + C67867 + C67867 + C152201 * C159 +
                     C67863 * C144 + C67868 + C67868 + C67856 * C160) *
                        C96046 +
                    (C96563 + C96564 + C96565) * C152092) *
                       C152054 * C151869 * C1347 -
                   ((C69223 + C69224 + C69225) * C152092 +
                    (C68206 + C68205 + C68204) * C96046) *
                       C152054 * C151869 * C1348 +
                   ((C68209 + C68208 + C68207) * C96046 +
                    (C69874 + C69875 + C69876) * C152092) *
                       C152054 * C151869 * C1349 -
                   ((C70609 + C70610 + C70611) * C152092 +
                    (C69604 + C69603 + C69602) * C96046) *
                       C152054 * C151869 * C1350 +
                   ((C69607 + C69606 + C69605) * C96046 +
                    (C67859 * C8841 + C70600 + C70600 + C152237 * C8847 +
                     C67861 * C8842 + C70601 + C70601 + C152201 * C8848 +
                     C67863 * C8843 + C70602 + C70602 + C67856 * C8849) *
                        C152092) *
                       C152054 * C151869 * C1351) *
                  C151823) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C67859 * C142 + C67866 + C67866 + C152237 * C158 +
                      C67861 * C143 + C67867 + C67867 + C152201 * C159 +
                      C67863 * C144 + C67868 + C67868 + C67856 * C160) *
                         C96046 +
                     (C96563 + C96564 + C96565) * C152092) *
                        C152054 * C152259 -
                    ((C96566 + C96567 + C96568) * C152092 +
                     (C96565 + C96564 + C96563) * C96046) *
                        C152054 * C152246 +
                    ((C96568 + C96567 + C96566) * C96046 +
                     (C67859 * C2454 + C71175 + C71175 + C152237 * C2470 +
                      C67861 * C2453 + C71174 + C71174 + C152201 * C2469 +
                      C67863 * C2452 + C71173 + C71173 + C67856 * C2468) *
                         C152092) *
                        C152054 * C152217) *
                       C1259 +
                   (((C69225 + C69224 + C69223) * C96046 +
                     (C69871 + C69872 + C69873) * C152092) *
                        C152054 * C152246 -
                    ((C69223 + C69224 + C69225) * C152092 +
                     (C68206 + C68205 + C68204) * C96046) *
                        C152054 * C152259 -
                    ((C71899 + C71900 + C71901) * C152092 +
                     (C69873 + C69872 + C69871) * C96046) *
                        C152054 * C152217) *
                       C1260 +
                   (((C68209 + C68208 + C68207) * C96046 +
                     (C69874 + C69875 + C69876) * C152092) *
                        C152054 * C152259 -
                    ((C69877 + C69878 + C69879) * C152092 +
                     (C69876 + C69875 + C69874) * C96046) *
                        C152054 * C152246 +
                    ((C69879 + C69878 + C69877) * C96046 +
                     (C67859 * C10149 + C71890 + C71890 + C152237 * C10155 +
                      C67861 * C10150 + C71891 + C71891 + C152201 * C10156 +
                      C67863 * C10151 + C71892 + C71892 + C67856 * C10157) *
                         C152092) *
                        C152054 * C152217) *
                       C152214) *
                  C151823) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C67859 * C142 + C67866 + C67866 + C152237 * C158 +
                      C67861 * C143 + C67867 + C67867 + C152201 * C159 +
                      C67863 * C144 + C67868 + C67868 + C67856 * C160) *
                         C96046 +
                     (C96563 + C96564 + C96565) * C152092) *
                        C152054 * C2215 -
                    ((C96566 + C96567 + C96568) * C152092 +
                     (C96565 + C96564 + C96563) * C96046) *
                        C152054 * C2216 +
                    ((C96568 + C96567 + C96566) * C96046 +
                     (C67859 * C2454 + C71175 + C71175 + C152237 * C2470 +
                      C67861 * C2453 + C71174 + C71174 + C152201 * C2469 +
                      C67863 * C2452 + C71173 + C71173 + C67856 * C2468) *
                         C152092) *
                        C152054 * C152217) *
                       C151851 * C152255 +
                   (((C96569 + C96570 + C96571) * C96046 +
                     (C96572 + C96573 + C96574) * C152092) *
                        C152054 * C2216 -
                    ((C96571 + C96570 + C96569) * C152092 +
                     (C67863 * C145 + C67875 + C67875 + C67856 * C161 +
                      C67861 * C144 + C67876 + C67876 + C152201 * C160 +
                      C67859 * C143 + C67877 + C67877 + C152237 * C159) *
                         C96046) *
                        C152054 * C2215 -
                    ((C67863 * C2451 + C71686 + C71686 + C67856 * C2467 +
                      C67861 * C2452 + C71685 + C71685 + C152201 * C2468 +
                      C67859 * C2453 + C71684 + C71684 + C152237 * C2469) *
                         C152092 +
                     (C96574 + C96573 + C96572) * C96046) *
                        C152054 * C152217) *
                       C151851 * C152240 +
                   (((C67859 * C144 + C67878 + C67878 + C152237 * C160 +
                      C67861 * C145 + C67879 + C67879 + C152201 * C161 +
                      C67863 * C146 + C67880 + C67880 + C67856 * C162) *
                         C96046 +
                     (C96575 + C96576 + C96577) * C152092) *
                        C152054 * C2215 -
                    ((C96578 + C96579 + C96580) * C152092 +
                     (C96577 + C96576 + C96575) * C96046) *
                        C152054 * C2216 +
                    ((C96580 + C96579 + C96578) * C96046 +
                     (C67859 * C2452 + C96524 + C96524 + C152237 * C2468 +
                      C67861 * C2451 + C96525 + C96525 + C152201 * C2467 +
                      C67863 * C2818 + C96526 + C96526 + C67856 * C2820) *
                         C152092) *
                        C152054 * C152217) *
                       C151851 * C152208)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C67859 * C142 + C67866 + C67866 + C152237 * C158 +
                      C67861 * C143 + C67867 + C67867 + C152201 * C159 +
                      C67863 * C144 + C67868 + C67868 + C67856 * C160) *
                         C96046 +
                     (C96563 + C96564 + C96565) * C152092) *
                        C152054 * C2215 -
                    ((C96566 + C96567 + C96568) * C152092 +
                     (C96565 + C96564 + C96563) * C96046) *
                        C152054 * C2216 +
                    ((C96568 + C96567 + C96566) * C96046 +
                     (C67859 * C2454 + C71175 + C71175 + C152237 * C2470 +
                      C67861 * C2453 + C71174 + C71174 + C152201 * C2469 +
                      C67863 * C2452 + C71173 + C71173 + C67856 * C2468) *
                         C152092) *
                        C152054 * C152217) *
                       C152258 +
                   (((C69225 + C69224 + C69223) * C96046 +
                     (C69871 + C69872 + C69873) * C152092) *
                        C152054 * C2216 -
                    ((C69223 + C69224 + C69225) * C152092 +
                     (C68206 + C68205 + C68204) * C96046) *
                        C152054 * C2215 -
                    ((C71899 + C71900 + C71901) * C152092 +
                     (C69873 + C69872 + C69871) * C96046) *
                        C152054 * C152217) *
                       C152244 +
                   (((C68209 + C68208 + C68207) * C96046 +
                     (C69874 + C69875 + C69876) * C152092) *
                        C152054 * C2215 -
                    ((C69877 + C69878 + C69879) * C152092 +
                     (C69876 + C69875 + C69874) * C96046) *
                        C152054 * C2216 +
                    ((C69879 + C69878 + C69877) * C96046 +
                     (C67859 * C10149 + C71890 + C71890 + C152237 * C10155 +
                      C67861 * C10150 + C71891 + C71891 + C152201 * C10156 +
                      C67863 * C10151 + C71892 + C71892 + C67856 * C10157) *
                         C152092) *
                        C152054 * C152217) *
                       C152214) *
                  C151823) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
                  (((C67859 * C142 + C67866 + C67866 + C152237 * C158 +
                     C67861 * C143 + C67867 + C67867 + C152201 * C159 +
                     C67863 * C144 + C67868 + C67868 + C67856 * C160) *
                        C96046 +
                    (C96563 + C96564 + C96565) * C152092) *
                       C152054 * C2446 -
                   ((C96566 + C96567 + C96568) * C152092 +
                    (C96565 + C96564 + C96563) * C96046) *
                       C152054 * C2447 +
                   ((C96568 + C96567 + C96566) * C96046 +
                    (C99098 + C99099 + C99100) * C152092) *
                       C152054 * C2448 -
                   ((C99101 + C99102 + C99103) * C152092 +
                    (C99100 + C99099 + C99098) * C96046) *
                       C152054 * C2449 +
                   ((C99103 + C99102 + C99101) * C96046 +
                    (C67859 * C17750 + C99083 + C99083 + C152237 * C17756 +
                     C67861 * C17751 + C99084 + C99084 + C152201 * C17757 +
                     C67863 * C17752 + C99085 + C99085 + C67856 * C17758) *
                        C152092) *
                       C152054 * C2450) *
                  C151851 * C151823) /
                     (p * q * std::sqrt(p + q));
    d2ee[238] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C67859 * C142 + C67866 + C67866 + C152237 * C158 +
                       C67861 * C143 + C67867 + C67867 + C152201 * C159 +
                       C67863 * C144 + C67868 + C67868 + C67856 * C160) *
                          C96046 +
                      (C96563 + C96564 + C96565) * C152092) *
                         C152054 * C152173 -
                     ((C96566 + C96567 + C96568) * C152092 +
                      (C96565 + C96564 + C96563) * C96046) *
                         C152054 * C151956) *
                        C1259 +
                    (((C69225 + C69224 + C69223) * C96046 +
                      (C69871 + C69872 + C69873) * C152092) *
                         C152054 * C151956 -
                     ((C69223 + C69224 + C69225) * C152092 +
                      (C68206 + C68205 + C68204) * C96046) *
                         C152054 * C152173) *
                        C1260 +
                    (((C68209 + C68208 + C68207) * C96046 +
                      (C69874 + C69875 + C69876) * C152092) *
                         C152054 * C152173 -
                     ((C69877 + C69878 + C69879) * C152092 +
                      (C69876 + C69875 + C69874) * C96046) *
                         C152054 * C151956) *
                        C152214) *
                       C152158 +
                   ((((C96569 + C96570 + C96571) * C96046 +
                      (C96572 + C96573 + C96574) * C152092) *
                         C152054 * C151956 -
                     ((C96571 + C96570 + C96569) * C152092 +
                      (C67863 * C145 + C67875 + C67875 + C67856 * C161 +
                       C67861 * C144 + C67876 + C67876 + C152201 * C160 +
                       C67859 * C143 + C67877 + C67877 + C152237 * C159) *
                          C96046) *
                         C152054 * C152173) *
                        C1259 +
                    (((C68210 + C68211 + C68212) * C96046 +
                      (C69226 + C69227 + C69228) * C152092) *
                         C152054 * C152173 -
                     ((C71487 + C71488 + C71489) * C152092 +
                      (C69228 + C69227 + C69226) * C96046) *
                         C152054 * C151956) *
                        C1260 +
                    (((C70399 + C70398 + C70397) * C96046 +
                      (C67859 * C1540 + C71478 + C71478 + C152237 * C1564 +
                       C67861 * C1541 + C71479 + C71479 + C152201 * C1565 +
                       C67863 * C1542 + C71480 + C71480 + C67856 * C1566) *
                          C152092) *
                         C152054 * C151956 -
                     ((C70397 + C70398 + C70399) * C152092 +
                      (C68215 + C68214 + C68213) * C96046) *
                         C152054 * C152173) *
                        C152214) *
                       C151834)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C67859 * C142 + C67866 + C67866 + C152237 * C158 +
                      C67861 * C143 + C67867 + C67867 + C152201 * C159 +
                      C67863 * C144 + C67868 + C67868 + C67856 * C160) *
                         C96046 +
                     (C96563 + C96564 + C96565) * C152092) *
                        C152054 * C152173 -
                    ((C96566 + C96567 + C96568) * C152092 +
                     (C96565 + C96564 + C96563) * C96046) *
                        C152054 * C151956) *
                       C151851 * C739 +
                   (((C96569 + C96570 + C96571) * C96046 +
                     (C96572 + C96573 + C96574) * C152092) *
                        C152054 * C151956 -
                    ((C96571 + C96570 + C96569) * C152092 +
                     (C67863 * C145 + C67875 + C67875 + C67856 * C161 +
                      C67861 * C144 + C67876 + C67876 + C152201 * C160 +
                      C67859 * C143 + C67877 + C67877 + C152237 * C159) *
                         C96046) *
                        C152054 * C152173) *
                       C151851 * C740 +
                   (((C67859 * C144 + C67878 + C67878 + C152237 * C160 +
                      C67861 * C145 + C67879 + C67879 + C152201 * C161 +
                      C67863 * C146 + C67880 + C67880 + C67856 * C162) *
                         C96046 +
                     (C96575 + C96576 + C96577) * C152092) *
                        C152054 * C152173 -
                    ((C96578 + C96579 + C96580) * C152092 +
                     (C96577 + C96576 + C96575) * C96046) *
                        C152054 * C151956) *
                       C151851 * C741 +
                   (((C96984 + C96985 + C96986) * C96046 +
                     (C67859 * C554 + C96975 + C96975 + C152237 * C578 +
                      C67861 * C556 + C96976 + C96976 + C152201 * C580 +
                      C67863 * C558 + C96977 + C96977 + C67856 * C582) *
                         C152092) *
                        C152054 * C151956 -
                    ((C96986 + C96985 + C96984) * C152092 +
                     (C67863 * C147 + C67887 + C67887 + C67856 * C163 +
                      C67861 * C146 + C67888 + C67888 + C152201 * C162 +
                      C67859 * C145 + C67889 + C67889 + C152237 * C161) *
                         C96046) *
                        C152054 * C152173) *
                       C151851 * C152218)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C67859 * C142 + C67866 + C67866 + C152237 * C158 +
                      C67861 * C143 + C67867 + C67867 + C152201 * C159 +
                      C67863 * C144 + C67868 + C67868 + C67856 * C160) *
                         C96046 +
                     (C96563 + C96564 + C96565) * C152092) *
                        C152054 * C2814 -
                    ((C96566 + C96567 + C96568) * C152092 +
                     (C96565 + C96564 + C96563) * C96046) *
                        C152054 * C2815 +
                    ((C96568 + C96567 + C96566) * C96046 +
                     (C99098 + C99099 + C99100) * C152092) *
                        C152054 * C2816 -
                    ((C99101 + C99102 + C99103) * C152092 +
                     (C99100 + C99099 + C99098) * C96046) *
                        C152054 * C152230) *
                       C151851 * C152158 +
                   (((C96569 + C96570 + C96571) * C96046 +
                     (C96572 + C96573 + C96574) * C152092) *
                        C152054 * C2815 -
                    ((C96571 + C96570 + C96569) * C152092 +
                     (C67863 * C145 + C67875 + C67875 + C67856 * C161 +
                      C67861 * C144 + C67876 + C67876 + C152201 * C160 +
                      C67859 * C143 + C67877 + C67877 + C152237 * C159) *
                         C96046) *
                        C152054 * C2814 -
                    ((C99603 + C99604 + C99605) * C152092 +
                     (C96574 + C96573 + C96572) * C96046) *
                        C152054 * C2816 +
                    ((C99605 + C99604 + C99603) * C96046 +
                     (C67859 * C2456 + C99594 + C99594 + C152237 * C2472 +
                      C67861 * C2457 + C99595 + C99595 + C152201 * C2473 +
                      C67863 * C2458 + C99596 + C99596 + C67856 * C2474) *
                         C152092) *
                        C152054 * C152230) *
                       C151851 * C151834)) /
                     (p * q * std::sqrt(p + q));
    d2ee[239] += (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C67859 * C142 + C67866 + C67866 + C152237 * C158 +
                      C67861 * C143 + C67867 + C67867 + C152201 * C159 +
                      C67863 * C144 + C67868 + C67868 + C67856 * C160) *
                         C96046 +
                     (C67859 * C550 + C68445 + C68445 + C152237 * C574 +
                      C67861 * C549 + C68444 + C68444 + C152201 * C573 +
                      C67863 * C548 + C68443 + C68443 + C67856 * C572) *
                         C152092) *
                        C152054 * C151869 * C152258 -
                    ((C69223 + C69224 + C69225) * C152092 +
                     (C68206 + C68205 + C68204) * C96046) *
                        C152054 * C151869 * C152244 +
                    ((C68209 + C68208 + C68207) * C96046 +
                     (C69874 + C69875 + C69876) * C152092) *
                        C152054 * C151869 * C152214) *
                       C335 +
                   (((C68210 + C68211 + C68212) * C96046 +
                     (C69226 + C69227 + C69228) * C152092) *
                        C152054 * C151869 * C152244 -
                    ((C67863 * C547 + C68454 + C68454 + C67856 * C571 +
                      C67861 * C548 + C68453 + C68453 + C152201 * C572 +
                      C67859 * C549 + C68452 + C68452 + C152237 * C573) *
                         C152092 +
                     (C67863 * C145 + C67875 + C67875 + C67856 * C161 +
                      C67861 * C144 + C67876 + C67876 + C152201 * C160 +
                      C67859 * C143 + C67877 + C67877 + C152237 * C159) *
                         C96046) *
                        C152054 * C151869 * C152258 -
                    ((C70397 + C70398 + C70399) * C152092 +
                     (C68215 + C68214 + C68213) * C96046) *
                        C152054 * C151869 * C152214) *
                       C336 +
                   (((C67859 * C144 + C67878 + C67878 + C152237 * C160 +
                      C67861 * C145 + C67879 + C67879 + C152201 * C161 +
                      C67863 * C146 + C67880 + C67880 + C67856 * C162) *
                         C96046 +
                     (C67859 * C548 + C68469 + C68469 + C152237 * C572 +
                      C67861 * C547 + C68468 + C68468 + C152201 * C571 +
                      C67863 * C555 + C68467 + C68467 + C67856 * C579) *
                         C152092) *
                        C152054 * C151869 * C152258 -
                    ((C69229 + C69230 + C69231) * C152092 +
                     (C68218 + C68217 + C68216) * C96046) *
                        C152054 * C151869 * C152244 +
                    ((C68221 + C68220 + C68219) * C96046 +
                     (C67859 * C1536 + C69202 + C69202 + C152237 * C1560 +
                      C67861 * C1535 + C69203 + C69203 + C152201 * C1559 +
                      C67863 * C1916 + C69204 + C69204 + C67856 * C1918) *
                         C152092) *
                        C152054 * C151869 * C152214) *
                       C152208)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  (((C67859 * C142 + C67866 + C67866 + C152237 * C158 +
                     C67861 * C143 + C67867 + C67867 + C152201 * C159 +
                     C67863 * C144 + C67868 + C67868 + C67856 * C160) *
                        C96046 +
                    (C67859 * C550 + C68445 + C68445 + C152237 * C574 +
                     C67861 * C549 + C68444 + C68444 + C152201 * C573 +
                     C67863 * C548 + C68443 + C68443 + C67856 * C572) *
                        C152092) *
                       C152054 * C151869 * C151851 * C129 -
                   ((C67863 * C547 + C68454 + C68454 + C67856 * C571 +
                     C67861 * C548 + C68453 + C68453 + C152201 * C572 +
                     C67859 * C549 + C68452 + C68452 + C152237 * C573) *
                        C152092 +
                    (C67863 * C145 + C67875 + C67875 + C67856 * C161 +
                     C67861 * C144 + C67876 + C67876 + C152201 * C160 +
                     C67859 * C143 + C67877 + C67877 + C152237 * C159) *
                        C96046) *
                       C152054 * C151869 * C151851 * C130 +
                   ((C67859 * C144 + C67878 + C67878 + C152237 * C160 +
                     C67861 * C145 + C67879 + C67879 + C152201 * C161 +
                     C67863 * C146 + C67880 + C67880 + C67856 * C162) *
                        C96046 +
                    (C67859 * C548 + C68469 + C68469 + C152237 * C572 +
                     C67861 * C547 + C68468 + C68468 + C152201 * C571 +
                     C67863 * C555 + C68467 + C68467 + C67856 * C579) *
                        C152092) *
                       C152054 * C151869 * C151851 * C131 -
                   ((C67863 * C557 + C68884 + C68884 + C67856 * C581 +
                     C67861 * C555 + C68883 + C68883 + C152201 * C579 +
                     C67859 * C547 + C68882 + C68882 + C152237 * C571) *
                        C152092 +
                    (C67863 * C147 + C67887 + C67887 + C67856 * C163 +
                     C67861 * C146 + C67888 + C67888 + C152201 * C162 +
                     C67859 * C145 + C67889 + C67889 + C152237 * C161) *
                        C96046) *
                       C152054 * C151869 * C151851 * C132 +
                   ((C67859 * C146 + C67890 + C67890 + C152237 * C162 +
                     C67861 * C147 + C67891 + C67891 + C152201 * C163 +
                     C67863 * C148 + C67892 + C67892 + C67856 * C164) *
                        C96046 +
                    (C67859 * C555 + C96049 + C96049 + C152237 * C579 +
                     C67861 * C557 + C96050 + C96050 + C152201 * C581 +
                     C67863 * C882 + C96051 + C96051 + C67856 * C884) *
                        C152092) *
                       C152054 * C151869 * C151851 * C133)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C67859 * C142 + C67866 + C67866 + C152237 * C158 +
                      C67861 * C143 + C67867 + C67867 + C152201 * C159 +
                      C67863 * C144 + C67868 + C67868 + C67856 * C160) *
                         C96046 +
                     (C96563 + C96564 + C96565) * C152092) *
                        C152054 * C151869 * C1259 -
                    ((C69223 + C69224 + C69225) * C152092 +
                     (C68206 + C68205 + C68204) * C96046) *
                        C152054 * C151869 * C1260 +
                    ((C68209 + C68208 + C68207) * C96046 +
                     (C69874 + C69875 + C69876) * C152092) *
                        C152054 * C151869 * C152214) *
                       C152255 +
                   (((C68210 + C68211 + C68212) * C96046 +
                     (C69226 + C69227 + C69228) * C152092) *
                        C152054 * C151869 * C1260 -
                    ((C96571 + C96570 + C96569) * C152092 +
                     (C67863 * C145 + C67875 + C67875 + C67856 * C161 +
                      C67861 * C144 + C67876 + C67876 + C152201 * C160 +
                      C67859 * C143 + C67877 + C67877 + C152237 * C159) *
                         C96046) *
                        C152054 * C151869 * C1259 -
                    ((C70397 + C70398 + C70399) * C152092 +
                     (C68215 + C68214 + C68213) * C96046) *
                        C152054 * C151869 * C152214) *
                       C152240 +
                   (((C67859 * C144 + C67878 + C67878 + C152237 * C160 +
                      C67861 * C145 + C67879 + C67879 + C152201 * C161 +
                      C67863 * C146 + C67880 + C67880 + C67856 * C162) *
                         C96046 +
                     (C96575 + C96576 + C96577) * C152092) *
                        C152054 * C151869 * C1259 -
                    ((C69229 + C69230 + C69231) * C152092 +
                     (C68218 + C68217 + C68216) * C96046) *
                        C152054 * C151869 * C1260 +
                    ((C68221 + C68220 + C68219) * C96046 +
                     (C67859 * C1536 + C69202 + C69202 + C152237 * C1560 +
                      C67861 * C1535 + C69203 + C69203 + C152201 * C1559 +
                      C67863 * C1916 + C69204 + C69204 + C67856 * C1918) *
                         C152092) *
                        C152054 * C151869 * C152214) *
                       C152208)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  (((C67859 * C142 + C67866 + C67866 + C152237 * C158 +
                     C67861 * C143 + C67867 + C67867 + C152201 * C159 +
                     C67863 * C144 + C67868 + C67868 + C67856 * C160) *
                        C96046 +
                    (C96563 + C96564 + C96565) * C152092) *
                       C152054 * C151869 * C1347 -
                   ((C69223 + C69224 + C69225) * C152092 +
                    (C68206 + C68205 + C68204) * C96046) *
                       C152054 * C151869 * C1348 +
                   ((C68209 + C68208 + C68207) * C96046 +
                    (C69874 + C69875 + C69876) * C152092) *
                       C152054 * C151869 * C1349 -
                   ((C70609 + C70610 + C70611) * C152092 +
                    (C69604 + C69603 + C69602) * C96046) *
                       C152054 * C151869 * C1350 +
                   ((C69607 + C69606 + C69605) * C96046 +
                    (C67859 * C8841 + C70600 + C70600 + C152237 * C8847 +
                     C67861 * C8842 + C70601 + C70601 + C152201 * C8848 +
                     C67863 * C8843 + C70602 + C70602 + C67856 * C8849) *
                        C152092) *
                       C152054 * C151869 * C1351) *
                  C151823) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C67859 * C142 + C67866 + C67866 + C152237 * C158 +
                      C67861 * C143 + C67867 + C67867 + C152201 * C159 +
                      C67863 * C144 + C67868 + C67868 + C67856 * C160) *
                         C96046 +
                     (C96563 + C96564 + C96565) * C152092) *
                        C152054 * C2215 -
                    ((C96566 + C96567 + C96568) * C152092 +
                     (C96565 + C96564 + C96563) * C96046) *
                        C152054 * C2216 +
                    ((C96568 + C96567 + C96566) * C96046 +
                     (C67859 * C2454 + C71175 + C71175 + C152237 * C2470 +
                      C67861 * C2453 + C71174 + C71174 + C152201 * C2469 +
                      C67863 * C2452 + C71173 + C71173 + C67856 * C2468) *
                         C152092) *
                        C152054 * C152217) *
                       C151851 * C152255 +
                   (((C96569 + C96570 + C96571) * C96046 +
                     (C96572 + C96573 + C96574) * C152092) *
                        C152054 * C2216 -
                    ((C96571 + C96570 + C96569) * C152092 +
                     (C67863 * C145 + C67875 + C67875 + C67856 * C161 +
                      C67861 * C144 + C67876 + C67876 + C152201 * C160 +
                      C67859 * C143 + C67877 + C67877 + C152237 * C159) *
                         C96046) *
                        C152054 * C2215 -
                    ((C67863 * C2451 + C71686 + C71686 + C67856 * C2467 +
                      C67861 * C2452 + C71685 + C71685 + C152201 * C2468 +
                      C67859 * C2453 + C71684 + C71684 + C152237 * C2469) *
                         C152092 +
                     (C96574 + C96573 + C96572) * C96046) *
                        C152054 * C152217) *
                       C151851 * C152240 +
                   (((C67859 * C144 + C67878 + C67878 + C152237 * C160 +
                      C67861 * C145 + C67879 + C67879 + C152201 * C161 +
                      C67863 * C146 + C67880 + C67880 + C67856 * C162) *
                         C96046 +
                     (C96575 + C96576 + C96577) * C152092) *
                        C152054 * C2215 -
                    ((C96578 + C96579 + C96580) * C152092 +
                     (C96577 + C96576 + C96575) * C96046) *
                        C152054 * C2216 +
                    ((C96580 + C96579 + C96578) * C96046 +
                     (C67859 * C2452 + C96524 + C96524 + C152237 * C2468 +
                      C67861 * C2451 + C96525 + C96525 + C152201 * C2467 +
                      C67863 * C2818 + C96526 + C96526 + C67856 * C2820) *
                         C152092) *
                        C152054 * C152217) *
                       C151851 * C152208)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C67859 * C142 + C67866 + C67866 + C152237 * C158 +
                      C67861 * C143 + C67867 + C67867 + C152201 * C159 +
                      C67863 * C144 + C67868 + C67868 + C67856 * C160) *
                         C96046 +
                     (C96563 + C96564 + C96565) * C152092) *
                        C152054 * C2215 -
                    ((C96566 + C96567 + C96568) * C152092 +
                     (C96565 + C96564 + C96563) * C96046) *
                        C152054 * C2216 +
                    ((C96568 + C96567 + C96566) * C96046 +
                     (C67859 * C2454 + C71175 + C71175 + C152237 * C2470 +
                      C67861 * C2453 + C71174 + C71174 + C152201 * C2469 +
                      C67863 * C2452 + C71173 + C71173 + C67856 * C2468) *
                         C152092) *
                        C152054 * C152217) *
                       C152258 +
                   (((C69225 + C69224 + C69223) * C96046 +
                     (C69871 + C69872 + C69873) * C152092) *
                        C152054 * C2216 -
                    ((C69223 + C69224 + C69225) * C152092 +
                     (C68206 + C68205 + C68204) * C96046) *
                        C152054 * C2215 -
                    ((C71899 + C71900 + C71901) * C152092 +
                     (C69873 + C69872 + C69871) * C96046) *
                        C152054 * C152217) *
                       C152244 +
                   (((C68209 + C68208 + C68207) * C96046 +
                     (C69874 + C69875 + C69876) * C152092) *
                        C152054 * C2215 -
                    ((C69877 + C69878 + C69879) * C152092 +
                     (C69876 + C69875 + C69874) * C96046) *
                        C152054 * C2216 +
                    ((C69879 + C69878 + C69877) * C96046 +
                     (C67859 * C10149 + C71890 + C71890 + C152237 * C10155 +
                      C67861 * C10150 + C71891 + C71891 + C152201 * C10156 +
                      C67863 * C10151 + C71892 + C71892 + C67856 * C10157) *
                         C152092) *
                        C152054 * C152217) *
                       C152214) *
                  C151823) /
                     (p * q * std::sqrt(p + q));
    d2ee[240] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  (((((C67859 * C142 + C67866 + C67866 + C152237 * C158 +
                       C67861 * C143 + C67867 + C67867 + C152201 * C159 +
                       C67863 * C144 + C67868 + C67868 + C67856 * C160) *
                          C96046 +
                      (C96563 + C96564 + C96565) * C152092) *
                         C152054 * C4107 -
                     ((C96566 + C96567 + C96568) * C152092 +
                      (C96565 + C96564 + C96563) * C96046) *
                         C152054 * C151956) *
                        C152172 +
                    (((C69225 + C69224 + C69223) * C96046 +
                      (C69871 + C69872 + C69873) * C152092) *
                         C152054 * C151956 -
                     ((C69223 + C69224 + C69225) * C152092 +
                      (C68206 + C68205 + C68204) * C96046) *
                         C152054 * C4107) *
                        C151914) *
                       C151828 +
                   ((((C96569 + C96570 + C96571) * C96046 +
                      (C96572 + C96573 + C96574) * C152092) *
                         C152054 * C151956 -
                     ((C96571 + C96570 + C96569) * C152092 +
                      (C67863 * C145 + C67875 + C67875 + C67856 * C161 +
                       C67861 * C144 + C67876 + C67876 + C152201 * C160 +
                       C67859 * C143 + C67877 + C67877 + C152237 * C159) *
                          C96046) *
                         C152054 * C4107) *
                        C152172 +
                    (((C68210 + C68211 + C68212) * C96046 +
                      (C69226 + C69227 + C69228) * C152092) *
                         C152054 * C4107 -
                     ((C71487 + C71488 + C71489) * C152092 +
                      (C69228 + C69227 + C69226) * C96046) *
                         C152054 * C151956) *
                        C151914) *
                       C151837 +
                   ((((C67859 * C144 + C67878 + C67878 + C152237 * C160 +
                       C67861 * C145 + C67879 + C67879 + C152201 * C161 +
                       C67863 * C146 + C67880 + C67880 + C67856 * C162) *
                          C96046 +
                      (C96575 + C96576 + C96577) * C152092) *
                         C152054 * C4107 -
                     ((C96578 + C96579 + C96580) * C152092 +
                      (C96577 + C96576 + C96575) * C96046) *
                         C152054 * C151956) *
                        C152172 +
                    (((C69231 + C69230 + C69229) * C96046 +
                      (C67859 * C1532 + C68473 + C68473 + C152237 * C1556 +
                       C67861 * C1531 + C68474 + C68474 + C152201 * C1555 +
                       C67863 * C2677 + C68475 + C68475 + C67856 * C2679) *
                          C152092) *
                         C152054 * C151956 -
                     ((C69229 + C69230 + C69231) * C152092 +
                      (C68218 + C68217 + C68216) * C96046) *
                         C152054 * C4107) *
                        C151914) *
                       C3588)) /
                 (p * q * std::sqrt(p + q));
    d2ee[241] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  (((((C67859 * C142 + C67866 + C67866 + C152237 * C158 +
                       C67861 * C143 + C67867 + C67867 + C152201 * C159 +
                       C67863 * C144 + C67868 + C67868 + C67856 * C160) *
                          C96046 +
                      (C96563 + C96564 + C96565) * C152092) *
                         C152054 * C151952 -
                     ((C96566 + C96567 + C96568) * C152092 +
                      (C96565 + C96564 + C96563) * C96046) *
                         C152054 * C151959 +
                     ((C96568 + C96567 + C96566) * C96046 +
                      (C99098 + C99099 + C99100) * C152092) *
                         C152054 * C4779) *
                        C152172 +
                    (((C69225 + C69224 + C69223) * C96046 +
                      (C69871 + C69872 + C69873) * C152092) *
                         C152054 * C151959 -
                     ((C69223 + C69224 + C69225) * C152092 +
                      (C68206 + C68205 + C68204) * C96046) *
                         C152054 * C151952 -
                     ((C71899 + C71900 + C71901) * C152092 +
                      (C69873 + C69872 + C69871) * C96046) *
                         C152054 * C4779) *
                        C151914) *
                       C3241 +
                   ((((C96569 + C96570 + C96571) * C96046 +
                      (C96572 + C96573 + C96574) * C152092) *
                         C152054 * C151959 -
                     ((C96571 + C96570 + C96569) * C152092 +
                      (C67863 * C145 + C67875 + C67875 + C67856 * C161 +
                       C67861 * C144 + C67876 + C67876 + C152201 * C160 +
                       C67859 * C143 + C67877 + C67877 + C152237 * C159) *
                          C96046) *
                         C152054 * C151952 -
                     ((C99603 + C99604 + C99605) * C152092 +
                      (C96574 + C96573 + C96572) * C96046) *
                         C152054 * C4779) *
                        C152172 +
                    (((C68210 + C68211 + C68212) * C96046 +
                      (C69226 + C69227 + C69228) * C152092) *
                         C152054 * C151952 -
                     ((C71487 + C71488 + C71489) * C152092 +
                      (C69228 + C69227 + C69226) * C96046) *
                         C152054 * C151959 +
                     ((C71489 + C71488 + C71487) * C96046 +
                      (C67859 * C2956 + C71687 + C71687 + C152237 * C2964 +
                       C67861 * C2957 + C71688 + C71688 + C152201 * C2965 +
                       C67863 * C2958 + C71689 + C71689 + C67856 * C2966) *
                          C152092) *
                         C152054 * C4779) *
                        C151914) *
                       C151834)) /
                 (p * q * std::sqrt(p + q));
    d2ee[242] += (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C67859 * C142 + C67866 + C67866 + C152237 * C158 +
                       C67861 * C143 + C67867 + C67867 + C152201 * C159 +
                       C67863 * C144 + C67868 + C67868 + C67856 * C160) *
                          C96046 +
                      (C96563 + C96564 + C96565) * C152092) *
                         C152054 * C4107 -
                     ((C96566 + C96567 + C96568) * C152092 +
                      (C96565 + C96564 + C96563) * C96046) *
                         C152054 * C151956) *
                        C152258 +
                    (((C69225 + C69224 + C69223) * C96046 +
                      (C69871 + C69872 + C69873) * C152092) *
                         C152054 * C151956 -
                     ((C69223 + C69224 + C69225) * C152092 +
                      (C68206 + C68205 + C68204) * C96046) *
                         C152054 * C4107) *
                        C152244 +
                    (((C68209 + C68208 + C68207) * C96046 +
                      (C69874 + C69875 + C69876) * C152092) *
                         C152054 * C4107 -
                     ((C69877 + C69878 + C69879) * C152092 +
                      (C69876 + C69875 + C69874) * C96046) *
                         C152054 * C151956) *
                        C152214) *
                       C3241 +
                   ((((C96569 + C96570 + C96571) * C96046 +
                      (C96572 + C96573 + C96574) * C152092) *
                         C152054 * C151956 -
                     ((C96571 + C96570 + C96569) * C152092 +
                      (C67863 * C145 + C67875 + C67875 + C67856 * C161 +
                       C67861 * C144 + C67876 + C67876 + C152201 * C160 +
                       C67859 * C143 + C67877 + C67877 + C152237 * C159) *
                          C96046) *
                         C152054 * C4107) *
                        C152258 +
                    (((C68210 + C68211 + C68212) * C96046 +
                      (C69226 + C69227 + C69228) * C152092) *
                         C152054 * C4107 -
                     ((C71487 + C71488 + C71489) * C152092 +
                      (C69228 + C69227 + C69226) * C96046) *
                         C152054 * C151956) *
                        C152244 +
                    (((C70399 + C70398 + C70397) * C96046 +
                      (C67859 * C1540 + C71478 + C71478 + C152237 * C1564 +
                       C67861 * C1541 + C71479 + C71479 + C152201 * C1565 +
                       C67863 * C1542 + C71480 + C71480 + C67856 * C1566) *
                          C152092) *
                         C152054 * C151956 -
                     ((C70397 + C70398 + C70399) * C152092 +
                      (C68215 + C68214 + C68213) * C96046) *
                         C152054 * C4107) *
                        C152214) *
                       C151834)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C67859 * C142 + C67866 + C67866 + C152237 * C158 +
                      C67861 * C143 + C67867 + C67867 + C152201 * C159 +
                      C67863 * C144 + C67868 + C67868 + C67856 * C160) *
                         C96046 +
                     (C96563 + C96564 + C96565) * C152092) *
                        C152054 * C4107 -
                    ((C96566 + C96567 + C96568) * C152092 +
                     (C96565 + C96564 + C96563) * C96046) *
                        C152054 * C151956) *
                       C151851 * C152264 +
                   (((C96569 + C96570 + C96571) * C96046 +
                     (C96572 + C96573 + C96574) * C152092) *
                        C152054 * C151956 -
                    ((C96571 + C96570 + C96569) * C152092 +
                     (C67863 * C145 + C67875 + C67875 + C67856 * C161 +
                      C67861 * C144 + C67876 + C67876 + C152201 * C160 +
                      C67859 * C143 + C67877 + C67877 + C152237 * C159) *
                         C96046) *
                        C152054 * C4107) *
                       C151851 * C152257 +
                   (((C67859 * C144 + C67878 + C67878 + C152237 * C160 +
                      C67861 * C145 + C67879 + C67879 + C152201 * C161 +
                      C67863 * C146 + C67880 + C67880 + C67856 * C162) *
                         C96046 +
                     (C96575 + C96576 + C96577) * C152092) *
                        C152054 * C4107 -
                    ((C96578 + C96579 + C96580) * C152092 +
                     (C96577 + C96576 + C96575) * C96046) *
                        C152054 * C151956) *
                       C151851 * C152242 +
                   (((C96984 + C96985 + C96986) * C96046 +
                     (C67859 * C554 + C96975 + C96975 + C152237 * C578 +
                      C67861 * C556 + C96976 + C96976 + C152201 * C580 +
                      C67863 * C558 + C96977 + C96977 + C67856 * C582) *
                         C152092) *
                        C152054 * C151956 -
                    ((C96986 + C96985 + C96984) * C152092 +
                     (C67863 * C147 + C67887 + C67887 + C67856 * C163 +
                      C67861 * C146 + C67888 + C67888 + C152201 * C162 +
                      C67859 * C145 + C67889 + C67889 + C152237 * C161) *
                         C96046) *
                        C152054 * C4107) *
                       C151851 * C152218)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
                  ((((C67859 * C142 + C67866 + C67866 + C152237 * C158 +
                      C67861 * C143 + C67867 + C67867 + C152201 * C159 +
                      C67863 * C144 + C67868 + C67868 + C67856 * C160) *
                         C96046 +
                     (C96563 + C96564 + C96565) * C152092) *
                        C152054 * C152266 -
                    ((C96566 + C96567 + C96568) * C152092 +
                     (C96565 + C96564 + C96563) * C96046) *
                        C152054 * C152263 +
                    ((C96568 + C96567 + C96566) * C96046 +
                     (C99098 + C99099 + C99100) * C152092) *
                        C152054 * C152252 -
                    ((C99101 + C99102 + C99103) * C152092 +
                     (C99100 + C99099 + C99098) * C96046) *
                        C152054 * C152230) *
                       C151851 * C3241 +
                   (((C96569 + C96570 + C96571) * C96046 +
                     (C96572 + C96573 + C96574) * C152092) *
                        C152054 * C152263 -
                    ((C96571 + C96570 + C96569) * C152092 +
                     (C67863 * C145 + C67875 + C67875 + C67856 * C161 +
                      C67861 * C144 + C67876 + C67876 + C152201 * C160 +
                      C67859 * C143 + C67877 + C67877 + C152237 * C159) *
                         C96046) *
                        C152054 * C152266 -
                    ((C99603 + C99604 + C99605) * C152092 +
                     (C96574 + C96573 + C96572) * C96046) *
                        C152054 * C152252 +
                    ((C99605 + C99604 + C99603) * C96046 +
                     (C67859 * C2456 + C99594 + C99594 + C152237 * C2472 +
                      C67861 * C2457 + C99595 + C99595 + C152201 * C2473 +
                      C67863 * C2458 + C99596 + C99596 + C67856 * C2474) *
                         C152092) *
                        C152054 * C152230) *
                       C151851 * C151834)) /
                     (p * q * std::sqrt(p + q));
    d2ee[243] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  ((((C67859 * C142 + C67866 + C67866 + C152237 * C158 +
                      C67861 * C143 + C67867 + C67867 + C152201 * C159 +
                      C67863 * C144 + C67868 + C67868 + C67856 * C160) *
                         C96046 +
                     (C96563 + C96564 + C96565) * C152092) *
                        C152054 * C151952 -
                    ((C96566 + C96567 + C96568) * C152092 +
                     (C96565 + C96564 + C96563) * C96046) *
                        C152054 * C151959 +
                    ((C96568 + C96567 + C96566) * C96046 +
                     (C99098 + C99099 + C99100) * C152092) *
                        C152054 * C4779) *
                       C151851 * C151828 +
                   (((C96569 + C96570 + C96571) * C96046 +
                     (C96572 + C96573 + C96574) * C152092) *
                        C152054 * C151959 -
                    ((C96571 + C96570 + C96569) * C152092 +
                     (C67863 * C145 + C67875 + C67875 + C67856 * C161 +
                      C67861 * C144 + C67876 + C67876 + C152201 * C160 +
                      C67859 * C143 + C67877 + C67877 + C152237 * C159) *
                         C96046) *
                        C152054 * C151952 -
                    ((C99603 + C99604 + C99605) * C152092 +
                     (C96574 + C96573 + C96572) * C96046) *
                        C152054 * C4779) *
                       C151851 * C151837 +
                   (((C67859 * C144 + C67878 + C67878 + C152237 * C160 +
                      C67861 * C145 + C67879 + C67879 + C152201 * C161 +
                      C67863 * C146 + C67880 + C67880 + C67856 * C162) *
                         C96046 +
                     (C96575 + C96576 + C96577) * C152092) *
                        C152054 * C151952 -
                    ((C96578 + C96579 + C96580) * C152092 +
                     (C96577 + C96576 + C96575) * C96046) *
                        C152054 * C151959 +
                    ((C96580 + C96579 + C96578) * C96046 +
                     (C67859 * C2452 + C96524 + C96524 + C152237 * C2468 +
                      C67861 * C2451 + C96525 + C96525 + C152201 * C2467 +
                      C67863 * C2818 + C96526 + C96526 + C67856 * C2820) *
                         C152092) *
                        C152054 * C4779) *
                       C151851 * C3588)) /
                 (p * q * std::sqrt(p + q));
    d2ee[244] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C67859 * C142 + C67866 + C67866 + C152237 * C158 +
                      C67861 * C143 + C67867 + C67867 + C152201 * C159 +
                      C67863 * C144 + C67868 + C67868 + C67856 * C160) *
                         C96046 +
                     (C96563 + C96564 + C96565) * C152092) *
                        C152054 * C4107 -
                    ((C96566 + C96567 + C96568) * C152092 +
                     (C96565 + C96564 + C96563) * C96046) *
                        C152054 * C151956) *
                       C151851 * C152264 +
                   (((C96569 + C96570 + C96571) * C96046 +
                     (C96572 + C96573 + C96574) * C152092) *
                        C152054 * C151956 -
                    ((C96571 + C96570 + C96569) * C152092 +
                     (C67863 * C145 + C67875 + C67875 + C67856 * C161 +
                      C67861 * C144 + C67876 + C67876 + C152201 * C160 +
                      C67859 * C143 + C67877 + C67877 + C152237 * C159) *
                         C96046) *
                        C152054 * C4107) *
                       C151851 * C152257 +
                   (((C67859 * C144 + C67878 + C67878 + C152237 * C160 +
                      C67861 * C145 + C67879 + C67879 + C152201 * C161 +
                      C67863 * C146 + C67880 + C67880 + C67856 * C162) *
                         C96046 +
                     (C96575 + C96576 + C96577) * C152092) *
                        C152054 * C4107 -
                    ((C96578 + C96579 + C96580) * C152092 +
                     (C96577 + C96576 + C96575) * C96046) *
                        C152054 * C151956) *
                       C151851 * C152242 +
                   (((C96984 + C96985 + C96986) * C96046 +
                     (C67859 * C554 + C96975 + C96975 + C152237 * C578 +
                      C67861 * C556 + C96976 + C96976 + C152201 * C580 +
                      C67863 * C558 + C96977 + C96977 + C67856 * C582) *
                         C152092) *
                        C152054 * C151956 -
                    ((C96986 + C96985 + C96984) * C152092 +
                     (C67863 * C147 + C67887 + C67887 + C67856 * C163 +
                      C67861 * C146 + C67888 + C67888 + C152201 * C162 +
                      C67859 * C145 + C67889 + C67889 + C152237 * C161) *
                         C96046) *
                        C152054 * C4107) *
                       C151851 * C152218)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C67859 * C142 + C67866 + C67866 + C152237 * C158 +
                       C67861 * C143 + C67867 + C67867 + C152201 * C159 +
                       C67863 * C144 + C67868 + C67868 + C67856 * C160) *
                          C96046 +
                      (C96563 + C96564 + C96565) * C152092) *
                         C152054 * C4107 -
                     ((C96566 + C96567 + C96568) * C152092 +
                      (C96565 + C96564 + C96563) * C96046) *
                         C152054 * C151956) *
                        C152258 +
                    (((C69225 + C69224 + C69223) * C96046 +
                      (C69871 + C69872 + C69873) * C152092) *
                         C152054 * C151956 -
                     ((C69223 + C69224 + C69225) * C152092 +
                      (C68206 + C68205 + C68204) * C96046) *
                         C152054 * C4107) *
                        C152244 +
                    (((C68209 + C68208 + C68207) * C96046 +
                      (C69874 + C69875 + C69876) * C152092) *
                         C152054 * C4107 -
                     ((C69877 + C69878 + C69879) * C152092 +
                      (C69876 + C69875 + C69874) * C96046) *
                         C152054 * C151956) *
                        C152214) *
                       C3241 +
                   ((((C96569 + C96570 + C96571) * C96046 +
                      (C96572 + C96573 + C96574) * C152092) *
                         C152054 * C151956 -
                     ((C96571 + C96570 + C96569) * C152092 +
                      (C67863 * C145 + C67875 + C67875 + C67856 * C161 +
                       C67861 * C144 + C67876 + C67876 + C152201 * C160 +
                       C67859 * C143 + C67877 + C67877 + C152237 * C159) *
                          C96046) *
                         C152054 * C4107) *
                        C152258 +
                    (((C68210 + C68211 + C68212) * C96046 +
                      (C69226 + C69227 + C69228) * C152092) *
                         C152054 * C4107 -
                     ((C71487 + C71488 + C71489) * C152092 +
                      (C69228 + C69227 + C69226) * C96046) *
                         C152054 * C151956) *
                        C152244 +
                    (((C70399 + C70398 + C70397) * C96046 +
                      (C67859 * C1540 + C71478 + C71478 + C152237 * C1564 +
                       C67861 * C1541 + C71479 + C71479 + C152201 * C1565 +
                       C67863 * C1542 + C71480 + C71480 + C67856 * C1566) *
                          C152092) *
                         C152054 * C151956 -
                     ((C70397 + C70398 + C70399) * C152092 +
                      (C68215 + C68214 + C68213) * C96046) *
                         C152054 * C4107) *
                        C152214) *
                       C151834)) /
                     (p * q * std::sqrt(p + q));
    d2ee[245] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C67859 * C142 + C67866 + C67866 + C152237 * C158 +
                      C67861 * C143 + C67867 + C67867 + C152201 * C159 +
                      C67863 * C144 + C67868 + C67868 + C67856 * C160) *
                         C96046 +
                     (C96563 + C96564 + C96565) * C152092) *
                        C152054 * C151869 * C152172 -
                    ((C69223 + C69224 + C69225) * C152092 +
                     (C68206 + C68205 + C68204) * C96046) *
                        C152054 * C151869 * C151914) *
                       C739 +
                   (((C68210 + C68211 + C68212) * C96046 +
                     (C69226 + C69227 + C69228) * C152092) *
                        C152054 * C151869 * C151914 -
                    ((C96571 + C96570 + C96569) * C152092 +
                     (C67863 * C145 + C67875 + C67875 + C67856 * C161 +
                      C67861 * C144 + C67876 + C67876 + C152201 * C160 +
                      C67859 * C143 + C67877 + C67877 + C152237 * C159) *
                         C96046) *
                        C152054 * C151869 * C152172) *
                       C740 +
                   (((C67859 * C144 + C67878 + C67878 + C152237 * C160 +
                      C67861 * C145 + C67879 + C67879 + C152201 * C161 +
                      C67863 * C146 + C67880 + C67880 + C67856 * C162) *
                         C96046 +
                     (C96575 + C96576 + C96577) * C152092) *
                        C152054 * C151869 * C152172 -
                    ((C69229 + C69230 + C69231) * C152092 +
                     (C68218 + C68217 + C68216) * C96046) *
                        C152054 * C151869 * C151914) *
                       C741 +
                   (((C68685 + C68686 + C68687) * C96046 +
                     (C67859 * C1086 + C68885 + C68885 + C152237 * C1098 +
                      C67861 * C1087 + C68886 + C68886 + C152201 * C1099 +
                      C67863 * C1088 + C68887 + C68887 + C67856 * C1100) *
                         C152092) *
                        C152054 * C151869 * C151914 -
                    ((C67863 * C557 + C68884 + C68884 + C67856 * C581 +
                      C67861 * C555 + C68883 + C68883 + C152201 * C579 +
                      C67859 * C547 + C68882 + C68882 + C152237 * C571) *
                         C152092 +
                     (C67863 * C147 + C67887 + C67887 + C67856 * C163 +
                      C67861 * C146 + C67888 + C67888 + C152201 * C162 +
                      C67859 * C145 + C67889 + C67889 + C152237 * C161) *
                         C96046) *
                        C152054 * C151869 * C152172) *
                       C152218)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C67859 * C142 + C67866 + C67866 + C152237 * C158 +
                      C67861 * C143 + C67867 + C67867 + C152201 * C159 +
                      C67863 * C144 + C67868 + C67868 + C67856 * C160) *
                         C96046 +
                     (C96563 + C96564 + C96565) * C152092) *
                        C152054 * C151869 * C1709 -
                    ((C69223 + C69224 + C69225) * C152092 +
                     (C68206 + C68205 + C68204) * C96046) *
                        C152054 * C151869 * C1710 +
                    ((C68209 + C68208 + C68207) * C96046 +
                     (C69874 + C69875 + C69876) * C152092) *
                        C152054 * C151869 * C1711 -
                    ((C70609 + C70610 + C70611) * C152092 +
                     (C69604 + C69603 + C69602) * C96046) *
                        C152054 * C151869 * C152224) *
                       C152158 +
                   (((C68210 + C68211 + C68212) * C96046 +
                     (C69226 + C69227 + C69228) * C152092) *
                        C152054 * C151869 * C1710 -
                    ((C96571 + C96570 + C96569) * C152092 +
                     (C67863 * C145 + C67875 + C67875 + C67856 * C161 +
                      C67861 * C144 + C67876 + C67876 + C152201 * C160 +
                      C67859 * C143 + C67877 + C67877 + C152237 * C159) *
                         C96046) *
                        C152054 * C151869 * C1709 -
                    ((C70397 + C70398 + C70399) * C152092 +
                     (C68215 + C68214 + C68213) * C96046) *
                        C152054 * C151869 * C1711 +
                    ((C70091 + C70090 + C70089) * C96046 +
                     (C67859 * C2054 + C70388 + C70388 + C152237 * C2062 +
                      C67861 * C2055 + C70389 + C70389 + C152201 * C2063 +
                      C67863 * C2056 + C70390 + C70390 + C67856 * C2064) *
                         C152092) *
                        C152054 * C151869 * C152224) *
                       C151834)) /
                     (p * q * std::sqrt(p + q));
    d2ee[246] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C67859 * C142 + C67866 + C67866 + C152237 * C158 +
                       C67861 * C143 + C67867 + C67867 + C152201 * C159 +
                       C67863 * C144 + C67868 + C67868 + C67856 * C160) *
                          C96046 +
                      (C96563 + C96564 + C96565) * C152092) *
                         C152054 * C152173 -
                     ((C96566 + C96567 + C96568) * C152092 +
                      (C96565 + C96564 + C96563) * C96046) *
                         C152054 * C151956) *
                        C152172 +
                    (((C69225 + C69224 + C69223) * C96046 +
                      (C69871 + C69872 + C69873) * C152092) *
                         C152054 * C151956 -
                     ((C69223 + C69224 + C69225) * C152092 +
                      (C68206 + C68205 + C68204) * C96046) *
                         C152054 * C152173) *
                        C151914) *
                       C335 +
                   ((((C96569 + C96570 + C96571) * C96046 +
                      (C96572 + C96573 + C96574) * C152092) *
                         C152054 * C151956 -
                     ((C96571 + C96570 + C96569) * C152092 +
                      (C67863 * C145 + C67875 + C67875 + C67856 * C161 +
                       C67861 * C144 + C67876 + C67876 + C152201 * C160 +
                       C67859 * C143 + C67877 + C67877 + C152237 * C159) *
                          C96046) *
                         C152054 * C152173) *
                        C152172 +
                    (((C68210 + C68211 + C68212) * C96046 +
                      (C69226 + C69227 + C69228) * C152092) *
                         C152054 * C152173 -
                     ((C71487 + C71488 + C71489) * C152092 +
                      (C69228 + C69227 + C69226) * C96046) *
                         C152054 * C151956) *
                        C151914) *
                       C336 +
                   ((((C67859 * C144 + C67878 + C67878 + C152237 * C160 +
                       C67861 * C145 + C67879 + C67879 + C152201 * C161 +
                       C67863 * C146 + C67880 + C67880 + C67856 * C162) *
                          C96046 +
                      (C96575 + C96576 + C96577) * C152092) *
                         C152054 * C152173 -
                     ((C96578 + C96579 + C96580) * C152092 +
                      (C96577 + C96576 + C96575) * C96046) *
                         C152054 * C151956) *
                        C152172 +
                    (((C69231 + C69230 + C69229) * C96046 +
                      (C67859 * C1532 + C68473 + C68473 + C152237 * C1556 +
                       C67861 * C1531 + C68474 + C68474 + C152201 * C1555 +
                       C67863 * C2677 + C68475 + C68475 + C67856 * C2679) *
                          C152092) *
                         C152054 * C151956 -
                     ((C69229 + C69230 + C69231) * C152092 +
                      (C68218 + C68217 + C68216) * C96046) *
                         C152054 * C152173) *
                        C151914) *
                       C152208)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C67859 * C142 + C67866 + C67866 + C152237 * C158 +
                      C67861 * C143 + C67867 + C67867 + C152201 * C159 +
                      C67863 * C144 + C67868 + C67868 + C67856 * C160) *
                         C96046 +
                     (C96563 + C96564 + C96565) * C152092) *
                        C152054 * C152173 -
                    ((C96566 + C96567 + C96568) * C152092 +
                     (C96565 + C96564 + C96563) * C96046) *
                        C152054 * C151956) *
                       C1709 +
                   (((C69225 + C69224 + C69223) * C96046 +
                     (C69871 + C69872 + C69873) * C152092) *
                        C152054 * C151956 -
                    ((C69223 + C69224 + C69225) * C152092 +
                     (C68206 + C68205 + C68204) * C96046) *
                        C152054 * C152173) *
                       C1710 +
                   (((C68209 + C68208 + C68207) * C96046 +
                     (C69874 + C69875 + C69876) * C152092) *
                        C152054 * C152173 -
                    ((C69877 + C69878 + C69879) * C152092 +
                     (C69876 + C69875 + C69874) * C96046) *
                        C152054 * C151956) *
                       C1711 +
                   (((C70611 + C70610 + C70609) * C96046 +
                     (C67859 * C8064 + C69850 + C69850 + C152237 * C8070 +
                      C67861 * C8065 + C69851 + C69851 + C152201 * C8071 +
                      C67863 * C8066 + C69852 + C69852 + C67856 * C8072) *
                         C152092) *
                        C152054 * C151956 -
                    ((C70609 + C70610 + C70611) * C152092 +
                     (C69604 + C69603 + C69602) * C96046) *
                        C152054 * C152173) *
                       C152224) *
                  C151823) /
                     (p * q * std::sqrt(p + q));
    d2ee[247] += (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C67859 * C142 + C67866 + C67866 + C152237 * C158 +
                      C67861 * C143 + C67867 + C67867 + C152201 * C159 +
                      C67863 * C144 + C67868 + C67868 + C67856 * C160) *
                         C96046 +
                     (C67859 * C550 + C68445 + C68445 + C152237 * C574 +
                      C67861 * C549 + C68444 + C68444 + C152201 * C573 +
                      C67863 * C548 + C68443 + C68443 + C67856 * C572) *
                         C152092) *
                        C152054 * C151869 * C152258 -
                    ((C69223 + C69224 + C69225) * C152092 +
                     (C68206 + C68205 + C68204) * C96046) *
                        C152054 * C151869 * C152244 +
                    ((C68209 + C68208 + C68207) * C96046 +
                     (C69874 + C69875 + C69876) * C152092) *
                        C152054 * C151869 * C152214) *
                       C335 +
                   (((C68210 + C68211 + C68212) * C96046 +
                     (C69226 + C69227 + C69228) * C152092) *
                        C152054 * C151869 * C152244 -
                    ((C67863 * C547 + C68454 + C68454 + C67856 * C571 +
                      C67861 * C548 + C68453 + C68453 + C152201 * C572 +
                      C67859 * C549 + C68452 + C68452 + C152237 * C573) *
                         C152092 +
                     (C67863 * C145 + C67875 + C67875 + C67856 * C161 +
                      C67861 * C144 + C67876 + C67876 + C152201 * C160 +
                      C67859 * C143 + C67877 + C67877 + C152237 * C159) *
                         C96046) *
                        C152054 * C151869 * C152258 -
                    ((C70397 + C70398 + C70399) * C152092 +
                     (C68215 + C68214 + C68213) * C96046) *
                        C152054 * C151869 * C152214) *
                       C336 +
                   (((C67859 * C144 + C67878 + C67878 + C152237 * C160 +
                      C67861 * C145 + C67879 + C67879 + C152201 * C161 +
                      C67863 * C146 + C67880 + C67880 + C67856 * C162) *
                         C96046 +
                     (C67859 * C548 + C68469 + C68469 + C152237 * C572 +
                      C67861 * C547 + C68468 + C68468 + C152201 * C571 +
                      C67863 * C555 + C68467 + C68467 + C67856 * C579) *
                         C152092) *
                        C152054 * C151869 * C152258 -
                    ((C69229 + C69230 + C69231) * C152092 +
                     (C68218 + C68217 + C68216) * C96046) *
                        C152054 * C151869 * C152244 +
                    ((C68221 + C68220 + C68219) * C96046 +
                     (C67859 * C1536 + C69202 + C69202 + C152237 * C1560 +
                      C67861 * C1535 + C69203 + C69203 + C152201 * C1559 +
                      C67863 * C1916 + C69204 + C69204 + C67856 * C1918) *
                         C152092) *
                        C152054 * C151869 * C152214) *
                       C152208)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  (((C67859 * C142 + C67866 + C67866 + C152237 * C158 +
                     C67861 * C143 + C67867 + C67867 + C152201 * C159 +
                     C67863 * C144 + C67868 + C67868 + C67856 * C160) *
                        C96046 +
                    (C67859 * C550 + C68445 + C68445 + C152237 * C574 +
                     C67861 * C549 + C68444 + C68444 + C152201 * C573 +
                     C67863 * C548 + C68443 + C68443 + C67856 * C572) *
                        C152092) *
                       C152054 * C151869 * C151851 * C129 -
                   ((C67863 * C547 + C68454 + C68454 + C67856 * C571 +
                     C67861 * C548 + C68453 + C68453 + C152201 * C572 +
                     C67859 * C549 + C68452 + C68452 + C152237 * C573) *
                        C152092 +
                    (C67863 * C145 + C67875 + C67875 + C67856 * C161 +
                     C67861 * C144 + C67876 + C67876 + C152201 * C160 +
                     C67859 * C143 + C67877 + C67877 + C152237 * C159) *
                        C96046) *
                       C152054 * C151869 * C151851 * C130 +
                   ((C67859 * C144 + C67878 + C67878 + C152237 * C160 +
                     C67861 * C145 + C67879 + C67879 + C152201 * C161 +
                     C67863 * C146 + C67880 + C67880 + C67856 * C162) *
                        C96046 +
                    (C67859 * C548 + C68469 + C68469 + C152237 * C572 +
                     C67861 * C547 + C68468 + C68468 + C152201 * C571 +
                     C67863 * C555 + C68467 + C68467 + C67856 * C579) *
                        C152092) *
                       C152054 * C151869 * C151851 * C131 -
                   ((C67863 * C557 + C68884 + C68884 + C67856 * C581 +
                     C67861 * C555 + C68883 + C68883 + C152201 * C579 +
                     C67859 * C547 + C68882 + C68882 + C152237 * C571) *
                        C152092 +
                    (C67863 * C147 + C67887 + C67887 + C67856 * C163 +
                     C67861 * C146 + C67888 + C67888 + C152201 * C162 +
                     C67859 * C145 + C67889 + C67889 + C152237 * C161) *
                        C96046) *
                       C152054 * C151869 * C151851 * C132 +
                   ((C67859 * C146 + C67890 + C67890 + C152237 * C162 +
                     C67861 * C147 + C67891 + C67891 + C152201 * C163 +
                     C67863 * C148 + C67892 + C67892 + C67856 * C164) *
                        C96046 +
                    (C67859 * C555 + C96049 + C96049 + C152237 * C579 +
                     C67861 * C557 + C96050 + C96050 + C152201 * C581 +
                     C67863 * C882 + C96051 + C96051 + C67856 * C884) *
                        C152092) *
                       C152054 * C151869 * C151851 * C133)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C67859 * C142 + C67866 + C67866 + C152237 * C158 +
                      C67861 * C143 + C67867 + C67867 + C152201 * C159 +
                      C67863 * C144 + C67868 + C67868 + C67856 * C160) *
                         C96046 +
                     (C96563 + C96564 + C96565) * C152092) *
                        C152054 * C152259 -
                    ((C96566 + C96567 + C96568) * C152092 +
                     (C96565 + C96564 + C96563) * C96046) *
                        C152054 * C152246 +
                    ((C96568 + C96567 + C96566) * C96046 +
                     (C67859 * C2454 + C71175 + C71175 + C152237 * C2470 +
                      C67861 * C2453 + C71174 + C71174 + C152201 * C2469 +
                      C67863 * C2452 + C71173 + C71173 + C67856 * C2468) *
                         C152092) *
                        C152054 * C152217) *
                       C151851 * C335 +
                   (((C96569 + C96570 + C96571) * C96046 +
                     (C96572 + C96573 + C96574) * C152092) *
                        C152054 * C152246 -
                    ((C96571 + C96570 + C96569) * C152092 +
                     (C67863 * C145 + C67875 + C67875 + C67856 * C161 +
                      C67861 * C144 + C67876 + C67876 + C152201 * C160 +
                      C67859 * C143 + C67877 + C67877 + C152237 * C159) *
                         C96046) *
                        C152054 * C152259 -
                    ((C67863 * C2451 + C71686 + C71686 + C67856 * C2467 +
                      C67861 * C2452 + C71685 + C71685 + C152201 * C2468 +
                      C67859 * C2453 + C71684 + C71684 + C152237 * C2469) *
                         C152092 +
                     (C96574 + C96573 + C96572) * C96046) *
                        C152054 * C152217) *
                       C151851 * C336 +
                   (((C67859 * C144 + C67878 + C67878 + C152237 * C160 +
                      C67861 * C145 + C67879 + C67879 + C152201 * C161 +
                      C67863 * C146 + C67880 + C67880 + C67856 * C162) *
                         C96046 +
                     (C96575 + C96576 + C96577) * C152092) *
                        C152054 * C152259 -
                    ((C96578 + C96579 + C96580) * C152092 +
                     (C96577 + C96576 + C96575) * C96046) *
                        C152054 * C152246 +
                    ((C96580 + C96579 + C96578) * C96046 +
                     (C67859 * C2452 + C96524 + C96524 + C152237 * C2468 +
                      C67861 * C2451 + C96525 + C96525 + C152201 * C2467 +
                      C67863 * C2818 + C96526 + C96526 + C67856 * C2820) *
                         C152092) *
                        C152054 * C152217) *
                       C151851 * C152208)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C67859 * C142 + C67866 + C67866 + C152237 * C158 +
                      C67861 * C143 + C67867 + C67867 + C152201 * C159 +
                      C67863 * C144 + C67868 + C67868 + C67856 * C160) *
                         C96046 +
                     (C96563 + C96564 + C96565) * C152092) *
                        C152054 * C151869 * C1259 -
                    ((C69223 + C69224 + C69225) * C152092 +
                     (C68206 + C68205 + C68204) * C96046) *
                        C152054 * C151869 * C1260 +
                    ((C68209 + C68208 + C68207) * C96046 +
                     (C69874 + C69875 + C69876) * C152092) *
                        C152054 * C151869 * C152214) *
                       C152255 +
                   (((C68210 + C68211 + C68212) * C96046 +
                     (C69226 + C69227 + C69228) * C152092) *
                        C152054 * C151869 * C1260 -
                    ((C96571 + C96570 + C96569) * C152092 +
                     (C67863 * C145 + C67875 + C67875 + C67856 * C161 +
                      C67861 * C144 + C67876 + C67876 + C152201 * C160 +
                      C67859 * C143 + C67877 + C67877 + C152237 * C159) *
                         C96046) *
                        C152054 * C151869 * C1259 -
                    ((C70397 + C70398 + C70399) * C152092 +
                     (C68215 + C68214 + C68213) * C96046) *
                        C152054 * C151869 * C152214) *
                       C152240 +
                   (((C67859 * C144 + C67878 + C67878 + C152237 * C160 +
                      C67861 * C145 + C67879 + C67879 + C152201 * C161 +
                      C67863 * C146 + C67880 + C67880 + C67856 * C162) *
                         C96046 +
                     (C96575 + C96576 + C96577) * C152092) *
                        C152054 * C151869 * C1259 -
                    ((C69229 + C69230 + C69231) * C152092 +
                     (C68218 + C68217 + C68216) * C96046) *
                        C152054 * C151869 * C1260 +
                    ((C68221 + C68220 + C68219) * C96046 +
                     (C67859 * C1536 + C69202 + C69202 + C152237 * C1560 +
                      C67861 * C1535 + C69203 + C69203 + C152201 * C1559 +
                      C67863 * C1916 + C69204 + C69204 + C67856 * C1918) *
                         C152092) *
                        C152054 * C151869 * C152214) *
                       C152208)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  (((C67859 * C142 + C67866 + C67866 + C152237 * C158 +
                     C67861 * C143 + C67867 + C67867 + C152201 * C159 +
                     C67863 * C144 + C67868 + C67868 + C67856 * C160) *
                        C96046 +
                    (C96563 + C96564 + C96565) * C152092) *
                       C152054 * C151869 * C1347 -
                   ((C69223 + C69224 + C69225) * C152092 +
                    (C68206 + C68205 + C68204) * C96046) *
                       C152054 * C151869 * C1348 +
                   ((C68209 + C68208 + C68207) * C96046 +
                    (C69874 + C69875 + C69876) * C152092) *
                       C152054 * C151869 * C1349 -
                   ((C70609 + C70610 + C70611) * C152092 +
                    (C69604 + C69603 + C69602) * C96046) *
                       C152054 * C151869 * C1350 +
                   ((C69607 + C69606 + C69605) * C96046 +
                    (C67859 * C8841 + C70600 + C70600 + C152237 * C8847 +
                     C67861 * C8842 + C70601 + C70601 + C152201 * C8848 +
                     C67863 * C8843 + C70602 + C70602 + C67856 * C8849) *
                        C152092) *
                       C152054 * C151869 * C1351) *
                  C151823) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C67859 * C142 + C67866 + C67866 + C152237 * C158 +
                      C67861 * C143 + C67867 + C67867 + C152201 * C159 +
                      C67863 * C144 + C67868 + C67868 + C67856 * C160) *
                         C96046 +
                     (C96563 + C96564 + C96565) * C152092) *
                        C152054 * C152259 -
                    ((C96566 + C96567 + C96568) * C152092 +
                     (C96565 + C96564 + C96563) * C96046) *
                        C152054 * C152246 +
                    ((C96568 + C96567 + C96566) * C96046 +
                     (C67859 * C2454 + C71175 + C71175 + C152237 * C2470 +
                      C67861 * C2453 + C71174 + C71174 + C152201 * C2469 +
                      C67863 * C2452 + C71173 + C71173 + C67856 * C2468) *
                         C152092) *
                        C152054 * C152217) *
                       C1259 +
                   (((C69225 + C69224 + C69223) * C96046 +
                     (C69871 + C69872 + C69873) * C152092) *
                        C152054 * C152246 -
                    ((C69223 + C69224 + C69225) * C152092 +
                     (C68206 + C68205 + C68204) * C96046) *
                        C152054 * C152259 -
                    ((C71899 + C71900 + C71901) * C152092 +
                     (C69873 + C69872 + C69871) * C96046) *
                        C152054 * C152217) *
                       C1260 +
                   (((C68209 + C68208 + C68207) * C96046 +
                     (C69874 + C69875 + C69876) * C152092) *
                        C152054 * C152259 -
                    ((C69877 + C69878 + C69879) * C152092 +
                     (C69876 + C69875 + C69874) * C96046) *
                        C152054 * C152246 +
                    ((C69879 + C69878 + C69877) * C96046 +
                     (C67859 * C10149 + C71890 + C71890 + C152237 * C10155 +
                      C67861 * C10150 + C71891 + C71891 + C152201 * C10156 +
                      C67863 * C10151 + C71892 + C71892 + C67856 * C10157) *
                         C152092) *
                        C152054 * C152217) *
                       C152214) *
                  C151823) /
                     (p * q * std::sqrt(p + q));
    d2ee[248] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C67859 * C142 + C67866 + C67866 + C152237 * C158 +
                      C67861 * C143 + C67867 + C67867 + C152201 * C159 +
                      C67863 * C144 + C67868 + C67868 + C67856 * C160) *
                         C96046 +
                     (C96563 + C96564 + C96565) * C152092) *
                        C152054 * C152173 -
                    ((C96566 + C96567 + C96568) * C152092 +
                     (C96565 + C96564 + C96563) * C96046) *
                        C152054 * C151956) *
                       C151851 * C739 +
                   (((C96569 + C96570 + C96571) * C96046 +
                     (C96572 + C96573 + C96574) * C152092) *
                        C152054 * C151956 -
                    ((C96571 + C96570 + C96569) * C152092 +
                     (C67863 * C145 + C67875 + C67875 + C67856 * C161 +
                      C67861 * C144 + C67876 + C67876 + C152201 * C160 +
                      C67859 * C143 + C67877 + C67877 + C152237 * C159) *
                         C96046) *
                        C152054 * C152173) *
                       C151851 * C740 +
                   (((C67859 * C144 + C67878 + C67878 + C152237 * C160 +
                      C67861 * C145 + C67879 + C67879 + C152201 * C161 +
                      C67863 * C146 + C67880 + C67880 + C67856 * C162) *
                         C96046 +
                     (C96575 + C96576 + C96577) * C152092) *
                        C152054 * C152173 -
                    ((C96578 + C96579 + C96580) * C152092 +
                     (C96577 + C96576 + C96575) * C96046) *
                        C152054 * C151956) *
                       C151851 * C741 +
                   (((C96984 + C96985 + C96986) * C96046 +
                     (C67859 * C554 + C96975 + C96975 + C152237 * C578 +
                      C67861 * C556 + C96976 + C96976 + C152201 * C580 +
                      C67863 * C558 + C96977 + C96977 + C67856 * C582) *
                         C152092) *
                        C152054 * C151956 -
                    ((C96986 + C96985 + C96984) * C152092 +
                     (C67863 * C147 + C67887 + C67887 + C67856 * C163 +
                      C67861 * C146 + C67888 + C67888 + C152201 * C162 +
                      C67859 * C145 + C67889 + C67889 + C152237 * C161) *
                         C96046) *
                        C152054 * C152173) *
                       C151851 * C152218)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C67859 * C142 + C67866 + C67866 + C152237 * C158 +
                       C67861 * C143 + C67867 + C67867 + C152201 * C159 +
                       C67863 * C144 + C67868 + C67868 + C67856 * C160) *
                          C96046 +
                      (C96563 + C96564 + C96565) * C152092) *
                         C152054 * C152173 -
                     ((C96566 + C96567 + C96568) * C152092 +
                      (C96565 + C96564 + C96563) * C96046) *
                         C152054 * C151956) *
                        C1259 +
                    (((C69225 + C69224 + C69223) * C96046 +
                      (C69871 + C69872 + C69873) * C152092) *
                         C152054 * C151956 -
                     ((C69223 + C69224 + C69225) * C152092 +
                      (C68206 + C68205 + C68204) * C96046) *
                         C152054 * C152173) *
                        C1260 +
                    (((C68209 + C68208 + C68207) * C96046 +
                      (C69874 + C69875 + C69876) * C152092) *
                         C152054 * C152173 -
                     ((C69877 + C69878 + C69879) * C152092 +
                      (C69876 + C69875 + C69874) * C96046) *
                         C152054 * C151956) *
                        C152214) *
                       C152158 +
                   ((((C96569 + C96570 + C96571) * C96046 +
                      (C96572 + C96573 + C96574) * C152092) *
                         C152054 * C151956 -
                     ((C96571 + C96570 + C96569) * C152092 +
                      (C67863 * C145 + C67875 + C67875 + C67856 * C161 +
                       C67861 * C144 + C67876 + C67876 + C152201 * C160 +
                       C67859 * C143 + C67877 + C67877 + C152237 * C159) *
                          C96046) *
                         C152054 * C152173) *
                        C1259 +
                    (((C68210 + C68211 + C68212) * C96046 +
                      (C69226 + C69227 + C69228) * C152092) *
                         C152054 * C152173 -
                     ((C71487 + C71488 + C71489) * C152092 +
                      (C69228 + C69227 + C69226) * C96046) *
                         C152054 * C151956) *
                        C1260 +
                    (((C70399 + C70398 + C70397) * C96046 +
                      (C67859 * C1540 + C71478 + C71478 + C152237 * C1564 +
                       C67861 * C1541 + C71479 + C71479 + C152201 * C1565 +
                       C67863 * C1542 + C71480 + C71480 + C67856 * C1566) *
                          C152092) *
                         C152054 * C151956 -
                     ((C70397 + C70398 + C70399) * C152092 +
                      (C68215 + C68214 + C68213) * C96046) *
                         C152054 * C152173) *
                        C152214) *
                       C151834)) /
                     (p * q * std::sqrt(p + q));
    d2ee[249] += (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                  (((C67859 * C142 + C67866 + C67866 + C152237 * C158 +
                     C67861 * C143 + C67867 + C67867 + C152201 * C159 +
                     C67863 * C144 + C67868 + C67868 + C67856 * C160) *
                        C96046 +
                    (C67859 * C550 + C68445 + C68445 + C152237 * C574 +
                     C67861 * C549 + C68444 + C68444 + C152201 * C573 +
                     C67863 * C548 + C68443 + C68443 + C67856 * C572) *
                        C152092) *
                       C152054 * C151869 * C151851 * C129 -
                   ((C67863 * C547 + C68454 + C68454 + C67856 * C571 +
                     C67861 * C548 + C68453 + C68453 + C152201 * C572 +
                     C67859 * C549 + C68452 + C68452 + C152237 * C573) *
                        C152092 +
                    (C67863 * C145 + C67875 + C67875 + C67856 * C161 +
                     C67861 * C144 + C67876 + C67876 + C152201 * C160 +
                     C67859 * C143 + C67877 + C67877 + C152237 * C159) *
                        C96046) *
                       C152054 * C151869 * C151851 * C130 +
                   ((C67859 * C144 + C67878 + C67878 + C152237 * C160 +
                     C67861 * C145 + C67879 + C67879 + C152201 * C161 +
                     C67863 * C146 + C67880 + C67880 + C67856 * C162) *
                        C96046 +
                    (C67859 * C548 + C68469 + C68469 + C152237 * C572 +
                     C67861 * C547 + C68468 + C68468 + C152201 * C571 +
                     C67863 * C555 + C68467 + C68467 + C67856 * C579) *
                        C152092) *
                       C152054 * C151869 * C151851 * C131 -
                   ((C67863 * C557 + C68884 + C68884 + C67856 * C581 +
                     C67861 * C555 + C68883 + C68883 + C152201 * C579 +
                     C67859 * C547 + C68882 + C68882 + C152237 * C571) *
                        C152092 +
                    (C67863 * C147 + C67887 + C67887 + C67856 * C163 +
                     C67861 * C146 + C67888 + C67888 + C152201 * C162 +
                     C67859 * C145 + C67889 + C67889 + C152237 * C161) *
                        C96046) *
                       C152054 * C151869 * C151851 * C132 +
                   ((C67859 * C146 + C67890 + C67890 + C152237 * C162 +
                     C67861 * C147 + C67891 + C67891 + C152201 * C163 +
                     C67863 * C148 + C67892 + C67892 + C67856 * C164) *
                        C96046 +
                    (C67859 * C555 + C96049 + C96049 + C152237 * C579 +
                     C67861 * C557 + C96050 + C96050 + C152201 * C581 +
                     C67863 * C882 + C96051 + C96051 + C67856 * C884) *
                        C152092) *
                       C152054 * C151869 * C151851 * C133)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                  ((((C67859 * C142 + C67866 + C67866 + C152237 * C158 +
                      C67861 * C143 + C67867 + C67867 + C152201 * C159 +
                      C67863 * C144 + C67868 + C67868 + C67856 * C160) *
                         C96046 +
                     (C67859 * C550 + C68445 + C68445 + C152237 * C574 +
                      C67861 * C549 + C68444 + C68444 + C152201 * C573 +
                      C67863 * C548 + C68443 + C68443 + C67856 * C572) *
                         C152092) *
                        C152054 * C151869 * C152258 -
                    ((C69223 + C69224 + C69225) * C152092 +
                     (C68206 + C68205 + C68204) * C96046) *
                        C152054 * C151869 * C152244 +
                    ((C68209 + C68208 + C68207) * C96046 +
                     (C69874 + C69875 + C69876) * C152092) *
                        C152054 * C151869 * C152214) *
                       C335 +
                   (((C68210 + C68211 + C68212) * C96046 +
                     (C69226 + C69227 + C69228) * C152092) *
                        C152054 * C151869 * C152244 -
                    ((C67863 * C547 + C68454 + C68454 + C67856 * C571 +
                      C67861 * C548 + C68453 + C68453 + C152201 * C572 +
                      C67859 * C549 + C68452 + C68452 + C152237 * C573) *
                         C152092 +
                     (C67863 * C145 + C67875 + C67875 + C67856 * C161 +
                      C67861 * C144 + C67876 + C67876 + C152201 * C160 +
                      C67859 * C143 + C67877 + C67877 + C152237 * C159) *
                         C96046) *
                        C152054 * C151869 * C152258 -
                    ((C70397 + C70398 + C70399) * C152092 +
                     (C68215 + C68214 + C68213) * C96046) *
                        C152054 * C151869 * C152214) *
                       C336 +
                   (((C67859 * C144 + C67878 + C67878 + C152237 * C160 +
                      C67861 * C145 + C67879 + C67879 + C152201 * C161 +
                      C67863 * C146 + C67880 + C67880 + C67856 * C162) *
                         C96046 +
                     (C67859 * C548 + C68469 + C68469 + C152237 * C572 +
                      C67861 * C547 + C68468 + C68468 + C152201 * C571 +
                      C67863 * C555 + C68467 + C68467 + C67856 * C579) *
                         C152092) *
                        C152054 * C151869 * C152258 -
                    ((C69229 + C69230 + C69231) * C152092 +
                     (C68218 + C68217 + C68216) * C96046) *
                        C152054 * C151869 * C152244 +
                    ((C68221 + C68220 + C68219) * C96046 +
                     (C67859 * C1536 + C69202 + C69202 + C152237 * C1560 +
                      C67861 * C1535 + C69203 + C69203 + C152201 * C1559 +
                      C67863 * C1916 + C69204 + C69204 + C67856 * C1918) *
                         C152092) *
                        C152054 * C151869 * C152214) *
                       C152208)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                  ((((C67859 * C142 + C67866 + C67866 + C152237 * C158 +
                      C67861 * C143 + C67867 + C67867 + C152201 * C159 +
                      C67863 * C144 + C67868 + C67868 + C67856 * C160) *
                         C96046 +
                     (C96563 + C96564 + C96565) * C152092) *
                        C152054 * C151869 * C1259 -
                    ((C69223 + C69224 + C69225) * C152092 +
                     (C68206 + C68205 + C68204) * C96046) *
                        C152054 * C151869 * C1260 +
                    ((C68209 + C68208 + C68207) * C96046 +
                     (C69874 + C69875 + C69876) * C152092) *
                        C152054 * C151869 * C152214) *
                       C152255 +
                   (((C68210 + C68211 + C68212) * C96046 +
                     (C69226 + C69227 + C69228) * C152092) *
                        C152054 * C151869 * C1260 -
                    ((C96571 + C96570 + C96569) * C152092 +
                     (C67863 * C145 + C67875 + C67875 + C67856 * C161 +
                      C67861 * C144 + C67876 + C67876 + C152201 * C160 +
                      C67859 * C143 + C67877 + C67877 + C152237 * C159) *
                         C96046) *
                        C152054 * C151869 * C1259 -
                    ((C70397 + C70398 + C70399) * C152092 +
                     (C68215 + C68214 + C68213) * C96046) *
                        C152054 * C151869 * C152214) *
                       C152240 +
                   (((C67859 * C144 + C67878 + C67878 + C152237 * C160 +
                      C67861 * C145 + C67879 + C67879 + C152201 * C161 +
                      C67863 * C146 + C67880 + C67880 + C67856 * C162) *
                         C96046 +
                     (C96575 + C96576 + C96577) * C152092) *
                        C152054 * C151869 * C1259 -
                    ((C69229 + C69230 + C69231) * C152092 +
                     (C68218 + C68217 + C68216) * C96046) *
                        C152054 * C151869 * C1260 +
                    ((C68221 + C68220 + C68219) * C96046 +
                     (C67859 * C1536 + C69202 + C69202 + C152237 * C1560 +
                      C67861 * C1535 + C69203 + C69203 + C152201 * C1559 +
                      C67863 * C1916 + C69204 + C69204 + C67856 * C1918) *
                         C152092) *
                        C152054 * C151869 * C152214) *
                       C152208)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                  (((C67859 * C142 + C67866 + C67866 + C152237 * C158 +
                     C67861 * C143 + C67867 + C67867 + C152201 * C159 +
                     C67863 * C144 + C67868 + C67868 + C67856 * C160) *
                        C96046 +
                    (C96563 + C96564 + C96565) * C152092) *
                       C152054 * C151869 * C1347 -
                   ((C69223 + C69224 + C69225) * C152092 +
                    (C68206 + C68205 + C68204) * C96046) *
                       C152054 * C151869 * C1348 +
                   ((C68209 + C68208 + C68207) * C96046 +
                    (C69874 + C69875 + C69876) * C152092) *
                       C152054 * C151869 * C1349 -
                   ((C70609 + C70610 + C70611) * C152092 +
                    (C69604 + C69603 + C69602) * C96046) *
                       C152054 * C151869 * C1350 +
                   ((C69607 + C69606 + C69605) * C96046 +
                    (C67859 * C8841 + C70600 + C70600 + C152237 * C8847 +
                     C67861 * C8842 + C70601 + C70601 + C152201 * C8848 +
                     C67863 * C8843 + C70602 + C70602 + C67856 * C8849) *
                        C152092) *
                       C152054 * C151869 * C1351) *
                  C151823) /
                     (p * q * std::sqrt(p + q));
    d2ee[250] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
              C76462 + C76462 + C151796 * C159) *
                 C96046 +
             (C85731 + C85732) * C152092) *
                C152187 +
            ((C76793 + C76794) * C96046 + C86671 * C152092) * C152068) *
               C151869 * C151910 -
           ((C78429 * C152092 + (C76796 + C76795) * C96046) * C152068 +
            (C86672 * C152092 + (C76794 + C76793) * C96046) * C152187) *
               C151869 * C151917 +
           ((C76811 * C96046 + C87421 * C152092) * C152187 +
            ((C76798 + C76797) * C96046 + C79185 * C152092) * C152068) *
               C151869 * C3585) *
              C151828 +
          ((((C76799 + C76800) * C96046 + C86673 * C152092) * C152187 +
            ((C76801 + C76802) * C96046 + C78977 * C152092) * C152068) *
               C151869 * C151917 -
           ((C86674 * C152092 + (C76800 + C76799) * C96046) * C152068 +
            ((C85736 + C85735) * C152092 +
             (C76458 * C144 + C76471 + C76471 + C151796 * C160 + C76456 * C143 +
              C76472 + C76472 + C76451 * C159) *
                 C96046) *
                C152187) *
               C151869 * C151910 -
           (((C78989 + C78990) * C152092 + (C76804 + C76803) * C96046) *
                C152068 +
            (C88067 * C152092 + C76812 * C96046) * C152187) *
               C151869 * C3585) *
              C151837 +
          ((((C76456 * C144 + C76473 + C76473 + C76451 * C160 + C76458 * C145 +
              C76474 + C76474 + C151796 * C161) *
                 C96046 +
             (C85739 + C85740) * C152092) *
                C152187 +
            ((C76805 + C76806) * C96046 + C86675 * C152092) * C152068) *
               C151869 * C151910 -
           (((C77839 + C77840) * C152092 + (C76808 + C76807) * C96046) *
                C152068 +
            (C86676 * C152092 + (C76806 + C76805) * C96046) * C152187) *
               C151869 * C151917 +
           ((C76813 * C96046 + (C77840 + C77839) * C152092) * C152187 +
            ((C76810 + C76809) * C96046 +
             (C76456 * C2055 + C77805 + C77805 + C76451 * C2063 +
              C76458 * C2056 + C77806 + C77806 + C151796 * C2064) *
                 C152092) *
                C152068) *
               C151869 * C3585) *
              C3588)) /
        (p * q * std::sqrt(p + q));
    d2ee[251] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
               C76462 + C76462 + C151796 * C159) *
                  C96046 +
              (C85731 + C85732) * C152092) *
                 C152187 +
             ((C76793 + C76794) * C96046 + C86671 * C152092) * C152068) *
                C152173 -
            ((C87419 * C152092 + C86672 * C96046) * C152068 +
             ((C85733 + C85734) * C152092 + (C85732 + C85731) * C96046) *
                 C152187) *
                C151956) *
               C151910 +
           (((C86671 * C96046 + C87420 * C152092) * C152187 +
             (C87421 * C96046 + C78477 * C152092) * C152068) *
                C151956 -
            ((C78429 * C152092 + (C76796 + C76795) * C96046) * C152068 +
             (C86672 * C152092 + (C76794 + C76793) * C96046) * C152187) *
                C152173) *
               C151917 +
           (((C76811 * C96046 + C87421 * C152092) * C152187 +
             ((C76798 + C76797) * C96046 + C79185 * C152092) * C152068) *
                C152173 -
            (((C78475 + C78476) * C152092 + C88326 * C96046) * C152068 +
             (C87422 * C152092 + C78429 * C96046) * C152187) *
                C151956) *
               C3585) *
              C3241 +
          (((((C85735 + C85736) * C96046 + (C85737 + C85738) * C152092) *
                 C152187 +
             (C86673 * C96046 + C89489 * C152092) * C152068) *
                C151956 -
            ((C86674 * C152092 + (C76800 + C76799) * C96046) * C152068 +
             ((C85736 + C85735) * C152092 +
              (C76458 * C144 + C76471 + C76471 + C151796 * C160 +
               C76456 * C143 + C76472 + C76472 + C76451 * C159) *
                  C96046) *
                 C152187) *
                C152173) *
               C151910 +
           ((((C76799 + C76800) * C96046 + C86673 * C152092) * C152187 +
             ((C76801 + C76802) * C96046 + C78977 * C152092) * C152068) *
                C152173 -
            (((C80077 + C80078) * C152092 + C88067 * C96046) * C152068 +
             (C89494 * C152092 + C86674 * C96046) * C152187) *
                C151956) *
               C151917 +
           (((C78977 * C96046 + (C80078 + C80077) * C152092) * C152187 +
             ((C78990 + C78989) * C96046 +
              (C76456 * C8065 + C80067 + C80067 + C76451 * C8071 +
               C76458 * C8066 + C80068 + C80068 + C151796 * C8072) *
                  C152092) *
                 C152068) *
                C151956 -
            (((C78989 + C78990) * C152092 + (C76804 + C76803) * C96046) *
                 C152068 +
             (C88067 * C152092 + C76812 * C96046) * C152187) *
                C152173) *
               C3585) *
              C151834)) /
        (p * q * std::sqrt(p + q));
    d2ee[252] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
              C76462 + C76462 + C151796 * C159) *
                 C96046 +
             (C85731 + C85732) * C152092) *
                C152187 +
            ((C76793 + C76794) * C96046 + C86671 * C152092) * C152068) *
               C151869 * C152265 -
           ((C78429 * C152092 + (C76796 + C76795) * C96046) * C152068 +
            (C86672 * C152092 + (C76794 + C76793) * C96046) * C152187) *
               C151869 * C152261 +
           ((C76811 * C96046 + C87421 * C152092) * C152187 +
            ((C76798 + C76797) * C96046 + C79185 * C152092) * C152068) *
               C151869 * C152249 -
           (((C79197 + C79198) * C152092 + (C78206 + C78205) * C96046) *
                C152068 +
            (C88326 * C152092 + C78183 * C96046) * C152187) *
               C151869 * C152224) *
              C3241 +
          ((((C76799 + C76800) * C96046 + C86673 * C152092) * C152187 +
            ((C76801 + C76802) * C96046 + C78977 * C152092) * C152068) *
               C151869 * C152261 -
           ((C86674 * C152092 + (C76800 + C76799) * C96046) * C152068 +
            ((C85736 + C85735) * C152092 +
             (C76458 * C144 + C76471 + C76471 + C151796 * C160 + C76456 * C143 +
              C76472 + C76472 + C76451 * C159) *
                 C96046) *
                C152187) *
               C151869 * C152265 -
           (((C78989 + C78990) * C152092 + (C76804 + C76803) * C96046) *
                C152068 +
            (C88067 * C152092 + C76812 * C96046) * C152187) *
               C151869 * C152249 +
           ((C78673 * C96046 + (C78990 + C78989) * C152092) * C152187 +
            ((C78686 + C78685) * C96046 +
             (C76456 * C8842 + C78982 + C78982 + C76451 * C8848 +
              C76458 * C8843 + C78983 + C78983 + C151796 * C8849) *
                 C152092) *
                C152068) *
               C151869 * C152224) *
              C151834)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
              C76462 + C76462 + C151796 * C159) *
                 C96046 +
             (C85731 + C85732) * C152092) *
                C152187 +
            ((C76793 + C76794) * C96046 + C86671 * C152092) * C152068) *
               C151869 * C3101 -
           ((C78429 * C152092 + (C76796 + C76795) * C96046) * C152068 +
            (C86672 * C152092 + (C76794 + C76793) * C96046) * C152187) *
               C151869 * C151914) *
              C152264 +
          ((((C76799 + C76800) * C96046 + C86673 * C152092) * C152187 +
            ((C76801 + C76802) * C96046 + C78977 * C152092) * C152068) *
               C151869 * C151914 -
           ((C86674 * C152092 + (C76800 + C76799) * C96046) * C152068 +
            ((C85736 + C85735) * C152092 +
             (C76458 * C144 + C76471 + C76471 + C151796 * C160 + C76456 * C143 +
              C76472 + C76472 + C76451 * C159) *
                 C96046) *
                C152187) *
               C151869 * C3101) *
              C152257 +
          ((((C76456 * C144 + C76473 + C76473 + C76451 * C160 + C76458 * C145 +
              C76474 + C76474 + C151796 * C161) *
                 C96046 +
             (C85739 + C85740) * C152092) *
                C152187 +
            ((C76805 + C76806) * C96046 + C86675 * C152092) * C152068) *
               C151869 * C3101 -
           (((C77839 + C77840) * C152092 + (C76808 + C76807) * C96046) *
                C152068 +
            (C86676 * C152092 + (C76806 + C76805) * C96046) * C152187) *
               C151869 * C151914) *
              C152242 +
          ((((C77283 + C77284) * C96046 + (C86011 + C86012) * C152092) *
                C152187 +
            ((C77285 + C77286) * C96046 +
             (C76456 * C1535 + C77485 + C77485 + C76451 * C1559 +
              C76458 * C1916 + C77486 + C77486 + C151796 * C1918) *
                 C152092) *
                C152068) *
               C151869 * C151914 -
           (((C86012 + C86011) * C152092 + (C77284 + C77283) * C96046) *
                C152068 +
            ((C86284 + C86283) * C152092 +
             (C76458 * C146 + C76483 + C76483 + C151796 * C162 + C76456 * C145 +
              C76484 + C76484 + C76451 * C161) *
                 C96046) *
                C152187) *
               C151869 * C3101) *
              C152218)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
               C76462 + C76462 + C151796 * C159) *
                  C96046 +
              (C85731 + C85732) * C152092) *
                 C152187 +
             ((C76793 + C76794) * C96046 + C86671 * C152092) * C152068) *
                C152259 -
            ((C87419 * C152092 + C86672 * C96046) * C152068 +
             ((C85733 + C85734) * C152092 + (C85732 + C85731) * C96046) *
                 C152187) *
                C152246 +
            (((C85734 + C85733) * C96046 + (C89097 + C89098) * C152092) *
                 C152187 +
             (C87420 * C96046 + C90031 * C152092) * C152068) *
                C152217) *
               C3101 +
           (((C86671 * C96046 + C87420 * C152092) * C152187 +
             (C87421 * C96046 + C78477 * C152092) * C152068) *
                C152246 -
            ((C78429 * C152092 + (C76796 + C76795) * C96046) * C152068 +
             (C86672 * C152092 + (C76794 + C76793) * C96046) * C152187) *
                C152259 -
            (((C80493 + C80494) * C152092 + C87422 * C96046) * C152068 +
             (C90032 * C152092 + C87419 * C96046) * C152187) *
                C152217) *
               C151914) *
              C3241 +
          (((((C85735 + C85736) * C96046 + (C85737 + C85738) * C152092) *
                 C152187 +
             (C86673 * C96046 + C89489 * C152092) * C152068) *
                C152246 -
            ((C86674 * C152092 + (C76800 + C76799) * C96046) * C152068 +
             ((C85736 + C85735) * C152092 +
              (C76458 * C144 + C76471 + C76471 + C151796 * C160 +
               C76456 * C143 + C76472 + C76472 + C76451 * C159) *
                  C96046) *
                 C152187) *
                C152259 -
            (((C89499 + C89500) * C152092 + C89494 * C96046) * C152068 +
             ((C89771 + C89772) * C152092 + (C85738 + C85737) * C96046) *
                 C152187) *
                C152217) *
               C3101 +
           ((((C76799 + C76800) * C96046 + C86673 * C152092) * C152187 +
             ((C76801 + C76802) * C96046 + C78977 * C152092) * C152068) *
                C152259 -
            (((C80077 + C80078) * C152092 + C88067 * C96046) * C152068 +
             (C89494 * C152092 + C86674 * C96046) * C152187) *
                C152246 +
            ((C89489 * C96046 + (C89500 + C89499) * C152092) * C152187 +
             ((C80078 + C80077) * C96046 +
              (C76456 * C10150 + C80279 + C80279 + C76451 * C10156 +
               C76458 * C10151 + C80280 + C80280 + C151796 * C10157) *
                  C152092) *
                 C152068) *
                C152217) *
               C151914) *
              C151834)) /
            (p * q * std::sqrt(p + q));
    d2ee[253] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
               C76462 + C76462 + C151796 * C159) *
                  C96046 +
              (C85731 + C85732) * C152092) *
                 C152187 +
             ((C76793 + C76794) * C96046 + C86671 * C152092) * C152068) *
                C152173 -
            ((C87419 * C152092 + C86672 * C96046) * C152068 +
             ((C85733 + C85734) * C152092 + (C85732 + C85731) * C96046) *
                 C152187) *
                C151956) *
               C3101 +
           (((C86671 * C96046 + C87420 * C152092) * C152187 +
             (C87421 * C96046 + C78477 * C152092) * C152068) *
                C151956 -
            ((C78429 * C152092 + (C76796 + C76795) * C96046) * C152068 +
             (C86672 * C152092 + (C76794 + C76793) * C96046) * C152187) *
                C152173) *
               C151914) *
              C151828 +
          (((((C85735 + C85736) * C96046 + (C85737 + C85738) * C152092) *
                 C152187 +
             (C86673 * C96046 + C89489 * C152092) * C152068) *
                C151956 -
            ((C86674 * C152092 + (C76800 + C76799) * C96046) * C152068 +
             ((C85736 + C85735) * C152092 +
              (C76458 * C144 + C76471 + C76471 + C151796 * C160 +
               C76456 * C143 + C76472 + C76472 + C76451 * C159) *
                  C96046) *
                 C152187) *
                C152173) *
               C3101 +
           ((((C76799 + C76800) * C96046 + C86673 * C152092) * C152187 +
             ((C76801 + C76802) * C96046 + C78977 * C152092) * C152068) *
                C152173 -
            (((C80077 + C80078) * C152092 + C88067 * C96046) * C152068 +
             (C89494 * C152092 + C86674 * C96046) * C152187) *
                C151956) *
               C151914) *
              C151837 +
          (((((C76456 * C144 + C76473 + C76473 + C76451 * C160 + C76458 * C145 +
               C76474 + C76474 + C151796 * C161) *
                  C96046 +
              (C85739 + C85740) * C152092) *
                 C152187 +
             ((C76805 + C76806) * C96046 + C86675 * C152092) * C152068) *
                C152173 -
            (((C85741 + C85742) * C152092 + C86676 * C96046) * C152068 +
             ((C85743 + C85744) * C152092 + (C85740 + C85739) * C96046) *
                 C152187) *
                C151956) *
               C3101 +
           (((C86675 * C96046 + (C85742 + C85741) * C152092) * C152187 +
             ((C77840 + C77839) * C96046 +
              (C76456 * C1541 + C77069 + C77069 + C76451 * C1565 +
               C76458 * C1542 + C77070 + C77070 + C151796 * C1566) *
                  C152092) *
                 C152068) *
                C151956 -
            (((C77839 + C77840) * C152092 + (C76808 + C76807) * C96046) *
                 C152068 +
             (C86676 * C152092 + (C76806 + C76805) * C96046) * C152187) *
                C152173) *
               C151914) *
              C3588)) /
        (p * q * std::sqrt(p + q));
    d2ee[254] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
              C76462 + C76462 + C151796 * C159) *
                 C96046 +
             (C85731 + C85732) * C152092) *
                C152187 +
            ((C76793 + C76794) * C96046 + C86671 * C152092) * C152068) *
               C151869 * C3101 -
           ((C78429 * C152092 + (C76796 + C76795) * C96046) * C152068 +
            (C86672 * C152092 + (C76794 + C76793) * C96046) * C152187) *
               C151869 * C151914) *
              C152264 +
          ((((C76799 + C76800) * C96046 + C86673 * C152092) * C152187 +
            ((C76801 + C76802) * C96046 + C78977 * C152092) * C152068) *
               C151869 * C151914 -
           ((C86674 * C152092 + (C76800 + C76799) * C96046) * C152068 +
            ((C85736 + C85735) * C152092 +
             (C76458 * C144 + C76471 + C76471 + C151796 * C160 + C76456 * C143 +
              C76472 + C76472 + C76451 * C159) *
                 C96046) *
                C152187) *
               C151869 * C3101) *
              C152257 +
          ((((C76456 * C144 + C76473 + C76473 + C76451 * C160 + C76458 * C145 +
              C76474 + C76474 + C151796 * C161) *
                 C96046 +
             (C85739 + C85740) * C152092) *
                C152187 +
            ((C76805 + C76806) * C96046 + C86675 * C152092) * C152068) *
               C151869 * C3101 -
           (((C77839 + C77840) * C152092 + (C76808 + C76807) * C96046) *
                C152068 +
            (C86676 * C152092 + (C76806 + C76805) * C96046) * C152187) *
               C151869 * C151914) *
              C152242 +
          ((((C77283 + C77284) * C96046 + (C86011 + C86012) * C152092) *
                C152187 +
            ((C77285 + C77286) * C96046 +
             (C76456 * C1535 + C77485 + C77485 + C76451 * C1559 +
              C76458 * C1916 + C77486 + C77486 + C151796 * C1918) *
                 C152092) *
                C152068) *
               C151869 * C151914 -
           (((C86012 + C86011) * C152092 + (C77284 + C77283) * C96046) *
                C152068 +
            ((C86284 + C86283) * C152092 +
             (C76458 * C146 + C76483 + C76483 + C151796 * C162 + C76456 * C145 +
              C76484 + C76484 + C76451 * C161) *
                 C96046) *
                C152187) *
               C151869 * C3101) *
              C152218)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
              C76462 + C76462 + C151796 * C159) *
                 C96046 +
             (C85731 + C85732) * C152092) *
                C152187 +
            ((C76793 + C76794) * C96046 + C86671 * C152092) * C152068) *
               C151869 * C152265 -
           ((C78429 * C152092 + (C76796 + C76795) * C96046) * C152068 +
            (C86672 * C152092 + (C76794 + C76793) * C96046) * C152187) *
               C151869 * C152261 +
           ((C76811 * C96046 + C87421 * C152092) * C152187 +
            ((C76798 + C76797) * C96046 + C79185 * C152092) * C152068) *
               C151869 * C152249 -
           (((C79197 + C79198) * C152092 + (C78206 + C78205) * C96046) *
                C152068 +
            (C88326 * C152092 + C78183 * C96046) * C152187) *
               C151869 * C152224) *
              C3241 +
          ((((C76799 + C76800) * C96046 + C86673 * C152092) * C152187 +
            ((C76801 + C76802) * C96046 + C78977 * C152092) * C152068) *
               C151869 * C152261 -
           ((C86674 * C152092 + (C76800 + C76799) * C96046) * C152068 +
            ((C85736 + C85735) * C152092 +
             (C76458 * C144 + C76471 + C76471 + C151796 * C160 + C76456 * C143 +
              C76472 + C76472 + C76451 * C159) *
                 C96046) *
                C152187) *
               C151869 * C152265 -
           (((C78989 + C78990) * C152092 + (C76804 + C76803) * C96046) *
                C152068 +
            (C88067 * C152092 + C76812 * C96046) * C152187) *
               C151869 * C152249 +
           ((C78673 * C96046 + (C78990 + C78989) * C152092) * C152187 +
            ((C78686 + C78685) * C96046 +
             (C76456 * C8842 + C78982 + C78982 + C76451 * C8848 +
              C76458 * C8843 + C78983 + C78983 + C151796 * C8849) *
                 C152092) *
                C152068) *
               C151869 * C152224) *
              C151834)) /
            (p * q * std::sqrt(p + q));
    d2ee[255] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
               C76462 + C76462 + C151796 * C159) *
                  C96046 +
              (C85731 + C85732) * C152092) *
                 C152187 +
             ((C76793 + C76794) * C96046 + C86671 * C152092) * C152068) *
                C4107 -
            ((C87419 * C152092 + C86672 * C96046) * C152068 +
             ((C85733 + C85734) * C152092 + (C85732 + C85731) * C96046) *
                 C152187) *
                C151956) *
               C151910 +
           (((C86671 * C96046 + C87420 * C152092) * C152187 +
             (C87421 * C96046 + C78477 * C152092) * C152068) *
                C151956 -
            ((C78429 * C152092 + (C76796 + C76795) * C96046) * C152068 +
             (C86672 * C152092 + (C76794 + C76793) * C96046) * C152187) *
                C4107) *
               C151917 +
           (((C76811 * C96046 + C87421 * C152092) * C152187 +
             ((C76798 + C76797) * C96046 + C79185 * C152092) * C152068) *
                C4107 -
            (((C78475 + C78476) * C152092 + C88326 * C96046) * C152068 +
             (C87422 * C152092 + C78429 * C96046) * C152187) *
                C151956) *
               C3585) *
              C152158 +
          (((((C85735 + C85736) * C96046 + (C85737 + C85738) * C152092) *
                 C152187 +
             (C86673 * C96046 + C89489 * C152092) * C152068) *
                C151956 -
            ((C86674 * C152092 + (C76800 + C76799) * C96046) * C152068 +
             ((C85736 + C85735) * C152092 +
              (C76458 * C144 + C76471 + C76471 + C151796 * C160 +
               C76456 * C143 + C76472 + C76472 + C76451 * C159) *
                  C96046) *
                 C152187) *
                C4107) *
               C151910 +
           ((((C76799 + C76800) * C96046 + C86673 * C152092) * C152187 +
             ((C76801 + C76802) * C96046 + C78977 * C152092) * C152068) *
                C4107 -
            (((C80077 + C80078) * C152092 + C88067 * C96046) * C152068 +
             (C89494 * C152092 + C86674 * C96046) * C152187) *
                C151956) *
               C151917 +
           (((C78977 * C96046 + (C80078 + C80077) * C152092) * C152187 +
             ((C78990 + C78989) * C96046 +
              (C76456 * C8065 + C80067 + C80067 + C76451 * C8071 +
               C76458 * C8066 + C80068 + C80068 + C151796 * C8072) *
                  C152092) *
                 C152068) *
                C151956 -
            (((C78989 + C78990) * C152092 + (C76804 + C76803) * C96046) *
                 C152068 +
             (C88067 * C152092 + C76812 * C96046) * C152187) *
                C4107) *
               C3585) *
              C151834)) /
        (p * q * std::sqrt(p + q));
    d2ee[256] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
              C76462 + C76462 + C151796 * C159) *
                 C96046 +
             (C85731 + C85732) * C152092) *
                C152187 +
            ((C76793 + C76794) * C96046 + C86671 * C152092) * C152068) *
               C151952 -
           ((C87419 * C152092 + C86672 * C96046) * C152068 +
            ((C85733 + C85734) * C152092 + (C85732 + C85731) * C96046) *
                C152187) *
               C151959 +
           (((C85734 + C85733) * C96046 + (C89097 + C89098) * C152092) *
                C152187 +
            (C87420 * C96046 + C90031 * C152092) * C152068) *
               C4779) *
              C151910 +
          (((C86671 * C96046 + C87420 * C152092) * C152187 +
            (C87421 * C96046 + C78477 * C152092) * C152068) *
               C151959 -
           ((C78429 * C152092 + (C76796 + C76795) * C96046) * C152068 +
            (C86672 * C152092 + (C76794 + C76793) * C96046) * C152187) *
               C151952 -
           (((C80493 + C80494) * C152092 + C87422 * C96046) * C152068 +
            (C90032 * C152092 + C87419 * C96046) * C152187) *
               C4779) *
              C151917 +
          (((C76811 * C96046 + C87421 * C152092) * C152187 +
            ((C76798 + C76797) * C96046 + C79185 * C152092) * C152068) *
               C151952 -
           (((C78475 + C78476) * C152092 + C88326 * C96046) * C152068 +
            (C87422 * C152092 + C78429 * C96046) * C152187) *
               C151959 +
           ((C78477 * C96046 + (C80494 + C80493) * C152092) * C152187 +
            ((C78476 + C78475) * C96046 +
             (C76456 * C27085 + C80483 + C80483 + C76451 * C27089 +
              C76458 * C27086 + C80484 + C80484 + C151796 * C27090) *
                 C152092) *
                C152068) *
               C4779) *
              C3585) *
         C151823) /
        (p * q * std::sqrt(p + q));
    d2ee[257] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
              C76462 + C76462 + C151796 * C159) *
                 C96046 +
             (C85731 + C85732) * C152092) *
                C152187 +
            ((C76793 + C76794) * C96046 + C86671 * C152092) * C152068) *
               C4107 -
           ((C87419 * C152092 + C86672 * C96046) * C152068 +
            ((C85733 + C85734) * C152092 + (C85732 + C85731) * C96046) *
                C152187) *
               C151956) *
              C152265 +
          (((C86671 * C96046 + C87420 * C152092) * C152187 +
            (C87421 * C96046 + C78477 * C152092) * C152068) *
               C151956 -
           ((C78429 * C152092 + (C76796 + C76795) * C96046) * C152068 +
            (C86672 * C152092 + (C76794 + C76793) * C96046) * C152187) *
               C4107) *
              C152261 +
          (((C76811 * C96046 + C87421 * C152092) * C152187 +
            ((C76798 + C76797) * C96046 + C79185 * C152092) * C152068) *
               C4107 -
           (((C78475 + C78476) * C152092 + C88326 * C96046) * C152068 +
            (C87422 * C152092 + C78429 * C96046) * C152187) *
               C151956) *
              C152249 +
          (((C79185 * C96046 + (C78476 + C78475) * C152092) * C152187 +
            ((C79198 + C79197) * C96046 +
             (C76456 * C25021 + C78450 + C78450 + C76451 * C25025 +
              C76458 * C25022 + C78451 + C78451 + C151796 * C25026) *
                 C152092) *
                C152068) *
               C151956 -
           (((C79197 + C79198) * C152092 + (C78206 + C78205) * C96046) *
                C152068 +
            (C88326 * C152092 + C78183 * C96046) * C152187) *
               C4107) *
              C152224) *
         C151823) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
               C76462 + C76462 + C151796 * C159) *
                  C96046 +
              (C85731 + C85732) * C152092) *
                 C152187 +
             ((C76793 + C76794) * C96046 + C86671 * C152092) * C152068) *
                C4107 -
            ((C87419 * C152092 + C86672 * C96046) * C152068 +
             ((C85733 + C85734) * C152092 + (C85732 + C85731) * C96046) *
                 C152187) *
                C151956) *
               C3101 +
           (((C86671 * C96046 + C87420 * C152092) * C152187 +
             (C87421 * C96046 + C78477 * C152092) * C152068) *
                C151956 -
            ((C78429 * C152092 + (C76796 + C76795) * C96046) * C152068 +
             (C86672 * C152092 + (C76794 + C76793) * C96046) * C152187) *
                C4107) *
               C151914) *
              C152255 +
          (((((C85735 + C85736) * C96046 + (C85737 + C85738) * C152092) *
                 C152187 +
             (C86673 * C96046 + C89489 * C152092) * C152068) *
                C151956 -
            ((C86674 * C152092 + (C76800 + C76799) * C96046) * C152068 +
             ((C85736 + C85735) * C152092 +
              (C76458 * C144 + C76471 + C76471 + C151796 * C160 +
               C76456 * C143 + C76472 + C76472 + C76451 * C159) *
                  C96046) *
                 C152187) *
                C4107) *
               C3101 +
           ((((C76799 + C76800) * C96046 + C86673 * C152092) * C152187 +
             ((C76801 + C76802) * C96046 + C78977 * C152092) * C152068) *
                C4107 -
            (((C80077 + C80078) * C152092 + C88067 * C96046) * C152068 +
             (C89494 * C152092 + C86674 * C96046) * C152187) *
                C151956) *
               C151914) *
              C152240 +
          (((((C76456 * C144 + C76473 + C76473 + C76451 * C160 + C76458 * C145 +
               C76474 + C76474 + C151796 * C161) *
                  C96046 +
              (C85739 + C85740) * C152092) *
                 C152187 +
             ((C76805 + C76806) * C96046 + C86675 * C152092) * C152068) *
                C4107 -
            (((C85741 + C85742) * C152092 + C86676 * C96046) * C152068 +
             ((C85743 + C85744) * C152092 + (C85740 + C85739) * C96046) *
                 C152187) *
                C151956) *
               C3101 +
           (((C86675 * C96046 + (C85742 + C85741) * C152092) * C152187 +
             ((C77840 + C77839) * C96046 +
              (C76456 * C1541 + C77069 + C77069 + C76451 * C1565 +
               C76458 * C1542 + C77070 + C77070 + C151796 * C1566) *
                  C152092) *
                 C152068) *
                C151956 -
            (((C77839 + C77840) * C152092 + (C76808 + C76807) * C96046) *
                 C152068 +
             (C86676 * C152092 + (C76806 + C76805) * C96046) * C152187) *
                C4107) *
               C151914) *
              C152208)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
              C76462 + C76462 + C151796 * C159) *
                 C96046 +
             (C85731 + C85732) * C152092) *
                C152187 +
            ((C76793 + C76794) * C96046 + C86671 * C152092) * C152068) *
               C152266 -
           ((C87419 * C152092 + C86672 * C96046) * C152068 +
            ((C85733 + C85734) * C152092 + (C85732 + C85731) * C96046) *
                C152187) *
               C152263 +
           (((C85734 + C85733) * C96046 + (C89097 + C89098) * C152092) *
                C152187 +
            (C87420 * C96046 + C90031 * C152092) * C152068) *
               C152252 -
           (((C89099 + C89100) * C152092 + C90032 * C96046) * C152068 +
            ((C89101 + C89102) * C152092 + (C89098 + C89097) * C96046) *
                C152187) *
               C152230) *
              C3101 +
          (((C86671 * C96046 + C87420 * C152092) * C152187 +
            (C87421 * C96046 + C78477 * C152092) * C152068) *
               C152263 -
           ((C78429 * C152092 + (C76796 + C76795) * C96046) * C152068 +
            (C86672 * C152092 + (C76794 + C76793) * C96046) * C152187) *
               C152266 -
           (((C80493 + C80494) * C152092 + C87422 * C96046) * C152068 +
            (C90032 * C152092 + C87419 * C96046) * C152187) *
               C152252 +
           ((C90031 * C96046 + (C89100 + C89099) * C152092) * C152187 +
            ((C80494 + C80493) * C96046 +
             (C76456 * C26361 + C79767 + C79767 + C76451 * C26365 +
              C76458 * C26362 + C79768 + C79768 + C151796 * C26366) *
                 C152092) *
                C152068) *
               C152230) *
              C151914) *
         C151823) /
            (p * q * std::sqrt(p + q));
    d2ee[258] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
               C76462 + C76462 + C151796 * C159) *
                  C96046 +
              (C85731 + C85732) * C152092) *
                 C152187 +
             ((C76793 + C76794) * C96046 + C86671 * C152092) * C152068) *
                C151952 -
            ((C87419 * C152092 + C86672 * C96046) * C152068 +
             ((C85733 + C85734) * C152092 + (C85732 + C85731) * C96046) *
                 C152187) *
                C151959 +
            (((C85734 + C85733) * C96046 + (C89097 + C89098) * C152092) *
                 C152187 +
             (C87420 * C96046 + C90031 * C152092) * C152068) *
                C4779) *
               C3101 +
           (((C86671 * C96046 + C87420 * C152092) * C152187 +
             (C87421 * C96046 + C78477 * C152092) * C152068) *
                C151959 -
            ((C78429 * C152092 + (C76796 + C76795) * C96046) * C152068 +
             (C86672 * C152092 + (C76794 + C76793) * C96046) * C152187) *
                C151952 -
            (((C80493 + C80494) * C152092 + C87422 * C96046) * C152068 +
             (C90032 * C152092 + C87419 * C96046) * C152187) *
                C4779) *
               C151914) *
              C152158 +
          (((((C85735 + C85736) * C96046 + (C85737 + C85738) * C152092) *
                 C152187 +
             (C86673 * C96046 + C89489 * C152092) * C152068) *
                C151959 -
            ((C86674 * C152092 + (C76800 + C76799) * C96046) * C152068 +
             ((C85736 + C85735) * C152092 +
              (C76458 * C144 + C76471 + C76471 + C151796 * C160 +
               C76456 * C143 + C76472 + C76472 + C76451 * C159) *
                  C96046) *
                 C152187) *
                C151952 -
            (((C89499 + C89500) * C152092 + C89494 * C96046) * C152068 +
             ((C89771 + C89772) * C152092 + (C85738 + C85737) * C96046) *
                 C152187) *
                C4779) *
               C3101 +
           ((((C76799 + C76800) * C96046 + C86673 * C152092) * C152187 +
             ((C76801 + C76802) * C96046 + C78977 * C152092) * C152068) *
                C151952 -
            (((C80077 + C80078) * C152092 + C88067 * C96046) * C152068 +
             (C89494 * C152092 + C86674 * C96046) * C152187) *
                C151959 +
            ((C89489 * C96046 + (C89500 + C89499) * C152092) * C152187 +
             ((C80078 + C80077) * C96046 +
              (C76456 * C10150 + C80279 + C80279 + C76451 * C10156 +
               C76458 * C10151 + C80280 + C80280 + C151796 * C10157) *
                  C152092) *
                 C152068) *
                C4779) *
               C151914) *
              C151834)) /
        (p * q * std::sqrt(p + q));
    d2ee[259] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
               C76462 + C76462 + C151796 * C159) *
                  C96046 +
              (C85731 + C85732) * C152092) *
                 C152187 +
             ((C76793 + C76794) * C96046 + C86671 * C152092) * C152068) *
                C4107 -
            ((C87419 * C152092 + C86672 * C96046) * C152068 +
             ((C85733 + C85734) * C152092 + (C85732 + C85731) * C96046) *
                 C152187) *
                C151956) *
               C3101 +
           (((C86671 * C96046 + C87420 * C152092) * C152187 +
             (C87421 * C96046 + C78477 * C152092) * C152068) *
                C151956 -
            ((C78429 * C152092 + (C76796 + C76795) * C96046) * C152068 +
             (C86672 * C152092 + (C76794 + C76793) * C96046) * C152187) *
                C4107) *
               C151914) *
              C152255 +
          (((((C85735 + C85736) * C96046 + (C85737 + C85738) * C152092) *
                 C152187 +
             (C86673 * C96046 + C89489 * C152092) * C152068) *
                C151956 -
            ((C86674 * C152092 + (C76800 + C76799) * C96046) * C152068 +
             ((C85736 + C85735) * C152092 +
              (C76458 * C144 + C76471 + C76471 + C151796 * C160 +
               C76456 * C143 + C76472 + C76472 + C76451 * C159) *
                  C96046) *
                 C152187) *
                C4107) *
               C3101 +
           ((((C76799 + C76800) * C96046 + C86673 * C152092) * C152187 +
             ((C76801 + C76802) * C96046 + C78977 * C152092) * C152068) *
                C4107 -
            (((C80077 + C80078) * C152092 + C88067 * C96046) * C152068 +
             (C89494 * C152092 + C86674 * C96046) * C152187) *
                C151956) *
               C151914) *
              C152240 +
          (((((C76456 * C144 + C76473 + C76473 + C76451 * C160 + C76458 * C145 +
               C76474 + C76474 + C151796 * C161) *
                  C96046 +
              (C85739 + C85740) * C152092) *
                 C152187 +
             ((C76805 + C76806) * C96046 + C86675 * C152092) * C152068) *
                C4107 -
            (((C85741 + C85742) * C152092 + C86676 * C96046) * C152068 +
             ((C85743 + C85744) * C152092 + (C85740 + C85739) * C96046) *
                 C152187) *
                C151956) *
               C3101 +
           (((C86675 * C96046 + (C85742 + C85741) * C152092) * C152187 +
             ((C77840 + C77839) * C96046 +
              (C76456 * C1541 + C77069 + C77069 + C76451 * C1565 +
               C76458 * C1542 + C77070 + C77070 + C151796 * C1566) *
                  C152092) *
                 C152068) *
                C151956 -
            (((C77839 + C77840) * C152092 + (C76808 + C76807) * C96046) *
                 C152068 +
             (C86676 * C152092 + (C76806 + C76805) * C96046) * C152187) *
                C4107) *
               C151914) *
              C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
              C76462 + C76462 + C151796 * C159) *
                 C96046 +
             (C85731 + C85732) * C152092) *
                C152187 +
            ((C76793 + C76794) * C96046 + C86671 * C152092) * C152068) *
               C4107 -
           ((C87419 * C152092 + C86672 * C96046) * C152068 +
            ((C85733 + C85734) * C152092 + (C85732 + C85731) * C96046) *
                C152187) *
               C151956) *
              C152265 +
          (((C86671 * C96046 + C87420 * C152092) * C152187 +
            (C87421 * C96046 + C78477 * C152092) * C152068) *
               C151956 -
           ((C78429 * C152092 + (C76796 + C76795) * C96046) * C152068 +
            (C86672 * C152092 + (C76794 + C76793) * C96046) * C152187) *
               C4107) *
              C152261 +
          (((C76811 * C96046 + C87421 * C152092) * C152187 +
            ((C76798 + C76797) * C96046 + C79185 * C152092) * C152068) *
               C4107 -
           (((C78475 + C78476) * C152092 + C88326 * C96046) * C152068 +
            (C87422 * C152092 + C78429 * C96046) * C152187) *
               C151956) *
              C152249 +
          (((C79185 * C96046 + (C78476 + C78475) * C152092) * C152187 +
            ((C79198 + C79197) * C96046 +
             (C76456 * C25021 + C78450 + C78450 + C76451 * C25025 +
              C76458 * C25022 + C78451 + C78451 + C151796 * C25026) *
                 C152092) *
                C152068) *
               C151956 -
           (((C79197 + C79198) * C152092 + (C78206 + C78205) * C96046) *
                C152068 +
            (C88326 * C152092 + C78183 * C96046) * C152187) *
               C4107) *
              C152224) *
         C151823) /
            (p * q * std::sqrt(p + q));
    d2ee[260] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
              C76462 + C76462 + C151796 * C159) *
                 C96046 +
             (C85731 + C85732) * C152092) *
                C152187 +
            ((C76793 + C76794) * C96046 + C86671 * C152092) * C152068) *
               C151869 * C1709 -
           ((C78429 * C152092 + (C76796 + C76795) * C96046) * C152068 +
            (C86672 * C152092 + (C76794 + C76793) * C96046) * C152187) *
               C151869 * C1710 +
           ((C76811 * C96046 + C87421 * C152092) * C152187 +
            ((C76798 + C76797) * C96046 + C79185 * C152092) * C152068) *
               C151869 * C1711 -
           (((C79197 + C79198) * C152092 + (C78206 + C78205) * C96046) *
                C152068 +
            (C88326 * C152092 + C78183 * C96046) * C152187) *
               C151869 * C152224) *
              C152158 +
          ((((C76799 + C76800) * C96046 + C86673 * C152092) * C152187 +
            ((C76801 + C76802) * C96046 + C78977 * C152092) * C152068) *
               C151869 * C1710 -
           ((C86674 * C152092 + (C76800 + C76799) * C96046) * C152068 +
            ((C85736 + C85735) * C152092 +
             (C76458 * C144 + C76471 + C76471 + C151796 * C160 + C76456 * C143 +
              C76472 + C76472 + C76451 * C159) *
                 C96046) *
                C152187) *
               C151869 * C1709 -
           (((C78989 + C78990) * C152092 + (C76804 + C76803) * C96046) *
                C152068 +
            (C88067 * C152092 + C76812 * C96046) * C152187) *
               C151869 * C1711 +
           ((C78673 * C96046 + (C78990 + C78989) * C152092) * C152187 +
            ((C78686 + C78685) * C96046 +
             (C76456 * C8842 + C78982 + C78982 + C76451 * C8848 +
              C76458 * C8843 + C78983 + C78983 + C151796 * C8849) *
                 C152092) *
                C152068) *
               C151869 * C152224) *
              C151834)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
              C76462 + C76462 + C151796 * C159) *
                 C96046 +
             (C85731 + C85732) * C152092) *
                C152187 +
            ((C76793 + C76794) * C96046 + C86671 * C152092) * C152068) *
               C151869 * C152172 -
           ((C78429 * C152092 + (C76796 + C76795) * C96046) * C152068 +
            (C86672 * C152092 + (C76794 + C76793) * C96046) * C152187) *
               C151869 * C151914) *
              C739 +
          ((((C76799 + C76800) * C96046 + C86673 * C152092) * C152187 +
            ((C76801 + C76802) * C96046 + C78977 * C152092) * C152068) *
               C151869 * C151914 -
           ((C86674 * C152092 + (C76800 + C76799) * C96046) * C152068 +
            ((C85736 + C85735) * C152092 +
             (C76458 * C144 + C76471 + C76471 + C151796 * C160 + C76456 * C143 +
              C76472 + C76472 + C76451 * C159) *
                 C96046) *
                C152187) *
               C151869 * C152172) *
              C740 +
          ((((C76456 * C144 + C76473 + C76473 + C76451 * C160 + C76458 * C145 +
              C76474 + C76474 + C151796 * C161) *
                 C96046 +
             (C85739 + C85740) * C152092) *
                C152187 +
            ((C76805 + C76806) * C96046 + C86675 * C152092) * C152068) *
               C151869 * C152172 -
           (((C77839 + C77840) * C152092 + (C76808 + C76807) * C96046) *
                C152068 +
            (C86676 * C152092 + (C76806 + C76805) * C96046) * C152187) *
               C151869 * C151914) *
              C741 +
          ((((C77283 + C77284) * C96046 + (C86011 + C86012) * C152092) *
                C152187 +
            ((C77285 + C77286) * C96046 +
             (C76456 * C1535 + C77485 + C77485 + C76451 * C1559 +
              C76458 * C1916 + C77486 + C77486 + C151796 * C1918) *
                 C152092) *
                C152068) *
               C151869 * C151914 -
           (((C86012 + C86011) * C152092 + (C77284 + C77283) * C96046) *
                C152068 +
            ((C86284 + C86283) * C152092 +
             (C76458 * C146 + C76483 + C76483 + C151796 * C162 + C76456 * C145 +
              C76484 + C76484 + C76451 * C161) *
                 C96046) *
                C152187) *
               C151869 * C152172) *
              C152218)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
               C76462 + C76462 + C151796 * C159) *
                  C96046 +
              (C85731 + C85732) * C152092) *
                 C152187 +
             ((C76793 + C76794) * C96046 + C86671 * C152092) * C152068) *
                C2215 -
            ((C87419 * C152092 + C86672 * C96046) * C152068 +
             ((C85733 + C85734) * C152092 + (C85732 + C85731) * C96046) *
                 C152187) *
                C2216 +
            (((C85734 + C85733) * C96046 + (C89097 + C89098) * C152092) *
                 C152187 +
             (C87420 * C96046 + C90031 * C152092) * C152068) *
                C152217) *
               C152172 +
           (((C86671 * C96046 + C87420 * C152092) * C152187 +
             (C87421 * C96046 + C78477 * C152092) * C152068) *
                C2216 -
            ((C78429 * C152092 + (C76796 + C76795) * C96046) * C152068 +
             (C86672 * C152092 + (C76794 + C76793) * C96046) * C152187) *
                C2215 -
            (((C80493 + C80494) * C152092 + C87422 * C96046) * C152068 +
             (C90032 * C152092 + C87419 * C96046) * C152187) *
                C152217) *
               C151914) *
              C152158 +
          (((((C85735 + C85736) * C96046 + (C85737 + C85738) * C152092) *
                 C152187 +
             (C86673 * C96046 + C89489 * C152092) * C152068) *
                C2216 -
            ((C86674 * C152092 + (C76800 + C76799) * C96046) * C152068 +
             ((C85736 + C85735) * C152092 +
              (C76458 * C144 + C76471 + C76471 + C151796 * C160 +
               C76456 * C143 + C76472 + C76472 + C76451 * C159) *
                  C96046) *
                 C152187) *
                C2215 -
            (((C89499 + C89500) * C152092 + C89494 * C96046) * C152068 +
             ((C89771 + C89772) * C152092 + (C85738 + C85737) * C96046) *
                 C152187) *
                C152217) *
               C152172 +
           ((((C76799 + C76800) * C96046 + C86673 * C152092) * C152187 +
             ((C76801 + C76802) * C96046 + C78977 * C152092) * C152068) *
                C2215 -
            (((C80077 + C80078) * C152092 + C88067 * C96046) * C152068 +
             (C89494 * C152092 + C86674 * C96046) * C152187) *
                C2216 +
            ((C89489 * C96046 + (C89500 + C89499) * C152092) * C152187 +
             ((C80078 + C80077) * C96046 +
              (C76456 * C10150 + C80279 + C80279 + C76451 * C10156 +
               C76458 * C10151 + C80280 + C80280 + C151796 * C10157) *
                  C152092) *
                 C152068) *
                C152217) *
               C151914) *
              C151834)) /
            (p * q * std::sqrt(p + q));
    d2ee[261] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
              C76462 + C76462 + C151796 * C159) *
                 C96046 +
             (C85731 + C85732) * C152092) *
                C152187 +
            ((C76793 + C76794) * C96046 + C86671 * C152092) * C152068) *
               C152173 -
           ((C87419 * C152092 + C86672 * C96046) * C152068 +
            ((C85733 + C85734) * C152092 + (C85732 + C85731) * C96046) *
                C152187) *
               C151956) *
              C1709 +
          (((C86671 * C96046 + C87420 * C152092) * C152187 +
            (C87421 * C96046 + C78477 * C152092) * C152068) *
               C151956 -
           ((C78429 * C152092 + (C76796 + C76795) * C96046) * C152068 +
            (C86672 * C152092 + (C76794 + C76793) * C96046) * C152187) *
               C152173) *
              C1710 +
          (((C76811 * C96046 + C87421 * C152092) * C152187 +
            ((C76798 + C76797) * C96046 + C79185 * C152092) * C152068) *
               C152173 -
           (((C78475 + C78476) * C152092 + C88326 * C96046) * C152068 +
            (C87422 * C152092 + C78429 * C96046) * C152187) *
               C151956) *
              C1711 +
          (((C79185 * C96046 + (C78476 + C78475) * C152092) * C152187 +
            ((C79198 + C79197) * C96046 +
             (C76456 * C25021 + C78450 + C78450 + C76451 * C25025 +
              C76458 * C25022 + C78451 + C78451 + C151796 * C25026) *
                 C152092) *
                C152068) *
               C151956 -
           (((C79197 + C79198) * C152092 + (C78206 + C78205) * C96046) *
                C152068 +
            (C88326 * C152092 + C78183 * C96046) * C152187) *
               C152173) *
              C152224) *
         C151823) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
               C76462 + C76462 + C151796 * C159) *
                  C96046 +
              (C85731 + C85732) * C152092) *
                 C152187 +
             ((C76793 + C76794) * C96046 + C86671 * C152092) * C152068) *
                C152173 -
            ((C87419 * C152092 + C86672 * C96046) * C152068 +
             ((C85733 + C85734) * C152092 + (C85732 + C85731) * C96046) *
                 C152187) *
                C151956) *
               C152172 +
           (((C86671 * C96046 + C87420 * C152092) * C152187 +
             (C87421 * C96046 + C78477 * C152092) * C152068) *
                C151956 -
            ((C78429 * C152092 + (C76796 + C76795) * C96046) * C152068 +
             (C86672 * C152092 + (C76794 + C76793) * C96046) * C152187) *
                C152173) *
               C151914) *
              C335 +
          (((((C85735 + C85736) * C96046 + (C85737 + C85738) * C152092) *
                 C152187 +
             (C86673 * C96046 + C89489 * C152092) * C152068) *
                C151956 -
            ((C86674 * C152092 + (C76800 + C76799) * C96046) * C152068 +
             ((C85736 + C85735) * C152092 +
              (C76458 * C144 + C76471 + C76471 + C151796 * C160 +
               C76456 * C143 + C76472 + C76472 + C76451 * C159) *
                  C96046) *
                 C152187) *
                C152173) *
               C152172 +
           ((((C76799 + C76800) * C96046 + C86673 * C152092) * C152187 +
             ((C76801 + C76802) * C96046 + C78977 * C152092) * C152068) *
                C152173 -
            (((C80077 + C80078) * C152092 + C88067 * C96046) * C152068 +
             (C89494 * C152092 + C86674 * C96046) * C152187) *
                C151956) *
               C151914) *
              C336 +
          (((((C76456 * C144 + C76473 + C76473 + C76451 * C160 + C76458 * C145 +
               C76474 + C76474 + C151796 * C161) *
                  C96046 +
              (C85739 + C85740) * C152092) *
                 C152187 +
             ((C76805 + C76806) * C96046 + C86675 * C152092) * C152068) *
                C152173 -
            (((C85741 + C85742) * C152092 + C86676 * C96046) * C152068 +
             ((C85743 + C85744) * C152092 + (C85740 + C85739) * C96046) *
                 C152187) *
                C151956) *
               C152172 +
           (((C86675 * C96046 + (C85742 + C85741) * C152092) * C152187 +
             ((C77840 + C77839) * C96046 +
              (C76456 * C1541 + C77069 + C77069 + C76451 * C1565 +
               C76458 * C1542 + C77070 + C77070 + C151796 * C1566) *
                  C152092) *
                 C152068) *
                C151956 -
            (((C77839 + C77840) * C152092 + (C76808 + C76807) * C96046) *
                 C152068 +
             (C86676 * C152092 + (C76806 + C76805) * C96046) * C152187) *
                C152173) *
               C151914) *
              C152208)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
              C76462 + C76462 + C151796 * C159) *
                 C96046 +
             (C85731 + C85732) * C152092) *
                C152187 +
            ((C76793 + C76794) * C96046 + C86671 * C152092) * C152068) *
               C2814 -
           ((C87419 * C152092 + C86672 * C96046) * C152068 +
            ((C85733 + C85734) * C152092 + (C85732 + C85731) * C96046) *
                C152187) *
               C2815 +
           (((C85734 + C85733) * C96046 + (C89097 + C89098) * C152092) *
                C152187 +
            (C87420 * C96046 + C90031 * C152092) * C152068) *
               C2816 -
           (((C89099 + C89100) * C152092 + C90032 * C96046) * C152068 +
            ((C89101 + C89102) * C152092 + (C89098 + C89097) * C96046) *
                C152187) *
               C152230) *
              C152172 +
          (((C86671 * C96046 + C87420 * C152092) * C152187 +
            (C87421 * C96046 + C78477 * C152092) * C152068) *
               C2815 -
           ((C78429 * C152092 + (C76796 + C76795) * C96046) * C152068 +
            (C86672 * C152092 + (C76794 + C76793) * C96046) * C152187) *
               C2814 -
           (((C80493 + C80494) * C152092 + C87422 * C96046) * C152068 +
            (C90032 * C152092 + C87419 * C96046) * C152187) *
               C2816 +
           ((C90031 * C96046 + (C89100 + C89099) * C152092) * C152187 +
            ((C80494 + C80493) * C96046 +
             (C76456 * C26361 + C79767 + C79767 + C76451 * C26365 +
              C76458 * C26362 + C79768 + C79768 + C151796 * C26366) *
                 C152092) *
                C152068) *
               C152230) *
              C151914) *
         C151823) /
            (p * q * std::sqrt(p + q));
    d2ee[262] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C76456 * C142 + C76461 + C76461 + C76451 * C158 +
                 C76458 * C143 + C76462 + C76462 + C151796 * C159) *
                    C96046 +
                (C85731 + C85732) * C152092) *
                   C152187 +
               ((C76793 + C76794) * C96046 + C86671 * C152092) * C152068) *
                  C151869 * C151851 * C129 -
              ((C86674 * C152092 + (C76800 + C76799) * C96046) * C152068 +
               ((C85736 + C85735) * C152092 +
                (C76458 * C144 + C76471 + C76471 + C151796 * C160 +
                 C76456 * C143 + C76472 + C76472 + C76451 * C159) *
                    C96046) *
                   C152187) *
                  C151869 * C151851 * C130 +
              (((C76456 * C144 + C76473 + C76473 + C76451 * C160 +
                 C76458 * C145 + C76474 + C76474 + C151796 * C161) *
                    C96046 +
                (C85739 + C85740) * C152092) *
                   C152187 +
               ((C76805 + C76806) * C96046 + C86675 * C152092) * C152068) *
                  C151869 * C151851 * C131 -
              (((C86012 + C86011) * C152092 + (C77284 + C77283) * C96046) *
                   C152068 +
               ((C86284 + C86283) * C152092 +
                (C76458 * C146 + C76483 + C76483 + C151796 * C162 +
                 C76456 * C145 + C76484 + C76484 + C76451 * C161) *
                    C96046) *
                   C152187) *
                  C151869 * C151851 * C132 +
              (((C76456 * C146 + C76485 + C76485 + C76451 * C162 +
                 C76458 * C147 + C76486 + C76486 + C151796 * C163) *
                    C96046 +
                (C76456 * C555 + C85087 + C85087 + C76451 * C579 +
                 C76458 * C557 + C85088 + C85088 + C151796 * C581) *
                    C152092) *
                   C152187 +
               ((C76456 * C346 + C76487 + C76487 + C76451 * C370 +
                 C76458 * C348 + C76488 + C76488 + C151796 * C372) *
                    C96046 +
                (C76456 * C1087 + C85089 + C85089 + C76451 * C1099 +
                 C76458 * C1088 + C85090 + C85090 + C151796 * C1100) *
                    C152092) *
                   C152068) *
                  C151869 * C151851 * C133) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((((C76456 * C142 + C76461 + C76461 + C76451 * C158 +
                  C76458 * C143 + C76462 + C76462 + C151796 * C159) *
                     C96046 +
                 (C85731 + C85732) * C152092) *
                    C152187 +
                ((C76793 + C76794) * C96046 + C86671 * C152092) * C152068) *
                   C151869 * C152258 -
               ((C78429 * C152092 + (C76796 + C76795) * C96046) * C152068 +
                (C86672 * C152092 + (C76794 + C76793) * C96046) * C152187) *
                   C151869 * C152244 +
               ((C76811 * C96046 + C87421 * C152092) * C152187 +
                ((C76798 + C76797) * C96046 + C79185 * C152092) * C152068) *
                   C151869 * C152214) *
                  C335 +
              ((((C76799 + C76800) * C96046 + C86673 * C152092) * C152187 +
                ((C76801 + C76802) * C96046 + C78977 * C152092) * C152068) *
                   C151869 * C152244 -
               ((C86674 * C152092 + (C76800 + C76799) * C96046) * C152068 +
                ((C85736 + C85735) * C152092 +
                 (C76458 * C144 + C76471 + C76471 + C151796 * C160 +
                  C76456 * C143 + C76472 + C76472 + C76451 * C159) *
                     C96046) *
                    C152187) *
                   C151869 * C152258 -
               (((C78989 + C78990) * C152092 + (C76804 + C76803) * C96046) *
                    C152068 +
                (C88067 * C152092 + C76812 * C96046) * C152187) *
                   C151869 * C152214) *
                  C336 +
              ((((C76456 * C144 + C76473 + C76473 + C76451 * C160 +
                  C76458 * C145 + C76474 + C76474 + C151796 * C161) *
                     C96046 +
                 (C85739 + C85740) * C152092) *
                    C152187 +
                ((C76805 + C76806) * C96046 + C86675 * C152092) * C152068) *
                   C151869 * C152258 -
               (((C77839 + C77840) * C152092 + (C76808 + C76807) * C96046) *
                    C152068 +
                (C86676 * C152092 + (C76806 + C76805) * C96046) * C152187) *
                   C151869 * C152244 +
               ((C76813 * C96046 + (C77840 + C77839) * C152092) * C152187 +
                ((C76810 + C76809) * C96046 +
                 (C76456 * C2055 + C77805 + C77805 + C76451 * C2063 +
                  C76458 * C2056 + C77806 + C77806 + C151796 * C2064) *
                     C152092) *
                    C152068) *
                   C151869 * C152214) *
                  C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
              C76462 + C76462 + C151796 * C159) *
                 C96046 +
             (C85731 + C85732) * C152092) *
                C152187 +
            ((C76793 + C76794) * C96046 + C86671 * C152092) * C152068) *
               C152259 -
           ((C87419 * C152092 + C86672 * C96046) * C152068 +
            ((C85733 + C85734) * C152092 + (C85732 + C85731) * C96046) *
                C152187) *
               C152246 +
           (((C85734 + C85733) * C96046 + (C89097 + C89098) * C152092) *
                C152187 +
            (C87420 * C96046 + C90031 * C152092) * C152068) *
               C152217) *
              C151851 * C335 +
          ((((C85735 + C85736) * C96046 + (C85737 + C85738) * C152092) *
                C152187 +
            (C86673 * C96046 + C89489 * C152092) * C152068) *
               C152246 -
           ((C86674 * C152092 + (C76800 + C76799) * C96046) * C152068 +
            ((C85736 + C85735) * C152092 +
             (C76458 * C144 + C76471 + C76471 + C151796 * C160 + C76456 * C143 +
              C76472 + C76472 + C76451 * C159) *
                 C96046) *
                C152187) *
               C152259 -
           (((C89499 + C89500) * C152092 + C89494 * C96046) * C152068 +
            ((C89771 + C89772) * C152092 + (C85738 + C85737) * C96046) *
                C152187) *
               C152217) *
              C151851 * C336 +
          ((((C76456 * C144 + C76473 + C76473 + C76451 * C160 + C76458 * C145 +
              C76474 + C76474 + C151796 * C161) *
                 C96046 +
             (C85739 + C85740) * C152092) *
                C152187 +
            ((C76805 + C76806) * C96046 + C86675 * C152092) * C152068) *
               C152259 -
           (((C85741 + C85742) * C152092 + C86676 * C96046) * C152068 +
            ((C85743 + C85744) * C152092 + (C85740 + C85739) * C96046) *
                C152187) *
               C152246 +
           (((C85744 + C85743) * C96046 +
             (C76456 * C2452 + C85699 + C85699 + C76451 * C2468 +
              C76458 * C2451 + C85700 + C85700 + C151796 * C2467) *
                 C152092) *
                C152187 +
            ((C85742 + C85741) * C96046 +
             (C76456 * C2957 + C85701 + C85701 + C76451 * C2965 +
              C76458 * C2958 + C85702 + C85702 + C151796 * C2966) *
                 C152092) *
                C152068) *
               C152217) *
              C151851 * C152208)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
              C76462 + C76462 + C151796 * C159) *
                 C96046 +
             (C85731 + C85732) * C152092) *
                C152187 +
            ((C76793 + C76794) * C96046 + C86671 * C152092) * C152068) *
               C151869 * C1259 -
           ((C78429 * C152092 + (C76796 + C76795) * C96046) * C152068 +
            (C86672 * C152092 + (C76794 + C76793) * C96046) * C152187) *
               C151869 * C1260 +
           ((C76811 * C96046 + C87421 * C152092) * C152187 +
            ((C76798 + C76797) * C96046 + C79185 * C152092) * C152068) *
               C151869 * C152214) *
              C152255 +
          ((((C76799 + C76800) * C96046 + C86673 * C152092) * C152187 +
            ((C76801 + C76802) * C96046 + C78977 * C152092) * C152068) *
               C151869 * C1260 -
           ((C86674 * C152092 + (C76800 + C76799) * C96046) * C152068 +
            ((C85736 + C85735) * C152092 +
             (C76458 * C144 + C76471 + C76471 + C151796 * C160 + C76456 * C143 +
              C76472 + C76472 + C76451 * C159) *
                 C96046) *
                C152187) *
               C151869 * C1259 -
           (((C78989 + C78990) * C152092 + (C76804 + C76803) * C96046) *
                C152068 +
            (C88067 * C152092 + C76812 * C96046) * C152187) *
               C151869 * C152214) *
              C152240 +
          ((((C76456 * C144 + C76473 + C76473 + C76451 * C160 + C76458 * C145 +
              C76474 + C76474 + C151796 * C161) *
                 C96046 +
             (C85739 + C85740) * C152092) *
                C152187 +
            ((C76805 + C76806) * C96046 + C86675 * C152092) * C152068) *
               C151869 * C1259 -
           (((C77839 + C77840) * C152092 + (C76808 + C76807) * C96046) *
                C152068 +
            (C86676 * C152092 + (C76806 + C76805) * C96046) * C152187) *
               C151869 * C1260 +
           ((C76813 * C96046 + (C77840 + C77839) * C152092) * C152187 +
            ((C76810 + C76809) * C96046 +
             (C76456 * C2055 + C77805 + C77805 + C76451 * C2063 +
              C76458 * C2056 + C77806 + C77806 + C151796 * C2064) *
                 C152092) *
                C152068) *
               C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
             C76462 + C76462 + C151796 * C159) *
                C96046 +
            (C85731 + C85732) * C152092) *
               C152187 +
           ((C76793 + C76794) * C96046 + C86671 * C152092) * C152068) *
              C151869 * C1347 -
          ((C78429 * C152092 + (C76796 + C76795) * C96046) * C152068 +
           (C86672 * C152092 + (C76794 + C76793) * C96046) * C152187) *
              C151869 * C1348 +
          ((C76811 * C96046 + C87421 * C152092) * C152187 +
           ((C76798 + C76797) * C96046 + C79185 * C152092) * C152068) *
              C151869 * C1349 -
          (((C79197 + C79198) * C152092 + (C78206 + C78205) * C96046) *
               C152068 +
           (C88326 * C152092 + C78183 * C96046) * C152187) *
              C151869 * C1350 +
          ((C78209 * C96046 + (C79198 + C79197) * C152092) * C152187 +
           ((C78208 + C78207) * C96046 +
            (C76456 * C25783 + C79190 + C79190 + C76451 * C25787 +
             C76458 * C25784 + C79191 + C79191 + C151796 * C25788) *
                C152092) *
               C152068) *
              C151869 * C1351) *
         C151823) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
              C76462 + C76462 + C151796 * C159) *
                 C96046 +
             (C85731 + C85732) * C152092) *
                C152187 +
            ((C76793 + C76794) * C96046 + C86671 * C152092) * C152068) *
               C152259 -
           ((C87419 * C152092 + C86672 * C96046) * C152068 +
            ((C85733 + C85734) * C152092 + (C85732 + C85731) * C96046) *
                C152187) *
               C152246 +
           (((C85734 + C85733) * C96046 + (C89097 + C89098) * C152092) *
                C152187 +
            (C87420 * C96046 + C90031 * C152092) * C152068) *
               C152217) *
              C1259 +
          (((C86671 * C96046 + C87420 * C152092) * C152187 +
            (C87421 * C96046 + C78477 * C152092) * C152068) *
               C152246 -
           ((C78429 * C152092 + (C76796 + C76795) * C96046) * C152068 +
            (C86672 * C152092 + (C76794 + C76793) * C96046) * C152187) *
               C152259 -
           (((C80493 + C80494) * C152092 + C87422 * C96046) * C152068 +
            (C90032 * C152092 + C87419 * C96046) * C152187) *
               C152217) *
              C1260 +
          (((C76811 * C96046 + C87421 * C152092) * C152187 +
            ((C76798 + C76797) * C96046 + C79185 * C152092) * C152068) *
               C152259 -
           (((C78475 + C78476) * C152092 + C88326 * C96046) * C152068 +
            (C87422 * C152092 + C78429 * C96046) * C152187) *
               C152246 +
           ((C78477 * C96046 + (C80494 + C80493) * C152092) * C152187 +
            ((C78476 + C78475) * C96046 +
             (C76456 * C27085 + C80483 + C80483 + C76451 * C27089 +
              C76458 * C27086 + C80484 + C80484 + C151796 * C27090) *
                 C152092) *
                C152068) *
               C152217) *
              C152214) *
         C151823) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
              C76462 + C76462 + C151796 * C159) *
                 C96046 +
             (C85731 + C85732) * C152092) *
                C152187 +
            ((C76793 + C76794) * C96046 + C86671 * C152092) * C152068) *
               C2215 -
           ((C87419 * C152092 + C86672 * C96046) * C152068 +
            ((C85733 + C85734) * C152092 + (C85732 + C85731) * C96046) *
                C152187) *
               C2216 +
           (((C85734 + C85733) * C96046 + (C89097 + C89098) * C152092) *
                C152187 +
            (C87420 * C96046 + C90031 * C152092) * C152068) *
               C152217) *
              C151851 * C152255 +
          ((((C85735 + C85736) * C96046 + (C85737 + C85738) * C152092) *
                C152187 +
            (C86673 * C96046 + C89489 * C152092) * C152068) *
               C2216 -
           ((C86674 * C152092 + (C76800 + C76799) * C96046) * C152068 +
            ((C85736 + C85735) * C152092 +
             (C76458 * C144 + C76471 + C76471 + C151796 * C160 + C76456 * C143 +
              C76472 + C76472 + C76451 * C159) *
                 C96046) *
                C152187) *
               C2215 -
           (((C89499 + C89500) * C152092 + C89494 * C96046) * C152068 +
            ((C89771 + C89772) * C152092 + (C85738 + C85737) * C96046) *
                C152187) *
               C152217) *
              C151851 * C152240 +
          ((((C76456 * C144 + C76473 + C76473 + C76451 * C160 + C76458 * C145 +
              C76474 + C76474 + C151796 * C161) *
                 C96046 +
             (C85739 + C85740) * C152092) *
                C152187 +
            ((C76805 + C76806) * C96046 + C86675 * C152092) * C152068) *
               C2215 -
           (((C85741 + C85742) * C152092 + C86676 * C96046) * C152068 +
            ((C85743 + C85744) * C152092 + (C85740 + C85739) * C96046) *
                C152187) *
               C2216 +
           (((C85744 + C85743) * C96046 +
             (C76456 * C2452 + C85699 + C85699 + C76451 * C2468 +
              C76458 * C2451 + C85700 + C85700 + C151796 * C2467) *
                 C152092) *
                C152187 +
            ((C85742 + C85741) * C96046 +
             (C76456 * C2957 + C85701 + C85701 + C76451 * C2965 +
              C76458 * C2958 + C85702 + C85702 + C151796 * C2966) *
                 C152092) *
                C152068) *
               C152217) *
              C151851 * C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
              C76462 + C76462 + C151796 * C159) *
                 C96046 +
             (C85731 + C85732) * C152092) *
                C152187 +
            ((C76793 + C76794) * C96046 + C86671 * C152092) * C152068) *
               C2215 -
           ((C87419 * C152092 + C86672 * C96046) * C152068 +
            ((C85733 + C85734) * C152092 + (C85732 + C85731) * C96046) *
                C152187) *
               C2216 +
           (((C85734 + C85733) * C96046 + (C89097 + C89098) * C152092) *
                C152187 +
            (C87420 * C96046 + C90031 * C152092) * C152068) *
               C152217) *
              C152258 +
          (((C86671 * C96046 + C87420 * C152092) * C152187 +
            (C87421 * C96046 + C78477 * C152092) * C152068) *
               C2216 -
           ((C78429 * C152092 + (C76796 + C76795) * C96046) * C152068 +
            (C86672 * C152092 + (C76794 + C76793) * C96046) * C152187) *
               C2215 -
           (((C80493 + C80494) * C152092 + C87422 * C96046) * C152068 +
            (C90032 * C152092 + C87419 * C96046) * C152187) *
               C152217) *
              C152244 +
          (((C76811 * C96046 + C87421 * C152092) * C152187 +
            ((C76798 + C76797) * C96046 + C79185 * C152092) * C152068) *
               C2215 -
           (((C78475 + C78476) * C152092 + C88326 * C96046) * C152068 +
            (C87422 * C152092 + C78429 * C96046) * C152187) *
               C2216 +
           ((C78477 * C96046 + (C80494 + C80493) * C152092) * C152187 +
            ((C78476 + C78475) * C96046 +
             (C76456 * C27085 + C80483 + C80483 + C76451 * C27089 +
              C76458 * C27086 + C80484 + C80484 + C151796 * C27090) *
                 C152092) *
                C152068) *
               C152217) *
              C152214) *
         C151823) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         ((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
             C76462 + C76462 + C151796 * C159) *
                C96046 +
            (C85731 + C85732) * C152092) *
               C152187 +
           ((C76793 + C76794) * C96046 + C86671 * C152092) * C152068) *
              C2446 -
          ((C87419 * C152092 + C86672 * C96046) * C152068 +
           ((C85733 + C85734) * C152092 + (C85732 + C85731) * C96046) *
               C152187) *
              C2447 +
          (((C85734 + C85733) * C96046 + (C89097 + C89098) * C152092) *
               C152187 +
           (C87420 * C96046 + C90031 * C152092) * C152068) *
              C2448 -
          (((C89099 + C89100) * C152092 + C90032 * C96046) * C152068 +
           ((C89101 + C89102) * C152092 + (C89098 + C89097) * C96046) *
               C152187) *
              C2449 +
          (((C89102 + C89101) * C96046 +
            (C76456 * C17750 + C89081 + C89081 + C76451 * C17756 +
             C76458 * C17751 + C89082 + C89082 + C151796 * C17757) *
                C152092) *
               C152187 +
           ((C89100 + C89099) * C96046 +
            (C76456 * C40487 + C89083 + C89083 + C76451 * C40491 +
             C76458 * C49559 + C89084 + C89084 + C151796 * C49561) *
                C152092) *
               C152068) *
              C2450) *
         C151851 * C151823) /
            (p * q * std::sqrt(p + q));
    d2ee[263] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
               C76462 + C76462 + C151796 * C159) *
                  C96046 +
              (C85731 + C85732) * C152092) *
                 C152187 +
             ((C76793 + C76794) * C96046 + C86671 * C152092) * C152068) *
                C152173 -
            ((C87419 * C152092 + C86672 * C96046) * C152068 +
             ((C85733 + C85734) * C152092 + (C85732 + C85731) * C96046) *
                 C152187) *
                C151956) *
               C1259 +
           (((C86671 * C96046 + C87420 * C152092) * C152187 +
             (C87421 * C96046 + C78477 * C152092) * C152068) *
                C151956 -
            ((C78429 * C152092 + (C76796 + C76795) * C96046) * C152068 +
             (C86672 * C152092 + (C76794 + C76793) * C96046) * C152187) *
                C152173) *
               C1260 +
           (((C76811 * C96046 + C87421 * C152092) * C152187 +
             ((C76798 + C76797) * C96046 + C79185 * C152092) * C152068) *
                C152173 -
            (((C78475 + C78476) * C152092 + C88326 * C96046) * C152068 +
             (C87422 * C152092 + C78429 * C96046) * C152187) *
                C151956) *
               C152214) *
              C152158 +
          (((((C85735 + C85736) * C96046 + (C85737 + C85738) * C152092) *
                 C152187 +
             (C86673 * C96046 + C89489 * C152092) * C152068) *
                C151956 -
            ((C86674 * C152092 + (C76800 + C76799) * C96046) * C152068 +
             ((C85736 + C85735) * C152092 +
              (C76458 * C144 + C76471 + C76471 + C151796 * C160 +
               C76456 * C143 + C76472 + C76472 + C76451 * C159) *
                  C96046) *
                 C152187) *
                C152173) *
               C1259 +
           ((((C76799 + C76800) * C96046 + C86673 * C152092) * C152187 +
             ((C76801 + C76802) * C96046 + C78977 * C152092) * C152068) *
                C152173 -
            (((C80077 + C80078) * C152092 + C88067 * C96046) * C152068 +
             (C89494 * C152092 + C86674 * C96046) * C152187) *
                C151956) *
               C1260 +
           (((C78977 * C96046 + (C80078 + C80077) * C152092) * C152187 +
             ((C78990 + C78989) * C96046 +
              (C76456 * C8065 + C80067 + C80067 + C76451 * C8071 +
               C76458 * C8066 + C80068 + C80068 + C151796 * C8072) *
                  C152092) *
                 C152068) *
                C151956 -
            (((C78989 + C78990) * C152092 + (C76804 + C76803) * C96046) *
                 C152068 +
             (C88067 * C152092 + C76812 * C96046) * C152187) *
                C152173) *
               C152214) *
              C151834)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
              C76462 + C76462 + C151796 * C159) *
                 C96046 +
             (C85731 + C85732) * C152092) *
                C152187 +
            ((C76793 + C76794) * C96046 + C86671 * C152092) * C152068) *
               C152173 -
           ((C87419 * C152092 + C86672 * C96046) * C152068 +
            ((C85733 + C85734) * C152092 + (C85732 + C85731) * C96046) *
                C152187) *
               C151956) *
              C151851 * C739 +
          ((((C85735 + C85736) * C96046 + (C85737 + C85738) * C152092) *
                C152187 +
            (C86673 * C96046 + C89489 * C152092) * C152068) *
               C151956 -
           ((C86674 * C152092 + (C76800 + C76799) * C96046) * C152068 +
            ((C85736 + C85735) * C152092 +
             (C76458 * C144 + C76471 + C76471 + C151796 * C160 + C76456 * C143 +
              C76472 + C76472 + C76451 * C159) *
                 C96046) *
                C152187) *
               C152173) *
              C151851 * C740 +
          ((((C76456 * C144 + C76473 + C76473 + C76451 * C160 + C76458 * C145 +
              C76474 + C76474 + C151796 * C161) *
                 C96046 +
             (C85739 + C85740) * C152092) *
                C152187 +
            ((C76805 + C76806) * C96046 + C86675 * C152092) * C152068) *
               C152173 -
           (((C85741 + C85742) * C152092 + C86676 * C96046) * C152068 +
            ((C85743 + C85744) * C152092 + (C85740 + C85739) * C96046) *
                C152187) *
               C151956) *
              C151851 * C741 +
          ((((C86283 + C86284) * C96046 +
             (C76456 * C554 + C86275 + C86275 + C76451 * C578 + C76458 * C556 +
              C86276 + C86276 + C151796 * C580) *
                 C152092) *
                C152187 +
            ((C86011 + C86012) * C96046 +
             (C76456 * C1531 + C86277 + C86277 + C76451 * C1555 +
              C76458 * C2677 + C86278 + C86278 + C151796 * C2679) *
                 C152092) *
                C152068) *
               C151956 -
           (((C86012 + C86011) * C152092 + (C77284 + C77283) * C96046) *
                C152068 +
            ((C86284 + C86283) * C152092 +
             (C76458 * C146 + C76483 + C76483 + C151796 * C162 + C76456 * C145 +
              C76484 + C76484 + C76451 * C161) *
                 C96046) *
                C152187) *
               C152173) *
              C151851 * C152218)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
              C76462 + C76462 + C151796 * C159) *
                 C96046 +
             (C85731 + C85732) * C152092) *
                C152187 +
            ((C76793 + C76794) * C96046 + C86671 * C152092) * C152068) *
               C2814 -
           ((C87419 * C152092 + C86672 * C96046) * C152068 +
            ((C85733 + C85734) * C152092 + (C85732 + C85731) * C96046) *
                C152187) *
               C2815 +
           (((C85734 + C85733) * C96046 + (C89097 + C89098) * C152092) *
                C152187 +
            (C87420 * C96046 + C90031 * C152092) * C152068) *
               C2816 -
           (((C89099 + C89100) * C152092 + C90032 * C96046) * C152068 +
            ((C89101 + C89102) * C152092 + (C89098 + C89097) * C96046) *
                C152187) *
               C152230) *
              C151851 * C152158 +
          ((((C85735 + C85736) * C96046 + (C85737 + C85738) * C152092) *
                C152187 +
            (C86673 * C96046 + C89489 * C152092) * C152068) *
               C2815 -
           ((C86674 * C152092 + (C76800 + C76799) * C96046) * C152068 +
            ((C85736 + C85735) * C152092 +
             (C76458 * C144 + C76471 + C76471 + C151796 * C160 + C76456 * C143 +
              C76472 + C76472 + C76451 * C159) *
                 C96046) *
                C152187) *
               C2814 -
           (((C89499 + C89500) * C152092 + C89494 * C96046) * C152068 +
            ((C89771 + C89772) * C152092 + (C85738 + C85737) * C96046) *
                C152187) *
               C2816 +
           (((C89772 + C89771) * C96046 +
             (C76456 * C2456 + C89763 + C89763 + C76451 * C2472 +
              C76458 * C2457 + C89764 + C89764 + C151796 * C2473) *
                 C152092) *
                C152187 +
            ((C89500 + C89499) * C96046 +
             (C76456 * C9427 + C89765 + C89765 + C76451 * C9433 +
              C76458 * C9428 + C89766 + C89766 + C151796 * C9434) *
                 C152092) *
                C152068) *
               C152230) *
              C151851 * C151834)) /
            (p * q * std::sqrt(p + q));
    d2ee[264] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
              C76462 + C76462 + C151796 * C159) *
                 C96046 +
             (C85731 + C85732) * C152092) *
                C152187 +
            ((C76793 + C76794) * C96046 + C86671 * C152092) * C152068) *
               C151869 * C152258 -
           ((C78429 * C152092 + (C76796 + C76795) * C96046) * C152068 +
            (C86672 * C152092 + (C76794 + C76793) * C96046) * C152187) *
               C151869 * C152244 +
           ((C76811 * C96046 + C87421 * C152092) * C152187 +
            ((C76798 + C76797) * C96046 + C79185 * C152092) * C152068) *
               C151869 * C152214) *
              C335 +
          ((((C76799 + C76800) * C96046 + C86673 * C152092) * C152187 +
            ((C76801 + C76802) * C96046 + C78977 * C152092) * C152068) *
               C151869 * C152244 -
           ((C86674 * C152092 + (C76800 + C76799) * C96046) * C152068 +
            ((C85736 + C85735) * C152092 +
             (C76458 * C144 + C76471 + C76471 + C151796 * C160 + C76456 * C143 +
              C76472 + C76472 + C76451 * C159) *
                 C96046) *
                C152187) *
               C151869 * C152258 -
           (((C78989 + C78990) * C152092 + (C76804 + C76803) * C96046) *
                C152068 +
            (C88067 * C152092 + C76812 * C96046) * C152187) *
               C151869 * C152214) *
              C336 +
          ((((C76456 * C144 + C76473 + C76473 + C76451 * C160 + C76458 * C145 +
              C76474 + C76474 + C151796 * C161) *
                 C96046 +
             (C85739 + C85740) * C152092) *
                C152187 +
            ((C76805 + C76806) * C96046 + C86675 * C152092) * C152068) *
               C151869 * C152258 -
           (((C77839 + C77840) * C152092 + (C76808 + C76807) * C96046) *
                C152068 +
            (C86676 * C152092 + (C76806 + C76805) * C96046) * C152187) *
               C151869 * C152244 +
           ((C76813 * C96046 + (C77840 + C77839) * C152092) * C152187 +
            ((C76810 + C76809) * C96046 +
             (C76456 * C2055 + C77805 + C77805 + C76451 * C2063 +
              C76458 * C2056 + C77806 + C77806 + C151796 * C2064) *
                 C152092) *
                C152068) *
               C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
             C76462 + C76462 + C151796 * C159) *
                C96046 +
            (C85731 + C85732) * C152092) *
               C152187 +
           ((C76793 + C76794) * C96046 + C86671 * C152092) * C152068) *
              C151869 * C151851 * C129 -
          ((C86674 * C152092 + (C76800 + C76799) * C96046) * C152068 +
           ((C85736 + C85735) * C152092 +
            (C76458 * C144 + C76471 + C76471 + C151796 * C160 + C76456 * C143 +
             C76472 + C76472 + C76451 * C159) *
                C96046) *
               C152187) *
              C151869 * C151851 * C130 +
          (((C76456 * C144 + C76473 + C76473 + C76451 * C160 + C76458 * C145 +
             C76474 + C76474 + C151796 * C161) *
                C96046 +
            (C85739 + C85740) * C152092) *
               C152187 +
           ((C76805 + C76806) * C96046 + C86675 * C152092) * C152068) *
              C151869 * C151851 * C131 -
          (((C86012 + C86011) * C152092 + (C77284 + C77283) * C96046) *
               C152068 +
           ((C86284 + C86283) * C152092 +
            (C76458 * C146 + C76483 + C76483 + C151796 * C162 + C76456 * C145 +
             C76484 + C76484 + C76451 * C161) *
                C96046) *
               C152187) *
              C151869 * C151851 * C132 +
          (((C76456 * C146 + C76485 + C76485 + C76451 * C162 + C76458 * C147 +
             C76486 + C76486 + C151796 * C163) *
                C96046 +
            (C76456 * C555 + C85087 + C85087 + C76451 * C579 + C76458 * C557 +
             C85088 + C85088 + C151796 * C581) *
                C152092) *
               C152187 +
           ((C76456 * C346 + C76487 + C76487 + C76451 * C370 + C76458 * C348 +
             C76488 + C76488 + C151796 * C372) *
                C96046 +
            (C76456 * C1087 + C85089 + C85089 + C76451 * C1099 +
             C76458 * C1088 + C85090 + C85090 + C151796 * C1100) *
                C152092) *
               C152068) *
              C151869 * C151851 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
              C76462 + C76462 + C151796 * C159) *
                 C96046 +
             (C85731 + C85732) * C152092) *
                C152187 +
            ((C76793 + C76794) * C96046 + C86671 * C152092) * C152068) *
               C151869 * C1259 -
           ((C78429 * C152092 + (C76796 + C76795) * C96046) * C152068 +
            (C86672 * C152092 + (C76794 + C76793) * C96046) * C152187) *
               C151869 * C1260 +
           ((C76811 * C96046 + C87421 * C152092) * C152187 +
            ((C76798 + C76797) * C96046 + C79185 * C152092) * C152068) *
               C151869 * C152214) *
              C152255 +
          ((((C76799 + C76800) * C96046 + C86673 * C152092) * C152187 +
            ((C76801 + C76802) * C96046 + C78977 * C152092) * C152068) *
               C151869 * C1260 -
           ((C86674 * C152092 + (C76800 + C76799) * C96046) * C152068 +
            ((C85736 + C85735) * C152092 +
             (C76458 * C144 + C76471 + C76471 + C151796 * C160 + C76456 * C143 +
              C76472 + C76472 + C76451 * C159) *
                 C96046) *
                C152187) *
               C151869 * C1259 -
           (((C78989 + C78990) * C152092 + (C76804 + C76803) * C96046) *
                C152068 +
            (C88067 * C152092 + C76812 * C96046) * C152187) *
               C151869 * C152214) *
              C152240 +
          ((((C76456 * C144 + C76473 + C76473 + C76451 * C160 + C76458 * C145 +
              C76474 + C76474 + C151796 * C161) *
                 C96046 +
             (C85739 + C85740) * C152092) *
                C152187 +
            ((C76805 + C76806) * C96046 + C86675 * C152092) * C152068) *
               C151869 * C1259 -
           (((C77839 + C77840) * C152092 + (C76808 + C76807) * C96046) *
                C152068 +
            (C86676 * C152092 + (C76806 + C76805) * C96046) * C152187) *
               C151869 * C1260 +
           ((C76813 * C96046 + (C77840 + C77839) * C152092) * C152187 +
            ((C76810 + C76809) * C96046 +
             (C76456 * C2055 + C77805 + C77805 + C76451 * C2063 +
              C76458 * C2056 + C77806 + C77806 + C151796 * C2064) *
                 C152092) *
                C152068) *
               C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
             C76462 + C76462 + C151796 * C159) *
                C96046 +
            (C85731 + C85732) * C152092) *
               C152187 +
           ((C76793 + C76794) * C96046 + C86671 * C152092) * C152068) *
              C151869 * C1347 -
          ((C78429 * C152092 + (C76796 + C76795) * C96046) * C152068 +
           (C86672 * C152092 + (C76794 + C76793) * C96046) * C152187) *
              C151869 * C1348 +
          ((C76811 * C96046 + C87421 * C152092) * C152187 +
           ((C76798 + C76797) * C96046 + C79185 * C152092) * C152068) *
              C151869 * C1349 -
          (((C79197 + C79198) * C152092 + (C78206 + C78205) * C96046) *
               C152068 +
           (C88326 * C152092 + C78183 * C96046) * C152187) *
              C151869 * C1350 +
          ((C78209 * C96046 + (C79198 + C79197) * C152092) * C152187 +
           ((C78208 + C78207) * C96046 +
            (C76456 * C25783 + C79190 + C79190 + C76451 * C25787 +
             C76458 * C25784 + C79191 + C79191 + C151796 * C25788) *
                C152092) *
               C152068) *
              C151869 * C1351) *
         C151823) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
              C76462 + C76462 + C151796 * C159) *
                 C96046 +
             (C85731 + C85732) * C152092) *
                C152187 +
            ((C76793 + C76794) * C96046 + C86671 * C152092) * C152068) *
               C2215 -
           ((C87419 * C152092 + C86672 * C96046) * C152068 +
            ((C85733 + C85734) * C152092 + (C85732 + C85731) * C96046) *
                C152187) *
               C2216 +
           (((C85734 + C85733) * C96046 + (C89097 + C89098) * C152092) *
                C152187 +
            (C87420 * C96046 + C90031 * C152092) * C152068) *
               C152217) *
              C151851 * C152255 +
          ((((C85735 + C85736) * C96046 + (C85737 + C85738) * C152092) *
                C152187 +
            (C86673 * C96046 + C89489 * C152092) * C152068) *
               C2216 -
           ((C86674 * C152092 + (C76800 + C76799) * C96046) * C152068 +
            ((C85736 + C85735) * C152092 +
             (C76458 * C144 + C76471 + C76471 + C151796 * C160 + C76456 * C143 +
              C76472 + C76472 + C76451 * C159) *
                 C96046) *
                C152187) *
               C2215 -
           (((C89499 + C89500) * C152092 + C89494 * C96046) * C152068 +
            ((C89771 + C89772) * C152092 + (C85738 + C85737) * C96046) *
                C152187) *
               C152217) *
              C151851 * C152240 +
          ((((C76456 * C144 + C76473 + C76473 + C76451 * C160 + C76458 * C145 +
              C76474 + C76474 + C151796 * C161) *
                 C96046 +
             (C85739 + C85740) * C152092) *
                C152187 +
            ((C76805 + C76806) * C96046 + C86675 * C152092) * C152068) *
               C2215 -
           (((C85741 + C85742) * C152092 + C86676 * C96046) * C152068 +
            ((C85743 + C85744) * C152092 + (C85740 + C85739) * C96046) *
                C152187) *
               C2216 +
           (((C85744 + C85743) * C96046 +
             (C76456 * C2452 + C85699 + C85699 + C76451 * C2468 +
              C76458 * C2451 + C85700 + C85700 + C151796 * C2467) *
                 C152092) *
                C152187 +
            ((C85742 + C85741) * C96046 +
             (C76456 * C2957 + C85701 + C85701 + C76451 * C2965 +
              C76458 * C2958 + C85702 + C85702 + C151796 * C2966) *
                 C152092) *
                C152068) *
               C152217) *
              C151851 * C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
              C76462 + C76462 + C151796 * C159) *
                 C96046 +
             (C85731 + C85732) * C152092) *
                C152187 +
            ((C76793 + C76794) * C96046 + C86671 * C152092) * C152068) *
               C2215 -
           ((C87419 * C152092 + C86672 * C96046) * C152068 +
            ((C85733 + C85734) * C152092 + (C85732 + C85731) * C96046) *
                C152187) *
               C2216 +
           (((C85734 + C85733) * C96046 + (C89097 + C89098) * C152092) *
                C152187 +
            (C87420 * C96046 + C90031 * C152092) * C152068) *
               C152217) *
              C152258 +
          (((C86671 * C96046 + C87420 * C152092) * C152187 +
            (C87421 * C96046 + C78477 * C152092) * C152068) *
               C2216 -
           ((C78429 * C152092 + (C76796 + C76795) * C96046) * C152068 +
            (C86672 * C152092 + (C76794 + C76793) * C96046) * C152187) *
               C2215 -
           (((C80493 + C80494) * C152092 + C87422 * C96046) * C152068 +
            (C90032 * C152092 + C87419 * C96046) * C152187) *
               C152217) *
              C152244 +
          (((C76811 * C96046 + C87421 * C152092) * C152187 +
            ((C76798 + C76797) * C96046 + C79185 * C152092) * C152068) *
               C2215 -
           (((C78475 + C78476) * C152092 + C88326 * C96046) * C152068 +
            (C87422 * C152092 + C78429 * C96046) * C152187) *
               C2216 +
           ((C78477 * C96046 + (C80494 + C80493) * C152092) * C152187 +
            ((C78476 + C78475) * C96046 +
             (C76456 * C27085 + C80483 + C80483 + C76451 * C27089 +
              C76458 * C27086 + C80484 + C80484 + C151796 * C27090) *
                 C152092) *
                C152068) *
               C152217) *
              C152214) *
         C151823) /
            (p * q * std::sqrt(p + q));
    d2ee[265] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
               C76462 + C76462 + C151796 * C159) *
                  C96046 +
              (C85731 + C85732) * C152092) *
                 C152187 +
             ((C76793 + C76794) * C96046 + C86671 * C152092) * C152068) *
                C4107 -
            ((C87419 * C152092 + C86672 * C96046) * C152068 +
             ((C85733 + C85734) * C152092 + (C85732 + C85731) * C96046) *
                 C152187) *
                C151956) *
               C152172 +
           (((C86671 * C96046 + C87420 * C152092) * C152187 +
             (C87421 * C96046 + C78477 * C152092) * C152068) *
                C151956 -
            ((C78429 * C152092 + (C76796 + C76795) * C96046) * C152068 +
             (C86672 * C152092 + (C76794 + C76793) * C96046) * C152187) *
                C4107) *
               C151914) *
              C151828 +
          (((((C85735 + C85736) * C96046 + (C85737 + C85738) * C152092) *
                 C152187 +
             (C86673 * C96046 + C89489 * C152092) * C152068) *
                C151956 -
            ((C86674 * C152092 + (C76800 + C76799) * C96046) * C152068 +
             ((C85736 + C85735) * C152092 +
              (C76458 * C144 + C76471 + C76471 + C151796 * C160 +
               C76456 * C143 + C76472 + C76472 + C76451 * C159) *
                  C96046) *
                 C152187) *
                C4107) *
               C152172 +
           ((((C76799 + C76800) * C96046 + C86673 * C152092) * C152187 +
             ((C76801 + C76802) * C96046 + C78977 * C152092) * C152068) *
                C4107 -
            (((C80077 + C80078) * C152092 + C88067 * C96046) * C152068 +
             (C89494 * C152092 + C86674 * C96046) * C152187) *
                C151956) *
               C151914) *
              C151837 +
          (((((C76456 * C144 + C76473 + C76473 + C76451 * C160 + C76458 * C145 +
               C76474 + C76474 + C151796 * C161) *
                  C96046 +
              (C85739 + C85740) * C152092) *
                 C152187 +
             ((C76805 + C76806) * C96046 + C86675 * C152092) * C152068) *
                C4107 -
            (((C85741 + C85742) * C152092 + C86676 * C96046) * C152068 +
             ((C85743 + C85744) * C152092 + (C85740 + C85739) * C96046) *
                 C152187) *
                C151956) *
               C152172 +
           (((C86675 * C96046 + (C85742 + C85741) * C152092) * C152187 +
             ((C77840 + C77839) * C96046 +
              (C76456 * C1541 + C77069 + C77069 + C76451 * C1565 +
               C76458 * C1542 + C77070 + C77070 + C151796 * C1566) *
                  C152092) *
                 C152068) *
                C151956 -
            (((C77839 + C77840) * C152092 + (C76808 + C76807) * C96046) *
                 C152068 +
             (C86676 * C152092 + (C76806 + C76805) * C96046) * C152187) *
                C4107) *
               C151914) *
              C3588)) /
        (p * q * std::sqrt(p + q));
    d2ee[266] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
               C76462 + C76462 + C151796 * C159) *
                  C96046 +
              (C85731 + C85732) * C152092) *
                 C152187 +
             ((C76793 + C76794) * C96046 + C86671 * C152092) * C152068) *
                C151952 -
            ((C87419 * C152092 + C86672 * C96046) * C152068 +
             ((C85733 + C85734) * C152092 + (C85732 + C85731) * C96046) *
                 C152187) *
                C151959 +
            (((C85734 + C85733) * C96046 + (C89097 + C89098) * C152092) *
                 C152187 +
             (C87420 * C96046 + C90031 * C152092) * C152068) *
                C4779) *
               C152172 +
           (((C86671 * C96046 + C87420 * C152092) * C152187 +
             (C87421 * C96046 + C78477 * C152092) * C152068) *
                C151959 -
            ((C78429 * C152092 + (C76796 + C76795) * C96046) * C152068 +
             (C86672 * C152092 + (C76794 + C76793) * C96046) * C152187) *
                C151952 -
            (((C80493 + C80494) * C152092 + C87422 * C96046) * C152068 +
             (C90032 * C152092 + C87419 * C96046) * C152187) *
                C4779) *
               C151914) *
              C3241 +
          (((((C85735 + C85736) * C96046 + (C85737 + C85738) * C152092) *
                 C152187 +
             (C86673 * C96046 + C89489 * C152092) * C152068) *
                C151959 -
            ((C86674 * C152092 + (C76800 + C76799) * C96046) * C152068 +
             ((C85736 + C85735) * C152092 +
              (C76458 * C144 + C76471 + C76471 + C151796 * C160 +
               C76456 * C143 + C76472 + C76472 + C76451 * C159) *
                  C96046) *
                 C152187) *
                C151952 -
            (((C89499 + C89500) * C152092 + C89494 * C96046) * C152068 +
             ((C89771 + C89772) * C152092 + (C85738 + C85737) * C96046) *
                 C152187) *
                C4779) *
               C152172 +
           ((((C76799 + C76800) * C96046 + C86673 * C152092) * C152187 +
             ((C76801 + C76802) * C96046 + C78977 * C152092) * C152068) *
                C151952 -
            (((C80077 + C80078) * C152092 + C88067 * C96046) * C152068 +
             (C89494 * C152092 + C86674 * C96046) * C152187) *
                C151959 +
            ((C89489 * C96046 + (C89500 + C89499) * C152092) * C152187 +
             ((C80078 + C80077) * C96046 +
              (C76456 * C10150 + C80279 + C80279 + C76451 * C10156 +
               C76458 * C10151 + C80280 + C80280 + C151796 * C10157) *
                  C152092) *
                 C152068) *
                C4779) *
               C151914) *
              C151834)) /
        (p * q * std::sqrt(p + q));
    d2ee[267] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
               C76462 + C76462 + C151796 * C159) *
                  C96046 +
              (C85731 + C85732) * C152092) *
                 C152187 +
             ((C76793 + C76794) * C96046 + C86671 * C152092) * C152068) *
                C4107 -
            ((C87419 * C152092 + C86672 * C96046) * C152068 +
             ((C85733 + C85734) * C152092 + (C85732 + C85731) * C96046) *
                 C152187) *
                C151956) *
               C152258 +
           (((C86671 * C96046 + C87420 * C152092) * C152187 +
             (C87421 * C96046 + C78477 * C152092) * C152068) *
                C151956 -
            ((C78429 * C152092 + (C76796 + C76795) * C96046) * C152068 +
             (C86672 * C152092 + (C76794 + C76793) * C96046) * C152187) *
                C4107) *
               C152244 +
           (((C76811 * C96046 + C87421 * C152092) * C152187 +
             ((C76798 + C76797) * C96046 + C79185 * C152092) * C152068) *
                C4107 -
            (((C78475 + C78476) * C152092 + C88326 * C96046) * C152068 +
             (C87422 * C152092 + C78429 * C96046) * C152187) *
                C151956) *
               C152214) *
              C3241 +
          (((((C85735 + C85736) * C96046 + (C85737 + C85738) * C152092) *
                 C152187 +
             (C86673 * C96046 + C89489 * C152092) * C152068) *
                C151956 -
            ((C86674 * C152092 + (C76800 + C76799) * C96046) * C152068 +
             ((C85736 + C85735) * C152092 +
              (C76458 * C144 + C76471 + C76471 + C151796 * C160 +
               C76456 * C143 + C76472 + C76472 + C76451 * C159) *
                  C96046) *
                 C152187) *
                C4107) *
               C152258 +
           ((((C76799 + C76800) * C96046 + C86673 * C152092) * C152187 +
             ((C76801 + C76802) * C96046 + C78977 * C152092) * C152068) *
                C4107 -
            (((C80077 + C80078) * C152092 + C88067 * C96046) * C152068 +
             (C89494 * C152092 + C86674 * C96046) * C152187) *
                C151956) *
               C152244 +
           (((C78977 * C96046 + (C80078 + C80077) * C152092) * C152187 +
             ((C78990 + C78989) * C96046 +
              (C76456 * C8065 + C80067 + C80067 + C76451 * C8071 +
               C76458 * C8066 + C80068 + C80068 + C151796 * C8072) *
                  C152092) *
                 C152068) *
                C151956 -
            (((C78989 + C78990) * C152092 + (C76804 + C76803) * C96046) *
                 C152068 +
             (C88067 * C152092 + C76812 * C96046) * C152187) *
                C4107) *
               C152214) *
              C151834)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
              C76462 + C76462 + C151796 * C159) *
                 C96046 +
             (C85731 + C85732) * C152092) *
                C152187 +
            ((C76793 + C76794) * C96046 + C86671 * C152092) * C152068) *
               C4107 -
           ((C87419 * C152092 + C86672 * C96046) * C152068 +
            ((C85733 + C85734) * C152092 + (C85732 + C85731) * C96046) *
                C152187) *
               C151956) *
              C151851 * C152264 +
          ((((C85735 + C85736) * C96046 + (C85737 + C85738) * C152092) *
                C152187 +
            (C86673 * C96046 + C89489 * C152092) * C152068) *
               C151956 -
           ((C86674 * C152092 + (C76800 + C76799) * C96046) * C152068 +
            ((C85736 + C85735) * C152092 +
             (C76458 * C144 + C76471 + C76471 + C151796 * C160 + C76456 * C143 +
              C76472 + C76472 + C76451 * C159) *
                 C96046) *
                C152187) *
               C4107) *
              C151851 * C152257 +
          ((((C76456 * C144 + C76473 + C76473 + C76451 * C160 + C76458 * C145 +
              C76474 + C76474 + C151796 * C161) *
                 C96046 +
             (C85739 + C85740) * C152092) *
                C152187 +
            ((C76805 + C76806) * C96046 + C86675 * C152092) * C152068) *
               C4107 -
           (((C85741 + C85742) * C152092 + C86676 * C96046) * C152068 +
            ((C85743 + C85744) * C152092 + (C85740 + C85739) * C96046) *
                C152187) *
               C151956) *
              C151851 * C152242 +
          ((((C86283 + C86284) * C96046 +
             (C76456 * C554 + C86275 + C86275 + C76451 * C578 + C76458 * C556 +
              C86276 + C86276 + C151796 * C580) *
                 C152092) *
                C152187 +
            ((C86011 + C86012) * C96046 +
             (C76456 * C1531 + C86277 + C86277 + C76451 * C1555 +
              C76458 * C2677 + C86278 + C86278 + C151796 * C2679) *
                 C152092) *
                C152068) *
               C151956 -
           (((C86012 + C86011) * C152092 + (C77284 + C77283) * C96046) *
                C152068 +
            ((C86284 + C86283) * C152092 +
             (C76458 * C146 + C76483 + C76483 + C151796 * C162 + C76456 * C145 +
              C76484 + C76484 + C76451 * C161) *
                 C96046) *
                C152187) *
               C4107) *
              C151851 * C152218)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
              C76462 + C76462 + C151796 * C159) *
                 C96046 +
             (C85731 + C85732) * C152092) *
                C152187 +
            ((C76793 + C76794) * C96046 + C86671 * C152092) * C152068) *
               C152266 -
           ((C87419 * C152092 + C86672 * C96046) * C152068 +
            ((C85733 + C85734) * C152092 + (C85732 + C85731) * C96046) *
                C152187) *
               C152263 +
           (((C85734 + C85733) * C96046 + (C89097 + C89098) * C152092) *
                C152187 +
            (C87420 * C96046 + C90031 * C152092) * C152068) *
               C152252 -
           (((C89099 + C89100) * C152092 + C90032 * C96046) * C152068 +
            ((C89101 + C89102) * C152092 + (C89098 + C89097) * C96046) *
                C152187) *
               C152230) *
              C151851 * C3241 +
          ((((C85735 + C85736) * C96046 + (C85737 + C85738) * C152092) *
                C152187 +
            (C86673 * C96046 + C89489 * C152092) * C152068) *
               C152263 -
           ((C86674 * C152092 + (C76800 + C76799) * C96046) * C152068 +
            ((C85736 + C85735) * C152092 +
             (C76458 * C144 + C76471 + C76471 + C151796 * C160 + C76456 * C143 +
              C76472 + C76472 + C76451 * C159) *
                 C96046) *
                C152187) *
               C152266 -
           (((C89499 + C89500) * C152092 + C89494 * C96046) * C152068 +
            ((C89771 + C89772) * C152092 + (C85738 + C85737) * C96046) *
                C152187) *
               C152252 +
           (((C89772 + C89771) * C96046 +
             (C76456 * C2456 + C89763 + C89763 + C76451 * C2472 +
              C76458 * C2457 + C89764 + C89764 + C151796 * C2473) *
                 C152092) *
                C152187 +
            ((C89500 + C89499) * C96046 +
             (C76456 * C9427 + C89765 + C89765 + C76451 * C9433 +
              C76458 * C9428 + C89766 + C89766 + C151796 * C9434) *
                 C152092) *
                C152068) *
               C152230) *
              C151851 * C151834)) /
            (p * q * std::sqrt(p + q));
    d2ee[268] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
              C76462 + C76462 + C151796 * C159) *
                 C96046 +
             (C85731 + C85732) * C152092) *
                C152187 +
            ((C76793 + C76794) * C96046 + C86671 * C152092) * C152068) *
               C151952 -
           ((C87419 * C152092 + C86672 * C96046) * C152068 +
            ((C85733 + C85734) * C152092 + (C85732 + C85731) * C96046) *
                C152187) *
               C151959 +
           (((C85734 + C85733) * C96046 + (C89097 + C89098) * C152092) *
                C152187 +
            (C87420 * C96046 + C90031 * C152092) * C152068) *
               C4779) *
              C151851 * C151828 +
          ((((C85735 + C85736) * C96046 + (C85737 + C85738) * C152092) *
                C152187 +
            (C86673 * C96046 + C89489 * C152092) * C152068) *
               C151959 -
           ((C86674 * C152092 + (C76800 + C76799) * C96046) * C152068 +
            ((C85736 + C85735) * C152092 +
             (C76458 * C144 + C76471 + C76471 + C151796 * C160 + C76456 * C143 +
              C76472 + C76472 + C76451 * C159) *
                 C96046) *
                C152187) *
               C151952 -
           (((C89499 + C89500) * C152092 + C89494 * C96046) * C152068 +
            ((C89771 + C89772) * C152092 + (C85738 + C85737) * C96046) *
                C152187) *
               C4779) *
              C151851 * C151837 +
          ((((C76456 * C144 + C76473 + C76473 + C76451 * C160 + C76458 * C145 +
              C76474 + C76474 + C151796 * C161) *
                 C96046 +
             (C85739 + C85740) * C152092) *
                C152187 +
            ((C76805 + C76806) * C96046 + C86675 * C152092) * C152068) *
               C151952 -
           (((C85741 + C85742) * C152092 + C86676 * C96046) * C152068 +
            ((C85743 + C85744) * C152092 + (C85740 + C85739) * C96046) *
                C152187) *
               C151959 +
           (((C85744 + C85743) * C96046 +
             (C76456 * C2452 + C85699 + C85699 + C76451 * C2468 +
              C76458 * C2451 + C85700 + C85700 + C151796 * C2467) *
                 C152092) *
                C152187 +
            ((C85742 + C85741) * C96046 +
             (C76456 * C2957 + C85701 + C85701 + C76451 * C2965 +
              C76458 * C2958 + C85702 + C85702 + C151796 * C2966) *
                 C152092) *
                C152068) *
               C4779) *
              C151851 * C3588)) /
        (p * q * std::sqrt(p + q));
    d2ee[269] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
              C76462 + C76462 + C151796 * C159) *
                 C96046 +
             (C85731 + C85732) * C152092) *
                C152187 +
            ((C76793 + C76794) * C96046 + C86671 * C152092) * C152068) *
               C4107 -
           ((C87419 * C152092 + C86672 * C96046) * C152068 +
            ((C85733 + C85734) * C152092 + (C85732 + C85731) * C96046) *
                C152187) *
               C151956) *
              C151851 * C152264 +
          ((((C85735 + C85736) * C96046 + (C85737 + C85738) * C152092) *
                C152187 +
            (C86673 * C96046 + C89489 * C152092) * C152068) *
               C151956 -
           ((C86674 * C152092 + (C76800 + C76799) * C96046) * C152068 +
            ((C85736 + C85735) * C152092 +
             (C76458 * C144 + C76471 + C76471 + C151796 * C160 + C76456 * C143 +
              C76472 + C76472 + C76451 * C159) *
                 C96046) *
                C152187) *
               C4107) *
              C151851 * C152257 +
          ((((C76456 * C144 + C76473 + C76473 + C76451 * C160 + C76458 * C145 +
              C76474 + C76474 + C151796 * C161) *
                 C96046 +
             (C85739 + C85740) * C152092) *
                C152187 +
            ((C76805 + C76806) * C96046 + C86675 * C152092) * C152068) *
               C4107 -
           (((C85741 + C85742) * C152092 + C86676 * C96046) * C152068 +
            ((C85743 + C85744) * C152092 + (C85740 + C85739) * C96046) *
                C152187) *
               C151956) *
              C151851 * C152242 +
          ((((C86283 + C86284) * C96046 +
             (C76456 * C554 + C86275 + C86275 + C76451 * C578 + C76458 * C556 +
              C86276 + C86276 + C151796 * C580) *
                 C152092) *
                C152187 +
            ((C86011 + C86012) * C96046 +
             (C76456 * C1531 + C86277 + C86277 + C76451 * C1555 +
              C76458 * C2677 + C86278 + C86278 + C151796 * C2679) *
                 C152092) *
                C152068) *
               C151956 -
           (((C86012 + C86011) * C152092 + (C77284 + C77283) * C96046) *
                C152068 +
            ((C86284 + C86283) * C152092 +
             (C76458 * C146 + C76483 + C76483 + C151796 * C162 + C76456 * C145 +
              C76484 + C76484 + C76451 * C161) *
                 C96046) *
                C152187) *
               C4107) *
              C151851 * C152218)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
               C76462 + C76462 + C151796 * C159) *
                  C96046 +
              (C85731 + C85732) * C152092) *
                 C152187 +
             ((C76793 + C76794) * C96046 + C86671 * C152092) * C152068) *
                C4107 -
            ((C87419 * C152092 + C86672 * C96046) * C152068 +
             ((C85733 + C85734) * C152092 + (C85732 + C85731) * C96046) *
                 C152187) *
                C151956) *
               C152258 +
           (((C86671 * C96046 + C87420 * C152092) * C152187 +
             (C87421 * C96046 + C78477 * C152092) * C152068) *
                C151956 -
            ((C78429 * C152092 + (C76796 + C76795) * C96046) * C152068 +
             (C86672 * C152092 + (C76794 + C76793) * C96046) * C152187) *
                C4107) *
               C152244 +
           (((C76811 * C96046 + C87421 * C152092) * C152187 +
             ((C76798 + C76797) * C96046 + C79185 * C152092) * C152068) *
                C4107 -
            (((C78475 + C78476) * C152092 + C88326 * C96046) * C152068 +
             (C87422 * C152092 + C78429 * C96046) * C152187) *
                C151956) *
               C152214) *
              C3241 +
          (((((C85735 + C85736) * C96046 + (C85737 + C85738) * C152092) *
                 C152187 +
             (C86673 * C96046 + C89489 * C152092) * C152068) *
                C151956 -
            ((C86674 * C152092 + (C76800 + C76799) * C96046) * C152068 +
             ((C85736 + C85735) * C152092 +
              (C76458 * C144 + C76471 + C76471 + C151796 * C160 +
               C76456 * C143 + C76472 + C76472 + C76451 * C159) *
                  C96046) *
                 C152187) *
                C4107) *
               C152258 +
           ((((C76799 + C76800) * C96046 + C86673 * C152092) * C152187 +
             ((C76801 + C76802) * C96046 + C78977 * C152092) * C152068) *
                C4107 -
            (((C80077 + C80078) * C152092 + C88067 * C96046) * C152068 +
             (C89494 * C152092 + C86674 * C96046) * C152187) *
                C151956) *
               C152244 +
           (((C78977 * C96046 + (C80078 + C80077) * C152092) * C152187 +
             ((C78990 + C78989) * C96046 +
              (C76456 * C8065 + C80067 + C80067 + C76451 * C8071 +
               C76458 * C8066 + C80068 + C80068 + C151796 * C8072) *
                  C152092) *
                 C152068) *
                C151956 -
            (((C78989 + C78990) * C152092 + (C76804 + C76803) * C96046) *
                 C152068 +
             (C88067 * C152092 + C76812 * C96046) * C152187) *
                C4107) *
               C152214) *
              C151834)) /
            (p * q * std::sqrt(p + q));
    d2ee[270] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
              C76462 + C76462 + C151796 * C159) *
                 C96046 +
             (C85731 + C85732) * C152092) *
                C152187 +
            ((C76793 + C76794) * C96046 + C86671 * C152092) * C152068) *
               C151869 * C152172 -
           ((C78429 * C152092 + (C76796 + C76795) * C96046) * C152068 +
            (C86672 * C152092 + (C76794 + C76793) * C96046) * C152187) *
               C151869 * C151914) *
              C739 +
          ((((C76799 + C76800) * C96046 + C86673 * C152092) * C152187 +
            ((C76801 + C76802) * C96046 + C78977 * C152092) * C152068) *
               C151869 * C151914 -
           ((C86674 * C152092 + (C76800 + C76799) * C96046) * C152068 +
            ((C85736 + C85735) * C152092 +
             (C76458 * C144 + C76471 + C76471 + C151796 * C160 + C76456 * C143 +
              C76472 + C76472 + C76451 * C159) *
                 C96046) *
                C152187) *
               C151869 * C152172) *
              C740 +
          ((((C76456 * C144 + C76473 + C76473 + C76451 * C160 + C76458 * C145 +
              C76474 + C76474 + C151796 * C161) *
                 C96046 +
             (C85739 + C85740) * C152092) *
                C152187 +
            ((C76805 + C76806) * C96046 + C86675 * C152092) * C152068) *
               C151869 * C152172 -
           (((C77839 + C77840) * C152092 + (C76808 + C76807) * C96046) *
                C152068 +
            (C86676 * C152092 + (C76806 + C76805) * C96046) * C152187) *
               C151869 * C151914) *
              C741 +
          ((((C77283 + C77284) * C96046 + (C86011 + C86012) * C152092) *
                C152187 +
            ((C77285 + C77286) * C96046 +
             (C76456 * C1535 + C77485 + C77485 + C76451 * C1559 +
              C76458 * C1916 + C77486 + C77486 + C151796 * C1918) *
                 C152092) *
                C152068) *
               C151869 * C151914 -
           (((C86012 + C86011) * C152092 + (C77284 + C77283) * C96046) *
                C152068 +
            ((C86284 + C86283) * C152092 +
             (C76458 * C146 + C76483 + C76483 + C151796 * C162 + C76456 * C145 +
              C76484 + C76484 + C76451 * C161) *
                 C96046) *
                C152187) *
               C151869 * C152172) *
              C152218)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
              C76462 + C76462 + C151796 * C159) *
                 C96046 +
             (C85731 + C85732) * C152092) *
                C152187 +
            ((C76793 + C76794) * C96046 + C86671 * C152092) * C152068) *
               C151869 * C1709 -
           ((C78429 * C152092 + (C76796 + C76795) * C96046) * C152068 +
            (C86672 * C152092 + (C76794 + C76793) * C96046) * C152187) *
               C151869 * C1710 +
           ((C76811 * C96046 + C87421 * C152092) * C152187 +
            ((C76798 + C76797) * C96046 + C79185 * C152092) * C152068) *
               C151869 * C1711 -
           (((C79197 + C79198) * C152092 + (C78206 + C78205) * C96046) *
                C152068 +
            (C88326 * C152092 + C78183 * C96046) * C152187) *
               C151869 * C152224) *
              C152158 +
          ((((C76799 + C76800) * C96046 + C86673 * C152092) * C152187 +
            ((C76801 + C76802) * C96046 + C78977 * C152092) * C152068) *
               C151869 * C1710 -
           ((C86674 * C152092 + (C76800 + C76799) * C96046) * C152068 +
            ((C85736 + C85735) * C152092 +
             (C76458 * C144 + C76471 + C76471 + C151796 * C160 + C76456 * C143 +
              C76472 + C76472 + C76451 * C159) *
                 C96046) *
                C152187) *
               C151869 * C1709 -
           (((C78989 + C78990) * C152092 + (C76804 + C76803) * C96046) *
                C152068 +
            (C88067 * C152092 + C76812 * C96046) * C152187) *
               C151869 * C1711 +
           ((C78673 * C96046 + (C78990 + C78989) * C152092) * C152187 +
            ((C78686 + C78685) * C96046 +
             (C76456 * C8842 + C78982 + C78982 + C76451 * C8848 +
              C76458 * C8843 + C78983 + C78983 + C151796 * C8849) *
                 C152092) *
                C152068) *
               C151869 * C152224) *
              C151834)) /
            (p * q * std::sqrt(p + q));
    d2ee[271] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
               C76462 + C76462 + C151796 * C159) *
                  C96046 +
              (C85731 + C85732) * C152092) *
                 C152187 +
             ((C76793 + C76794) * C96046 + C86671 * C152092) * C152068) *
                C152173 -
            ((C87419 * C152092 + C86672 * C96046) * C152068 +
             ((C85733 + C85734) * C152092 + (C85732 + C85731) * C96046) *
                 C152187) *
                C151956) *
               C152172 +
           (((C86671 * C96046 + C87420 * C152092) * C152187 +
             (C87421 * C96046 + C78477 * C152092) * C152068) *
                C151956 -
            ((C78429 * C152092 + (C76796 + C76795) * C96046) * C152068 +
             (C86672 * C152092 + (C76794 + C76793) * C96046) * C152187) *
                C152173) *
               C151914) *
              C335 +
          (((((C85735 + C85736) * C96046 + (C85737 + C85738) * C152092) *
                 C152187 +
             (C86673 * C96046 + C89489 * C152092) * C152068) *
                C151956 -
            ((C86674 * C152092 + (C76800 + C76799) * C96046) * C152068 +
             ((C85736 + C85735) * C152092 +
              (C76458 * C144 + C76471 + C76471 + C151796 * C160 +
               C76456 * C143 + C76472 + C76472 + C76451 * C159) *
                  C96046) *
                 C152187) *
                C152173) *
               C152172 +
           ((((C76799 + C76800) * C96046 + C86673 * C152092) * C152187 +
             ((C76801 + C76802) * C96046 + C78977 * C152092) * C152068) *
                C152173 -
            (((C80077 + C80078) * C152092 + C88067 * C96046) * C152068 +
             (C89494 * C152092 + C86674 * C96046) * C152187) *
                C151956) *
               C151914) *
              C336 +
          (((((C76456 * C144 + C76473 + C76473 + C76451 * C160 + C76458 * C145 +
               C76474 + C76474 + C151796 * C161) *
                  C96046 +
              (C85739 + C85740) * C152092) *
                 C152187 +
             ((C76805 + C76806) * C96046 + C86675 * C152092) * C152068) *
                C152173 -
            (((C85741 + C85742) * C152092 + C86676 * C96046) * C152068 +
             ((C85743 + C85744) * C152092 + (C85740 + C85739) * C96046) *
                 C152187) *
                C151956) *
               C152172 +
           (((C86675 * C96046 + (C85742 + C85741) * C152092) * C152187 +
             ((C77840 + C77839) * C96046 +
              (C76456 * C1541 + C77069 + C77069 + C76451 * C1565 +
               C76458 * C1542 + C77070 + C77070 + C151796 * C1566) *
                  C152092) *
                 C152068) *
                C151956 -
            (((C77839 + C77840) * C152092 + (C76808 + C76807) * C96046) *
                 C152068 +
             (C86676 * C152092 + (C76806 + C76805) * C96046) * C152187) *
                C152173) *
               C151914) *
              C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
              C76462 + C76462 + C151796 * C159) *
                 C96046 +
             (C85731 + C85732) * C152092) *
                C152187 +
            ((C76793 + C76794) * C96046 + C86671 * C152092) * C152068) *
               C152173 -
           ((C87419 * C152092 + C86672 * C96046) * C152068 +
            ((C85733 + C85734) * C152092 + (C85732 + C85731) * C96046) *
                C152187) *
               C151956) *
              C1709 +
          (((C86671 * C96046 + C87420 * C152092) * C152187 +
            (C87421 * C96046 + C78477 * C152092) * C152068) *
               C151956 -
           ((C78429 * C152092 + (C76796 + C76795) * C96046) * C152068 +
            (C86672 * C152092 + (C76794 + C76793) * C96046) * C152187) *
               C152173) *
              C1710 +
          (((C76811 * C96046 + C87421 * C152092) * C152187 +
            ((C76798 + C76797) * C96046 + C79185 * C152092) * C152068) *
               C152173 -
           (((C78475 + C78476) * C152092 + C88326 * C96046) * C152068 +
            (C87422 * C152092 + C78429 * C96046) * C152187) *
               C151956) *
              C1711 +
          (((C79185 * C96046 + (C78476 + C78475) * C152092) * C152187 +
            ((C79198 + C79197) * C96046 +
             (C76456 * C25021 + C78450 + C78450 + C76451 * C25025 +
              C76458 * C25022 + C78451 + C78451 + C151796 * C25026) *
                 C152092) *
                C152068) *
               C151956 -
           (((C79197 + C79198) * C152092 + (C78206 + C78205) * C96046) *
                C152068 +
            (C88326 * C152092 + C78183 * C96046) * C152187) *
               C152173) *
              C152224) *
         C151823) /
            (p * q * std::sqrt(p + q));
    d2ee[272] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
              C76462 + C76462 + C151796 * C159) *
                 C96046 +
             (C85731 + C85732) * C152092) *
                C152187 +
            ((C76793 + C76794) * C96046 + C86671 * C152092) * C152068) *
               C151869 * C152258 -
           ((C78429 * C152092 + (C76796 + C76795) * C96046) * C152068 +
            (C86672 * C152092 + (C76794 + C76793) * C96046) * C152187) *
               C151869 * C152244 +
           ((C76811 * C96046 + C87421 * C152092) * C152187 +
            ((C76798 + C76797) * C96046 + C79185 * C152092) * C152068) *
               C151869 * C152214) *
              C335 +
          ((((C76799 + C76800) * C96046 + C86673 * C152092) * C152187 +
            ((C76801 + C76802) * C96046 + C78977 * C152092) * C152068) *
               C151869 * C152244 -
           ((C86674 * C152092 + (C76800 + C76799) * C96046) * C152068 +
            ((C85736 + C85735) * C152092 +
             (C76458 * C144 + C76471 + C76471 + C151796 * C160 + C76456 * C143 +
              C76472 + C76472 + C76451 * C159) *
                 C96046) *
                C152187) *
               C151869 * C152258 -
           (((C78989 + C78990) * C152092 + (C76804 + C76803) * C96046) *
                C152068 +
            (C88067 * C152092 + C76812 * C96046) * C152187) *
               C151869 * C152214) *
              C336 +
          ((((C76456 * C144 + C76473 + C76473 + C76451 * C160 + C76458 * C145 +
              C76474 + C76474 + C151796 * C161) *
                 C96046 +
             (C85739 + C85740) * C152092) *
                C152187 +
            ((C76805 + C76806) * C96046 + C86675 * C152092) * C152068) *
               C151869 * C152258 -
           (((C77839 + C77840) * C152092 + (C76808 + C76807) * C96046) *
                C152068 +
            (C86676 * C152092 + (C76806 + C76805) * C96046) * C152187) *
               C151869 * C152244 +
           ((C76813 * C96046 + (C77840 + C77839) * C152092) * C152187 +
            ((C76810 + C76809) * C96046 +
             (C76456 * C2055 + C77805 + C77805 + C76451 * C2063 +
              C76458 * C2056 + C77806 + C77806 + C151796 * C2064) *
                 C152092) *
                C152068) *
               C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
             C76462 + C76462 + C151796 * C159) *
                C96046 +
            (C85731 + C85732) * C152092) *
               C152187 +
           ((C76793 + C76794) * C96046 + C86671 * C152092) * C152068) *
              C151869 * C151851 * C129 -
          ((C86674 * C152092 + (C76800 + C76799) * C96046) * C152068 +
           ((C85736 + C85735) * C152092 +
            (C76458 * C144 + C76471 + C76471 + C151796 * C160 + C76456 * C143 +
             C76472 + C76472 + C76451 * C159) *
                C96046) *
               C152187) *
              C151869 * C151851 * C130 +
          (((C76456 * C144 + C76473 + C76473 + C76451 * C160 + C76458 * C145 +
             C76474 + C76474 + C151796 * C161) *
                C96046 +
            (C85739 + C85740) * C152092) *
               C152187 +
           ((C76805 + C76806) * C96046 + C86675 * C152092) * C152068) *
              C151869 * C151851 * C131 -
          (((C86012 + C86011) * C152092 + (C77284 + C77283) * C96046) *
               C152068 +
           ((C86284 + C86283) * C152092 +
            (C76458 * C146 + C76483 + C76483 + C151796 * C162 + C76456 * C145 +
             C76484 + C76484 + C76451 * C161) *
                C96046) *
               C152187) *
              C151869 * C151851 * C132 +
          (((C76456 * C146 + C76485 + C76485 + C76451 * C162 + C76458 * C147 +
             C76486 + C76486 + C151796 * C163) *
                C96046 +
            (C76456 * C555 + C85087 + C85087 + C76451 * C579 + C76458 * C557 +
             C85088 + C85088 + C151796 * C581) *
                C152092) *
               C152187 +
           ((C76456 * C346 + C76487 + C76487 + C76451 * C370 + C76458 * C348 +
             C76488 + C76488 + C151796 * C372) *
                C96046 +
            (C76456 * C1087 + C85089 + C85089 + C76451 * C1099 +
             C76458 * C1088 + C85090 + C85090 + C151796 * C1100) *
                C152092) *
               C152068) *
              C151869 * C151851 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
              C76462 + C76462 + C151796 * C159) *
                 C96046 +
             (C85731 + C85732) * C152092) *
                C152187 +
            ((C76793 + C76794) * C96046 + C86671 * C152092) * C152068) *
               C152259 -
           ((C87419 * C152092 + C86672 * C96046) * C152068 +
            ((C85733 + C85734) * C152092 + (C85732 + C85731) * C96046) *
                C152187) *
               C152246 +
           (((C85734 + C85733) * C96046 + (C89097 + C89098) * C152092) *
                C152187 +
            (C87420 * C96046 + C90031 * C152092) * C152068) *
               C152217) *
              C151851 * C335 +
          ((((C85735 + C85736) * C96046 + (C85737 + C85738) * C152092) *
                C152187 +
            (C86673 * C96046 + C89489 * C152092) * C152068) *
               C152246 -
           ((C86674 * C152092 + (C76800 + C76799) * C96046) * C152068 +
            ((C85736 + C85735) * C152092 +
             (C76458 * C144 + C76471 + C76471 + C151796 * C160 + C76456 * C143 +
              C76472 + C76472 + C76451 * C159) *
                 C96046) *
                C152187) *
               C152259 -
           (((C89499 + C89500) * C152092 + C89494 * C96046) * C152068 +
            ((C89771 + C89772) * C152092 + (C85738 + C85737) * C96046) *
                C152187) *
               C152217) *
              C151851 * C336 +
          ((((C76456 * C144 + C76473 + C76473 + C76451 * C160 + C76458 * C145 +
              C76474 + C76474 + C151796 * C161) *
                 C96046 +
             (C85739 + C85740) * C152092) *
                C152187 +
            ((C76805 + C76806) * C96046 + C86675 * C152092) * C152068) *
               C152259 -
           (((C85741 + C85742) * C152092 + C86676 * C96046) * C152068 +
            ((C85743 + C85744) * C152092 + (C85740 + C85739) * C96046) *
                C152187) *
               C152246 +
           (((C85744 + C85743) * C96046 +
             (C76456 * C2452 + C85699 + C85699 + C76451 * C2468 +
              C76458 * C2451 + C85700 + C85700 + C151796 * C2467) *
                 C152092) *
                C152187 +
            ((C85742 + C85741) * C96046 +
             (C76456 * C2957 + C85701 + C85701 + C76451 * C2965 +
              C76458 * C2958 + C85702 + C85702 + C151796 * C2966) *
                 C152092) *
                C152068) *
               C152217) *
              C151851 * C152208)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
              C76462 + C76462 + C151796 * C159) *
                 C96046 +
             (C85731 + C85732) * C152092) *
                C152187 +
            ((C76793 + C76794) * C96046 + C86671 * C152092) * C152068) *
               C151869 * C1259 -
           ((C78429 * C152092 + (C76796 + C76795) * C96046) * C152068 +
            (C86672 * C152092 + (C76794 + C76793) * C96046) * C152187) *
               C151869 * C1260 +
           ((C76811 * C96046 + C87421 * C152092) * C152187 +
            ((C76798 + C76797) * C96046 + C79185 * C152092) * C152068) *
               C151869 * C152214) *
              C152255 +
          ((((C76799 + C76800) * C96046 + C86673 * C152092) * C152187 +
            ((C76801 + C76802) * C96046 + C78977 * C152092) * C152068) *
               C151869 * C1260 -
           ((C86674 * C152092 + (C76800 + C76799) * C96046) * C152068 +
            ((C85736 + C85735) * C152092 +
             (C76458 * C144 + C76471 + C76471 + C151796 * C160 + C76456 * C143 +
              C76472 + C76472 + C76451 * C159) *
                 C96046) *
                C152187) *
               C151869 * C1259 -
           (((C78989 + C78990) * C152092 + (C76804 + C76803) * C96046) *
                C152068 +
            (C88067 * C152092 + C76812 * C96046) * C152187) *
               C151869 * C152214) *
              C152240 +
          ((((C76456 * C144 + C76473 + C76473 + C76451 * C160 + C76458 * C145 +
              C76474 + C76474 + C151796 * C161) *
                 C96046 +
             (C85739 + C85740) * C152092) *
                C152187 +
            ((C76805 + C76806) * C96046 + C86675 * C152092) * C152068) *
               C151869 * C1259 -
           (((C77839 + C77840) * C152092 + (C76808 + C76807) * C96046) *
                C152068 +
            (C86676 * C152092 + (C76806 + C76805) * C96046) * C152187) *
               C151869 * C1260 +
           ((C76813 * C96046 + (C77840 + C77839) * C152092) * C152187 +
            ((C76810 + C76809) * C96046 +
             (C76456 * C2055 + C77805 + C77805 + C76451 * C2063 +
              C76458 * C2056 + C77806 + C77806 + C151796 * C2064) *
                 C152092) *
                C152068) *
               C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
             C76462 + C76462 + C151796 * C159) *
                C96046 +
            (C85731 + C85732) * C152092) *
               C152187 +
           ((C76793 + C76794) * C96046 + C86671 * C152092) * C152068) *
              C151869 * C1347 -
          ((C78429 * C152092 + (C76796 + C76795) * C96046) * C152068 +
           (C86672 * C152092 + (C76794 + C76793) * C96046) * C152187) *
              C151869 * C1348 +
          ((C76811 * C96046 + C87421 * C152092) * C152187 +
           ((C76798 + C76797) * C96046 + C79185 * C152092) * C152068) *
              C151869 * C1349 -
          (((C79197 + C79198) * C152092 + (C78206 + C78205) * C96046) *
               C152068 +
           (C88326 * C152092 + C78183 * C96046) * C152187) *
              C151869 * C1350 +
          ((C78209 * C96046 + (C79198 + C79197) * C152092) * C152187 +
           ((C78208 + C78207) * C96046 +
            (C76456 * C25783 + C79190 + C79190 + C76451 * C25787 +
             C76458 * C25784 + C79191 + C79191 + C151796 * C25788) *
                C152092) *
               C152068) *
              C151869 * C1351) *
         C151823) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
              C76462 + C76462 + C151796 * C159) *
                 C96046 +
             (C85731 + C85732) * C152092) *
                C152187 +
            ((C76793 + C76794) * C96046 + C86671 * C152092) * C152068) *
               C152259 -
           ((C87419 * C152092 + C86672 * C96046) * C152068 +
            ((C85733 + C85734) * C152092 + (C85732 + C85731) * C96046) *
                C152187) *
               C152246 +
           (((C85734 + C85733) * C96046 + (C89097 + C89098) * C152092) *
                C152187 +
            (C87420 * C96046 + C90031 * C152092) * C152068) *
               C152217) *
              C1259 +
          (((C86671 * C96046 + C87420 * C152092) * C152187 +
            (C87421 * C96046 + C78477 * C152092) * C152068) *
               C152246 -
           ((C78429 * C152092 + (C76796 + C76795) * C96046) * C152068 +
            (C86672 * C152092 + (C76794 + C76793) * C96046) * C152187) *
               C152259 -
           (((C80493 + C80494) * C152092 + C87422 * C96046) * C152068 +
            (C90032 * C152092 + C87419 * C96046) * C152187) *
               C152217) *
              C1260 +
          (((C76811 * C96046 + C87421 * C152092) * C152187 +
            ((C76798 + C76797) * C96046 + C79185 * C152092) * C152068) *
               C152259 -
           (((C78475 + C78476) * C152092 + C88326 * C96046) * C152068 +
            (C87422 * C152092 + C78429 * C96046) * C152187) *
               C152246 +
           ((C78477 * C96046 + (C80494 + C80493) * C152092) * C152187 +
            ((C78476 + C78475) * C96046 +
             (C76456 * C27085 + C80483 + C80483 + C76451 * C27089 +
              C76458 * C27086 + C80484 + C80484 + C151796 * C27090) *
                 C152092) *
                C152068) *
               C152217) *
              C152214) *
         C151823) /
            (p * q * std::sqrt(p + q));
    d2ee[273] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
              C76462 + C76462 + C151796 * C159) *
                 C96046 +
             (C85731 + C85732) * C152092) *
                C152187 +
            ((C76793 + C76794) * C96046 + C86671 * C152092) * C152068) *
               C152173 -
           ((C87419 * C152092 + C86672 * C96046) * C152068 +
            ((C85733 + C85734) * C152092 + (C85732 + C85731) * C96046) *
                C152187) *
               C151956) *
              C151851 * C739 +
          ((((C85735 + C85736) * C96046 + (C85737 + C85738) * C152092) *
                C152187 +
            (C86673 * C96046 + C89489 * C152092) * C152068) *
               C151956 -
           ((C86674 * C152092 + (C76800 + C76799) * C96046) * C152068 +
            ((C85736 + C85735) * C152092 +
             (C76458 * C144 + C76471 + C76471 + C151796 * C160 + C76456 * C143 +
              C76472 + C76472 + C76451 * C159) *
                 C96046) *
                C152187) *
               C152173) *
              C151851 * C740 +
          ((((C76456 * C144 + C76473 + C76473 + C76451 * C160 + C76458 * C145 +
              C76474 + C76474 + C151796 * C161) *
                 C96046 +
             (C85739 + C85740) * C152092) *
                C152187 +
            ((C76805 + C76806) * C96046 + C86675 * C152092) * C152068) *
               C152173 -
           (((C85741 + C85742) * C152092 + C86676 * C96046) * C152068 +
            ((C85743 + C85744) * C152092 + (C85740 + C85739) * C96046) *
                C152187) *
               C151956) *
              C151851 * C741 +
          ((((C86283 + C86284) * C96046 +
             (C76456 * C554 + C86275 + C86275 + C76451 * C578 + C76458 * C556 +
              C86276 + C86276 + C151796 * C580) *
                 C152092) *
                C152187 +
            ((C86011 + C86012) * C96046 +
             (C76456 * C1531 + C86277 + C86277 + C76451 * C1555 +
              C76458 * C2677 + C86278 + C86278 + C151796 * C2679) *
                 C152092) *
                C152068) *
               C151956 -
           (((C86012 + C86011) * C152092 + (C77284 + C77283) * C96046) *
                C152068 +
            ((C86284 + C86283) * C152092 +
             (C76458 * C146 + C76483 + C76483 + C151796 * C162 + C76456 * C145 +
              C76484 + C76484 + C76451 * C161) *
                 C96046) *
                C152187) *
               C152173) *
              C151851 * C152218)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
               C76462 + C76462 + C151796 * C159) *
                  C96046 +
              (C85731 + C85732) * C152092) *
                 C152187 +
             ((C76793 + C76794) * C96046 + C86671 * C152092) * C152068) *
                C152173 -
            ((C87419 * C152092 + C86672 * C96046) * C152068 +
             ((C85733 + C85734) * C152092 + (C85732 + C85731) * C96046) *
                 C152187) *
                C151956) *
               C1259 +
           (((C86671 * C96046 + C87420 * C152092) * C152187 +
             (C87421 * C96046 + C78477 * C152092) * C152068) *
                C151956 -
            ((C78429 * C152092 + (C76796 + C76795) * C96046) * C152068 +
             (C86672 * C152092 + (C76794 + C76793) * C96046) * C152187) *
                C152173) *
               C1260 +
           (((C76811 * C96046 + C87421 * C152092) * C152187 +
             ((C76798 + C76797) * C96046 + C79185 * C152092) * C152068) *
                C152173 -
            (((C78475 + C78476) * C152092 + C88326 * C96046) * C152068 +
             (C87422 * C152092 + C78429 * C96046) * C152187) *
                C151956) *
               C152214) *
              C152158 +
          (((((C85735 + C85736) * C96046 + (C85737 + C85738) * C152092) *
                 C152187 +
             (C86673 * C96046 + C89489 * C152092) * C152068) *
                C151956 -
            ((C86674 * C152092 + (C76800 + C76799) * C96046) * C152068 +
             ((C85736 + C85735) * C152092 +
              (C76458 * C144 + C76471 + C76471 + C151796 * C160 +
               C76456 * C143 + C76472 + C76472 + C76451 * C159) *
                  C96046) *
                 C152187) *
                C152173) *
               C1259 +
           ((((C76799 + C76800) * C96046 + C86673 * C152092) * C152187 +
             ((C76801 + C76802) * C96046 + C78977 * C152092) * C152068) *
                C152173 -
            (((C80077 + C80078) * C152092 + C88067 * C96046) * C152068 +
             (C89494 * C152092 + C86674 * C96046) * C152187) *
                C151956) *
               C1260 +
           (((C78977 * C96046 + (C80078 + C80077) * C152092) * C152187 +
             ((C78990 + C78989) * C96046 +
              (C76456 * C8065 + C80067 + C80067 + C76451 * C8071 +
               C76458 * C8066 + C80068 + C80068 + C151796 * C8072) *
                  C152092) *
                 C152068) *
                C151956 -
            (((C78989 + C78990) * C152092 + (C76804 + C76803) * C96046) *
                 C152068 +
             (C88067 * C152092 + C76812 * C96046) * C152187) *
                C152173) *
               C152214) *
              C151834)) /
            (p * q * std::sqrt(p + q));
    d2ee[274] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
             C76462 + C76462 + C151796 * C159) *
                C96046 +
            (C85731 + C85732) * C152092) *
               C152187 +
           ((C76793 + C76794) * C96046 + C86671 * C152092) * C152068) *
              C151869 * C151851 * C129 -
          ((C86674 * C152092 + (C76800 + C76799) * C96046) * C152068 +
           ((C85736 + C85735) * C152092 +
            (C76458 * C144 + C76471 + C76471 + C151796 * C160 + C76456 * C143 +
             C76472 + C76472 + C76451 * C159) *
                C96046) *
               C152187) *
              C151869 * C151851 * C130 +
          (((C76456 * C144 + C76473 + C76473 + C76451 * C160 + C76458 * C145 +
             C76474 + C76474 + C151796 * C161) *
                C96046 +
            (C85739 + C85740) * C152092) *
               C152187 +
           ((C76805 + C76806) * C96046 + C86675 * C152092) * C152068) *
              C151869 * C151851 * C131 -
          (((C86012 + C86011) * C152092 + (C77284 + C77283) * C96046) *
               C152068 +
           ((C86284 + C86283) * C152092 +
            (C76458 * C146 + C76483 + C76483 + C151796 * C162 + C76456 * C145 +
             C76484 + C76484 + C76451 * C161) *
                C96046) *
               C152187) *
              C151869 * C151851 * C132 +
          (((C76456 * C146 + C76485 + C76485 + C76451 * C162 + C76458 * C147 +
             C76486 + C76486 + C151796 * C163) *
                C96046 +
            (C76456 * C555 + C85087 + C85087 + C76451 * C579 + C76458 * C557 +
             C85088 + C85088 + C151796 * C581) *
                C152092) *
               C152187 +
           ((C76456 * C346 + C76487 + C76487 + C76451 * C370 + C76458 * C348 +
             C76488 + C76488 + C151796 * C372) *
                C96046 +
            (C76456 * C1087 + C85089 + C85089 + C76451 * C1099 +
             C76458 * C1088 + C85090 + C85090 + C151796 * C1100) *
                C152092) *
               C152068) *
              C151869 * C151851 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
              C76462 + C76462 + C151796 * C159) *
                 C96046 +
             (C85731 + C85732) * C152092) *
                C152187 +
            ((C76793 + C76794) * C96046 + C86671 * C152092) * C152068) *
               C151869 * C152258 -
           ((C78429 * C152092 + (C76796 + C76795) * C96046) * C152068 +
            (C86672 * C152092 + (C76794 + C76793) * C96046) * C152187) *
               C151869 * C152244 +
           ((C76811 * C96046 + C87421 * C152092) * C152187 +
            ((C76798 + C76797) * C96046 + C79185 * C152092) * C152068) *
               C151869 * C152214) *
              C335 +
          ((((C76799 + C76800) * C96046 + C86673 * C152092) * C152187 +
            ((C76801 + C76802) * C96046 + C78977 * C152092) * C152068) *
               C151869 * C152244 -
           ((C86674 * C152092 + (C76800 + C76799) * C96046) * C152068 +
            ((C85736 + C85735) * C152092 +
             (C76458 * C144 + C76471 + C76471 + C151796 * C160 + C76456 * C143 +
              C76472 + C76472 + C76451 * C159) *
                 C96046) *
                C152187) *
               C151869 * C152258 -
           (((C78989 + C78990) * C152092 + (C76804 + C76803) * C96046) *
                C152068 +
            (C88067 * C152092 + C76812 * C96046) * C152187) *
               C151869 * C152214) *
              C336 +
          ((((C76456 * C144 + C76473 + C76473 + C76451 * C160 + C76458 * C145 +
              C76474 + C76474 + C151796 * C161) *
                 C96046 +
             (C85739 + C85740) * C152092) *
                C152187 +
            ((C76805 + C76806) * C96046 + C86675 * C152092) * C152068) *
               C151869 * C152258 -
           (((C77839 + C77840) * C152092 + (C76808 + C76807) * C96046) *
                C152068 +
            (C86676 * C152092 + (C76806 + C76805) * C96046) * C152187) *
               C151869 * C152244 +
           ((C76813 * C96046 + (C77840 + C77839) * C152092) * C152187 +
            ((C76810 + C76809) * C96046 +
             (C76456 * C2055 + C77805 + C77805 + C76451 * C2063 +
              C76458 * C2056 + C77806 + C77806 + C151796 * C2064) *
                 C152092) *
                C152068) *
               C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
              C76462 + C76462 + C151796 * C159) *
                 C96046 +
             (C85731 + C85732) * C152092) *
                C152187 +
            ((C76793 + C76794) * C96046 + C86671 * C152092) * C152068) *
               C151869 * C1259 -
           ((C78429 * C152092 + (C76796 + C76795) * C96046) * C152068 +
            (C86672 * C152092 + (C76794 + C76793) * C96046) * C152187) *
               C151869 * C1260 +
           ((C76811 * C96046 + C87421 * C152092) * C152187 +
            ((C76798 + C76797) * C96046 + C79185 * C152092) * C152068) *
               C151869 * C152214) *
              C152255 +
          ((((C76799 + C76800) * C96046 + C86673 * C152092) * C152187 +
            ((C76801 + C76802) * C96046 + C78977 * C152092) * C152068) *
               C151869 * C1260 -
           ((C86674 * C152092 + (C76800 + C76799) * C96046) * C152068 +
            ((C85736 + C85735) * C152092 +
             (C76458 * C144 + C76471 + C76471 + C151796 * C160 + C76456 * C143 +
              C76472 + C76472 + C76451 * C159) *
                 C96046) *
                C152187) *
               C151869 * C1259 -
           (((C78989 + C78990) * C152092 + (C76804 + C76803) * C96046) *
                C152068 +
            (C88067 * C152092 + C76812 * C96046) * C152187) *
               C151869 * C152214) *
              C152240 +
          ((((C76456 * C144 + C76473 + C76473 + C76451 * C160 + C76458 * C145 +
              C76474 + C76474 + C151796 * C161) *
                 C96046 +
             (C85739 + C85740) * C152092) *
                C152187 +
            ((C76805 + C76806) * C96046 + C86675 * C152092) * C152068) *
               C151869 * C1259 -
           (((C77839 + C77840) * C152092 + (C76808 + C76807) * C96046) *
                C152068 +
            (C86676 * C152092 + (C76806 + C76805) * C96046) * C152187) *
               C151869 * C1260 +
           ((C76813 * C96046 + (C77840 + C77839) * C152092) * C152187 +
            ((C76810 + C76809) * C96046 +
             (C76456 * C2055 + C77805 + C77805 + C76451 * C2063 +
              C76458 * C2056 + C77806 + C77806 + C151796 * C2064) *
                 C152092) *
                C152068) *
               C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
             C76462 + C76462 + C151796 * C159) *
                C96046 +
            (C85731 + C85732) * C152092) *
               C152187 +
           ((C76793 + C76794) * C96046 + C86671 * C152092) * C152068) *
              C151869 * C1347 -
          ((C78429 * C152092 + (C76796 + C76795) * C96046) * C152068 +
           (C86672 * C152092 + (C76794 + C76793) * C96046) * C152187) *
              C151869 * C1348 +
          ((C76811 * C96046 + C87421 * C152092) * C152187 +
           ((C76798 + C76797) * C96046 + C79185 * C152092) * C152068) *
              C151869 * C1349 -
          (((C79197 + C79198) * C152092 + (C78206 + C78205) * C96046) *
               C152068 +
           (C88326 * C152092 + C78183 * C96046) * C152187) *
              C151869 * C1350 +
          ((C78209 * C96046 + (C79198 + C79197) * C152092) * C152187 +
           ((C78208 + C78207) * C96046 +
            (C76456 * C25783 + C79190 + C79190 + C76451 * C25787 +
             C76458 * C25784 + C79191 + C79191 + C151796 * C25788) *
                C152092) *
               C152068) *
              C151869 * C1351) *
         C151823) /
            (p * q * std::sqrt(p + q));
    d2ee[275] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
             C76462 + C76462 + C151796 * C159) *
                C152254 +
            (C85731 + C85732) * C152236 + C115615 * C115175) *
               C152054 * C151869 * C151910 -
           (C87419 * C115175 + C86672 * C152236 + (C76794 + C76793) * C152254) *
               C152054 * C151869 * C151917 +
           (C76811 * C152254 + C87421 * C152236 + C78477 * C115175) * C152054 *
               C151869 * C3585) *
              C151828 +
          (((C76799 + C76800) * C152254 + C86673 * C152236 + C89489 * C115175) *
               C152054 * C151869 * C151917 -
           (C115616 * C115175 + (C85736 + C85735) * C152236 +
            (C76458 * C144 + C76471 + C76471 + C151796 * C160 + C76456 * C143 +
             C76472 + C76472 + C76451 * C159) *
                C152254) *
               C152054 * C151869 * C151910 -
           ((C80077 + C80078) * C115175 + C88067 * C152236 + C76812 * C152254) *
               C152054 * C151869 * C3585) *
              C151837 +
          (((C76456 * C144 + C76473 + C76473 + C76451 * C160 + C76458 * C145 +
             C76474 + C76474 + C151796 * C161) *
                C152254 +
            (C85739 + C85740) * C152236 + C115617 * C115175) *
               C152054 * C151869 * C151910 -
           ((C85741 + C85742) * C115175 + C86676 * C152236 +
            (C76806 + C76805) * C152254) *
               C152054 * C151869 * C151917 +
           (C76813 * C152254 + (C77840 + C77839) * C152236 +
            (C76456 * C1541 + C77069 + C77069 + C76451 * C1565 +
             C76458 * C1542 + C77070 + C77070 + C151796 * C1566) *
                C115175) *
               C152054 * C151869 * C3585) *
              C3588)) /
        (p * q * std::sqrt(p + q));
    d2ee[276] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  (((((C76456 * C142 + C76461 + C76461 + C76451 * C158 +
                       C76458 * C143 + C76462 + C76462 + C151796 * C159) *
                          C152254 +
                      (C85731 + C85732) * C152236 + C115615 * C115175) *
                         C152054 * C152173 -
                     (C118114 * C115175 + (C85733 + C85734) * C152236 +
                      (C85732 + C85731) * C152254) *
                         C152054 * C151956) *
                        C151910 +
                    ((C86671 * C152254 + C87420 * C152236 + C90031 * C115175) *
                         C152054 * C151956 -
                     (C87419 * C115175 + C86672 * C152236 +
                      (C76794 + C76793) * C152254) *
                         C152054 * C152173) *
                        C151917 +
                    ((C76811 * C152254 + C87421 * C152236 + C78477 * C115175) *
                         C152054 * C152173 -
                     ((C80493 + C80494) * C115175 + C87422 * C152236 +
                      C78429 * C152254) *
                         C152054 * C151956) *
                        C3585) *
                       C3241 +
                   ((((C85735 + C85736) * C152254 +
                      (C85737 + C85738) * C152236 + C118612 * C115175) *
                         C152054 * C151956 -
                     (C115616 * C115175 + (C85736 + C85735) * C152236 +
                      (C76458 * C144 + C76471 + C76471 + C151796 * C160 +
                       C76456 * C143 + C76472 + C76472 + C76451 * C159) *
                          C152254) *
                         C152054 * C152173) *
                        C151910 +
                    (((C76799 + C76800) * C152254 + C86673 * C152236 +
                      C89489 * C115175) *
                         C152054 * C152173 -
                     ((C89499 + C89500) * C115175 + C89494 * C152236 +
                      C86674 * C152254) *
                         C152054 * C151956) *
                        C151917 +
                    ((C78977 * C152254 + (C80078 + C80077) * C152236 +
                      (C76456 * C10150 + C80279 + C80279 + C76451 * C10156 +
                       C76458 * C10151 + C80280 + C80280 + C151796 * C10157) *
                          C115175) *
                         C152054 * C151956 -
                     ((C80077 + C80078) * C115175 + C88067 * C152236 +
                      C76812 * C152254) *
                         C152054 * C152173) *
                        C3585) *
                       C151834)) /
                 (p * q * std::sqrt(p + q));
    d2ee[277] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
             C76462 + C76462 + C151796 * C159) *
                C152254 +
            (C85731 + C85732) * C152236 + C115615 * C115175) *
               C152054 * C151869 * C152265 -
           (C87419 * C115175 + C86672 * C152236 + (C76794 + C76793) * C152254) *
               C152054 * C151869 * C152261 +
           (C76811 * C152254 + C87421 * C152236 + C78477 * C115175) * C152054 *
               C151869 * C152249 -
           ((C78475 + C78476) * C115175 + C88326 * C152236 + C78183 * C152254) *
               C152054 * C151869 * C152224) *
              C3241 +
          (((C76799 + C76800) * C152254 + C86673 * C152236 + C89489 * C115175) *
               C152054 * C151869 * C152261 -
           (C115616 * C115175 + (C85736 + C85735) * C152236 +
            (C76458 * C144 + C76471 + C76471 + C151796 * C160 + C76456 * C143 +
             C76472 + C76472 + C76451 * C159) *
                C152254) *
               C152054 * C151869 * C152265 -
           ((C80077 + C80078) * C115175 + C88067 * C152236 + C76812 * C152254) *
               C152054 * C151869 * C152249 +
           (C78673 * C152254 + (C78990 + C78989) * C152236 +
            (C76456 * C8065 + C80067 + C80067 + C76451 * C8071 +
             C76458 * C8066 + C80068 + C80068 + C151796 * C8072) *
                C115175) *
               C152054 * C151869 * C152224) *
              C151834)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
             C76462 + C76462 + C151796 * C159) *
                C152254 +
            (C85731 + C85732) * C152236 + C115615 * C115175) *
               C152054 * C151869 * C3101 -
           (C87419 * C115175 + C86672 * C152236 + (C76794 + C76793) * C152254) *
               C152054 * C151869 * C151914) *
              C152264 +
          (((C76799 + C76800) * C152254 + C86673 * C152236 + C89489 * C115175) *
               C152054 * C151869 * C151914 -
           (C115616 * C115175 + (C85736 + C85735) * C152236 +
            (C76458 * C144 + C76471 + C76471 + C151796 * C160 + C76456 * C143 +
             C76472 + C76472 + C76451 * C159) *
                C152254) *
               C152054 * C151869 * C3101) *
              C152257 +
          (((C76456 * C144 + C76473 + C76473 + C76451 * C160 + C76458 * C145 +
             C76474 + C76474 + C151796 * C161) *
                C152254 +
            (C85739 + C85740) * C152236 + C115617 * C115175) *
               C152054 * C151869 * C3101 -
           ((C85741 + C85742) * C115175 + C86676 * C152236 +
            (C76806 + C76805) * C152254) *
               C152054 * C151869 * C151914) *
              C152242 +
          (((C77283 + C77284) * C152254 + (C86011 + C86012) * C152236 +
            (C76456 * C1531 + C86277 + C86277 + C76451 * C1555 +
             C76458 * C2677 + C86278 + C86278 + C151796 * C2679) *
                C115175) *
               C152054 * C151869 * C151914 -
           ((C116029 + C116028) * C115175 + (C86284 + C86283) * C152236 +
            (C76458 * C146 + C76483 + C76483 + C151796 * C162 + C76456 * C145 +
             C76484 + C76484 + C76451 * C161) *
                C152254) *
               C152054 * C151869 * C3101) *
              C152218)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
              C76462 + C76462 + C151796 * C159) *
                 C152254 +
             (C85731 + C85732) * C152236 + C115615 * C115175) *
                C152054 * C152259 -
            (C118114 * C115175 + (C85733 + C85734) * C152236 +
             (C85732 + C85731) * C152254) *
                C152054 * C152246 +
            (C115615 * C152254 + (C89097 + C89098) * C152236 +
             C118115 * C115175) *
                C152054 * C152217) *
               C3101 +
           ((C86671 * C152254 + C87420 * C152236 + C90031 * C115175) * C152054 *
                C152246 -
            (C87419 * C115175 + C86672 * C152236 +
             (C76794 + C76793) * C152254) *
                C152054 * C152259 -
            ((C89099 + C89100) * C115175 + C90032 * C152236 +
             C87419 * C152254) *
                C152054 * C152217) *
               C151914) *
              C3241 +
          ((((C85735 + C85736) * C152254 + (C85737 + C85738) * C152236 +
             C118612 * C115175) *
                C152054 * C152246 -
            (C115616 * C115175 + (C85736 + C85735) * C152236 +
             (C76458 * C144 + C76471 + C76471 + C151796 * C160 + C76456 * C143 +
              C76472 + C76472 + C76451 * C159) *
                 C152254) *
                C152054 * C152259 -
            ((C118623 + C118624) * C115175 + (C89771 + C89772) * C152236 +
             C115616 * C152254) *
                C152054 * C152217) *
               C3101 +
           (((C76799 + C76800) * C152254 + C86673 * C152236 +
             C89489 * C115175) *
                C152054 * C152259 -
            ((C89499 + C89500) * C115175 + C89494 * C152236 +
             C86674 * C152254) *
                C152054 * C152246 +
            (C89489 * C152254 + (C89500 + C89499) * C152236 +
             (C76456 * C9427 + C89765 + C89765 + C76451 * C9433 +
              C76458 * C9428 + C89766 + C89766 + C151796 * C9434) *
                 C115175) *
                C152054 * C152217) *
               C151914) *
              C151834)) /
            (p * q * std::sqrt(p + q));
    d2ee[278] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
              C76462 + C76462 + C151796 * C159) *
                 C152254 +
             (C85731 + C85732) * C152236 + C115615 * C115175) *
                C152054 * C152173 -
            (C118114 * C115175 + (C85733 + C85734) * C152236 +
             (C85732 + C85731) * C152254) *
                C152054 * C151956) *
               C3101 +
           ((C86671 * C152254 + C87420 * C152236 + C90031 * C115175) * C152054 *
                C151956 -
            (C87419 * C115175 + C86672 * C152236 +
             (C76794 + C76793) * C152254) *
                C152054 * C152173) *
               C151914) *
              C151828 +
          ((((C85735 + C85736) * C152254 + (C85737 + C85738) * C152236 +
             C118612 * C115175) *
                C152054 * C151956 -
            (C115616 * C115175 + (C85736 + C85735) * C152236 +
             (C76458 * C144 + C76471 + C76471 + C151796 * C160 + C76456 * C143 +
              C76472 + C76472 + C76451 * C159) *
                 C152254) *
                C152054 * C152173) *
               C3101 +
           (((C76799 + C76800) * C152254 + C86673 * C152236 +
             C89489 * C115175) *
                C152054 * C152173 -
            ((C89499 + C89500) * C115175 + C89494 * C152236 +
             C86674 * C152254) *
                C152054 * C151956) *
               C151914) *
              C151837 +
          ((((C76456 * C144 + C76473 + C76473 + C76451 * C160 + C76458 * C145 +
              C76474 + C76474 + C151796 * C161) *
                 C152254 +
             (C85739 + C85740) * C152236 + C115617 * C115175) *
                C152054 * C152173 -
            ((C115628 + C115629) * C115175 + (C85743 + C85744) * C152236 +
             (C85740 + C85739) * C152254) *
                C152054 * C151956) *
               C3101 +
           ((C86675 * C152254 + (C85742 + C85741) * C152236 +
             (C76456 * C2957 + C85701 + C85701 + C76451 * C2965 +
              C76458 * C2958 + C85702 + C85702 + C151796 * C2966) *
                 C115175) *
                C152054 * C151956 -
            ((C85741 + C85742) * C115175 + C86676 * C152236 +
             (C76806 + C76805) * C152254) *
                C152054 * C152173) *
               C151914) *
              C3588)) /
        (p * q * std::sqrt(p + q));
    d2ee[279] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
             C76462 + C76462 + C151796 * C159) *
                C152254 +
            (C85731 + C85732) * C152236 + C115615 * C115175) *
               C152054 * C151869 * C3101 -
           (C87419 * C115175 + C86672 * C152236 + (C76794 + C76793) * C152254) *
               C152054 * C151869 * C151914) *
              C152264 +
          (((C76799 + C76800) * C152254 + C86673 * C152236 + C89489 * C115175) *
               C152054 * C151869 * C151914 -
           (C115616 * C115175 + (C85736 + C85735) * C152236 +
            (C76458 * C144 + C76471 + C76471 + C151796 * C160 + C76456 * C143 +
             C76472 + C76472 + C76451 * C159) *
                C152254) *
               C152054 * C151869 * C3101) *
              C152257 +
          (((C76456 * C144 + C76473 + C76473 + C76451 * C160 + C76458 * C145 +
             C76474 + C76474 + C151796 * C161) *
                C152254 +
            (C85739 + C85740) * C152236 + C115617 * C115175) *
               C152054 * C151869 * C3101 -
           ((C85741 + C85742) * C115175 + C86676 * C152236 +
            (C76806 + C76805) * C152254) *
               C152054 * C151869 * C151914) *
              C152242 +
          (((C77283 + C77284) * C152254 + (C86011 + C86012) * C152236 +
            (C76456 * C1531 + C86277 + C86277 + C76451 * C1555 +
             C76458 * C2677 + C86278 + C86278 + C151796 * C2679) *
                C115175) *
               C152054 * C151869 * C151914 -
           ((C116029 + C116028) * C115175 + (C86284 + C86283) * C152236 +
            (C76458 * C146 + C76483 + C76483 + C151796 * C162 + C76456 * C145 +
             C76484 + C76484 + C76451 * C161) *
                C152254) *
               C152054 * C151869 * C3101) *
              C152218)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
             C76462 + C76462 + C151796 * C159) *
                C152254 +
            (C85731 + C85732) * C152236 + C115615 * C115175) *
               C152054 * C151869 * C152265 -
           (C87419 * C115175 + C86672 * C152236 + (C76794 + C76793) * C152254) *
               C152054 * C151869 * C152261 +
           (C76811 * C152254 + C87421 * C152236 + C78477 * C115175) * C152054 *
               C151869 * C152249 -
           ((C78475 + C78476) * C115175 + C88326 * C152236 + C78183 * C152254) *
               C152054 * C151869 * C152224) *
              C3241 +
          (((C76799 + C76800) * C152254 + C86673 * C152236 + C89489 * C115175) *
               C152054 * C151869 * C152261 -
           (C115616 * C115175 + (C85736 + C85735) * C152236 +
            (C76458 * C144 + C76471 + C76471 + C151796 * C160 + C76456 * C143 +
             C76472 + C76472 + C76451 * C159) *
                C152254) *
               C152054 * C151869 * C152265 -
           ((C80077 + C80078) * C115175 + C88067 * C152236 + C76812 * C152254) *
               C152054 * C151869 * C152249 +
           (C78673 * C152254 + (C78990 + C78989) * C152236 +
            (C76456 * C8065 + C80067 + C80067 + C76451 * C8071 +
             C76458 * C8066 + C80068 + C80068 + C151796 * C8072) *
                C115175) *
               C152054 * C151869 * C152224) *
              C151834)) /
            (p * q * std::sqrt(p + q));
    d2ee[280] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  (((((C76456 * C142 + C76461 + C76461 + C76451 * C158 +
                       C76458 * C143 + C76462 + C76462 + C151796 * C159) *
                          C152254 +
                      (C85731 + C85732) * C152236 + C115615 * C115175) *
                         C152054 * C4107 -
                     (C118114 * C115175 + (C85733 + C85734) * C152236 +
                      (C85732 + C85731) * C152254) *
                         C152054 * C151956) *
                        C151910 +
                    ((C86671 * C152254 + C87420 * C152236 + C90031 * C115175) *
                         C152054 * C151956 -
                     (C87419 * C115175 + C86672 * C152236 +
                      (C76794 + C76793) * C152254) *
                         C152054 * C4107) *
                        C151917 +
                    ((C76811 * C152254 + C87421 * C152236 + C78477 * C115175) *
                         C152054 * C4107 -
                     ((C80493 + C80494) * C115175 + C87422 * C152236 +
                      C78429 * C152254) *
                         C152054 * C151956) *
                        C3585) *
                       C152158 +
                   ((((C85735 + C85736) * C152254 +
                      (C85737 + C85738) * C152236 + C118612 * C115175) *
                         C152054 * C151956 -
                     (C115616 * C115175 + (C85736 + C85735) * C152236 +
                      (C76458 * C144 + C76471 + C76471 + C151796 * C160 +
                       C76456 * C143 + C76472 + C76472 + C76451 * C159) *
                          C152254) *
                         C152054 * C4107) *
                        C151910 +
                    (((C76799 + C76800) * C152254 + C86673 * C152236 +
                      C89489 * C115175) *
                         C152054 * C4107 -
                     ((C89499 + C89500) * C115175 + C89494 * C152236 +
                      C86674 * C152254) *
                         C152054 * C151956) *
                        C151917 +
                    ((C78977 * C152254 + (C80078 + C80077) * C152236 +
                      (C76456 * C10150 + C80279 + C80279 + C76451 * C10156 +
                       C76458 * C10151 + C80280 + C80280 + C151796 * C10157) *
                          C115175) *
                         C152054 * C151956 -
                     ((C80077 + C80078) * C115175 + C88067 * C152236 +
                      C76812 * C152254) *
                         C152054 * C4107) *
                        C3585) *
                       C151834)) /
                 (p * q * std::sqrt(p + q));
    d2ee[281] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
             C76462 + C76462 + C151796 * C159) *
                C152254 +
            (C85731 + C85732) * C152236 + C115615 * C115175) *
               C152054 * C151952 -
           (C118114 * C115175 + (C85733 + C85734) * C152236 +
            (C85732 + C85731) * C152254) *
               C152054 * C151959 +
           (C115615 * C152254 + (C89097 + C89098) * C152236 +
            C118115 * C115175) *
               C152054 * C4779) *
              C151910 +
          ((C86671 * C152254 + C87420 * C152236 + C90031 * C115175) * C152054 *
               C151959 -
           (C87419 * C115175 + C86672 * C152236 + (C76794 + C76793) * C152254) *
               C152054 * C151952 -
           ((C89099 + C89100) * C115175 + C90032 * C152236 + C87419 * C152254) *
               C152054 * C4779) *
              C151917 +
          ((C76811 * C152254 + C87421 * C152236 + C78477 * C115175) * C152054 *
               C151952 -
           ((C80493 + C80494) * C115175 + C87422 * C152236 + C78429 * C152254) *
               C152054 * C151959 +
           (C78477 * C152254 + (C80494 + C80493) * C152236 +
            (C76456 * C26361 + C79767 + C79767 + C76451 * C26365 +
             C76458 * C26362 + C79768 + C79768 + C151796 * C26366) *
                C115175) *
               C152054 * C4779) *
              C3585) *
         C151823) /
        (p * q * std::sqrt(p + q));
    d2ee[282] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
             C76462 + C76462 + C151796 * C159) *
                C152254 +
            (C85731 + C85732) * C152236 + C115615 * C115175) *
               C152054 * C4107 -
           (C118114 * C115175 + (C85733 + C85734) * C152236 +
            (C85732 + C85731) * C152254) *
               C152054 * C151956) *
              C152265 +
          ((C86671 * C152254 + C87420 * C152236 + C90031 * C115175) * C152054 *
               C151956 -
           (C87419 * C115175 + C86672 * C152236 + (C76794 + C76793) * C152254) *
               C152054 * C4107) *
              C152261 +
          ((C76811 * C152254 + C87421 * C152236 + C78477 * C115175) * C152054 *
               C4107 -
           ((C80493 + C80494) * C115175 + C87422 * C152236 + C78429 * C152254) *
               C152054 * C151956) *
              C152249 +
          ((C79185 * C152254 + (C78476 + C78475) * C152236 +
            (C76456 * C27085 + C80483 + C80483 + C76451 * C27089 +
             C76458 * C27086 + C80484 + C80484 + C151796 * C27090) *
                C115175) *
               C152054 * C151956 -
           ((C78475 + C78476) * C115175 + C88326 * C152236 + C78183 * C152254) *
               C152054 * C4107) *
              C152224) *
         C151823) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
              C76462 + C76462 + C151796 * C159) *
                 C152254 +
             (C85731 + C85732) * C152236 + C115615 * C115175) *
                C152054 * C4107 -
            (C118114 * C115175 + (C85733 + C85734) * C152236 +
             (C85732 + C85731) * C152254) *
                C152054 * C151956) *
               C3101 +
           ((C86671 * C152254 + C87420 * C152236 + C90031 * C115175) * C152054 *
                C151956 -
            (C87419 * C115175 + C86672 * C152236 +
             (C76794 + C76793) * C152254) *
                C152054 * C4107) *
               C151914) *
              C152255 +
          ((((C85735 + C85736) * C152254 + (C85737 + C85738) * C152236 +
             C118612 * C115175) *
                C152054 * C151956 -
            (C115616 * C115175 + (C85736 + C85735) * C152236 +
             (C76458 * C144 + C76471 + C76471 + C151796 * C160 + C76456 * C143 +
              C76472 + C76472 + C76451 * C159) *
                 C152254) *
                C152054 * C4107) *
               C3101 +
           (((C76799 + C76800) * C152254 + C86673 * C152236 +
             C89489 * C115175) *
                C152054 * C4107 -
            ((C89499 + C89500) * C115175 + C89494 * C152236 +
             C86674 * C152254) *
                C152054 * C151956) *
               C151914) *
              C152240 +
          ((((C76456 * C144 + C76473 + C76473 + C76451 * C160 + C76458 * C145 +
              C76474 + C76474 + C151796 * C161) *
                 C152254 +
             (C85739 + C85740) * C152236 + C115617 * C115175) *
                C152054 * C4107 -
            ((C115628 + C115629) * C115175 + (C85743 + C85744) * C152236 +
             (C85740 + C85739) * C152254) *
                C152054 * C151956) *
               C3101 +
           ((C86675 * C152254 + (C85742 + C85741) * C152236 +
             (C76456 * C2957 + C85701 + C85701 + C76451 * C2965 +
              C76458 * C2958 + C85702 + C85702 + C151796 * C2966) *
                 C115175) *
                C152054 * C151956 -
            ((C85741 + C85742) * C115175 + C86676 * C152236 +
             (C76806 + C76805) * C152254) *
                C152054 * C4107) *
               C151914) *
              C152208)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
             C76462 + C76462 + C151796 * C159) *
                C152254 +
            (C85731 + C85732) * C152236 + C115615 * C115175) *
               C152054 * C152266 -
           (C118114 * C115175 + (C85733 + C85734) * C152236 +
            (C85732 + C85731) * C152254) *
               C152054 * C152263 +
           (C115615 * C152254 + (C89097 + C89098) * C152236 +
            C118115 * C115175) *
               C152054 * C152252 -
           ((C118126 + C118127) * C115175 + (C89101 + C89102) * C152236 +
            C118114 * C152254) *
               C152054 * C152230) *
              C3101 +
          ((C86671 * C152254 + C87420 * C152236 + C90031 * C115175) * C152054 *
               C152263 -
           (C87419 * C115175 + C86672 * C152236 + (C76794 + C76793) * C152254) *
               C152054 * C152266 -
           ((C89099 + C89100) * C115175 + C90032 * C152236 + C87419 * C152254) *
               C152054 * C152252 +
           (C90031 * C152254 + (C89100 + C89099) * C152236 +
            (C76456 * C40487 + C89083 + C89083 + C76451 * C40491 +
             C76458 * C49559 + C89084 + C89084 + C151796 * C49561) *
                C115175) *
               C152054 * C152230) *
              C151914) *
         C151823) /
            (p * q * std::sqrt(p + q));
    d2ee[283] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  (((((C76456 * C142 + C76461 + C76461 + C76451 * C158 +
                       C76458 * C143 + C76462 + C76462 + C151796 * C159) *
                          C152254 +
                      (C85731 + C85732) * C152236 + C115615 * C115175) *
                         C152054 * C151952 -
                     (C118114 * C115175 + (C85733 + C85734) * C152236 +
                      (C85732 + C85731) * C152254) *
                         C152054 * C151959 +
                     (C115615 * C152254 + (C89097 + C89098) * C152236 +
                      C118115 * C115175) *
                         C152054 * C4779) *
                        C3101 +
                    ((C86671 * C152254 + C87420 * C152236 + C90031 * C115175) *
                         C152054 * C151959 -
                     (C87419 * C115175 + C86672 * C152236 +
                      (C76794 + C76793) * C152254) *
                         C152054 * C151952 -
                     ((C89099 + C89100) * C115175 + C90032 * C152236 +
                      C87419 * C152254) *
                         C152054 * C4779) *
                        C151914) *
                       C152158 +
                   ((((C85735 + C85736) * C152254 +
                      (C85737 + C85738) * C152236 + C118612 * C115175) *
                         C152054 * C151959 -
                     (C115616 * C115175 + (C85736 + C85735) * C152236 +
                      (C76458 * C144 + C76471 + C76471 + C151796 * C160 +
                       C76456 * C143 + C76472 + C76472 + C76451 * C159) *
                          C152254) *
                         C152054 * C151952 -
                     ((C118623 + C118624) * C115175 +
                      (C89771 + C89772) * C152236 + C115616 * C152254) *
                         C152054 * C4779) *
                        C3101 +
                    (((C76799 + C76800) * C152254 + C86673 * C152236 +
                      C89489 * C115175) *
                         C152054 * C151952 -
                     ((C89499 + C89500) * C115175 + C89494 * C152236 +
                      C86674 * C152254) *
                         C152054 * C151959 +
                     (C89489 * C152254 + (C89500 + C89499) * C152236 +
                      (C76456 * C9427 + C89765 + C89765 + C76451 * C9433 +
                       C76458 * C9428 + C89766 + C89766 + C151796 * C9434) *
                          C115175) *
                         C152054 * C4779) *
                        C151914) *
                       C151834)) /
                 (p * q * std::sqrt(p + q));
    d2ee[284] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
              C76462 + C76462 + C151796 * C159) *
                 C152254 +
             (C85731 + C85732) * C152236 + C115615 * C115175) *
                C152054 * C4107 -
            (C118114 * C115175 + (C85733 + C85734) * C152236 +
             (C85732 + C85731) * C152254) *
                C152054 * C151956) *
               C3101 +
           ((C86671 * C152254 + C87420 * C152236 + C90031 * C115175) * C152054 *
                C151956 -
            (C87419 * C115175 + C86672 * C152236 +
             (C76794 + C76793) * C152254) *
                C152054 * C4107) *
               C151914) *
              C152255 +
          ((((C85735 + C85736) * C152254 + (C85737 + C85738) * C152236 +
             C118612 * C115175) *
                C152054 * C151956 -
            (C115616 * C115175 + (C85736 + C85735) * C152236 +
             (C76458 * C144 + C76471 + C76471 + C151796 * C160 + C76456 * C143 +
              C76472 + C76472 + C76451 * C159) *
                 C152254) *
                C152054 * C4107) *
               C3101 +
           (((C76799 + C76800) * C152254 + C86673 * C152236 +
             C89489 * C115175) *
                C152054 * C4107 -
            ((C89499 + C89500) * C115175 + C89494 * C152236 +
             C86674 * C152254) *
                C152054 * C151956) *
               C151914) *
              C152240 +
          ((((C76456 * C144 + C76473 + C76473 + C76451 * C160 + C76458 * C145 +
              C76474 + C76474 + C151796 * C161) *
                 C152254 +
             (C85739 + C85740) * C152236 + C115617 * C115175) *
                C152054 * C4107 -
            ((C115628 + C115629) * C115175 + (C85743 + C85744) * C152236 +
             (C85740 + C85739) * C152254) *
                C152054 * C151956) *
               C3101 +
           ((C86675 * C152254 + (C85742 + C85741) * C152236 +
             (C76456 * C2957 + C85701 + C85701 + C76451 * C2965 +
              C76458 * C2958 + C85702 + C85702 + C151796 * C2966) *
                 C115175) *
                C152054 * C151956 -
            ((C85741 + C85742) * C115175 + C86676 * C152236 +
             (C76806 + C76805) * C152254) *
                C152054 * C4107) *
               C151914) *
              C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
             C76462 + C76462 + C151796 * C159) *
                C152254 +
            (C85731 + C85732) * C152236 + C115615 * C115175) *
               C152054 * C4107 -
           (C118114 * C115175 + (C85733 + C85734) * C152236 +
            (C85732 + C85731) * C152254) *
               C152054 * C151956) *
              C152265 +
          ((C86671 * C152254 + C87420 * C152236 + C90031 * C115175) * C152054 *
               C151956 -
           (C87419 * C115175 + C86672 * C152236 + (C76794 + C76793) * C152254) *
               C152054 * C4107) *
              C152261 +
          ((C76811 * C152254 + C87421 * C152236 + C78477 * C115175) * C152054 *
               C4107 -
           ((C80493 + C80494) * C115175 + C87422 * C152236 + C78429 * C152254) *
               C152054 * C151956) *
              C152249 +
          ((C79185 * C152254 + (C78476 + C78475) * C152236 +
            (C76456 * C27085 + C80483 + C80483 + C76451 * C27089 +
             C76458 * C27086 + C80484 + C80484 + C151796 * C27090) *
                C115175) *
               C152054 * C151956 -
           ((C78475 + C78476) * C115175 + C88326 * C152236 + C78183 * C152254) *
               C152054 * C4107) *
              C152224) *
         C151823) /
            (p * q * std::sqrt(p + q));
    d2ee[285] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
             C76462 + C76462 + C151796 * C159) *
                C152254 +
            (C85731 + C85732) * C152236 + C115615 * C115175) *
               C152054 * C151869 * C1709 -
           (C87419 * C115175 + C86672 * C152236 + (C76794 + C76793) * C152254) *
               C152054 * C151869 * C1710 +
           (C76811 * C152254 + C87421 * C152236 + C78477 * C115175) * C152054 *
               C151869 * C1711 -
           ((C78475 + C78476) * C115175 + C88326 * C152236 + C78183 * C152254) *
               C152054 * C151869 * C152224) *
              C152158 +
          (((C76799 + C76800) * C152254 + C86673 * C152236 + C89489 * C115175) *
               C152054 * C151869 * C1710 -
           (C115616 * C115175 + (C85736 + C85735) * C152236 +
            (C76458 * C144 + C76471 + C76471 + C151796 * C160 + C76456 * C143 +
             C76472 + C76472 + C76451 * C159) *
                C152254) *
               C152054 * C151869 * C1709 -
           ((C80077 + C80078) * C115175 + C88067 * C152236 + C76812 * C152254) *
               C152054 * C151869 * C1711 +
           (C78673 * C152254 + (C78990 + C78989) * C152236 +
            (C76456 * C8065 + C80067 + C80067 + C76451 * C8071 +
             C76458 * C8066 + C80068 + C80068 + C151796 * C8072) *
                C115175) *
               C152054 * C151869 * C152224) *
              C151834)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
             C76462 + C76462 + C151796 * C159) *
                C152254 +
            (C85731 + C85732) * C152236 + C115615 * C115175) *
               C152054 * C151869 * C152172 -
           (C87419 * C115175 + C86672 * C152236 + (C76794 + C76793) * C152254) *
               C152054 * C151869 * C151914) *
              C739 +
          (((C76799 + C76800) * C152254 + C86673 * C152236 + C89489 * C115175) *
               C152054 * C151869 * C151914 -
           (C115616 * C115175 + (C85736 + C85735) * C152236 +
            (C76458 * C144 + C76471 + C76471 + C151796 * C160 + C76456 * C143 +
             C76472 + C76472 + C76451 * C159) *
                C152254) *
               C152054 * C151869 * C152172) *
              C740 +
          (((C76456 * C144 + C76473 + C76473 + C76451 * C160 + C76458 * C145 +
             C76474 + C76474 + C151796 * C161) *
                C152254 +
            (C85739 + C85740) * C152236 + C115617 * C115175) *
               C152054 * C151869 * C152172 -
           ((C85741 + C85742) * C115175 + C86676 * C152236 +
            (C76806 + C76805) * C152254) *
               C152054 * C151869 * C151914) *
              C741 +
          (((C77283 + C77284) * C152254 + (C86011 + C86012) * C152236 +
            (C76456 * C1531 + C86277 + C86277 + C76451 * C1555 +
             C76458 * C2677 + C86278 + C86278 + C151796 * C2679) *
                C115175) *
               C152054 * C151869 * C151914 -
           ((C76458 * C556 + C86276 + C86276 + C151796 * C580 + C76456 * C554 +
             C86275 + C86275 + C76451 * C578) *
                C115175 +
            (C86284 + C86283) * C152236 +
            (C76458 * C146 + C76483 + C76483 + C151796 * C162 + C76456 * C145 +
             C76484 + C76484 + C76451 * C161) *
                C152254) *
               C152054 * C151869 * C152172) *
              C152218)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         (((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
              C76462 + C76462 + C151796 * C159) *
                 C152254 +
             (C85731 + C85732) * C152236 + C115615 * C115175) *
                C152054 * C2215 -
            (C118114 * C115175 + (C85733 + C85734) * C152236 +
             (C85732 + C85731) * C152254) *
                C152054 * C2216 +
            (C115615 * C152254 + (C89097 + C89098) * C152236 +
             C118115 * C115175) *
                C152054 * C152217) *
               C152172 +
           ((C86671 * C152254 + C87420 * C152236 + C90031 * C115175) * C152054 *
                C2216 -
            (C87419 * C115175 + C86672 * C152236 +
             (C76794 + C76793) * C152254) *
                C152054 * C2215 -
            ((C89099 + C89100) * C115175 + C90032 * C152236 +
             C87419 * C152254) *
                C152054 * C152217) *
               C151914) *
              C152158 +
          ((((C85735 + C85736) * C152254 + (C85737 + C85738) * C152236 +
             (C89772 + C89771) * C115175) *
                C152054 * C2216 -
            (C115616 * C115175 + (C85736 + C85735) * C152236 +
             (C76458 * C144 + C76471 + C76471 + C151796 * C160 + C76456 * C143 +
              C76472 + C76472 + C76451 * C159) *
                 C152254) *
                C152054 * C2215 -
            ((C76458 * C2457 + C89764 + C89764 + C151796 * C2473 +
              C76456 * C2456 + C89763 + C89763 + C76451 * C2472) *
                 C115175 +
             (C89771 + C89772) * C152236 + C115616 * C152254) *
                C152054 * C152217) *
               C152172 +
           (((C76799 + C76800) * C152254 + C86673 * C152236 +
             C89489 * C115175) *
                C152054 * C2215 -
            ((C89499 + C89500) * C115175 + C89494 * C152236 +
             C86674 * C152254) *
                C152054 * C2216 +
            (C89489 * C152254 + (C89500 + C89499) * C152236 +
             (C76456 * C9427 + C89765 + C89765 + C76451 * C9433 +
              C76458 * C9428 + C89766 + C89766 + C151796 * C9434) *
                 C115175) *
                C152054 * C152217) *
               C151914) *
              C151834)) /
            (p * q * std::sqrt(p + q));
    d2ee[286] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
             C76462 + C76462 + C151796 * C159) *
                C152254 +
            (C85731 + C85732) * C152236 + C115615 * C115175) *
               C152054 * C152173 -
           ((C89098 + C89097) * C115175 + (C85733 + C85734) * C152236 +
            (C85732 + C85731) * C152254) *
               C152054 * C151956) *
              C1709 +
          ((C86671 * C152254 + C87420 * C152236 + C90031 * C115175) * C152054 *
               C151956 -
           (C87419 * C115175 + C86672 * C152236 + (C76794 + C76793) * C152254) *
               C152054 * C152173) *
              C1710 +
          ((C76811 * C152254 + C87421 * C152236 + C78477 * C115175) * C152054 *
               C152173 -
           ((C80493 + C80494) * C115175 + C87422 * C152236 + C78429 * C152254) *
               C152054 * C151956) *
              C1711 +
          ((C79185 * C152254 + (C78476 + C78475) * C152236 +
            (C76456 * C27085 + C80483 + C80483 + C76451 * C27089 +
             C76458 * C27086 + C80484 + C80484 + C151796 * C27090) *
                C115175) *
               C152054 * C151956 -
           ((C78475 + C78476) * C115175 + C88326 * C152236 + C78183 * C152254) *
               C152054 * C152173) *
              C152224) *
         C151823) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
              C76462 + C76462 + C151796 * C159) *
                 C152254 +
             (C85731 + C85732) * C152236 + C115615 * C115175) *
                C152054 * C152173 -
            ((C89098 + C89097) * C115175 + (C85733 + C85734) * C152236 +
             (C85732 + C85731) * C152254) *
                C152054 * C151956) *
               C152172 +
           ((C86671 * C152254 + C87420 * C152236 + C90031 * C115175) * C152054 *
                C151956 -
            (C87419 * C115175 + C86672 * C152236 +
             (C76794 + C76793) * C152254) *
                C152054 * C152173) *
               C151914) *
              C335 +
          ((((C85735 + C85736) * C152254 + (C85737 + C85738) * C152236 +
             (C89772 + C89771) * C115175) *
                C152054 * C151956 -
            (C115616 * C115175 + (C85736 + C85735) * C152236 +
             (C76458 * C144 + C76471 + C76471 + C151796 * C160 + C76456 * C143 +
              C76472 + C76472 + C76451 * C159) *
                 C152254) *
                C152054 * C152173) *
               C152172 +
           (((C76799 + C76800) * C152254 + C86673 * C152236 +
             C89489 * C115175) *
                C152054 * C152173 -
            ((C89499 + C89500) * C115175 + C89494 * C152236 +
             C86674 * C152254) *
                C152054 * C151956) *
               C151914) *
              C336 +
          ((((C76456 * C144 + C76473 + C76473 + C76451 * C160 + C76458 * C145 +
              C76474 + C76474 + C151796 * C161) *
                 C152254 +
             (C85739 + C85740) * C152236 + C115617 * C115175) *
                C152054 * C152173 -
            ((C115628 + C115629) * C115175 + (C85743 + C85744) * C152236 +
             (C85740 + C85739) * C152254) *
                C152054 * C151956) *
               C152172 +
           ((C86675 * C152254 + (C85742 + C85741) * C152236 +
             (C76456 * C2957 + C85701 + C85701 + C76451 * C2965 +
              C76458 * C2958 + C85702 + C85702 + C151796 * C2966) *
                 C115175) *
                C152054 * C151956 -
            ((C85741 + C85742) * C115175 + C86676 * C152236 +
             (C76806 + C76805) * C152254) *
                C152054 * C152173) *
               C151914) *
              C152208)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
             C76462 + C76462 + C151796 * C159) *
                C152254 +
            (C85731 + C85732) * C152236 + C115615 * C115175) *
               C152054 * C2814 -
           (C118114 * C115175 + (C85733 + C85734) * C152236 +
            (C85732 + C85731) * C152254) *
               C152054 * C2815 +
           (C115615 * C152254 + (C89097 + C89098) * C152236 +
            C118115 * C115175) *
               C152054 * C2816 -
           ((C118126 + C118127) * C115175 + (C89101 + C89102) * C152236 +
            C118114 * C152254) *
               C152054 * C152230) *
              C152172 +
          ((C86671 * C152254 + C87420 * C152236 + C90031 * C115175) * C152054 *
               C2815 -
           (C87419 * C115175 + C86672 * C152236 + (C76794 + C76793) * C152254) *
               C152054 * C2814 -
           ((C89099 + C89100) * C115175 + C90032 * C152236 + C87419 * C152254) *
               C152054 * C2816 +
           (C90031 * C152254 + (C89100 + C89099) * C152236 +
            (C76456 * C40487 + C89083 + C89083 + C76451 * C40491 +
             C76458 * C49559 + C89084 + C89084 + C151796 * C49561) *
                C115175) *
               C152054 * C152230) *
              C151914) *
         C151823) /
            (p * q * std::sqrt(p + q));
    d2ee[287] +=
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             (((C76456 * C142 + C76461 + C76461 + C76451 * C158 +
                C76458 * C143 + C76462 + C76462 + C151796 * C159) *
                   C152254 +
               (C85731 + C85732) * C152236 + (C85734 + C85733) * C115175) *
                  C152054 * C151869 * C151851 * C129 -
              ((C85738 + C85737) * C115175 + (C85736 + C85735) * C152236 +
               (C76458 * C144 + C76471 + C76471 + C151796 * C160 +
                C76456 * C143 + C76472 + C76472 + C76451 * C159) *
                   C152254) *
                  C152054 * C151869 * C151851 * C130 +
              ((C76456 * C144 + C76473 + C76473 + C76451 * C160 +
                C76458 * C145 + C76474 + C76474 + C151796 * C161) *
                   C152254 +
               (C85739 + C85740) * C152236 + (C85744 + C85743) * C115175) *
                  C152054 * C151869 * C151851 * C131 -
              ((C76458 * C556 + C86276 + C86276 + C151796 * C580 +
                C76456 * C554 + C86275 + C86275 + C76451 * C578) *
                   C115175 +
               (C86284 + C86283) * C152236 +
               (C76458 * C146 + C76483 + C76483 + C151796 * C162 +
                C76456 * C145 + C76484 + C76484 + C76451 * C161) *
                   C152254) *
                  C152054 * C151869 * C151851 * C132 +
              ((C76456 * C146 + C76485 + C76485 + C76451 * C162 +
                C76458 * C147 + C76486 + C76486 + C151796 * C163) *
                   C152254 +
               (C76456 * C555 + C85087 + C85087 + C76451 * C579 +
                C76458 * C557 + C85088 + C85088 + C151796 * C581) *
                   C152236 +
               (C76456 * C556 + C115177 + C115177 + C76451 * C580 +
                C76458 * C558 + C115178 + C115178 + C151796 * C582) *
                   C115175) *
                  C152054 * C151869 * C151851 * C133) +
         std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
             ((((C76456 * C142 + C76461 + C76461 + C76451 * C158 +
                 C76458 * C143 + C76462 + C76462 + C151796 * C159) *
                    C152254 +
                (C85731 + C85732) * C152236 + (C85734 + C85733) * C115175) *
                   C152054 * C151869 * C152258 -
               (C87419 * C115175 + C86672 * C152236 +
                (C76794 + C76793) * C152254) *
                   C152054 * C151869 * C152244 +
               (C76811 * C152254 + C87421 * C152236 + C78477 * C115175) *
                   C152054 * C151869 * C152214) *
                  C335 +
              (((C76799 + C76800) * C152254 + C86673 * C152236 +
                C89489 * C115175) *
                   C152054 * C151869 * C152244 -
               ((C85738 + C85737) * C115175 + (C85736 + C85735) * C152236 +
                (C76458 * C144 + C76471 + C76471 + C151796 * C160 +
                 C76456 * C143 + C76472 + C76472 + C76451 * C159) *
                    C152254) *
                   C152054 * C151869 * C152258 -
               ((C80077 + C80078) * C115175 + C88067 * C152236 +
                C76812 * C152254) *
                   C152054 * C151869 * C152214) *
                  C336 +
              (((C76456 * C144 + C76473 + C76473 + C76451 * C160 +
                 C76458 * C145 + C76474 + C76474 + C151796 * C161) *
                    C152254 +
                (C85739 + C85740) * C152236 + (C85744 + C85743) * C115175) *
                   C152054 * C151869 * C152258 -
               ((C85741 + C85742) * C115175 + C86676 * C152236 +
                (C76806 + C76805) * C152254) *
                   C152054 * C151869 * C152244 +
               (C76813 * C152254 + (C77840 + C77839) * C152236 +
                (C76456 * C1541 + C77069 + C77069 + C76451 * C1565 +
                 C76458 * C1542 + C77070 + C77070 + C151796 * C1566) *
                    C115175) *
                   C152054 * C151869 * C152214) *
                  C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
             C76462 + C76462 + C151796 * C159) *
                C152254 +
            (C85731 + C85732) * C152236 + C115615 * C115175) *
               C152054 * C152259 -
           ((C89098 + C89097) * C115175 + (C85733 + C85734) * C152236 +
            (C85732 + C85731) * C152254) *
               C152054 * C152246 +
           (C115615 * C152254 + (C89097 + C89098) * C152236 +
            (C89102 + C89101) * C115175) *
               C152054 * C152217) *
              C151851 * C335 +
          (((C85735 + C85736) * C152254 + (C85737 + C85738) * C152236 +
            (C89772 + C89771) * C115175) *
               C152054 * C152246 -
           (C115616 * C115175 + (C85736 + C85735) * C152236 +
            (C76458 * C144 + C76471 + C76471 + C151796 * C160 + C76456 * C143 +
             C76472 + C76472 + C76451 * C159) *
                C152254) *
               C152054 * C152259 -
           ((C76458 * C2457 + C89764 + C89764 + C151796 * C2473 +
             C76456 * C2456 + C89763 + C89763 + C76451 * C2472) *
                C115175 +
            (C89771 + C89772) * C152236 + C115616 * C152254) *
               C152054 * C152217) *
              C151851 * C336 +
          (((C76456 * C144 + C76473 + C76473 + C76451 * C160 + C76458 * C145 +
             C76474 + C76474 + C151796 * C161) *
                C152254 +
            (C85739 + C85740) * C152236 + C115617 * C115175) *
               C152054 * C152259 -
           ((C115628 + C115629) * C115175 + (C85743 + C85744) * C152236 +
            (C85740 + C85739) * C152254) *
               C152054 * C152246 +
           (C115617 * C152254 + (C115629 + C115628) * C152236 +
            (C76456 * C2457 + C115622 + C115622 + C76451 * C2473 +
             C76458 * C2458 + C115623 + C115623 + C151796 * C2474) *
                C115175) *
               C152054 * C152217) *
              C151851 * C152208)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
             C76462 + C76462 + C151796 * C159) *
                C152254 +
            (C85731 + C85732) * C152236 + C115615 * C115175) *
               C152054 * C151869 * C1259 -
           (C87419 * C115175 + C86672 * C152236 + (C76794 + C76793) * C152254) *
               C152054 * C151869 * C1260 +
           (C76811 * C152254 + C87421 * C152236 + C78477 * C115175) * C152054 *
               C151869 * C152214) *
              C152255 +
          (((C76799 + C76800) * C152254 + C86673 * C152236 + C89489 * C115175) *
               C152054 * C151869 * C1260 -
           (C115616 * C115175 + (C85736 + C85735) * C152236 +
            (C76458 * C144 + C76471 + C76471 + C151796 * C160 + C76456 * C143 +
             C76472 + C76472 + C76451 * C159) *
                C152254) *
               C152054 * C151869 * C1259 -
           ((C80077 + C80078) * C115175 + C88067 * C152236 + C76812 * C152254) *
               C152054 * C151869 * C152214) *
              C152240 +
          (((C76456 * C144 + C76473 + C76473 + C76451 * C160 + C76458 * C145 +
             C76474 + C76474 + C151796 * C161) *
                C152254 +
            (C85739 + C85740) * C152236 + C115617 * C115175) *
               C152054 * C151869 * C1259 -
           ((C85741 + C85742) * C115175 + C86676 * C152236 +
            (C76806 + C76805) * C152254) *
               C152054 * C151869 * C1260 +
           (C76813 * C152254 + (C77840 + C77839) * C152236 +
            (C76456 * C1541 + C77069 + C77069 + C76451 * C1565 +
             C76458 * C1542 + C77070 + C77070 + C151796 * C1566) *
                C115175) *
               C152054 * C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
            C76462 + C76462 + C151796 * C159) *
               C152254 +
           (C85731 + C85732) * C152236 + C115615 * C115175) *
              C152054 * C151869 * C1347 -
          (C87419 * C115175 + C86672 * C152236 + (C76794 + C76793) * C152254) *
              C152054 * C151869 * C1348 +
          (C76811 * C152254 + C87421 * C152236 + C78477 * C115175) * C152054 *
              C151869 * C1349 -
          ((C78475 + C78476) * C115175 + C88326 * C152236 + C78183 * C152254) *
              C152054 * C151869 * C1350 +
          (C78209 * C152254 + (C79198 + C79197) * C152236 +
           (C76456 * C25021 + C78450 + C78450 + C76451 * C25025 +
            C76458 * C25022 + C78451 + C78451 + C151796 * C25026) *
               C115175) *
              C152054 * C151869 * C1351) *
         C151823) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
             C76462 + C76462 + C151796 * C159) *
                C152254 +
            (C85731 + C85732) * C152236 + C115615 * C115175) *
               C152054 * C152259 -
           ((C89098 + C89097) * C115175 + (C85733 + C85734) * C152236 +
            (C85732 + C85731) * C152254) *
               C152054 * C152246 +
           (C115615 * C152254 + (C89097 + C89098) * C152236 +
            (C89102 + C89101) * C115175) *
               C152054 * C152217) *
              C1259 +
          ((C86671 * C152254 + C87420 * C152236 + C90031 * C115175) * C152054 *
               C152246 -
           (C87419 * C115175 + C86672 * C152236 + (C76794 + C76793) * C152254) *
               C152054 * C152259 -
           ((C89099 + C89100) * C115175 + C90032 * C152236 + C87419 * C152254) *
               C152054 * C152217) *
              C1260 +
          ((C76811 * C152254 + C87421 * C152236 + C78477 * C115175) * C152054 *
               C152259 -
           ((C80493 + C80494) * C115175 + C87422 * C152236 + C78429 * C152254) *
               C152054 * C152246 +
           (C78477 * C152254 + (C80494 + C80493) * C152236 +
            (C76456 * C26361 + C79767 + C79767 + C76451 * C26365 +
             C76458 * C26362 + C79768 + C79768 + C151796 * C26366) *
                C115175) *
               C152054 * C152217) *
              C152214) *
         C151823) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
             C76462 + C76462 + C151796 * C159) *
                C152254 +
            (C85731 + C85732) * C152236 + C115615 * C115175) *
               C152054 * C2215 -
           ((C89098 + C89097) * C115175 + (C85733 + C85734) * C152236 +
            (C85732 + C85731) * C152254) *
               C152054 * C2216 +
           (C115615 * C152254 + (C89097 + C89098) * C152236 +
            (C89102 + C89101) * C115175) *
               C152054 * C152217) *
              C151851 * C152255 +
          (((C85735 + C85736) * C152254 + (C85737 + C85738) * C152236 +
            (C89772 + C89771) * C115175) *
               C152054 * C2216 -
           (C115616 * C115175 + (C85736 + C85735) * C152236 +
            (C76458 * C144 + C76471 + C76471 + C151796 * C160 + C76456 * C143 +
             C76472 + C76472 + C76451 * C159) *
                C152254) *
               C152054 * C2215 -
           ((C76458 * C2457 + C89764 + C89764 + C151796 * C2473 +
             C76456 * C2456 + C89763 + C89763 + C76451 * C2472) *
                C115175 +
            (C89771 + C89772) * C152236 + C115616 * C152254) *
               C152054 * C152217) *
              C151851 * C152240 +
          (((C76456 * C144 + C76473 + C76473 + C76451 * C160 + C76458 * C145 +
             C76474 + C76474 + C151796 * C161) *
                C152254 +
            (C85739 + C85740) * C152236 + C115617 * C115175) *
               C152054 * C2215 -
           ((C115628 + C115629) * C115175 + (C85743 + C85744) * C152236 +
            (C85740 + C85739) * C152254) *
               C152054 * C2216 +
           (C115617 * C152254 + (C115629 + C115628) * C152236 +
            (C76456 * C2457 + C115622 + C115622 + C76451 * C2473 +
             C76458 * C2458 + C115623 + C115623 + C151796 * C2474) *
                C115175) *
               C152054 * C152217) *
              C151851 * C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
             C76462 + C76462 + C151796 * C159) *
                C152254 +
            (C85731 + C85732) * C152236 + C115615 * C115175) *
               C152054 * C2215 -
           ((C89098 + C89097) * C115175 + (C85733 + C85734) * C152236 +
            (C85732 + C85731) * C152254) *
               C152054 * C2216 +
           (C115615 * C152254 + (C89097 + C89098) * C152236 +
            (C89102 + C89101) * C115175) *
               C152054 * C152217) *
              C152258 +
          ((C86671 * C152254 + C87420 * C152236 + C90031 * C115175) * C152054 *
               C2216 -
           (C87419 * C115175 + C86672 * C152236 + (C76794 + C76793) * C152254) *
               C152054 * C2215 -
           ((C89099 + C89100) * C115175 + C90032 * C152236 + C87419 * C152254) *
               C152054 * C152217) *
              C152244 +
          ((C76811 * C152254 + C87421 * C152236 + C78477 * C115175) * C152054 *
               C2215 -
           ((C80493 + C80494) * C115175 + C87422 * C152236 + C78429 * C152254) *
               C152054 * C2216 +
           (C78477 * C152254 + (C80494 + C80493) * C152236 +
            (C76456 * C26361 + C79767 + C79767 + C76451 * C26365 +
             C76458 * C26362 + C79768 + C79768 + C151796 * C26366) *
                C115175) *
               C152054 * C152217) *
              C152214) *
         C151823) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(3.0) * 2 * std::pow(Pi, 2.5) *
         (((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
            C76462 + C76462 + C151796 * C159) *
               C152254 +
           (C85731 + C85732) * C152236 + C115615 * C115175) *
              C152054 * C2446 -
          (C118114 * C115175 + (C85733 + C85734) * C152236 +
           (C85732 + C85731) * C152254) *
              C152054 * C2447 +
          (C115615 * C152254 + (C89097 + C89098) * C152236 +
           C118115 * C115175) *
              C152054 * C2448 -
          ((C118126 + C118127) * C115175 + (C89101 + C89102) * C152236 +
           C118114 * C152254) *
              C152054 * C2449 +
          (C118115 * C152254 + (C118127 + C118126) * C152236 +
           (C76456 * C48823 + C118120 + C118120 + C76451 * C48827 +
            C76458 * C48824 + C118121 + C118121 + C151796 * C48828) *
               C115175) *
              C152054 * C2450) *
         C151851 * C151823) /
            (p * q * std::sqrt(p + q));
    d2ee[288] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
              C76462 + C76462 + C151796 * C159) *
                 C152254 +
             (C85731 + C85732) * C152236 + C115615 * C115175) *
                C152054 * C152173 -
            ((C89098 + C89097) * C115175 + (C85733 + C85734) * C152236 +
             (C85732 + C85731) * C152254) *
                C152054 * C151956) *
               C1259 +
           ((C86671 * C152254 + C87420 * C152236 + C90031 * C115175) * C152054 *
                C151956 -
            (C87419 * C115175 + C86672 * C152236 +
             (C76794 + C76793) * C152254) *
                C152054 * C152173) *
               C1260 +
           ((C76811 * C152254 + C87421 * C152236 + C78477 * C115175) * C152054 *
                C152173 -
            ((C80493 + C80494) * C115175 + C87422 * C152236 +
             C78429 * C152254) *
                C152054 * C151956) *
               C152214) *
              C152158 +
          ((((C85735 + C85736) * C152254 + (C85737 + C85738) * C152236 +
             (C89772 + C89771) * C115175) *
                C152054 * C151956 -
            (C115616 * C115175 + (C85736 + C85735) * C152236 +
             (C76458 * C144 + C76471 + C76471 + C151796 * C160 + C76456 * C143 +
              C76472 + C76472 + C76451 * C159) *
                 C152254) *
                C152054 * C152173) *
               C1259 +
           (((C76799 + C76800) * C152254 + C86673 * C152236 +
             C89489 * C115175) *
                C152054 * C152173 -
            ((C89499 + C89500) * C115175 + C89494 * C152236 +
             C86674 * C152254) *
                C152054 * C151956) *
               C1260 +
           ((C78977 * C152254 + (C80078 + C80077) * C152236 +
             (C76456 * C10150 + C80279 + C80279 + C76451 * C10156 +
              C76458 * C10151 + C80280 + C80280 + C151796 * C10157) *
                 C115175) *
                C152054 * C151956 -
            ((C80077 + C80078) * C115175 + C88067 * C152236 +
             C76812 * C152254) *
                C152054 * C152173) *
               C152214) *
              C151834)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
             C76462 + C76462 + C151796 * C159) *
                C152254 +
            (C85731 + C85732) * C152236 + C115615 * C115175) *
               C152054 * C152173 -
           ((C89098 + C89097) * C115175 + (C85733 + C85734) * C152236 +
            (C85732 + C85731) * C152254) *
               C152054 * C151956) *
              C151851 * C739 +
          (((C85735 + C85736) * C152254 + (C85737 + C85738) * C152236 +
            (C89772 + C89771) * C115175) *
               C152054 * C151956 -
           (C115616 * C115175 + (C85736 + C85735) * C152236 +
            (C76458 * C144 + C76471 + C76471 + C151796 * C160 + C76456 * C143 +
             C76472 + C76472 + C76451 * C159) *
                C152254) *
               C152054 * C152173) *
              C151851 * C740 +
          (((C76456 * C144 + C76473 + C76473 + C76451 * C160 + C76458 * C145 +
             C76474 + C76474 + C151796 * C161) *
                C152254 +
            (C85739 + C85740) * C152236 + C115617 * C115175) *
               C152054 * C152173 -
           ((C115628 + C115629) * C115175 + (C85743 + C85744) * C152236 +
            (C85740 + C85739) * C152254) *
               C152054 * C151956) *
              C151851 * C741 +
          (((C86283 + C86284) * C152254 + (C116028 + C116029) * C152236 +
            (C76456 * C2451 + C116022 + C116022 + C76451 * C2467 +
             C76458 * C2818 + C116023 + C116023 + C151796 * C2820) *
                C115175) *
               C152054 * C151956 -
           ((C116029 + C116028) * C115175 + (C86284 + C86283) * C152236 +
            (C76458 * C146 + C76483 + C76483 + C151796 * C162 + C76456 * C145 +
             C76484 + C76484 + C76451 * C161) *
                C152254) *
               C152054 * C152173) *
              C151851 * C152218)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
             C76462 + C76462 + C151796 * C159) *
                C152254 +
            (C85731 + C85732) * C152236 + C115615 * C115175) *
               C152054 * C2814 -
           (C118114 * C115175 + (C85733 + C85734) * C152236 +
            (C85732 + C85731) * C152254) *
               C152054 * C2815 +
           (C115615 * C152254 + (C89097 + C89098) * C152236 +
            C118115 * C115175) *
               C152054 * C2816 -
           ((C118126 + C118127) * C115175 + (C89101 + C89102) * C152236 +
            C118114 * C152254) *
               C152054 * C152230) *
              C151851 * C152158 +
          (((C85735 + C85736) * C152254 + (C85737 + C85738) * C152236 +
            C118612 * C115175) *
               C152054 * C2815 -
           (C115616 * C115175 + (C85736 + C85735) * C152236 +
            (C76458 * C144 + C76471 + C76471 + C151796 * C160 + C76456 * C143 +
             C76472 + C76472 + C76451 * C159) *
                C152254) *
               C152054 * C2814 -
           ((C118623 + C118624) * C115175 + (C89771 + C89772) * C152236 +
            C115616 * C152254) *
               C152054 * C2816 +
           (C118612 * C152254 + (C118624 + C118623) * C152236 +
            (C76456 * C17751 + C118617 + C118617 + C76451 * C17757 +
             C76458 * C17752 + C118618 + C118618 + C151796 * C17758) *
                C115175) *
               C152054 * C152230) *
              C151851 * C151834)) /
            (p * q * std::sqrt(p + q));
    d2ee[289] +=
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
             C76462 + C76462 + C151796 * C159) *
                C152254 +
            (C85731 + C85732) * C152236 + (C85734 + C85733) * C115175) *
               C152054 * C151869 * C152258 -
           (C87419 * C115175 + C86672 * C152236 + (C76794 + C76793) * C152254) *
               C152054 * C151869 * C152244 +
           (C76811 * C152254 + C87421 * C152236 + C78477 * C115175) * C152054 *
               C151869 * C152214) *
              C335 +
          (((C76799 + C76800) * C152254 + C86673 * C152236 + C89489 * C115175) *
               C152054 * C151869 * C152244 -
           ((C85738 + C85737) * C115175 + (C85736 + C85735) * C152236 +
            (C76458 * C144 + C76471 + C76471 + C151796 * C160 + C76456 * C143 +
             C76472 + C76472 + C76451 * C159) *
                C152254) *
               C152054 * C151869 * C152258 -
           ((C80077 + C80078) * C115175 + C88067 * C152236 + C76812 * C152254) *
               C152054 * C151869 * C152214) *
              C336 +
          (((C76456 * C144 + C76473 + C76473 + C76451 * C160 + C76458 * C145 +
             C76474 + C76474 + C151796 * C161) *
                C152254 +
            (C85739 + C85740) * C152236 + (C85744 + C85743) * C115175) *
               C152054 * C151869 * C152258 -
           ((C85741 + C85742) * C115175 + C86676 * C152236 +
            (C76806 + C76805) * C152254) *
               C152054 * C151869 * C152244 +
           (C76813 * C152254 + (C77840 + C77839) * C152236 +
            (C76456 * C1541 + C77069 + C77069 + C76451 * C1565 +
             C76458 * C1542 + C77070 + C77070 + C151796 * C1566) *
                C115175) *
               C152054 * C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
            C76462 + C76462 + C151796 * C159) *
               C152254 +
           (C85731 + C85732) * C152236 + (C85734 + C85733) * C115175) *
              C152054 * C151869 * C151851 * C129 -
          ((C85738 + C85737) * C115175 + (C85736 + C85735) * C152236 +
           (C76458 * C144 + C76471 + C76471 + C151796 * C160 + C76456 * C143 +
            C76472 + C76472 + C76451 * C159) *
               C152254) *
              C152054 * C151869 * C151851 * C130 +
          ((C76456 * C144 + C76473 + C76473 + C76451 * C160 + C76458 * C145 +
            C76474 + C76474 + C151796 * C161) *
               C152254 +
           (C85739 + C85740) * C152236 + (C85744 + C85743) * C115175) *
              C152054 * C151869 * C151851 * C131 -
          ((C76458 * C556 + C86276 + C86276 + C151796 * C580 + C76456 * C554 +
            C86275 + C86275 + C76451 * C578) *
               C115175 +
           (C86284 + C86283) * C152236 +
           (C76458 * C146 + C76483 + C76483 + C151796 * C162 + C76456 * C145 +
            C76484 + C76484 + C76451 * C161) *
               C152254) *
              C152054 * C151869 * C151851 * C132 +
          ((C76456 * C146 + C76485 + C76485 + C76451 * C162 + C76458 * C147 +
            C76486 + C76486 + C151796 * C163) *
               C152254 +
           (C76456 * C555 + C85087 + C85087 + C76451 * C579 + C76458 * C557 +
            C85088 + C85088 + C151796 * C581) *
               C152236 +
           (C76456 * C556 + C115177 + C115177 + C76451 * C580 + C76458 * C558 +
            C115178 + C115178 + C151796 * C582) *
               C115175) *
              C152054 * C151869 * C151851 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
             C76462 + C76462 + C151796 * C159) *
                C152254 +
            (C85731 + C85732) * C152236 + C115615 * C115175) *
               C152054 * C151869 * C1259 -
           (C87419 * C115175 + C86672 * C152236 + (C76794 + C76793) * C152254) *
               C152054 * C151869 * C1260 +
           (C76811 * C152254 + C87421 * C152236 + C78477 * C115175) * C152054 *
               C151869 * C152214) *
              C152255 +
          (((C76799 + C76800) * C152254 + C86673 * C152236 + C89489 * C115175) *
               C152054 * C151869 * C1260 -
           (C115616 * C115175 + (C85736 + C85735) * C152236 +
            (C76458 * C144 + C76471 + C76471 + C151796 * C160 + C76456 * C143 +
             C76472 + C76472 + C76451 * C159) *
                C152254) *
               C152054 * C151869 * C1259 -
           ((C80077 + C80078) * C115175 + C88067 * C152236 + C76812 * C152254) *
               C152054 * C151869 * C152214) *
              C152240 +
          (((C76456 * C144 + C76473 + C76473 + C76451 * C160 + C76458 * C145 +
             C76474 + C76474 + C151796 * C161) *
                C152254 +
            (C85739 + C85740) * C152236 + C115617 * C115175) *
               C152054 * C151869 * C1259 -
           ((C85741 + C85742) * C115175 + C86676 * C152236 +
            (C76806 + C76805) * C152254) *
               C152054 * C151869 * C1260 +
           (C76813 * C152254 + (C77840 + C77839) * C152236 +
            (C76456 * C1541 + C77069 + C77069 + C76451 * C1565 +
             C76458 * C1542 + C77070 + C77070 + C151796 * C1566) *
                C115175) *
               C152054 * C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
            C76462 + C76462 + C151796 * C159) *
               C152254 +
           (C85731 + C85732) * C152236 + C115615 * C115175) *
              C152054 * C151869 * C1347 -
          (C87419 * C115175 + C86672 * C152236 + (C76794 + C76793) * C152254) *
              C152054 * C151869 * C1348 +
          (C76811 * C152254 + C87421 * C152236 + C78477 * C115175) * C152054 *
              C151869 * C1349 -
          ((C78475 + C78476) * C115175 + C88326 * C152236 + C78183 * C152254) *
              C152054 * C151869 * C1350 +
          (C78209 * C152254 + (C79198 + C79197) * C152236 +
           (C76456 * C25021 + C78450 + C78450 + C76451 * C25025 +
            C76458 * C25022 + C78451 + C78451 + C151796 * C25026) *
               C115175) *
              C152054 * C151869 * C1351) *
         C151823) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
             C76462 + C76462 + C151796 * C159) *
                C152254 +
            (C85731 + C85732) * C152236 + C115615 * C115175) *
               C152054 * C2215 -
           ((C89098 + C89097) * C115175 + (C85733 + C85734) * C152236 +
            (C85732 + C85731) * C152254) *
               C152054 * C2216 +
           (C115615 * C152254 + (C89097 + C89098) * C152236 +
            (C89102 + C89101) * C115175) *
               C152054 * C152217) *
              C151851 * C152255 +
          (((C85735 + C85736) * C152254 + (C85737 + C85738) * C152236 +
            (C89772 + C89771) * C115175) *
               C152054 * C2216 -
           (C115616 * C115175 + (C85736 + C85735) * C152236 +
            (C76458 * C144 + C76471 + C76471 + C151796 * C160 + C76456 * C143 +
             C76472 + C76472 + C76451 * C159) *
                C152254) *
               C152054 * C2215 -
           ((C76458 * C2457 + C89764 + C89764 + C151796 * C2473 +
             C76456 * C2456 + C89763 + C89763 + C76451 * C2472) *
                C115175 +
            (C89771 + C89772) * C152236 + C115616 * C152254) *
               C152054 * C152217) *
              C151851 * C152240 +
          (((C76456 * C144 + C76473 + C76473 + C76451 * C160 + C76458 * C145 +
             C76474 + C76474 + C151796 * C161) *
                C152254 +
            (C85739 + C85740) * C152236 + C115617 * C115175) *
               C152054 * C2215 -
           ((C115628 + C115629) * C115175 + (C85743 + C85744) * C152236 +
            (C85740 + C85739) * C152254) *
               C152054 * C2216 +
           (C115617 * C152254 + (C115629 + C115628) * C152236 +
            (C76456 * C2457 + C115622 + C115622 + C76451 * C2473 +
             C76458 * C2458 + C115623 + C115623 + C151796 * C2474) *
                C115175) *
               C152054 * C152217) *
              C151851 * C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
             C76462 + C76462 + C151796 * C159) *
                C152254 +
            (C85731 + C85732) * C152236 + C115615 * C115175) *
               C152054 * C2215 -
           ((C89098 + C89097) * C115175 + (C85733 + C85734) * C152236 +
            (C85732 + C85731) * C152254) *
               C152054 * C2216 +
           (C115615 * C152254 + (C89097 + C89098) * C152236 +
            (C89102 + C89101) * C115175) *
               C152054 * C152217) *
              C152258 +
          ((C86671 * C152254 + C87420 * C152236 + C90031 * C115175) * C152054 *
               C2216 -
           (C87419 * C115175 + C86672 * C152236 + (C76794 + C76793) * C152254) *
               C152054 * C2215 -
           ((C89099 + C89100) * C115175 + C90032 * C152236 + C87419 * C152254) *
               C152054 * C152217) *
              C152244 +
          ((C76811 * C152254 + C87421 * C152236 + C78477 * C115175) * C152054 *
               C2215 -
           ((C80493 + C80494) * C115175 + C87422 * C152236 + C78429 * C152254) *
               C152054 * C2216 +
           (C78477 * C152254 + (C80494 + C80493) * C152236 +
            (C76456 * C26361 + C79767 + C79767 + C76451 * C26365 +
             C76458 * C26362 + C79768 + C79768 + C151796 * C26366) *
                C115175) *
               C152054 * C152217) *
              C152214) *
         C151823) /
            (p * q * std::sqrt(p + q));
    d2ee[290] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         (((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
              C76462 + C76462 + C151796 * C159) *
                 C152254 +
             (C85731 + C85732) * C152236 + C115615 * C115175) *
                C152054 * C4107 -
            (C118114 * C115175 + (C85733 + C85734) * C152236 +
             (C85732 + C85731) * C152254) *
                C152054 * C151956) *
               C152172 +
           ((C86671 * C152254 + C87420 * C152236 + C90031 * C115175) * C152054 *
                C151956 -
            (C87419 * C115175 + C86672 * C152236 +
             (C76794 + C76793) * C152254) *
                C152054 * C4107) *
               C151914) *
              C151828 +
          ((((C85735 + C85736) * C152254 + (C85737 + C85738) * C152236 +
             C118612 * C115175) *
                C152054 * C151956 -
            (C115616 * C115175 + (C85736 + C85735) * C152236 +
             (C76458 * C144 + C76471 + C76471 + C151796 * C160 + C76456 * C143 +
              C76472 + C76472 + C76451 * C159) *
                 C152254) *
                C152054 * C4107) *
               C152172 +
           (((C76799 + C76800) * C152254 + C86673 * C152236 +
             C89489 * C115175) *
                C152054 * C4107 -
            ((C89499 + C89500) * C115175 + C89494 * C152236 +
             C86674 * C152254) *
                C152054 * C151956) *
               C151914) *
              C151837 +
          ((((C76456 * C144 + C76473 + C76473 + C76451 * C160 + C76458 * C145 +
              C76474 + C76474 + C151796 * C161) *
                 C152254 +
             (C85739 + C85740) * C152236 + C115617 * C115175) *
                C152054 * C4107 -
            ((C115628 + C115629) * C115175 + (C85743 + C85744) * C152236 +
             (C85740 + C85739) * C152254) *
                C152054 * C151956) *
               C152172 +
           ((C86675 * C152254 + (C85742 + C85741) * C152236 +
             (C76456 * C2957 + C85701 + C85701 + C76451 * C2965 +
              C76458 * C2958 + C85702 + C85702 + C151796 * C2966) *
                 C115175) *
                C152054 * C151956 -
            ((C85741 + C85742) * C115175 + C86676 * C152236 +
             (C76806 + C76805) * C152254) *
                C152054 * C4107) *
               C151914) *
              C3588)) /
        (p * q * std::sqrt(p + q));
    d2ee[291] += (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
                  (((((C76456 * C142 + C76461 + C76461 + C76451 * C158 +
                       C76458 * C143 + C76462 + C76462 + C151796 * C159) *
                          C152254 +
                      (C85731 + C85732) * C152236 + C115615 * C115175) *
                         C152054 * C151952 -
                     (C118114 * C115175 + (C85733 + C85734) * C152236 +
                      (C85732 + C85731) * C152254) *
                         C152054 * C151959 +
                     (C115615 * C152254 + (C89097 + C89098) * C152236 +
                      C118115 * C115175) *
                         C152054 * C4779) *
                        C152172 +
                    ((C86671 * C152254 + C87420 * C152236 + C90031 * C115175) *
                         C152054 * C151959 -
                     (C87419 * C115175 + C86672 * C152236 +
                      (C76794 + C76793) * C152254) *
                         C152054 * C151952 -
                     ((C89099 + C89100) * C115175 + C90032 * C152236 +
                      C87419 * C152254) *
                         C152054 * C4779) *
                        C151914) *
                       C3241 +
                   ((((C85735 + C85736) * C152254 +
                      (C85737 + C85738) * C152236 + C118612 * C115175) *
                         C152054 * C151959 -
                     (C115616 * C115175 + (C85736 + C85735) * C152236 +
                      (C76458 * C144 + C76471 + C76471 + C151796 * C160 +
                       C76456 * C143 + C76472 + C76472 + C76451 * C159) *
                          C152254) *
                         C152054 * C151952 -
                     ((C118623 + C118624) * C115175 +
                      (C89771 + C89772) * C152236 + C115616 * C152254) *
                         C152054 * C4779) *
                        C152172 +
                    (((C76799 + C76800) * C152254 + C86673 * C152236 +
                      C89489 * C115175) *
                         C152054 * C151952 -
                     ((C89499 + C89500) * C115175 + C89494 * C152236 +
                      C86674 * C152254) *
                         C152054 * C151959 +
                     (C89489 * C152254 + (C89500 + C89499) * C152236 +
                      (C76456 * C9427 + C89765 + C89765 + C76451 * C9433 +
                       C76458 * C9428 + C89766 + C89766 + C151796 * C9434) *
                          C115175) *
                         C152054 * C4779) *
                        C151914) *
                       C151834)) /
                 (p * q * std::sqrt(p + q));
    d2ee[292] +=
        (-std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
              C76462 + C76462 + C151796 * C159) *
                 C152254 +
             (C85731 + C85732) * C152236 + C115615 * C115175) *
                C152054 * C4107 -
            (C118114 * C115175 + (C85733 + C85734) * C152236 +
             (C85732 + C85731) * C152254) *
                C152054 * C151956) *
               C152258 +
           ((C86671 * C152254 + C87420 * C152236 + C90031 * C115175) * C152054 *
                C151956 -
            (C87419 * C115175 + C86672 * C152236 +
             (C76794 + C76793) * C152254) *
                C152054 * C4107) *
               C152244 +
           ((C76811 * C152254 + C87421 * C152236 + C78477 * C115175) * C152054 *
                C4107 -
            ((C80493 + C80494) * C115175 + C87422 * C152236 +
             C78429 * C152254) *
                C152054 * C151956) *
               C152214) *
              C3241 +
          ((((C85735 + C85736) * C152254 + (C85737 + C85738) * C152236 +
             C118612 * C115175) *
                C152054 * C151956 -
            (C115616 * C115175 + (C85736 + C85735) * C152236 +
             (C76458 * C144 + C76471 + C76471 + C151796 * C160 + C76456 * C143 +
              C76472 + C76472 + C76451 * C159) *
                 C152254) *
                C152054 * C4107) *
               C152258 +
           (((C76799 + C76800) * C152254 + C86673 * C152236 +
             C89489 * C115175) *
                C152054 * C4107 -
            ((C89499 + C89500) * C115175 + C89494 * C152236 +
             C86674 * C152254) *
                C152054 * C151956) *
               C152244 +
           ((C78977 * C152254 + (C80078 + C80077) * C152236 +
             (C76456 * C10150 + C80279 + C80279 + C76451 * C10156 +
              C76458 * C10151 + C80280 + C80280 + C151796 * C10157) *
                 C115175) *
                C152054 * C151956 -
            ((C80077 + C80078) * C115175 + C88067 * C152236 +
             C76812 * C152254) *
                C152054 * C4107) *
               C152214) *
              C151834)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
             C76462 + C76462 + C151796 * C159) *
                C152254 +
            (C85731 + C85732) * C152236 + C115615 * C115175) *
               C152054 * C4107 -
           (C118114 * C115175 + (C85733 + C85734) * C152236 +
            (C85732 + C85731) * C152254) *
               C152054 * C151956) *
              C151851 * C152264 +
          (((C85735 + C85736) * C152254 + (C85737 + C85738) * C152236 +
            C118612 * C115175) *
               C152054 * C151956 -
           (C115616 * C115175 + (C85736 + C85735) * C152236 +
            (C76458 * C144 + C76471 + C76471 + C151796 * C160 + C76456 * C143 +
             C76472 + C76472 + C76451 * C159) *
                C152254) *
               C152054 * C4107) *
              C151851 * C152257 +
          (((C76456 * C144 + C76473 + C76473 + C76451 * C160 + C76458 * C145 +
             C76474 + C76474 + C151796 * C161) *
                C152254 +
            (C85739 + C85740) * C152236 + C115617 * C115175) *
               C152054 * C4107 -
           ((C115628 + C115629) * C115175 + (C85743 + C85744) * C152236 +
            (C85740 + C85739) * C152254) *
               C152054 * C151956) *
              C151851 * C152242 +
          (((C86283 + C86284) * C152254 + (C116028 + C116029) * C152236 +
            (C76456 * C2451 + C116022 + C116022 + C76451 * C2467 +
             C76458 * C2818 + C116023 + C116023 + C151796 * C2820) *
                C115175) *
               C152054 * C151956 -
           ((C116029 + C116028) * C115175 + (C86284 + C86283) * C152236 +
            (C76458 * C146 + C76483 + C76483 + C151796 * C162 + C76456 * C145 +
             C76484 + C76484 + C76451 * C161) *
                C152254) *
               C152054 * C4107) *
              C151851 * C152218)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(9.) * 2 * std::pow(Pi, 2.5) *
         ((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
             C76462 + C76462 + C151796 * C159) *
                C152254 +
            (C85731 + C85732) * C152236 + C115615 * C115175) *
               C152054 * C152266 -
           (C118114 * C115175 + (C85733 + C85734) * C152236 +
            (C85732 + C85731) * C152254) *
               C152054 * C152263 +
           (C115615 * C152254 + (C89097 + C89098) * C152236 +
            C118115 * C115175) *
               C152054 * C152252 -
           ((C118126 + C118127) * C115175 + (C89101 + C89102) * C152236 +
            C118114 * C152254) *
               C152054 * C152230) *
              C151851 * C3241 +
          (((C85735 + C85736) * C152254 + (C85737 + C85738) * C152236 +
            C118612 * C115175) *
               C152054 * C152263 -
           (C115616 * C115175 + (C85736 + C85735) * C152236 +
            (C76458 * C144 + C76471 + C76471 + C151796 * C160 + C76456 * C143 +
             C76472 + C76472 + C76451 * C159) *
                C152254) *
               C152054 * C152266 -
           ((C118623 + C118624) * C115175 + (C89771 + C89772) * C152236 +
            C115616 * C152254) *
               C152054 * C152252 +
           (C118612 * C152254 + (C118624 + C118623) * C152236 +
            (C76456 * C17751 + C118617 + C118617 + C76451 * C17757 +
             C76458 * C17752 + C118618 + C118618 + C151796 * C17758) *
                C115175) *
               C152054 * C152230) *
              C151851 * C151834)) /
            (p * q * std::sqrt(p + q));
    d2ee[293] +=
        (std::sqrt(27.) * 2 * std::pow(Pi, 2.5) *
         ((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
             C76462 + C76462 + C151796 * C159) *
                C152254 +
            (C85731 + C85732) * C152236 + C115615 * C115175) *
               C152054 * C151952 -
           (C118114 * C115175 + (C85733 + C85734) * C152236 +
            (C85732 + C85731) * C152254) *
               C152054 * C151959 +
           (C115615 * C152254 + (C89097 + C89098) * C152236 +
            C118115 * C115175) *
               C152054 * C4779) *
              C151851 * C151828 +
          (((C85735 + C85736) * C152254 + (C85737 + C85738) * C152236 +
            C118612 * C115175) *
               C152054 * C151959 -
           (C115616 * C115175 + (C85736 + C85735) * C152236 +
            (C76458 * C144 + C76471 + C76471 + C151796 * C160 + C76456 * C143 +
             C76472 + C76472 + C76451 * C159) *
                C152254) *
               C152054 * C151952 -
           ((C118623 + C118624) * C115175 + (C89771 + C89772) * C152236 +
            C115616 * C152254) *
               C152054 * C4779) *
              C151851 * C151837 +
          (((C76456 * C144 + C76473 + C76473 + C76451 * C160 + C76458 * C145 +
             C76474 + C76474 + C151796 * C161) *
                C152254 +
            (C85739 + C85740) * C152236 + C115617 * C115175) *
               C152054 * C151952 -
           ((C115628 + C115629) * C115175 + (C85743 + C85744) * C152236 +
            (C85740 + C85739) * C152254) *
               C152054 * C151959 +
           (C115617 * C152254 + (C115629 + C115628) * C152236 +
            (C76456 * C2457 + C115622 + C115622 + C76451 * C2473 +
             C76458 * C2458 + C115623 + C115623 + C151796 * C2474) *
                C115175) *
               C152054 * C4779) *
              C151851 * C3588)) /
        (p * q * std::sqrt(p + q));
    d2ee[294] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
             C76462 + C76462 + C151796 * C159) *
                C152254 +
            (C85731 + C85732) * C152236 + C115615 * C115175) *
               C152054 * C4107 -
           (C118114 * C115175 + (C85733 + C85734) * C152236 +
            (C85732 + C85731) * C152254) *
               C152054 * C151956) *
              C151851 * C152264 +
          (((C85735 + C85736) * C152254 + (C85737 + C85738) * C152236 +
            C118612 * C115175) *
               C152054 * C151956 -
           (C115616 * C115175 + (C85736 + C85735) * C152236 +
            (C76458 * C144 + C76471 + C76471 + C151796 * C160 + C76456 * C143 +
             C76472 + C76472 + C76451 * C159) *
                C152254) *
               C152054 * C4107) *
              C151851 * C152257 +
          (((C76456 * C144 + C76473 + C76473 + C76451 * C160 + C76458 * C145 +
             C76474 + C76474 + C151796 * C161) *
                C152254 +
            (C85739 + C85740) * C152236 + C115617 * C115175) *
               C152054 * C4107 -
           ((C115628 + C115629) * C115175 + (C85743 + C85744) * C152236 +
            (C85740 + C85739) * C152254) *
               C152054 * C151956) *
              C151851 * C152242 +
          (((C86283 + C86284) * C152254 + (C116028 + C116029) * C152236 +
            (C76456 * C2451 + C116022 + C116022 + C76451 * C2467 +
             C76458 * C2818 + C116023 + C116023 + C151796 * C2820) *
                C115175) *
               C152054 * C151956 -
           ((C116029 + C116028) * C115175 + (C86284 + C86283) * C152236 +
            (C76458 * C146 + C76483 + C76483 + C151796 * C162 + C76456 * C145 +
             C76484 + C76484 + C76451 * C161) *
                C152254) *
               C152054 * C4107) *
              C151851 * C152218)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
              C76462 + C76462 + C151796 * C159) *
                 C152254 +
             (C85731 + C85732) * C152236 + C115615 * C115175) *
                C152054 * C4107 -
            (C118114 * C115175 + (C85733 + C85734) * C152236 +
             (C85732 + C85731) * C152254) *
                C152054 * C151956) *
               C152258 +
           ((C86671 * C152254 + C87420 * C152236 + C90031 * C115175) * C152054 *
                C151956 -
            (C87419 * C115175 + C86672 * C152236 +
             (C76794 + C76793) * C152254) *
                C152054 * C4107) *
               C152244 +
           ((C76811 * C152254 + C87421 * C152236 + C78477 * C115175) * C152054 *
                C4107 -
            ((C80493 + C80494) * C115175 + C87422 * C152236 +
             C78429 * C152254) *
                C152054 * C151956) *
               C152214) *
              C3241 +
          ((((C85735 + C85736) * C152254 + (C85737 + C85738) * C152236 +
             C118612 * C115175) *
                C152054 * C151956 -
            (C115616 * C115175 + (C85736 + C85735) * C152236 +
             (C76458 * C144 + C76471 + C76471 + C151796 * C160 + C76456 * C143 +
              C76472 + C76472 + C76451 * C159) *
                 C152254) *
                C152054 * C4107) *
               C152258 +
           (((C76799 + C76800) * C152254 + C86673 * C152236 +
             C89489 * C115175) *
                C152054 * C4107 -
            ((C89499 + C89500) * C115175 + C89494 * C152236 +
             C86674 * C152254) *
                C152054 * C151956) *
               C152244 +
           ((C78977 * C152254 + (C80078 + C80077) * C152236 +
             (C76456 * C10150 + C80279 + C80279 + C76451 * C10156 +
              C76458 * C10151 + C80280 + C80280 + C151796 * C10157) *
                 C115175) *
                C152054 * C151956 -
            ((C80077 + C80078) * C115175 + C88067 * C152236 +
             C76812 * C152254) *
                C152054 * C4107) *
               C152214) *
              C151834)) /
            (p * q * std::sqrt(p + q));
    d2ee[295] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
             C76462 + C76462 + C151796 * C159) *
                C152254 +
            (C85731 + C85732) * C152236 + C115615 * C115175) *
               C152054 * C151869 * C152172 -
           (C87419 * C115175 + C86672 * C152236 + (C76794 + C76793) * C152254) *
               C152054 * C151869 * C151914) *
              C739 +
          (((C76799 + C76800) * C152254 + C86673 * C152236 + C89489 * C115175) *
               C152054 * C151869 * C151914 -
           (C115616 * C115175 + (C85736 + C85735) * C152236 +
            (C76458 * C144 + C76471 + C76471 + C151796 * C160 + C76456 * C143 +
             C76472 + C76472 + C76451 * C159) *
                C152254) *
               C152054 * C151869 * C152172) *
              C740 +
          (((C76456 * C144 + C76473 + C76473 + C76451 * C160 + C76458 * C145 +
             C76474 + C76474 + C151796 * C161) *
                C152254 +
            (C85739 + C85740) * C152236 + C115617 * C115175) *
               C152054 * C151869 * C152172 -
           ((C85741 + C85742) * C115175 + C86676 * C152236 +
            (C76806 + C76805) * C152254) *
               C152054 * C151869 * C151914) *
              C741 +
          (((C77283 + C77284) * C152254 + (C86011 + C86012) * C152236 +
            (C76456 * C1531 + C86277 + C86277 + C76451 * C1555 +
             C76458 * C2677 + C86278 + C86278 + C151796 * C2679) *
                C115175) *
               C152054 * C151869 * C151914 -
           ((C76458 * C556 + C86276 + C86276 + C151796 * C580 + C76456 * C554 +
             C86275 + C86275 + C76451 * C578) *
                C115175 +
            (C86284 + C86283) * C152236 +
            (C76458 * C146 + C76483 + C76483 + C151796 * C162 + C76456 * C145 +
             C76484 + C76484 + C76451 * C161) *
                C152254) *
               C152054 * C151869 * C152172) *
              C152218)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
             C76462 + C76462 + C151796 * C159) *
                C152254 +
            (C85731 + C85732) * C152236 + C115615 * C115175) *
               C152054 * C151869 * C1709 -
           (C87419 * C115175 + C86672 * C152236 + (C76794 + C76793) * C152254) *
               C152054 * C151869 * C1710 +
           (C76811 * C152254 + C87421 * C152236 + C78477 * C115175) * C152054 *
               C151869 * C1711 -
           ((C78475 + C78476) * C115175 + C88326 * C152236 + C78183 * C152254) *
               C152054 * C151869 * C152224) *
              C152158 +
          (((C76799 + C76800) * C152254 + C86673 * C152236 + C89489 * C115175) *
               C152054 * C151869 * C1710 -
           (C115616 * C115175 + (C85736 + C85735) * C152236 +
            (C76458 * C144 + C76471 + C76471 + C151796 * C160 + C76456 * C143 +
             C76472 + C76472 + C76451 * C159) *
                C152254) *
               C152054 * C151869 * C1709 -
           ((C80077 + C80078) * C115175 + C88067 * C152236 + C76812 * C152254) *
               C152054 * C151869 * C1711 +
           (C78673 * C152254 + (C78990 + C78989) * C152236 +
            (C76456 * C8065 + C80067 + C80067 + C76451 * C8071 +
             C76458 * C8066 + C80068 + C80068 + C151796 * C8072) *
                C115175) *
               C152054 * C151869 * C152224) *
              C151834)) /
            (p * q * std::sqrt(p + q));
    d2ee[296] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
              C76462 + C76462 + C151796 * C159) *
                 C152254 +
             (C85731 + C85732) * C152236 + C115615 * C115175) *
                C152054 * C152173 -
            ((C89098 + C89097) * C115175 + (C85733 + C85734) * C152236 +
             (C85732 + C85731) * C152254) *
                C152054 * C151956) *
               C152172 +
           ((C86671 * C152254 + C87420 * C152236 + C90031 * C115175) * C152054 *
                C151956 -
            (C87419 * C115175 + C86672 * C152236 +
             (C76794 + C76793) * C152254) *
                C152054 * C152173) *
               C151914) *
              C335 +
          ((((C85735 + C85736) * C152254 + (C85737 + C85738) * C152236 +
             (C89772 + C89771) * C115175) *
                C152054 * C151956 -
            (C115616 * C115175 + (C85736 + C85735) * C152236 +
             (C76458 * C144 + C76471 + C76471 + C151796 * C160 + C76456 * C143 +
              C76472 + C76472 + C76451 * C159) *
                 C152254) *
                C152054 * C152173) *
               C152172 +
           (((C76799 + C76800) * C152254 + C86673 * C152236 +
             C89489 * C115175) *
                C152054 * C152173 -
            ((C89499 + C89500) * C115175 + C89494 * C152236 +
             C86674 * C152254) *
                C152054 * C151956) *
               C151914) *
              C336 +
          ((((C76456 * C144 + C76473 + C76473 + C76451 * C160 + C76458 * C145 +
              C76474 + C76474 + C151796 * C161) *
                 C152254 +
             (C85739 + C85740) * C152236 + C115617 * C115175) *
                C152054 * C152173 -
            ((C115628 + C115629) * C115175 + (C85743 + C85744) * C152236 +
             (C85740 + C85739) * C152254) *
                C152054 * C151956) *
               C152172 +
           ((C86675 * C152254 + (C85742 + C85741) * C152236 +
             (C76456 * C2957 + C85701 + C85701 + C76451 * C2965 +
              C76458 * C2958 + C85702 + C85702 + C151796 * C2966) *
                 C115175) *
                C152054 * C151956 -
            ((C85741 + C85742) * C115175 + C86676 * C152236 +
             (C76806 + C76805) * C152254) *
                C152054 * C152173) *
               C151914) *
              C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
             C76462 + C76462 + C151796 * C159) *
                C152254 +
            (C85731 + C85732) * C152236 + C115615 * C115175) *
               C152054 * C152173 -
           ((C89098 + C89097) * C115175 + (C85733 + C85734) * C152236 +
            (C85732 + C85731) * C152254) *
               C152054 * C151956) *
              C1709 +
          ((C86671 * C152254 + C87420 * C152236 + C90031 * C115175) * C152054 *
               C151956 -
           (C87419 * C115175 + C86672 * C152236 + (C76794 + C76793) * C152254) *
               C152054 * C152173) *
              C1710 +
          ((C76811 * C152254 + C87421 * C152236 + C78477 * C115175) * C152054 *
               C152173 -
           ((C80493 + C80494) * C115175 + C87422 * C152236 + C78429 * C152254) *
               C152054 * C151956) *
              C1711 +
          ((C79185 * C152254 + (C78476 + C78475) * C152236 +
            (C76456 * C27085 + C80483 + C80483 + C76451 * C27089 +
             C76458 * C27086 + C80484 + C80484 + C151796 * C27090) *
                C115175) *
               C152054 * C151956 -
           ((C78475 + C78476) * C115175 + C88326 * C152236 + C78183 * C152254) *
               C152054 * C152173) *
              C152224) *
         C151823) /
            (p * q * std::sqrt(p + q));
    d2ee[297] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
             C76462 + C76462 + C151796 * C159) *
                C152254 +
            (C85731 + C85732) * C152236 + (C85734 + C85733) * C115175) *
               C152054 * C151869 * C152258 -
           (C87419 * C115175 + C86672 * C152236 + (C76794 + C76793) * C152254) *
               C152054 * C151869 * C152244 +
           (C76811 * C152254 + C87421 * C152236 + C78477 * C115175) * C152054 *
               C151869 * C152214) *
              C335 +
          (((C76799 + C76800) * C152254 + C86673 * C152236 + C89489 * C115175) *
               C152054 * C151869 * C152244 -
           ((C85738 + C85737) * C115175 + (C85736 + C85735) * C152236 +
            (C76458 * C144 + C76471 + C76471 + C151796 * C160 + C76456 * C143 +
             C76472 + C76472 + C76451 * C159) *
                C152254) *
               C152054 * C151869 * C152258 -
           ((C80077 + C80078) * C115175 + C88067 * C152236 + C76812 * C152254) *
               C152054 * C151869 * C152214) *
              C336 +
          (((C76456 * C144 + C76473 + C76473 + C76451 * C160 + C76458 * C145 +
             C76474 + C76474 + C151796 * C161) *
                C152254 +
            (C85739 + C85740) * C152236 + (C85744 + C85743) * C115175) *
               C152054 * C151869 * C152258 -
           ((C85741 + C85742) * C115175 + C86676 * C152236 +
            (C76806 + C76805) * C152254) *
               C152054 * C151869 * C152244 +
           (C76813 * C152254 + (C77840 + C77839) * C152236 +
            (C76456 * C1541 + C77069 + C77069 + C76451 * C1565 +
             C76458 * C1542 + C77070 + C77070 + C151796 * C1566) *
                C115175) *
               C152054 * C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
            C76462 + C76462 + C151796 * C159) *
               C152254 +
           (C85731 + C85732) * C152236 + (C85734 + C85733) * C115175) *
              C152054 * C151869 * C151851 * C129 -
          ((C85738 + C85737) * C115175 + (C85736 + C85735) * C152236 +
           (C76458 * C144 + C76471 + C76471 + C151796 * C160 + C76456 * C143 +
            C76472 + C76472 + C76451 * C159) *
               C152254) *
              C152054 * C151869 * C151851 * C130 +
          ((C76456 * C144 + C76473 + C76473 + C76451 * C160 + C76458 * C145 +
            C76474 + C76474 + C151796 * C161) *
               C152254 +
           (C85739 + C85740) * C152236 + (C85744 + C85743) * C115175) *
              C152054 * C151869 * C151851 * C131 -
          ((C76458 * C556 + C86276 + C86276 + C151796 * C580 + C76456 * C554 +
            C86275 + C86275 + C76451 * C578) *
               C115175 +
           (C86284 + C86283) * C152236 +
           (C76458 * C146 + C76483 + C76483 + C151796 * C162 + C76456 * C145 +
            C76484 + C76484 + C76451 * C161) *
               C152254) *
              C152054 * C151869 * C151851 * C132 +
          ((C76456 * C146 + C76485 + C76485 + C76451 * C162 + C76458 * C147 +
            C76486 + C76486 + C151796 * C163) *
               C152254 +
           (C76456 * C555 + C85087 + C85087 + C76451 * C579 + C76458 * C557 +
            C85088 + C85088 + C151796 * C581) *
               C152236 +
           (C76456 * C556 + C115177 + C115177 + C76451 * C580 + C76458 * C558 +
            C115178 + C115178 + C151796 * C582) *
               C115175) *
              C152054 * C151869 * C151851 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
             C76462 + C76462 + C151796 * C159) *
                C152254 +
            (C85731 + C85732) * C152236 + C115615 * C115175) *
               C152054 * C152259 -
           ((C89098 + C89097) * C115175 + (C85733 + C85734) * C152236 +
            (C85732 + C85731) * C152254) *
               C152054 * C152246 +
           (C115615 * C152254 + (C89097 + C89098) * C152236 +
            (C89102 + C89101) * C115175) *
               C152054 * C152217) *
              C151851 * C335 +
          (((C85735 + C85736) * C152254 + (C85737 + C85738) * C152236 +
            (C89772 + C89771) * C115175) *
               C152054 * C152246 -
           (C115616 * C115175 + (C85736 + C85735) * C152236 +
            (C76458 * C144 + C76471 + C76471 + C151796 * C160 + C76456 * C143 +
             C76472 + C76472 + C76451 * C159) *
                C152254) *
               C152054 * C152259 -
           ((C76458 * C2457 + C89764 + C89764 + C151796 * C2473 +
             C76456 * C2456 + C89763 + C89763 + C76451 * C2472) *
                C115175 +
            (C89771 + C89772) * C152236 + C115616 * C152254) *
               C152054 * C152217) *
              C151851 * C336 +
          (((C76456 * C144 + C76473 + C76473 + C76451 * C160 + C76458 * C145 +
             C76474 + C76474 + C151796 * C161) *
                C152254 +
            (C85739 + C85740) * C152236 + C115617 * C115175) *
               C152054 * C152259 -
           ((C115628 + C115629) * C115175 + (C85743 + C85744) * C152236 +
            (C85740 + C85739) * C152254) *
               C152054 * C152246 +
           (C115617 * C152254 + (C115629 + C115628) * C152236 +
            (C76456 * C2457 + C115622 + C115622 + C76451 * C2473 +
             C76458 * C2458 + C115623 + C115623 + C151796 * C2474) *
                C115175) *
               C152054 * C152217) *
              C151851 * C152208)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
             C76462 + C76462 + C151796 * C159) *
                C152254 +
            (C85731 + C85732) * C152236 + C115615 * C115175) *
               C152054 * C151869 * C1259 -
           (C87419 * C115175 + C86672 * C152236 + (C76794 + C76793) * C152254) *
               C152054 * C151869 * C1260 +
           (C76811 * C152254 + C87421 * C152236 + C78477 * C115175) * C152054 *
               C151869 * C152214) *
              C152255 +
          (((C76799 + C76800) * C152254 + C86673 * C152236 + C89489 * C115175) *
               C152054 * C151869 * C1260 -
           (C115616 * C115175 + (C85736 + C85735) * C152236 +
            (C76458 * C144 + C76471 + C76471 + C151796 * C160 + C76456 * C143 +
             C76472 + C76472 + C76451 * C159) *
                C152254) *
               C152054 * C151869 * C1259 -
           ((C80077 + C80078) * C115175 + C88067 * C152236 + C76812 * C152254) *
               C152054 * C151869 * C152214) *
              C152240 +
          (((C76456 * C144 + C76473 + C76473 + C76451 * C160 + C76458 * C145 +
             C76474 + C76474 + C151796 * C161) *
                C152254 +
            (C85739 + C85740) * C152236 + C115617 * C115175) *
               C152054 * C151869 * C1259 -
           ((C85741 + C85742) * C115175 + C86676 * C152236 +
            (C76806 + C76805) * C152254) *
               C152054 * C151869 * C1260 +
           (C76813 * C152254 + (C77840 + C77839) * C152236 +
            (C76456 * C1541 + C77069 + C77069 + C76451 * C1565 +
             C76458 * C1542 + C77070 + C77070 + C151796 * C1566) *
                C115175) *
               C152054 * C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
            C76462 + C76462 + C151796 * C159) *
               C152254 +
           (C85731 + C85732) * C152236 + C115615 * C115175) *
              C152054 * C151869 * C1347 -
          (C87419 * C115175 + C86672 * C152236 + (C76794 + C76793) * C152254) *
              C152054 * C151869 * C1348 +
          (C76811 * C152254 + C87421 * C152236 + C78477 * C115175) * C152054 *
              C151869 * C1349 -
          ((C78475 + C78476) * C115175 + C88326 * C152236 + C78183 * C152254) *
              C152054 * C151869 * C1350 +
          (C78209 * C152254 + (C79198 + C79197) * C152236 +
           (C76456 * C25021 + C78450 + C78450 + C76451 * C25025 +
            C76458 * C25022 + C78451 + C78451 + C151796 * C25026) *
               C115175) *
              C152054 * C151869 * C1351) *
         C151823) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
             C76462 + C76462 + C151796 * C159) *
                C152254 +
            (C85731 + C85732) * C152236 + C115615 * C115175) *
               C152054 * C152259 -
           ((C89098 + C89097) * C115175 + (C85733 + C85734) * C152236 +
            (C85732 + C85731) * C152254) *
               C152054 * C152246 +
           (C115615 * C152254 + (C89097 + C89098) * C152236 +
            (C89102 + C89101) * C115175) *
               C152054 * C152217) *
              C1259 +
          ((C86671 * C152254 + C87420 * C152236 + C90031 * C115175) * C152054 *
               C152246 -
           (C87419 * C115175 + C86672 * C152236 + (C76794 + C76793) * C152254) *
               C152054 * C152259 -
           ((C89099 + C89100) * C115175 + C90032 * C152236 + C87419 * C152254) *
               C152054 * C152217) *
              C1260 +
          ((C76811 * C152254 + C87421 * C152236 + C78477 * C115175) * C152054 *
               C152259 -
           ((C80493 + C80494) * C115175 + C87422 * C152236 + C78429 * C152254) *
               C152054 * C152246 +
           (C78477 * C152254 + (C80494 + C80493) * C152236 +
            (C76456 * C26361 + C79767 + C79767 + C76451 * C26365 +
             C76458 * C26362 + C79768 + C79768 + C151796 * C26366) *
                C115175) *
               C152054 * C152217) *
              C152214) *
         C151823) /
            (p * q * std::sqrt(p + q));
    d2ee[298] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
             C76462 + C76462 + C151796 * C159) *
                C152254 +
            (C85731 + C85732) * C152236 + C115615 * C115175) *
               C152054 * C152173 -
           ((C89098 + C89097) * C115175 + (C85733 + C85734) * C152236 +
            (C85732 + C85731) * C152254) *
               C152054 * C151956) *
              C151851 * C739 +
          (((C85735 + C85736) * C152254 + (C85737 + C85738) * C152236 +
            (C89772 + C89771) * C115175) *
               C152054 * C151956 -
           (C115616 * C115175 + (C85736 + C85735) * C152236 +
            (C76458 * C144 + C76471 + C76471 + C151796 * C160 + C76456 * C143 +
             C76472 + C76472 + C76451 * C159) *
                C152254) *
               C152054 * C152173) *
              C151851 * C740 +
          (((C76456 * C144 + C76473 + C76473 + C76451 * C160 + C76458 * C145 +
             C76474 + C76474 + C151796 * C161) *
                C152254 +
            (C85739 + C85740) * C152236 + C115617 * C115175) *
               C152054 * C152173 -
           ((C115628 + C115629) * C115175 + (C85743 + C85744) * C152236 +
            (C85740 + C85739) * C152254) *
               C152054 * C151956) *
              C151851 * C741 +
          (((C86283 + C86284) * C152254 + (C116028 + C116029) * C152236 +
            (C76456 * C2451 + C116022 + C116022 + C76451 * C2467 +
             C76458 * C2818 + C116023 + C116023 + C151796 * C2820) *
                C115175) *
               C152054 * C151956 -
           ((C116029 + C116028) * C115175 + (C86284 + C86283) * C152236 +
            (C76458 * C146 + C76483 + C76483 + C151796 * C162 + C76456 * C145 +
             C76484 + C76484 + C76451 * C161) *
                C152254) *
               C152054 * C152173) *
              C151851 * C152218)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
              C76462 + C76462 + C151796 * C159) *
                 C152254 +
             (C85731 + C85732) * C152236 + C115615 * C115175) *
                C152054 * C152173 -
            ((C89098 + C89097) * C115175 + (C85733 + C85734) * C152236 +
             (C85732 + C85731) * C152254) *
                C152054 * C151956) *
               C1259 +
           ((C86671 * C152254 + C87420 * C152236 + C90031 * C115175) * C152054 *
                C151956 -
            (C87419 * C115175 + C86672 * C152236 +
             (C76794 + C76793) * C152254) *
                C152054 * C152173) *
               C1260 +
           ((C76811 * C152254 + C87421 * C152236 + C78477 * C115175) * C152054 *
                C152173 -
            ((C80493 + C80494) * C115175 + C87422 * C152236 +
             C78429 * C152254) *
                C152054 * C151956) *
               C152214) *
              C152158 +
          ((((C85735 + C85736) * C152254 + (C85737 + C85738) * C152236 +
             (C89772 + C89771) * C115175) *
                C152054 * C151956 -
            (C115616 * C115175 + (C85736 + C85735) * C152236 +
             (C76458 * C144 + C76471 + C76471 + C151796 * C160 + C76456 * C143 +
              C76472 + C76472 + C76451 * C159) *
                 C152254) *
                C152054 * C152173) *
               C1259 +
           (((C76799 + C76800) * C152254 + C86673 * C152236 +
             C89489 * C115175) *
                C152054 * C152173 -
            ((C89499 + C89500) * C115175 + C89494 * C152236 +
             C86674 * C152254) *
                C152054 * C151956) *
               C1260 +
           ((C78977 * C152254 + (C80078 + C80077) * C152236 +
             (C76456 * C10150 + C80279 + C80279 + C76451 * C10156 +
              C76458 * C10151 + C80280 + C80280 + C151796 * C10157) *
                 C115175) *
                C152054 * C151956 -
            ((C80077 + C80078) * C115175 + C88067 * C152236 +
             C76812 * C152254) *
                C152054 * C152173) *
               C152214) *
              C151834)) /
            (p * q * std::sqrt(p + q));
    d2ee[299] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
            C76462 + C76462 + C151796 * C159) *
               C152254 +
           (C85731 + C85732) * C152236 + (C85734 + C85733) * C115175) *
              C152054 * C151869 * C151851 * C129 -
          ((C85738 + C85737) * C115175 + (C85736 + C85735) * C152236 +
           (C76458 * C144 + C76471 + C76471 + C151796 * C160 + C76456 * C143 +
            C76472 + C76472 + C76451 * C159) *
               C152254) *
              C152054 * C151869 * C151851 * C130 +
          ((C76456 * C144 + C76473 + C76473 + C76451 * C160 + C76458 * C145 +
            C76474 + C76474 + C151796 * C161) *
               C152254 +
           (C85739 + C85740) * C152236 + (C85744 + C85743) * C115175) *
              C152054 * C151869 * C151851 * C131 -
          ((C76458 * C556 + C86276 + C86276 + C151796 * C580 + C76456 * C554 +
            C86275 + C86275 + C76451 * C578) *
               C115175 +
           (C86284 + C86283) * C152236 +
           (C76458 * C146 + C76483 + C76483 + C151796 * C162 + C76456 * C145 +
            C76484 + C76484 + C76451 * C161) *
               C152254) *
              C152054 * C151869 * C151851 * C132 +
          ((C76456 * C146 + C76485 + C76485 + C76451 * C162 + C76458 * C147 +
            C76486 + C76486 + C151796 * C163) *
               C152254 +
           (C76456 * C555 + C85087 + C85087 + C76451 * C579 + C76458 * C557 +
            C85088 + C85088 + C151796 * C581) *
               C152236 +
           (C76456 * C556 + C115177 + C115177 + C76451 * C580 + C76458 * C558 +
            C115178 + C115178 + C151796 * C582) *
               C115175) *
              C152054 * C151869 * C151851 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
             C76462 + C76462 + C151796 * C159) *
                C152254 +
            (C85731 + C85732) * C152236 + (C85734 + C85733) * C115175) *
               C152054 * C151869 * C152258 -
           (C87419 * C115175 + C86672 * C152236 + (C76794 + C76793) * C152254) *
               C152054 * C151869 * C152244 +
           (C76811 * C152254 + C87421 * C152236 + C78477 * C115175) * C152054 *
               C151869 * C152214) *
              C335 +
          (((C76799 + C76800) * C152254 + C86673 * C152236 + C89489 * C115175) *
               C152054 * C151869 * C152244 -
           ((C85738 + C85737) * C115175 + (C85736 + C85735) * C152236 +
            (C76458 * C144 + C76471 + C76471 + C151796 * C160 + C76456 * C143 +
             C76472 + C76472 + C76451 * C159) *
                C152254) *
               C152054 * C151869 * C152258 -
           ((C80077 + C80078) * C115175 + C88067 * C152236 + C76812 * C152254) *
               C152054 * C151869 * C152214) *
              C336 +
          (((C76456 * C144 + C76473 + C76473 + C76451 * C160 + C76458 * C145 +
             C76474 + C76474 + C151796 * C161) *
                C152254 +
            (C85739 + C85740) * C152236 + (C85744 + C85743) * C115175) *
               C152054 * C151869 * C152258 -
           ((C85741 + C85742) * C115175 + C86676 * C152236 +
            (C76806 + C76805) * C152254) *
               C152054 * C151869 * C152244 +
           (C76813 * C152254 + (C77840 + C77839) * C152236 +
            (C76456 * C1541 + C77069 + C77069 + C76451 * C1565 +
             C76458 * C1542 + C77070 + C77070 + C151796 * C1566) *
                C115175) *
               C152054 * C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
             C76462 + C76462 + C151796 * C159) *
                C152254 +
            (C85731 + C85732) * C152236 + C115615 * C115175) *
               C152054 * C151869 * C1259 -
           (C87419 * C115175 + C86672 * C152236 + (C76794 + C76793) * C152254) *
               C152054 * C151869 * C1260 +
           (C76811 * C152254 + C87421 * C152236 + C78477 * C115175) * C152054 *
               C151869 * C152214) *
              C152255 +
          (((C76799 + C76800) * C152254 + C86673 * C152236 + C89489 * C115175) *
               C152054 * C151869 * C1260 -
           (C115616 * C115175 + (C85736 + C85735) * C152236 +
            (C76458 * C144 + C76471 + C76471 + C151796 * C160 + C76456 * C143 +
             C76472 + C76472 + C76451 * C159) *
                C152254) *
               C152054 * C151869 * C1259 -
           ((C80077 + C80078) * C115175 + C88067 * C152236 + C76812 * C152254) *
               C152054 * C151869 * C152214) *
              C152240 +
          (((C76456 * C144 + C76473 + C76473 + C76451 * C160 + C76458 * C145 +
             C76474 + C76474 + C151796 * C161) *
                C152254 +
            (C85739 + C85740) * C152236 + C115617 * C115175) *
               C152054 * C151869 * C1259 -
           ((C85741 + C85742) * C115175 + C86676 * C152236 +
            (C76806 + C76805) * C152254) *
               C152054 * C151869 * C1260 +
           (C76813 * C152254 + (C77840 + C77839) * C152236 +
            (C76456 * C1541 + C77069 + C77069 + C76451 * C1565 +
             C76458 * C1542 + C77070 + C77070 + C151796 * C1566) *
                C115175) *
               C152054 * C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C76456 * C142 + C76461 + C76461 + C76451 * C158 + C76458 * C143 +
            C76462 + C76462 + C151796 * C159) *
               C152254 +
           (C85731 + C85732) * C152236 + C115615 * C115175) *
              C152054 * C151869 * C1347 -
          (C87419 * C115175 + C86672 * C152236 + (C76794 + C76793) * C152254) *
              C152054 * C151869 * C1348 +
          (C76811 * C152254 + C87421 * C152236 + C78477 * C115175) * C152054 *
              C151869 * C1349 -
          ((C78475 + C78476) * C115175 + C88326 * C152236 + C78183 * C152254) *
              C152054 * C151869 * C1350 +
          (C78209 * C152254 + (C79198 + C79197) * C152236 +
           (C76456 * C25021 + C78450 + C78450 + C76451 * C25025 +
            C76458 * C25022 + C78451 + C78451 + C151796 * C25026) *
               C115175) *
              C152054 * C151869 * C1351) *
         C151823) /
            (p * q * std::sqrt(p + q));
    d2ee[300] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 +
                     C168 + C168 + C122 * C159 + C138 * C144 + C169 + C169 +
                     C123 * C160 + C140 * C145 + C170 + C170 + C124 * C161) *
                        C152080 * C152054 * C151869 * C151910 -
                    (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 +
                     C376 + C376 + C123 * C363 + C136 * C340 + C377 + C377 +
                     C122 * C364 + C134 * C341 + C378 + C378 + C121 * C365) *
                        C152080 * C152054 * C151869 * C151917 +
                    (C134 * C342 + C379 + C379 + C121 * C366 + C136 * C343 +
                     C380 + C380 + C122 * C367 + C138 * C344 + C381 + C381 +
                     C123 * C368 + C140 * C345 + C382 + C382 + C124 * C369) *
                        C152080 * C152054 * C151869 * C3585) *
                       C151828 +
                   ((C134 * C340 + C383 + C383 + C121 * C364 + C136 * C339 +
                     C384 + C384 + C122 * C363 + C138 * C338 + C385 + C385 +
                     C123 * C362 + C140 * C346 + C386 + C386 + C124 * C370) *
                        C152080 * C152054 * C151869 * C151917 -
                    (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 +
                     C172 + C172 + C123 * C161 + C136 * C144 + C173 + C173 +
                     C122 * C160 + C134 * C143 + C174 + C174 + C121 * C159) *
                        C152080 * C152054 * C151869 * C151910 -
                    (C140 * C347 + C387 + C387 + C124 * C371 + C138 * C345 +
                     C388 + C388 + C123 * C369 + C136 * C344 + C389 + C389 +
                     C122 * C368 + C134 * C343 + C390 + C390 + C121 * C367) *
                        C152080 * C152054 * C151869 * C3585) *
                       C151837 +
                   ((C134 * C144 + C175 + C175 + C121 * C160 + C136 * C145 +
                     C176 + C176 + C122 * C161 + C138 * C146 + C177 + C177 +
                     C123 * C162 + C140 * C147 + C178 + C178 + C124 * C163) *
                        C152080 * C152054 * C151869 * C151910 -
                    (C140 * C348 + C391 + C391 + C124 * C372 + C138 * C346 +
                     C392 + C392 + C123 * C370 + C136 * C338 + C393 + C393 +
                     C122 * C362 + C134 * C339 + C394 + C394 + C121 * C363) *
                        C152080 * C152054 * C151869 * C151917 +
                    (C134 * C344 + C395 + C395 + C121 * C368 + C136 * C345 +
                     C396 + C396 + C122 * C369 + C138 * C347 + C397 + C397 +
                     C123 * C371 + C140 * C349 + C398 + C398 + C124 * C373) *
                        C152080 * C152054 * C151869 * C3585) *
                       C3588)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C23043 * C142 + C23048 + C23048 + C152149 * C158 +
                      C23045 * C143 + C23049 + C23049 + C151796 * C159) *
                         C152080 * C23040 +
                     (C23380 + C23381) * C152080 * C23041 + C23401 * C23042) *
                        C151869 * C151910 -
                    (C24789 * C23042 + (C23383 + C23382) * C152080 * C23041 +
                     (C23381 + C23380) * C152080 * C23040) *
                        C151869 * C151917 +
                    (C23401 * C23040 + (C23385 + C23384) * C152080 * C23041 +
                     C24803 * C23042) *
                        C151869 * C3585) *
                       C151828 +
                   (((C23386 + C23387) * C152080 * C23040 +
                     (C23388 + C23389) * C152080 * C23041 + C25279 * C23042) *
                        C151869 * C151917 -
                    (C23402 * C23042 + (C23387 + C23386) * C152080 * C23041 +
                     (C23045 * C144 + C23058 + C23058 + C151796 * C160 +
                      C23043 * C143 + C23059 + C23059 + C152149 * C159) *
                         C152080 * C23040) *
                        C151869 * C151910 -
                    ((C25284 + C25285) * C152080 * C23042 +
                     (C23391 + C23390) * C152080 * C23041 + C23402 * C23040) *
                        C151869 * C3585) *
                       C151837 +
                   (((C23043 * C144 + C23060 + C23060 + C152149 * C160 +
                      C23045 * C145 + C23061 + C23061 + C151796 * C161) *
                         C152080 * C23040 +
                     (C23392 + C23393) * C152080 * C23041 + C23403 * C23042) *
                        C151869 * C151910 -
                    ((C23396 + C23397) * C152080 * C23042 +
                     (C23395 + C23394) * C152080 * C23041 +
                     (C23393 + C23392) * C152080 * C23040) *
                        C151869 * C151917 +
                    (C23403 * C23040 + (C23397 + C23396) * C152080 * C23041 +
                     (C23043 * C1359 + C23342 + C23342 + C152149 * C1375 +
                      C23045 * C1360 + C23343 + C23343 + C151796 * C1376) *
                         C152080 * C23042) *
                        C151869 * C3585) *
                       C3588)) /
                     (p * q * std::sqrt(p + q));
    d2ee[301] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
             C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
             C140 * C145 + C170 + C170 + C124 * C161) *
                C152080 * C152054 * C152173 -
            (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
             C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
             C134 * C550 + C587 + C587 + C121 * C574) *
                C152080 * C152054 * C151956) *
               C151910 +
           ((C134 * C1083 + C1102 + C1102 + C121 * C1095 + C136 * C1084 +
             C1103 + C1103 + C122 * C1096 + C138 * C1085 + C1104 + C1104 +
             C123 * C1097 + C140 * C1086 + C1105 + C1105 + C124 * C1098) *
                C152080 * C152054 * C151956 -
            (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
             C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
             C134 * C341 + C378 + C378 + C121 * C365) *
                C152080 * C152054 * C152173) *
               C151917 +
           ((C134 * C342 + C379 + C379 + C121 * C366 + C136 * C343 + C380 +
             C380 + C122 * C367 + C138 * C344 + C381 + C381 + C123 * C368 +
             C140 * C345 + C382 + C382 + C124 * C369) *
                C152080 * C152054 * C152173 -
            (C140 * C1535 + C1572 + C1572 + C124 * C1559 + C138 * C1536 +
             C1573 + C1573 + C123 * C1560 + C136 * C1537 + C1574 + C1574 +
             C122 * C1561 + C134 * C1538 + C1575 + C1575 + C121 * C1562) *
                C152080 * C152054 * C151956) *
               C3585) *
              C3241 +
          (((C134 * C549 + C592 + C592 + C121 * C573 + C136 * C548 + C593 +
             C593 + C122 * C572 + C138 * C547 + C594 + C594 + C123 * C571 +
             C140 * C555 + C595 + C595 + C124 * C579) *
                C152080 * C152054 * C151956 -
            (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
             C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
             C134 * C143 + C174 + C174 + C121 * C159) *
                C152080 * C152054 * C152173) *
               C151910 +
           ((C134 * C340 + C383 + C383 + C121 * C364 + C136 * C339 + C384 +
             C384 + C122 * C363 + C138 * C338 + C385 + C385 + C123 * C362 +
             C140 * C346 + C386 + C386 + C124 * C370) *
                C152080 * C152054 * C152173 -
            (C140 * C1087 + C1106 + C1106 + C124 * C1099 + C138 * C1086 +
             C1107 + C1107 + C123 * C1098 + C136 * C1085 + C1108 + C1108 +
             C122 * C1097 + C134 * C1084 + C1109 + C1109 + C121 * C1096) *
                C152080 * C152054 * C151956) *
               C151917 +
           ((C134 * C1537 + C1920 + C1920 + C121 * C1561 + C136 * C1536 +
             C1921 + C1921 + C122 * C1560 + C138 * C1535 + C1922 + C1922 +
             C123 * C1559 + C140 * C1916 + C1923 + C1923 + C124 * C1918) *
                C152080 * C152054 * C151956 -
            (C140 * C347 + C387 + C387 + C124 * C371 + C138 * C345 + C388 +
             C388 + C123 * C369 + C136 * C344 + C389 + C389 + C122 * C368 +
             C134 * C343 + C390 + C390 + C121 * C367) *
                C152080 * C152054 * C152173) *
               C3585) *
              C151834)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
              C23049 + C23049 + C151796 * C159) *
                 C152080 * C23040 +
             (C23380 + C23381) * C152080 * C23041 + C23401 * C23042) *
                C152173 -
            (C25051 * C23042 + (C24420 + C24421) * C152080 * C23041 +
             (C23045 * C549 + C23626 + C23626 + C151796 * C573 + C23043 * C550 +
              C23627 + C23627 + C152149 * C574) *
                 C152080 * C23040) *
                C151956) *
               C151910 +
           (((C24421 + C24420) * C152080 * C23040 +
             (C24419 + C24418) * C152080 * C23041 + C25797 * C23042) *
                C151956 -
            (C24789 * C23042 + (C23383 + C23382) * C152080 * C23041 +
             (C23381 + C23380) * C152080 * C23040) *
                C152173) *
               C151917 +
           ((C23401 * C23040 + (C23385 + C23384) * C152080 * C23041 +
             C24803 * C23042) *
                C152173 -
            ((C25802 + C25803) * C152080 * C23042 +
             (C25073 + C25072) * C152080 * C23041 + C25051 * C23040) *
                C151956) *
               C3585) *
              C3241 +
          ((((C23043 * C549 + C23634 + C23634 + C152149 * C573 + C23045 * C548 +
              C23635 + C23635 + C151796 * C572) *
                 C152080 * C23040 +
             (C24422 + C24423) * C152080 * C23041 + C25583 * C23042) *
                C151956 -
            (C23402 * C23042 + (C23387 + C23386) * C152080 * C23041 +
             (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
              C23059 + C23059 + C152149 * C159) *
                 C152080 * C23040) *
                C152173) *
               C151910 +
           (((C23386 + C23387) * C152080 * C23040 +
             (C23388 + C23389) * C152080 * C23041 + C25279 * C23042) *
                C152173 -
            ((C25588 + C25589) * C152080 * C23042 +
             (C24425 + C24424) * C152080 * C23041 +
             (C24423 + C24422) * C152080 * C23040) *
                C151956) *
               C151917 +
           ((C25583 * C23040 + (C25589 + C25588) * C152080 * C23041 +
             (C23043 * C8842 + C25581 + C25581 + C152149 * C8848 +
              C23045 * C8843 + C25582 + C25582 + C151796 * C8849) *
                 C152080 * C23042) *
                C151956 -
            ((C25284 + C25285) * C152080 * C23042 +
             (C23391 + C23390) * C152080 * C23041 + C23402 * C23040) *
                C152173) *
               C3585) *
              C151834)) /
            (p * q * std::sqrt(p + q));
    d2ee[302] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
            C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
            C140 * C145 + C170 + C170 + C124 * C161) *
               C152080 * C152054 * C151869 * C152265 -
           (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
            C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
            C134 * C341 + C378 + C378 + C121 * C365) *
               C152080 * C152054 * C151869 * C152261 +
           (C134 * C342 + C379 + C379 + C121 * C366 + C136 * C343 + C380 +
            C380 + C122 * C367 + C138 * C344 + C381 + C381 + C123 * C368 +
            C140 * C345 + C382 + C382 + C124 * C369) *
               C152080 * C152054 * C151869 * C152249 -
           (C140 * C1353 + C1378 + C1378 + C124 * C1369 + C138 * C1354 + C1379 +
            C1379 + C123 * C1370 + C136 * C1355 + C1380 + C1380 + C122 * C1371 +
            C134 * C1356 + C1381 + C1381 + C121 * C1372) *
               C152080 * C152054 * C151869 * C152224) *
              C3241 +
          ((C134 * C340 + C383 + C383 + C121 * C364 + C136 * C339 + C384 +
            C384 + C122 * C363 + C138 * C338 + C385 + C385 + C123 * C362 +
            C140 * C346 + C386 + C386 + C124 * C370) *
               C152080 * C152054 * C151869 * C152261 -
           (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
            C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
            C134 * C143 + C174 + C174 + C121 * C159) *
               C152080 * C152054 * C151869 * C152265 -
           (C140 * C347 + C387 + C387 + C124 * C371 + C138 * C345 + C388 +
            C388 + C123 * C369 + C136 * C344 + C389 + C389 + C122 * C368 +
            C134 * C343 + C390 + C390 + C121 * C367) *
               C152080 * C152054 * C151869 * C152249 +
           (C134 * C1355 + C1719 + C1719 + C121 * C1371 + C136 * C1354 + C1720 +
            C1720 + C122 * C1370 + C138 * C1353 + C1721 + C1721 + C123 * C1369 +
            C140 * C1715 + C1722 + C1722 + C124 * C1717) *
               C152080 * C152054 * C151869 * C152224) *
              C151834)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
            C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
            C140 * C145 + C170 + C170 + C124 * C161) *
               C152080 * C152054 * C151869 * C3101 -
           (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
            C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
            C134 * C341 + C378 + C378 + C121 * C365) *
               C152080 * C152054 * C151869 * C151914) *
              C152264 +
          ((C134 * C340 + C383 + C383 + C121 * C364 + C136 * C339 + C384 +
            C384 + C122 * C363 + C138 * C338 + C385 + C385 + C123 * C362 +
            C140 * C346 + C386 + C386 + C124 * C370) *
               C152080 * C152054 * C151869 * C151914 -
           (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
            C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
            C134 * C143 + C174 + C174 + C121 * C159) *
               C152080 * C152054 * C151869 * C3101) *
              C152257 +
          ((C134 * C144 + C175 + C175 + C121 * C160 + C136 * C145 + C176 +
            C176 + C122 * C161 + C138 * C146 + C177 + C177 + C123 * C162 +
            C140 * C147 + C178 + C178 + C124 * C163) *
               C152080 * C152054 * C151869 * C3101 -
           (C140 * C348 + C391 + C391 + C124 * C372 + C138 * C346 + C392 +
            C392 + C123 * C370 + C136 * C338 + C393 + C393 + C122 * C362 +
            C134 * C339 + C394 + C394 + C121 * C363) *
               C152080 * C152054 * C151869 * C151914) *
              C152242 +
          ((C134 * C338 + C747 + C747 + C121 * C362 + C136 * C346 + C748 +
            C748 + C122 * C370 + C138 * C348 + C749 + C749 + C123 * C372 +
            C140 * C743 + C750 + C750 + C124 * C745) *
               C152080 * C152054 * C151869 * C151914 -
           (C140 * C148 + C179 + C179 + C124 * C164 + C138 * C147 + C180 +
            C180 + C123 * C163 + C136 * C146 + C181 + C181 + C122 * C162 +
            C134 * C145 + C182 + C182 + C121 * C161) *
               C152080 * C152054 * C151869 * C3101) *
              C152218)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
             C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
             C140 * C145 + C170 + C170 + C124 * C161) *
                C152080 * C152054 * C152259 -
            (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
             C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
             C134 * C550 + C587 + C587 + C121 * C574) *
                C152080 * C152054 * C152246 +
            (C134 * C551 + C588 + C588 + C121 * C575 + C136 * C552 + C589 +
             C589 + C122 * C576 + C138 * C553 + C590 + C590 + C123 * C577 +
             C140 * C554 + C591 + C591 + C124 * C578) *
                C152080 * C152054 * C152217) *
               C3101 +
           ((C134 * C1083 + C1102 + C1102 + C121 * C1095 + C136 * C1084 +
             C1103 + C1103 + C122 * C1096 + C138 * C1085 + C1104 + C1104 +
             C123 * C1097 + C140 * C1086 + C1105 + C1105 + C124 * C1098) *
                C152080 * C152054 * C152246 -
            (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
             C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
             C134 * C341 + C378 + C378 + C121 * C365) *
                C152080 * C152054 * C152259 -
            (C140 * C1531 + C1568 + C1568 + C124 * C1555 + C138 * C1532 +
             C1569 + C1569 + C123 * C1556 + C136 * C1533 + C1570 + C1570 +
             C122 * C1557 + C134 * C1534 + C1571 + C1571 + C121 * C1558) *
                C152080 * C152054 * C152217) *
               C151914) *
              C3241 +
          (((C134 * C549 + C592 + C592 + C121 * C573 + C136 * C548 + C593 +
             C593 + C122 * C572 + C138 * C547 + C594 + C594 + C123 * C571 +
             C140 * C555 + C595 + C595 + C124 * C579) *
                C152080 * C152054 * C152246 -
            (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
             C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
             C134 * C143 + C174 + C174 + C121 * C159) *
                C152080 * C152054 * C152259 -
            (C140 * C556 + C596 + C596 + C124 * C580 + C138 * C554 + C597 +
             C597 + C123 * C578 + C136 * C553 + C598 + C598 + C122 * C577 +
             C134 * C552 + C599 + C599 + C121 * C576) *
                C152080 * C152054 * C152217) *
               C3101 +
           ((C134 * C340 + C383 + C383 + C121 * C364 + C136 * C339 + C384 +
             C384 + C122 * C363 + C138 * C338 + C385 + C385 + C123 * C362 +
             C140 * C346 + C386 + C386 + C124 * C370) *
                C152080 * C152054 * C152259 -
            (C140 * C1087 + C1106 + C1106 + C124 * C1099 + C138 * C1086 +
             C1107 + C1107 + C123 * C1098 + C136 * C1085 + C1108 + C1108 +
             C122 * C1097 + C134 * C1084 + C1109 + C1109 + C121 * C1096) *
                C152080 * C152054 * C152246 +
            (C134 * C1533 + C2681 + C2681 + C121 * C1557 + C136 * C1532 +
             C2682 + C2682 + C122 * C1556 + C138 * C1531 + C2683 + C2683 +
             C123 * C1555 + C140 * C2677 + C2684 + C2684 + C124 * C2679) *
                C152080 * C152054 * C152217) *
               C151914) *
              C151834)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
             C23049 + C23049 + C151796 * C159) *
                C152080 * C23040 +
            (C23380 + C23381) * C152080 * C23041 + C23401 * C23042) *
               C151869 * C3101 -
           (C24789 * C23042 + (C23383 + C23382) * C152080 * C23041 +
            (C23381 + C23380) * C152080 * C23040) *
               C151869 * C151914) *
              C152264 +
          (((C23386 + C23387) * C152080 * C23040 +
            (C23388 + C23389) * C152080 * C23041 + C25279 * C23042) *
               C151869 * C151914 -
           (C23402 * C23042 + (C23387 + C23386) * C152080 * C23041 +
            (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
             C23059 + C23059 + C152149 * C159) *
                C152080 * C23040) *
               C151869 * C3101) *
              C152257 +
          (((C23043 * C144 + C23060 + C23060 + C152149 * C160 + C23045 * C145 +
             C23061 + C23061 + C151796 * C161) *
                C152080 * C23040 +
            (C23392 + C23393) * C152080 * C23041 + C23403 * C23042) *
               C151869 * C3101 -
           ((C23396 + C23397) * C152080 * C23042 +
            (C23395 + C23394) * C152080 * C23041 +
            (C23393 + C23392) * C152080 * C23040) *
               C151869 * C151914) *
              C152242 +
          (((C23870 + C23871) * C152080 * C23040 +
            (C23872 + C23873) * C152080 * C23041 +
            (C23043 * C1353 + C23860 + C23860 + C152149 * C1369 +
             C23045 * C1715 + C23861 + C23861 + C151796 * C1717) *
                C152080 * C23042) *
               C151869 * C151914 -
           ((C23873 + C23872) * C152080 * C23042 +
            (C23871 + C23870) * C152080 * C23041 +
            (C23045 * C146 + C23070 + C23070 + C151796 * C162 + C23043 * C145 +
             C23071 + C23071 + C152149 * C161) *
                C152080 * C23040) *
               C151869 * C3101) *
              C152218)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
             C23049 + C23049 + C151796 * C159) *
                C152080 * C23040 +
            (C23380 + C23381) * C152080 * C23041 + C23401 * C23042) *
               C151869 * C152265 -
           (C24789 * C23042 + (C23383 + C23382) * C152080 * C23041 +
            (C23381 + C23380) * C152080 * C23040) *
               C151869 * C152261 +
           (C23401 * C23040 + (C23385 + C23384) * C152080 * C23041 +
            C24803 * C23042) *
               C151869 * C152249 -
           ((C24800 + C24801) * C152080 * C23042 +
            (C24799 + C24798) * C152080 * C23041 + C24789 * C23040) *
               C151869 * C152224) *
              C3241 +
          (((C23386 + C23387) * C152080 * C23040 +
            (C23388 + C23389) * C152080 * C23041 + C25279 * C23042) *
               C151869 * C152261 -
           (C23402 * C23042 + (C23387 + C23386) * C152080 * C23041 +
            (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
             C23059 + C23059 + C152149 * C159) *
                C152080 * C23040) *
               C151869 * C152265 -
           ((C25284 + C25285) * C152080 * C23042 +
            (C23391 + C23390) * C152080 * C23041 + C23402 * C23040) *
               C151869 * C152249 +
           (C25279 * C23040 + (C25285 + C25284) * C152080 * C23041 +
            (C23043 * C7802 + C25277 + C25277 + C152149 * C7808 +
             C23045 * C7803 + C25278 + C25278 + C151796 * C7809) *
                C152080 * C23042) *
               C151869 * C152224) *
              C151834)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
              C23049 + C23049 + C151796 * C159) *
                 C152080 * C23040 +
             (C23380 + C23381) * C152080 * C23041 + C23401 * C23042) *
                C152259 -
            (C25051 * C23042 + (C24420 + C24421) * C152080 * C23041 +
             (C23045 * C549 + C23626 + C23626 + C151796 * C573 + C23043 * C550 +
              C23627 + C23627 + C152149 * C574) *
                 C152080 * C23040) *
                C152246 +
            ((C23043 * C551 + C23628 + C23628 + C152149 * C575 + C23045 * C552 +
              C23629 + C23629 + C151796 * C576) *
                 C152080 * C23040 +
             (C25068 + C25069) * C152080 * C23041 + C25077 * C23042) *
                C152217) *
               C3101 +
           (((C24421 + C24420) * C152080 * C23040 +
             (C24419 + C24418) * C152080 * C23041 + C25797 * C23042) *
                C152246 -
            (C24789 * C23042 + (C23383 + C23382) * C152080 * C23041 +
             (C23381 + C23380) * C152080 * C23040) *
                C152259 -
            ((C25074 + C25075) * C152080 * C23042 +
             (C25071 + C25070) * C152080 * C23041 +
             (C25069 + C25068) * C152080 * C23040) *
                C152217) *
               C151914) *
              C3241 +
          ((((C23043 * C549 + C23634 + C23634 + C152149 * C573 + C23045 * C548 +
              C23635 + C23635 + C151796 * C572) *
                 C152080 * C23040 +
             (C24422 + C24423) * C152080 * C23041 + C25583 * C23042) *
                C152246 -
            (C23402 * C23042 + (C23387 + C23386) * C152080 * C23041 +
             (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
              C23059 + C23059 + C152149 * C159) *
                 C152080 * C23040) *
                C152259 -
            ((C26688 + C26689) * C152080 * C23042 +
             (C26690 + C26691) * C152080 * C23041 +
             (C23045 * C553 + C23644 + C23644 + C151796 * C577 + C23043 * C552 +
              C23645 + C23645 + C152149 * C576) *
                 C152080 * C23040) *
                C152217) *
               C3101 +
           (((C23386 + C23387) * C152080 * C23040 +
             (C23388 + C23389) * C152080 * C23041 + C25279 * C23042) *
                C152259 -
            ((C25588 + C25589) * C152080 * C23042 +
             (C24425 + C24424) * C152080 * C23041 +
             (C24423 + C24422) * C152080 * C23040) *
                C152246 +
            ((C26691 + C26690) * C152080 * C23040 +
             (C26689 + C26688) * C152080 * C23041 +
             (C23043 * C8065 + C26678 + C26678 + C152149 * C8071 +
              C23045 * C8066 + C26679 + C26679 + C151796 * C8072) *
                 C152080 * C23042) *
                C152217) *
               C151914) *
              C151834)) /
            (p * q * std::sqrt(p + q));
    d2ee[303] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
             C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
             C140 * C145 + C170 + C170 + C124 * C161) *
                C152080 * C152054 * C152173 -
            (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
             C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
             C134 * C550 + C587 + C587 + C121 * C574) *
                C152080 * C152054 * C151956) *
               C3101 +
           ((C134 * C1083 + C1102 + C1102 + C121 * C1095 + C136 * C1084 +
             C1103 + C1103 + C122 * C1096 + C138 * C1085 + C1104 + C1104 +
             C123 * C1097 + C140 * C1086 + C1105 + C1105 + C124 * C1098) *
                C152080 * C152054 * C151956 -
            (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
             C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
             C134 * C341 + C378 + C378 + C121 * C365) *
                C152080 * C152054 * C152173) *
               C151914) *
              C151828 +
          (((C134 * C549 + C592 + C592 + C121 * C573 + C136 * C548 + C593 +
             C593 + C122 * C572 + C138 * C547 + C594 + C594 + C123 * C571 +
             C140 * C555 + C595 + C595 + C124 * C579) *
                C152080 * C152054 * C151956 -
            (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
             C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
             C134 * C143 + C174 + C174 + C121 * C159) *
                C152080 * C152054 * C152173) *
               C3101 +
           ((C134 * C340 + C383 + C383 + C121 * C364 + C136 * C339 + C384 +
             C384 + C122 * C363 + C138 * C338 + C385 + C385 + C123 * C362 +
             C140 * C346 + C386 + C386 + C124 * C370) *
                C152080 * C152054 * C152173 -
            (C140 * C1087 + C1106 + C1106 + C124 * C1099 + C138 * C1086 +
             C1107 + C1107 + C123 * C1098 + C136 * C1085 + C1108 + C1108 +
             C122 * C1097 + C134 * C1084 + C1109 + C1109 + C121 * C1096) *
                C152080 * C152054 * C151956) *
               C151914) *
              C151837 +
          (((C134 * C144 + C175 + C175 + C121 * C160 + C136 * C145 + C176 +
             C176 + C122 * C161 + C138 * C146 + C177 + C177 + C123 * C162 +
             C140 * C147 + C178 + C178 + C124 * C163) *
                C152080 * C152054 * C152173 -
            (C140 * C557 + C600 + C600 + C124 * C581 + C138 * C555 + C601 +
             C601 + C123 * C579 + C136 * C547 + C602 + C602 + C122 * C571 +
             C134 * C548 + C603 + C603 + C121 * C572) *
                C152080 * C152054 * C151956) *
               C3101 +
           ((C134 * C1085 + C1110 + C1110 + C121 * C1097 + C136 * C1086 +
             C1111 + C1111 + C122 * C1098 + C138 * C1087 + C1112 + C1112 +
             C123 * C1099 + C140 * C1088 + C1113 + C1113 + C124 * C1100) *
                C152080 * C152054 * C151956 -
            (C140 * C348 + C391 + C391 + C124 * C372 + C138 * C346 + C392 +
             C392 + C123 * C370 + C136 * C338 + C393 + C393 + C122 * C362 +
             C134 * C339 + C394 + C394 + C121 * C363) *
                C152080 * C152054 * C152173) *
               C151914) *
              C3588)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
              C23049 + C23049 + C151796 * C159) *
                 C152080 * C23040 +
             (C23380 + C23381) * C152080 * C23041 + C23401 * C23042) *
                C152173 -
            (C25051 * C23042 + (C24420 + C24421) * C152080 * C23041 +
             (C23045 * C549 + C23626 + C23626 + C151796 * C573 + C23043 * C550 +
              C23627 + C23627 + C152149 * C574) *
                 C152080 * C23040) *
                C151956) *
               C3101 +
           (((C24421 + C24420) * C152080 * C23040 +
             (C24419 + C24418) * C152080 * C23041 + C25797 * C23042) *
                C151956 -
            (C24789 * C23042 + (C23383 + C23382) * C152080 * C23041 +
             (C23381 + C23380) * C152080 * C23040) *
                C152173) *
               C151914) *
              C151828 +
          ((((C23043 * C549 + C23634 + C23634 + C152149 * C573 + C23045 * C548 +
              C23635 + C23635 + C151796 * C572) *
                 C152080 * C23040 +
             (C24422 + C24423) * C152080 * C23041 + C25583 * C23042) *
                C151956 -
            (C23402 * C23042 + (C23387 + C23386) * C152080 * C23041 +
             (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
              C23059 + C23059 + C152149 * C159) *
                 C152080 * C23040) *
                C152173) *
               C3101 +
           (((C23386 + C23387) * C152080 * C23040 +
             (C23388 + C23389) * C152080 * C23041 + C25279 * C23042) *
                C152173 -
            ((C25588 + C25589) * C152080 * C23042 +
             (C24425 + C24424) * C152080 * C23041 +
             (C24423 + C24422) * C152080 * C23040) *
                C151956) *
               C151914) *
              C151837 +
          ((((C23043 * C144 + C23060 + C23060 + C152149 * C160 + C23045 * C145 +
              C23061 + C23061 + C151796 * C161) *
                 C152080 * C23040 +
             (C23392 + C23393) * C152080 * C23041 + C23403 * C23042) *
                C152173 -
            ((C24426 + C24427) * C152080 * C23042 +
             (C24428 + C24429) * C152080 * C23041 +
             (C23045 * C547 + C23650 + C23650 + C151796 * C571 + C23043 * C548 +
              C23651 + C23651 + C152149 * C572) *
                 C152080 * C23040) *
                C151956) *
               C3101 +
           (((C24429 + C24428) * C152080 * C23040 +
             (C24427 + C24426) * C152080 * C23041 +
             (C23043 * C2055 + C24392 + C24392 + C152149 * C2063 +
              C23045 * C2056 + C24393 + C24393 + C151796 * C2064) *
                 C152080 * C23042) *
                C151956 -
            ((C23396 + C23397) * C152080 * C23042 +
             (C23395 + C23394) * C152080 * C23041 +
             (C23393 + C23392) * C152080 * C23040) *
                C152173) *
               C151914) *
              C3588)) /
            (p * q * std::sqrt(p + q));
    d2ee[304] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
            C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
            C140 * C145 + C170 + C170 + C124 * C161) *
               C152080 * C152054 * C151869 * C3101 -
           (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
            C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
            C134 * C341 + C378 + C378 + C121 * C365) *
               C152080 * C152054 * C151869 * C151914) *
              C152264 +
          ((C134 * C340 + C383 + C383 + C121 * C364 + C136 * C339 + C384 +
            C384 + C122 * C363 + C138 * C338 + C385 + C385 + C123 * C362 +
            C140 * C346 + C386 + C386 + C124 * C370) *
               C152080 * C152054 * C151869 * C151914 -
           (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
            C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
            C134 * C143 + C174 + C174 + C121 * C159) *
               C152080 * C152054 * C151869 * C3101) *
              C152257 +
          ((C134 * C144 + C175 + C175 + C121 * C160 + C136 * C145 + C176 +
            C176 + C122 * C161 + C138 * C146 + C177 + C177 + C123 * C162 +
            C140 * C147 + C178 + C178 + C124 * C163) *
               C152080 * C152054 * C151869 * C3101 -
           (C140 * C348 + C391 + C391 + C124 * C372 + C138 * C346 + C392 +
            C392 + C123 * C370 + C136 * C338 + C393 + C393 + C122 * C362 +
            C134 * C339 + C394 + C394 + C121 * C363) *
               C152080 * C152054 * C151869 * C151914) *
              C152242 +
          ((C134 * C338 + C747 + C747 + C121 * C362 + C136 * C346 + C748 +
            C748 + C122 * C370 + C138 * C348 + C749 + C749 + C123 * C372 +
            C140 * C743 + C750 + C750 + C124 * C745) *
               C152080 * C152054 * C151869 * C151914 -
           (C140 * C148 + C179 + C179 + C124 * C164 + C138 * C147 + C180 +
            C180 + C123 * C163 + C136 * C146 + C181 + C181 + C122 * C162 +
            C134 * C145 + C182 + C182 + C121 * C161) *
               C152080 * C152054 * C151869 * C3101) *
              C152218)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
            C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
            C140 * C145 + C170 + C170 + C124 * C161) *
               C152080 * C152054 * C151869 * C152265 -
           (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
            C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
            C134 * C341 + C378 + C378 + C121 * C365) *
               C152080 * C152054 * C151869 * C152261 +
           (C134 * C342 + C379 + C379 + C121 * C366 + C136 * C343 + C380 +
            C380 + C122 * C367 + C138 * C344 + C381 + C381 + C123 * C368 +
            C140 * C345 + C382 + C382 + C124 * C369) *
               C152080 * C152054 * C151869 * C152249 -
           (C140 * C1353 + C1378 + C1378 + C124 * C1369 + C138 * C1354 + C1379 +
            C1379 + C123 * C1370 + C136 * C1355 + C1380 + C1380 + C122 * C1371 +
            C134 * C1356 + C1381 + C1381 + C121 * C1372) *
               C152080 * C152054 * C151869 * C152224) *
              C3241 +
          ((C134 * C340 + C383 + C383 + C121 * C364 + C136 * C339 + C384 +
            C384 + C122 * C363 + C138 * C338 + C385 + C385 + C123 * C362 +
            C140 * C346 + C386 + C386 + C124 * C370) *
               C152080 * C152054 * C151869 * C152261 -
           (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
            C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
            C134 * C143 + C174 + C174 + C121 * C159) *
               C152080 * C152054 * C151869 * C152265 -
           (C140 * C347 + C387 + C387 + C124 * C371 + C138 * C345 + C388 +
            C388 + C123 * C369 + C136 * C344 + C389 + C389 + C122 * C368 +
            C134 * C343 + C390 + C390 + C121 * C367) *
               C152080 * C152054 * C151869 * C152249 +
           (C134 * C1355 + C1719 + C1719 + C121 * C1371 + C136 * C1354 + C1720 +
            C1720 + C122 * C1370 + C138 * C1353 + C1721 + C1721 + C123 * C1369 +
            C140 * C1715 + C1722 + C1722 + C124 * C1717) *
               C152080 * C152054 * C151869 * C152224) *
              C151834)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
             C23049 + C23049 + C151796 * C159) *
                C152080 * C23040 +
            (C23380 + C23381) * C152080 * C23041 + C23401 * C23042) *
               C151869 * C3101 -
           (C24789 * C23042 + (C23383 + C23382) * C152080 * C23041 +
            (C23381 + C23380) * C152080 * C23040) *
               C151869 * C151914) *
              C152264 +
          (((C23386 + C23387) * C152080 * C23040 +
            (C23388 + C23389) * C152080 * C23041 + C25279 * C23042) *
               C151869 * C151914 -
           (C23402 * C23042 + (C23387 + C23386) * C152080 * C23041 +
            (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
             C23059 + C23059 + C152149 * C159) *
                C152080 * C23040) *
               C151869 * C3101) *
              C152257 +
          (((C23043 * C144 + C23060 + C23060 + C152149 * C160 + C23045 * C145 +
             C23061 + C23061 + C151796 * C161) *
                C152080 * C23040 +
            (C23392 + C23393) * C152080 * C23041 + C23403 * C23042) *
               C151869 * C3101 -
           ((C23396 + C23397) * C152080 * C23042 +
            (C23395 + C23394) * C152080 * C23041 +
            (C23393 + C23392) * C152080 * C23040) *
               C151869 * C151914) *
              C152242 +
          (((C23870 + C23871) * C152080 * C23040 +
            (C23872 + C23873) * C152080 * C23041 +
            (C23043 * C1353 + C23860 + C23860 + C152149 * C1369 +
             C23045 * C1715 + C23861 + C23861 + C151796 * C1717) *
                C152080 * C23042) *
               C151869 * C151914 -
           ((C23873 + C23872) * C152080 * C23042 +
            (C23871 + C23870) * C152080 * C23041 +
            (C23045 * C146 + C23070 + C23070 + C151796 * C162 + C23043 * C145 +
             C23071 + C23071 + C152149 * C161) *
                C152080 * C23040) *
               C151869 * C3101) *
              C152218)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
             C23049 + C23049 + C151796 * C159) *
                C152080 * C23040 +
            (C23380 + C23381) * C152080 * C23041 + C23401 * C23042) *
               C151869 * C152265 -
           (C24789 * C23042 + (C23383 + C23382) * C152080 * C23041 +
            (C23381 + C23380) * C152080 * C23040) *
               C151869 * C152261 +
           (C23401 * C23040 + (C23385 + C23384) * C152080 * C23041 +
            C24803 * C23042) *
               C151869 * C152249 -
           ((C24800 + C24801) * C152080 * C23042 +
            (C24799 + C24798) * C152080 * C23041 + C24789 * C23040) *
               C151869 * C152224) *
              C3241 +
          (((C23386 + C23387) * C152080 * C23040 +
            (C23388 + C23389) * C152080 * C23041 + C25279 * C23042) *
               C151869 * C152261 -
           (C23402 * C23042 + (C23387 + C23386) * C152080 * C23041 +
            (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
             C23059 + C23059 + C152149 * C159) *
                C152080 * C23040) *
               C151869 * C152265 -
           ((C25284 + C25285) * C152080 * C23042 +
            (C23391 + C23390) * C152080 * C23041 + C23402 * C23040) *
               C151869 * C152249 +
           (C25279 * C23040 + (C25285 + C25284) * C152080 * C23041 +
            (C23043 * C7802 + C25277 + C25277 + C152149 * C7808 +
             C23045 * C7803 + C25278 + C25278 + C151796 * C7809) *
                C152080 * C23042) *
               C151869 * C152224) *
              C151834)) /
            (p * q * std::sqrt(p + q));
    d2ee[305] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
             C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
             C140 * C145 + C170 + C170 + C124 * C161) *
                C152080 * C152054 * C4107 -
            (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
             C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
             C134 * C550 + C587 + C587 + C121 * C574) *
                C152080 * C152054 * C151956) *
               C151910 +
           ((C134 * C1083 + C1102 + C1102 + C121 * C1095 + C136 * C1084 +
             C1103 + C1103 + C122 * C1096 + C138 * C1085 + C1104 + C1104 +
             C123 * C1097 + C140 * C1086 + C1105 + C1105 + C124 * C1098) *
                C152080 * C152054 * C151956 -
            (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
             C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
             C134 * C341 + C378 + C378 + C121 * C365) *
                C152080 * C152054 * C4107) *
               C151917 +
           ((C134 * C342 + C379 + C379 + C121 * C366 + C136 * C343 + C380 +
             C380 + C122 * C367 + C138 * C344 + C381 + C381 + C123 * C368 +
             C140 * C345 + C382 + C382 + C124 * C369) *
                C152080 * C152054 * C4107 -
            (C140 * C1535 + C1572 + C1572 + C124 * C1559 + C138 * C1536 +
             C1573 + C1573 + C123 * C1560 + C136 * C1537 + C1574 + C1574 +
             C122 * C1561 + C134 * C1538 + C1575 + C1575 + C121 * C1562) *
                C152080 * C152054 * C151956) *
               C3585) *
              C152158 +
          (((C134 * C549 + C592 + C592 + C121 * C573 + C136 * C548 + C593 +
             C593 + C122 * C572 + C138 * C547 + C594 + C594 + C123 * C571 +
             C140 * C555 + C595 + C595 + C124 * C579) *
                C152080 * C152054 * C151956 -
            (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
             C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
             C134 * C143 + C174 + C174 + C121 * C159) *
                C152080 * C152054 * C4107) *
               C151910 +
           ((C134 * C340 + C383 + C383 + C121 * C364 + C136 * C339 + C384 +
             C384 + C122 * C363 + C138 * C338 + C385 + C385 + C123 * C362 +
             C140 * C346 + C386 + C386 + C124 * C370) *
                C152080 * C152054 * C4107 -
            (C140 * C1087 + C1106 + C1106 + C124 * C1099 + C138 * C1086 +
             C1107 + C1107 + C123 * C1098 + C136 * C1085 + C1108 + C1108 +
             C122 * C1097 + C134 * C1084 + C1109 + C1109 + C121 * C1096) *
                C152080 * C152054 * C151956) *
               C151917 +
           ((C134 * C1537 + C1920 + C1920 + C121 * C1561 + C136 * C1536 +
             C1921 + C1921 + C122 * C1560 + C138 * C1535 + C1922 + C1922 +
             C123 * C1559 + C140 * C1916 + C1923 + C1923 + C124 * C1918) *
                C152080 * C152054 * C151956 -
            (C140 * C347 + C387 + C387 + C124 * C371 + C138 * C345 + C388 +
             C388 + C123 * C369 + C136 * C344 + C389 + C389 + C122 * C368 +
             C134 * C343 + C390 + C390 + C121 * C367) *
                C152080 * C152054 * C4107) *
               C3585) *
              C151834)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
              C23049 + C23049 + C151796 * C159) *
                 C152080 * C23040 +
             (C23380 + C23381) * C152080 * C23041 + C23401 * C23042) *
                C4107 -
            (C25051 * C23042 + (C24420 + C24421) * C152080 * C23041 +
             (C23045 * C549 + C23626 + C23626 + C151796 * C573 + C23043 * C550 +
              C23627 + C23627 + C152149 * C574) *
                 C152080 * C23040) *
                C151956) *
               C151910 +
           (((C24421 + C24420) * C152080 * C23040 +
             (C24419 + C24418) * C152080 * C23041 + C25797 * C23042) *
                C151956 -
            (C24789 * C23042 + (C23383 + C23382) * C152080 * C23041 +
             (C23381 + C23380) * C152080 * C23040) *
                C4107) *
               C151917 +
           ((C23401 * C23040 + (C23385 + C23384) * C152080 * C23041 +
             C24803 * C23042) *
                C4107 -
            ((C25802 + C25803) * C152080 * C23042 +
             (C25073 + C25072) * C152080 * C23041 + C25051 * C23040) *
                C151956) *
               C3585) *
              C152158 +
          ((((C23043 * C549 + C23634 + C23634 + C152149 * C573 + C23045 * C548 +
              C23635 + C23635 + C151796 * C572) *
                 C152080 * C23040 +
             (C24422 + C24423) * C152080 * C23041 + C25583 * C23042) *
                C151956 -
            (C23402 * C23042 + (C23387 + C23386) * C152080 * C23041 +
             (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
              C23059 + C23059 + C152149 * C159) *
                 C152080 * C23040) *
                C4107) *
               C151910 +
           (((C23386 + C23387) * C152080 * C23040 +
             (C23388 + C23389) * C152080 * C23041 + C25279 * C23042) *
                C4107 -
            ((C25588 + C25589) * C152080 * C23042 +
             (C24425 + C24424) * C152080 * C23041 +
             (C24423 + C24422) * C152080 * C23040) *
                C151956) *
               C151917 +
           ((C25583 * C23040 + (C25589 + C25588) * C152080 * C23041 +
             (C23043 * C8842 + C25581 + C25581 + C152149 * C8848 +
              C23045 * C8843 + C25582 + C25582 + C151796 * C8849) *
                 C152080 * C23042) *
                C151956 -
            ((C25284 + C25285) * C152080 * C23042 +
             (C23391 + C23390) * C152080 * C23041 + C23402 * C23040) *
                C4107) *
               C3585) *
              C151834)) /
            (p * q * std::sqrt(p + q));
    d2ee[306] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
            C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
            C140 * C145 + C170 + C170 + C124 * C161) *
               C152080 * C152054 * C151952 -
           (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
            C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
            C134 * C550 + C587 + C587 + C121 * C574) *
               C152080 * C152054 * C151959 +
           (C134 * C551 + C588 + C588 + C121 * C575 + C136 * C552 + C589 +
            C589 + C122 * C576 + C138 * C553 + C590 + C590 + C123 * C577 +
            C140 * C554 + C591 + C591 + C124 * C578) *
               C152080 * C152054 * C4779) *
              C151910 +
          ((C134 * C1083 + C1102 + C1102 + C121 * C1095 + C136 * C1084 + C1103 +
            C1103 + C122 * C1096 + C138 * C1085 + C1104 + C1104 + C123 * C1097 +
            C140 * C1086 + C1105 + C1105 + C124 * C1098) *
               C152080 * C152054 * C151959 -
           (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
            C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
            C134 * C341 + C378 + C378 + C121 * C365) *
               C152080 * C152054 * C151952 -
           (C140 * C1531 + C1568 + C1568 + C124 * C1555 + C138 * C1532 + C1569 +
            C1569 + C123 * C1556 + C136 * C1533 + C1570 + C1570 + C122 * C1557 +
            C134 * C1534 + C1571 + C1571 + C121 * C1558) *
               C152080 * C152054 * C4779) *
              C151917 +
          ((C134 * C342 + C379 + C379 + C121 * C366 + C136 * C343 + C380 +
            C380 + C122 * C367 + C138 * C344 + C381 + C381 + C123 * C368 +
            C140 * C345 + C382 + C382 + C124 * C369) *
               C152080 * C152054 * C151952 -
           (C140 * C1535 + C1572 + C1572 + C124 * C1559 + C138 * C1536 + C1573 +
            C1573 + C123 * C1560 + C136 * C1537 + C1574 + C1574 + C122 * C1561 +
            C134 * C1538 + C1575 + C1575 + C121 * C1562) *
               C152080 * C152054 * C151959 +
           (C134 * C1539 + C1576 + C1576 + C121 * C1563 + C136 * C1540 + C1577 +
            C1577 + C122 * C1564 + C138 * C1541 + C1578 + C1578 + C123 * C1565 +
            C140 * C1542 + C1579 + C1579 + C124 * C1566) *
               C152080 * C152054 * C4779) *
              C3585) *
         C151823) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
             C23049 + C23049 + C151796 * C159) *
                C152080 * C23040 +
            (C23380 + C23381) * C152080 * C23041 + C23401 * C23042) *
               C151952 -
           (C25051 * C23042 + (C24420 + C24421) * C152080 * C23041 +
            (C23045 * C549 + C23626 + C23626 + C151796 * C573 + C23043 * C550 +
             C23627 + C23627 + C152149 * C574) *
                C152080 * C23040) *
               C151959 +
           ((C23043 * C551 + C23628 + C23628 + C152149 * C575 + C23045 * C552 +
             C23629 + C23629 + C151796 * C576) *
                C152080 * C23040 +
            (C25068 + C25069) * C152080 * C23041 + C25077 * C23042) *
               C4779) *
              C151910 +
          (((C24421 + C24420) * C152080 * C23040 +
            (C24419 + C24418) * C152080 * C23041 + C25797 * C23042) *
               C151959 -
           (C24789 * C23042 + (C23383 + C23382) * C152080 * C23041 +
            (C23381 + C23380) * C152080 * C23040) *
               C151952 -
           ((C25074 + C25075) * C152080 * C23042 +
            (C25071 + C25070) * C152080 * C23041 +
            (C25069 + C25068) * C152080 * C23040) *
               C4779) *
              C151917 +
          ((C23401 * C23040 + (C23385 + C23384) * C152080 * C23041 +
            C24803 * C23042) *
               C151952 -
           ((C25802 + C25803) * C152080 * C23042 +
            (C25073 + C25072) * C152080 * C23041 + C25051 * C23040) *
               C151959 +
           (C25077 * C23040 + (C25075 + C25074) * C152080 * C23041 +
            (C23043 * C25021 + C25049 + C25049 + C152149 * C25025 +
             C23045 * C25022 + C25050 + C25050 + C151796 * C25026) *
                C152080 * C23042) *
               C4779) *
              C3585) *
         C151823) /
            (p * q * std::sqrt(p + q));
    d2ee[307] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
            C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
            C140 * C145 + C170 + C170 + C124 * C161) *
               C152080 * C152054 * C4107 -
           (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
            C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
            C134 * C550 + C587 + C587 + C121 * C574) *
               C152080 * C152054 * C151956) *
              C152265 +
          ((C134 * C1083 + C1102 + C1102 + C121 * C1095 + C136 * C1084 + C1103 +
            C1103 + C122 * C1096 + C138 * C1085 + C1104 + C1104 + C123 * C1097 +
            C140 * C1086 + C1105 + C1105 + C124 * C1098) *
               C152080 * C152054 * C151956 -
           (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
            C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
            C134 * C341 + C378 + C378 + C121 * C365) *
               C152080 * C152054 * C4107) *
              C152261 +
          ((C134 * C342 + C379 + C379 + C121 * C366 + C136 * C343 + C380 +
            C380 + C122 * C367 + C138 * C344 + C381 + C381 + C123 * C368 +
            C140 * C345 + C382 + C382 + C124 * C369) *
               C152080 * C152054 * C4107 -
           (C140 * C1535 + C1572 + C1572 + C124 * C1559 + C138 * C1536 + C1573 +
            C1573 + C123 * C1560 + C136 * C1537 + C1574 + C1574 + C122 * C1561 +
            C134 * C1538 + C1575 + C1575 + C121 * C1562) *
               C152080 * C152054 * C151956) *
              C152249 +
          ((C134 * C2053 + C2066 + C2066 + C121 * C2061 + C136 * C2054 + C2067 +
            C2067 + C122 * C2062 + C138 * C2055 + C2068 + C2068 + C123 * C2063 +
            C140 * C2056 + C2069 + C2069 + C124 * C2064) *
               C152080 * C152054 * C151956 -
           (C140 * C1353 + C1378 + C1378 + C124 * C1369 + C138 * C1354 + C1379 +
            C1379 + C123 * C1370 + C136 * C1355 + C1380 + C1380 + C122 * C1371 +
            C134 * C1356 + C1381 + C1381 + C121 * C1372) *
               C152080 * C152054 * C4107) *
              C152224) *
         C151823) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
             C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
             C140 * C145 + C170 + C170 + C124 * C161) *
                C152080 * C152054 * C4107 -
            (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
             C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
             C134 * C550 + C587 + C587 + C121 * C574) *
                C152080 * C152054 * C151956) *
               C3101 +
           ((C134 * C1083 + C1102 + C1102 + C121 * C1095 + C136 * C1084 +
             C1103 + C1103 + C122 * C1096 + C138 * C1085 + C1104 + C1104 +
             C123 * C1097 + C140 * C1086 + C1105 + C1105 + C124 * C1098) *
                C152080 * C152054 * C151956 -
            (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
             C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
             C134 * C341 + C378 + C378 + C121 * C365) *
                C152080 * C152054 * C4107) *
               C151914) *
              C152255 +
          (((C134 * C549 + C592 + C592 + C121 * C573 + C136 * C548 + C593 +
             C593 + C122 * C572 + C138 * C547 + C594 + C594 + C123 * C571 +
             C140 * C555 + C595 + C595 + C124 * C579) *
                C152080 * C152054 * C151956 -
            (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
             C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
             C134 * C143 + C174 + C174 + C121 * C159) *
                C152080 * C152054 * C4107) *
               C3101 +
           ((C134 * C340 + C383 + C383 + C121 * C364 + C136 * C339 + C384 +
             C384 + C122 * C363 + C138 * C338 + C385 + C385 + C123 * C362 +
             C140 * C346 + C386 + C386 + C124 * C370) *
                C152080 * C152054 * C4107 -
            (C140 * C1087 + C1106 + C1106 + C124 * C1099 + C138 * C1086 +
             C1107 + C1107 + C123 * C1098 + C136 * C1085 + C1108 + C1108 +
             C122 * C1097 + C134 * C1084 + C1109 + C1109 + C121 * C1096) *
                C152080 * C152054 * C151956) *
               C151914) *
              C152240 +
          (((C134 * C144 + C175 + C175 + C121 * C160 + C136 * C145 + C176 +
             C176 + C122 * C161 + C138 * C146 + C177 + C177 + C123 * C162 +
             C140 * C147 + C178 + C178 + C124 * C163) *
                C152080 * C152054 * C4107 -
            (C140 * C557 + C600 + C600 + C124 * C581 + C138 * C555 + C601 +
             C601 + C123 * C579 + C136 * C547 + C602 + C602 + C122 * C571 +
             C134 * C548 + C603 + C603 + C121 * C572) *
                C152080 * C152054 * C151956) *
               C3101 +
           ((C134 * C1085 + C1110 + C1110 + C121 * C1097 + C136 * C1086 +
             C1111 + C1111 + C122 * C1098 + C138 * C1087 + C1112 + C1112 +
             C123 * C1099 + C140 * C1088 + C1113 + C1113 + C124 * C1100) *
                C152080 * C152054 * C151956 -
            (C140 * C348 + C391 + C391 + C124 * C372 + C138 * C346 + C392 +
             C392 + C123 * C370 + C136 * C338 + C393 + C393 + C122 * C362 +
             C134 * C339 + C394 + C394 + C121 * C363) *
                C152080 * C152054 * C4107) *
               C151914) *
              C152208)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
            C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
            C140 * C145 + C170 + C170 + C124 * C161) *
               C152080 * C152054 * C152266 -
           (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
            C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
            C134 * C550 + C587 + C587 + C121 * C574) *
               C152080 * C152054 * C152263 +
           (C134 * C551 + C588 + C588 + C121 * C575 + C136 * C552 + C589 +
            C589 + C122 * C576 + C138 * C553 + C590 + C590 + C123 * C577 +
            C140 * C554 + C591 + C591 + C124 * C578) *
               C152080 * C152054 * C152252 -
           (C140 * C2451 + C2476 + C2476 + C124 * C2467 + C138 * C2452 + C2477 +
            C2477 + C123 * C2468 + C136 * C2453 + C2478 + C2478 + C122 * C2469 +
            C134 * C2454 + C2479 + C2479 + C121 * C2470) *
               C152080 * C152054 * C152230) *
              C3101 +
          ((C134 * C1083 + C1102 + C1102 + C121 * C1095 + C136 * C1084 + C1103 +
            C1103 + C122 * C1096 + C138 * C1085 + C1104 + C1104 + C123 * C1097 +
            C140 * C1086 + C1105 + C1105 + C124 * C1098) *
               C152080 * C152054 * C152263 -
           (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
            C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
            C134 * C341 + C378 + C378 + C121 * C365) *
               C152080 * C152054 * C152266 -
           (C140 * C1531 + C1568 + C1568 + C124 * C1555 + C138 * C1532 + C1569 +
            C1569 + C123 * C1556 + C136 * C1533 + C1570 + C1570 + C122 * C1557 +
            C134 * C1534 + C1571 + C1571 + C121 * C1558) *
               C152080 * C152054 * C152252 +
           (C134 * C2955 + C2968 + C2968 + C121 * C2963 + C136 * C2956 + C2969 +
            C2969 + C122 * C2964 + C138 * C2957 + C2970 + C2970 + C123 * C2965 +
            C140 * C2958 + C2971 + C2971 + C124 * C2966) *
               C152080 * C152054 * C152230) *
              C151914) *
         C151823) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
              C23049 + C23049 + C151796 * C159) *
                 C152080 * C23040 +
             (C23380 + C23381) * C152080 * C23041 + C23401 * C23042) *
                C4107 -
            (C25051 * C23042 + (C24420 + C24421) * C152080 * C23041 +
             (C23045 * C549 + C23626 + C23626 + C151796 * C573 + C23043 * C550 +
              C23627 + C23627 + C152149 * C574) *
                 C152080 * C23040) *
                C151956) *
               C3101 +
           (((C24421 + C24420) * C152080 * C23040 +
             (C24419 + C24418) * C152080 * C23041 + C25797 * C23042) *
                C151956 -
            (C24789 * C23042 + (C23383 + C23382) * C152080 * C23041 +
             (C23381 + C23380) * C152080 * C23040) *
                C4107) *
               C151914) *
              C152255 +
          ((((C23043 * C549 + C23634 + C23634 + C152149 * C573 + C23045 * C548 +
              C23635 + C23635 + C151796 * C572) *
                 C152080 * C23040 +
             (C24422 + C24423) * C152080 * C23041 + C25583 * C23042) *
                C151956 -
            (C23402 * C23042 + (C23387 + C23386) * C152080 * C23041 +
             (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
              C23059 + C23059 + C152149 * C159) *
                 C152080 * C23040) *
                C4107) *
               C3101 +
           (((C23386 + C23387) * C152080 * C23040 +
             (C23388 + C23389) * C152080 * C23041 + C25279 * C23042) *
                C4107 -
            ((C25588 + C25589) * C152080 * C23042 +
             (C24425 + C24424) * C152080 * C23041 +
             (C24423 + C24422) * C152080 * C23040) *
                C151956) *
               C151914) *
              C152240 +
          ((((C23043 * C144 + C23060 + C23060 + C152149 * C160 + C23045 * C145 +
              C23061 + C23061 + C151796 * C161) *
                 C152080 * C23040 +
             (C23392 + C23393) * C152080 * C23041 + C23403 * C23042) *
                C4107 -
            ((C24426 + C24427) * C152080 * C23042 +
             (C24428 + C24429) * C152080 * C23041 +
             (C23045 * C547 + C23650 + C23650 + C151796 * C571 + C23043 * C548 +
              C23651 + C23651 + C152149 * C572) *
                 C152080 * C23040) *
                C151956) *
               C3101 +
           (((C24429 + C24428) * C152080 * C23040 +
             (C24427 + C24426) * C152080 * C23041 +
             (C23043 * C2055 + C24392 + C24392 + C152149 * C2063 +
              C23045 * C2056 + C24393 + C24393 + C151796 * C2064) *
                 C152080 * C23042) *
                C151956 -
            ((C23396 + C23397) * C152080 * C23042 +
             (C23395 + C23394) * C152080 * C23041 +
             (C23393 + C23392) * C152080 * C23040) *
                C4107) *
               C151914) *
              C152208)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
             C23049 + C23049 + C151796 * C159) *
                C152080 * C23040 +
            (C23380 + C23381) * C152080 * C23041 + C23401 * C23042) *
               C4107 -
           (C25051 * C23042 + (C24420 + C24421) * C152080 * C23041 +
            (C23045 * C549 + C23626 + C23626 + C151796 * C573 + C23043 * C550 +
             C23627 + C23627 + C152149 * C574) *
                C152080 * C23040) *
               C151956) *
              C152265 +
          (((C24421 + C24420) * C152080 * C23040 +
            (C24419 + C24418) * C152080 * C23041 + C25797 * C23042) *
               C151956 -
           (C24789 * C23042 + (C23383 + C23382) * C152080 * C23041 +
            (C23381 + C23380) * C152080 * C23040) *
               C4107) *
              C152261 +
          ((C23401 * C23040 + (C23385 + C23384) * C152080 * C23041 +
            C24803 * C23042) *
               C4107 -
           ((C25802 + C25803) * C152080 * C23042 +
            (C25073 + C25072) * C152080 * C23041 + C25051 * C23040) *
               C151956) *
              C152249 +
          ((C25797 * C23040 + (C25803 + C25802) * C152080 * C23041 +
            (C23043 * C25783 + C25795 + C25795 + C152149 * C25787 +
             C23045 * C25784 + C25796 + C25796 + C151796 * C25788) *
                C152080 * C23042) *
               C151956 -
           ((C24800 + C24801) * C152080 * C23042 +
            (C24799 + C24798) * C152080 * C23041 + C24789 * C23040) *
               C4107) *
              C152224) *
         C151823) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
             C23049 + C23049 + C151796 * C159) *
                C152080 * C23040 +
            (C23380 + C23381) * C152080 * C23041 + C23401 * C23042) *
               C152266 -
           (C25051 * C23042 + (C24420 + C24421) * C152080 * C23041 +
            (C23045 * C549 + C23626 + C23626 + C151796 * C573 + C23043 * C550 +
             C23627 + C23627 + C152149 * C574) *
                C152080 * C23040) *
               C152263 +
           ((C23043 * C551 + C23628 + C23628 + C152149 * C575 + C23045 * C552 +
             C23629 + C23629 + C151796 * C576) *
                C152080 * C23040 +
            (C25068 + C25069) * C152080 * C23041 + C25077 * C23042) *
               C152252 -
           ((C27110 + C27111) * C152080 * C23042 +
            (C27112 + C27113) * C152080 * C23041 +
            (C23045 * C2453 + C26372 + C26372 + C151796 * C2469 +
             C23043 * C2454 + C26373 + C26373 + C152149 * C2470) *
                C152080 * C23040) *
               C152230) *
              C3101 +
          (((C24421 + C24420) * C152080 * C23040 +
            (C24419 + C24418) * C152080 * C23041 + C25797 * C23042) *
               C152263 -
           (C24789 * C23042 + (C23383 + C23382) * C152080 * C23041 +
            (C23381 + C23380) * C152080 * C23040) *
               C152266 -
           ((C25074 + C25075) * C152080 * C23042 +
            (C25071 + C25070) * C152080 * C23041 +
            (C25069 + C25068) * C152080 * C23040) *
               C152252 +
           ((C27113 + C27112) * C152080 * C23040 +
            (C27111 + C27110) * C152080 * C23041 +
            (C23043 * C27085 + C27100 + C27100 + C152149 * C27089 +
             C23045 * C27086 + C27101 + C27101 + C151796 * C27090) *
                C152080 * C23042) *
               C152230) *
              C151914) *
         C151823) /
            (p * q * std::sqrt(p + q));
    d2ee[308] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
             C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
             C140 * C145 + C170 + C170 + C124 * C161) *
                C152080 * C152054 * C151952 -
            (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
             C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
             C134 * C550 + C587 + C587 + C121 * C574) *
                C152080 * C152054 * C151959 +
            (C134 * C551 + C588 + C588 + C121 * C575 + C136 * C552 + C589 +
             C589 + C122 * C576 + C138 * C553 + C590 + C590 + C123 * C577 +
             C140 * C554 + C591 + C591 + C124 * C578) *
                C152080 * C152054 * C4779) *
               C3101 +
           ((C134 * C1083 + C1102 + C1102 + C121 * C1095 + C136 * C1084 +
             C1103 + C1103 + C122 * C1096 + C138 * C1085 + C1104 + C1104 +
             C123 * C1097 + C140 * C1086 + C1105 + C1105 + C124 * C1098) *
                C152080 * C152054 * C151959 -
            (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
             C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
             C134 * C341 + C378 + C378 + C121 * C365) *
                C152080 * C152054 * C151952 -
            (C140 * C1531 + C1568 + C1568 + C124 * C1555 + C138 * C1532 +
             C1569 + C1569 + C123 * C1556 + C136 * C1533 + C1570 + C1570 +
             C122 * C1557 + C134 * C1534 + C1571 + C1571 + C121 * C1558) *
                C152080 * C152054 * C4779) *
               C151914) *
              C152158 +
          (((C134 * C549 + C592 + C592 + C121 * C573 + C136 * C548 + C593 +
             C593 + C122 * C572 + C138 * C547 + C594 + C594 + C123 * C571 +
             C140 * C555 + C595 + C595 + C124 * C579) *
                C152080 * C152054 * C151959 -
            (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
             C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
             C134 * C143 + C174 + C174 + C121 * C159) *
                C152080 * C152054 * C151952 -
            (C140 * C556 + C596 + C596 + C124 * C580 + C138 * C554 + C597 +
             C597 + C123 * C578 + C136 * C553 + C598 + C598 + C122 * C577 +
             C134 * C552 + C599 + C599 + C121 * C576) *
                C152080 * C152054 * C4779) *
               C3101 +
           ((C134 * C340 + C383 + C383 + C121 * C364 + C136 * C339 + C384 +
             C384 + C122 * C363 + C138 * C338 + C385 + C385 + C123 * C362 +
             C140 * C346 + C386 + C386 + C124 * C370) *
                C152080 * C152054 * C151952 -
            (C140 * C1087 + C1106 + C1106 + C124 * C1099 + C138 * C1086 +
             C1107 + C1107 + C123 * C1098 + C136 * C1085 + C1108 + C1108 +
             C122 * C1097 + C134 * C1084 + C1109 + C1109 + C121 * C1096) *
                C152080 * C152054 * C151959 +
            (C134 * C1533 + C2681 + C2681 + C121 * C1557 + C136 * C1532 +
             C2682 + C2682 + C122 * C1556 + C138 * C1531 + C2683 + C2683 +
             C123 * C1555 + C140 * C2677 + C2684 + C2684 + C124 * C2679) *
                C152080 * C152054 * C4779) *
               C151914) *
              C151834)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
              C23049 + C23049 + C151796 * C159) *
                 C152080 * C23040 +
             (C23380 + C23381) * C152080 * C23041 + C23401 * C23042) *
                C151952 -
            (C25051 * C23042 + (C24420 + C24421) * C152080 * C23041 +
             (C23045 * C549 + C23626 + C23626 + C151796 * C573 + C23043 * C550 +
              C23627 + C23627 + C152149 * C574) *
                 C152080 * C23040) *
                C151959 +
            ((C23043 * C551 + C23628 + C23628 + C152149 * C575 + C23045 * C552 +
              C23629 + C23629 + C151796 * C576) *
                 C152080 * C23040 +
             (C25068 + C25069) * C152080 * C23041 + C25077 * C23042) *
                C4779) *
               C3101 +
           (((C24421 + C24420) * C152080 * C23040 +
             (C24419 + C24418) * C152080 * C23041 + C25797 * C23042) *
                C151959 -
            (C24789 * C23042 + (C23383 + C23382) * C152080 * C23041 +
             (C23381 + C23380) * C152080 * C23040) *
                C151952 -
            ((C25074 + C25075) * C152080 * C23042 +
             (C25071 + C25070) * C152080 * C23041 +
             (C25069 + C25068) * C152080 * C23040) *
                C4779) *
               C151914) *
              C152158 +
          ((((C23043 * C549 + C23634 + C23634 + C152149 * C573 + C23045 * C548 +
              C23635 + C23635 + C151796 * C572) *
                 C152080 * C23040 +
             (C24422 + C24423) * C152080 * C23041 + C25583 * C23042) *
                C151959 -
            (C23402 * C23042 + (C23387 + C23386) * C152080 * C23041 +
             (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
              C23059 + C23059 + C152149 * C159) *
                 C152080 * C23040) *
                C151952 -
            ((C26688 + C26689) * C152080 * C23042 +
             (C26690 + C26691) * C152080 * C23041 +
             (C23045 * C553 + C23644 + C23644 + C151796 * C577 + C23043 * C552 +
              C23645 + C23645 + C152149 * C576) *
                 C152080 * C23040) *
                C4779) *
               C3101 +
           (((C23386 + C23387) * C152080 * C23040 +
             (C23388 + C23389) * C152080 * C23041 + C25279 * C23042) *
                C151952 -
            ((C25588 + C25589) * C152080 * C23042 +
             (C24425 + C24424) * C152080 * C23041 +
             (C24423 + C24422) * C152080 * C23040) *
                C151959 +
            ((C26691 + C26690) * C152080 * C23040 +
             (C26689 + C26688) * C152080 * C23041 +
             (C23043 * C8065 + C26678 + C26678 + C152149 * C8071 +
              C23045 * C8066 + C26679 + C26679 + C151796 * C8072) *
                 C152080 * C23042) *
                C4779) *
               C151914) *
              C151834)) /
            (p * q * std::sqrt(p + q));
    d2ee[309] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
             C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
             C140 * C145 + C170 + C170 + C124 * C161) *
                C152080 * C152054 * C4107 -
            (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
             C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
             C134 * C550 + C587 + C587 + C121 * C574) *
                C152080 * C152054 * C151956) *
               C3101 +
           ((C134 * C1083 + C1102 + C1102 + C121 * C1095 + C136 * C1084 +
             C1103 + C1103 + C122 * C1096 + C138 * C1085 + C1104 + C1104 +
             C123 * C1097 + C140 * C1086 + C1105 + C1105 + C124 * C1098) *
                C152080 * C152054 * C151956 -
            (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
             C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
             C134 * C341 + C378 + C378 + C121 * C365) *
                C152080 * C152054 * C4107) *
               C151914) *
              C152255 +
          (((C134 * C549 + C592 + C592 + C121 * C573 + C136 * C548 + C593 +
             C593 + C122 * C572 + C138 * C547 + C594 + C594 + C123 * C571 +
             C140 * C555 + C595 + C595 + C124 * C579) *
                C152080 * C152054 * C151956 -
            (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
             C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
             C134 * C143 + C174 + C174 + C121 * C159) *
                C152080 * C152054 * C4107) *
               C3101 +
           ((C134 * C340 + C383 + C383 + C121 * C364 + C136 * C339 + C384 +
             C384 + C122 * C363 + C138 * C338 + C385 + C385 + C123 * C362 +
             C140 * C346 + C386 + C386 + C124 * C370) *
                C152080 * C152054 * C4107 -
            (C140 * C1087 + C1106 + C1106 + C124 * C1099 + C138 * C1086 +
             C1107 + C1107 + C123 * C1098 + C136 * C1085 + C1108 + C1108 +
             C122 * C1097 + C134 * C1084 + C1109 + C1109 + C121 * C1096) *
                C152080 * C152054 * C151956) *
               C151914) *
              C152240 +
          (((C134 * C144 + C175 + C175 + C121 * C160 + C136 * C145 + C176 +
             C176 + C122 * C161 + C138 * C146 + C177 + C177 + C123 * C162 +
             C140 * C147 + C178 + C178 + C124 * C163) *
                C152080 * C152054 * C4107 -
            (C140 * C557 + C600 + C600 + C124 * C581 + C138 * C555 + C601 +
             C601 + C123 * C579 + C136 * C547 + C602 + C602 + C122 * C571 +
             C134 * C548 + C603 + C603 + C121 * C572) *
                C152080 * C152054 * C151956) *
               C3101 +
           ((C134 * C1085 + C1110 + C1110 + C121 * C1097 + C136 * C1086 +
             C1111 + C1111 + C122 * C1098 + C138 * C1087 + C1112 + C1112 +
             C123 * C1099 + C140 * C1088 + C1113 + C1113 + C124 * C1100) *
                C152080 * C152054 * C151956 -
            (C140 * C348 + C391 + C391 + C124 * C372 + C138 * C346 + C392 +
             C392 + C123 * C370 + C136 * C338 + C393 + C393 + C122 * C362 +
             C134 * C339 + C394 + C394 + C121 * C363) *
                C152080 * C152054 * C4107) *
               C151914) *
              C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
            C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
            C140 * C145 + C170 + C170 + C124 * C161) *
               C152080 * C152054 * C4107 -
           (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
            C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
            C134 * C550 + C587 + C587 + C121 * C574) *
               C152080 * C152054 * C151956) *
              C152265 +
          ((C134 * C1083 + C1102 + C1102 + C121 * C1095 + C136 * C1084 + C1103 +
            C1103 + C122 * C1096 + C138 * C1085 + C1104 + C1104 + C123 * C1097 +
            C140 * C1086 + C1105 + C1105 + C124 * C1098) *
               C152080 * C152054 * C151956 -
           (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
            C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
            C134 * C341 + C378 + C378 + C121 * C365) *
               C152080 * C152054 * C4107) *
              C152261 +
          ((C134 * C342 + C379 + C379 + C121 * C366 + C136 * C343 + C380 +
            C380 + C122 * C367 + C138 * C344 + C381 + C381 + C123 * C368 +
            C140 * C345 + C382 + C382 + C124 * C369) *
               C152080 * C152054 * C4107 -
           (C140 * C1535 + C1572 + C1572 + C124 * C1559 + C138 * C1536 + C1573 +
            C1573 + C123 * C1560 + C136 * C1537 + C1574 + C1574 + C122 * C1561 +
            C134 * C1538 + C1575 + C1575 + C121 * C1562) *
               C152080 * C152054 * C151956) *
              C152249 +
          ((C134 * C2053 + C2066 + C2066 + C121 * C2061 + C136 * C2054 + C2067 +
            C2067 + C122 * C2062 + C138 * C2055 + C2068 + C2068 + C123 * C2063 +
            C140 * C2056 + C2069 + C2069 + C124 * C2064) *
               C152080 * C152054 * C151956 -
           (C140 * C1353 + C1378 + C1378 + C124 * C1369 + C138 * C1354 + C1379 +
            C1379 + C123 * C1370 + C136 * C1355 + C1380 + C1380 + C122 * C1371 +
            C134 * C1356 + C1381 + C1381 + C121 * C1372) *
               C152080 * C152054 * C4107) *
              C152224) *
         C151823) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
              C23049 + C23049 + C151796 * C159) *
                 C152080 * C23040 +
             (C23380 + C23381) * C152080 * C23041 + C23401 * C23042) *
                C4107 -
            (C25051 * C23042 + (C24420 + C24421) * C152080 * C23041 +
             (C23045 * C549 + C23626 + C23626 + C151796 * C573 + C23043 * C550 +
              C23627 + C23627 + C152149 * C574) *
                 C152080 * C23040) *
                C151956) *
               C3101 +
           (((C24421 + C24420) * C152080 * C23040 +
             (C24419 + C24418) * C152080 * C23041 + C25797 * C23042) *
                C151956 -
            (C24789 * C23042 + (C23383 + C23382) * C152080 * C23041 +
             (C23381 + C23380) * C152080 * C23040) *
                C4107) *
               C151914) *
              C152255 +
          ((((C23043 * C549 + C23634 + C23634 + C152149 * C573 + C23045 * C548 +
              C23635 + C23635 + C151796 * C572) *
                 C152080 * C23040 +
             (C24422 + C24423) * C152080 * C23041 + C25583 * C23042) *
                C151956 -
            (C23402 * C23042 + (C23387 + C23386) * C152080 * C23041 +
             (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
              C23059 + C23059 + C152149 * C159) *
                 C152080 * C23040) *
                C4107) *
               C3101 +
           (((C23386 + C23387) * C152080 * C23040 +
             (C23388 + C23389) * C152080 * C23041 + C25279 * C23042) *
                C4107 -
            ((C25588 + C25589) * C152080 * C23042 +
             (C24425 + C24424) * C152080 * C23041 +
             (C24423 + C24422) * C152080 * C23040) *
                C151956) *
               C151914) *
              C152240 +
          ((((C23043 * C144 + C23060 + C23060 + C152149 * C160 + C23045 * C145 +
              C23061 + C23061 + C151796 * C161) *
                 C152080 * C23040 +
             (C23392 + C23393) * C152080 * C23041 + C23403 * C23042) *
                C4107 -
            ((C24426 + C24427) * C152080 * C23042 +
             (C24428 + C24429) * C152080 * C23041 +
             (C23045 * C547 + C23650 + C23650 + C151796 * C571 + C23043 * C548 +
              C23651 + C23651 + C152149 * C572) *
                 C152080 * C23040) *
                C151956) *
               C3101 +
           (((C24429 + C24428) * C152080 * C23040 +
             (C24427 + C24426) * C152080 * C23041 +
             (C23043 * C2055 + C24392 + C24392 + C152149 * C2063 +
              C23045 * C2056 + C24393 + C24393 + C151796 * C2064) *
                 C152080 * C23042) *
                C151956 -
            ((C23396 + C23397) * C152080 * C23042 +
             (C23395 + C23394) * C152080 * C23041 +
             (C23393 + C23392) * C152080 * C23040) *
                C4107) *
               C151914) *
              C152208)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
             C23049 + C23049 + C151796 * C159) *
                C152080 * C23040 +
            (C23380 + C23381) * C152080 * C23041 + C23401 * C23042) *
               C4107 -
           (C25051 * C23042 + (C24420 + C24421) * C152080 * C23041 +
            (C23045 * C549 + C23626 + C23626 + C151796 * C573 + C23043 * C550 +
             C23627 + C23627 + C152149 * C574) *
                C152080 * C23040) *
               C151956) *
              C152265 +
          (((C24421 + C24420) * C152080 * C23040 +
            (C24419 + C24418) * C152080 * C23041 + C25797 * C23042) *
               C151956 -
           (C24789 * C23042 + (C23383 + C23382) * C152080 * C23041 +
            (C23381 + C23380) * C152080 * C23040) *
               C4107) *
              C152261 +
          ((C23401 * C23040 + (C23385 + C23384) * C152080 * C23041 +
            C24803 * C23042) *
               C4107 -
           ((C25802 + C25803) * C152080 * C23042 +
            (C25073 + C25072) * C152080 * C23041 + C25051 * C23040) *
               C151956) *
              C152249 +
          ((C25797 * C23040 + (C25803 + C25802) * C152080 * C23041 +
            (C23043 * C25783 + C25795 + C25795 + C152149 * C25787 +
             C23045 * C25784 + C25796 + C25796 + C151796 * C25788) *
                C152080 * C23042) *
               C151956 -
           ((C24800 + C24801) * C152080 * C23042 +
            (C24799 + C24798) * C152080 * C23041 + C24789 * C23040) *
               C4107) *
              C152224) *
         C151823) /
            (p * q * std::sqrt(p + q));
    d2ee[310] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
            C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
            C140 * C145 + C170 + C170 + C124 * C161) *
               C152080 * C152054 * C151869 * C1709 -
           (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
            C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
            C134 * C341 + C378 + C378 + C121 * C365) *
               C152080 * C152054 * C151869 * C1710 +
           (C134 * C342 + C379 + C379 + C121 * C366 + C136 * C343 + C380 +
            C380 + C122 * C367 + C138 * C344 + C381 + C381 + C123 * C368 +
            C140 * C345 + C382 + C382 + C124 * C369) *
               C152080 * C152054 * C151869 * C1711 -
           (C140 * C1353 + C1378 + C1378 + C124 * C1369 + C138 * C1354 + C1379 +
            C1379 + C123 * C1370 + C136 * C1355 + C1380 + C1380 + C122 * C1371 +
            C134 * C1356 + C1381 + C1381 + C121 * C1372) *
               C152080 * C152054 * C151869 * C152224) *
              C152158 +
          ((C134 * C340 + C383 + C383 + C121 * C364 + C136 * C339 + C384 +
            C384 + C122 * C363 + C138 * C338 + C385 + C385 + C123 * C362 +
            C140 * C346 + C386 + C386 + C124 * C370) *
               C152080 * C152054 * C151869 * C1710 -
           (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
            C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
            C134 * C143 + C174 + C174 + C121 * C159) *
               C152080 * C152054 * C151869 * C1709 -
           (C140 * C347 + C387 + C387 + C124 * C371 + C138 * C345 + C388 +
            C388 + C123 * C369 + C136 * C344 + C389 + C389 + C122 * C368 +
            C134 * C343 + C390 + C390 + C121 * C367) *
               C152080 * C152054 * C151869 * C1711 +
           (C134 * C1355 + C1719 + C1719 + C121 * C1371 + C136 * C1354 + C1720 +
            C1720 + C122 * C1370 + C138 * C1353 + C1721 + C1721 + C123 * C1369 +
            C140 * C1715 + C1722 + C1722 + C124 * C1717) *
               C152080 * C152054 * C151869 * C152224) *
              C151834)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
            C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
            C140 * C145 + C170 + C170 + C124 * C161) *
               C152080 * C152054 * C151869 * C152172 -
           (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
            C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
            C134 * C341 + C378 + C378 + C121 * C365) *
               C152080 * C152054 * C151869 * C151914) *
              C739 +
          ((C134 * C340 + C383 + C383 + C121 * C364 + C136 * C339 + C384 +
            C384 + C122 * C363 + C138 * C338 + C385 + C385 + C123 * C362 +
            C140 * C346 + C386 + C386 + C124 * C370) *
               C152080 * C152054 * C151869 * C151914 -
           (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
            C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
            C134 * C143 + C174 + C174 + C121 * C159) *
               C152080 * C152054 * C151869 * C152172) *
              C740 +
          ((C134 * C144 + C175 + C175 + C121 * C160 + C136 * C145 + C176 +
            C176 + C122 * C161 + C138 * C146 + C177 + C177 + C123 * C162 +
            C140 * C147 + C178 + C178 + C124 * C163) *
               C152080 * C152054 * C151869 * C152172 -
           (C140 * C348 + C391 + C391 + C124 * C372 + C138 * C346 + C392 +
            C392 + C123 * C370 + C136 * C338 + C393 + C393 + C122 * C362 +
            C134 * C339 + C394 + C394 + C121 * C363) *
               C152080 * C152054 * C151869 * C151914) *
              C741 +
          ((C134 * C338 + C747 + C747 + C121 * C362 + C136 * C346 + C748 +
            C748 + C122 * C370 + C138 * C348 + C749 + C749 + C123 * C372 +
            C140 * C743 + C750 + C750 + C124 * C745) *
               C152080 * C152054 * C151869 * C151914 -
           (C140 * C148 + C179 + C179 + C124 * C164 + C138 * C147 + C180 +
            C180 + C123 * C163 + C136 * C146 + C181 + C181 + C122 * C162 +
            C134 * C145 + C182 + C182 + C121 * C161) *
               C152080 * C152054 * C151869 * C152172) *
              C152218)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
             C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
             C140 * C145 + C170 + C170 + C124 * C161) *
                C152080 * C152054 * C2215 -
            (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
             C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
             C134 * C550 + C587 + C587 + C121 * C574) *
                C152080 * C152054 * C2216 +
            (C134 * C551 + C588 + C588 + C121 * C575 + C136 * C552 + C589 +
             C589 + C122 * C576 + C138 * C553 + C590 + C590 + C123 * C577 +
             C140 * C554 + C591 + C591 + C124 * C578) *
                C152080 * C152054 * C152217) *
               C152172 +
           ((C134 * C1083 + C1102 + C1102 + C121 * C1095 + C136 * C1084 +
             C1103 + C1103 + C122 * C1096 + C138 * C1085 + C1104 + C1104 +
             C123 * C1097 + C140 * C1086 + C1105 + C1105 + C124 * C1098) *
                C152080 * C152054 * C2216 -
            (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
             C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
             C134 * C341 + C378 + C378 + C121 * C365) *
                C152080 * C152054 * C2215 -
            (C140 * C1531 + C1568 + C1568 + C124 * C1555 + C138 * C1532 +
             C1569 + C1569 + C123 * C1556 + C136 * C1533 + C1570 + C1570 +
             C122 * C1557 + C134 * C1534 + C1571 + C1571 + C121 * C1558) *
                C152080 * C152054 * C152217) *
               C151914) *
              C152158 +
          (((C134 * C549 + C592 + C592 + C121 * C573 + C136 * C548 + C593 +
             C593 + C122 * C572 + C138 * C547 + C594 + C594 + C123 * C571 +
             C140 * C555 + C595 + C595 + C124 * C579) *
                C152080 * C152054 * C2216 -
            (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
             C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
             C134 * C143 + C174 + C174 + C121 * C159) *
                C152080 * C152054 * C2215 -
            (C140 * C556 + C596 + C596 + C124 * C580 + C138 * C554 + C597 +
             C597 + C123 * C578 + C136 * C553 + C598 + C598 + C122 * C577 +
             C134 * C552 + C599 + C599 + C121 * C576) *
                C152080 * C152054 * C152217) *
               C152172 +
           ((C134 * C340 + C383 + C383 + C121 * C364 + C136 * C339 + C384 +
             C384 + C122 * C363 + C138 * C338 + C385 + C385 + C123 * C362 +
             C140 * C346 + C386 + C386 + C124 * C370) *
                C152080 * C152054 * C2215 -
            (C140 * C1087 + C1106 + C1106 + C124 * C1099 + C138 * C1086 +
             C1107 + C1107 + C123 * C1098 + C136 * C1085 + C1108 + C1108 +
             C122 * C1097 + C134 * C1084 + C1109 + C1109 + C121 * C1096) *
                C152080 * C152054 * C2216 +
            (C134 * C1533 + C2681 + C2681 + C121 * C1557 + C136 * C1532 +
             C2682 + C2682 + C122 * C1556 + C138 * C1531 + C2683 + C2683 +
             C123 * C1555 + C140 * C2677 + C2684 + C2684 + C124 * C2679) *
                C152080 * C152054 * C152217) *
               C151914) *
              C151834)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
             C23049 + C23049 + C151796 * C159) *
                C152080 * C23040 +
            (C23380 + C23381) * C152080 * C23041 + C23401 * C23042) *
               C151869 * C152172 -
           ((C23384 + C23385) * C152080 * C23042 +
            (C23383 + C23382) * C152080 * C23041 +
            (C23381 + C23380) * C152080 * C23040) *
               C151869 * C151914) *
              C739 +
          (((C23386 + C23387) * C152080 * C23040 +
            (C23388 + C23389) * C152080 * C23041 +
            (C23390 + C23391) * C152080 * C23042) *
               C151869 * C151914 -
           (C23402 * C23042 + (C23387 + C23386) * C152080 * C23041 +
            (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
             C23059 + C23059 + C152149 * C159) *
                C152080 * C23040) *
               C151869 * C152172) *
              C740 +
          (((C23043 * C144 + C23060 + C23060 + C152149 * C160 + C23045 * C145 +
             C23061 + C23061 + C151796 * C161) *
                C152080 * C23040 +
            (C23392 + C23393) * C152080 * C23041 + C23403 * C23042) *
               C151869 * C152172 -
           ((C23396 + C23397) * C152080 * C23042 +
            (C23395 + C23394) * C152080 * C23041 +
            (C23393 + C23392) * C152080 * C23040) *
               C151869 * C151914) *
              C741 +
          (((C23870 + C23871) * C152080 * C23040 +
            (C23872 + C23873) * C152080 * C23041 +
            (C23043 * C1353 + C23860 + C23860 + C152149 * C1369 +
             C23045 * C1715 + C23861 + C23861 + C151796 * C1717) *
                C152080 * C23042) *
               C151869 * C151914 -
           ((C23873 + C23872) * C152080 * C23042 +
            (C23871 + C23870) * C152080 * C23041 +
            (C23045 * C146 + C23070 + C23070 + C151796 * C162 + C23043 * C145 +
             C23071 + C23071 + C152149 * C161) *
                C152080 * C23040) *
               C151869 * C152172) *
              C152218)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
             C23049 + C23049 + C151796 * C159) *
                C152080 * C23040 +
            (C23380 + C23381) * C152080 * C23041 + C23401 * C23042) *
               C151869 * C1709 -
           (C24789 * C23042 + (C23383 + C23382) * C152080 * C23041 +
            (C23381 + C23380) * C152080 * C23040) *
               C151869 * C1710 +
           (C23401 * C23040 + (C23385 + C23384) * C152080 * C23041 +
            C24803 * C23042) *
               C151869 * C1711 -
           ((C24800 + C24801) * C152080 * C23042 +
            (C24799 + C24798) * C152080 * C23041 + C24789 * C23040) *
               C151869 * C152224) *
              C152158 +
          (((C23386 + C23387) * C152080 * C23040 +
            (C23388 + C23389) * C152080 * C23041 + C25279 * C23042) *
               C151869 * C1710 -
           (C23402 * C23042 + (C23387 + C23386) * C152080 * C23041 +
            (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
             C23059 + C23059 + C152149 * C159) *
                C152080 * C23040) *
               C151869 * C1709 -
           ((C25284 + C25285) * C152080 * C23042 +
            (C23391 + C23390) * C152080 * C23041 + C23402 * C23040) *
               C151869 * C1711 +
           (C25279 * C23040 + (C25285 + C25284) * C152080 * C23041 +
            (C23043 * C7802 + C25277 + C25277 + C152149 * C7808 +
             C23045 * C7803 + C25278 + C25278 + C151796 * C7809) *
                C152080 * C23042) *
               C151869 * C152224) *
              C151834)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
              C23049 + C23049 + C151796 * C159) *
                 C152080 * C23040 +
             (C23380 + C23381) * C152080 * C23041 + C23401 * C23042) *
                C2215 -
            (C25051 * C23042 + (C24420 + C24421) * C152080 * C23041 +
             (C23045 * C549 + C23626 + C23626 + C151796 * C573 + C23043 * C550 +
              C23627 + C23627 + C152149 * C574) *
                 C152080 * C23040) *
                C2216 +
            ((C23043 * C551 + C23628 + C23628 + C152149 * C575 + C23045 * C552 +
              C23629 + C23629 + C151796 * C576) *
                 C152080 * C23040 +
             (C25068 + C25069) * C152080 * C23041 + C25077 * C23042) *
                C152217) *
               C152172 +
           (((C24421 + C24420) * C152080 * C23040 +
             (C24419 + C24418) * C152080 * C23041 + C25797 * C23042) *
                C2216 -
            (C24789 * C23042 + (C23383 + C23382) * C152080 * C23041 +
             (C23381 + C23380) * C152080 * C23040) *
                C2215 -
            ((C25074 + C25075) * C152080 * C23042 +
             (C25071 + C25070) * C152080 * C23041 +
             (C25069 + C25068) * C152080 * C23040) *
                C152217) *
               C151914) *
              C152158 +
          ((((C23043 * C549 + C23634 + C23634 + C152149 * C573 + C23045 * C548 +
              C23635 + C23635 + C151796 * C572) *
                 C152080 * C23040 +
             (C24422 + C24423) * C152080 * C23041 + C25583 * C23042) *
                C2216 -
            (C23402 * C23042 + (C23387 + C23386) * C152080 * C23041 +
             (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
              C23059 + C23059 + C152149 * C159) *
                 C152080 * C23040) *
                C2215 -
            ((C26688 + C26689) * C152080 * C23042 +
             (C26690 + C26691) * C152080 * C23041 +
             (C23045 * C553 + C23644 + C23644 + C151796 * C577 + C23043 * C552 +
              C23645 + C23645 + C152149 * C576) *
                 C152080 * C23040) *
                C152217) *
               C152172 +
           (((C23386 + C23387) * C152080 * C23040 +
             (C23388 + C23389) * C152080 * C23041 + C25279 * C23042) *
                C2215 -
            ((C25588 + C25589) * C152080 * C23042 +
             (C24425 + C24424) * C152080 * C23041 +
             (C24423 + C24422) * C152080 * C23040) *
                C2216 +
            ((C26691 + C26690) * C152080 * C23040 +
             (C26689 + C26688) * C152080 * C23041 +
             (C23043 * C8065 + C26678 + C26678 + C152149 * C8071 +
              C23045 * C8066 + C26679 + C26679 + C151796 * C8072) *
                 C152080 * C23042) *
                C152217) *
               C151914) *
              C151834)) /
            (p * q * std::sqrt(p + q));
    d2ee[311] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
            C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
            C140 * C145 + C170 + C170 + C124 * C161) *
               C152080 * C152054 * C152173 -
           (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
            C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
            C134 * C550 + C587 + C587 + C121 * C574) *
               C152080 * C152054 * C151956) *
              C1709 +
          ((C134 * C1083 + C1102 + C1102 + C121 * C1095 + C136 * C1084 + C1103 +
            C1103 + C122 * C1096 + C138 * C1085 + C1104 + C1104 + C123 * C1097 +
            C140 * C1086 + C1105 + C1105 + C124 * C1098) *
               C152080 * C152054 * C151956 -
           (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
            C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
            C134 * C341 + C378 + C378 + C121 * C365) *
               C152080 * C152054 * C152173) *
              C1710 +
          ((C134 * C342 + C379 + C379 + C121 * C366 + C136 * C343 + C380 +
            C380 + C122 * C367 + C138 * C344 + C381 + C381 + C123 * C368 +
            C140 * C345 + C382 + C382 + C124 * C369) *
               C152080 * C152054 * C152173 -
           (C140 * C1535 + C1572 + C1572 + C124 * C1559 + C138 * C1536 + C1573 +
            C1573 + C123 * C1560 + C136 * C1537 + C1574 + C1574 + C122 * C1561 +
            C134 * C1538 + C1575 + C1575 + C121 * C1562) *
               C152080 * C152054 * C151956) *
              C1711 +
          ((C134 * C2053 + C2066 + C2066 + C121 * C2061 + C136 * C2054 + C2067 +
            C2067 + C122 * C2062 + C138 * C2055 + C2068 + C2068 + C123 * C2063 +
            C140 * C2056 + C2069 + C2069 + C124 * C2064) *
               C152080 * C152054 * C151956 -
           (C140 * C1353 + C1378 + C1378 + C124 * C1369 + C138 * C1354 + C1379 +
            C1379 + C123 * C1370 + C136 * C1355 + C1380 + C1380 + C122 * C1371 +
            C134 * C1356 + C1381 + C1381 + C121 * C1372) *
               C152080 * C152054 * C152173) *
              C152224) *
         C151823) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
             C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
             C140 * C145 + C170 + C170 + C124 * C161) *
                C152080 * C152054 * C152173 -
            (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
             C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
             C134 * C550 + C587 + C587 + C121 * C574) *
                C152080 * C152054 * C151956) *
               C152172 +
           ((C134 * C1083 + C1102 + C1102 + C121 * C1095 + C136 * C1084 +
             C1103 + C1103 + C122 * C1096 + C138 * C1085 + C1104 + C1104 +
             C123 * C1097 + C140 * C1086 + C1105 + C1105 + C124 * C1098) *
                C152080 * C152054 * C151956 -
            (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
             C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
             C134 * C341 + C378 + C378 + C121 * C365) *
                C152080 * C152054 * C152173) *
               C151914) *
              C335 +
          (((C134 * C549 + C592 + C592 + C121 * C573 + C136 * C548 + C593 +
             C593 + C122 * C572 + C138 * C547 + C594 + C594 + C123 * C571 +
             C140 * C555 + C595 + C595 + C124 * C579) *
                C152080 * C152054 * C151956 -
            (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
             C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
             C134 * C143 + C174 + C174 + C121 * C159) *
                C152080 * C152054 * C152173) *
               C152172 +
           ((C134 * C340 + C383 + C383 + C121 * C364 + C136 * C339 + C384 +
             C384 + C122 * C363 + C138 * C338 + C385 + C385 + C123 * C362 +
             C140 * C346 + C386 + C386 + C124 * C370) *
                C152080 * C152054 * C152173 -
            (C140 * C1087 + C1106 + C1106 + C124 * C1099 + C138 * C1086 +
             C1107 + C1107 + C123 * C1098 + C136 * C1085 + C1108 + C1108 +
             C122 * C1097 + C134 * C1084 + C1109 + C1109 + C121 * C1096) *
                C152080 * C152054 * C151956) *
               C151914) *
              C336 +
          (((C134 * C144 + C175 + C175 + C121 * C160 + C136 * C145 + C176 +
             C176 + C122 * C161 + C138 * C146 + C177 + C177 + C123 * C162 +
             C140 * C147 + C178 + C178 + C124 * C163) *
                C152080 * C152054 * C152173 -
            (C140 * C557 + C600 + C600 + C124 * C581 + C138 * C555 + C601 +
             C601 + C123 * C579 + C136 * C547 + C602 + C602 + C122 * C571 +
             C134 * C548 + C603 + C603 + C121 * C572) *
                C152080 * C152054 * C151956) *
               C152172 +
           ((C134 * C1085 + C1110 + C1110 + C121 * C1097 + C136 * C1086 +
             C1111 + C1111 + C122 * C1098 + C138 * C1087 + C1112 + C1112 +
             C123 * C1099 + C140 * C1088 + C1113 + C1113 + C124 * C1100) *
                C152080 * C152054 * C151956 -
            (C140 * C348 + C391 + C391 + C124 * C372 + C138 * C346 + C392 +
             C392 + C123 * C370 + C136 * C338 + C393 + C393 + C122 * C362 +
             C134 * C339 + C394 + C394 + C121 * C363) *
                C152080 * C152054 * C152173) *
               C151914) *
              C152208)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
            C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
            C140 * C145 + C170 + C170 + C124 * C161) *
               C152080 * C152054 * C2814 -
           (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
            C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
            C134 * C550 + C587 + C587 + C121 * C574) *
               C152080 * C152054 * C2815 +
           (C134 * C551 + C588 + C588 + C121 * C575 + C136 * C552 + C589 +
            C589 + C122 * C576 + C138 * C553 + C590 + C590 + C123 * C577 +
            C140 * C554 + C591 + C591 + C124 * C578) *
               C152080 * C152054 * C2816 -
           (C140 * C2451 + C2476 + C2476 + C124 * C2467 + C138 * C2452 + C2477 +
            C2477 + C123 * C2468 + C136 * C2453 + C2478 + C2478 + C122 * C2469 +
            C134 * C2454 + C2479 + C2479 + C121 * C2470) *
               C152080 * C152054 * C152230) *
              C152172 +
          ((C134 * C1083 + C1102 + C1102 + C121 * C1095 + C136 * C1084 + C1103 +
            C1103 + C122 * C1096 + C138 * C1085 + C1104 + C1104 + C123 * C1097 +
            C140 * C1086 + C1105 + C1105 + C124 * C1098) *
               C152080 * C152054 * C2815 -
           (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
            C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
            C134 * C341 + C378 + C378 + C121 * C365) *
               C152080 * C152054 * C2814 -
           (C140 * C1531 + C1568 + C1568 + C124 * C1555 + C138 * C1532 + C1569 +
            C1569 + C123 * C1556 + C136 * C1533 + C1570 + C1570 + C122 * C1557 +
            C134 * C1534 + C1571 + C1571 + C121 * C1558) *
               C152080 * C152054 * C2816 +
           (C134 * C2955 + C2968 + C2968 + C121 * C2963 + C136 * C2956 + C2969 +
            C2969 + C122 * C2964 + C138 * C2957 + C2970 + C2970 + C123 * C2965 +
            C140 * C2958 + C2971 + C2971 + C124 * C2966) *
               C152080 * C152054 * C152230) *
              C151914) *
         C151823) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
              C23049 + C23049 + C151796 * C159) *
                 C152080 * C23040 +
             (C23380 + C23381) * C152080 * C23041 + C23401 * C23042) *
                C152173 -
            ((C24418 + C24419) * C152080 * C23042 +
             (C24420 + C24421) * C152080 * C23041 +
             (C23045 * C549 + C23626 + C23626 + C151796 * C573 + C23043 * C550 +
              C23627 + C23627 + C152149 * C574) *
                 C152080 * C23040) *
                C151956) *
               C152172 +
           (((C24421 + C24420) * C152080 * C23040 +
             (C24419 + C24418) * C152080 * C23041 +
             (C23043 * C2053 + C24372 + C24372 + C152149 * C2061 +
              C23045 * C2054 + C24373 + C24373 + C151796 * C2062) *
                 C152080 * C23042) *
                C151956 -
            ((C23384 + C23385) * C152080 * C23042 +
             (C23383 + C23382) * C152080 * C23041 +
             (C23381 + C23380) * C152080 * C23040) *
                C152173) *
               C151914) *
              C335 +
          ((((C23043 * C549 + C23634 + C23634 + C152149 * C573 + C23045 * C548 +
              C23635 + C23635 + C151796 * C572) *
                 C152080 * C23040 +
             (C24422 + C24423) * C152080 * C23041 +
             (C24424 + C24425) * C152080 * C23042) *
                C151956 -
            (C23402 * C23042 + (C23387 + C23386) * C152080 * C23041 +
             (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
              C23059 + C23059 + C152149 * C159) *
                 C152080 * C23040) *
                C152173) *
               C152172 +
           (((C23386 + C23387) * C152080 * C23040 +
             (C23388 + C23389) * C152080 * C23041 +
             (C23390 + C23391) * C152080 * C23042) *
                C152173 -
            ((C23045 * C2055 + C24382 + C24382 + C151796 * C2063 +
              C23043 * C2054 + C24383 + C24383 + C152149 * C2062) *
                 C152080 * C23042 +
             (C24425 + C24424) * C152080 * C23041 +
             (C24423 + C24422) * C152080 * C23040) *
                C151956) *
               C151914) *
              C336 +
          ((((C23043 * C144 + C23060 + C23060 + C152149 * C160 + C23045 * C145 +
              C23061 + C23061 + C151796 * C161) *
                 C152080 * C23040 +
             (C23392 + C23393) * C152080 * C23041 + C23403 * C23042) *
                C152173 -
            ((C24426 + C24427) * C152080 * C23042 +
             (C24428 + C24429) * C152080 * C23041 +
             (C23045 * C547 + C23650 + C23650 + C151796 * C571 + C23043 * C548 +
              C23651 + C23651 + C152149 * C572) *
                 C152080 * C23040) *
                C151956) *
               C152172 +
           (((C24429 + C24428) * C152080 * C23040 +
             (C24427 + C24426) * C152080 * C23041 +
             (C23043 * C2055 + C24392 + C24392 + C152149 * C2063 +
              C23045 * C2056 + C24393 + C24393 + C151796 * C2064) *
                 C152080 * C23042) *
                C151956 -
            ((C23396 + C23397) * C152080 * C23042 +
             (C23395 + C23394) * C152080 * C23041 +
             (C23393 + C23392) * C152080 * C23040) *
                C152173) *
               C151914) *
              C152208)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
             C23049 + C23049 + C151796 * C159) *
                C152080 * C23040 +
            (C23380 + C23381) * C152080 * C23041 + C23401 * C23042) *
               C152173 -
           (C25051 * C23042 + (C24420 + C24421) * C152080 * C23041 +
            (C23045 * C549 + C23626 + C23626 + C151796 * C573 + C23043 * C550 +
             C23627 + C23627 + C152149 * C574) *
                C152080 * C23040) *
               C151956) *
              C1709 +
          (((C24421 + C24420) * C152080 * C23040 +
            (C24419 + C24418) * C152080 * C23041 + C25797 * C23042) *
               C151956 -
           (C24789 * C23042 + (C23383 + C23382) * C152080 * C23041 +
            (C23381 + C23380) * C152080 * C23040) *
               C152173) *
              C1710 +
          ((C23401 * C23040 + (C23385 + C23384) * C152080 * C23041 +
            C24803 * C23042) *
               C152173 -
           ((C25802 + C25803) * C152080 * C23042 +
            (C25073 + C25072) * C152080 * C23041 + C25051 * C23040) *
               C151956) *
              C1711 +
          ((C25797 * C23040 + (C25803 + C25802) * C152080 * C23041 +
            (C23043 * C25783 + C25795 + C25795 + C152149 * C25787 +
             C23045 * C25784 + C25796 + C25796 + C151796 * C25788) *
                C152080 * C23042) *
               C151956 -
           ((C24800 + C24801) * C152080 * C23042 +
            (C24799 + C24798) * C152080 * C23041 + C24789 * C23040) *
               C152173) *
              C152224) *
         C151823) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
             C23049 + C23049 + C151796 * C159) *
                C152080 * C23040 +
            (C23380 + C23381) * C152080 * C23041 + C23401 * C23042) *
               C2814 -
           (C25051 * C23042 + (C24420 + C24421) * C152080 * C23041 +
            (C23045 * C549 + C23626 + C23626 + C151796 * C573 + C23043 * C550 +
             C23627 + C23627 + C152149 * C574) *
                C152080 * C23040) *
               C2815 +
           ((C23043 * C551 + C23628 + C23628 + C152149 * C575 + C23045 * C552 +
             C23629 + C23629 + C151796 * C576) *
                C152080 * C23040 +
            (C25068 + C25069) * C152080 * C23041 + C25077 * C23042) *
               C2816 -
           ((C27110 + C27111) * C152080 * C23042 +
            (C27112 + C27113) * C152080 * C23041 +
            (C23045 * C2453 + C26372 + C26372 + C151796 * C2469 +
             C23043 * C2454 + C26373 + C26373 + C152149 * C2470) *
                C152080 * C23040) *
               C152230) *
              C152172 +
          (((C24421 + C24420) * C152080 * C23040 +
            (C24419 + C24418) * C152080 * C23041 + C25797 * C23042) *
               C2815 -
           (C24789 * C23042 + (C23383 + C23382) * C152080 * C23041 +
            (C23381 + C23380) * C152080 * C23040) *
               C2814 -
           ((C25074 + C25075) * C152080 * C23042 +
            (C25071 + C25070) * C152080 * C23041 +
            (C25069 + C25068) * C152080 * C23040) *
               C2816 +
           ((C27113 + C27112) * C152080 * C23040 +
            (C27111 + C27110) * C152080 * C23041 +
            (C23043 * C27085 + C27100 + C27100 + C152149 * C27089 +
             C23045 * C27086 + C27101 + C27101 + C151796 * C27090) *
                C152080 * C23042) *
               C152230) *
              C151914) *
         C151823) /
            (p * q * std::sqrt(p + q));
    d2ee[312] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
               C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
               C140 * C145 + C170 + C170 + C124 * C161) *
                  C152080 * C152054 * C151869 * C151851 * C129 -
              (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
               C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
               C134 * C143 + C174 + C174 + C121 * C159) *
                  C152080 * C152054 * C151869 * C151851 * C130 +
              (C134 * C144 + C175 + C175 + C121 * C160 + C136 * C145 + C176 +
               C176 + C122 * C161 + C138 * C146 + C177 + C177 + C123 * C162 +
               C140 * C147 + C178 + C178 + C124 * C163) *
                  C152080 * C152054 * C151869 * C151851 * C131 -
              (C140 * C148 + C179 + C179 + C124 * C164 + C138 * C147 + C180 +
               C180 + C123 * C163 + C136 * C146 + C181 + C181 + C122 * C162 +
               C134 * C145 + C182 + C182 + C121 * C161) *
                  C152080 * C152054 * C151869 * C151851 * C132 +
              (C134 * C146 + C183 + C183 + C121 * C162 + C136 * C147 + C184 +
               C184 + C122 * C163 + C138 * C148 + C185 + C185 + C123 * C164 +
               C140 * C149 + C186 + C186 + C124 * C165) *
                  C152080 * C152054 * C151869 * C151851 * C133) +
         std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
                C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
                C140 * C145 + C170 + C170 + C124 * C161) *
                   C152080 * C152054 * C151869 * C152258 -
               (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
                C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
                C134 * C341 + C378 + C378 + C121 * C365) *
                   C152080 * C152054 * C151869 * C152244 +
               (C134 * C342 + C379 + C379 + C121 * C366 + C136 * C343 + C380 +
                C380 + C122 * C367 + C138 * C344 + C381 + C381 + C123 * C368 +
                C140 * C345 + C382 + C382 + C124 * C369) *
                   C152080 * C152054 * C151869 * C152214) *
                  C335 +
              ((C134 * C340 + C383 + C383 + C121 * C364 + C136 * C339 + C384 +
                C384 + C122 * C363 + C138 * C338 + C385 + C385 + C123 * C362 +
                C140 * C346 + C386 + C386 + C124 * C370) *
                   C152080 * C152054 * C151869 * C152244 -
               (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
                C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
                C134 * C143 + C174 + C174 + C121 * C159) *
                   C152080 * C152054 * C151869 * C152258 -
               (C140 * C347 + C387 + C387 + C124 * C371 + C138 * C345 + C388 +
                C388 + C123 * C369 + C136 * C344 + C389 + C389 + C122 * C368 +
                C134 * C343 + C390 + C390 + C121 * C367) *
                   C152080 * C152054 * C151869 * C152214) *
                  C336 +
              ((C134 * C144 + C175 + C175 + C121 * C160 + C136 * C145 + C176 +
                C176 + C122 * C161 + C138 * C146 + C177 + C177 + C123 * C162 +
                C140 * C147 + C178 + C178 + C124 * C163) *
                   C152080 * C152054 * C151869 * C152258 -
               (C140 * C348 + C391 + C391 + C124 * C372 + C138 * C346 + C392 +
                C392 + C123 * C370 + C136 * C338 + C393 + C393 + C122 * C362 +
                C134 * C339 + C394 + C394 + C121 * C363) *
                   C152080 * C152054 * C151869 * C152244 +
               (C134 * C344 + C395 + C395 + C121 * C368 + C136 * C345 + C396 +
                C396 + C122 * C369 + C138 * C347 + C397 + C397 + C123 * C371 +
                C140 * C349 + C398 + C398 + C124 * C373) *
                   C152080 * C152054 * C151869 * C152214) *
                  C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
            C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
            C140 * C145 + C170 + C170 + C124 * C161) *
               C152080 * C152054 * C152259 -
           (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
            C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
            C134 * C550 + C587 + C587 + C121 * C574) *
               C152080 * C152054 * C152246 +
           (C134 * C551 + C588 + C588 + C121 * C575 + C136 * C552 + C589 +
            C589 + C122 * C576 + C138 * C553 + C590 + C590 + C123 * C577 +
            C140 * C554 + C591 + C591 + C124 * C578) *
               C152080 * C152054 * C152217) *
              C151851 * C335 +
          ((C134 * C549 + C592 + C592 + C121 * C573 + C136 * C548 + C593 +
            C593 + C122 * C572 + C138 * C547 + C594 + C594 + C123 * C571 +
            C140 * C555 + C595 + C595 + C124 * C579) *
               C152080 * C152054 * C152246 -
           (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
            C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
            C134 * C143 + C174 + C174 + C121 * C159) *
               C152080 * C152054 * C152259 -
           (C140 * C556 + C596 + C596 + C124 * C580 + C138 * C554 + C597 +
            C597 + C123 * C578 + C136 * C553 + C598 + C598 + C122 * C577 +
            C134 * C552 + C599 + C599 + C121 * C576) *
               C152080 * C152054 * C152217) *
              C151851 * C336 +
          ((C134 * C144 + C175 + C175 + C121 * C160 + C136 * C145 + C176 +
            C176 + C122 * C161 + C138 * C146 + C177 + C177 + C123 * C162 +
            C140 * C147 + C178 + C178 + C124 * C163) *
               C152080 * C152054 * C152259 -
           (C140 * C557 + C600 + C600 + C124 * C581 + C138 * C555 + C601 +
            C601 + C123 * C579 + C136 * C547 + C602 + C602 + C122 * C571 +
            C134 * C548 + C603 + C603 + C121 * C572) *
               C152080 * C152054 * C152246 +
           (C134 * C553 + C604 + C604 + C121 * C577 + C136 * C554 + C605 +
            C605 + C122 * C578 + C138 * C556 + C606 + C606 + C123 * C580 +
            C140 * C558 + C607 + C607 + C124 * C582) *
               C152080 * C152054 * C152217) *
              C151851 * C152208)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
            C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
            C140 * C145 + C170 + C170 + C124 * C161) *
               C152080 * C152054 * C151869 * C1259 -
           (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
            C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
            C134 * C341 + C378 + C378 + C121 * C365) *
               C152080 * C152054 * C151869 * C1260 +
           (C134 * C342 + C379 + C379 + C121 * C366 + C136 * C343 + C380 +
            C380 + C122 * C367 + C138 * C344 + C381 + C381 + C123 * C368 +
            C140 * C345 + C382 + C382 + C124 * C369) *
               C152080 * C152054 * C151869 * C152214) *
              C152255 +
          ((C134 * C340 + C383 + C383 + C121 * C364 + C136 * C339 + C384 +
            C384 + C122 * C363 + C138 * C338 + C385 + C385 + C123 * C362 +
            C140 * C346 + C386 + C386 + C124 * C370) *
               C152080 * C152054 * C151869 * C1260 -
           (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
            C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
            C134 * C143 + C174 + C174 + C121 * C159) *
               C152080 * C152054 * C151869 * C1259 -
           (C140 * C347 + C387 + C387 + C124 * C371 + C138 * C345 + C388 +
            C388 + C123 * C369 + C136 * C344 + C389 + C389 + C122 * C368 +
            C134 * C343 + C390 + C390 + C121 * C367) *
               C152080 * C152054 * C151869 * C152214) *
              C152240 +
          ((C134 * C144 + C175 + C175 + C121 * C160 + C136 * C145 + C176 +
            C176 + C122 * C161 + C138 * C146 + C177 + C177 + C123 * C162 +
            C140 * C147 + C178 + C178 + C124 * C163) *
               C152080 * C152054 * C151869 * C1259 -
           (C140 * C348 + C391 + C391 + C124 * C372 + C138 * C346 + C392 +
            C392 + C123 * C370 + C136 * C338 + C393 + C393 + C122 * C362 +
            C134 * C339 + C394 + C394 + C121 * C363) *
               C152080 * C152054 * C151869 * C1260 +
           (C134 * C344 + C395 + C395 + C121 * C368 + C136 * C345 + C396 +
            C396 + C122 * C369 + C138 * C347 + C397 + C397 + C123 * C371 +
            C140 * C349 + C398 + C398 + C124 * C373) *
               C152080 * C152054 * C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 + C168 +
           C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 + C140 * C145 +
           C170 + C170 + C124 * C161) *
              C152080 * C152054 * C151869 * C1347 -
          (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 + C376 +
           C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 + C134 * C341 +
           C378 + C378 + C121 * C365) *
              C152080 * C152054 * C151869 * C1348 +
          (C134 * C342 + C379 + C379 + C121 * C366 + C136 * C343 + C380 + C380 +
           C122 * C367 + C138 * C344 + C381 + C381 + C123 * C368 + C140 * C345 +
           C382 + C382 + C124 * C369) *
              C152080 * C152054 * C151869 * C1349 -
          (C140 * C1353 + C1378 + C1378 + C124 * C1369 + C138 * C1354 + C1379 +
           C1379 + C123 * C1370 + C136 * C1355 + C1380 + C1380 + C122 * C1371 +
           C134 * C1356 + C1381 + C1381 + C121 * C1372) *
              C152080 * C152054 * C151869 * C1350 +
          (C134 * C1357 + C1382 + C1382 + C121 * C1373 + C136 * C1358 + C1383 +
           C1383 + C122 * C1374 + C138 * C1359 + C1384 + C1384 + C123 * C1375 +
           C140 * C1360 + C1385 + C1385 + C124 * C1376) *
              C152080 * C152054 * C151869 * C1351) *
         C151823) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
            C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
            C140 * C145 + C170 + C170 + C124 * C161) *
               C152080 * C152054 * C152259 -
           (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
            C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
            C134 * C550 + C587 + C587 + C121 * C574) *
               C152080 * C152054 * C152246 +
           (C134 * C551 + C588 + C588 + C121 * C575 + C136 * C552 + C589 +
            C589 + C122 * C576 + C138 * C553 + C590 + C590 + C123 * C577 +
            C140 * C554 + C591 + C591 + C124 * C578) *
               C152080 * C152054 * C152217) *
              C1259 +
          ((C134 * C1083 + C1102 + C1102 + C121 * C1095 + C136 * C1084 + C1103 +
            C1103 + C122 * C1096 + C138 * C1085 + C1104 + C1104 + C123 * C1097 +
            C140 * C1086 + C1105 + C1105 + C124 * C1098) *
               C152080 * C152054 * C152246 -
           (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
            C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
            C134 * C341 + C378 + C378 + C121 * C365) *
               C152080 * C152054 * C152259 -
           (C140 * C1531 + C1568 + C1568 + C124 * C1555 + C138 * C1532 + C1569 +
            C1569 + C123 * C1556 + C136 * C1533 + C1570 + C1570 + C122 * C1557 +
            C134 * C1534 + C1571 + C1571 + C121 * C1558) *
               C152080 * C152054 * C152217) *
              C1260 +
          ((C134 * C342 + C379 + C379 + C121 * C366 + C136 * C343 + C380 +
            C380 + C122 * C367 + C138 * C344 + C381 + C381 + C123 * C368 +
            C140 * C345 + C382 + C382 + C124 * C369) *
               C152080 * C152054 * C152259 -
           (C140 * C1535 + C1572 + C1572 + C124 * C1559 + C138 * C1536 + C1573 +
            C1573 + C123 * C1560 + C136 * C1537 + C1574 + C1574 + C122 * C1561 +
            C134 * C1538 + C1575 + C1575 + C121 * C1562) *
               C152080 * C152054 * C152246 +
           (C134 * C1539 + C1576 + C1576 + C121 * C1563 + C136 * C1540 + C1577 +
            C1577 + C122 * C1564 + C138 * C1541 + C1578 + C1578 + C123 * C1565 +
            C140 * C1542 + C1579 + C1579 + C124 * C1566) *
               C152080 * C152054 * C152217) *
              C152214) *
         C151823) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
            C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
            C140 * C145 + C170 + C170 + C124 * C161) *
               C152080 * C152054 * C2215 -
           (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
            C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
            C134 * C550 + C587 + C587 + C121 * C574) *
               C152080 * C152054 * C2216 +
           (C134 * C551 + C588 + C588 + C121 * C575 + C136 * C552 + C589 +
            C589 + C122 * C576 + C138 * C553 + C590 + C590 + C123 * C577 +
            C140 * C554 + C591 + C591 + C124 * C578) *
               C152080 * C152054 * C152217) *
              C151851 * C152255 +
          ((C134 * C549 + C592 + C592 + C121 * C573 + C136 * C548 + C593 +
            C593 + C122 * C572 + C138 * C547 + C594 + C594 + C123 * C571 +
            C140 * C555 + C595 + C595 + C124 * C579) *
               C152080 * C152054 * C2216 -
           (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
            C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
            C134 * C143 + C174 + C174 + C121 * C159) *
               C152080 * C152054 * C2215 -
           (C140 * C556 + C596 + C596 + C124 * C580 + C138 * C554 + C597 +
            C597 + C123 * C578 + C136 * C553 + C598 + C598 + C122 * C577 +
            C134 * C552 + C599 + C599 + C121 * C576) *
               C152080 * C152054 * C152217) *
              C151851 * C152240 +
          ((C134 * C144 + C175 + C175 + C121 * C160 + C136 * C145 + C176 +
            C176 + C122 * C161 + C138 * C146 + C177 + C177 + C123 * C162 +
            C140 * C147 + C178 + C178 + C124 * C163) *
               C152080 * C152054 * C2215 -
           (C140 * C557 + C600 + C600 + C124 * C581 + C138 * C555 + C601 +
            C601 + C123 * C579 + C136 * C547 + C602 + C602 + C122 * C571 +
            C134 * C548 + C603 + C603 + C121 * C572) *
               C152080 * C152054 * C2216 +
           (C134 * C553 + C604 + C604 + C121 * C577 + C136 * C554 + C605 +
            C605 + C122 * C578 + C138 * C556 + C606 + C606 + C123 * C580 +
            C140 * C558 + C607 + C607 + C124 * C582) *
               C152080 * C152054 * C152217) *
              C151851 * C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
            C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
            C140 * C145 + C170 + C170 + C124 * C161) *
               C152080 * C152054 * C2215 -
           (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
            C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
            C134 * C550 + C587 + C587 + C121 * C574) *
               C152080 * C152054 * C2216 +
           (C134 * C551 + C588 + C588 + C121 * C575 + C136 * C552 + C589 +
            C589 + C122 * C576 + C138 * C553 + C590 + C590 + C123 * C577 +
            C140 * C554 + C591 + C591 + C124 * C578) *
               C152080 * C152054 * C152217) *
              C152258 +
          ((C134 * C1083 + C1102 + C1102 + C121 * C1095 + C136 * C1084 + C1103 +
            C1103 + C122 * C1096 + C138 * C1085 + C1104 + C1104 + C123 * C1097 +
            C140 * C1086 + C1105 + C1105 + C124 * C1098) *
               C152080 * C152054 * C2216 -
           (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
            C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
            C134 * C341 + C378 + C378 + C121 * C365) *
               C152080 * C152054 * C2215 -
           (C140 * C1531 + C1568 + C1568 + C124 * C1555 + C138 * C1532 + C1569 +
            C1569 + C123 * C1556 + C136 * C1533 + C1570 + C1570 + C122 * C1557 +
            C134 * C1534 + C1571 + C1571 + C121 * C1558) *
               C152080 * C152054 * C152217) *
              C152244 +
          ((C134 * C342 + C379 + C379 + C121 * C366 + C136 * C343 + C380 +
            C380 + C122 * C367 + C138 * C344 + C381 + C381 + C123 * C368 +
            C140 * C345 + C382 + C382 + C124 * C369) *
               C152080 * C152054 * C2215 -
           (C140 * C1535 + C1572 + C1572 + C124 * C1559 + C138 * C1536 + C1573 +
            C1573 + C123 * C1560 + C136 * C1537 + C1574 + C1574 + C122 * C1561 +
            C134 * C1538 + C1575 + C1575 + C121 * C1562) *
               C152080 * C152054 * C2216 +
           (C134 * C1539 + C1576 + C1576 + C121 * C1563 + C136 * C1540 + C1577 +
            C1577 + C122 * C1564 + C138 * C1541 + C1578 + C1578 + C123 * C1565 +
            C140 * C1542 + C1579 + C1579 + C124 * C1566) *
               C152080 * C152054 * C152217) *
              C152214) *
         C151823) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 + C168 +
           C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 + C140 * C145 +
           C170 + C170 + C124 * C161) *
              C152080 * C152054 * C2446 -
          (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 + C585 +
           C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 + C134 * C550 +
           C587 + C587 + C121 * C574) *
              C152080 * C152054 * C2447 +
          (C134 * C551 + C588 + C588 + C121 * C575 + C136 * C552 + C589 + C589 +
           C122 * C576 + C138 * C553 + C590 + C590 + C123 * C577 + C140 * C554 +
           C591 + C591 + C124 * C578) *
              C152080 * C152054 * C2448 -
          (C140 * C2451 + C2476 + C2476 + C124 * C2467 + C138 * C2452 + C2477 +
           C2477 + C123 * C2468 + C136 * C2453 + C2478 + C2478 + C122 * C2469 +
           C134 * C2454 + C2479 + C2479 + C121 * C2470) *
              C152080 * C152054 * C2449 +
          (C134 * C2455 + C2480 + C2480 + C121 * C2471 + C136 * C2456 + C2481 +
           C2481 + C122 * C2472 + C138 * C2457 + C2482 + C2482 + C123 * C2473 +
           C140 * C2458 + C2483 + C2483 + C124 * C2474) *
              C152080 * C152054 * C2450) *
         C151851 * C151823) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
            C23049 + C23049 + C151796 * C159) *
               C152080 * C23040 +
           (C23043 * C341 + C23050 + C23050 + C152149 * C365 + C23045 * C340 +
            C23051 + C23051 + C151796 * C364) *
               C152080 * C23041 +
           (C23043 * C342 + C23052 + C23052 + C152149 * C366 + C23045 * C343 +
            C23053 + C23053 + C151796 * C367) *
               C152080 * C23042) *
              C151869 * C151851 * C129 -
          ((C23045 * C344 + C23054 + C23054 + C151796 * C368 + C23043 * C343 +
            C23055 + C23055 + C152149 * C367) *
               C152080 * C23042 +
           (C23045 * C339 + C23056 + C23056 + C151796 * C363 + C23043 * C340 +
            C23057 + C23057 + C152149 * C364) *
               C152080 * C23041 +
           (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
            C23059 + C23059 + C152149 * C159) *
               C152080 * C23040) *
              C151869 * C151851 * C130 +
          ((C23043 * C144 + C23060 + C23060 + C152149 * C160 + C23045 * C145 +
            C23061 + C23061 + C151796 * C161) *
               C152080 * C23040 +
           (C23043 * C339 + C23062 + C23062 + C152149 * C363 + C23045 * C338 +
            C23063 + C23063 + C151796 * C362) *
               C152080 * C23041 +
           (C23043 * C344 + C23064 + C23064 + C152149 * C368 + C23045 * C345 +
            C23065 + C23065 + C151796 * C369) *
               C152080 * C23042) *
              C151869 * C151851 * C131 -
          ((C23045 * C347 + C23066 + C23066 + C151796 * C371 + C23043 * C345 +
            C23067 + C23067 + C152149 * C369) *
               C152080 * C23042 +
           (C23045 * C346 + C23068 + C23068 + C151796 * C370 + C23043 * C338 +
            C23069 + C23069 + C152149 * C362) *
               C152080 * C23041 +
           (C23045 * C146 + C23070 + C23070 + C151796 * C162 + C23043 * C145 +
            C23071 + C23071 + C152149 * C161) *
               C152080 * C23040) *
              C151869 * C151851 * C132 +
          ((C23043 * C146 + C23072 + C23072 + C152149 * C162 + C23045 * C147 +
            C23073 + C23073 + C151796 * C163) *
               C152080 * C23040 +
           (C23043 * C346 + C23074 + C23074 + C152149 * C370 + C23045 * C348 +
            C23075 + C23075 + C151796 * C372) *
               C152080 * C23041 +
           (C23043 * C347 + C23076 + C23076 + C152149 * C371 + C23045 * C349 +
            C23077 + C23077 + C151796 * C373) *
               C152080 * C23042) *
              C151869 * C151851 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
             C23049 + C23049 + C151796 * C159) *
                C152080 * C23040 +
            (C23380 + C23381) * C152080 * C23041 + C23401 * C23042) *
               C151869 * C152258 -
           ((C23384 + C23385) * C152080 * C23042 +
            (C23383 + C23382) * C152080 * C23041 +
            (C23381 + C23380) * C152080 * C23040) *
               C151869 * C152244 +
           (C23401 * C23040 + (C23385 + C23384) * C152080 * C23041 +
            (C23043 * C1357 + C23310 + C23310 + C152149 * C1373 +
             C23045 * C1358 + C23311 + C23311 + C151796 * C1374) *
                C152080 * C23042) *
               C151869 * C152214) *
              C335 +
          (((C23386 + C23387) * C152080 * C23040 +
            (C23388 + C23389) * C152080 * C23041 +
            (C23390 + C23391) * C152080 * C23042) *
               C151869 * C152244 -
           (C23402 * C23042 + (C23387 + C23386) * C152080 * C23041 +
            (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
             C23059 + C23059 + C152149 * C159) *
                C152080 * C23040) *
               C151869 * C152258 -
           ((C23045 * C1359 + C23326 + C23326 + C151796 * C1375 +
             C23043 * C1358 + C23327 + C23327 + C152149 * C1374) *
                C152080 * C23042 +
            (C23391 + C23390) * C152080 * C23041 + C23402 * C23040) *
               C151869 * C152214) *
              C336 +
          (((C23043 * C144 + C23060 + C23060 + C152149 * C160 + C23045 * C145 +
             C23061 + C23061 + C151796 * C161) *
                C152080 * C23040 +
            (C23392 + C23393) * C152080 * C23041 + C23403 * C23042) *
               C151869 * C152258 -
           ((C23396 + C23397) * C152080 * C23042 +
            (C23395 + C23394) * C152080 * C23041 +
            (C23393 + C23392) * C152080 * C23040) *
               C151869 * C152244 +
           (C23403 * C23040 + (C23397 + C23396) * C152080 * C23041 +
            (C23043 * C1359 + C23342 + C23342 + C152149 * C1375 +
             C23045 * C1360 + C23343 + C23343 + C151796 * C1376) *
                C152080 * C23042) *
               C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
             C23049 + C23049 + C151796 * C159) *
                C152080 * C23040 +
            (C23380 + C23381) * C152080 * C23041 + C23401 * C23042) *
               C152259 -
           ((C23045 * C1537 + C23622 + C23622 + C151796 * C1561 +
             C23043 * C1538 + C23623 + C23623 + C152149 * C1562) *
                C152080 * C23042 +
            (C23045 * C1084 + C23624 + C23624 + C151796 * C1096 +
             C23043 * C1083 + C23625 + C23625 + C152149 * C1095) *
                C152080 * C23041 +
            (C23045 * C549 + C23626 + C23626 + C151796 * C573 + C23043 * C550 +
             C23627 + C23627 + C152149 * C574) *
                C152080 * C23040) *
               C152246 +
           ((C23043 * C551 + C23628 + C23628 + C152149 * C575 + C23045 * C552 +
             C23629 + C23629 + C151796 * C576) *
                C152080 * C23040 +
            (C23043 * C1534 + C23630 + C23630 + C152149 * C1558 +
             C23045 * C1533 + C23631 + C23631 + C151796 * C1557) *
                C152080 * C23041 +
            (C23043 * C1539 + C23632 + C23632 + C152149 * C1563 +
             C23045 * C1540 + C23633 + C23633 + C151796 * C1564) *
                C152080 * C23042) *
               C152217) *
              C151851 * C335 +
          (((C23043 * C549 + C23634 + C23634 + C152149 * C573 + C23045 * C548 +
             C23635 + C23635 + C151796 * C572) *
                C152080 * C23040 +
            (C23043 * C1084 + C23636 + C23636 + C152149 * C1096 +
             C23045 * C1085 + C23637 + C23637 + C151796 * C1097) *
                C152080 * C23041 +
            (C23043 * C1537 + C23638 + C23638 + C152149 * C1561 +
             C23045 * C1536 + C23639 + C23639 + C151796 * C1560) *
                C152080 * C23042) *
               C152246 -
           (C23402 * C23042 + (C23387 + C23386) * C152080 * C23041 +
            (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
             C23059 + C23059 + C152149 * C159) *
                C152080 * C23040) *
               C152259 -
           ((C23045 * C1541 + C23640 + C23640 + C151796 * C1565 +
             C23043 * C1540 + C23641 + C23641 + C152149 * C1564) *
                C152080 * C23042 +
            (C23045 * C1532 + C23642 + C23642 + C151796 * C1556 +
             C23043 * C1533 + C23643 + C23643 + C152149 * C1557) *
                C152080 * C23041 +
            (C23045 * C553 + C23644 + C23644 + C151796 * C577 + C23043 * C552 +
             C23645 + C23645 + C152149 * C576) *
                C152080 * C23040) *
               C152217) *
              C151851 * C336 +
          (((C23043 * C144 + C23060 + C23060 + C152149 * C160 + C23045 * C145 +
             C23061 + C23061 + C151796 * C161) *
                C152080 * C23040 +
            (C23392 + C23393) * C152080 * C23041 + C23403 * C23042) *
               C152259 -
           ((C23045 * C1535 + C23646 + C23646 + C151796 * C1559 +
             C23043 * C1536 + C23647 + C23647 + C152149 * C1560) *
                C152080 * C23042 +
            (C23045 * C1086 + C23648 + C23648 + C151796 * C1098 +
             C23043 * C1085 + C23649 + C23649 + C152149 * C1097) *
                C152080 * C23041 +
            (C23045 * C547 + C23650 + C23650 + C151796 * C571 + C23043 * C548 +
             C23651 + C23651 + C152149 * C572) *
                C152080 * C23040) *
               C152246 +
           ((C23043 * C553 + C23652 + C23652 + C152149 * C577 + C23045 * C554 +
             C23653 + C23653 + C151796 * C578) *
                C152080 * C23040 +
            (C23043 * C1532 + C23654 + C23654 + C152149 * C1556 +
             C23045 * C1531 + C23655 + C23655 + C151796 * C1555) *
                C152080 * C23041 +
            (C23043 * C1541 + C23656 + C23656 + C152149 * C1565 +
             C23045 * C1542 + C23657 + C23657 + C151796 * C1566) *
                C152080 * C23042) *
               C152217) *
              C151851 * C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
             C23049 + C23049 + C151796 * C159) *
                C152080 * C23040 +
            (C23380 + C23381) * C152080 * C23041 + C23401 * C23042) *
               C151869 * C1259 -
           ((C23384 + C23385) * C152080 * C23042 +
            (C23383 + C23382) * C152080 * C23041 +
            (C23381 + C23380) * C152080 * C23040) *
               C151869 * C1260 +
           (C23401 * C23040 + (C23385 + C23384) * C152080 * C23041 +
            (C23043 * C1357 + C23310 + C23310 + C152149 * C1373 +
             C23045 * C1358 + C23311 + C23311 + C151796 * C1374) *
                C152080 * C23042) *
               C151869 * C152214) *
              C152255 +
          (((C23386 + C23387) * C152080 * C23040 +
            (C23388 + C23389) * C152080 * C23041 +
            (C23390 + C23391) * C152080 * C23042) *
               C151869 * C1260 -
           (C23402 * C23042 + (C23387 + C23386) * C152080 * C23041 +
            (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
             C23059 + C23059 + C152149 * C159) *
                C152080 * C23040) *
               C151869 * C1259 -
           ((C23045 * C1359 + C23326 + C23326 + C151796 * C1375 +
             C23043 * C1358 + C23327 + C23327 + C152149 * C1374) *
                C152080 * C23042 +
            (C23391 + C23390) * C152080 * C23041 + C23402 * C23040) *
               C151869 * C152214) *
              C152240 +
          (((C23043 * C144 + C23060 + C23060 + C152149 * C160 + C23045 * C145 +
             C23061 + C23061 + C151796 * C161) *
                C152080 * C23040 +
            (C23392 + C23393) * C152080 * C23041 + C23403 * C23042) *
               C151869 * C1259 -
           ((C23396 + C23397) * C152080 * C23042 +
            (C23395 + C23394) * C152080 * C23041 +
            (C23393 + C23392) * C152080 * C23040) *
               C151869 * C1260 +
           (C23403 * C23040 + (C23397 + C23396) * C152080 * C23041 +
            (C23043 * C1359 + C23342 + C23342 + C152149 * C1375 +
             C23045 * C1360 + C23343 + C23343 + C151796 * C1376) *
                C152080 * C23042) *
               C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
            C23049 + C23049 + C151796 * C159) *
               C152080 * C23040 +
           (C23380 + C23381) * C152080 * C23041 + C23401 * C23042) *
              C151869 * C1347 -
          (C24789 * C23042 + (C23383 + C23382) * C152080 * C23041 +
           (C23381 + C23380) * C152080 * C23040) *
              C151869 * C1348 +
          (C23401 * C23040 + (C23385 + C23384) * C152080 * C23041 +
           C24803 * C23042) *
              C151869 * C1349 -
          ((C24800 + C24801) * C152080 * C23042 +
           (C24799 + C24798) * C152080 * C23041 + C24789 * C23040) *
              C151869 * C1350 +
          (C24803 * C23040 + (C24801 + C24800) * C152080 * C23041 +
           (C23043 * C24769 + C24787 + C24787 + C152149 * C24773 +
            C23045 * C24770 + C24788 + C24788 + C151796 * C24774) *
               C152080 * C23042) *
              C151869 * C1351) *
         C151823) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
             C23049 + C23049 + C151796 * C159) *
                C152080 * C23040 +
            (C23380 + C23381) * C152080 * C23041 + C23401 * C23042) *
               C152259 -
           (C25051 * C23042 + (C24420 + C24421) * C152080 * C23041 +
            (C23045 * C549 + C23626 + C23626 + C151796 * C573 + C23043 * C550 +
             C23627 + C23627 + C152149 * C574) *
                C152080 * C23040) *
               C152246 +
           ((C23043 * C551 + C23628 + C23628 + C152149 * C575 + C23045 * C552 +
             C23629 + C23629 + C151796 * C576) *
                C152080 * C23040 +
            (C25068 + C25069) * C152080 * C23041 + C25077 * C23042) *
               C152217) *
              C1259 +
          (((C24421 + C24420) * C152080 * C23040 +
            (C24419 + C24418) * C152080 * C23041 +
            (C25072 + C25073) * C152080 * C23042) *
               C152246 -
           (C24789 * C23042 + (C23383 + C23382) * C152080 * C23041 +
            (C23381 + C23380) * C152080 * C23040) *
               C152259 -
           ((C25074 + C25075) * C152080 * C23042 +
            (C25071 + C25070) * C152080 * C23041 +
            (C25069 + C25068) * C152080 * C23040) *
               C152217) *
              C1260 +
          ((C23401 * C23040 + (C23385 + C23384) * C152080 * C23041 +
            C24803 * C23042) *
               C152259 -
           ((C23045 * C8842 + C25047 + C25047 + C151796 * C8848 +
             C23043 * C8841 + C25048 + C25048 + C152149 * C8847) *
                C152080 * C23042 +
            (C25073 + C25072) * C152080 * C23041 + C25051 * C23040) *
               C152246 +
           (C25077 * C23040 + (C25075 + C25074) * C152080 * C23041 +
            (C23043 * C25021 + C25049 + C25049 + C152149 * C25025 +
             C23045 * C25022 + C25050 + C25050 + C151796 * C25026) *
                C152080 * C23042) *
               C152217) *
              C152214) *
         C151823) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
             C23049 + C23049 + C151796 * C159) *
                C152080 * C23040 +
            (C23380 + C23381) * C152080 * C23041 + C23401 * C23042) *
               C2215 -
           (C25051 * C23042 + (C24420 + C24421) * C152080 * C23041 +
            (C23045 * C549 + C23626 + C23626 + C151796 * C573 + C23043 * C550 +
             C23627 + C23627 + C152149 * C574) *
                C152080 * C23040) *
               C2216 +
           ((C23043 * C551 + C23628 + C23628 + C152149 * C575 + C23045 * C552 +
             C23629 + C23629 + C151796 * C576) *
                C152080 * C23040 +
            (C25068 + C25069) * C152080 * C23041 + C25077 * C23042) *
               C152217) *
              C151851 * C152255 +
          (((C23043 * C549 + C23634 + C23634 + C152149 * C573 + C23045 * C548 +
             C23635 + C23635 + C151796 * C572) *
                C152080 * C23040 +
            (C24422 + C24423) * C152080 * C23041 + C25583 * C23042) *
               C2216 -
           (C23402 * C23042 + (C23387 + C23386) * C152080 * C23041 +
            (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
             C23059 + C23059 + C152149 * C159) *
                C152080 * C23040) *
               C2215 -
           ((C23045 * C1541 + C23640 + C23640 + C151796 * C1565 +
             C23043 * C1540 + C23641 + C23641 + C152149 * C1564) *
                C152080 * C23042 +
            (C23045 * C1532 + C23642 + C23642 + C151796 * C1556 +
             C23043 * C1533 + C23643 + C23643 + C152149 * C1557) *
                C152080 * C23041 +
            (C23045 * C553 + C23644 + C23644 + C151796 * C577 + C23043 * C552 +
             C23645 + C23645 + C152149 * C576) *
                C152080 * C23040) *
               C152217) *
              C151851 * C152240 +
          (((C23043 * C144 + C23060 + C23060 + C152149 * C160 + C23045 * C145 +
             C23061 + C23061 + C151796 * C161) *
                C152080 * C23040 +
            (C23392 + C23393) * C152080 * C23041 + C23403 * C23042) *
               C2215 -
           ((C24426 + C24427) * C152080 * C23042 +
            (C24428 + C24429) * C152080 * C23041 +
            (C23045 * C547 + C23650 + C23650 + C151796 * C571 + C23043 * C548 +
             C23651 + C23651 + C152149 * C572) *
                C152080 * C23040) *
               C2216 +
           ((C23043 * C553 + C23652 + C23652 + C152149 * C577 + C23045 * C554 +
             C23653 + C23653 + C151796 * C578) *
                C152080 * C23040 +
            (C23043 * C1532 + C23654 + C23654 + C152149 * C1556 +
             C23045 * C1531 + C23655 + C23655 + C151796 * C1555) *
                C152080 * C23041 +
            (C23043 * C1541 + C23656 + C23656 + C152149 * C1565 +
             C23045 * C1542 + C23657 + C23657 + C151796 * C1566) *
                C152080 * C23042) *
               C152217) *
              C151851 * C152208)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
             C23049 + C23049 + C151796 * C159) *
                C152080 * C23040 +
            (C23380 + C23381) * C152080 * C23041 + C23401 * C23042) *
               C2215 -
           (C25051 * C23042 + (C24420 + C24421) * C152080 * C23041 +
            (C23045 * C549 + C23626 + C23626 + C151796 * C573 + C23043 * C550 +
             C23627 + C23627 + C152149 * C574) *
                C152080 * C23040) *
               C2216 +
           ((C23043 * C551 + C23628 + C23628 + C152149 * C575 + C23045 * C552 +
             C23629 + C23629 + C151796 * C576) *
                C152080 * C23040 +
            (C25068 + C25069) * C152080 * C23041 + C25077 * C23042) *
               C152217) *
              C152258 +
          (((C24421 + C24420) * C152080 * C23040 +
            (C24419 + C24418) * C152080 * C23041 + C25797 * C23042) *
               C2216 -
           (C24789 * C23042 + (C23383 + C23382) * C152080 * C23041 +
            (C23381 + C23380) * C152080 * C23040) *
               C2215 -
           ((C25074 + C25075) * C152080 * C23042 +
            (C25071 + C25070) * C152080 * C23041 +
            (C25069 + C25068) * C152080 * C23040) *
               C152217) *
              C152244 +
          ((C23401 * C23040 + (C23385 + C23384) * C152080 * C23041 +
            C24803 * C23042) *
               C2215 -
           ((C25802 + C25803) * C152080 * C23042 +
            (C25073 + C25072) * C152080 * C23041 + C25051 * C23040) *
               C2216 +
           (C25077 * C23040 + (C25075 + C25074) * C152080 * C23041 +
            (C23043 * C25021 + C25049 + C25049 + C152149 * C25025 +
             C23045 * C25022 + C25050 + C25050 + C151796 * C25026) *
                C152080 * C23042) *
               C152217) *
              C152214) *
         C151823) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
            C23049 + C23049 + C151796 * C159) *
               C152080 * C23040 +
           (C23380 + C23381) * C152080 * C23041 + C23401 * C23042) *
              C2446 -
          (C25051 * C23042 + (C24420 + C24421) * C152080 * C23041 +
           (C23045 * C549 + C23626 + C23626 + C151796 * C573 + C23043 * C550 +
            C23627 + C23627 + C152149 * C574) *
               C152080 * C23040) *
              C2447 +
          ((C23043 * C551 + C23628 + C23628 + C152149 * C575 + C23045 * C552 +
            C23629 + C23629 + C151796 * C576) *
               C152080 * C23040 +
           (C25068 + C25069) * C152080 * C23041 + C25077 * C23042) *
              C2448 -
          ((C23045 * C10150 + C26368 + C26368 + C151796 * C10156 +
            C23043 * C10149 + C26369 + C26369 + C152149 * C10155) *
               C152080 * C23042 +
           (C23045 * C2956 + C26370 + C26370 + C151796 * C2964 +
            C23043 * C2955 + C26371 + C26371 + C152149 * C2963) *
               C152080 * C23041 +
           (C23045 * C2453 + C26372 + C26372 + C151796 * C2469 +
            C23043 * C2454 + C26373 + C26373 + C152149 * C2470) *
               C152080 * C23040) *
              C2449 +
          ((C23043 * C2455 + C26374 + C26374 + C152149 * C2471 +
            C23045 * C2456 + C26375 + C26375 + C151796 * C2472) *
               C152080 * C23040 +
           (C23043 * C9426 + C26376 + C26376 + C152149 * C9432 +
            C23045 * C9427 + C26377 + C26377 + C151796 * C9433) *
               C152080 * C23041 +
           (C23043 * C26361 + C26378 + C26378 + C152149 * C26365 +
            C23045 * C26362 + C26379 + C26379 + C151796 * C26366) *
               C152080 * C23042) *
              C2450) *
         C151851 * C151823) /
            (p * q * std::sqrt(p + q));
    d2ee[313] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
             C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
             C140 * C145 + C170 + C170 + C124 * C161) *
                C152080 * C152054 * C152173 -
            (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
             C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
             C134 * C550 + C587 + C587 + C121 * C574) *
                C152080 * C152054 * C151956) *
               C1259 +
           ((C134 * C1083 + C1102 + C1102 + C121 * C1095 + C136 * C1084 +
             C1103 + C1103 + C122 * C1096 + C138 * C1085 + C1104 + C1104 +
             C123 * C1097 + C140 * C1086 + C1105 + C1105 + C124 * C1098) *
                C152080 * C152054 * C151956 -
            (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
             C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
             C134 * C341 + C378 + C378 + C121 * C365) *
                C152080 * C152054 * C152173) *
               C1260 +
           ((C134 * C342 + C379 + C379 + C121 * C366 + C136 * C343 + C380 +
             C380 + C122 * C367 + C138 * C344 + C381 + C381 + C123 * C368 +
             C140 * C345 + C382 + C382 + C124 * C369) *
                C152080 * C152054 * C152173 -
            (C140 * C1535 + C1572 + C1572 + C124 * C1559 + C138 * C1536 +
             C1573 + C1573 + C123 * C1560 + C136 * C1537 + C1574 + C1574 +
             C122 * C1561 + C134 * C1538 + C1575 + C1575 + C121 * C1562) *
                C152080 * C152054 * C151956) *
               C152214) *
              C152158 +
          (((C134 * C549 + C592 + C592 + C121 * C573 + C136 * C548 + C593 +
             C593 + C122 * C572 + C138 * C547 + C594 + C594 + C123 * C571 +
             C140 * C555 + C595 + C595 + C124 * C579) *
                C152080 * C152054 * C151956 -
            (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
             C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
             C134 * C143 + C174 + C174 + C121 * C159) *
                C152080 * C152054 * C152173) *
               C1259 +
           ((C134 * C340 + C383 + C383 + C121 * C364 + C136 * C339 + C384 +
             C384 + C122 * C363 + C138 * C338 + C385 + C385 + C123 * C362 +
             C140 * C346 + C386 + C386 + C124 * C370) *
                C152080 * C152054 * C152173 -
            (C140 * C1087 + C1106 + C1106 + C124 * C1099 + C138 * C1086 +
             C1107 + C1107 + C123 * C1098 + C136 * C1085 + C1108 + C1108 +
             C122 * C1097 + C134 * C1084 + C1109 + C1109 + C121 * C1096) *
                C152080 * C152054 * C151956) *
               C1260 +
           ((C134 * C1537 + C1920 + C1920 + C121 * C1561 + C136 * C1536 +
             C1921 + C1921 + C122 * C1560 + C138 * C1535 + C1922 + C1922 +
             C123 * C1559 + C140 * C1916 + C1923 + C1923 + C124 * C1918) *
                C152080 * C152054 * C151956 -
            (C140 * C347 + C387 + C387 + C124 * C371 + C138 * C345 + C388 +
             C388 + C123 * C369 + C136 * C344 + C389 + C389 + C122 * C368 +
             C134 * C343 + C390 + C390 + C121 * C367) *
                C152080 * C152054 * C152173) *
               C152214) *
              C151834)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
            C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
            C140 * C145 + C170 + C170 + C124 * C161) *
               C152080 * C152054 * C152173 -
           (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
            C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
            C134 * C550 + C587 + C587 + C121 * C574) *
               C152080 * C152054 * C151956) *
              C151851 * C739 +
          ((C134 * C549 + C592 + C592 + C121 * C573 + C136 * C548 + C593 +
            C593 + C122 * C572 + C138 * C547 + C594 + C594 + C123 * C571 +
            C140 * C555 + C595 + C595 + C124 * C579) *
               C152080 * C152054 * C151956 -
           (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
            C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
            C134 * C143 + C174 + C174 + C121 * C159) *
               C152080 * C152054 * C152173) *
              C151851 * C740 +
          ((C134 * C144 + C175 + C175 + C121 * C160 + C136 * C145 + C176 +
            C176 + C122 * C161 + C138 * C146 + C177 + C177 + C123 * C162 +
            C140 * C147 + C178 + C178 + C124 * C163) *
               C152080 * C152054 * C152173 -
           (C140 * C557 + C600 + C600 + C124 * C581 + C138 * C555 + C601 +
            C601 + C123 * C579 + C136 * C547 + C602 + C602 + C122 * C571 +
            C134 * C548 + C603 + C603 + C121 * C572) *
               C152080 * C152054 * C151956) *
              C151851 * C741 +
          ((C134 * C547 + C886 + C886 + C121 * C571 + C136 * C555 + C887 +
            C887 + C122 * C579 + C138 * C557 + C888 + C888 + C123 * C581 +
            C140 * C882 + C889 + C889 + C124 * C884) *
               C152080 * C152054 * C151956 -
           (C140 * C148 + C179 + C179 + C124 * C164 + C138 * C147 + C180 +
            C180 + C123 * C163 + C136 * C146 + C181 + C181 + C122 * C162 +
            C134 * C145 + C182 + C182 + C121 * C161) *
               C152080 * C152054 * C152173) *
              C151851 * C152218)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
            C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
            C140 * C145 + C170 + C170 + C124 * C161) *
               C152080 * C152054 * C2814 -
           (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
            C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
            C134 * C550 + C587 + C587 + C121 * C574) *
               C152080 * C152054 * C2815 +
           (C134 * C551 + C588 + C588 + C121 * C575 + C136 * C552 + C589 +
            C589 + C122 * C576 + C138 * C553 + C590 + C590 + C123 * C577 +
            C140 * C554 + C591 + C591 + C124 * C578) *
               C152080 * C152054 * C2816 -
           (C140 * C2451 + C2476 + C2476 + C124 * C2467 + C138 * C2452 + C2477 +
            C2477 + C123 * C2468 + C136 * C2453 + C2478 + C2478 + C122 * C2469 +
            C134 * C2454 + C2479 + C2479 + C121 * C2470) *
               C152080 * C152054 * C152230) *
              C151851 * C152158 +
          ((C134 * C549 + C592 + C592 + C121 * C573 + C136 * C548 + C593 +
            C593 + C122 * C572 + C138 * C547 + C594 + C594 + C123 * C571 +
            C140 * C555 + C595 + C595 + C124 * C579) *
               C152080 * C152054 * C2815 -
           (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
            C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
            C134 * C143 + C174 + C174 + C121 * C159) *
               C152080 * C152054 * C2814 -
           (C140 * C556 + C596 + C596 + C124 * C580 + C138 * C554 + C597 +
            C597 + C123 * C578 + C136 * C553 + C598 + C598 + C122 * C577 +
            C134 * C552 + C599 + C599 + C121 * C576) *
               C152080 * C152054 * C2816 +
           (C134 * C2453 + C2822 + C2822 + C121 * C2469 + C136 * C2452 + C2823 +
            C2823 + C122 * C2468 + C138 * C2451 + C2824 + C2824 + C123 * C2467 +
            C140 * C2818 + C2825 + C2825 + C124 * C2820) *
               C152080 * C152054 * C152230) *
              C151851 * C151834)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
             C23049 + C23049 + C151796 * C159) *
                C152080 * C23040 +
            (C23380 + C23381) * C152080 * C23041 + C23401 * C23042) *
               C152173 -
           ((C23045 * C1537 + C23622 + C23622 + C151796 * C1561 +
             C23043 * C1538 + C23623 + C23623 + C152149 * C1562) *
                C152080 * C23042 +
            (C23045 * C1084 + C23624 + C23624 + C151796 * C1096 +
             C23043 * C1083 + C23625 + C23625 + C152149 * C1095) *
                C152080 * C23041 +
            (C23045 * C549 + C23626 + C23626 + C151796 * C573 + C23043 * C550 +
             C23627 + C23627 + C152149 * C574) *
                C152080 * C23040) *
               C151956) *
              C151851 * C739 +
          (((C23043 * C549 + C23634 + C23634 + C152149 * C573 + C23045 * C548 +
             C23635 + C23635 + C151796 * C572) *
                C152080 * C23040 +
            (C23043 * C1084 + C23636 + C23636 + C152149 * C1096 +
             C23045 * C1085 + C23637 + C23637 + C151796 * C1097) *
                C152080 * C23041 +
            (C23043 * C1537 + C23638 + C23638 + C152149 * C1561 +
             C23045 * C1536 + C23639 + C23639 + C151796 * C1560) *
                C152080 * C23042) *
               C151956 -
           (C23402 * C23042 + (C23387 + C23386) * C152080 * C23041 +
            (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
             C23059 + C23059 + C152149 * C159) *
                C152080 * C23040) *
               C152173) *
              C151851 * C740 +
          (((C23043 * C144 + C23060 + C23060 + C152149 * C160 + C23045 * C145 +
             C23061 + C23061 + C151796 * C161) *
                C152080 * C23040 +
            (C23392 + C23393) * C152080 * C23041 + C23403 * C23042) *
               C152173 -
           ((C23045 * C1535 + C23646 + C23646 + C151796 * C1559 +
             C23043 * C1536 + C23647 + C23647 + C152149 * C1560) *
                C152080 * C23042 +
            (C23045 * C1086 + C23648 + C23648 + C151796 * C1098 +
             C23043 * C1085 + C23649 + C23649 + C152149 * C1097) *
                C152080 * C23041 +
            (C23045 * C547 + C23650 + C23650 + C151796 * C571 + C23043 * C548 +
             C23651 + C23651 + C152149 * C572) *
                C152080 * C23040) *
               C151956) *
              C151851 * C741 +
          (((C23043 * C547 + C24068 + C24068 + C152149 * C571 + C23045 * C555 +
             C24069 + C24069 + C151796 * C579) *
                C152080 * C23040 +
            (C23043 * C1086 + C24070 + C24070 + C152149 * C1098 +
             C23045 * C1087 + C24071 + C24071 + C151796 * C1099) *
                C152080 * C23041 +
            (C23043 * C1535 + C24072 + C24072 + C152149 * C1559 +
             C23045 * C1916 + C24073 + C24073 + C151796 * C1918) *
                C152080 * C23042) *
               C151956 -
           ((C23873 + C23872) * C152080 * C23042 +
            (C23871 + C23870) * C152080 * C23041 +
            (C23045 * C146 + C23070 + C23070 + C151796 * C162 + C23043 * C145 +
             C23071 + C23071 + C152149 * C161) *
                C152080 * C23040) *
               C152173) *
              C151851 * C152218)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
              C23049 + C23049 + C151796 * C159) *
                 C152080 * C23040 +
             (C23380 + C23381) * C152080 * C23041 + C23401 * C23042) *
                C152173 -
            (C25051 * C23042 + (C24420 + C24421) * C152080 * C23041 +
             (C23045 * C549 + C23626 + C23626 + C151796 * C573 + C23043 * C550 +
              C23627 + C23627 + C152149 * C574) *
                 C152080 * C23040) *
                C151956) *
               C1259 +
           (((C24421 + C24420) * C152080 * C23040 +
             (C24419 + C24418) * C152080 * C23041 +
             (C25072 + C25073) * C152080 * C23042) *
                C151956 -
            (C24789 * C23042 + (C23383 + C23382) * C152080 * C23041 +
             (C23381 + C23380) * C152080 * C23040) *
                C152173) *
               C1260 +
           ((C23401 * C23040 + (C23385 + C23384) * C152080 * C23041 +
             C24803 * C23042) *
                C152173 -
            ((C23045 * C8842 + C25047 + C25047 + C151796 * C8848 +
              C23043 * C8841 + C25048 + C25048 + C152149 * C8847) *
                 C152080 * C23042 +
             (C25073 + C25072) * C152080 * C23041 + C25051 * C23040) *
                C151956) *
               C152214) *
              C152158 +
          ((((C23043 * C549 + C23634 + C23634 + C152149 * C573 + C23045 * C548 +
              C23635 + C23635 + C151796 * C572) *
                 C152080 * C23040 +
             (C24422 + C24423) * C152080 * C23041 + C25583 * C23042) *
                C151956 -
            (C23402 * C23042 + (C23387 + C23386) * C152080 * C23041 +
             (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
              C23059 + C23059 + C152149 * C159) *
                 C152080 * C23040) *
                C152173) *
               C1259 +
           (((C23386 + C23387) * C152080 * C23040 +
             (C23388 + C23389) * C152080 * C23041 + C25279 * C23042) *
                C152173 -
            ((C25588 + C25589) * C152080 * C23042 +
             (C24425 + C24424) * C152080 * C23041 +
             (C24423 + C24422) * C152080 * C23040) *
                C151956) *
               C1260 +
           ((C25583 * C23040 + (C25589 + C25588) * C152080 * C23041 +
             (C23043 * C8842 + C25581 + C25581 + C152149 * C8848 +
              C23045 * C8843 + C25582 + C25582 + C151796 * C8849) *
                 C152080 * C23042) *
                C151956 -
            ((C25284 + C25285) * C152080 * C23042 +
             (C23391 + C23390) * C152080 * C23041 + C23402 * C23040) *
                C152173) *
               C152214) *
              C151834)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
             C23049 + C23049 + C151796 * C159) *
                C152080 * C23040 +
            (C23380 + C23381) * C152080 * C23041 + C23401 * C23042) *
               C2814 -
           (C25051 * C23042 + (C24420 + C24421) * C152080 * C23041 +
            (C23045 * C549 + C23626 + C23626 + C151796 * C573 + C23043 * C550 +
             C23627 + C23627 + C152149 * C574) *
                C152080 * C23040) *
               C2815 +
           ((C23043 * C551 + C23628 + C23628 + C152149 * C575 + C23045 * C552 +
             C23629 + C23629 + C151796 * C576) *
                C152080 * C23040 +
            (C25068 + C25069) * C152080 * C23041 + C25077 * C23042) *
               C2816 -
           ((C23045 * C10150 + C26368 + C26368 + C151796 * C10156 +
             C23043 * C10149 + C26369 + C26369 + C152149 * C10155) *
                C152080 * C23042 +
            (C23045 * C2956 + C26370 + C26370 + C151796 * C2964 +
             C23043 * C2955 + C26371 + C26371 + C152149 * C2963) *
                C152080 * C23041 +
            (C23045 * C2453 + C26372 + C26372 + C151796 * C2469 +
             C23043 * C2454 + C26373 + C26373 + C152149 * C2470) *
                C152080 * C23040) *
               C152230) *
              C151851 * C152158 +
          (((C23043 * C549 + C23634 + C23634 + C152149 * C573 + C23045 * C548 +
             C23635 + C23635 + C151796 * C572) *
                C152080 * C23040 +
            (C24422 + C24423) * C152080 * C23041 + C25583 * C23042) *
               C2815 -
           (C23402 * C23042 + (C23387 + C23386) * C152080 * C23041 +
            (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
             C23059 + C23059 + C152149 * C159) *
                C152080 * C23040) *
               C2814 -
           ((C26688 + C26689) * C152080 * C23042 +
            (C26690 + C26691) * C152080 * C23041 +
            (C23045 * C553 + C23644 + C23644 + C151796 * C577 + C23043 * C552 +
             C23645 + C23645 + C152149 * C576) *
                C152080 * C23040) *
               C2816 +
           ((C23043 * C2453 + C26886 + C26886 + C152149 * C2469 +
             C23045 * C2452 + C26887 + C26887 + C151796 * C2468) *
                C152080 * C23040 +
            (C23043 * C2956 + C26888 + C26888 + C152149 * C2964 +
             C23045 * C2957 + C26889 + C26889 + C151796 * C2965) *
                C152080 * C23041 +
            (C23043 * C10150 + C26890 + C26890 + C152149 * C10156 +
             C23045 * C10151 + C26891 + C26891 + C151796 * C10157) *
                C152080 * C23042) *
               C152230) *
              C151851 * C151834)) /
            (p * q * std::sqrt(p + q));
    d2ee[314] +=
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
            C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
            C140 * C145 + C170 + C170 + C124 * C161) *
               C152080 * C152054 * C151869 * C152258 -
           (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
            C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
            C134 * C341 + C378 + C378 + C121 * C365) *
               C152080 * C152054 * C151869 * C152244 +
           (C134 * C342 + C379 + C379 + C121 * C366 + C136 * C343 + C380 +
            C380 + C122 * C367 + C138 * C344 + C381 + C381 + C123 * C368 +
            C140 * C345 + C382 + C382 + C124 * C369) *
               C152080 * C152054 * C151869 * C152214) *
              C335 +
          ((C134 * C340 + C383 + C383 + C121 * C364 + C136 * C339 + C384 +
            C384 + C122 * C363 + C138 * C338 + C385 + C385 + C123 * C362 +
            C140 * C346 + C386 + C386 + C124 * C370) *
               C152080 * C152054 * C151869 * C152244 -
           (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
            C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
            C134 * C143 + C174 + C174 + C121 * C159) *
               C152080 * C152054 * C151869 * C152258 -
           (C140 * C347 + C387 + C387 + C124 * C371 + C138 * C345 + C388 +
            C388 + C123 * C369 + C136 * C344 + C389 + C389 + C122 * C368 +
            C134 * C343 + C390 + C390 + C121 * C367) *
               C152080 * C152054 * C151869 * C152214) *
              C336 +
          ((C134 * C144 + C175 + C175 + C121 * C160 + C136 * C145 + C176 +
            C176 + C122 * C161 + C138 * C146 + C177 + C177 + C123 * C162 +
            C140 * C147 + C178 + C178 + C124 * C163) *
               C152080 * C152054 * C151869 * C152258 -
           (C140 * C348 + C391 + C391 + C124 * C372 + C138 * C346 + C392 +
            C392 + C123 * C370 + C136 * C338 + C393 + C393 + C122 * C362 +
            C134 * C339 + C394 + C394 + C121 * C363) *
               C152080 * C152054 * C151869 * C152244 +
           (C134 * C344 + C395 + C395 + C121 * C368 + C136 * C345 + C396 +
            C396 + C122 * C369 + C138 * C347 + C397 + C397 + C123 * C371 +
            C140 * C349 + C398 + C398 + C124 * C373) *
               C152080 * C152054 * C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 + C168 +
           C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 + C140 * C145 +
           C170 + C170 + C124 * C161) *
              C152080 * C152054 * C151869 * C151851 * C129 -
          (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 + C172 +
           C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 + C134 * C143 +
           C174 + C174 + C121 * C159) *
              C152080 * C152054 * C151869 * C151851 * C130 +
          (C134 * C144 + C175 + C175 + C121 * C160 + C136 * C145 + C176 + C176 +
           C122 * C161 + C138 * C146 + C177 + C177 + C123 * C162 + C140 * C147 +
           C178 + C178 + C124 * C163) *
              C152080 * C152054 * C151869 * C151851 * C131 -
          (C140 * C148 + C179 + C179 + C124 * C164 + C138 * C147 + C180 + C180 +
           C123 * C163 + C136 * C146 + C181 + C181 + C122 * C162 + C134 * C145 +
           C182 + C182 + C121 * C161) *
              C152080 * C152054 * C151869 * C151851 * C132 +
          (C134 * C146 + C183 + C183 + C121 * C162 + C136 * C147 + C184 + C184 +
           C122 * C163 + C138 * C148 + C185 + C185 + C123 * C164 + C140 * C149 +
           C186 + C186 + C124 * C165) *
              C152080 * C152054 * C151869 * C151851 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
            C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
            C140 * C145 + C170 + C170 + C124 * C161) *
               C152080 * C152054 * C151869 * C1259 -
           (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
            C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
            C134 * C341 + C378 + C378 + C121 * C365) *
               C152080 * C152054 * C151869 * C1260 +
           (C134 * C342 + C379 + C379 + C121 * C366 + C136 * C343 + C380 +
            C380 + C122 * C367 + C138 * C344 + C381 + C381 + C123 * C368 +
            C140 * C345 + C382 + C382 + C124 * C369) *
               C152080 * C152054 * C151869 * C152214) *
              C152255 +
          ((C134 * C340 + C383 + C383 + C121 * C364 + C136 * C339 + C384 +
            C384 + C122 * C363 + C138 * C338 + C385 + C385 + C123 * C362 +
            C140 * C346 + C386 + C386 + C124 * C370) *
               C152080 * C152054 * C151869 * C1260 -
           (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
            C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
            C134 * C143 + C174 + C174 + C121 * C159) *
               C152080 * C152054 * C151869 * C1259 -
           (C140 * C347 + C387 + C387 + C124 * C371 + C138 * C345 + C388 +
            C388 + C123 * C369 + C136 * C344 + C389 + C389 + C122 * C368 +
            C134 * C343 + C390 + C390 + C121 * C367) *
               C152080 * C152054 * C151869 * C152214) *
              C152240 +
          ((C134 * C144 + C175 + C175 + C121 * C160 + C136 * C145 + C176 +
            C176 + C122 * C161 + C138 * C146 + C177 + C177 + C123 * C162 +
            C140 * C147 + C178 + C178 + C124 * C163) *
               C152080 * C152054 * C151869 * C1259 -
           (C140 * C348 + C391 + C391 + C124 * C372 + C138 * C346 + C392 +
            C392 + C123 * C370 + C136 * C338 + C393 + C393 + C122 * C362 +
            C134 * C339 + C394 + C394 + C121 * C363) *
               C152080 * C152054 * C151869 * C1260 +
           (C134 * C344 + C395 + C395 + C121 * C368 + C136 * C345 + C396 +
            C396 + C122 * C369 + C138 * C347 + C397 + C397 + C123 * C371 +
            C140 * C349 + C398 + C398 + C124 * C373) *
               C152080 * C152054 * C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 + C168 +
           C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 + C140 * C145 +
           C170 + C170 + C124 * C161) *
              C152080 * C152054 * C151869 * C1347 -
          (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 + C376 +
           C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 + C134 * C341 +
           C378 + C378 + C121 * C365) *
              C152080 * C152054 * C151869 * C1348 +
          (C134 * C342 + C379 + C379 + C121 * C366 + C136 * C343 + C380 + C380 +
           C122 * C367 + C138 * C344 + C381 + C381 + C123 * C368 + C140 * C345 +
           C382 + C382 + C124 * C369) *
              C152080 * C152054 * C151869 * C1349 -
          (C140 * C1353 + C1378 + C1378 + C124 * C1369 + C138 * C1354 + C1379 +
           C1379 + C123 * C1370 + C136 * C1355 + C1380 + C1380 + C122 * C1371 +
           C134 * C1356 + C1381 + C1381 + C121 * C1372) *
              C152080 * C152054 * C151869 * C1350 +
          (C134 * C1357 + C1382 + C1382 + C121 * C1373 + C136 * C1358 + C1383 +
           C1383 + C122 * C1374 + C138 * C1359 + C1384 + C1384 + C123 * C1375 +
           C140 * C1360 + C1385 + C1385 + C124 * C1376) *
              C152080 * C152054 * C151869 * C1351) *
         C151823) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
            C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
            C140 * C145 + C170 + C170 + C124 * C161) *
               C152080 * C152054 * C2215 -
           (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
            C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
            C134 * C550 + C587 + C587 + C121 * C574) *
               C152080 * C152054 * C2216 +
           (C134 * C551 + C588 + C588 + C121 * C575 + C136 * C552 + C589 +
            C589 + C122 * C576 + C138 * C553 + C590 + C590 + C123 * C577 +
            C140 * C554 + C591 + C591 + C124 * C578) *
               C152080 * C152054 * C152217) *
              C151851 * C152255 +
          ((C134 * C549 + C592 + C592 + C121 * C573 + C136 * C548 + C593 +
            C593 + C122 * C572 + C138 * C547 + C594 + C594 + C123 * C571 +
            C140 * C555 + C595 + C595 + C124 * C579) *
               C152080 * C152054 * C2216 -
           (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
            C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
            C134 * C143 + C174 + C174 + C121 * C159) *
               C152080 * C152054 * C2215 -
           (C140 * C556 + C596 + C596 + C124 * C580 + C138 * C554 + C597 +
            C597 + C123 * C578 + C136 * C553 + C598 + C598 + C122 * C577 +
            C134 * C552 + C599 + C599 + C121 * C576) *
               C152080 * C152054 * C152217) *
              C151851 * C152240 +
          ((C134 * C144 + C175 + C175 + C121 * C160 + C136 * C145 + C176 +
            C176 + C122 * C161 + C138 * C146 + C177 + C177 + C123 * C162 +
            C140 * C147 + C178 + C178 + C124 * C163) *
               C152080 * C152054 * C2215 -
           (C140 * C557 + C600 + C600 + C124 * C581 + C138 * C555 + C601 +
            C601 + C123 * C579 + C136 * C547 + C602 + C602 + C122 * C571 +
            C134 * C548 + C603 + C603 + C121 * C572) *
               C152080 * C152054 * C2216 +
           (C134 * C553 + C604 + C604 + C121 * C577 + C136 * C554 + C605 +
            C605 + C122 * C578 + C138 * C556 + C606 + C606 + C123 * C580 +
            C140 * C558 + C607 + C607 + C124 * C582) *
               C152080 * C152054 * C152217) *
              C151851 * C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
            C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
            C140 * C145 + C170 + C170 + C124 * C161) *
               C152080 * C152054 * C2215 -
           (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
            C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
            C134 * C550 + C587 + C587 + C121 * C574) *
               C152080 * C152054 * C2216 +
           (C134 * C551 + C588 + C588 + C121 * C575 + C136 * C552 + C589 +
            C589 + C122 * C576 + C138 * C553 + C590 + C590 + C123 * C577 +
            C140 * C554 + C591 + C591 + C124 * C578) *
               C152080 * C152054 * C152217) *
              C152258 +
          ((C134 * C1083 + C1102 + C1102 + C121 * C1095 + C136 * C1084 + C1103 +
            C1103 + C122 * C1096 + C138 * C1085 + C1104 + C1104 + C123 * C1097 +
            C140 * C1086 + C1105 + C1105 + C124 * C1098) *
               C152080 * C152054 * C2216 -
           (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
            C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
            C134 * C341 + C378 + C378 + C121 * C365) *
               C152080 * C152054 * C2215 -
           (C140 * C1531 + C1568 + C1568 + C124 * C1555 + C138 * C1532 + C1569 +
            C1569 + C123 * C1556 + C136 * C1533 + C1570 + C1570 + C122 * C1557 +
            C134 * C1534 + C1571 + C1571 + C121 * C1558) *
               C152080 * C152054 * C152217) *
              C152244 +
          ((C134 * C342 + C379 + C379 + C121 * C366 + C136 * C343 + C380 +
            C380 + C122 * C367 + C138 * C344 + C381 + C381 + C123 * C368 +
            C140 * C345 + C382 + C382 + C124 * C369) *
               C152080 * C152054 * C2215 -
           (C140 * C1535 + C1572 + C1572 + C124 * C1559 + C138 * C1536 + C1573 +
            C1573 + C123 * C1560 + C136 * C1537 + C1574 + C1574 + C122 * C1561 +
            C134 * C1538 + C1575 + C1575 + C121 * C1562) *
               C152080 * C152054 * C2216 +
           (C134 * C1539 + C1576 + C1576 + C121 * C1563 + C136 * C1540 + C1577 +
            C1577 + C122 * C1564 + C138 * C1541 + C1578 + C1578 + C123 * C1565 +
            C140 * C1542 + C1579 + C1579 + C124 * C1566) *
               C152080 * C152054 * C152217) *
              C152214) *
         C151823) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
            C23049 + C23049 + C151796 * C159) *
               C152080 * C23040 +
           (C23043 * C341 + C23050 + C23050 + C152149 * C365 + C23045 * C340 +
            C23051 + C23051 + C151796 * C364) *
               C152080 * C23041 +
           (C23043 * C342 + C23052 + C23052 + C152149 * C366 + C23045 * C343 +
            C23053 + C23053 + C151796 * C367) *
               C152080 * C23042) *
              C151869 * C151851 * C129 -
          ((C23045 * C344 + C23054 + C23054 + C151796 * C368 + C23043 * C343 +
            C23055 + C23055 + C152149 * C367) *
               C152080 * C23042 +
           (C23045 * C339 + C23056 + C23056 + C151796 * C363 + C23043 * C340 +
            C23057 + C23057 + C152149 * C364) *
               C152080 * C23041 +
           (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
            C23059 + C23059 + C152149 * C159) *
               C152080 * C23040) *
              C151869 * C151851 * C130 +
          ((C23043 * C144 + C23060 + C23060 + C152149 * C160 + C23045 * C145 +
            C23061 + C23061 + C151796 * C161) *
               C152080 * C23040 +
           (C23043 * C339 + C23062 + C23062 + C152149 * C363 + C23045 * C338 +
            C23063 + C23063 + C151796 * C362) *
               C152080 * C23041 +
           (C23043 * C344 + C23064 + C23064 + C152149 * C368 + C23045 * C345 +
            C23065 + C23065 + C151796 * C369) *
               C152080 * C23042) *
              C151869 * C151851 * C131 -
          ((C23045 * C347 + C23066 + C23066 + C151796 * C371 + C23043 * C345 +
            C23067 + C23067 + C152149 * C369) *
               C152080 * C23042 +
           (C23045 * C346 + C23068 + C23068 + C151796 * C370 + C23043 * C338 +
            C23069 + C23069 + C152149 * C362) *
               C152080 * C23041 +
           (C23045 * C146 + C23070 + C23070 + C151796 * C162 + C23043 * C145 +
            C23071 + C23071 + C152149 * C161) *
               C152080 * C23040) *
              C151869 * C151851 * C132 +
          ((C23043 * C146 + C23072 + C23072 + C152149 * C162 + C23045 * C147 +
            C23073 + C23073 + C151796 * C163) *
               C152080 * C23040 +
           (C23043 * C346 + C23074 + C23074 + C152149 * C370 + C23045 * C348 +
            C23075 + C23075 + C151796 * C372) *
               C152080 * C23041 +
           (C23043 * C347 + C23076 + C23076 + C152149 * C371 + C23045 * C349 +
            C23077 + C23077 + C151796 * C373) *
               C152080 * C23042) *
              C151869 * C151851 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
             C23049 + C23049 + C151796 * C159) *
                C152080 * C23040 +
            (C23380 + C23381) * C152080 * C23041 + C23401 * C23042) *
               C151869 * C152258 -
           ((C23384 + C23385) * C152080 * C23042 +
            (C23383 + C23382) * C152080 * C23041 +
            (C23381 + C23380) * C152080 * C23040) *
               C151869 * C152244 +
           (C23401 * C23040 + (C23385 + C23384) * C152080 * C23041 +
            (C23043 * C1357 + C23310 + C23310 + C152149 * C1373 +
             C23045 * C1358 + C23311 + C23311 + C151796 * C1374) *
                C152080 * C23042) *
               C151869 * C152214) *
              C335 +
          (((C23386 + C23387) * C152080 * C23040 +
            (C23388 + C23389) * C152080 * C23041 +
            (C23390 + C23391) * C152080 * C23042) *
               C151869 * C152244 -
           (C23402 * C23042 + (C23387 + C23386) * C152080 * C23041 +
            (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
             C23059 + C23059 + C152149 * C159) *
                C152080 * C23040) *
               C151869 * C152258 -
           ((C23045 * C1359 + C23326 + C23326 + C151796 * C1375 +
             C23043 * C1358 + C23327 + C23327 + C152149 * C1374) *
                C152080 * C23042 +
            (C23391 + C23390) * C152080 * C23041 + C23402 * C23040) *
               C151869 * C152214) *
              C336 +
          (((C23043 * C144 + C23060 + C23060 + C152149 * C160 + C23045 * C145 +
             C23061 + C23061 + C151796 * C161) *
                C152080 * C23040 +
            (C23392 + C23393) * C152080 * C23041 + C23403 * C23042) *
               C151869 * C152258 -
           ((C23396 + C23397) * C152080 * C23042 +
            (C23395 + C23394) * C152080 * C23041 +
            (C23393 + C23392) * C152080 * C23040) *
               C151869 * C152244 +
           (C23403 * C23040 + (C23397 + C23396) * C152080 * C23041 +
            (C23043 * C1359 + C23342 + C23342 + C152149 * C1375 +
             C23045 * C1360 + C23343 + C23343 + C151796 * C1376) *
                C152080 * C23042) *
               C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
             C23049 + C23049 + C151796 * C159) *
                C152080 * C23040 +
            (C23380 + C23381) * C152080 * C23041 + C23401 * C23042) *
               C151869 * C1259 -
           ((C23384 + C23385) * C152080 * C23042 +
            (C23383 + C23382) * C152080 * C23041 +
            (C23381 + C23380) * C152080 * C23040) *
               C151869 * C1260 +
           (C23401 * C23040 + (C23385 + C23384) * C152080 * C23041 +
            (C23043 * C1357 + C23310 + C23310 + C152149 * C1373 +
             C23045 * C1358 + C23311 + C23311 + C151796 * C1374) *
                C152080 * C23042) *
               C151869 * C152214) *
              C152255 +
          (((C23386 + C23387) * C152080 * C23040 +
            (C23388 + C23389) * C152080 * C23041 +
            (C23390 + C23391) * C152080 * C23042) *
               C151869 * C1260 -
           (C23402 * C23042 + (C23387 + C23386) * C152080 * C23041 +
            (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
             C23059 + C23059 + C152149 * C159) *
                C152080 * C23040) *
               C151869 * C1259 -
           ((C23045 * C1359 + C23326 + C23326 + C151796 * C1375 +
             C23043 * C1358 + C23327 + C23327 + C152149 * C1374) *
                C152080 * C23042 +
            (C23391 + C23390) * C152080 * C23041 + C23402 * C23040) *
               C151869 * C152214) *
              C152240 +
          (((C23043 * C144 + C23060 + C23060 + C152149 * C160 + C23045 * C145 +
             C23061 + C23061 + C151796 * C161) *
                C152080 * C23040 +
            (C23392 + C23393) * C152080 * C23041 + C23403 * C23042) *
               C151869 * C1259 -
           ((C23396 + C23397) * C152080 * C23042 +
            (C23395 + C23394) * C152080 * C23041 +
            (C23393 + C23392) * C152080 * C23040) *
               C151869 * C1260 +
           (C23403 * C23040 + (C23397 + C23396) * C152080 * C23041 +
            (C23043 * C1359 + C23342 + C23342 + C152149 * C1375 +
             C23045 * C1360 + C23343 + C23343 + C151796 * C1376) *
                C152080 * C23042) *
               C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
            C23049 + C23049 + C151796 * C159) *
               C152080 * C23040 +
           (C23380 + C23381) * C152080 * C23041 + C23401 * C23042) *
              C151869 * C1347 -
          (C24789 * C23042 + (C23383 + C23382) * C152080 * C23041 +
           (C23381 + C23380) * C152080 * C23040) *
              C151869 * C1348 +
          (C23401 * C23040 + (C23385 + C23384) * C152080 * C23041 +
           C24803 * C23042) *
              C151869 * C1349 -
          ((C24800 + C24801) * C152080 * C23042 +
           (C24799 + C24798) * C152080 * C23041 + C24789 * C23040) *
              C151869 * C1350 +
          (C24803 * C23040 + (C24801 + C24800) * C152080 * C23041 +
           (C23043 * C24769 + C24787 + C24787 + C152149 * C24773 +
            C23045 * C24770 + C24788 + C24788 + C151796 * C24774) *
               C152080 * C23042) *
              C151869 * C1351) *
         C151823) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
             C23049 + C23049 + C151796 * C159) *
                C152080 * C23040 +
            (C23380 + C23381) * C152080 * C23041 + C23401 * C23042) *
               C2215 -
           (C25051 * C23042 + (C24420 + C24421) * C152080 * C23041 +
            (C23045 * C549 + C23626 + C23626 + C151796 * C573 + C23043 * C550 +
             C23627 + C23627 + C152149 * C574) *
                C152080 * C23040) *
               C2216 +
           ((C23043 * C551 + C23628 + C23628 + C152149 * C575 + C23045 * C552 +
             C23629 + C23629 + C151796 * C576) *
                C152080 * C23040 +
            (C25068 + C25069) * C152080 * C23041 + C25077 * C23042) *
               C152217) *
              C151851 * C152255 +
          (((C23043 * C549 + C23634 + C23634 + C152149 * C573 + C23045 * C548 +
             C23635 + C23635 + C151796 * C572) *
                C152080 * C23040 +
            (C24422 + C24423) * C152080 * C23041 + C25583 * C23042) *
               C2216 -
           (C23402 * C23042 + (C23387 + C23386) * C152080 * C23041 +
            (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
             C23059 + C23059 + C152149 * C159) *
                C152080 * C23040) *
               C2215 -
           ((C23045 * C1541 + C23640 + C23640 + C151796 * C1565 +
             C23043 * C1540 + C23641 + C23641 + C152149 * C1564) *
                C152080 * C23042 +
            (C23045 * C1532 + C23642 + C23642 + C151796 * C1556 +
             C23043 * C1533 + C23643 + C23643 + C152149 * C1557) *
                C152080 * C23041 +
            (C23045 * C553 + C23644 + C23644 + C151796 * C577 + C23043 * C552 +
             C23645 + C23645 + C152149 * C576) *
                C152080 * C23040) *
               C152217) *
              C151851 * C152240 +
          (((C23043 * C144 + C23060 + C23060 + C152149 * C160 + C23045 * C145 +
             C23061 + C23061 + C151796 * C161) *
                C152080 * C23040 +
            (C23392 + C23393) * C152080 * C23041 + C23403 * C23042) *
               C2215 -
           ((C24426 + C24427) * C152080 * C23042 +
            (C24428 + C24429) * C152080 * C23041 +
            (C23045 * C547 + C23650 + C23650 + C151796 * C571 + C23043 * C548 +
             C23651 + C23651 + C152149 * C572) *
                C152080 * C23040) *
               C2216 +
           ((C23043 * C553 + C23652 + C23652 + C152149 * C577 + C23045 * C554 +
             C23653 + C23653 + C151796 * C578) *
                C152080 * C23040 +
            (C23043 * C1532 + C23654 + C23654 + C152149 * C1556 +
             C23045 * C1531 + C23655 + C23655 + C151796 * C1555) *
                C152080 * C23041 +
            (C23043 * C1541 + C23656 + C23656 + C152149 * C1565 +
             C23045 * C1542 + C23657 + C23657 + C151796 * C1566) *
                C152080 * C23042) *
               C152217) *
              C151851 * C152208)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
             C23049 + C23049 + C151796 * C159) *
                C152080 * C23040 +
            (C23380 + C23381) * C152080 * C23041 + C23401 * C23042) *
               C2215 -
           (C25051 * C23042 + (C24420 + C24421) * C152080 * C23041 +
            (C23045 * C549 + C23626 + C23626 + C151796 * C573 + C23043 * C550 +
             C23627 + C23627 + C152149 * C574) *
                C152080 * C23040) *
               C2216 +
           ((C23043 * C551 + C23628 + C23628 + C152149 * C575 + C23045 * C552 +
             C23629 + C23629 + C151796 * C576) *
                C152080 * C23040 +
            (C25068 + C25069) * C152080 * C23041 + C25077 * C23042) *
               C152217) *
              C152258 +
          (((C24421 + C24420) * C152080 * C23040 +
            (C24419 + C24418) * C152080 * C23041 + C25797 * C23042) *
               C2216 -
           (C24789 * C23042 + (C23383 + C23382) * C152080 * C23041 +
            (C23381 + C23380) * C152080 * C23040) *
               C2215 -
           ((C25074 + C25075) * C152080 * C23042 +
            (C25071 + C25070) * C152080 * C23041 +
            (C25069 + C25068) * C152080 * C23040) *
               C152217) *
              C152244 +
          ((C23401 * C23040 + (C23385 + C23384) * C152080 * C23041 +
            C24803 * C23042) *
               C2215 -
           ((C25802 + C25803) * C152080 * C23042 +
            (C25073 + C25072) * C152080 * C23041 + C25051 * C23040) *
               C2216 +
           (C25077 * C23040 + (C25075 + C25074) * C152080 * C23041 +
            (C23043 * C25021 + C25049 + C25049 + C152149 * C25025 +
             C23045 * C25022 + C25050 + C25050 + C151796 * C25026) *
                C152080 * C23042) *
               C152217) *
              C152214) *
         C151823) /
            (p * q * std::sqrt(p + q));
    d2ee[315] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
             C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
             C140 * C145 + C170 + C170 + C124 * C161) *
                C152080 * C152054 * C4107 -
            (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
             C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
             C134 * C550 + C587 + C587 + C121 * C574) *
                C152080 * C152054 * C151956) *
               C152172 +
           ((C134 * C1083 + C1102 + C1102 + C121 * C1095 + C136 * C1084 +
             C1103 + C1103 + C122 * C1096 + C138 * C1085 + C1104 + C1104 +
             C123 * C1097 + C140 * C1086 + C1105 + C1105 + C124 * C1098) *
                C152080 * C152054 * C151956 -
            (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
             C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
             C134 * C341 + C378 + C378 + C121 * C365) *
                C152080 * C152054 * C4107) *
               C151914) *
              C151828 +
          (((C134 * C549 + C592 + C592 + C121 * C573 + C136 * C548 + C593 +
             C593 + C122 * C572 + C138 * C547 + C594 + C594 + C123 * C571 +
             C140 * C555 + C595 + C595 + C124 * C579) *
                C152080 * C152054 * C151956 -
            (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
             C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
             C134 * C143 + C174 + C174 + C121 * C159) *
                C152080 * C152054 * C4107) *
               C152172 +
           ((C134 * C340 + C383 + C383 + C121 * C364 + C136 * C339 + C384 +
             C384 + C122 * C363 + C138 * C338 + C385 + C385 + C123 * C362 +
             C140 * C346 + C386 + C386 + C124 * C370) *
                C152080 * C152054 * C4107 -
            (C140 * C1087 + C1106 + C1106 + C124 * C1099 + C138 * C1086 +
             C1107 + C1107 + C123 * C1098 + C136 * C1085 + C1108 + C1108 +
             C122 * C1097 + C134 * C1084 + C1109 + C1109 + C121 * C1096) *
                C152080 * C152054 * C151956) *
               C151914) *
              C151837 +
          (((C134 * C144 + C175 + C175 + C121 * C160 + C136 * C145 + C176 +
             C176 + C122 * C161 + C138 * C146 + C177 + C177 + C123 * C162 +
             C140 * C147 + C178 + C178 + C124 * C163) *
                C152080 * C152054 * C4107 -
            (C140 * C557 + C600 + C600 + C124 * C581 + C138 * C555 + C601 +
             C601 + C123 * C579 + C136 * C547 + C602 + C602 + C122 * C571 +
             C134 * C548 + C603 + C603 + C121 * C572) *
                C152080 * C152054 * C151956) *
               C152172 +
           ((C134 * C1085 + C1110 + C1110 + C121 * C1097 + C136 * C1086 +
             C1111 + C1111 + C122 * C1098 + C138 * C1087 + C1112 + C1112 +
             C123 * C1099 + C140 * C1088 + C1113 + C1113 + C124 * C1100) *
                C152080 * C152054 * C151956 -
            (C140 * C348 + C391 + C391 + C124 * C372 + C138 * C346 + C392 +
             C392 + C123 * C370 + C136 * C338 + C393 + C393 + C122 * C362 +
             C134 * C339 + C394 + C394 + C121 * C363) *
                C152080 * C152054 * C4107) *
               C151914) *
              C3588)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
              C23049 + C23049 + C151796 * C159) *
                 C152080 * C23040 +
             (C23380 + C23381) * C152080 * C23041 + C23401 * C23042) *
                C4107 -
            (C25051 * C23042 + (C24420 + C24421) * C152080 * C23041 +
             (C23045 * C549 + C23626 + C23626 + C151796 * C573 + C23043 * C550 +
              C23627 + C23627 + C152149 * C574) *
                 C152080 * C23040) *
                C151956) *
               C152172 +
           (((C24421 + C24420) * C152080 * C23040 +
             (C24419 + C24418) * C152080 * C23041 + C25797 * C23042) *
                C151956 -
            (C24789 * C23042 + (C23383 + C23382) * C152080 * C23041 +
             (C23381 + C23380) * C152080 * C23040) *
                C4107) *
               C151914) *
              C151828 +
          ((((C23043 * C549 + C23634 + C23634 + C152149 * C573 + C23045 * C548 +
              C23635 + C23635 + C151796 * C572) *
                 C152080 * C23040 +
             (C24422 + C24423) * C152080 * C23041 + C25583 * C23042) *
                C151956 -
            (C23402 * C23042 + (C23387 + C23386) * C152080 * C23041 +
             (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
              C23059 + C23059 + C152149 * C159) *
                 C152080 * C23040) *
                C4107) *
               C152172 +
           (((C23386 + C23387) * C152080 * C23040 +
             (C23388 + C23389) * C152080 * C23041 + C25279 * C23042) *
                C4107 -
            ((C25588 + C25589) * C152080 * C23042 +
             (C24425 + C24424) * C152080 * C23041 +
             (C24423 + C24422) * C152080 * C23040) *
                C151956) *
               C151914) *
              C151837 +
          ((((C23043 * C144 + C23060 + C23060 + C152149 * C160 + C23045 * C145 +
              C23061 + C23061 + C151796 * C161) *
                 C152080 * C23040 +
             (C23392 + C23393) * C152080 * C23041 + C23403 * C23042) *
                C4107 -
            ((C24426 + C24427) * C152080 * C23042 +
             (C24428 + C24429) * C152080 * C23041 +
             (C23045 * C547 + C23650 + C23650 + C151796 * C571 + C23043 * C548 +
              C23651 + C23651 + C152149 * C572) *
                 C152080 * C23040) *
                C151956) *
               C152172 +
           (((C24429 + C24428) * C152080 * C23040 +
             (C24427 + C24426) * C152080 * C23041 +
             (C23043 * C2055 + C24392 + C24392 + C152149 * C2063 +
              C23045 * C2056 + C24393 + C24393 + C151796 * C2064) *
                 C152080 * C23042) *
                C151956 -
            ((C23396 + C23397) * C152080 * C23042 +
             (C23395 + C23394) * C152080 * C23041 +
             (C23393 + C23392) * C152080 * C23040) *
                C4107) *
               C151914) *
              C3588)) /
            (p * q * std::sqrt(p + q));
    d2ee[316] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
             C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
             C140 * C145 + C170 + C170 + C124 * C161) *
                C152080 * C152054 * C151952 -
            (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
             C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
             C134 * C550 + C587 + C587 + C121 * C574) *
                C152080 * C152054 * C151959 +
            (C134 * C551 + C588 + C588 + C121 * C575 + C136 * C552 + C589 +
             C589 + C122 * C576 + C138 * C553 + C590 + C590 + C123 * C577 +
             C140 * C554 + C591 + C591 + C124 * C578) *
                C152080 * C152054 * C4779) *
               C152172 +
           ((C134 * C1083 + C1102 + C1102 + C121 * C1095 + C136 * C1084 +
             C1103 + C1103 + C122 * C1096 + C138 * C1085 + C1104 + C1104 +
             C123 * C1097 + C140 * C1086 + C1105 + C1105 + C124 * C1098) *
                C152080 * C152054 * C151959 -
            (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
             C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
             C134 * C341 + C378 + C378 + C121 * C365) *
                C152080 * C152054 * C151952 -
            (C140 * C1531 + C1568 + C1568 + C124 * C1555 + C138 * C1532 +
             C1569 + C1569 + C123 * C1556 + C136 * C1533 + C1570 + C1570 +
             C122 * C1557 + C134 * C1534 + C1571 + C1571 + C121 * C1558) *
                C152080 * C152054 * C4779) *
               C151914) *
              C3241 +
          (((C134 * C549 + C592 + C592 + C121 * C573 + C136 * C548 + C593 +
             C593 + C122 * C572 + C138 * C547 + C594 + C594 + C123 * C571 +
             C140 * C555 + C595 + C595 + C124 * C579) *
                C152080 * C152054 * C151959 -
            (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
             C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
             C134 * C143 + C174 + C174 + C121 * C159) *
                C152080 * C152054 * C151952 -
            (C140 * C556 + C596 + C596 + C124 * C580 + C138 * C554 + C597 +
             C597 + C123 * C578 + C136 * C553 + C598 + C598 + C122 * C577 +
             C134 * C552 + C599 + C599 + C121 * C576) *
                C152080 * C152054 * C4779) *
               C152172 +
           ((C134 * C340 + C383 + C383 + C121 * C364 + C136 * C339 + C384 +
             C384 + C122 * C363 + C138 * C338 + C385 + C385 + C123 * C362 +
             C140 * C346 + C386 + C386 + C124 * C370) *
                C152080 * C152054 * C151952 -
            (C140 * C1087 + C1106 + C1106 + C124 * C1099 + C138 * C1086 +
             C1107 + C1107 + C123 * C1098 + C136 * C1085 + C1108 + C1108 +
             C122 * C1097 + C134 * C1084 + C1109 + C1109 + C121 * C1096) *
                C152080 * C152054 * C151959 +
            (C134 * C1533 + C2681 + C2681 + C121 * C1557 + C136 * C1532 +
             C2682 + C2682 + C122 * C1556 + C138 * C1531 + C2683 + C2683 +
             C123 * C1555 + C140 * C2677 + C2684 + C2684 + C124 * C2679) *
                C152080 * C152054 * C4779) *
               C151914) *
              C151834)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
              C23049 + C23049 + C151796 * C159) *
                 C152080 * C23040 +
             (C23380 + C23381) * C152080 * C23041 + C23401 * C23042) *
                C151952 -
            (C25051 * C23042 + (C24420 + C24421) * C152080 * C23041 +
             (C23045 * C549 + C23626 + C23626 + C151796 * C573 + C23043 * C550 +
              C23627 + C23627 + C152149 * C574) *
                 C152080 * C23040) *
                C151959 +
            ((C23043 * C551 + C23628 + C23628 + C152149 * C575 + C23045 * C552 +
              C23629 + C23629 + C151796 * C576) *
                 C152080 * C23040 +
             (C25068 + C25069) * C152080 * C23041 + C25077 * C23042) *
                C4779) *
               C152172 +
           (((C24421 + C24420) * C152080 * C23040 +
             (C24419 + C24418) * C152080 * C23041 + C25797 * C23042) *
                C151959 -
            (C24789 * C23042 + (C23383 + C23382) * C152080 * C23041 +
             (C23381 + C23380) * C152080 * C23040) *
                C151952 -
            ((C25074 + C25075) * C152080 * C23042 +
             (C25071 + C25070) * C152080 * C23041 +
             (C25069 + C25068) * C152080 * C23040) *
                C4779) *
               C151914) *
              C3241 +
          ((((C23043 * C549 + C23634 + C23634 + C152149 * C573 + C23045 * C548 +
              C23635 + C23635 + C151796 * C572) *
                 C152080 * C23040 +
             (C24422 + C24423) * C152080 * C23041 + C25583 * C23042) *
                C151959 -
            (C23402 * C23042 + (C23387 + C23386) * C152080 * C23041 +
             (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
              C23059 + C23059 + C152149 * C159) *
                 C152080 * C23040) *
                C151952 -
            ((C26688 + C26689) * C152080 * C23042 +
             (C26690 + C26691) * C152080 * C23041 +
             (C23045 * C553 + C23644 + C23644 + C151796 * C577 + C23043 * C552 +
              C23645 + C23645 + C152149 * C576) *
                 C152080 * C23040) *
                C4779) *
               C152172 +
           (((C23386 + C23387) * C152080 * C23040 +
             (C23388 + C23389) * C152080 * C23041 + C25279 * C23042) *
                C151952 -
            ((C25588 + C25589) * C152080 * C23042 +
             (C24425 + C24424) * C152080 * C23041 +
             (C24423 + C24422) * C152080 * C23040) *
                C151959 +
            ((C26691 + C26690) * C152080 * C23040 +
             (C26689 + C26688) * C152080 * C23041 +
             (C23043 * C8065 + C26678 + C26678 + C152149 * C8071 +
              C23045 * C8066 + C26679 + C26679 + C151796 * C8072) *
                 C152080 * C23042) *
                C4779) *
               C151914) *
              C151834)) /
            (p * q * std::sqrt(p + q));
    d2ee[317] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
             C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
             C140 * C145 + C170 + C170 + C124 * C161) *
                C152080 * C152054 * C4107 -
            (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
             C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
             C134 * C550 + C587 + C587 + C121 * C574) *
                C152080 * C152054 * C151956) *
               C152258 +
           ((C134 * C1083 + C1102 + C1102 + C121 * C1095 + C136 * C1084 +
             C1103 + C1103 + C122 * C1096 + C138 * C1085 + C1104 + C1104 +
             C123 * C1097 + C140 * C1086 + C1105 + C1105 + C124 * C1098) *
                C152080 * C152054 * C151956 -
            (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
             C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
             C134 * C341 + C378 + C378 + C121 * C365) *
                C152080 * C152054 * C4107) *
               C152244 +
           ((C134 * C342 + C379 + C379 + C121 * C366 + C136 * C343 + C380 +
             C380 + C122 * C367 + C138 * C344 + C381 + C381 + C123 * C368 +
             C140 * C345 + C382 + C382 + C124 * C369) *
                C152080 * C152054 * C4107 -
            (C140 * C1535 + C1572 + C1572 + C124 * C1559 + C138 * C1536 +
             C1573 + C1573 + C123 * C1560 + C136 * C1537 + C1574 + C1574 +
             C122 * C1561 + C134 * C1538 + C1575 + C1575 + C121 * C1562) *
                C152080 * C152054 * C151956) *
               C152214) *
              C3241 +
          (((C134 * C549 + C592 + C592 + C121 * C573 + C136 * C548 + C593 +
             C593 + C122 * C572 + C138 * C547 + C594 + C594 + C123 * C571 +
             C140 * C555 + C595 + C595 + C124 * C579) *
                C152080 * C152054 * C151956 -
            (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
             C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
             C134 * C143 + C174 + C174 + C121 * C159) *
                C152080 * C152054 * C4107) *
               C152258 +
           ((C134 * C340 + C383 + C383 + C121 * C364 + C136 * C339 + C384 +
             C384 + C122 * C363 + C138 * C338 + C385 + C385 + C123 * C362 +
             C140 * C346 + C386 + C386 + C124 * C370) *
                C152080 * C152054 * C4107 -
            (C140 * C1087 + C1106 + C1106 + C124 * C1099 + C138 * C1086 +
             C1107 + C1107 + C123 * C1098 + C136 * C1085 + C1108 + C1108 +
             C122 * C1097 + C134 * C1084 + C1109 + C1109 + C121 * C1096) *
                C152080 * C152054 * C151956) *
               C152244 +
           ((C134 * C1537 + C1920 + C1920 + C121 * C1561 + C136 * C1536 +
             C1921 + C1921 + C122 * C1560 + C138 * C1535 + C1922 + C1922 +
             C123 * C1559 + C140 * C1916 + C1923 + C1923 + C124 * C1918) *
                C152080 * C152054 * C151956 -
            (C140 * C347 + C387 + C387 + C124 * C371 + C138 * C345 + C388 +
             C388 + C123 * C369 + C136 * C344 + C389 + C389 + C122 * C368 +
             C134 * C343 + C390 + C390 + C121 * C367) *
                C152080 * C152054 * C4107) *
               C152214) *
              C151834)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
            C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
            C140 * C145 + C170 + C170 + C124 * C161) *
               C152080 * C152054 * C4107 -
           (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
            C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
            C134 * C550 + C587 + C587 + C121 * C574) *
               C152080 * C152054 * C151956) *
              C151851 * C152264 +
          ((C134 * C549 + C592 + C592 + C121 * C573 + C136 * C548 + C593 +
            C593 + C122 * C572 + C138 * C547 + C594 + C594 + C123 * C571 +
            C140 * C555 + C595 + C595 + C124 * C579) *
               C152080 * C152054 * C151956 -
           (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
            C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
            C134 * C143 + C174 + C174 + C121 * C159) *
               C152080 * C152054 * C4107) *
              C151851 * C152257 +
          ((C134 * C144 + C175 + C175 + C121 * C160 + C136 * C145 + C176 +
            C176 + C122 * C161 + C138 * C146 + C177 + C177 + C123 * C162 +
            C140 * C147 + C178 + C178 + C124 * C163) *
               C152080 * C152054 * C4107 -
           (C140 * C557 + C600 + C600 + C124 * C581 + C138 * C555 + C601 +
            C601 + C123 * C579 + C136 * C547 + C602 + C602 + C122 * C571 +
            C134 * C548 + C603 + C603 + C121 * C572) *
               C152080 * C152054 * C151956) *
              C151851 * C152242 +
          ((C134 * C547 + C886 + C886 + C121 * C571 + C136 * C555 + C887 +
            C887 + C122 * C579 + C138 * C557 + C888 + C888 + C123 * C581 +
            C140 * C882 + C889 + C889 + C124 * C884) *
               C152080 * C152054 * C151956 -
           (C140 * C148 + C179 + C179 + C124 * C164 + C138 * C147 + C180 +
            C180 + C123 * C163 + C136 * C146 + C181 + C181 + C122 * C162 +
            C134 * C145 + C182 + C182 + C121 * C161) *
               C152080 * C152054 * C4107) *
              C151851 * C152218)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
            C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
            C140 * C145 + C170 + C170 + C124 * C161) *
               C152080 * C152054 * C152266 -
           (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
            C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
            C134 * C550 + C587 + C587 + C121 * C574) *
               C152080 * C152054 * C152263 +
           (C134 * C551 + C588 + C588 + C121 * C575 + C136 * C552 + C589 +
            C589 + C122 * C576 + C138 * C553 + C590 + C590 + C123 * C577 +
            C140 * C554 + C591 + C591 + C124 * C578) *
               C152080 * C152054 * C152252 -
           (C140 * C2451 + C2476 + C2476 + C124 * C2467 + C138 * C2452 + C2477 +
            C2477 + C123 * C2468 + C136 * C2453 + C2478 + C2478 + C122 * C2469 +
            C134 * C2454 + C2479 + C2479 + C121 * C2470) *
               C152080 * C152054 * C152230) *
              C151851 * C3241 +
          ((C134 * C549 + C592 + C592 + C121 * C573 + C136 * C548 + C593 +
            C593 + C122 * C572 + C138 * C547 + C594 + C594 + C123 * C571 +
            C140 * C555 + C595 + C595 + C124 * C579) *
               C152080 * C152054 * C152263 -
           (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
            C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
            C134 * C143 + C174 + C174 + C121 * C159) *
               C152080 * C152054 * C152266 -
           (C140 * C556 + C596 + C596 + C124 * C580 + C138 * C554 + C597 +
            C597 + C123 * C578 + C136 * C553 + C598 + C598 + C122 * C577 +
            C134 * C552 + C599 + C599 + C121 * C576) *
               C152080 * C152054 * C152252 +
           (C134 * C2453 + C2822 + C2822 + C121 * C2469 + C136 * C2452 + C2823 +
            C2823 + C122 * C2468 + C138 * C2451 + C2824 + C2824 + C123 * C2467 +
            C140 * C2818 + C2825 + C2825 + C124 * C2820) *
               C152080 * C152054 * C152230) *
              C151851 * C151834)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
             C23049 + C23049 + C151796 * C159) *
                C152080 * C23040 +
            (C23380 + C23381) * C152080 * C23041 + C23401 * C23042) *
               C4107 -
           (C25051 * C23042 + (C24420 + C24421) * C152080 * C23041 +
            (C23045 * C549 + C23626 + C23626 + C151796 * C573 + C23043 * C550 +
             C23627 + C23627 + C152149 * C574) *
                C152080 * C23040) *
               C151956) *
              C151851 * C152264 +
          (((C23043 * C549 + C23634 + C23634 + C152149 * C573 + C23045 * C548 +
             C23635 + C23635 + C151796 * C572) *
                C152080 * C23040 +
            (C24422 + C24423) * C152080 * C23041 + C25583 * C23042) *
               C151956 -
           (C23402 * C23042 + (C23387 + C23386) * C152080 * C23041 +
            (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
             C23059 + C23059 + C152149 * C159) *
                C152080 * C23040) *
               C4107) *
              C151851 * C152257 +
          (((C23043 * C144 + C23060 + C23060 + C152149 * C160 + C23045 * C145 +
             C23061 + C23061 + C151796 * C161) *
                C152080 * C23040 +
            (C23392 + C23393) * C152080 * C23041 + C23403 * C23042) *
               C4107 -
           ((C24426 + C24427) * C152080 * C23042 +
            (C24428 + C24429) * C152080 * C23041 +
            (C23045 * C547 + C23650 + C23650 + C151796 * C571 + C23043 * C548 +
             C23651 + C23651 + C152149 * C572) *
                C152080 * C23040) *
               C151956) *
              C151851 * C152242 +
          (((C23043 * C547 + C24068 + C24068 + C152149 * C571 + C23045 * C555 +
             C24069 + C24069 + C151796 * C579) *
                C152080 * C23040 +
            (C23043 * C1086 + C24070 + C24070 + C152149 * C1098 +
             C23045 * C1087 + C24071 + C24071 + C151796 * C1099) *
                C152080 * C23041 +
            (C23043 * C1535 + C24072 + C24072 + C152149 * C1559 +
             C23045 * C1916 + C24073 + C24073 + C151796 * C1918) *
                C152080 * C23042) *
               C151956 -
           ((C23873 + C23872) * C152080 * C23042 +
            (C23871 + C23870) * C152080 * C23041 +
            (C23045 * C146 + C23070 + C23070 + C151796 * C162 + C23043 * C145 +
             C23071 + C23071 + C152149 * C161) *
                C152080 * C23040) *
               C4107) *
              C151851 * C152218)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
              C23049 + C23049 + C151796 * C159) *
                 C152080 * C23040 +
             (C23380 + C23381) * C152080 * C23041 + C23401 * C23042) *
                C4107 -
            (C25051 * C23042 + (C24420 + C24421) * C152080 * C23041 +
             (C23045 * C549 + C23626 + C23626 + C151796 * C573 + C23043 * C550 +
              C23627 + C23627 + C152149 * C574) *
                 C152080 * C23040) *
                C151956) *
               C152258 +
           (((C24421 + C24420) * C152080 * C23040 +
             (C24419 + C24418) * C152080 * C23041 + C25797 * C23042) *
                C151956 -
            (C24789 * C23042 + (C23383 + C23382) * C152080 * C23041 +
             (C23381 + C23380) * C152080 * C23040) *
                C4107) *
               C152244 +
           ((C23401 * C23040 + (C23385 + C23384) * C152080 * C23041 +
             C24803 * C23042) *
                C4107 -
            ((C25802 + C25803) * C152080 * C23042 +
             (C25073 + C25072) * C152080 * C23041 + C25051 * C23040) *
                C151956) *
               C152214) *
              C3241 +
          ((((C23043 * C549 + C23634 + C23634 + C152149 * C573 + C23045 * C548 +
              C23635 + C23635 + C151796 * C572) *
                 C152080 * C23040 +
             (C24422 + C24423) * C152080 * C23041 + C25583 * C23042) *
                C151956 -
            (C23402 * C23042 + (C23387 + C23386) * C152080 * C23041 +
             (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
              C23059 + C23059 + C152149 * C159) *
                 C152080 * C23040) *
                C4107) *
               C152258 +
           (((C23386 + C23387) * C152080 * C23040 +
             (C23388 + C23389) * C152080 * C23041 + C25279 * C23042) *
                C4107 -
            ((C25588 + C25589) * C152080 * C23042 +
             (C24425 + C24424) * C152080 * C23041 +
             (C24423 + C24422) * C152080 * C23040) *
                C151956) *
               C152244 +
           ((C25583 * C23040 + (C25589 + C25588) * C152080 * C23041 +
             (C23043 * C8842 + C25581 + C25581 + C152149 * C8848 +
              C23045 * C8843 + C25582 + C25582 + C151796 * C8849) *
                 C152080 * C23042) *
                C151956 -
            ((C25284 + C25285) * C152080 * C23042 +
             (C23391 + C23390) * C152080 * C23041 + C23402 * C23040) *
                C4107) *
               C152214) *
              C151834)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
             C23049 + C23049 + C151796 * C159) *
                C152080 * C23040 +
            (C23380 + C23381) * C152080 * C23041 + C23401 * C23042) *
               C152266 -
           (C25051 * C23042 + (C24420 + C24421) * C152080 * C23041 +
            (C23045 * C549 + C23626 + C23626 + C151796 * C573 + C23043 * C550 +
             C23627 + C23627 + C152149 * C574) *
                C152080 * C23040) *
               C152263 +
           ((C23043 * C551 + C23628 + C23628 + C152149 * C575 + C23045 * C552 +
             C23629 + C23629 + C151796 * C576) *
                C152080 * C23040 +
            (C25068 + C25069) * C152080 * C23041 + C25077 * C23042) *
               C152252 -
           ((C27110 + C27111) * C152080 * C23042 +
            (C27112 + C27113) * C152080 * C23041 +
            (C23045 * C2453 + C26372 + C26372 + C151796 * C2469 +
             C23043 * C2454 + C26373 + C26373 + C152149 * C2470) *
                C152080 * C23040) *
               C152230) *
              C151851 * C3241 +
          (((C23043 * C549 + C23634 + C23634 + C152149 * C573 + C23045 * C548 +
             C23635 + C23635 + C151796 * C572) *
                C152080 * C23040 +
            (C24422 + C24423) * C152080 * C23041 + C25583 * C23042) *
               C152263 -
           (C23402 * C23042 + (C23387 + C23386) * C152080 * C23041 +
            (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
             C23059 + C23059 + C152149 * C159) *
                C152080 * C23040) *
               C152266 -
           ((C26688 + C26689) * C152080 * C23042 +
            (C26690 + C26691) * C152080 * C23041 +
            (C23045 * C553 + C23644 + C23644 + C151796 * C577 + C23043 * C552 +
             C23645 + C23645 + C152149 * C576) *
                C152080 * C23040) *
               C152252 +
           ((C23043 * C2453 + C26886 + C26886 + C152149 * C2469 +
             C23045 * C2452 + C26887 + C26887 + C151796 * C2468) *
                C152080 * C23040 +
            (C23043 * C2956 + C26888 + C26888 + C152149 * C2964 +
             C23045 * C2957 + C26889 + C26889 + C151796 * C2965) *
                C152080 * C23041 +
            (C23043 * C10150 + C26890 + C26890 + C152149 * C10156 +
             C23045 * C10151 + C26891 + C26891 + C151796 * C10157) *
                C152080 * C23042) *
               C152230) *
              C151851 * C151834)) /
            (p * q * std::sqrt(p + q));
    d2ee[318] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 +
                     C168 + C168 + C122 * C159 + C138 * C144 + C169 + C169 +
                     C123 * C160 + C140 * C145 + C170 + C170 + C124 * C161) *
                        C152080 * C152054 * C151952 -
                    (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 +
                     C585 + C585 + C123 * C572 + C136 * C549 + C586 + C586 +
                     C122 * C573 + C134 * C550 + C587 + C587 + C121 * C574) *
                        C152080 * C152054 * C151959 +
                    (C134 * C551 + C588 + C588 + C121 * C575 + C136 * C552 +
                     C589 + C589 + C122 * C576 + C138 * C553 + C590 + C590 +
                     C123 * C577 + C140 * C554 + C591 + C591 + C124 * C578) *
                        C152080 * C152054 * C4779) *
                       C151851 * C151828 +
                   ((C134 * C549 + C592 + C592 + C121 * C573 + C136 * C548 +
                     C593 + C593 + C122 * C572 + C138 * C547 + C594 + C594 +
                     C123 * C571 + C140 * C555 + C595 + C595 + C124 * C579) *
                        C152080 * C152054 * C151959 -
                    (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 +
                     C172 + C172 + C123 * C161 + C136 * C144 + C173 + C173 +
                     C122 * C160 + C134 * C143 + C174 + C174 + C121 * C159) *
                        C152080 * C152054 * C151952 -
                    (C140 * C556 + C596 + C596 + C124 * C580 + C138 * C554 +
                     C597 + C597 + C123 * C578 + C136 * C553 + C598 + C598 +
                     C122 * C577 + C134 * C552 + C599 + C599 + C121 * C576) *
                        C152080 * C152054 * C4779) *
                       C151851 * C151837 +
                   ((C134 * C144 + C175 + C175 + C121 * C160 + C136 * C145 +
                     C176 + C176 + C122 * C161 + C138 * C146 + C177 + C177 +
                     C123 * C162 + C140 * C147 + C178 + C178 + C124 * C163) *
                        C152080 * C152054 * C151952 -
                    (C140 * C557 + C600 + C600 + C124 * C581 + C138 * C555 +
                     C601 + C601 + C123 * C579 + C136 * C547 + C602 + C602 +
                     C122 * C571 + C134 * C548 + C603 + C603 + C121 * C572) *
                        C152080 * C152054 * C151959 +
                    (C134 * C553 + C604 + C604 + C121 * C577 + C136 * C554 +
                     C605 + C605 + C122 * C578 + C138 * C556 + C606 + C606 +
                     C123 * C580 + C140 * C558 + C607 + C607 + C124 * C582) *
                        C152080 * C152054 * C4779) *
                       C151851 * C3588)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C23043 * C142 + C23048 + C23048 + C152149 * C158 +
                      C23045 * C143 + C23049 + C23049 + C151796 * C159) *
                         C152080 * C23040 +
                     (C23380 + C23381) * C152080 * C23041 + C23401 * C23042) *
                        C151952 -
                    (C25051 * C23042 + (C24420 + C24421) * C152080 * C23041 +
                     (C23045 * C549 + C23626 + C23626 + C151796 * C573 +
                      C23043 * C550 + C23627 + C23627 + C152149 * C574) *
                         C152080 * C23040) *
                        C151959 +
                    ((C23043 * C551 + C23628 + C23628 + C152149 * C575 +
                      C23045 * C552 + C23629 + C23629 + C151796 * C576) *
                         C152080 * C23040 +
                     (C25068 + C25069) * C152080 * C23041 + C25077 * C23042) *
                        C4779) *
                       C151851 * C151828 +
                   (((C23043 * C549 + C23634 + C23634 + C152149 * C573 +
                      C23045 * C548 + C23635 + C23635 + C151796 * C572) *
                         C152080 * C23040 +
                     (C24422 + C24423) * C152080 * C23041 + C25583 * C23042) *
                        C151959 -
                    (C23402 * C23042 + (C23387 + C23386) * C152080 * C23041 +
                     (C23045 * C144 + C23058 + C23058 + C151796 * C160 +
                      C23043 * C143 + C23059 + C23059 + C152149 * C159) *
                         C152080 * C23040) *
                        C151952 -
                    ((C26688 + C26689) * C152080 * C23042 +
                     (C26690 + C26691) * C152080 * C23041 +
                     (C23045 * C553 + C23644 + C23644 + C151796 * C577 +
                      C23043 * C552 + C23645 + C23645 + C152149 * C576) *
                         C152080 * C23040) *
                        C4779) *
                       C151851 * C151837 +
                   (((C23043 * C144 + C23060 + C23060 + C152149 * C160 +
                      C23045 * C145 + C23061 + C23061 + C151796 * C161) *
                         C152080 * C23040 +
                     (C23392 + C23393) * C152080 * C23041 + C23403 * C23042) *
                        C151952 -
                    ((C24426 + C24427) * C152080 * C23042 +
                     (C24428 + C24429) * C152080 * C23041 +
                     (C23045 * C547 + C23650 + C23650 + C151796 * C571 +
                      C23043 * C548 + C23651 + C23651 + C152149 * C572) *
                         C152080 * C23040) *
                        C151959 +
                    ((C23043 * C553 + C23652 + C23652 + C152149 * C577 +
                      C23045 * C554 + C23653 + C23653 + C151796 * C578) *
                         C152080 * C23040 +
                     (C23043 * C1532 + C23654 + C23654 + C152149 * C1556 +
                      C23045 * C1531 + C23655 + C23655 + C151796 * C1555) *
                         C152080 * C23041 +
                     (C23043 * C1541 + C23656 + C23656 + C152149 * C1565 +
                      C23045 * C1542 + C23657 + C23657 + C151796 * C1566) *
                         C152080 * C23042) *
                        C4779) *
                       C151851 * C3588)) /
                     (p * q * std::sqrt(p + q));
    d2ee[319] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
            C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
            C140 * C145 + C170 + C170 + C124 * C161) *
               C152080 * C152054 * C4107 -
           (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
            C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
            C134 * C550 + C587 + C587 + C121 * C574) *
               C152080 * C152054 * C151956) *
              C151851 * C152264 +
          ((C134 * C549 + C592 + C592 + C121 * C573 + C136 * C548 + C593 +
            C593 + C122 * C572 + C138 * C547 + C594 + C594 + C123 * C571 +
            C140 * C555 + C595 + C595 + C124 * C579) *
               C152080 * C152054 * C151956 -
           (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
            C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
            C134 * C143 + C174 + C174 + C121 * C159) *
               C152080 * C152054 * C4107) *
              C151851 * C152257 +
          ((C134 * C144 + C175 + C175 + C121 * C160 + C136 * C145 + C176 +
            C176 + C122 * C161 + C138 * C146 + C177 + C177 + C123 * C162 +
            C140 * C147 + C178 + C178 + C124 * C163) *
               C152080 * C152054 * C4107 -
           (C140 * C557 + C600 + C600 + C124 * C581 + C138 * C555 + C601 +
            C601 + C123 * C579 + C136 * C547 + C602 + C602 + C122 * C571 +
            C134 * C548 + C603 + C603 + C121 * C572) *
               C152080 * C152054 * C151956) *
              C151851 * C152242 +
          ((C134 * C547 + C886 + C886 + C121 * C571 + C136 * C555 + C887 +
            C887 + C122 * C579 + C138 * C557 + C888 + C888 + C123 * C581 +
            C140 * C882 + C889 + C889 + C124 * C884) *
               C152080 * C152054 * C151956 -
           (C140 * C148 + C179 + C179 + C124 * C164 + C138 * C147 + C180 +
            C180 + C123 * C163 + C136 * C146 + C181 + C181 + C122 * C162 +
            C134 * C145 + C182 + C182 + C121 * C161) *
               C152080 * C152054 * C4107) *
              C151851 * C152218)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
             C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
             C140 * C145 + C170 + C170 + C124 * C161) *
                C152080 * C152054 * C4107 -
            (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
             C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
             C134 * C550 + C587 + C587 + C121 * C574) *
                C152080 * C152054 * C151956) *
               C152258 +
           ((C134 * C1083 + C1102 + C1102 + C121 * C1095 + C136 * C1084 +
             C1103 + C1103 + C122 * C1096 + C138 * C1085 + C1104 + C1104 +
             C123 * C1097 + C140 * C1086 + C1105 + C1105 + C124 * C1098) *
                C152080 * C152054 * C151956 -
            (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
             C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
             C134 * C341 + C378 + C378 + C121 * C365) *
                C152080 * C152054 * C4107) *
               C152244 +
           ((C134 * C342 + C379 + C379 + C121 * C366 + C136 * C343 + C380 +
             C380 + C122 * C367 + C138 * C344 + C381 + C381 + C123 * C368 +
             C140 * C345 + C382 + C382 + C124 * C369) *
                C152080 * C152054 * C4107 -
            (C140 * C1535 + C1572 + C1572 + C124 * C1559 + C138 * C1536 +
             C1573 + C1573 + C123 * C1560 + C136 * C1537 + C1574 + C1574 +
             C122 * C1561 + C134 * C1538 + C1575 + C1575 + C121 * C1562) *
                C152080 * C152054 * C151956) *
               C152214) *
              C3241 +
          (((C134 * C549 + C592 + C592 + C121 * C573 + C136 * C548 + C593 +
             C593 + C122 * C572 + C138 * C547 + C594 + C594 + C123 * C571 +
             C140 * C555 + C595 + C595 + C124 * C579) *
                C152080 * C152054 * C151956 -
            (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
             C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
             C134 * C143 + C174 + C174 + C121 * C159) *
                C152080 * C152054 * C4107) *
               C152258 +
           ((C134 * C340 + C383 + C383 + C121 * C364 + C136 * C339 + C384 +
             C384 + C122 * C363 + C138 * C338 + C385 + C385 + C123 * C362 +
             C140 * C346 + C386 + C386 + C124 * C370) *
                C152080 * C152054 * C4107 -
            (C140 * C1087 + C1106 + C1106 + C124 * C1099 + C138 * C1086 +
             C1107 + C1107 + C123 * C1098 + C136 * C1085 + C1108 + C1108 +
             C122 * C1097 + C134 * C1084 + C1109 + C1109 + C121 * C1096) *
                C152080 * C152054 * C151956) *
               C152244 +
           ((C134 * C1537 + C1920 + C1920 + C121 * C1561 + C136 * C1536 +
             C1921 + C1921 + C122 * C1560 + C138 * C1535 + C1922 + C1922 +
             C123 * C1559 + C140 * C1916 + C1923 + C1923 + C124 * C1918) *
                C152080 * C152054 * C151956 -
            (C140 * C347 + C387 + C387 + C124 * C371 + C138 * C345 + C388 +
             C388 + C123 * C369 + C136 * C344 + C389 + C389 + C122 * C368 +
             C134 * C343 + C390 + C390 + C121 * C367) *
                C152080 * C152054 * C4107) *
               C152214) *
              C151834)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
             C23049 + C23049 + C151796 * C159) *
                C152080 * C23040 +
            (C23380 + C23381) * C152080 * C23041 + C23401 * C23042) *
               C4107 -
           (C25051 * C23042 + (C24420 + C24421) * C152080 * C23041 +
            (C23045 * C549 + C23626 + C23626 + C151796 * C573 + C23043 * C550 +
             C23627 + C23627 + C152149 * C574) *
                C152080 * C23040) *
               C151956) *
              C151851 * C152264 +
          (((C23043 * C549 + C23634 + C23634 + C152149 * C573 + C23045 * C548 +
             C23635 + C23635 + C151796 * C572) *
                C152080 * C23040 +
            (C24422 + C24423) * C152080 * C23041 + C25583 * C23042) *
               C151956 -
           (C23402 * C23042 + (C23387 + C23386) * C152080 * C23041 +
            (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
             C23059 + C23059 + C152149 * C159) *
                C152080 * C23040) *
               C4107) *
              C151851 * C152257 +
          (((C23043 * C144 + C23060 + C23060 + C152149 * C160 + C23045 * C145 +
             C23061 + C23061 + C151796 * C161) *
                C152080 * C23040 +
            (C23392 + C23393) * C152080 * C23041 + C23403 * C23042) *
               C4107 -
           ((C24426 + C24427) * C152080 * C23042 +
            (C24428 + C24429) * C152080 * C23041 +
            (C23045 * C547 + C23650 + C23650 + C151796 * C571 + C23043 * C548 +
             C23651 + C23651 + C152149 * C572) *
                C152080 * C23040) *
               C151956) *
              C151851 * C152242 +
          (((C23043 * C547 + C24068 + C24068 + C152149 * C571 + C23045 * C555 +
             C24069 + C24069 + C151796 * C579) *
                C152080 * C23040 +
            (C23043 * C1086 + C24070 + C24070 + C152149 * C1098 +
             C23045 * C1087 + C24071 + C24071 + C151796 * C1099) *
                C152080 * C23041 +
            (C23043 * C1535 + C24072 + C24072 + C152149 * C1559 +
             C23045 * C1916 + C24073 + C24073 + C151796 * C1918) *
                C152080 * C23042) *
               C151956 -
           ((C23873 + C23872) * C152080 * C23042 +
            (C23871 + C23870) * C152080 * C23041 +
            (C23045 * C146 + C23070 + C23070 + C151796 * C162 + C23043 * C145 +
             C23071 + C23071 + C152149 * C161) *
                C152080 * C23040) *
               C4107) *
              C151851 * C152218)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
              C23049 + C23049 + C151796 * C159) *
                 C152080 * C23040 +
             (C23380 + C23381) * C152080 * C23041 + C23401 * C23042) *
                C4107 -
            (C25051 * C23042 + (C24420 + C24421) * C152080 * C23041 +
             (C23045 * C549 + C23626 + C23626 + C151796 * C573 + C23043 * C550 +
              C23627 + C23627 + C152149 * C574) *
                 C152080 * C23040) *
                C151956) *
               C152258 +
           (((C24421 + C24420) * C152080 * C23040 +
             (C24419 + C24418) * C152080 * C23041 + C25797 * C23042) *
                C151956 -
            (C24789 * C23042 + (C23383 + C23382) * C152080 * C23041 +
             (C23381 + C23380) * C152080 * C23040) *
                C4107) *
               C152244 +
           ((C23401 * C23040 + (C23385 + C23384) * C152080 * C23041 +
             C24803 * C23042) *
                C4107 -
            ((C25802 + C25803) * C152080 * C23042 +
             (C25073 + C25072) * C152080 * C23041 + C25051 * C23040) *
                C151956) *
               C152214) *
              C3241 +
          ((((C23043 * C549 + C23634 + C23634 + C152149 * C573 + C23045 * C548 +
              C23635 + C23635 + C151796 * C572) *
                 C152080 * C23040 +
             (C24422 + C24423) * C152080 * C23041 + C25583 * C23042) *
                C151956 -
            (C23402 * C23042 + (C23387 + C23386) * C152080 * C23041 +
             (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
              C23059 + C23059 + C152149 * C159) *
                 C152080 * C23040) *
                C4107) *
               C152258 +
           (((C23386 + C23387) * C152080 * C23040 +
             (C23388 + C23389) * C152080 * C23041 + C25279 * C23042) *
                C4107 -
            ((C25588 + C25589) * C152080 * C23042 +
             (C24425 + C24424) * C152080 * C23041 +
             (C24423 + C24422) * C152080 * C23040) *
                C151956) *
               C152244 +
           ((C25583 * C23040 + (C25589 + C25588) * C152080 * C23041 +
             (C23043 * C8842 + C25581 + C25581 + C152149 * C8848 +
              C23045 * C8843 + C25582 + C25582 + C151796 * C8849) *
                 C152080 * C23042) *
                C151956 -
            ((C25284 + C25285) * C152080 * C23042 +
             (C23391 + C23390) * C152080 * C23041 + C23402 * C23040) *
                C4107) *
               C152214) *
              C151834)) /
            (p * q * std::sqrt(p + q));
    d2ee[320] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
            C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
            C140 * C145 + C170 + C170 + C124 * C161) *
               C152080 * C152054 * C151869 * C152172 -
           (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
            C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
            C134 * C341 + C378 + C378 + C121 * C365) *
               C152080 * C152054 * C151869 * C151914) *
              C739 +
          ((C134 * C340 + C383 + C383 + C121 * C364 + C136 * C339 + C384 +
            C384 + C122 * C363 + C138 * C338 + C385 + C385 + C123 * C362 +
            C140 * C346 + C386 + C386 + C124 * C370) *
               C152080 * C152054 * C151869 * C151914 -
           (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
            C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
            C134 * C143 + C174 + C174 + C121 * C159) *
               C152080 * C152054 * C151869 * C152172) *
              C740 +
          ((C134 * C144 + C175 + C175 + C121 * C160 + C136 * C145 + C176 +
            C176 + C122 * C161 + C138 * C146 + C177 + C177 + C123 * C162 +
            C140 * C147 + C178 + C178 + C124 * C163) *
               C152080 * C152054 * C151869 * C152172 -
           (C140 * C348 + C391 + C391 + C124 * C372 + C138 * C346 + C392 +
            C392 + C123 * C370 + C136 * C338 + C393 + C393 + C122 * C362 +
            C134 * C339 + C394 + C394 + C121 * C363) *
               C152080 * C152054 * C151869 * C151914) *
              C741 +
          ((C134 * C338 + C747 + C747 + C121 * C362 + C136 * C346 + C748 +
            C748 + C122 * C370 + C138 * C348 + C749 + C749 + C123 * C372 +
            C140 * C743 + C750 + C750 + C124 * C745) *
               C152080 * C152054 * C151869 * C151914 -
           (C140 * C148 + C179 + C179 + C124 * C164 + C138 * C147 + C180 +
            C180 + C123 * C163 + C136 * C146 + C181 + C181 + C122 * C162 +
            C134 * C145 + C182 + C182 + C121 * C161) *
               C152080 * C152054 * C151869 * C152172) *
              C152218)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
            C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
            C140 * C145 + C170 + C170 + C124 * C161) *
               C152080 * C152054 * C151869 * C1709 -
           (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
            C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
            C134 * C341 + C378 + C378 + C121 * C365) *
               C152080 * C152054 * C151869 * C1710 +
           (C134 * C342 + C379 + C379 + C121 * C366 + C136 * C343 + C380 +
            C380 + C122 * C367 + C138 * C344 + C381 + C381 + C123 * C368 +
            C140 * C345 + C382 + C382 + C124 * C369) *
               C152080 * C152054 * C151869 * C1711 -
           (C140 * C1353 + C1378 + C1378 + C124 * C1369 + C138 * C1354 + C1379 +
            C1379 + C123 * C1370 + C136 * C1355 + C1380 + C1380 + C122 * C1371 +
            C134 * C1356 + C1381 + C1381 + C121 * C1372) *
               C152080 * C152054 * C151869 * C152224) *
              C152158 +
          ((C134 * C340 + C383 + C383 + C121 * C364 + C136 * C339 + C384 +
            C384 + C122 * C363 + C138 * C338 + C385 + C385 + C123 * C362 +
            C140 * C346 + C386 + C386 + C124 * C370) *
               C152080 * C152054 * C151869 * C1710 -
           (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
            C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
            C134 * C143 + C174 + C174 + C121 * C159) *
               C152080 * C152054 * C151869 * C1709 -
           (C140 * C347 + C387 + C387 + C124 * C371 + C138 * C345 + C388 +
            C388 + C123 * C369 + C136 * C344 + C389 + C389 + C122 * C368 +
            C134 * C343 + C390 + C390 + C121 * C367) *
               C152080 * C152054 * C151869 * C1711 +
           (C134 * C1355 + C1719 + C1719 + C121 * C1371 + C136 * C1354 + C1720 +
            C1720 + C122 * C1370 + C138 * C1353 + C1721 + C1721 + C123 * C1369 +
            C140 * C1715 + C1722 + C1722 + C124 * C1717) *
               C152080 * C152054 * C151869 * C152224) *
              C151834)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
             C23049 + C23049 + C151796 * C159) *
                C152080 * C23040 +
            (C23380 + C23381) * C152080 * C23041 + C23401 * C23042) *
               C151869 * C152172 -
           ((C23384 + C23385) * C152080 * C23042 +
            (C23383 + C23382) * C152080 * C23041 +
            (C23381 + C23380) * C152080 * C23040) *
               C151869 * C151914) *
              C739 +
          (((C23386 + C23387) * C152080 * C23040 +
            (C23388 + C23389) * C152080 * C23041 +
            (C23390 + C23391) * C152080 * C23042) *
               C151869 * C151914 -
           (C23402 * C23042 + (C23387 + C23386) * C152080 * C23041 +
            (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
             C23059 + C23059 + C152149 * C159) *
                C152080 * C23040) *
               C151869 * C152172) *
              C740 +
          (((C23043 * C144 + C23060 + C23060 + C152149 * C160 + C23045 * C145 +
             C23061 + C23061 + C151796 * C161) *
                C152080 * C23040 +
            (C23392 + C23393) * C152080 * C23041 + C23403 * C23042) *
               C151869 * C152172 -
           ((C23396 + C23397) * C152080 * C23042 +
            (C23395 + C23394) * C152080 * C23041 +
            (C23393 + C23392) * C152080 * C23040) *
               C151869 * C151914) *
              C741 +
          (((C23870 + C23871) * C152080 * C23040 +
            (C23872 + C23873) * C152080 * C23041 +
            (C23043 * C1353 + C23860 + C23860 + C152149 * C1369 +
             C23045 * C1715 + C23861 + C23861 + C151796 * C1717) *
                C152080 * C23042) *
               C151869 * C151914 -
           ((C23873 + C23872) * C152080 * C23042 +
            (C23871 + C23870) * C152080 * C23041 +
            (C23045 * C146 + C23070 + C23070 + C151796 * C162 + C23043 * C145 +
             C23071 + C23071 + C152149 * C161) *
                C152080 * C23040) *
               C151869 * C152172) *
              C152218)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
             C23049 + C23049 + C151796 * C159) *
                C152080 * C23040 +
            (C23380 + C23381) * C152080 * C23041 + C23401 * C23042) *
               C151869 * C1709 -
           (C24789 * C23042 + (C23383 + C23382) * C152080 * C23041 +
            (C23381 + C23380) * C152080 * C23040) *
               C151869 * C1710 +
           (C23401 * C23040 + (C23385 + C23384) * C152080 * C23041 +
            C24803 * C23042) *
               C151869 * C1711 -
           ((C24800 + C24801) * C152080 * C23042 +
            (C24799 + C24798) * C152080 * C23041 + C24789 * C23040) *
               C151869 * C152224) *
              C152158 +
          (((C23386 + C23387) * C152080 * C23040 +
            (C23388 + C23389) * C152080 * C23041 + C25279 * C23042) *
               C151869 * C1710 -
           (C23402 * C23042 + (C23387 + C23386) * C152080 * C23041 +
            (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
             C23059 + C23059 + C152149 * C159) *
                C152080 * C23040) *
               C151869 * C1709 -
           ((C25284 + C25285) * C152080 * C23042 +
            (C23391 + C23390) * C152080 * C23041 + C23402 * C23040) *
               C151869 * C1711 +
           (C25279 * C23040 + (C25285 + C25284) * C152080 * C23041 +
            (C23043 * C7802 + C25277 + C25277 + C152149 * C7808 +
             C23045 * C7803 + C25278 + C25278 + C151796 * C7809) *
                C152080 * C23042) *
               C151869 * C152224) *
              C151834)) /
            (p * q * std::sqrt(p + q));
    d2ee[321] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
             C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
             C140 * C145 + C170 + C170 + C124 * C161) *
                C152080 * C152054 * C152173 -
            (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
             C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
             C134 * C550 + C587 + C587 + C121 * C574) *
                C152080 * C152054 * C151956) *
               C152172 +
           ((C134 * C1083 + C1102 + C1102 + C121 * C1095 + C136 * C1084 +
             C1103 + C1103 + C122 * C1096 + C138 * C1085 + C1104 + C1104 +
             C123 * C1097 + C140 * C1086 + C1105 + C1105 + C124 * C1098) *
                C152080 * C152054 * C151956 -
            (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
             C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
             C134 * C341 + C378 + C378 + C121 * C365) *
                C152080 * C152054 * C152173) *
               C151914) *
              C335 +
          (((C134 * C549 + C592 + C592 + C121 * C573 + C136 * C548 + C593 +
             C593 + C122 * C572 + C138 * C547 + C594 + C594 + C123 * C571 +
             C140 * C555 + C595 + C595 + C124 * C579) *
                C152080 * C152054 * C151956 -
            (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
             C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
             C134 * C143 + C174 + C174 + C121 * C159) *
                C152080 * C152054 * C152173) *
               C152172 +
           ((C134 * C340 + C383 + C383 + C121 * C364 + C136 * C339 + C384 +
             C384 + C122 * C363 + C138 * C338 + C385 + C385 + C123 * C362 +
             C140 * C346 + C386 + C386 + C124 * C370) *
                C152080 * C152054 * C152173 -
            (C140 * C1087 + C1106 + C1106 + C124 * C1099 + C138 * C1086 +
             C1107 + C1107 + C123 * C1098 + C136 * C1085 + C1108 + C1108 +
             C122 * C1097 + C134 * C1084 + C1109 + C1109 + C121 * C1096) *
                C152080 * C152054 * C151956) *
               C151914) *
              C336 +
          (((C134 * C144 + C175 + C175 + C121 * C160 + C136 * C145 + C176 +
             C176 + C122 * C161 + C138 * C146 + C177 + C177 + C123 * C162 +
             C140 * C147 + C178 + C178 + C124 * C163) *
                C152080 * C152054 * C152173 -
            (C140 * C557 + C600 + C600 + C124 * C581 + C138 * C555 + C601 +
             C601 + C123 * C579 + C136 * C547 + C602 + C602 + C122 * C571 +
             C134 * C548 + C603 + C603 + C121 * C572) *
                C152080 * C152054 * C151956) *
               C152172 +
           ((C134 * C1085 + C1110 + C1110 + C121 * C1097 + C136 * C1086 +
             C1111 + C1111 + C122 * C1098 + C138 * C1087 + C1112 + C1112 +
             C123 * C1099 + C140 * C1088 + C1113 + C1113 + C124 * C1100) *
                C152080 * C152054 * C151956 -
            (C140 * C348 + C391 + C391 + C124 * C372 + C138 * C346 + C392 +
             C392 + C123 * C370 + C136 * C338 + C393 + C393 + C122 * C362 +
             C134 * C339 + C394 + C394 + C121 * C363) *
                C152080 * C152054 * C152173) *
               C151914) *
              C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
            C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
            C140 * C145 + C170 + C170 + C124 * C161) *
               C152080 * C152054 * C152173 -
           (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
            C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
            C134 * C550 + C587 + C587 + C121 * C574) *
               C152080 * C152054 * C151956) *
              C1709 +
          ((C134 * C1083 + C1102 + C1102 + C121 * C1095 + C136 * C1084 + C1103 +
            C1103 + C122 * C1096 + C138 * C1085 + C1104 + C1104 + C123 * C1097 +
            C140 * C1086 + C1105 + C1105 + C124 * C1098) *
               C152080 * C152054 * C151956 -
           (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
            C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
            C134 * C341 + C378 + C378 + C121 * C365) *
               C152080 * C152054 * C152173) *
              C1710 +
          ((C134 * C342 + C379 + C379 + C121 * C366 + C136 * C343 + C380 +
            C380 + C122 * C367 + C138 * C344 + C381 + C381 + C123 * C368 +
            C140 * C345 + C382 + C382 + C124 * C369) *
               C152080 * C152054 * C152173 -
           (C140 * C1535 + C1572 + C1572 + C124 * C1559 + C138 * C1536 + C1573 +
            C1573 + C123 * C1560 + C136 * C1537 + C1574 + C1574 + C122 * C1561 +
            C134 * C1538 + C1575 + C1575 + C121 * C1562) *
               C152080 * C152054 * C151956) *
              C1711 +
          ((C134 * C2053 + C2066 + C2066 + C121 * C2061 + C136 * C2054 + C2067 +
            C2067 + C122 * C2062 + C138 * C2055 + C2068 + C2068 + C123 * C2063 +
            C140 * C2056 + C2069 + C2069 + C124 * C2064) *
               C152080 * C152054 * C151956 -
           (C140 * C1353 + C1378 + C1378 + C124 * C1369 + C138 * C1354 + C1379 +
            C1379 + C123 * C1370 + C136 * C1355 + C1380 + C1380 + C122 * C1371 +
            C134 * C1356 + C1381 + C1381 + C121 * C1372) *
               C152080 * C152054 * C152173) *
              C152224) *
         C151823) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
              C23049 + C23049 + C151796 * C159) *
                 C152080 * C23040 +
             (C23380 + C23381) * C152080 * C23041 + C23401 * C23042) *
                C152173 -
            ((C24418 + C24419) * C152080 * C23042 +
             (C24420 + C24421) * C152080 * C23041 +
             (C23045 * C549 + C23626 + C23626 + C151796 * C573 + C23043 * C550 +
              C23627 + C23627 + C152149 * C574) *
                 C152080 * C23040) *
                C151956) *
               C152172 +
           (((C24421 + C24420) * C152080 * C23040 +
             (C24419 + C24418) * C152080 * C23041 +
             (C23043 * C2053 + C24372 + C24372 + C152149 * C2061 +
              C23045 * C2054 + C24373 + C24373 + C151796 * C2062) *
                 C152080 * C23042) *
                C151956 -
            ((C23384 + C23385) * C152080 * C23042 +
             (C23383 + C23382) * C152080 * C23041 +
             (C23381 + C23380) * C152080 * C23040) *
                C152173) *
               C151914) *
              C335 +
          ((((C23043 * C549 + C23634 + C23634 + C152149 * C573 + C23045 * C548 +
              C23635 + C23635 + C151796 * C572) *
                 C152080 * C23040 +
             (C24422 + C24423) * C152080 * C23041 +
             (C24424 + C24425) * C152080 * C23042) *
                C151956 -
            (C23402 * C23042 + (C23387 + C23386) * C152080 * C23041 +
             (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
              C23059 + C23059 + C152149 * C159) *
                 C152080 * C23040) *
                C152173) *
               C152172 +
           (((C23386 + C23387) * C152080 * C23040 +
             (C23388 + C23389) * C152080 * C23041 +
             (C23390 + C23391) * C152080 * C23042) *
                C152173 -
            ((C23045 * C2055 + C24382 + C24382 + C151796 * C2063 +
              C23043 * C2054 + C24383 + C24383 + C152149 * C2062) *
                 C152080 * C23042 +
             (C24425 + C24424) * C152080 * C23041 +
             (C24423 + C24422) * C152080 * C23040) *
                C151956) *
               C151914) *
              C336 +
          ((((C23043 * C144 + C23060 + C23060 + C152149 * C160 + C23045 * C145 +
              C23061 + C23061 + C151796 * C161) *
                 C152080 * C23040 +
             (C23392 + C23393) * C152080 * C23041 + C23403 * C23042) *
                C152173 -
            ((C24426 + C24427) * C152080 * C23042 +
             (C24428 + C24429) * C152080 * C23041 +
             (C23045 * C547 + C23650 + C23650 + C151796 * C571 + C23043 * C548 +
              C23651 + C23651 + C152149 * C572) *
                 C152080 * C23040) *
                C151956) *
               C152172 +
           (((C24429 + C24428) * C152080 * C23040 +
             (C24427 + C24426) * C152080 * C23041 +
             (C23043 * C2055 + C24392 + C24392 + C152149 * C2063 +
              C23045 * C2056 + C24393 + C24393 + C151796 * C2064) *
                 C152080 * C23042) *
                C151956 -
            ((C23396 + C23397) * C152080 * C23042 +
             (C23395 + C23394) * C152080 * C23041 +
             (C23393 + C23392) * C152080 * C23040) *
                C152173) *
               C151914) *
              C152208)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
             C23049 + C23049 + C151796 * C159) *
                C152080 * C23040 +
            (C23380 + C23381) * C152080 * C23041 + C23401 * C23042) *
               C152173 -
           (C25051 * C23042 + (C24420 + C24421) * C152080 * C23041 +
            (C23045 * C549 + C23626 + C23626 + C151796 * C573 + C23043 * C550 +
             C23627 + C23627 + C152149 * C574) *
                C152080 * C23040) *
               C151956) *
              C1709 +
          (((C24421 + C24420) * C152080 * C23040 +
            (C24419 + C24418) * C152080 * C23041 + C25797 * C23042) *
               C151956 -
           (C24789 * C23042 + (C23383 + C23382) * C152080 * C23041 +
            (C23381 + C23380) * C152080 * C23040) *
               C152173) *
              C1710 +
          ((C23401 * C23040 + (C23385 + C23384) * C152080 * C23041 +
            C24803 * C23042) *
               C152173 -
           ((C25802 + C25803) * C152080 * C23042 +
            (C25073 + C25072) * C152080 * C23041 + C25051 * C23040) *
               C151956) *
              C1711 +
          ((C25797 * C23040 + (C25803 + C25802) * C152080 * C23041 +
            (C23043 * C25783 + C25795 + C25795 + C152149 * C25787 +
             C23045 * C25784 + C25796 + C25796 + C151796 * C25788) *
                C152080 * C23042) *
               C151956 -
           ((C24800 + C24801) * C152080 * C23042 +
            (C24799 + C24798) * C152080 * C23041 + C24789 * C23040) *
               C152173) *
              C152224) *
         C151823) /
            (p * q * std::sqrt(p + q));
    d2ee[322] +=
        (-std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
            C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
            C140 * C145 + C170 + C170 + C124 * C161) *
               C152080 * C152054 * C151869 * C152258 -
           (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
            C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
            C134 * C341 + C378 + C378 + C121 * C365) *
               C152080 * C152054 * C151869 * C152244 +
           (C134 * C342 + C379 + C379 + C121 * C366 + C136 * C343 + C380 +
            C380 + C122 * C367 + C138 * C344 + C381 + C381 + C123 * C368 +
            C140 * C345 + C382 + C382 + C124 * C369) *
               C152080 * C152054 * C151869 * C152214) *
              C335 +
          ((C134 * C340 + C383 + C383 + C121 * C364 + C136 * C339 + C384 +
            C384 + C122 * C363 + C138 * C338 + C385 + C385 + C123 * C362 +
            C140 * C346 + C386 + C386 + C124 * C370) *
               C152080 * C152054 * C151869 * C152244 -
           (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
            C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
            C134 * C143 + C174 + C174 + C121 * C159) *
               C152080 * C152054 * C151869 * C152258 -
           (C140 * C347 + C387 + C387 + C124 * C371 + C138 * C345 + C388 +
            C388 + C123 * C369 + C136 * C344 + C389 + C389 + C122 * C368 +
            C134 * C343 + C390 + C390 + C121 * C367) *
               C152080 * C152054 * C151869 * C152214) *
              C336 +
          ((C134 * C144 + C175 + C175 + C121 * C160 + C136 * C145 + C176 +
            C176 + C122 * C161 + C138 * C146 + C177 + C177 + C123 * C162 +
            C140 * C147 + C178 + C178 + C124 * C163) *
               C152080 * C152054 * C151869 * C152258 -
           (C140 * C348 + C391 + C391 + C124 * C372 + C138 * C346 + C392 +
            C392 + C123 * C370 + C136 * C338 + C393 + C393 + C122 * C362 +
            C134 * C339 + C394 + C394 + C121 * C363) *
               C152080 * C152054 * C151869 * C152244 +
           (C134 * C344 + C395 + C395 + C121 * C368 + C136 * C345 + C396 +
            C396 + C122 * C369 + C138 * C347 + C397 + C397 + C123 * C371 +
            C140 * C349 + C398 + C398 + C124 * C373) *
               C152080 * C152054 * C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 + C168 +
           C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 + C140 * C145 +
           C170 + C170 + C124 * C161) *
              C152080 * C152054 * C151869 * C151851 * C129 -
          (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 + C172 +
           C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 + C134 * C143 +
           C174 + C174 + C121 * C159) *
              C152080 * C152054 * C151869 * C151851 * C130 +
          (C134 * C144 + C175 + C175 + C121 * C160 + C136 * C145 + C176 + C176 +
           C122 * C161 + C138 * C146 + C177 + C177 + C123 * C162 + C140 * C147 +
           C178 + C178 + C124 * C163) *
              C152080 * C152054 * C151869 * C151851 * C131 -
          (C140 * C148 + C179 + C179 + C124 * C164 + C138 * C147 + C180 + C180 +
           C123 * C163 + C136 * C146 + C181 + C181 + C122 * C162 + C134 * C145 +
           C182 + C182 + C121 * C161) *
              C152080 * C152054 * C151869 * C151851 * C132 +
          (C134 * C146 + C183 + C183 + C121 * C162 + C136 * C147 + C184 + C184 +
           C122 * C163 + C138 * C148 + C185 + C185 + C123 * C164 + C140 * C149 +
           C186 + C186 + C124 * C165) *
              C152080 * C152054 * C151869 * C151851 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
            C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
            C140 * C145 + C170 + C170 + C124 * C161) *
               C152080 * C152054 * C152259 -
           (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
            C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
            C134 * C550 + C587 + C587 + C121 * C574) *
               C152080 * C152054 * C152246 +
           (C134 * C551 + C588 + C588 + C121 * C575 + C136 * C552 + C589 +
            C589 + C122 * C576 + C138 * C553 + C590 + C590 + C123 * C577 +
            C140 * C554 + C591 + C591 + C124 * C578) *
               C152080 * C152054 * C152217) *
              C151851 * C335 +
          ((C134 * C549 + C592 + C592 + C121 * C573 + C136 * C548 + C593 +
            C593 + C122 * C572 + C138 * C547 + C594 + C594 + C123 * C571 +
            C140 * C555 + C595 + C595 + C124 * C579) *
               C152080 * C152054 * C152246 -
           (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
            C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
            C134 * C143 + C174 + C174 + C121 * C159) *
               C152080 * C152054 * C152259 -
           (C140 * C556 + C596 + C596 + C124 * C580 + C138 * C554 + C597 +
            C597 + C123 * C578 + C136 * C553 + C598 + C598 + C122 * C577 +
            C134 * C552 + C599 + C599 + C121 * C576) *
               C152080 * C152054 * C152217) *
              C151851 * C336 +
          ((C134 * C144 + C175 + C175 + C121 * C160 + C136 * C145 + C176 +
            C176 + C122 * C161 + C138 * C146 + C177 + C177 + C123 * C162 +
            C140 * C147 + C178 + C178 + C124 * C163) *
               C152080 * C152054 * C152259 -
           (C140 * C557 + C600 + C600 + C124 * C581 + C138 * C555 + C601 +
            C601 + C123 * C579 + C136 * C547 + C602 + C602 + C122 * C571 +
            C134 * C548 + C603 + C603 + C121 * C572) *
               C152080 * C152054 * C152246 +
           (C134 * C553 + C604 + C604 + C121 * C577 + C136 * C554 + C605 +
            C605 + C122 * C578 + C138 * C556 + C606 + C606 + C123 * C580 +
            C140 * C558 + C607 + C607 + C124 * C582) *
               C152080 * C152054 * C152217) *
              C151851 * C152208)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
            C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
            C140 * C145 + C170 + C170 + C124 * C161) *
               C152080 * C152054 * C151869 * C1259 -
           (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
            C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
            C134 * C341 + C378 + C378 + C121 * C365) *
               C152080 * C152054 * C151869 * C1260 +
           (C134 * C342 + C379 + C379 + C121 * C366 + C136 * C343 + C380 +
            C380 + C122 * C367 + C138 * C344 + C381 + C381 + C123 * C368 +
            C140 * C345 + C382 + C382 + C124 * C369) *
               C152080 * C152054 * C151869 * C152214) *
              C152255 +
          ((C134 * C340 + C383 + C383 + C121 * C364 + C136 * C339 + C384 +
            C384 + C122 * C363 + C138 * C338 + C385 + C385 + C123 * C362 +
            C140 * C346 + C386 + C386 + C124 * C370) *
               C152080 * C152054 * C151869 * C1260 -
           (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
            C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
            C134 * C143 + C174 + C174 + C121 * C159) *
               C152080 * C152054 * C151869 * C1259 -
           (C140 * C347 + C387 + C387 + C124 * C371 + C138 * C345 + C388 +
            C388 + C123 * C369 + C136 * C344 + C389 + C389 + C122 * C368 +
            C134 * C343 + C390 + C390 + C121 * C367) *
               C152080 * C152054 * C151869 * C152214) *
              C152240 +
          ((C134 * C144 + C175 + C175 + C121 * C160 + C136 * C145 + C176 +
            C176 + C122 * C161 + C138 * C146 + C177 + C177 + C123 * C162 +
            C140 * C147 + C178 + C178 + C124 * C163) *
               C152080 * C152054 * C151869 * C1259 -
           (C140 * C348 + C391 + C391 + C124 * C372 + C138 * C346 + C392 +
            C392 + C123 * C370 + C136 * C338 + C393 + C393 + C122 * C362 +
            C134 * C339 + C394 + C394 + C121 * C363) *
               C152080 * C152054 * C151869 * C1260 +
           (C134 * C344 + C395 + C395 + C121 * C368 + C136 * C345 + C396 +
            C396 + C122 * C369 + C138 * C347 + C397 + C397 + C123 * C371 +
            C140 * C349 + C398 + C398 + C124 * C373) *
               C152080 * C152054 * C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 + C168 +
           C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 + C140 * C145 +
           C170 + C170 + C124 * C161) *
              C152080 * C152054 * C151869 * C1347 -
          (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 + C376 +
           C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 + C134 * C341 +
           C378 + C378 + C121 * C365) *
              C152080 * C152054 * C151869 * C1348 +
          (C134 * C342 + C379 + C379 + C121 * C366 + C136 * C343 + C380 + C380 +
           C122 * C367 + C138 * C344 + C381 + C381 + C123 * C368 + C140 * C345 +
           C382 + C382 + C124 * C369) *
              C152080 * C152054 * C151869 * C1349 -
          (C140 * C1353 + C1378 + C1378 + C124 * C1369 + C138 * C1354 + C1379 +
           C1379 + C123 * C1370 + C136 * C1355 + C1380 + C1380 + C122 * C1371 +
           C134 * C1356 + C1381 + C1381 + C121 * C1372) *
              C152080 * C152054 * C151869 * C1350 +
          (C134 * C1357 + C1382 + C1382 + C121 * C1373 + C136 * C1358 + C1383 +
           C1383 + C122 * C1374 + C138 * C1359 + C1384 + C1384 + C123 * C1375 +
           C140 * C1360 + C1385 + C1385 + C124 * C1376) *
              C152080 * C152054 * C151869 * C1351) *
         C151823) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
            C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
            C140 * C145 + C170 + C170 + C124 * C161) *
               C152080 * C152054 * C152259 -
           (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
            C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
            C134 * C550 + C587 + C587 + C121 * C574) *
               C152080 * C152054 * C152246 +
           (C134 * C551 + C588 + C588 + C121 * C575 + C136 * C552 + C589 +
            C589 + C122 * C576 + C138 * C553 + C590 + C590 + C123 * C577 +
            C140 * C554 + C591 + C591 + C124 * C578) *
               C152080 * C152054 * C152217) *
              C1259 +
          ((C134 * C1083 + C1102 + C1102 + C121 * C1095 + C136 * C1084 + C1103 +
            C1103 + C122 * C1096 + C138 * C1085 + C1104 + C1104 + C123 * C1097 +
            C140 * C1086 + C1105 + C1105 + C124 * C1098) *
               C152080 * C152054 * C152246 -
           (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
            C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
            C134 * C341 + C378 + C378 + C121 * C365) *
               C152080 * C152054 * C152259 -
           (C140 * C1531 + C1568 + C1568 + C124 * C1555 + C138 * C1532 + C1569 +
            C1569 + C123 * C1556 + C136 * C1533 + C1570 + C1570 + C122 * C1557 +
            C134 * C1534 + C1571 + C1571 + C121 * C1558) *
               C152080 * C152054 * C152217) *
              C1260 +
          ((C134 * C342 + C379 + C379 + C121 * C366 + C136 * C343 + C380 +
            C380 + C122 * C367 + C138 * C344 + C381 + C381 + C123 * C368 +
            C140 * C345 + C382 + C382 + C124 * C369) *
               C152080 * C152054 * C152259 -
           (C140 * C1535 + C1572 + C1572 + C124 * C1559 + C138 * C1536 + C1573 +
            C1573 + C123 * C1560 + C136 * C1537 + C1574 + C1574 + C122 * C1561 +
            C134 * C1538 + C1575 + C1575 + C121 * C1562) *
               C152080 * C152054 * C152246 +
           (C134 * C1539 + C1576 + C1576 + C121 * C1563 + C136 * C1540 + C1577 +
            C1577 + C122 * C1564 + C138 * C1541 + C1578 + C1578 + C123 * C1565 +
            C140 * C1542 + C1579 + C1579 + C124 * C1566) *
               C152080 * C152054 * C152217) *
              C152214) *
         C151823) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
            C23049 + C23049 + C151796 * C159) *
               C152080 * C23040 +
           (C23043 * C341 + C23050 + C23050 + C152149 * C365 + C23045 * C340 +
            C23051 + C23051 + C151796 * C364) *
               C152080 * C23041 +
           (C23043 * C342 + C23052 + C23052 + C152149 * C366 + C23045 * C343 +
            C23053 + C23053 + C151796 * C367) *
               C152080 * C23042) *
              C151869 * C151851 * C129 -
          ((C23045 * C344 + C23054 + C23054 + C151796 * C368 + C23043 * C343 +
            C23055 + C23055 + C152149 * C367) *
               C152080 * C23042 +
           (C23045 * C339 + C23056 + C23056 + C151796 * C363 + C23043 * C340 +
            C23057 + C23057 + C152149 * C364) *
               C152080 * C23041 +
           (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
            C23059 + C23059 + C152149 * C159) *
               C152080 * C23040) *
              C151869 * C151851 * C130 +
          ((C23043 * C144 + C23060 + C23060 + C152149 * C160 + C23045 * C145 +
            C23061 + C23061 + C151796 * C161) *
               C152080 * C23040 +
           (C23043 * C339 + C23062 + C23062 + C152149 * C363 + C23045 * C338 +
            C23063 + C23063 + C151796 * C362) *
               C152080 * C23041 +
           (C23043 * C344 + C23064 + C23064 + C152149 * C368 + C23045 * C345 +
            C23065 + C23065 + C151796 * C369) *
               C152080 * C23042) *
              C151869 * C151851 * C131 -
          ((C23045 * C347 + C23066 + C23066 + C151796 * C371 + C23043 * C345 +
            C23067 + C23067 + C152149 * C369) *
               C152080 * C23042 +
           (C23045 * C346 + C23068 + C23068 + C151796 * C370 + C23043 * C338 +
            C23069 + C23069 + C152149 * C362) *
               C152080 * C23041 +
           (C23045 * C146 + C23070 + C23070 + C151796 * C162 + C23043 * C145 +
            C23071 + C23071 + C152149 * C161) *
               C152080 * C23040) *
              C151869 * C151851 * C132 +
          ((C23043 * C146 + C23072 + C23072 + C152149 * C162 + C23045 * C147 +
            C23073 + C23073 + C151796 * C163) *
               C152080 * C23040 +
           (C23043 * C346 + C23074 + C23074 + C152149 * C370 + C23045 * C348 +
            C23075 + C23075 + C151796 * C372) *
               C152080 * C23041 +
           (C23043 * C347 + C23076 + C23076 + C152149 * C371 + C23045 * C349 +
            C23077 + C23077 + C151796 * C373) *
               C152080 * C23042) *
              C151869 * C151851 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
             C23049 + C23049 + C151796 * C159) *
                C152080 * C23040 +
            (C23380 + C23381) * C152080 * C23041 + C23401 * C23042) *
               C151869 * C152258 -
           ((C23384 + C23385) * C152080 * C23042 +
            (C23383 + C23382) * C152080 * C23041 +
            (C23381 + C23380) * C152080 * C23040) *
               C151869 * C152244 +
           (C23401 * C23040 + (C23385 + C23384) * C152080 * C23041 +
            (C23043 * C1357 + C23310 + C23310 + C152149 * C1373 +
             C23045 * C1358 + C23311 + C23311 + C151796 * C1374) *
                C152080 * C23042) *
               C151869 * C152214) *
              C335 +
          (((C23386 + C23387) * C152080 * C23040 +
            (C23388 + C23389) * C152080 * C23041 +
            (C23390 + C23391) * C152080 * C23042) *
               C151869 * C152244 -
           (C23402 * C23042 + (C23387 + C23386) * C152080 * C23041 +
            (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
             C23059 + C23059 + C152149 * C159) *
                C152080 * C23040) *
               C151869 * C152258 -
           ((C23045 * C1359 + C23326 + C23326 + C151796 * C1375 +
             C23043 * C1358 + C23327 + C23327 + C152149 * C1374) *
                C152080 * C23042 +
            (C23391 + C23390) * C152080 * C23041 + C23402 * C23040) *
               C151869 * C152214) *
              C336 +
          (((C23043 * C144 + C23060 + C23060 + C152149 * C160 + C23045 * C145 +
             C23061 + C23061 + C151796 * C161) *
                C152080 * C23040 +
            (C23392 + C23393) * C152080 * C23041 + C23403 * C23042) *
               C151869 * C152258 -
           ((C23396 + C23397) * C152080 * C23042 +
            (C23395 + C23394) * C152080 * C23041 +
            (C23393 + C23392) * C152080 * C23040) *
               C151869 * C152244 +
           (C23403 * C23040 + (C23397 + C23396) * C152080 * C23041 +
            (C23043 * C1359 + C23342 + C23342 + C152149 * C1375 +
             C23045 * C1360 + C23343 + C23343 + C151796 * C1376) *
                C152080 * C23042) *
               C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
             C23049 + C23049 + C151796 * C159) *
                C152080 * C23040 +
            (C23380 + C23381) * C152080 * C23041 + C23401 * C23042) *
               C152259 -
           ((C23045 * C1537 + C23622 + C23622 + C151796 * C1561 +
             C23043 * C1538 + C23623 + C23623 + C152149 * C1562) *
                C152080 * C23042 +
            (C23045 * C1084 + C23624 + C23624 + C151796 * C1096 +
             C23043 * C1083 + C23625 + C23625 + C152149 * C1095) *
                C152080 * C23041 +
            (C23045 * C549 + C23626 + C23626 + C151796 * C573 + C23043 * C550 +
             C23627 + C23627 + C152149 * C574) *
                C152080 * C23040) *
               C152246 +
           ((C23043 * C551 + C23628 + C23628 + C152149 * C575 + C23045 * C552 +
             C23629 + C23629 + C151796 * C576) *
                C152080 * C23040 +
            (C23043 * C1534 + C23630 + C23630 + C152149 * C1558 +
             C23045 * C1533 + C23631 + C23631 + C151796 * C1557) *
                C152080 * C23041 +
            (C23043 * C1539 + C23632 + C23632 + C152149 * C1563 +
             C23045 * C1540 + C23633 + C23633 + C151796 * C1564) *
                C152080 * C23042) *
               C152217) *
              C151851 * C335 +
          (((C23043 * C549 + C23634 + C23634 + C152149 * C573 + C23045 * C548 +
             C23635 + C23635 + C151796 * C572) *
                C152080 * C23040 +
            (C23043 * C1084 + C23636 + C23636 + C152149 * C1096 +
             C23045 * C1085 + C23637 + C23637 + C151796 * C1097) *
                C152080 * C23041 +
            (C23043 * C1537 + C23638 + C23638 + C152149 * C1561 +
             C23045 * C1536 + C23639 + C23639 + C151796 * C1560) *
                C152080 * C23042) *
               C152246 -
           (C23402 * C23042 + (C23387 + C23386) * C152080 * C23041 +
            (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
             C23059 + C23059 + C152149 * C159) *
                C152080 * C23040) *
               C152259 -
           ((C23045 * C1541 + C23640 + C23640 + C151796 * C1565 +
             C23043 * C1540 + C23641 + C23641 + C152149 * C1564) *
                C152080 * C23042 +
            (C23045 * C1532 + C23642 + C23642 + C151796 * C1556 +
             C23043 * C1533 + C23643 + C23643 + C152149 * C1557) *
                C152080 * C23041 +
            (C23045 * C553 + C23644 + C23644 + C151796 * C577 + C23043 * C552 +
             C23645 + C23645 + C152149 * C576) *
                C152080 * C23040) *
               C152217) *
              C151851 * C336 +
          (((C23043 * C144 + C23060 + C23060 + C152149 * C160 + C23045 * C145 +
             C23061 + C23061 + C151796 * C161) *
                C152080 * C23040 +
            (C23392 + C23393) * C152080 * C23041 + C23403 * C23042) *
               C152259 -
           ((C23045 * C1535 + C23646 + C23646 + C151796 * C1559 +
             C23043 * C1536 + C23647 + C23647 + C152149 * C1560) *
                C152080 * C23042 +
            (C23045 * C1086 + C23648 + C23648 + C151796 * C1098 +
             C23043 * C1085 + C23649 + C23649 + C152149 * C1097) *
                C152080 * C23041 +
            (C23045 * C547 + C23650 + C23650 + C151796 * C571 + C23043 * C548 +
             C23651 + C23651 + C152149 * C572) *
                C152080 * C23040) *
               C152246 +
           ((C23043 * C553 + C23652 + C23652 + C152149 * C577 + C23045 * C554 +
             C23653 + C23653 + C151796 * C578) *
                C152080 * C23040 +
            (C23043 * C1532 + C23654 + C23654 + C152149 * C1556 +
             C23045 * C1531 + C23655 + C23655 + C151796 * C1555) *
                C152080 * C23041 +
            (C23043 * C1541 + C23656 + C23656 + C152149 * C1565 +
             C23045 * C1542 + C23657 + C23657 + C151796 * C1566) *
                C152080 * C23042) *
               C152217) *
              C151851 * C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
             C23049 + C23049 + C151796 * C159) *
                C152080 * C23040 +
            (C23380 + C23381) * C152080 * C23041 + C23401 * C23042) *
               C151869 * C1259 -
           ((C23384 + C23385) * C152080 * C23042 +
            (C23383 + C23382) * C152080 * C23041 +
            (C23381 + C23380) * C152080 * C23040) *
               C151869 * C1260 +
           (C23401 * C23040 + (C23385 + C23384) * C152080 * C23041 +
            (C23043 * C1357 + C23310 + C23310 + C152149 * C1373 +
             C23045 * C1358 + C23311 + C23311 + C151796 * C1374) *
                C152080 * C23042) *
               C151869 * C152214) *
              C152255 +
          (((C23386 + C23387) * C152080 * C23040 +
            (C23388 + C23389) * C152080 * C23041 +
            (C23390 + C23391) * C152080 * C23042) *
               C151869 * C1260 -
           (C23402 * C23042 + (C23387 + C23386) * C152080 * C23041 +
            (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
             C23059 + C23059 + C152149 * C159) *
                C152080 * C23040) *
               C151869 * C1259 -
           ((C23045 * C1359 + C23326 + C23326 + C151796 * C1375 +
             C23043 * C1358 + C23327 + C23327 + C152149 * C1374) *
                C152080 * C23042 +
            (C23391 + C23390) * C152080 * C23041 + C23402 * C23040) *
               C151869 * C152214) *
              C152240 +
          (((C23043 * C144 + C23060 + C23060 + C152149 * C160 + C23045 * C145 +
             C23061 + C23061 + C151796 * C161) *
                C152080 * C23040 +
            (C23392 + C23393) * C152080 * C23041 + C23403 * C23042) *
               C151869 * C1259 -
           ((C23396 + C23397) * C152080 * C23042 +
            (C23395 + C23394) * C152080 * C23041 +
            (C23393 + C23392) * C152080 * C23040) *
               C151869 * C1260 +
           (C23403 * C23040 + (C23397 + C23396) * C152080 * C23041 +
            (C23043 * C1359 + C23342 + C23342 + C152149 * C1375 +
             C23045 * C1360 + C23343 + C23343 + C151796 * C1376) *
                C152080 * C23042) *
               C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
            C23049 + C23049 + C151796 * C159) *
               C152080 * C23040 +
           (C23380 + C23381) * C152080 * C23041 + C23401 * C23042) *
              C151869 * C1347 -
          (C24789 * C23042 + (C23383 + C23382) * C152080 * C23041 +
           (C23381 + C23380) * C152080 * C23040) *
              C151869 * C1348 +
          (C23401 * C23040 + (C23385 + C23384) * C152080 * C23041 +
           C24803 * C23042) *
              C151869 * C1349 -
          ((C24800 + C24801) * C152080 * C23042 +
           (C24799 + C24798) * C152080 * C23041 + C24789 * C23040) *
              C151869 * C1350 +
          (C24803 * C23040 + (C24801 + C24800) * C152080 * C23041 +
           (C23043 * C24769 + C24787 + C24787 + C152149 * C24773 +
            C23045 * C24770 + C24788 + C24788 + C151796 * C24774) *
               C152080 * C23042) *
              C151869 * C1351) *
         C151823) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
             C23049 + C23049 + C151796 * C159) *
                C152080 * C23040 +
            (C23380 + C23381) * C152080 * C23041 + C23401 * C23042) *
               C152259 -
           (C25051 * C23042 + (C24420 + C24421) * C152080 * C23041 +
            (C23045 * C549 + C23626 + C23626 + C151796 * C573 + C23043 * C550 +
             C23627 + C23627 + C152149 * C574) *
                C152080 * C23040) *
               C152246 +
           ((C23043 * C551 + C23628 + C23628 + C152149 * C575 + C23045 * C552 +
             C23629 + C23629 + C151796 * C576) *
                C152080 * C23040 +
            (C25068 + C25069) * C152080 * C23041 + C25077 * C23042) *
               C152217) *
              C1259 +
          (((C24421 + C24420) * C152080 * C23040 +
            (C24419 + C24418) * C152080 * C23041 +
            (C25072 + C25073) * C152080 * C23042) *
               C152246 -
           (C24789 * C23042 + (C23383 + C23382) * C152080 * C23041 +
            (C23381 + C23380) * C152080 * C23040) *
               C152259 -
           ((C25074 + C25075) * C152080 * C23042 +
            (C25071 + C25070) * C152080 * C23041 +
            (C25069 + C25068) * C152080 * C23040) *
               C152217) *
              C1260 +
          ((C23401 * C23040 + (C23385 + C23384) * C152080 * C23041 +
            C24803 * C23042) *
               C152259 -
           ((C23045 * C8842 + C25047 + C25047 + C151796 * C8848 +
             C23043 * C8841 + C25048 + C25048 + C152149 * C8847) *
                C152080 * C23042 +
            (C25073 + C25072) * C152080 * C23041 + C25051 * C23040) *
               C152246 +
           (C25077 * C23040 + (C25075 + C25074) * C152080 * C23041 +
            (C23043 * C25021 + C25049 + C25049 + C152149 * C25025 +
             C23045 * C25022 + C25050 + C25050 + C151796 * C25026) *
                C152080 * C23042) *
               C152217) *
              C152214) *
         C151823) /
            (p * q * std::sqrt(p + q));
    d2ee[323] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
            C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
            C140 * C145 + C170 + C170 + C124 * C161) *
               C152080 * C152054 * C152173 -
           (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
            C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
            C134 * C550 + C587 + C587 + C121 * C574) *
               C152080 * C152054 * C151956) *
              C151851 * C739 +
          ((C134 * C549 + C592 + C592 + C121 * C573 + C136 * C548 + C593 +
            C593 + C122 * C572 + C138 * C547 + C594 + C594 + C123 * C571 +
            C140 * C555 + C595 + C595 + C124 * C579) *
               C152080 * C152054 * C151956 -
           (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
            C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
            C134 * C143 + C174 + C174 + C121 * C159) *
               C152080 * C152054 * C152173) *
              C151851 * C740 +
          ((C134 * C144 + C175 + C175 + C121 * C160 + C136 * C145 + C176 +
            C176 + C122 * C161 + C138 * C146 + C177 + C177 + C123 * C162 +
            C140 * C147 + C178 + C178 + C124 * C163) *
               C152080 * C152054 * C152173 -
           (C140 * C557 + C600 + C600 + C124 * C581 + C138 * C555 + C601 +
            C601 + C123 * C579 + C136 * C547 + C602 + C602 + C122 * C571 +
            C134 * C548 + C603 + C603 + C121 * C572) *
               C152080 * C152054 * C151956) *
              C151851 * C741 +
          ((C134 * C547 + C886 + C886 + C121 * C571 + C136 * C555 + C887 +
            C887 + C122 * C579 + C138 * C557 + C888 + C888 + C123 * C581 +
            C140 * C882 + C889 + C889 + C124 * C884) *
               C152080 * C152054 * C151956 -
           (C140 * C148 + C179 + C179 + C124 * C164 + C138 * C147 + C180 +
            C180 + C123 * C163 + C136 * C146 + C181 + C181 + C122 * C162 +
            C134 * C145 + C182 + C182 + C121 * C161) *
               C152080 * C152054 * C152173) *
              C151851 * C152218)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
             C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
             C140 * C145 + C170 + C170 + C124 * C161) *
                C152080 * C152054 * C152173 -
            (C140 * C547 + C584 + C584 + C124 * C571 + C138 * C548 + C585 +
             C585 + C123 * C572 + C136 * C549 + C586 + C586 + C122 * C573 +
             C134 * C550 + C587 + C587 + C121 * C574) *
                C152080 * C152054 * C151956) *
               C1259 +
           ((C134 * C1083 + C1102 + C1102 + C121 * C1095 + C136 * C1084 +
             C1103 + C1103 + C122 * C1096 + C138 * C1085 + C1104 + C1104 +
             C123 * C1097 + C140 * C1086 + C1105 + C1105 + C124 * C1098) *
                C152080 * C152054 * C151956 -
            (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
             C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
             C134 * C341 + C378 + C378 + C121 * C365) *
                C152080 * C152054 * C152173) *
               C1260 +
           ((C134 * C342 + C379 + C379 + C121 * C366 + C136 * C343 + C380 +
             C380 + C122 * C367 + C138 * C344 + C381 + C381 + C123 * C368 +
             C140 * C345 + C382 + C382 + C124 * C369) *
                C152080 * C152054 * C152173 -
            (C140 * C1535 + C1572 + C1572 + C124 * C1559 + C138 * C1536 +
             C1573 + C1573 + C123 * C1560 + C136 * C1537 + C1574 + C1574 +
             C122 * C1561 + C134 * C1538 + C1575 + C1575 + C121 * C1562) *
                C152080 * C152054 * C151956) *
               C152214) *
              C152158 +
          (((C134 * C549 + C592 + C592 + C121 * C573 + C136 * C548 + C593 +
             C593 + C122 * C572 + C138 * C547 + C594 + C594 + C123 * C571 +
             C140 * C555 + C595 + C595 + C124 * C579) *
                C152080 * C152054 * C151956 -
            (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
             C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
             C134 * C143 + C174 + C174 + C121 * C159) *
                C152080 * C152054 * C152173) *
               C1259 +
           ((C134 * C340 + C383 + C383 + C121 * C364 + C136 * C339 + C384 +
             C384 + C122 * C363 + C138 * C338 + C385 + C385 + C123 * C362 +
             C140 * C346 + C386 + C386 + C124 * C370) *
                C152080 * C152054 * C152173 -
            (C140 * C1087 + C1106 + C1106 + C124 * C1099 + C138 * C1086 +
             C1107 + C1107 + C123 * C1098 + C136 * C1085 + C1108 + C1108 +
             C122 * C1097 + C134 * C1084 + C1109 + C1109 + C121 * C1096) *
                C152080 * C152054 * C151956) *
               C1260 +
           ((C134 * C1537 + C1920 + C1920 + C121 * C1561 + C136 * C1536 +
             C1921 + C1921 + C122 * C1560 + C138 * C1535 + C1922 + C1922 +
             C123 * C1559 + C140 * C1916 + C1923 + C1923 + C124 * C1918) *
                C152080 * C152054 * C151956 -
            (C140 * C347 + C387 + C387 + C124 * C371 + C138 * C345 + C388 +
             C388 + C123 * C369 + C136 * C344 + C389 + C389 + C122 * C368 +
             C134 * C343 + C390 + C390 + C121 * C367) *
                C152080 * C152054 * C152173) *
               C152214) *
              C151834)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
             C23049 + C23049 + C151796 * C159) *
                C152080 * C23040 +
            (C23380 + C23381) * C152080 * C23041 + C23401 * C23042) *
               C152173 -
           ((C23045 * C1537 + C23622 + C23622 + C151796 * C1561 +
             C23043 * C1538 + C23623 + C23623 + C152149 * C1562) *
                C152080 * C23042 +
            (C23045 * C1084 + C23624 + C23624 + C151796 * C1096 +
             C23043 * C1083 + C23625 + C23625 + C152149 * C1095) *
                C152080 * C23041 +
            (C23045 * C549 + C23626 + C23626 + C151796 * C573 + C23043 * C550 +
             C23627 + C23627 + C152149 * C574) *
                C152080 * C23040) *
               C151956) *
              C151851 * C739 +
          (((C23043 * C549 + C23634 + C23634 + C152149 * C573 + C23045 * C548 +
             C23635 + C23635 + C151796 * C572) *
                C152080 * C23040 +
            (C23043 * C1084 + C23636 + C23636 + C152149 * C1096 +
             C23045 * C1085 + C23637 + C23637 + C151796 * C1097) *
                C152080 * C23041 +
            (C23043 * C1537 + C23638 + C23638 + C152149 * C1561 +
             C23045 * C1536 + C23639 + C23639 + C151796 * C1560) *
                C152080 * C23042) *
               C151956 -
           (C23402 * C23042 + (C23387 + C23386) * C152080 * C23041 +
            (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
             C23059 + C23059 + C152149 * C159) *
                C152080 * C23040) *
               C152173) *
              C151851 * C740 +
          (((C23043 * C144 + C23060 + C23060 + C152149 * C160 + C23045 * C145 +
             C23061 + C23061 + C151796 * C161) *
                C152080 * C23040 +
            (C23392 + C23393) * C152080 * C23041 + C23403 * C23042) *
               C152173 -
           ((C23045 * C1535 + C23646 + C23646 + C151796 * C1559 +
             C23043 * C1536 + C23647 + C23647 + C152149 * C1560) *
                C152080 * C23042 +
            (C23045 * C1086 + C23648 + C23648 + C151796 * C1098 +
             C23043 * C1085 + C23649 + C23649 + C152149 * C1097) *
                C152080 * C23041 +
            (C23045 * C547 + C23650 + C23650 + C151796 * C571 + C23043 * C548 +
             C23651 + C23651 + C152149 * C572) *
                C152080 * C23040) *
               C151956) *
              C151851 * C741 +
          (((C23043 * C547 + C24068 + C24068 + C152149 * C571 + C23045 * C555 +
             C24069 + C24069 + C151796 * C579) *
                C152080 * C23040 +
            (C23043 * C1086 + C24070 + C24070 + C152149 * C1098 +
             C23045 * C1087 + C24071 + C24071 + C151796 * C1099) *
                C152080 * C23041 +
            (C23043 * C1535 + C24072 + C24072 + C152149 * C1559 +
             C23045 * C1916 + C24073 + C24073 + C151796 * C1918) *
                C152080 * C23042) *
               C151956 -
           ((C23873 + C23872) * C152080 * C23042 +
            (C23871 + C23870) * C152080 * C23041 +
            (C23045 * C146 + C23070 + C23070 + C151796 * C162 + C23043 * C145 +
             C23071 + C23071 + C152149 * C161) *
                C152080 * C23040) *
               C152173) *
              C151851 * C152218)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
              C23049 + C23049 + C151796 * C159) *
                 C152080 * C23040 +
             (C23380 + C23381) * C152080 * C23041 + C23401 * C23042) *
                C152173 -
            (C25051 * C23042 + (C24420 + C24421) * C152080 * C23041 +
             (C23045 * C549 + C23626 + C23626 + C151796 * C573 + C23043 * C550 +
              C23627 + C23627 + C152149 * C574) *
                 C152080 * C23040) *
                C151956) *
               C1259 +
           (((C24421 + C24420) * C152080 * C23040 +
             (C24419 + C24418) * C152080 * C23041 +
             (C25072 + C25073) * C152080 * C23042) *
                C151956 -
            (C24789 * C23042 + (C23383 + C23382) * C152080 * C23041 +
             (C23381 + C23380) * C152080 * C23040) *
                C152173) *
               C1260 +
           ((C23401 * C23040 + (C23385 + C23384) * C152080 * C23041 +
             C24803 * C23042) *
                C152173 -
            ((C23045 * C8842 + C25047 + C25047 + C151796 * C8848 +
              C23043 * C8841 + C25048 + C25048 + C152149 * C8847) *
                 C152080 * C23042 +
             (C25073 + C25072) * C152080 * C23041 + C25051 * C23040) *
                C151956) *
               C152214) *
              C152158 +
          ((((C23043 * C549 + C23634 + C23634 + C152149 * C573 + C23045 * C548 +
              C23635 + C23635 + C151796 * C572) *
                 C152080 * C23040 +
             (C24422 + C24423) * C152080 * C23041 + C25583 * C23042) *
                C151956 -
            (C23402 * C23042 + (C23387 + C23386) * C152080 * C23041 +
             (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
              C23059 + C23059 + C152149 * C159) *
                 C152080 * C23040) *
                C152173) *
               C1259 +
           (((C23386 + C23387) * C152080 * C23040 +
             (C23388 + C23389) * C152080 * C23041 + C25279 * C23042) *
                C152173 -
            ((C25588 + C25589) * C152080 * C23042 +
             (C24425 + C24424) * C152080 * C23041 +
             (C24423 + C24422) * C152080 * C23040) *
                C151956) *
               C1260 +
           ((C25583 * C23040 + (C25589 + C25588) * C152080 * C23041 +
             (C23043 * C8842 + C25581 + C25581 + C152149 * C8848 +
              C23045 * C8843 + C25582 + C25582 + C151796 * C8849) *
                 C152080 * C23042) *
                C151956 -
            ((C25284 + C25285) * C152080 * C23042 +
             (C23391 + C23390) * C152080 * C23041 + C23402 * C23040) *
                C152173) *
               C152214) *
              C151834)) /
            (p * q * std::sqrt(p + q));
    d2ee[324] +=
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 + C168 +
           C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 + C140 * C145 +
           C170 + C170 + C124 * C161) *
              C152080 * C152054 * C151869 * C151851 * C129 -
          (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 + C172 +
           C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 + C134 * C143 +
           C174 + C174 + C121 * C159) *
              C152080 * C152054 * C151869 * C151851 * C130 +
          (C134 * C144 + C175 + C175 + C121 * C160 + C136 * C145 + C176 + C176 +
           C122 * C161 + C138 * C146 + C177 + C177 + C123 * C162 + C140 * C147 +
           C178 + C178 + C124 * C163) *
              C152080 * C152054 * C151869 * C151851 * C131 -
          (C140 * C148 + C179 + C179 + C124 * C164 + C138 * C147 + C180 + C180 +
           C123 * C163 + C136 * C146 + C181 + C181 + C122 * C162 + C134 * C145 +
           C182 + C182 + C121 * C161) *
              C152080 * C152054 * C151869 * C151851 * C132 +
          (C134 * C146 + C183 + C183 + C121 * C162 + C136 * C147 + C184 + C184 +
           C122 * C163 + C138 * C148 + C185 + C185 + C123 * C164 + C140 * C149 +
           C186 + C186 + C124 * C165) *
              C152080 * C152054 * C151869 * C151851 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
            C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
            C140 * C145 + C170 + C170 + C124 * C161) *
               C152080 * C152054 * C151869 * C152258 -
           (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
            C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
            C134 * C341 + C378 + C378 + C121 * C365) *
               C152080 * C152054 * C151869 * C152244 +
           (C134 * C342 + C379 + C379 + C121 * C366 + C136 * C343 + C380 +
            C380 + C122 * C367 + C138 * C344 + C381 + C381 + C123 * C368 +
            C140 * C345 + C382 + C382 + C124 * C369) *
               C152080 * C152054 * C151869 * C152214) *
              C335 +
          ((C134 * C340 + C383 + C383 + C121 * C364 + C136 * C339 + C384 +
            C384 + C122 * C363 + C138 * C338 + C385 + C385 + C123 * C362 +
            C140 * C346 + C386 + C386 + C124 * C370) *
               C152080 * C152054 * C151869 * C152244 -
           (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
            C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
            C134 * C143 + C174 + C174 + C121 * C159) *
               C152080 * C152054 * C151869 * C152258 -
           (C140 * C347 + C387 + C387 + C124 * C371 + C138 * C345 + C388 +
            C388 + C123 * C369 + C136 * C344 + C389 + C389 + C122 * C368 +
            C134 * C343 + C390 + C390 + C121 * C367) *
               C152080 * C152054 * C151869 * C152214) *
              C336 +
          ((C134 * C144 + C175 + C175 + C121 * C160 + C136 * C145 + C176 +
            C176 + C122 * C161 + C138 * C146 + C177 + C177 + C123 * C162 +
            C140 * C147 + C178 + C178 + C124 * C163) *
               C152080 * C152054 * C151869 * C152258 -
           (C140 * C348 + C391 + C391 + C124 * C372 + C138 * C346 + C392 +
            C392 + C123 * C370 + C136 * C338 + C393 + C393 + C122 * C362 +
            C134 * C339 + C394 + C394 + C121 * C363) *
               C152080 * C152054 * C151869 * C152244 +
           (C134 * C344 + C395 + C395 + C121 * C368 + C136 * C345 + C396 +
            C396 + C122 * C369 + C138 * C347 + C397 + C397 + C123 * C371 +
            C140 * C349 + C398 + C398 + C124 * C373) *
               C152080 * C152054 * C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 +
            C168 + C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 +
            C140 * C145 + C170 + C170 + C124 * C161) *
               C152080 * C152054 * C151869 * C1259 -
           (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 +
            C376 + C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 +
            C134 * C341 + C378 + C378 + C121 * C365) *
               C152080 * C152054 * C151869 * C1260 +
           (C134 * C342 + C379 + C379 + C121 * C366 + C136 * C343 + C380 +
            C380 + C122 * C367 + C138 * C344 + C381 + C381 + C123 * C368 +
            C140 * C345 + C382 + C382 + C124 * C369) *
               C152080 * C152054 * C151869 * C152214) *
              C152255 +
          ((C134 * C340 + C383 + C383 + C121 * C364 + C136 * C339 + C384 +
            C384 + C122 * C363 + C138 * C338 + C385 + C385 + C123 * C362 +
            C140 * C346 + C386 + C386 + C124 * C370) *
               C152080 * C152054 * C151869 * C1260 -
           (C140 * C146 + C171 + C171 + C124 * C162 + C138 * C145 + C172 +
            C172 + C123 * C161 + C136 * C144 + C173 + C173 + C122 * C160 +
            C134 * C143 + C174 + C174 + C121 * C159) *
               C152080 * C152054 * C151869 * C1259 -
           (C140 * C347 + C387 + C387 + C124 * C371 + C138 * C345 + C388 +
            C388 + C123 * C369 + C136 * C344 + C389 + C389 + C122 * C368 +
            C134 * C343 + C390 + C390 + C121 * C367) *
               C152080 * C152054 * C151869 * C152214) *
              C152240 +
          ((C134 * C144 + C175 + C175 + C121 * C160 + C136 * C145 + C176 +
            C176 + C122 * C161 + C138 * C146 + C177 + C177 + C123 * C162 +
            C140 * C147 + C178 + C178 + C124 * C163) *
               C152080 * C152054 * C151869 * C1259 -
           (C140 * C348 + C391 + C391 + C124 * C372 + C138 * C346 + C392 +
            C392 + C123 * C370 + C136 * C338 + C393 + C393 + C122 * C362 +
            C134 * C339 + C394 + C394 + C121 * C363) *
               C152080 * C152054 * C151869 * C1260 +
           (C134 * C344 + C395 + C395 + C121 * C368 + C136 * C345 + C396 +
            C396 + C122 * C369 + C138 * C347 + C397 + C397 + C123 * C371 +
            C140 * C349 + C398 + C398 + C124 * C373) *
               C152080 * C152054 * C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((C134 * C142 + C167 + C167 + C121 * C158 + C136 * C143 + C168 + C168 +
           C122 * C159 + C138 * C144 + C169 + C169 + C123 * C160 + C140 * C145 +
           C170 + C170 + C124 * C161) *
              C152080 * C152054 * C151869 * C1347 -
          (C140 * C338 + C375 + C375 + C124 * C362 + C138 * C339 + C376 + C376 +
           C123 * C363 + C136 * C340 + C377 + C377 + C122 * C364 + C134 * C341 +
           C378 + C378 + C121 * C365) *
              C152080 * C152054 * C151869 * C1348 +
          (C134 * C342 + C379 + C379 + C121 * C366 + C136 * C343 + C380 + C380 +
           C122 * C367 + C138 * C344 + C381 + C381 + C123 * C368 + C140 * C345 +
           C382 + C382 + C124 * C369) *
              C152080 * C152054 * C151869 * C1349 -
          (C140 * C1353 + C1378 + C1378 + C124 * C1369 + C138 * C1354 + C1379 +
           C1379 + C123 * C1370 + C136 * C1355 + C1380 + C1380 + C122 * C1371 +
           C134 * C1356 + C1381 + C1381 + C121 * C1372) *
              C152080 * C152054 * C151869 * C1350 +
          (C134 * C1357 + C1382 + C1382 + C121 * C1373 + C136 * C1358 + C1383 +
           C1383 + C122 * C1374 + C138 * C1359 + C1384 + C1384 + C123 * C1375 +
           C140 * C1360 + C1385 + C1385 + C124 * C1376) *
              C152080 * C152054 * C151869 * C1351) *
         C151823) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
            C23049 + C23049 + C151796 * C159) *
               C152080 * C23040 +
           (C23043 * C341 + C23050 + C23050 + C152149 * C365 + C23045 * C340 +
            C23051 + C23051 + C151796 * C364) *
               C152080 * C23041 +
           (C23043 * C342 + C23052 + C23052 + C152149 * C366 + C23045 * C343 +
            C23053 + C23053 + C151796 * C367) *
               C152080 * C23042) *
              C151869 * C151851 * C129 -
          ((C23045 * C344 + C23054 + C23054 + C151796 * C368 + C23043 * C343 +
            C23055 + C23055 + C152149 * C367) *
               C152080 * C23042 +
           (C23045 * C339 + C23056 + C23056 + C151796 * C363 + C23043 * C340 +
            C23057 + C23057 + C152149 * C364) *
               C152080 * C23041 +
           (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
            C23059 + C23059 + C152149 * C159) *
               C152080 * C23040) *
              C151869 * C151851 * C130 +
          ((C23043 * C144 + C23060 + C23060 + C152149 * C160 + C23045 * C145 +
            C23061 + C23061 + C151796 * C161) *
               C152080 * C23040 +
           (C23043 * C339 + C23062 + C23062 + C152149 * C363 + C23045 * C338 +
            C23063 + C23063 + C151796 * C362) *
               C152080 * C23041 +
           (C23043 * C344 + C23064 + C23064 + C152149 * C368 + C23045 * C345 +
            C23065 + C23065 + C151796 * C369) *
               C152080 * C23042) *
              C151869 * C151851 * C131 -
          ((C23045 * C347 + C23066 + C23066 + C151796 * C371 + C23043 * C345 +
            C23067 + C23067 + C152149 * C369) *
               C152080 * C23042 +
           (C23045 * C346 + C23068 + C23068 + C151796 * C370 + C23043 * C338 +
            C23069 + C23069 + C152149 * C362) *
               C152080 * C23041 +
           (C23045 * C146 + C23070 + C23070 + C151796 * C162 + C23043 * C145 +
            C23071 + C23071 + C152149 * C161) *
               C152080 * C23040) *
              C151869 * C151851 * C132 +
          ((C23043 * C146 + C23072 + C23072 + C152149 * C162 + C23045 * C147 +
            C23073 + C23073 + C151796 * C163) *
               C152080 * C23040 +
           (C23043 * C346 + C23074 + C23074 + C152149 * C370 + C23045 * C348 +
            C23075 + C23075 + C151796 * C372) *
               C152080 * C23041 +
           (C23043 * C347 + C23076 + C23076 + C152149 * C371 + C23045 * C349 +
            C23077 + C23077 + C151796 * C373) *
               C152080 * C23042) *
              C151869 * C151851 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
             C23049 + C23049 + C151796 * C159) *
                C152080 * C23040 +
            (C23380 + C23381) * C152080 * C23041 + C23401 * C23042) *
               C151869 * C152258 -
           ((C23384 + C23385) * C152080 * C23042 +
            (C23383 + C23382) * C152080 * C23041 +
            (C23381 + C23380) * C152080 * C23040) *
               C151869 * C152244 +
           (C23401 * C23040 + (C23385 + C23384) * C152080 * C23041 +
            (C23043 * C1357 + C23310 + C23310 + C152149 * C1373 +
             C23045 * C1358 + C23311 + C23311 + C151796 * C1374) *
                C152080 * C23042) *
               C151869 * C152214) *
              C335 +
          (((C23386 + C23387) * C152080 * C23040 +
            (C23388 + C23389) * C152080 * C23041 +
            (C23390 + C23391) * C152080 * C23042) *
               C151869 * C152244 -
           (C23402 * C23042 + (C23387 + C23386) * C152080 * C23041 +
            (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
             C23059 + C23059 + C152149 * C159) *
                C152080 * C23040) *
               C151869 * C152258 -
           ((C23045 * C1359 + C23326 + C23326 + C151796 * C1375 +
             C23043 * C1358 + C23327 + C23327 + C152149 * C1374) *
                C152080 * C23042 +
            (C23391 + C23390) * C152080 * C23041 + C23402 * C23040) *
               C151869 * C152214) *
              C336 +
          (((C23043 * C144 + C23060 + C23060 + C152149 * C160 + C23045 * C145 +
             C23061 + C23061 + C151796 * C161) *
                C152080 * C23040 +
            (C23392 + C23393) * C152080 * C23041 + C23403 * C23042) *
               C151869 * C152258 -
           ((C23396 + C23397) * C152080 * C23042 +
            (C23395 + C23394) * C152080 * C23041 +
            (C23393 + C23392) * C152080 * C23040) *
               C151869 * C152244 +
           (C23403 * C23040 + (C23397 + C23396) * C152080 * C23041 +
            (C23043 * C1359 + C23342 + C23342 + C152149 * C1375 +
             C23045 * C1360 + C23343 + C23343 + C151796 * C1376) *
                C152080 * C23042) *
               C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
             C23049 + C23049 + C151796 * C159) *
                C152080 * C23040 +
            (C23380 + C23381) * C152080 * C23041 + C23401 * C23042) *
               C151869 * C1259 -
           ((C23384 + C23385) * C152080 * C23042 +
            (C23383 + C23382) * C152080 * C23041 +
            (C23381 + C23380) * C152080 * C23040) *
               C151869 * C1260 +
           (C23401 * C23040 + (C23385 + C23384) * C152080 * C23041 +
            (C23043 * C1357 + C23310 + C23310 + C152149 * C1373 +
             C23045 * C1358 + C23311 + C23311 + C151796 * C1374) *
                C152080 * C23042) *
               C151869 * C152214) *
              C152255 +
          (((C23386 + C23387) * C152080 * C23040 +
            (C23388 + C23389) * C152080 * C23041 +
            (C23390 + C23391) * C152080 * C23042) *
               C151869 * C1260 -
           (C23402 * C23042 + (C23387 + C23386) * C152080 * C23041 +
            (C23045 * C144 + C23058 + C23058 + C151796 * C160 + C23043 * C143 +
             C23059 + C23059 + C152149 * C159) *
                C152080 * C23040) *
               C151869 * C1259 -
           ((C23045 * C1359 + C23326 + C23326 + C151796 * C1375 +
             C23043 * C1358 + C23327 + C23327 + C152149 * C1374) *
                C152080 * C23042 +
            (C23391 + C23390) * C152080 * C23041 + C23402 * C23040) *
               C151869 * C152214) *
              C152240 +
          (((C23043 * C144 + C23060 + C23060 + C152149 * C160 + C23045 * C145 +
             C23061 + C23061 + C151796 * C161) *
                C152080 * C23040 +
            (C23392 + C23393) * C152080 * C23041 + C23403 * C23042) *
               C151869 * C1259 -
           ((C23396 + C23397) * C152080 * C23042 +
            (C23395 + C23394) * C152080 * C23041 +
            (C23393 + C23392) * C152080 * C23040) *
               C151869 * C1260 +
           (C23403 * C23040 + (C23397 + C23396) * C152080 * C23041 +
            (C23043 * C1359 + C23342 + C23342 + C152149 * C1375 +
             C23045 * C1360 + C23343 + C23343 + C151796 * C1376) *
                C152080 * C23042) *
               C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C23043 * C142 + C23048 + C23048 + C152149 * C158 + C23045 * C143 +
            C23049 + C23049 + C151796 * C159) *
               C152080 * C23040 +
           (C23380 + C23381) * C152080 * C23041 + C23401 * C23042) *
              C151869 * C1347 -
          (C24789 * C23042 + (C23383 + C23382) * C152080 * C23041 +
           (C23381 + C23380) * C152080 * C23040) *
              C151869 * C1348 +
          (C23401 * C23040 + (C23385 + C23384) * C152080 * C23041 +
           C24803 * C23042) *
              C151869 * C1349 -
          ((C24800 + C24801) * C152080 * C23042 +
           (C24799 + C24798) * C152080 * C23041 + C24789 * C23040) *
              C151869 * C1350 +
          (C24803 * C23040 + (C24801 + C24800) * C152080 * C23041 +
           (C23043 * C24769 + C24787 + C24787 + C152149 * C24773 +
            C23045 * C24770 + C24788 + C24788 + C151796 * C24774) *
               C152080 * C23042) *
              C151869 * C1351) *
         C151823) /
            (p * q * std::sqrt(p + q));
    d2ee[325] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 +
                      C6091 * C143 + C6097 + C6097 + C6085 * C159 +
                      C6093 * C144 + C6098 + C6098 + C6086 * C160) *
                         C152080 * C152187 +
                     (C6434 + C6435 + C6436) * C152080 * C152068) *
                        C151869 * C151910 -
                    ((C6437 + C6438 + C6439) * C152080 * C152068 +
                     (C6436 + C6435 + C6434) * C152080 * C152187) *
                        C151869 * C151917 +
                    ((C6439 + C6438 + C6437) * C152080 * C152187 +
                     (C7841 + C7842 + C7843) * C152080 * C152068) *
                        C151869 * C3585) *
                       C151828 +
                   (((C6440 + C6441 + C6442) * C152080 * C152187 +
                     (C6443 + C6444 + C6445) * C152080 * C152068) *
                        C151869 * C151917 -
                    ((C6442 + C6441 + C6440) * C152080 * C152068 +
                     (C6093 * C145 + C6105 + C6105 + C6086 * C161 +
                      C6091 * C144 + C6106 + C6106 + C6085 * C160 +
                      C6089 * C143 + C6107 + C6107 + C6084 * C159) *
                         C152080 * C152187) *
                        C151869 * C151910 -
                    ((C8337 + C8338 + C8339) * C152080 * C152068 +
                     (C6445 + C6444 + C6443) * C152080 * C152187) *
                        C151869 * C3585) *
                       C151837 +
                   (((C6089 * C144 + C6108 + C6108 + C6084 * C160 +
                      C6091 * C145 + C6109 + C6109 + C6085 * C161 +
                      C6093 * C146 + C6110 + C6110 + C6086 * C162) *
                         C152080 * C152187 +
                     (C6446 + C6447 + C6448) * C152080 * C152068) *
                        C151869 * C151910 -
                    ((C6449 + C6450 + C6451) * C152080 * C152068 +
                     (C6448 + C6447 + C6446) * C152080 * C152187) *
                        C151869 * C151917 +
                    ((C6451 + C6450 + C6449) * C152080 * C152187 +
                     (C6089 * C1354 + C6395 + C6395 + C6084 * C1370 +
                      C6091 * C1353 + C6396 + C6396 + C6085 * C1369 +
                      C6093 * C1715 + C6397 + C6397 + C6086 * C1717) *
                         C152080 * C152068) *
                        C151869 * C3585) *
                       C3588)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) *
                         C152080 * C31624 +
                     C31863 * C31625 + C31864 * C31626 + C31865 * C31627) *
                        C151869 * C151910 -
                    (C31866 * C31627 + C31865 * C31626 + C31864 * C31625 +
                     C31863 * C31624) *
                        C151869 * C151917 +
                    (C31864 * C31624 + C31865 * C31625 + C31866 * C31626 +
                     C32822 * C31627) *
                        C151869 * C3585) *
                       C151828 +
                   ((C31867 * C31624 + C31868 * C31625 + C31869 * C31626 +
                     C31870 * C31627) *
                        C151869 * C151917 -
                    (C31869 * C31627 + C31868 * C31626 + C31867 * C31625 +
                     (C31628 * C143 + C31638 + C31638 + C151791 * C159) *
                         C152080 * C31624) *
                        C151869 * C151910 -
                    (C33142 * C31627 + C31870 * C31626 + C31869 * C31625 +
                     C31868 * C31624) *
                        C151869 * C3585) *
                       C151837 +
                   (((C31628 * C144 + C31639 + C31639 + C151791 * C160) *
                         C152080 * C31624 +
                     C31871 * C31625 + C31872 * C31626 + C31873 * C31627) *
                        C151869 * C151910 -
                    (C31874 * C31627 + C31873 * C31626 + C31872 * C31625 +
                     C31871 * C31624) *
                        C151869 * C151917 +
                    (C31872 * C31624 + C31873 * C31625 + C31874 * C31626 +
                     (C31628 * C7803 + C31826 + C31826 + C151791 * C7809) *
                         C152080 * C31627) *
                        C151869 * C3585) *
                       C3588)) /
                     (p * q * std::sqrt(p + q));
    d2ee[326] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C6089 * C142 + C6096 + C6096 + C6084 * C158 +
                       C6091 * C143 + C6097 + C6097 + C6085 * C159 +
                       C6093 * C144 + C6098 + C6098 + C6086 * C160) *
                          C152080 * C152187 +
                      (C6434 + C6435 + C6436) * C152080 * C152068) *
                         C152173 -
                     ((C7453 + C7454 + C7455) * C152080 * C152068 +
                      (C6093 * C548 + C6673 + C6673 + C6086 * C572 +
                       C6091 * C549 + C6674 + C6674 + C6085 * C573 +
                       C6089 * C550 + C6675 + C6675 + C6084 * C574) *
                          C152080 * C152187) *
                         C151956) *
                        C151910 +
                    (((C7455 + C7454 + C7453) * C152080 * C152187 +
                      (C8122 + C8123 + C8124) * C152080 * C152068) *
                         C151956 -
                     ((C6437 + C6438 + C6439) * C152080 * C152068 +
                      (C6436 + C6435 + C6434) * C152080 * C152187) *
                         C152173) *
                        C151917 +
                    (((C6439 + C6438 + C6437) * C152080 * C152187 +
                      (C7841 + C7842 + C7843) * C152080 * C152068) *
                         C152173 -
                     ((C8866 + C8867 + C8868) * C152080 * C152068 +
                      (C8124 + C8123 + C8122) * C152080 * C152187) *
                         C151956) *
                        C3585) *
                       C3241 +
                   ((((C6089 * C549 + C6682 + C6682 + C6084 * C573 +
                       C6091 * C548 + C6683 + C6683 + C6085 * C572 +
                       C6093 * C547 + C6684 + C6684 + C6086 * C571) *
                          C152080 * C152187 +
                      (C7456 + C7457 + C7458) * C152080 * C152068) *
                         C151956 -
                     ((C6442 + C6441 + C6440) * C152080 * C152068 +
                      (C6093 * C145 + C6105 + C6105 + C6086 * C161 +
                       C6091 * C144 + C6106 + C6106 + C6085 * C160 +
                       C6089 * C143 + C6107 + C6107 + C6084 * C159) *
                          C152080 * C152187) *
                         C152173) *
                        C151910 +
                    (((C6440 + C6441 + C6442) * C152080 * C152187 +
                      (C6443 + C6444 + C6445) * C152080 * C152068) *
                         C152173 -
                     ((C8645 + C8646 + C8647) * C152080 * C152068 +
                      (C7458 + C7457 + C7456) * C152080 * C152187) *
                         C151956) *
                        C151917 +
                    (((C8647 + C8646 + C8645) * C152080 * C152187 +
                      (C6089 * C2054 + C8636 + C8636 + C6084 * C2062 +
                       C6091 * C2055 + C8637 + C8637 + C6085 * C2063 +
                       C6093 * C2056 + C8638 + C8638 + C6086 * C2064) *
                          C152080 * C152068) *
                         C151956 -
                     ((C8337 + C8338 + C8339) * C152080 * C152068 +
                      (C6445 + C6444 + C6443) * C152080 * C152187) *
                         C152173) *
                        C3585) *
                       C151834)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) *
                          C152080 * C31624 +
                      C31863 * C31625 + C31864 * C31626 + C31865 * C31627) *
                         C152173 -
                     (C32570 * C31627 + C32571 * C31626 + C32572 * C31625 +
                      (C31628 * C550 + C32024 + C32024 + C151791 * C574) *
                          C152080 * C31624) *
                         C151956) *
                        C151910 +
                    ((C32572 * C31624 + C32571 * C31625 + C32570 * C31626 +
                      C33004 * C31627) *
                         C151956 -
                     (C31866 * C31627 + C31865 * C31626 + C31864 * C31625 +
                      C31863 * C31624) *
                         C152173) *
                        C151917 +
                    ((C31864 * C31624 + C31865 * C31625 + C31866 * C31626 +
                      C32822 * C31627) *
                         C152173 -
                     (C33483 * C31627 + C33004 * C31626 + C32570 * C31625 +
                      C32571 * C31624) *
                         C151956) *
                        C3585) *
                       C3241 +
                   ((((C31628 * C549 + C32029 + C32029 + C151791 * C573) *
                          C152080 * C31624 +
                      C32573 * C31625 + C32574 * C31626 + C32575 * C31627) *
                         C151956 -
                     (C31869 * C31627 + C31868 * C31626 + C31867 * C31625 +
                      (C31628 * C143 + C31638 + C31638 + C151791 * C159) *
                          C152080 * C31624) *
                         C152173) *
                        C151910 +
                    ((C31867 * C31624 + C31868 * C31625 + C31869 * C31626 +
                      C31870 * C31627) *
                         C152173 -
                     (C33343 * C31627 + C32575 * C31626 + C32574 * C31625 +
                      C32573 * C31624) *
                         C151956) *
                        C151917 +
                    ((C32574 * C31624 + C32575 * C31625 + C33343 * C31626 +
                      (C31628 * C25784 + C33339 + C33339 + C151791 * C25788) *
                          C152080 * C31627) *
                         C151956 -
                     (C33142 * C31627 + C31870 * C31626 + C31869 * C31625 +
                      C31868 * C31624) *
                         C152173) *
                        C3585) *
                       C151834)) /
                     (p * q * std::sqrt(p + q));
    d2ee[327] += (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 +
                      C6091 * C143 + C6097 + C6097 + C6085 * C159 +
                      C6093 * C144 + C6098 + C6098 + C6086 * C160) *
                         C152080 * C152187 +
                     (C6434 + C6435 + C6436) * C152080 * C152068) *
                        C151869 * C152265 -
                    ((C6437 + C6438 + C6439) * C152080 * C152068 +
                     (C6436 + C6435 + C6434) * C152080 * C152187) *
                        C151869 * C152261 +
                    ((C6439 + C6438 + C6437) * C152080 * C152187 +
                     (C7841 + C7842 + C7843) * C152080 * C152068) *
                        C151869 * C152249 -
                    ((C7844 + C7845 + C7846) * C152080 * C152068 +
                     (C7843 + C7842 + C7841) * C152080 * C152187) *
                        C151869 * C152224) *
                       C3241 +
                   (((C6440 + C6441 + C6442) * C152080 * C152187 +
                     (C6443 + C6444 + C6445) * C152080 * C152068) *
                        C151869 * C152261 -
                    ((C6442 + C6441 + C6440) * C152080 * C152068 +
                     (C6093 * C145 + C6105 + C6105 + C6086 * C161 +
                      C6091 * C144 + C6106 + C6106 + C6085 * C160 +
                      C6089 * C143 + C6107 + C6107 + C6084 * C159) *
                         C152080 * C152187) *
                        C151869 * C152265 -
                    ((C8337 + C8338 + C8339) * C152080 * C152068 +
                     (C6445 + C6444 + C6443) * C152080 * C152187) *
                        C151869 * C152249 +
                    ((C8339 + C8338 + C8337) * C152080 * C152187 +
                     (C6089 * C1358 + C8328 + C8328 + C6084 * C1374 +
                      C6091 * C1359 + C8329 + C8329 + C6085 * C1375 +
                      C6093 * C1360 + C8330 + C8330 + C6086 * C1376) *
                         C152080 * C152068) *
                        C151869 * C152224) *
                       C151834)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 +
                      C6091 * C143 + C6097 + C6097 + C6085 * C159 +
                      C6093 * C144 + C6098 + C6098 + C6086 * C160) *
                         C152080 * C152187 +
                     (C6434 + C6435 + C6436) * C152080 * C152068) *
                        C151869 * C3101 -
                    ((C6437 + C6438 + C6439) * C152080 * C152068 +
                     (C6436 + C6435 + C6434) * C152080 * C152187) *
                        C151869 * C151914) *
                       C152264 +
                   (((C6440 + C6441 + C6442) * C152080 * C152187 +
                     (C6443 + C6444 + C6445) * C152080 * C152068) *
                        C151869 * C151914 -
                    ((C6442 + C6441 + C6440) * C152080 * C152068 +
                     (C6093 * C145 + C6105 + C6105 + C6086 * C161 +
                      C6091 * C144 + C6106 + C6106 + C6085 * C160 +
                      C6089 * C143 + C6107 + C6107 + C6084 * C159) *
                         C152080 * C152187) *
                        C151869 * C3101) *
                       C152257 +
                   (((C6089 * C144 + C6108 + C6108 + C6084 * C160 +
                      C6091 * C145 + C6109 + C6109 + C6085 * C161 +
                      C6093 * C146 + C6110 + C6110 + C6086 * C162) *
                         C152080 * C152187 +
                     (C6446 + C6447 + C6448) * C152080 * C152068) *
                        C151869 * C3101 -
                    ((C6449 + C6450 + C6451) * C152080 * C152068 +
                     (C6448 + C6447 + C6446) * C152080 * C152187) *
                        C151869 * C151914) *
                       C152242 +
                   (((C6915 + C6916 + C6917) * C152080 * C152187 +
                     (C6089 * C345 + C6906 + C6906 + C6084 * C369 +
                      C6091 * C347 + C6907 + C6907 + C6085 * C371 +
                      C6093 * C349 + C6908 + C6908 + C6086 * C373) *
                         C152080 * C152068) *
                        C151869 * C151914 -
                    ((C6917 + C6916 + C6915) * C152080 * C152068 +
                     (C6093 * C147 + C6117 + C6117 + C6086 * C163 +
                      C6091 * C146 + C6118 + C6118 + C6085 * C162 +
                      C6089 * C145 + C6119 + C6119 + C6084 * C161) *
                         C152080 * C152187) *
                        C151869 * C3101) *
                       C152218)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C6089 * C142 + C6096 + C6096 + C6084 * C158 +
                       C6091 * C143 + C6097 + C6097 + C6085 * C159 +
                       C6093 * C144 + C6098 + C6098 + C6086 * C160) *
                          C152080 * C152187 +
                      (C6434 + C6435 + C6436) * C152080 * C152068) *
                         C152259 -
                     ((C7453 + C7454 + C7455) * C152080 * C152068 +
                      (C6093 * C548 + C6673 + C6673 + C6086 * C572 +
                       C6091 * C549 + C6674 + C6674 + C6085 * C573 +
                       C6089 * C550 + C6675 + C6675 + C6084 * C574) *
                          C152080 * C152187) *
                         C152246 +
                     ((C6089 * C551 + C6676 + C6676 + C6084 * C575 +
                       C6091 * C552 + C6677 + C6677 + C6085 * C576 +
                       C6093 * C553 + C6678 + C6678 + C6086 * C577) *
                          C152080 * C152187 +
                      (C8119 + C8120 + C8121) * C152080 * C152068) *
                         C152217) *
                        C3101 +
                    (((C7455 + C7454 + C7453) * C152080 * C152187 +
                      (C8122 + C8123 + C8124) * C152080 * C152068) *
                         C152246 -
                     ((C6437 + C6438 + C6439) * C152080 * C152068 +
                      (C6436 + C6435 + C6434) * C152080 * C152187) *
                         C152259 -
                     ((C8125 + C8126 + C8127) * C152080 * C152068 +
                      (C8121 + C8120 + C8119) * C152080 * C152187) *
                         C152217) *
                        C151914) *
                       C3241 +
                   ((((C6089 * C549 + C6682 + C6682 + C6084 * C573 +
                       C6091 * C548 + C6683 + C6683 + C6085 * C572 +
                       C6093 * C547 + C6684 + C6684 + C6086 * C571) *
                          C152080 * C152187 +
                      (C7456 + C7457 + C7458) * C152080 * C152068) *
                         C152246 -
                     ((C6442 + C6441 + C6440) * C152080 * C152068 +
                      (C6093 * C145 + C6105 + C6105 + C6086 * C161 +
                       C6091 * C144 + C6106 + C6106 + C6085 * C160 +
                       C6089 * C143 + C6107 + C6107 + C6084 * C159) *
                          C152080 * C152187) *
                         C152259 -
                     ((C9753 + C9754 + C9755) * C152080 * C152068 +
                      (C6093 * C554 + C6691 + C6691 + C6086 * C578 +
                       C6091 * C553 + C6692 + C6692 + C6085 * C577 +
                       C6089 * C552 + C6693 + C6693 + C6084 * C576) *
                          C152080 * C152187) *
                         C152217) *
                        C3101 +
                    (((C6440 + C6441 + C6442) * C152080 * C152187 +
                      (C6443 + C6444 + C6445) * C152080 * C152068) *
                         C152259 -
                     ((C8645 + C8646 + C8647) * C152080 * C152068 +
                      (C7458 + C7457 + C7456) * C152080 * C152187) *
                         C152246 +
                     ((C9755 + C9754 + C9753) * C152080 * C152187 +
                      (C6089 * C1540 + C9744 + C9744 + C6084 * C1564 +
                       C6091 * C1541 + C9745 + C9745 + C6085 * C1565 +
                       C6093 * C1542 + C9746 + C9746 + C6086 * C1566) *
                          C152080 * C152068) *
                         C152217) *
                        C151914) *
                       C151834)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) *
                         C152080 * C31624 +
                     C31863 * C31625 + C31864 * C31626 + C31865 * C31627) *
                        C151869 * C3101 -
                    (C31866 * C31627 + C31865 * C31626 + C31864 * C31625 +
                     C31863 * C31624) *
                        C151869 * C151914) *
                       C152264 +
                   ((C31867 * C31624 + C31868 * C31625 + C31869 * C31626 +
                     C31870 * C31627) *
                        C151869 * C151914 -
                    (C31869 * C31627 + C31868 * C31626 + C31867 * C31625 +
                     (C31628 * C143 + C31638 + C31638 + C151791 * C159) *
                         C152080 * C31624) *
                        C151869 * C3101) *
                       C152257 +
                   (((C31628 * C144 + C31639 + C31639 + C151791 * C160) *
                         C152080 * C31624 +
                     C31871 * C31625 + C31872 * C31626 + C31873 * C31627) *
                        C151869 * C3101 -
                    (C31874 * C31627 + C31873 * C31626 + C31872 * C31625 +
                     C31871 * C31624) *
                        C151869 * C151914) *
                       C152242 +
                   ((C32191 * C31624 + C32192 * C31625 + C32193 * C31626 +
                     (C31628 * C1360 + C32181 + C32181 + C151791 * C1376) *
                         C152080 * C31627) *
                        C151869 * C151914 -
                    (C32193 * C31627 + C32192 * C31626 + C32191 * C31625 +
                     (C31628 * C145 + C31646 + C31646 + C151791 * C161) *
                         C152080 * C31624) *
                        C151869 * C3101) *
                       C152218)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) *
                         C152080 * C31624 +
                     C31863 * C31625 + C31864 * C31626 + C31865 * C31627) *
                        C151869 * C152265 -
                    (C31866 * C31627 + C31865 * C31626 + C31864 * C31625 +
                     C31863 * C31624) *
                        C151869 * C152261 +
                    (C31864 * C31624 + C31865 * C31625 + C31866 * C31626 +
                     C32822 * C31627) *
                        C151869 * C152249 -
                    (C32823 * C31627 + C32822 * C31626 + C31866 * C31625 +
                     C31865 * C31624) *
                        C151869 * C152224) *
                       C3241 +
                   ((C31867 * C31624 + C31868 * C31625 + C31869 * C31626 +
                     C31870 * C31627) *
                        C151869 * C152261 -
                    (C31869 * C31627 + C31868 * C31626 + C31867 * C31625 +
                     (C31628 * C143 + C31638 + C31638 + C151791 * C159) *
                         C152080 * C31624) *
                        C151869 * C152265 -
                    (C33142 * C31627 + C31870 * C31626 + C31869 * C31625 +
                     C31868 * C31624) *
                        C151869 * C152249 +
                    (C31869 * C31624 + C31870 * C31625 + C33142 * C31626 +
                     (C31628 * C24770 + C33138 + C33138 + C151791 * C24774) *
                         C152080 * C31627) *
                        C151869 * C152224) *
                       C151834)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) *
                          C152080 * C31624 +
                      C31863 * C31625 + C31864 * C31626 + C31865 * C31627) *
                         C152259 -
                     (C32570 * C31627 + C32571 * C31626 + C32572 * C31625 +
                      (C31628 * C550 + C32024 + C32024 + C151791 * C574) *
                          C152080 * C31624) *
                         C152246 +
                     ((C31628 * C551 + C32025 + C32025 + C151791 * C575) *
                          C152080 * C31624 +
                      C33001 * C31625 + C33002 * C31626 + C33003 * C31627) *
                         C152217) *
                        C3101 +
                    ((C32572 * C31624 + C32571 * C31625 + C32570 * C31626 +
                      C33004 * C31627) *
                         C152246 -
                     (C31866 * C31627 + C31865 * C31626 + C31864 * C31625 +
                      C31863 * C31624) *
                         C152259 -
                     (C33005 * C31627 + C33003 * C31626 + C33002 * C31625 +
                      C33001 * C31624) *
                         C152217) *
                        C151914) *
                       C3241 +
                   ((((C31628 * C549 + C32029 + C32029 + C151791 * C573) *
                          C152080 * C31624 +
                      C32573 * C31625 + C32574 * C31626 + C32575 * C31627) *
                         C152246 -
                     (C31869 * C31627 + C31868 * C31626 + C31867 * C31625 +
                      (C31628 * C143 + C31638 + C31638 + C151791 * C159) *
                          C152080 * C31624) *
                         C152259 -
                     (C34079 * C31627 + C34080 * C31626 + C34081 * C31625 +
                      (C31628 * C552 + C32036 + C32036 + C151791 * C576) *
                          C152080 * C31624) *
                         C152217) *
                        C3101 +
                    ((C31867 * C31624 + C31868 * C31625 + C31869 * C31626 +
                      C31870 * C31627) *
                         C152259 -
                     (C33343 * C31627 + C32575 * C31626 + C32574 * C31625 +
                      C32573 * C31624) *
                         C152246 +
                     (C34081 * C31624 + C34080 * C31625 + C34079 * C31626 +
                      (C31628 * C25022 + C34069 + C34069 + C151791 * C25026) *
                          C152080 * C31627) *
                         C152217) *
                        C151914) *
                       C151834)) /
                     (p * q * std::sqrt(p + q));
    d2ee[328] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C6089 * C142 + C6096 + C6096 + C6084 * C158 +
                       C6091 * C143 + C6097 + C6097 + C6085 * C159 +
                       C6093 * C144 + C6098 + C6098 + C6086 * C160) *
                          C152080 * C152187 +
                      (C6434 + C6435 + C6436) * C152080 * C152068) *
                         C152173 -
                     ((C7453 + C7454 + C7455) * C152080 * C152068 +
                      (C6093 * C548 + C6673 + C6673 + C6086 * C572 +
                       C6091 * C549 + C6674 + C6674 + C6085 * C573 +
                       C6089 * C550 + C6675 + C6675 + C6084 * C574) *
                          C152080 * C152187) *
                         C151956) *
                        C3101 +
                    (((C7455 + C7454 + C7453) * C152080 * C152187 +
                      (C8122 + C8123 + C8124) * C152080 * C152068) *
                         C151956 -
                     ((C6437 + C6438 + C6439) * C152080 * C152068 +
                      (C6436 + C6435 + C6434) * C152080 * C152187) *
                         C152173) *
                        C151914) *
                       C151828 +
                   ((((C6089 * C549 + C6682 + C6682 + C6084 * C573 +
                       C6091 * C548 + C6683 + C6683 + C6085 * C572 +
                       C6093 * C547 + C6684 + C6684 + C6086 * C571) *
                          C152080 * C152187 +
                      (C7456 + C7457 + C7458) * C152080 * C152068) *
                         C151956 -
                     ((C6442 + C6441 + C6440) * C152080 * C152068 +
                      (C6093 * C145 + C6105 + C6105 + C6086 * C161 +
                       C6091 * C144 + C6106 + C6106 + C6085 * C160 +
                       C6089 * C143 + C6107 + C6107 + C6084 * C159) *
                          C152080 * C152187) *
                         C152173) *
                        C3101 +
                    (((C6440 + C6441 + C6442) * C152080 * C152187 +
                      (C6443 + C6444 + C6445) * C152080 * C152068) *
                         C152173 -
                     ((C8645 + C8646 + C8647) * C152080 * C152068 +
                      (C7458 + C7457 + C7456) * C152080 * C152187) *
                         C151956) *
                        C151914) *
                       C151837 +
                   ((((C6089 * C144 + C6108 + C6108 + C6084 * C160 +
                       C6091 * C145 + C6109 + C6109 + C6085 * C161 +
                       C6093 * C146 + C6110 + C6110 + C6086 * C162) *
                          C152080 * C152187 +
                      (C6446 + C6447 + C6448) * C152080 * C152068) *
                         C152173 -
                     ((C7459 + C7460 + C7461) * C152080 * C152068 +
                      (C6093 * C555 + C6697 + C6697 + C6086 * C579 +
                       C6091 * C547 + C6698 + C6698 + C6085 * C571 +
                       C6089 * C548 + C6699 + C6699 + C6084 * C572) *
                          C152080 * C152187) *
                         C151956) *
                        C3101 +
                    (((C7461 + C7460 + C7459) * C152080 * C152187 +
                      (C6089 * C1536 + C7432 + C7432 + C6084 * C1560 +
                       C6091 * C1535 + C7433 + C7433 + C6085 * C1559 +
                       C6093 * C1916 + C7434 + C7434 + C6086 * C1918) *
                          C152080 * C152068) *
                         C151956 -
                     ((C6449 + C6450 + C6451) * C152080 * C152068 +
                      (C6448 + C6447 + C6446) * C152080 * C152187) *
                         C152173) *
                        C151914) *
                       C3588)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) *
                          C152080 * C31624 +
                      C31863 * C31625 + C31864 * C31626 + C31865 * C31627) *
                         C152173 -
                     (C32570 * C31627 + C32571 * C31626 + C32572 * C31625 +
                      (C31628 * C550 + C32024 + C32024 + C151791 * C574) *
                          C152080 * C31624) *
                         C151956) *
                        C3101 +
                    ((C32572 * C31624 + C32571 * C31625 + C32570 * C31626 +
                      C33004 * C31627) *
                         C151956 -
                     (C31866 * C31627 + C31865 * C31626 + C31864 * C31625 +
                      C31863 * C31624) *
                         C152173) *
                        C151914) *
                       C151828 +
                   ((((C31628 * C549 + C32029 + C32029 + C151791 * C573) *
                          C152080 * C31624 +
                      C32573 * C31625 + C32574 * C31626 + C32575 * C31627) *
                         C151956 -
                     (C31869 * C31627 + C31868 * C31626 + C31867 * C31625 +
                      (C31628 * C143 + C31638 + C31638 + C151791 * C159) *
                          C152080 * C31624) *
                         C152173) *
                        C3101 +
                    ((C31867 * C31624 + C31868 * C31625 + C31869 * C31626 +
                      C31870 * C31627) *
                         C152173 -
                     (C33343 * C31627 + C32575 * C31626 + C32574 * C31625 +
                      C32573 * C31624) *
                         C151956) *
                        C151914) *
                       C151837 +
                   ((((C31628 * C144 + C31639 + C31639 + C151791 * C160) *
                          C152080 * C31624 +
                      C31871 * C31625 + C31872 * C31626 + C31873 * C31627) *
                         C152173 -
                     (C32576 * C31627 + C32577 * C31626 + C32578 * C31625 +
                      (C31628 * C548 + C32040 + C32040 + C151791 * C572) *
                          C152080 * C31624) *
                         C151956) *
                        C3101 +
                    ((C32578 * C31624 + C32577 * C31625 + C32576 * C31626 +
                      (C31628 * C8843 + C32542 + C32542 + C151791 * C8849) *
                          C152080 * C31627) *
                         C151956 -
                     (C31874 * C31627 + C31873 * C31626 + C31872 * C31625 +
                      C31871 * C31624) *
                         C152173) *
                        C151914) *
                       C3588)) /
                     (p * q * std::sqrt(p + q));
    d2ee[329] += (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                  ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 +
                      C6091 * C143 + C6097 + C6097 + C6085 * C159 +
                      C6093 * C144 + C6098 + C6098 + C6086 * C160) *
                         C152080 * C152187 +
                     (C6434 + C6435 + C6436) * C152080 * C152068) *
                        C151869 * C3101 -
                    ((C6437 + C6438 + C6439) * C152080 * C152068 +
                     (C6436 + C6435 + C6434) * C152080 * C152187) *
                        C151869 * C151914) *
                       C152264 +
                   (((C6440 + C6441 + C6442) * C152080 * C152187 +
                     (C6443 + C6444 + C6445) * C152080 * C152068) *
                        C151869 * C151914 -
                    ((C6442 + C6441 + C6440) * C152080 * C152068 +
                     (C6093 * C145 + C6105 + C6105 + C6086 * C161 +
                      C6091 * C144 + C6106 + C6106 + C6085 * C160 +
                      C6089 * C143 + C6107 + C6107 + C6084 * C159) *
                         C152080 * C152187) *
                        C151869 * C3101) *
                       C152257 +
                   (((C6089 * C144 + C6108 + C6108 + C6084 * C160 +
                      C6091 * C145 + C6109 + C6109 + C6085 * C161 +
                      C6093 * C146 + C6110 + C6110 + C6086 * C162) *
                         C152080 * C152187 +
                     (C6446 + C6447 + C6448) * C152080 * C152068) *
                        C151869 * C3101 -
                    ((C6449 + C6450 + C6451) * C152080 * C152068 +
                     (C6448 + C6447 + C6446) * C152080 * C152187) *
                        C151869 * C151914) *
                       C152242 +
                   (((C6915 + C6916 + C6917) * C152080 * C152187 +
                     (C6089 * C345 + C6906 + C6906 + C6084 * C369 +
                      C6091 * C347 + C6907 + C6907 + C6085 * C371 +
                      C6093 * C349 + C6908 + C6908 + C6086 * C373) *
                         C152080 * C152068) *
                        C151869 * C151914 -
                    ((C6917 + C6916 + C6915) * C152080 * C152068 +
                     (C6093 * C147 + C6117 + C6117 + C6086 * C163 +
                      C6091 * C146 + C6118 + C6118 + C6085 * C162 +
                      C6089 * C145 + C6119 + C6119 + C6084 * C161) *
                         C152080 * C152187) *
                        C151869 * C3101) *
                       C152218)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                  ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 +
                      C6091 * C143 + C6097 + C6097 + C6085 * C159 +
                      C6093 * C144 + C6098 + C6098 + C6086 * C160) *
                         C152080 * C152187 +
                     (C6434 + C6435 + C6436) * C152080 * C152068) *
                        C151869 * C152265 -
                    ((C6437 + C6438 + C6439) * C152080 * C152068 +
                     (C6436 + C6435 + C6434) * C152080 * C152187) *
                        C151869 * C152261 +
                    ((C6439 + C6438 + C6437) * C152080 * C152187 +
                     (C7841 + C7842 + C7843) * C152080 * C152068) *
                        C151869 * C152249 -
                    ((C7844 + C7845 + C7846) * C152080 * C152068 +
                     (C7843 + C7842 + C7841) * C152080 * C152187) *
                        C151869 * C152224) *
                       C3241 +
                   (((C6440 + C6441 + C6442) * C152080 * C152187 +
                     (C6443 + C6444 + C6445) * C152080 * C152068) *
                        C151869 * C152261 -
                    ((C6442 + C6441 + C6440) * C152080 * C152068 +
                     (C6093 * C145 + C6105 + C6105 + C6086 * C161 +
                      C6091 * C144 + C6106 + C6106 + C6085 * C160 +
                      C6089 * C143 + C6107 + C6107 + C6084 * C159) *
                         C152080 * C152187) *
                        C151869 * C152265 -
                    ((C8337 + C8338 + C8339) * C152080 * C152068 +
                     (C6445 + C6444 + C6443) * C152080 * C152187) *
                        C151869 * C152249 +
                    ((C8339 + C8338 + C8337) * C152080 * C152187 +
                     (C6089 * C1358 + C8328 + C8328 + C6084 * C1374 +
                      C6091 * C1359 + C8329 + C8329 + C6085 * C1375 +
                      C6093 * C1360 + C8330 + C8330 + C6086 * C1376) *
                         C152080 * C152068) *
                        C151869 * C152224) *
                       C151834)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                  ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) *
                         C152080 * C31624 +
                     C31863 * C31625 + C31864 * C31626 + C31865 * C31627) *
                        C151869 * C3101 -
                    (C31866 * C31627 + C31865 * C31626 + C31864 * C31625 +
                     C31863 * C31624) *
                        C151869 * C151914) *
                       C152264 +
                   ((C31867 * C31624 + C31868 * C31625 + C31869 * C31626 +
                     C31870 * C31627) *
                        C151869 * C151914 -
                    (C31869 * C31627 + C31868 * C31626 + C31867 * C31625 +
                     (C31628 * C143 + C31638 + C31638 + C151791 * C159) *
                         C152080 * C31624) *
                        C151869 * C3101) *
                       C152257 +
                   (((C31628 * C144 + C31639 + C31639 + C151791 * C160) *
                         C152080 * C31624 +
                     C31871 * C31625 + C31872 * C31626 + C31873 * C31627) *
                        C151869 * C3101 -
                    (C31874 * C31627 + C31873 * C31626 + C31872 * C31625 +
                     C31871 * C31624) *
                        C151869 * C151914) *
                       C152242 +
                   ((C32191 * C31624 + C32192 * C31625 + C32193 * C31626 +
                     (C31628 * C1360 + C32181 + C32181 + C151791 * C1376) *
                         C152080 * C31627) *
                        C151869 * C151914 -
                    (C32193 * C31627 + C32192 * C31626 + C32191 * C31625 +
                     (C31628 * C145 + C31646 + C31646 + C151791 * C161) *
                         C152080 * C31624) *
                        C151869 * C3101) *
                       C152218)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                  ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) *
                         C152080 * C31624 +
                     C31863 * C31625 + C31864 * C31626 + C31865 * C31627) *
                        C151869 * C152265 -
                    (C31866 * C31627 + C31865 * C31626 + C31864 * C31625 +
                     C31863 * C31624) *
                        C151869 * C152261 +
                    (C31864 * C31624 + C31865 * C31625 + C31866 * C31626 +
                     C32822 * C31627) *
                        C151869 * C152249 -
                    (C32823 * C31627 + C32822 * C31626 + C31866 * C31625 +
                     C31865 * C31624) *
                        C151869 * C152224) *
                       C3241 +
                   ((C31867 * C31624 + C31868 * C31625 + C31869 * C31626 +
                     C31870 * C31627) *
                        C151869 * C152261 -
                    (C31869 * C31627 + C31868 * C31626 + C31867 * C31625 +
                     (C31628 * C143 + C31638 + C31638 + C151791 * C159) *
                         C152080 * C31624) *
                        C151869 * C152265 -
                    (C33142 * C31627 + C31870 * C31626 + C31869 * C31625 +
                     C31868 * C31624) *
                        C151869 * C152249 +
                    (C31869 * C31624 + C31870 * C31625 + C33142 * C31626 +
                     (C31628 * C24770 + C33138 + C33138 + C151791 * C24774) *
                         C152080 * C31627) *
                        C151869 * C152224) *
                       C151834)) /
                     (p * q * std::sqrt(p + q));
    d2ee[330] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C6089 * C142 + C6096 + C6096 + C6084 * C158 +
                       C6091 * C143 + C6097 + C6097 + C6085 * C159 +
                       C6093 * C144 + C6098 + C6098 + C6086 * C160) *
                          C152080 * C152187 +
                      (C6434 + C6435 + C6436) * C152080 * C152068) *
                         C4107 -
                     ((C7453 + C7454 + C7455) * C152080 * C152068 +
                      (C6093 * C548 + C6673 + C6673 + C6086 * C572 +
                       C6091 * C549 + C6674 + C6674 + C6085 * C573 +
                       C6089 * C550 + C6675 + C6675 + C6084 * C574) *
                          C152080 * C152187) *
                         C151956) *
                        C151910 +
                    (((C7455 + C7454 + C7453) * C152080 * C152187 +
                      (C8122 + C8123 + C8124) * C152080 * C152068) *
                         C151956 -
                     ((C6437 + C6438 + C6439) * C152080 * C152068 +
                      (C6436 + C6435 + C6434) * C152080 * C152187) *
                         C4107) *
                        C151917 +
                    (((C6439 + C6438 + C6437) * C152080 * C152187 +
                      (C7841 + C7842 + C7843) * C152080 * C152068) *
                         C4107 -
                     ((C8866 + C8867 + C8868) * C152080 * C152068 +
                      (C8124 + C8123 + C8122) * C152080 * C152187) *
                         C151956) *
                        C3585) *
                       C152158 +
                   ((((C6089 * C549 + C6682 + C6682 + C6084 * C573 +
                       C6091 * C548 + C6683 + C6683 + C6085 * C572 +
                       C6093 * C547 + C6684 + C6684 + C6086 * C571) *
                          C152080 * C152187 +
                      (C7456 + C7457 + C7458) * C152080 * C152068) *
                         C151956 -
                     ((C6442 + C6441 + C6440) * C152080 * C152068 +
                      (C6093 * C145 + C6105 + C6105 + C6086 * C161 +
                       C6091 * C144 + C6106 + C6106 + C6085 * C160 +
                       C6089 * C143 + C6107 + C6107 + C6084 * C159) *
                          C152080 * C152187) *
                         C4107) *
                        C151910 +
                    (((C6440 + C6441 + C6442) * C152080 * C152187 +
                      (C6443 + C6444 + C6445) * C152080 * C152068) *
                         C4107 -
                     ((C8645 + C8646 + C8647) * C152080 * C152068 +
                      (C7458 + C7457 + C7456) * C152080 * C152187) *
                         C151956) *
                        C151917 +
                    (((C8647 + C8646 + C8645) * C152080 * C152187 +
                      (C6089 * C2054 + C8636 + C8636 + C6084 * C2062 +
                       C6091 * C2055 + C8637 + C8637 + C6085 * C2063 +
                       C6093 * C2056 + C8638 + C8638 + C6086 * C2064) *
                          C152080 * C152068) *
                         C151956 -
                     ((C8337 + C8338 + C8339) * C152080 * C152068 +
                      (C6445 + C6444 + C6443) * C152080 * C152187) *
                         C4107) *
                        C3585) *
                       C151834)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) *
                          C152080 * C31624 +
                      C31863 * C31625 + C31864 * C31626 + C31865 * C31627) *
                         C4107 -
                     (C32570 * C31627 + C32571 * C31626 + C32572 * C31625 +
                      (C31628 * C550 + C32024 + C32024 + C151791 * C574) *
                          C152080 * C31624) *
                         C151956) *
                        C151910 +
                    ((C32572 * C31624 + C32571 * C31625 + C32570 * C31626 +
                      C33004 * C31627) *
                         C151956 -
                     (C31866 * C31627 + C31865 * C31626 + C31864 * C31625 +
                      C31863 * C31624) *
                         C4107) *
                        C151917 +
                    ((C31864 * C31624 + C31865 * C31625 + C31866 * C31626 +
                      C32822 * C31627) *
                         C4107 -
                     (C33483 * C31627 + C33004 * C31626 + C32570 * C31625 +
                      C32571 * C31624) *
                         C151956) *
                        C3585) *
                       C152158 +
                   ((((C31628 * C549 + C32029 + C32029 + C151791 * C573) *
                          C152080 * C31624 +
                      C32573 * C31625 + C32574 * C31626 + C32575 * C31627) *
                         C151956 -
                     (C31869 * C31627 + C31868 * C31626 + C31867 * C31625 +
                      (C31628 * C143 + C31638 + C31638 + C151791 * C159) *
                          C152080 * C31624) *
                         C4107) *
                        C151910 +
                    ((C31867 * C31624 + C31868 * C31625 + C31869 * C31626 +
                      C31870 * C31627) *
                         C4107 -
                     (C33343 * C31627 + C32575 * C31626 + C32574 * C31625 +
                      C32573 * C31624) *
                         C151956) *
                        C151917 +
                    ((C32574 * C31624 + C32575 * C31625 + C33343 * C31626 +
                      (C31628 * C25784 + C33339 + C33339 + C151791 * C25788) *
                          C152080 * C31627) *
                         C151956 -
                     (C33142 * C31627 + C31870 * C31626 + C31869 * C31625 +
                      C31868 * C31624) *
                         C4107) *
                        C3585) *
                       C151834)) /
                     (p * q * std::sqrt(p + q));
    d2ee[331] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 +
                      C6091 * C143 + C6097 + C6097 + C6085 * C159 +
                      C6093 * C144 + C6098 + C6098 + C6086 * C160) *
                         C152080 * C152187 +
                     (C6434 + C6435 + C6436) * C152080 * C152068) *
                        C151952 -
                    ((C7453 + C7454 + C7455) * C152080 * C152068 +
                     (C6093 * C548 + C6673 + C6673 + C6086 * C572 +
                      C6091 * C549 + C6674 + C6674 + C6085 * C573 +
                      C6089 * C550 + C6675 + C6675 + C6084 * C574) *
                         C152080 * C152187) *
                        C151959 +
                    ((C6089 * C551 + C6676 + C6676 + C6084 * C575 +
                      C6091 * C552 + C6677 + C6677 + C6085 * C576 +
                      C6093 * C553 + C6678 + C6678 + C6086 * C577) *
                         C152080 * C152187 +
                     (C8119 + C8120 + C8121) * C152080 * C152068) *
                        C4779) *
                       C151910 +
                   (((C7455 + C7454 + C7453) * C152080 * C152187 +
                     (C8122 + C8123 + C8124) * C152080 * C152068) *
                        C151959 -
                    ((C6437 + C6438 + C6439) * C152080 * C152068 +
                     (C6436 + C6435 + C6434) * C152080 * C152187) *
                        C151952 -
                    ((C8125 + C8126 + C8127) * C152080 * C152068 +
                     (C8121 + C8120 + C8119) * C152080 * C152187) *
                        C4779) *
                       C151917 +
                   (((C6439 + C6438 + C6437) * C152080 * C152187 +
                     (C7841 + C7842 + C7843) * C152080 * C152068) *
                        C151952 -
                    ((C8866 + C8867 + C8868) * C152080 * C152068 +
                     (C8124 + C8123 + C8122) * C152080 * C152187) *
                        C151959 +
                    ((C8127 + C8126 + C8125) * C152080 * C152187 +
                     (C6089 * C8064 + C8098 + C8098 + C6084 * C8070 +
                      C6091 * C8065 + C8099 + C8099 + C6085 * C8071 +
                      C6093 * C8066 + C8100 + C8100 + C6086 * C8072) *
                         C152080 * C152068) *
                        C4779) *
                       C3585) *
                  C151823) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) *
                         C152080 * C31624 +
                     C31863 * C31625 + C31864 * C31626 + C31865 * C31627) *
                        C151952 -
                    (C32570 * C31627 + C32571 * C31626 + C32572 * C31625 +
                     (C31628 * C550 + C32024 + C32024 + C151791 * C574) *
                         C152080 * C31624) *
                        C151959 +
                    ((C31628 * C551 + C32025 + C32025 + C151791 * C575) *
                         C152080 * C31624 +
                     C33001 * C31625 + C33002 * C31626 + C33003 * C31627) *
                        C4779) *
                       C151910 +
                   ((C32572 * C31624 + C32571 * C31625 + C32570 * C31626 +
                     C33004 * C31627) *
                        C151959 -
                    (C31866 * C31627 + C31865 * C31626 + C31864 * C31625 +
                     C31863 * C31624) *
                        C151952 -
                    (C33005 * C31627 + C33003 * C31626 + C33002 * C31625 +
                     C33001 * C31624) *
                        C4779) *
                       C151917 +
                   ((C31864 * C31624 + C31865 * C31625 + C31866 * C31626 +
                     C32822 * C31627) *
                        C151952 -
                    (C33483 * C31627 + C33004 * C31626 + C32570 * C31625 +
                     C32571 * C31624) *
                        C151959 +
                    (C33002 * C31624 + C33003 * C31625 + C33005 * C31626 +
                     (C31628 * C32969 + C32985 + C32985 + C151791 * C32971) *
                         C152080 * C31627) *
                        C4779) *
                       C3585) *
                  C151823) /
                     (p * q * std::sqrt(p + q));
    d2ee[332] += (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 +
                      C6091 * C143 + C6097 + C6097 + C6085 * C159 +
                      C6093 * C144 + C6098 + C6098 + C6086 * C160) *
                         C152080 * C152187 +
                     (C6434 + C6435 + C6436) * C152080 * C152068) *
                        C4107 -
                    ((C7453 + C7454 + C7455) * C152080 * C152068 +
                     (C6093 * C548 + C6673 + C6673 + C6086 * C572 +
                      C6091 * C549 + C6674 + C6674 + C6085 * C573 +
                      C6089 * C550 + C6675 + C6675 + C6084 * C574) *
                         C152080 * C152187) *
                        C151956) *
                       C152265 +
                   (((C7455 + C7454 + C7453) * C152080 * C152187 +
                     (C8122 + C8123 + C8124) * C152080 * C152068) *
                        C151956 -
                    ((C6437 + C6438 + C6439) * C152080 * C152068 +
                     (C6436 + C6435 + C6434) * C152080 * C152187) *
                        C4107) *
                       C152261 +
                   (((C6439 + C6438 + C6437) * C152080 * C152187 +
                     (C7841 + C7842 + C7843) * C152080 * C152068) *
                        C4107 -
                    ((C8866 + C8867 + C8868) * C152080 * C152068 +
                     (C8124 + C8123 + C8122) * C152080 * C152187) *
                        C151956) *
                       C152249 +
                   (((C8868 + C8867 + C8866) * C152080 * C152187 +
                     (C6089 * C8841 + C8857 + C8857 + C6084 * C8847 +
                      C6091 * C8842 + C8858 + C8858 + C6085 * C8848 +
                      C6093 * C8843 + C8859 + C8859 + C6086 * C8849) *
                         C152080 * C152068) *
                        C151956 -
                    ((C7844 + C7845 + C7846) * C152080 * C152068 +
                     (C7843 + C7842 + C7841) * C152080 * C152187) *
                        C4107) *
                       C152224) *
                  C151823) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  (((((C6089 * C142 + C6096 + C6096 + C6084 * C158 +
                       C6091 * C143 + C6097 + C6097 + C6085 * C159 +
                       C6093 * C144 + C6098 + C6098 + C6086 * C160) *
                          C152080 * C152187 +
                      (C6434 + C6435 + C6436) * C152080 * C152068) *
                         C4107 -
                     ((C7453 + C7454 + C7455) * C152080 * C152068 +
                      (C6093 * C548 + C6673 + C6673 + C6086 * C572 +
                       C6091 * C549 + C6674 + C6674 + C6085 * C573 +
                       C6089 * C550 + C6675 + C6675 + C6084 * C574) *
                          C152080 * C152187) *
                         C151956) *
                        C3101 +
                    (((C7455 + C7454 + C7453) * C152080 * C152187 +
                      (C8122 + C8123 + C8124) * C152080 * C152068) *
                         C151956 -
                     ((C6437 + C6438 + C6439) * C152080 * C152068 +
                      (C6436 + C6435 + C6434) * C152080 * C152187) *
                         C4107) *
                        C151914) *
                       C152255 +
                   ((((C6089 * C549 + C6682 + C6682 + C6084 * C573 +
                       C6091 * C548 + C6683 + C6683 + C6085 * C572 +
                       C6093 * C547 + C6684 + C6684 + C6086 * C571) *
                          C152080 * C152187 +
                      (C7456 + C7457 + C7458) * C152080 * C152068) *
                         C151956 -
                     ((C6442 + C6441 + C6440) * C152080 * C152068 +
                      (C6093 * C145 + C6105 + C6105 + C6086 * C161 +
                       C6091 * C144 + C6106 + C6106 + C6085 * C160 +
                       C6089 * C143 + C6107 + C6107 + C6084 * C159) *
                          C152080 * C152187) *
                         C4107) *
                        C3101 +
                    (((C6440 + C6441 + C6442) * C152080 * C152187 +
                      (C6443 + C6444 + C6445) * C152080 * C152068) *
                         C4107 -
                     ((C8645 + C8646 + C8647) * C152080 * C152068 +
                      (C7458 + C7457 + C7456) * C152080 * C152187) *
                         C151956) *
                        C151914) *
                       C152240 +
                   ((((C6089 * C144 + C6108 + C6108 + C6084 * C160 +
                       C6091 * C145 + C6109 + C6109 + C6085 * C161 +
                       C6093 * C146 + C6110 + C6110 + C6086 * C162) *
                          C152080 * C152187 +
                      (C6446 + C6447 + C6448) * C152080 * C152068) *
                         C4107 -
                     ((C7459 + C7460 + C7461) * C152080 * C152068 +
                      (C6093 * C555 + C6697 + C6697 + C6086 * C579 +
                       C6091 * C547 + C6698 + C6698 + C6085 * C571 +
                       C6089 * C548 + C6699 + C6699 + C6084 * C572) *
                          C152080 * C152187) *
                         C151956) *
                        C3101 +
                    (((C7461 + C7460 + C7459) * C152080 * C152187 +
                      (C6089 * C1536 + C7432 + C7432 + C6084 * C1560 +
                       C6091 * C1535 + C7433 + C7433 + C6085 * C1559 +
                       C6093 * C1916 + C7434 + C7434 + C6086 * C1918) *
                          C152080 * C152068) *
                         C151956 -
                     ((C6449 + C6450 + C6451) * C152080 * C152068 +
                      (C6448 + C6447 + C6446) * C152080 * C152187) *
                         C4107) *
                        C151914) *
                       C152208)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 +
                      C6091 * C143 + C6097 + C6097 + C6085 * C159 +
                      C6093 * C144 + C6098 + C6098 + C6086 * C160) *
                         C152080 * C152187 +
                     (C6434 + C6435 + C6436) * C152080 * C152068) *
                        C152266 -
                    ((C7453 + C7454 + C7455) * C152080 * C152068 +
                     (C6093 * C548 + C6673 + C6673 + C6086 * C572 +
                      C6091 * C549 + C6674 + C6674 + C6085 * C573 +
                      C6089 * C550 + C6675 + C6675 + C6084 * C574) *
                         C152080 * C152187) *
                        C152263 +
                    ((C6089 * C551 + C6676 + C6676 + C6084 * C575 +
                      C6091 * C552 + C6677 + C6677 + C6085 * C576 +
                      C6093 * C553 + C6678 + C6678 + C6086 * C577) *
                         C152080 * C152187 +
                     (C8119 + C8120 + C8121) * C152080 * C152068) *
                        C152252 -
                    ((C10174 + C10175 + C10176) * C152080 * C152068 +
                     (C6093 * C2452 + C9439 + C9439 + C6086 * C2468 +
                      C6091 * C2453 + C9440 + C9440 + C6085 * C2469 +
                      C6089 * C2454 + C9441 + C9441 + C6084 * C2470) *
                         C152080 * C152187) *
                        C152230) *
                       C3101 +
                   (((C7455 + C7454 + C7453) * C152080 * C152187 +
                     (C8122 + C8123 + C8124) * C152080 * C152068) *
                        C152263 -
                    ((C6437 + C6438 + C6439) * C152080 * C152068 +
                     (C6436 + C6435 + C6434) * C152080 * C152187) *
                        C152266 -
                    ((C8125 + C8126 + C8127) * C152080 * C152068 +
                     (C8121 + C8120 + C8119) * C152080 * C152187) *
                        C152252 +
                    ((C10176 + C10175 + C10174) * C152080 * C152187 +
                     (C6089 * C10149 + C10165 + C10165 + C6084 * C10155 +
                      C6091 * C10150 + C10166 + C10166 + C6085 * C10156 +
                      C6093 * C10151 + C10167 + C10167 + C6086 * C10157) *
                         C152080 * C152068) *
                        C152230) *
                       C151914) *
                  C151823) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) *
                          C152080 * C31624 +
                      C31863 * C31625 + C31864 * C31626 + C31865 * C31627) *
                         C4107 -
                     (C32570 * C31627 + C32571 * C31626 + C32572 * C31625 +
                      (C31628 * C550 + C32024 + C32024 + C151791 * C574) *
                          C152080 * C31624) *
                         C151956) *
                        C3101 +
                    ((C32572 * C31624 + C32571 * C31625 + C32570 * C31626 +
                      C33004 * C31627) *
                         C151956 -
                     (C31866 * C31627 + C31865 * C31626 + C31864 * C31625 +
                      C31863 * C31624) *
                         C4107) *
                        C151914) *
                       C152255 +
                   ((((C31628 * C549 + C32029 + C32029 + C151791 * C573) *
                          C152080 * C31624 +
                      C32573 * C31625 + C32574 * C31626 + C32575 * C31627) *
                         C151956 -
                     (C31869 * C31627 + C31868 * C31626 + C31867 * C31625 +
                      (C31628 * C143 + C31638 + C31638 + C151791 * C159) *
                          C152080 * C31624) *
                         C4107) *
                        C3101 +
                    ((C31867 * C31624 + C31868 * C31625 + C31869 * C31626 +
                      C31870 * C31627) *
                         C4107 -
                     (C33343 * C31627 + C32575 * C31626 + C32574 * C31625 +
                      C32573 * C31624) *
                         C151956) *
                        C151914) *
                       C152240 +
                   ((((C31628 * C144 + C31639 + C31639 + C151791 * C160) *
                          C152080 * C31624 +
                      C31871 * C31625 + C31872 * C31626 + C31873 * C31627) *
                         C4107 -
                     (C32576 * C31627 + C32577 * C31626 + C32578 * C31625 +
                      (C31628 * C548 + C32040 + C32040 + C151791 * C572) *
                          C152080 * C31624) *
                         C151956) *
                        C3101 +
                    ((C32578 * C31624 + C32577 * C31625 + C32576 * C31626 +
                      (C31628 * C8843 + C32542 + C32542 + C151791 * C8849) *
                          C152080 * C31627) *
                         C151956 -
                     (C31874 * C31627 + C31873 * C31626 + C31872 * C31625 +
                      C31871 * C31624) *
                         C4107) *
                        C151914) *
                       C152208)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) *
                         C152080 * C31624 +
                     C31863 * C31625 + C31864 * C31626 + C31865 * C31627) *
                        C4107 -
                    (C32570 * C31627 + C32571 * C31626 + C32572 * C31625 +
                     (C31628 * C550 + C32024 + C32024 + C151791 * C574) *
                         C152080 * C31624) *
                        C151956) *
                       C152265 +
                   ((C32572 * C31624 + C32571 * C31625 + C32570 * C31626 +
                     C33004 * C31627) *
                        C151956 -
                    (C31866 * C31627 + C31865 * C31626 + C31864 * C31625 +
                     C31863 * C31624) *
                        C4107) *
                       C152261 +
                   ((C31864 * C31624 + C31865 * C31625 + C31866 * C31626 +
                     C32822 * C31627) *
                        C4107 -
                    (C33483 * C31627 + C33004 * C31626 + C32570 * C31625 +
                     C32571 * C31624) *
                        C151956) *
                       C152249 +
                   ((C32570 * C31624 + C33004 * C31625 + C33483 * C31626 +
                     (C31628 * C33473 + C33479 + C33479 + C151791 * C33475) *
                         C152080 * C31627) *
                        C151956 -
                    (C32823 * C31627 + C32822 * C31626 + C31866 * C31625 +
                     C31865 * C31624) *
                        C4107) *
                       C152224) *
                  C151823) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) *
                         C152080 * C31624 +
                     C31863 * C31625 + C31864 * C31626 + C31865 * C31627) *
                        C152266 -
                    (C32570 * C31627 + C32571 * C31626 + C32572 * C31625 +
                     (C31628 * C550 + C32024 + C32024 + C151791 * C574) *
                         C152080 * C31624) *
                        C152263 +
                    ((C31628 * C551 + C32025 + C32025 + C151791 * C575) *
                         C152080 * C31624 +
                     C33001 * C31625 + C33002 * C31626 + C33003 * C31627) *
                        C152252 -
                    (C34365 * C31627 + C34366 * C31626 + C34367 * C31625 +
                     (C31628 * C2454 + C33864 + C33864 + C151791 * C2470) *
                         C152080 * C31624) *
                        C152230) *
                       C3101 +
                   ((C32572 * C31624 + C32571 * C31625 + C32570 * C31626 +
                     C33004 * C31627) *
                        C152263 -
                    (C31866 * C31627 + C31865 * C31626 + C31864 * C31625 +
                     C31863 * C31624) *
                        C152266 -
                    (C33005 * C31627 + C33003 * C31626 + C33002 * C31625 +
                     C33001 * C31624) *
                        C152252 +
                    (C34367 * C31624 + C34366 * C31625 + C34365 * C31626 +
                     (C31628 * C34345 + C34355 + C34355 + C151791 * C34347) *
                         C152080 * C31627) *
                        C152230) *
                       C151914) *
                  C151823) /
                     (p * q * std::sqrt(p + q));
    d2ee[333] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C6089 * C142 + C6096 + C6096 + C6084 * C158 +
                       C6091 * C143 + C6097 + C6097 + C6085 * C159 +
                       C6093 * C144 + C6098 + C6098 + C6086 * C160) *
                          C152080 * C152187 +
                      (C6434 + C6435 + C6436) * C152080 * C152068) *
                         C151952 -
                     ((C7453 + C7454 + C7455) * C152080 * C152068 +
                      (C6093 * C548 + C6673 + C6673 + C6086 * C572 +
                       C6091 * C549 + C6674 + C6674 + C6085 * C573 +
                       C6089 * C550 + C6675 + C6675 + C6084 * C574) *
                          C152080 * C152187) *
                         C151959 +
                     ((C6089 * C551 + C6676 + C6676 + C6084 * C575 +
                       C6091 * C552 + C6677 + C6677 + C6085 * C576 +
                       C6093 * C553 + C6678 + C6678 + C6086 * C577) *
                          C152080 * C152187 +
                      (C8119 + C8120 + C8121) * C152080 * C152068) *
                         C4779) *
                        C3101 +
                    (((C7455 + C7454 + C7453) * C152080 * C152187 +
                      (C8122 + C8123 + C8124) * C152080 * C152068) *
                         C151959 -
                     ((C6437 + C6438 + C6439) * C152080 * C152068 +
                      (C6436 + C6435 + C6434) * C152080 * C152187) *
                         C151952 -
                     ((C8125 + C8126 + C8127) * C152080 * C152068 +
                      (C8121 + C8120 + C8119) * C152080 * C152187) *
                         C4779) *
                        C151914) *
                       C152158 +
                   ((((C6089 * C549 + C6682 + C6682 + C6084 * C573 +
                       C6091 * C548 + C6683 + C6683 + C6085 * C572 +
                       C6093 * C547 + C6684 + C6684 + C6086 * C571) *
                          C152080 * C152187 +
                      (C7456 + C7457 + C7458) * C152080 * C152068) *
                         C151959 -
                     ((C6442 + C6441 + C6440) * C152080 * C152068 +
                      (C6093 * C145 + C6105 + C6105 + C6086 * C161 +
                       C6091 * C144 + C6106 + C6106 + C6085 * C160 +
                       C6089 * C143 + C6107 + C6107 + C6084 * C159) *
                          C152080 * C152187) *
                         C151952 -
                     ((C9753 + C9754 + C9755) * C152080 * C152068 +
                      (C6093 * C554 + C6691 + C6691 + C6086 * C578 +
                       C6091 * C553 + C6692 + C6692 + C6085 * C577 +
                       C6089 * C552 + C6693 + C6693 + C6084 * C576) *
                          C152080 * C152187) *
                         C4779) *
                        C3101 +
                    (((C6440 + C6441 + C6442) * C152080 * C152187 +
                      (C6443 + C6444 + C6445) * C152080 * C152068) *
                         C151952 -
                     ((C8645 + C8646 + C8647) * C152080 * C152068 +
                      (C7458 + C7457 + C7456) * C152080 * C152187) *
                         C151959 +
                     ((C9755 + C9754 + C9753) * C152080 * C152187 +
                      (C6089 * C1540 + C9744 + C9744 + C6084 * C1564 +
                       C6091 * C1541 + C9745 + C9745 + C6085 * C1565 +
                       C6093 * C1542 + C9746 + C9746 + C6086 * C1566) *
                          C152080 * C152068) *
                         C4779) *
                        C151914) *
                       C151834)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) *
                          C152080 * C31624 +
                      C31863 * C31625 + C31864 * C31626 + C31865 * C31627) *
                         C151952 -
                     (C32570 * C31627 + C32571 * C31626 + C32572 * C31625 +
                      (C31628 * C550 + C32024 + C32024 + C151791 * C574) *
                          C152080 * C31624) *
                         C151959 +
                     ((C31628 * C551 + C32025 + C32025 + C151791 * C575) *
                          C152080 * C31624 +
                      C33001 * C31625 + C33002 * C31626 + C33003 * C31627) *
                         C4779) *
                        C3101 +
                    ((C32572 * C31624 + C32571 * C31625 + C32570 * C31626 +
                      C33004 * C31627) *
                         C151959 -
                     (C31866 * C31627 + C31865 * C31626 + C31864 * C31625 +
                      C31863 * C31624) *
                         C151952 -
                     (C33005 * C31627 + C33003 * C31626 + C33002 * C31625 +
                      C33001 * C31624) *
                         C4779) *
                        C151914) *
                       C152158 +
                   ((((C31628 * C549 + C32029 + C32029 + C151791 * C573) *
                          C152080 * C31624 +
                      C32573 * C31625 + C32574 * C31626 + C32575 * C31627) *
                         C151959 -
                     (C31869 * C31627 + C31868 * C31626 + C31867 * C31625 +
                      (C31628 * C143 + C31638 + C31638 + C151791 * C159) *
                          C152080 * C31624) *
                         C151952 -
                     (C34079 * C31627 + C34080 * C31626 + C34081 * C31625 +
                      (C31628 * C552 + C32036 + C32036 + C151791 * C576) *
                          C152080 * C31624) *
                         C4779) *
                        C3101 +
                    ((C31867 * C31624 + C31868 * C31625 + C31869 * C31626 +
                      C31870 * C31627) *
                         C151952 -
                     (C33343 * C31627 + C32575 * C31626 + C32574 * C31625 +
                      C32573 * C31624) *
                         C151959 +
                     (C34081 * C31624 + C34080 * C31625 + C34079 * C31626 +
                      (C31628 * C25022 + C34069 + C34069 + C151791 * C25026) *
                          C152080 * C31627) *
                         C4779) *
                        C151914) *
                       C151834)) /
                     (p * q * std::sqrt(p + q));
    d2ee[334] += (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                  (((((C6089 * C142 + C6096 + C6096 + C6084 * C158 +
                       C6091 * C143 + C6097 + C6097 + C6085 * C159 +
                       C6093 * C144 + C6098 + C6098 + C6086 * C160) *
                          C152080 * C152187 +
                      (C6434 + C6435 + C6436) * C152080 * C152068) *
                         C4107 -
                     ((C7453 + C7454 + C7455) * C152080 * C152068 +
                      (C6093 * C548 + C6673 + C6673 + C6086 * C572 +
                       C6091 * C549 + C6674 + C6674 + C6085 * C573 +
                       C6089 * C550 + C6675 + C6675 + C6084 * C574) *
                          C152080 * C152187) *
                         C151956) *
                        C3101 +
                    (((C7455 + C7454 + C7453) * C152080 * C152187 +
                      (C8122 + C8123 + C8124) * C152080 * C152068) *
                         C151956 -
                     ((C6437 + C6438 + C6439) * C152080 * C152068 +
                      (C6436 + C6435 + C6434) * C152080 * C152187) *
                         C4107) *
                        C151914) *
                       C152255 +
                   ((((C6089 * C549 + C6682 + C6682 + C6084 * C573 +
                       C6091 * C548 + C6683 + C6683 + C6085 * C572 +
                       C6093 * C547 + C6684 + C6684 + C6086 * C571) *
                          C152080 * C152187 +
                      (C7456 + C7457 + C7458) * C152080 * C152068) *
                         C151956 -
                     ((C6442 + C6441 + C6440) * C152080 * C152068 +
                      (C6093 * C145 + C6105 + C6105 + C6086 * C161 +
                       C6091 * C144 + C6106 + C6106 + C6085 * C160 +
                       C6089 * C143 + C6107 + C6107 + C6084 * C159) *
                          C152080 * C152187) *
                         C4107) *
                        C3101 +
                    (((C6440 + C6441 + C6442) * C152080 * C152187 +
                      (C6443 + C6444 + C6445) * C152080 * C152068) *
                         C4107 -
                     ((C8645 + C8646 + C8647) * C152080 * C152068 +
                      (C7458 + C7457 + C7456) * C152080 * C152187) *
                         C151956) *
                        C151914) *
                       C152240 +
                   ((((C6089 * C144 + C6108 + C6108 + C6084 * C160 +
                       C6091 * C145 + C6109 + C6109 + C6085 * C161 +
                       C6093 * C146 + C6110 + C6110 + C6086 * C162) *
                          C152080 * C152187 +
                      (C6446 + C6447 + C6448) * C152080 * C152068) *
                         C4107 -
                     ((C7459 + C7460 + C7461) * C152080 * C152068 +
                      (C6093 * C555 + C6697 + C6697 + C6086 * C579 +
                       C6091 * C547 + C6698 + C6698 + C6085 * C571 +
                       C6089 * C548 + C6699 + C6699 + C6084 * C572) *
                          C152080 * C152187) *
                         C151956) *
                        C3101 +
                    (((C7461 + C7460 + C7459) * C152080 * C152187 +
                      (C6089 * C1536 + C7432 + C7432 + C6084 * C1560 +
                       C6091 * C1535 + C7433 + C7433 + C6085 * C1559 +
                       C6093 * C1916 + C7434 + C7434 + C6086 * C1918) *
                          C152080 * C152068) *
                         C151956 -
                     ((C6449 + C6450 + C6451) * C152080 * C152068 +
                      (C6448 + C6447 + C6446) * C152080 * C152187) *
                         C4107) *
                        C151914) *
                       C152208)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                  ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 +
                      C6091 * C143 + C6097 + C6097 + C6085 * C159 +
                      C6093 * C144 + C6098 + C6098 + C6086 * C160) *
                         C152080 * C152187 +
                     (C6434 + C6435 + C6436) * C152080 * C152068) *
                        C4107 -
                    ((C7453 + C7454 + C7455) * C152080 * C152068 +
                     (C6093 * C548 + C6673 + C6673 + C6086 * C572 +
                      C6091 * C549 + C6674 + C6674 + C6085 * C573 +
                      C6089 * C550 + C6675 + C6675 + C6084 * C574) *
                         C152080 * C152187) *
                        C151956) *
                       C152265 +
                   (((C7455 + C7454 + C7453) * C152080 * C152187 +
                     (C8122 + C8123 + C8124) * C152080 * C152068) *
                        C151956 -
                    ((C6437 + C6438 + C6439) * C152080 * C152068 +
                     (C6436 + C6435 + C6434) * C152080 * C152187) *
                        C4107) *
                       C152261 +
                   (((C6439 + C6438 + C6437) * C152080 * C152187 +
                     (C7841 + C7842 + C7843) * C152080 * C152068) *
                        C4107 -
                    ((C8866 + C8867 + C8868) * C152080 * C152068 +
                     (C8124 + C8123 + C8122) * C152080 * C152187) *
                        C151956) *
                       C152249 +
                   (((C8868 + C8867 + C8866) * C152080 * C152187 +
                     (C6089 * C8841 + C8857 + C8857 + C6084 * C8847 +
                      C6091 * C8842 + C8858 + C8858 + C6085 * C8848 +
                      C6093 * C8843 + C8859 + C8859 + C6086 * C8849) *
                         C152080 * C152068) *
                        C151956 -
                    ((C7844 + C7845 + C7846) * C152080 * C152068 +
                     (C7843 + C7842 + C7841) * C152080 * C152187) *
                        C4107) *
                       C152224) *
                  C151823) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                  (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) *
                          C152080 * C31624 +
                      C31863 * C31625 + C31864 * C31626 + C31865 * C31627) *
                         C4107 -
                     (C32570 * C31627 + C32571 * C31626 + C32572 * C31625 +
                      (C31628 * C550 + C32024 + C32024 + C151791 * C574) *
                          C152080 * C31624) *
                         C151956) *
                        C3101 +
                    ((C32572 * C31624 + C32571 * C31625 + C32570 * C31626 +
                      C33004 * C31627) *
                         C151956 -
                     (C31866 * C31627 + C31865 * C31626 + C31864 * C31625 +
                      C31863 * C31624) *
                         C4107) *
                        C151914) *
                       C152255 +
                   ((((C31628 * C549 + C32029 + C32029 + C151791 * C573) *
                          C152080 * C31624 +
                      C32573 * C31625 + C32574 * C31626 + C32575 * C31627) *
                         C151956 -
                     (C31869 * C31627 + C31868 * C31626 + C31867 * C31625 +
                      (C31628 * C143 + C31638 + C31638 + C151791 * C159) *
                          C152080 * C31624) *
                         C4107) *
                        C3101 +
                    ((C31867 * C31624 + C31868 * C31625 + C31869 * C31626 +
                      C31870 * C31627) *
                         C4107 -
                     (C33343 * C31627 + C32575 * C31626 + C32574 * C31625 +
                      C32573 * C31624) *
                         C151956) *
                        C151914) *
                       C152240 +
                   ((((C31628 * C144 + C31639 + C31639 + C151791 * C160) *
                          C152080 * C31624 +
                      C31871 * C31625 + C31872 * C31626 + C31873 * C31627) *
                         C4107 -
                     (C32576 * C31627 + C32577 * C31626 + C32578 * C31625 +
                      (C31628 * C548 + C32040 + C32040 + C151791 * C572) *
                          C152080 * C31624) *
                         C151956) *
                        C3101 +
                    ((C32578 * C31624 + C32577 * C31625 + C32576 * C31626 +
                      (C31628 * C8843 + C32542 + C32542 + C151791 * C8849) *
                          C152080 * C31627) *
                         C151956 -
                     (C31874 * C31627 + C31873 * C31626 + C31872 * C31625 +
                      C31871 * C31624) *
                         C4107) *
                        C151914) *
                       C152208)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                  ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) *
                         C152080 * C31624 +
                     C31863 * C31625 + C31864 * C31626 + C31865 * C31627) *
                        C4107 -
                    (C32570 * C31627 + C32571 * C31626 + C32572 * C31625 +
                     (C31628 * C550 + C32024 + C32024 + C151791 * C574) *
                         C152080 * C31624) *
                        C151956) *
                       C152265 +
                   ((C32572 * C31624 + C32571 * C31625 + C32570 * C31626 +
                     C33004 * C31627) *
                        C151956 -
                    (C31866 * C31627 + C31865 * C31626 + C31864 * C31625 +
                     C31863 * C31624) *
                        C4107) *
                       C152261 +
                   ((C31864 * C31624 + C31865 * C31625 + C31866 * C31626 +
                     C32822 * C31627) *
                        C4107 -
                    (C33483 * C31627 + C33004 * C31626 + C32570 * C31625 +
                     C32571 * C31624) *
                        C151956) *
                       C152249 +
                   ((C32570 * C31624 + C33004 * C31625 + C33483 * C31626 +
                     (C31628 * C33473 + C33479 + C33479 + C151791 * C33475) *
                         C152080 * C31627) *
                        C151956 -
                    (C32823 * C31627 + C32822 * C31626 + C31866 * C31625 +
                     C31865 * C31624) *
                        C4107) *
                       C152224) *
                  C151823) /
                     (p * q * std::sqrt(p + q));
    d2ee[335] += (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 +
                      C6091 * C143 + C6097 + C6097 + C6085 * C159 +
                      C6093 * C144 + C6098 + C6098 + C6086 * C160) *
                         C152080 * C152187 +
                     (C6434 + C6435 + C6436) * C152080 * C152068) *
                        C151869 * C1709 -
                    ((C6437 + C6438 + C6439) * C152080 * C152068 +
                     (C6436 + C6435 + C6434) * C152080 * C152187) *
                        C151869 * C1710 +
                    ((C6439 + C6438 + C6437) * C152080 * C152187 +
                     (C7841 + C7842 + C7843) * C152080 * C152068) *
                        C151869 * C1711 -
                    ((C7844 + C7845 + C7846) * C152080 * C152068 +
                     (C7843 + C7842 + C7841) * C152080 * C152187) *
                        C151869 * C152224) *
                       C152158 +
                   (((C6440 + C6441 + C6442) * C152080 * C152187 +
                     (C6443 + C6444 + C6445) * C152080 * C152068) *
                        C151869 * C1710 -
                    ((C6442 + C6441 + C6440) * C152080 * C152068 +
                     (C6093 * C145 + C6105 + C6105 + C6086 * C161 +
                      C6091 * C144 + C6106 + C6106 + C6085 * C160 +
                      C6089 * C143 + C6107 + C6107 + C6084 * C159) *
                         C152080 * C152187) *
                        C151869 * C1709 -
                    ((C8337 + C8338 + C8339) * C152080 * C152068 +
                     (C6445 + C6444 + C6443) * C152080 * C152187) *
                        C151869 * C1711 +
                    ((C8339 + C8338 + C8337) * C152080 * C152187 +
                     (C6089 * C1358 + C8328 + C8328 + C6084 * C1374 +
                      C6091 * C1359 + C8329 + C8329 + C6085 * C1375 +
                      C6093 * C1360 + C8330 + C8330 + C6086 * C1376) *
                         C152080 * C152068) *
                        C151869 * C152224) *
                       C151834)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 +
                      C6091 * C143 + C6097 + C6097 + C6085 * C159 +
                      C6093 * C144 + C6098 + C6098 + C6086 * C160) *
                         C152080 * C152187 +
                     (C6434 + C6435 + C6436) * C152080 * C152068) *
                        C151869 * C152172 -
                    ((C6437 + C6438 + C6439) * C152080 * C152068 +
                     (C6436 + C6435 + C6434) * C152080 * C152187) *
                        C151869 * C151914) *
                       C739 +
                   (((C6440 + C6441 + C6442) * C152080 * C152187 +
                     (C6443 + C6444 + C6445) * C152080 * C152068) *
                        C151869 * C151914 -
                    ((C6442 + C6441 + C6440) * C152080 * C152068 +
                     (C6093 * C145 + C6105 + C6105 + C6086 * C161 +
                      C6091 * C144 + C6106 + C6106 + C6085 * C160 +
                      C6089 * C143 + C6107 + C6107 + C6084 * C159) *
                         C152080 * C152187) *
                        C151869 * C152172) *
                       C740 +
                   (((C6089 * C144 + C6108 + C6108 + C6084 * C160 +
                      C6091 * C145 + C6109 + C6109 + C6085 * C161 +
                      C6093 * C146 + C6110 + C6110 + C6086 * C162) *
                         C152080 * C152187 +
                     (C6446 + C6447 + C6448) * C152080 * C152068) *
                        C151869 * C152172 -
                    ((C6449 + C6450 + C6451) * C152080 * C152068 +
                     (C6448 + C6447 + C6446) * C152080 * C152187) *
                        C151869 * C151914) *
                       C741 +
                   (((C6915 + C6916 + C6917) * C152080 * C152187 +
                     (C6089 * C345 + C6906 + C6906 + C6084 * C369 +
                      C6091 * C347 + C6907 + C6907 + C6085 * C371 +
                      C6093 * C349 + C6908 + C6908 + C6086 * C373) *
                         C152080 * C152068) *
                        C151869 * C151914 -
                    ((C6917 + C6916 + C6915) * C152080 * C152068 +
                     (C6093 * C147 + C6117 + C6117 + C6086 * C163 +
                      C6091 * C146 + C6118 + C6118 + C6085 * C162 +
                      C6089 * C145 + C6119 + C6119 + C6084 * C161) *
                         C152080 * C152187) *
                        C151869 * C152172) *
                       C152218)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C6089 * C142 + C6096 + C6096 + C6084 * C158 +
                       C6091 * C143 + C6097 + C6097 + C6085 * C159 +
                       C6093 * C144 + C6098 + C6098 + C6086 * C160) *
                          C152080 * C152187 +
                      (C6434 + C6435 + C6436) * C152080 * C152068) *
                         C2215 -
                     ((C7453 + C7454 + C7455) * C152080 * C152068 +
                      (C6093 * C548 + C6673 + C6673 + C6086 * C572 +
                       C6091 * C549 + C6674 + C6674 + C6085 * C573 +
                       C6089 * C550 + C6675 + C6675 + C6084 * C574) *
                          C152080 * C152187) *
                         C2216 +
                     ((C6089 * C551 + C6676 + C6676 + C6084 * C575 +
                       C6091 * C552 + C6677 + C6677 + C6085 * C576 +
                       C6093 * C553 + C6678 + C6678 + C6086 * C577) *
                          C152080 * C152187 +
                      (C8119 + C8120 + C8121) * C152080 * C152068) *
                         C152217) *
                        C152172 +
                    (((C7455 + C7454 + C7453) * C152080 * C152187 +
                      (C8122 + C8123 + C8124) * C152080 * C152068) *
                         C2216 -
                     ((C6437 + C6438 + C6439) * C152080 * C152068 +
                      (C6436 + C6435 + C6434) * C152080 * C152187) *
                         C2215 -
                     ((C8125 + C8126 + C8127) * C152080 * C152068 +
                      (C8121 + C8120 + C8119) * C152080 * C152187) *
                         C152217) *
                        C151914) *
                       C152158 +
                   ((((C6089 * C549 + C6682 + C6682 + C6084 * C573 +
                       C6091 * C548 + C6683 + C6683 + C6085 * C572 +
                       C6093 * C547 + C6684 + C6684 + C6086 * C571) *
                          C152080 * C152187 +
                      (C7456 + C7457 + C7458) * C152080 * C152068) *
                         C2216 -
                     ((C6442 + C6441 + C6440) * C152080 * C152068 +
                      (C6093 * C145 + C6105 + C6105 + C6086 * C161 +
                       C6091 * C144 + C6106 + C6106 + C6085 * C160 +
                       C6089 * C143 + C6107 + C6107 + C6084 * C159) *
                          C152080 * C152187) *
                         C2215 -
                     ((C9753 + C9754 + C9755) * C152080 * C152068 +
                      (C6093 * C554 + C6691 + C6691 + C6086 * C578 +
                       C6091 * C553 + C6692 + C6692 + C6085 * C577 +
                       C6089 * C552 + C6693 + C6693 + C6084 * C576) *
                          C152080 * C152187) *
                         C152217) *
                        C152172 +
                    (((C6440 + C6441 + C6442) * C152080 * C152187 +
                      (C6443 + C6444 + C6445) * C152080 * C152068) *
                         C2215 -
                     ((C8645 + C8646 + C8647) * C152080 * C152068 +
                      (C7458 + C7457 + C7456) * C152080 * C152187) *
                         C2216 +
                     ((C9755 + C9754 + C9753) * C152080 * C152187 +
                      (C6089 * C1540 + C9744 + C9744 + C6084 * C1564 +
                       C6091 * C1541 + C9745 + C9745 + C6085 * C1565 +
                       C6093 * C1542 + C9746 + C9746 + C6086 * C1566) *
                          C152080 * C152068) *
                         C152217) *
                        C151914) *
                       C151834)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) *
                         C152080 * C31624 +
                     C31863 * C31625 + C31864 * C31626 + C31865 * C31627) *
                        C151869 * C152172 -
                    (C31866 * C31627 + C31865 * C31626 + C31864 * C31625 +
                     C31863 * C31624) *
                        C151869 * C151914) *
                       C739 +
                   ((C31867 * C31624 + C31868 * C31625 + C31869 * C31626 +
                     C31870 * C31627) *
                        C151869 * C151914 -
                    (C31869 * C31627 + C31868 * C31626 + C31867 * C31625 +
                     (C31628 * C143 + C31638 + C31638 + C151791 * C159) *
                         C152080 * C31624) *
                        C151869 * C152172) *
                       C740 +
                   (((C31628 * C144 + C31639 + C31639 + C151791 * C160) *
                         C152080 * C31624 +
                     C31871 * C31625 + C31872 * C31626 + C31873 * C31627) *
                        C151869 * C152172 -
                    (C31874 * C31627 + C31873 * C31626 + C31872 * C31625 +
                     C31871 * C31624) *
                        C151869 * C151914) *
                       C741 +
                   ((C32191 * C31624 + C32192 * C31625 + C32193 * C31626 +
                     (C31628 * C1360 + C32181 + C32181 + C151791 * C1376) *
                         C152080 * C31627) *
                        C151869 * C151914 -
                    (C32193 * C31627 + C32192 * C31626 + C32191 * C31625 +
                     (C31628 * C145 + C31646 + C31646 + C151791 * C161) *
                         C152080 * C31624) *
                        C151869 * C152172) *
                       C152218)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) *
                         C152080 * C31624 +
                     C31863 * C31625 + C31864 * C31626 + C31865 * C31627) *
                        C151869 * C1709 -
                    (C31866 * C31627 + C31865 * C31626 + C31864 * C31625 +
                     C31863 * C31624) *
                        C151869 * C1710 +
                    (C31864 * C31624 + C31865 * C31625 + C31866 * C31626 +
                     C32822 * C31627) *
                        C151869 * C1711 -
                    (C32823 * C31627 + C32822 * C31626 + C31866 * C31625 +
                     C31865 * C31624) *
                        C151869 * C152224) *
                       C152158 +
                   ((C31867 * C31624 + C31868 * C31625 + C31869 * C31626 +
                     C31870 * C31627) *
                        C151869 * C1710 -
                    (C31869 * C31627 + C31868 * C31626 + C31867 * C31625 +
                     (C31628 * C143 + C31638 + C31638 + C151791 * C159) *
                         C152080 * C31624) *
                        C151869 * C1709 -
                    (C33142 * C31627 + C31870 * C31626 + C31869 * C31625 +
                     C31868 * C31624) *
                        C151869 * C1711 +
                    (C31869 * C31624 + C31870 * C31625 + C33142 * C31626 +
                     (C31628 * C24770 + C33138 + C33138 + C151791 * C24774) *
                         C152080 * C31627) *
                        C151869 * C152224) *
                       C151834)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) *
                          C152080 * C31624 +
                      C31863 * C31625 + C31864 * C31626 + C31865 * C31627) *
                         C2215 -
                     (C32570 * C31627 + C32571 * C31626 + C32572 * C31625 +
                      (C31628 * C550 + C32024 + C32024 + C151791 * C574) *
                          C152080 * C31624) *
                         C2216 +
                     ((C31628 * C551 + C32025 + C32025 + C151791 * C575) *
                          C152080 * C31624 +
                      C33001 * C31625 + C33002 * C31626 + C33003 * C31627) *
                         C152217) *
                        C152172 +
                    ((C32572 * C31624 + C32571 * C31625 + C32570 * C31626 +
                      C33004 * C31627) *
                         C2216 -
                     (C31866 * C31627 + C31865 * C31626 + C31864 * C31625 +
                      C31863 * C31624) *
                         C2215 -
                     (C33005 * C31627 + C33003 * C31626 + C33002 * C31625 +
                      C33001 * C31624) *
                         C152217) *
                        C151914) *
                       C152158 +
                   ((((C31628 * C549 + C32029 + C32029 + C151791 * C573) *
                          C152080 * C31624 +
                      C32573 * C31625 + C32574 * C31626 + C32575 * C31627) *
                         C2216 -
                     (C31869 * C31627 + C31868 * C31626 + C31867 * C31625 +
                      (C31628 * C143 + C31638 + C31638 + C151791 * C159) *
                          C152080 * C31624) *
                         C2215 -
                     (C34079 * C31627 + C34080 * C31626 + C34081 * C31625 +
                      (C31628 * C552 + C32036 + C32036 + C151791 * C576) *
                          C152080 * C31624) *
                         C152217) *
                        C152172 +
                    ((C31867 * C31624 + C31868 * C31625 + C31869 * C31626 +
                      C31870 * C31627) *
                         C2215 -
                     (C33343 * C31627 + C32575 * C31626 + C32574 * C31625 +
                      C32573 * C31624) *
                         C2216 +
                     (C34081 * C31624 + C34080 * C31625 + C34079 * C31626 +
                      (C31628 * C25022 + C34069 + C34069 + C151791 * C25026) *
                          C152080 * C31627) *
                         C152217) *
                        C151914) *
                       C151834)) /
                     (p * q * std::sqrt(p + q));
    d2ee[336] += (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 +
                      C6091 * C143 + C6097 + C6097 + C6085 * C159 +
                      C6093 * C144 + C6098 + C6098 + C6086 * C160) *
                         C152080 * C152187 +
                     (C6434 + C6435 + C6436) * C152080 * C152068) *
                        C152173 -
                    ((C7453 + C7454 + C7455) * C152080 * C152068 +
                     (C6093 * C548 + C6673 + C6673 + C6086 * C572 +
                      C6091 * C549 + C6674 + C6674 + C6085 * C573 +
                      C6089 * C550 + C6675 + C6675 + C6084 * C574) *
                         C152080 * C152187) *
                        C151956) *
                       C1709 +
                   (((C7455 + C7454 + C7453) * C152080 * C152187 +
                     (C8122 + C8123 + C8124) * C152080 * C152068) *
                        C151956 -
                    ((C6437 + C6438 + C6439) * C152080 * C152068 +
                     (C6436 + C6435 + C6434) * C152080 * C152187) *
                        C152173) *
                       C1710 +
                   (((C6439 + C6438 + C6437) * C152080 * C152187 +
                     (C7841 + C7842 + C7843) * C152080 * C152068) *
                        C152173 -
                    ((C8866 + C8867 + C8868) * C152080 * C152068 +
                     (C8124 + C8123 + C8122) * C152080 * C152187) *
                        C151956) *
                       C1711 +
                   (((C8868 + C8867 + C8866) * C152080 * C152187 +
                     (C6089 * C8841 + C8857 + C8857 + C6084 * C8847 +
                      C6091 * C8842 + C8858 + C8858 + C6085 * C8848 +
                      C6093 * C8843 + C8859 + C8859 + C6086 * C8849) *
                         C152080 * C152068) *
                        C151956 -
                    ((C7844 + C7845 + C7846) * C152080 * C152068 +
                     (C7843 + C7842 + C7841) * C152080 * C152187) *
                        C152173) *
                       C152224) *
                  C151823) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  (((((C6089 * C142 + C6096 + C6096 + C6084 * C158 +
                       C6091 * C143 + C6097 + C6097 + C6085 * C159 +
                       C6093 * C144 + C6098 + C6098 + C6086 * C160) *
                          C152080 * C152187 +
                      (C6434 + C6435 + C6436) * C152080 * C152068) *
                         C152173 -
                     ((C7453 + C7454 + C7455) * C152080 * C152068 +
                      (C6093 * C548 + C6673 + C6673 + C6086 * C572 +
                       C6091 * C549 + C6674 + C6674 + C6085 * C573 +
                       C6089 * C550 + C6675 + C6675 + C6084 * C574) *
                          C152080 * C152187) *
                         C151956) *
                        C152172 +
                    (((C7455 + C7454 + C7453) * C152080 * C152187 +
                      (C6089 * C1538 + C7414 + C7414 + C6084 * C1562 +
                       C6091 * C1537 + C7415 + C7415 + C6085 * C1561 +
                       C6093 * C1536 + C7416 + C7416 + C6086 * C1560) *
                          C152080 * C152068) *
                         C151956 -
                     ((C6437 + C6438 + C6439) * C152080 * C152068 +
                      (C6436 + C6435 + C6434) * C152080 * C152187) *
                         C152173) *
                        C151914) *
                       C335 +
                   ((((C6089 * C549 + C6682 + C6682 + C6084 * C573 +
                       C6091 * C548 + C6683 + C6683 + C6085 * C572 +
                       C6093 * C547 + C6684 + C6684 + C6086 * C571) *
                          C152080 * C152187 +
                      (C7456 + C7457 + C7458) * C152080 * C152068) *
                         C151956 -
                     ((C6442 + C6441 + C6440) * C152080 * C152068 +
                      (C6093 * C145 + C6105 + C6105 + C6086 * C161 +
                       C6091 * C144 + C6106 + C6106 + C6085 * C160 +
                       C6089 * C143 + C6107 + C6107 + C6084 * C159) *
                          C152080 * C152187) *
                         C152173) *
                        C152172 +
                    (((C6440 + C6441 + C6442) * C152080 * C152187 +
                      (C6443 + C6444 + C6445) * C152080 * C152068) *
                         C152173 -
                     ((C6093 * C1535 + C7423 + C7423 + C6086 * C1559 +
                       C6091 * C1536 + C7424 + C7424 + C6085 * C1560 +
                       C6089 * C1537 + C7425 + C7425 + C6084 * C1561) *
                          C152080 * C152068 +
                      (C7458 + C7457 + C7456) * C152080 * C152187) *
                         C151956) *
                        C151914) *
                       C336 +
                   ((((C6089 * C144 + C6108 + C6108 + C6084 * C160 +
                       C6091 * C145 + C6109 + C6109 + C6085 * C161 +
                       C6093 * C146 + C6110 + C6110 + C6086 * C162) *
                          C152080 * C152187 +
                      (C6446 + C6447 + C6448) * C152080 * C152068) *
                         C152173 -
                     ((C7459 + C7460 + C7461) * C152080 * C152068 +
                      (C6093 * C555 + C6697 + C6697 + C6086 * C579 +
                       C6091 * C547 + C6698 + C6698 + C6085 * C571 +
                       C6089 * C548 + C6699 + C6699 + C6084 * C572) *
                          C152080 * C152187) *
                         C151956) *
                        C152172 +
                    (((C7461 + C7460 + C7459) * C152080 * C152187 +
                      (C6089 * C1536 + C7432 + C7432 + C6084 * C1560 +
                       C6091 * C1535 + C7433 + C7433 + C6085 * C1559 +
                       C6093 * C1916 + C7434 + C7434 + C6086 * C1918) *
                          C152080 * C152068) *
                         C151956 -
                     ((C6449 + C6450 + C6451) * C152080 * C152068 +
                      (C6448 + C6447 + C6446) * C152080 * C152187) *
                         C152173) *
                        C151914) *
                       C152208)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 +
                      C6091 * C143 + C6097 + C6097 + C6085 * C159 +
                      C6093 * C144 + C6098 + C6098 + C6086 * C160) *
                         C152080 * C152187 +
                     (C6434 + C6435 + C6436) * C152080 * C152068) *
                        C2814 -
                    ((C7453 + C7454 + C7455) * C152080 * C152068 +
                     (C6093 * C548 + C6673 + C6673 + C6086 * C572 +
                      C6091 * C549 + C6674 + C6674 + C6085 * C573 +
                      C6089 * C550 + C6675 + C6675 + C6084 * C574) *
                         C152080 * C152187) *
                        C2815 +
                    ((C6089 * C551 + C6676 + C6676 + C6084 * C575 +
                      C6091 * C552 + C6677 + C6677 + C6085 * C576 +
                      C6093 * C553 + C6678 + C6678 + C6086 * C577) *
                         C152080 * C152187 +
                     (C8119 + C8120 + C8121) * C152080 * C152068) *
                        C2816 -
                    ((C10174 + C10175 + C10176) * C152080 * C152068 +
                     (C6093 * C2452 + C9439 + C9439 + C6086 * C2468 +
                      C6091 * C2453 + C9440 + C9440 + C6085 * C2469 +
                      C6089 * C2454 + C9441 + C9441 + C6084 * C2470) *
                         C152080 * C152187) *
                        C152230) *
                       C152172 +
                   (((C7455 + C7454 + C7453) * C152080 * C152187 +
                     (C8122 + C8123 + C8124) * C152080 * C152068) *
                        C2815 -
                    ((C6437 + C6438 + C6439) * C152080 * C152068 +
                     (C6436 + C6435 + C6434) * C152080 * C152187) *
                        C2814 -
                    ((C8125 + C8126 + C8127) * C152080 * C152068 +
                     (C8121 + C8120 + C8119) * C152080 * C152187) *
                        C2816 +
                    ((C10176 + C10175 + C10174) * C152080 * C152187 +
                     (C6089 * C10149 + C10165 + C10165 + C6084 * C10155 +
                      C6091 * C10150 + C10166 + C10166 + C6085 * C10156 +
                      C6093 * C10151 + C10167 + C10167 + C6086 * C10157) *
                         C152080 * C152068) *
                        C152230) *
                       C151914) *
                  C151823) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) *
                          C152080 * C31624 +
                      C31863 * C31625 + C31864 * C31626 + C31865 * C31627) *
                         C152173 -
                     (C32570 * C31627 + C32571 * C31626 + C32572 * C31625 +
                      (C31628 * C550 + C32024 + C32024 + C151791 * C574) *
                          C152080 * C31624) *
                         C151956) *
                        C152172 +
                    ((C32572 * C31624 + C32571 * C31625 + C32570 * C31626 +
                      (C31628 * C8841 + C32528 + C32528 + C151791 * C8847) *
                          C152080 * C31627) *
                         C151956 -
                     (C31866 * C31627 + C31865 * C31626 + C31864 * C31625 +
                      C31863 * C31624) *
                         C152173) *
                        C151914) *
                       C335 +
                   ((((C31628 * C549 + C32029 + C32029 + C151791 * C573) *
                          C152080 * C31624 +
                      C32573 * C31625 + C32574 * C31626 + C32575 * C31627) *
                         C151956 -
                     (C31869 * C31627 + C31868 * C31626 + C31867 * C31625 +
                      (C31628 * C143 + C31638 + C31638 + C151791 * C159) *
                          C152080 * C31624) *
                         C152173) *
                        C152172 +
                    ((C31867 * C31624 + C31868 * C31625 + C31869 * C31626 +
                      C31870 * C31627) *
                         C152173 -
                     ((C31628 * C8842 + C32535 + C32535 + C151791 * C8848) *
                          C152080 * C31627 +
                      C32575 * C31626 + C32574 * C31625 + C32573 * C31624) *
                         C151956) *
                        C151914) *
                       C336 +
                   ((((C31628 * C144 + C31639 + C31639 + C151791 * C160) *
                          C152080 * C31624 +
                      C31871 * C31625 + C31872 * C31626 + C31873 * C31627) *
                         C152173 -
                     (C32576 * C31627 + C32577 * C31626 + C32578 * C31625 +
                      (C31628 * C548 + C32040 + C32040 + C151791 * C572) *
                          C152080 * C31624) *
                         C151956) *
                        C152172 +
                    ((C32578 * C31624 + C32577 * C31625 + C32576 * C31626 +
                      (C31628 * C8843 + C32542 + C32542 + C151791 * C8849) *
                          C152080 * C31627) *
                         C151956 -
                     (C31874 * C31627 + C31873 * C31626 + C31872 * C31625 +
                      C31871 * C31624) *
                         C152173) *
                        C151914) *
                       C152208)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) *
                         C152080 * C31624 +
                     C31863 * C31625 + C31864 * C31626 + C31865 * C31627) *
                        C152173 -
                    (C32570 * C31627 + C32571 * C31626 + C32572 * C31625 +
                     (C31628 * C550 + C32024 + C32024 + C151791 * C574) *
                         C152080 * C31624) *
                        C151956) *
                       C1709 +
                   ((C32572 * C31624 + C32571 * C31625 + C32570 * C31626 +
                     C33004 * C31627) *
                        C151956 -
                    (C31866 * C31627 + C31865 * C31626 + C31864 * C31625 +
                     C31863 * C31624) *
                        C152173) *
                       C1710 +
                   ((C31864 * C31624 + C31865 * C31625 + C31866 * C31626 +
                     C32822 * C31627) *
                        C152173 -
                    (C33483 * C31627 + C33004 * C31626 + C32570 * C31625 +
                     C32571 * C31624) *
                        C151956) *
                       C1711 +
                   ((C32570 * C31624 + C33004 * C31625 + C33483 * C31626 +
                     (C31628 * C33473 + C33479 + C33479 + C151791 * C33475) *
                         C152080 * C31627) *
                        C151956 -
                    (C32823 * C31627 + C32822 * C31626 + C31866 * C31625 +
                     C31865 * C31624) *
                        C152173) *
                       C152224) *
                  C151823) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) *
                         C152080 * C31624 +
                     C31863 * C31625 + C31864 * C31626 + C31865 * C31627) *
                        C2814 -
                    (C32570 * C31627 + C32571 * C31626 + C32572 * C31625 +
                     (C31628 * C550 + C32024 + C32024 + C151791 * C574) *
                         C152080 * C31624) *
                        C2815 +
                    ((C31628 * C551 + C32025 + C32025 + C151791 * C575) *
                         C152080 * C31624 +
                     C33001 * C31625 + C33002 * C31626 + C33003 * C31627) *
                        C2816 -
                    (C34365 * C31627 + C34366 * C31626 + C34367 * C31625 +
                     (C31628 * C2454 + C33864 + C33864 + C151791 * C2470) *
                         C152080 * C31624) *
                        C152230) *
                       C152172 +
                   ((C32572 * C31624 + C32571 * C31625 + C32570 * C31626 +
                     C33004 * C31627) *
                        C2815 -
                    (C31866 * C31627 + C31865 * C31626 + C31864 * C31625 +
                     C31863 * C31624) *
                        C2814 -
                    (C33005 * C31627 + C33003 * C31626 + C33002 * C31625 +
                     C33001 * C31624) *
                        C2816 +
                    (C34367 * C31624 + C34366 * C31625 + C34365 * C31626 +
                     (C31628 * C34345 + C34355 + C34355 + C151791 * C34347) *
                         C152080 * C31627) *
                        C152230) *
                       C151914) *
                  C151823) /
                     (p * q * std::sqrt(p + q));
    d2ee[337] += (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
                      (((C6089 * C142 + C6096 + C6096 + C6084 * C158 +
                         C6091 * C143 + C6097 + C6097 + C6085 * C159 +
                         C6093 * C144 + C6098 + C6098 + C6086 * C160) *
                            C152080 * C152187 +
                        (C6089 * C341 + C6099 + C6099 + C6084 * C365 +
                         C6091 * C340 + C6100 + C6100 + C6085 * C364 +
                         C6093 * C339 + C6101 + C6101 + C6086 * C363) *
                            C152080 * C152068) *
                           C151869 * C151851 * C129 -
                       ((C6093 * C338 + C6102 + C6102 + C6086 * C362 +
                         C6091 * C339 + C6103 + C6103 + C6085 * C363 +
                         C6089 * C340 + C6104 + C6104 + C6084 * C364) *
                            C152080 * C152068 +
                        (C6093 * C145 + C6105 + C6105 + C6086 * C161 +
                         C6091 * C144 + C6106 + C6106 + C6085 * C160 +
                         C6089 * C143 + C6107 + C6107 + C6084 * C159) *
                            C152080 * C152187) *
                           C151869 * C151851 * C130 +
                       ((C6089 * C144 + C6108 + C6108 + C6084 * C160 +
                         C6091 * C145 + C6109 + C6109 + C6085 * C161 +
                         C6093 * C146 + C6110 + C6110 + C6086 * C162) *
                            C152080 * C152187 +
                        (C6089 * C339 + C6111 + C6111 + C6084 * C363 +
                         C6091 * C338 + C6112 + C6112 + C6085 * C362 +
                         C6093 * C346 + C6113 + C6113 + C6086 * C370) *
                            C152080 * C152068) *
                           C151869 * C151851 * C131 -
                       ((C6093 * C348 + C6114 + C6114 + C6086 * C372 +
                         C6091 * C346 + C6115 + C6115 + C6085 * C370 +
                         C6089 * C338 + C6116 + C6116 + C6084 * C362) *
                            C152080 * C152068 +
                        (C6093 * C147 + C6117 + C6117 + C6086 * C163 +
                         C6091 * C146 + C6118 + C6118 + C6085 * C162 +
                         C6089 * C145 + C6119 + C6119 + C6084 * C161) *
                            C152080 * C152187) *
                           C151869 * C151851 * C132 +
                       ((C6089 * C146 + C6120 + C6120 + C6084 * C162 +
                         C6091 * C147 + C6121 + C6121 + C6085 * C163 +
                         C6093 * C148 + C6122 + C6122 + C6086 * C164) *
                            C152080 * C152187 +
                        (C6089 * C346 + C6123 + C6123 + C6084 * C370 +
                         C6091 * C348 + C6124 + C6124 + C6085 * C372 +
                         C6093 * C743 + C6125 + C6125 + C6086 * C745) *
                            C152080 * C152068) *
                           C151869 * C151851 * C133) +
                  std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
                      ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 +
                          C6091 * C143 + C6097 + C6097 + C6085 * C159 +
                          C6093 * C144 + C6098 + C6098 + C6086 * C160) *
                             C152080 * C152187 +
                         (C6434 + C6435 + C6436) * C152080 * C152068) *
                            C151869 * C152258 -
                        ((C6437 + C6438 + C6439) * C152080 * C152068 +
                         (C6436 + C6435 + C6434) * C152080 * C152187) *
                            C151869 * C152244 +
                        ((C6439 + C6438 + C6437) * C152080 * C152187 +
                         (C6089 * C1356 + C6359 + C6359 + C6084 * C1372 +
                          C6091 * C1355 + C6360 + C6360 + C6085 * C1371 +
                          C6093 * C1354 + C6361 + C6361 + C6086 * C1370) *
                             C152080 * C152068) *
                            C151869 * C152214) *
                           C335 +
                       (((C6440 + C6441 + C6442) * C152080 * C152187 +
                         (C6443 + C6444 + C6445) * C152080 * C152068) *
                            C151869 * C152244 -
                        ((C6442 + C6441 + C6440) * C152080 * C152068 +
                         (C6093 * C145 + C6105 + C6105 + C6086 * C161 +
                          C6091 * C144 + C6106 + C6106 + C6085 * C160 +
                          C6089 * C143 + C6107 + C6107 + C6084 * C159) *
                             C152080 * C152187) *
                            C151869 * C152258 -
                        ((C6093 * C1353 + C6377 + C6377 + C6086 * C1369 +
                          C6091 * C1354 + C6378 + C6378 + C6085 * C1370 +
                          C6089 * C1355 + C6379 + C6379 + C6084 * C1371) *
                             C152080 * C152068 +
                         (C6445 + C6444 + C6443) * C152080 * C152187) *
                            C151869 * C152214) *
                           C336 +
                       (((C6089 * C144 + C6108 + C6108 + C6084 * C160 +
                          C6091 * C145 + C6109 + C6109 + C6085 * C161 +
                          C6093 * C146 + C6110 + C6110 + C6086 * C162) *
                             C152080 * C152187 +
                         (C6446 + C6447 + C6448) * C152080 * C152068) *
                            C151869 * C152258 -
                        ((C6449 + C6450 + C6451) * C152080 * C152068 +
                         (C6448 + C6447 + C6446) * C152080 * C152187) *
                            C151869 * C152244 +
                        ((C6451 + C6450 + C6449) * C152080 * C152187 +
                         (C6089 * C1354 + C6395 + C6395 + C6084 * C1370 +
                          C6091 * C1353 + C6396 + C6396 + C6085 * C1369 +
                          C6093 * C1715 + C6397 + C6397 + C6086 * C1717) *
                             C152080 * C152068) *
                            C151869 * C152214) *
                           C152208)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 +
                      C6091 * C143 + C6097 + C6097 + C6085 * C159 +
                      C6093 * C144 + C6098 + C6098 + C6086 * C160) *
                         C152080 * C152187 +
                     (C6434 + C6435 + C6436) * C152080 * C152068) *
                        C152259 -
                    ((C6093 * C1085 + C6670 + C6670 + C6086 * C1097 +
                      C6091 * C1084 + C6671 + C6671 + C6085 * C1096 +
                      C6089 * C1083 + C6672 + C6672 + C6084 * C1095) *
                         C152080 * C152068 +
                     (C6093 * C548 + C6673 + C6673 + C6086 * C572 +
                      C6091 * C549 + C6674 + C6674 + C6085 * C573 +
                      C6089 * C550 + C6675 + C6675 + C6084 * C574) *
                         C152080 * C152187) *
                        C152246 +
                    ((C6089 * C551 + C6676 + C6676 + C6084 * C575 +
                      C6091 * C552 + C6677 + C6677 + C6085 * C576 +
                      C6093 * C553 + C6678 + C6678 + C6086 * C577) *
                         C152080 * C152187 +
                     (C6089 * C1534 + C6679 + C6679 + C6084 * C1558 +
                      C6091 * C1533 + C6680 + C6680 + C6085 * C1557 +
                      C6093 * C1532 + C6681 + C6681 + C6086 * C1556) *
                         C152080 * C152068) *
                        C152217) *
                       C151851 * C335 +
                   (((C6089 * C549 + C6682 + C6682 + C6084 * C573 +
                      C6091 * C548 + C6683 + C6683 + C6085 * C572 +
                      C6093 * C547 + C6684 + C6684 + C6086 * C571) *
                         C152080 * C152187 +
                     (C6089 * C1084 + C6685 + C6685 + C6084 * C1096 +
                      C6091 * C1085 + C6686 + C6686 + C6085 * C1097 +
                      C6093 * C1086 + C6687 + C6687 + C6086 * C1098) *
                         C152080 * C152068) *
                        C152246 -
                    ((C6442 + C6441 + C6440) * C152080 * C152068 +
                     (C6093 * C145 + C6105 + C6105 + C6086 * C161 +
                      C6091 * C144 + C6106 + C6106 + C6085 * C160 +
                      C6089 * C143 + C6107 + C6107 + C6084 * C159) *
                         C152080 * C152187) *
                        C152259 -
                    ((C6093 * C1531 + C6688 + C6688 + C6086 * C1555 +
                      C6091 * C1532 + C6689 + C6689 + C6085 * C1556 +
                      C6089 * C1533 + C6690 + C6690 + C6084 * C1557) *
                         C152080 * C152068 +
                     (C6093 * C554 + C6691 + C6691 + C6086 * C578 +
                      C6091 * C553 + C6692 + C6692 + C6085 * C577 +
                      C6089 * C552 + C6693 + C6693 + C6084 * C576) *
                         C152080 * C152187) *
                        C152217) *
                       C151851 * C336 +
                   (((C6089 * C144 + C6108 + C6108 + C6084 * C160 +
                      C6091 * C145 + C6109 + C6109 + C6085 * C161 +
                      C6093 * C146 + C6110 + C6110 + C6086 * C162) *
                         C152080 * C152187 +
                     (C6446 + C6447 + C6448) * C152080 * C152068) *
                        C152259 -
                    ((C6093 * C1087 + C6694 + C6694 + C6086 * C1099 +
                      C6091 * C1086 + C6695 + C6695 + C6085 * C1098 +
                      C6089 * C1085 + C6696 + C6696 + C6084 * C1097) *
                         C152080 * C152068 +
                     (C6093 * C555 + C6697 + C6697 + C6086 * C579 +
                      C6091 * C547 + C6698 + C6698 + C6085 * C571 +
                      C6089 * C548 + C6699 + C6699 + C6084 * C572) *
                         C152080 * C152187) *
                        C152246 +
                    ((C6089 * C553 + C6700 + C6700 + C6084 * C577 +
                      C6091 * C554 + C6701 + C6701 + C6085 * C578 +
                      C6093 * C556 + C6702 + C6702 + C6086 * C580) *
                         C152080 * C152187 +
                     (C6089 * C1532 + C6703 + C6703 + C6084 * C1556 +
                      C6091 * C1531 + C6704 + C6704 + C6085 * C1555 +
                      C6093 * C2677 + C6705 + C6705 + C6086 * C2679) *
                         C152080 * C152068) *
                        C152217) *
                       C151851 * C152208)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
                  ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 +
                      C6091 * C143 + C6097 + C6097 + C6085 * C159 +
                      C6093 * C144 + C6098 + C6098 + C6086 * C160) *
                         C152080 * C152187 +
                     (C6434 + C6435 + C6436) * C152080 * C152068) *
                        C151869 * C1259 -
                    ((C6437 + C6438 + C6439) * C152080 * C152068 +
                     (C6436 + C6435 + C6434) * C152080 * C152187) *
                        C151869 * C1260 +
                    ((C6439 + C6438 + C6437) * C152080 * C152187 +
                     (C6089 * C1356 + C6359 + C6359 + C6084 * C1372 +
                      C6091 * C1355 + C6360 + C6360 + C6085 * C1371 +
                      C6093 * C1354 + C6361 + C6361 + C6086 * C1370) *
                         C152080 * C152068) *
                        C151869 * C152214) *
                       C152255 +
                   (((C6440 + C6441 + C6442) * C152080 * C152187 +
                     (C6443 + C6444 + C6445) * C152080 * C152068) *
                        C151869 * C1260 -
                    ((C6442 + C6441 + C6440) * C152080 * C152068 +
                     (C6093 * C145 + C6105 + C6105 + C6086 * C161 +
                      C6091 * C144 + C6106 + C6106 + C6085 * C160 +
                      C6089 * C143 + C6107 + C6107 + C6084 * C159) *
                         C152080 * C152187) *
                        C151869 * C1259 -
                    ((C6093 * C1353 + C6377 + C6377 + C6086 * C1369 +
                      C6091 * C1354 + C6378 + C6378 + C6085 * C1370 +
                      C6089 * C1355 + C6379 + C6379 + C6084 * C1371) *
                         C152080 * C152068 +
                     (C6445 + C6444 + C6443) * C152080 * C152187) *
                        C151869 * C152214) *
                       C152240 +
                   (((C6089 * C144 + C6108 + C6108 + C6084 * C160 +
                      C6091 * C145 + C6109 + C6109 + C6085 * C161 +
                      C6093 * C146 + C6110 + C6110 + C6086 * C162) *
                         C152080 * C152187 +
                     (C6446 + C6447 + C6448) * C152080 * C152068) *
                        C151869 * C1259 -
                    ((C6449 + C6450 + C6451) * C152080 * C152068 +
                     (C6448 + C6447 + C6446) * C152080 * C152187) *
                        C151869 * C1260 +
                    ((C6451 + C6450 + C6449) * C152080 * C152187 +
                     (C6089 * C1354 + C6395 + C6395 + C6084 * C1370 +
                      C6091 * C1353 + C6396 + C6396 + C6085 * C1369 +
                      C6093 * C1715 + C6397 + C6397 + C6086 * C1717) *
                         C152080 * C152068) *
                        C151869 * C152214) *
                       C152208)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
                  (((C6089 * C142 + C6096 + C6096 + C6084 * C158 +
                     C6091 * C143 + C6097 + C6097 + C6085 * C159 +
                     C6093 * C144 + C6098 + C6098 + C6086 * C160) *
                        C152080 * C152187 +
                    (C6434 + C6435 + C6436) * C152080 * C152068) *
                       C151869 * C1347 -
                   ((C6437 + C6438 + C6439) * C152080 * C152068 +
                    (C6436 + C6435 + C6434) * C152080 * C152187) *
                       C151869 * C1348 +
                   ((C6439 + C6438 + C6437) * C152080 * C152187 +
                    (C7841 + C7842 + C7843) * C152080 * C152068) *
                       C151869 * C1349 -
                   ((C7844 + C7845 + C7846) * C152080 * C152068 +
                    (C7843 + C7842 + C7841) * C152080 * C152187) *
                       C151869 * C1350 +
                   ((C7846 + C7845 + C7844) * C152080 * C152187 +
                    (C6089 * C7801 + C7826 + C7826 + C6084 * C7807 +
                     C6091 * C7802 + C7827 + C7827 + C6085 * C7808 +
                     C6093 * C7803 + C7828 + C7828 + C6086 * C7809) *
                        C152080 * C152068) *
                       C151869 * C1351) *
                  C151823) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 +
                      C6091 * C143 + C6097 + C6097 + C6085 * C159 +
                      C6093 * C144 + C6098 + C6098 + C6086 * C160) *
                         C152080 * C152187 +
                     (C6434 + C6435 + C6436) * C152080 * C152068) *
                        C152259 -
                    ((C7453 + C7454 + C7455) * C152080 * C152068 +
                     (C6093 * C548 + C6673 + C6673 + C6086 * C572 +
                      C6091 * C549 + C6674 + C6674 + C6085 * C573 +
                      C6089 * C550 + C6675 + C6675 + C6084 * C574) *
                         C152080 * C152187) *
                        C152246 +
                    ((C6089 * C551 + C6676 + C6676 + C6084 * C575 +
                      C6091 * C552 + C6677 + C6677 + C6085 * C576 +
                      C6093 * C553 + C6678 + C6678 + C6086 * C577) *
                         C152080 * C152187 +
                     (C8119 + C8120 + C8121) * C152080 * C152068) *
                        C152217) *
                       C1259 +
                   (((C7455 + C7454 + C7453) * C152080 * C152187 +
                     (C8122 + C8123 + C8124) * C152080 * C152068) *
                        C152246 -
                    ((C6437 + C6438 + C6439) * C152080 * C152068 +
                     (C6436 + C6435 + C6434) * C152080 * C152187) *
                        C152259 -
                    ((C8125 + C8126 + C8127) * C152080 * C152068 +
                     (C8121 + C8120 + C8119) * C152080 * C152187) *
                        C152217) *
                       C1260 +
                   (((C6439 + C6438 + C6437) * C152080 * C152187 +
                     (C7841 + C7842 + C7843) * C152080 * C152068) *
                        C152259 -
                    ((C6093 * C2055 + C8095 + C8095 + C6086 * C2063 +
                      C6091 * C2054 + C8096 + C8096 + C6085 * C2062 +
                      C6089 * C2053 + C8097 + C8097 + C6084 * C2061) *
                         C152080 * C152068 +
                     (C8124 + C8123 + C8122) * C152080 * C152187) *
                        C152246 +
                    ((C8127 + C8126 + C8125) * C152080 * C152187 +
                     (C6089 * C8064 + C8098 + C8098 + C6084 * C8070 +
                      C6091 * C8065 + C8099 + C8099 + C6085 * C8071 +
                      C6093 * C8066 + C8100 + C8100 + C6086 * C8072) *
                         C152080 * C152068) *
                        C152217) *
                       C152214) *
                  C151823) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 +
                      C6091 * C143 + C6097 + C6097 + C6085 * C159 +
                      C6093 * C144 + C6098 + C6098 + C6086 * C160) *
                         C152080 * C152187 +
                     (C6434 + C6435 + C6436) * C152080 * C152068) *
                        C2215 -
                    ((C7453 + C7454 + C7455) * C152080 * C152068 +
                     (C6093 * C548 + C6673 + C6673 + C6086 * C572 +
                      C6091 * C549 + C6674 + C6674 + C6085 * C573 +
                      C6089 * C550 + C6675 + C6675 + C6084 * C574) *
                         C152080 * C152187) *
                        C2216 +
                    ((C6089 * C551 + C6676 + C6676 + C6084 * C575 +
                      C6091 * C552 + C6677 + C6677 + C6085 * C576 +
                      C6093 * C553 + C6678 + C6678 + C6086 * C577) *
                         C152080 * C152187 +
                     (C8119 + C8120 + C8121) * C152080 * C152068) *
                        C152217) *
                       C151851 * C152255 +
                   (((C6089 * C549 + C6682 + C6682 + C6084 * C573 +
                      C6091 * C548 + C6683 + C6683 + C6085 * C572 +
                      C6093 * C547 + C6684 + C6684 + C6086 * C571) *
                         C152080 * C152187 +
                     (C7456 + C7457 + C7458) * C152080 * C152068) *
                        C2216 -
                    ((C6442 + C6441 + C6440) * C152080 * C152068 +
                     (C6093 * C145 + C6105 + C6105 + C6086 * C161 +
                      C6091 * C144 + C6106 + C6106 + C6085 * C160 +
                      C6089 * C143 + C6107 + C6107 + C6084 * C159) *
                         C152080 * C152187) *
                        C2215 -
                    ((C6093 * C1531 + C6688 + C6688 + C6086 * C1555 +
                      C6091 * C1532 + C6689 + C6689 + C6085 * C1556 +
                      C6089 * C1533 + C6690 + C6690 + C6084 * C1557) *
                         C152080 * C152068 +
                     (C6093 * C554 + C6691 + C6691 + C6086 * C578 +
                      C6091 * C553 + C6692 + C6692 + C6085 * C577 +
                      C6089 * C552 + C6693 + C6693 + C6084 * C576) *
                         C152080 * C152187) *
                        C152217) *
                       C151851 * C152240 +
                   (((C6089 * C144 + C6108 + C6108 + C6084 * C160 +
                      C6091 * C145 + C6109 + C6109 + C6085 * C161 +
                      C6093 * C146 + C6110 + C6110 + C6086 * C162) *
                         C152080 * C152187 +
                     (C6446 + C6447 + C6448) * C152080 * C152068) *
                        C2215 -
                    ((C7459 + C7460 + C7461) * C152080 * C152068 +
                     (C6093 * C555 + C6697 + C6697 + C6086 * C579 +
                      C6091 * C547 + C6698 + C6698 + C6085 * C571 +
                      C6089 * C548 + C6699 + C6699 + C6084 * C572) *
                         C152080 * C152187) *
                        C2216 +
                    ((C6089 * C553 + C6700 + C6700 + C6084 * C577 +
                      C6091 * C554 + C6701 + C6701 + C6085 * C578 +
                      C6093 * C556 + C6702 + C6702 + C6086 * C580) *
                         C152080 * C152187 +
                     (C6089 * C1532 + C6703 + C6703 + C6084 * C1556 +
                      C6091 * C1531 + C6704 + C6704 + C6085 * C1555 +
                      C6093 * C2677 + C6705 + C6705 + C6086 * C2679) *
                         C152080 * C152068) *
                        C152217) *
                       C151851 * C152208)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 +
                      C6091 * C143 + C6097 + C6097 + C6085 * C159 +
                      C6093 * C144 + C6098 + C6098 + C6086 * C160) *
                         C152080 * C152187 +
                     (C6434 + C6435 + C6436) * C152080 * C152068) *
                        C2215 -
                    ((C7453 + C7454 + C7455) * C152080 * C152068 +
                     (C6093 * C548 + C6673 + C6673 + C6086 * C572 +
                      C6091 * C549 + C6674 + C6674 + C6085 * C573 +
                      C6089 * C550 + C6675 + C6675 + C6084 * C574) *
                         C152080 * C152187) *
                        C2216 +
                    ((C6089 * C551 + C6676 + C6676 + C6084 * C575 +
                      C6091 * C552 + C6677 + C6677 + C6085 * C576 +
                      C6093 * C553 + C6678 + C6678 + C6086 * C577) *
                         C152080 * C152187 +
                     (C8119 + C8120 + C8121) * C152080 * C152068) *
                        C152217) *
                       C152258 +
                   (((C7455 + C7454 + C7453) * C152080 * C152187 +
                     (C8122 + C8123 + C8124) * C152080 * C152068) *
                        C2216 -
                    ((C6437 + C6438 + C6439) * C152080 * C152068 +
                     (C6436 + C6435 + C6434) * C152080 * C152187) *
                        C2215 -
                    ((C8125 + C8126 + C8127) * C152080 * C152068 +
                     (C8121 + C8120 + C8119) * C152080 * C152187) *
                        C152217) *
                       C152244 +
                   (((C6439 + C6438 + C6437) * C152080 * C152187 +
                     (C7841 + C7842 + C7843) * C152080 * C152068) *
                        C2215 -
                    ((C8866 + C8867 + C8868) * C152080 * C152068 +
                     (C8124 + C8123 + C8122) * C152080 * C152187) *
                        C2216 +
                    ((C8127 + C8126 + C8125) * C152080 * C152187 +
                     (C6089 * C8064 + C8098 + C8098 + C6084 * C8070 +
                      C6091 * C8065 + C8099 + C8099 + C6085 * C8071 +
                      C6093 * C8066 + C8100 + C8100 + C6086 * C8072) *
                         C152080 * C152068) *
                        C152217) *
                       C152214) *
                  C151823) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((C6089 * C142 + C6096 + C6096 + C6084 * C158 +
                     C6091 * C143 + C6097 + C6097 + C6085 * C159 +
                     C6093 * C144 + C6098 + C6098 + C6086 * C160) *
                        C152080 * C152187 +
                    (C6434 + C6435 + C6436) * C152080 * C152068) *
                       C2446 -
                   ((C7453 + C7454 + C7455) * C152080 * C152068 +
                    (C6093 * C548 + C6673 + C6673 + C6086 * C572 +
                     C6091 * C549 + C6674 + C6674 + C6085 * C573 +
                     C6089 * C550 + C6675 + C6675 + C6084 * C574) *
                        C152080 * C152187) *
                       C2447 +
                   ((C6089 * C551 + C6676 + C6676 + C6084 * C575 +
                     C6091 * C552 + C6677 + C6677 + C6085 * C576 +
                     C6093 * C553 + C6678 + C6678 + C6086 * C577) *
                        C152080 * C152187 +
                    (C8119 + C8120 + C8121) * C152080 * C152068) *
                       C2448 -
                   ((C6093 * C2957 + C9436 + C9436 + C6086 * C2965 +
                     C6091 * C2956 + C9437 + C9437 + C6085 * C2964 +
                     C6089 * C2955 + C9438 + C9438 + C6084 * C2963) *
                        C152080 * C152068 +
                    (C6093 * C2452 + C9439 + C9439 + C6086 * C2468 +
                     C6091 * C2453 + C9440 + C9440 + C6085 * C2469 +
                     C6089 * C2454 + C9441 + C9441 + C6084 * C2470) *
                        C152080 * C152187) *
                       C2449 +
                   ((C6089 * C2455 + C9442 + C9442 + C6084 * C2471 +
                     C6091 * C2456 + C9443 + C9443 + C6085 * C2472 +
                     C6093 * C2457 + C9444 + C9444 + C6086 * C2473) *
                        C152080 * C152187 +
                    (C6089 * C9426 + C9445 + C9445 + C6084 * C9432 +
                     C6091 * C9427 + C9446 + C9446 + C6085 * C9433 +
                     C6093 * C9428 + C9447 + C9447 + C6086 * C9434) *
                        C152080 * C152068) *
                       C2450) *
                  C151851 * C151823) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
                  (((C31628 * C142 + C31631 + C31631 + C151791 * C158) *
                        C152080 * C31624 +
                    (C31628 * C341 + C31632 + C31632 + C151791 * C365) *
                        C152080 * C31625 +
                    (C31628 * C342 + C31633 + C31633 + C151791 * C366) *
                        C152080 * C31626 +
                    (C31628 * C1356 + C31634 + C31634 + C151791 * C1372) *
                        C152080 * C31627) *
                       C151869 * C151851 * C129 -
                   ((C31628 * C1355 + C31635 + C31635 + C151791 * C1371) *
                        C152080 * C31627 +
                    (C31628 * C343 + C31636 + C31636 + C151791 * C367) *
                        C152080 * C31626 +
                    (C31628 * C340 + C31637 + C31637 + C151791 * C364) *
                        C152080 * C31625 +
                    (C31628 * C143 + C31638 + C31638 + C151791 * C159) *
                        C152080 * C31624) *
                       C151869 * C151851 * C130 +
                   ((C31628 * C144 + C31639 + C31639 + C151791 * C160) *
                        C152080 * C31624 +
                    (C31628 * C339 + C31640 + C31640 + C151791 * C363) *
                        C152080 * C31625 +
                    (C31628 * C344 + C31641 + C31641 + C151791 * C368) *
                        C152080 * C31626 +
                    (C31628 * C1354 + C31642 + C31642 + C151791 * C1370) *
                        C152080 * C31627) *
                       C151869 * C151851 * C131 -
                   ((C31628 * C1353 + C31643 + C31643 + C151791 * C1369) *
                        C152080 * C31627 +
                    (C31628 * C345 + C31644 + C31644 + C151791 * C369) *
                        C152080 * C31626 +
                    (C31628 * C338 + C31645 + C31645 + C151791 * C362) *
                        C152080 * C31625 +
                    (C31628 * C145 + C31646 + C31646 + C151791 * C161) *
                        C152080 * C31624) *
                       C151869 * C151851 * C132 +
                   ((C31628 * C146 + C31647 + C31647 + C151791 * C162) *
                        C152080 * C31624 +
                    (C31628 * C346 + C31648 + C31648 + C151791 * C370) *
                        C152080 * C31625 +
                    (C31628 * C347 + C31649 + C31649 + C151791 * C371) *
                        C152080 * C31626 +
                    (C31628 * C1715 + C31650 + C31650 + C151791 * C1717) *
                        C152080 * C31627) *
                       C151869 * C151851 * C133)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
                  ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) *
                         C152080 * C31624 +
                     C31863 * C31625 + C31864 * C31626 + C31865 * C31627) *
                        C151869 * C152258 -
                    (C31866 * C31627 + C31865 * C31626 + C31864 * C31625 +
                     C31863 * C31624) *
                        C151869 * C152244 +
                    (C31864 * C31624 + C31865 * C31625 + C31866 * C31626 +
                     (C31628 * C7801 + C31806 + C31806 + C151791 * C7807) *
                         C152080 * C31627) *
                        C151869 * C152214) *
                       C335 +
                   ((C31867 * C31624 + C31868 * C31625 + C31869 * C31626 +
                     C31870 * C31627) *
                        C151869 * C152244 -
                    (C31869 * C31627 + C31868 * C31626 + C31867 * C31625 +
                     (C31628 * C143 + C31638 + C31638 + C151791 * C159) *
                         C152080 * C31624) *
                        C151869 * C152258 -
                    ((C31628 * C7802 + C31816 + C31816 + C151791 * C7808) *
                         C152080 * C31627 +
                     C31870 * C31626 + C31869 * C31625 + C31868 * C31624) *
                        C151869 * C152214) *
                       C336 +
                   (((C31628 * C144 + C31639 + C31639 + C151791 * C160) *
                         C152080 * C31624 +
                     C31871 * C31625 + C31872 * C31626 + C31873 * C31627) *
                        C151869 * C152258 -
                    (C31874 * C31627 + C31873 * C31626 + C31872 * C31625 +
                     C31871 * C31624) *
                        C151869 * C152244 +
                    (C31872 * C31624 + C31873 * C31625 + C31874 * C31626 +
                     (C31628 * C7803 + C31826 + C31826 + C151791 * C7809) *
                         C152080 * C31627) *
                        C151869 * C152214) *
                       C152208)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) *
                         C152080 * C31624 +
                     C31863 * C31625 + C31864 * C31626 + C31865 * C31627) *
                        C152259 -
                    ((C31628 * C2053 + C32021 + C32021 + C151791 * C2061) *
                         C152080 * C31627 +
                     (C31628 * C1538 + C32022 + C32022 + C151791 * C1562) *
                         C152080 * C31626 +
                     (C31628 * C1083 + C32023 + C32023 + C151791 * C1095) *
                         C152080 * C31625 +
                     (C31628 * C550 + C32024 + C32024 + C151791 * C574) *
                         C152080 * C31624) *
                        C152246 +
                    ((C31628 * C551 + C32025 + C32025 + C151791 * C575) *
                         C152080 * C31624 +
                     (C31628 * C1534 + C32026 + C32026 + C151791 * C1558) *
                         C152080 * C31625 +
                     (C31628 * C1539 + C32027 + C32027 + C151791 * C1563) *
                         C152080 * C31626 +
                     (C31628 * C8064 + C32028 + C32028 + C151791 * C8070) *
                         C152080 * C31627) *
                        C152217) *
                       C151851 * C335 +
                   (((C31628 * C549 + C32029 + C32029 + C151791 * C573) *
                         C152080 * C31624 +
                     (C31628 * C1084 + C32030 + C32030 + C151791 * C1096) *
                         C152080 * C31625 +
                     (C31628 * C1537 + C32031 + C32031 + C151791 * C1561) *
                         C152080 * C31626 +
                     (C31628 * C2054 + C32032 + C32032 + C151791 * C2062) *
                         C152080 * C31627) *
                        C152246 -
                    (C31869 * C31627 + C31868 * C31626 + C31867 * C31625 +
                     (C31628 * C143 + C31638 + C31638 + C151791 * C159) *
                         C152080 * C31624) *
                        C152259 -
                    ((C31628 * C8065 + C32033 + C32033 + C151791 * C8071) *
                         C152080 * C31627 +
                     (C31628 * C1540 + C32034 + C32034 + C151791 * C1564) *
                         C152080 * C31626 +
                     (C31628 * C1533 + C32035 + C32035 + C151791 * C1557) *
                         C152080 * C31625 +
                     (C31628 * C552 + C32036 + C32036 + C151791 * C576) *
                         C152080 * C31624) *
                        C152217) *
                       C151851 * C336 +
                   (((C31628 * C144 + C31639 + C31639 + C151791 * C160) *
                         C152080 * C31624 +
                     C31871 * C31625 + C31872 * C31626 + C31873 * C31627) *
                        C152259 -
                    ((C31628 * C2055 + C32037 + C32037 + C151791 * C2063) *
                         C152080 * C31627 +
                     (C31628 * C1536 + C32038 + C32038 + C151791 * C1560) *
                         C152080 * C31626 +
                     (C31628 * C1085 + C32039 + C32039 + C151791 * C1097) *
                         C152080 * C31625 +
                     (C31628 * C548 + C32040 + C32040 + C151791 * C572) *
                         C152080 * C31624) *
                        C152246 +
                    ((C31628 * C553 + C32041 + C32041 + C151791 * C577) *
                         C152080 * C31624 +
                     (C31628 * C1532 + C32042 + C32042 + C151791 * C1556) *
                         C152080 * C31625 +
                     (C31628 * C1541 + C32043 + C32043 + C151791 * C1565) *
                         C152080 * C31626 +
                     (C31628 * C8066 + C32044 + C32044 + C151791 * C8072) *
                         C152080 * C31627) *
                        C152217) *
                       C151851 * C152208)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
                  ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) *
                         C152080 * C31624 +
                     C31863 * C31625 + C31864 * C31626 + C31865 * C31627) *
                        C151869 * C1259 -
                    (C31866 * C31627 + C31865 * C31626 + C31864 * C31625 +
                     C31863 * C31624) *
                        C151869 * C1260 +
                    (C31864 * C31624 + C31865 * C31625 + C31866 * C31626 +
                     (C31628 * C7801 + C31806 + C31806 + C151791 * C7807) *
                         C152080 * C31627) *
                        C151869 * C152214) *
                       C152255 +
                   ((C31867 * C31624 + C31868 * C31625 + C31869 * C31626 +
                     C31870 * C31627) *
                        C151869 * C1260 -
                    (C31869 * C31627 + C31868 * C31626 + C31867 * C31625 +
                     (C31628 * C143 + C31638 + C31638 + C151791 * C159) *
                         C152080 * C31624) *
                        C151869 * C1259 -
                    ((C31628 * C7802 + C31816 + C31816 + C151791 * C7808) *
                         C152080 * C31627 +
                     C31870 * C31626 + C31869 * C31625 + C31868 * C31624) *
                        C151869 * C152214) *
                       C152240 +
                   (((C31628 * C144 + C31639 + C31639 + C151791 * C160) *
                         C152080 * C31624 +
                     C31871 * C31625 + C31872 * C31626 + C31873 * C31627) *
                        C151869 * C1259 -
                    (C31874 * C31627 + C31873 * C31626 + C31872 * C31625 +
                     C31871 * C31624) *
                        C151869 * C1260 +
                    (C31872 * C31624 + C31873 * C31625 + C31874 * C31626 +
                     (C31628 * C7803 + C31826 + C31826 + C151791 * C7809) *
                         C152080 * C31627) *
                        C151869 * C152214) *
                       C152208)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
                  (((C31628 * C142 + C31631 + C31631 + C151791 * C158) *
                        C152080 * C31624 +
                    C31863 * C31625 + C31864 * C31626 + C31865 * C31627) *
                       C151869 * C1347 -
                   (C31866 * C31627 + C31865 * C31626 + C31864 * C31625 +
                    C31863 * C31624) *
                       C151869 * C1348 +
                   (C31864 * C31624 + C31865 * C31625 + C31866 * C31626 +
                    C32822 * C31627) *
                       C151869 * C1349 -
                   (C32823 * C31627 + C32822 * C31626 + C31866 * C31625 +
                    C31865 * C31624) *
                       C151869 * C1350 +
                   (C31866 * C31624 + C32822 * C31625 + C32823 * C31626 +
                    (C31628 * C32806 + C32815 + C32815 + C151791 * C32808) *
                        C152080 * C31627) *
                       C151869 * C1351) *
                  C151823) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) *
                         C152080 * C31624 +
                     C31863 * C31625 + C31864 * C31626 + C31865 * C31627) *
                        C152259 -
                    (C32570 * C31627 + C32571 * C31626 + C32572 * C31625 +
                     (C31628 * C550 + C32024 + C32024 + C151791 * C574) *
                         C152080 * C31624) *
                        C152246 +
                    ((C31628 * C551 + C32025 + C32025 + C151791 * C575) *
                         C152080 * C31624 +
                     C33001 * C31625 + C33002 * C31626 + C33003 * C31627) *
                        C152217) *
                       C1259 +
                   ((C32572 * C31624 + C32571 * C31625 + C32570 * C31626 +
                     C33004 * C31627) *
                        C152246 -
                    (C31866 * C31627 + C31865 * C31626 + C31864 * C31625 +
                     C31863 * C31624) *
                        C152259 -
                    (C33005 * C31627 + C33003 * C31626 + C33002 * C31625 +
                     C33001 * C31624) *
                        C152217) *
                       C1260 +
                   ((C31864 * C31624 + C31865 * C31625 + C31866 * C31626 +
                     C32822 * C31627) *
                        C152259 -
                    ((C31628 * C25783 + C32984 + C32984 + C151791 * C25787) *
                         C152080 * C31627 +
                     C33004 * C31626 + C32570 * C31625 + C32571 * C31624) *
                        C152246 +
                    (C33002 * C31624 + C33003 * C31625 + C33005 * C31626 +
                     (C31628 * C32969 + C32985 + C32985 + C151791 * C32971) *
                         C152080 * C31627) *
                        C152217) *
                       C152214) *
                  C151823) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) *
                         C152080 * C31624 +
                     C31863 * C31625 + C31864 * C31626 + C31865 * C31627) *
                        C2215 -
                    (C32570 * C31627 + C32571 * C31626 + C32572 * C31625 +
                     (C31628 * C550 + C32024 + C32024 + C151791 * C574) *
                         C152080 * C31624) *
                        C2216 +
                    ((C31628 * C551 + C32025 + C32025 + C151791 * C575) *
                         C152080 * C31624 +
                     C33001 * C31625 + C33002 * C31626 + C33003 * C31627) *
                        C152217) *
                       C151851 * C152255 +
                   (((C31628 * C549 + C32029 + C32029 + C151791 * C573) *
                         C152080 * C31624 +
                     C32573 * C31625 + C32574 * C31626 + C32575 * C31627) *
                        C2216 -
                    (C31869 * C31627 + C31868 * C31626 + C31867 * C31625 +
                     (C31628 * C143 + C31638 + C31638 + C151791 * C159) *
                         C152080 * C31624) *
                        C2215 -
                    ((C31628 * C8065 + C32033 + C32033 + C151791 * C8071) *
                         C152080 * C31627 +
                     (C31628 * C1540 + C32034 + C32034 + C151791 * C1564) *
                         C152080 * C31626 +
                     (C31628 * C1533 + C32035 + C32035 + C151791 * C1557) *
                         C152080 * C31625 +
                     (C31628 * C552 + C32036 + C32036 + C151791 * C576) *
                         C152080 * C31624) *
                        C152217) *
                       C151851 * C152240 +
                   (((C31628 * C144 + C31639 + C31639 + C151791 * C160) *
                         C152080 * C31624 +
                     C31871 * C31625 + C31872 * C31626 + C31873 * C31627) *
                        C2215 -
                    (C32576 * C31627 + C32577 * C31626 + C32578 * C31625 +
                     (C31628 * C548 + C32040 + C32040 + C151791 * C572) *
                         C152080 * C31624) *
                        C2216 +
                    ((C31628 * C553 + C32041 + C32041 + C151791 * C577) *
                         C152080 * C31624 +
                     (C31628 * C1532 + C32042 + C32042 + C151791 * C1556) *
                         C152080 * C31625 +
                     (C31628 * C1541 + C32043 + C32043 + C151791 * C1565) *
                         C152080 * C31626 +
                     (C31628 * C8066 + C32044 + C32044 + C151791 * C8072) *
                         C152080 * C31627) *
                        C152217) *
                       C151851 * C152208)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
                  ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) *
                         C152080 * C31624 +
                     C31863 * C31625 + C31864 * C31626 + C31865 * C31627) *
                        C2215 -
                    (C32570 * C31627 + C32571 * C31626 + C32572 * C31625 +
                     (C31628 * C550 + C32024 + C32024 + C151791 * C574) *
                         C152080 * C31624) *
                        C2216 +
                    ((C31628 * C551 + C32025 + C32025 + C151791 * C575) *
                         C152080 * C31624 +
                     C33001 * C31625 + C33002 * C31626 + C33003 * C31627) *
                        C152217) *
                       C152258 +
                   ((C32572 * C31624 + C32571 * C31625 + C32570 * C31626 +
                     C33004 * C31627) *
                        C2216 -
                    (C31866 * C31627 + C31865 * C31626 + C31864 * C31625 +
                     C31863 * C31624) *
                        C2215 -
                    (C33005 * C31627 + C33003 * C31626 + C33002 * C31625 +
                     C33001 * C31624) *
                        C152217) *
                       C152244 +
                   ((C31864 * C31624 + C31865 * C31625 + C31866 * C31626 +
                     C32822 * C31627) *
                        C2215 -
                    (C33483 * C31627 + C33004 * C31626 + C32570 * C31625 +
                     C32571 * C31624) *
                        C2216 +
                    (C33002 * C31624 + C33003 * C31625 + C33005 * C31626 +
                     (C31628 * C32969 + C32985 + C32985 + C151791 * C32971) *
                         C152080 * C31627) *
                        C152217) *
                       C152214) *
                  C151823) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
                  (((C31628 * C142 + C31631 + C31631 + C151791 * C158) *
                        C152080 * C31624 +
                    C31863 * C31625 + C31864 * C31626 + C31865 * C31627) *
                       C2446 -
                   (C32570 * C31627 + C32571 * C31626 + C32572 * C31625 +
                    (C31628 * C550 + C32024 + C32024 + C151791 * C574) *
                        C152080 * C31624) *
                       C2447 +
                   ((C31628 * C551 + C32025 + C32025 + C151791 * C575) *
                        C152080 * C31624 +
                    C33001 * C31625 + C33002 * C31626 + C33003 * C31627) *
                       C2448 -
                   ((C31628 * C27085 + C33861 + C33861 + C151791 * C27089) *
                        C152080 * C31627 +
                    (C31628 * C10149 + C33862 + C33862 + C151791 * C10155) *
                        C152080 * C31626 +
                    (C31628 * C2955 + C33863 + C33863 + C151791 * C2963) *
                        C152080 * C31625 +
                    (C31628 * C2454 + C33864 + C33864 + C151791 * C2470) *
                        C152080 * C31624) *
                       C2449 +
                   ((C31628 * C2455 + C33865 + C33865 + C151791 * C2471) *
                        C152080 * C31624 +
                    (C31628 * C9426 + C33866 + C33866 + C151791 * C9432) *
                        C152080 * C31625 +
                    (C31628 * C26361 + C33867 + C33867 + C151791 * C26365) *
                        C152080 * C31626 +
                    (C31628 * C33857 + C33868 + C33868 + C151791 * C33859) *
                        C152080 * C31627) *
                       C2450) *
                  C151851 * C151823) /
                     (p * q * std::sqrt(p + q));
    d2ee[338] += (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  (((((C6089 * C142 + C6096 + C6096 + C6084 * C158 +
                       C6091 * C143 + C6097 + C6097 + C6085 * C159 +
                       C6093 * C144 + C6098 + C6098 + C6086 * C160) *
                          C152080 * C152187 +
                      (C6434 + C6435 + C6436) * C152080 * C152068) *
                         C152173 -
                     ((C7453 + C7454 + C7455) * C152080 * C152068 +
                      (C6093 * C548 + C6673 + C6673 + C6086 * C572 +
                       C6091 * C549 + C6674 + C6674 + C6085 * C573 +
                       C6089 * C550 + C6675 + C6675 + C6084 * C574) *
                          C152080 * C152187) *
                         C151956) *
                        C1259 +
                    (((C7455 + C7454 + C7453) * C152080 * C152187 +
                      (C8122 + C8123 + C8124) * C152080 * C152068) *
                         C151956 -
                     ((C6437 + C6438 + C6439) * C152080 * C152068 +
                      (C6436 + C6435 + C6434) * C152080 * C152187) *
                         C152173) *
                        C1260 +
                    (((C6439 + C6438 + C6437) * C152080 * C152187 +
                      (C7841 + C7842 + C7843) * C152080 * C152068) *
                         C152173 -
                     ((C6093 * C2055 + C8095 + C8095 + C6086 * C2063 +
                       C6091 * C2054 + C8096 + C8096 + C6085 * C2062 +
                       C6089 * C2053 + C8097 + C8097 + C6084 * C2061) *
                          C152080 * C152068 +
                      (C8124 + C8123 + C8122) * C152080 * C152187) *
                         C151956) *
                        C152214) *
                       C152158 +
                   ((((C6089 * C549 + C6682 + C6682 + C6084 * C573 +
                       C6091 * C548 + C6683 + C6683 + C6085 * C572 +
                       C6093 * C547 + C6684 + C6684 + C6086 * C571) *
                          C152080 * C152187 +
                      (C7456 + C7457 + C7458) * C152080 * C152068) *
                         C151956 -
                     ((C6442 + C6441 + C6440) * C152080 * C152068 +
                      (C6093 * C145 + C6105 + C6105 + C6086 * C161 +
                       C6091 * C144 + C6106 + C6106 + C6085 * C160 +
                       C6089 * C143 + C6107 + C6107 + C6084 * C159) *
                          C152080 * C152187) *
                         C152173) *
                        C1259 +
                    (((C6440 + C6441 + C6442) * C152080 * C152187 +
                      (C6443 + C6444 + C6445) * C152080 * C152068) *
                         C152173 -
                     ((C8645 + C8646 + C8647) * C152080 * C152068 +
                      (C7458 + C7457 + C7456) * C152080 * C152187) *
                         C151956) *
                        C1260 +
                    (((C8647 + C8646 + C8645) * C152080 * C152187 +
                      (C6089 * C2054 + C8636 + C8636 + C6084 * C2062 +
                       C6091 * C2055 + C8637 + C8637 + C6085 * C2063 +
                       C6093 * C2056 + C8638 + C8638 + C6086 * C2064) *
                          C152080 * C152068) *
                         C151956 -
                     ((C8337 + C8338 + C8339) * C152080 * C152068 +
                      (C6445 + C6444 + C6443) * C152080 * C152187) *
                         C152173) *
                        C152214) *
                       C151834)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 +
                      C6091 * C143 + C6097 + C6097 + C6085 * C159 +
                      C6093 * C144 + C6098 + C6098 + C6086 * C160) *
                         C152080 * C152187 +
                     (C6434 + C6435 + C6436) * C152080 * C152068) *
                        C152173 -
                    ((C6093 * C1085 + C6670 + C6670 + C6086 * C1097 +
                      C6091 * C1084 + C6671 + C6671 + C6085 * C1096 +
                      C6089 * C1083 + C6672 + C6672 + C6084 * C1095) *
                         C152080 * C152068 +
                     (C6093 * C548 + C6673 + C6673 + C6086 * C572 +
                      C6091 * C549 + C6674 + C6674 + C6085 * C573 +
                      C6089 * C550 + C6675 + C6675 + C6084 * C574) *
                         C152080 * C152187) *
                        C151956) *
                       C151851 * C739 +
                   (((C6089 * C549 + C6682 + C6682 + C6084 * C573 +
                      C6091 * C548 + C6683 + C6683 + C6085 * C572 +
                      C6093 * C547 + C6684 + C6684 + C6086 * C571) *
                         C152080 * C152187 +
                     (C6089 * C1084 + C6685 + C6685 + C6084 * C1096 +
                      C6091 * C1085 + C6686 + C6686 + C6085 * C1097 +
                      C6093 * C1086 + C6687 + C6687 + C6086 * C1098) *
                         C152080 * C152068) *
                        C151956 -
                    ((C6442 + C6441 + C6440) * C152080 * C152068 +
                     (C6093 * C145 + C6105 + C6105 + C6086 * C161 +
                      C6091 * C144 + C6106 + C6106 + C6085 * C160 +
                      C6089 * C143 + C6107 + C6107 + C6084 * C159) *
                         C152080 * C152187) *
                        C152173) *
                       C151851 * C740 +
                   (((C6089 * C144 + C6108 + C6108 + C6084 * C160 +
                      C6091 * C145 + C6109 + C6109 + C6085 * C161 +
                      C6093 * C146 + C6110 + C6110 + C6086 * C162) *
                         C152080 * C152187 +
                     (C6446 + C6447 + C6448) * C152080 * C152068) *
                        C152173 -
                    ((C6093 * C1087 + C6694 + C6694 + C6086 * C1099 +
                      C6091 * C1086 + C6695 + C6695 + C6085 * C1098 +
                      C6089 * C1085 + C6696 + C6696 + C6084 * C1097) *
                         C152080 * C152068 +
                     (C6093 * C555 + C6697 + C6697 + C6086 * C579 +
                      C6091 * C547 + C6698 + C6698 + C6085 * C571 +
                      C6089 * C548 + C6699 + C6699 + C6084 * C572) *
                         C152080 * C152187) *
                        C151956) *
                       C151851 * C741 +
                   (((C6089 * C547 + C7112 + C7112 + C6084 * C571 +
                      C6091 * C555 + C7113 + C7113 + C6085 * C579 +
                      C6093 * C557 + C7114 + C7114 + C6086 * C581) *
                         C152080 * C152187 +
                     (C6089 * C1086 + C7115 + C7115 + C6084 * C1098 +
                      C6091 * C1087 + C7116 + C7116 + C6085 * C1099 +
                      C6093 * C1088 + C7117 + C7117 + C6086 * C1100) *
                         C152080 * C152068) *
                        C151956 -
                    ((C6917 + C6916 + C6915) * C152080 * C152068 +
                     (C6093 * C147 + C6117 + C6117 + C6086 * C163 +
                      C6091 * C146 + C6118 + C6118 + C6085 * C162 +
                      C6089 * C145 + C6119 + C6119 + C6084 * C161) *
                         C152080 * C152187) *
                        C152173) *
                       C151851 * C152218)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 +
                      C6091 * C143 + C6097 + C6097 + C6085 * C159 +
                      C6093 * C144 + C6098 + C6098 + C6086 * C160) *
                         C152080 * C152187 +
                     (C6434 + C6435 + C6436) * C152080 * C152068) *
                        C2814 -
                    ((C7453 + C7454 + C7455) * C152080 * C152068 +
                     (C6093 * C548 + C6673 + C6673 + C6086 * C572 +
                      C6091 * C549 + C6674 + C6674 + C6085 * C573 +
                      C6089 * C550 + C6675 + C6675 + C6084 * C574) *
                         C152080 * C152187) *
                        C2815 +
                    ((C6089 * C551 + C6676 + C6676 + C6084 * C575 +
                      C6091 * C552 + C6677 + C6677 + C6085 * C576 +
                      C6093 * C553 + C6678 + C6678 + C6086 * C577) *
                         C152080 * C152187 +
                     (C8119 + C8120 + C8121) * C152080 * C152068) *
                        C2816 -
                    ((C6093 * C2957 + C9436 + C9436 + C6086 * C2965 +
                      C6091 * C2956 + C9437 + C9437 + C6085 * C2964 +
                      C6089 * C2955 + C9438 + C9438 + C6084 * C2963) *
                         C152080 * C152068 +
                     (C6093 * C2452 + C9439 + C9439 + C6086 * C2468 +
                      C6091 * C2453 + C9440 + C9440 + C6085 * C2469 +
                      C6089 * C2454 + C9441 + C9441 + C6084 * C2470) *
                         C152080 * C152187) *
                        C152230) *
                       C151851 * C152158 +
                   (((C6089 * C549 + C6682 + C6682 + C6084 * C573 +
                      C6091 * C548 + C6683 + C6683 + C6085 * C572 +
                      C6093 * C547 + C6684 + C6684 + C6086 * C571) *
                         C152080 * C152187 +
                     (C7456 + C7457 + C7458) * C152080 * C152068) *
                        C2815 -
                    ((C6442 + C6441 + C6440) * C152080 * C152068 +
                     (C6093 * C145 + C6105 + C6105 + C6086 * C161 +
                      C6091 * C144 + C6106 + C6106 + C6085 * C160 +
                      C6089 * C143 + C6107 + C6107 + C6084 * C159) *
                         C152080 * C152187) *
                        C2814 -
                    ((C9753 + C9754 + C9755) * C152080 * C152068 +
                     (C6093 * C554 + C6691 + C6691 + C6086 * C578 +
                      C6091 * C553 + C6692 + C6692 + C6085 * C577 +
                      C6089 * C552 + C6693 + C6693 + C6084 * C576) *
                         C152080 * C152187) *
                        C2816 +
                    ((C6089 * C2453 + C9950 + C9950 + C6084 * C2469 +
                      C6091 * C2452 + C9951 + C9951 + C6085 * C2468 +
                      C6093 * C2451 + C9952 + C9952 + C6086 * C2467) *
                         C152080 * C152187 +
                     (C6089 * C2956 + C9953 + C9953 + C6084 * C2964 +
                      C6091 * C2957 + C9954 + C9954 + C6085 * C2965 +
                      C6093 * C2958 + C9955 + C9955 + C6086 * C2966) *
                         C152080 * C152068) *
                        C152230) *
                       C151851 * C151834)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) *
                         C152080 * C31624 +
                     C31863 * C31625 + C31864 * C31626 + C31865 * C31627) *
                        C152173 -
                    ((C31628 * C2053 + C32021 + C32021 + C151791 * C2061) *
                         C152080 * C31627 +
                     (C31628 * C1538 + C32022 + C32022 + C151791 * C1562) *
                         C152080 * C31626 +
                     (C31628 * C1083 + C32023 + C32023 + C151791 * C1095) *
                         C152080 * C31625 +
                     (C31628 * C550 + C32024 + C32024 + C151791 * C574) *
                         C152080 * C31624) *
                        C151956) *
                       C151851 * C739 +
                   (((C31628 * C549 + C32029 + C32029 + C151791 * C573) *
                         C152080 * C31624 +
                     (C31628 * C1084 + C32030 + C32030 + C151791 * C1096) *
                         C152080 * C31625 +
                     (C31628 * C1537 + C32031 + C32031 + C151791 * C1561) *
                         C152080 * C31626 +
                     (C31628 * C2054 + C32032 + C32032 + C151791 * C2062) *
                         C152080 * C31627) *
                        C151956 -
                    (C31869 * C31627 + C31868 * C31626 + C31867 * C31625 +
                     (C31628 * C143 + C31638 + C31638 + C151791 * C159) *
                         C152080 * C31624) *
                        C152173) *
                       C151851 * C740 +
                   (((C31628 * C144 + C31639 + C31639 + C151791 * C160) *
                         C152080 * C31624 +
                     C31871 * C31625 + C31872 * C31626 + C31873 * C31627) *
                        C152173 -
                    ((C31628 * C2055 + C32037 + C32037 + C151791 * C2063) *
                         C152080 * C31627 +
                     (C31628 * C1536 + C32038 + C32038 + C151791 * C1560) *
                         C152080 * C31626 +
                     (C31628 * C1085 + C32039 + C32039 + C151791 * C1097) *
                         C152080 * C31625 +
                     (C31628 * C548 + C32040 + C32040 + C151791 * C572) *
                         C152080 * C31624) *
                        C151956) *
                       C151851 * C741 +
                   (((C31628 * C547 + C32324 + C32324 + C151791 * C571) *
                         C152080 * C31624 +
                     (C31628 * C1086 + C32325 + C32325 + C151791 * C1098) *
                         C152080 * C31625 +
                     (C31628 * C1535 + C32326 + C32326 + C151791 * C1559) *
                         C152080 * C31626 +
                     (C31628 * C2056 + C32327 + C32327 + C151791 * C2064) *
                         C152080 * C31627) *
                        C151956 -
                    (C32193 * C31627 + C32192 * C31626 + C32191 * C31625 +
                     (C31628 * C145 + C31646 + C31646 + C151791 * C161) *
                         C152080 * C31624) *
                        C152173) *
                       C151851 * C152218)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) *
                          C152080 * C31624 +
                      C31863 * C31625 + C31864 * C31626 + C31865 * C31627) *
                         C152173 -
                     (C32570 * C31627 + C32571 * C31626 + C32572 * C31625 +
                      (C31628 * C550 + C32024 + C32024 + C151791 * C574) *
                          C152080 * C31624) *
                         C151956) *
                        C1259 +
                    ((C32572 * C31624 + C32571 * C31625 + C32570 * C31626 +
                      C33004 * C31627) *
                         C151956 -
                     (C31866 * C31627 + C31865 * C31626 + C31864 * C31625 +
                      C31863 * C31624) *
                         C152173) *
                        C1260 +
                    ((C31864 * C31624 + C31865 * C31625 + C31866 * C31626 +
                      C32822 * C31627) *
                         C152173 -
                     ((C31628 * C25783 + C32984 + C32984 + C151791 * C25787) *
                          C152080 * C31627 +
                      C33004 * C31626 + C32570 * C31625 + C32571 * C31624) *
                         C151956) *
                        C152214) *
                       C152158 +
                   ((((C31628 * C549 + C32029 + C32029 + C151791 * C573) *
                          C152080 * C31624 +
                      C32573 * C31625 + C32574 * C31626 + C32575 * C31627) *
                         C151956 -
                     (C31869 * C31627 + C31868 * C31626 + C31867 * C31625 +
                      (C31628 * C143 + C31638 + C31638 + C151791 * C159) *
                          C152080 * C31624) *
                         C152173) *
                        C1259 +
                    ((C31867 * C31624 + C31868 * C31625 + C31869 * C31626 +
                      C31870 * C31627) *
                         C152173 -
                     (C33343 * C31627 + C32575 * C31626 + C32574 * C31625 +
                      C32573 * C31624) *
                         C151956) *
                        C1260 +
                    ((C32574 * C31624 + C32575 * C31625 + C33343 * C31626 +
                      (C31628 * C25784 + C33339 + C33339 + C151791 * C25788) *
                          C152080 * C31627) *
                         C151956 -
                     (C33142 * C31627 + C31870 * C31626 + C31869 * C31625 +
                      C31868 * C31624) *
                         C152173) *
                        C152214) *
                       C151834)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) *
                         C152080 * C31624 +
                     C31863 * C31625 + C31864 * C31626 + C31865 * C31627) *
                        C2814 -
                    (C32570 * C31627 + C32571 * C31626 + C32572 * C31625 +
                     (C31628 * C550 + C32024 + C32024 + C151791 * C574) *
                         C152080 * C31624) *
                        C2815 +
                    ((C31628 * C551 + C32025 + C32025 + C151791 * C575) *
                         C152080 * C31624 +
                     C33001 * C31625 + C33002 * C31626 + C33003 * C31627) *
                        C2816 -
                    ((C31628 * C27085 + C33861 + C33861 + C151791 * C27089) *
                         C152080 * C31627 +
                     (C31628 * C10149 + C33862 + C33862 + C151791 * C10155) *
                         C152080 * C31626 +
                     (C31628 * C2955 + C33863 + C33863 + C151791 * C2963) *
                         C152080 * C31625 +
                     (C31628 * C2454 + C33864 + C33864 + C151791 * C2470) *
                         C152080 * C31624) *
                        C152230) *
                       C151851 * C152158 +
                   (((C31628 * C549 + C32029 + C32029 + C151791 * C573) *
                         C152080 * C31624 +
                     C32573 * C31625 + C32574 * C31626 + C32575 * C31627) *
                        C2815 -
                    (C31869 * C31627 + C31868 * C31626 + C31867 * C31625 +
                     (C31628 * C143 + C31638 + C31638 + C151791 * C159) *
                         C152080 * C31624) *
                        C2814 -
                    (C34079 * C31627 + C34080 * C31626 + C34081 * C31625 +
                     (C31628 * C552 + C32036 + C32036 + C151791 * C576) *
                         C152080 * C31624) *
                        C2816 +
                    ((C31628 * C2453 + C34212 + C34212 + C151791 * C2469) *
                         C152080 * C31624 +
                     (C31628 * C2956 + C34213 + C34213 + C151791 * C2964) *
                         C152080 * C31625 +
                     (C31628 * C10150 + C34214 + C34214 + C151791 * C10156) *
                         C152080 * C31626 +
                     (C31628 * C27086 + C34215 + C34215 + C151791 * C27090) *
                         C152080 * C31627) *
                        C152230) *
                       C151851 * C151834)) /
                     (p * q * std::sqrt(p + q));
    d2ee[339] += (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
                  ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 +
                      C6091 * C143 + C6097 + C6097 + C6085 * C159 +
                      C6093 * C144 + C6098 + C6098 + C6086 * C160) *
                         C152080 * C152187 +
                     (C6434 + C6435 + C6436) * C152080 * C152068) *
                        C151869 * C152258 -
                    ((C6437 + C6438 + C6439) * C152080 * C152068 +
                     (C6436 + C6435 + C6434) * C152080 * C152187) *
                        C151869 * C152244 +
                    ((C6439 + C6438 + C6437) * C152080 * C152187 +
                     (C6089 * C1356 + C6359 + C6359 + C6084 * C1372 +
                      C6091 * C1355 + C6360 + C6360 + C6085 * C1371 +
                      C6093 * C1354 + C6361 + C6361 + C6086 * C1370) *
                         C152080 * C152068) *
                        C151869 * C152214) *
                       C335 +
                   (((C6440 + C6441 + C6442) * C152080 * C152187 +
                     (C6443 + C6444 + C6445) * C152080 * C152068) *
                        C151869 * C152244 -
                    ((C6442 + C6441 + C6440) * C152080 * C152068 +
                     (C6093 * C145 + C6105 + C6105 + C6086 * C161 +
                      C6091 * C144 + C6106 + C6106 + C6085 * C160 +
                      C6089 * C143 + C6107 + C6107 + C6084 * C159) *
                         C152080 * C152187) *
                        C151869 * C152258 -
                    ((C6093 * C1353 + C6377 + C6377 + C6086 * C1369 +
                      C6091 * C1354 + C6378 + C6378 + C6085 * C1370 +
                      C6089 * C1355 + C6379 + C6379 + C6084 * C1371) *
                         C152080 * C152068 +
                     (C6445 + C6444 + C6443) * C152080 * C152187) *
                        C151869 * C152214) *
                       C336 +
                   (((C6089 * C144 + C6108 + C6108 + C6084 * C160 +
                      C6091 * C145 + C6109 + C6109 + C6085 * C161 +
                      C6093 * C146 + C6110 + C6110 + C6086 * C162) *
                         C152080 * C152187 +
                     (C6446 + C6447 + C6448) * C152080 * C152068) *
                        C151869 * C152258 -
                    ((C6449 + C6450 + C6451) * C152080 * C152068 +
                     (C6448 + C6447 + C6446) * C152080 * C152187) *
                        C151869 * C152244 +
                    ((C6451 + C6450 + C6449) * C152080 * C152187 +
                     (C6089 * C1354 + C6395 + C6395 + C6084 * C1370 +
                      C6091 * C1353 + C6396 + C6396 + C6085 * C1369 +
                      C6093 * C1715 + C6397 + C6397 + C6086 * C1717) *
                         C152080 * C152068) *
                        C151869 * C152214) *
                       C152208)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
                  (((C6089 * C142 + C6096 + C6096 + C6084 * C158 +
                     C6091 * C143 + C6097 + C6097 + C6085 * C159 +
                     C6093 * C144 + C6098 + C6098 + C6086 * C160) *
                        C152080 * C152187 +
                    (C6089 * C341 + C6099 + C6099 + C6084 * C365 +
                     C6091 * C340 + C6100 + C6100 + C6085 * C364 +
                     C6093 * C339 + C6101 + C6101 + C6086 * C363) *
                        C152080 * C152068) *
                       C151869 * C151851 * C129 -
                   ((C6093 * C338 + C6102 + C6102 + C6086 * C362 +
                     C6091 * C339 + C6103 + C6103 + C6085 * C363 +
                     C6089 * C340 + C6104 + C6104 + C6084 * C364) *
                        C152080 * C152068 +
                    (C6093 * C145 + C6105 + C6105 + C6086 * C161 +
                     C6091 * C144 + C6106 + C6106 + C6085 * C160 +
                     C6089 * C143 + C6107 + C6107 + C6084 * C159) *
                        C152080 * C152187) *
                       C151869 * C151851 * C130 +
                   ((C6089 * C144 + C6108 + C6108 + C6084 * C160 +
                     C6091 * C145 + C6109 + C6109 + C6085 * C161 +
                     C6093 * C146 + C6110 + C6110 + C6086 * C162) *
                        C152080 * C152187 +
                    (C6089 * C339 + C6111 + C6111 + C6084 * C363 +
                     C6091 * C338 + C6112 + C6112 + C6085 * C362 +
                     C6093 * C346 + C6113 + C6113 + C6086 * C370) *
                        C152080 * C152068) *
                       C151869 * C151851 * C131 -
                   ((C6093 * C348 + C6114 + C6114 + C6086 * C372 +
                     C6091 * C346 + C6115 + C6115 + C6085 * C370 +
                     C6089 * C338 + C6116 + C6116 + C6084 * C362) *
                        C152080 * C152068 +
                    (C6093 * C147 + C6117 + C6117 + C6086 * C163 +
                     C6091 * C146 + C6118 + C6118 + C6085 * C162 +
                     C6089 * C145 + C6119 + C6119 + C6084 * C161) *
                        C152080 * C152187) *
                       C151869 * C151851 * C132 +
                   ((C6089 * C146 + C6120 + C6120 + C6084 * C162 +
                     C6091 * C147 + C6121 + C6121 + C6085 * C163 +
                     C6093 * C148 + C6122 + C6122 + C6086 * C164) *
                        C152080 * C152187 +
                    (C6089 * C346 + C6123 + C6123 + C6084 * C370 +
                     C6091 * C348 + C6124 + C6124 + C6085 * C372 +
                     C6093 * C743 + C6125 + C6125 + C6086 * C745) *
                        C152080 * C152068) *
                       C151869 * C151851 * C133)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
                  ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 +
                      C6091 * C143 + C6097 + C6097 + C6085 * C159 +
                      C6093 * C144 + C6098 + C6098 + C6086 * C160) *
                         C152080 * C152187 +
                     (C6434 + C6435 + C6436) * C152080 * C152068) *
                        C151869 * C1259 -
                    ((C6437 + C6438 + C6439) * C152080 * C152068 +
                     (C6436 + C6435 + C6434) * C152080 * C152187) *
                        C151869 * C1260 +
                    ((C6439 + C6438 + C6437) * C152080 * C152187 +
                     (C6089 * C1356 + C6359 + C6359 + C6084 * C1372 +
                      C6091 * C1355 + C6360 + C6360 + C6085 * C1371 +
                      C6093 * C1354 + C6361 + C6361 + C6086 * C1370) *
                         C152080 * C152068) *
                        C151869 * C152214) *
                       C152255 +
                   (((C6440 + C6441 + C6442) * C152080 * C152187 +
                     (C6443 + C6444 + C6445) * C152080 * C152068) *
                        C151869 * C1260 -
                    ((C6442 + C6441 + C6440) * C152080 * C152068 +
                     (C6093 * C145 + C6105 + C6105 + C6086 * C161 +
                      C6091 * C144 + C6106 + C6106 + C6085 * C160 +
                      C6089 * C143 + C6107 + C6107 + C6084 * C159) *
                         C152080 * C152187) *
                        C151869 * C1259 -
                    ((C6093 * C1353 + C6377 + C6377 + C6086 * C1369 +
                      C6091 * C1354 + C6378 + C6378 + C6085 * C1370 +
                      C6089 * C1355 + C6379 + C6379 + C6084 * C1371) *
                         C152080 * C152068 +
                     (C6445 + C6444 + C6443) * C152080 * C152187) *
                        C151869 * C152214) *
                       C152240 +
                   (((C6089 * C144 + C6108 + C6108 + C6084 * C160 +
                      C6091 * C145 + C6109 + C6109 + C6085 * C161 +
                      C6093 * C146 + C6110 + C6110 + C6086 * C162) *
                         C152080 * C152187 +
                     (C6446 + C6447 + C6448) * C152080 * C152068) *
                        C151869 * C1259 -
                    ((C6449 + C6450 + C6451) * C152080 * C152068 +
                     (C6448 + C6447 + C6446) * C152080 * C152187) *
                        C151869 * C1260 +
                    ((C6451 + C6450 + C6449) * C152080 * C152187 +
                     (C6089 * C1354 + C6395 + C6395 + C6084 * C1370 +
                      C6091 * C1353 + C6396 + C6396 + C6085 * C1369 +
                      C6093 * C1715 + C6397 + C6397 + C6086 * C1717) *
                         C152080 * C152068) *
                        C151869 * C152214) *
                       C152208)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
                  (((C6089 * C142 + C6096 + C6096 + C6084 * C158 +
                     C6091 * C143 + C6097 + C6097 + C6085 * C159 +
                     C6093 * C144 + C6098 + C6098 + C6086 * C160) *
                        C152080 * C152187 +
                    (C6434 + C6435 + C6436) * C152080 * C152068) *
                       C151869 * C1347 -
                   ((C6437 + C6438 + C6439) * C152080 * C152068 +
                    (C6436 + C6435 + C6434) * C152080 * C152187) *
                       C151869 * C1348 +
                   ((C6439 + C6438 + C6437) * C152080 * C152187 +
                    (C7841 + C7842 + C7843) * C152080 * C152068) *
                       C151869 * C1349 -
                   ((C7844 + C7845 + C7846) * C152080 * C152068 +
                    (C7843 + C7842 + C7841) * C152080 * C152187) *
                       C151869 * C1350 +
                   ((C7846 + C7845 + C7844) * C152080 * C152187 +
                    (C6089 * C7801 + C7826 + C7826 + C6084 * C7807 +
                     C6091 * C7802 + C7827 + C7827 + C6085 * C7808 +
                     C6093 * C7803 + C7828 + C7828 + C6086 * C7809) *
                        C152080 * C152068) *
                       C151869 * C1351) *
                  C151823) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 +
                      C6091 * C143 + C6097 + C6097 + C6085 * C159 +
                      C6093 * C144 + C6098 + C6098 + C6086 * C160) *
                         C152080 * C152187 +
                     (C6434 + C6435 + C6436) * C152080 * C152068) *
                        C2215 -
                    ((C7453 + C7454 + C7455) * C152080 * C152068 +
                     (C6093 * C548 + C6673 + C6673 + C6086 * C572 +
                      C6091 * C549 + C6674 + C6674 + C6085 * C573 +
                      C6089 * C550 + C6675 + C6675 + C6084 * C574) *
                         C152080 * C152187) *
                        C2216 +
                    ((C6089 * C551 + C6676 + C6676 + C6084 * C575 +
                      C6091 * C552 + C6677 + C6677 + C6085 * C576 +
                      C6093 * C553 + C6678 + C6678 + C6086 * C577) *
                         C152080 * C152187 +
                     (C8119 + C8120 + C8121) * C152080 * C152068) *
                        C152217) *
                       C151851 * C152255 +
                   (((C6089 * C549 + C6682 + C6682 + C6084 * C573 +
                      C6091 * C548 + C6683 + C6683 + C6085 * C572 +
                      C6093 * C547 + C6684 + C6684 + C6086 * C571) *
                         C152080 * C152187 +
                     (C7456 + C7457 + C7458) * C152080 * C152068) *
                        C2216 -
                    ((C6442 + C6441 + C6440) * C152080 * C152068 +
                     (C6093 * C145 + C6105 + C6105 + C6086 * C161 +
                      C6091 * C144 + C6106 + C6106 + C6085 * C160 +
                      C6089 * C143 + C6107 + C6107 + C6084 * C159) *
                         C152080 * C152187) *
                        C2215 -
                    ((C6093 * C1531 + C6688 + C6688 + C6086 * C1555 +
                      C6091 * C1532 + C6689 + C6689 + C6085 * C1556 +
                      C6089 * C1533 + C6690 + C6690 + C6084 * C1557) *
                         C152080 * C152068 +
                     (C6093 * C554 + C6691 + C6691 + C6086 * C578 +
                      C6091 * C553 + C6692 + C6692 + C6085 * C577 +
                      C6089 * C552 + C6693 + C6693 + C6084 * C576) *
                         C152080 * C152187) *
                        C152217) *
                       C151851 * C152240 +
                   (((C6089 * C144 + C6108 + C6108 + C6084 * C160 +
                      C6091 * C145 + C6109 + C6109 + C6085 * C161 +
                      C6093 * C146 + C6110 + C6110 + C6086 * C162) *
                         C152080 * C152187 +
                     (C6446 + C6447 + C6448) * C152080 * C152068) *
                        C2215 -
                    ((C7459 + C7460 + C7461) * C152080 * C152068 +
                     (C6093 * C555 + C6697 + C6697 + C6086 * C579 +
                      C6091 * C547 + C6698 + C6698 + C6085 * C571 +
                      C6089 * C548 + C6699 + C6699 + C6084 * C572) *
                         C152080 * C152187) *
                        C2216 +
                    ((C6089 * C553 + C6700 + C6700 + C6084 * C577 +
                      C6091 * C554 + C6701 + C6701 + C6085 * C578 +
                      C6093 * C556 + C6702 + C6702 + C6086 * C580) *
                         C152080 * C152187 +
                     (C6089 * C1532 + C6703 + C6703 + C6084 * C1556 +
                      C6091 * C1531 + C6704 + C6704 + C6085 * C1555 +
                      C6093 * C2677 + C6705 + C6705 + C6086 * C2679) *
                         C152080 * C152068) *
                        C152217) *
                       C151851 * C152208)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 +
                      C6091 * C143 + C6097 + C6097 + C6085 * C159 +
                      C6093 * C144 + C6098 + C6098 + C6086 * C160) *
                         C152080 * C152187 +
                     (C6434 + C6435 + C6436) * C152080 * C152068) *
                        C2215 -
                    ((C7453 + C7454 + C7455) * C152080 * C152068 +
                     (C6093 * C548 + C6673 + C6673 + C6086 * C572 +
                      C6091 * C549 + C6674 + C6674 + C6085 * C573 +
                      C6089 * C550 + C6675 + C6675 + C6084 * C574) *
                         C152080 * C152187) *
                        C2216 +
                    ((C6089 * C551 + C6676 + C6676 + C6084 * C575 +
                      C6091 * C552 + C6677 + C6677 + C6085 * C576 +
                      C6093 * C553 + C6678 + C6678 + C6086 * C577) *
                         C152080 * C152187 +
                     (C8119 + C8120 + C8121) * C152080 * C152068) *
                        C152217) *
                       C152258 +
                   (((C7455 + C7454 + C7453) * C152080 * C152187 +
                     (C8122 + C8123 + C8124) * C152080 * C152068) *
                        C2216 -
                    ((C6437 + C6438 + C6439) * C152080 * C152068 +
                     (C6436 + C6435 + C6434) * C152080 * C152187) *
                        C2215 -
                    ((C8125 + C8126 + C8127) * C152080 * C152068 +
                     (C8121 + C8120 + C8119) * C152080 * C152187) *
                        C152217) *
                       C152244 +
                   (((C6439 + C6438 + C6437) * C152080 * C152187 +
                     (C7841 + C7842 + C7843) * C152080 * C152068) *
                        C2215 -
                    ((C8866 + C8867 + C8868) * C152080 * C152068 +
                     (C8124 + C8123 + C8122) * C152080 * C152187) *
                        C2216 +
                    ((C8127 + C8126 + C8125) * C152080 * C152187 +
                     (C6089 * C8064 + C8098 + C8098 + C6084 * C8070 +
                      C6091 * C8065 + C8099 + C8099 + C6085 * C8071 +
                      C6093 * C8066 + C8100 + C8100 + C6086 * C8072) *
                         C152080 * C152068) *
                        C152217) *
                       C152214) *
                  C151823) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
                  (((C31628 * C142 + C31631 + C31631 + C151791 * C158) *
                        C152080 * C31624 +
                    (C31628 * C341 + C31632 + C31632 + C151791 * C365) *
                        C152080 * C31625 +
                    (C31628 * C342 + C31633 + C31633 + C151791 * C366) *
                        C152080 * C31626 +
                    (C31628 * C1356 + C31634 + C31634 + C151791 * C1372) *
                        C152080 * C31627) *
                       C151869 * C151851 * C129 -
                   ((C31628 * C1355 + C31635 + C31635 + C151791 * C1371) *
                        C152080 * C31627 +
                    (C31628 * C343 + C31636 + C31636 + C151791 * C367) *
                        C152080 * C31626 +
                    (C31628 * C340 + C31637 + C31637 + C151791 * C364) *
                        C152080 * C31625 +
                    (C31628 * C143 + C31638 + C31638 + C151791 * C159) *
                        C152080 * C31624) *
                       C151869 * C151851 * C130 +
                   ((C31628 * C144 + C31639 + C31639 + C151791 * C160) *
                        C152080 * C31624 +
                    (C31628 * C339 + C31640 + C31640 + C151791 * C363) *
                        C152080 * C31625 +
                    (C31628 * C344 + C31641 + C31641 + C151791 * C368) *
                        C152080 * C31626 +
                    (C31628 * C1354 + C31642 + C31642 + C151791 * C1370) *
                        C152080 * C31627) *
                       C151869 * C151851 * C131 -
                   ((C31628 * C1353 + C31643 + C31643 + C151791 * C1369) *
                        C152080 * C31627 +
                    (C31628 * C345 + C31644 + C31644 + C151791 * C369) *
                        C152080 * C31626 +
                    (C31628 * C338 + C31645 + C31645 + C151791 * C362) *
                        C152080 * C31625 +
                    (C31628 * C145 + C31646 + C31646 + C151791 * C161) *
                        C152080 * C31624) *
                       C151869 * C151851 * C132 +
                   ((C31628 * C146 + C31647 + C31647 + C151791 * C162) *
                        C152080 * C31624 +
                    (C31628 * C346 + C31648 + C31648 + C151791 * C370) *
                        C152080 * C31625 +
                    (C31628 * C347 + C31649 + C31649 + C151791 * C371) *
                        C152080 * C31626 +
                    (C31628 * C1715 + C31650 + C31650 + C151791 * C1717) *
                        C152080 * C31627) *
                       C151869 * C151851 * C133)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
                  ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) *
                         C152080 * C31624 +
                     C31863 * C31625 + C31864 * C31626 + C31865 * C31627) *
                        C151869 * C152258 -
                    (C31866 * C31627 + C31865 * C31626 + C31864 * C31625 +
                     C31863 * C31624) *
                        C151869 * C152244 +
                    (C31864 * C31624 + C31865 * C31625 + C31866 * C31626 +
                     (C31628 * C7801 + C31806 + C31806 + C151791 * C7807) *
                         C152080 * C31627) *
                        C151869 * C152214) *
                       C335 +
                   ((C31867 * C31624 + C31868 * C31625 + C31869 * C31626 +
                     C31870 * C31627) *
                        C151869 * C152244 -
                    (C31869 * C31627 + C31868 * C31626 + C31867 * C31625 +
                     (C31628 * C143 + C31638 + C31638 + C151791 * C159) *
                         C152080 * C31624) *
                        C151869 * C152258 -
                    ((C31628 * C7802 + C31816 + C31816 + C151791 * C7808) *
                         C152080 * C31627 +
                     C31870 * C31626 + C31869 * C31625 + C31868 * C31624) *
                        C151869 * C152214) *
                       C336 +
                   (((C31628 * C144 + C31639 + C31639 + C151791 * C160) *
                         C152080 * C31624 +
                     C31871 * C31625 + C31872 * C31626 + C31873 * C31627) *
                        C151869 * C152258 -
                    (C31874 * C31627 + C31873 * C31626 + C31872 * C31625 +
                     C31871 * C31624) *
                        C151869 * C152244 +
                    (C31872 * C31624 + C31873 * C31625 + C31874 * C31626 +
                     (C31628 * C7803 + C31826 + C31826 + C151791 * C7809) *
                         C152080 * C31627) *
                        C151869 * C152214) *
                       C152208)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
                  ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) *
                         C152080 * C31624 +
                     C31863 * C31625 + C31864 * C31626 + C31865 * C31627) *
                        C151869 * C1259 -
                    (C31866 * C31627 + C31865 * C31626 + C31864 * C31625 +
                     C31863 * C31624) *
                        C151869 * C1260 +
                    (C31864 * C31624 + C31865 * C31625 + C31866 * C31626 +
                     (C31628 * C7801 + C31806 + C31806 + C151791 * C7807) *
                         C152080 * C31627) *
                        C151869 * C152214) *
                       C152255 +
                   ((C31867 * C31624 + C31868 * C31625 + C31869 * C31626 +
                     C31870 * C31627) *
                        C151869 * C1260 -
                    (C31869 * C31627 + C31868 * C31626 + C31867 * C31625 +
                     (C31628 * C143 + C31638 + C31638 + C151791 * C159) *
                         C152080 * C31624) *
                        C151869 * C1259 -
                    ((C31628 * C7802 + C31816 + C31816 + C151791 * C7808) *
                         C152080 * C31627 +
                     C31870 * C31626 + C31869 * C31625 + C31868 * C31624) *
                        C151869 * C152214) *
                       C152240 +
                   (((C31628 * C144 + C31639 + C31639 + C151791 * C160) *
                         C152080 * C31624 +
                     C31871 * C31625 + C31872 * C31626 + C31873 * C31627) *
                        C151869 * C1259 -
                    (C31874 * C31627 + C31873 * C31626 + C31872 * C31625 +
                     C31871 * C31624) *
                        C151869 * C1260 +
                    (C31872 * C31624 + C31873 * C31625 + C31874 * C31626 +
                     (C31628 * C7803 + C31826 + C31826 + C151791 * C7809) *
                         C152080 * C31627) *
                        C151869 * C152214) *
                       C152208)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
                  (((C31628 * C142 + C31631 + C31631 + C151791 * C158) *
                        C152080 * C31624 +
                    C31863 * C31625 + C31864 * C31626 + C31865 * C31627) *
                       C151869 * C1347 -
                   (C31866 * C31627 + C31865 * C31626 + C31864 * C31625 +
                    C31863 * C31624) *
                       C151869 * C1348 +
                   (C31864 * C31624 + C31865 * C31625 + C31866 * C31626 +
                    C32822 * C31627) *
                       C151869 * C1349 -
                   (C32823 * C31627 + C32822 * C31626 + C31866 * C31625 +
                    C31865 * C31624) *
                       C151869 * C1350 +
                   (C31866 * C31624 + C32822 * C31625 + C32823 * C31626 +
                    (C31628 * C32806 + C32815 + C32815 + C151791 * C32808) *
                        C152080 * C31627) *
                       C151869 * C1351) *
                  C151823) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) *
                         C152080 * C31624 +
                     C31863 * C31625 + C31864 * C31626 + C31865 * C31627) *
                        C2215 -
                    (C32570 * C31627 + C32571 * C31626 + C32572 * C31625 +
                     (C31628 * C550 + C32024 + C32024 + C151791 * C574) *
                         C152080 * C31624) *
                        C2216 +
                    ((C31628 * C551 + C32025 + C32025 + C151791 * C575) *
                         C152080 * C31624 +
                     C33001 * C31625 + C33002 * C31626 + C33003 * C31627) *
                        C152217) *
                       C151851 * C152255 +
                   (((C31628 * C549 + C32029 + C32029 + C151791 * C573) *
                         C152080 * C31624 +
                     C32573 * C31625 + C32574 * C31626 + C32575 * C31627) *
                        C2216 -
                    (C31869 * C31627 + C31868 * C31626 + C31867 * C31625 +
                     (C31628 * C143 + C31638 + C31638 + C151791 * C159) *
                         C152080 * C31624) *
                        C2215 -
                    ((C31628 * C8065 + C32033 + C32033 + C151791 * C8071) *
                         C152080 * C31627 +
                     (C31628 * C1540 + C32034 + C32034 + C151791 * C1564) *
                         C152080 * C31626 +
                     (C31628 * C1533 + C32035 + C32035 + C151791 * C1557) *
                         C152080 * C31625 +
                     (C31628 * C552 + C32036 + C32036 + C151791 * C576) *
                         C152080 * C31624) *
                        C152217) *
                       C151851 * C152240 +
                   (((C31628 * C144 + C31639 + C31639 + C151791 * C160) *
                         C152080 * C31624 +
                     C31871 * C31625 + C31872 * C31626 + C31873 * C31627) *
                        C2215 -
                    (C32576 * C31627 + C32577 * C31626 + C32578 * C31625 +
                     (C31628 * C548 + C32040 + C32040 + C151791 * C572) *
                         C152080 * C31624) *
                        C2216 +
                    ((C31628 * C553 + C32041 + C32041 + C151791 * C577) *
                         C152080 * C31624 +
                     (C31628 * C1532 + C32042 + C32042 + C151791 * C1556) *
                         C152080 * C31625 +
                     (C31628 * C1541 + C32043 + C32043 + C151791 * C1565) *
                         C152080 * C31626 +
                     (C31628 * C8066 + C32044 + C32044 + C151791 * C8072) *
                         C152080 * C31627) *
                        C152217) *
                       C151851 * C152208)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) *
                         C152080 * C31624 +
                     C31863 * C31625 + C31864 * C31626 + C31865 * C31627) *
                        C2215 -
                    (C32570 * C31627 + C32571 * C31626 + C32572 * C31625 +
                     (C31628 * C550 + C32024 + C32024 + C151791 * C574) *
                         C152080 * C31624) *
                        C2216 +
                    ((C31628 * C551 + C32025 + C32025 + C151791 * C575) *
                         C152080 * C31624 +
                     C33001 * C31625 + C33002 * C31626 + C33003 * C31627) *
                        C152217) *
                       C152258 +
                   ((C32572 * C31624 + C32571 * C31625 + C32570 * C31626 +
                     C33004 * C31627) *
                        C2216 -
                    (C31866 * C31627 + C31865 * C31626 + C31864 * C31625 +
                     C31863 * C31624) *
                        C2215 -
                    (C33005 * C31627 + C33003 * C31626 + C33002 * C31625 +
                     C33001 * C31624) *
                        C152217) *
                       C152244 +
                   ((C31864 * C31624 + C31865 * C31625 + C31866 * C31626 +
                     C32822 * C31627) *
                        C2215 -
                    (C33483 * C31627 + C33004 * C31626 + C32570 * C31625 +
                     C32571 * C31624) *
                        C2216 +
                    (C33002 * C31624 + C33003 * C31625 + C33005 * C31626 +
                     (C31628 * C32969 + C32985 + C32985 + C151791 * C32971) *
                         C152080 * C31627) *
                        C152217) *
                       C152214) *
                  C151823) /
                     (p * q * std::sqrt(p + q));
    d2ee[340] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C6089 * C142 + C6096 + C6096 + C6084 * C158 +
                       C6091 * C143 + C6097 + C6097 + C6085 * C159 +
                       C6093 * C144 + C6098 + C6098 + C6086 * C160) *
                          C152080 * C152187 +
                      (C6434 + C6435 + C6436) * C152080 * C152068) *
                         C4107 -
                     ((C7453 + C7454 + C7455) * C152080 * C152068 +
                      (C6093 * C548 + C6673 + C6673 + C6086 * C572 +
                       C6091 * C549 + C6674 + C6674 + C6085 * C573 +
                       C6089 * C550 + C6675 + C6675 + C6084 * C574) *
                          C152080 * C152187) *
                         C151956) *
                        C152172 +
                    (((C7455 + C7454 + C7453) * C152080 * C152187 +
                      (C8122 + C8123 + C8124) * C152080 * C152068) *
                         C151956 -
                     ((C6437 + C6438 + C6439) * C152080 * C152068 +
                      (C6436 + C6435 + C6434) * C152080 * C152187) *
                         C4107) *
                        C151914) *
                       C151828 +
                   ((((C6089 * C549 + C6682 + C6682 + C6084 * C573 +
                       C6091 * C548 + C6683 + C6683 + C6085 * C572 +
                       C6093 * C547 + C6684 + C6684 + C6086 * C571) *
                          C152080 * C152187 +
                      (C7456 + C7457 + C7458) * C152080 * C152068) *
                         C151956 -
                     ((C6442 + C6441 + C6440) * C152080 * C152068 +
                      (C6093 * C145 + C6105 + C6105 + C6086 * C161 +
                       C6091 * C144 + C6106 + C6106 + C6085 * C160 +
                       C6089 * C143 + C6107 + C6107 + C6084 * C159) *
                          C152080 * C152187) *
                         C4107) *
                        C152172 +
                    (((C6440 + C6441 + C6442) * C152080 * C152187 +
                      (C6443 + C6444 + C6445) * C152080 * C152068) *
                         C4107 -
                     ((C8645 + C8646 + C8647) * C152080 * C152068 +
                      (C7458 + C7457 + C7456) * C152080 * C152187) *
                         C151956) *
                        C151914) *
                       C151837 +
                   ((((C6089 * C144 + C6108 + C6108 + C6084 * C160 +
                       C6091 * C145 + C6109 + C6109 + C6085 * C161 +
                       C6093 * C146 + C6110 + C6110 + C6086 * C162) *
                          C152080 * C152187 +
                      (C6446 + C6447 + C6448) * C152080 * C152068) *
                         C4107 -
                     ((C7459 + C7460 + C7461) * C152080 * C152068 +
                      (C6093 * C555 + C6697 + C6697 + C6086 * C579 +
                       C6091 * C547 + C6698 + C6698 + C6085 * C571 +
                       C6089 * C548 + C6699 + C6699 + C6084 * C572) *
                          C152080 * C152187) *
                         C151956) *
                        C152172 +
                    (((C7461 + C7460 + C7459) * C152080 * C152187 +
                      (C6089 * C1536 + C7432 + C7432 + C6084 * C1560 +
                       C6091 * C1535 + C7433 + C7433 + C6085 * C1559 +
                       C6093 * C1916 + C7434 + C7434 + C6086 * C1918) *
                          C152080 * C152068) *
                         C151956 -
                     ((C6449 + C6450 + C6451) * C152080 * C152068 +
                      (C6448 + C6447 + C6446) * C152080 * C152187) *
                         C4107) *
                        C151914) *
                       C3588)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) *
                          C152080 * C31624 +
                      C31863 * C31625 + C31864 * C31626 + C31865 * C31627) *
                         C4107 -
                     (C32570 * C31627 + C32571 * C31626 + C32572 * C31625 +
                      (C31628 * C550 + C32024 + C32024 + C151791 * C574) *
                          C152080 * C31624) *
                         C151956) *
                        C152172 +
                    ((C32572 * C31624 + C32571 * C31625 + C32570 * C31626 +
                      C33004 * C31627) *
                         C151956 -
                     (C31866 * C31627 + C31865 * C31626 + C31864 * C31625 +
                      C31863 * C31624) *
                         C4107) *
                        C151914) *
                       C151828 +
                   ((((C31628 * C549 + C32029 + C32029 + C151791 * C573) *
                          C152080 * C31624 +
                      C32573 * C31625 + C32574 * C31626 + C32575 * C31627) *
                         C151956 -
                     (C31869 * C31627 + C31868 * C31626 + C31867 * C31625 +
                      (C31628 * C143 + C31638 + C31638 + C151791 * C159) *
                          C152080 * C31624) *
                         C4107) *
                        C152172 +
                    ((C31867 * C31624 + C31868 * C31625 + C31869 * C31626 +
                      C31870 * C31627) *
                         C4107 -
                     (C33343 * C31627 + C32575 * C31626 + C32574 * C31625 +
                      C32573 * C31624) *
                         C151956) *
                        C151914) *
                       C151837 +
                   ((((C31628 * C144 + C31639 + C31639 + C151791 * C160) *
                          C152080 * C31624 +
                      C31871 * C31625 + C31872 * C31626 + C31873 * C31627) *
                         C4107 -
                     (C32576 * C31627 + C32577 * C31626 + C32578 * C31625 +
                      (C31628 * C548 + C32040 + C32040 + C151791 * C572) *
                          C152080 * C31624) *
                         C151956) *
                        C152172 +
                    ((C32578 * C31624 + C32577 * C31625 + C32576 * C31626 +
                      (C31628 * C8843 + C32542 + C32542 + C151791 * C8849) *
                          C152080 * C31627) *
                         C151956 -
                     (C31874 * C31627 + C31873 * C31626 + C31872 * C31625 +
                      C31871 * C31624) *
                         C4107) *
                        C151914) *
                       C3588)) /
                     (p * q * std::sqrt(p + q));
    d2ee[341] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C6089 * C142 + C6096 + C6096 + C6084 * C158 +
                       C6091 * C143 + C6097 + C6097 + C6085 * C159 +
                       C6093 * C144 + C6098 + C6098 + C6086 * C160) *
                          C152080 * C152187 +
                      (C6434 + C6435 + C6436) * C152080 * C152068) *
                         C151952 -
                     ((C7453 + C7454 + C7455) * C152080 * C152068 +
                      (C6093 * C548 + C6673 + C6673 + C6086 * C572 +
                       C6091 * C549 + C6674 + C6674 + C6085 * C573 +
                       C6089 * C550 + C6675 + C6675 + C6084 * C574) *
                          C152080 * C152187) *
                         C151959 +
                     ((C6089 * C551 + C6676 + C6676 + C6084 * C575 +
                       C6091 * C552 + C6677 + C6677 + C6085 * C576 +
                       C6093 * C553 + C6678 + C6678 + C6086 * C577) *
                          C152080 * C152187 +
                      (C8119 + C8120 + C8121) * C152080 * C152068) *
                         C4779) *
                        C152172 +
                    (((C7455 + C7454 + C7453) * C152080 * C152187 +
                      (C8122 + C8123 + C8124) * C152080 * C152068) *
                         C151959 -
                     ((C6437 + C6438 + C6439) * C152080 * C152068 +
                      (C6436 + C6435 + C6434) * C152080 * C152187) *
                         C151952 -
                     ((C8125 + C8126 + C8127) * C152080 * C152068 +
                      (C8121 + C8120 + C8119) * C152080 * C152187) *
                         C4779) *
                        C151914) *
                       C3241 +
                   ((((C6089 * C549 + C6682 + C6682 + C6084 * C573 +
                       C6091 * C548 + C6683 + C6683 + C6085 * C572 +
                       C6093 * C547 + C6684 + C6684 + C6086 * C571) *
                          C152080 * C152187 +
                      (C7456 + C7457 + C7458) * C152080 * C152068) *
                         C151959 -
                     ((C6442 + C6441 + C6440) * C152080 * C152068 +
                      (C6093 * C145 + C6105 + C6105 + C6086 * C161 +
                       C6091 * C144 + C6106 + C6106 + C6085 * C160 +
                       C6089 * C143 + C6107 + C6107 + C6084 * C159) *
                          C152080 * C152187) *
                         C151952 -
                     ((C9753 + C9754 + C9755) * C152080 * C152068 +
                      (C6093 * C554 + C6691 + C6691 + C6086 * C578 +
                       C6091 * C553 + C6692 + C6692 + C6085 * C577 +
                       C6089 * C552 + C6693 + C6693 + C6084 * C576) *
                          C152080 * C152187) *
                         C4779) *
                        C152172 +
                    (((C6440 + C6441 + C6442) * C152080 * C152187 +
                      (C6443 + C6444 + C6445) * C152080 * C152068) *
                         C151952 -
                     ((C8645 + C8646 + C8647) * C152080 * C152068 +
                      (C7458 + C7457 + C7456) * C152080 * C152187) *
                         C151959 +
                     ((C9755 + C9754 + C9753) * C152080 * C152187 +
                      (C6089 * C1540 + C9744 + C9744 + C6084 * C1564 +
                       C6091 * C1541 + C9745 + C9745 + C6085 * C1565 +
                       C6093 * C1542 + C9746 + C9746 + C6086 * C1566) *
                          C152080 * C152068) *
                         C4779) *
                        C151914) *
                       C151834)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) *
                          C152080 * C31624 +
                      C31863 * C31625 + C31864 * C31626 + C31865 * C31627) *
                         C151952 -
                     (C32570 * C31627 + C32571 * C31626 + C32572 * C31625 +
                      (C31628 * C550 + C32024 + C32024 + C151791 * C574) *
                          C152080 * C31624) *
                         C151959 +
                     ((C31628 * C551 + C32025 + C32025 + C151791 * C575) *
                          C152080 * C31624 +
                      C33001 * C31625 + C33002 * C31626 + C33003 * C31627) *
                         C4779) *
                        C152172 +
                    ((C32572 * C31624 + C32571 * C31625 + C32570 * C31626 +
                      C33004 * C31627) *
                         C151959 -
                     (C31866 * C31627 + C31865 * C31626 + C31864 * C31625 +
                      C31863 * C31624) *
                         C151952 -
                     (C33005 * C31627 + C33003 * C31626 + C33002 * C31625 +
                      C33001 * C31624) *
                         C4779) *
                        C151914) *
                       C3241 +
                   ((((C31628 * C549 + C32029 + C32029 + C151791 * C573) *
                          C152080 * C31624 +
                      C32573 * C31625 + C32574 * C31626 + C32575 * C31627) *
                         C151959 -
                     (C31869 * C31627 + C31868 * C31626 + C31867 * C31625 +
                      (C31628 * C143 + C31638 + C31638 + C151791 * C159) *
                          C152080 * C31624) *
                         C151952 -
                     (C34079 * C31627 + C34080 * C31626 + C34081 * C31625 +
                      (C31628 * C552 + C32036 + C32036 + C151791 * C576) *
                          C152080 * C31624) *
                         C4779) *
                        C152172 +
                    ((C31867 * C31624 + C31868 * C31625 + C31869 * C31626 +
                      C31870 * C31627) *
                         C151952 -
                     (C33343 * C31627 + C32575 * C31626 + C32574 * C31625 +
                      C32573 * C31624) *
                         C151959 +
                     (C34081 * C31624 + C34080 * C31625 + C34079 * C31626 +
                      (C31628 * C25022 + C34069 + C34069 + C151791 * C25026) *
                          C152080 * C31627) *
                         C4779) *
                        C151914) *
                       C151834)) /
                     (p * q * std::sqrt(p + q));
    d2ee[342] += (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  (((((C6089 * C142 + C6096 + C6096 + C6084 * C158 +
                       C6091 * C143 + C6097 + C6097 + C6085 * C159 +
                       C6093 * C144 + C6098 + C6098 + C6086 * C160) *
                          C152080 * C152187 +
                      (C6434 + C6435 + C6436) * C152080 * C152068) *
                         C4107 -
                     ((C7453 + C7454 + C7455) * C152080 * C152068 +
                      (C6093 * C548 + C6673 + C6673 + C6086 * C572 +
                       C6091 * C549 + C6674 + C6674 + C6085 * C573 +
                       C6089 * C550 + C6675 + C6675 + C6084 * C574) *
                          C152080 * C152187) *
                         C151956) *
                        C152258 +
                    (((C7455 + C7454 + C7453) * C152080 * C152187 +
                      (C8122 + C8123 + C8124) * C152080 * C152068) *
                         C151956 -
                     ((C6437 + C6438 + C6439) * C152080 * C152068 +
                      (C6436 + C6435 + C6434) * C152080 * C152187) *
                         C4107) *
                        C152244 +
                    (((C6439 + C6438 + C6437) * C152080 * C152187 +
                      (C7841 + C7842 + C7843) * C152080 * C152068) *
                         C4107 -
                     ((C8866 + C8867 + C8868) * C152080 * C152068 +
                      (C8124 + C8123 + C8122) * C152080 * C152187) *
                         C151956) *
                        C152214) *
                       C3241 +
                   ((((C6089 * C549 + C6682 + C6682 + C6084 * C573 +
                       C6091 * C548 + C6683 + C6683 + C6085 * C572 +
                       C6093 * C547 + C6684 + C6684 + C6086 * C571) *
                          C152080 * C152187 +
                      (C7456 + C7457 + C7458) * C152080 * C152068) *
                         C151956 -
                     ((C6442 + C6441 + C6440) * C152080 * C152068 +
                      (C6093 * C145 + C6105 + C6105 + C6086 * C161 +
                       C6091 * C144 + C6106 + C6106 + C6085 * C160 +
                       C6089 * C143 + C6107 + C6107 + C6084 * C159) *
                          C152080 * C152187) *
                         C4107) *
                        C152258 +
                    (((C6440 + C6441 + C6442) * C152080 * C152187 +
                      (C6443 + C6444 + C6445) * C152080 * C152068) *
                         C4107 -
                     ((C8645 + C8646 + C8647) * C152080 * C152068 +
                      (C7458 + C7457 + C7456) * C152080 * C152187) *
                         C151956) *
                        C152244 +
                    (((C8647 + C8646 + C8645) * C152080 * C152187 +
                      (C6089 * C2054 + C8636 + C8636 + C6084 * C2062 +
                       C6091 * C2055 + C8637 + C8637 + C6085 * C2063 +
                       C6093 * C2056 + C8638 + C8638 + C6086 * C2064) *
                          C152080 * C152068) *
                         C151956 -
                     ((C8337 + C8338 + C8339) * C152080 * C152068 +
                      (C6445 + C6444 + C6443) * C152080 * C152187) *
                         C4107) *
                        C152214) *
                       C151834)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 +
                      C6091 * C143 + C6097 + C6097 + C6085 * C159 +
                      C6093 * C144 + C6098 + C6098 + C6086 * C160) *
                         C152080 * C152187 +
                     (C6434 + C6435 + C6436) * C152080 * C152068) *
                        C4107 -
                    ((C7453 + C7454 + C7455) * C152080 * C152068 +
                     (C6093 * C548 + C6673 + C6673 + C6086 * C572 +
                      C6091 * C549 + C6674 + C6674 + C6085 * C573 +
                      C6089 * C550 + C6675 + C6675 + C6084 * C574) *
                         C152080 * C152187) *
                        C151956) *
                       C151851 * C152264 +
                   (((C6089 * C549 + C6682 + C6682 + C6084 * C573 +
                      C6091 * C548 + C6683 + C6683 + C6085 * C572 +
                      C6093 * C547 + C6684 + C6684 + C6086 * C571) *
                         C152080 * C152187 +
                     (C7456 + C7457 + C7458) * C152080 * C152068) *
                        C151956 -
                    ((C6442 + C6441 + C6440) * C152080 * C152068 +
                     (C6093 * C145 + C6105 + C6105 + C6086 * C161 +
                      C6091 * C144 + C6106 + C6106 + C6085 * C160 +
                      C6089 * C143 + C6107 + C6107 + C6084 * C159) *
                         C152080 * C152187) *
                        C4107) *
                       C151851 * C152257 +
                   (((C6089 * C144 + C6108 + C6108 + C6084 * C160 +
                      C6091 * C145 + C6109 + C6109 + C6085 * C161 +
                      C6093 * C146 + C6110 + C6110 + C6086 * C162) *
                         C152080 * C152187 +
                     (C6446 + C6447 + C6448) * C152080 * C152068) *
                        C4107 -
                    ((C7459 + C7460 + C7461) * C152080 * C152068 +
                     (C6093 * C555 + C6697 + C6697 + C6086 * C579 +
                      C6091 * C547 + C6698 + C6698 + C6085 * C571 +
                      C6089 * C548 + C6699 + C6699 + C6084 * C572) *
                         C152080 * C152187) *
                        C151956) *
                       C151851 * C152242 +
                   (((C6089 * C547 + C7112 + C7112 + C6084 * C571 +
                      C6091 * C555 + C7113 + C7113 + C6085 * C579 +
                      C6093 * C557 + C7114 + C7114 + C6086 * C581) *
                         C152080 * C152187 +
                     (C6089 * C1086 + C7115 + C7115 + C6084 * C1098 +
                      C6091 * C1087 + C7116 + C7116 + C6085 * C1099 +
                      C6093 * C1088 + C7117 + C7117 + C6086 * C1100) *
                         C152080 * C152068) *
                        C151956 -
                    ((C6917 + C6916 + C6915) * C152080 * C152068 +
                     (C6093 * C147 + C6117 + C6117 + C6086 * C163 +
                      C6091 * C146 + C6118 + C6118 + C6085 * C162 +
                      C6089 * C145 + C6119 + C6119 + C6084 * C161) *
                         C152080 * C152187) *
                        C4107) *
                       C151851 * C152218)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 +
                      C6091 * C143 + C6097 + C6097 + C6085 * C159 +
                      C6093 * C144 + C6098 + C6098 + C6086 * C160) *
                         C152080 * C152187 +
                     (C6434 + C6435 + C6436) * C152080 * C152068) *
                        C152266 -
                    ((C7453 + C7454 + C7455) * C152080 * C152068 +
                     (C6093 * C548 + C6673 + C6673 + C6086 * C572 +
                      C6091 * C549 + C6674 + C6674 + C6085 * C573 +
                      C6089 * C550 + C6675 + C6675 + C6084 * C574) *
                         C152080 * C152187) *
                        C152263 +
                    ((C6089 * C551 + C6676 + C6676 + C6084 * C575 +
                      C6091 * C552 + C6677 + C6677 + C6085 * C576 +
                      C6093 * C553 + C6678 + C6678 + C6086 * C577) *
                         C152080 * C152187 +
                     (C8119 + C8120 + C8121) * C152080 * C152068) *
                        C152252 -
                    ((C10174 + C10175 + C10176) * C152080 * C152068 +
                     (C6093 * C2452 + C9439 + C9439 + C6086 * C2468 +
                      C6091 * C2453 + C9440 + C9440 + C6085 * C2469 +
                      C6089 * C2454 + C9441 + C9441 + C6084 * C2470) *
                         C152080 * C152187) *
                        C152230) *
                       C151851 * C3241 +
                   (((C6089 * C549 + C6682 + C6682 + C6084 * C573 +
                      C6091 * C548 + C6683 + C6683 + C6085 * C572 +
                      C6093 * C547 + C6684 + C6684 + C6086 * C571) *
                         C152080 * C152187 +
                     (C7456 + C7457 + C7458) * C152080 * C152068) *
                        C152263 -
                    ((C6442 + C6441 + C6440) * C152080 * C152068 +
                     (C6093 * C145 + C6105 + C6105 + C6086 * C161 +
                      C6091 * C144 + C6106 + C6106 + C6085 * C160 +
                      C6089 * C143 + C6107 + C6107 + C6084 * C159) *
                         C152080 * C152187) *
                        C152266 -
                    ((C9753 + C9754 + C9755) * C152080 * C152068 +
                     (C6093 * C554 + C6691 + C6691 + C6086 * C578 +
                      C6091 * C553 + C6692 + C6692 + C6085 * C577 +
                      C6089 * C552 + C6693 + C6693 + C6084 * C576) *
                         C152080 * C152187) *
                        C152252 +
                    ((C6089 * C2453 + C9950 + C9950 + C6084 * C2469 +
                      C6091 * C2452 + C9951 + C9951 + C6085 * C2468 +
                      C6093 * C2451 + C9952 + C9952 + C6086 * C2467) *
                         C152080 * C152187 +
                     (C6089 * C2956 + C9953 + C9953 + C6084 * C2964 +
                      C6091 * C2957 + C9954 + C9954 + C6085 * C2965 +
                      C6093 * C2958 + C9955 + C9955 + C6086 * C2966) *
                         C152080 * C152068) *
                        C152230) *
                       C151851 * C151834)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) *
                         C152080 * C31624 +
                     C31863 * C31625 + C31864 * C31626 + C31865 * C31627) *
                        C4107 -
                    (C32570 * C31627 + C32571 * C31626 + C32572 * C31625 +
                     (C31628 * C550 + C32024 + C32024 + C151791 * C574) *
                         C152080 * C31624) *
                        C151956) *
                       C151851 * C152264 +
                   (((C31628 * C549 + C32029 + C32029 + C151791 * C573) *
                         C152080 * C31624 +
                     C32573 * C31625 + C32574 * C31626 + C32575 * C31627) *
                        C151956 -
                    (C31869 * C31627 + C31868 * C31626 + C31867 * C31625 +
                     (C31628 * C143 + C31638 + C31638 + C151791 * C159) *
                         C152080 * C31624) *
                        C4107) *
                       C151851 * C152257 +
                   (((C31628 * C144 + C31639 + C31639 + C151791 * C160) *
                         C152080 * C31624 +
                     C31871 * C31625 + C31872 * C31626 + C31873 * C31627) *
                        C4107 -
                    (C32576 * C31627 + C32577 * C31626 + C32578 * C31625 +
                     (C31628 * C548 + C32040 + C32040 + C151791 * C572) *
                         C152080 * C31624) *
                        C151956) *
                       C151851 * C152242 +
                   (((C31628 * C547 + C32324 + C32324 + C151791 * C571) *
                         C152080 * C31624 +
                     (C31628 * C1086 + C32325 + C32325 + C151791 * C1098) *
                         C152080 * C31625 +
                     (C31628 * C1535 + C32326 + C32326 + C151791 * C1559) *
                         C152080 * C31626 +
                     (C31628 * C2056 + C32327 + C32327 + C151791 * C2064) *
                         C152080 * C31627) *
                        C151956 -
                    (C32193 * C31627 + C32192 * C31626 + C32191 * C31625 +
                     (C31628 * C145 + C31646 + C31646 + C151791 * C161) *
                         C152080 * C31624) *
                        C4107) *
                       C151851 * C152218)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) *
                          C152080 * C31624 +
                      C31863 * C31625 + C31864 * C31626 + C31865 * C31627) *
                         C4107 -
                     (C32570 * C31627 + C32571 * C31626 + C32572 * C31625 +
                      (C31628 * C550 + C32024 + C32024 + C151791 * C574) *
                          C152080 * C31624) *
                         C151956) *
                        C152258 +
                    ((C32572 * C31624 + C32571 * C31625 + C32570 * C31626 +
                      C33004 * C31627) *
                         C151956 -
                     (C31866 * C31627 + C31865 * C31626 + C31864 * C31625 +
                      C31863 * C31624) *
                         C4107) *
                        C152244 +
                    ((C31864 * C31624 + C31865 * C31625 + C31866 * C31626 +
                      C32822 * C31627) *
                         C4107 -
                     (C33483 * C31627 + C33004 * C31626 + C32570 * C31625 +
                      C32571 * C31624) *
                         C151956) *
                        C152214) *
                       C3241 +
                   ((((C31628 * C549 + C32029 + C32029 + C151791 * C573) *
                          C152080 * C31624 +
                      C32573 * C31625 + C32574 * C31626 + C32575 * C31627) *
                         C151956 -
                     (C31869 * C31627 + C31868 * C31626 + C31867 * C31625 +
                      (C31628 * C143 + C31638 + C31638 + C151791 * C159) *
                          C152080 * C31624) *
                         C4107) *
                        C152258 +
                    ((C31867 * C31624 + C31868 * C31625 + C31869 * C31626 +
                      C31870 * C31627) *
                         C4107 -
                     (C33343 * C31627 + C32575 * C31626 + C32574 * C31625 +
                      C32573 * C31624) *
                         C151956) *
                        C152244 +
                    ((C32574 * C31624 + C32575 * C31625 + C33343 * C31626 +
                      (C31628 * C25784 + C33339 + C33339 + C151791 * C25788) *
                          C152080 * C31627) *
                         C151956 -
                     (C33142 * C31627 + C31870 * C31626 + C31869 * C31625 +
                      C31868 * C31624) *
                         C4107) *
                        C152214) *
                       C151834)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
                  ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) *
                         C152080 * C31624 +
                     C31863 * C31625 + C31864 * C31626 + C31865 * C31627) *
                        C152266 -
                    (C32570 * C31627 + C32571 * C31626 + C32572 * C31625 +
                     (C31628 * C550 + C32024 + C32024 + C151791 * C574) *
                         C152080 * C31624) *
                        C152263 +
                    ((C31628 * C551 + C32025 + C32025 + C151791 * C575) *
                         C152080 * C31624 +
                     C33001 * C31625 + C33002 * C31626 + C33003 * C31627) *
                        C152252 -
                    (C34365 * C31627 + C34366 * C31626 + C34367 * C31625 +
                     (C31628 * C2454 + C33864 + C33864 + C151791 * C2470) *
                         C152080 * C31624) *
                        C152230) *
                       C151851 * C3241 +
                   (((C31628 * C549 + C32029 + C32029 + C151791 * C573) *
                         C152080 * C31624 +
                     C32573 * C31625 + C32574 * C31626 + C32575 * C31627) *
                        C152263 -
                    (C31869 * C31627 + C31868 * C31626 + C31867 * C31625 +
                     (C31628 * C143 + C31638 + C31638 + C151791 * C159) *
                         C152080 * C31624) *
                        C152266 -
                    (C34079 * C31627 + C34080 * C31626 + C34081 * C31625 +
                     (C31628 * C552 + C32036 + C32036 + C151791 * C576) *
                         C152080 * C31624) *
                        C152252 +
                    ((C31628 * C2453 + C34212 + C34212 + C151791 * C2469) *
                         C152080 * C31624 +
                     (C31628 * C2956 + C34213 + C34213 + C151791 * C2964) *
                         C152080 * C31625 +
                     (C31628 * C10150 + C34214 + C34214 + C151791 * C10156) *
                         C152080 * C31626 +
                     (C31628 * C27086 + C34215 + C34215 + C151791 * C27090) *
                         C152080 * C31627) *
                        C152230) *
                       C151851 * C151834)) /
                     (p * q * std::sqrt(p + q));
    d2ee[343] += (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 +
                      C6091 * C143 + C6097 + C6097 + C6085 * C159 +
                      C6093 * C144 + C6098 + C6098 + C6086 * C160) *
                         C152080 * C152187 +
                     (C6434 + C6435 + C6436) * C152080 * C152068) *
                        C151952 -
                    ((C7453 + C7454 + C7455) * C152080 * C152068 +
                     (C6093 * C548 + C6673 + C6673 + C6086 * C572 +
                      C6091 * C549 + C6674 + C6674 + C6085 * C573 +
                      C6089 * C550 + C6675 + C6675 + C6084 * C574) *
                         C152080 * C152187) *
                        C151959 +
                    ((C6089 * C551 + C6676 + C6676 + C6084 * C575 +
                      C6091 * C552 + C6677 + C6677 + C6085 * C576 +
                      C6093 * C553 + C6678 + C6678 + C6086 * C577) *
                         C152080 * C152187 +
                     (C8119 + C8120 + C8121) * C152080 * C152068) *
                        C4779) *
                       C151851 * C151828 +
                   (((C6089 * C549 + C6682 + C6682 + C6084 * C573 +
                      C6091 * C548 + C6683 + C6683 + C6085 * C572 +
                      C6093 * C547 + C6684 + C6684 + C6086 * C571) *
                         C152080 * C152187 +
                     (C7456 + C7457 + C7458) * C152080 * C152068) *
                        C151959 -
                    ((C6442 + C6441 + C6440) * C152080 * C152068 +
                     (C6093 * C145 + C6105 + C6105 + C6086 * C161 +
                      C6091 * C144 + C6106 + C6106 + C6085 * C160 +
                      C6089 * C143 + C6107 + C6107 + C6084 * C159) *
                         C152080 * C152187) *
                        C151952 -
                    ((C9753 + C9754 + C9755) * C152080 * C152068 +
                     (C6093 * C554 + C6691 + C6691 + C6086 * C578 +
                      C6091 * C553 + C6692 + C6692 + C6085 * C577 +
                      C6089 * C552 + C6693 + C6693 + C6084 * C576) *
                         C152080 * C152187) *
                        C4779) *
                       C151851 * C151837 +
                   (((C6089 * C144 + C6108 + C6108 + C6084 * C160 +
                      C6091 * C145 + C6109 + C6109 + C6085 * C161 +
                      C6093 * C146 + C6110 + C6110 + C6086 * C162) *
                         C152080 * C152187 +
                     (C6446 + C6447 + C6448) * C152080 * C152068) *
                        C151952 -
                    ((C7459 + C7460 + C7461) * C152080 * C152068 +
                     (C6093 * C555 + C6697 + C6697 + C6086 * C579 +
                      C6091 * C547 + C6698 + C6698 + C6085 * C571 +
                      C6089 * C548 + C6699 + C6699 + C6084 * C572) *
                         C152080 * C152187) *
                        C151959 +
                    ((C6089 * C553 + C6700 + C6700 + C6084 * C577 +
                      C6091 * C554 + C6701 + C6701 + C6085 * C578 +
                      C6093 * C556 + C6702 + C6702 + C6086 * C580) *
                         C152080 * C152187 +
                     (C6089 * C1532 + C6703 + C6703 + C6084 * C1556 +
                      C6091 * C1531 + C6704 + C6704 + C6085 * C1555 +
                      C6093 * C2677 + C6705 + C6705 + C6086 * C2679) *
                         C152080 * C152068) *
                        C4779) *
                       C151851 * C3588)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
                  ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) *
                         C152080 * C31624 +
                     C31863 * C31625 + C31864 * C31626 + C31865 * C31627) *
                        C151952 -
                    (C32570 * C31627 + C32571 * C31626 + C32572 * C31625 +
                     (C31628 * C550 + C32024 + C32024 + C151791 * C574) *
                         C152080 * C31624) *
                        C151959 +
                    ((C31628 * C551 + C32025 + C32025 + C151791 * C575) *
                         C152080 * C31624 +
                     C33001 * C31625 + C33002 * C31626 + C33003 * C31627) *
                        C4779) *
                       C151851 * C151828 +
                   (((C31628 * C549 + C32029 + C32029 + C151791 * C573) *
                         C152080 * C31624 +
                     C32573 * C31625 + C32574 * C31626 + C32575 * C31627) *
                        C151959 -
                    (C31869 * C31627 + C31868 * C31626 + C31867 * C31625 +
                     (C31628 * C143 + C31638 + C31638 + C151791 * C159) *
                         C152080 * C31624) *
                        C151952 -
                    (C34079 * C31627 + C34080 * C31626 + C34081 * C31625 +
                     (C31628 * C552 + C32036 + C32036 + C151791 * C576) *
                         C152080 * C31624) *
                        C4779) *
                       C151851 * C151837 +
                   (((C31628 * C144 + C31639 + C31639 + C151791 * C160) *
                         C152080 * C31624 +
                     C31871 * C31625 + C31872 * C31626 + C31873 * C31627) *
                        C151952 -
                    (C32576 * C31627 + C32577 * C31626 + C32578 * C31625 +
                     (C31628 * C548 + C32040 + C32040 + C151791 * C572) *
                         C152080 * C31624) *
                        C151959 +
                    ((C31628 * C553 + C32041 + C32041 + C151791 * C577) *
                         C152080 * C31624 +
                     (C31628 * C1532 + C32042 + C32042 + C151791 * C1556) *
                         C152080 * C31625 +
                     (C31628 * C1541 + C32043 + C32043 + C151791 * C1565) *
                         C152080 * C31626 +
                     (C31628 * C8066 + C32044 + C32044 + C151791 * C8072) *
                         C152080 * C31627) *
                        C4779) *
                       C151851 * C3588)) /
                     (p * q * std::sqrt(p + q));
    d2ee[344] += (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                  ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 +
                      C6091 * C143 + C6097 + C6097 + C6085 * C159 +
                      C6093 * C144 + C6098 + C6098 + C6086 * C160) *
                         C152080 * C152187 +
                     (C6434 + C6435 + C6436) * C152080 * C152068) *
                        C4107 -
                    ((C7453 + C7454 + C7455) * C152080 * C152068 +
                     (C6093 * C548 + C6673 + C6673 + C6086 * C572 +
                      C6091 * C549 + C6674 + C6674 + C6085 * C573 +
                      C6089 * C550 + C6675 + C6675 + C6084 * C574) *
                         C152080 * C152187) *
                        C151956) *
                       C151851 * C152264 +
                   (((C6089 * C549 + C6682 + C6682 + C6084 * C573 +
                      C6091 * C548 + C6683 + C6683 + C6085 * C572 +
                      C6093 * C547 + C6684 + C6684 + C6086 * C571) *
                         C152080 * C152187 +
                     (C7456 + C7457 + C7458) * C152080 * C152068) *
                        C151956 -
                    ((C6442 + C6441 + C6440) * C152080 * C152068 +
                     (C6093 * C145 + C6105 + C6105 + C6086 * C161 +
                      C6091 * C144 + C6106 + C6106 + C6085 * C160 +
                      C6089 * C143 + C6107 + C6107 + C6084 * C159) *
                         C152080 * C152187) *
                        C4107) *
                       C151851 * C152257 +
                   (((C6089 * C144 + C6108 + C6108 + C6084 * C160 +
                      C6091 * C145 + C6109 + C6109 + C6085 * C161 +
                      C6093 * C146 + C6110 + C6110 + C6086 * C162) *
                         C152080 * C152187 +
                     (C6446 + C6447 + C6448) * C152080 * C152068) *
                        C4107 -
                    ((C7459 + C7460 + C7461) * C152080 * C152068 +
                     (C6093 * C555 + C6697 + C6697 + C6086 * C579 +
                      C6091 * C547 + C6698 + C6698 + C6085 * C571 +
                      C6089 * C548 + C6699 + C6699 + C6084 * C572) *
                         C152080 * C152187) *
                        C151956) *
                       C151851 * C152242 +
                   (((C6089 * C547 + C7112 + C7112 + C6084 * C571 +
                      C6091 * C555 + C7113 + C7113 + C6085 * C579 +
                      C6093 * C557 + C7114 + C7114 + C6086 * C581) *
                         C152080 * C152187 +
                     (C6089 * C1086 + C7115 + C7115 + C6084 * C1098 +
                      C6091 * C1087 + C7116 + C7116 + C6085 * C1099 +
                      C6093 * C1088 + C7117 + C7117 + C6086 * C1100) *
                         C152080 * C152068) *
                        C151956 -
                    ((C6917 + C6916 + C6915) * C152080 * C152068 +
                     (C6093 * C147 + C6117 + C6117 + C6086 * C163 +
                      C6091 * C146 + C6118 + C6118 + C6085 * C162 +
                      C6089 * C145 + C6119 + C6119 + C6084 * C161) *
                         C152080 * C152187) *
                        C4107) *
                       C151851 * C152218)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                  (((((C6089 * C142 + C6096 + C6096 + C6084 * C158 +
                       C6091 * C143 + C6097 + C6097 + C6085 * C159 +
                       C6093 * C144 + C6098 + C6098 + C6086 * C160) *
                          C152080 * C152187 +
                      (C6434 + C6435 + C6436) * C152080 * C152068) *
                         C4107 -
                     ((C7453 + C7454 + C7455) * C152080 * C152068 +
                      (C6093 * C548 + C6673 + C6673 + C6086 * C572 +
                       C6091 * C549 + C6674 + C6674 + C6085 * C573 +
                       C6089 * C550 + C6675 + C6675 + C6084 * C574) *
                          C152080 * C152187) *
                         C151956) *
                        C152258 +
                    (((C7455 + C7454 + C7453) * C152080 * C152187 +
                      (C8122 + C8123 + C8124) * C152080 * C152068) *
                         C151956 -
                     ((C6437 + C6438 + C6439) * C152080 * C152068 +
                      (C6436 + C6435 + C6434) * C152080 * C152187) *
                         C4107) *
                        C152244 +
                    (((C6439 + C6438 + C6437) * C152080 * C152187 +
                      (C7841 + C7842 + C7843) * C152080 * C152068) *
                         C4107 -
                     ((C8866 + C8867 + C8868) * C152080 * C152068 +
                      (C8124 + C8123 + C8122) * C152080 * C152187) *
                         C151956) *
                        C152214) *
                       C3241 +
                   ((((C6089 * C549 + C6682 + C6682 + C6084 * C573 +
                       C6091 * C548 + C6683 + C6683 + C6085 * C572 +
                       C6093 * C547 + C6684 + C6684 + C6086 * C571) *
                          C152080 * C152187 +
                      (C7456 + C7457 + C7458) * C152080 * C152068) *
                         C151956 -
                     ((C6442 + C6441 + C6440) * C152080 * C152068 +
                      (C6093 * C145 + C6105 + C6105 + C6086 * C161 +
                       C6091 * C144 + C6106 + C6106 + C6085 * C160 +
                       C6089 * C143 + C6107 + C6107 + C6084 * C159) *
                          C152080 * C152187) *
                         C4107) *
                        C152258 +
                    (((C6440 + C6441 + C6442) * C152080 * C152187 +
                      (C6443 + C6444 + C6445) * C152080 * C152068) *
                         C4107 -
                     ((C8645 + C8646 + C8647) * C152080 * C152068 +
                      (C7458 + C7457 + C7456) * C152080 * C152187) *
                         C151956) *
                        C152244 +
                    (((C8647 + C8646 + C8645) * C152080 * C152187 +
                      (C6089 * C2054 + C8636 + C8636 + C6084 * C2062 +
                       C6091 * C2055 + C8637 + C8637 + C6085 * C2063 +
                       C6093 * C2056 + C8638 + C8638 + C6086 * C2064) *
                          C152080 * C152068) *
                         C151956 -
                     ((C8337 + C8338 + C8339) * C152080 * C152068 +
                      (C6445 + C6444 + C6443) * C152080 * C152187) *
                         C4107) *
                        C152214) *
                       C151834)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                  ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) *
                         C152080 * C31624 +
                     C31863 * C31625 + C31864 * C31626 + C31865 * C31627) *
                        C4107 -
                    (C32570 * C31627 + C32571 * C31626 + C32572 * C31625 +
                     (C31628 * C550 + C32024 + C32024 + C151791 * C574) *
                         C152080 * C31624) *
                        C151956) *
                       C151851 * C152264 +
                   (((C31628 * C549 + C32029 + C32029 + C151791 * C573) *
                         C152080 * C31624 +
                     C32573 * C31625 + C32574 * C31626 + C32575 * C31627) *
                        C151956 -
                    (C31869 * C31627 + C31868 * C31626 + C31867 * C31625 +
                     (C31628 * C143 + C31638 + C31638 + C151791 * C159) *
                         C152080 * C31624) *
                        C4107) *
                       C151851 * C152257 +
                   (((C31628 * C144 + C31639 + C31639 + C151791 * C160) *
                         C152080 * C31624 +
                     C31871 * C31625 + C31872 * C31626 + C31873 * C31627) *
                        C4107 -
                    (C32576 * C31627 + C32577 * C31626 + C32578 * C31625 +
                     (C31628 * C548 + C32040 + C32040 + C151791 * C572) *
                         C152080 * C31624) *
                        C151956) *
                       C151851 * C152242 +
                   (((C31628 * C547 + C32324 + C32324 + C151791 * C571) *
                         C152080 * C31624 +
                     (C31628 * C1086 + C32325 + C32325 + C151791 * C1098) *
                         C152080 * C31625 +
                     (C31628 * C1535 + C32326 + C32326 + C151791 * C1559) *
                         C152080 * C31626 +
                     (C31628 * C2056 + C32327 + C32327 + C151791 * C2064) *
                         C152080 * C31627) *
                        C151956 -
                    (C32193 * C31627 + C32192 * C31626 + C32191 * C31625 +
                     (C31628 * C145 + C31646 + C31646 + C151791 * C161) *
                         C152080 * C31624) *
                        C4107) *
                       C151851 * C152218)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                  (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) *
                          C152080 * C31624 +
                      C31863 * C31625 + C31864 * C31626 + C31865 * C31627) *
                         C4107 -
                     (C32570 * C31627 + C32571 * C31626 + C32572 * C31625 +
                      (C31628 * C550 + C32024 + C32024 + C151791 * C574) *
                          C152080 * C31624) *
                         C151956) *
                        C152258 +
                    ((C32572 * C31624 + C32571 * C31625 + C32570 * C31626 +
                      C33004 * C31627) *
                         C151956 -
                     (C31866 * C31627 + C31865 * C31626 + C31864 * C31625 +
                      C31863 * C31624) *
                         C4107) *
                        C152244 +
                    ((C31864 * C31624 + C31865 * C31625 + C31866 * C31626 +
                      C32822 * C31627) *
                         C4107 -
                     (C33483 * C31627 + C33004 * C31626 + C32570 * C31625 +
                      C32571 * C31624) *
                         C151956) *
                        C152214) *
                       C3241 +
                   ((((C31628 * C549 + C32029 + C32029 + C151791 * C573) *
                          C152080 * C31624 +
                      C32573 * C31625 + C32574 * C31626 + C32575 * C31627) *
                         C151956 -
                     (C31869 * C31627 + C31868 * C31626 + C31867 * C31625 +
                      (C31628 * C143 + C31638 + C31638 + C151791 * C159) *
                          C152080 * C31624) *
                         C4107) *
                        C152258 +
                    ((C31867 * C31624 + C31868 * C31625 + C31869 * C31626 +
                      C31870 * C31627) *
                         C4107 -
                     (C33343 * C31627 + C32575 * C31626 + C32574 * C31625 +
                      C32573 * C31624) *
                         C151956) *
                        C152244 +
                    ((C32574 * C31624 + C32575 * C31625 + C33343 * C31626 +
                      (C31628 * C25784 + C33339 + C33339 + C151791 * C25788) *
                          C152080 * C31627) *
                         C151956 -
                     (C33142 * C31627 + C31870 * C31626 + C31869 * C31625 +
                      C31868 * C31624) *
                         C4107) *
                        C152214) *
                       C151834)) /
                     (p * q * std::sqrt(p + q));
    d2ee[345] += (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                  ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 +
                      C6091 * C143 + C6097 + C6097 + C6085 * C159 +
                      C6093 * C144 + C6098 + C6098 + C6086 * C160) *
                         C152080 * C152187 +
                     (C6434 + C6435 + C6436) * C152080 * C152068) *
                        C151869 * C152172 -
                    ((C6437 + C6438 + C6439) * C152080 * C152068 +
                     (C6436 + C6435 + C6434) * C152080 * C152187) *
                        C151869 * C151914) *
                       C739 +
                   (((C6440 + C6441 + C6442) * C152080 * C152187 +
                     (C6443 + C6444 + C6445) * C152080 * C152068) *
                        C151869 * C151914 -
                    ((C6442 + C6441 + C6440) * C152080 * C152068 +
                     (C6093 * C145 + C6105 + C6105 + C6086 * C161 +
                      C6091 * C144 + C6106 + C6106 + C6085 * C160 +
                      C6089 * C143 + C6107 + C6107 + C6084 * C159) *
                         C152080 * C152187) *
                        C151869 * C152172) *
                       C740 +
                   (((C6089 * C144 + C6108 + C6108 + C6084 * C160 +
                      C6091 * C145 + C6109 + C6109 + C6085 * C161 +
                      C6093 * C146 + C6110 + C6110 + C6086 * C162) *
                         C152080 * C152187 +
                     (C6446 + C6447 + C6448) * C152080 * C152068) *
                        C151869 * C152172 -
                    ((C6449 + C6450 + C6451) * C152080 * C152068 +
                     (C6448 + C6447 + C6446) * C152080 * C152187) *
                        C151869 * C151914) *
                       C741 +
                   (((C6915 + C6916 + C6917) * C152080 * C152187 +
                     (C6089 * C345 + C6906 + C6906 + C6084 * C369 +
                      C6091 * C347 + C6907 + C6907 + C6085 * C371 +
                      C6093 * C349 + C6908 + C6908 + C6086 * C373) *
                         C152080 * C152068) *
                        C151869 * C151914 -
                    ((C6917 + C6916 + C6915) * C152080 * C152068 +
                     (C6093 * C147 + C6117 + C6117 + C6086 * C163 +
                      C6091 * C146 + C6118 + C6118 + C6085 * C162 +
                      C6089 * C145 + C6119 + C6119 + C6084 * C161) *
                         C152080 * C152187) *
                        C151869 * C152172) *
                       C152218)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                  ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 +
                      C6091 * C143 + C6097 + C6097 + C6085 * C159 +
                      C6093 * C144 + C6098 + C6098 + C6086 * C160) *
                         C152080 * C152187 +
                     (C6434 + C6435 + C6436) * C152080 * C152068) *
                        C151869 * C1709 -
                    ((C6437 + C6438 + C6439) * C152080 * C152068 +
                     (C6436 + C6435 + C6434) * C152080 * C152187) *
                        C151869 * C1710 +
                    ((C6439 + C6438 + C6437) * C152080 * C152187 +
                     (C7841 + C7842 + C7843) * C152080 * C152068) *
                        C151869 * C1711 -
                    ((C7844 + C7845 + C7846) * C152080 * C152068 +
                     (C7843 + C7842 + C7841) * C152080 * C152187) *
                        C151869 * C152224) *
                       C152158 +
                   (((C6440 + C6441 + C6442) * C152080 * C152187 +
                     (C6443 + C6444 + C6445) * C152080 * C152068) *
                        C151869 * C1710 -
                    ((C6442 + C6441 + C6440) * C152080 * C152068 +
                     (C6093 * C145 + C6105 + C6105 + C6086 * C161 +
                      C6091 * C144 + C6106 + C6106 + C6085 * C160 +
                      C6089 * C143 + C6107 + C6107 + C6084 * C159) *
                         C152080 * C152187) *
                        C151869 * C1709 -
                    ((C8337 + C8338 + C8339) * C152080 * C152068 +
                     (C6445 + C6444 + C6443) * C152080 * C152187) *
                        C151869 * C1711 +
                    ((C8339 + C8338 + C8337) * C152080 * C152187 +
                     (C6089 * C1358 + C8328 + C8328 + C6084 * C1374 +
                      C6091 * C1359 + C8329 + C8329 + C6085 * C1375 +
                      C6093 * C1360 + C8330 + C8330 + C6086 * C1376) *
                         C152080 * C152068) *
                        C151869 * C152224) *
                       C151834)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                  ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) *
                         C152080 * C31624 +
                     C31863 * C31625 + C31864 * C31626 + C31865 * C31627) *
                        C151869 * C152172 -
                    (C31866 * C31627 + C31865 * C31626 + C31864 * C31625 +
                     C31863 * C31624) *
                        C151869 * C151914) *
                       C739 +
                   ((C31867 * C31624 + C31868 * C31625 + C31869 * C31626 +
                     C31870 * C31627) *
                        C151869 * C151914 -
                    (C31869 * C31627 + C31868 * C31626 + C31867 * C31625 +
                     (C31628 * C143 + C31638 + C31638 + C151791 * C159) *
                         C152080 * C31624) *
                        C151869 * C152172) *
                       C740 +
                   (((C31628 * C144 + C31639 + C31639 + C151791 * C160) *
                         C152080 * C31624 +
                     C31871 * C31625 + C31872 * C31626 + C31873 * C31627) *
                        C151869 * C152172 -
                    (C31874 * C31627 + C31873 * C31626 + C31872 * C31625 +
                     C31871 * C31624) *
                        C151869 * C151914) *
                       C741 +
                   ((C32191 * C31624 + C32192 * C31625 + C32193 * C31626 +
                     (C31628 * C1360 + C32181 + C32181 + C151791 * C1376) *
                         C152080 * C31627) *
                        C151869 * C151914 -
                    (C32193 * C31627 + C32192 * C31626 + C32191 * C31625 +
                     (C31628 * C145 + C31646 + C31646 + C151791 * C161) *
                         C152080 * C31624) *
                        C151869 * C152172) *
                       C152218)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                  ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) *
                         C152080 * C31624 +
                     C31863 * C31625 + C31864 * C31626 + C31865 * C31627) *
                        C151869 * C1709 -
                    (C31866 * C31627 + C31865 * C31626 + C31864 * C31625 +
                     C31863 * C31624) *
                        C151869 * C1710 +
                    (C31864 * C31624 + C31865 * C31625 + C31866 * C31626 +
                     C32822 * C31627) *
                        C151869 * C1711 -
                    (C32823 * C31627 + C32822 * C31626 + C31866 * C31625 +
                     C31865 * C31624) *
                        C151869 * C152224) *
                       C152158 +
                   ((C31867 * C31624 + C31868 * C31625 + C31869 * C31626 +
                     C31870 * C31627) *
                        C151869 * C1710 -
                    (C31869 * C31627 + C31868 * C31626 + C31867 * C31625 +
                     (C31628 * C143 + C31638 + C31638 + C151791 * C159) *
                         C152080 * C31624) *
                        C151869 * C1709 -
                    (C33142 * C31627 + C31870 * C31626 + C31869 * C31625 +
                     C31868 * C31624) *
                        C151869 * C1711 +
                    (C31869 * C31624 + C31870 * C31625 + C33142 * C31626 +
                     (C31628 * C24770 + C33138 + C33138 + C151791 * C24774) *
                         C152080 * C31627) *
                        C151869 * C152224) *
                       C151834)) /
                     (p * q * std::sqrt(p + q));
    d2ee[346] += (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                  (((((C6089 * C142 + C6096 + C6096 + C6084 * C158 +
                       C6091 * C143 + C6097 + C6097 + C6085 * C159 +
                       C6093 * C144 + C6098 + C6098 + C6086 * C160) *
                          C152080 * C152187 +
                      (C6434 + C6435 + C6436) * C152080 * C152068) *
                         C152173 -
                     ((C7453 + C7454 + C7455) * C152080 * C152068 +
                      (C6093 * C548 + C6673 + C6673 + C6086 * C572 +
                       C6091 * C549 + C6674 + C6674 + C6085 * C573 +
                       C6089 * C550 + C6675 + C6675 + C6084 * C574) *
                          C152080 * C152187) *
                         C151956) *
                        C152172 +
                    (((C7455 + C7454 + C7453) * C152080 * C152187 +
                      (C6089 * C1538 + C7414 + C7414 + C6084 * C1562 +
                       C6091 * C1537 + C7415 + C7415 + C6085 * C1561 +
                       C6093 * C1536 + C7416 + C7416 + C6086 * C1560) *
                          C152080 * C152068) *
                         C151956 -
                     ((C6437 + C6438 + C6439) * C152080 * C152068 +
                      (C6436 + C6435 + C6434) * C152080 * C152187) *
                         C152173) *
                        C151914) *
                       C335 +
                   ((((C6089 * C549 + C6682 + C6682 + C6084 * C573 +
                       C6091 * C548 + C6683 + C6683 + C6085 * C572 +
                       C6093 * C547 + C6684 + C6684 + C6086 * C571) *
                          C152080 * C152187 +
                      (C7456 + C7457 + C7458) * C152080 * C152068) *
                         C151956 -
                     ((C6442 + C6441 + C6440) * C152080 * C152068 +
                      (C6093 * C145 + C6105 + C6105 + C6086 * C161 +
                       C6091 * C144 + C6106 + C6106 + C6085 * C160 +
                       C6089 * C143 + C6107 + C6107 + C6084 * C159) *
                          C152080 * C152187) *
                         C152173) *
                        C152172 +
                    (((C6440 + C6441 + C6442) * C152080 * C152187 +
                      (C6443 + C6444 + C6445) * C152080 * C152068) *
                         C152173 -
                     ((C6093 * C1535 + C7423 + C7423 + C6086 * C1559 +
                       C6091 * C1536 + C7424 + C7424 + C6085 * C1560 +
                       C6089 * C1537 + C7425 + C7425 + C6084 * C1561) *
                          C152080 * C152068 +
                      (C7458 + C7457 + C7456) * C152080 * C152187) *
                         C151956) *
                        C151914) *
                       C336 +
                   ((((C6089 * C144 + C6108 + C6108 + C6084 * C160 +
                       C6091 * C145 + C6109 + C6109 + C6085 * C161 +
                       C6093 * C146 + C6110 + C6110 + C6086 * C162) *
                          C152080 * C152187 +
                      (C6446 + C6447 + C6448) * C152080 * C152068) *
                         C152173 -
                     ((C7459 + C7460 + C7461) * C152080 * C152068 +
                      (C6093 * C555 + C6697 + C6697 + C6086 * C579 +
                       C6091 * C547 + C6698 + C6698 + C6085 * C571 +
                       C6089 * C548 + C6699 + C6699 + C6084 * C572) *
                          C152080 * C152187) *
                         C151956) *
                        C152172 +
                    (((C7461 + C7460 + C7459) * C152080 * C152187 +
                      (C6089 * C1536 + C7432 + C7432 + C6084 * C1560 +
                       C6091 * C1535 + C7433 + C7433 + C6085 * C1559 +
                       C6093 * C1916 + C7434 + C7434 + C6086 * C1918) *
                          C152080 * C152068) *
                         C151956 -
                     ((C6449 + C6450 + C6451) * C152080 * C152068 +
                      (C6448 + C6447 + C6446) * C152080 * C152187) *
                         C152173) *
                        C151914) *
                       C152208)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                  ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 +
                      C6091 * C143 + C6097 + C6097 + C6085 * C159 +
                      C6093 * C144 + C6098 + C6098 + C6086 * C160) *
                         C152080 * C152187 +
                     (C6434 + C6435 + C6436) * C152080 * C152068) *
                        C152173 -
                    ((C7453 + C7454 + C7455) * C152080 * C152068 +
                     (C6093 * C548 + C6673 + C6673 + C6086 * C572 +
                      C6091 * C549 + C6674 + C6674 + C6085 * C573 +
                      C6089 * C550 + C6675 + C6675 + C6084 * C574) *
                         C152080 * C152187) *
                        C151956) *
                       C1709 +
                   (((C7455 + C7454 + C7453) * C152080 * C152187 +
                     (C8122 + C8123 + C8124) * C152080 * C152068) *
                        C151956 -
                    ((C6437 + C6438 + C6439) * C152080 * C152068 +
                     (C6436 + C6435 + C6434) * C152080 * C152187) *
                        C152173) *
                       C1710 +
                   (((C6439 + C6438 + C6437) * C152080 * C152187 +
                     (C7841 + C7842 + C7843) * C152080 * C152068) *
                        C152173 -
                    ((C8866 + C8867 + C8868) * C152080 * C152068 +
                     (C8124 + C8123 + C8122) * C152080 * C152187) *
                        C151956) *
                       C1711 +
                   (((C8868 + C8867 + C8866) * C152080 * C152187 +
                     (C6089 * C8841 + C8857 + C8857 + C6084 * C8847 +
                      C6091 * C8842 + C8858 + C8858 + C6085 * C8848 +
                      C6093 * C8843 + C8859 + C8859 + C6086 * C8849) *
                         C152080 * C152068) *
                        C151956 -
                    ((C7844 + C7845 + C7846) * C152080 * C152068 +
                     (C7843 + C7842 + C7841) * C152080 * C152187) *
                        C152173) *
                       C152224) *
                  C151823) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                  (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) *
                          C152080 * C31624 +
                      C31863 * C31625 + C31864 * C31626 + C31865 * C31627) *
                         C152173 -
                     (C32570 * C31627 + C32571 * C31626 + C32572 * C31625 +
                      (C31628 * C550 + C32024 + C32024 + C151791 * C574) *
                          C152080 * C31624) *
                         C151956) *
                        C152172 +
                    ((C32572 * C31624 + C32571 * C31625 + C32570 * C31626 +
                      (C31628 * C8841 + C32528 + C32528 + C151791 * C8847) *
                          C152080 * C31627) *
                         C151956 -
                     (C31866 * C31627 + C31865 * C31626 + C31864 * C31625 +
                      C31863 * C31624) *
                         C152173) *
                        C151914) *
                       C335 +
                   ((((C31628 * C549 + C32029 + C32029 + C151791 * C573) *
                          C152080 * C31624 +
                      C32573 * C31625 + C32574 * C31626 + C32575 * C31627) *
                         C151956 -
                     (C31869 * C31627 + C31868 * C31626 + C31867 * C31625 +
                      (C31628 * C143 + C31638 + C31638 + C151791 * C159) *
                          C152080 * C31624) *
                         C152173) *
                        C152172 +
                    ((C31867 * C31624 + C31868 * C31625 + C31869 * C31626 +
                      C31870 * C31627) *
                         C152173 -
                     ((C31628 * C8842 + C32535 + C32535 + C151791 * C8848) *
                          C152080 * C31627 +
                      C32575 * C31626 + C32574 * C31625 + C32573 * C31624) *
                         C151956) *
                        C151914) *
                       C336 +
                   ((((C31628 * C144 + C31639 + C31639 + C151791 * C160) *
                          C152080 * C31624 +
                      C31871 * C31625 + C31872 * C31626 + C31873 * C31627) *
                         C152173 -
                     (C32576 * C31627 + C32577 * C31626 + C32578 * C31625 +
                      (C31628 * C548 + C32040 + C32040 + C151791 * C572) *
                          C152080 * C31624) *
                         C151956) *
                        C152172 +
                    ((C32578 * C31624 + C32577 * C31625 + C32576 * C31626 +
                      (C31628 * C8843 + C32542 + C32542 + C151791 * C8849) *
                          C152080 * C31627) *
                         C151956 -
                     (C31874 * C31627 + C31873 * C31626 + C31872 * C31625 +
                      C31871 * C31624) *
                         C152173) *
                        C151914) *
                       C152208)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                  ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) *
                         C152080 * C31624 +
                     C31863 * C31625 + C31864 * C31626 + C31865 * C31627) *
                        C152173 -
                    (C32570 * C31627 + C32571 * C31626 + C32572 * C31625 +
                     (C31628 * C550 + C32024 + C32024 + C151791 * C574) *
                         C152080 * C31624) *
                        C151956) *
                       C1709 +
                   ((C32572 * C31624 + C32571 * C31625 + C32570 * C31626 +
                     C33004 * C31627) *
                        C151956 -
                    (C31866 * C31627 + C31865 * C31626 + C31864 * C31625 +
                     C31863 * C31624) *
                        C152173) *
                       C1710 +
                   ((C31864 * C31624 + C31865 * C31625 + C31866 * C31626 +
                     C32822 * C31627) *
                        C152173 -
                    (C33483 * C31627 + C33004 * C31626 + C32570 * C31625 +
                     C32571 * C31624) *
                        C151956) *
                       C1711 +
                   ((C32570 * C31624 + C33004 * C31625 + C33483 * C31626 +
                     (C31628 * C33473 + C33479 + C33479 + C151791 * C33475) *
                         C152080 * C31627) *
                        C151956 -
                    (C32823 * C31627 + C32822 * C31626 + C31866 * C31625 +
                     C31865 * C31624) *
                        C152173) *
                       C152224) *
                  C151823) /
                     (p * q * std::sqrt(p + q));
    d2ee[347] += (-std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
                  ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 +
                      C6091 * C143 + C6097 + C6097 + C6085 * C159 +
                      C6093 * C144 + C6098 + C6098 + C6086 * C160) *
                         C152080 * C152187 +
                     (C6434 + C6435 + C6436) * C152080 * C152068) *
                        C151869 * C152258 -
                    ((C6437 + C6438 + C6439) * C152080 * C152068 +
                     (C6436 + C6435 + C6434) * C152080 * C152187) *
                        C151869 * C152244 +
                    ((C6439 + C6438 + C6437) * C152080 * C152187 +
                     (C6089 * C1356 + C6359 + C6359 + C6084 * C1372 +
                      C6091 * C1355 + C6360 + C6360 + C6085 * C1371 +
                      C6093 * C1354 + C6361 + C6361 + C6086 * C1370) *
                         C152080 * C152068) *
                        C151869 * C152214) *
                       C335 +
                   (((C6440 + C6441 + C6442) * C152080 * C152187 +
                     (C6443 + C6444 + C6445) * C152080 * C152068) *
                        C151869 * C152244 -
                    ((C6442 + C6441 + C6440) * C152080 * C152068 +
                     (C6093 * C145 + C6105 + C6105 + C6086 * C161 +
                      C6091 * C144 + C6106 + C6106 + C6085 * C160 +
                      C6089 * C143 + C6107 + C6107 + C6084 * C159) *
                         C152080 * C152187) *
                        C151869 * C152258 -
                    ((C6093 * C1353 + C6377 + C6377 + C6086 * C1369 +
                      C6091 * C1354 + C6378 + C6378 + C6085 * C1370 +
                      C6089 * C1355 + C6379 + C6379 + C6084 * C1371) *
                         C152080 * C152068 +
                     (C6445 + C6444 + C6443) * C152080 * C152187) *
                        C151869 * C152214) *
                       C336 +
                   (((C6089 * C144 + C6108 + C6108 + C6084 * C160 +
                      C6091 * C145 + C6109 + C6109 + C6085 * C161 +
                      C6093 * C146 + C6110 + C6110 + C6086 * C162) *
                         C152080 * C152187 +
                     (C6446 + C6447 + C6448) * C152080 * C152068) *
                        C151869 * C152258 -
                    ((C6449 + C6450 + C6451) * C152080 * C152068 +
                     (C6448 + C6447 + C6446) * C152080 * C152187) *
                        C151869 * C152244 +
                    ((C6451 + C6450 + C6449) * C152080 * C152187 +
                     (C6089 * C1354 + C6395 + C6395 + C6084 * C1370 +
                      C6091 * C1353 + C6396 + C6396 + C6085 * C1369 +
                      C6093 * C1715 + C6397 + C6397 + C6086 * C1717) *
                         C152080 * C152068) *
                        C151869 * C152214) *
                       C152208)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
                  (((C6089 * C142 + C6096 + C6096 + C6084 * C158 +
                     C6091 * C143 + C6097 + C6097 + C6085 * C159 +
                     C6093 * C144 + C6098 + C6098 + C6086 * C160) *
                        C152080 * C152187 +
                    (C6089 * C341 + C6099 + C6099 + C6084 * C365 +
                     C6091 * C340 + C6100 + C6100 + C6085 * C364 +
                     C6093 * C339 + C6101 + C6101 + C6086 * C363) *
                        C152080 * C152068) *
                       C151869 * C151851 * C129 -
                   ((C6093 * C338 + C6102 + C6102 + C6086 * C362 +
                     C6091 * C339 + C6103 + C6103 + C6085 * C363 +
                     C6089 * C340 + C6104 + C6104 + C6084 * C364) *
                        C152080 * C152068 +
                    (C6093 * C145 + C6105 + C6105 + C6086 * C161 +
                     C6091 * C144 + C6106 + C6106 + C6085 * C160 +
                     C6089 * C143 + C6107 + C6107 + C6084 * C159) *
                        C152080 * C152187) *
                       C151869 * C151851 * C130 +
                   ((C6089 * C144 + C6108 + C6108 + C6084 * C160 +
                     C6091 * C145 + C6109 + C6109 + C6085 * C161 +
                     C6093 * C146 + C6110 + C6110 + C6086 * C162) *
                        C152080 * C152187 +
                    (C6089 * C339 + C6111 + C6111 + C6084 * C363 +
                     C6091 * C338 + C6112 + C6112 + C6085 * C362 +
                     C6093 * C346 + C6113 + C6113 + C6086 * C370) *
                        C152080 * C152068) *
                       C151869 * C151851 * C131 -
                   ((C6093 * C348 + C6114 + C6114 + C6086 * C372 +
                     C6091 * C346 + C6115 + C6115 + C6085 * C370 +
                     C6089 * C338 + C6116 + C6116 + C6084 * C362) *
                        C152080 * C152068 +
                    (C6093 * C147 + C6117 + C6117 + C6086 * C163 +
                     C6091 * C146 + C6118 + C6118 + C6085 * C162 +
                     C6089 * C145 + C6119 + C6119 + C6084 * C161) *
                        C152080 * C152187) *
                       C151869 * C151851 * C132 +
                   ((C6089 * C146 + C6120 + C6120 + C6084 * C162 +
                     C6091 * C147 + C6121 + C6121 + C6085 * C163 +
                     C6093 * C148 + C6122 + C6122 + C6086 * C164) *
                        C152080 * C152187 +
                    (C6089 * C346 + C6123 + C6123 + C6084 * C370 +
                     C6091 * C348 + C6124 + C6124 + C6085 * C372 +
                     C6093 * C743 + C6125 + C6125 + C6086 * C745) *
                        C152080 * C152068) *
                       C151869 * C151851 * C133)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 +
                      C6091 * C143 + C6097 + C6097 + C6085 * C159 +
                      C6093 * C144 + C6098 + C6098 + C6086 * C160) *
                         C152080 * C152187 +
                     (C6434 + C6435 + C6436) * C152080 * C152068) *
                        C152259 -
                    ((C6093 * C1085 + C6670 + C6670 + C6086 * C1097 +
                      C6091 * C1084 + C6671 + C6671 + C6085 * C1096 +
                      C6089 * C1083 + C6672 + C6672 + C6084 * C1095) *
                         C152080 * C152068 +
                     (C6093 * C548 + C6673 + C6673 + C6086 * C572 +
                      C6091 * C549 + C6674 + C6674 + C6085 * C573 +
                      C6089 * C550 + C6675 + C6675 + C6084 * C574) *
                         C152080 * C152187) *
                        C152246 +
                    ((C6089 * C551 + C6676 + C6676 + C6084 * C575 +
                      C6091 * C552 + C6677 + C6677 + C6085 * C576 +
                      C6093 * C553 + C6678 + C6678 + C6086 * C577) *
                         C152080 * C152187 +
                     (C6089 * C1534 + C6679 + C6679 + C6084 * C1558 +
                      C6091 * C1533 + C6680 + C6680 + C6085 * C1557 +
                      C6093 * C1532 + C6681 + C6681 + C6086 * C1556) *
                         C152080 * C152068) *
                        C152217) *
                       C151851 * C335 +
                   (((C6089 * C549 + C6682 + C6682 + C6084 * C573 +
                      C6091 * C548 + C6683 + C6683 + C6085 * C572 +
                      C6093 * C547 + C6684 + C6684 + C6086 * C571) *
                         C152080 * C152187 +
                     (C6089 * C1084 + C6685 + C6685 + C6084 * C1096 +
                      C6091 * C1085 + C6686 + C6686 + C6085 * C1097 +
                      C6093 * C1086 + C6687 + C6687 + C6086 * C1098) *
                         C152080 * C152068) *
                        C152246 -
                    ((C6442 + C6441 + C6440) * C152080 * C152068 +
                     (C6093 * C145 + C6105 + C6105 + C6086 * C161 +
                      C6091 * C144 + C6106 + C6106 + C6085 * C160 +
                      C6089 * C143 + C6107 + C6107 + C6084 * C159) *
                         C152080 * C152187) *
                        C152259 -
                    ((C6093 * C1531 + C6688 + C6688 + C6086 * C1555 +
                      C6091 * C1532 + C6689 + C6689 + C6085 * C1556 +
                      C6089 * C1533 + C6690 + C6690 + C6084 * C1557) *
                         C152080 * C152068 +
                     (C6093 * C554 + C6691 + C6691 + C6086 * C578 +
                      C6091 * C553 + C6692 + C6692 + C6085 * C577 +
                      C6089 * C552 + C6693 + C6693 + C6084 * C576) *
                         C152080 * C152187) *
                        C152217) *
                       C151851 * C336 +
                   (((C6089 * C144 + C6108 + C6108 + C6084 * C160 +
                      C6091 * C145 + C6109 + C6109 + C6085 * C161 +
                      C6093 * C146 + C6110 + C6110 + C6086 * C162) *
                         C152080 * C152187 +
                     (C6446 + C6447 + C6448) * C152080 * C152068) *
                        C152259 -
                    ((C6093 * C1087 + C6694 + C6694 + C6086 * C1099 +
                      C6091 * C1086 + C6695 + C6695 + C6085 * C1098 +
                      C6089 * C1085 + C6696 + C6696 + C6084 * C1097) *
                         C152080 * C152068 +
                     (C6093 * C555 + C6697 + C6697 + C6086 * C579 +
                      C6091 * C547 + C6698 + C6698 + C6085 * C571 +
                      C6089 * C548 + C6699 + C6699 + C6084 * C572) *
                         C152080 * C152187) *
                        C152246 +
                    ((C6089 * C553 + C6700 + C6700 + C6084 * C577 +
                      C6091 * C554 + C6701 + C6701 + C6085 * C578 +
                      C6093 * C556 + C6702 + C6702 + C6086 * C580) *
                         C152080 * C152187 +
                     (C6089 * C1532 + C6703 + C6703 + C6084 * C1556 +
                      C6091 * C1531 + C6704 + C6704 + C6085 * C1555 +
                      C6093 * C2677 + C6705 + C6705 + C6086 * C2679) *
                         C152080 * C152068) *
                        C152217) *
                       C151851 * C152208)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
                  ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 +
                      C6091 * C143 + C6097 + C6097 + C6085 * C159 +
                      C6093 * C144 + C6098 + C6098 + C6086 * C160) *
                         C152080 * C152187 +
                     (C6434 + C6435 + C6436) * C152080 * C152068) *
                        C151869 * C1259 -
                    ((C6437 + C6438 + C6439) * C152080 * C152068 +
                     (C6436 + C6435 + C6434) * C152080 * C152187) *
                        C151869 * C1260 +
                    ((C6439 + C6438 + C6437) * C152080 * C152187 +
                     (C6089 * C1356 + C6359 + C6359 + C6084 * C1372 +
                      C6091 * C1355 + C6360 + C6360 + C6085 * C1371 +
                      C6093 * C1354 + C6361 + C6361 + C6086 * C1370) *
                         C152080 * C152068) *
                        C151869 * C152214) *
                       C152255 +
                   (((C6440 + C6441 + C6442) * C152080 * C152187 +
                     (C6443 + C6444 + C6445) * C152080 * C152068) *
                        C151869 * C1260 -
                    ((C6442 + C6441 + C6440) * C152080 * C152068 +
                     (C6093 * C145 + C6105 + C6105 + C6086 * C161 +
                      C6091 * C144 + C6106 + C6106 + C6085 * C160 +
                      C6089 * C143 + C6107 + C6107 + C6084 * C159) *
                         C152080 * C152187) *
                        C151869 * C1259 -
                    ((C6093 * C1353 + C6377 + C6377 + C6086 * C1369 +
                      C6091 * C1354 + C6378 + C6378 + C6085 * C1370 +
                      C6089 * C1355 + C6379 + C6379 + C6084 * C1371) *
                         C152080 * C152068 +
                     (C6445 + C6444 + C6443) * C152080 * C152187) *
                        C151869 * C152214) *
                       C152240 +
                   (((C6089 * C144 + C6108 + C6108 + C6084 * C160 +
                      C6091 * C145 + C6109 + C6109 + C6085 * C161 +
                      C6093 * C146 + C6110 + C6110 + C6086 * C162) *
                         C152080 * C152187 +
                     (C6446 + C6447 + C6448) * C152080 * C152068) *
                        C151869 * C1259 -
                    ((C6449 + C6450 + C6451) * C152080 * C152068 +
                     (C6448 + C6447 + C6446) * C152080 * C152187) *
                        C151869 * C1260 +
                    ((C6451 + C6450 + C6449) * C152080 * C152187 +
                     (C6089 * C1354 + C6395 + C6395 + C6084 * C1370 +
                      C6091 * C1353 + C6396 + C6396 + C6085 * C1369 +
                      C6093 * C1715 + C6397 + C6397 + C6086 * C1717) *
                         C152080 * C152068) *
                        C151869 * C152214) *
                       C152208)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
                  (((C6089 * C142 + C6096 + C6096 + C6084 * C158 +
                     C6091 * C143 + C6097 + C6097 + C6085 * C159 +
                     C6093 * C144 + C6098 + C6098 + C6086 * C160) *
                        C152080 * C152187 +
                    (C6434 + C6435 + C6436) * C152080 * C152068) *
                       C151869 * C1347 -
                   ((C6437 + C6438 + C6439) * C152080 * C152068 +
                    (C6436 + C6435 + C6434) * C152080 * C152187) *
                       C151869 * C1348 +
                   ((C6439 + C6438 + C6437) * C152080 * C152187 +
                    (C7841 + C7842 + C7843) * C152080 * C152068) *
                       C151869 * C1349 -
                   ((C7844 + C7845 + C7846) * C152080 * C152068 +
                    (C7843 + C7842 + C7841) * C152080 * C152187) *
                       C151869 * C1350 +
                   ((C7846 + C7845 + C7844) * C152080 * C152187 +
                    (C6089 * C7801 + C7826 + C7826 + C6084 * C7807 +
                     C6091 * C7802 + C7827 + C7827 + C6085 * C7808 +
                     C6093 * C7803 + C7828 + C7828 + C6086 * C7809) *
                        C152080 * C152068) *
                       C151869 * C1351) *
                  C151823) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 +
                      C6091 * C143 + C6097 + C6097 + C6085 * C159 +
                      C6093 * C144 + C6098 + C6098 + C6086 * C160) *
                         C152080 * C152187 +
                     (C6434 + C6435 + C6436) * C152080 * C152068) *
                        C152259 -
                    ((C7453 + C7454 + C7455) * C152080 * C152068 +
                     (C6093 * C548 + C6673 + C6673 + C6086 * C572 +
                      C6091 * C549 + C6674 + C6674 + C6085 * C573 +
                      C6089 * C550 + C6675 + C6675 + C6084 * C574) *
                         C152080 * C152187) *
                        C152246 +
                    ((C6089 * C551 + C6676 + C6676 + C6084 * C575 +
                      C6091 * C552 + C6677 + C6677 + C6085 * C576 +
                      C6093 * C553 + C6678 + C6678 + C6086 * C577) *
                         C152080 * C152187 +
                     (C8119 + C8120 + C8121) * C152080 * C152068) *
                        C152217) *
                       C1259 +
                   (((C7455 + C7454 + C7453) * C152080 * C152187 +
                     (C8122 + C8123 + C8124) * C152080 * C152068) *
                        C152246 -
                    ((C6437 + C6438 + C6439) * C152080 * C152068 +
                     (C6436 + C6435 + C6434) * C152080 * C152187) *
                        C152259 -
                    ((C8125 + C8126 + C8127) * C152080 * C152068 +
                     (C8121 + C8120 + C8119) * C152080 * C152187) *
                        C152217) *
                       C1260 +
                   (((C6439 + C6438 + C6437) * C152080 * C152187 +
                     (C7841 + C7842 + C7843) * C152080 * C152068) *
                        C152259 -
                    ((C6093 * C2055 + C8095 + C8095 + C6086 * C2063 +
                      C6091 * C2054 + C8096 + C8096 + C6085 * C2062 +
                      C6089 * C2053 + C8097 + C8097 + C6084 * C2061) *
                         C152080 * C152068 +
                     (C8124 + C8123 + C8122) * C152080 * C152187) *
                        C152246 +
                    ((C8127 + C8126 + C8125) * C152080 * C152187 +
                     (C6089 * C8064 + C8098 + C8098 + C6084 * C8070 +
                      C6091 * C8065 + C8099 + C8099 + C6085 * C8071 +
                      C6093 * C8066 + C8100 + C8100 + C6086 * C8072) *
                         C152080 * C152068) *
                        C152217) *
                       C152214) *
                  C151823) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
                  (((C31628 * C142 + C31631 + C31631 + C151791 * C158) *
                        C152080 * C31624 +
                    (C31628 * C341 + C31632 + C31632 + C151791 * C365) *
                        C152080 * C31625 +
                    (C31628 * C342 + C31633 + C31633 + C151791 * C366) *
                        C152080 * C31626 +
                    (C31628 * C1356 + C31634 + C31634 + C151791 * C1372) *
                        C152080 * C31627) *
                       C151869 * C151851 * C129 -
                   ((C31628 * C1355 + C31635 + C31635 + C151791 * C1371) *
                        C152080 * C31627 +
                    (C31628 * C343 + C31636 + C31636 + C151791 * C367) *
                        C152080 * C31626 +
                    (C31628 * C340 + C31637 + C31637 + C151791 * C364) *
                        C152080 * C31625 +
                    (C31628 * C143 + C31638 + C31638 + C151791 * C159) *
                        C152080 * C31624) *
                       C151869 * C151851 * C130 +
                   ((C31628 * C144 + C31639 + C31639 + C151791 * C160) *
                        C152080 * C31624 +
                    (C31628 * C339 + C31640 + C31640 + C151791 * C363) *
                        C152080 * C31625 +
                    (C31628 * C344 + C31641 + C31641 + C151791 * C368) *
                        C152080 * C31626 +
                    (C31628 * C1354 + C31642 + C31642 + C151791 * C1370) *
                        C152080 * C31627) *
                       C151869 * C151851 * C131 -
                   ((C31628 * C1353 + C31643 + C31643 + C151791 * C1369) *
                        C152080 * C31627 +
                    (C31628 * C345 + C31644 + C31644 + C151791 * C369) *
                        C152080 * C31626 +
                    (C31628 * C338 + C31645 + C31645 + C151791 * C362) *
                        C152080 * C31625 +
                    (C31628 * C145 + C31646 + C31646 + C151791 * C161) *
                        C152080 * C31624) *
                       C151869 * C151851 * C132 +
                   ((C31628 * C146 + C31647 + C31647 + C151791 * C162) *
                        C152080 * C31624 +
                    (C31628 * C346 + C31648 + C31648 + C151791 * C370) *
                        C152080 * C31625 +
                    (C31628 * C347 + C31649 + C31649 + C151791 * C371) *
                        C152080 * C31626 +
                    (C31628 * C1715 + C31650 + C31650 + C151791 * C1717) *
                        C152080 * C31627) *
                       C151869 * C151851 * C133)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
                  ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) *
                         C152080 * C31624 +
                     C31863 * C31625 + C31864 * C31626 + C31865 * C31627) *
                        C151869 * C152258 -
                    (C31866 * C31627 + C31865 * C31626 + C31864 * C31625 +
                     C31863 * C31624) *
                        C151869 * C152244 +
                    (C31864 * C31624 + C31865 * C31625 + C31866 * C31626 +
                     (C31628 * C7801 + C31806 + C31806 + C151791 * C7807) *
                         C152080 * C31627) *
                        C151869 * C152214) *
                       C335 +
                   ((C31867 * C31624 + C31868 * C31625 + C31869 * C31626 +
                     C31870 * C31627) *
                        C151869 * C152244 -
                    (C31869 * C31627 + C31868 * C31626 + C31867 * C31625 +
                     (C31628 * C143 + C31638 + C31638 + C151791 * C159) *
                         C152080 * C31624) *
                        C151869 * C152258 -
                    ((C31628 * C7802 + C31816 + C31816 + C151791 * C7808) *
                         C152080 * C31627 +
                     C31870 * C31626 + C31869 * C31625 + C31868 * C31624) *
                        C151869 * C152214) *
                       C336 +
                   (((C31628 * C144 + C31639 + C31639 + C151791 * C160) *
                         C152080 * C31624 +
                     C31871 * C31625 + C31872 * C31626 + C31873 * C31627) *
                        C151869 * C152258 -
                    (C31874 * C31627 + C31873 * C31626 + C31872 * C31625 +
                     C31871 * C31624) *
                        C151869 * C152244 +
                    (C31872 * C31624 + C31873 * C31625 + C31874 * C31626 +
                     (C31628 * C7803 + C31826 + C31826 + C151791 * C7809) *
                         C152080 * C31627) *
                        C151869 * C152214) *
                       C152208)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) *
                         C152080 * C31624 +
                     C31863 * C31625 + C31864 * C31626 + C31865 * C31627) *
                        C152259 -
                    ((C31628 * C2053 + C32021 + C32021 + C151791 * C2061) *
                         C152080 * C31627 +
                     (C31628 * C1538 + C32022 + C32022 + C151791 * C1562) *
                         C152080 * C31626 +
                     (C31628 * C1083 + C32023 + C32023 + C151791 * C1095) *
                         C152080 * C31625 +
                     (C31628 * C550 + C32024 + C32024 + C151791 * C574) *
                         C152080 * C31624) *
                        C152246 +
                    ((C31628 * C551 + C32025 + C32025 + C151791 * C575) *
                         C152080 * C31624 +
                     (C31628 * C1534 + C32026 + C32026 + C151791 * C1558) *
                         C152080 * C31625 +
                     (C31628 * C1539 + C32027 + C32027 + C151791 * C1563) *
                         C152080 * C31626 +
                     (C31628 * C8064 + C32028 + C32028 + C151791 * C8070) *
                         C152080 * C31627) *
                        C152217) *
                       C151851 * C335 +
                   (((C31628 * C549 + C32029 + C32029 + C151791 * C573) *
                         C152080 * C31624 +
                     (C31628 * C1084 + C32030 + C32030 + C151791 * C1096) *
                         C152080 * C31625 +
                     (C31628 * C1537 + C32031 + C32031 + C151791 * C1561) *
                         C152080 * C31626 +
                     (C31628 * C2054 + C32032 + C32032 + C151791 * C2062) *
                         C152080 * C31627) *
                        C152246 -
                    (C31869 * C31627 + C31868 * C31626 + C31867 * C31625 +
                     (C31628 * C143 + C31638 + C31638 + C151791 * C159) *
                         C152080 * C31624) *
                        C152259 -
                    ((C31628 * C8065 + C32033 + C32033 + C151791 * C8071) *
                         C152080 * C31627 +
                     (C31628 * C1540 + C32034 + C32034 + C151791 * C1564) *
                         C152080 * C31626 +
                     (C31628 * C1533 + C32035 + C32035 + C151791 * C1557) *
                         C152080 * C31625 +
                     (C31628 * C552 + C32036 + C32036 + C151791 * C576) *
                         C152080 * C31624) *
                        C152217) *
                       C151851 * C336 +
                   (((C31628 * C144 + C31639 + C31639 + C151791 * C160) *
                         C152080 * C31624 +
                     C31871 * C31625 + C31872 * C31626 + C31873 * C31627) *
                        C152259 -
                    ((C31628 * C2055 + C32037 + C32037 + C151791 * C2063) *
                         C152080 * C31627 +
                     (C31628 * C1536 + C32038 + C32038 + C151791 * C1560) *
                         C152080 * C31626 +
                     (C31628 * C1085 + C32039 + C32039 + C151791 * C1097) *
                         C152080 * C31625 +
                     (C31628 * C548 + C32040 + C32040 + C151791 * C572) *
                         C152080 * C31624) *
                        C152246 +
                    ((C31628 * C553 + C32041 + C32041 + C151791 * C577) *
                         C152080 * C31624 +
                     (C31628 * C1532 + C32042 + C32042 + C151791 * C1556) *
                         C152080 * C31625 +
                     (C31628 * C1541 + C32043 + C32043 + C151791 * C1565) *
                         C152080 * C31626 +
                     (C31628 * C8066 + C32044 + C32044 + C151791 * C8072) *
                         C152080 * C31627) *
                        C152217) *
                       C151851 * C152208)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
                  ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) *
                         C152080 * C31624 +
                     C31863 * C31625 + C31864 * C31626 + C31865 * C31627) *
                        C151869 * C1259 -
                    (C31866 * C31627 + C31865 * C31626 + C31864 * C31625 +
                     C31863 * C31624) *
                        C151869 * C1260 +
                    (C31864 * C31624 + C31865 * C31625 + C31866 * C31626 +
                     (C31628 * C7801 + C31806 + C31806 + C151791 * C7807) *
                         C152080 * C31627) *
                        C151869 * C152214) *
                       C152255 +
                   ((C31867 * C31624 + C31868 * C31625 + C31869 * C31626 +
                     C31870 * C31627) *
                        C151869 * C1260 -
                    (C31869 * C31627 + C31868 * C31626 + C31867 * C31625 +
                     (C31628 * C143 + C31638 + C31638 + C151791 * C159) *
                         C152080 * C31624) *
                        C151869 * C1259 -
                    ((C31628 * C7802 + C31816 + C31816 + C151791 * C7808) *
                         C152080 * C31627 +
                     C31870 * C31626 + C31869 * C31625 + C31868 * C31624) *
                        C151869 * C152214) *
                       C152240 +
                   (((C31628 * C144 + C31639 + C31639 + C151791 * C160) *
                         C152080 * C31624 +
                     C31871 * C31625 + C31872 * C31626 + C31873 * C31627) *
                        C151869 * C1259 -
                    (C31874 * C31627 + C31873 * C31626 + C31872 * C31625 +
                     C31871 * C31624) *
                        C151869 * C1260 +
                    (C31872 * C31624 + C31873 * C31625 + C31874 * C31626 +
                     (C31628 * C7803 + C31826 + C31826 + C151791 * C7809) *
                         C152080 * C31627) *
                        C151869 * C152214) *
                       C152208)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
                  (((C31628 * C142 + C31631 + C31631 + C151791 * C158) *
                        C152080 * C31624 +
                    C31863 * C31625 + C31864 * C31626 + C31865 * C31627) *
                       C151869 * C1347 -
                   (C31866 * C31627 + C31865 * C31626 + C31864 * C31625 +
                    C31863 * C31624) *
                       C151869 * C1348 +
                   (C31864 * C31624 + C31865 * C31625 + C31866 * C31626 +
                    C32822 * C31627) *
                       C151869 * C1349 -
                   (C32823 * C31627 + C32822 * C31626 + C31866 * C31625 +
                    C31865 * C31624) *
                       C151869 * C1350 +
                   (C31866 * C31624 + C32822 * C31625 + C32823 * C31626 +
                    (C31628 * C32806 + C32815 + C32815 + C151791 * C32808) *
                        C152080 * C31627) *
                       C151869 * C1351) *
                  C151823) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
                  ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) *
                         C152080 * C31624 +
                     C31863 * C31625 + C31864 * C31626 + C31865 * C31627) *
                        C152259 -
                    (C32570 * C31627 + C32571 * C31626 + C32572 * C31625 +
                     (C31628 * C550 + C32024 + C32024 + C151791 * C574) *
                         C152080 * C31624) *
                        C152246 +
                    ((C31628 * C551 + C32025 + C32025 + C151791 * C575) *
                         C152080 * C31624 +
                     C33001 * C31625 + C33002 * C31626 + C33003 * C31627) *
                        C152217) *
                       C1259 +
                   ((C32572 * C31624 + C32571 * C31625 + C32570 * C31626 +
                     C33004 * C31627) *
                        C152246 -
                    (C31866 * C31627 + C31865 * C31626 + C31864 * C31625 +
                     C31863 * C31624) *
                        C152259 -
                    (C33005 * C31627 + C33003 * C31626 + C33002 * C31625 +
                     C33001 * C31624) *
                        C152217) *
                       C1260 +
                   ((C31864 * C31624 + C31865 * C31625 + C31866 * C31626 +
                     C32822 * C31627) *
                        C152259 -
                    ((C31628 * C25783 + C32984 + C32984 + C151791 * C25787) *
                         C152080 * C31627 +
                     C33004 * C31626 + C32570 * C31625 + C32571 * C31624) *
                        C152246 +
                    (C33002 * C31624 + C33003 * C31625 + C33005 * C31626 +
                     (C31628 * C32969 + C32985 + C32985 + C151791 * C32971) *
                         C152080 * C31627) *
                        C152217) *
                       C152214) *
                  C151823) /
                     (p * q * std::sqrt(p + q));
    d2ee[348] += (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                  ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 +
                      C6091 * C143 + C6097 + C6097 + C6085 * C159 +
                      C6093 * C144 + C6098 + C6098 + C6086 * C160) *
                         C152080 * C152187 +
                     (C6434 + C6435 + C6436) * C152080 * C152068) *
                        C152173 -
                    ((C6093 * C1085 + C6670 + C6670 + C6086 * C1097 +
                      C6091 * C1084 + C6671 + C6671 + C6085 * C1096 +
                      C6089 * C1083 + C6672 + C6672 + C6084 * C1095) *
                         C152080 * C152068 +
                     (C6093 * C548 + C6673 + C6673 + C6086 * C572 +
                      C6091 * C549 + C6674 + C6674 + C6085 * C573 +
                      C6089 * C550 + C6675 + C6675 + C6084 * C574) *
                         C152080 * C152187) *
                        C151956) *
                       C151851 * C739 +
                   (((C6089 * C549 + C6682 + C6682 + C6084 * C573 +
                      C6091 * C548 + C6683 + C6683 + C6085 * C572 +
                      C6093 * C547 + C6684 + C6684 + C6086 * C571) *
                         C152080 * C152187 +
                     (C6089 * C1084 + C6685 + C6685 + C6084 * C1096 +
                      C6091 * C1085 + C6686 + C6686 + C6085 * C1097 +
                      C6093 * C1086 + C6687 + C6687 + C6086 * C1098) *
                         C152080 * C152068) *
                        C151956 -
                    ((C6442 + C6441 + C6440) * C152080 * C152068 +
                     (C6093 * C145 + C6105 + C6105 + C6086 * C161 +
                      C6091 * C144 + C6106 + C6106 + C6085 * C160 +
                      C6089 * C143 + C6107 + C6107 + C6084 * C159) *
                         C152080 * C152187) *
                        C152173) *
                       C151851 * C740 +
                   (((C6089 * C144 + C6108 + C6108 + C6084 * C160 +
                      C6091 * C145 + C6109 + C6109 + C6085 * C161 +
                      C6093 * C146 + C6110 + C6110 + C6086 * C162) *
                         C152080 * C152187 +
                     (C6446 + C6447 + C6448) * C152080 * C152068) *
                        C152173 -
                    ((C6093 * C1087 + C6694 + C6694 + C6086 * C1099 +
                      C6091 * C1086 + C6695 + C6695 + C6085 * C1098 +
                      C6089 * C1085 + C6696 + C6696 + C6084 * C1097) *
                         C152080 * C152068 +
                     (C6093 * C555 + C6697 + C6697 + C6086 * C579 +
                      C6091 * C547 + C6698 + C6698 + C6085 * C571 +
                      C6089 * C548 + C6699 + C6699 + C6084 * C572) *
                         C152080 * C152187) *
                        C151956) *
                       C151851 * C741 +
                   (((C6089 * C547 + C7112 + C7112 + C6084 * C571 +
                      C6091 * C555 + C7113 + C7113 + C6085 * C579 +
                      C6093 * C557 + C7114 + C7114 + C6086 * C581) *
                         C152080 * C152187 +
                     (C6089 * C1086 + C7115 + C7115 + C6084 * C1098 +
                      C6091 * C1087 + C7116 + C7116 + C6085 * C1099 +
                      C6093 * C1088 + C7117 + C7117 + C6086 * C1100) *
                         C152080 * C152068) *
                        C151956 -
                    ((C6917 + C6916 + C6915) * C152080 * C152068 +
                     (C6093 * C147 + C6117 + C6117 + C6086 * C163 +
                      C6091 * C146 + C6118 + C6118 + C6085 * C162 +
                      C6089 * C145 + C6119 + C6119 + C6084 * C161) *
                         C152080 * C152187) *
                        C152173) *
                       C151851 * C152218)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                  (((((C6089 * C142 + C6096 + C6096 + C6084 * C158 +
                       C6091 * C143 + C6097 + C6097 + C6085 * C159 +
                       C6093 * C144 + C6098 + C6098 + C6086 * C160) *
                          C152080 * C152187 +
                      (C6434 + C6435 + C6436) * C152080 * C152068) *
                         C152173 -
                     ((C7453 + C7454 + C7455) * C152080 * C152068 +
                      (C6093 * C548 + C6673 + C6673 + C6086 * C572 +
                       C6091 * C549 + C6674 + C6674 + C6085 * C573 +
                       C6089 * C550 + C6675 + C6675 + C6084 * C574) *
                          C152080 * C152187) *
                         C151956) *
                        C1259 +
                    (((C7455 + C7454 + C7453) * C152080 * C152187 +
                      (C8122 + C8123 + C8124) * C152080 * C152068) *
                         C151956 -
                     ((C6437 + C6438 + C6439) * C152080 * C152068 +
                      (C6436 + C6435 + C6434) * C152080 * C152187) *
                         C152173) *
                        C1260 +
                    (((C6439 + C6438 + C6437) * C152080 * C152187 +
                      (C7841 + C7842 + C7843) * C152080 * C152068) *
                         C152173 -
                     ((C6093 * C2055 + C8095 + C8095 + C6086 * C2063 +
                       C6091 * C2054 + C8096 + C8096 + C6085 * C2062 +
                       C6089 * C2053 + C8097 + C8097 + C6084 * C2061) *
                          C152080 * C152068 +
                      (C8124 + C8123 + C8122) * C152080 * C152187) *
                         C151956) *
                        C152214) *
                       C152158 +
                   ((((C6089 * C549 + C6682 + C6682 + C6084 * C573 +
                       C6091 * C548 + C6683 + C6683 + C6085 * C572 +
                       C6093 * C547 + C6684 + C6684 + C6086 * C571) *
                          C152080 * C152187 +
                      (C7456 + C7457 + C7458) * C152080 * C152068) *
                         C151956 -
                     ((C6442 + C6441 + C6440) * C152080 * C152068 +
                      (C6093 * C145 + C6105 + C6105 + C6086 * C161 +
                       C6091 * C144 + C6106 + C6106 + C6085 * C160 +
                       C6089 * C143 + C6107 + C6107 + C6084 * C159) *
                          C152080 * C152187) *
                         C152173) *
                        C1259 +
                    (((C6440 + C6441 + C6442) * C152080 * C152187 +
                      (C6443 + C6444 + C6445) * C152080 * C152068) *
                         C152173 -
                     ((C8645 + C8646 + C8647) * C152080 * C152068 +
                      (C7458 + C7457 + C7456) * C152080 * C152187) *
                         C151956) *
                        C1260 +
                    (((C8647 + C8646 + C8645) * C152080 * C152187 +
                      (C6089 * C2054 + C8636 + C8636 + C6084 * C2062 +
                       C6091 * C2055 + C8637 + C8637 + C6085 * C2063 +
                       C6093 * C2056 + C8638 + C8638 + C6086 * C2064) *
                          C152080 * C152068) *
                         C151956 -
                     ((C8337 + C8338 + C8339) * C152080 * C152068 +
                      (C6445 + C6444 + C6443) * C152080 * C152187) *
                         C152173) *
                        C152214) *
                       C151834)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                  ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) *
                         C152080 * C31624 +
                     C31863 * C31625 + C31864 * C31626 + C31865 * C31627) *
                        C152173 -
                    ((C31628 * C2053 + C32021 + C32021 + C151791 * C2061) *
                         C152080 * C31627 +
                     (C31628 * C1538 + C32022 + C32022 + C151791 * C1562) *
                         C152080 * C31626 +
                     (C31628 * C1083 + C32023 + C32023 + C151791 * C1095) *
                         C152080 * C31625 +
                     (C31628 * C550 + C32024 + C32024 + C151791 * C574) *
                         C152080 * C31624) *
                        C151956) *
                       C151851 * C739 +
                   (((C31628 * C549 + C32029 + C32029 + C151791 * C573) *
                         C152080 * C31624 +
                     (C31628 * C1084 + C32030 + C32030 + C151791 * C1096) *
                         C152080 * C31625 +
                     (C31628 * C1537 + C32031 + C32031 + C151791 * C1561) *
                         C152080 * C31626 +
                     (C31628 * C2054 + C32032 + C32032 + C151791 * C2062) *
                         C152080 * C31627) *
                        C151956 -
                    (C31869 * C31627 + C31868 * C31626 + C31867 * C31625 +
                     (C31628 * C143 + C31638 + C31638 + C151791 * C159) *
                         C152080 * C31624) *
                        C152173) *
                       C151851 * C740 +
                   (((C31628 * C144 + C31639 + C31639 + C151791 * C160) *
                         C152080 * C31624 +
                     C31871 * C31625 + C31872 * C31626 + C31873 * C31627) *
                        C152173 -
                    ((C31628 * C2055 + C32037 + C32037 + C151791 * C2063) *
                         C152080 * C31627 +
                     (C31628 * C1536 + C32038 + C32038 + C151791 * C1560) *
                         C152080 * C31626 +
                     (C31628 * C1085 + C32039 + C32039 + C151791 * C1097) *
                         C152080 * C31625 +
                     (C31628 * C548 + C32040 + C32040 + C151791 * C572) *
                         C152080 * C31624) *
                        C151956) *
                       C151851 * C741 +
                   (((C31628 * C547 + C32324 + C32324 + C151791 * C571) *
                         C152080 * C31624 +
                     (C31628 * C1086 + C32325 + C32325 + C151791 * C1098) *
                         C152080 * C31625 +
                     (C31628 * C1535 + C32326 + C32326 + C151791 * C1559) *
                         C152080 * C31626 +
                     (C31628 * C2056 + C32327 + C32327 + C151791 * C2064) *
                         C152080 * C31627) *
                        C151956 -
                    (C32193 * C31627 + C32192 * C31626 + C32191 * C31625 +
                     (C31628 * C145 + C31646 + C31646 + C151791 * C161) *
                         C152080 * C31624) *
                        C152173) *
                       C151851 * C152218)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
                  (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) *
                          C152080 * C31624 +
                      C31863 * C31625 + C31864 * C31626 + C31865 * C31627) *
                         C152173 -
                     (C32570 * C31627 + C32571 * C31626 + C32572 * C31625 +
                      (C31628 * C550 + C32024 + C32024 + C151791 * C574) *
                          C152080 * C31624) *
                         C151956) *
                        C1259 +
                    ((C32572 * C31624 + C32571 * C31625 + C32570 * C31626 +
                      C33004 * C31627) *
                         C151956 -
                     (C31866 * C31627 + C31865 * C31626 + C31864 * C31625 +
                      C31863 * C31624) *
                         C152173) *
                        C1260 +
                    ((C31864 * C31624 + C31865 * C31625 + C31866 * C31626 +
                      C32822 * C31627) *
                         C152173 -
                     ((C31628 * C25783 + C32984 + C32984 + C151791 * C25787) *
                          C152080 * C31627 +
                      C33004 * C31626 + C32570 * C31625 + C32571 * C31624) *
                         C151956) *
                        C152214) *
                       C152158 +
                   ((((C31628 * C549 + C32029 + C32029 + C151791 * C573) *
                          C152080 * C31624 +
                      C32573 * C31625 + C32574 * C31626 + C32575 * C31627) *
                         C151956 -
                     (C31869 * C31627 + C31868 * C31626 + C31867 * C31625 +
                      (C31628 * C143 + C31638 + C31638 + C151791 * C159) *
                          C152080 * C31624) *
                         C152173) *
                        C1259 +
                    ((C31867 * C31624 + C31868 * C31625 + C31869 * C31626 +
                      C31870 * C31627) *
                         C152173 -
                     (C33343 * C31627 + C32575 * C31626 + C32574 * C31625 +
                      C32573 * C31624) *
                         C151956) *
                        C1260 +
                    ((C32574 * C31624 + C32575 * C31625 + C33343 * C31626 +
                      (C31628 * C25784 + C33339 + C33339 + C151791 * C25788) *
                          C152080 * C31627) *
                         C151956 -
                     (C33142 * C31627 + C31870 * C31626 + C31869 * C31625 +
                      C31868 * C31624) *
                         C152173) *
                        C152214) *
                       C151834)) /
                     (p * q * std::sqrt(p + q));
    d2ee[349] += (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
                  (((C6089 * C142 + C6096 + C6096 + C6084 * C158 +
                     C6091 * C143 + C6097 + C6097 + C6085 * C159 +
                     C6093 * C144 + C6098 + C6098 + C6086 * C160) *
                        C152080 * C152187 +
                    (C6089 * C341 + C6099 + C6099 + C6084 * C365 +
                     C6091 * C340 + C6100 + C6100 + C6085 * C364 +
                     C6093 * C339 + C6101 + C6101 + C6086 * C363) *
                        C152080 * C152068) *
                       C151869 * C151851 * C129 -
                   ((C6093 * C338 + C6102 + C6102 + C6086 * C362 +
                     C6091 * C339 + C6103 + C6103 + C6085 * C363 +
                     C6089 * C340 + C6104 + C6104 + C6084 * C364) *
                        C152080 * C152068 +
                    (C6093 * C145 + C6105 + C6105 + C6086 * C161 +
                     C6091 * C144 + C6106 + C6106 + C6085 * C160 +
                     C6089 * C143 + C6107 + C6107 + C6084 * C159) *
                        C152080 * C152187) *
                       C151869 * C151851 * C130 +
                   ((C6089 * C144 + C6108 + C6108 + C6084 * C160 +
                     C6091 * C145 + C6109 + C6109 + C6085 * C161 +
                     C6093 * C146 + C6110 + C6110 + C6086 * C162) *
                        C152080 * C152187 +
                    (C6089 * C339 + C6111 + C6111 + C6084 * C363 +
                     C6091 * C338 + C6112 + C6112 + C6085 * C362 +
                     C6093 * C346 + C6113 + C6113 + C6086 * C370) *
                        C152080 * C152068) *
                       C151869 * C151851 * C131 -
                   ((C6093 * C348 + C6114 + C6114 + C6086 * C372 +
                     C6091 * C346 + C6115 + C6115 + C6085 * C370 +
                     C6089 * C338 + C6116 + C6116 + C6084 * C362) *
                        C152080 * C152068 +
                    (C6093 * C147 + C6117 + C6117 + C6086 * C163 +
                     C6091 * C146 + C6118 + C6118 + C6085 * C162 +
                     C6089 * C145 + C6119 + C6119 + C6084 * C161) *
                        C152080 * C152187) *
                       C151869 * C151851 * C132 +
                   ((C6089 * C146 + C6120 + C6120 + C6084 * C162 +
                     C6091 * C147 + C6121 + C6121 + C6085 * C163 +
                     C6093 * C148 + C6122 + C6122 + C6086 * C164) *
                        C152080 * C152187 +
                    (C6089 * C346 + C6123 + C6123 + C6084 * C370 +
                     C6091 * C348 + C6124 + C6124 + C6085 * C372 +
                     C6093 * C743 + C6125 + C6125 + C6086 * C745) *
                        C152080 * C152068) *
                       C151869 * C151851 * C133)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
                  ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 +
                      C6091 * C143 + C6097 + C6097 + C6085 * C159 +
                      C6093 * C144 + C6098 + C6098 + C6086 * C160) *
                         C152080 * C152187 +
                     (C6434 + C6435 + C6436) * C152080 * C152068) *
                        C151869 * C152258 -
                    ((C6437 + C6438 + C6439) * C152080 * C152068 +
                     (C6436 + C6435 + C6434) * C152080 * C152187) *
                        C151869 * C152244 +
                    ((C6439 + C6438 + C6437) * C152080 * C152187 +
                     (C6089 * C1356 + C6359 + C6359 + C6084 * C1372 +
                      C6091 * C1355 + C6360 + C6360 + C6085 * C1371 +
                      C6093 * C1354 + C6361 + C6361 + C6086 * C1370) *
                         C152080 * C152068) *
                        C151869 * C152214) *
                       C335 +
                   (((C6440 + C6441 + C6442) * C152080 * C152187 +
                     (C6443 + C6444 + C6445) * C152080 * C152068) *
                        C151869 * C152244 -
                    ((C6442 + C6441 + C6440) * C152080 * C152068 +
                     (C6093 * C145 + C6105 + C6105 + C6086 * C161 +
                      C6091 * C144 + C6106 + C6106 + C6085 * C160 +
                      C6089 * C143 + C6107 + C6107 + C6084 * C159) *
                         C152080 * C152187) *
                        C151869 * C152258 -
                    ((C6093 * C1353 + C6377 + C6377 + C6086 * C1369 +
                      C6091 * C1354 + C6378 + C6378 + C6085 * C1370 +
                      C6089 * C1355 + C6379 + C6379 + C6084 * C1371) *
                         C152080 * C152068 +
                     (C6445 + C6444 + C6443) * C152080 * C152187) *
                        C151869 * C152214) *
                       C336 +
                   (((C6089 * C144 + C6108 + C6108 + C6084 * C160 +
                      C6091 * C145 + C6109 + C6109 + C6085 * C161 +
                      C6093 * C146 + C6110 + C6110 + C6086 * C162) *
                         C152080 * C152187 +
                     (C6446 + C6447 + C6448) * C152080 * C152068) *
                        C151869 * C152258 -
                    ((C6449 + C6450 + C6451) * C152080 * C152068 +
                     (C6448 + C6447 + C6446) * C152080 * C152187) *
                        C151869 * C152244 +
                    ((C6451 + C6450 + C6449) * C152080 * C152187 +
                     (C6089 * C1354 + C6395 + C6395 + C6084 * C1370 +
                      C6091 * C1353 + C6396 + C6396 + C6085 * C1369 +
                      C6093 * C1715 + C6397 + C6397 + C6086 * C1717) *
                         C152080 * C152068) *
                        C151869 * C152214) *
                       C152208)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
                  ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 +
                      C6091 * C143 + C6097 + C6097 + C6085 * C159 +
                      C6093 * C144 + C6098 + C6098 + C6086 * C160) *
                         C152080 * C152187 +
                     (C6434 + C6435 + C6436) * C152080 * C152068) *
                        C151869 * C1259 -
                    ((C6437 + C6438 + C6439) * C152080 * C152068 +
                     (C6436 + C6435 + C6434) * C152080 * C152187) *
                        C151869 * C1260 +
                    ((C6439 + C6438 + C6437) * C152080 * C152187 +
                     (C6089 * C1356 + C6359 + C6359 + C6084 * C1372 +
                      C6091 * C1355 + C6360 + C6360 + C6085 * C1371 +
                      C6093 * C1354 + C6361 + C6361 + C6086 * C1370) *
                         C152080 * C152068) *
                        C151869 * C152214) *
                       C152255 +
                   (((C6440 + C6441 + C6442) * C152080 * C152187 +
                     (C6443 + C6444 + C6445) * C152080 * C152068) *
                        C151869 * C1260 -
                    ((C6442 + C6441 + C6440) * C152080 * C152068 +
                     (C6093 * C145 + C6105 + C6105 + C6086 * C161 +
                      C6091 * C144 + C6106 + C6106 + C6085 * C160 +
                      C6089 * C143 + C6107 + C6107 + C6084 * C159) *
                         C152080 * C152187) *
                        C151869 * C1259 -
                    ((C6093 * C1353 + C6377 + C6377 + C6086 * C1369 +
                      C6091 * C1354 + C6378 + C6378 + C6085 * C1370 +
                      C6089 * C1355 + C6379 + C6379 + C6084 * C1371) *
                         C152080 * C152068 +
                     (C6445 + C6444 + C6443) * C152080 * C152187) *
                        C151869 * C152214) *
                       C152240 +
                   (((C6089 * C144 + C6108 + C6108 + C6084 * C160 +
                      C6091 * C145 + C6109 + C6109 + C6085 * C161 +
                      C6093 * C146 + C6110 + C6110 + C6086 * C162) *
                         C152080 * C152187 +
                     (C6446 + C6447 + C6448) * C152080 * C152068) *
                        C151869 * C1259 -
                    ((C6449 + C6450 + C6451) * C152080 * C152068 +
                     (C6448 + C6447 + C6446) * C152080 * C152187) *
                        C151869 * C1260 +
                    ((C6451 + C6450 + C6449) * C152080 * C152187 +
                     (C6089 * C1354 + C6395 + C6395 + C6084 * C1370 +
                      C6091 * C1353 + C6396 + C6396 + C6085 * C1369 +
                      C6093 * C1715 + C6397 + C6397 + C6086 * C1717) *
                         C152080 * C152068) *
                        C151869 * C152214) *
                       C152208)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
                  (((C6089 * C142 + C6096 + C6096 + C6084 * C158 +
                     C6091 * C143 + C6097 + C6097 + C6085 * C159 +
                     C6093 * C144 + C6098 + C6098 + C6086 * C160) *
                        C152080 * C152187 +
                    (C6434 + C6435 + C6436) * C152080 * C152068) *
                       C151869 * C1347 -
                   ((C6437 + C6438 + C6439) * C152080 * C152068 +
                    (C6436 + C6435 + C6434) * C152080 * C152187) *
                       C151869 * C1348 +
                   ((C6439 + C6438 + C6437) * C152080 * C152187 +
                    (C7841 + C7842 + C7843) * C152080 * C152068) *
                       C151869 * C1349 -
                   ((C7844 + C7845 + C7846) * C152080 * C152068 +
                    (C7843 + C7842 + C7841) * C152080 * C152187) *
                       C151869 * C1350 +
                   ((C7846 + C7845 + C7844) * C152080 * C152187 +
                    (C6089 * C7801 + C7826 + C7826 + C6084 * C7807 +
                     C6091 * C7802 + C7827 + C7827 + C6085 * C7808 +
                     C6093 * C7803 + C7828 + C7828 + C6086 * C7809) *
                        C152080 * C152068) *
                       C151869 * C1351) *
                  C151823) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
                  (((C31628 * C142 + C31631 + C31631 + C151791 * C158) *
                        C152080 * C31624 +
                    (C31628 * C341 + C31632 + C31632 + C151791 * C365) *
                        C152080 * C31625 +
                    (C31628 * C342 + C31633 + C31633 + C151791 * C366) *
                        C152080 * C31626 +
                    (C31628 * C1356 + C31634 + C31634 + C151791 * C1372) *
                        C152080 * C31627) *
                       C151869 * C151851 * C129 -
                   ((C31628 * C1355 + C31635 + C31635 + C151791 * C1371) *
                        C152080 * C31627 +
                    (C31628 * C343 + C31636 + C31636 + C151791 * C367) *
                        C152080 * C31626 +
                    (C31628 * C340 + C31637 + C31637 + C151791 * C364) *
                        C152080 * C31625 +
                    (C31628 * C143 + C31638 + C31638 + C151791 * C159) *
                        C152080 * C31624) *
                       C151869 * C151851 * C130 +
                   ((C31628 * C144 + C31639 + C31639 + C151791 * C160) *
                        C152080 * C31624 +
                    (C31628 * C339 + C31640 + C31640 + C151791 * C363) *
                        C152080 * C31625 +
                    (C31628 * C344 + C31641 + C31641 + C151791 * C368) *
                        C152080 * C31626 +
                    (C31628 * C1354 + C31642 + C31642 + C151791 * C1370) *
                        C152080 * C31627) *
                       C151869 * C151851 * C131 -
                   ((C31628 * C1353 + C31643 + C31643 + C151791 * C1369) *
                        C152080 * C31627 +
                    (C31628 * C345 + C31644 + C31644 + C151791 * C369) *
                        C152080 * C31626 +
                    (C31628 * C338 + C31645 + C31645 + C151791 * C362) *
                        C152080 * C31625 +
                    (C31628 * C145 + C31646 + C31646 + C151791 * C161) *
                        C152080 * C31624) *
                       C151869 * C151851 * C132 +
                   ((C31628 * C146 + C31647 + C31647 + C151791 * C162) *
                        C152080 * C31624 +
                    (C31628 * C346 + C31648 + C31648 + C151791 * C370) *
                        C152080 * C31625 +
                    (C31628 * C347 + C31649 + C31649 + C151791 * C371) *
                        C152080 * C31626 +
                    (C31628 * C1715 + C31650 + C31650 + C151791 * C1717) *
                        C152080 * C31627) *
                       C151869 * C151851 * C133)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
                  ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) *
                         C152080 * C31624 +
                     C31863 * C31625 + C31864 * C31626 + C31865 * C31627) *
                        C151869 * C152258 -
                    (C31866 * C31627 + C31865 * C31626 + C31864 * C31625 +
                     C31863 * C31624) *
                        C151869 * C152244 +
                    (C31864 * C31624 + C31865 * C31625 + C31866 * C31626 +
                     (C31628 * C7801 + C31806 + C31806 + C151791 * C7807) *
                         C152080 * C31627) *
                        C151869 * C152214) *
                       C335 +
                   ((C31867 * C31624 + C31868 * C31625 + C31869 * C31626 +
                     C31870 * C31627) *
                        C151869 * C152244 -
                    (C31869 * C31627 + C31868 * C31626 + C31867 * C31625 +
                     (C31628 * C143 + C31638 + C31638 + C151791 * C159) *
                         C152080 * C31624) *
                        C151869 * C152258 -
                    ((C31628 * C7802 + C31816 + C31816 + C151791 * C7808) *
                         C152080 * C31627 +
                     C31870 * C31626 + C31869 * C31625 + C31868 * C31624) *
                        C151869 * C152214) *
                       C336 +
                   (((C31628 * C144 + C31639 + C31639 + C151791 * C160) *
                         C152080 * C31624 +
                     C31871 * C31625 + C31872 * C31626 + C31873 * C31627) *
                        C151869 * C152258 -
                    (C31874 * C31627 + C31873 * C31626 + C31872 * C31625 +
                     C31871 * C31624) *
                        C151869 * C152244 +
                    (C31872 * C31624 + C31873 * C31625 + C31874 * C31626 +
                     (C31628 * C7803 + C31826 + C31826 + C151791 * C7809) *
                         C152080 * C31627) *
                        C151869 * C152214) *
                       C152208)) /
                     (p * q * std::sqrt(p + q)) +
                 (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
                  ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) *
                         C152080 * C31624 +
                     C31863 * C31625 + C31864 * C31626 + C31865 * C31627) *
                        C151869 * C1259 -
                    (C31866 * C31627 + C31865 * C31626 + C31864 * C31625 +
                     C31863 * C31624) *
                        C151869 * C1260 +
                    (C31864 * C31624 + C31865 * C31625 + C31866 * C31626 +
                     (C31628 * C7801 + C31806 + C31806 + C151791 * C7807) *
                         C152080 * C31627) *
                        C151869 * C152214) *
                       C152255 +
                   ((C31867 * C31624 + C31868 * C31625 + C31869 * C31626 +
                     C31870 * C31627) *
                        C151869 * C1260 -
                    (C31869 * C31627 + C31868 * C31626 + C31867 * C31625 +
                     (C31628 * C143 + C31638 + C31638 + C151791 * C159) *
                         C152080 * C31624) *
                        C151869 * C1259 -
                    ((C31628 * C7802 + C31816 + C31816 + C151791 * C7808) *
                         C152080 * C31627 +
                     C31870 * C31626 + C31869 * C31625 + C31868 * C31624) *
                        C151869 * C152214) *
                       C152240 +
                   (((C31628 * C144 + C31639 + C31639 + C151791 * C160) *
                         C152080 * C31624 +
                     C31871 * C31625 + C31872 * C31626 + C31873 * C31627) *
                        C151869 * C1259 -
                    (C31874 * C31627 + C31873 * C31626 + C31872 * C31625 +
                     C31871 * C31624) *
                        C151869 * C1260 +
                    (C31872 * C31624 + C31873 * C31625 + C31874 * C31626 +
                     (C31628 * C7803 + C31826 + C31826 + C151791 * C7809) *
                         C152080 * C31627) *
                        C151869 * C152214) *
                       C152208)) /
                     (p * q * std::sqrt(p + q)) -
                 (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
                  (((C31628 * C142 + C31631 + C31631 + C151791 * C158) *
                        C152080 * C31624 +
                    C31863 * C31625 + C31864 * C31626 + C31865 * C31627) *
                       C151869 * C1347 -
                   (C31866 * C31627 + C31865 * C31626 + C31864 * C31625 +
                    C31863 * C31624) *
                       C151869 * C1348 +
                   (C31864 * C31624 + C31865 * C31625 + C31866 * C31626 +
                    C32822 * C31627) *
                       C151869 * C1349 -
                   (C32823 * C31627 + C32822 * C31626 + C31866 * C31625 +
                    C31865 * C31624) *
                       C151869 * C1350 +
                   (C31866 * C31624 + C32822 * C31625 + C32823 * C31626 +
                    (C31628 * C32806 + C32815 + C32815 + C151791 * C32808) *
                        C152080 * C31627) *
                       C151869 * C1351) *
                  C151823) /
                     (p * q * std::sqrt(p + q));
    d2ee[350] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
             C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
             C6086 * C160) *
                C152188 +
            (C15243 + C15244 + C15245) * C152092) *
               C152054 * C151869 * C151910 -
           ((C7453 + C7454 + C7455) * C152092 +
            (C6436 + C6435 + C6434) * C152188) *
               C152054 * C151869 * C151917 +
           ((C6439 + C6438 + C6437) * C152188 +
            (C8122 + C8123 + C8124) * C152092) *
               C152054 * C151869 * C3585) *
              C151828 +
          (((C6440 + C6441 + C6442) * C152188 +
            (C7456 + C7457 + C7458) * C152092) *
               C152054 * C151869 * C151917 -
           ((C15251 + C15250 + C15249) * C152092 +
            (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
             C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
             C6084 * C159) *
                C152188) *
               C152054 * C151869 * C151910 -
           ((C8645 + C8646 + C8647) * C152092 +
            (C6445 + C6444 + C6443) * C152188) *
               C152054 * C151869 * C3585) *
              C151837 +
          (((C6089 * C144 + C6108 + C6108 + C6084 * C160 + C6091 * C145 +
             C6109 + C6109 + C6085 * C161 + C6093 * C146 + C6110 + C6110 +
             C6086 * C162) *
                C152188 +
            (C15255 + C15256 + C15257) * C152092) *
               C152054 * C151869 * C151910 -
           ((C7459 + C7460 + C7461) * C152092 +
            (C6448 + C6447 + C6446) * C152188) *
               C152054 * C151869 * C151917 +
           ((C6451 + C6450 + C6449) * C152188 +
            (C6089 * C1536 + C7432 + C7432 + C6084 * C1560 + C6091 * C1535 +
             C7433 + C7433 + C6085 * C1559 + C6093 * C1916 + C7434 + C7434 +
             C6086 * C1918) *
                C152092) *
               C152054 * C151869 * C3585) *
              C3588)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152188 +
             C37949 * C152092) *
                C23040 +
            (C37675 + C37676) * C23041 + C37693 * C23042) *
               C151869 * C151910 -
           (C39009 * C23042 + (C37678 + C37677) * C23041 +
            (C37676 + C37675) * C23040) *
               C151869 * C151917 +
           (C37693 * C23040 + (C37680 + C37679) * C23041 + C39014 * C23042) *
               C151869 * C3585) *
              C151828 +
          (((C37681 + C37682) * C23040 + (C37683 + C37684) * C23041 +
            C39437 * C23042) *
               C151869 * C151917 -
           (C37694 * C23042 + (C37682 + C37681) * C23041 +
            (C37951 * C152092 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152188) *
                C23040) *
               C151869 * C151910 -
           ((C39438 + C39439) * C23042 + (C37686 + C37685) * C23041 +
            C37694 * C23040) *
               C151869 * C3585) *
              C151837 +
          ((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C152188 +
             C37953 * C152092) *
                C23040 +
            (C37687 + C37688) * C23041 + C37695 * C23042) *
               C151869 * C151910 -
           ((C37691 + C37692) * C23042 + (C37690 + C37689) * C23041 +
            (C37688 + C37687) * C23040) *
               C151869 * C151917 +
           (C37695 * C23040 + (C37692 + C37691) * C23041 +
            (C31862 * C152188 +
             (C31628 * C8843 + C32542 + C32542 + C151791 * C8849) * C152092) *
                C23042) *
               C151869 * C3585) *
              C3588)) /
            (p * q * std::sqrt(p + q));
    d2ee[351] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
              C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
              C6086 * C160) *
                 C152188 +
             (C15243 + C15244 + C15245) * C152092) *
                C152054 * C152173 -
            ((C15246 + C15247 + C15248) * C152092 +
             (C15245 + C15244 + C15243) * C152188) *
                C152054 * C151956) *
               C151910 +
           (((C7455 + C7454 + C7453) * C152188 +
             (C8119 + C8120 + C8121) * C152092) *
                C152054 * C151956 -
            ((C7453 + C7454 + C7455) * C152092 +
             (C6436 + C6435 + C6434) * C152188) *
                C152054 * C152173) *
               C151917 +
           (((C6439 + C6438 + C6437) * C152188 +
             (C8122 + C8123 + C8124) * C152092) *
                C152054 * C152173 -
            ((C8125 + C8126 + C8127) * C152092 +
             (C8124 + C8123 + C8122) * C152188) *
                C152054 * C151956) *
               C3585) *
              C3241 +
          ((((C15249 + C15250 + C15251) * C152188 +
             (C15252 + C15253 + C15254) * C152092) *
                C152054 * C151956 -
            ((C15251 + C15250 + C15249) * C152092 +
             (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
              C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
              C6084 * C159) *
                 C152188) *
                C152054 * C152173) *
               C151910 +
           (((C6440 + C6441 + C6442) * C152188 +
             (C7456 + C7457 + C7458) * C152092) *
                C152054 * C152173 -
            ((C9753 + C9754 + C9755) * C152092 +
             (C7458 + C7457 + C7456) * C152188) *
                C152054 * C151956) *
               C151917 +
           (((C8647 + C8646 + C8645) * C152188 +
             (C6089 * C1540 + C9744 + C9744 + C6084 * C1564 + C6091 * C1541 +
              C9745 + C9745 + C6085 * C1565 + C6093 * C1542 + C9746 + C9746 +
              C6086 * C1566) *
                 C152092) *
                C152054 * C151956 -
            ((C8645 + C8646 + C8647) * C152092 +
             (C6445 + C6444 + C6443) * C152188) *
                C152054 * C152173) *
               C3585) *
              C151834)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152188 +
              C37949 * C152092) *
                 C23040 +
             (C37675 + C37676) * C23041 + C37693 * C23042) *
                C152173 -
            (C39233 * C23042 + (C38659 + C38660) * C23041 +
             (C37950 * C152092 + C37949 * C152188) * C23040) *
                C151956) *
               C151910 +
           (((C38660 + C38659) * C23040 + (C38658 + C38657) * C23041 +
             C39927 * C23042) *
                C151956 -
            (C39009 * C23042 + (C37678 + C37677) * C23041 +
             (C37676 + C37675) * C23040) *
                C152173) *
               C151917 +
           ((C37693 * C23040 + (C37680 + C37679) * C23041 + C39014 * C23042) *
                C152173 -
            ((C39928 + C39929) * C23042 + (C39239 + C39238) * C23041 +
             C39233 * C23040) *
                C151956) *
               C3585) *
              C3241 +
          ((((C37951 * C152188 + C37952 * C152092) * C23040 +
             (C38661 + C38662) * C23041 + C39730 * C23042) *
                C151956 -
            (C37694 * C23042 + (C37682 + C37681) * C23041 +
             (C37951 * C152092 +
              (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152188) *
                 C23040) *
                C152173) *
               C151910 +
           (((C37681 + C37682) * C23040 + (C37683 + C37684) * C23041 +
             C39437 * C23042) *
                C152173 -
            ((C39731 + C39732) * C23042 + (C38664 + C38663) * C23041 +
             (C38662 + C38661) * C23040) *
                C151956) *
               C151917 +
           ((C39730 * C23040 + (C39732 + C39731) * C23041 +
             (C33342 * C152188 +
              (C31628 * C25022 + C34069 + C34069 + C151791 * C25026) *
                  C152092) *
                 C23042) *
                C151956 -
            ((C39438 + C39439) * C23042 + (C37686 + C37685) * C23041 +
             C37694 * C23040) *
                C152173) *
               C3585) *
              C151834)) /
            (p * q * std::sqrt(p + q));
    d2ee[352] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
             C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
             C6086 * C160) *
                C152188 +
            (C15243 + C15244 + C15245) * C152092) *
               C152054 * C151869 * C152265 -
           ((C7453 + C7454 + C7455) * C152092 +
            (C6436 + C6435 + C6434) * C152188) *
               C152054 * C151869 * C152261 +
           ((C6439 + C6438 + C6437) * C152188 +
            (C8122 + C8123 + C8124) * C152092) *
               C152054 * C151869 * C152249 -
           ((C8866 + C8867 + C8868) * C152092 +
            (C7843 + C7842 + C7841) * C152188) *
               C152054 * C151869 * C152224) *
              C3241 +
          (((C6440 + C6441 + C6442) * C152188 +
            (C7456 + C7457 + C7458) * C152092) *
               C152054 * C151869 * C152261 -
           ((C15251 + C15250 + C15249) * C152092 +
            (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
             C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
             C6084 * C159) *
                C152188) *
               C152054 * C151869 * C152265 -
           ((C8645 + C8646 + C8647) * C152092 +
            (C6445 + C6444 + C6443) * C152188) *
               C152054 * C151869 * C152249 +
           ((C8339 + C8338 + C8337) * C152188 +
            (C6089 * C2054 + C8636 + C8636 + C6084 * C2062 + C6091 * C2055 +
             C8637 + C8637 + C6085 * C2063 + C6093 * C2056 + C8638 + C8638 +
             C6086 * C2064) *
                C152092) *
               C152054 * C151869 * C152224) *
              C151834)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
             C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
             C6086 * C160) *
                C152188 +
            (C15243 + C15244 + C15245) * C152092) *
               C152054 * C151869 * C3101 -
           ((C7453 + C7454 + C7455) * C152092 +
            (C6436 + C6435 + C6434) * C152188) *
               C152054 * C151869 * C151914) *
              C152264 +
          (((C6440 + C6441 + C6442) * C152188 +
            (C7456 + C7457 + C7458) * C152092) *
               C152054 * C151869 * C151914 -
           ((C15251 + C15250 + C15249) * C152092 +
            (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
             C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
             C6084 * C159) *
                C152188) *
               C152054 * C151869 * C3101) *
              C152257 +
          (((C6089 * C144 + C6108 + C6108 + C6084 * C160 + C6091 * C145 +
             C6109 + C6109 + C6085 * C161 + C6093 * C146 + C6110 + C6110 +
             C6086 * C162) *
                C152188 +
            (C15255 + C15256 + C15257) * C152092) *
               C152054 * C151869 * C3101 -
           ((C7459 + C7460 + C7461) * C152092 +
            (C6448 + C6447 + C6446) * C152188) *
               C152054 * C151869 * C151914) *
              C152242 +
          (((C6915 + C6916 + C6917) * C152188 +
            (C6089 * C1086 + C7115 + C7115 + C6084 * C1098 + C6091 * C1087 +
             C7116 + C7116 + C6085 * C1099 + C6093 * C1088 + C7117 + C7117 +
             C6086 * C1100) *
                C152092) *
               C152054 * C151869 * C151914 -
           ((C15666 + C15665 + C15664) * C152092 +
            (C6093 * C147 + C6117 + C6117 + C6086 * C163 + C6091 * C146 +
             C6118 + C6118 + C6085 * C162 + C6089 * C145 + C6119 + C6119 +
             C6084 * C161) *
                C152188) *
               C152054 * C151869 * C3101) *
              C152218)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
              C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
              C6086 * C160) *
                 C152188 +
             (C15243 + C15244 + C15245) * C152092) *
                C152054 * C152259 -
            ((C15246 + C15247 + C15248) * C152092 +
             (C15245 + C15244 + C15243) * C152188) *
                C152054 * C152246 +
            ((C15248 + C15247 + C15246) * C152188 +
             (C17787 + C17788 + C17789) * C152092) *
                C152054 * C152217) *
               C3101 +
           (((C7455 + C7454 + C7453) * C152188 +
             (C8119 + C8120 + C8121) * C152092) *
                C152054 * C152246 -
            ((C7453 + C7454 + C7455) * C152092 +
             (C6436 + C6435 + C6434) * C152188) *
                C152054 * C152259 -
            ((C10174 + C10175 + C10176) * C152092 +
             (C8121 + C8120 + C8119) * C152188) *
                C152054 * C152217) *
               C151914) *
              C3241 +
          ((((C15249 + C15250 + C15251) * C152188 +
             (C15252 + C15253 + C15254) * C152092) *
                C152054 * C152246 -
            ((C15251 + C15250 + C15249) * C152092 +
             (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
              C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
              C6084 * C159) *
                 C152188) *
                C152054 * C152259 -
            ((C18292 + C18293 + C18294) * C152092 +
             (C15254 + C15253 + C15252) * C152188) *
                C152054 * C152217) *
               C3101 +
           (((C6440 + C6441 + C6442) * C152188 +
             (C7456 + C7457 + C7458) * C152092) *
                C152054 * C152259 -
            ((C9753 + C9754 + C9755) * C152092 +
             (C7458 + C7457 + C7456) * C152188) *
                C152054 * C152246 +
            ((C9755 + C9754 + C9753) * C152188 +
             (C6089 * C2956 + C9953 + C9953 + C6084 * C2964 + C6091 * C2957 +
              C9954 + C9954 + C6085 * C2965 + C6093 * C2958 + C9955 + C9955 +
              C6086 * C2966) *
                 C152092) *
                C152054 * C152217) *
               C151914) *
              C151834)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152188 +
             C37949 * C152092) *
                C23040 +
            (C37675 + C37676) * C23041 + C37693 * C23042) *
               C151869 * C3101 -
           (C39009 * C23042 + (C37678 + C37677) * C23041 +
            (C37676 + C37675) * C23040) *
               C151869 * C151914) *
              C152264 +
          (((C37681 + C37682) * C23040 + (C37683 + C37684) * C23041 +
            C39437 * C23042) *
               C151869 * C151914 -
           (C37694 * C23042 + (C37682 + C37681) * C23041 +
            (C37951 * C152092 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152188) *
                C23040) *
               C151869 * C3101) *
              C152257 +
          ((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C152188 +
             C37953 * C152092) *
                C23040 +
            (C37687 + C37688) * C23041 + C37695 * C23042) *
               C151869 * C3101 -
           ((C37691 + C37692) * C23042 + (C37690 + C37689) * C23041 +
            (C37688 + C37687) * C23040) *
               C151869 * C151914) *
              C152242 +
          (((C38151 + C38163) * C23040 + (C38154 + C38164) * C23041 +
            (C32190 * C152188 +
             (C31628 * C2056 + C32327 + C32327 + C151791 * C2064) * C152092) *
                C23042) *
               C151869 * C151914 -
           ((C38164 + C38154) * C23042 + (C38163 + C38151) * C23041 +
            (C38366 * C152092 +
             (C31628 * C145 + C31646 + C31646 + C151791 * C161) * C152188) *
                C23040) *
               C151869 * C3101) *
              C152218)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152188 +
             C37949 * C152092) *
                C23040 +
            (C37675 + C37676) * C23041 + C37693 * C23042) *
               C151869 * C152265 -
           (C39009 * C23042 + (C37678 + C37677) * C23041 +
            (C37676 + C37675) * C23040) *
               C151869 * C152261 +
           (C37693 * C23040 + (C37680 + C37679) * C23041 + C39014 * C23042) *
               C151869 * C152249 -
           ((C39012 + C39013) * C23042 + (C39011 + C39010) * C23041 +
            C39009 * C23040) *
               C151869 * C152224) *
              C3241 +
          (((C37681 + C37682) * C23040 + (C37683 + C37684) * C23041 +
            C39437 * C23042) *
               C151869 * C152261 -
           (C37694 * C23042 + (C37682 + C37681) * C23041 +
            (C37951 * C152092 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152188) *
                C23040) *
               C151869 * C152265 -
           ((C39438 + C39439) * C23042 + (C37686 + C37685) * C23041 +
            C37694 * C23040) *
               C151869 * C152249 +
           (C39437 * C23040 + (C39439 + C39438) * C23041 +
            (C33141 * C152188 +
             (C31628 * C25784 + C33339 + C33339 + C151791 * C25788) * C152092) *
                C23042) *
               C151869 * C152224) *
              C151834)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152188 +
              C37949 * C152092) *
                 C23040 +
             (C37675 + C37676) * C23041 + C37693 * C23042) *
                C152259 -
            (C39233 * C23042 + (C38659 + C38660) * C23041 +
             (C37950 * C152092 + C37949 * C152188) * C23040) *
                C152246 +
            ((C37950 * C152188 + C40513 * C152092) * C23040 +
             (C39234 + C39235) * C23041 + C39242 * C23042) *
                C152217) *
               C3101 +
           (((C38660 + C38659) * C23040 + (C38658 + C38657) * C23041 +
             C39927 * C23042) *
                C152246 -
            (C39009 * C23042 + (C37678 + C37677) * C23041 +
             (C37676 + C37675) * C23040) *
                C152259 -
            ((C39240 + C39241) * C23042 + (C39237 + C39236) * C23041 +
             (C39235 + C39234) * C23040) *
                C152217) *
               C151914) *
              C3241 +
          ((((C37951 * C152188 + C37952 * C152092) * C23040 +
             (C38661 + C38662) * C23041 + C39730 * C23042) *
                C152246 -
            (C37694 * C23042 + (C37682 + C37681) * C23041 +
             (C37951 * C152092 +
              (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152188) *
                 C23040) *
                C152259 -
            ((C40819 + C40809) * C23042 + (C40820 + C40812) * C23041 +
             (C41022 * C152092 + C37952 * C152188) * C23040) *
                C152217) *
               C3101 +
           (((C37681 + C37682) * C23040 + (C37683 + C37684) * C23041 +
             C39437 * C23042) *
                C152259 -
            ((C39731 + C39732) * C23042 + (C38664 + C38663) * C23041 +
             (C38662 + C38661) * C23040) *
                C152246 +
            ((C40812 + C40820) * C23040 + (C40809 + C40819) * C23041 +
             (C34076 * C152188 +
              (C31628 * C27086 + C34215 + C34215 + C151791 * C27090) *
                  C152092) *
                 C23042) *
                C152217) *
               C151914) *
              C151834)) /
            (p * q * std::sqrt(p + q));
    d2ee[353] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
              C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
              C6086 * C160) *
                 C152188 +
             (C15243 + C15244 + C15245) * C152092) *
                C152054 * C152173 -
            ((C15246 + C15247 + C15248) * C152092 +
             (C15245 + C15244 + C15243) * C152188) *
                C152054 * C151956) *
               C3101 +
           (((C7455 + C7454 + C7453) * C152188 +
             (C8119 + C8120 + C8121) * C152092) *
                C152054 * C151956 -
            ((C7453 + C7454 + C7455) * C152092 +
             (C6436 + C6435 + C6434) * C152188) *
                C152054 * C152173) *
               C151914) *
              C151828 +
          ((((C15249 + C15250 + C15251) * C152188 +
             (C15252 + C15253 + C15254) * C152092) *
                C152054 * C151956 -
            ((C15251 + C15250 + C15249) * C152092 +
             (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
              C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
              C6084 * C159) *
                 C152188) *
                C152054 * C152173) *
               C3101 +
           (((C6440 + C6441 + C6442) * C152188 +
             (C7456 + C7457 + C7458) * C152092) *
                C152054 * C152173 -
            ((C9753 + C9754 + C9755) * C152092 +
             (C7458 + C7457 + C7456) * C152188) *
                C152054 * C151956) *
               C151914) *
              C151837 +
          ((((C6089 * C144 + C6108 + C6108 + C6084 * C160 + C6091 * C145 +
              C6109 + C6109 + C6085 * C161 + C6093 * C146 + C6110 + C6110 +
              C6086 * C162) *
                 C152188 +
             (C15255 + C15256 + C15257) * C152092) *
                C152054 * C152173 -
            ((C15258 + C15259 + C15260) * C152092 +
             (C15257 + C15256 + C15255) * C152188) *
                C152054 * C151956) *
               C3101 +
           (((C7461 + C7460 + C7459) * C152188 +
             (C6089 * C1532 + C6703 + C6703 + C6084 * C1556 + C6091 * C1531 +
              C6704 + C6704 + C6085 * C1555 + C6093 * C2677 + C6705 + C6705 +
              C6086 * C2679) *
                 C152092) *
                C152054 * C151956 -
            ((C7459 + C7460 + C7461) * C152092 +
             (C6448 + C6447 + C6446) * C152188) *
                C152054 * C152173) *
               C151914) *
              C3588)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152188 +
              C37949 * C152092) *
                 C23040 +
             (C37675 + C37676) * C23041 + C37693 * C23042) *
                C152173 -
            (C39233 * C23042 + (C38659 + C38660) * C23041 +
             (C37950 * C152092 + C37949 * C152188) * C23040) *
                C151956) *
               C3101 +
           (((C38660 + C38659) * C23040 + (C38658 + C38657) * C23041 +
             C39927 * C23042) *
                C151956 -
            (C39009 * C23042 + (C37678 + C37677) * C23041 +
             (C37676 + C37675) * C23040) *
                C152173) *
               C151914) *
              C151828 +
          ((((C37951 * C152188 + C37952 * C152092) * C23040 +
             (C38661 + C38662) * C23041 + C39730 * C23042) *
                C151956 -
            (C37694 * C23042 + (C37682 + C37681) * C23041 +
             (C37951 * C152092 +
              (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152188) *
                 C23040) *
                C152173) *
               C3101 +
           (((C37681 + C37682) * C23040 + (C37683 + C37684) * C23041 +
             C39437 * C23042) *
                C152173 -
            ((C39731 + C39732) * C23042 + (C38664 + C38663) * C23041 +
             (C38662 + C38661) * C23040) *
                C151956) *
               C151914) *
              C151837 +
          (((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C152188 +
              C37953 * C152092) *
                 C23040 +
             (C37687 + C37688) * C23041 + C37695 * C23042) *
                C152173 -
            ((C38665 + C38666) * C23042 + (C38667 + C38668) * C23041 +
             (C37956 * C152092 + C37953 * C152188) * C23040) *
                C151956) *
               C3101 +
           (((C38668 + C38667) * C23040 + (C38666 + C38665) * C23041 +
             (C32567 * C152188 +
              (C31628 * C8066 + C32044 + C32044 + C151791 * C8072) * C152092) *
                 C23042) *
                C151956 -
            ((C37691 + C37692) * C23042 + (C37690 + C37689) * C23041 +
             (C37688 + C37687) * C23040) *
                C152173) *
               C151914) *
              C3588)) /
            (p * q * std::sqrt(p + q));
    d2ee[354] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
             C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
             C6086 * C160) *
                C152188 +
            (C15243 + C15244 + C15245) * C152092) *
               C152054 * C151869 * C3101 -
           ((C7453 + C7454 + C7455) * C152092 +
            (C6436 + C6435 + C6434) * C152188) *
               C152054 * C151869 * C151914) *
              C152264 +
          (((C6440 + C6441 + C6442) * C152188 +
            (C7456 + C7457 + C7458) * C152092) *
               C152054 * C151869 * C151914 -
           ((C15251 + C15250 + C15249) * C152092 +
            (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
             C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
             C6084 * C159) *
                C152188) *
               C152054 * C151869 * C3101) *
              C152257 +
          (((C6089 * C144 + C6108 + C6108 + C6084 * C160 + C6091 * C145 +
             C6109 + C6109 + C6085 * C161 + C6093 * C146 + C6110 + C6110 +
             C6086 * C162) *
                C152188 +
            (C15255 + C15256 + C15257) * C152092) *
               C152054 * C151869 * C3101 -
           ((C7459 + C7460 + C7461) * C152092 +
            (C6448 + C6447 + C6446) * C152188) *
               C152054 * C151869 * C151914) *
              C152242 +
          (((C6915 + C6916 + C6917) * C152188 +
            (C6089 * C1086 + C7115 + C7115 + C6084 * C1098 + C6091 * C1087 +
             C7116 + C7116 + C6085 * C1099 + C6093 * C1088 + C7117 + C7117 +
             C6086 * C1100) *
                C152092) *
               C152054 * C151869 * C151914 -
           ((C15666 + C15665 + C15664) * C152092 +
            (C6093 * C147 + C6117 + C6117 + C6086 * C163 + C6091 * C146 +
             C6118 + C6118 + C6085 * C162 + C6089 * C145 + C6119 + C6119 +
             C6084 * C161) *
                C152188) *
               C152054 * C151869 * C3101) *
              C152218)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
             C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
             C6086 * C160) *
                C152188 +
            (C15243 + C15244 + C15245) * C152092) *
               C152054 * C151869 * C152265 -
           ((C7453 + C7454 + C7455) * C152092 +
            (C6436 + C6435 + C6434) * C152188) *
               C152054 * C151869 * C152261 +
           ((C6439 + C6438 + C6437) * C152188 +
            (C8122 + C8123 + C8124) * C152092) *
               C152054 * C151869 * C152249 -
           ((C8866 + C8867 + C8868) * C152092 +
            (C7843 + C7842 + C7841) * C152188) *
               C152054 * C151869 * C152224) *
              C3241 +
          (((C6440 + C6441 + C6442) * C152188 +
            (C7456 + C7457 + C7458) * C152092) *
               C152054 * C151869 * C152261 -
           ((C15251 + C15250 + C15249) * C152092 +
            (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
             C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
             C6084 * C159) *
                C152188) *
               C152054 * C151869 * C152265 -
           ((C8645 + C8646 + C8647) * C152092 +
            (C6445 + C6444 + C6443) * C152188) *
               C152054 * C151869 * C152249 +
           ((C8339 + C8338 + C8337) * C152188 +
            (C6089 * C2054 + C8636 + C8636 + C6084 * C2062 + C6091 * C2055 +
             C8637 + C8637 + C6085 * C2063 + C6093 * C2056 + C8638 + C8638 +
             C6086 * C2064) *
                C152092) *
               C152054 * C151869 * C152224) *
              C151834)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152188 +
             C37949 * C152092) *
                C23040 +
            (C37675 + C37676) * C23041 + C37693 * C23042) *
               C151869 * C3101 -
           (C39009 * C23042 + (C37678 + C37677) * C23041 +
            (C37676 + C37675) * C23040) *
               C151869 * C151914) *
              C152264 +
          (((C37681 + C37682) * C23040 + (C37683 + C37684) * C23041 +
            C39437 * C23042) *
               C151869 * C151914 -
           (C37694 * C23042 + (C37682 + C37681) * C23041 +
            (C37951 * C152092 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152188) *
                C23040) *
               C151869 * C3101) *
              C152257 +
          ((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C152188 +
             C37953 * C152092) *
                C23040 +
            (C37687 + C37688) * C23041 + C37695 * C23042) *
               C151869 * C3101 -
           ((C37691 + C37692) * C23042 + (C37690 + C37689) * C23041 +
            (C37688 + C37687) * C23040) *
               C151869 * C151914) *
              C152242 +
          (((C38151 + C38163) * C23040 + (C38154 + C38164) * C23041 +
            (C32190 * C152188 +
             (C31628 * C2056 + C32327 + C32327 + C151791 * C2064) * C152092) *
                C23042) *
               C151869 * C151914 -
           ((C38164 + C38154) * C23042 + (C38163 + C38151) * C23041 +
            (C38366 * C152092 +
             (C31628 * C145 + C31646 + C31646 + C151791 * C161) * C152188) *
                C23040) *
               C151869 * C3101) *
              C152218)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152188 +
             C37949 * C152092) *
                C23040 +
            (C37675 + C37676) * C23041 + C37693 * C23042) *
               C151869 * C152265 -
           (C39009 * C23042 + (C37678 + C37677) * C23041 +
            (C37676 + C37675) * C23040) *
               C151869 * C152261 +
           (C37693 * C23040 + (C37680 + C37679) * C23041 + C39014 * C23042) *
               C151869 * C152249 -
           ((C39012 + C39013) * C23042 + (C39011 + C39010) * C23041 +
            C39009 * C23040) *
               C151869 * C152224) *
              C3241 +
          (((C37681 + C37682) * C23040 + (C37683 + C37684) * C23041 +
            C39437 * C23042) *
               C151869 * C152261 -
           (C37694 * C23042 + (C37682 + C37681) * C23041 +
            (C37951 * C152092 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152188) *
                C23040) *
               C151869 * C152265 -
           ((C39438 + C39439) * C23042 + (C37686 + C37685) * C23041 +
            C37694 * C23040) *
               C151869 * C152249 +
           (C39437 * C23040 + (C39439 + C39438) * C23041 +
            (C33141 * C152188 +
             (C31628 * C25784 + C33339 + C33339 + C151791 * C25788) * C152092) *
                C23042) *
               C151869 * C152224) *
              C151834)) /
            (p * q * std::sqrt(p + q));
    d2ee[355] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
              C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
              C6086 * C160) *
                 C152188 +
             (C15243 + C15244 + C15245) * C152092) *
                C152054 * C4107 -
            ((C15246 + C15247 + C15248) * C152092 +
             (C15245 + C15244 + C15243) * C152188) *
                C152054 * C151956) *
               C151910 +
           (((C7455 + C7454 + C7453) * C152188 +
             (C8119 + C8120 + C8121) * C152092) *
                C152054 * C151956 -
            ((C7453 + C7454 + C7455) * C152092 +
             (C6436 + C6435 + C6434) * C152188) *
                C152054 * C4107) *
               C151917 +
           (((C6439 + C6438 + C6437) * C152188 +
             (C8122 + C8123 + C8124) * C152092) *
                C152054 * C4107 -
            ((C8125 + C8126 + C8127) * C152092 +
             (C8124 + C8123 + C8122) * C152188) *
                C152054 * C151956) *
               C3585) *
              C152158 +
          ((((C15249 + C15250 + C15251) * C152188 +
             (C15252 + C15253 + C15254) * C152092) *
                C152054 * C151956 -
            ((C15251 + C15250 + C15249) * C152092 +
             (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
              C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
              C6084 * C159) *
                 C152188) *
                C152054 * C4107) *
               C151910 +
           (((C6440 + C6441 + C6442) * C152188 +
             (C7456 + C7457 + C7458) * C152092) *
                C152054 * C4107 -
            ((C9753 + C9754 + C9755) * C152092 +
             (C7458 + C7457 + C7456) * C152188) *
                C152054 * C151956) *
               C151917 +
           (((C8647 + C8646 + C8645) * C152188 +
             (C6089 * C1540 + C9744 + C9744 + C6084 * C1564 + C6091 * C1541 +
              C9745 + C9745 + C6085 * C1565 + C6093 * C1542 + C9746 + C9746 +
              C6086 * C1566) *
                 C152092) *
                C152054 * C151956 -
            ((C8645 + C8646 + C8647) * C152092 +
             (C6445 + C6444 + C6443) * C152188) *
                C152054 * C4107) *
               C3585) *
              C151834)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152188 +
              C37949 * C152092) *
                 C23040 +
             (C37675 + C37676) * C23041 + C37693 * C23042) *
                C4107 -
            (C39233 * C23042 + (C38659 + C38660) * C23041 +
             (C37950 * C152092 + C37949 * C152188) * C23040) *
                C151956) *
               C151910 +
           (((C38660 + C38659) * C23040 + (C38658 + C38657) * C23041 +
             C39927 * C23042) *
                C151956 -
            (C39009 * C23042 + (C37678 + C37677) * C23041 +
             (C37676 + C37675) * C23040) *
                C4107) *
               C151917 +
           ((C37693 * C23040 + (C37680 + C37679) * C23041 + C39014 * C23042) *
                C4107 -
            ((C39928 + C39929) * C23042 + (C39239 + C39238) * C23041 +
             C39233 * C23040) *
                C151956) *
               C3585) *
              C152158 +
          ((((C37951 * C152188 + C37952 * C152092) * C23040 +
             (C38661 + C38662) * C23041 + C39730 * C23042) *
                C151956 -
            (C37694 * C23042 + (C37682 + C37681) * C23041 +
             (C37951 * C152092 +
              (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152188) *
                 C23040) *
                C4107) *
               C151910 +
           (((C37681 + C37682) * C23040 + (C37683 + C37684) * C23041 +
             C39437 * C23042) *
                C4107 -
            ((C39731 + C39732) * C23042 + (C38664 + C38663) * C23041 +
             (C38662 + C38661) * C23040) *
                C151956) *
               C151917 +
           ((C39730 * C23040 + (C39732 + C39731) * C23041 +
             (C33342 * C152188 +
              (C31628 * C25022 + C34069 + C34069 + C151791 * C25026) *
                  C152092) *
                 C23042) *
                C151956 -
            ((C39438 + C39439) * C23042 + (C37686 + C37685) * C23041 +
             C37694 * C23040) *
                C4107) *
               C3585) *
              C151834)) /
            (p * q * std::sqrt(p + q));
    d2ee[356] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
             C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
             C6086 * C160) *
                C152188 +
            (C15243 + C15244 + C15245) * C152092) *
               C152054 * C151952 -
           ((C15246 + C15247 + C15248) * C152092 +
            (C15245 + C15244 + C15243) * C152188) *
               C152054 * C151959 +
           ((C15248 + C15247 + C15246) * C152188 +
            (C17787 + C17788 + C17789) * C152092) *
               C152054 * C4779) *
              C151910 +
          (((C7455 + C7454 + C7453) * C152188 +
            (C8119 + C8120 + C8121) * C152092) *
               C152054 * C151959 -
           ((C7453 + C7454 + C7455) * C152092 +
            (C6436 + C6435 + C6434) * C152188) *
               C152054 * C151952 -
           ((C10174 + C10175 + C10176) * C152092 +
            (C8121 + C8120 + C8119) * C152188) *
               C152054 * C4779) *
              C151917 +
          (((C6439 + C6438 + C6437) * C152188 +
            (C8122 + C8123 + C8124) * C152092) *
               C152054 * C151952 -
           ((C8125 + C8126 + C8127) * C152092 +
            (C8124 + C8123 + C8122) * C152188) *
               C152054 * C151959 +
           ((C8127 + C8126 + C8125) * C152188 +
            (C6089 * C10149 + C10165 + C10165 + C6084 * C10155 +
             C6091 * C10150 + C10166 + C10166 + C6085 * C10156 +
             C6093 * C10151 + C10167 + C10167 + C6086 * C10157) *
                C152092) *
               C152054 * C4779) *
              C3585) *
         C151823) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152188 +
             C37949 * C152092) *
                C23040 +
            (C37675 + C37676) * C23041 + C37693 * C23042) *
               C151952 -
           (C39233 * C23042 + (C38659 + C38660) * C23041 +
            (C37950 * C152092 + C37949 * C152188) * C23040) *
               C151959 +
           ((C37950 * C152188 + C40513 * C152092) * C23040 +
            (C39234 + C39235) * C23041 + C39242 * C23042) *
               C4779) *
              C151910 +
          (((C38660 + C38659) * C23040 + (C38658 + C38657) * C23041 +
            C39927 * C23042) *
               C151959 -
           (C39009 * C23042 + (C37678 + C37677) * C23041 +
            (C37676 + C37675) * C23040) *
               C151952 -
           ((C39240 + C39241) * C23042 + (C39237 + C39236) * C23041 +
            (C39235 + C39234) * C23040) *
               C4779) *
              C151917 +
          ((C37693 * C23040 + (C37680 + C37679) * C23041 + C39014 * C23042) *
               C151952 -
           ((C39928 + C39929) * C23042 + (C39239 + C39238) * C23041 +
            C39233 * C23040) *
               C151959 +
           (C39242 * C23040 + (C39241 + C39240) * C23041 +
            (C33000 * C152188 +
             (C31628 * C34345 + C34355 + C34355 + C151791 * C34347) * C152092) *
                C23042) *
               C4779) *
              C3585) *
         C151823) /
            (p * q * std::sqrt(p + q));
    d2ee[357] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
             C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
             C6086 * C160) *
                C152188 +
            (C15243 + C15244 + C15245) * C152092) *
               C152054 * C4107 -
           ((C15246 + C15247 + C15248) * C152092 +
            (C15245 + C15244 + C15243) * C152188) *
               C152054 * C151956) *
              C152265 +
          (((C7455 + C7454 + C7453) * C152188 +
            (C8119 + C8120 + C8121) * C152092) *
               C152054 * C151956 -
           ((C7453 + C7454 + C7455) * C152092 +
            (C6436 + C6435 + C6434) * C152188) *
               C152054 * C4107) *
              C152261 +
          (((C6439 + C6438 + C6437) * C152188 +
            (C8122 + C8123 + C8124) * C152092) *
               C152054 * C4107 -
           ((C8125 + C8126 + C8127) * C152092 +
            (C8124 + C8123 + C8122) * C152188) *
               C152054 * C151956) *
              C152249 +
          (((C8868 + C8867 + C8866) * C152188 +
            (C6089 * C8064 + C8098 + C8098 + C6084 * C8070 + C6091 * C8065 +
             C8099 + C8099 + C6085 * C8071 + C6093 * C8066 + C8100 + C8100 +
             C6086 * C8072) *
                C152092) *
               C152054 * C151956 -
           ((C8866 + C8867 + C8868) * C152092 +
            (C7843 + C7842 + C7841) * C152188) *
               C152054 * C4107) *
              C152224) *
         C151823) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
              C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
              C6086 * C160) *
                 C152188 +
             (C15243 + C15244 + C15245) * C152092) *
                C152054 * C4107 -
            ((C15246 + C15247 + C15248) * C152092 +
             (C15245 + C15244 + C15243) * C152188) *
                C152054 * C151956) *
               C3101 +
           (((C7455 + C7454 + C7453) * C152188 +
             (C8119 + C8120 + C8121) * C152092) *
                C152054 * C151956 -
            ((C7453 + C7454 + C7455) * C152092 +
             (C6436 + C6435 + C6434) * C152188) *
                C152054 * C4107) *
               C151914) *
              C152255 +
          ((((C15249 + C15250 + C15251) * C152188 +
             (C15252 + C15253 + C15254) * C152092) *
                C152054 * C151956 -
            ((C15251 + C15250 + C15249) * C152092 +
             (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
              C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
              C6084 * C159) *
                 C152188) *
                C152054 * C4107) *
               C3101 +
           (((C6440 + C6441 + C6442) * C152188 +
             (C7456 + C7457 + C7458) * C152092) *
                C152054 * C4107 -
            ((C9753 + C9754 + C9755) * C152092 +
             (C7458 + C7457 + C7456) * C152188) *
                C152054 * C151956) *
               C151914) *
              C152240 +
          ((((C6089 * C144 + C6108 + C6108 + C6084 * C160 + C6091 * C145 +
              C6109 + C6109 + C6085 * C161 + C6093 * C146 + C6110 + C6110 +
              C6086 * C162) *
                 C152188 +
             (C15255 + C15256 + C15257) * C152092) *
                C152054 * C4107 -
            ((C15258 + C15259 + C15260) * C152092 +
             (C15257 + C15256 + C15255) * C152188) *
                C152054 * C151956) *
               C3101 +
           (((C7461 + C7460 + C7459) * C152188 +
             (C6089 * C1532 + C6703 + C6703 + C6084 * C1556 + C6091 * C1531 +
              C6704 + C6704 + C6085 * C1555 + C6093 * C2677 + C6705 + C6705 +
              C6086 * C2679) *
                 C152092) *
                C152054 * C151956 -
            ((C7459 + C7460 + C7461) * C152092 +
             (C6448 + C6447 + C6446) * C152188) *
                C152054 * C4107) *
               C151914) *
              C152208)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
             C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
             C6086 * C160) *
                C152188 +
            (C15243 + C15244 + C15245) * C152092) *
               C152054 * C152266 -
           ((C15246 + C15247 + C15248) * C152092 +
            (C15245 + C15244 + C15243) * C152188) *
               C152054 * C152263 +
           ((C15248 + C15247 + C15246) * C152188 +
            (C17787 + C17788 + C17789) * C152092) *
               C152054 * C152252 -
           ((C17790 + C17791 + C17792) * C152092 +
            (C17789 + C17788 + C17787) * C152188) *
               C152054 * C152230) *
              C3101 +
          (((C7455 + C7454 + C7453) * C152188 +
            (C8119 + C8120 + C8121) * C152092) *
               C152054 * C152263 -
           ((C7453 + C7454 + C7455) * C152092 +
            (C6436 + C6435 + C6434) * C152188) *
               C152054 * C152266 -
           ((C10174 + C10175 + C10176) * C152092 +
            (C8121 + C8120 + C8119) * C152188) *
               C152054 * C152252 +
           ((C10176 + C10175 + C10174) * C152188 +
            (C6089 * C9426 + C9445 + C9445 + C6084 * C9432 + C6091 * C9427 +
             C9446 + C9446 + C6085 * C9433 + C6093 * C9428 + C9447 + C9447 +
             C6086 * C9434) *
                C152092) *
               C152054 * C152230) *
              C151914) *
         C151823) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152188 +
              C37949 * C152092) *
                 C23040 +
             (C37675 + C37676) * C23041 + C37693 * C23042) *
                C4107 -
            (C39233 * C23042 + (C38659 + C38660) * C23041 +
             (C37950 * C152092 + C37949 * C152188) * C23040) *
                C151956) *
               C3101 +
           (((C38660 + C38659) * C23040 + (C38658 + C38657) * C23041 +
             C39927 * C23042) *
                C151956 -
            (C39009 * C23042 + (C37678 + C37677) * C23041 +
             (C37676 + C37675) * C23040) *
                C4107) *
               C151914) *
              C152255 +
          ((((C37951 * C152188 + C37952 * C152092) * C23040 +
             (C38661 + C38662) * C23041 + C39730 * C23042) *
                C151956 -
            (C37694 * C23042 + (C37682 + C37681) * C23041 +
             (C37951 * C152092 +
              (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152188) *
                 C23040) *
                C4107) *
               C3101 +
           (((C37681 + C37682) * C23040 + (C37683 + C37684) * C23041 +
             C39437 * C23042) *
                C4107 -
            ((C39731 + C39732) * C23042 + (C38664 + C38663) * C23041 +
             (C38662 + C38661) * C23040) *
                C151956) *
               C151914) *
              C152240 +
          (((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C152188 +
              C37953 * C152092) *
                 C23040 +
             (C37687 + C37688) * C23041 + C37695 * C23042) *
                C4107 -
            ((C38665 + C38666) * C23042 + (C38667 + C38668) * C23041 +
             (C37956 * C152092 + C37953 * C152188) * C23040) *
                C151956) *
               C3101 +
           (((C38668 + C38667) * C23040 + (C38666 + C38665) * C23041 +
             (C32567 * C152188 +
              (C31628 * C8066 + C32044 + C32044 + C151791 * C8072) * C152092) *
                 C23042) *
                C151956 -
            ((C37691 + C37692) * C23042 + (C37690 + C37689) * C23041 +
             (C37688 + C37687) * C23040) *
                C4107) *
               C151914) *
              C152208)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152188 +
             C37949 * C152092) *
                C23040 +
            (C37675 + C37676) * C23041 + C37693 * C23042) *
               C4107 -
           (C39233 * C23042 + (C38659 + C38660) * C23041 +
            (C37950 * C152092 + C37949 * C152188) * C23040) *
               C151956) *
              C152265 +
          (((C38660 + C38659) * C23040 + (C38658 + C38657) * C23041 +
            C39927 * C23042) *
               C151956 -
           (C39009 * C23042 + (C37678 + C37677) * C23041 +
            (C37676 + C37675) * C23040) *
               C4107) *
              C152261 +
          ((C37693 * C23040 + (C37680 + C37679) * C23041 + C39014 * C23042) *
               C4107 -
           ((C39928 + C39929) * C23042 + (C39239 + C39238) * C23041 +
            C39233 * C23040) *
               C151956) *
              C152249 +
          ((C39927 * C23040 + (C39929 + C39928) * C23041 +
            (C33482 * C152188 +
             (C31628 * C32969 + C32985 + C32985 + C151791 * C32971) * C152092) *
                C23042) *
               C151956 -
           ((C39012 + C39013) * C23042 + (C39011 + C39010) * C23041 +
            C39009 * C23040) *
               C4107) *
              C152224) *
         C151823) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152188 +
             C37949 * C152092) *
                C23040 +
            (C37675 + C37676) * C23041 + C37693 * C23042) *
               C152266 -
           (C39233 * C23042 + (C38659 + C38660) * C23041 +
            (C37950 * C152092 + C37949 * C152188) * C23040) *
               C152263 +
           ((C37950 * C152188 + C40513 * C152092) * C23040 +
            (C39234 + C39235) * C23041 + C39242 * C23042) *
               C152252 -
           ((C41217 + C41218) * C23042 + (C41219 + C41220) * C23041 +
            (C40516 * C152092 + C40513 * C152188) * C23040) *
               C152230) *
              C3101 +
          (((C38660 + C38659) * C23040 + (C38658 + C38657) * C23041 +
            C39927 * C23042) *
               C152263 -
           (C39009 * C23042 + (C37678 + C37677) * C23041 +
            (C37676 + C37675) * C23040) *
               C152266 -
           ((C39240 + C39241) * C23042 + (C39237 + C39236) * C23041 +
            (C39235 + C39234) * C23040) *
               C152252 +
           ((C41220 + C41219) * C23040 + (C41218 + C41217) * C23041 +
            (C34362 * C152188 +
             (C31628 * C33857 + C33868 + C33868 + C151791 * C33859) * C152092) *
                C23042) *
               C152230) *
              C151914) *
         C151823) /
            (p * q * std::sqrt(p + q));
    d2ee[358] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
              C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
              C6086 * C160) *
                 C152188 +
             (C15243 + C15244 + C15245) * C152092) *
                C152054 * C151952 -
            ((C15246 + C15247 + C15248) * C152092 +
             (C15245 + C15244 + C15243) * C152188) *
                C152054 * C151959 +
            ((C15248 + C15247 + C15246) * C152188 +
             (C17787 + C17788 + C17789) * C152092) *
                C152054 * C4779) *
               C3101 +
           (((C7455 + C7454 + C7453) * C152188 +
             (C8119 + C8120 + C8121) * C152092) *
                C152054 * C151959 -
            ((C7453 + C7454 + C7455) * C152092 +
             (C6436 + C6435 + C6434) * C152188) *
                C152054 * C151952 -
            ((C10174 + C10175 + C10176) * C152092 +
             (C8121 + C8120 + C8119) * C152188) *
                C152054 * C4779) *
               C151914) *
              C152158 +
          ((((C15249 + C15250 + C15251) * C152188 +
             (C15252 + C15253 + C15254) * C152092) *
                C152054 * C151959 -
            ((C15251 + C15250 + C15249) * C152092 +
             (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
              C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
              C6084 * C159) *
                 C152188) *
                C152054 * C151952 -
            ((C18292 + C18293 + C18294) * C152092 +
             (C15254 + C15253 + C15252) * C152188) *
                C152054 * C4779) *
               C3101 +
           (((C6440 + C6441 + C6442) * C152188 +
             (C7456 + C7457 + C7458) * C152092) *
                C152054 * C151952 -
            ((C9753 + C9754 + C9755) * C152092 +
             (C7458 + C7457 + C7456) * C152188) *
                C152054 * C151959 +
            ((C9755 + C9754 + C9753) * C152188 +
             (C6089 * C2956 + C9953 + C9953 + C6084 * C2964 + C6091 * C2957 +
              C9954 + C9954 + C6085 * C2965 + C6093 * C2958 + C9955 + C9955 +
              C6086 * C2966) *
                 C152092) *
                C152054 * C4779) *
               C151914) *
              C151834)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152188 +
              C37949 * C152092) *
                 C23040 +
             (C37675 + C37676) * C23041 + C37693 * C23042) *
                C151952 -
            (C39233 * C23042 + (C38659 + C38660) * C23041 +
             (C37950 * C152092 + C37949 * C152188) * C23040) *
                C151959 +
            ((C37950 * C152188 + C40513 * C152092) * C23040 +
             (C39234 + C39235) * C23041 + C39242 * C23042) *
                C4779) *
               C3101 +
           (((C38660 + C38659) * C23040 + (C38658 + C38657) * C23041 +
             C39927 * C23042) *
                C151959 -
            (C39009 * C23042 + (C37678 + C37677) * C23041 +
             (C37676 + C37675) * C23040) *
                C151952 -
            ((C39240 + C39241) * C23042 + (C39237 + C39236) * C23041 +
             (C39235 + C39234) * C23040) *
                C4779) *
               C151914) *
              C152158 +
          ((((C37951 * C152188 + C37952 * C152092) * C23040 +
             (C38661 + C38662) * C23041 + C39730 * C23042) *
                C151959 -
            (C37694 * C23042 + (C37682 + C37681) * C23041 +
             (C37951 * C152092 +
              (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152188) *
                 C23040) *
                C151952 -
            ((C40819 + C40809) * C23042 + (C40820 + C40812) * C23041 +
             (C41022 * C152092 + C37952 * C152188) * C23040) *
                C4779) *
               C3101 +
           (((C37681 + C37682) * C23040 + (C37683 + C37684) * C23041 +
             C39437 * C23042) *
                C151952 -
            ((C39731 + C39732) * C23042 + (C38664 + C38663) * C23041 +
             (C38662 + C38661) * C23040) *
                C151959 +
            ((C40812 + C40820) * C23040 + (C40809 + C40819) * C23041 +
             (C34076 * C152188 +
              (C31628 * C27086 + C34215 + C34215 + C151791 * C27090) *
                  C152092) *
                 C23042) *
                C4779) *
               C151914) *
              C151834)) /
            (p * q * std::sqrt(p + q));
    d2ee[359] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
              C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
              C6086 * C160) *
                 C152188 +
             (C15243 + C15244 + C15245) * C152092) *
                C152054 * C4107 -
            ((C15246 + C15247 + C15248) * C152092 +
             (C15245 + C15244 + C15243) * C152188) *
                C152054 * C151956) *
               C3101 +
           (((C7455 + C7454 + C7453) * C152188 +
             (C8119 + C8120 + C8121) * C152092) *
                C152054 * C151956 -
            ((C7453 + C7454 + C7455) * C152092 +
             (C6436 + C6435 + C6434) * C152188) *
                C152054 * C4107) *
               C151914) *
              C152255 +
          ((((C15249 + C15250 + C15251) * C152188 +
             (C15252 + C15253 + C15254) * C152092) *
                C152054 * C151956 -
            ((C15251 + C15250 + C15249) * C152092 +
             (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
              C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
              C6084 * C159) *
                 C152188) *
                C152054 * C4107) *
               C3101 +
           (((C6440 + C6441 + C6442) * C152188 +
             (C7456 + C7457 + C7458) * C152092) *
                C152054 * C4107 -
            ((C9753 + C9754 + C9755) * C152092 +
             (C7458 + C7457 + C7456) * C152188) *
                C152054 * C151956) *
               C151914) *
              C152240 +
          ((((C6089 * C144 + C6108 + C6108 + C6084 * C160 + C6091 * C145 +
              C6109 + C6109 + C6085 * C161 + C6093 * C146 + C6110 + C6110 +
              C6086 * C162) *
                 C152188 +
             (C15255 + C15256 + C15257) * C152092) *
                C152054 * C4107 -
            ((C15258 + C15259 + C15260) * C152092 +
             (C15257 + C15256 + C15255) * C152188) *
                C152054 * C151956) *
               C3101 +
           (((C7461 + C7460 + C7459) * C152188 +
             (C6089 * C1532 + C6703 + C6703 + C6084 * C1556 + C6091 * C1531 +
              C6704 + C6704 + C6085 * C1555 + C6093 * C2677 + C6705 + C6705 +
              C6086 * C2679) *
                 C152092) *
                C152054 * C151956 -
            ((C7459 + C7460 + C7461) * C152092 +
             (C6448 + C6447 + C6446) * C152188) *
                C152054 * C4107) *
               C151914) *
              C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
             C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
             C6086 * C160) *
                C152188 +
            (C15243 + C15244 + C15245) * C152092) *
               C152054 * C4107 -
           ((C15246 + C15247 + C15248) * C152092 +
            (C15245 + C15244 + C15243) * C152188) *
               C152054 * C151956) *
              C152265 +
          (((C7455 + C7454 + C7453) * C152188 +
            (C8119 + C8120 + C8121) * C152092) *
               C152054 * C151956 -
           ((C7453 + C7454 + C7455) * C152092 +
            (C6436 + C6435 + C6434) * C152188) *
               C152054 * C4107) *
              C152261 +
          (((C6439 + C6438 + C6437) * C152188 +
            (C8122 + C8123 + C8124) * C152092) *
               C152054 * C4107 -
           ((C8125 + C8126 + C8127) * C152092 +
            (C8124 + C8123 + C8122) * C152188) *
               C152054 * C151956) *
              C152249 +
          (((C8868 + C8867 + C8866) * C152188 +
            (C6089 * C8064 + C8098 + C8098 + C6084 * C8070 + C6091 * C8065 +
             C8099 + C8099 + C6085 * C8071 + C6093 * C8066 + C8100 + C8100 +
             C6086 * C8072) *
                C152092) *
               C152054 * C151956 -
           ((C8866 + C8867 + C8868) * C152092 +
            (C7843 + C7842 + C7841) * C152188) *
               C152054 * C4107) *
              C152224) *
         C151823) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152188 +
              C37949 * C152092) *
                 C23040 +
             (C37675 + C37676) * C23041 + C37693 * C23042) *
                C4107 -
            (C39233 * C23042 + (C38659 + C38660) * C23041 +
             (C37950 * C152092 + C37949 * C152188) * C23040) *
                C151956) *
               C3101 +
           (((C38660 + C38659) * C23040 + (C38658 + C38657) * C23041 +
             C39927 * C23042) *
                C151956 -
            (C39009 * C23042 + (C37678 + C37677) * C23041 +
             (C37676 + C37675) * C23040) *
                C4107) *
               C151914) *
              C152255 +
          ((((C37951 * C152188 + C37952 * C152092) * C23040 +
             (C38661 + C38662) * C23041 + C39730 * C23042) *
                C151956 -
            (C37694 * C23042 + (C37682 + C37681) * C23041 +
             (C37951 * C152092 +
              (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152188) *
                 C23040) *
                C4107) *
               C3101 +
           (((C37681 + C37682) * C23040 + (C37683 + C37684) * C23041 +
             C39437 * C23042) *
                C4107 -
            ((C39731 + C39732) * C23042 + (C38664 + C38663) * C23041 +
             (C38662 + C38661) * C23040) *
                C151956) *
               C151914) *
              C152240 +
          (((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C152188 +
              C37953 * C152092) *
                 C23040 +
             (C37687 + C37688) * C23041 + C37695 * C23042) *
                C4107 -
            ((C38665 + C38666) * C23042 + (C38667 + C38668) * C23041 +
             (C37956 * C152092 + C37953 * C152188) * C23040) *
                C151956) *
               C3101 +
           (((C38668 + C38667) * C23040 + (C38666 + C38665) * C23041 +
             (C32567 * C152188 +
              (C31628 * C8066 + C32044 + C32044 + C151791 * C8072) * C152092) *
                 C23042) *
                C151956 -
            ((C37691 + C37692) * C23042 + (C37690 + C37689) * C23041 +
             (C37688 + C37687) * C23040) *
                C4107) *
               C151914) *
              C152208)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152188 +
             C37949 * C152092) *
                C23040 +
            (C37675 + C37676) * C23041 + C37693 * C23042) *
               C4107 -
           (C39233 * C23042 + (C38659 + C38660) * C23041 +
            (C37950 * C152092 + C37949 * C152188) * C23040) *
               C151956) *
              C152265 +
          (((C38660 + C38659) * C23040 + (C38658 + C38657) * C23041 +
            C39927 * C23042) *
               C151956 -
           (C39009 * C23042 + (C37678 + C37677) * C23041 +
            (C37676 + C37675) * C23040) *
               C4107) *
              C152261 +
          ((C37693 * C23040 + (C37680 + C37679) * C23041 + C39014 * C23042) *
               C4107 -
           ((C39928 + C39929) * C23042 + (C39239 + C39238) * C23041 +
            C39233 * C23040) *
               C151956) *
              C152249 +
          ((C39927 * C23040 + (C39929 + C39928) * C23041 +
            (C33482 * C152188 +
             (C31628 * C32969 + C32985 + C32985 + C151791 * C32971) * C152092) *
                C23042) *
               C151956 -
           ((C39012 + C39013) * C23042 + (C39011 + C39010) * C23041 +
            C39009 * C23040) *
               C4107) *
              C152224) *
         C151823) /
            (p * q * std::sqrt(p + q));
    d2ee[360] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
             C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
             C6086 * C160) *
                C152188 +
            (C15243 + C15244 + C15245) * C152092) *
               C152054 * C151869 * C1709 -
           ((C7453 + C7454 + C7455) * C152092 +
            (C6436 + C6435 + C6434) * C152188) *
               C152054 * C151869 * C1710 +
           ((C6439 + C6438 + C6437) * C152188 +
            (C8122 + C8123 + C8124) * C152092) *
               C152054 * C151869 * C1711 -
           ((C8866 + C8867 + C8868) * C152092 +
            (C7843 + C7842 + C7841) * C152188) *
               C152054 * C151869 * C152224) *
              C152158 +
          (((C6440 + C6441 + C6442) * C152188 +
            (C7456 + C7457 + C7458) * C152092) *
               C152054 * C151869 * C1710 -
           ((C15251 + C15250 + C15249) * C152092 +
            (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
             C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
             C6084 * C159) *
                C152188) *
               C152054 * C151869 * C1709 -
           ((C8645 + C8646 + C8647) * C152092 +
            (C6445 + C6444 + C6443) * C152188) *
               C152054 * C151869 * C1711 +
           ((C8339 + C8338 + C8337) * C152188 +
            (C6089 * C2054 + C8636 + C8636 + C6084 * C2062 + C6091 * C2055 +
             C8637 + C8637 + C6085 * C2063 + C6093 * C2056 + C8638 + C8638 +
             C6086 * C2064) *
                C152092) *
               C152054 * C151869 * C152224) *
              C151834)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
             C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
             C6086 * C160) *
                C152188 +
            (C15243 + C15244 + C15245) * C152092) *
               C152054 * C151869 * C152172 -
           ((C7453 + C7454 + C7455) * C152092 +
            (C6436 + C6435 + C6434) * C152188) *
               C152054 * C151869 * C151914) *
              C739 +
          (((C6440 + C6441 + C6442) * C152188 +
            (C7456 + C7457 + C7458) * C152092) *
               C152054 * C151869 * C151914 -
           ((C15251 + C15250 + C15249) * C152092 +
            (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
             C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
             C6084 * C159) *
                C152188) *
               C152054 * C151869 * C152172) *
              C740 +
          (((C6089 * C144 + C6108 + C6108 + C6084 * C160 + C6091 * C145 +
             C6109 + C6109 + C6085 * C161 + C6093 * C146 + C6110 + C6110 +
             C6086 * C162) *
                C152188 +
            (C15255 + C15256 + C15257) * C152092) *
               C152054 * C151869 * C152172 -
           ((C7459 + C7460 + C7461) * C152092 +
            (C6448 + C6447 + C6446) * C152188) *
               C152054 * C151869 * C151914) *
              C741 +
          (((C6915 + C6916 + C6917) * C152188 +
            (C6089 * C1086 + C7115 + C7115 + C6084 * C1098 + C6091 * C1087 +
             C7116 + C7116 + C6085 * C1099 + C6093 * C1088 + C7117 + C7117 +
             C6086 * C1100) *
                C152092) *
               C152054 * C151869 * C151914 -
           ((C6093 * C557 + C7114 + C7114 + C6086 * C581 + C6091 * C555 +
             C7113 + C7113 + C6085 * C579 + C6089 * C547 + C7112 + C7112 +
             C6084 * C571) *
                C152092 +
            (C6093 * C147 + C6117 + C6117 + C6086 * C163 + C6091 * C146 +
             C6118 + C6118 + C6085 * C162 + C6089 * C145 + C6119 + C6119 +
             C6084 * C161) *
                C152188) *
               C152054 * C151869 * C152172) *
              C152218)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
              C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
              C6086 * C160) *
                 C152188 +
             (C15243 + C15244 + C15245) * C152092) *
                C152054 * C2215 -
            ((C15246 + C15247 + C15248) * C152092 +
             (C15245 + C15244 + C15243) * C152188) *
                C152054 * C2216 +
            ((C15248 + C15247 + C15246) * C152188 +
             (C17787 + C17788 + C17789) * C152092) *
                C152054 * C152217) *
               C152172 +
           (((C7455 + C7454 + C7453) * C152188 +
             (C8119 + C8120 + C8121) * C152092) *
                C152054 * C2216 -
            ((C7453 + C7454 + C7455) * C152092 +
             (C6436 + C6435 + C6434) * C152188) *
                C152054 * C2215 -
            ((C10174 + C10175 + C10176) * C152092 +
             (C8121 + C8120 + C8119) * C152188) *
                C152054 * C152217) *
               C151914) *
              C152158 +
          ((((C15249 + C15250 + C15251) * C152188 +
             (C15252 + C15253 + C15254) * C152092) *
                C152054 * C2216 -
            ((C15251 + C15250 + C15249) * C152092 +
             (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
              C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
              C6084 * C159) *
                 C152188) *
                C152054 * C2215 -
            ((C6093 * C2451 + C9952 + C9952 + C6086 * C2467 + C6091 * C2452 +
              C9951 + C9951 + C6085 * C2468 + C6089 * C2453 + C9950 + C9950 +
              C6084 * C2469) *
                 C152092 +
             (C15254 + C15253 + C15252) * C152188) *
                C152054 * C152217) *
               C152172 +
           (((C6440 + C6441 + C6442) * C152188 +
             (C7456 + C7457 + C7458) * C152092) *
                C152054 * C2215 -
            ((C9753 + C9754 + C9755) * C152092 +
             (C7458 + C7457 + C7456) * C152188) *
                C152054 * C2216 +
            ((C9755 + C9754 + C9753) * C152188 +
             (C6089 * C2956 + C9953 + C9953 + C6084 * C2964 + C6091 * C2957 +
              C9954 + C9954 + C6085 * C2965 + C6093 * C2958 + C9955 + C9955 +
              C6086 * C2966) *
                 C152092) *
                C152054 * C152217) *
               C151914) *
              C151834)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152188 +
             C37949 * C152092) *
                C23040 +
            (C37675 + C37676) * C23041 + C37693 * C23042) *
               C151869 * C152172 -
           ((C37679 + C37680) * C23042 + (C37678 + C37677) * C23041 +
            (C37676 + C37675) * C23040) *
               C151869 * C151914) *
              C739 +
          (((C37681 + C37682) * C23040 + (C37683 + C37684) * C23041 +
            (C37685 + C37686) * C23042) *
               C151869 * C151914 -
           (C37694 * C23042 + (C37682 + C37681) * C23041 +
            (C37951 * C152092 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152188) *
                C23040) *
               C151869 * C152172) *
              C740 +
          ((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C152188 +
             C37953 * C152092) *
                C23040 +
            (C37687 + C37688) * C23041 + C37695 * C23042) *
               C151869 * C152172 -
           ((C37691 + C37692) * C23042 + (C37690 + C37689) * C23041 +
            (C37688 + C37687) * C23040) *
               C151869 * C151914) *
              C741 +
          (((C38151 + C38163) * C23040 + (C38154 + C38164) * C23041 +
            (C32190 * C152188 +
             (C31628 * C2056 + C32327 + C32327 + C151791 * C2064) * C152092) *
                C23042) *
               C151869 * C151914 -
           ((C38164 + C38154) * C23042 + (C38163 + C38151) * C23041 +
            ((C31628 * C547 + C32324 + C32324 + C151791 * C571) * C152092 +
             (C31628 * C145 + C31646 + C31646 + C151791 * C161) * C152188) *
                C23040) *
               C151869 * C152172) *
              C152218)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152188 +
             C37949 * C152092) *
                C23040 +
            (C37675 + C37676) * C23041 + C37693 * C23042) *
               C151869 * C1709 -
           (C39009 * C23042 + (C37678 + C37677) * C23041 +
            (C37676 + C37675) * C23040) *
               C151869 * C1710 +
           (C37693 * C23040 + (C37680 + C37679) * C23041 + C39014 * C23042) *
               C151869 * C1711 -
           ((C39012 + C39013) * C23042 + (C39011 + C39010) * C23041 +
            C39009 * C23040) *
               C151869 * C152224) *
              C152158 +
          (((C37681 + C37682) * C23040 + (C37683 + C37684) * C23041 +
            C39437 * C23042) *
               C151869 * C1710 -
           (C37694 * C23042 + (C37682 + C37681) * C23041 +
            (C37951 * C152092 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152188) *
                C23040) *
               C151869 * C1709 -
           ((C39438 + C39439) * C23042 + (C37686 + C37685) * C23041 +
            C37694 * C23040) *
               C151869 * C1711 +
           (C39437 * C23040 + (C39439 + C39438) * C23041 +
            (C33141 * C152188 +
             (C31628 * C25784 + C33339 + C33339 + C151791 * C25788) * C152092) *
                C23042) *
               C151869 * C152224) *
              C151834)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152188 +
              C37949 * C152092) *
                 C23040 +
             (C37675 + C37676) * C23041 + C37693 * C23042) *
                C2215 -
            (C39233 * C23042 + (C38659 + C38660) * C23041 +
             (C37950 * C152092 + C37949 * C152188) * C23040) *
                C2216 +
            ((C37950 * C152188 + C40513 * C152092) * C23040 +
             (C39234 + C39235) * C23041 + C39242 * C23042) *
                C152217) *
               C152172 +
           (((C38660 + C38659) * C23040 + (C38658 + C38657) * C23041 +
             C39927 * C23042) *
                C2216 -
            (C39009 * C23042 + (C37678 + C37677) * C23041 +
             (C37676 + C37675) * C23040) *
                C2215 -
            ((C39240 + C39241) * C23042 + (C39237 + C39236) * C23041 +
             (C39235 + C39234) * C23040) *
                C152217) *
               C151914) *
              C152158 +
          ((((C37951 * C152188 + C37952 * C152092) * C23040 +
             (C38661 + C38662) * C23041 + C39730 * C23042) *
                C2216 -
            (C37694 * C23042 + (C37682 + C37681) * C23041 +
             (C37951 * C152092 +
              (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152188) *
                 C23040) *
                C2215 -
            ((C40819 + C40809) * C23042 + (C40820 + C40812) * C23041 +
             ((C31628 * C2453 + C34212 + C34212 + C151791 * C2469) * C152092 +
              C37952 * C152188) *
                 C23040) *
                C152217) *
               C152172 +
           (((C37681 + C37682) * C23040 + (C37683 + C37684) * C23041 +
             C39437 * C23042) *
                C2215 -
            ((C39731 + C39732) * C23042 + (C38664 + C38663) * C23041 +
             (C38662 + C38661) * C23040) *
                C2216 +
            ((C40812 + C40820) * C23040 + (C40809 + C40819) * C23041 +
             (C34076 * C152188 +
              (C31628 * C27086 + C34215 + C34215 + C151791 * C27090) *
                  C152092) *
                 C23042) *
                C152217) *
               C151914) *
              C151834)) /
            (p * q * std::sqrt(p + q));
    d2ee[361] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
             C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
             C6086 * C160) *
                C152188 +
            (C15243 + C15244 + C15245) * C152092) *
               C152054 * C152173 -
           ((C15246 + C15247 + C15248) * C152092 +
            (C15245 + C15244 + C15243) * C152188) *
               C152054 * C151956) *
              C1709 +
          (((C7455 + C7454 + C7453) * C152188 +
            (C8119 + C8120 + C8121) * C152092) *
               C152054 * C151956 -
           ((C7453 + C7454 + C7455) * C152092 +
            (C6436 + C6435 + C6434) * C152188) *
               C152054 * C152173) *
              C1710 +
          (((C6439 + C6438 + C6437) * C152188 +
            (C8122 + C8123 + C8124) * C152092) *
               C152054 * C152173 -
           ((C8125 + C8126 + C8127) * C152092 +
            (C8124 + C8123 + C8122) * C152188) *
               C152054 * C151956) *
              C1711 +
          (((C8868 + C8867 + C8866) * C152188 +
            (C6089 * C8064 + C8098 + C8098 + C6084 * C8070 + C6091 * C8065 +
             C8099 + C8099 + C6085 * C8071 + C6093 * C8066 + C8100 + C8100 +
             C6086 * C8072) *
                C152092) *
               C152054 * C151956 -
           ((C8866 + C8867 + C8868) * C152092 +
            (C7843 + C7842 + C7841) * C152188) *
               C152054 * C152173) *
              C152224) *
         C151823) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
              C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
              C6086 * C160) *
                 C152188 +
             (C15243 + C15244 + C15245) * C152092) *
                C152054 * C152173 -
            ((C15246 + C15247 + C15248) * C152092 +
             (C15245 + C15244 + C15243) * C152188) *
                C152054 * C151956) *
               C152172 +
           (((C7455 + C7454 + C7453) * C152188 +
             (C8119 + C8120 + C8121) * C152092) *
                C152054 * C151956 -
            ((C7453 + C7454 + C7455) * C152092 +
             (C6436 + C6435 + C6434) * C152188) *
                C152054 * C152173) *
               C151914) *
              C335 +
          ((((C15249 + C15250 + C15251) * C152188 +
             (C15252 + C15253 + C15254) * C152092) *
                C152054 * C151956 -
            ((C15251 + C15250 + C15249) * C152092 +
             (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
              C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
              C6084 * C159) *
                 C152188) *
                C152054 * C152173) *
               C152172 +
           (((C6440 + C6441 + C6442) * C152188 +
             (C7456 + C7457 + C7458) * C152092) *
                C152054 * C152173 -
            ((C9753 + C9754 + C9755) * C152092 +
             (C7458 + C7457 + C7456) * C152188) *
                C152054 * C151956) *
               C151914) *
              C336 +
          ((((C6089 * C144 + C6108 + C6108 + C6084 * C160 + C6091 * C145 +
              C6109 + C6109 + C6085 * C161 + C6093 * C146 + C6110 + C6110 +
              C6086 * C162) *
                 C152188 +
             (C15255 + C15256 + C15257) * C152092) *
                C152054 * C152173 -
            ((C15258 + C15259 + C15260) * C152092 +
             (C15257 + C15256 + C15255) * C152188) *
                C152054 * C151956) *
               C152172 +
           (((C7461 + C7460 + C7459) * C152188 +
             (C6089 * C1532 + C6703 + C6703 + C6084 * C1556 + C6091 * C1531 +
              C6704 + C6704 + C6085 * C1555 + C6093 * C2677 + C6705 + C6705 +
              C6086 * C2679) *
                 C152092) *
                C152054 * C151956 -
            ((C7459 + C7460 + C7461) * C152092 +
             (C6448 + C6447 + C6446) * C152188) *
                C152054 * C152173) *
               C151914) *
              C152208)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
             C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
             C6086 * C160) *
                C152188 +
            (C15243 + C15244 + C15245) * C152092) *
               C152054 * C2814 -
           ((C15246 + C15247 + C15248) * C152092 +
            (C15245 + C15244 + C15243) * C152188) *
               C152054 * C2815 +
           ((C15248 + C15247 + C15246) * C152188 +
            (C17787 + C17788 + C17789) * C152092) *
               C152054 * C2816 -
           ((C17790 + C17791 + C17792) * C152092 +
            (C17789 + C17788 + C17787) * C152188) *
               C152054 * C152230) *
              C152172 +
          (((C7455 + C7454 + C7453) * C152188 +
            (C8119 + C8120 + C8121) * C152092) *
               C152054 * C2815 -
           ((C7453 + C7454 + C7455) * C152092 +
            (C6436 + C6435 + C6434) * C152188) *
               C152054 * C2814 -
           ((C10174 + C10175 + C10176) * C152092 +
            (C8121 + C8120 + C8119) * C152188) *
               C152054 * C2816 +
           ((C10176 + C10175 + C10174) * C152188 +
            (C6089 * C9426 + C9445 + C9445 + C6084 * C9432 + C6091 * C9427 +
             C9446 + C9446 + C6085 * C9433 + C6093 * C9428 + C9447 + C9447 +
             C6086 * C9434) *
                C152092) *
               C152054 * C152230) *
              C151914) *
         C151823) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152188 +
              C37949 * C152092) *
                 C23040 +
             (C37675 + C37676) * C23041 + C37693 * C23042) *
                C152173 -
            ((C38657 + C38658) * C23042 + (C38659 + C38660) * C23041 +
             (C37950 * C152092 + C37949 * C152188) * C23040) *
                C151956) *
               C152172 +
           (((C38660 + C38659) * C23040 + (C38658 + C38657) * C23041 +
             (C32561 * C152188 + C32998 * C152092) * C23042) *
                C151956 -
            ((C37679 + C37680) * C23042 + (C37678 + C37677) * C23041 +
             (C37676 + C37675) * C23040) *
                C152173) *
               C151914) *
              C335 +
          ((((C37951 * C152188 + C37952 * C152092) * C23040 +
             (C38661 + C38662) * C23041 + (C38663 + C38664) * C23042) *
                C151956 -
            (C37694 * C23042 + (C37682 + C37681) * C23041 +
             (C37951 * C152092 +
              (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152188) *
                 C23040) *
                C152173) *
               C152172 +
           (((C37681 + C37682) * C23040 + (C37683 + C37684) * C23041 +
             (C37685 + C37686) * C23042) *
                C152173 -
            ((C34076 * C152092 + C32566 * C152188) * C23042 +
             (C38664 + C38663) * C23041 + (C38662 + C38661) * C23040) *
                C151956) *
               C151914) *
              C336 +
          (((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C152188 +
              C37953 * C152092) *
                 C23040 +
             (C37687 + C37688) * C23041 + C37695 * C23042) *
                C152173 -
            ((C38665 + C38666) * C23042 + (C38667 + C38668) * C23041 +
             (C37956 * C152092 + C37953 * C152188) * C23040) *
                C151956) *
               C152172 +
           (((C38668 + C38667) * C23040 + (C38666 + C38665) * C23041 +
             (C32567 * C152188 +
              (C31628 * C8066 + C32044 + C32044 + C151791 * C8072) * C152092) *
                 C23042) *
                C151956 -
            ((C37691 + C37692) * C23042 + (C37690 + C37689) * C23041 +
             (C37688 + C37687) * C23040) *
                C152173) *
               C151914) *
              C152208)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152188 +
             C37949 * C152092) *
                C23040 +
            (C37675 + C37676) * C23041 + C37693 * C23042) *
               C152173 -
           (C39233 * C23042 + (C38659 + C38660) * C23041 +
            (C37950 * C152092 + C37949 * C152188) * C23040) *
               C151956) *
              C1709 +
          (((C38660 + C38659) * C23040 + (C38658 + C38657) * C23041 +
            C39927 * C23042) *
               C151956 -
           (C39009 * C23042 + (C37678 + C37677) * C23041 +
            (C37676 + C37675) * C23040) *
               C152173) *
              C1710 +
          ((C37693 * C23040 + (C37680 + C37679) * C23041 + C39014 * C23042) *
               C152173 -
           ((C39928 + C39929) * C23042 + (C39239 + C39238) * C23041 +
            C39233 * C23040) *
               C151956) *
              C1711 +
          ((C39927 * C23040 + (C39929 + C39928) * C23041 +
            (C33482 * C152188 +
             (C31628 * C32969 + C32985 + C32985 + C151791 * C32971) * C152092) *
                C23042) *
               C151956 -
           ((C39012 + C39013) * C23042 + (C39011 + C39010) * C23041 +
            C39009 * C23040) *
               C152173) *
              C152224) *
         C151823) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152188 +
             C37949 * C152092) *
                C23040 +
            (C37675 + C37676) * C23041 + C37693 * C23042) *
               C2814 -
           (C39233 * C23042 + (C38659 + C38660) * C23041 +
            (C37950 * C152092 + C37949 * C152188) * C23040) *
               C2815 +
           ((C37950 * C152188 + C40513 * C152092) * C23040 +
            (C39234 + C39235) * C23041 + C39242 * C23042) *
               C2816 -
           ((C41217 + C41218) * C23042 + (C41219 + C41220) * C23041 +
            (C40516 * C152092 + C40513 * C152188) * C23040) *
               C152230) *
              C152172 +
          (((C38660 + C38659) * C23040 + (C38658 + C38657) * C23041 +
            C39927 * C23042) *
               C2815 -
           (C39009 * C23042 + (C37678 + C37677) * C23041 +
            (C37676 + C37675) * C23040) *
               C2814 -
           ((C39240 + C39241) * C23042 + (C39237 + C39236) * C23041 +
            (C39235 + C39234) * C23040) *
               C2816 +
           ((C41220 + C41219) * C23040 + (C41218 + C41217) * C23041 +
            (C34362 * C152188 +
             (C31628 * C33857 + C33868 + C33868 + C151791 * C33859) * C152092) *
                C23042) *
               C152230) *
              C151914) *
         C151823) /
            (p * q * std::sqrt(p + q));
    d2ee[362] +=
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             (((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
                C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
                C6086 * C160) *
                   C152188 +
               (C6089 * C550 + C6675 + C6675 + C6084 * C574 + C6091 * C549 +
                C6674 + C6674 + C6085 * C573 + C6093 * C548 + C6673 + C6673 +
                C6086 * C572) *
                   C152092) *
                  C152054 * C151869 * C151851 * C129 -
              ((C6093 * C547 + C6684 + C6684 + C6086 * C571 + C6091 * C548 +
                C6683 + C6683 + C6085 * C572 + C6089 * C549 + C6682 + C6682 +
                C6084 * C573) *
                   C152092 +
               (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
                C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
                C6084 * C159) *
                   C152188) *
                  C152054 * C151869 * C151851 * C130 +
              ((C6089 * C144 + C6108 + C6108 + C6084 * C160 + C6091 * C145 +
                C6109 + C6109 + C6085 * C161 + C6093 * C146 + C6110 + C6110 +
                C6086 * C162) *
                   C152188 +
               (C6089 * C548 + C6699 + C6699 + C6084 * C572 + C6091 * C547 +
                C6698 + C6698 + C6085 * C571 + C6093 * C555 + C6697 + C6697 +
                C6086 * C579) *
                   C152092) *
                  C152054 * C151869 * C151851 * C131 -
              ((C6093 * C557 + C7114 + C7114 + C6086 * C581 + C6091 * C555 +
                C7113 + C7113 + C6085 * C579 + C6089 * C547 + C7112 + C7112 +
                C6084 * C571) *
                   C152092 +
               (C6093 * C147 + C6117 + C6117 + C6086 * C163 + C6091 * C146 +
                C6118 + C6118 + C6085 * C162 + C6089 * C145 + C6119 + C6119 +
                C6084 * C161) *
                   C152188) *
                  C152054 * C151869 * C151851 * C132 +
              ((C6089 * C146 + C6120 + C6120 + C6084 * C162 + C6091 * C147 +
                C6121 + C6121 + C6085 * C163 + C6093 * C148 + C6122 + C6122 +
                C6086 * C164) *
                   C152188 +
               (C6089 * C555 + C14729 + C14729 + C6084 * C579 + C6091 * C557 +
                C14730 + C14730 + C6085 * C581 + C6093 * C882 + C14731 +
                C14731 + C6086 * C884) *
                   C152092) *
                  C152054 * C151869 * C151851 * C133) +
         std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
             ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
                 C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
                 C6086 * C160) *
                    C152188 +
                (C6089 * C550 + C6675 + C6675 + C6084 * C574 + C6091 * C549 +
                 C6674 + C6674 + C6085 * C573 + C6093 * C548 + C6673 + C6673 +
                 C6086 * C572) *
                    C152092) *
                   C152054 * C151869 * C152258 -
               ((C7453 + C7454 + C7455) * C152092 +
                (C6436 + C6435 + C6434) * C152188) *
                   C152054 * C151869 * C152244 +
               ((C6439 + C6438 + C6437) * C152188 +
                (C8122 + C8123 + C8124) * C152092) *
                   C152054 * C151869 * C152214) *
                  C335 +
              (((C6440 + C6441 + C6442) * C152188 +
                (C7456 + C7457 + C7458) * C152092) *
                   C152054 * C151869 * C152244 -
               ((C6093 * C547 + C6684 + C6684 + C6086 * C571 + C6091 * C548 +
                 C6683 + C6683 + C6085 * C572 + C6089 * C549 + C6682 + C6682 +
                 C6084 * C573) *
                    C152092 +
                (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
                 C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
                 C6084 * C159) *
                    C152188) *
                   C152054 * C151869 * C152258 -
               ((C8645 + C8646 + C8647) * C152092 +
                (C6445 + C6444 + C6443) * C152188) *
                   C152054 * C151869 * C152214) *
                  C336 +
              (((C6089 * C144 + C6108 + C6108 + C6084 * C160 + C6091 * C145 +
                 C6109 + C6109 + C6085 * C161 + C6093 * C146 + C6110 + C6110 +
                 C6086 * C162) *
                    C152188 +
                (C6089 * C548 + C6699 + C6699 + C6084 * C572 + C6091 * C547 +
                 C6698 + C6698 + C6085 * C571 + C6093 * C555 + C6697 + C6697 +
                 C6086 * C579) *
                    C152092) *
                   C152054 * C151869 * C152258 -
               ((C7459 + C7460 + C7461) * C152092 +
                (C6448 + C6447 + C6446) * C152188) *
                   C152054 * C151869 * C152244 +
               ((C6451 + C6450 + C6449) * C152188 +
                (C6089 * C1536 + C7432 + C7432 + C6084 * C1560 + C6091 * C1535 +
                 C7433 + C7433 + C6085 * C1559 + C6093 * C1916 + C7434 + C7434 +
                 C6086 * C1918) *
                    C152092) *
                   C152054 * C151869 * C152214) *
                  C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
             C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
             C6086 * C160) *
                C152188 +
            (C15243 + C15244 + C15245) * C152092) *
               C152054 * C152259 -
           ((C15246 + C15247 + C15248) * C152092 +
            (C15245 + C15244 + C15243) * C152188) *
               C152054 * C152246 +
           ((C15248 + C15247 + C15246) * C152188 +
            (C6089 * C2454 + C9441 + C9441 + C6084 * C2470 + C6091 * C2453 +
             C9440 + C9440 + C6085 * C2469 + C6093 * C2452 + C9439 + C9439 +
             C6086 * C2468) *
                C152092) *
               C152054 * C152217) *
              C151851 * C335 +
          (((C15249 + C15250 + C15251) * C152188 +
            (C15252 + C15253 + C15254) * C152092) *
               C152054 * C152246 -
           ((C15251 + C15250 + C15249) * C152092 +
            (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
             C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
             C6084 * C159) *
                C152188) *
               C152054 * C152259 -
           ((C6093 * C2451 + C9952 + C9952 + C6086 * C2467 + C6091 * C2452 +
             C9951 + C9951 + C6085 * C2468 + C6089 * C2453 + C9950 + C9950 +
             C6084 * C2469) *
                C152092 +
            (C15254 + C15253 + C15252) * C152188) *
               C152054 * C152217) *
              C151851 * C336 +
          (((C6089 * C144 + C6108 + C6108 + C6084 * C160 + C6091 * C145 +
             C6109 + C6109 + C6085 * C161 + C6093 * C146 + C6110 + C6110 +
             C6086 * C162) *
                C152188 +
            (C15255 + C15256 + C15257) * C152092) *
               C152054 * C152259 -
           ((C15258 + C15259 + C15260) * C152092 +
            (C15257 + C15256 + C15255) * C152188) *
               C152054 * C152246 +
           ((C15260 + C15259 + C15258) * C152188 +
            (C6089 * C2452 + C15204 + C15204 + C6084 * C2468 + C6091 * C2451 +
             C15205 + C15205 + C6085 * C2467 + C6093 * C2818 + C15206 + C15206 +
             C6086 * C2820) *
                C152092) *
               C152054 * C152217) *
              C151851 * C152208)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
             C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
             C6086 * C160) *
                C152188 +
            (C15243 + C15244 + C15245) * C152092) *
               C152054 * C151869 * C1259 -
           ((C7453 + C7454 + C7455) * C152092 +
            (C6436 + C6435 + C6434) * C152188) *
               C152054 * C151869 * C1260 +
           ((C6439 + C6438 + C6437) * C152188 +
            (C8122 + C8123 + C8124) * C152092) *
               C152054 * C151869 * C152214) *
              C152255 +
          (((C6440 + C6441 + C6442) * C152188 +
            (C7456 + C7457 + C7458) * C152092) *
               C152054 * C151869 * C1260 -
           ((C15251 + C15250 + C15249) * C152092 +
            (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
             C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
             C6084 * C159) *
                C152188) *
               C152054 * C151869 * C1259 -
           ((C8645 + C8646 + C8647) * C152092 +
            (C6445 + C6444 + C6443) * C152188) *
               C152054 * C151869 * C152214) *
              C152240 +
          (((C6089 * C144 + C6108 + C6108 + C6084 * C160 + C6091 * C145 +
             C6109 + C6109 + C6085 * C161 + C6093 * C146 + C6110 + C6110 +
             C6086 * C162) *
                C152188 +
            (C15255 + C15256 + C15257) * C152092) *
               C152054 * C151869 * C1259 -
           ((C7459 + C7460 + C7461) * C152092 +
            (C6448 + C6447 + C6446) * C152188) *
               C152054 * C151869 * C1260 +
           ((C6451 + C6450 + C6449) * C152188 +
            (C6089 * C1536 + C7432 + C7432 + C6084 * C1560 + C6091 * C1535 +
             C7433 + C7433 + C6085 * C1559 + C6093 * C1916 + C7434 + C7434 +
             C6086 * C1918) *
                C152092) *
               C152054 * C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 + C6097 +
            C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
            C6086 * C160) *
               C152188 +
           (C15243 + C15244 + C15245) * C152092) *
              C152054 * C151869 * C1347 -
          ((C7453 + C7454 + C7455) * C152092 +
           (C6436 + C6435 + C6434) * C152188) *
              C152054 * C151869 * C1348 +
          ((C6439 + C6438 + C6437) * C152188 +
           (C8122 + C8123 + C8124) * C152092) *
              C152054 * C151869 * C1349 -
          ((C8866 + C8867 + C8868) * C152092 +
           (C7843 + C7842 + C7841) * C152188) *
              C152054 * C151869 * C1350 +
          ((C7846 + C7845 + C7844) * C152188 +
           (C6089 * C8841 + C8857 + C8857 + C6084 * C8847 + C6091 * C8842 +
            C8858 + C8858 + C6085 * C8848 + C6093 * C8843 + C8859 + C8859 +
            C6086 * C8849) *
               C152092) *
              C152054 * C151869 * C1351) *
         C151823) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
             C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
             C6086 * C160) *
                C152188 +
            (C15243 + C15244 + C15245) * C152092) *
               C152054 * C152259 -
           ((C15246 + C15247 + C15248) * C152092 +
            (C15245 + C15244 + C15243) * C152188) *
               C152054 * C152246 +
           ((C15248 + C15247 + C15246) * C152188 +
            (C6089 * C2454 + C9441 + C9441 + C6084 * C2470 + C6091 * C2453 +
             C9440 + C9440 + C6085 * C2469 + C6093 * C2452 + C9439 + C9439 +
             C6086 * C2468) *
                C152092) *
               C152054 * C152217) *
              C1259 +
          (((C7455 + C7454 + C7453) * C152188 +
            (C8119 + C8120 + C8121) * C152092) *
               C152054 * C152246 -
           ((C7453 + C7454 + C7455) * C152092 +
            (C6436 + C6435 + C6434) * C152188) *
               C152054 * C152259 -
           ((C10174 + C10175 + C10176) * C152092 +
            (C8121 + C8120 + C8119) * C152188) *
               C152054 * C152217) *
              C1260 +
          (((C6439 + C6438 + C6437) * C152188 +
            (C8122 + C8123 + C8124) * C152092) *
               C152054 * C152259 -
           ((C8125 + C8126 + C8127) * C152092 +
            (C8124 + C8123 + C8122) * C152188) *
               C152054 * C152246 +
           ((C8127 + C8126 + C8125) * C152188 +
            (C6089 * C10149 + C10165 + C10165 + C6084 * C10155 +
             C6091 * C10150 + C10166 + C10166 + C6085 * C10156 +
             C6093 * C10151 + C10167 + C10167 + C6086 * C10157) *
                C152092) *
               C152054 * C152217) *
              C152214) *
         C151823) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
             C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
             C6086 * C160) *
                C152188 +
            (C15243 + C15244 + C15245) * C152092) *
               C152054 * C2215 -
           ((C15246 + C15247 + C15248) * C152092 +
            (C15245 + C15244 + C15243) * C152188) *
               C152054 * C2216 +
           ((C15248 + C15247 + C15246) * C152188 +
            (C6089 * C2454 + C9441 + C9441 + C6084 * C2470 + C6091 * C2453 +
             C9440 + C9440 + C6085 * C2469 + C6093 * C2452 + C9439 + C9439 +
             C6086 * C2468) *
                C152092) *
               C152054 * C152217) *
              C151851 * C152255 +
          (((C15249 + C15250 + C15251) * C152188 +
            (C15252 + C15253 + C15254) * C152092) *
               C152054 * C2216 -
           ((C15251 + C15250 + C15249) * C152092 +
            (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
             C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
             C6084 * C159) *
                C152188) *
               C152054 * C2215 -
           ((C6093 * C2451 + C9952 + C9952 + C6086 * C2467 + C6091 * C2452 +
             C9951 + C9951 + C6085 * C2468 + C6089 * C2453 + C9950 + C9950 +
             C6084 * C2469) *
                C152092 +
            (C15254 + C15253 + C15252) * C152188) *
               C152054 * C152217) *
              C151851 * C152240 +
          (((C6089 * C144 + C6108 + C6108 + C6084 * C160 + C6091 * C145 +
             C6109 + C6109 + C6085 * C161 + C6093 * C146 + C6110 + C6110 +
             C6086 * C162) *
                C152188 +
            (C15255 + C15256 + C15257) * C152092) *
               C152054 * C2215 -
           ((C15258 + C15259 + C15260) * C152092 +
            (C15257 + C15256 + C15255) * C152188) *
               C152054 * C2216 +
           ((C15260 + C15259 + C15258) * C152188 +
            (C6089 * C2452 + C15204 + C15204 + C6084 * C2468 + C6091 * C2451 +
             C15205 + C15205 + C6085 * C2467 + C6093 * C2818 + C15206 + C15206 +
             C6086 * C2820) *
                C152092) *
               C152054 * C152217) *
              C151851 * C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
             C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
             C6086 * C160) *
                C152188 +
            (C15243 + C15244 + C15245) * C152092) *
               C152054 * C2215 -
           ((C15246 + C15247 + C15248) * C152092 +
            (C15245 + C15244 + C15243) * C152188) *
               C152054 * C2216 +
           ((C15248 + C15247 + C15246) * C152188 +
            (C6089 * C2454 + C9441 + C9441 + C6084 * C2470 + C6091 * C2453 +
             C9440 + C9440 + C6085 * C2469 + C6093 * C2452 + C9439 + C9439 +
             C6086 * C2468) *
                C152092) *
               C152054 * C152217) *
              C152258 +
          (((C7455 + C7454 + C7453) * C152188 +
            (C8119 + C8120 + C8121) * C152092) *
               C152054 * C2216 -
           ((C7453 + C7454 + C7455) * C152092 +
            (C6436 + C6435 + C6434) * C152188) *
               C152054 * C2215 -
           ((C10174 + C10175 + C10176) * C152092 +
            (C8121 + C8120 + C8119) * C152188) *
               C152054 * C152217) *
              C152244 +
          (((C6439 + C6438 + C6437) * C152188 +
            (C8122 + C8123 + C8124) * C152092) *
               C152054 * C2215 -
           ((C8125 + C8126 + C8127) * C152092 +
            (C8124 + C8123 + C8122) * C152188) *
               C152054 * C2216 +
           ((C8127 + C8126 + C8125) * C152188 +
            (C6089 * C10149 + C10165 + C10165 + C6084 * C10155 +
             C6091 * C10150 + C10166 + C10166 + C6085 * C10156 +
             C6093 * C10151 + C10167 + C10167 + C6086 * C10157) *
                C152092) *
               C152054 * C152217) *
              C152214) *
         C151823) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         (((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 + C6097 +
            C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
            C6086 * C160) *
               C152188 +
           (C15243 + C15244 + C15245) * C152092) *
              C152054 * C2446 -
          ((C15246 + C15247 + C15248) * C152092 +
           (C15245 + C15244 + C15243) * C152188) *
              C152054 * C2447 +
          ((C15248 + C15247 + C15246) * C152188 +
           (C17787 + C17788 + C17789) * C152092) *
              C152054 * C2448 -
          ((C17790 + C17791 + C17792) * C152092 +
           (C17789 + C17788 + C17787) * C152188) *
              C152054 * C2449 +
          ((C17792 + C17791 + C17790) * C152188 +
           (C6089 * C17750 + C17772 + C17772 + C6084 * C17756 + C6091 * C17751 +
            C17773 + C17773 + C6085 * C17757 + C6093 * C17752 + C17774 +
            C17774 + C6086 * C17758) *
               C152092) *
              C152054 * C2450) *
         C151851 * C151823) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152188 +
            (C31628 * C550 + C32024 + C32024 + C151791 * C574) * C152092) *
               C23040 +
           (C31851 * C152188 + C32563 * C152092) * C23041 +
           (C31852 * C152188 + C32562 * C152092) * C23042) *
              C151869 * C151851 * C129 -
          ((C32565 * C152092 + C31856 * C152188) * C23042 +
           (C32564 * C152092 + C31855 * C152188) * C23041 +
           ((C31628 * C549 + C32029 + C32029 + C151791 * C573) * C152092 +
            (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152188) *
               C23040) *
              C151869 * C151851 * C130 +
          (((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C152188 +
            (C31628 * C548 + C32040 + C32040 + C151791 * C572) * C152092) *
               C23040 +
           (C31859 * C152188 + C32569 * C152092) * C23041 +
           (C31860 * C152188 + C32568 * C152092) * C23042) *
              C151869 * C151851 * C131 -
          (((C31628 * C1535 + C32326 + C32326 + C151791 * C1559) * C152092 +
            C32189 * C152188) *
               C23042 +
           ((C31628 * C1086 + C32325 + C32325 + C151791 * C1098) * C152092 +
            C32188 * C152188) *
               C23041 +
           ((C31628 * C547 + C32324 + C32324 + C151791 * C571) * C152092 +
            (C31628 * C145 + C31646 + C31646 + C151791 * C161) * C152188) *
               C23040) *
              C151869 * C151851 * C132 +
          (((C31628 * C146 + C31647 + C31647 + C151791 * C162) * C152188 +
            (C31628 * C555 + C37454 + C37454 + C151791 * C579) * C152092) *
               C23040 +
           ((C31628 * C346 + C31648 + C31648 + C151791 * C370) * C152188 +
            (C31628 * C1087 + C37455 + C37455 + C151791 * C1099) * C152092) *
               C23041 +
           ((C31628 * C347 + C31649 + C31649 + C151791 * C371) * C152188 +
            (C31628 * C1916 + C37456 + C37456 + C151791 * C1918) * C152092) *
               C23042) *
              C151869 * C151851 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152188 +
             (C31628 * C550 + C32024 + C32024 + C151791 * C574) * C152092) *
                C23040 +
            (C37675 + C37676) * C23041 + C37693 * C23042) *
               C151869 * C152258 -
           ((C37679 + C37680) * C23042 + (C37678 + C37677) * C23041 +
            (C37676 + C37675) * C23040) *
               C151869 * C152244 +
           (C37693 * C23040 + (C37680 + C37679) * C23041 +
            (C31854 * C152188 + C32999 * C152092) * C23042) *
               C151869 * C152214) *
              C335 +
          (((C37681 + C37682) * C23040 + (C37683 + C37684) * C23041 +
            (C37685 + C37686) * C23042) *
               C151869 * C152244 -
           (C37694 * C23042 + (C37682 + C37681) * C23041 +
            ((C31628 * C549 + C32029 + C32029 + C151791 * C573) * C152092 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152188) *
                C23040) *
               C151869 * C152258 -
           ((C33342 * C152092 + C31858 * C152188) * C23042 +
            (C37686 + C37685) * C23041 + C37694 * C23040) *
               C151869 * C152214) *
              C336 +
          ((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C152188 +
             (C31628 * C548 + C32040 + C32040 + C151791 * C572) * C152092) *
                C23040 +
            (C37687 + C37688) * C23041 + C37695 * C23042) *
               C151869 * C152258 -
           ((C37691 + C37692) * C23042 + (C37690 + C37689) * C23041 +
            (C37688 + C37687) * C23040) *
               C151869 * C152244 +
           (C37695 * C23040 + (C37692 + C37691) * C23041 +
            (C31862 * C152188 +
             (C31628 * C8843 + C32542 + C32542 + C151791 * C8849) * C152092) *
                C23042) *
               C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152188 +
             C37949 * C152092) *
                C23040 +
            (C37675 + C37676) * C23041 + C37693 * C23042) *
               C152259 -
           ((C32997 * C152092 + C32562 * C152188) * C23042 +
            (C32996 * C152092 + C32563 * C152188) * C23041 +
            (C37950 * C152092 + C37949 * C152188) * C23040) *
               C152246 +
           ((C37950 * C152188 +
             (C31628 * C2454 + C33864 + C33864 + C151791 * C2470) * C152092) *
                C23040 +
            (C32996 * C152188 + C34364 * C152092) * C23041 +
            (C32997 * C152188 + C34363 * C152092) * C23042) *
               C152217) *
              C151851 * C335 +
          (((C37951 * C152188 + C37952 * C152092) * C23040 +
            (C32564 * C152188 + C34078 * C152092) * C23041 +
            (C32565 * C152188 + C34077 * C152092) * C23042) *
               C152246 -
           (C37694 * C23042 + (C37682 + C37681) * C23041 +
            (C37951 * C152092 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152188) *
                C23040) *
               C152259 -
           (((C31628 * C10150 + C34214 + C34214 + C151791 * C10156) * C152092 +
             C34077 * C152188) *
                C23042 +
            ((C31628 * C2956 + C34213 + C34213 + C151791 * C2964) * C152092 +
             C34078 * C152188) *
                C23041 +
            ((C31628 * C2453 + C34212 + C34212 + C151791 * C2469) * C152092 +
             C37952 * C152188) *
                C23040) *
               C152217) *
              C151851 * C336 +
          ((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C152188 +
             C37953 * C152092) *
                C23040 +
            (C37687 + C37688) * C23041 + C37695 * C23042) *
               C152259 -
           ((C37954 * C152092 + C32568 * C152188) * C23042 +
            (C37955 * C152092 + C32569 * C152188) * C23041 +
            (C37956 * C152092 + C37953 * C152188) * C23040) *
               C152246 +
           ((C37956 * C152188 +
             (C31628 * C2452 + C37930 + C37930 + C151791 * C2468) * C152092) *
                C23040 +
            (C37955 * C152188 +
             (C31628 * C2957 + C37931 + C37931 + C151791 * C2965) * C152092) *
                C23041 +
            (C37954 * C152188 +
             (C31628 * C10151 + C37932 + C37932 + C151791 * C10157) * C152092) *
                C23042) *
               C152217) *
              C151851 * C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152188 +
             C37949 * C152092) *
                C23040 +
            (C37675 + C37676) * C23041 + C37693 * C23042) *
               C151869 * C1259 -
           ((C37679 + C37680) * C23042 + (C37678 + C37677) * C23041 +
            (C37676 + C37675) * C23040) *
               C151869 * C1260 +
           (C37693 * C23040 + (C37680 + C37679) * C23041 +
            (C31854 * C152188 + C32999 * C152092) * C23042) *
               C151869 * C152214) *
              C152255 +
          (((C37681 + C37682) * C23040 + (C37683 + C37684) * C23041 +
            (C37685 + C37686) * C23042) *
               C151869 * C1260 -
           (C37694 * C23042 + (C37682 + C37681) * C23041 +
            (C37951 * C152092 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152188) *
                C23040) *
               C151869 * C1259 -
           ((C33342 * C152092 + C31858 * C152188) * C23042 +
            (C37686 + C37685) * C23041 + C37694 * C23040) *
               C151869 * C152214) *
              C152240 +
          ((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C152188 +
             C37953 * C152092) *
                C23040 +
            (C37687 + C37688) * C23041 + C37695 * C23042) *
               C151869 * C1259 -
           ((C37691 + C37692) * C23042 + (C37690 + C37689) * C23041 +
            (C37688 + C37687) * C23040) *
               C151869 * C1260 +
           (C37695 * C23040 + (C37692 + C37691) * C23041 +
            (C31862 * C152188 +
             (C31628 * C8843 + C32542 + C32542 + C151791 * C8849) * C152092) *
                C23042) *
               C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.046875) * 2 * std::pow(Pi, 2.5) *
         ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152188 +
            C37949 * C152092) *
               C23040 +
           (C37675 + C37676) * C23041 + C37693 * C23042) *
              C151869 * C1347 -
          (C39009 * C23042 + (C37678 + C37677) * C23041 +
           (C37676 + C37675) * C23040) *
              C151869 * C1348 +
          (C37693 * C23040 + (C37680 + C37679) * C23041 + C39014 * C23042) *
              C151869 * C1349 -
          ((C39012 + C39013) * C23042 + (C39011 + C39010) * C23041 +
           C39009 * C23040) *
              C151869 * C1350 +
          (C39014 * C23040 + (C39013 + C39012) * C23041 +
           (C32821 * C152188 +
            (C31628 * C33473 + C33479 + C33479 + C151791 * C33475) * C152092) *
               C23042) *
              C151869 * C1351) *
         C151823) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152188 +
             C37949 * C152092) *
                C23040 +
            (C37675 + C37676) * C23041 + C37693 * C23042) *
               C152259 -
           (C39233 * C23042 + (C38659 + C38660) * C23041 +
            (C37950 * C152092 + C37949 * C152188) * C23040) *
               C152246 +
           ((C37950 * C152188 +
             (C31628 * C2454 + C33864 + C33864 + C151791 * C2470) * C152092) *
                C23040 +
            (C39234 + C39235) * C23041 + C39242 * C23042) *
               C152217) *
              C1259 +
          (((C38660 + C38659) * C23040 + (C38658 + C38657) * C23041 +
            (C39238 + C39239) * C23042) *
               C152246 -
           (C39009 * C23042 + (C37678 + C37677) * C23041 +
            (C37676 + C37675) * C23040) *
               C152259 -
           ((C39240 + C39241) * C23042 + (C39237 + C39236) * C23041 +
            (C39235 + C39234) * C23040) *
               C152217) *
              C1260 +
          ((C37693 * C23040 + (C37680 + C37679) * C23041 + C39014 * C23042) *
               C152259 -
           ((C33000 * C152092 + C32999 * C152188) * C23042 +
            (C39239 + C39238) * C23041 + C39233 * C23040) *
               C152246 +
           (C39242 * C23040 + (C39241 + C39240) * C23041 +
            (C33000 * C152188 +
             (C31628 * C34345 + C34355 + C34355 + C151791 * C34347) * C152092) *
                C23042) *
               C152217) *
              C152214) *
         C151823) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152188 +
             C37949 * C152092) *
                C23040 +
            (C37675 + C37676) * C23041 + C37693 * C23042) *
               C2215 -
           (C39233 * C23042 + (C38659 + C38660) * C23041 +
            (C37950 * C152092 + C37949 * C152188) * C23040) *
               C2216 +
           ((C37950 * C152188 +
             (C31628 * C2454 + C33864 + C33864 + C151791 * C2470) * C152092) *
                C23040 +
            (C39234 + C39235) * C23041 + C39242 * C23042) *
               C152217) *
              C151851 * C152255 +
          (((C37951 * C152188 + C37952 * C152092) * C23040 +
            (C38661 + C38662) * C23041 + C39730 * C23042) *
               C2216 -
           (C37694 * C23042 + (C37682 + C37681) * C23041 +
            (C37951 * C152092 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152188) *
                C23040) *
               C2215 -
           (((C31628 * C10150 + C34214 + C34214 + C151791 * C10156) * C152092 +
             C34077 * C152188) *
                C23042 +
            ((C31628 * C2956 + C34213 + C34213 + C151791 * C2964) * C152092 +
             C34078 * C152188) *
                C23041 +
            ((C31628 * C2453 + C34212 + C34212 + C151791 * C2469) * C152092 +
             C37952 * C152188) *
                C23040) *
               C152217) *
              C151851 * C152240 +
          ((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C152188 +
             C37953 * C152092) *
                C23040 +
            (C37687 + C37688) * C23041 + C37695 * C23042) *
               C2215 -
           ((C38665 + C38666) * C23042 + (C38667 + C38668) * C23041 +
            (C37956 * C152092 + C37953 * C152188) * C23040) *
               C2216 +
           ((C37956 * C152188 +
             (C31628 * C2452 + C37930 + C37930 + C151791 * C2468) * C152092) *
                C23040 +
            (C37955 * C152188 +
             (C31628 * C2957 + C37931 + C37931 + C151791 * C2965) * C152092) *
                C23041 +
            (C37954 * C152188 +
             (C31628 * C10151 + C37932 + C37932 + C151791 * C10157) * C152092) *
                C23042) *
               C152217) *
              C151851 * C152208)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.1875) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152188 +
             C37949 * C152092) *
                C23040 +
            (C37675 + C37676) * C23041 + C37693 * C23042) *
               C2215 -
           (C39233 * C23042 + (C38659 + C38660) * C23041 +
            (C37950 * C152092 + C37949 * C152188) * C23040) *
               C2216 +
           ((C37950 * C152188 +
             (C31628 * C2454 + C33864 + C33864 + C151791 * C2470) * C152092) *
                C23040 +
            (C39234 + C39235) * C23041 + C39242 * C23042) *
               C152217) *
              C152258 +
          (((C38660 + C38659) * C23040 + (C38658 + C38657) * C23041 +
            C39927 * C23042) *
               C2216 -
           (C39009 * C23042 + (C37678 + C37677) * C23041 +
            (C37676 + C37675) * C23040) *
               C2215 -
           ((C39240 + C39241) * C23042 + (C39237 + C39236) * C23041 +
            (C39235 + C39234) * C23040) *
               C152217) *
              C152244 +
          ((C37693 * C23040 + (C37680 + C37679) * C23041 + C39014 * C23042) *
               C2215 -
           ((C39928 + C39929) * C23042 + (C39239 + C39238) * C23041 +
            C39233 * C23040) *
               C2216 +
           (C39242 * C23040 + (C39241 + C39240) * C23041 +
            (C33000 * C152188 +
             (C31628 * C34345 + C34355 + C34355 + C151791 * C34347) * C152092) *
                C23042) *
               C152217) *
              C152214) *
         C151823) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.75) * 2 * std::pow(Pi, 2.5) *
         ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152188 +
            C37949 * C152092) *
               C23040 +
           (C37675 + C37676) * C23041 + C37693 * C23042) *
              C2446 -
          (C39233 * C23042 + (C38659 + C38660) * C23041 +
           (C37950 * C152092 + C37949 * C152188) * C23040) *
              C2447 +
          ((C37950 * C152188 + C40513 * C152092) * C23040 +
           (C39234 + C39235) * C23041 + C39242 * C23042) *
              C2448 -
          ((C40514 * C152092 + C34363 * C152188) * C23042 +
           (C40515 * C152092 + C34364 * C152188) * C23041 +
           (C40516 * C152092 + C40513 * C152188) * C23040) *
              C2449 +
          ((C40516 * C152188 +
            (C31628 * C17750 + C40502 + C40502 + C151791 * C17756) * C152092) *
               C23040 +
           (C40515 * C152188 +
            (C31628 * C40487 + C40503 + C40503 + C151791 * C40491) * C152092) *
               C23041 +
           (C40514 * C152188 +
            (C31628 * C40488 + C40504 + C40504 + C151791 * C40492) * C152092) *
               C23042) *
              C2450) *
         C151851 * C151823) /
            (p * q * std::sqrt(p + q));
    d2ee[363] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
              C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
              C6086 * C160) *
                 C152188 +
             (C15243 + C15244 + C15245) * C152092) *
                C152054 * C152173 -
            ((C15246 + C15247 + C15248) * C152092 +
             (C15245 + C15244 + C15243) * C152188) *
                C152054 * C151956) *
               C1259 +
           (((C7455 + C7454 + C7453) * C152188 +
             (C8119 + C8120 + C8121) * C152092) *
                C152054 * C151956 -
            ((C7453 + C7454 + C7455) * C152092 +
             (C6436 + C6435 + C6434) * C152188) *
                C152054 * C152173) *
               C1260 +
           (((C6439 + C6438 + C6437) * C152188 +
             (C8122 + C8123 + C8124) * C152092) *
                C152054 * C152173 -
            ((C8125 + C8126 + C8127) * C152092 +
             (C8124 + C8123 + C8122) * C152188) *
                C152054 * C151956) *
               C152214) *
              C152158 +
          ((((C15249 + C15250 + C15251) * C152188 +
             (C15252 + C15253 + C15254) * C152092) *
                C152054 * C151956 -
            ((C15251 + C15250 + C15249) * C152092 +
             (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
              C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
              C6084 * C159) *
                 C152188) *
                C152054 * C152173) *
               C1259 +
           (((C6440 + C6441 + C6442) * C152188 +
             (C7456 + C7457 + C7458) * C152092) *
                C152054 * C152173 -
            ((C9753 + C9754 + C9755) * C152092 +
             (C7458 + C7457 + C7456) * C152188) *
                C152054 * C151956) *
               C1260 +
           (((C8647 + C8646 + C8645) * C152188 +
             (C6089 * C1540 + C9744 + C9744 + C6084 * C1564 + C6091 * C1541 +
              C9745 + C9745 + C6085 * C1565 + C6093 * C1542 + C9746 + C9746 +
              C6086 * C1566) *
                 C152092) *
                C152054 * C151956 -
            ((C8645 + C8646 + C8647) * C152092 +
             (C6445 + C6444 + C6443) * C152188) *
                C152054 * C152173) *
               C152214) *
              C151834)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
             C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
             C6086 * C160) *
                C152188 +
            (C15243 + C15244 + C15245) * C152092) *
               C152054 * C152173 -
           ((C15246 + C15247 + C15248) * C152092 +
            (C15245 + C15244 + C15243) * C152188) *
               C152054 * C151956) *
              C151851 * C739 +
          (((C15249 + C15250 + C15251) * C152188 +
            (C15252 + C15253 + C15254) * C152092) *
               C152054 * C151956 -
           ((C15251 + C15250 + C15249) * C152092 +
            (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
             C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
             C6084 * C159) *
                C152188) *
               C152054 * C152173) *
              C151851 * C740 +
          (((C6089 * C144 + C6108 + C6108 + C6084 * C160 + C6091 * C145 +
             C6109 + C6109 + C6085 * C161 + C6093 * C146 + C6110 + C6110 +
             C6086 * C162) *
                C152188 +
            (C15255 + C15256 + C15257) * C152092) *
               C152054 * C152173 -
           ((C15258 + C15259 + C15260) * C152092 +
            (C15257 + C15256 + C15255) * C152188) *
               C152054 * C151956) *
              C151851 * C741 +
          (((C15664 + C15665 + C15666) * C152188 +
            (C6089 * C554 + C15655 + C15655 + C6084 * C578 + C6091 * C556 +
             C15656 + C15656 + C6085 * C580 + C6093 * C558 + C15657 + C15657 +
             C6086 * C582) *
                C152092) *
               C152054 * C151956 -
           ((C15666 + C15665 + C15664) * C152092 +
            (C6093 * C147 + C6117 + C6117 + C6086 * C163 + C6091 * C146 +
             C6118 + C6118 + C6085 * C162 + C6089 * C145 + C6119 + C6119 +
             C6084 * C161) *
                C152188) *
               C152054 * C152173) *
              C151851 * C152218)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
             C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
             C6086 * C160) *
                C152188 +
            (C15243 + C15244 + C15245) * C152092) *
               C152054 * C2814 -
           ((C15246 + C15247 + C15248) * C152092 +
            (C15245 + C15244 + C15243) * C152188) *
               C152054 * C2815 +
           ((C15248 + C15247 + C15246) * C152188 +
            (C17787 + C17788 + C17789) * C152092) *
               C152054 * C2816 -
           ((C17790 + C17791 + C17792) * C152092 +
            (C17789 + C17788 + C17787) * C152188) *
               C152054 * C152230) *
              C151851 * C152158 +
          (((C15249 + C15250 + C15251) * C152188 +
            (C15252 + C15253 + C15254) * C152092) *
               C152054 * C2815 -
           ((C15251 + C15250 + C15249) * C152092 +
            (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
             C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
             C6084 * C159) *
                C152188) *
               C152054 * C2814 -
           ((C18292 + C18293 + C18294) * C152092 +
            (C15254 + C15253 + C15252) * C152188) *
               C152054 * C2816 +
           ((C18294 + C18293 + C18292) * C152188 +
            (C6089 * C2456 + C18283 + C18283 + C6084 * C2472 + C6091 * C2457 +
             C18284 + C18284 + C6085 * C2473 + C6093 * C2458 + C18285 + C18285 +
             C6086 * C2474) *
                C152092) *
               C152054 * C152230) *
              C151851 * C151834)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152188 +
             C37949 * C152092) *
                C23040 +
            (C37675 + C37676) * C23041 + C37693 * C23042) *
               C152173 -
           ((C32997 * C152092 + C32562 * C152188) * C23042 +
            (C32996 * C152092 + C32563 * C152188) * C23041 +
            (C37950 * C152092 + C37949 * C152188) * C23040) *
               C151956) *
              C151851 * C739 +
          (((C37951 * C152188 + C37952 * C152092) * C23040 +
            (C32564 * C152188 + C34078 * C152092) * C23041 +
            (C32565 * C152188 + C34077 * C152092) * C23042) *
               C151956 -
           (C37694 * C23042 + (C37682 + C37681) * C23041 +
            (C37951 * C152092 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152188) *
                C23040) *
               C152173) *
              C151851 * C740 +
          ((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C152188 +
             C37953 * C152092) *
                C23040 +
            (C37687 + C37688) * C23041 + C37695 * C23042) *
               C152173 -
           ((C37954 * C152092 + C32568 * C152188) * C23042 +
            (C37955 * C152092 + C32569 * C152188) * C23041 +
            (C37956 * C152092 + C37953 * C152188) * C23040) *
               C151956) *
              C151851 * C741 +
          (((C38366 * C152188 +
             (C31628 * C554 + C38361 + C38361 + C151791 * C578) * C152092) *
                C23040 +
            (C38161 * C152188 +
             (C31628 * C1531 + C38362 + C38362 + C151791 * C1555) * C152092) *
                C23041 +
            (C38162 * C152188 +
             (C31628 * C1542 + C38363 + C38363 + C151791 * C1566) * C152092) *
                C23042) *
               C151956 -
           ((C38164 + C38154) * C23042 + (C38163 + C38151) * C23041 +
            (C38366 * C152092 +
             (C31628 * C145 + C31646 + C31646 + C151791 * C161) * C152188) *
                C23040) *
               C152173) *
              C151851 * C152218)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152188 +
              C37949 * C152092) *
                 C23040 +
             (C37675 + C37676) * C23041 + C37693 * C23042) *
                C152173 -
            (C39233 * C23042 + (C38659 + C38660) * C23041 +
             (C37950 * C152092 + C37949 * C152188) * C23040) *
                C151956) *
               C1259 +
           (((C38660 + C38659) * C23040 + (C38658 + C38657) * C23041 +
             (C39238 + C39239) * C23042) *
                C151956 -
            (C39009 * C23042 + (C37678 + C37677) * C23041 +
             (C37676 + C37675) * C23040) *
                C152173) *
               C1260 +
           ((C37693 * C23040 + (C37680 + C37679) * C23041 + C39014 * C23042) *
                C152173 -
            ((C33000 * C152092 + C32999 * C152188) * C23042 +
             (C39239 + C39238) * C23041 + C39233 * C23040) *
                C151956) *
               C152214) *
              C152158 +
          ((((C37951 * C152188 + C37952 * C152092) * C23040 +
             (C38661 + C38662) * C23041 + C39730 * C23042) *
                C151956 -
            (C37694 * C23042 + (C37682 + C37681) * C23041 +
             (C37951 * C152092 +
              (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152188) *
                 C23040) *
                C152173) *
               C1259 +
           (((C37681 + C37682) * C23040 + (C37683 + C37684) * C23041 +
             C39437 * C23042) *
                C152173 -
            ((C39731 + C39732) * C23042 + (C38664 + C38663) * C23041 +
             (C38662 + C38661) * C23040) *
                C151956) *
               C1260 +
           ((C39730 * C23040 + (C39732 + C39731) * C23041 +
             (C33342 * C152188 +
              (C31628 * C25022 + C34069 + C34069 + C151791 * C25026) *
                  C152092) *
                 C23042) *
                C151956 -
            ((C39438 + C39439) * C23042 + (C37686 + C37685) * C23041 +
             C37694 * C23040) *
                C152173) *
               C152214) *
              C151834)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152188 +
             C37949 * C152092) *
                C23040 +
            (C37675 + C37676) * C23041 + C37693 * C23042) *
               C2814 -
           (C39233 * C23042 + (C38659 + C38660) * C23041 +
            (C37950 * C152092 + C37949 * C152188) * C23040) *
               C2815 +
           ((C37950 * C152188 + C40513 * C152092) * C23040 +
            (C39234 + C39235) * C23041 + C39242 * C23042) *
               C2816 -
           ((C40514 * C152092 + C34363 * C152188) * C23042 +
            (C40515 * C152092 + C34364 * C152188) * C23041 +
            (C40516 * C152092 + C40513 * C152188) * C23040) *
               C152230) *
              C151851 * C152158 +
          (((C37951 * C152188 + C37952 * C152092) * C23040 +
            (C38661 + C38662) * C23041 + C39730 * C23042) *
               C2815 -
           (C37694 * C23042 + (C37682 + C37681) * C23041 +
            (C37951 * C152092 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152188) *
                C23040) *
               C2814 -
           ((C40819 + C40809) * C23042 + (C40820 + C40812) * C23041 +
            (C41022 * C152092 + C37952 * C152188) * C23040) *
               C2816 +
           ((C41022 * C152188 +
             (C31628 * C2456 + C41017 + C41017 + C151791 * C2472) * C152092) *
                C23040 +
            (C40818 * C152188 +
             (C31628 * C9427 + C41018 + C41018 + C151791 * C9433) * C152092) *
                C23041 +
            (C40817 * C152188 +
             (C31628 * C26362 + C41019 + C41019 + C151791 * C26366) * C152092) *
                C23042) *
               C152230) *
              C151851 * C151834)) /
            (p * q * std::sqrt(p + q));
    d2ee[364] +=
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
             C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
             C6086 * C160) *
                C152188 +
            (C6089 * C550 + C6675 + C6675 + C6084 * C574 + C6091 * C549 +
             C6674 + C6674 + C6085 * C573 + C6093 * C548 + C6673 + C6673 +
             C6086 * C572) *
                C152092) *
               C152054 * C151869 * C152258 -
           ((C7453 + C7454 + C7455) * C152092 +
            (C6436 + C6435 + C6434) * C152188) *
               C152054 * C151869 * C152244 +
           ((C6439 + C6438 + C6437) * C152188 +
            (C8122 + C8123 + C8124) * C152092) *
               C152054 * C151869 * C152214) *
              C335 +
          (((C6440 + C6441 + C6442) * C152188 +
            (C7456 + C7457 + C7458) * C152092) *
               C152054 * C151869 * C152244 -
           ((C6093 * C547 + C6684 + C6684 + C6086 * C571 + C6091 * C548 +
             C6683 + C6683 + C6085 * C572 + C6089 * C549 + C6682 + C6682 +
             C6084 * C573) *
                C152092 +
            (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
             C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
             C6084 * C159) *
                C152188) *
               C152054 * C151869 * C152258 -
           ((C8645 + C8646 + C8647) * C152092 +
            (C6445 + C6444 + C6443) * C152188) *
               C152054 * C151869 * C152214) *
              C336 +
          (((C6089 * C144 + C6108 + C6108 + C6084 * C160 + C6091 * C145 +
             C6109 + C6109 + C6085 * C161 + C6093 * C146 + C6110 + C6110 +
             C6086 * C162) *
                C152188 +
            (C6089 * C548 + C6699 + C6699 + C6084 * C572 + C6091 * C547 +
             C6698 + C6698 + C6085 * C571 + C6093 * C555 + C6697 + C6697 +
             C6086 * C579) *
                C152092) *
               C152054 * C151869 * C152258 -
           ((C7459 + C7460 + C7461) * C152092 +
            (C6448 + C6447 + C6446) * C152188) *
               C152054 * C151869 * C152244 +
           ((C6451 + C6450 + C6449) * C152188 +
            (C6089 * C1536 + C7432 + C7432 + C6084 * C1560 + C6091 * C1535 +
             C7433 + C7433 + C6085 * C1559 + C6093 * C1916 + C7434 + C7434 +
             C6086 * C1918) *
                C152092) *
               C152054 * C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 + C6097 +
            C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
            C6086 * C160) *
               C152188 +
           (C6089 * C550 + C6675 + C6675 + C6084 * C574 + C6091 * C549 + C6674 +
            C6674 + C6085 * C573 + C6093 * C548 + C6673 + C6673 +
            C6086 * C572) *
               C152092) *
              C152054 * C151869 * C151851 * C129 -
          ((C6093 * C547 + C6684 + C6684 + C6086 * C571 + C6091 * C548 + C6683 +
            C6683 + C6085 * C572 + C6089 * C549 + C6682 + C6682 +
            C6084 * C573) *
               C152092 +
           (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 + C6106 +
            C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
            C6084 * C159) *
               C152188) *
              C152054 * C151869 * C151851 * C130 +
          ((C6089 * C144 + C6108 + C6108 + C6084 * C160 + C6091 * C145 + C6109 +
            C6109 + C6085 * C161 + C6093 * C146 + C6110 + C6110 +
            C6086 * C162) *
               C152188 +
           (C6089 * C548 + C6699 + C6699 + C6084 * C572 + C6091 * C547 + C6698 +
            C6698 + C6085 * C571 + C6093 * C555 + C6697 + C6697 +
            C6086 * C579) *
               C152092) *
              C152054 * C151869 * C151851 * C131 -
          ((C6093 * C557 + C7114 + C7114 + C6086 * C581 + C6091 * C555 + C7113 +
            C7113 + C6085 * C579 + C6089 * C547 + C7112 + C7112 +
            C6084 * C571) *
               C152092 +
           (C6093 * C147 + C6117 + C6117 + C6086 * C163 + C6091 * C146 + C6118 +
            C6118 + C6085 * C162 + C6089 * C145 + C6119 + C6119 +
            C6084 * C161) *
               C152188) *
              C152054 * C151869 * C151851 * C132 +
          ((C6089 * C146 + C6120 + C6120 + C6084 * C162 + C6091 * C147 + C6121 +
            C6121 + C6085 * C163 + C6093 * C148 + C6122 + C6122 +
            C6086 * C164) *
               C152188 +
           (C6089 * C555 + C14729 + C14729 + C6084 * C579 + C6091 * C557 +
            C14730 + C14730 + C6085 * C581 + C6093 * C882 + C14731 + C14731 +
            C6086 * C884) *
               C152092) *
              C152054 * C151869 * C151851 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
             C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
             C6086 * C160) *
                C152188 +
            (C15243 + C15244 + C15245) * C152092) *
               C152054 * C151869 * C1259 -
           ((C7453 + C7454 + C7455) * C152092 +
            (C6436 + C6435 + C6434) * C152188) *
               C152054 * C151869 * C1260 +
           ((C6439 + C6438 + C6437) * C152188 +
            (C8122 + C8123 + C8124) * C152092) *
               C152054 * C151869 * C152214) *
              C152255 +
          (((C6440 + C6441 + C6442) * C152188 +
            (C7456 + C7457 + C7458) * C152092) *
               C152054 * C151869 * C1260 -
           ((C15251 + C15250 + C15249) * C152092 +
            (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
             C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
             C6084 * C159) *
                C152188) *
               C152054 * C151869 * C1259 -
           ((C8645 + C8646 + C8647) * C152092 +
            (C6445 + C6444 + C6443) * C152188) *
               C152054 * C151869 * C152214) *
              C152240 +
          (((C6089 * C144 + C6108 + C6108 + C6084 * C160 + C6091 * C145 +
             C6109 + C6109 + C6085 * C161 + C6093 * C146 + C6110 + C6110 +
             C6086 * C162) *
                C152188 +
            (C15255 + C15256 + C15257) * C152092) *
               C152054 * C151869 * C1259 -
           ((C7459 + C7460 + C7461) * C152092 +
            (C6448 + C6447 + C6446) * C152188) *
               C152054 * C151869 * C1260 +
           ((C6451 + C6450 + C6449) * C152188 +
            (C6089 * C1536 + C7432 + C7432 + C6084 * C1560 + C6091 * C1535 +
             C7433 + C7433 + C6085 * C1559 + C6093 * C1916 + C7434 + C7434 +
             C6086 * C1918) *
                C152092) *
               C152054 * C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 + C6097 +
            C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
            C6086 * C160) *
               C152188 +
           (C15243 + C15244 + C15245) * C152092) *
              C152054 * C151869 * C1347 -
          ((C7453 + C7454 + C7455) * C152092 +
           (C6436 + C6435 + C6434) * C152188) *
              C152054 * C151869 * C1348 +
          ((C6439 + C6438 + C6437) * C152188 +
           (C8122 + C8123 + C8124) * C152092) *
              C152054 * C151869 * C1349 -
          ((C8866 + C8867 + C8868) * C152092 +
           (C7843 + C7842 + C7841) * C152188) *
              C152054 * C151869 * C1350 +
          ((C7846 + C7845 + C7844) * C152188 +
           (C6089 * C8841 + C8857 + C8857 + C6084 * C8847 + C6091 * C8842 +
            C8858 + C8858 + C6085 * C8848 + C6093 * C8843 + C8859 + C8859 +
            C6086 * C8849) *
               C152092) *
              C152054 * C151869 * C1351) *
         C151823) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
             C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
             C6086 * C160) *
                C152188 +
            (C15243 + C15244 + C15245) * C152092) *
               C152054 * C2215 -
           ((C15246 + C15247 + C15248) * C152092 +
            (C15245 + C15244 + C15243) * C152188) *
               C152054 * C2216 +
           ((C15248 + C15247 + C15246) * C152188 +
            (C6089 * C2454 + C9441 + C9441 + C6084 * C2470 + C6091 * C2453 +
             C9440 + C9440 + C6085 * C2469 + C6093 * C2452 + C9439 + C9439 +
             C6086 * C2468) *
                C152092) *
               C152054 * C152217) *
              C151851 * C152255 +
          (((C15249 + C15250 + C15251) * C152188 +
            (C15252 + C15253 + C15254) * C152092) *
               C152054 * C2216 -
           ((C15251 + C15250 + C15249) * C152092 +
            (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
             C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
             C6084 * C159) *
                C152188) *
               C152054 * C2215 -
           ((C6093 * C2451 + C9952 + C9952 + C6086 * C2467 + C6091 * C2452 +
             C9951 + C9951 + C6085 * C2468 + C6089 * C2453 + C9950 + C9950 +
             C6084 * C2469) *
                C152092 +
            (C15254 + C15253 + C15252) * C152188) *
               C152054 * C152217) *
              C151851 * C152240 +
          (((C6089 * C144 + C6108 + C6108 + C6084 * C160 + C6091 * C145 +
             C6109 + C6109 + C6085 * C161 + C6093 * C146 + C6110 + C6110 +
             C6086 * C162) *
                C152188 +
            (C15255 + C15256 + C15257) * C152092) *
               C152054 * C2215 -
           ((C15258 + C15259 + C15260) * C152092 +
            (C15257 + C15256 + C15255) * C152188) *
               C152054 * C2216 +
           ((C15260 + C15259 + C15258) * C152188 +
            (C6089 * C2452 + C15204 + C15204 + C6084 * C2468 + C6091 * C2451 +
             C15205 + C15205 + C6085 * C2467 + C6093 * C2818 + C15206 + C15206 +
             C6086 * C2820) *
                C152092) *
               C152054 * C152217) *
              C151851 * C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
             C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
             C6086 * C160) *
                C152188 +
            (C15243 + C15244 + C15245) * C152092) *
               C152054 * C2215 -
           ((C15246 + C15247 + C15248) * C152092 +
            (C15245 + C15244 + C15243) * C152188) *
               C152054 * C2216 +
           ((C15248 + C15247 + C15246) * C152188 +
            (C6089 * C2454 + C9441 + C9441 + C6084 * C2470 + C6091 * C2453 +
             C9440 + C9440 + C6085 * C2469 + C6093 * C2452 + C9439 + C9439 +
             C6086 * C2468) *
                C152092) *
               C152054 * C152217) *
              C152258 +
          (((C7455 + C7454 + C7453) * C152188 +
            (C8119 + C8120 + C8121) * C152092) *
               C152054 * C2216 -
           ((C7453 + C7454 + C7455) * C152092 +
            (C6436 + C6435 + C6434) * C152188) *
               C152054 * C2215 -
           ((C10174 + C10175 + C10176) * C152092 +
            (C8121 + C8120 + C8119) * C152188) *
               C152054 * C152217) *
              C152244 +
          (((C6439 + C6438 + C6437) * C152188 +
            (C8122 + C8123 + C8124) * C152092) *
               C152054 * C2215 -
           ((C8125 + C8126 + C8127) * C152092 +
            (C8124 + C8123 + C8122) * C152188) *
               C152054 * C2216 +
           ((C8127 + C8126 + C8125) * C152188 +
            (C6089 * C10149 + C10165 + C10165 + C6084 * C10155 +
             C6091 * C10150 + C10166 + C10166 + C6085 * C10156 +
             C6093 * C10151 + C10167 + C10167 + C6086 * C10157) *
                C152092) *
               C152054 * C152217) *
              C152214) *
         C151823) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152188 +
            (C31628 * C550 + C32024 + C32024 + C151791 * C574) * C152092) *
               C23040 +
           (C31851 * C152188 + C32563 * C152092) * C23041 +
           (C31852 * C152188 + C32562 * C152092) * C23042) *
              C151869 * C151851 * C129 -
          ((C32565 * C152092 + C31856 * C152188) * C23042 +
           (C32564 * C152092 + C31855 * C152188) * C23041 +
           ((C31628 * C549 + C32029 + C32029 + C151791 * C573) * C152092 +
            (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152188) *
               C23040) *
              C151869 * C151851 * C130 +
          (((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C152188 +
            (C31628 * C548 + C32040 + C32040 + C151791 * C572) * C152092) *
               C23040 +
           (C31859 * C152188 + C32569 * C152092) * C23041 +
           (C31860 * C152188 + C32568 * C152092) * C23042) *
              C151869 * C151851 * C131 -
          (((C31628 * C1535 + C32326 + C32326 + C151791 * C1559) * C152092 +
            C32189 * C152188) *
               C23042 +
           ((C31628 * C1086 + C32325 + C32325 + C151791 * C1098) * C152092 +
            C32188 * C152188) *
               C23041 +
           ((C31628 * C547 + C32324 + C32324 + C151791 * C571) * C152092 +
            (C31628 * C145 + C31646 + C31646 + C151791 * C161) * C152188) *
               C23040) *
              C151869 * C151851 * C132 +
          (((C31628 * C146 + C31647 + C31647 + C151791 * C162) * C152188 +
            (C31628 * C555 + C37454 + C37454 + C151791 * C579) * C152092) *
               C23040 +
           ((C31628 * C346 + C31648 + C31648 + C151791 * C370) * C152188 +
            (C31628 * C1087 + C37455 + C37455 + C151791 * C1099) * C152092) *
               C23041 +
           ((C31628 * C347 + C31649 + C31649 + C151791 * C371) * C152188 +
            (C31628 * C1916 + C37456 + C37456 + C151791 * C1918) * C152092) *
               C23042) *
              C151869 * C151851 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152188 +
             (C31628 * C550 + C32024 + C32024 + C151791 * C574) * C152092) *
                C23040 +
            (C37675 + C37676) * C23041 + C37693 * C23042) *
               C151869 * C152258 -
           ((C37679 + C37680) * C23042 + (C37678 + C37677) * C23041 +
            (C37676 + C37675) * C23040) *
               C151869 * C152244 +
           (C37693 * C23040 + (C37680 + C37679) * C23041 +
            (C31854 * C152188 + C32999 * C152092) * C23042) *
               C151869 * C152214) *
              C335 +
          (((C37681 + C37682) * C23040 + (C37683 + C37684) * C23041 +
            (C37685 + C37686) * C23042) *
               C151869 * C152244 -
           (C37694 * C23042 + (C37682 + C37681) * C23041 +
            ((C31628 * C549 + C32029 + C32029 + C151791 * C573) * C152092 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152188) *
                C23040) *
               C151869 * C152258 -
           ((C33342 * C152092 + C31858 * C152188) * C23042 +
            (C37686 + C37685) * C23041 + C37694 * C23040) *
               C151869 * C152214) *
              C336 +
          ((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C152188 +
             (C31628 * C548 + C32040 + C32040 + C151791 * C572) * C152092) *
                C23040 +
            (C37687 + C37688) * C23041 + C37695 * C23042) *
               C151869 * C152258 -
           ((C37691 + C37692) * C23042 + (C37690 + C37689) * C23041 +
            (C37688 + C37687) * C23040) *
               C151869 * C152244 +
           (C37695 * C23040 + (C37692 + C37691) * C23041 +
            (C31862 * C152188 +
             (C31628 * C8843 + C32542 + C32542 + C151791 * C8849) * C152092) *
                C23042) *
               C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152188 +
             C37949 * C152092) *
                C23040 +
            (C37675 + C37676) * C23041 + C37693 * C23042) *
               C151869 * C1259 -
           ((C37679 + C37680) * C23042 + (C37678 + C37677) * C23041 +
            (C37676 + C37675) * C23040) *
               C151869 * C1260 +
           (C37693 * C23040 + (C37680 + C37679) * C23041 +
            (C31854 * C152188 + C32999 * C152092) * C23042) *
               C151869 * C152214) *
              C152255 +
          (((C37681 + C37682) * C23040 + (C37683 + C37684) * C23041 +
            (C37685 + C37686) * C23042) *
               C151869 * C1260 -
           (C37694 * C23042 + (C37682 + C37681) * C23041 +
            (C37951 * C152092 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152188) *
                C23040) *
               C151869 * C1259 -
           ((C33342 * C152092 + C31858 * C152188) * C23042 +
            (C37686 + C37685) * C23041 + C37694 * C23040) *
               C151869 * C152214) *
              C152240 +
          ((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C152188 +
             C37953 * C152092) *
                C23040 +
            (C37687 + C37688) * C23041 + C37695 * C23042) *
               C151869 * C1259 -
           ((C37691 + C37692) * C23042 + (C37690 + C37689) * C23041 +
            (C37688 + C37687) * C23040) *
               C151869 * C1260 +
           (C37695 * C23040 + (C37692 + C37691) * C23041 +
            (C31862 * C152188 +
             (C31628 * C8843 + C32542 + C32542 + C151791 * C8849) * C152092) *
                C23042) *
               C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152188 +
            C37949 * C152092) *
               C23040 +
           (C37675 + C37676) * C23041 + C37693 * C23042) *
              C151869 * C1347 -
          (C39009 * C23042 + (C37678 + C37677) * C23041 +
           (C37676 + C37675) * C23040) *
              C151869 * C1348 +
          (C37693 * C23040 + (C37680 + C37679) * C23041 + C39014 * C23042) *
              C151869 * C1349 -
          ((C39012 + C39013) * C23042 + (C39011 + C39010) * C23041 +
           C39009 * C23040) *
              C151869 * C1350 +
          (C39014 * C23040 + (C39013 + C39012) * C23041 +
           (C32821 * C152188 +
            (C31628 * C33473 + C33479 + C33479 + C151791 * C33475) * C152092) *
               C23042) *
              C151869 * C1351) *
         C151823) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152188 +
             C37949 * C152092) *
                C23040 +
            (C37675 + C37676) * C23041 + C37693 * C23042) *
               C2215 -
           (C39233 * C23042 + (C38659 + C38660) * C23041 +
            (C37950 * C152092 + C37949 * C152188) * C23040) *
               C2216 +
           ((C37950 * C152188 +
             (C31628 * C2454 + C33864 + C33864 + C151791 * C2470) * C152092) *
                C23040 +
            (C39234 + C39235) * C23041 + C39242 * C23042) *
               C152217) *
              C151851 * C152255 +
          (((C37951 * C152188 + C37952 * C152092) * C23040 +
            (C38661 + C38662) * C23041 + C39730 * C23042) *
               C2216 -
           (C37694 * C23042 + (C37682 + C37681) * C23041 +
            (C37951 * C152092 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152188) *
                C23040) *
               C2215 -
           (((C31628 * C10150 + C34214 + C34214 + C151791 * C10156) * C152092 +
             C34077 * C152188) *
                C23042 +
            ((C31628 * C2956 + C34213 + C34213 + C151791 * C2964) * C152092 +
             C34078 * C152188) *
                C23041 +
            ((C31628 * C2453 + C34212 + C34212 + C151791 * C2469) * C152092 +
             C37952 * C152188) *
                C23040) *
               C152217) *
              C151851 * C152240 +
          ((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C152188 +
             C37953 * C152092) *
                C23040 +
            (C37687 + C37688) * C23041 + C37695 * C23042) *
               C2215 -
           ((C38665 + C38666) * C23042 + (C38667 + C38668) * C23041 +
            (C37956 * C152092 + C37953 * C152188) * C23040) *
               C2216 +
           ((C37956 * C152188 +
             (C31628 * C2452 + C37930 + C37930 + C151791 * C2468) * C152092) *
                C23040 +
            (C37955 * C152188 +
             (C31628 * C2957 + C37931 + C37931 + C151791 * C2965) * C152092) *
                C23041 +
            (C37954 * C152188 +
             (C31628 * C10151 + C37932 + C37932 + C151791 * C10157) * C152092) *
                C23042) *
               C152217) *
              C151851 * C152208)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152188 +
             C37949 * C152092) *
                C23040 +
            (C37675 + C37676) * C23041 + C37693 * C23042) *
               C2215 -
           (C39233 * C23042 + (C38659 + C38660) * C23041 +
            (C37950 * C152092 + C37949 * C152188) * C23040) *
               C2216 +
           ((C37950 * C152188 +
             (C31628 * C2454 + C33864 + C33864 + C151791 * C2470) * C152092) *
                C23040 +
            (C39234 + C39235) * C23041 + C39242 * C23042) *
               C152217) *
              C152258 +
          (((C38660 + C38659) * C23040 + (C38658 + C38657) * C23041 +
            C39927 * C23042) *
               C2216 -
           (C39009 * C23042 + (C37678 + C37677) * C23041 +
            (C37676 + C37675) * C23040) *
               C2215 -
           ((C39240 + C39241) * C23042 + (C39237 + C39236) * C23041 +
            (C39235 + C39234) * C23040) *
               C152217) *
              C152244 +
          ((C37693 * C23040 + (C37680 + C37679) * C23041 + C39014 * C23042) *
               C2215 -
           ((C39928 + C39929) * C23042 + (C39239 + C39238) * C23041 +
            C39233 * C23040) *
               C2216 +
           (C39242 * C23040 + (C39241 + C39240) * C23041 +
            (C33000 * C152188 +
             (C31628 * C34345 + C34355 + C34355 + C151791 * C34347) * C152092) *
                C23042) *
               C152217) *
              C152214) *
         C151823) /
            (p * q * std::sqrt(p + q));
    d2ee[365] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
              C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
              C6086 * C160) *
                 C152188 +
             (C15243 + C15244 + C15245) * C152092) *
                C152054 * C4107 -
            ((C15246 + C15247 + C15248) * C152092 +
             (C15245 + C15244 + C15243) * C152188) *
                C152054 * C151956) *
               C152172 +
           (((C7455 + C7454 + C7453) * C152188 +
             (C8119 + C8120 + C8121) * C152092) *
                C152054 * C151956 -
            ((C7453 + C7454 + C7455) * C152092 +
             (C6436 + C6435 + C6434) * C152188) *
                C152054 * C4107) *
               C151914) *
              C151828 +
          ((((C15249 + C15250 + C15251) * C152188 +
             (C15252 + C15253 + C15254) * C152092) *
                C152054 * C151956 -
            ((C15251 + C15250 + C15249) * C152092 +
             (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
              C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
              C6084 * C159) *
                 C152188) *
                C152054 * C4107) *
               C152172 +
           (((C6440 + C6441 + C6442) * C152188 +
             (C7456 + C7457 + C7458) * C152092) *
                C152054 * C4107 -
            ((C9753 + C9754 + C9755) * C152092 +
             (C7458 + C7457 + C7456) * C152188) *
                C152054 * C151956) *
               C151914) *
              C151837 +
          ((((C6089 * C144 + C6108 + C6108 + C6084 * C160 + C6091 * C145 +
              C6109 + C6109 + C6085 * C161 + C6093 * C146 + C6110 + C6110 +
              C6086 * C162) *
                 C152188 +
             (C15255 + C15256 + C15257) * C152092) *
                C152054 * C4107 -
            ((C15258 + C15259 + C15260) * C152092 +
             (C15257 + C15256 + C15255) * C152188) *
                C152054 * C151956) *
               C152172 +
           (((C7461 + C7460 + C7459) * C152188 +
             (C6089 * C1532 + C6703 + C6703 + C6084 * C1556 + C6091 * C1531 +
              C6704 + C6704 + C6085 * C1555 + C6093 * C2677 + C6705 + C6705 +
              C6086 * C2679) *
                 C152092) *
                C152054 * C151956 -
            ((C7459 + C7460 + C7461) * C152092 +
             (C6448 + C6447 + C6446) * C152188) *
                C152054 * C4107) *
               C151914) *
              C3588)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152188 +
              C37949 * C152092) *
                 C23040 +
             (C37675 + C37676) * C23041 + C37693 * C23042) *
                C4107 -
            (C39233 * C23042 + (C38659 + C38660) * C23041 +
             (C37950 * C152092 + C37949 * C152188) * C23040) *
                C151956) *
               C152172 +
           (((C38660 + C38659) * C23040 + (C38658 + C38657) * C23041 +
             C39927 * C23042) *
                C151956 -
            (C39009 * C23042 + (C37678 + C37677) * C23041 +
             (C37676 + C37675) * C23040) *
                C4107) *
               C151914) *
              C151828 +
          ((((C37951 * C152188 + C37952 * C152092) * C23040 +
             (C38661 + C38662) * C23041 + C39730 * C23042) *
                C151956 -
            (C37694 * C23042 + (C37682 + C37681) * C23041 +
             (C37951 * C152092 +
              (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152188) *
                 C23040) *
                C4107) *
               C152172 +
           (((C37681 + C37682) * C23040 + (C37683 + C37684) * C23041 +
             C39437 * C23042) *
                C4107 -
            ((C39731 + C39732) * C23042 + (C38664 + C38663) * C23041 +
             (C38662 + C38661) * C23040) *
                C151956) *
               C151914) *
              C151837 +
          (((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C152188 +
              C37953 * C152092) *
                 C23040 +
             (C37687 + C37688) * C23041 + C37695 * C23042) *
                C4107 -
            ((C38665 + C38666) * C23042 + (C38667 + C38668) * C23041 +
             (C37956 * C152092 + C37953 * C152188) * C23040) *
                C151956) *
               C152172 +
           (((C38668 + C38667) * C23040 + (C38666 + C38665) * C23041 +
             (C32567 * C152188 +
              (C31628 * C8066 + C32044 + C32044 + C151791 * C8072) * C152092) *
                 C23042) *
                C151956 -
            ((C37691 + C37692) * C23042 + (C37690 + C37689) * C23041 +
             (C37688 + C37687) * C23040) *
                C4107) *
               C151914) *
              C3588)) /
            (p * q * std::sqrt(p + q));
    d2ee[366] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
              C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
              C6086 * C160) *
                 C152188 +
             (C15243 + C15244 + C15245) * C152092) *
                C152054 * C151952 -
            ((C15246 + C15247 + C15248) * C152092 +
             (C15245 + C15244 + C15243) * C152188) *
                C152054 * C151959 +
            ((C15248 + C15247 + C15246) * C152188 +
             (C17787 + C17788 + C17789) * C152092) *
                C152054 * C4779) *
               C152172 +
           (((C7455 + C7454 + C7453) * C152188 +
             (C8119 + C8120 + C8121) * C152092) *
                C152054 * C151959 -
            ((C7453 + C7454 + C7455) * C152092 +
             (C6436 + C6435 + C6434) * C152188) *
                C152054 * C151952 -
            ((C10174 + C10175 + C10176) * C152092 +
             (C8121 + C8120 + C8119) * C152188) *
                C152054 * C4779) *
               C151914) *
              C3241 +
          ((((C15249 + C15250 + C15251) * C152188 +
             (C15252 + C15253 + C15254) * C152092) *
                C152054 * C151959 -
            ((C15251 + C15250 + C15249) * C152092 +
             (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
              C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
              C6084 * C159) *
                 C152188) *
                C152054 * C151952 -
            ((C18292 + C18293 + C18294) * C152092 +
             (C15254 + C15253 + C15252) * C152188) *
                C152054 * C4779) *
               C152172 +
           (((C6440 + C6441 + C6442) * C152188 +
             (C7456 + C7457 + C7458) * C152092) *
                C152054 * C151952 -
            ((C9753 + C9754 + C9755) * C152092 +
             (C7458 + C7457 + C7456) * C152188) *
                C152054 * C151959 +
            ((C9755 + C9754 + C9753) * C152188 +
             (C6089 * C2956 + C9953 + C9953 + C6084 * C2964 + C6091 * C2957 +
              C9954 + C9954 + C6085 * C2965 + C6093 * C2958 + C9955 + C9955 +
              C6086 * C2966) *
                 C152092) *
                C152054 * C4779) *
               C151914) *
              C151834)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152188 +
              C37949 * C152092) *
                 C23040 +
             (C37675 + C37676) * C23041 + C37693 * C23042) *
                C151952 -
            (C39233 * C23042 + (C38659 + C38660) * C23041 +
             (C37950 * C152092 + C37949 * C152188) * C23040) *
                C151959 +
            ((C37950 * C152188 + C40513 * C152092) * C23040 +
             (C39234 + C39235) * C23041 + C39242 * C23042) *
                C4779) *
               C152172 +
           (((C38660 + C38659) * C23040 + (C38658 + C38657) * C23041 +
             C39927 * C23042) *
                C151959 -
            (C39009 * C23042 + (C37678 + C37677) * C23041 +
             (C37676 + C37675) * C23040) *
                C151952 -
            ((C39240 + C39241) * C23042 + (C39237 + C39236) * C23041 +
             (C39235 + C39234) * C23040) *
                C4779) *
               C151914) *
              C3241 +
          ((((C37951 * C152188 + C37952 * C152092) * C23040 +
             (C38661 + C38662) * C23041 + C39730 * C23042) *
                C151959 -
            (C37694 * C23042 + (C37682 + C37681) * C23041 +
             (C37951 * C152092 +
              (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152188) *
                 C23040) *
                C151952 -
            ((C40819 + C40809) * C23042 + (C40820 + C40812) * C23041 +
             (C41022 * C152092 + C37952 * C152188) * C23040) *
                C4779) *
               C152172 +
           (((C37681 + C37682) * C23040 + (C37683 + C37684) * C23041 +
             C39437 * C23042) *
                C151952 -
            ((C39731 + C39732) * C23042 + (C38664 + C38663) * C23041 +
             (C38662 + C38661) * C23040) *
                C151959 +
            ((C40812 + C40820) * C23040 + (C40809 + C40819) * C23041 +
             (C34076 * C152188 +
              (C31628 * C27086 + C34215 + C34215 + C151791 * C27090) *
                  C152092) *
                 C23042) *
                C4779) *
               C151914) *
              C151834)) /
            (p * q * std::sqrt(p + q));
    d2ee[367] +=
        (-std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
              C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
              C6086 * C160) *
                 C152188 +
             (C15243 + C15244 + C15245) * C152092) *
                C152054 * C4107 -
            ((C15246 + C15247 + C15248) * C152092 +
             (C15245 + C15244 + C15243) * C152188) *
                C152054 * C151956) *
               C152258 +
           (((C7455 + C7454 + C7453) * C152188 +
             (C8119 + C8120 + C8121) * C152092) *
                C152054 * C151956 -
            ((C7453 + C7454 + C7455) * C152092 +
             (C6436 + C6435 + C6434) * C152188) *
                C152054 * C4107) *
               C152244 +
           (((C6439 + C6438 + C6437) * C152188 +
             (C8122 + C8123 + C8124) * C152092) *
                C152054 * C4107 -
            ((C8125 + C8126 + C8127) * C152092 +
             (C8124 + C8123 + C8122) * C152188) *
                C152054 * C151956) *
               C152214) *
              C3241 +
          ((((C15249 + C15250 + C15251) * C152188 +
             (C15252 + C15253 + C15254) * C152092) *
                C152054 * C151956 -
            ((C15251 + C15250 + C15249) * C152092 +
             (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
              C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
              C6084 * C159) *
                 C152188) *
                C152054 * C4107) *
               C152258 +
           (((C6440 + C6441 + C6442) * C152188 +
             (C7456 + C7457 + C7458) * C152092) *
                C152054 * C4107 -
            ((C9753 + C9754 + C9755) * C152092 +
             (C7458 + C7457 + C7456) * C152188) *
                C152054 * C151956) *
               C152244 +
           (((C8647 + C8646 + C8645) * C152188 +
             (C6089 * C1540 + C9744 + C9744 + C6084 * C1564 + C6091 * C1541 +
              C9745 + C9745 + C6085 * C1565 + C6093 * C1542 + C9746 + C9746 +
              C6086 * C1566) *
                 C152092) *
                C152054 * C151956 -
            ((C8645 + C8646 + C8647) * C152092 +
             (C6445 + C6444 + C6443) * C152188) *
                C152054 * C4107) *
               C152214) *
              C151834)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
             C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
             C6086 * C160) *
                C152188 +
            (C15243 + C15244 + C15245) * C152092) *
               C152054 * C4107 -
           ((C15246 + C15247 + C15248) * C152092 +
            (C15245 + C15244 + C15243) * C152188) *
               C152054 * C151956) *
              C151851 * C152264 +
          (((C15249 + C15250 + C15251) * C152188 +
            (C15252 + C15253 + C15254) * C152092) *
               C152054 * C151956 -
           ((C15251 + C15250 + C15249) * C152092 +
            (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
             C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
             C6084 * C159) *
                C152188) *
               C152054 * C4107) *
              C151851 * C152257 +
          (((C6089 * C144 + C6108 + C6108 + C6084 * C160 + C6091 * C145 +
             C6109 + C6109 + C6085 * C161 + C6093 * C146 + C6110 + C6110 +
             C6086 * C162) *
                C152188 +
            (C15255 + C15256 + C15257) * C152092) *
               C152054 * C4107 -
           ((C15258 + C15259 + C15260) * C152092 +
            (C15257 + C15256 + C15255) * C152188) *
               C152054 * C151956) *
              C151851 * C152242 +
          (((C15664 + C15665 + C15666) * C152188 +
            (C6089 * C554 + C15655 + C15655 + C6084 * C578 + C6091 * C556 +
             C15656 + C15656 + C6085 * C580 + C6093 * C558 + C15657 + C15657 +
             C6086 * C582) *
                C152092) *
               C152054 * C151956 -
           ((C15666 + C15665 + C15664) * C152092 +
            (C6093 * C147 + C6117 + C6117 + C6086 * C163 + C6091 * C146 +
             C6118 + C6118 + C6085 * C162 + C6089 * C145 + C6119 + C6119 +
             C6084 * C161) *
                C152188) *
               C152054 * C4107) *
              C151851 * C152218)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
             C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
             C6086 * C160) *
                C152188 +
            (C15243 + C15244 + C15245) * C152092) *
               C152054 * C152266 -
           ((C15246 + C15247 + C15248) * C152092 +
            (C15245 + C15244 + C15243) * C152188) *
               C152054 * C152263 +
           ((C15248 + C15247 + C15246) * C152188 +
            (C17787 + C17788 + C17789) * C152092) *
               C152054 * C152252 -
           ((C17790 + C17791 + C17792) * C152092 +
            (C17789 + C17788 + C17787) * C152188) *
               C152054 * C152230) *
              C151851 * C3241 +
          (((C15249 + C15250 + C15251) * C152188 +
            (C15252 + C15253 + C15254) * C152092) *
               C152054 * C152263 -
           ((C15251 + C15250 + C15249) * C152092 +
            (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
             C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
             C6084 * C159) *
                C152188) *
               C152054 * C152266 -
           ((C18292 + C18293 + C18294) * C152092 +
            (C15254 + C15253 + C15252) * C152188) *
               C152054 * C152252 +
           ((C18294 + C18293 + C18292) * C152188 +
            (C6089 * C2456 + C18283 + C18283 + C6084 * C2472 + C6091 * C2457 +
             C18284 + C18284 + C6085 * C2473 + C6093 * C2458 + C18285 + C18285 +
             C6086 * C2474) *
                C152092) *
               C152054 * C152230) *
              C151851 * C151834)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152188 +
             C37949 * C152092) *
                C23040 +
            (C37675 + C37676) * C23041 + C37693 * C23042) *
               C4107 -
           (C39233 * C23042 + (C38659 + C38660) * C23041 +
            (C37950 * C152092 + C37949 * C152188) * C23040) *
               C151956) *
              C151851 * C152264 +
          (((C37951 * C152188 + C37952 * C152092) * C23040 +
            (C38661 + C38662) * C23041 + C39730 * C23042) *
               C151956 -
           (C37694 * C23042 + (C37682 + C37681) * C23041 +
            (C37951 * C152092 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152188) *
                C23040) *
               C4107) *
              C151851 * C152257 +
          ((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C152188 +
             C37953 * C152092) *
                C23040 +
            (C37687 + C37688) * C23041 + C37695 * C23042) *
               C4107 -
           ((C38665 + C38666) * C23042 + (C38667 + C38668) * C23041 +
            (C37956 * C152092 + C37953 * C152188) * C23040) *
               C151956) *
              C151851 * C152242 +
          (((C38366 * C152188 +
             (C31628 * C554 + C38361 + C38361 + C151791 * C578) * C152092) *
                C23040 +
            (C38161 * C152188 +
             (C31628 * C1531 + C38362 + C38362 + C151791 * C1555) * C152092) *
                C23041 +
            (C38162 * C152188 +
             (C31628 * C1542 + C38363 + C38363 + C151791 * C1566) * C152092) *
                C23042) *
               C151956 -
           ((C38164 + C38154) * C23042 + (C38163 + C38151) * C23041 +
            (C38366 * C152092 +
             (C31628 * C145 + C31646 + C31646 + C151791 * C161) * C152188) *
                C23040) *
               C4107) *
              C151851 * C152218)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152188 +
              C37949 * C152092) *
                 C23040 +
             (C37675 + C37676) * C23041 + C37693 * C23042) *
                C4107 -
            (C39233 * C23042 + (C38659 + C38660) * C23041 +
             (C37950 * C152092 + C37949 * C152188) * C23040) *
                C151956) *
               C152258 +
           (((C38660 + C38659) * C23040 + (C38658 + C38657) * C23041 +
             C39927 * C23042) *
                C151956 -
            (C39009 * C23042 + (C37678 + C37677) * C23041 +
             (C37676 + C37675) * C23040) *
                C4107) *
               C152244 +
           ((C37693 * C23040 + (C37680 + C37679) * C23041 + C39014 * C23042) *
                C4107 -
            ((C39928 + C39929) * C23042 + (C39239 + C39238) * C23041 +
             C39233 * C23040) *
                C151956) *
               C152214) *
              C3241 +
          ((((C37951 * C152188 + C37952 * C152092) * C23040 +
             (C38661 + C38662) * C23041 + C39730 * C23042) *
                C151956 -
            (C37694 * C23042 + (C37682 + C37681) * C23041 +
             (C37951 * C152092 +
              (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152188) *
                 C23040) *
                C4107) *
               C152258 +
           (((C37681 + C37682) * C23040 + (C37683 + C37684) * C23041 +
             C39437 * C23042) *
                C4107 -
            ((C39731 + C39732) * C23042 + (C38664 + C38663) * C23041 +
             (C38662 + C38661) * C23040) *
                C151956) *
               C152244 +
           ((C39730 * C23040 + (C39732 + C39731) * C23041 +
             (C33342 * C152188 +
              (C31628 * C25022 + C34069 + C34069 + C151791 * C25026) *
                  C152092) *
                 C23042) *
                C151956 -
            ((C39438 + C39439) * C23042 + (C37686 + C37685) * C23041 +
             C37694 * C23040) *
                C4107) *
               C152214) *
              C151834)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(2.25) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152188 +
             C37949 * C152092) *
                C23040 +
            (C37675 + C37676) * C23041 + C37693 * C23042) *
               C152266 -
           (C39233 * C23042 + (C38659 + C38660) * C23041 +
            (C37950 * C152092 + C37949 * C152188) * C23040) *
               C152263 +
           ((C37950 * C152188 + C40513 * C152092) * C23040 +
            (C39234 + C39235) * C23041 + C39242 * C23042) *
               C152252 -
           ((C41217 + C41218) * C23042 + (C41219 + C41220) * C23041 +
            (C40516 * C152092 + C40513 * C152188) * C23040) *
               C152230) *
              C151851 * C3241 +
          (((C37951 * C152188 + C37952 * C152092) * C23040 +
            (C38661 + C38662) * C23041 + C39730 * C23042) *
               C152263 -
           (C37694 * C23042 + (C37682 + C37681) * C23041 +
            (C37951 * C152092 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152188) *
                C23040) *
               C152266 -
           ((C40819 + C40809) * C23042 + (C40820 + C40812) * C23041 +
            (C41022 * C152092 + C37952 * C152188) * C23040) *
               C152252 +
           ((C41022 * C152188 +
             (C31628 * C2456 + C41017 + C41017 + C151791 * C2472) * C152092) *
                C23040 +
            (C40818 * C152188 +
             (C31628 * C9427 + C41018 + C41018 + C151791 * C9433) * C152092) *
                C23041 +
            (C40817 * C152188 +
             (C31628 * C26362 + C41019 + C41019 + C151791 * C26366) * C152092) *
                C23042) *
               C152230) *
              C151851 * C151834)) /
            (p * q * std::sqrt(p + q));
    d2ee[368] +=
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
             C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
             C6086 * C160) *
                C152188 +
            (C15243 + C15244 + C15245) * C152092) *
               C152054 * C151952 -
           ((C15246 + C15247 + C15248) * C152092 +
            (C15245 + C15244 + C15243) * C152188) *
               C152054 * C151959 +
           ((C15248 + C15247 + C15246) * C152188 +
            (C17787 + C17788 + C17789) * C152092) *
               C152054 * C4779) *
              C151851 * C151828 +
          (((C15249 + C15250 + C15251) * C152188 +
            (C15252 + C15253 + C15254) * C152092) *
               C152054 * C151959 -
           ((C15251 + C15250 + C15249) * C152092 +
            (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
             C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
             C6084 * C159) *
                C152188) *
               C152054 * C151952 -
           ((C18292 + C18293 + C18294) * C152092 +
            (C15254 + C15253 + C15252) * C152188) *
               C152054 * C4779) *
              C151851 * C151837 +
          (((C6089 * C144 + C6108 + C6108 + C6084 * C160 + C6091 * C145 +
             C6109 + C6109 + C6085 * C161 + C6093 * C146 + C6110 + C6110 +
             C6086 * C162) *
                C152188 +
            (C15255 + C15256 + C15257) * C152092) *
               C152054 * C151952 -
           ((C15258 + C15259 + C15260) * C152092 +
            (C15257 + C15256 + C15255) * C152188) *
               C152054 * C151959 +
           ((C15260 + C15259 + C15258) * C152188 +
            (C6089 * C2452 + C15204 + C15204 + C6084 * C2468 + C6091 * C2451 +
             C15205 + C15205 + C6085 * C2467 + C6093 * C2818 + C15206 + C15206 +
             C6086 * C2820) *
                C152092) *
               C152054 * C4779) *
              C151851 * C3588)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(6.75) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152188 +
             C37949 * C152092) *
                C23040 +
            (C37675 + C37676) * C23041 + C37693 * C23042) *
               C151952 -
           (C39233 * C23042 + (C38659 + C38660) * C23041 +
            (C37950 * C152092 + C37949 * C152188) * C23040) *
               C151959 +
           ((C37950 * C152188 + C40513 * C152092) * C23040 +
            (C39234 + C39235) * C23041 + C39242 * C23042) *
               C4779) *
              C151851 * C151828 +
          (((C37951 * C152188 + C37952 * C152092) * C23040 +
            (C38661 + C38662) * C23041 + C39730 * C23042) *
               C151959 -
           (C37694 * C23042 + (C37682 + C37681) * C23041 +
            (C37951 * C152092 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152188) *
                C23040) *
               C151952 -
           ((C40819 + C40809) * C23042 + (C40820 + C40812) * C23041 +
            (C41022 * C152092 + C37952 * C152188) * C23040) *
               C4779) *
              C151851 * C151837 +
          ((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C152188 +
             C37953 * C152092) *
                C23040 +
            (C37687 + C37688) * C23041 + C37695 * C23042) *
               C151952 -
           ((C38665 + C38666) * C23042 + (C38667 + C38668) * C23041 +
            (C37956 * C152092 + C37953 * C152188) * C23040) *
               C151959 +
           ((C37956 * C152188 +
             (C31628 * C2452 + C37930 + C37930 + C151791 * C2468) * C152092) *
                C23040 +
            (C37955 * C152188 +
             (C31628 * C2957 + C37931 + C37931 + C151791 * C2965) * C152092) *
                C23041 +
            (C37954 * C152188 +
             (C31628 * C10151 + C37932 + C37932 + C151791 * C10157) * C152092) *
                C23042) *
               C4779) *
              C151851 * C3588)) /
            (p * q * std::sqrt(p + q));
    d2ee[369] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
             C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
             C6086 * C160) *
                C152188 +
            (C15243 + C15244 + C15245) * C152092) *
               C152054 * C4107 -
           ((C15246 + C15247 + C15248) * C152092 +
            (C15245 + C15244 + C15243) * C152188) *
               C152054 * C151956) *
              C151851 * C152264 +
          (((C15249 + C15250 + C15251) * C152188 +
            (C15252 + C15253 + C15254) * C152092) *
               C152054 * C151956 -
           ((C15251 + C15250 + C15249) * C152092 +
            (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
             C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
             C6084 * C159) *
                C152188) *
               C152054 * C4107) *
              C151851 * C152257 +
          (((C6089 * C144 + C6108 + C6108 + C6084 * C160 + C6091 * C145 +
             C6109 + C6109 + C6085 * C161 + C6093 * C146 + C6110 + C6110 +
             C6086 * C162) *
                C152188 +
            (C15255 + C15256 + C15257) * C152092) *
               C152054 * C4107 -
           ((C15258 + C15259 + C15260) * C152092 +
            (C15257 + C15256 + C15255) * C152188) *
               C152054 * C151956) *
              C151851 * C152242 +
          (((C15664 + C15665 + C15666) * C152188 +
            (C6089 * C554 + C15655 + C15655 + C6084 * C578 + C6091 * C556 +
             C15656 + C15656 + C6085 * C580 + C6093 * C558 + C15657 + C15657 +
             C6086 * C582) *
                C152092) *
               C152054 * C151956 -
           ((C15666 + C15665 + C15664) * C152092 +
            (C6093 * C147 + C6117 + C6117 + C6086 * C163 + C6091 * C146 +
             C6118 + C6118 + C6085 * C162 + C6089 * C145 + C6119 + C6119 +
             C6084 * C161) *
                C152188) *
               C152054 * C4107) *
              C151851 * C152218)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
              C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
              C6086 * C160) *
                 C152188 +
             (C15243 + C15244 + C15245) * C152092) *
                C152054 * C4107 -
            ((C15246 + C15247 + C15248) * C152092 +
             (C15245 + C15244 + C15243) * C152188) *
                C152054 * C151956) *
               C152258 +
           (((C7455 + C7454 + C7453) * C152188 +
             (C8119 + C8120 + C8121) * C152092) *
                C152054 * C151956 -
            ((C7453 + C7454 + C7455) * C152092 +
             (C6436 + C6435 + C6434) * C152188) *
                C152054 * C4107) *
               C152244 +
           (((C6439 + C6438 + C6437) * C152188 +
             (C8122 + C8123 + C8124) * C152092) *
                C152054 * C4107 -
            ((C8125 + C8126 + C8127) * C152092 +
             (C8124 + C8123 + C8122) * C152188) *
                C152054 * C151956) *
               C152214) *
              C3241 +
          ((((C15249 + C15250 + C15251) * C152188 +
             (C15252 + C15253 + C15254) * C152092) *
                C152054 * C151956 -
            ((C15251 + C15250 + C15249) * C152092 +
             (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
              C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
              C6084 * C159) *
                 C152188) *
                C152054 * C4107) *
               C152258 +
           (((C6440 + C6441 + C6442) * C152188 +
             (C7456 + C7457 + C7458) * C152092) *
                C152054 * C4107 -
            ((C9753 + C9754 + C9755) * C152092 +
             (C7458 + C7457 + C7456) * C152188) *
                C152054 * C151956) *
               C152244 +
           (((C8647 + C8646 + C8645) * C152188 +
             (C6089 * C1540 + C9744 + C9744 + C6084 * C1564 + C6091 * C1541 +
              C9745 + C9745 + C6085 * C1565 + C6093 * C1542 + C9746 + C9746 +
              C6086 * C1566) *
                 C152092) *
                C152054 * C151956 -
            ((C8645 + C8646 + C8647) * C152092 +
             (C6445 + C6444 + C6443) * C152188) *
                C152054 * C4107) *
               C152214) *
              C151834)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152188 +
             C37949 * C152092) *
                C23040 +
            (C37675 + C37676) * C23041 + C37693 * C23042) *
               C4107 -
           (C39233 * C23042 + (C38659 + C38660) * C23041 +
            (C37950 * C152092 + C37949 * C152188) * C23040) *
               C151956) *
              C151851 * C152264 +
          (((C37951 * C152188 + C37952 * C152092) * C23040 +
            (C38661 + C38662) * C23041 + C39730 * C23042) *
               C151956 -
           (C37694 * C23042 + (C37682 + C37681) * C23041 +
            (C37951 * C152092 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152188) *
                C23040) *
               C4107) *
              C151851 * C152257 +
          ((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C152188 +
             C37953 * C152092) *
                C23040 +
            (C37687 + C37688) * C23041 + C37695 * C23042) *
               C4107 -
           ((C38665 + C38666) * C23042 + (C38667 + C38668) * C23041 +
            (C37956 * C152092 + C37953 * C152188) * C23040) *
               C151956) *
              C151851 * C152242 +
          (((C38366 * C152188 +
             (C31628 * C554 + C38361 + C38361 + C151791 * C578) * C152092) *
                C23040 +
            (C38161 * C152188 +
             (C31628 * C1531 + C38362 + C38362 + C151791 * C1555) * C152092) *
                C23041 +
            (C38162 * C152188 +
             (C31628 * C1542 + C38363 + C38363 + C151791 * C1566) * C152092) *
                C23042) *
               C151956 -
           ((C38164 + C38154) * C23042 + (C38163 + C38151) * C23041 +
            (C38366 * C152092 +
             (C31628 * C145 + C31646 + C31646 + C151791 * C161) * C152188) *
                C23040) *
               C4107) *
              C151851 * C152218)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152188 +
              C37949 * C152092) *
                 C23040 +
             (C37675 + C37676) * C23041 + C37693 * C23042) *
                C4107 -
            (C39233 * C23042 + (C38659 + C38660) * C23041 +
             (C37950 * C152092 + C37949 * C152188) * C23040) *
                C151956) *
               C152258 +
           (((C38660 + C38659) * C23040 + (C38658 + C38657) * C23041 +
             C39927 * C23042) *
                C151956 -
            (C39009 * C23042 + (C37678 + C37677) * C23041 +
             (C37676 + C37675) * C23040) *
                C4107) *
               C152244 +
           ((C37693 * C23040 + (C37680 + C37679) * C23041 + C39014 * C23042) *
                C4107 -
            ((C39928 + C39929) * C23042 + (C39239 + C39238) * C23041 +
             C39233 * C23040) *
                C151956) *
               C152214) *
              C3241 +
          ((((C37951 * C152188 + C37952 * C152092) * C23040 +
             (C38661 + C38662) * C23041 + C39730 * C23042) *
                C151956 -
            (C37694 * C23042 + (C37682 + C37681) * C23041 +
             (C37951 * C152092 +
              (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152188) *
                 C23040) *
                C4107) *
               C152258 +
           (((C37681 + C37682) * C23040 + (C37683 + C37684) * C23041 +
             C39437 * C23042) *
                C4107 -
            ((C39731 + C39732) * C23042 + (C38664 + C38663) * C23041 +
             (C38662 + C38661) * C23040) *
                C151956) *
               C152244 +
           ((C39730 * C23040 + (C39732 + C39731) * C23041 +
             (C33342 * C152188 +
              (C31628 * C25022 + C34069 + C34069 + C151791 * C25026) *
                  C152092) *
                 C23042) *
                C151956 -
            ((C39438 + C39439) * C23042 + (C37686 + C37685) * C23041 +
             C37694 * C23040) *
                C4107) *
               C152214) *
              C151834)) /
            (p * q * std::sqrt(p + q));
    d2ee[370] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
             C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
             C6086 * C160) *
                C152188 +
            (C15243 + C15244 + C15245) * C152092) *
               C152054 * C151869 * C152172 -
           ((C7453 + C7454 + C7455) * C152092 +
            (C6436 + C6435 + C6434) * C152188) *
               C152054 * C151869 * C151914) *
              C739 +
          (((C6440 + C6441 + C6442) * C152188 +
            (C7456 + C7457 + C7458) * C152092) *
               C152054 * C151869 * C151914 -
           ((C15251 + C15250 + C15249) * C152092 +
            (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
             C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
             C6084 * C159) *
                C152188) *
               C152054 * C151869 * C152172) *
              C740 +
          (((C6089 * C144 + C6108 + C6108 + C6084 * C160 + C6091 * C145 +
             C6109 + C6109 + C6085 * C161 + C6093 * C146 + C6110 + C6110 +
             C6086 * C162) *
                C152188 +
            (C15255 + C15256 + C15257) * C152092) *
               C152054 * C151869 * C152172 -
           ((C7459 + C7460 + C7461) * C152092 +
            (C6448 + C6447 + C6446) * C152188) *
               C152054 * C151869 * C151914) *
              C741 +
          (((C6915 + C6916 + C6917) * C152188 +
            (C6089 * C1086 + C7115 + C7115 + C6084 * C1098 + C6091 * C1087 +
             C7116 + C7116 + C6085 * C1099 + C6093 * C1088 + C7117 + C7117 +
             C6086 * C1100) *
                C152092) *
               C152054 * C151869 * C151914 -
           ((C6093 * C557 + C7114 + C7114 + C6086 * C581 + C6091 * C555 +
             C7113 + C7113 + C6085 * C579 + C6089 * C547 + C7112 + C7112 +
             C6084 * C571) *
                C152092 +
            (C6093 * C147 + C6117 + C6117 + C6086 * C163 + C6091 * C146 +
             C6118 + C6118 + C6085 * C162 + C6089 * C145 + C6119 + C6119 +
             C6084 * C161) *
                C152188) *
               C152054 * C151869 * C152172) *
              C152218)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
             C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
             C6086 * C160) *
                C152188 +
            (C15243 + C15244 + C15245) * C152092) *
               C152054 * C151869 * C1709 -
           ((C7453 + C7454 + C7455) * C152092 +
            (C6436 + C6435 + C6434) * C152188) *
               C152054 * C151869 * C1710 +
           ((C6439 + C6438 + C6437) * C152188 +
            (C8122 + C8123 + C8124) * C152092) *
               C152054 * C151869 * C1711 -
           ((C8866 + C8867 + C8868) * C152092 +
            (C7843 + C7842 + C7841) * C152188) *
               C152054 * C151869 * C152224) *
              C152158 +
          (((C6440 + C6441 + C6442) * C152188 +
            (C7456 + C7457 + C7458) * C152092) *
               C152054 * C151869 * C1710 -
           ((C15251 + C15250 + C15249) * C152092 +
            (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
             C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
             C6084 * C159) *
                C152188) *
               C152054 * C151869 * C1709 -
           ((C8645 + C8646 + C8647) * C152092 +
            (C6445 + C6444 + C6443) * C152188) *
               C152054 * C151869 * C1711 +
           ((C8339 + C8338 + C8337) * C152188 +
            (C6089 * C2054 + C8636 + C8636 + C6084 * C2062 + C6091 * C2055 +
             C8637 + C8637 + C6085 * C2063 + C6093 * C2056 + C8638 + C8638 +
             C6086 * C2064) *
                C152092) *
               C152054 * C151869 * C152224) *
              C151834)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152188 +
             C37949 * C152092) *
                C23040 +
            (C37675 + C37676) * C23041 + C37693 * C23042) *
               C151869 * C152172 -
           ((C37679 + C37680) * C23042 + (C37678 + C37677) * C23041 +
            (C37676 + C37675) * C23040) *
               C151869 * C151914) *
              C739 +
          (((C37681 + C37682) * C23040 + (C37683 + C37684) * C23041 +
            (C37685 + C37686) * C23042) *
               C151869 * C151914 -
           (C37694 * C23042 + (C37682 + C37681) * C23041 +
            (C37951 * C152092 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152188) *
                C23040) *
               C151869 * C152172) *
              C740 +
          ((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C152188 +
             C37953 * C152092) *
                C23040 +
            (C37687 + C37688) * C23041 + C37695 * C23042) *
               C151869 * C152172 -
           ((C37691 + C37692) * C23042 + (C37690 + C37689) * C23041 +
            (C37688 + C37687) * C23040) *
               C151869 * C151914) *
              C741 +
          (((C38151 + C38163) * C23040 + (C38154 + C38164) * C23041 +
            (C32190 * C152188 +
             (C31628 * C2056 + C32327 + C32327 + C151791 * C2064) * C152092) *
                C23042) *
               C151869 * C151914 -
           ((C38164 + C38154) * C23042 + (C38163 + C38151) * C23041 +
            ((C31628 * C547 + C32324 + C32324 + C151791 * C571) * C152092 +
             (C31628 * C145 + C31646 + C31646 + C151791 * C161) * C152188) *
                C23040) *
               C151869 * C152172) *
              C152218)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152188 +
             C37949 * C152092) *
                C23040 +
            (C37675 + C37676) * C23041 + C37693 * C23042) *
               C151869 * C1709 -
           (C39009 * C23042 + (C37678 + C37677) * C23041 +
            (C37676 + C37675) * C23040) *
               C151869 * C1710 +
           (C37693 * C23040 + (C37680 + C37679) * C23041 + C39014 * C23042) *
               C151869 * C1711 -
           ((C39012 + C39013) * C23042 + (C39011 + C39010) * C23041 +
            C39009 * C23040) *
               C151869 * C152224) *
              C152158 +
          (((C37681 + C37682) * C23040 + (C37683 + C37684) * C23041 +
            C39437 * C23042) *
               C151869 * C1710 -
           (C37694 * C23042 + (C37682 + C37681) * C23041 +
            (C37951 * C152092 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152188) *
                C23040) *
               C151869 * C1709 -
           ((C39438 + C39439) * C23042 + (C37686 + C37685) * C23041 +
            C37694 * C23040) *
               C151869 * C1711 +
           (C39437 * C23040 + (C39439 + C39438) * C23041 +
            (C33141 * C152188 +
             (C31628 * C25784 + C33339 + C33339 + C151791 * C25788) * C152092) *
                C23042) *
               C151869 * C152224) *
              C151834)) /
            (p * q * std::sqrt(p + q));
    d2ee[371] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
              C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
              C6086 * C160) *
                 C152188 +
             (C15243 + C15244 + C15245) * C152092) *
                C152054 * C152173 -
            ((C15246 + C15247 + C15248) * C152092 +
             (C15245 + C15244 + C15243) * C152188) *
                C152054 * C151956) *
               C152172 +
           (((C7455 + C7454 + C7453) * C152188 +
             (C8119 + C8120 + C8121) * C152092) *
                C152054 * C151956 -
            ((C7453 + C7454 + C7455) * C152092 +
             (C6436 + C6435 + C6434) * C152188) *
                C152054 * C152173) *
               C151914) *
              C335 +
          ((((C15249 + C15250 + C15251) * C152188 +
             (C15252 + C15253 + C15254) * C152092) *
                C152054 * C151956 -
            ((C15251 + C15250 + C15249) * C152092 +
             (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
              C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
              C6084 * C159) *
                 C152188) *
                C152054 * C152173) *
               C152172 +
           (((C6440 + C6441 + C6442) * C152188 +
             (C7456 + C7457 + C7458) * C152092) *
                C152054 * C152173 -
            ((C9753 + C9754 + C9755) * C152092 +
             (C7458 + C7457 + C7456) * C152188) *
                C152054 * C151956) *
               C151914) *
              C336 +
          ((((C6089 * C144 + C6108 + C6108 + C6084 * C160 + C6091 * C145 +
              C6109 + C6109 + C6085 * C161 + C6093 * C146 + C6110 + C6110 +
              C6086 * C162) *
                 C152188 +
             (C15255 + C15256 + C15257) * C152092) *
                C152054 * C152173 -
            ((C15258 + C15259 + C15260) * C152092 +
             (C15257 + C15256 + C15255) * C152188) *
                C152054 * C151956) *
               C152172 +
           (((C7461 + C7460 + C7459) * C152188 +
             (C6089 * C1532 + C6703 + C6703 + C6084 * C1556 + C6091 * C1531 +
              C6704 + C6704 + C6085 * C1555 + C6093 * C2677 + C6705 + C6705 +
              C6086 * C2679) *
                 C152092) *
                C152054 * C151956 -
            ((C7459 + C7460 + C7461) * C152092 +
             (C6448 + C6447 + C6446) * C152188) *
                C152054 * C152173) *
               C151914) *
              C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
             C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
             C6086 * C160) *
                C152188 +
            (C15243 + C15244 + C15245) * C152092) *
               C152054 * C152173 -
           ((C15246 + C15247 + C15248) * C152092 +
            (C15245 + C15244 + C15243) * C152188) *
               C152054 * C151956) *
              C1709 +
          (((C7455 + C7454 + C7453) * C152188 +
            (C8119 + C8120 + C8121) * C152092) *
               C152054 * C151956 -
           ((C7453 + C7454 + C7455) * C152092 +
            (C6436 + C6435 + C6434) * C152188) *
               C152054 * C152173) *
              C1710 +
          (((C6439 + C6438 + C6437) * C152188 +
            (C8122 + C8123 + C8124) * C152092) *
               C152054 * C152173 -
           ((C8125 + C8126 + C8127) * C152092 +
            (C8124 + C8123 + C8122) * C152188) *
               C152054 * C151956) *
              C1711 +
          (((C8868 + C8867 + C8866) * C152188 +
            (C6089 * C8064 + C8098 + C8098 + C6084 * C8070 + C6091 * C8065 +
             C8099 + C8099 + C6085 * C8071 + C6093 * C8066 + C8100 + C8100 +
             C6086 * C8072) *
                C152092) *
               C152054 * C151956 -
           ((C8866 + C8867 + C8868) * C152092 +
            (C7843 + C7842 + C7841) * C152188) *
               C152054 * C152173) *
              C152224) *
         C151823) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152188 +
              C37949 * C152092) *
                 C23040 +
             (C37675 + C37676) * C23041 + C37693 * C23042) *
                C152173 -
            ((C38657 + C38658) * C23042 + (C38659 + C38660) * C23041 +
             (C37950 * C152092 + C37949 * C152188) * C23040) *
                C151956) *
               C152172 +
           (((C38660 + C38659) * C23040 + (C38658 + C38657) * C23041 +
             (C32561 * C152188 + C32998 * C152092) * C23042) *
                C151956 -
            ((C37679 + C37680) * C23042 + (C37678 + C37677) * C23041 +
             (C37676 + C37675) * C23040) *
                C152173) *
               C151914) *
              C335 +
          ((((C37951 * C152188 + C37952 * C152092) * C23040 +
             (C38661 + C38662) * C23041 + (C38663 + C38664) * C23042) *
                C151956 -
            (C37694 * C23042 + (C37682 + C37681) * C23041 +
             (C37951 * C152092 +
              (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152188) *
                 C23040) *
                C152173) *
               C152172 +
           (((C37681 + C37682) * C23040 + (C37683 + C37684) * C23041 +
             (C37685 + C37686) * C23042) *
                C152173 -
            ((C34076 * C152092 + C32566 * C152188) * C23042 +
             (C38664 + C38663) * C23041 + (C38662 + C38661) * C23040) *
                C151956) *
               C151914) *
              C336 +
          (((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C152188 +
              C37953 * C152092) *
                 C23040 +
             (C37687 + C37688) * C23041 + C37695 * C23042) *
                C152173 -
            ((C38665 + C38666) * C23042 + (C38667 + C38668) * C23041 +
             (C37956 * C152092 + C37953 * C152188) * C23040) *
                C151956) *
               C152172 +
           (((C38668 + C38667) * C23040 + (C38666 + C38665) * C23041 +
             (C32567 * C152188 +
              (C31628 * C8066 + C32044 + C32044 + C151791 * C8072) * C152092) *
                 C23042) *
                C151956 -
            ((C37691 + C37692) * C23042 + (C37690 + C37689) * C23041 +
             (C37688 + C37687) * C23040) *
                C152173) *
               C151914) *
              C152208)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152188 +
             C37949 * C152092) *
                C23040 +
            (C37675 + C37676) * C23041 + C37693 * C23042) *
               C152173 -
           (C39233 * C23042 + (C38659 + C38660) * C23041 +
            (C37950 * C152092 + C37949 * C152188) * C23040) *
               C151956) *
              C1709 +
          (((C38660 + C38659) * C23040 + (C38658 + C38657) * C23041 +
            C39927 * C23042) *
               C151956 -
           (C39009 * C23042 + (C37678 + C37677) * C23041 +
            (C37676 + C37675) * C23040) *
               C152173) *
              C1710 +
          ((C37693 * C23040 + (C37680 + C37679) * C23041 + C39014 * C23042) *
               C152173 -
           ((C39928 + C39929) * C23042 + (C39239 + C39238) * C23041 +
            C39233 * C23040) *
               C151956) *
              C1711 +
          ((C39927 * C23040 + (C39929 + C39928) * C23041 +
            (C33482 * C152188 +
             (C31628 * C32969 + C32985 + C32985 + C151791 * C32971) * C152092) *
                C23042) *
               C151956 -
           ((C39012 + C39013) * C23042 + (C39011 + C39010) * C23041 +
            C39009 * C23040) *
               C152173) *
              C152224) *
         C151823) /
            (p * q * std::sqrt(p + q));
    d2ee[372] +=
        (-std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
             C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
             C6086 * C160) *
                C152188 +
            (C6089 * C550 + C6675 + C6675 + C6084 * C574 + C6091 * C549 +
             C6674 + C6674 + C6085 * C573 + C6093 * C548 + C6673 + C6673 +
             C6086 * C572) *
                C152092) *
               C152054 * C151869 * C152258 -
           ((C7453 + C7454 + C7455) * C152092 +
            (C6436 + C6435 + C6434) * C152188) *
               C152054 * C151869 * C152244 +
           ((C6439 + C6438 + C6437) * C152188 +
            (C8122 + C8123 + C8124) * C152092) *
               C152054 * C151869 * C152214) *
              C335 +
          (((C6440 + C6441 + C6442) * C152188 +
            (C7456 + C7457 + C7458) * C152092) *
               C152054 * C151869 * C152244 -
           ((C6093 * C547 + C6684 + C6684 + C6086 * C571 + C6091 * C548 +
             C6683 + C6683 + C6085 * C572 + C6089 * C549 + C6682 + C6682 +
             C6084 * C573) *
                C152092 +
            (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
             C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
             C6084 * C159) *
                C152188) *
               C152054 * C151869 * C152258 -
           ((C8645 + C8646 + C8647) * C152092 +
            (C6445 + C6444 + C6443) * C152188) *
               C152054 * C151869 * C152214) *
              C336 +
          (((C6089 * C144 + C6108 + C6108 + C6084 * C160 + C6091 * C145 +
             C6109 + C6109 + C6085 * C161 + C6093 * C146 + C6110 + C6110 +
             C6086 * C162) *
                C152188 +
            (C6089 * C548 + C6699 + C6699 + C6084 * C572 + C6091 * C547 +
             C6698 + C6698 + C6085 * C571 + C6093 * C555 + C6697 + C6697 +
             C6086 * C579) *
                C152092) *
               C152054 * C151869 * C152258 -
           ((C7459 + C7460 + C7461) * C152092 +
            (C6448 + C6447 + C6446) * C152188) *
               C152054 * C151869 * C152244 +
           ((C6451 + C6450 + C6449) * C152188 +
            (C6089 * C1536 + C7432 + C7432 + C6084 * C1560 + C6091 * C1535 +
             C7433 + C7433 + C6085 * C1559 + C6093 * C1916 + C7434 + C7434 +
             C6086 * C1918) *
                C152092) *
               C152054 * C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 + C6097 +
            C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
            C6086 * C160) *
               C152188 +
           (C6089 * C550 + C6675 + C6675 + C6084 * C574 + C6091 * C549 + C6674 +
            C6674 + C6085 * C573 + C6093 * C548 + C6673 + C6673 +
            C6086 * C572) *
               C152092) *
              C152054 * C151869 * C151851 * C129 -
          ((C6093 * C547 + C6684 + C6684 + C6086 * C571 + C6091 * C548 + C6683 +
            C6683 + C6085 * C572 + C6089 * C549 + C6682 + C6682 +
            C6084 * C573) *
               C152092 +
           (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 + C6106 +
            C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
            C6084 * C159) *
               C152188) *
              C152054 * C151869 * C151851 * C130 +
          ((C6089 * C144 + C6108 + C6108 + C6084 * C160 + C6091 * C145 + C6109 +
            C6109 + C6085 * C161 + C6093 * C146 + C6110 + C6110 +
            C6086 * C162) *
               C152188 +
           (C6089 * C548 + C6699 + C6699 + C6084 * C572 + C6091 * C547 + C6698 +
            C6698 + C6085 * C571 + C6093 * C555 + C6697 + C6697 +
            C6086 * C579) *
               C152092) *
              C152054 * C151869 * C151851 * C131 -
          ((C6093 * C557 + C7114 + C7114 + C6086 * C581 + C6091 * C555 + C7113 +
            C7113 + C6085 * C579 + C6089 * C547 + C7112 + C7112 +
            C6084 * C571) *
               C152092 +
           (C6093 * C147 + C6117 + C6117 + C6086 * C163 + C6091 * C146 + C6118 +
            C6118 + C6085 * C162 + C6089 * C145 + C6119 + C6119 +
            C6084 * C161) *
               C152188) *
              C152054 * C151869 * C151851 * C132 +
          ((C6089 * C146 + C6120 + C6120 + C6084 * C162 + C6091 * C147 + C6121 +
            C6121 + C6085 * C163 + C6093 * C148 + C6122 + C6122 +
            C6086 * C164) *
               C152188 +
           (C6089 * C555 + C14729 + C14729 + C6084 * C579 + C6091 * C557 +
            C14730 + C14730 + C6085 * C581 + C6093 * C882 + C14731 + C14731 +
            C6086 * C884) *
               C152092) *
              C152054 * C151869 * C151851 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
             C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
             C6086 * C160) *
                C152188 +
            (C15243 + C15244 + C15245) * C152092) *
               C152054 * C152259 -
           ((C15246 + C15247 + C15248) * C152092 +
            (C15245 + C15244 + C15243) * C152188) *
               C152054 * C152246 +
           ((C15248 + C15247 + C15246) * C152188 +
            (C6089 * C2454 + C9441 + C9441 + C6084 * C2470 + C6091 * C2453 +
             C9440 + C9440 + C6085 * C2469 + C6093 * C2452 + C9439 + C9439 +
             C6086 * C2468) *
                C152092) *
               C152054 * C152217) *
              C151851 * C335 +
          (((C15249 + C15250 + C15251) * C152188 +
            (C15252 + C15253 + C15254) * C152092) *
               C152054 * C152246 -
           ((C15251 + C15250 + C15249) * C152092 +
            (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
             C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
             C6084 * C159) *
                C152188) *
               C152054 * C152259 -
           ((C6093 * C2451 + C9952 + C9952 + C6086 * C2467 + C6091 * C2452 +
             C9951 + C9951 + C6085 * C2468 + C6089 * C2453 + C9950 + C9950 +
             C6084 * C2469) *
                C152092 +
            (C15254 + C15253 + C15252) * C152188) *
               C152054 * C152217) *
              C151851 * C336 +
          (((C6089 * C144 + C6108 + C6108 + C6084 * C160 + C6091 * C145 +
             C6109 + C6109 + C6085 * C161 + C6093 * C146 + C6110 + C6110 +
             C6086 * C162) *
                C152188 +
            (C15255 + C15256 + C15257) * C152092) *
               C152054 * C152259 -
           ((C15258 + C15259 + C15260) * C152092 +
            (C15257 + C15256 + C15255) * C152188) *
               C152054 * C152246 +
           ((C15260 + C15259 + C15258) * C152188 +
            (C6089 * C2452 + C15204 + C15204 + C6084 * C2468 + C6091 * C2451 +
             C15205 + C15205 + C6085 * C2467 + C6093 * C2818 + C15206 + C15206 +
             C6086 * C2820) *
                C152092) *
               C152054 * C152217) *
              C151851 * C152208)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
             C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
             C6086 * C160) *
                C152188 +
            (C15243 + C15244 + C15245) * C152092) *
               C152054 * C151869 * C1259 -
           ((C7453 + C7454 + C7455) * C152092 +
            (C6436 + C6435 + C6434) * C152188) *
               C152054 * C151869 * C1260 +
           ((C6439 + C6438 + C6437) * C152188 +
            (C8122 + C8123 + C8124) * C152092) *
               C152054 * C151869 * C152214) *
              C152255 +
          (((C6440 + C6441 + C6442) * C152188 +
            (C7456 + C7457 + C7458) * C152092) *
               C152054 * C151869 * C1260 -
           ((C15251 + C15250 + C15249) * C152092 +
            (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
             C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
             C6084 * C159) *
                C152188) *
               C152054 * C151869 * C1259 -
           ((C8645 + C8646 + C8647) * C152092 +
            (C6445 + C6444 + C6443) * C152188) *
               C152054 * C151869 * C152214) *
              C152240 +
          (((C6089 * C144 + C6108 + C6108 + C6084 * C160 + C6091 * C145 +
             C6109 + C6109 + C6085 * C161 + C6093 * C146 + C6110 + C6110 +
             C6086 * C162) *
                C152188 +
            (C15255 + C15256 + C15257) * C152092) *
               C152054 * C151869 * C1259 -
           ((C7459 + C7460 + C7461) * C152092 +
            (C6448 + C6447 + C6446) * C152188) *
               C152054 * C151869 * C1260 +
           ((C6451 + C6450 + C6449) * C152188 +
            (C6089 * C1536 + C7432 + C7432 + C6084 * C1560 + C6091 * C1535 +
             C7433 + C7433 + C6085 * C1559 + C6093 * C1916 + C7434 + C7434 +
             C6086 * C1918) *
                C152092) *
               C152054 * C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 + C6097 +
            C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
            C6086 * C160) *
               C152188 +
           (C15243 + C15244 + C15245) * C152092) *
              C152054 * C151869 * C1347 -
          ((C7453 + C7454 + C7455) * C152092 +
           (C6436 + C6435 + C6434) * C152188) *
              C152054 * C151869 * C1348 +
          ((C6439 + C6438 + C6437) * C152188 +
           (C8122 + C8123 + C8124) * C152092) *
              C152054 * C151869 * C1349 -
          ((C8866 + C8867 + C8868) * C152092 +
           (C7843 + C7842 + C7841) * C152188) *
              C152054 * C151869 * C1350 +
          ((C7846 + C7845 + C7844) * C152188 +
           (C6089 * C8841 + C8857 + C8857 + C6084 * C8847 + C6091 * C8842 +
            C8858 + C8858 + C6085 * C8848 + C6093 * C8843 + C8859 + C8859 +
            C6086 * C8849) *
               C152092) *
              C152054 * C151869 * C1351) *
         C151823) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
             C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
             C6086 * C160) *
                C152188 +
            (C15243 + C15244 + C15245) * C152092) *
               C152054 * C152259 -
           ((C15246 + C15247 + C15248) * C152092 +
            (C15245 + C15244 + C15243) * C152188) *
               C152054 * C152246 +
           ((C15248 + C15247 + C15246) * C152188 +
            (C6089 * C2454 + C9441 + C9441 + C6084 * C2470 + C6091 * C2453 +
             C9440 + C9440 + C6085 * C2469 + C6093 * C2452 + C9439 + C9439 +
             C6086 * C2468) *
                C152092) *
               C152054 * C152217) *
              C1259 +
          (((C7455 + C7454 + C7453) * C152188 +
            (C8119 + C8120 + C8121) * C152092) *
               C152054 * C152246 -
           ((C7453 + C7454 + C7455) * C152092 +
            (C6436 + C6435 + C6434) * C152188) *
               C152054 * C152259 -
           ((C10174 + C10175 + C10176) * C152092 +
            (C8121 + C8120 + C8119) * C152188) *
               C152054 * C152217) *
              C1260 +
          (((C6439 + C6438 + C6437) * C152188 +
            (C8122 + C8123 + C8124) * C152092) *
               C152054 * C152259 -
           ((C8125 + C8126 + C8127) * C152092 +
            (C8124 + C8123 + C8122) * C152188) *
               C152054 * C152246 +
           ((C8127 + C8126 + C8125) * C152188 +
            (C6089 * C10149 + C10165 + C10165 + C6084 * C10155 +
             C6091 * C10150 + C10166 + C10166 + C6085 * C10156 +
             C6093 * C10151 + C10167 + C10167 + C6086 * C10157) *
                C152092) *
               C152054 * C152217) *
              C152214) *
         C151823) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152188 +
            (C31628 * C550 + C32024 + C32024 + C151791 * C574) * C152092) *
               C23040 +
           (C31851 * C152188 + C32563 * C152092) * C23041 +
           (C31852 * C152188 + C32562 * C152092) * C23042) *
              C151869 * C151851 * C129 -
          ((C32565 * C152092 + C31856 * C152188) * C23042 +
           (C32564 * C152092 + C31855 * C152188) * C23041 +
           ((C31628 * C549 + C32029 + C32029 + C151791 * C573) * C152092 +
            (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152188) *
               C23040) *
              C151869 * C151851 * C130 +
          (((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C152188 +
            (C31628 * C548 + C32040 + C32040 + C151791 * C572) * C152092) *
               C23040 +
           (C31859 * C152188 + C32569 * C152092) * C23041 +
           (C31860 * C152188 + C32568 * C152092) * C23042) *
              C151869 * C151851 * C131 -
          (((C31628 * C1535 + C32326 + C32326 + C151791 * C1559) * C152092 +
            C32189 * C152188) *
               C23042 +
           ((C31628 * C1086 + C32325 + C32325 + C151791 * C1098) * C152092 +
            C32188 * C152188) *
               C23041 +
           ((C31628 * C547 + C32324 + C32324 + C151791 * C571) * C152092 +
            (C31628 * C145 + C31646 + C31646 + C151791 * C161) * C152188) *
               C23040) *
              C151869 * C151851 * C132 +
          (((C31628 * C146 + C31647 + C31647 + C151791 * C162) * C152188 +
            (C31628 * C555 + C37454 + C37454 + C151791 * C579) * C152092) *
               C23040 +
           ((C31628 * C346 + C31648 + C31648 + C151791 * C370) * C152188 +
            (C31628 * C1087 + C37455 + C37455 + C151791 * C1099) * C152092) *
               C23041 +
           ((C31628 * C347 + C31649 + C31649 + C151791 * C371) * C152188 +
            (C31628 * C1916 + C37456 + C37456 + C151791 * C1918) * C152092) *
               C23042) *
              C151869 * C151851 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152188 +
             (C31628 * C550 + C32024 + C32024 + C151791 * C574) * C152092) *
                C23040 +
            (C37675 + C37676) * C23041 + C37693 * C23042) *
               C151869 * C152258 -
           ((C37679 + C37680) * C23042 + (C37678 + C37677) * C23041 +
            (C37676 + C37675) * C23040) *
               C151869 * C152244 +
           (C37693 * C23040 + (C37680 + C37679) * C23041 +
            (C31854 * C152188 + C32999 * C152092) * C23042) *
               C151869 * C152214) *
              C335 +
          (((C37681 + C37682) * C23040 + (C37683 + C37684) * C23041 +
            (C37685 + C37686) * C23042) *
               C151869 * C152244 -
           (C37694 * C23042 + (C37682 + C37681) * C23041 +
            ((C31628 * C549 + C32029 + C32029 + C151791 * C573) * C152092 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152188) *
                C23040) *
               C151869 * C152258 -
           ((C33342 * C152092 + C31858 * C152188) * C23042 +
            (C37686 + C37685) * C23041 + C37694 * C23040) *
               C151869 * C152214) *
              C336 +
          ((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C152188 +
             (C31628 * C548 + C32040 + C32040 + C151791 * C572) * C152092) *
                C23040 +
            (C37687 + C37688) * C23041 + C37695 * C23042) *
               C151869 * C152258 -
           ((C37691 + C37692) * C23042 + (C37690 + C37689) * C23041 +
            (C37688 + C37687) * C23040) *
               C151869 * C152244 +
           (C37695 * C23040 + (C37692 + C37691) * C23041 +
            (C31862 * C152188 +
             (C31628 * C8843 + C32542 + C32542 + C151791 * C8849) * C152092) *
                C23042) *
               C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152188 +
             C37949 * C152092) *
                C23040 +
            (C37675 + C37676) * C23041 + C37693 * C23042) *
               C152259 -
           ((C32997 * C152092 + C32562 * C152188) * C23042 +
            (C32996 * C152092 + C32563 * C152188) * C23041 +
            (C37950 * C152092 + C37949 * C152188) * C23040) *
               C152246 +
           ((C37950 * C152188 +
             (C31628 * C2454 + C33864 + C33864 + C151791 * C2470) * C152092) *
                C23040 +
            (C32996 * C152188 + C34364 * C152092) * C23041 +
            (C32997 * C152188 + C34363 * C152092) * C23042) *
               C152217) *
              C151851 * C335 +
          (((C37951 * C152188 + C37952 * C152092) * C23040 +
            (C32564 * C152188 + C34078 * C152092) * C23041 +
            (C32565 * C152188 + C34077 * C152092) * C23042) *
               C152246 -
           (C37694 * C23042 + (C37682 + C37681) * C23041 +
            (C37951 * C152092 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152188) *
                C23040) *
               C152259 -
           (((C31628 * C10150 + C34214 + C34214 + C151791 * C10156) * C152092 +
             C34077 * C152188) *
                C23042 +
            ((C31628 * C2956 + C34213 + C34213 + C151791 * C2964) * C152092 +
             C34078 * C152188) *
                C23041 +
            ((C31628 * C2453 + C34212 + C34212 + C151791 * C2469) * C152092 +
             C37952 * C152188) *
                C23040) *
               C152217) *
              C151851 * C336 +
          ((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C152188 +
             C37953 * C152092) *
                C23040 +
            (C37687 + C37688) * C23041 + C37695 * C23042) *
               C152259 -
           ((C37954 * C152092 + C32568 * C152188) * C23042 +
            (C37955 * C152092 + C32569 * C152188) * C23041 +
            (C37956 * C152092 + C37953 * C152188) * C23040) *
               C152246 +
           ((C37956 * C152188 +
             (C31628 * C2452 + C37930 + C37930 + C151791 * C2468) * C152092) *
                C23040 +
            (C37955 * C152188 +
             (C31628 * C2957 + C37931 + C37931 + C151791 * C2965) * C152092) *
                C23041 +
            (C37954 * C152188 +
             (C31628 * C10151 + C37932 + C37932 + C151791 * C10157) * C152092) *
                C23042) *
               C152217) *
              C151851 * C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152188 +
             C37949 * C152092) *
                C23040 +
            (C37675 + C37676) * C23041 + C37693 * C23042) *
               C151869 * C1259 -
           ((C37679 + C37680) * C23042 + (C37678 + C37677) * C23041 +
            (C37676 + C37675) * C23040) *
               C151869 * C1260 +
           (C37693 * C23040 + (C37680 + C37679) * C23041 +
            (C31854 * C152188 + C32999 * C152092) * C23042) *
               C151869 * C152214) *
              C152255 +
          (((C37681 + C37682) * C23040 + (C37683 + C37684) * C23041 +
            (C37685 + C37686) * C23042) *
               C151869 * C1260 -
           (C37694 * C23042 + (C37682 + C37681) * C23041 +
            (C37951 * C152092 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152188) *
                C23040) *
               C151869 * C1259 -
           ((C33342 * C152092 + C31858 * C152188) * C23042 +
            (C37686 + C37685) * C23041 + C37694 * C23040) *
               C151869 * C152214) *
              C152240 +
          ((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C152188 +
             C37953 * C152092) *
                C23040 +
            (C37687 + C37688) * C23041 + C37695 * C23042) *
               C151869 * C1259 -
           ((C37691 + C37692) * C23042 + (C37690 + C37689) * C23041 +
            (C37688 + C37687) * C23040) *
               C151869 * C1260 +
           (C37695 * C23040 + (C37692 + C37691) * C23041 +
            (C31862 * C152188 +
             (C31628 * C8843 + C32542 + C32542 + C151791 * C8849) * C152092) *
                C23042) *
               C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.140625) * 2 * std::pow(Pi, 2.5) *
         ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152188 +
            C37949 * C152092) *
               C23040 +
           (C37675 + C37676) * C23041 + C37693 * C23042) *
              C151869 * C1347 -
          (C39009 * C23042 + (C37678 + C37677) * C23041 +
           (C37676 + C37675) * C23040) *
              C151869 * C1348 +
          (C37693 * C23040 + (C37680 + C37679) * C23041 + C39014 * C23042) *
              C151869 * C1349 -
          ((C39012 + C39013) * C23042 + (C39011 + C39010) * C23041 +
           C39009 * C23040) *
              C151869 * C1350 +
          (C39014 * C23040 + (C39013 + C39012) * C23041 +
           (C32821 * C152188 +
            (C31628 * C33473 + C33479 + C33479 + C151791 * C33475) * C152092) *
               C23042) *
              C151869 * C1351) *
         C151823) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.5625) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152188 +
             C37949 * C152092) *
                C23040 +
            (C37675 + C37676) * C23041 + C37693 * C23042) *
               C152259 -
           (C39233 * C23042 + (C38659 + C38660) * C23041 +
            (C37950 * C152092 + C37949 * C152188) * C23040) *
               C152246 +
           ((C37950 * C152188 +
             (C31628 * C2454 + C33864 + C33864 + C151791 * C2470) * C152092) *
                C23040 +
            (C39234 + C39235) * C23041 + C39242 * C23042) *
               C152217) *
              C1259 +
          (((C38660 + C38659) * C23040 + (C38658 + C38657) * C23041 +
            (C39238 + C39239) * C23042) *
               C152246 -
           (C39009 * C23042 + (C37678 + C37677) * C23041 +
            (C37676 + C37675) * C23040) *
               C152259 -
           ((C39240 + C39241) * C23042 + (C39237 + C39236) * C23041 +
            (C39235 + C39234) * C23040) *
               C152217) *
              C1260 +
          ((C37693 * C23040 + (C37680 + C37679) * C23041 + C39014 * C23042) *
               C152259 -
           ((C33000 * C152092 + C32999 * C152188) * C23042 +
            (C39239 + C39238) * C23041 + C39233 * C23040) *
               C152246 +
           (C39242 * C23040 + (C39241 + C39240) * C23041 +
            (C33000 * C152188 +
             (C31628 * C34345 + C34355 + C34355 + C151791 * C34347) * C152092) *
                C23042) *
               C152217) *
              C152214) *
         C151823) /
            (p * q * std::sqrt(p + q));
    d2ee[373] +=
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
             C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
             C6086 * C160) *
                C152188 +
            (C15243 + C15244 + C15245) * C152092) *
               C152054 * C152173 -
           ((C15246 + C15247 + C15248) * C152092 +
            (C15245 + C15244 + C15243) * C152188) *
               C152054 * C151956) *
              C151851 * C739 +
          (((C15249 + C15250 + C15251) * C152188 +
            (C15252 + C15253 + C15254) * C152092) *
               C152054 * C151956 -
           ((C15251 + C15250 + C15249) * C152092 +
            (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
             C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
             C6084 * C159) *
                C152188) *
               C152054 * C152173) *
              C151851 * C740 +
          (((C6089 * C144 + C6108 + C6108 + C6084 * C160 + C6091 * C145 +
             C6109 + C6109 + C6085 * C161 + C6093 * C146 + C6110 + C6110 +
             C6086 * C162) *
                C152188 +
            (C15255 + C15256 + C15257) * C152092) *
               C152054 * C152173 -
           ((C15258 + C15259 + C15260) * C152092 +
            (C15257 + C15256 + C15255) * C152188) *
               C152054 * C151956) *
              C151851 * C741 +
          (((C15664 + C15665 + C15666) * C152188 +
            (C6089 * C554 + C15655 + C15655 + C6084 * C578 + C6091 * C556 +
             C15656 + C15656 + C6085 * C580 + C6093 * C558 + C15657 + C15657 +
             C6086 * C582) *
                C152092) *
               C152054 * C151956 -
           ((C15666 + C15665 + C15664) * C152092 +
            (C6093 * C147 + C6117 + C6117 + C6086 * C163 + C6091 * C146 +
             C6118 + C6118 + C6085 * C162 + C6089 * C145 + C6119 + C6119 +
             C6084 * C161) *
                C152188) *
               C152054 * C152173) *
              C151851 * C152218)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
              C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
              C6086 * C160) *
                 C152188 +
             (C15243 + C15244 + C15245) * C152092) *
                C152054 * C152173 -
            ((C15246 + C15247 + C15248) * C152092 +
             (C15245 + C15244 + C15243) * C152188) *
                C152054 * C151956) *
               C1259 +
           (((C7455 + C7454 + C7453) * C152188 +
             (C8119 + C8120 + C8121) * C152092) *
                C152054 * C151956 -
            ((C7453 + C7454 + C7455) * C152092 +
             (C6436 + C6435 + C6434) * C152188) *
                C152054 * C152173) *
               C1260 +
           (((C6439 + C6438 + C6437) * C152188 +
             (C8122 + C8123 + C8124) * C152092) *
                C152054 * C152173 -
            ((C8125 + C8126 + C8127) * C152092 +
             (C8124 + C8123 + C8122) * C152188) *
                C152054 * C151956) *
               C152214) *
              C152158 +
          ((((C15249 + C15250 + C15251) * C152188 +
             (C15252 + C15253 + C15254) * C152092) *
                C152054 * C151956 -
            ((C15251 + C15250 + C15249) * C152092 +
             (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
              C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
              C6084 * C159) *
                 C152188) *
                C152054 * C152173) *
               C1259 +
           (((C6440 + C6441 + C6442) * C152188 +
             (C7456 + C7457 + C7458) * C152092) *
                C152054 * C152173 -
            ((C9753 + C9754 + C9755) * C152092 +
             (C7458 + C7457 + C7456) * C152188) *
                C152054 * C151956) *
               C1260 +
           (((C8647 + C8646 + C8645) * C152188 +
             (C6089 * C1540 + C9744 + C9744 + C6084 * C1564 + C6091 * C1541 +
              C9745 + C9745 + C6085 * C1565 + C6093 * C1542 + C9746 + C9746 +
              C6086 * C1566) *
                 C152092) *
                C152054 * C151956 -
            ((C8645 + C8646 + C8647) * C152092 +
             (C6445 + C6444 + C6443) * C152188) *
                C152054 * C152173) *
               C152214) *
              C151834)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152188 +
             C37949 * C152092) *
                C23040 +
            (C37675 + C37676) * C23041 + C37693 * C23042) *
               C152173 -
           ((C32997 * C152092 + C32562 * C152188) * C23042 +
            (C32996 * C152092 + C32563 * C152188) * C23041 +
            (C37950 * C152092 + C37949 * C152188) * C23040) *
               C151956) *
              C151851 * C739 +
          (((C37951 * C152188 + C37952 * C152092) * C23040 +
            (C32564 * C152188 + C34078 * C152092) * C23041 +
            (C32565 * C152188 + C34077 * C152092) * C23042) *
               C151956 -
           (C37694 * C23042 + (C37682 + C37681) * C23041 +
            (C37951 * C152092 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152188) *
                C23040) *
               C152173) *
              C151851 * C740 +
          ((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C152188 +
             C37953 * C152092) *
                C23040 +
            (C37687 + C37688) * C23041 + C37695 * C23042) *
               C152173 -
           ((C37954 * C152092 + C32568 * C152188) * C23042 +
            (C37955 * C152092 + C32569 * C152188) * C23041 +
            (C37956 * C152092 + C37953 * C152188) * C23040) *
               C151956) *
              C151851 * C741 +
          (((C38366 * C152188 +
             (C31628 * C554 + C38361 + C38361 + C151791 * C578) * C152092) *
                C23040 +
            (C38161 * C152188 +
             (C31628 * C1531 + C38362 + C38362 + C151791 * C1555) * C152092) *
                C23041 +
            (C38162 * C152188 +
             (C31628 * C1542 + C38363 + C38363 + C151791 * C1566) * C152092) *
                C23042) *
               C151956 -
           ((C38164 + C38154) * C23042 + (C38163 + C38151) * C23041 +
            (C38366 * C152092 +
             (C31628 * C145 + C31646 + C31646 + C151791 * C161) * C152188) *
                C23040) *
               C152173) *
              C151851 * C152218)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(1.6875) * 2 * std::pow(Pi, 2.5) *
         ((((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152188 +
              C37949 * C152092) *
                 C23040 +
             (C37675 + C37676) * C23041 + C37693 * C23042) *
                C152173 -
            (C39233 * C23042 + (C38659 + C38660) * C23041 +
             (C37950 * C152092 + C37949 * C152188) * C23040) *
                C151956) *
               C1259 +
           (((C38660 + C38659) * C23040 + (C38658 + C38657) * C23041 +
             (C39238 + C39239) * C23042) *
                C151956 -
            (C39009 * C23042 + (C37678 + C37677) * C23041 +
             (C37676 + C37675) * C23040) *
                C152173) *
               C1260 +
           ((C37693 * C23040 + (C37680 + C37679) * C23041 + C39014 * C23042) *
                C152173 -
            ((C33000 * C152092 + C32999 * C152188) * C23042 +
             (C39239 + C39238) * C23041 + C39233 * C23040) *
                C151956) *
               C152214) *
              C152158 +
          ((((C37951 * C152188 + C37952 * C152092) * C23040 +
             (C38661 + C38662) * C23041 + C39730 * C23042) *
                C151956 -
            (C37694 * C23042 + (C37682 + C37681) * C23041 +
             (C37951 * C152092 +
              (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152188) *
                 C23040) *
                C152173) *
               C1259 +
           (((C37681 + C37682) * C23040 + (C37683 + C37684) * C23041 +
             C39437 * C23042) *
                C152173 -
            ((C39731 + C39732) * C23042 + (C38664 + C38663) * C23041 +
             (C38662 + C38661) * C23040) *
                C151956) *
               C1260 +
           ((C39730 * C23040 + (C39732 + C39731) * C23041 +
             (C33342 * C152188 +
              (C31628 * C25022 + C34069 + C34069 + C151791 * C25026) *
                  C152092) *
                 C23042) *
                C151956 -
            ((C39438 + C39439) * C23042 + (C37686 + C37685) * C23041 +
             C37694 * C23040) *
                C152173) *
               C152214) *
              C151834)) /
            (p * q * std::sqrt(p + q));
    d2ee[374] +=
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 + C6097 +
            C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
            C6086 * C160) *
               C152188 +
           (C6089 * C550 + C6675 + C6675 + C6084 * C574 + C6091 * C549 + C6674 +
            C6674 + C6085 * C573 + C6093 * C548 + C6673 + C6673 +
            C6086 * C572) *
               C152092) *
              C152054 * C151869 * C151851 * C129 -
          ((C6093 * C547 + C6684 + C6684 + C6086 * C571 + C6091 * C548 + C6683 +
            C6683 + C6085 * C572 + C6089 * C549 + C6682 + C6682 +
            C6084 * C573) *
               C152092 +
           (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 + C6106 +
            C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
            C6084 * C159) *
               C152188) *
              C152054 * C151869 * C151851 * C130 +
          ((C6089 * C144 + C6108 + C6108 + C6084 * C160 + C6091 * C145 + C6109 +
            C6109 + C6085 * C161 + C6093 * C146 + C6110 + C6110 +
            C6086 * C162) *
               C152188 +
           (C6089 * C548 + C6699 + C6699 + C6084 * C572 + C6091 * C547 + C6698 +
            C6698 + C6085 * C571 + C6093 * C555 + C6697 + C6697 +
            C6086 * C579) *
               C152092) *
              C152054 * C151869 * C151851 * C131 -
          ((C6093 * C557 + C7114 + C7114 + C6086 * C581 + C6091 * C555 + C7113 +
            C7113 + C6085 * C579 + C6089 * C547 + C7112 + C7112 +
            C6084 * C571) *
               C152092 +
           (C6093 * C147 + C6117 + C6117 + C6086 * C163 + C6091 * C146 + C6118 +
            C6118 + C6085 * C162 + C6089 * C145 + C6119 + C6119 +
            C6084 * C161) *
               C152188) *
              C152054 * C151869 * C151851 * C132 +
          ((C6089 * C146 + C6120 + C6120 + C6084 * C162 + C6091 * C147 + C6121 +
            C6121 + C6085 * C163 + C6093 * C148 + C6122 + C6122 +
            C6086 * C164) *
               C152188 +
           (C6089 * C555 + C14729 + C14729 + C6084 * C579 + C6091 * C557 +
            C14730 + C14730 + C6085 * C581 + C6093 * C882 + C14731 + C14731 +
            C6086 * C884) *
               C152092) *
              C152054 * C151869 * C151851 * C133)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
             C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
             C6086 * C160) *
                C152188 +
            (C6089 * C550 + C6675 + C6675 + C6084 * C574 + C6091 * C549 +
             C6674 + C6674 + C6085 * C573 + C6093 * C548 + C6673 + C6673 +
             C6086 * C572) *
                C152092) *
               C152054 * C151869 * C152258 -
           ((C7453 + C7454 + C7455) * C152092 +
            (C6436 + C6435 + C6434) * C152188) *
               C152054 * C151869 * C152244 +
           ((C6439 + C6438 + C6437) * C152188 +
            (C8122 + C8123 + C8124) * C152092) *
               C152054 * C151869 * C152214) *
              C335 +
          (((C6440 + C6441 + C6442) * C152188 +
            (C7456 + C7457 + C7458) * C152092) *
               C152054 * C151869 * C152244 -
           ((C6093 * C547 + C6684 + C6684 + C6086 * C571 + C6091 * C548 +
             C6683 + C6683 + C6085 * C572 + C6089 * C549 + C6682 + C6682 +
             C6084 * C573) *
                C152092 +
            (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
             C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
             C6084 * C159) *
                C152188) *
               C152054 * C151869 * C152258 -
           ((C8645 + C8646 + C8647) * C152092 +
            (C6445 + C6444 + C6443) * C152188) *
               C152054 * C151869 * C152214) *
              C336 +
          (((C6089 * C144 + C6108 + C6108 + C6084 * C160 + C6091 * C145 +
             C6109 + C6109 + C6085 * C161 + C6093 * C146 + C6110 + C6110 +
             C6086 * C162) *
                C152188 +
            (C6089 * C548 + C6699 + C6699 + C6084 * C572 + C6091 * C547 +
             C6698 + C6698 + C6085 * C571 + C6093 * C555 + C6697 + C6697 +
             C6086 * C579) *
                C152092) *
               C152054 * C151869 * C152258 -
           ((C7459 + C7460 + C7461) * C152092 +
            (C6448 + C6447 + C6446) * C152188) *
               C152054 * C151869 * C152244 +
           ((C6451 + C6450 + C6449) * C152188 +
            (C6089 * C1536 + C7432 + C7432 + C6084 * C1560 + C6091 * C1535 +
             C7433 + C7433 + C6085 * C1559 + C6093 * C1916 + C7434 + C7434 +
             C6086 * C1918) *
                C152092) *
               C152054 * C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 +
             C6097 + C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
             C6086 * C160) *
                C152188 +
            (C15243 + C15244 + C15245) * C152092) *
               C152054 * C151869 * C1259 -
           ((C7453 + C7454 + C7455) * C152092 +
            (C6436 + C6435 + C6434) * C152188) *
               C152054 * C151869 * C1260 +
           ((C6439 + C6438 + C6437) * C152188 +
            (C8122 + C8123 + C8124) * C152092) *
               C152054 * C151869 * C152214) *
              C152255 +
          (((C6440 + C6441 + C6442) * C152188 +
            (C7456 + C7457 + C7458) * C152092) *
               C152054 * C151869 * C1260 -
           ((C15251 + C15250 + C15249) * C152092 +
            (C6093 * C145 + C6105 + C6105 + C6086 * C161 + C6091 * C144 +
             C6106 + C6106 + C6085 * C160 + C6089 * C143 + C6107 + C6107 +
             C6084 * C159) *
                C152188) *
               C152054 * C151869 * C1259 -
           ((C8645 + C8646 + C8647) * C152092 +
            (C6445 + C6444 + C6443) * C152188) *
               C152054 * C151869 * C152214) *
              C152240 +
          (((C6089 * C144 + C6108 + C6108 + C6084 * C160 + C6091 * C145 +
             C6109 + C6109 + C6085 * C161 + C6093 * C146 + C6110 + C6110 +
             C6086 * C162) *
                C152188 +
            (C15255 + C15256 + C15257) * C152092) *
               C152054 * C151869 * C1259 -
           ((C7459 + C7460 + C7461) * C152092 +
            (C6448 + C6447 + C6446) * C152188) *
               C152054 * C151869 * C1260 +
           ((C6451 + C6450 + C6449) * C152188 +
            (C6089 * C1536 + C7432 + C7432 + C6084 * C1560 + C6091 * C1535 +
             C7433 + C7433 + C6085 * C1559 + C6093 * C1916 + C7434 + C7434 +
             C6086 * C1918) *
                C152092) *
               C152054 * C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((C6089 * C142 + C6096 + C6096 + C6084 * C158 + C6091 * C143 + C6097 +
            C6097 + C6085 * C159 + C6093 * C144 + C6098 + C6098 +
            C6086 * C160) *
               C152188 +
           (C15243 + C15244 + C15245) * C152092) *
              C152054 * C151869 * C1347 -
          ((C7453 + C7454 + C7455) * C152092 +
           (C6436 + C6435 + C6434) * C152188) *
              C152054 * C151869 * C1348 +
          ((C6439 + C6438 + C6437) * C152188 +
           (C8122 + C8123 + C8124) * C152092) *
              C152054 * C151869 * C1349 -
          ((C8866 + C8867 + C8868) * C152092 +
           (C7843 + C7842 + C7841) * C152188) *
              C152054 * C151869 * C1350 +
          ((C7846 + C7845 + C7844) * C152188 +
           (C6089 * C8841 + C8857 + C8857 + C6084 * C8847 + C6091 * C8842 +
            C8858 + C8858 + C6085 * C8848 + C6093 * C8843 + C8859 + C8859 +
            C6086 * C8849) *
               C152092) *
              C152054 * C151869 * C1351) *
         C151823) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152188 +
            (C31628 * C550 + C32024 + C32024 + C151791 * C574) * C152092) *
               C23040 +
           (C31851 * C152188 + C32563 * C152092) * C23041 +
           (C31852 * C152188 + C32562 * C152092) * C23042) *
              C151869 * C151851 * C129 -
          ((C32565 * C152092 + C31856 * C152188) * C23042 +
           (C32564 * C152092 + C31855 * C152188) * C23041 +
           ((C31628 * C549 + C32029 + C32029 + C151791 * C573) * C152092 +
            (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152188) *
               C23040) *
              C151869 * C151851 * C130 +
          (((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C152188 +
            (C31628 * C548 + C32040 + C32040 + C151791 * C572) * C152092) *
               C23040 +
           (C31859 * C152188 + C32569 * C152092) * C23041 +
           (C31860 * C152188 + C32568 * C152092) * C23042) *
              C151869 * C151851 * C131 -
          (((C31628 * C1535 + C32326 + C32326 + C151791 * C1559) * C152092 +
            C32189 * C152188) *
               C23042 +
           ((C31628 * C1086 + C32325 + C32325 + C151791 * C1098) * C152092 +
            C32188 * C152188) *
               C23041 +
           ((C31628 * C547 + C32324 + C32324 + C151791 * C571) * C152092 +
            (C31628 * C145 + C31646 + C31646 + C151791 * C161) * C152188) *
               C23040) *
              C151869 * C151851 * C132 +
          (((C31628 * C146 + C31647 + C31647 + C151791 * C162) * C152188 +
            (C31628 * C555 + C37454 + C37454 + C151791 * C579) * C152092) *
               C23040 +
           ((C31628 * C346 + C31648 + C31648 + C151791 * C370) * C152188 +
            (C31628 * C1087 + C37455 + C37455 + C151791 * C1099) * C152092) *
               C23041 +
           ((C31628 * C347 + C31649 + C31649 + C151791 * C371) * C152188 +
            (C31628 * C1916 + C37456 + C37456 + C151791 * C1918) * C152092) *
               C23042) *
              C151869 * C151851 * C133)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152188 +
             (C31628 * C550 + C32024 + C32024 + C151791 * C574) * C152092) *
                C23040 +
            (C37675 + C37676) * C23041 + C37693 * C23042) *
               C151869 * C152258 -
           ((C37679 + C37680) * C23042 + (C37678 + C37677) * C23041 +
            (C37676 + C37675) * C23040) *
               C151869 * C152244 +
           (C37693 * C23040 + (C37680 + C37679) * C23041 +
            (C31854 * C152188 + C32999 * C152092) * C23042) *
               C151869 * C152214) *
              C335 +
          (((C37681 + C37682) * C23040 + (C37683 + C37684) * C23041 +
            (C37685 + C37686) * C23042) *
               C151869 * C152244 -
           (C37694 * C23042 + (C37682 + C37681) * C23041 +
            ((C31628 * C549 + C32029 + C32029 + C151791 * C573) * C152092 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152188) *
                C23040) *
               C151869 * C152258 -
           ((C33342 * C152092 + C31858 * C152188) * C23042 +
            (C37686 + C37685) * C23041 + C37694 * C23040) *
               C151869 * C152214) *
              C336 +
          ((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C152188 +
             (C31628 * C548 + C32040 + C32040 + C151791 * C572) * C152092) *
                C23040 +
            (C37687 + C37688) * C23041 + C37695 * C23042) *
               C151869 * C152258 -
           ((C37691 + C37692) * C23042 + (C37690 + C37689) * C23041 +
            (C37688 + C37687) * C23040) *
               C151869 * C152244 +
           (C37695 * C23040 + (C37692 + C37691) * C23041 +
            (C31862 * C152188 +
             (C31628 * C8843 + C32542 + C32542 + C151791 * C8849) * C152092) *
                C23042) *
               C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) +
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         (((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152188 +
             C37949 * C152092) *
                C23040 +
            (C37675 + C37676) * C23041 + C37693 * C23042) *
               C151869 * C1259 -
           ((C37679 + C37680) * C23042 + (C37678 + C37677) * C23041 +
            (C37676 + C37675) * C23040) *
               C151869 * C1260 +
           (C37693 * C23040 + (C37680 + C37679) * C23041 +
            (C31854 * C152188 + C32999 * C152092) * C23042) *
               C151869 * C152214) *
              C152255 +
          (((C37681 + C37682) * C23040 + (C37683 + C37684) * C23041 +
            (C37685 + C37686) * C23042) *
               C151869 * C1260 -
           (C37694 * C23042 + (C37682 + C37681) * C23041 +
            (C37951 * C152092 +
             (C31628 * C143 + C31638 + C31638 + C151791 * C159) * C152188) *
                C23040) *
               C151869 * C1259 -
           ((C33342 * C152092 + C31858 * C152188) * C23042 +
            (C37686 + C37685) * C23041 + C37694 * C23040) *
               C151869 * C152214) *
              C152240 +
          ((((C31628 * C144 + C31639 + C31639 + C151791 * C160) * C152188 +
             C37953 * C152092) *
                C23040 +
            (C37687 + C37688) * C23041 + C37695 * C23042) *
               C151869 * C1259 -
           ((C37691 + C37692) * C23042 + (C37690 + C37689) * C23041 +
            (C37688 + C37687) * C23040) *
               C151869 * C1260 +
           (C37695 * C23040 + (C37692 + C37691) * C23041 +
            (C31862 * C152188 +
             (C31628 * C8843 + C32542 + C32542 + C151791 * C8849) * C152092) *
                C23042) *
               C151869 * C152214) *
              C152208)) /
            (p * q * std::sqrt(p + q)) -
        (std::sqrt(0.421875) * 2 * std::pow(Pi, 2.5) *
         ((((C31628 * C142 + C31631 + C31631 + C151791 * C158) * C152188 +
            C37949 * C152092) *
               C23040 +
           (C37675 + C37676) * C23041 + C37693 * C23042) *
              C151869 * C1347 -
          (C39009 * C23042 + (C37678 + C37677) * C23041 +
           (C37676 + C37675) * C23040) *
              C151869 * C1348 +
          (C37693 * C23040 + (C37680 + C37679) * C23041 + C39014 * C23042) *
              C151869 * C1349 -
          ((C39012 + C39013) * C23042 + (C39011 + C39010) * C23041 +
           C39009 * C23040) *
              C151869 * C1350 +
          (C39014 * C23040 + (C39013 + C39012) * C23041 +
           (C32821 * C152188 +
            (C31628 * C33473 + C33479 + C33479 + C151791 * C33475) * C152092) *
               C23042) *
              C151869 * C1351) *
         C151823) /
            (p * q * std::sqrt(p + q));
}
